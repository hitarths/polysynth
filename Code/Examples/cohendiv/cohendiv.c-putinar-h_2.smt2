(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_10_218 () Real)
(declare-fun l_0_10_197 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_221 () Real)
(declare-fun l_0_10_206 () Real)
(declare-fun l_0_10_220 () Real)
(declare-fun l_0_10_205 () Real)
(declare-fun l_0_10_219 () Real)
(declare-fun l_0_10_204 () Real)
(declare-fun l_0_10_203 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_199 () Real)
(declare-fun l_0_10_198 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_10_207 () Real)
(declare-fun l_0_10_169 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_200 () Real)
(declare-fun l_0_10_212 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_193 () Real)
(declare-fun l_0_10_178 () Real)
(declare-fun l_0_10_192 () Real)
(declare-fun l_0_10_177 () Real)
(declare-fun l_0_10_191 () Real)
(declare-fun l_0_10_176 () Real)
(declare-fun l_0_10_190 () Real)
(declare-fun l_0_10_175 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_166 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_167 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_168 () Real)
(declare-fun l_0_10_201 () Real)
(declare-fun l_0_10_170 () Real)
(declare-fun l_0_10_202 () Real)
(declare-fun l_0_10_172 () Real)
(declare-fun l_0_10_209 () Real)
(declare-fun l_0_10_208 () Real)
(declare-fun l_0_10_179 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_214 () Real)
(declare-fun l_0_10_213 () Real)
(declare-fun l_0_10_184 () Real)
(declare-fun l_0_10_171 () Real)
(declare-fun l_0_10_173 () Real)
(declare-fun l_0_10_180 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_185 () Real)
(declare-fun l_0_10_174 () Real)
(declare-fun l_0_10_181 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_186 () Real)
(declare-fun l_0_10_182 () Real)
(declare-fun l_0_10_187 () Real)
(declare-fun l_0_10_183 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_188 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_194 () Real)
(declare-fun l_0_10_189 () Real)
(declare-fun l_0_10_195 () Real)
(declare-fun l_0_10_196 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_210 () Real)
(declare-fun l_0_10_211 () Real)
(declare-fun l_0_10_216 () Real)
(declare-fun l_0_10_215 () Real)
(declare-fun l_0_10_222 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_217 () Real)
(declare-fun l_0_10_223 () Real)
(declare-fun l_0_10_224 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_240 () Real)
(declare-fun l_0_11_225 () Real)
(declare-fun l_0_11_212 () Real)
(declare-fun l_0_11_197 () Real)
(declare-fun l_0_11_246 () Real)
(declare-fun l_0_11_218 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_249 () Real)
(declare-fun l_0_11_234 () Real)
(declare-fun l_0_11_248 () Real)
(declare-fun l_0_11_233 () Real)
(declare-fun l_0_11_247 () Real)
(declare-fun l_0_11_232 () Real)
(declare-fun l_0_11_231 () Real)
(declare-fun l_0_11_221 () Real)
(declare-fun l_0_11_206 () Real)
(declare-fun l_0_11_220 () Real)
(declare-fun l_0_11_205 () Real)
(declare-fun l_0_11_219 () Real)
(declare-fun l_0_11_204 () Real)
(declare-fun l_0_11_203 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_227 () Real)
(declare-fun l_0_11_226 () Real)
(declare-fun l_0_11_199 () Real)
(declare-fun l_0_11_198 () Real)
(declare-fun l_0_11_235 () Real)
(declare-fun l_0_11_207 () Real)
(declare-fun l_0_11_169 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_228 () Real)
(declare-fun l_0_11_200 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_193 () Real)
(declare-fun l_0_11_178 () Real)
(declare-fun l_0_11_192 () Real)
(declare-fun l_0_11_177 () Real)
(declare-fun l_0_11_191 () Real)
(declare-fun l_0_11_176 () Real)
(declare-fun l_0_11_190 () Real)
(declare-fun l_0_11_175 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_166 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_167 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_168 () Real)
(declare-fun l_0_11_229 () Real)
(declare-fun l_0_11_201 () Real)
(declare-fun l_0_11_170 () Real)
(declare-fun l_0_11_230 () Real)
(declare-fun l_0_11_202 () Real)
(declare-fun l_0_11_172 () Real)
(declare-fun l_0_11_237 () Real)
(declare-fun l_0_11_236 () Real)
(declare-fun l_0_11_209 () Real)
(declare-fun l_0_11_208 () Real)
(declare-fun l_0_11_179 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_242 () Real)
(declare-fun l_0_11_241 () Real)
(declare-fun l_0_11_214 () Real)
(declare-fun l_0_11_213 () Real)
(declare-fun l_0_11_184 () Real)
(declare-fun l_0_11_171 () Real)
(declare-fun l_0_11_173 () Real)
(declare-fun l_0_11_180 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_185 () Real)
(declare-fun l_0_11_174 () Real)
(declare-fun l_0_11_181 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_186 () Real)
(declare-fun l_0_11_182 () Real)
(declare-fun l_0_11_187 () Real)
(declare-fun l_0_11_183 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_188 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_194 () Real)
(declare-fun l_0_11_189 () Real)
(declare-fun l_0_11_195 () Real)
(declare-fun l_0_11_196 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_238 () Real)
(declare-fun l_0_11_210 () Real)
(declare-fun l_0_11_239 () Real)
(declare-fun l_0_11_211 () Real)
(declare-fun l_0_11_244 () Real)
(declare-fun l_0_11_243 () Real)
(declare-fun l_0_11_216 () Real)
(declare-fun l_0_11_215 () Real)
(declare-fun l_0_11_250 () Real)
(declare-fun l_0_11_222 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_245 () Real)
(declare-fun l_0_11_217 () Real)
(declare-fun l_0_11_251 () Real)
(declare-fun l_0_11_223 () Real)
(declare-fun l_0_11_252 () Real)
(declare-fun l_0_11_224 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_263 () Real)
(declare-fun l_0_12_253 () Real)
(declare-fun l_0_12_235 () Real)
(declare-fun l_0_12_225 () Real)
(declare-fun l_0_12_207 () Real)
(declare-fun l_0_12_197 () Real)
(declare-fun l_0_12_169 () Real)
(declare-fun l_0_12_141 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_256 () Real)
(declare-fun l_0_12_228 () Real)
(declare-fun l_0_12_200 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_277 () Real)
(declare-fun l_0_12_262 () Real)
(declare-fun l_0_12_276 () Real)
(declare-fun l_0_12_261 () Real)
(declare-fun l_0_12_275 () Real)
(declare-fun l_0_12_260 () Real)
(declare-fun l_0_12_274 () Real)
(declare-fun l_0_12_259 () Real)
(declare-fun l_0_12_249 () Real)
(declare-fun l_0_12_234 () Real)
(declare-fun l_0_12_248 () Real)
(declare-fun l_0_12_233 () Real)
(declare-fun l_0_12_247 () Real)
(declare-fun l_0_12_232 () Real)
(declare-fun l_0_12_246 () Real)
(declare-fun l_0_12_231 () Real)
(declare-fun l_0_12_221 () Real)
(declare-fun l_0_12_206 () Real)
(declare-fun l_0_12_220 () Real)
(declare-fun l_0_12_205 () Real)
(declare-fun l_0_12_219 () Real)
(declare-fun l_0_12_204 () Real)
(declare-fun l_0_12_218 () Real)
(declare-fun l_0_12_203 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_142 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_193 () Real)
(declare-fun l_0_12_178 () Real)
(declare-fun l_0_12_192 () Real)
(declare-fun l_0_12_177 () Real)
(declare-fun l_0_12_191 () Real)
(declare-fun l_0_12_176 () Real)
(declare-fun l_0_12_190 () Real)
(declare-fun l_0_12_175 () Real)
(declare-fun l_0_12_144 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_147 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_165 () Real)
(declare-fun l_0_12_150 () Real)
(declare-fun l_0_12_164 () Real)
(declare-fun l_0_12_149 () Real)
(declare-fun l_0_12_163 () Real)
(declare-fun l_0_12_148 () Real)
(declare-fun l_0_12_162 () Real)
(declare-fun l_0_12_151 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_156 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_143 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_145 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_152 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_157 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_146 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_153 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_158 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_154 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_159 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_155 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_160 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_166 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_161 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_167 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_168 () Real)
(declare-fun l_0_12_257 () Real)
(declare-fun l_0_12_255 () Real)
(declare-fun l_0_12_254 () Real)
(declare-fun l_0_12_229 () Real)
(declare-fun l_0_12_227 () Real)
(declare-fun l_0_12_226 () Real)
(declare-fun l_0_12_201 () Real)
(declare-fun l_0_12_199 () Real)
(declare-fun l_0_12_198 () Real)
(declare-fun l_0_12_170 () Real)
(declare-fun l_0_12_258 () Real)
(declare-fun l_0_12_230 () Real)
(declare-fun l_0_12_202 () Real)
(declare-fun l_0_12_172 () Real)
(declare-fun l_0_12_265 () Real)
(declare-fun l_0_12_264 () Real)
(declare-fun l_0_12_237 () Real)
(declare-fun l_0_12_236 () Real)
(declare-fun l_0_12_209 () Real)
(declare-fun l_0_12_208 () Real)
(declare-fun l_0_12_179 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_270 () Real)
(declare-fun l_0_12_269 () Real)
(declare-fun l_0_12_268 () Real)
(declare-fun l_0_12_242 () Real)
(declare-fun l_0_12_241 () Real)
(declare-fun l_0_12_240 () Real)
(declare-fun l_0_12_214 () Real)
(declare-fun l_0_12_213 () Real)
(declare-fun l_0_12_212 () Real)
(declare-fun l_0_12_184 () Real)
(declare-fun l_0_12_171 () Real)
(declare-fun l_0_12_173 () Real)
(declare-fun l_0_12_180 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_185 () Real)
(declare-fun l_0_12_174 () Real)
(declare-fun l_0_12_181 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_186 () Real)
(declare-fun l_0_12_182 () Real)
(declare-fun l_0_12_187 () Real)
(declare-fun l_0_12_183 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_188 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_194 () Real)
(declare-fun l_0_12_189 () Real)
(declare-fun l_0_12_195 () Real)
(declare-fun l_0_12_196 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_266 () Real)
(declare-fun l_0_12_238 () Real)
(declare-fun l_0_12_210 () Real)
(declare-fun l_0_12_267 () Real)
(declare-fun l_0_12_239 () Real)
(declare-fun l_0_12_211 () Real)
(declare-fun l_0_12_272 () Real)
(declare-fun l_0_12_271 () Real)
(declare-fun l_0_12_244 () Real)
(declare-fun l_0_12_243 () Real)
(declare-fun l_0_12_216 () Real)
(declare-fun l_0_12_215 () Real)
(declare-fun l_0_12_278 () Real)
(declare-fun l_0_12_250 () Real)
(declare-fun l_0_12_222 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_273 () Real)
(declare-fun l_0_12_245 () Real)
(declare-fun l_0_12_217 () Real)
(declare-fun l_0_12_279 () Real)
(declare-fun l_0_12_251 () Real)
(declare-fun l_0_12_223 () Real)
(declare-fun l_0_12_280 () Real)
(declare-fun l_0_12_252 () Real)
(declare-fun l_0_12_224 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_221 () Real)
(declare-fun l_0_13_206 () Real)
(declare-fun l_0_13_220 () Real)
(declare-fun l_0_13_205 () Real)
(declare-fun l_0_13_219 () Real)
(declare-fun l_0_13_204 () Real)
(declare-fun l_0_13_218 () Real)
(declare-fun l_0_13_203 () Real)
(declare-fun l_0_13_141 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_197 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_13_200 () Real)
(declare-fun l_0_13_169 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_142 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_193 () Real)
(declare-fun l_0_13_178 () Real)
(declare-fun l_0_13_192 () Real)
(declare-fun l_0_13_177 () Real)
(declare-fun l_0_13_191 () Real)
(declare-fun l_0_13_176 () Real)
(declare-fun l_0_13_190 () Real)
(declare-fun l_0_13_175 () Real)
(declare-fun l_0_13_144 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_147 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_165 () Real)
(declare-fun l_0_13_150 () Real)
(declare-fun l_0_13_164 () Real)
(declare-fun l_0_13_149 () Real)
(declare-fun l_0_13_163 () Real)
(declare-fun l_0_13_148 () Real)
(declare-fun l_0_13_162 () Real)
(declare-fun l_0_13_151 () Real)
(declare-fun l_0_13_137 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_136 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_156 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_143 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_145 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_152 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_157 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_146 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_153 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_158 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_154 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_159 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_155 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_160 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_166 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_161 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_167 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_168 () Real)
(declare-fun l_0_13_201 () Real)
(declare-fun l_0_13_199 () Real)
(declare-fun l_0_13_198 () Real)
(declare-fun l_0_13_170 () Real)
(declare-fun l_0_13_202 () Real)
(declare-fun l_0_13_172 () Real)
(declare-fun l_0_13_209 () Real)
(declare-fun l_0_13_208 () Real)
(declare-fun l_0_13_207 () Real)
(declare-fun l_0_13_179 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_214 () Real)
(declare-fun l_0_13_213 () Real)
(declare-fun l_0_13_212 () Real)
(declare-fun l_0_13_184 () Real)
(declare-fun l_0_13_171 () Real)
(declare-fun l_0_13_173 () Real)
(declare-fun l_0_13_180 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_185 () Real)
(declare-fun l_0_13_174 () Real)
(declare-fun l_0_13_181 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_186 () Real)
(declare-fun l_0_13_182 () Real)
(declare-fun l_0_13_187 () Real)
(declare-fun l_0_13_183 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_188 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_194 () Real)
(declare-fun l_0_13_189 () Real)
(declare-fun l_0_13_195 () Real)
(declare-fun l_0_13_196 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_210 () Real)
(declare-fun l_0_13_211 () Real)
(declare-fun l_0_13_216 () Real)
(declare-fun l_0_13_215 () Real)
(declare-fun l_0_13_222 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_138 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_139 () Real)
(declare-fun l_0_13_140 () Real)
(declare-fun l_0_13_217 () Real)
(declare-fun l_0_13_223 () Real)
(declare-fun l_0_13_224 () Real)
(declare-fun l_0_14_225 () Real)
(declare-fun l_0_14_197 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_228 () Real)
(declare-fun l_0_14_200 () Real)
(declare-fun l_0_14_169 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_249 () Real)
(declare-fun l_0_14_234 () Real)
(declare-fun l_0_14_248 () Real)
(declare-fun l_0_14_233 () Real)
(declare-fun l_0_14_247 () Real)
(declare-fun l_0_14_232 () Real)
(declare-fun l_0_14_246 () Real)
(declare-fun l_0_14_231 () Real)
(declare-fun l_0_14_221 () Real)
(declare-fun l_0_14_206 () Real)
(declare-fun l_0_14_220 () Real)
(declare-fun l_0_14_205 () Real)
(declare-fun l_0_14_219 () Real)
(declare-fun l_0_14_204 () Real)
(declare-fun l_0_14_218 () Real)
(declare-fun l_0_14_203 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_193 () Real)
(declare-fun l_0_14_178 () Real)
(declare-fun l_0_14_192 () Real)
(declare-fun l_0_14_177 () Real)
(declare-fun l_0_14_191 () Real)
(declare-fun l_0_14_176 () Real)
(declare-fun l_0_14_190 () Real)
(declare-fun l_0_14_175 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_165 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_164 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_163 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_162 () Real)
(declare-fun l_0_14_151 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_156 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_152 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_157 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_153 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_158 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_154 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_159 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_155 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_160 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_166 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_161 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_167 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_168 () Real)
(declare-fun l_0_14_229 () Real)
(declare-fun l_0_14_227 () Real)
(declare-fun l_0_14_226 () Real)
(declare-fun l_0_14_201 () Real)
(declare-fun l_0_14_199 () Real)
(declare-fun l_0_14_198 () Real)
(declare-fun l_0_14_170 () Real)
(declare-fun l_0_14_230 () Real)
(declare-fun l_0_14_202 () Real)
(declare-fun l_0_14_172 () Real)
(declare-fun l_0_14_237 () Real)
(declare-fun l_0_14_236 () Real)
(declare-fun l_0_14_235 () Real)
(declare-fun l_0_14_209 () Real)
(declare-fun l_0_14_208 () Real)
(declare-fun l_0_14_207 () Real)
(declare-fun l_0_14_179 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_242 () Real)
(declare-fun l_0_14_241 () Real)
(declare-fun l_0_14_240 () Real)
(declare-fun l_0_14_214 () Real)
(declare-fun l_0_14_213 () Real)
(declare-fun l_0_14_212 () Real)
(declare-fun l_0_14_184 () Real)
(declare-fun l_0_14_171 () Real)
(declare-fun l_0_14_173 () Real)
(declare-fun l_0_14_180 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_185 () Real)
(declare-fun l_0_14_174 () Real)
(declare-fun l_0_14_181 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_186 () Real)
(declare-fun l_0_14_182 () Real)
(declare-fun l_0_14_187 () Real)
(declare-fun l_0_14_183 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_188 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_194 () Real)
(declare-fun l_0_14_189 () Real)
(declare-fun l_0_14_195 () Real)
(declare-fun l_0_14_196 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_238 () Real)
(declare-fun l_0_14_210 () Real)
(declare-fun l_0_14_239 () Real)
(declare-fun l_0_14_211 () Real)
(declare-fun l_0_14_244 () Real)
(declare-fun l_0_14_243 () Real)
(declare-fun l_0_14_216 () Real)
(declare-fun l_0_14_215 () Real)
(declare-fun l_0_14_250 () Real)
(declare-fun l_0_14_222 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_14_245 () Real)
(declare-fun l_0_14_217 () Real)
(declare-fun l_0_14_251 () Real)
(declare-fun l_0_14_223 () Real)
(declare-fun l_0_14_252 () Real)
(declare-fun l_0_14_224 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_275 () Real)
(declare-fun l_0_15_255 () Real)
(declare-fun l_0_15_274 () Real)
(declare-fun l_0_15_254 () Real)
(declare-fun l_0_15_247 () Real)
(declare-fun l_0_15_227 () Real)
(declare-fun l_0_15_246 () Real)
(declare-fun l_0_15_226 () Real)
(declare-fun l_0_15_219 () Real)
(declare-fun l_0_15_199 () Real)
(declare-fun l_0_15_218 () Real)
(declare-fun l_0_15_198 () Real)
(declare-fun l_0_15_263 () Real)
(declare-fun l_0_15_253 () Real)
(declare-fun l_0_15_235 () Real)
(declare-fun l_0_15_225 () Real)
(declare-fun l_0_15_207 () Real)
(declare-fun l_0_15_197 () Real)
(declare-fun l_0_15_169 () Real)
(declare-fun l_0_15_141 () Real)
(declare-fun l_0_15_113 () Real)
(declare-fun l_0_15_268 () Real)
(declare-fun l_0_15_240 () Real)
(declare-fun l_0_15_212 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_277 () Real)
(declare-fun l_0_15_262 () Real)
(declare-fun l_0_15_276 () Real)
(declare-fun l_0_15_261 () Real)
(declare-fun l_0_15_260 () Real)
(declare-fun l_0_15_259 () Real)
(declare-fun l_0_15_249 () Real)
(declare-fun l_0_15_234 () Real)
(declare-fun l_0_15_248 () Real)
(declare-fun l_0_15_233 () Real)
(declare-fun l_0_15_232 () Real)
(declare-fun l_0_15_231 () Real)
(declare-fun l_0_15_221 () Real)
(declare-fun l_0_15_206 () Real)
(declare-fun l_0_15_220 () Real)
(declare-fun l_0_15_205 () Real)
(declare-fun l_0_15_204 () Real)
(declare-fun l_0_15_203 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_142 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_193 () Real)
(declare-fun l_0_15_178 () Real)
(declare-fun l_0_15_192 () Real)
(declare-fun l_0_15_177 () Real)
(declare-fun l_0_15_191 () Real)
(declare-fun l_0_15_176 () Real)
(declare-fun l_0_15_190 () Real)
(declare-fun l_0_15_175 () Real)
(declare-fun l_0_15_144 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_147 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_165 () Real)
(declare-fun l_0_15_150 () Real)
(declare-fun l_0_15_164 () Real)
(declare-fun l_0_15_149 () Real)
(declare-fun l_0_15_163 () Real)
(declare-fun l_0_15_148 () Real)
(declare-fun l_0_15_162 () Real)
(declare-fun l_0_15_151 () Real)
(declare-fun l_0_15_137 () Real)
(declare-fun l_0_15_122 () Real)
(declare-fun l_0_15_136 () Real)
(declare-fun l_0_15_121 () Real)
(declare-fun l_0_15_135 () Real)
(declare-fun l_0_15_120 () Real)
(declare-fun l_0_15_134 () Real)
(declare-fun l_0_15_119 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_109 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_108 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_107 () Real)
(declare-fun l_0_15_106 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_156 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_143 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_145 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_152 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_157 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_146 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_153 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_158 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_154 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_159 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_155 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_160 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_166 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_161 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_167 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_168 () Real)
(declare-fun l_0_15_256 () Real)
(declare-fun l_0_15_228 () Real)
(declare-fun l_0_15_200 () Real)
(declare-fun l_0_15_257 () Real)
(declare-fun l_0_15_229 () Real)
(declare-fun l_0_15_201 () Real)
(declare-fun l_0_15_170 () Real)
(declare-fun l_0_15_258 () Real)
(declare-fun l_0_15_230 () Real)
(declare-fun l_0_15_202 () Real)
(declare-fun l_0_15_172 () Real)
(declare-fun l_0_15_265 () Real)
(declare-fun l_0_15_264 () Real)
(declare-fun l_0_15_237 () Real)
(declare-fun l_0_15_236 () Real)
(declare-fun l_0_15_209 () Real)
(declare-fun l_0_15_208 () Real)
(declare-fun l_0_15_179 () Real)
(declare-fun l_0_15_116 () Real)
(declare-fun l_0_15_270 () Real)
(declare-fun l_0_15_269 () Real)
(declare-fun l_0_15_242 () Real)
(declare-fun l_0_15_241 () Real)
(declare-fun l_0_15_214 () Real)
(declare-fun l_0_15_213 () Real)
(declare-fun l_0_15_184 () Real)
(declare-fun l_0_15_171 () Real)
(declare-fun l_0_15_173 () Real)
(declare-fun l_0_15_180 () Real)
(declare-fun l_0_15_117 () Real)
(declare-fun l_0_15_115 () Real)
(declare-fun l_0_15_114 () Real)
(declare-fun l_0_15_185 () Real)
(declare-fun l_0_15_174 () Real)
(declare-fun l_0_15_181 () Real)
(declare-fun l_0_15_118 () Real)
(declare-fun l_0_15_186 () Real)
(declare-fun l_0_15_182 () Real)
(declare-fun l_0_15_187 () Real)
(declare-fun l_0_15_183 () Real)
(declare-fun l_0_15_125 () Real)
(declare-fun l_0_15_124 () Real)
(declare-fun l_0_15_123 () Real)
(declare-fun l_0_15_188 () Real)
(declare-fun l_0_15_130 () Real)
(declare-fun l_0_15_129 () Real)
(declare-fun l_0_15_128 () Real)
(declare-fun l_0_15_194 () Real)
(declare-fun l_0_15_189 () Real)
(declare-fun l_0_15_195 () Real)
(declare-fun l_0_15_196 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_110 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_111 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_112 () Real)
(declare-fun l_0_15_266 () Real)
(declare-fun l_0_15_238 () Real)
(declare-fun l_0_15_210 () Real)
(declare-fun l_0_15_267 () Real)
(declare-fun l_0_15_239 () Real)
(declare-fun l_0_15_211 () Real)
(declare-fun l_0_15_272 () Real)
(declare-fun l_0_15_271 () Real)
(declare-fun l_0_15_244 () Real)
(declare-fun l_0_15_243 () Real)
(declare-fun l_0_15_216 () Real)
(declare-fun l_0_15_215 () Real)
(declare-fun l_0_15_278 () Real)
(declare-fun l_0_15_250 () Real)
(declare-fun l_0_15_222 () Real)
(declare-fun l_0_15_126 () Real)
(declare-fun l_0_15_131 () Real)
(declare-fun l_0_15_127 () Real)
(declare-fun l_0_15_132 () Real)
(declare-fun l_0_15_138 () Real)
(declare-fun l_0_15_133 () Real)
(declare-fun l_0_15_139 () Real)
(declare-fun l_0_15_140 () Real)
(declare-fun l_0_15_273 () Real)
(declare-fun l_0_15_245 () Real)
(declare-fun l_0_15_217 () Real)
(declare-fun l_0_15_279 () Real)
(declare-fun l_0_15_251 () Real)
(declare-fun l_0_15_223 () Real)
(declare-fun l_0_15_280 () Real)
(declare-fun l_0_15_252 () Real)
(declare-fun l_0_15_224 () Real)
(declare-fun l_0_16_85 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_296 () Real)
(declare-fun l_0_16_281 () Real)
(declare-fun l_0_16_268 () Real)
(declare-fun l_0_16_253 () Real)
(declare-fun l_0_16_240 () Real)
(declare-fun l_0_16_225 () Real)
(declare-fun l_0_16_212 () Real)
(declare-fun l_0_16_197 () Real)
(declare-fun l_0_16_303 () Real)
(declare-fun l_0_16_283 () Real)
(declare-fun l_0_16_302 () Real)
(declare-fun l_0_16_282 () Real)
(declare-fun l_0_16_275 () Real)
(declare-fun l_0_16_255 () Real)
(declare-fun l_0_16_274 () Real)
(declare-fun l_0_16_254 () Real)
(declare-fun l_0_16_247 () Real)
(declare-fun l_0_16_227 () Real)
(declare-fun l_0_16_246 () Real)
(declare-fun l_0_16_226 () Real)
(declare-fun l_0_16_219 () Real)
(declare-fun l_0_16_199 () Real)
(declare-fun l_0_16_218 () Real)
(declare-fun l_0_16_198 () Real)
(declare-fun l_0_16_291 () Real)
(declare-fun l_0_16_263 () Real)
(declare-fun l_0_16_235 () Real)
(declare-fun l_0_16_207 () Real)
(declare-fun l_0_16_169 () Real)
(declare-fun l_0_16_141 () Real)
(declare-fun l_0_16_113 () Real)
(declare-fun l_0_16_305 () Real)
(declare-fun l_0_16_290 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_304 () Real)
(declare-fun l_0_16_289 () Real)
(declare-fun l_0_16_288 () Real)
(declare-fun l_0_16_287 () Real)
(declare-fun l_0_16_277 () Real)
(declare-fun l_0_16_262 () Real)
(declare-fun l_0_16_276 () Real)
(declare-fun l_0_16_261 () Real)
(declare-fun l_0_16_260 () Real)
(declare-fun l_0_16_259 () Real)
(declare-fun l_0_16_249 () Real)
(declare-fun l_0_16_234 () Real)
(declare-fun l_0_16_248 () Real)
(declare-fun l_0_16_233 () Real)
(declare-fun l_0_16_232 () Real)
(declare-fun l_0_16_231 () Real)
(declare-fun l_0_16_221 () Real)
(declare-fun l_0_16_206 () Real)
(declare-fun l_0_16_220 () Real)
(declare-fun l_0_16_205 () Real)
(declare-fun l_0_16_204 () Real)
(declare-fun l_0_16_203 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_91 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_142 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_193 () Real)
(declare-fun l_0_16_178 () Real)
(declare-fun l_0_16_192 () Real)
(declare-fun l_0_16_177 () Real)
(declare-fun l_0_16_191 () Real)
(declare-fun l_0_16_176 () Real)
(declare-fun l_0_16_190 () Real)
(declare-fun l_0_16_175 () Real)
(declare-fun l_0_16_144 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_147 () Real)
(declare-fun l_0_16_81 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_80 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_79 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_78 () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_165 () Real)
(declare-fun l_0_16_150 () Real)
(declare-fun l_0_16_164 () Real)
(declare-fun l_0_16_149 () Real)
(declare-fun l_0_16_163 () Real)
(declare-fun l_0_16_148 () Real)
(declare-fun l_0_16_162 () Real)
(declare-fun l_0_16_151 () Real)
(declare-fun l_0_16_137 () Real)
(declare-fun l_0_16_122 () Real)
(declare-fun l_0_16_136 () Real)
(declare-fun l_0_16_121 () Real)
(declare-fun l_0_16_135 () Real)
(declare-fun l_0_16_120 () Real)
(declare-fun l_0_16_134 () Real)
(declare-fun l_0_16_119 () Real)
(declare-fun l_0_16_94 () Real)
(declare-fun l_0_16_109 () Real)
(declare-fun l_0_16_93 () Real)
(declare-fun l_0_16_108 () Real)
(declare-fun l_0_16_92 () Real)
(declare-fun l_0_16_107 () Real)
(declare-fun l_0_16_106 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_156 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_87 () Real)
(declare-fun l_0_16_86 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_143 () Real)
(declare-fun l_0_16_90 () Real)
(declare-fun l_0_16_89 () Real)
(declare-fun l_0_16_88 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_145 () Real)
(declare-fun l_0_16_98 () Real)
(declare-fun l_0_16_97 () Real)
(declare-fun l_0_16_96 () Real)
(declare-fun l_0_16_95 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_152 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_157 () Real)
(declare-fun l_0_16_103 () Real)
(declare-fun l_0_16_102 () Real)
(declare-fun l_0_16_101 () Real)
(declare-fun l_0_16_100 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_146 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_153 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_158 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_154 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_159 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_155 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_160 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_166 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_161 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_167 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_168 () Real)
(declare-fun l_0_16_284 () Real)
(declare-fun l_0_16_256 () Real)
(declare-fun l_0_16_228 () Real)
(declare-fun l_0_16_200 () Real)
(declare-fun l_0_16_285 () Real)
(declare-fun l_0_16_257 () Real)
(declare-fun l_0_16_229 () Real)
(declare-fun l_0_16_201 () Real)
(declare-fun l_0_16_170 () Real)
(declare-fun l_0_16_286 () Real)
(declare-fun l_0_16_258 () Real)
(declare-fun l_0_16_230 () Real)
(declare-fun l_0_16_202 () Real)
(declare-fun l_0_16_172 () Real)
(declare-fun l_0_16_293 () Real)
(declare-fun l_0_16_292 () Real)
(declare-fun l_0_16_265 () Real)
(declare-fun l_0_16_264 () Real)
(declare-fun l_0_16_237 () Real)
(declare-fun l_0_16_236 () Real)
(declare-fun l_0_16_209 () Real)
(declare-fun l_0_16_208 () Real)
(declare-fun l_0_16_179 () Real)
(declare-fun l_0_16_116 () Real)
(declare-fun l_0_16_298 () Real)
(declare-fun l_0_16_297 () Real)
(declare-fun l_0_16_270 () Real)
(declare-fun l_0_16_269 () Real)
(declare-fun l_0_16_242 () Real)
(declare-fun l_0_16_241 () Real)
(declare-fun l_0_16_214 () Real)
(declare-fun l_0_16_213 () Real)
(declare-fun l_0_16_184 () Real)
(declare-fun l_0_16_171 () Real)
(declare-fun l_0_16_173 () Real)
(declare-fun l_0_16_180 () Real)
(declare-fun l_0_16_117 () Real)
(declare-fun l_0_16_115 () Real)
(declare-fun l_0_16_114 () Real)
(declare-fun l_0_16_185 () Real)
(declare-fun l_0_16_174 () Real)
(declare-fun l_0_16_181 () Real)
(declare-fun l_0_16_118 () Real)
(declare-fun l_0_16_186 () Real)
(declare-fun l_0_16_182 () Real)
(declare-fun l_0_16_187 () Real)
(declare-fun l_0_16_183 () Real)
(declare-fun l_0_16_125 () Real)
(declare-fun l_0_16_124 () Real)
(declare-fun l_0_16_123 () Real)
(declare-fun l_0_16_188 () Real)
(declare-fun l_0_16_130 () Real)
(declare-fun l_0_16_129 () Real)
(declare-fun l_0_16_128 () Real)
(declare-fun l_0_16_194 () Real)
(declare-fun l_0_16_189 () Real)
(declare-fun l_0_16_195 () Real)
(declare-fun l_0_16_196 () Real)
(declare-fun l_0_16_99 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_76 () Real)
(declare-fun l_0_16_104 () Real)
(declare-fun l_0_16_82 () Real)
(declare-fun l_0_16_110 () Real)
(declare-fun l_0_16_77 () Real)
(declare-fun l_0_16_105 () Real)
(declare-fun l_0_16_83 () Real)
(declare-fun l_0_16_111 () Real)
(declare-fun l_0_16_84 () Real)
(declare-fun l_0_16_112 () Real)
(declare-fun l_0_16_294 () Real)
(declare-fun l_0_16_266 () Real)
(declare-fun l_0_16_238 () Real)
(declare-fun l_0_16_210 () Real)
(declare-fun l_0_16_295 () Real)
(declare-fun l_0_16_267 () Real)
(declare-fun l_0_16_239 () Real)
(declare-fun l_0_16_211 () Real)
(declare-fun l_0_16_300 () Real)
(declare-fun l_0_16_299 () Real)
(declare-fun l_0_16_272 () Real)
(declare-fun l_0_16_271 () Real)
(declare-fun l_0_16_244 () Real)
(declare-fun l_0_16_243 () Real)
(declare-fun l_0_16_216 () Real)
(declare-fun l_0_16_215 () Real)
(declare-fun l_0_16_306 () Real)
(declare-fun l_0_16_278 () Real)
(declare-fun l_0_16_250 () Real)
(declare-fun l_0_16_222 () Real)
(declare-fun l_0_16_126 () Real)
(declare-fun l_0_16_131 () Real)
(declare-fun l_0_16_127 () Real)
(declare-fun l_0_16_132 () Real)
(declare-fun l_0_16_138 () Real)
(declare-fun l_0_16_133 () Real)
(declare-fun l_0_16_139 () Real)
(declare-fun l_0_16_140 () Real)
(declare-fun l_0_16_301 () Real)
(declare-fun l_0_16_273 () Real)
(declare-fun l_0_16_245 () Real)
(declare-fun l_0_16_217 () Real)
(declare-fun l_0_16_307 () Real)
(declare-fun l_0_16_279 () Real)
(declare-fun l_0_16_251 () Real)
(declare-fun l_0_16_223 () Real)
(declare-fun l_0_16_308 () Real)
(declare-fun l_0_16_280 () Real)
(declare-fun l_0_16_252 () Real)
(declare-fun l_0_16_224 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_319 () Real)
(declare-fun l_0_17_309 () Real)
(declare-fun l_0_17_291 () Real)
(declare-fun l_0_17_281 () Real)
(declare-fun l_0_17_263 () Real)
(declare-fun l_0_17_253 () Real)
(declare-fun l_0_17_235 () Real)
(declare-fun l_0_17_225 () Real)
(declare-fun l_0_17_207 () Real)
(declare-fun l_0_17_197 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_333 () Real)
(declare-fun l_0_17_318 () Real)
(declare-fun l_0_17_332 () Real)
(declare-fun l_0_17_317 () Real)
(declare-fun l_0_17_331 () Real)
(declare-fun l_0_17_316 () Real)
(declare-fun l_0_17_330 () Real)
(declare-fun l_0_17_315 () Real)
(declare-fun l_0_17_305 () Real)
(declare-fun l_0_17_290 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_304 () Real)
(declare-fun l_0_17_289 () Real)
(declare-fun l_0_17_303 () Real)
(declare-fun l_0_17_288 () Real)
(declare-fun l_0_17_302 () Real)
(declare-fun l_0_17_287 () Real)
(declare-fun l_0_17_277 () Real)
(declare-fun l_0_17_262 () Real)
(declare-fun l_0_17_276 () Real)
(declare-fun l_0_17_261 () Real)
(declare-fun l_0_17_275 () Real)
(declare-fun l_0_17_260 () Real)
(declare-fun l_0_17_274 () Real)
(declare-fun l_0_17_259 () Real)
(declare-fun l_0_17_249 () Real)
(declare-fun l_0_17_234 () Real)
(declare-fun l_0_17_248 () Real)
(declare-fun l_0_17_233 () Real)
(declare-fun l_0_17_247 () Real)
(declare-fun l_0_17_232 () Real)
(declare-fun l_0_17_246 () Real)
(declare-fun l_0_17_231 () Real)
(declare-fun l_0_17_221 () Real)
(declare-fun l_0_17_206 () Real)
(declare-fun l_0_17_220 () Real)
(declare-fun l_0_17_205 () Real)
(declare-fun l_0_17_219 () Real)
(declare-fun l_0_17_204 () Real)
(declare-fun l_0_17_218 () Real)
(declare-fun l_0_17_203 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_193 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_192 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_191 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_190 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_17_312 () Real)
(declare-fun l_0_17_284 () Real)
(declare-fun l_0_17_256 () Real)
(declare-fun l_0_17_228 () Real)
(declare-fun l_0_17_200 () Real)
(declare-fun l_0_17_313 () Real)
(declare-fun l_0_17_311 () Real)
(declare-fun l_0_17_310 () Real)
(declare-fun l_0_17_285 () Real)
(declare-fun l_0_17_283 () Real)
(declare-fun l_0_17_282 () Real)
(declare-fun l_0_17_257 () Real)
(declare-fun l_0_17_255 () Real)
(declare-fun l_0_17_254 () Real)
(declare-fun l_0_17_229 () Real)
(declare-fun l_0_17_227 () Real)
(declare-fun l_0_17_226 () Real)
(declare-fun l_0_17_201 () Real)
(declare-fun l_0_17_199 () Real)
(declare-fun l_0_17_198 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_314 () Real)
(declare-fun l_0_17_286 () Real)
(declare-fun l_0_17_258 () Real)
(declare-fun l_0_17_230 () Real)
(declare-fun l_0_17_202 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_321 () Real)
(declare-fun l_0_17_320 () Real)
(declare-fun l_0_17_293 () Real)
(declare-fun l_0_17_292 () Real)
(declare-fun l_0_17_265 () Real)
(declare-fun l_0_17_264 () Real)
(declare-fun l_0_17_237 () Real)
(declare-fun l_0_17_236 () Real)
(declare-fun l_0_17_209 () Real)
(declare-fun l_0_17_208 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_326 () Real)
(declare-fun l_0_17_325 () Real)
(declare-fun l_0_17_324 () Real)
(declare-fun l_0_17_298 () Real)
(declare-fun l_0_17_297 () Real)
(declare-fun l_0_17_296 () Real)
(declare-fun l_0_17_270 () Real)
(declare-fun l_0_17_269 () Real)
(declare-fun l_0_17_268 () Real)
(declare-fun l_0_17_242 () Real)
(declare-fun l_0_17_241 () Real)
(declare-fun l_0_17_240 () Real)
(declare-fun l_0_17_214 () Real)
(declare-fun l_0_17_213 () Real)
(declare-fun l_0_17_212 () Real)
(declare-fun l_0_17_184 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_185 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_181 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_186 () Real)
(declare-fun l_0_17_182 () Real)
(declare-fun l_0_17_187 () Real)
(declare-fun l_0_17_183 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_188 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun l_0_17_194 () Real)
(declare-fun l_0_17_189 () Real)
(declare-fun l_0_17_195 () Real)
(declare-fun l_0_17_196 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_322 () Real)
(declare-fun l_0_17_294 () Real)
(declare-fun l_0_17_266 () Real)
(declare-fun l_0_17_238 () Real)
(declare-fun l_0_17_210 () Real)
(declare-fun l_0_17_323 () Real)
(declare-fun l_0_17_295 () Real)
(declare-fun l_0_17_267 () Real)
(declare-fun l_0_17_239 () Real)
(declare-fun l_0_17_211 () Real)
(declare-fun l_0_17_328 () Real)
(declare-fun l_0_17_327 () Real)
(declare-fun l_0_17_300 () Real)
(declare-fun l_0_17_299 () Real)
(declare-fun l_0_17_272 () Real)
(declare-fun l_0_17_271 () Real)
(declare-fun l_0_17_244 () Real)
(declare-fun l_0_17_243 () Real)
(declare-fun l_0_17_216 () Real)
(declare-fun l_0_17_215 () Real)
(declare-fun l_0_17_334 () Real)
(declare-fun l_0_17_306 () Real)
(declare-fun l_0_17_278 () Real)
(declare-fun l_0_17_250 () Real)
(declare-fun l_0_17_222 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_329 () Real)
(declare-fun l_0_17_301 () Real)
(declare-fun l_0_17_273 () Real)
(declare-fun l_0_17_245 () Real)
(declare-fun l_0_17_217 () Real)
(declare-fun l_0_17_335 () Real)
(declare-fun l_0_17_307 () Real)
(declare-fun l_0_17_279 () Real)
(declare-fun l_0_17_251 () Real)
(declare-fun l_0_17_223 () Real)
(declare-fun l_0_17_336 () Real)
(declare-fun l_0_17_308 () Real)
(declare-fun l_0_17_280 () Real)
(declare-fun l_0_17_252 () Real)
(declare-fun l_0_17_224 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_347 () Real)
(declare-fun l_0_18_337 () Real)
(declare-fun l_0_18_319 () Real)
(declare-fun l_0_18_309 () Real)
(declare-fun l_0_18_291 () Real)
(declare-fun l_0_18_281 () Real)
(declare-fun l_0_18_263 () Real)
(declare-fun l_0_18_253 () Real)
(declare-fun l_0_18_235 () Real)
(declare-fun l_0_18_225 () Real)
(declare-fun l_0_18_207 () Real)
(declare-fun l_0_18_197 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_361 () Real)
(declare-fun l_0_18_346 () Real)
(declare-fun l_0_18_360 () Real)
(declare-fun l_0_18_345 () Real)
(declare-fun l_0_18_359 () Real)
(declare-fun l_0_18_344 () Real)
(declare-fun l_0_18_358 () Real)
(declare-fun l_0_18_343 () Real)
(declare-fun l_0_18_333 () Real)
(declare-fun l_0_18_318 () Real)
(declare-fun l_0_18_332 () Real)
(declare-fun l_0_18_317 () Real)
(declare-fun l_0_18_331 () Real)
(declare-fun l_0_18_316 () Real)
(declare-fun l_0_18_330 () Real)
(declare-fun l_0_18_315 () Real)
(declare-fun l_0_18_305 () Real)
(declare-fun l_0_18_290 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_304 () Real)
(declare-fun l_0_18_289 () Real)
(declare-fun l_0_18_303 () Real)
(declare-fun l_0_18_288 () Real)
(declare-fun l_0_18_302 () Real)
(declare-fun l_0_18_287 () Real)
(declare-fun l_0_18_277 () Real)
(declare-fun l_0_18_262 () Real)
(declare-fun l_0_18_276 () Real)
(declare-fun l_0_18_261 () Real)
(declare-fun l_0_18_275 () Real)
(declare-fun l_0_18_260 () Real)
(declare-fun l_0_18_274 () Real)
(declare-fun l_0_18_259 () Real)
(declare-fun l_0_18_249 () Real)
(declare-fun l_0_18_234 () Real)
(declare-fun l_0_18_248 () Real)
(declare-fun l_0_18_233 () Real)
(declare-fun l_0_18_247 () Real)
(declare-fun l_0_18_232 () Real)
(declare-fun l_0_18_246 () Real)
(declare-fun l_0_18_231 () Real)
(declare-fun l_0_18_221 () Real)
(declare-fun l_0_18_206 () Real)
(declare-fun l_0_18_220 () Real)
(declare-fun l_0_18_205 () Real)
(declare-fun l_0_18_219 () Real)
(declare-fun l_0_18_204 () Real)
(declare-fun l_0_18_218 () Real)
(declare-fun l_0_18_203 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_18_340 () Real)
(declare-fun l_0_18_312 () Real)
(declare-fun l_0_18_284 () Real)
(declare-fun l_0_18_256 () Real)
(declare-fun l_0_18_228 () Real)
(declare-fun l_0_18_200 () Real)
(declare-fun l_0_18_341 () Real)
(declare-fun l_0_18_339 () Real)
(declare-fun l_0_18_338 () Real)
(declare-fun l_0_18_313 () Real)
(declare-fun l_0_18_311 () Real)
(declare-fun l_0_18_310 () Real)
(declare-fun l_0_18_285 () Real)
(declare-fun l_0_18_283 () Real)
(declare-fun l_0_18_282 () Real)
(declare-fun l_0_18_257 () Real)
(declare-fun l_0_18_255 () Real)
(declare-fun l_0_18_254 () Real)
(declare-fun l_0_18_229 () Real)
(declare-fun l_0_18_227 () Real)
(declare-fun l_0_18_226 () Real)
(declare-fun l_0_18_201 () Real)
(declare-fun l_0_18_199 () Real)
(declare-fun l_0_18_198 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_342 () Real)
(declare-fun l_0_18_314 () Real)
(declare-fun l_0_18_286 () Real)
(declare-fun l_0_18_258 () Real)
(declare-fun l_0_18_230 () Real)
(declare-fun l_0_18_202 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_349 () Real)
(declare-fun l_0_18_348 () Real)
(declare-fun l_0_18_321 () Real)
(declare-fun l_0_18_320 () Real)
(declare-fun l_0_18_293 () Real)
(declare-fun l_0_18_292 () Real)
(declare-fun l_0_18_265 () Real)
(declare-fun l_0_18_264 () Real)
(declare-fun l_0_18_237 () Real)
(declare-fun l_0_18_236 () Real)
(declare-fun l_0_18_209 () Real)
(declare-fun l_0_18_208 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_354 () Real)
(declare-fun l_0_18_353 () Real)
(declare-fun l_0_18_352 () Real)
(declare-fun l_0_18_326 () Real)
(declare-fun l_0_18_325 () Real)
(declare-fun l_0_18_324 () Real)
(declare-fun l_0_18_298 () Real)
(declare-fun l_0_18_297 () Real)
(declare-fun l_0_18_296 () Real)
(declare-fun l_0_18_270 () Real)
(declare-fun l_0_18_269 () Real)
(declare-fun l_0_18_268 () Real)
(declare-fun l_0_18_242 () Real)
(declare-fun l_0_18_241 () Real)
(declare-fun l_0_18_240 () Real)
(declare-fun l_0_18_214 () Real)
(declare-fun l_0_18_213 () Real)
(declare-fun l_0_18_212 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_196 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_350 () Real)
(declare-fun l_0_18_322 () Real)
(declare-fun l_0_18_294 () Real)
(declare-fun l_0_18_266 () Real)
(declare-fun l_0_18_238 () Real)
(declare-fun l_0_18_210 () Real)
(declare-fun l_0_18_351 () Real)
(declare-fun l_0_18_323 () Real)
(declare-fun l_0_18_295 () Real)
(declare-fun l_0_18_267 () Real)
(declare-fun l_0_18_239 () Real)
(declare-fun l_0_18_211 () Real)
(declare-fun l_0_18_356 () Real)
(declare-fun l_0_18_355 () Real)
(declare-fun l_0_18_328 () Real)
(declare-fun l_0_18_327 () Real)
(declare-fun l_0_18_300 () Real)
(declare-fun l_0_18_299 () Real)
(declare-fun l_0_18_272 () Real)
(declare-fun l_0_18_271 () Real)
(declare-fun l_0_18_244 () Real)
(declare-fun l_0_18_243 () Real)
(declare-fun l_0_18_216 () Real)
(declare-fun l_0_18_215 () Real)
(declare-fun l_0_18_362 () Real)
(declare-fun l_0_18_334 () Real)
(declare-fun l_0_18_306 () Real)
(declare-fun l_0_18_278 () Real)
(declare-fun l_0_18_250 () Real)
(declare-fun l_0_18_222 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_357 () Real)
(declare-fun l_0_18_329 () Real)
(declare-fun l_0_18_301 () Real)
(declare-fun l_0_18_273 () Real)
(declare-fun l_0_18_245 () Real)
(declare-fun l_0_18_217 () Real)
(declare-fun l_0_18_363 () Real)
(declare-fun l_0_18_335 () Real)
(declare-fun l_0_18_307 () Real)
(declare-fun l_0_18_279 () Real)
(declare-fun l_0_18_251 () Real)
(declare-fun l_0_18_223 () Real)
(declare-fun l_0_18_364 () Real)
(declare-fun l_0_18_336 () Real)
(declare-fun l_0_18_308 () Real)
(declare-fun l_0_18_280 () Real)
(declare-fun l_0_18_252 () Real)
(declare-fun l_0_18_224 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- (* 1.0 l_0_0_2) l_0_0_3) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- (- (- (* 1.0 l_0_1_2) l_0_1_3) l_0_1_4) l_0_1_5) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (= (- 1.0 l_0_2_1) 0.0))
(assert
 (let ((?x3369 (- (- (- (- (* 1.0 l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6)))
 (= (- ?x3369 l_0_2_7) 0.0)))
(assert
 (= (- l_0_2_2) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (= (- 1.0 (* l_0_3_61 l_0_3_61)) 0.0))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3410 (* ?x3409 l_0_3_47)))
 (let ((?x3406 (* l_0_3_16 l_0_3_16)))
 (let ((?x3407 (+ (* (- l_0_3_1) l_0_3_1) ?x3406)))
 (let ((?x3417 (- (- (- ?x3407 ?x3410) (* (* 2.0 l_0_3_62) l_0_3_71)) (* (* 2.0 l_0_3_63) l_0_3_72))))
 (= ?x3417 0.0)))))))
(assert
 (let ((?x3450 (* l_0_3_48 l_0_3_48)))
 (let ((?x3448 (* l_0_3_47 l_0_3_47)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3446 (* ?x3445 l_0_3_17)))
 (let ((?x3447 (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x3446)))
 (= (- (- ?x3447 ?x3448) ?x3450) 0.0)))))))
(assert
 (let ((?x3494 (* 2.0 l_0_3_48)))
 (let ((?x3497 (* ?x3494 l_0_3_57)))
 (let ((?x3495 (* ?x3494 l_0_3_50)))
 (let ((?x3489 (* 2.0 l_0_3_47)))
 (let ((?x3492 (* ?x3489 l_0_3_56)))
 (let ((?x3490 (* ?x3489 l_0_3_49)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3481 (* ?x3480 l_0_3_27)))
 (let ((?x3477 (* 2.0 l_0_3_17)))
 (let ((?x3478 (* ?x3477 l_0_3_26)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3475 (* ?x3445 l_0_3_19)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3473 (* ?x3472 l_0_3_3)))
 (let ((?x3469 (* 2.0 l_0_3_11)))
 (let ((?x3470 (* ?x3469 l_0_3_2)))
 (let ((?x3443 (* (- 2.0) l_0_3_1)))
 (let ((?x3468 (* ?x3443 l_0_3_4)))
 (let ((?x3485 (- (+ (+ (+ (- (- ?x3468 ?x3470) ?x3473) ?x3475) ?x3478) ?x3481) (* (* 2.0 l_0_3_32) l_0_3_41))))
 (let ((?x3496 (- (+ (- (- ?x3485 (* (* 2.0 l_0_3_33) l_0_3_42)) ?x3490) ?x3492) ?x3495)))
 (= (+ ?x3496 ?x3497) 0.0))))))))))))))))))))))
(assert
 (let ((?x3494 (* 2.0 l_0_3_48)))
 (let ((?x3566 (* ?x3494 l_0_3_53)))
 (let ((?x3489 (* 2.0 l_0_3_47)))
 (let ((?x3564 (* ?x3489 l_0_3_52)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3481 (* ?x3480 l_0_3_27)))
 (let ((?x3477 (* 2.0 l_0_3_17)))
 (let ((?x3478 (* ?x3477 l_0_3_26)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3560 (* ?x3445 l_0_3_22)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3473 (* ?x3472 l_0_3_3)))
 (let ((?x3469 (* 2.0 l_0_3_11)))
 (let ((?x3470 (* ?x3469 l_0_3_2)))
 (let ((?x3562 (- (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x3470) ?x3473) ?x3560) ?x3478)))
 (= (- (- (- ?x3562 ?x3481) ?x3564) ?x3566) 0.0)))))))))))))))))
(assert
 (let ((?x3494 (* 2.0 l_0_3_48)))
 (let ((?x3497 (* ?x3494 l_0_3_57)))
 (let ((?x3489 (* 2.0 l_0_3_47)))
 (let ((?x3492 (* ?x3489 l_0_3_56)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3594 (* ?x3445 l_0_3_26)))
 (let ((?x3595 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x3594)))
 (= (- (- ?x3595 ?x3492) ?x3497) 0.0)))))))))
(assert
 (let ((?x3620 (* l_0_3_3 l_0_3_3)))
 (let ((?x3618 (* l_0_3_2 l_0_3_2)))
 (let ((?x3616 (* l_0_3_18 l_0_3_18)))
 (let ((?x3615 (* l_0_3_17 l_0_3_17)))
 (let ((?x3617 (+ ?x3615 ?x3616)))
 (let ((?x3621 (- (- ?x3617 ?x3618) ?x3620)))
 (= ?x3621 0.0))))))))
(assert
 (let ((?x3636 (* 2.0 l_0_3_3)))
 (let ((?x3637 (* ?x3636 l_0_3_5)))
 (let ((?x3633 (* 2.0 l_0_3_2)))
 (let ((?x3634 (* ?x3633 l_0_3_4)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3631 (* ?x3480 l_0_3_20)))
 (let ((?x3638 (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x3631) ?x3634) ?x3637)))
 (= ?x3638 0.0)))))))))
(assert
 (let ((?x3636 (* 2.0 l_0_3_3)))
 (let ((?x3663 (* ?x3636 l_0_3_8)))
 (let ((?x3633 (* 2.0 l_0_3_2)))
 (let ((?x3661 (* ?x3633 l_0_3_7)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3659 (* ?x3480 l_0_3_23)))
 (let ((?x3477 (* 2.0 l_0_3_17)))
 (let ((?x3658 (* ?x3477 l_0_3_22)))
 (= (- (- (+ ?x3658 ?x3659) ?x3661) ?x3663) 0.0))))))))))
(assert
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3481 (* ?x3480 l_0_3_27)))
 (let ((?x3477 (* 2.0 l_0_3_17)))
 (let ((?x3478 (* ?x3477 l_0_3_26)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3473 (* ?x3472 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3473) ?x3478) ?x3481) 0.0))))))))
(assert
 (let ((?x3703 (* l_0_3_6 l_0_3_6)))
 (let ((?x3701 (* l_0_3_5 l_0_3_5)))
 (let ((?x3699 (* l_0_3_4 l_0_3_4)))
 (let ((?x3697 (* l_0_3_21 l_0_3_21)))
 (let ((?x3698 (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3697)))
 (= (- (- (- ?x3698 ?x3699) ?x3701) ?x3703) 0.0)))))))
(assert
 (let ((?x3732 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3729 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3726 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3723 (* ?x3722 l_0_3_24)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3720 (* ?x3719 l_0_3_23)))
 (let ((?x3717 (* 2.0 l_0_3_19)))
 (let ((?x3718 (* ?x3717 l_0_3_22)))
 (= (- (- (- (+ (+ ?x3718 ?x3720) ?x3723) ?x3726) ?x3729) ?x3732) 0.0)))))))))))
(assert
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3771 (* ?x3722 l_0_3_28)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3769 (* ?x3719 l_0_3_27)))
 (let ((?x3717 (* 2.0 l_0_3_19)))
 (let ((?x3767 (* ?x3717 l_0_3_26)))
 (let ((?x3764 (* 2.0 l_0_3_13)))
 (let ((?x3765 (* ?x3764 l_0_3_6)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3762 (* ?x3472 l_0_3_5)))
 (let ((?x3770 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3762) ?x3765) ?x3767) ?x3769)))
 (let ((?x3772 (+ ?x3770 ?x3771)))
 (= ?x3772 0.0))))))))))))))
(assert
 (let ((?x3811 (* l_0_3_9 l_0_3_9)))
 (let ((?x3809 (* l_0_3_8 l_0_3_8)))
 (let ((?x3807 (* l_0_3_7 l_0_3_7)))
 (let ((?x3805 (* l_0_3_25 l_0_3_25)))
 (let ((?x3803 (* l_0_3_24 l_0_3_24)))
 (let ((?x3801 (* l_0_3_23 l_0_3_23)))
 (let ((?x3804 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x3801) ?x3803)))
 (= (- (- (- (+ ?x3804 ?x3805) ?x3807) ?x3809) ?x3811) 0.0)))))))))
(assert
 (let ((?x3846 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3843 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3840 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3837 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3764 (* 2.0 l_0_3_13)))
 (let ((?x3834 (* ?x3764 l_0_3_9)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3832 (* ?x3472 l_0_3_8)))
 (let ((?x3469 (* 2.0 l_0_3_11)))
 (let ((?x3830 (* ?x3469 l_0_3_7)))
 (let ((?x3829 (* (* (- 2.0) l_0_3_10) l_0_3_14)))
 (let ((?x3847 (+ (+ (+ (+ (- (- (- ?x3829 ?x3830) ?x3832) ?x3834) ?x3837) ?x3840) ?x3843) ?x3846)))
 (= ?x3847 0.0))))))))))))))
(assert
 (let ((?x3898 (* l_0_3_30 l_0_3_30)))
 (let ((?x3896 (* l_0_3_29 l_0_3_29)))
 (let ((?x3894 (* l_0_3_28 l_0_3_28)))
 (let ((?x3892 (* l_0_3_27 l_0_3_27)))
 (let ((?x3890 (* l_0_3_26 l_0_3_26)))
 (let ((?x3888 (* l_0_3_15 l_0_3_15)))
 (let ((?x3886 (* l_0_3_14 l_0_3_14)))
 (let ((?x3877 (* l_0_3_13 l_0_3_13)))
 (let ((?x3887 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3877) ?x3886)))
 (let ((?x3899 (+ (+ (+ (+ (+ (- ?x3887 ?x3888) ?x3890) ?x3892) ?x3894) ?x3896) ?x3898)))
 (= ?x3899 0.0))))))))))))
(assert
 (let ((?x3925 (* l_0_3_46 l_0_3_46)))
 (let ((?x3916 (* l_0_3_31 l_0_3_31)))
 (let ((?x3406 (* l_0_3_16 l_0_3_16)))
 (let ((?x3407 (+ (* (- l_0_3_1) l_0_3_1) ?x3406)))
 (= (- (+ (- ?x3407 ?x3916) ?x3925) (* (* 2.0 l_0_3_61) l_0_3_64)) 0.0))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3410 (* ?x3409 l_0_3_47)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3446 (* ?x3445 l_0_3_17)))
 (let ((?x3447 (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x3446)))
 (let ((?x3947 (- (+ (- ?x3447 (* (* 2.0 l_0_3_31) l_0_3_32)) ?x3410) (* (* 2.0 l_0_3_62) l_0_3_64))))
 (= (- ?x3947 (* (* 2.0 l_0_3_63) l_0_3_65)) 0.0))))))))
(assert
 (let ((?x3980 (* l_0_3_66 l_0_3_66)))
 (let ((?x3978 (* l_0_3_65 l_0_3_65)))
 (let ((?x3976 (* l_0_3_64 l_0_3_64)))
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3974 (* ?x3409 l_0_3_49)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3475 (* ?x3445 l_0_3_19)))
 (let ((?x3443 (* (- 2.0) l_0_3_1)))
 (let ((?x3468 (* ?x3443 l_0_3_4)))
 (let ((?x3977 (- (+ (- (+ ?x3468 ?x3475) (* (* 2.0 l_0_3_31) l_0_3_34)) ?x3974) ?x3976)))
 (= (- (- ?x3977 ?x3978) ?x3980) 0.0))))))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4013 (* ?x3409 l_0_3_52)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3560 (* ?x3445 l_0_3_22)))
 (let ((?x3475 (* ?x3445 l_0_3_19)))
 (let ((?x4005 (* 2.0 l_0_3_1)))
 (let ((?x4007 (* ?x4005 l_0_3_7)))
 (let ((?x4012 (- (+ (- (- (* ?x4005 l_0_3_4) ?x4007) ?x3475) ?x3560) (* (* 2.0 l_0_3_31) l_0_3_37))))
 (let ((?x4020 (- (- (+ ?x4012 ?x4013) (* (* 2.0 l_0_3_64) l_0_3_67)) (* (* 2.0 l_0_3_65) l_0_3_68))))
 (= (- ?x4020 (* (* 2.0 l_0_3_66) l_0_3_69)) 0.0)))))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3974 (* ?x3409 l_0_3_49)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3594 (* ?x3445 l_0_3_26)))
 (let ((?x3595 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x3594)))
 (let ((?x4065 (+ (- (- ?x3595 (* (* 2.0 l_0_3_31) l_0_3_41)) ?x3974) (* ?x3409 l_0_3_56))))
 (let ((?x4069 (- (- ?x4065 (* (* 2.0 l_0_3_64) l_0_3_71)) (* (* 2.0 l_0_3_65) l_0_3_72))))
 (= (- ?x4069 (* (* 2.0 l_0_3_66) l_0_3_73)) 0.0)))))))))
(assert
 (let ((?x3450 (* l_0_3_48 l_0_3_48)))
 (let ((?x3448 (* l_0_3_47 l_0_3_47)))
 (let ((?x4108 (* l_0_3_33 l_0_3_33)))
 (let ((?x4106 (* l_0_3_32 l_0_3_32)))
 (let ((?x3620 (* l_0_3_3 l_0_3_3)))
 (let ((?x3618 (* l_0_3_2 l_0_3_2)))
 (let ((?x3616 (* l_0_3_18 l_0_3_18)))
 (let ((?x3615 (* l_0_3_17 l_0_3_17)))
 (let ((?x3617 (+ ?x3615 ?x3616)))
 (let ((?x3621 (- (- ?x3617 ?x3618) ?x3620)))
 (= (+ (+ (- (- ?x3621 ?x4106) ?x4108) ?x3448) ?x3450) 0.0))))))))))))
(assert
 (let ((?x3494 (* 2.0 l_0_3_48)))
 (let ((?x3495 (* ?x3494 l_0_3_50)))
 (let ((?x3489 (* 2.0 l_0_3_47)))
 (let ((?x3490 (* ?x3489 l_0_3_49)))
 (let ((?x3636 (* 2.0 l_0_3_3)))
 (let ((?x3637 (* ?x3636 l_0_3_5)))
 (let ((?x3633 (* 2.0 l_0_3_2)))
 (let ((?x3634 (* ?x3633 l_0_3_4)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3631 (* ?x3480 l_0_3_20)))
 (let ((?x3638 (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x3631) ?x3634) ?x3637)))
 (let ((?x4124 (- (- ?x3638 (* (* 2.0 l_0_3_32) l_0_3_34)) (* (* 2.0 l_0_3_33) l_0_3_35))))
 (= (+ (+ ?x4124 ?x3490) ?x3495) 0.0))))))))))))))
(assert
 (let ((?x3494 (* 2.0 l_0_3_48)))
 (let ((?x3566 (* ?x3494 l_0_3_53)))
 (let ((?x3489 (* 2.0 l_0_3_47)))
 (let ((?x3564 (* ?x3489 l_0_3_52)))
 (let ((?x3636 (* 2.0 l_0_3_3)))
 (let ((?x3663 (* ?x3636 l_0_3_8)))
 (let ((?x3637 (* ?x3636 l_0_3_5)))
 (let ((?x3633 (* 2.0 l_0_3_2)))
 (let ((?x3661 (* ?x3633 l_0_3_7)))
 (let ((?x3634 (* ?x3633 l_0_3_4)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3659 (* ?x3480 l_0_3_23)))
 (let ((?x3631 (* ?x3480 l_0_3_20)))
 (let ((?x3477 (* 2.0 l_0_3_17)))
 (let ((?x3658 (* ?x3477 l_0_3_22)))
 (let ((?x4147 (+ (+ (- (+ (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x3658) ?x3631) ?x3659) ?x3634)))
 (let ((?x4152 (- (- (+ (- ?x4147 ?x3661) ?x3637) ?x3663) (* (* 2.0 l_0_3_32) l_0_3_37))))
 (= (+ (+ (- ?x4152 (* (* 2.0 l_0_3_33) l_0_3_38)) ?x3564) ?x3566) 0.0)))))))))))))))))))
(assert
 (let ((?x3703 (* l_0_3_6 l_0_3_6)))
 (let ((?x4196 (* l_0_3_51 l_0_3_51)))
 (let ((?x4194 (* l_0_3_50 l_0_3_50)))
 (let ((?x3701 (* l_0_3_5 l_0_3_5)))
 (let ((?x4191 (* l_0_3_49 l_0_3_49)))
 (let ((?x3699 (* l_0_3_4 l_0_3_4)))
 (let ((?x4188 (* l_0_3_36 l_0_3_36)))
 (let ((?x4186 (* l_0_3_35 l_0_3_35)))
 (let ((?x4184 (* l_0_3_34 l_0_3_34)))
 (let ((?x3697 (* l_0_3_21 l_0_3_21)))
 (let ((?x3698 (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3697)))
 (let ((?x4195 (+ (- (+ (- (- (- (- ?x3698 ?x4184) ?x4186) ?x4188) ?x3699) ?x4191) ?x3701) ?x4194)))
 (= (- (+ ?x4195 ?x4196) ?x3703) 0.0))))))))))))))
(assert
 (let ((?x3703 (* l_0_3_6 l_0_3_6)))
 (let ((?x3732 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4242 (* 2.0 l_0_3_51)))
 (let ((?x4243 (* ?x4242 l_0_3_54)))
 (let ((?x4239 (* 2.0 l_0_3_50)))
 (let ((?x4240 (* ?x4239 l_0_3_53)))
 (let ((?x3701 (* l_0_3_5 l_0_3_5)))
 (let ((?x3729 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4234 (* 2.0 l_0_3_49)))
 (let ((?x4235 (* ?x4234 l_0_3_52)))
 (let ((?x3699 (* l_0_3_4 l_0_3_4)))
 (let ((?x3726 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3697 (* l_0_3_21 l_0_3_21)))
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3723 (* ?x3722 l_0_3_24)))
 (let ((?x3695 (* l_0_3_20 l_0_3_20)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3720 (* ?x3719 l_0_3_23)))
 (let ((?x4219 (+ (- (* (* 2.0 l_0_3_19) l_0_3_22) (* l_0_3_19 l_0_3_19)) ?x3720)))
 (let ((?x4225 (- (- (+ (- ?x4219 ?x3695) ?x3723) ?x3697) (* (* 2.0 l_0_3_34) l_0_3_37))))
 (let ((?x4231 (- (- ?x4225 (* (* 2.0 l_0_3_35) l_0_3_38)) (* (* 2.0 l_0_3_36) l_0_3_39))))
 (let ((?x4244 (+ (+ (+ (- (+ (+ (- ?x4231 ?x3726) ?x3699) ?x4235) ?x3729) ?x3701) ?x4240) ?x4243)))
 (= (+ (- ?x4244 ?x3732) ?x3703) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4196 (* l_0_3_51 l_0_3_51)))
 (let ((?x4242 (* 2.0 l_0_3_51)))
 (let ((?x4311 (* ?x4242 l_0_3_58)))
 (let ((?x4194 (* l_0_3_50 l_0_3_50)))
 (let ((?x4239 (* 2.0 l_0_3_50)))
 (let ((?x4308 (* ?x4239 l_0_3_57)))
 (let ((?x4191 (* l_0_3_49 l_0_3_49)))
 (let ((?x4234 (* 2.0 l_0_3_49)))
 (let ((?x4305 (* ?x4234 l_0_3_56)))
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3771 (* ?x3722 l_0_3_28)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3769 (* ?x3719 l_0_3_27)))
 (let ((?x3717 (* 2.0 l_0_3_19)))
 (let ((?x3767 (* ?x3717 l_0_3_26)))
 (let ((?x3764 (* 2.0 l_0_3_13)))
 (let ((?x3765 (* ?x3764 l_0_3_6)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3762 (* ?x3472 l_0_3_5)))
 (let ((?x3770 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3762) ?x3765) ?x3767) ?x3769)))
 (let ((?x3772 (+ ?x3770 ?x3771)))
 (let ((?x4302 (- (- ?x3772 (* (* 2.0 l_0_3_34) l_0_3_41)) (* (* 2.0 l_0_3_35) l_0_3_42))))
 (let ((?x4309 (+ (- (+ (- ?x4302 (* (* 2.0 l_0_3_36) l_0_3_43)) ?x4305) ?x4191) ?x4308)))
 (= (- (+ (- ?x4309 ?x4194) ?x4311) ?x4196) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3811 (* l_0_3_9 l_0_3_9)))
 (let ((?x3809 (* l_0_3_8 l_0_3_8)))
 (let ((?x3807 (* l_0_3_7 l_0_3_7)))
 (let ((?x3732 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4383 (* l_0_3_55 l_0_3_55)))
 (let ((?x4381 (* l_0_3_54 l_0_3_54)))
 (let ((?x4379 (* l_0_3_53 l_0_3_53)))
 (let ((?x4377 (* l_0_3_52 l_0_3_52)))
 (let ((?x3729 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4374 (* l_0_3_40 l_0_3_40)))
 (let ((?x3726 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4371 (* l_0_3_39 l_0_3_39)))
 (let ((?x4369 (* l_0_3_38 l_0_3_38)))
 (let ((?x4367 (* l_0_3_37 l_0_3_37)))
 (let ((?x3805 (* l_0_3_25 l_0_3_25)))
 (let ((?x3803 (* l_0_3_24 l_0_3_24)))
 (let ((?x3801 (* l_0_3_23 l_0_3_23)))
 (let ((?x3793 (* l_0_3_22 l_0_3_22)))
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3723 (* ?x3722 l_0_3_24)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3720 (* ?x3719 l_0_3_23)))
 (let ((?x4361 (- (- (* (- l_0_3_10) l_0_3_10) (* (* 2.0 l_0_3_19) l_0_3_22)) ?x3720)))
 (let ((?x4370 (- (- (+ (+ (+ (+ (- ?x4361 ?x3723) ?x3793) ?x3801) ?x3803) ?x3805) ?x4367) ?x4369)))
 (let ((?x4382 (+ (+ (+ (+ (- (+ (- ?x4370 ?x4371) ?x3726) ?x4374) ?x3729) ?x4377) ?x4379) ?x4381)))
 (= (- (- (- (+ (+ ?x4382 ?x4383) ?x3732) ?x3807) ?x3809) ?x3811) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4469 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x4466 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x4463 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x4460 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x4242 (* 2.0 l_0_3_51)))
 (let ((?x4243 (* ?x4242 l_0_3_54)))
 (let ((?x4239 (* 2.0 l_0_3_50)))
 (let ((?x4240 (* ?x4239 l_0_3_53)))
 (let ((?x4234 (* 2.0 l_0_3_49)))
 (let ((?x4235 (* ?x4234 l_0_3_52)))
 (let ((?x3846 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3843 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3840 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3837 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3722 (* 2.0 l_0_3_21)))
 (let ((?x3771 (* ?x3722 l_0_3_28)))
 (let ((?x3719 (* 2.0 l_0_3_20)))
 (let ((?x3769 (* ?x3719 l_0_3_27)))
 (let ((?x3717 (* 2.0 l_0_3_19)))
 (let ((?x3767 (* ?x3717 l_0_3_26)))
 (let ((?x3764 (* 2.0 l_0_3_13)))
 (let ((?x3834 (* ?x3764 l_0_3_9)))
 (let ((?x3765 (* ?x3764 l_0_3_6)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3832 (* ?x3472 l_0_3_8)))
 (let ((?x3762 (* ?x3472 l_0_3_5)))
 (let ((?x3469 (* 2.0 l_0_3_11)))
 (let ((?x3830 (* ?x3469 l_0_3_7)))
 (let ((?x4433 (+ (- (+ (* (* (- 2.0) l_0_3_10) l_0_3_14) (* ?x3469 l_0_3_4)) ?x3830) ?x3762)))
 (let ((?x4440 (+ (- (- (- (- (+ (- ?x4433 ?x3832) ?x3765) ?x3834) ?x3767) ?x3769) ?x3771) ?x3837)))
 (let ((?x4446 (- (+ (+ (+ ?x4440 ?x3840) ?x3843) ?x3846) (* (* 2.0 l_0_3_37) l_0_3_41))))
 (let ((?x4452 (- (- ?x4446 (* (* 2.0 l_0_3_38) l_0_3_42)) (* (* 2.0 l_0_3_39) l_0_3_43))))
 (let ((?x4458 (- (- (- (- ?x4452 (* (* 2.0 l_0_3_40) l_0_3_44)) ?x4235) ?x4240) ?x4243)))
 (= (+ (+ (+ (+ ?x4458 ?x4460) ?x4463) ?x4466) ?x4469) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4559 (* l_0_3_60 l_0_3_60)))
 (let ((?x4557 (* l_0_3_59 l_0_3_59)))
 (let ((?x4555 (* l_0_3_58 l_0_3_58)))
 (let ((?x4553 (* l_0_3_57 l_0_3_57)))
 (let ((?x4551 (* l_0_3_56 l_0_3_56)))
 (let ((?x4242 (* 2.0 l_0_3_51)))
 (let ((?x4311 (* ?x4242 l_0_3_58)))
 (let ((?x4239 (* 2.0 l_0_3_50)))
 (let ((?x4308 (* ?x4239 l_0_3_57)))
 (let ((?x4234 (* 2.0 l_0_3_49)))
 (let ((?x4305 (* ?x4234 l_0_3_56)))
 (let ((?x4546 (* l_0_3_45 l_0_3_45)))
 (let ((?x4544 (* l_0_3_44 l_0_3_44)))
 (let ((?x4542 (* l_0_3_43 l_0_3_43)))
 (let ((?x4540 (* l_0_3_42 l_0_3_42)))
 (let ((?x4538 (* l_0_3_41 l_0_3_41)))
 (let ((?x3898 (* l_0_3_30 l_0_3_30)))
 (let ((?x3896 (* l_0_3_29 l_0_3_29)))
 (let ((?x3894 (* l_0_3_28 l_0_3_28)))
 (let ((?x3892 (* l_0_3_27 l_0_3_27)))
 (let ((?x3890 (* l_0_3_26 l_0_3_26)))
 (let ((?x3888 (* l_0_3_15 l_0_3_15)))
 (let ((?x3886 (* l_0_3_14 l_0_3_14)))
 (let ((?x3877 (* l_0_3_13 l_0_3_13)))
 (let ((?x3887 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3877) ?x3886)))
 (let ((?x3899 (+ (+ (+ (+ (+ (- ?x3887 ?x3888) ?x3890) ?x3892) ?x3894) ?x3896) ?x3898)))
 (let ((?x4549 (- (- (- (- (- (- (- ?x3899 ?x4538) ?x4540) ?x4542) ?x4544) ?x4546) ?x4305) ?x4308)))
 (= (+ (+ (+ (+ (+ (- ?x4549 ?x4311) ?x4551) ?x4553) ?x4555) ?x4557) ?x4559) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x4596 (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) (* (* 2.0 l_0_3_61) l_0_3_67))))
 (= ?x4596 0.0)))
(assert
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3446 (* ?x3445 l_0_3_17)))
 (let ((?x4612 (- (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x3446) (* (* 2.0 l_0_3_62) l_0_3_67))))
 (= (- ?x4612 (* (* 2.0 l_0_3_63) l_0_3_68)) 0.0)))))
(assert
 (let ((?x4639 (* l_0_3_70 l_0_3_70)))
 (let ((?x4637 (* l_0_3_69 l_0_3_69)))
 (let ((?x4635 (* l_0_3_68 l_0_3_68)))
 (let ((?x4633 (* l_0_3_67 l_0_3_67)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3560 (* ?x3445 l_0_3_22)))
 (let ((?x4005 (* 2.0 l_0_3_1)))
 (let ((?x4007 (* ?x4005 l_0_3_7)))
 (= (- (- (- (- (- ?x4007 ?x3560) ?x4633) ?x4635) ?x4637) ?x4639) 0.0))))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4013 (* ?x3409 l_0_3_52)))
 (let ((?x3445 (* 2.0 l_0_3_16)))
 (let ((?x3594 (* ?x3445 l_0_3_26)))
 (let ((?x4664 (- (- (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x3594) ?x4013) (* (* 2.0 l_0_3_67) l_0_3_71))))
 (let ((?x4670 (- (- ?x4664 (* (* 2.0 l_0_3_68) l_0_3_72)) (* (* 2.0 l_0_3_69) l_0_3_73))))
 (= (- ?x4670 (* (* 2.0 l_0_3_70) l_0_3_74)) 0.0))))))))
(assert
 (let ((?x3620 (* l_0_3_3 l_0_3_3)))
 (let ((?x3618 (* l_0_3_2 l_0_3_2)))
 (let ((?x4711 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x3618) ?x3620)))
 (= ?x4711 0.0)))))
(assert
 (let ((?x3636 (* 2.0 l_0_3_3)))
 (let ((?x3663 (* ?x3636 l_0_3_8)))
 (let ((?x3633 (* 2.0 l_0_3_2)))
 (let ((?x3661 (* ?x3633 l_0_3_7)))
 (let ((?x3480 (* 2.0 l_0_3_18)))
 (let ((?x3659 (* ?x3480 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x3659) ?x3661) ?x3663) 0.0))))))))
(assert
 (let ((?x3811 (* l_0_3_9 l_0_3_9)))
 (let ((?x3809 (* l_0_3_8 l_0_3_8)))
 (let ((?x3807 (* l_0_3_7 l_0_3_7)))
 (let ((?x3805 (* l_0_3_25 l_0_3_25)))
 (let ((?x3803 (* l_0_3_24 l_0_3_24)))
 (let ((?x3801 (* l_0_3_23 l_0_3_23)))
 (let ((?x4729 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x3801) ?x3803)))
 (= (+ (+ (+ (- ?x4729 ?x3805) ?x3807) ?x3809) ?x3811) 0.0)))))))))
(assert
 (let ((?x4383 (* l_0_3_55 l_0_3_55)))
 (let ((?x4381 (* l_0_3_54 l_0_3_54)))
 (let ((?x4379 (* l_0_3_53 l_0_3_53)))
 (let ((?x4377 (* l_0_3_52 l_0_3_52)))
 (let ((?x3846 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3843 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3840 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3837 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3764 (* 2.0 l_0_3_13)))
 (let ((?x3834 (* ?x3764 l_0_3_9)))
 (let ((?x3472 (* 2.0 l_0_3_12)))
 (let ((?x3832 (* ?x3472 l_0_3_8)))
 (let ((?x3469 (* 2.0 l_0_3_11)))
 (let ((?x3830 (* ?x3469 l_0_3_7)))
 (let ((?x4748 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x3830) ?x3832) ?x3834) ?x3837)))
 (let ((?x4755 (- (- (- (- (- (- (- ?x4748 ?x3840) ?x3843) ?x3846) ?x4377) ?x4379) ?x4381) ?x4383)))
 (= ?x4755 0.0))))))))))))))))))
(assert
 (let ((?x4469 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x4466 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x4463 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x4460 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x3898 (* l_0_3_30 l_0_3_30)))
 (let ((?x3896 (* l_0_3_29 l_0_3_29)))
 (let ((?x3894 (* l_0_3_28 l_0_3_28)))
 (let ((?x3892 (* l_0_3_27 l_0_3_27)))
 (let ((?x3890 (* l_0_3_26 l_0_3_26)))
 (let ((?x3888 (* l_0_3_15 l_0_3_15)))
 (let ((?x3886 (* l_0_3_14 l_0_3_14)))
 (let ((?x3877 (* l_0_3_13 l_0_3_13)))
 (let ((?x4780 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3877) ?x3886)))
 (let ((?x4787 (- (- (- (- (- (- (+ ?x4780 ?x3888) ?x3890) ?x3892) ?x3894) ?x3896) ?x3898) ?x4460)))
 (= (- (- (- ?x4787 ?x4463) ?x4466) ?x4469) 0.0))))))))))))))))
(assert
 (= (- (* (- l_0_3_46) l_0_3_46) (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0))
(assert
 (let ((?x4844 (* l_0_3_75 l_0_3_75)))
 (let ((?x4842 (* l_0_3_74 l_0_3_74)))
 (let ((?x4840 (* l_0_3_73 l_0_3_73)))
 (let ((?x4838 (* l_0_3_72 l_0_3_72)))
 (let ((?x4839 (- (- (* (* (- 2.0) l_0_3_46) l_0_3_56) (* l_0_3_71 l_0_3_71)) ?x4838)))
 (= (- (- (- ?x4839 ?x4840) ?x4842) ?x4844) 0.0)))))))
(assert
 (let ((?x4559 (* l_0_3_60 l_0_3_60)))
 (let ((?x4557 (* l_0_3_59 l_0_3_59)))
 (let ((?x4555 (* l_0_3_58 l_0_3_58)))
 (let ((?x4867 (- (- (- (* (- l_0_3_56) l_0_3_56) (* l_0_3_57 l_0_3_57)) ?x4555) ?x4557)))
 (= (- ?x4867 ?x4559) 0.0))))))
(assert
 (= (* (* (- 2.0) l_0_3_61) l_0_3_62) 0.0))
(assert
 (= (- (* (- l_0_3_62) l_0_3_62) (* l_0_3_63 l_0_3_63)) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (= (- (* l_0_4_46 l_0_4_46) (* (* 2.0 l_0_4_61) l_0_4_71)) 0.0))
(assert
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x4940 (* ?x4939 l_0_4_47)))
 (let ((?x4937 (* l_0_4_16 l_0_4_16)))
 (let ((?x4938 (+ (* (- l_0_4_1) l_0_4_1) ?x4937)))
 (let ((?x4947 (- (- (+ ?x4938 ?x4940) (* (* 2.0 l_0_4_62) l_0_4_71)) (* (* 2.0 l_0_4_63) l_0_4_72))))
 (= ?x4947 0.0)))))))
(assert
 (let ((?x4975 (* l_0_4_48 l_0_4_48)))
 (let ((?x4973 (* l_0_4_47 l_0_4_47)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x4971 (* ?x4970 l_0_4_17)))
 (let ((?x4972 (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x4971)))
 (= (+ (+ ?x4972 ?x4973) ?x4975) 0.0)))))))
(assert
 (let ((?x5010 (* 2.0 l_0_4_48)))
 (let ((?x5013 (* ?x5010 l_0_4_57)))
 (let ((?x5011 (* ?x5010 l_0_4_50)))
 (let ((?x5005 (* 2.0 l_0_4_47)))
 (let ((?x5008 (* ?x5005 l_0_4_56)))
 (let ((?x5006 (* ?x5005 l_0_4_49)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x4997 (* ?x4996 l_0_4_27)))
 (let ((?x4993 (* 2.0 l_0_4_17)))
 (let ((?x4994 (* ?x4993 l_0_4_26)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x4991 (* ?x4970 l_0_4_19)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x4989 (* ?x4988 l_0_4_3)))
 (let ((?x4985 (* 2.0 l_0_4_11)))
 (let ((?x4986 (* ?x4985 l_0_4_2)))
 (let ((?x4968 (* (- 2.0) l_0_4_1)))
 (let ((?x4984 (* ?x4968 l_0_4_4)))
 (let ((?x5001 (- (+ (+ (+ (- (- ?x4984 ?x4986) ?x4989) ?x4991) ?x4994) ?x4997) (* (* 2.0 l_0_4_32) l_0_4_41))))
 (let ((?x5012 (+ (- (+ (- ?x5001 (* (* 2.0 l_0_4_33) l_0_4_42)) ?x5006) ?x5008) ?x5011)))
 (= (- ?x5012 ?x5013) 0.0))))))))))))))))))))))
(assert
 (let ((?x5010 (* 2.0 l_0_4_48)))
 (let ((?x5084 (* ?x5010 l_0_4_53)))
 (let ((?x5005 (* 2.0 l_0_4_47)))
 (let ((?x5082 (* ?x5005 l_0_4_52)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x4997 (* ?x4996 l_0_4_27)))
 (let ((?x4993 (* 2.0 l_0_4_17)))
 (let ((?x4994 (* ?x4993 l_0_4_26)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5078 (* ?x4970 l_0_4_22)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x4989 (* ?x4988 l_0_4_3)))
 (let ((?x4985 (* 2.0 l_0_4_11)))
 (let ((?x4986 (* ?x4985 l_0_4_2)))
 (let ((?x5080 (- (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x4986) ?x4989) ?x5078) ?x4994)))
 (= (+ (+ (- ?x5080 ?x4997) ?x5082) ?x5084) 0.0)))))))))))))))))
(assert
 (let ((?x5010 (* 2.0 l_0_4_48)))
 (let ((?x5013 (* ?x5010 l_0_4_57)))
 (let ((?x5005 (* 2.0 l_0_4_47)))
 (let ((?x5008 (* ?x5005 l_0_4_56)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5105 (* ?x4970 l_0_4_26)))
 (let ((?x5106 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x5105)))
 (= (+ (+ ?x5106 ?x5008) ?x5013) 0.0)))))))))
(assert
 (let ((?x5121 (* l_0_4_3 l_0_4_3)))
 (let ((?x5119 (* l_0_4_2 l_0_4_2)))
 (let ((?x5117 (* l_0_4_18 l_0_4_18)))
 (let ((?x5116 (* l_0_4_17 l_0_4_17)))
 (let ((?x5118 (+ ?x5116 ?x5117)))
 (let ((?x5122 (- (- ?x5118 ?x5119) ?x5121)))
 (= ?x5122 0.0))))))))
(assert
 (let ((?x5137 (* 2.0 l_0_4_3)))
 (let ((?x5138 (* ?x5137 l_0_4_5)))
 (let ((?x5134 (* 2.0 l_0_4_2)))
 (let ((?x5135 (* ?x5134 l_0_4_4)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x5132 (* ?x4996 l_0_4_20)))
 (let ((?x5139 (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x5132) ?x5135) ?x5138)))
 (= ?x5139 0.0)))))))))
(assert
 (let ((?x5137 (* 2.0 l_0_4_3)))
 (let ((?x5164 (* ?x5137 l_0_4_8)))
 (let ((?x5134 (* 2.0 l_0_4_2)))
 (let ((?x5162 (* ?x5134 l_0_4_7)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x5160 (* ?x4996 l_0_4_23)))
 (let ((?x4993 (* 2.0 l_0_4_17)))
 (let ((?x5159 (* ?x4993 l_0_4_22)))
 (= (- (- (+ ?x5159 ?x5160) ?x5162) ?x5164) 0.0))))))))))
(assert
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x4997 (* ?x4996 l_0_4_27)))
 (let ((?x4993 (* 2.0 l_0_4_17)))
 (let ((?x4994 (* ?x4993 l_0_4_26)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x4989 (* ?x4988 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x4989) ?x4994) ?x4997) 0.0))))))))
(assert
 (let ((?x5204 (* l_0_4_6 l_0_4_6)))
 (let ((?x5202 (* l_0_4_5 l_0_4_5)))
 (let ((?x5200 (* l_0_4_4 l_0_4_4)))
 (let ((?x5198 (* l_0_4_21 l_0_4_21)))
 (let ((?x5199 (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5198)))
 (= (- (- (- ?x5199 ?x5200) ?x5202) ?x5204) 0.0)))))))
(assert
 (let ((?x5233 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5230 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5227 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5224 (* ?x5223 l_0_4_24)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5221 (* ?x5220 l_0_4_23)))
 (let ((?x5218 (* 2.0 l_0_4_19)))
 (let ((?x5219 (* ?x5218 l_0_4_22)))
 (= (- (- (- (+ (+ ?x5219 ?x5221) ?x5224) ?x5227) ?x5230) ?x5233) 0.0)))))))))))
(assert
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5272 (* ?x5223 l_0_4_28)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5270 (* ?x5220 l_0_4_27)))
 (let ((?x5218 (* 2.0 l_0_4_19)))
 (let ((?x5268 (* ?x5218 l_0_4_26)))
 (let ((?x5265 (* 2.0 l_0_4_13)))
 (let ((?x5266 (* ?x5265 l_0_4_6)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x5263 (* ?x4988 l_0_4_5)))
 (let ((?x5271 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x5263) ?x5266) ?x5268) ?x5270)))
 (let ((?x5273 (+ ?x5271 ?x5272)))
 (= ?x5273 0.0))))))))))))))
(assert
 (let ((?x5312 (* l_0_4_9 l_0_4_9)))
 (let ((?x5310 (* l_0_4_8 l_0_4_8)))
 (let ((?x5308 (* l_0_4_7 l_0_4_7)))
 (let ((?x5306 (* l_0_4_25 l_0_4_25)))
 (let ((?x5304 (* l_0_4_24 l_0_4_24)))
 (let ((?x5302 (* l_0_4_23 l_0_4_23)))
 (let ((?x5305 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x5302) ?x5304)))
 (= (- (- (- (+ ?x5305 ?x5306) ?x5308) ?x5310) ?x5312) 0.0)))))))))
(assert
 (let ((?x5347 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5344 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5341 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5338 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x5265 (* 2.0 l_0_4_13)))
 (let ((?x5335 (* ?x5265 l_0_4_9)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x5333 (* ?x4988 l_0_4_8)))
 (let ((?x4985 (* 2.0 l_0_4_11)))
 (let ((?x5331 (* ?x4985 l_0_4_7)))
 (let ((?x5330 (* (* (- 2.0) l_0_4_10) l_0_4_14)))
 (let ((?x5348 (+ (+ (+ (+ (- (- (- ?x5330 ?x5331) ?x5333) ?x5335) ?x5338) ?x5341) ?x5344) ?x5347)))
 (= ?x5348 0.0))))))))))))))
(assert
 (let ((?x5399 (* l_0_4_30 l_0_4_30)))
 (let ((?x5397 (* l_0_4_29 l_0_4_29)))
 (let ((?x5395 (* l_0_4_28 l_0_4_28)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x5391 (* l_0_4_26 l_0_4_26)))
 (let ((?x5389 (* l_0_4_15 l_0_4_15)))
 (let ((?x5387 (* l_0_4_14 l_0_4_14)))
 (let ((?x5378 (* l_0_4_13 l_0_4_13)))
 (let ((?x5388 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5378) ?x5387)))
 (let ((?x5400 (+ (+ (+ (+ (+ (- ?x5388 ?x5389) ?x5391) ?x5393) ?x5395) ?x5397) ?x5399)))
 (= ?x5400 0.0))))))))))))
(assert
 (let ((?x4923 (* l_0_4_46 l_0_4_46)))
 (let ((?x5417 (* l_0_4_31 l_0_4_31)))
 (let ((?x4937 (* l_0_4_16 l_0_4_16)))
 (let ((?x4938 (+ (* (- l_0_4_1) l_0_4_1) ?x4937)))
 (= (- (- (- ?x4938 ?x5417) ?x4923) (* (* 2.0 l_0_4_61) l_0_4_64)) 0.0))))))
(assert
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x4940 (* ?x4939 l_0_4_47)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x4971 (* ?x4970 l_0_4_17)))
 (let ((?x4972 (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x4971)))
 (let ((?x5451 (- (- (- ?x4972 (* (* 2.0 l_0_4_31) l_0_4_32)) ?x4940) (* (* 2.0 l_0_4_62) l_0_4_64))))
 (= (- ?x5451 (* (* 2.0 l_0_4_63) l_0_4_65)) 0.0))))))))
(assert
 (let ((?x5491 (* l_0_4_66 l_0_4_66)))
 (let ((?x5489 (* l_0_4_65 l_0_4_65)))
 (let ((?x5487 (* l_0_4_64 l_0_4_64)))
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x5485 (* ?x4939 l_0_4_49)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x4991 (* ?x4970 l_0_4_19)))
 (let ((?x4968 (* (- 2.0) l_0_4_1)))
 (let ((?x4984 (* ?x4968 l_0_4_4)))
 (let ((?x5488 (- (- (- (+ ?x4984 ?x4991) (* (* 2.0 l_0_4_31) l_0_4_34)) ?x5485) ?x5487)))
 (= (- (- ?x5488 ?x5489) ?x5491) 0.0))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x5526 (* ?x4939 l_0_4_52)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5078 (* ?x4970 l_0_4_22)))
 (let ((?x4991 (* ?x4970 l_0_4_19)))
 (let ((?x5518 (* 2.0 l_0_4_1)))
 (let ((?x5520 (* ?x5518 l_0_4_7)))
 (let ((?x5525 (- (+ (- (- (* ?x5518 l_0_4_4) ?x5520) ?x4991) ?x5078) (* (* 2.0 l_0_4_31) l_0_4_37))))
 (let ((?x5533 (- (- (- ?x5525 ?x5526) (* (* 2.0 l_0_4_64) l_0_4_67)) (* (* 2.0 l_0_4_65) l_0_4_68))))
 (= (- ?x5533 (* (* 2.0 l_0_4_66) l_0_4_69)) 0.0)))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x5580 (* ?x4939 l_0_4_56)))
 (let ((?x5485 (* ?x4939 l_0_4_49)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5105 (* ?x4970 l_0_4_26)))
 (let ((?x5106 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x5105)))
 (let ((?x5583 (- (- (+ (- ?x5106 (* (* 2.0 l_0_4_31) l_0_4_41)) ?x5485) ?x5580) (* (* 2.0 l_0_4_64) l_0_4_71))))
 (let ((?x5587 (- (- ?x5583 (* (* 2.0 l_0_4_65) l_0_4_72)) (* (* 2.0 l_0_4_66) l_0_4_73))))
 (= ?x5587 0.0))))))))))
(assert
 (let ((?x4975 (* l_0_4_48 l_0_4_48)))
 (let ((?x4973 (* l_0_4_47 l_0_4_47)))
 (let ((?x5627 (* l_0_4_33 l_0_4_33)))
 (let ((?x5625 (* l_0_4_32 l_0_4_32)))
 (let ((?x5121 (* l_0_4_3 l_0_4_3)))
 (let ((?x5119 (* l_0_4_2 l_0_4_2)))
 (let ((?x5117 (* l_0_4_18 l_0_4_18)))
 (let ((?x5116 (* l_0_4_17 l_0_4_17)))
 (let ((?x5118 (+ ?x5116 ?x5117)))
 (let ((?x5122 (- (- ?x5118 ?x5119) ?x5121)))
 (= (- (- (- (- ?x5122 ?x5625) ?x5627) ?x4973) ?x4975) 0.0))))))))))))
(assert
 (let ((?x5010 (* 2.0 l_0_4_48)))
 (let ((?x5011 (* ?x5010 l_0_4_50)))
 (let ((?x5005 (* 2.0 l_0_4_47)))
 (let ((?x5006 (* ?x5005 l_0_4_49)))
 (let ((?x5137 (* 2.0 l_0_4_3)))
 (let ((?x5138 (* ?x5137 l_0_4_5)))
 (let ((?x5134 (* 2.0 l_0_4_2)))
 (let ((?x5135 (* ?x5134 l_0_4_4)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x5132 (* ?x4996 l_0_4_20)))
 (let ((?x5139 (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x5132) ?x5135) ?x5138)))
 (let ((?x5651 (- (- ?x5139 (* (* 2.0 l_0_4_32) l_0_4_34)) (* (* 2.0 l_0_4_33) l_0_4_35))))
 (= (- (- ?x5651 ?x5006) ?x5011) 0.0))))))))))))))
(assert
 (let ((?x5010 (* 2.0 l_0_4_48)))
 (let ((?x5084 (* ?x5010 l_0_4_53)))
 (let ((?x5005 (* 2.0 l_0_4_47)))
 (let ((?x5082 (* ?x5005 l_0_4_52)))
 (let ((?x5137 (* 2.0 l_0_4_3)))
 (let ((?x5164 (* ?x5137 l_0_4_8)))
 (let ((?x5138 (* ?x5137 l_0_4_5)))
 (let ((?x5134 (* 2.0 l_0_4_2)))
 (let ((?x5162 (* ?x5134 l_0_4_7)))
 (let ((?x5135 (* ?x5134 l_0_4_4)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x5160 (* ?x4996 l_0_4_23)))
 (let ((?x5132 (* ?x4996 l_0_4_20)))
 (let ((?x4993 (* 2.0 l_0_4_17)))
 (let ((?x5159 (* ?x4993 l_0_4_22)))
 (let ((?x5682 (+ (+ (- (+ (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x5159) ?x5132) ?x5160) ?x5135)))
 (let ((?x5687 (- (- (+ (- ?x5682 ?x5162) ?x5138) ?x5164) (* (* 2.0 l_0_4_32) l_0_4_37))))
 (= (- (- (- ?x5687 (* (* 2.0 l_0_4_33) l_0_4_38)) ?x5082) ?x5084) 0.0)))))))))))))))))))
(assert
 (let ((?x5204 (* l_0_4_6 l_0_4_6)))
 (let ((?x5739 (* l_0_4_51 l_0_4_51)))
 (let ((?x5737 (* l_0_4_50 l_0_4_50)))
 (let ((?x5202 (* l_0_4_5 l_0_4_5)))
 (let ((?x5734 (* l_0_4_49 l_0_4_49)))
 (let ((?x5200 (* l_0_4_4 l_0_4_4)))
 (let ((?x5731 (* l_0_4_36 l_0_4_36)))
 (let ((?x5729 (* l_0_4_35 l_0_4_35)))
 (let ((?x5727 (* l_0_4_34 l_0_4_34)))
 (let ((?x5198 (* l_0_4_21 l_0_4_21)))
 (let ((?x5199 (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5198)))
 (let ((?x5738 (- (- (- (- (- (- (- ?x5199 ?x5727) ?x5729) ?x5731) ?x5200) ?x5734) ?x5202) ?x5737)))
 (= (- (- ?x5738 ?x5739) ?x5204) 0.0))))))))))))))
(assert
 (let ((?x5204 (* l_0_4_6 l_0_4_6)))
 (let ((?x5233 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5792 (* 2.0 l_0_4_51)))
 (let ((?x5793 (* ?x5792 l_0_4_54)))
 (let ((?x5789 (* 2.0 l_0_4_50)))
 (let ((?x5790 (* ?x5789 l_0_4_53)))
 (let ((?x5202 (* l_0_4_5 l_0_4_5)))
 (let ((?x5230 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5784 (* 2.0 l_0_4_49)))
 (let ((?x5785 (* ?x5784 l_0_4_52)))
 (let ((?x5200 (* l_0_4_4 l_0_4_4)))
 (let ((?x5227 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5198 (* l_0_4_21 l_0_4_21)))
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5224 (* ?x5223 l_0_4_24)))
 (let ((?x5196 (* l_0_4_20 l_0_4_20)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5221 (* ?x5220 l_0_4_23)))
 (let ((?x5769 (+ (- (* (* 2.0 l_0_4_19) l_0_4_22) (* l_0_4_19 l_0_4_19)) ?x5221)))
 (let ((?x5775 (- (- (+ (- ?x5769 ?x5196) ?x5224) ?x5198) (* (* 2.0 l_0_4_34) l_0_4_37))))
 (let ((?x5781 (- (- ?x5775 (* (* 2.0 l_0_4_35) l_0_4_38)) (* (* 2.0 l_0_4_36) l_0_4_39))))
 (let ((?x5794 (- (- (+ (- (- (+ (- ?x5781 ?x5227) ?x5200) ?x5785) ?x5230) ?x5202) ?x5790) ?x5793)))
 (= (+ (- ?x5794 ?x5233) ?x5204) 0.0))))))))))))))))))))))))
(assert
 (let ((?x5739 (* l_0_4_51 l_0_4_51)))
 (let ((?x5792 (* 2.0 l_0_4_51)))
 (let ((?x5870 (* ?x5792 l_0_4_58)))
 (let ((?x5737 (* l_0_4_50 l_0_4_50)))
 (let ((?x5789 (* 2.0 l_0_4_50)))
 (let ((?x5867 (* ?x5789 l_0_4_57)))
 (let ((?x5734 (* l_0_4_49 l_0_4_49)))
 (let ((?x5784 (* 2.0 l_0_4_49)))
 (let ((?x5864 (* ?x5784 l_0_4_56)))
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5272 (* ?x5223 l_0_4_28)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5270 (* ?x5220 l_0_4_27)))
 (let ((?x5218 (* 2.0 l_0_4_19)))
 (let ((?x5268 (* ?x5218 l_0_4_26)))
 (let ((?x5265 (* 2.0 l_0_4_13)))
 (let ((?x5266 (* ?x5265 l_0_4_6)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x5263 (* ?x4988 l_0_4_5)))
 (let ((?x5271 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x5263) ?x5266) ?x5268) ?x5270)))
 (let ((?x5273 (+ ?x5271 ?x5272)))
 (let ((?x5861 (- (- ?x5273 (* (* 2.0 l_0_4_34) l_0_4_41)) (* (* 2.0 l_0_4_35) l_0_4_42))))
 (let ((?x5868 (- (+ (- (- ?x5861 (* (* 2.0 l_0_4_36) l_0_4_43)) ?x5864) ?x5734) ?x5867)))
 (= (+ (- (+ ?x5868 ?x5737) ?x5870) ?x5739) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5312 (* l_0_4_9 l_0_4_9)))
 (let ((?x5310 (* l_0_4_8 l_0_4_8)))
 (let ((?x5308 (* l_0_4_7 l_0_4_7)))
 (let ((?x5233 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5941 (* l_0_4_55 l_0_4_55)))
 (let ((?x5939 (* l_0_4_54 l_0_4_54)))
 (let ((?x5937 (* l_0_4_53 l_0_4_53)))
 (let ((?x5935 (* l_0_4_52 l_0_4_52)))
 (let ((?x5230 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5932 (* l_0_4_40 l_0_4_40)))
 (let ((?x5227 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5929 (* l_0_4_39 l_0_4_39)))
 (let ((?x5927 (* l_0_4_38 l_0_4_38)))
 (let ((?x5925 (* l_0_4_37 l_0_4_37)))
 (let ((?x5306 (* l_0_4_25 l_0_4_25)))
 (let ((?x5304 (* l_0_4_24 l_0_4_24)))
 (let ((?x5302 (* l_0_4_23 l_0_4_23)))
 (let ((?x5294 (* l_0_4_22 l_0_4_22)))
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5224 (* ?x5223 l_0_4_24)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5221 (* ?x5220 l_0_4_23)))
 (let ((?x5919 (- (- (* (- l_0_4_10) l_0_4_10) (* (* 2.0 l_0_4_19) l_0_4_22)) ?x5221)))
 (let ((?x5928 (- (- (+ (+ (+ (+ (- ?x5919 ?x5224) ?x5294) ?x5302) ?x5304) ?x5306) ?x5925) ?x5927)))
 (let ((?x5940 (- (- (- (+ (- (+ (- ?x5928 ?x5929) ?x5227) ?x5932) ?x5230) ?x5935) ?x5937) ?x5939)))
 (= (- (- (- (+ (- ?x5940 ?x5941) ?x5233) ?x5308) ?x5310) ?x5312) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6036 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x6033 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x6030 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x6027 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5792 (* 2.0 l_0_4_51)))
 (let ((?x5793 (* ?x5792 l_0_4_54)))
 (let ((?x5789 (* 2.0 l_0_4_50)))
 (let ((?x5790 (* ?x5789 l_0_4_53)))
 (let ((?x5784 (* 2.0 l_0_4_49)))
 (let ((?x5785 (* ?x5784 l_0_4_52)))
 (let ((?x5347 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5344 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5341 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5338 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x5223 (* 2.0 l_0_4_21)))
 (let ((?x5272 (* ?x5223 l_0_4_28)))
 (let ((?x5220 (* 2.0 l_0_4_20)))
 (let ((?x5270 (* ?x5220 l_0_4_27)))
 (let ((?x5218 (* 2.0 l_0_4_19)))
 (let ((?x5268 (* ?x5218 l_0_4_26)))
 (let ((?x5265 (* 2.0 l_0_4_13)))
 (let ((?x5335 (* ?x5265 l_0_4_9)))
 (let ((?x5266 (* ?x5265 l_0_4_6)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x5333 (* ?x4988 l_0_4_8)))
 (let ((?x5263 (* ?x4988 l_0_4_5)))
 (let ((?x4985 (* 2.0 l_0_4_11)))
 (let ((?x5331 (* ?x4985 l_0_4_7)))
 (let ((?x6000 (+ (- (+ (* (* (- 2.0) l_0_4_10) l_0_4_14) (* ?x4985 l_0_4_4)) ?x5331) ?x5263)))
 (let ((?x6007 (+ (- (- (- (- (+ (- ?x6000 ?x5333) ?x5266) ?x5335) ?x5268) ?x5270) ?x5272) ?x5338)))
 (let ((?x6013 (- (+ (+ (+ ?x6007 ?x5341) ?x5344) ?x5347) (* (* 2.0 l_0_4_37) l_0_4_41))))
 (let ((?x6019 (- (- ?x6013 (* (* 2.0 l_0_4_38) l_0_4_42)) (* (* 2.0 l_0_4_39) l_0_4_43))))
 (let ((?x6025 (+ (+ (+ (- ?x6019 (* (* 2.0 l_0_4_40) l_0_4_44)) ?x5785) ?x5790) ?x5793)))
 (= (- (- (- (- ?x6025 ?x6027) ?x6030) ?x6033) ?x6036) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6133 (* l_0_4_60 l_0_4_60)))
 (let ((?x6131 (* l_0_4_59 l_0_4_59)))
 (let ((?x6129 (* l_0_4_58 l_0_4_58)))
 (let ((?x6127 (* l_0_4_57 l_0_4_57)))
 (let ((?x6125 (* l_0_4_56 l_0_4_56)))
 (let ((?x5792 (* 2.0 l_0_4_51)))
 (let ((?x5870 (* ?x5792 l_0_4_58)))
 (let ((?x5789 (* 2.0 l_0_4_50)))
 (let ((?x5867 (* ?x5789 l_0_4_57)))
 (let ((?x5784 (* 2.0 l_0_4_49)))
 (let ((?x5864 (* ?x5784 l_0_4_56)))
 (let ((?x6120 (* l_0_4_45 l_0_4_45)))
 (let ((?x6118 (* l_0_4_44 l_0_4_44)))
 (let ((?x6116 (* l_0_4_43 l_0_4_43)))
 (let ((?x6114 (* l_0_4_42 l_0_4_42)))
 (let ((?x6112 (* l_0_4_41 l_0_4_41)))
 (let ((?x5399 (* l_0_4_30 l_0_4_30)))
 (let ((?x5397 (* l_0_4_29 l_0_4_29)))
 (let ((?x5395 (* l_0_4_28 l_0_4_28)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x5391 (* l_0_4_26 l_0_4_26)))
 (let ((?x5389 (* l_0_4_15 l_0_4_15)))
 (let ((?x5387 (* l_0_4_14 l_0_4_14)))
 (let ((?x5378 (* l_0_4_13 l_0_4_13)))
 (let ((?x5388 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5378) ?x5387)))
 (let ((?x5400 (+ (+ (+ (+ (+ (- ?x5388 ?x5389) ?x5391) ?x5393) ?x5395) ?x5397) ?x5399)))
 (let ((?x6123 (+ (+ (- (- (- (- (- ?x5400 ?x6112) ?x6114) ?x6116) ?x6118) ?x6120) ?x5864) ?x5867)))
 (= (- (- (- (- (- (+ ?x6123 ?x5870) ?x6125) ?x6127) ?x6129) ?x6131) ?x6133) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6172 (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_16 l_0_4_16)) (* (* 2.0 l_0_4_61) l_0_4_67))))
 (= ?x6172 0.0)))
(assert
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x4971 (* ?x4970 l_0_4_17)))
 (let ((?x6187 (- (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x4971) (* (* 2.0 l_0_4_62) l_0_4_67))))
 (= (- ?x6187 (* (* 2.0 l_0_4_63) l_0_4_68)) 0.0)))))
(assert
 (let ((?x6214 (* l_0_4_70 l_0_4_70)))
 (let ((?x6212 (* l_0_4_69 l_0_4_69)))
 (let ((?x6210 (* l_0_4_68 l_0_4_68)))
 (let ((?x6208 (* l_0_4_67 l_0_4_67)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5078 (* ?x4970 l_0_4_22)))
 (let ((?x5518 (* 2.0 l_0_4_1)))
 (let ((?x5520 (* ?x5518 l_0_4_7)))
 (= (- (- (- (- (- ?x5520 ?x5078) ?x6208) ?x6210) ?x6212) ?x6214) 0.0))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_4_46)))
 (let ((?x5526 (* ?x4939 l_0_4_52)))
 (let ((?x4970 (* 2.0 l_0_4_16)))
 (let ((?x5105 (* ?x4970 l_0_4_26)))
 (let ((?x6239 (- (+ (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x5105) ?x5526) (* (* 2.0 l_0_4_67) l_0_4_71))))
 (let ((?x6245 (- (- ?x6239 (* (* 2.0 l_0_4_68) l_0_4_72)) (* (* 2.0 l_0_4_69) l_0_4_73))))
 (= (- ?x6245 (* (* 2.0 l_0_4_70) l_0_4_74)) 0.0))))))))
(assert
 (let ((?x5121 (* l_0_4_3 l_0_4_3)))
 (let ((?x5119 (* l_0_4_2 l_0_4_2)))
 (let ((?x6283 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5119) ?x5121)))
 (= ?x6283 0.0)))))
(assert
 (let ((?x5137 (* 2.0 l_0_4_3)))
 (let ((?x5164 (* ?x5137 l_0_4_8)))
 (let ((?x5134 (* 2.0 l_0_4_2)))
 (let ((?x5162 (* ?x5134 l_0_4_7)))
 (let ((?x4996 (* 2.0 l_0_4_18)))
 (let ((?x5160 (* ?x4996 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x5160) ?x5162) ?x5164) 0.0))))))))
(assert
 (let ((?x5312 (* l_0_4_9 l_0_4_9)))
 (let ((?x5310 (* l_0_4_8 l_0_4_8)))
 (let ((?x5308 (* l_0_4_7 l_0_4_7)))
 (let ((?x5306 (* l_0_4_25 l_0_4_25)))
 (let ((?x5304 (* l_0_4_24 l_0_4_24)))
 (let ((?x5302 (* l_0_4_23 l_0_4_23)))
 (let ((?x6297 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x5302) ?x5304)))
 (= (+ (+ (+ (- ?x6297 ?x5306) ?x5308) ?x5310) ?x5312) 0.0)))))))))
(assert
 (let ((?x5941 (* l_0_4_55 l_0_4_55)))
 (let ((?x5939 (* l_0_4_54 l_0_4_54)))
 (let ((?x5937 (* l_0_4_53 l_0_4_53)))
 (let ((?x5935 (* l_0_4_52 l_0_4_52)))
 (let ((?x5347 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5344 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5341 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5338 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x5265 (* 2.0 l_0_4_13)))
 (let ((?x5335 (* ?x5265 l_0_4_9)))
 (let ((?x4988 (* 2.0 l_0_4_12)))
 (let ((?x5333 (* ?x4988 l_0_4_8)))
 (let ((?x4985 (* 2.0 l_0_4_11)))
 (let ((?x5331 (* ?x4985 l_0_4_7)))
 (let ((?x6316 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x5331) ?x5333) ?x5335) ?x5338)))
 (let ((?x6323 (+ (+ (+ (+ (- (- (- ?x6316 ?x5341) ?x5344) ?x5347) ?x5935) ?x5937) ?x5939) ?x5941)))
 (= ?x6323 0.0))))))))))))))))))
(assert
 (let ((?x6036 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x6033 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x6030 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x6027 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5399 (* l_0_4_30 l_0_4_30)))
 (let ((?x5397 (* l_0_4_29 l_0_4_29)))
 (let ((?x5395 (* l_0_4_28 l_0_4_28)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x5391 (* l_0_4_26 l_0_4_26)))
 (let ((?x5389 (* l_0_4_15 l_0_4_15)))
 (let ((?x5387 (* l_0_4_14 l_0_4_14)))
 (let ((?x5378 (* l_0_4_13 l_0_4_13)))
 (let ((?x6341 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5378) ?x5387)))
 (let ((?x6348 (+ (- (- (- (- (- (+ ?x6341 ?x5389) ?x5391) ?x5393) ?x5395) ?x5397) ?x5399) ?x6027)))
 (= (+ (+ (+ ?x6348 ?x6030) ?x6033) ?x6036) 0.0))))))))))))))))
(assert
 (let ((?x6373 (* l_0_4_75 l_0_4_75)))
 (let ((?x6371 (* l_0_4_74 l_0_4_74)))
 (let ((?x6369 (* l_0_4_73 l_0_4_73)))
 (let ((?x6367 (* l_0_4_72 l_0_4_72)))
 (let ((?x6368 (- (- (* (* 2.0 l_0_4_46) l_0_4_56) (* l_0_4_71 l_0_4_71)) ?x6367)))
 (= (- (- (- ?x6368 ?x6369) ?x6371) ?x6373) 0.0)))))))
(assert
 (let ((?x6133 (* l_0_4_60 l_0_4_60)))
 (let ((?x6131 (* l_0_4_59 l_0_4_59)))
 (let ((?x6129 (* l_0_4_58 l_0_4_58)))
 (let ((?x6393 (+ (+ (+ (* l_0_4_56 l_0_4_56) (* l_0_4_57 l_0_4_57)) ?x6129) ?x6131)))
 (= (+ ?x6393 ?x6133) 0.0))))))
(assert
 (= (* (- l_0_4_61) l_0_4_61) 0.0))
(assert
 (= (* (* (- 2.0) l_0_4_61) l_0_4_62) 0.0))
(assert
 (= (- (* (- l_0_4_62) l_0_4_62) (* l_0_4_63 l_0_4_63)) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (let ((?x6453 (- (- (* l_0_5_46 l_0_5_46) (* (* 2.0 l_0_5_61) l_0_5_71)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= ?x6453 0.0)))
(assert
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x6473 (* ?x6472 l_0_5_47)))
 (let ((?x6470 (* l_0_5_16 l_0_5_16)))
 (let ((?x6471 (+ (* (- l_0_5_1) l_0_5_1) ?x6470)))
 (let ((?x6480 (- (- (+ ?x6471 ?x6473) (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (let ((?x6486 (- (- ?x6480 (* (* 2.0 l_0_5_77) l_0_5_86)) (* (* 2.0 l_0_5_78) l_0_5_87))))
 (= ?x6486 0.0))))))))
(assert
 (let ((?x6526 (* l_0_5_48 l_0_5_48)))
 (let ((?x6524 (* l_0_5_47 l_0_5_47)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6522 (* ?x6521 l_0_5_17)))
 (let ((?x6523 (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x6522)))
 (= (+ (+ ?x6523 ?x6524) ?x6526) 0.0)))))))
(assert
 (let ((?x6561 (* 2.0 l_0_5_48)))
 (let ((?x6564 (* ?x6561 l_0_5_57)))
 (let ((?x6562 (* ?x6561 l_0_5_50)))
 (let ((?x6556 (* 2.0 l_0_5_47)))
 (let ((?x6559 (* ?x6556 l_0_5_56)))
 (let ((?x6557 (* ?x6556 l_0_5_49)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6548 (* ?x6547 l_0_5_27)))
 (let ((?x6544 (* 2.0 l_0_5_17)))
 (let ((?x6545 (* ?x6544 l_0_5_26)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6542 (* ?x6521 l_0_5_19)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6540 (* ?x6539 l_0_5_3)))
 (let ((?x6536 (* 2.0 l_0_5_11)))
 (let ((?x6537 (* ?x6536 l_0_5_2)))
 (let ((?x6519 (* (- 2.0) l_0_5_1)))
 (let ((?x6535 (* ?x6519 l_0_5_4)))
 (let ((?x6552 (- (+ (+ (+ (- (- ?x6535 ?x6537) ?x6540) ?x6542) ?x6545) ?x6548) (* (* 2.0 l_0_5_32) l_0_5_41))))
 (let ((?x6563 (+ (- (+ (- ?x6552 (* (* 2.0 l_0_5_33) l_0_5_42)) ?x6557) ?x6559) ?x6562)))
 (= (- ?x6563 ?x6564) 0.0))))))))))))))))))))))
(assert
 (let ((?x6561 (* 2.0 l_0_5_48)))
 (let ((?x6635 (* ?x6561 l_0_5_53)))
 (let ((?x6556 (* 2.0 l_0_5_47)))
 (let ((?x6633 (* ?x6556 l_0_5_52)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6548 (* ?x6547 l_0_5_27)))
 (let ((?x6544 (* 2.0 l_0_5_17)))
 (let ((?x6545 (* ?x6544 l_0_5_26)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6629 (* ?x6521 l_0_5_22)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6540 (* ?x6539 l_0_5_3)))
 (let ((?x6536 (* 2.0 l_0_5_11)))
 (let ((?x6537 (* ?x6536 l_0_5_2)))
 (let ((?x6631 (- (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x6537) ?x6540) ?x6629) ?x6545)))
 (= (+ (+ (- ?x6631 ?x6548) ?x6633) ?x6635) 0.0)))))))))))))))))
(assert
 (let ((?x6561 (* 2.0 l_0_5_48)))
 (let ((?x6564 (* ?x6561 l_0_5_57)))
 (let ((?x6556 (* 2.0 l_0_5_47)))
 (let ((?x6559 (* ?x6556 l_0_5_56)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6656 (* ?x6521 l_0_5_26)))
 (let ((?x6657 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x6656)))
 (= (+ (+ ?x6657 ?x6559) ?x6564) 0.0)))))))))
(assert
 (let ((?x6672 (* l_0_5_3 l_0_5_3)))
 (let ((?x6670 (* l_0_5_2 l_0_5_2)))
 (let ((?x6668 (* l_0_5_18 l_0_5_18)))
 (let ((?x6667 (* l_0_5_17 l_0_5_17)))
 (let ((?x6669 (+ ?x6667 ?x6668)))
 (let ((?x6673 (- (- ?x6669 ?x6670) ?x6672)))
 (= ?x6673 0.0))))))))
(assert
 (let ((?x6688 (* 2.0 l_0_5_3)))
 (let ((?x6689 (* ?x6688 l_0_5_5)))
 (let ((?x6685 (* 2.0 l_0_5_2)))
 (let ((?x6686 (* ?x6685 l_0_5_4)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6683 (* ?x6547 l_0_5_20)))
 (let ((?x6690 (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x6683) ?x6686) ?x6689)))
 (= ?x6690 0.0)))))))))
(assert
 (let ((?x6688 (* 2.0 l_0_5_3)))
 (let ((?x6715 (* ?x6688 l_0_5_8)))
 (let ((?x6685 (* 2.0 l_0_5_2)))
 (let ((?x6713 (* ?x6685 l_0_5_7)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6711 (* ?x6547 l_0_5_23)))
 (let ((?x6544 (* 2.0 l_0_5_17)))
 (let ((?x6710 (* ?x6544 l_0_5_22)))
 (= (- (- (+ ?x6710 ?x6711) ?x6713) ?x6715) 0.0))))))))))
(assert
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6548 (* ?x6547 l_0_5_27)))
 (let ((?x6544 (* 2.0 l_0_5_17)))
 (let ((?x6545 (* ?x6544 l_0_5_26)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6540 (* ?x6539 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x6540) ?x6545) ?x6548) 0.0))))))))
(assert
 (let ((?x6755 (* l_0_5_6 l_0_5_6)))
 (let ((?x6753 (* l_0_5_5 l_0_5_5)))
 (let ((?x6751 (* l_0_5_4 l_0_5_4)))
 (let ((?x6749 (* l_0_5_21 l_0_5_21)))
 (let ((?x6750 (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6749)))
 (= (- (- (- ?x6750 ?x6751) ?x6753) ?x6755) 0.0)))))))
(assert
 (let ((?x6784 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6781 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6778 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6775 (* ?x6774 l_0_5_24)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6772 (* ?x6771 l_0_5_23)))
 (let ((?x6769 (* 2.0 l_0_5_19)))
 (let ((?x6770 (* ?x6769 l_0_5_22)))
 (= (- (- (- (+ (+ ?x6770 ?x6772) ?x6775) ?x6778) ?x6781) ?x6784) 0.0)))))))))))
(assert
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6823 (* ?x6774 l_0_5_28)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6821 (* ?x6771 l_0_5_27)))
 (let ((?x6769 (* 2.0 l_0_5_19)))
 (let ((?x6819 (* ?x6769 l_0_5_26)))
 (let ((?x6816 (* 2.0 l_0_5_13)))
 (let ((?x6817 (* ?x6816 l_0_5_6)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6814 (* ?x6539 l_0_5_5)))
 (let ((?x6822 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x6814) ?x6817) ?x6819) ?x6821)))
 (let ((?x6824 (+ ?x6822 ?x6823)))
 (= ?x6824 0.0))))))))))))))
(assert
 (let ((?x6863 (* l_0_5_9 l_0_5_9)))
 (let ((?x6861 (* l_0_5_8 l_0_5_8)))
 (let ((?x6859 (* l_0_5_7 l_0_5_7)))
 (let ((?x6857 (* l_0_5_25 l_0_5_25)))
 (let ((?x6855 (* l_0_5_24 l_0_5_24)))
 (let ((?x6853 (* l_0_5_23 l_0_5_23)))
 (let ((?x6856 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6853) ?x6855)))
 (= (- (- (- (+ ?x6856 ?x6857) ?x6859) ?x6861) ?x6863) 0.0)))))))))
(assert
 (let ((?x6898 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6895 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6892 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6889 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6816 (* 2.0 l_0_5_13)))
 (let ((?x6886 (* ?x6816 l_0_5_9)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6884 (* ?x6539 l_0_5_8)))
 (let ((?x6536 (* 2.0 l_0_5_11)))
 (let ((?x6882 (* ?x6536 l_0_5_7)))
 (let ((?x6881 (* (* (- 2.0) l_0_5_10) l_0_5_14)))
 (let ((?x6899 (+ (+ (+ (+ (- (- (- ?x6881 ?x6882) ?x6884) ?x6886) ?x6889) ?x6892) ?x6895) ?x6898)))
 (= ?x6899 0.0))))))))))))))
(assert
 (let ((?x6950 (* l_0_5_30 l_0_5_30)))
 (let ((?x6948 (* l_0_5_29 l_0_5_29)))
 (let ((?x6946 (* l_0_5_28 l_0_5_28)))
 (let ((?x6944 (* l_0_5_27 l_0_5_27)))
 (let ((?x6942 (* l_0_5_26 l_0_5_26)))
 (let ((?x6940 (* l_0_5_15 l_0_5_15)))
 (let ((?x6938 (* l_0_5_14 l_0_5_14)))
 (let ((?x6929 (* l_0_5_13 l_0_5_13)))
 (let ((?x6939 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6929) ?x6938)))
 (let ((?x6951 (+ (+ (+ (+ (+ (- ?x6939 ?x6940) ?x6942) ?x6944) ?x6946) ?x6948) ?x6950)))
 (= ?x6951 0.0))))))))))))
(assert
 (let ((?x6447 (* l_0_5_46 l_0_5_46)))
 (let ((?x6968 (* l_0_5_31 l_0_5_31)))
 (let ((?x6470 (* l_0_5_16 l_0_5_16)))
 (let ((?x6471 (+ (* (- l_0_5_1) l_0_5_1) ?x6470)))
 (let ((?x6981 (- (- (- (- ?x6471 ?x6968) ?x6447) (* (* 2.0 l_0_5_61) l_0_5_64)) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= ?x6981 0.0)))))))
(assert
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x6473 (* ?x6472 l_0_5_47)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6522 (* ?x6521 l_0_5_17)))
 (let ((?x6523 (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x6522)))
 (let ((?x7010 (- (- (- ?x6523 (* (* 2.0 l_0_5_31) l_0_5_32)) ?x6473) (* (* 2.0 l_0_5_62) l_0_5_64))))
 (let ((?x7014 (- (- ?x7010 (* (* 2.0 l_0_5_63) l_0_5_65)) (* (* 2.0 l_0_5_77) l_0_5_79))))
 (= (- ?x7014 (* (* 2.0 l_0_5_78) l_0_5_80)) 0.0)))))))))
(assert
 (let ((?x7072 (* l_0_5_81 l_0_5_81)))
 (let ((?x7070 (* l_0_5_80 l_0_5_80)))
 (let ((?x7068 (* l_0_5_79 l_0_5_79)))
 (let ((?x7066 (* l_0_5_66 l_0_5_66)))
 (let ((?x7064 (* l_0_5_65 l_0_5_65)))
 (let ((?x7062 (* l_0_5_64 l_0_5_64)))
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x7060 (* ?x6472 l_0_5_49)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6542 (* ?x6521 l_0_5_19)))
 (let ((?x6519 (* (- 2.0) l_0_5_1)))
 (let ((?x6535 (* ?x6519 l_0_5_4)))
 (let ((?x7063 (- (- (- (+ ?x6535 ?x6542) (* (* 2.0 l_0_5_31) l_0_5_34)) ?x7060) ?x7062)))
 (= (- (- (- (- (- ?x7063 ?x7064) ?x7066) ?x7068) ?x7070) ?x7072) 0.0)))))))))))))))
(assert
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x7116 (* ?x6472 l_0_5_52)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6629 (* ?x6521 l_0_5_22)))
 (let ((?x6542 (* ?x6521 l_0_5_19)))
 (let ((?x7108 (* 2.0 l_0_5_1)))
 (let ((?x7110 (* ?x7108 l_0_5_7)))
 (let ((?x7115 (- (+ (- (- (* ?x7108 l_0_5_4) ?x7110) ?x6542) ?x6629) (* (* 2.0 l_0_5_31) l_0_5_37))))
 (let ((?x7123 (- (- (- ?x7115 ?x7116) (* (* 2.0 l_0_5_64) l_0_5_67)) (* (* 2.0 l_0_5_65) l_0_5_68))))
 (let ((?x7129 (- (- ?x7123 (* (* 2.0 l_0_5_66) l_0_5_69)) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x7135 (- (- ?x7129 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x7135 0.0)))))))))))))
(assert
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x7197 (* ?x6472 l_0_5_56)))
 (let ((?x7060 (* ?x6472 l_0_5_49)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6656 (* ?x6521 l_0_5_26)))
 (let ((?x6657 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x6656)))
 (let ((?x7200 (- (- (+ (- ?x6657 (* (* 2.0 l_0_5_31) l_0_5_41)) ?x7060) ?x7197) (* (* 2.0 l_0_5_64) l_0_5_71))))
 (let ((?x7204 (- (- ?x7200 (* (* 2.0 l_0_5_65) l_0_5_72)) (* (* 2.0 l_0_5_66) l_0_5_73))))
 (let ((?x7208 (- (- ?x7204 (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x7208 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0)))))))))))
(assert
 (let ((?x6526 (* l_0_5_48 l_0_5_48)))
 (let ((?x6524 (* l_0_5_47 l_0_5_47)))
 (let ((?x7268 (* l_0_5_33 l_0_5_33)))
 (let ((?x7266 (* l_0_5_32 l_0_5_32)))
 (let ((?x6672 (* l_0_5_3 l_0_5_3)))
 (let ((?x6670 (* l_0_5_2 l_0_5_2)))
 (let ((?x6668 (* l_0_5_18 l_0_5_18)))
 (let ((?x6667 (* l_0_5_17 l_0_5_17)))
 (let ((?x6669 (+ ?x6667 ?x6668)))
 (let ((?x6673 (- (- ?x6669 ?x6670) ?x6672)))
 (= (- (- (- (- ?x6673 ?x7266) ?x7268) ?x6524) ?x6526) 0.0))))))))))))
(assert
 (let ((?x6561 (* 2.0 l_0_5_48)))
 (let ((?x6562 (* ?x6561 l_0_5_50)))
 (let ((?x6556 (* 2.0 l_0_5_47)))
 (let ((?x6557 (* ?x6556 l_0_5_49)))
 (let ((?x6688 (* 2.0 l_0_5_3)))
 (let ((?x6689 (* ?x6688 l_0_5_5)))
 (let ((?x6685 (* 2.0 l_0_5_2)))
 (let ((?x6686 (* ?x6685 l_0_5_4)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6683 (* ?x6547 l_0_5_20)))
 (let ((?x6690 (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x6683) ?x6686) ?x6689)))
 (let ((?x7292 (- (- ?x6690 (* (* 2.0 l_0_5_32) l_0_5_34)) (* (* 2.0 l_0_5_33) l_0_5_35))))
 (= (- (- ?x7292 ?x6557) ?x6562) 0.0))))))))))))))
(assert
 (let ((?x6561 (* 2.0 l_0_5_48)))
 (let ((?x6635 (* ?x6561 l_0_5_53)))
 (let ((?x6556 (* 2.0 l_0_5_47)))
 (let ((?x6633 (* ?x6556 l_0_5_52)))
 (let ((?x6688 (* 2.0 l_0_5_3)))
 (let ((?x6715 (* ?x6688 l_0_5_8)))
 (let ((?x6689 (* ?x6688 l_0_5_5)))
 (let ((?x6685 (* 2.0 l_0_5_2)))
 (let ((?x6713 (* ?x6685 l_0_5_7)))
 (let ((?x6686 (* ?x6685 l_0_5_4)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6711 (* ?x6547 l_0_5_23)))
 (let ((?x6683 (* ?x6547 l_0_5_20)))
 (let ((?x6544 (* 2.0 l_0_5_17)))
 (let ((?x6710 (* ?x6544 l_0_5_22)))
 (let ((?x7323 (+ (+ (- (+ (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x6710) ?x6683) ?x6711) ?x6686)))
 (let ((?x7328 (- (- (+ (- ?x7323 ?x6713) ?x6689) ?x6715) (* (* 2.0 l_0_5_32) l_0_5_37))))
 (= (- (- (- ?x7328 (* (* 2.0 l_0_5_33) l_0_5_38)) ?x6633) ?x6635) 0.0)))))))))))))))))))
(assert
 (let ((?x6755 (* l_0_5_6 l_0_5_6)))
 (let ((?x7380 (* l_0_5_51 l_0_5_51)))
 (let ((?x7378 (* l_0_5_50 l_0_5_50)))
 (let ((?x6753 (* l_0_5_5 l_0_5_5)))
 (let ((?x7375 (* l_0_5_49 l_0_5_49)))
 (let ((?x6751 (* l_0_5_4 l_0_5_4)))
 (let ((?x7372 (* l_0_5_36 l_0_5_36)))
 (let ((?x7370 (* l_0_5_35 l_0_5_35)))
 (let ((?x7368 (* l_0_5_34 l_0_5_34)))
 (let ((?x6749 (* l_0_5_21 l_0_5_21)))
 (let ((?x6750 (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6749)))
 (let ((?x7379 (- (- (- (- (- (- (- ?x6750 ?x7368) ?x7370) ?x7372) ?x6751) ?x7375) ?x6753) ?x7378)))
 (= (- (- ?x7379 ?x7380) ?x6755) 0.0))))))))))))))
(assert
 (let ((?x6755 (* l_0_5_6 l_0_5_6)))
 (let ((?x6784 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7433 (* 2.0 l_0_5_51)))
 (let ((?x7434 (* ?x7433 l_0_5_54)))
 (let ((?x7430 (* 2.0 l_0_5_50)))
 (let ((?x7431 (* ?x7430 l_0_5_53)))
 (let ((?x6753 (* l_0_5_5 l_0_5_5)))
 (let ((?x6781 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x7425 (* 2.0 l_0_5_49)))
 (let ((?x7426 (* ?x7425 l_0_5_52)))
 (let ((?x6751 (* l_0_5_4 l_0_5_4)))
 (let ((?x6778 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6749 (* l_0_5_21 l_0_5_21)))
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6775 (* ?x6774 l_0_5_24)))
 (let ((?x6747 (* l_0_5_20 l_0_5_20)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6772 (* ?x6771 l_0_5_23)))
 (let ((?x7410 (+ (- (* (* 2.0 l_0_5_19) l_0_5_22) (* l_0_5_19 l_0_5_19)) ?x6772)))
 (let ((?x7416 (- (- (+ (- ?x7410 ?x6747) ?x6775) ?x6749) (* (* 2.0 l_0_5_34) l_0_5_37))))
 (let ((?x7422 (- (- ?x7416 (* (* 2.0 l_0_5_35) l_0_5_38)) (* (* 2.0 l_0_5_36) l_0_5_39))))
 (let ((?x7435 (- (- (+ (- (- (+ (- ?x7422 ?x6778) ?x6751) ?x7426) ?x6781) ?x6753) ?x7431) ?x7434)))
 (= (+ (- ?x7435 ?x6784) ?x6755) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7380 (* l_0_5_51 l_0_5_51)))
 (let ((?x7433 (* 2.0 l_0_5_51)))
 (let ((?x7511 (* ?x7433 l_0_5_58)))
 (let ((?x7378 (* l_0_5_50 l_0_5_50)))
 (let ((?x7430 (* 2.0 l_0_5_50)))
 (let ((?x7508 (* ?x7430 l_0_5_57)))
 (let ((?x7375 (* l_0_5_49 l_0_5_49)))
 (let ((?x7425 (* 2.0 l_0_5_49)))
 (let ((?x7505 (* ?x7425 l_0_5_56)))
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6823 (* ?x6774 l_0_5_28)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6821 (* ?x6771 l_0_5_27)))
 (let ((?x6769 (* 2.0 l_0_5_19)))
 (let ((?x6819 (* ?x6769 l_0_5_26)))
 (let ((?x6816 (* 2.0 l_0_5_13)))
 (let ((?x6817 (* ?x6816 l_0_5_6)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6814 (* ?x6539 l_0_5_5)))
 (let ((?x6822 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x6814) ?x6817) ?x6819) ?x6821)))
 (let ((?x6824 (+ ?x6822 ?x6823)))
 (let ((?x7502 (- (- ?x6824 (* (* 2.0 l_0_5_34) l_0_5_41)) (* (* 2.0 l_0_5_35) l_0_5_42))))
 (let ((?x7509 (- (+ (- (- ?x7502 (* (* 2.0 l_0_5_36) l_0_5_43)) ?x7505) ?x7375) ?x7508)))
 (= (+ (- (+ ?x7509 ?x7378) ?x7511) ?x7380) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x6863 (* l_0_5_9 l_0_5_9)))
 (let ((?x6861 (* l_0_5_8 l_0_5_8)))
 (let ((?x6859 (* l_0_5_7 l_0_5_7)))
 (let ((?x6784 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7582 (* l_0_5_55 l_0_5_55)))
 (let ((?x7580 (* l_0_5_54 l_0_5_54)))
 (let ((?x7578 (* l_0_5_53 l_0_5_53)))
 (let ((?x7576 (* l_0_5_52 l_0_5_52)))
 (let ((?x6781 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x7573 (* l_0_5_40 l_0_5_40)))
 (let ((?x6778 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7570 (* l_0_5_39 l_0_5_39)))
 (let ((?x7568 (* l_0_5_38 l_0_5_38)))
 (let ((?x7566 (* l_0_5_37 l_0_5_37)))
 (let ((?x6857 (* l_0_5_25 l_0_5_25)))
 (let ((?x6855 (* l_0_5_24 l_0_5_24)))
 (let ((?x6853 (* l_0_5_23 l_0_5_23)))
 (let ((?x6845 (* l_0_5_22 l_0_5_22)))
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6775 (* ?x6774 l_0_5_24)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6772 (* ?x6771 l_0_5_23)))
 (let ((?x7560 (- (- (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_19) l_0_5_22)) ?x6772)))
 (let ((?x7569 (- (- (+ (+ (+ (+ (- ?x7560 ?x6775) ?x6845) ?x6853) ?x6855) ?x6857) ?x7566) ?x7568)))
 (let ((?x7581 (- (- (- (+ (- (+ (- ?x7569 ?x7570) ?x6778) ?x7573) ?x6781) ?x7576) ?x7578) ?x7580)))
 (= (- (- (- (+ (- ?x7581 ?x7582) ?x6784) ?x6859) ?x6861) ?x6863) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7677 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7674 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7671 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7668 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7433 (* 2.0 l_0_5_51)))
 (let ((?x7434 (* ?x7433 l_0_5_54)))
 (let ((?x7430 (* 2.0 l_0_5_50)))
 (let ((?x7431 (* ?x7430 l_0_5_53)))
 (let ((?x7425 (* 2.0 l_0_5_49)))
 (let ((?x7426 (* ?x7425 l_0_5_52)))
 (let ((?x6898 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6895 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6892 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6889 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6774 (* 2.0 l_0_5_21)))
 (let ((?x6823 (* ?x6774 l_0_5_28)))
 (let ((?x6771 (* 2.0 l_0_5_20)))
 (let ((?x6821 (* ?x6771 l_0_5_27)))
 (let ((?x6769 (* 2.0 l_0_5_19)))
 (let ((?x6819 (* ?x6769 l_0_5_26)))
 (let ((?x6816 (* 2.0 l_0_5_13)))
 (let ((?x6886 (* ?x6816 l_0_5_9)))
 (let ((?x6817 (* ?x6816 l_0_5_6)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6884 (* ?x6539 l_0_5_8)))
 (let ((?x6814 (* ?x6539 l_0_5_5)))
 (let ((?x6536 (* 2.0 l_0_5_11)))
 (let ((?x6882 (* ?x6536 l_0_5_7)))
 (let ((?x7641 (+ (- (+ (* (* (- 2.0) l_0_5_10) l_0_5_14) (* ?x6536 l_0_5_4)) ?x6882) ?x6814)))
 (let ((?x7648 (+ (- (- (- (- (+ (- ?x7641 ?x6884) ?x6817) ?x6886) ?x6819) ?x6821) ?x6823) ?x6889)))
 (let ((?x7654 (- (+ (+ (+ ?x7648 ?x6892) ?x6895) ?x6898) (* (* 2.0 l_0_5_37) l_0_5_41))))
 (let ((?x7660 (- (- ?x7654 (* (* 2.0 l_0_5_38) l_0_5_42)) (* (* 2.0 l_0_5_39) l_0_5_43))))
 (let ((?x7666 (+ (+ (+ (- ?x7660 (* (* 2.0 l_0_5_40) l_0_5_44)) ?x7426) ?x7431) ?x7434)))
 (= (- (- (- (- ?x7666 ?x7668) ?x7671) ?x7674) ?x7677) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7774 (* l_0_5_60 l_0_5_60)))
 (let ((?x7772 (* l_0_5_59 l_0_5_59)))
 (let ((?x7770 (* l_0_5_58 l_0_5_58)))
 (let ((?x7768 (* l_0_5_57 l_0_5_57)))
 (let ((?x7766 (* l_0_5_56 l_0_5_56)))
 (let ((?x7433 (* 2.0 l_0_5_51)))
 (let ((?x7511 (* ?x7433 l_0_5_58)))
 (let ((?x7430 (* 2.0 l_0_5_50)))
 (let ((?x7508 (* ?x7430 l_0_5_57)))
 (let ((?x7425 (* 2.0 l_0_5_49)))
 (let ((?x7505 (* ?x7425 l_0_5_56)))
 (let ((?x7761 (* l_0_5_45 l_0_5_45)))
 (let ((?x7759 (* l_0_5_44 l_0_5_44)))
 (let ((?x7757 (* l_0_5_43 l_0_5_43)))
 (let ((?x7755 (* l_0_5_42 l_0_5_42)))
 (let ((?x7753 (* l_0_5_41 l_0_5_41)))
 (let ((?x6950 (* l_0_5_30 l_0_5_30)))
 (let ((?x6948 (* l_0_5_29 l_0_5_29)))
 (let ((?x6946 (* l_0_5_28 l_0_5_28)))
 (let ((?x6944 (* l_0_5_27 l_0_5_27)))
 (let ((?x6942 (* l_0_5_26 l_0_5_26)))
 (let ((?x6940 (* l_0_5_15 l_0_5_15)))
 (let ((?x6938 (* l_0_5_14 l_0_5_14)))
 (let ((?x6929 (* l_0_5_13 l_0_5_13)))
 (let ((?x6939 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6929) ?x6938)))
 (let ((?x6951 (+ (+ (+ (+ (+ (- ?x6939 ?x6940) ?x6942) ?x6944) ?x6946) ?x6948) ?x6950)))
 (let ((?x7764 (+ (+ (- (- (- (- (- ?x6951 ?x7753) ?x7755) ?x7757) ?x7759) ?x7761) ?x7505) ?x7508)))
 (= (- (- (- (- (- (+ ?x7764 ?x7511) ?x7766) ?x7768) ?x7770) ?x7772) ?x7774) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7813 (- (- (* l_0_5_1 l_0_5_1) (* l_0_5_16 l_0_5_16)) (* (* 2.0 l_0_5_61) l_0_5_67))))
 (= (- ?x7813 (* (* 2.0 l_0_5_76) l_0_5_82)) 0.0)))
(assert
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6522 (* ?x6521 l_0_5_17)))
 (let ((?x7836 (- (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x6522) (* (* 2.0 l_0_5_62) l_0_5_67))))
 (let ((?x7840 (- (- ?x7836 (* (* 2.0 l_0_5_63) l_0_5_68)) (* (* 2.0 l_0_5_77) l_0_5_82))))
 (= (- ?x7840 (* (* 2.0 l_0_5_78) l_0_5_83)) 0.0))))))
(assert
 (let ((?x7887 (* l_0_5_85 l_0_5_85)))
 (let ((?x7885 (* l_0_5_84 l_0_5_84)))
 (let ((?x7883 (* l_0_5_83 l_0_5_83)))
 (let ((?x7881 (* l_0_5_82 l_0_5_82)))
 (let ((?x7879 (* l_0_5_70 l_0_5_70)))
 (let ((?x7877 (* l_0_5_69 l_0_5_69)))
 (let ((?x7875 (* l_0_5_68 l_0_5_68)))
 (let ((?x7873 (* l_0_5_67 l_0_5_67)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6629 (* ?x6521 l_0_5_22)))
 (let ((?x7108 (* 2.0 l_0_5_1)))
 (let ((?x7110 (* ?x7108 l_0_5_7)))
 (let ((?x7884 (- (- (- (- (- (- (- ?x7110 ?x6629) ?x7873) ?x7875) ?x7877) ?x7879) ?x7881) ?x7883)))
 (= (- (- ?x7884 ?x7885) ?x7887) 0.0)))))))))))))))
(assert
 (let ((?x6472 (* 2.0 l_0_5_46)))
 (let ((?x7116 (* ?x6472 l_0_5_52)))
 (let ((?x6521 (* 2.0 l_0_5_16)))
 (let ((?x6656 (* ?x6521 l_0_5_26)))
 (let ((?x7924 (- (+ (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6656) ?x7116) (* (* 2.0 l_0_5_67) l_0_5_71))))
 (let ((?x7930 (- (- ?x7924 (* (* 2.0 l_0_5_68) l_0_5_72)) (* (* 2.0 l_0_5_69) l_0_5_73))))
 (let ((?x7936 (- (- ?x7930 (* (* 2.0 l_0_5_70) l_0_5_74)) (* (* 2.0 l_0_5_82) l_0_5_86))))
 (let ((?x7942 (- (- ?x7936 (* (* 2.0 l_0_5_83) l_0_5_87)) (* (* 2.0 l_0_5_84) l_0_5_88))))
 (= (- ?x7942 (* (* 2.0 l_0_5_85) l_0_5_89)) 0.0))))))))))
(assert
 (let ((?x6672 (* l_0_5_3 l_0_5_3)))
 (let ((?x6670 (* l_0_5_2 l_0_5_2)))
 (let ((?x8004 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x6670) ?x6672)))
 (= ?x8004 0.0)))))
(assert
 (let ((?x6688 (* 2.0 l_0_5_3)))
 (let ((?x6715 (* ?x6688 l_0_5_8)))
 (let ((?x6685 (* 2.0 l_0_5_2)))
 (let ((?x6713 (* ?x6685 l_0_5_7)))
 (let ((?x6547 (* 2.0 l_0_5_18)))
 (let ((?x6711 (* ?x6547 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6711) ?x6713) ?x6715) 0.0))))))))
(assert
 (let ((?x6863 (* l_0_5_9 l_0_5_9)))
 (let ((?x6861 (* l_0_5_8 l_0_5_8)))
 (let ((?x6859 (* l_0_5_7 l_0_5_7)))
 (let ((?x6857 (* l_0_5_25 l_0_5_25)))
 (let ((?x6855 (* l_0_5_24 l_0_5_24)))
 (let ((?x6853 (* l_0_5_23 l_0_5_23)))
 (let ((?x8018 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6853) ?x6855)))
 (= (+ (+ (+ (- ?x8018 ?x6857) ?x6859) ?x6861) ?x6863) 0.0)))))))))
(assert
 (let ((?x7582 (* l_0_5_55 l_0_5_55)))
 (let ((?x7580 (* l_0_5_54 l_0_5_54)))
 (let ((?x7578 (* l_0_5_53 l_0_5_53)))
 (let ((?x7576 (* l_0_5_52 l_0_5_52)))
 (let ((?x6898 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6895 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6892 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6889 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6816 (* 2.0 l_0_5_13)))
 (let ((?x6886 (* ?x6816 l_0_5_9)))
 (let ((?x6539 (* 2.0 l_0_5_12)))
 (let ((?x6884 (* ?x6539 l_0_5_8)))
 (let ((?x6536 (* 2.0 l_0_5_11)))
 (let ((?x6882 (* ?x6536 l_0_5_7)))
 (let ((?x8037 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x6882) ?x6884) ?x6886) ?x6889)))
 (let ((?x8044 (+ (+ (+ (+ (- (- (- ?x8037 ?x6892) ?x6895) ?x6898) ?x7576) ?x7578) ?x7580) ?x7582)))
 (= ?x8044 0.0))))))))))))))))))
(assert
 (let ((?x7677 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7674 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7671 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7668 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6950 (* l_0_5_30 l_0_5_30)))
 (let ((?x6948 (* l_0_5_29 l_0_5_29)))
 (let ((?x6946 (* l_0_5_28 l_0_5_28)))
 (let ((?x6944 (* l_0_5_27 l_0_5_27)))
 (let ((?x6942 (* l_0_5_26 l_0_5_26)))
 (let ((?x6940 (* l_0_5_15 l_0_5_15)))
 (let ((?x6938 (* l_0_5_14 l_0_5_14)))
 (let ((?x6929 (* l_0_5_13 l_0_5_13)))
 (let ((?x8062 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6929) ?x6938)))
 (let ((?x8069 (+ (- (- (- (- (- (+ ?x8062 ?x6940) ?x6942) ?x6944) ?x6946) ?x6948) ?x6950) ?x7668)))
 (= (+ (+ (+ ?x8069 ?x7671) ?x7674) ?x7677) 0.0))))))))))))))))
(assert
 (let ((?x8104 (* l_0_5_90 l_0_5_90)))
 (let ((?x8102 (* l_0_5_89 l_0_5_89)))
 (let ((?x8100 (* l_0_5_88 l_0_5_88)))
 (let ((?x8098 (* l_0_5_87 l_0_5_87)))
 (let ((?x8096 (* l_0_5_86 l_0_5_86)))
 (let ((?x8094 (* l_0_5_75 l_0_5_75)))
 (let ((?x8092 (* l_0_5_74 l_0_5_74)))
 (let ((?x8090 (* l_0_5_73 l_0_5_73)))
 (let ((?x8088 (* l_0_5_72 l_0_5_72)))
 (let ((?x8089 (- (- (* (* 2.0 l_0_5_46) l_0_5_56) (* l_0_5_71 l_0_5_71)) ?x8088)))
 (let ((?x8103 (- (- (- (- (- (- (- ?x8089 ?x8090) ?x8092) ?x8094) ?x8096) ?x8098) ?x8100) ?x8102)))
 (= (- ?x8103 ?x8104) 0.0)))))))))))))
(assert
 (let ((?x7774 (* l_0_5_60 l_0_5_60)))
 (let ((?x7772 (* l_0_5_59 l_0_5_59)))
 (let ((?x7770 (* l_0_5_58 l_0_5_58)))
 (let ((?x8139 (+ (+ (+ (* l_0_5_56 l_0_5_56) (* l_0_5_57 l_0_5_57)) ?x7770) ?x7772)))
 (= (+ ?x8139 ?x7774) 0.0))))))
(assert
 (= (- (* (- l_0_5_61) l_0_5_61) (* l_0_5_76 l_0_5_76)) 0.0))
(assert
 (let ((?x8160 (- (* (* (- 2.0) l_0_5_61) l_0_5_62) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= ?x8160 0.0)))
(assert
 (let ((?x8179 (* l_0_5_78 l_0_5_78)))
 (let ((?x8177 (* l_0_5_77 l_0_5_77)))
 (let ((?x8180 (- (- (- (* (- l_0_5_62) l_0_5_62) (* l_0_5_63 l_0_5_63)) ?x8177) ?x8179)))
 (= ?x8180 0.0)))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x8237 (* ?x8236 l_0_6_47)))
 (let ((?x8234 (* l_0_6_16 l_0_6_16)))
 (let ((?x8233 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_101) l_0_6_92)) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x8244 (- (- (+ (+ ?x8233 ?x8234) ?x8237) (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (let ((?x8250 (- (- ?x8244 (* (* 2.0 l_0_6_77) l_0_6_86)) (* (* 2.0 l_0_6_78) l_0_6_87))))
 (= (+ ?x8250 1.0) 0.0))))))))
(assert
 (let ((?x8299 (* l_0_6_46 l_0_6_46)))
 (let ((?x8297 (* l_0_6_31 l_0_6_31)))
 (let ((?x8300 (- (- (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_16 l_0_6_16)) ?x8297) ?x8299)))
 (let ((?x8306 (- (- ?x8300 (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (+ (- ?x8306 (* (* 2.0 l_0_6_91) l_0_6_94)) 1.0) 0.0))))))
(assert
 (let ((?x8340 (- (- (* l_0_6_1 l_0_6_1) (* l_0_6_16 l_0_6_16)) (* (* 2.0 l_0_6_61) l_0_6_67))))
 (let ((?x8344 (- (- ?x8340 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= (- ?x8344 1.0) 0.0))))
(assert
 (let ((?x8380 (* l_0_6_48 l_0_6_48)))
 (let ((?x8378 (* l_0_6_47 l_0_6_47)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8376 (* ?x8375 l_0_6_17)))
 (let ((?x8377 (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x8376)))
 (= (+ (+ ?x8377 ?x8378) ?x8380) 0.0)))))))
(assert
 (let ((?x8415 (* 2.0 l_0_6_48)))
 (let ((?x8418 (* ?x8415 l_0_6_57)))
 (let ((?x8416 (* ?x8415 l_0_6_50)))
 (let ((?x8410 (* 2.0 l_0_6_47)))
 (let ((?x8413 (* ?x8410 l_0_6_56)))
 (let ((?x8411 (* ?x8410 l_0_6_49)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8402 (* ?x8401 l_0_6_27)))
 (let ((?x8398 (* 2.0 l_0_6_17)))
 (let ((?x8399 (* ?x8398 l_0_6_26)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8396 (* ?x8375 l_0_6_19)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8394 (* ?x8393 l_0_6_3)))
 (let ((?x8390 (* 2.0 l_0_6_11)))
 (let ((?x8391 (* ?x8390 l_0_6_2)))
 (let ((?x8373 (* (- 2.0) l_0_6_1)))
 (let ((?x8389 (* ?x8373 l_0_6_4)))
 (let ((?x8406 (- (+ (+ (+ (- (- ?x8389 ?x8391) ?x8394) ?x8396) ?x8399) ?x8402) (* (* 2.0 l_0_6_32) l_0_6_41))))
 (let ((?x8417 (+ (- (+ (- ?x8406 (* (* 2.0 l_0_6_33) l_0_6_42)) ?x8411) ?x8413) ?x8416)))
 (= (- ?x8417 ?x8418) 0.0))))))))))))))))))))))
(assert
 (let ((?x8415 (* 2.0 l_0_6_48)))
 (let ((?x8489 (* ?x8415 l_0_6_53)))
 (let ((?x8410 (* 2.0 l_0_6_47)))
 (let ((?x8487 (* ?x8410 l_0_6_52)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8402 (* ?x8401 l_0_6_27)))
 (let ((?x8398 (* 2.0 l_0_6_17)))
 (let ((?x8399 (* ?x8398 l_0_6_26)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8483 (* ?x8375 l_0_6_22)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8394 (* ?x8393 l_0_6_3)))
 (let ((?x8390 (* 2.0 l_0_6_11)))
 (let ((?x8391 (* ?x8390 l_0_6_2)))
 (let ((?x8485 (- (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x8391) ?x8394) ?x8483) ?x8399)))
 (= (+ (+ (- ?x8485 ?x8402) ?x8487) ?x8489) 0.0)))))))))))))))))
(assert
 (let ((?x8415 (* 2.0 l_0_6_48)))
 (let ((?x8418 (* ?x8415 l_0_6_57)))
 (let ((?x8410 (* 2.0 l_0_6_47)))
 (let ((?x8413 (* ?x8410 l_0_6_56)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8510 (* ?x8375 l_0_6_26)))
 (let ((?x8373 (* (- 2.0) l_0_6_1)))
 (let ((?x8509 (* ?x8373 l_0_6_11)))
 (= (+ (+ (+ ?x8509 ?x8510) ?x8413) ?x8418) 0.0))))))))))
(assert
 (let ((?x8526 (* l_0_6_3 l_0_6_3)))
 (let ((?x8524 (* l_0_6_2 l_0_6_2)))
 (let ((?x8522 (* l_0_6_18 l_0_6_18)))
 (let ((?x8521 (* l_0_6_17 l_0_6_17)))
 (let ((?x8523 (+ ?x8521 ?x8522)))
 (let ((?x8527 (- (- ?x8523 ?x8524) ?x8526)))
 (= ?x8527 0.0))))))))
(assert
 (let ((?x8542 (* 2.0 l_0_6_3)))
 (let ((?x8543 (* ?x8542 l_0_6_5)))
 (let ((?x8539 (* 2.0 l_0_6_2)))
 (let ((?x8540 (* ?x8539 l_0_6_4)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8537 (* ?x8401 l_0_6_20)))
 (let ((?x8544 (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x8537) ?x8540) ?x8543)))
 (= ?x8544 0.0)))))))))
(assert
 (let ((?x8542 (* 2.0 l_0_6_3)))
 (let ((?x8569 (* ?x8542 l_0_6_8)))
 (let ((?x8539 (* 2.0 l_0_6_2)))
 (let ((?x8567 (* ?x8539 l_0_6_7)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8565 (* ?x8401 l_0_6_23)))
 (let ((?x8398 (* 2.0 l_0_6_17)))
 (let ((?x8564 (* ?x8398 l_0_6_22)))
 (= (- (- (+ ?x8564 ?x8565) ?x8567) ?x8569) 0.0))))))))))
(assert
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8402 (* ?x8401 l_0_6_27)))
 (let ((?x8398 (* 2.0 l_0_6_17)))
 (let ((?x8399 (* ?x8398 l_0_6_26)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8394 (* ?x8393 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x8394) ?x8399) ?x8402) 0.0))))))))
(assert
 (let ((?x8609 (* l_0_6_6 l_0_6_6)))
 (let ((?x8607 (* l_0_6_5 l_0_6_5)))
 (let ((?x8605 (* l_0_6_4 l_0_6_4)))
 (let ((?x8603 (* l_0_6_21 l_0_6_21)))
 (let ((?x8604 (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x8603)))
 (= (- (- (- ?x8604 ?x8605) ?x8607) ?x8609) 0.0)))))))
(assert
 (let ((?x8638 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8635 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x8632 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8629 (* ?x8628 l_0_6_24)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8626 (* ?x8625 l_0_6_23)))
 (let ((?x8623 (* 2.0 l_0_6_19)))
 (let ((?x8624 (* ?x8623 l_0_6_22)))
 (= (- (- (- (+ (+ ?x8624 ?x8626) ?x8629) ?x8632) ?x8635) ?x8638) 0.0)))))))))))
(assert
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8677 (* ?x8628 l_0_6_28)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8675 (* ?x8625 l_0_6_27)))
 (let ((?x8623 (* 2.0 l_0_6_19)))
 (let ((?x8673 (* ?x8623 l_0_6_26)))
 (let ((?x8670 (* 2.0 l_0_6_13)))
 (let ((?x8671 (* ?x8670 l_0_6_6)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8668 (* ?x8393 l_0_6_5)))
 (let ((?x8676 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x8668) ?x8671) ?x8673) ?x8675)))
 (let ((?x8678 (+ ?x8676 ?x8677)))
 (= ?x8678 0.0))))))))))))))
(assert
 (let ((?x8717 (* l_0_6_9 l_0_6_9)))
 (let ((?x8715 (* l_0_6_8 l_0_6_8)))
 (let ((?x8713 (* l_0_6_7 l_0_6_7)))
 (let ((?x8711 (* l_0_6_25 l_0_6_25)))
 (let ((?x8709 (* l_0_6_24 l_0_6_24)))
 (let ((?x8707 (* l_0_6_23 l_0_6_23)))
 (let ((?x8710 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8707) ?x8709)))
 (= (- (- (- (+ ?x8710 ?x8711) ?x8713) ?x8715) ?x8717) 0.0)))))))))
(assert
 (let ((?x8752 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8749 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8746 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8743 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8670 (* 2.0 l_0_6_13)))
 (let ((?x8740 (* ?x8670 l_0_6_9)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8738 (* ?x8393 l_0_6_8)))
 (let ((?x8390 (* 2.0 l_0_6_11)))
 (let ((?x8736 (* ?x8390 l_0_6_7)))
 (let ((?x8735 (* (* (- 2.0) l_0_6_10) l_0_6_14)))
 (let ((?x8753 (+ (+ (+ (+ (- (- (- ?x8735 ?x8736) ?x8738) ?x8740) ?x8743) ?x8746) ?x8749) ?x8752)))
 (= ?x8753 0.0))))))))))))))
(assert
 (let ((?x8804 (* l_0_6_30 l_0_6_30)))
 (let ((?x8802 (* l_0_6_29 l_0_6_29)))
 (let ((?x8800 (* l_0_6_28 l_0_6_28)))
 (let ((?x8798 (* l_0_6_27 l_0_6_27)))
 (let ((?x8796 (* l_0_6_26 l_0_6_26)))
 (let ((?x8794 (* l_0_6_15 l_0_6_15)))
 (let ((?x8792 (* l_0_6_14 l_0_6_14)))
 (let ((?x8783 (* l_0_6_13 l_0_6_13)))
 (let ((?x8793 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8783) ?x8792)))
 (let ((?x8805 (+ (+ (+ (+ (+ (- ?x8793 ?x8794) ?x8796) ?x8798) ?x8800) ?x8802) ?x8804)))
 (= ?x8805 0.0))))))))))))
(assert
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x8237 (* ?x8236 l_0_6_47)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8376 (* ?x8375 l_0_6_17)))
 (let ((?x8377 (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x8376)))
 (let ((?x8834 (- (- (- ?x8377 (* (* 2.0 l_0_6_31) l_0_6_32)) ?x8237) (* (* 2.0 l_0_6_62) l_0_6_64))))
 (let ((?x8838 (- (- ?x8834 (* (* 2.0 l_0_6_63) l_0_6_65)) (* (* 2.0 l_0_6_77) l_0_6_79))))
 (let ((?x8843 (- (- ?x8838 (* (* 2.0 l_0_6_78) l_0_6_80)) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- ?x8843 (* (* 2.0 l_0_6_93) l_0_6_95)) 0.0))))))))))
(assert
 (let ((?x8920 (* l_0_6_96 l_0_6_96)))
 (let ((?x8918 (* l_0_6_95 l_0_6_95)))
 (let ((?x8916 (* l_0_6_94 l_0_6_94)))
 (let ((?x8914 (* l_0_6_81 l_0_6_81)))
 (let ((?x8912 (* l_0_6_80 l_0_6_80)))
 (let ((?x8910 (* l_0_6_79 l_0_6_79)))
 (let ((?x8908 (* l_0_6_66 l_0_6_66)))
 (let ((?x8906 (* l_0_6_65 l_0_6_65)))
 (let ((?x8904 (* l_0_6_64 l_0_6_64)))
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x8902 (* ?x8236 l_0_6_49)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8396 (* ?x8375 l_0_6_19)))
 (let ((?x8373 (* (- 2.0) l_0_6_1)))
 (let ((?x8389 (* ?x8373 l_0_6_4)))
 (let ((?x8905 (- (- (- (+ ?x8389 ?x8396) (* (* 2.0 l_0_6_31) l_0_6_34)) ?x8902) ?x8904)))
 (let ((?x8919 (- (- (- (- (- (- (- ?x8905 ?x8906) ?x8908) ?x8910) ?x8912) ?x8914) ?x8916) ?x8918)))
 (= (- ?x8919 ?x8920) 0.0)))))))))))))))))))
(assert
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x8973 (* ?x8236 l_0_6_52)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8483 (* ?x8375 l_0_6_22)))
 (let ((?x8396 (* ?x8375 l_0_6_19)))
 (let ((?x8965 (* 2.0 l_0_6_1)))
 (let ((?x8967 (* ?x8965 l_0_6_7)))
 (let ((?x8972 (- (+ (- (- (* ?x8965 l_0_6_4) ?x8967) ?x8396) ?x8483) (* (* 2.0 l_0_6_31) l_0_6_37))))
 (let ((?x8980 (- (- (- ?x8972 ?x8973) (* (* 2.0 l_0_6_64) l_0_6_67)) (* (* 2.0 l_0_6_65) l_0_6_68))))
 (let ((?x8986 (- (- ?x8980 (* (* 2.0 l_0_6_66) l_0_6_69)) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x8992 (- (- ?x8986 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x8998 (- (- ?x8992 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x8998 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0))))))))))))))
(assert
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x9089 (* ?x8236 l_0_6_56)))
 (let ((?x8902 (* ?x8236 l_0_6_49)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8510 (* ?x8375 l_0_6_26)))
 (let ((?x8373 (* (- 2.0) l_0_6_1)))
 (let ((?x8509 (* ?x8373 l_0_6_11)))
 (let ((?x9081 (- (- ?x8509 (* (* 2.0 l_0_6_101) l_0_6_94)) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x9087 (- (+ (- ?x9081 (* (* 2.0 l_0_6_103) l_0_6_96)) ?x8510) (* (* 2.0 l_0_6_31) l_0_6_41))))
 (let ((?x9094 (- (- (- (+ ?x9087 ?x8902) ?x9089) (* (* 2.0 l_0_6_64) l_0_6_71)) (* (* 2.0 l_0_6_65) l_0_6_72))))
 (let ((?x9098 (- (- ?x9094 (* (* 2.0 l_0_6_66) l_0_6_73)) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x9102 (- (- ?x9098 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x9102 0.0))))))))))))))
(assert
 (let ((?x8380 (* l_0_6_48 l_0_6_48)))
 (let ((?x8378 (* l_0_6_47 l_0_6_47)))
 (let ((?x9178 (* l_0_6_33 l_0_6_33)))
 (let ((?x9176 (* l_0_6_32 l_0_6_32)))
 (let ((?x8526 (* l_0_6_3 l_0_6_3)))
 (let ((?x8524 (* l_0_6_2 l_0_6_2)))
 (let ((?x8522 (* l_0_6_18 l_0_6_18)))
 (let ((?x8521 (* l_0_6_17 l_0_6_17)))
 (let ((?x8523 (+ ?x8521 ?x8522)))
 (let ((?x8527 (- (- ?x8523 ?x8524) ?x8526)))
 (= (- (- (- (- ?x8527 ?x9176) ?x9178) ?x8378) ?x8380) 0.0))))))))))))
(assert
 (let ((?x8415 (* 2.0 l_0_6_48)))
 (let ((?x8416 (* ?x8415 l_0_6_50)))
 (let ((?x8410 (* 2.0 l_0_6_47)))
 (let ((?x8411 (* ?x8410 l_0_6_49)))
 (let ((?x8542 (* 2.0 l_0_6_3)))
 (let ((?x8543 (* ?x8542 l_0_6_5)))
 (let ((?x8539 (* 2.0 l_0_6_2)))
 (let ((?x8540 (* ?x8539 l_0_6_4)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8537 (* ?x8401 l_0_6_20)))
 (let ((?x8544 (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x8537) ?x8540) ?x8543)))
 (let ((?x9202 (- (- ?x8544 (* (* 2.0 l_0_6_32) l_0_6_34)) (* (* 2.0 l_0_6_33) l_0_6_35))))
 (= (- (- ?x9202 ?x8411) ?x8416) 0.0))))))))))))))
(assert
 (let ((?x8415 (* 2.0 l_0_6_48)))
 (let ((?x8489 (* ?x8415 l_0_6_53)))
 (let ((?x8410 (* 2.0 l_0_6_47)))
 (let ((?x8487 (* ?x8410 l_0_6_52)))
 (let ((?x8542 (* 2.0 l_0_6_3)))
 (let ((?x8569 (* ?x8542 l_0_6_8)))
 (let ((?x8543 (* ?x8542 l_0_6_5)))
 (let ((?x8539 (* 2.0 l_0_6_2)))
 (let ((?x8567 (* ?x8539 l_0_6_7)))
 (let ((?x8540 (* ?x8539 l_0_6_4)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8565 (* ?x8401 l_0_6_23)))
 (let ((?x8537 (* ?x8401 l_0_6_20)))
 (let ((?x8398 (* 2.0 l_0_6_17)))
 (let ((?x8564 (* ?x8398 l_0_6_22)))
 (let ((?x9233 (+ (+ (- (+ (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x8564) ?x8537) ?x8565) ?x8540)))
 (let ((?x9238 (- (- (+ (- ?x9233 ?x8567) ?x8543) ?x8569) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (= (- (- (- ?x9238 (* (* 2.0 l_0_6_33) l_0_6_38)) ?x8487) ?x8489) 0.0)))))))))))))))))))
(assert
 (let ((?x8609 (* l_0_6_6 l_0_6_6)))
 (let ((?x9290 (* l_0_6_51 l_0_6_51)))
 (let ((?x9288 (* l_0_6_50 l_0_6_50)))
 (let ((?x8607 (* l_0_6_5 l_0_6_5)))
 (let ((?x9285 (* l_0_6_49 l_0_6_49)))
 (let ((?x8605 (* l_0_6_4 l_0_6_4)))
 (let ((?x9282 (* l_0_6_36 l_0_6_36)))
 (let ((?x9280 (* l_0_6_35 l_0_6_35)))
 (let ((?x9278 (* l_0_6_34 l_0_6_34)))
 (let ((?x8603 (* l_0_6_21 l_0_6_21)))
 (let ((?x8604 (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x8603)))
 (let ((?x9289 (- (- (- (- (- (- (- ?x8604 ?x9278) ?x9280) ?x9282) ?x8605) ?x9285) ?x8607) ?x9288)))
 (= (- (- ?x9289 ?x9290) ?x8609) 0.0))))))))))))))
(assert
 (let ((?x8609 (* l_0_6_6 l_0_6_6)))
 (let ((?x8638 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9343 (* 2.0 l_0_6_51)))
 (let ((?x9344 (* ?x9343 l_0_6_54)))
 (let ((?x9340 (* 2.0 l_0_6_50)))
 (let ((?x9341 (* ?x9340 l_0_6_53)))
 (let ((?x8607 (* l_0_6_5 l_0_6_5)))
 (let ((?x8635 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x9335 (* 2.0 l_0_6_49)))
 (let ((?x9336 (* ?x9335 l_0_6_52)))
 (let ((?x8605 (* l_0_6_4 l_0_6_4)))
 (let ((?x8632 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8603 (* l_0_6_21 l_0_6_21)))
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8629 (* ?x8628 l_0_6_24)))
 (let ((?x8601 (* l_0_6_20 l_0_6_20)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8626 (* ?x8625 l_0_6_23)))
 (let ((?x9320 (+ (- (* (* 2.0 l_0_6_19) l_0_6_22) (* l_0_6_19 l_0_6_19)) ?x8626)))
 (let ((?x9326 (- (- (+ (- ?x9320 ?x8601) ?x8629) ?x8603) (* (* 2.0 l_0_6_34) l_0_6_37))))
 (let ((?x9332 (- (- ?x9326 (* (* 2.0 l_0_6_35) l_0_6_38)) (* (* 2.0 l_0_6_36) l_0_6_39))))
 (let ((?x9345 (- (- (+ (- (- (+ (- ?x9332 ?x8632) ?x8605) ?x9336) ?x8635) ?x8607) ?x9341) ?x9344)))
 (= (+ (- ?x9345 ?x8638) ?x8609) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9290 (* l_0_6_51 l_0_6_51)))
 (let ((?x9343 (* 2.0 l_0_6_51)))
 (let ((?x9421 (* ?x9343 l_0_6_58)))
 (let ((?x9288 (* l_0_6_50 l_0_6_50)))
 (let ((?x9340 (* 2.0 l_0_6_50)))
 (let ((?x9418 (* ?x9340 l_0_6_57)))
 (let ((?x9285 (* l_0_6_49 l_0_6_49)))
 (let ((?x9335 (* 2.0 l_0_6_49)))
 (let ((?x9415 (* ?x9335 l_0_6_56)))
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8677 (* ?x8628 l_0_6_28)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8675 (* ?x8625 l_0_6_27)))
 (let ((?x8623 (* 2.0 l_0_6_19)))
 (let ((?x8673 (* ?x8623 l_0_6_26)))
 (let ((?x8670 (* 2.0 l_0_6_13)))
 (let ((?x8671 (* ?x8670 l_0_6_6)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8668 (* ?x8393 l_0_6_5)))
 (let ((?x8676 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x8668) ?x8671) ?x8673) ?x8675)))
 (let ((?x8678 (+ ?x8676 ?x8677)))
 (let ((?x9412 (- (- ?x8678 (* (* 2.0 l_0_6_34) l_0_6_41)) (* (* 2.0 l_0_6_35) l_0_6_42))))
 (let ((?x9419 (- (+ (- (- ?x9412 (* (* 2.0 l_0_6_36) l_0_6_43)) ?x9415) ?x9285) ?x9418)))
 (= (+ (- (+ ?x9419 ?x9288) ?x9421) ?x9290) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8717 (* l_0_6_9 l_0_6_9)))
 (let ((?x8715 (* l_0_6_8 l_0_6_8)))
 (let ((?x8713 (* l_0_6_7 l_0_6_7)))
 (let ((?x8638 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9492 (* l_0_6_55 l_0_6_55)))
 (let ((?x9490 (* l_0_6_54 l_0_6_54)))
 (let ((?x9488 (* l_0_6_53 l_0_6_53)))
 (let ((?x9486 (* l_0_6_52 l_0_6_52)))
 (let ((?x8635 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x9483 (* l_0_6_40 l_0_6_40)))
 (let ((?x8632 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x9480 (* l_0_6_39 l_0_6_39)))
 (let ((?x9478 (* l_0_6_38 l_0_6_38)))
 (let ((?x9476 (* l_0_6_37 l_0_6_37)))
 (let ((?x8711 (* l_0_6_25 l_0_6_25)))
 (let ((?x8709 (* l_0_6_24 l_0_6_24)))
 (let ((?x8707 (* l_0_6_23 l_0_6_23)))
 (let ((?x8699 (* l_0_6_22 l_0_6_22)))
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8629 (* ?x8628 l_0_6_24)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8626 (* ?x8625 l_0_6_23)))
 (let ((?x9470 (- (- (* (- l_0_6_10) l_0_6_10) (* (* 2.0 l_0_6_19) l_0_6_22)) ?x8626)))
 (let ((?x9479 (- (- (+ (+ (+ (+ (- ?x9470 ?x8629) ?x8699) ?x8707) ?x8709) ?x8711) ?x9476) ?x9478)))
 (let ((?x9491 (- (- (- (+ (- (+ (- ?x9479 ?x9480) ?x8632) ?x9483) ?x8635) ?x9486) ?x9488) ?x9490)))
 (= (- (- (- (+ (- ?x9491 ?x9492) ?x8638) ?x8713) ?x8715) ?x8717) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9587 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9584 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9581 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9578 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x9343 (* 2.0 l_0_6_51)))
 (let ((?x9344 (* ?x9343 l_0_6_54)))
 (let ((?x9340 (* 2.0 l_0_6_50)))
 (let ((?x9341 (* ?x9340 l_0_6_53)))
 (let ((?x9335 (* 2.0 l_0_6_49)))
 (let ((?x9336 (* ?x9335 l_0_6_52)))
 (let ((?x8752 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8749 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8746 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8743 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8628 (* 2.0 l_0_6_21)))
 (let ((?x8677 (* ?x8628 l_0_6_28)))
 (let ((?x8625 (* 2.0 l_0_6_20)))
 (let ((?x8675 (* ?x8625 l_0_6_27)))
 (let ((?x8623 (* 2.0 l_0_6_19)))
 (let ((?x8673 (* ?x8623 l_0_6_26)))
 (let ((?x8670 (* 2.0 l_0_6_13)))
 (let ((?x8740 (* ?x8670 l_0_6_9)))
 (let ((?x8671 (* ?x8670 l_0_6_6)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8738 (* ?x8393 l_0_6_8)))
 (let ((?x8668 (* ?x8393 l_0_6_5)))
 (let ((?x8390 (* 2.0 l_0_6_11)))
 (let ((?x8736 (* ?x8390 l_0_6_7)))
 (let ((?x9551 (+ (- (+ (* (* (- 2.0) l_0_6_10) l_0_6_14) (* ?x8390 l_0_6_4)) ?x8736) ?x8668)))
 (let ((?x9558 (+ (- (- (- (- (+ (- ?x9551 ?x8738) ?x8671) ?x8740) ?x8673) ?x8675) ?x8677) ?x8743)))
 (let ((?x9564 (- (+ (+ (+ ?x9558 ?x8746) ?x8749) ?x8752) (* (* 2.0 l_0_6_37) l_0_6_41))))
 (let ((?x9570 (- (- ?x9564 (* (* 2.0 l_0_6_38) l_0_6_42)) (* (* 2.0 l_0_6_39) l_0_6_43))))
 (let ((?x9576 (+ (+ (+ (- ?x9570 (* (* 2.0 l_0_6_40) l_0_6_44)) ?x9336) ?x9341) ?x9344)))
 (= (- (- (- (- ?x9576 ?x9578) ?x9581) ?x9584) ?x9587) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9684 (* l_0_6_60 l_0_6_60)))
 (let ((?x9682 (* l_0_6_59 l_0_6_59)))
 (let ((?x9680 (* l_0_6_58 l_0_6_58)))
 (let ((?x9678 (* l_0_6_57 l_0_6_57)))
 (let ((?x9676 (* l_0_6_56 l_0_6_56)))
 (let ((?x9343 (* 2.0 l_0_6_51)))
 (let ((?x9421 (* ?x9343 l_0_6_58)))
 (let ((?x9340 (* 2.0 l_0_6_50)))
 (let ((?x9418 (* ?x9340 l_0_6_57)))
 (let ((?x9335 (* 2.0 l_0_6_49)))
 (let ((?x9415 (* ?x9335 l_0_6_56)))
 (let ((?x9671 (* l_0_6_45 l_0_6_45)))
 (let ((?x9669 (* l_0_6_44 l_0_6_44)))
 (let ((?x9667 (* l_0_6_43 l_0_6_43)))
 (let ((?x9665 (* l_0_6_42 l_0_6_42)))
 (let ((?x9663 (* l_0_6_41 l_0_6_41)))
 (let ((?x8804 (* l_0_6_30 l_0_6_30)))
 (let ((?x8802 (* l_0_6_29 l_0_6_29)))
 (let ((?x8800 (* l_0_6_28 l_0_6_28)))
 (let ((?x8798 (* l_0_6_27 l_0_6_27)))
 (let ((?x8796 (* l_0_6_26 l_0_6_26)))
 (let ((?x8794 (* l_0_6_15 l_0_6_15)))
 (let ((?x8792 (* l_0_6_14 l_0_6_14)))
 (let ((?x8783 (* l_0_6_13 l_0_6_13)))
 (let ((?x8793 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8783) ?x8792)))
 (let ((?x8805 (+ (+ (+ (+ (+ (- ?x8793 ?x8794) ?x8796) ?x8798) ?x8800) ?x8802) ?x8804)))
 (let ((?x9674 (+ (+ (- (- (- (- (- ?x8805 ?x9663) ?x9665) ?x9667) ?x9669) ?x9671) ?x9415) ?x9418)))
 (= (- (- (- (- (- (+ ?x9674 ?x9421) ?x9676) ?x9678) ?x9680) ?x9682) ?x9684) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8376 (* ?x8375 l_0_6_17)))
 (let ((?x9724 (- (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x8376) (* (* 2.0 l_0_6_62) l_0_6_67))))
 (let ((?x9728 (- (- ?x9724 (* (* 2.0 l_0_6_63) l_0_6_68)) (* (* 2.0 l_0_6_77) l_0_6_82))))
 (let ((?x9732 (- (- ?x9728 (* (* 2.0 l_0_6_78) l_0_6_83)) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (- ?x9732 (* (* 2.0 l_0_6_93) l_0_6_98)) 0.0)))))))
(assert
 (let ((?x9799 (* l_0_6_99 l_0_6_99)))
 (let ((?x9797 (* l_0_6_98 l_0_6_98)))
 (let ((?x9795 (* l_0_6_97 l_0_6_97)))
 (let ((?x9793 (* l_0_6_85 l_0_6_85)))
 (let ((?x9791 (* l_0_6_84 l_0_6_84)))
 (let ((?x9789 (* l_0_6_83 l_0_6_83)))
 (let ((?x9787 (* l_0_6_82 l_0_6_82)))
 (let ((?x9785 (* l_0_6_70 l_0_6_70)))
 (let ((?x9783 (* l_0_6_69 l_0_6_69)))
 (let ((?x9781 (* l_0_6_68 l_0_6_68)))
 (let ((?x9779 (* l_0_6_67 l_0_6_67)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8483 (* ?x8375 l_0_6_22)))
 (let ((?x9778 (- (- (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_100 l_0_6_100)) ?x8483)))
 (let ((?x9792 (- (- (- (- (- (- (- ?x9778 ?x9779) ?x9781) ?x9783) ?x9785) ?x9787) ?x9789) ?x9791)))
 (= (- (- (- (- ?x9792 ?x9793) ?x9795) ?x9797) ?x9799) 0.0)))))))))))))))))
(assert
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x8973 (* ?x8236 l_0_6_52)))
 (let ((?x8375 (* 2.0 l_0_6_16)))
 (let ((?x8510 (* ?x8375 l_0_6_26)))
 (let ((?x9845 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x9849 (- (- ?x9845 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x9856 (- (+ (- (- ?x9849 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x8510) ?x8973) (* (* 2.0 l_0_6_67) l_0_6_71))))
 (let ((?x9862 (- (- ?x9856 (* (* 2.0 l_0_6_68) l_0_6_72)) (* (* 2.0 l_0_6_69) l_0_6_73))))
 (let ((?x9868 (- (- ?x9862 (* (* 2.0 l_0_6_70) l_0_6_74)) (* (* 2.0 l_0_6_82) l_0_6_86))))
 (let ((?x9874 (- (- ?x9868 (* (* 2.0 l_0_6_83) l_0_6_87)) (* (* 2.0 l_0_6_84) l_0_6_88))))
 (= (- ?x9874 (* (* 2.0 l_0_6_85) l_0_6_89)) 0.0))))))))))))
(assert
 (let ((?x8526 (* l_0_6_3 l_0_6_3)))
 (let ((?x8524 (* l_0_6_2 l_0_6_2)))
 (let ((?x9960 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x8524) ?x8526)))
 (= ?x9960 0.0)))))
(assert
 (let ((?x8542 (* 2.0 l_0_6_3)))
 (let ((?x8569 (* ?x8542 l_0_6_8)))
 (let ((?x8539 (* 2.0 l_0_6_2)))
 (let ((?x8567 (* ?x8539 l_0_6_7)))
 (let ((?x8401 (* 2.0 l_0_6_18)))
 (let ((?x8565 (* ?x8401 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x8565) ?x8567) ?x8569) 0.0))))))))
(assert
 (let ((?x8717 (* l_0_6_9 l_0_6_9)))
 (let ((?x8715 (* l_0_6_8 l_0_6_8)))
 (let ((?x8713 (* l_0_6_7 l_0_6_7)))
 (let ((?x8711 (* l_0_6_25 l_0_6_25)))
 (let ((?x8709 (* l_0_6_24 l_0_6_24)))
 (let ((?x8707 (* l_0_6_23 l_0_6_23)))
 (let ((?x9974 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8707) ?x8709)))
 (= (+ (+ (+ (- ?x9974 ?x8711) ?x8713) ?x8715) ?x8717) 0.0)))))))))
(assert
 (let ((?x9492 (* l_0_6_55 l_0_6_55)))
 (let ((?x9490 (* l_0_6_54 l_0_6_54)))
 (let ((?x9488 (* l_0_6_53 l_0_6_53)))
 (let ((?x9486 (* l_0_6_52 l_0_6_52)))
 (let ((?x8752 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8749 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8746 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8743 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8670 (* 2.0 l_0_6_13)))
 (let ((?x8740 (* ?x8670 l_0_6_9)))
 (let ((?x8393 (* 2.0 l_0_6_12)))
 (let ((?x8738 (* ?x8393 l_0_6_8)))
 (let ((?x8390 (* 2.0 l_0_6_11)))
 (let ((?x8736 (* ?x8390 l_0_6_7)))
 (let ((?x9993 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x8736) ?x8738) ?x8740) ?x8743)))
 (let ((?x10000 (+ (+ (+ (+ (- (- (- ?x9993 ?x8746) ?x8749) ?x8752) ?x9486) ?x9488) ?x9490) ?x9492)))
 (= ?x10000 0.0))))))))))))))))))
(assert
 (let ((?x9587 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9584 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9581 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9578 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8804 (* l_0_6_30 l_0_6_30)))
 (let ((?x8802 (* l_0_6_29 l_0_6_29)))
 (let ((?x8800 (* l_0_6_28 l_0_6_28)))
 (let ((?x8798 (* l_0_6_27 l_0_6_27)))
 (let ((?x8796 (* l_0_6_26 l_0_6_26)))
 (let ((?x8794 (* l_0_6_15 l_0_6_15)))
 (let ((?x8792 (* l_0_6_14 l_0_6_14)))
 (let ((?x8783 (* l_0_6_13 l_0_6_13)))
 (let ((?x10018 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8783) ?x8792)))
 (let ((?x10025 (+ (- (- (- (- (- (+ ?x10018 ?x8794) ?x8796) ?x8798) ?x8800) ?x8802) ?x8804) ?x9578)))
 (= (+ (+ (+ ?x10025 ?x9581) ?x9584) ?x9587) 0.0))))))))))))))))
(assert
 (let ((?x10046 (- (+ (* (* (- 2.0) l_0_6_101) l_0_6_91) (* l_0_6_46 l_0_6_46)) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (= (- ?x10046 (* (* 2.0 l_0_6_76) l_0_6_86)) 0.0)))
(assert
 (let ((?x10095 (* l_0_6_90 l_0_6_90)))
 (let ((?x10093 (* l_0_6_89 l_0_6_89)))
 (let ((?x10091 (* l_0_6_88 l_0_6_88)))
 (let ((?x10089 (* l_0_6_87 l_0_6_87)))
 (let ((?x10087 (* l_0_6_86 l_0_6_86)))
 (let ((?x10085 (* l_0_6_75 l_0_6_75)))
 (let ((?x10083 (* l_0_6_74 l_0_6_74)))
 (let ((?x10081 (* l_0_6_73 l_0_6_73)))
 (let ((?x10079 (* l_0_6_72 l_0_6_72)))
 (let ((?x10077 (* l_0_6_71 l_0_6_71)))
 (let ((?x8236 (* 2.0 l_0_6_46)))
 (let ((?x9089 (* ?x8236 l_0_6_56)))
 (let ((?x10074 (* l_0_6_105 l_0_6_105)))
 (let ((?x10072 (* l_0_6_104 l_0_6_104)))
 (let ((?x10070 (* l_0_6_103 l_0_6_103)))
 (let ((?x10071 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x10070)))
 (let ((?x10084 (- (- (- (- (+ (- (- ?x10071 ?x10072) ?x10074) ?x9089) ?x10077) ?x10079) ?x10081) ?x10083)))
 (= (- (- (- (- (- (- ?x10084 ?x10085) ?x10087) ?x10089) ?x10091) ?x10093) ?x10095) 0.0)))))))))))))))))))
(assert
 (let ((?x9684 (* l_0_6_60 l_0_6_60)))
 (let ((?x9682 (* l_0_6_59 l_0_6_59)))
 (let ((?x9680 (* l_0_6_58 l_0_6_58)))
 (let ((?x10147 (+ (+ (+ (* l_0_6_56 l_0_6_56) (* l_0_6_57 l_0_6_57)) ?x9680) ?x9682)))
 (= (+ ?x10147 ?x9684) 0.0))))))
(assert
 (let ((?x10156 (* l_0_6_91 l_0_6_91)))
 (= (- (- (* (- l_0_6_61) l_0_6_61) (* l_0_6_76 l_0_6_76)) ?x10156) 0.0)))
(assert
 (let ((?x10173 (- (* (* (- 2.0) l_0_6_61) l_0_6_62) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (- ?x10173 (* (* 2.0 l_0_6_91) l_0_6_92)) 0.0)))
(assert
 (let ((?x10204 (* l_0_6_93 l_0_6_93)))
 (let ((?x10202 (* l_0_6_92 l_0_6_92)))
 (let ((?x10200 (* l_0_6_78 l_0_6_78)))
 (let ((?x10198 (* l_0_6_77 l_0_6_77)))
 (let ((?x10201 (- (- (- (* (- l_0_6_62) l_0_6_62) (* l_0_6_63 l_0_6_63)) ?x10198) ?x10200)))
 (= (- (- ?x10201 ?x10202) ?x10204) 0.0)))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x10266 (* l_0_7_16 l_0_7_16)))
 (let ((?x10267 (- (- (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_112)) ?x10266)))
 (let ((?x10273 (- (- ?x10267 (* (* 2.0 l_0_7_61) l_0_7_67)) (* (* 2.0 l_0_7_76) l_0_7_82))))
 (= (+ (- ?x10273 (* (* 2.0 l_0_7_91) l_0_7_97)) 1.0) 0.0)))))
(assert
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x10323 (* ?x10322 l_0_7_47)))
 (let ((?x10266 (* l_0_7_16 l_0_7_16)))
 (let ((?x10314 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_101) l_0_7_92)) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x10320 (- (- ?x10314 (* (* 2.0 l_0_7_107) l_0_7_116)) (* (* 2.0 l_0_7_108) l_0_7_117))))
 (let ((?x10330 (- (- (+ (+ ?x10320 ?x10266) ?x10323) (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (let ((?x10336 (- (- ?x10330 (* (* 2.0 l_0_7_77) l_0_7_86)) (* (* 2.0 l_0_7_78) l_0_7_87))))
 (= (- ?x10336 1.0) 0.0)))))))))
(assert
 (let ((?x10402 (* l_0_7_46 l_0_7_46)))
 (let ((?x10400 (* l_0_7_31 l_0_7_31)))
 (let ((?x10266 (* l_0_7_16 l_0_7_16)))
 (let ((?x10399 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_109)) ?x10266)))
 (let ((?x10407 (- (- (- (- ?x10399 ?x10400) ?x10402) (* (* 2.0 l_0_7_61) l_0_7_64)) (* (* 2.0 l_0_7_76) l_0_7_79))))
 (= (- (- ?x10407 (* (* 2.0 l_0_7_91) l_0_7_94)) 1.0) 0.0)))))))
(assert
 (let ((?x10454 (* l_0_7_48 l_0_7_48)))
 (let ((?x10452 (* l_0_7_47 l_0_7_47)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10450 (* ?x10449 l_0_7_17)))
 (let ((?x10447 (* (- 2.0) l_0_7_1)))
 (let ((?x10448 (* ?x10447 l_0_7_2)))
 (= (+ (+ (+ ?x10448 ?x10450) ?x10452) ?x10454) 0.0))))))))
(assert
 (let ((?x10489 (* 2.0 l_0_7_48)))
 (let ((?x10492 (* ?x10489 l_0_7_57)))
 (let ((?x10490 (* ?x10489 l_0_7_50)))
 (let ((?x10484 (* 2.0 l_0_7_47)))
 (let ((?x10487 (* ?x10484 l_0_7_56)))
 (let ((?x10485 (* ?x10484 l_0_7_49)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10476 (* ?x10475 l_0_7_27)))
 (let ((?x10472 (* 2.0 l_0_7_17)))
 (let ((?x10473 (* ?x10472 l_0_7_26)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10470 (* ?x10449 l_0_7_19)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10468 (* ?x10467 l_0_7_3)))
 (let ((?x10464 (* 2.0 l_0_7_11)))
 (let ((?x10465 (* ?x10464 l_0_7_2)))
 (let ((?x10447 (* (- 2.0) l_0_7_1)))
 (let ((?x10463 (* ?x10447 l_0_7_4)))
 (let ((?x10480 (- (+ (+ (+ (- (- ?x10463 ?x10465) ?x10468) ?x10470) ?x10473) ?x10476) (* (* 2.0 l_0_7_32) l_0_7_41))))
 (let ((?x10491 (+ (- (+ (- ?x10480 (* (* 2.0 l_0_7_33) l_0_7_42)) ?x10485) ?x10487) ?x10490)))
 (= (- ?x10491 ?x10492) 0.0))))))))))))))))))))))
(assert
 (let ((?x10489 (* 2.0 l_0_7_48)))
 (let ((?x10563 (* ?x10489 l_0_7_53)))
 (let ((?x10484 (* 2.0 l_0_7_47)))
 (let ((?x10561 (* ?x10484 l_0_7_52)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10476 (* ?x10475 l_0_7_27)))
 (let ((?x10472 (* 2.0 l_0_7_17)))
 (let ((?x10473 (* ?x10472 l_0_7_26)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10557 (* ?x10449 l_0_7_22)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10468 (* ?x10467 l_0_7_3)))
 (let ((?x10464 (* 2.0 l_0_7_11)))
 (let ((?x10465 (* ?x10464 l_0_7_2)))
 (let ((?x10559 (- (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x10465) ?x10468) ?x10557) ?x10473)))
 (= (+ (+ (- ?x10559 ?x10476) ?x10561) ?x10563) 0.0)))))))))))))))))
(assert
 (let ((?x10489 (* 2.0 l_0_7_48)))
 (let ((?x10492 (* ?x10489 l_0_7_57)))
 (let ((?x10484 (* 2.0 l_0_7_47)))
 (let ((?x10487 (* ?x10484 l_0_7_56)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10584 (* ?x10449 l_0_7_26)))
 (let ((?x10447 (* (- 2.0) l_0_7_1)))
 (let ((?x10583 (* ?x10447 l_0_7_11)))
 (= (+ (+ (+ ?x10583 ?x10584) ?x10487) ?x10492) 0.0))))))))))
(assert
 (let ((?x10600 (* l_0_7_3 l_0_7_3)))
 (let ((?x10598 (* l_0_7_2 l_0_7_2)))
 (let ((?x10596 (* l_0_7_18 l_0_7_18)))
 (let ((?x10595 (* l_0_7_17 l_0_7_17)))
 (let ((?x10597 (+ ?x10595 ?x10596)))
 (let ((?x10601 (- (- ?x10597 ?x10598) ?x10600)))
 (= ?x10601 0.0))))))))
(assert
 (let ((?x10616 (* 2.0 l_0_7_3)))
 (let ((?x10617 (* ?x10616 l_0_7_5)))
 (let ((?x10613 (* 2.0 l_0_7_2)))
 (let ((?x10614 (* ?x10613 l_0_7_4)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10611 (* ?x10475 l_0_7_20)))
 (let ((?x10618 (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_19) ?x10611) ?x10614) ?x10617)))
 (= ?x10618 0.0)))))))))
(assert
 (let ((?x10616 (* 2.0 l_0_7_3)))
 (let ((?x10643 (* ?x10616 l_0_7_8)))
 (let ((?x10613 (* 2.0 l_0_7_2)))
 (let ((?x10641 (* ?x10613 l_0_7_7)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10639 (* ?x10475 l_0_7_23)))
 (let ((?x10472 (* 2.0 l_0_7_17)))
 (let ((?x10638 (* ?x10472 l_0_7_22)))
 (= (- (- (+ ?x10638 ?x10639) ?x10641) ?x10643) 0.0))))))))))
(assert
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10476 (* ?x10475 l_0_7_27)))
 (let ((?x10472 (* 2.0 l_0_7_17)))
 (let ((?x10473 (* ?x10472 l_0_7_26)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10468 (* ?x10467 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x10468) ?x10473) ?x10476) 0.0))))))))
(assert
 (let ((?x10683 (* l_0_7_6 l_0_7_6)))
 (let ((?x10681 (* l_0_7_5 l_0_7_5)))
 (let ((?x10679 (* l_0_7_4 l_0_7_4)))
 (let ((?x10677 (* l_0_7_21 l_0_7_21)))
 (let ((?x10678 (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x10677)))
 (= (- (- (- ?x10678 ?x10679) ?x10681) ?x10683) 0.0)))))))
(assert
 (let ((?x10712 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x10709 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x10706 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10703 (* ?x10702 l_0_7_24)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10700 (* ?x10699 l_0_7_23)))
 (let ((?x10697 (* 2.0 l_0_7_19)))
 (let ((?x10698 (* ?x10697 l_0_7_22)))
 (= (- (- (- (+ (+ ?x10698 ?x10700) ?x10703) ?x10706) ?x10709) ?x10712) 0.0)))))))))))
(assert
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10751 (* ?x10702 l_0_7_28)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10749 (* ?x10699 l_0_7_27)))
 (let ((?x10697 (* 2.0 l_0_7_19)))
 (let ((?x10747 (* ?x10697 l_0_7_26)))
 (let ((?x10744 (* 2.0 l_0_7_13)))
 (let ((?x10745 (* ?x10744 l_0_7_6)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10742 (* ?x10467 l_0_7_5)))
 (let ((?x10750 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x10742) ?x10745) ?x10747) ?x10749)))
 (let ((?x10752 (+ ?x10750 ?x10751)))
 (= ?x10752 0.0))))))))))))))
(assert
 (let ((?x10791 (* l_0_7_9 l_0_7_9)))
 (let ((?x10789 (* l_0_7_8 l_0_7_8)))
 (let ((?x10787 (* l_0_7_7 l_0_7_7)))
 (let ((?x10785 (* l_0_7_25 l_0_7_25)))
 (let ((?x10783 (* l_0_7_24 l_0_7_24)))
 (let ((?x10781 (* l_0_7_23 l_0_7_23)))
 (let ((?x10784 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x10781) ?x10783)))
 (= (- (- (- (+ ?x10784 ?x10785) ?x10787) ?x10789) ?x10791) 0.0)))))))))
(assert
 (let ((?x10826 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10823 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10820 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10817 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10744 (* 2.0 l_0_7_13)))
 (let ((?x10814 (* ?x10744 l_0_7_9)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10812 (* ?x10467 l_0_7_8)))
 (let ((?x10464 (* 2.0 l_0_7_11)))
 (let ((?x10810 (* ?x10464 l_0_7_7)))
 (let ((?x10809 (* (* (- 2.0) l_0_7_10) l_0_7_14)))
 (let ((?x10827 (+ (+ (+ (+ (- (- (- ?x10809 ?x10810) ?x10812) ?x10814) ?x10817) ?x10820) ?x10823) ?x10826)))
 (= ?x10827 0.0))))))))))))))
(assert
 (let ((?x10878 (* l_0_7_30 l_0_7_30)))
 (let ((?x10876 (* l_0_7_29 l_0_7_29)))
 (let ((?x10874 (* l_0_7_28 l_0_7_28)))
 (let ((?x10872 (* l_0_7_27 l_0_7_27)))
 (let ((?x10870 (* l_0_7_26 l_0_7_26)))
 (let ((?x10868 (* l_0_7_15 l_0_7_15)))
 (let ((?x10866 (* l_0_7_14 l_0_7_14)))
 (let ((?x10857 (* l_0_7_13 l_0_7_13)))
 (let ((?x10867 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10857) ?x10866)))
 (let ((?x10879 (+ (+ (+ (+ (+ (- ?x10867 ?x10868) ?x10870) ?x10872) ?x10874) ?x10876) ?x10878)))
 (= ?x10879 0.0))))))))))))
(assert
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x10323 (* ?x10322 l_0_7_47)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10450 (* ?x10449 l_0_7_17)))
 (let ((?x10447 (* (- 2.0) l_0_7_1)))
 (let ((?x10448 (* ?x10447 l_0_7_2)))
 (let ((?x10906 (- (- ?x10448 (* (* 2.0 l_0_7_107) l_0_7_109)) (* (* 2.0 l_0_7_108) l_0_7_110))))
 (let ((?x10913 (- (- (- (+ ?x10906 ?x10450) (* (* 2.0 l_0_7_31) l_0_7_32)) ?x10323) (* (* 2.0 l_0_7_62) l_0_7_64))))
 (let ((?x10917 (- (- ?x10913 (* (* 2.0 l_0_7_63) l_0_7_65)) (* (* 2.0 l_0_7_77) l_0_7_79))))
 (let ((?x10922 (- (- ?x10917 (* (* 2.0 l_0_7_78) l_0_7_80)) (* (* 2.0 l_0_7_92) l_0_7_94))))
 (= (- ?x10922 (* (* 2.0 l_0_7_93) l_0_7_95)) 0.0))))))))))))
(assert
 (let ((?x11016 (* l_0_7_96 l_0_7_96)))
 (let ((?x11014 (* l_0_7_95 l_0_7_95)))
 (let ((?x11012 (* l_0_7_94 l_0_7_94)))
 (let ((?x11010 (* l_0_7_81 l_0_7_81)))
 (let ((?x11008 (* l_0_7_80 l_0_7_80)))
 (let ((?x11006 (* l_0_7_79 l_0_7_79)))
 (let ((?x11004 (* l_0_7_66 l_0_7_66)))
 (let ((?x11002 (* l_0_7_65 l_0_7_65)))
 (let ((?x11000 (* l_0_7_64 l_0_7_64)))
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x10998 (* ?x10322 l_0_7_49)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10470 (* ?x10449 l_0_7_19)))
 (let ((?x10993 (* l_0_7_111 l_0_7_111)))
 (let ((?x10991 (* l_0_7_110 l_0_7_110)))
 (let ((?x10992 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* l_0_7_109 l_0_7_109)) ?x10991)))
 (let ((?x10999 (- (- (+ (- ?x10992 ?x10993) ?x10470) (* (* 2.0 l_0_7_31) l_0_7_34)) ?x10998)))
 (let ((?x11013 (- (- (- (- (- (- (- ?x10999 ?x11000) ?x11002) ?x11004) ?x11006) ?x11008) ?x11010) ?x11012)))
 (= (- (- ?x11013 ?x11014) ?x11016) 0.0))))))))))))))))))))
(assert
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x11086 (* ?x10322 l_0_7_52)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10557 (* ?x10449 l_0_7_22)))
 (let ((?x10470 (* ?x10449 l_0_7_19)))
 (let ((?x11069 (* 2.0 l_0_7_1)))
 (let ((?x11071 (* ?x11069 l_0_7_7)))
 (let ((?x11075 (- (- (* ?x11069 l_0_7_4) ?x11071) (* (* 2.0 l_0_7_109) l_0_7_112))))
 (let ((?x11081 (- (- ?x11075 (* (* 2.0 l_0_7_110) l_0_7_113)) (* (* 2.0 l_0_7_111) l_0_7_114))))
 (let ((?x11087 (- (- (+ (- ?x11081 ?x10470) ?x10557) (* (* 2.0 l_0_7_31) l_0_7_37)) ?x11086)))
 (let ((?x11093 (- (- ?x11087 (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (let ((?x11099 (- (- ?x11093 (* (* 2.0 l_0_7_66) l_0_7_69)) (* (* 2.0 l_0_7_79) l_0_7_82))))
 (let ((?x11105 (- (- ?x11099 (* (* 2.0 l_0_7_80) l_0_7_83)) (* (* 2.0 l_0_7_81) l_0_7_84))))
 (let ((?x11111 (- (- ?x11105 (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x11111 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0))))))))))))))))
(assert
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x11226 (* ?x10322 l_0_7_56)))
 (let ((?x10998 (* ?x10322 l_0_7_49)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10584 (* ?x10449 l_0_7_26)))
 (let ((?x10447 (* (- 2.0) l_0_7_1)))
 (let ((?x10583 (* ?x10447 l_0_7_11)))
 (let ((?x11212 (- (- ?x10583 (* (* 2.0 l_0_7_101) l_0_7_94)) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x11217 (- (- ?x11212 (* (* 2.0 l_0_7_103) l_0_7_96)) (* (* 2.0 l_0_7_109) l_0_7_116))))
 (let ((?x11221 (- (- ?x11217 (* (* 2.0 l_0_7_110) l_0_7_117)) (* (* 2.0 l_0_7_111) l_0_7_118))))
 (let ((?x11227 (- (+ (- (+ ?x11221 ?x10584) (* (* 2.0 l_0_7_31) l_0_7_41)) ?x10998) ?x11226)))
 (let ((?x11231 (- (- ?x11227 (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (let ((?x11235 (- (- ?x11231 (* (* 2.0 l_0_7_66) l_0_7_73)) (* (* 2.0 l_0_7_79) l_0_7_86))))
 (let ((?x11239 (- (- ?x11235 (* (* 2.0 l_0_7_80) l_0_7_87)) (* (* 2.0 l_0_7_81) l_0_7_88))))
 (= ?x11239 0.0))))))))))))))))
(assert
 (let ((?x10454 (* l_0_7_48 l_0_7_48)))
 (let ((?x10452 (* l_0_7_47 l_0_7_47)))
 (let ((?x11333 (* l_0_7_33 l_0_7_33)))
 (let ((?x11331 (* l_0_7_32 l_0_7_32)))
 (let ((?x10600 (* l_0_7_3 l_0_7_3)))
 (let ((?x10598 (* l_0_7_2 l_0_7_2)))
 (let ((?x10596 (* l_0_7_18 l_0_7_18)))
 (let ((?x10595 (* l_0_7_17 l_0_7_17)))
 (let ((?x10597 (+ ?x10595 ?x10596)))
 (let ((?x10601 (- (- ?x10597 ?x10598) ?x10600)))
 (= (- (- (- (- ?x10601 ?x11331) ?x11333) ?x10452) ?x10454) 0.0))))))))))))
(assert
 (let ((?x10489 (* 2.0 l_0_7_48)))
 (let ((?x10490 (* ?x10489 l_0_7_50)))
 (let ((?x10484 (* 2.0 l_0_7_47)))
 (let ((?x10485 (* ?x10484 l_0_7_49)))
 (let ((?x10616 (* 2.0 l_0_7_3)))
 (let ((?x10617 (* ?x10616 l_0_7_5)))
 (let ((?x10613 (* 2.0 l_0_7_2)))
 (let ((?x10614 (* ?x10613 l_0_7_4)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10611 (* ?x10475 l_0_7_20)))
 (let ((?x10618 (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_19) ?x10611) ?x10614) ?x10617)))
 (let ((?x11357 (- (- ?x10618 (* (* 2.0 l_0_7_32) l_0_7_34)) (* (* 2.0 l_0_7_33) l_0_7_35))))
 (= (- (- ?x11357 ?x10485) ?x10490) 0.0))))))))))))))
(assert
 (let ((?x10489 (* 2.0 l_0_7_48)))
 (let ((?x10563 (* ?x10489 l_0_7_53)))
 (let ((?x10484 (* 2.0 l_0_7_47)))
 (let ((?x10561 (* ?x10484 l_0_7_52)))
 (let ((?x10616 (* 2.0 l_0_7_3)))
 (let ((?x10643 (* ?x10616 l_0_7_8)))
 (let ((?x10617 (* ?x10616 l_0_7_5)))
 (let ((?x10613 (* 2.0 l_0_7_2)))
 (let ((?x10641 (* ?x10613 l_0_7_7)))
 (let ((?x10614 (* ?x10613 l_0_7_4)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10639 (* ?x10475 l_0_7_23)))
 (let ((?x10611 (* ?x10475 l_0_7_20)))
 (let ((?x10472 (* 2.0 l_0_7_17)))
 (let ((?x10638 (* ?x10472 l_0_7_22)))
 (let ((?x11388 (+ (+ (- (+ (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x10638) ?x10611) ?x10639) ?x10614)))
 (let ((?x11393 (- (- (+ (- ?x11388 ?x10641) ?x10617) ?x10643) (* (* 2.0 l_0_7_32) l_0_7_37))))
 (= (- (- (- ?x11393 (* (* 2.0 l_0_7_33) l_0_7_38)) ?x10561) ?x10563) 0.0)))))))))))))))))))
(assert
 (let ((?x10683 (* l_0_7_6 l_0_7_6)))
 (let ((?x11445 (* l_0_7_51 l_0_7_51)))
 (let ((?x11443 (* l_0_7_50 l_0_7_50)))
 (let ((?x10681 (* l_0_7_5 l_0_7_5)))
 (let ((?x11440 (* l_0_7_49 l_0_7_49)))
 (let ((?x10679 (* l_0_7_4 l_0_7_4)))
 (let ((?x11437 (* l_0_7_36 l_0_7_36)))
 (let ((?x11435 (* l_0_7_35 l_0_7_35)))
 (let ((?x11433 (* l_0_7_34 l_0_7_34)))
 (let ((?x10677 (* l_0_7_21 l_0_7_21)))
 (let ((?x10678 (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x10677)))
 (let ((?x11444 (- (- (- (- (- (- (- ?x10678 ?x11433) ?x11435) ?x11437) ?x10679) ?x11440) ?x10681) ?x11443)))
 (= (- (- ?x11444 ?x11445) ?x10683) 0.0))))))))))))))
(assert
 (let ((?x10683 (* l_0_7_6 l_0_7_6)))
 (let ((?x10712 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11498 (* 2.0 l_0_7_51)))
 (let ((?x11499 (* ?x11498 l_0_7_54)))
 (let ((?x11495 (* 2.0 l_0_7_50)))
 (let ((?x11496 (* ?x11495 l_0_7_53)))
 (let ((?x10681 (* l_0_7_5 l_0_7_5)))
 (let ((?x10709 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x11490 (* 2.0 l_0_7_49)))
 (let ((?x11491 (* ?x11490 l_0_7_52)))
 (let ((?x10679 (* l_0_7_4 l_0_7_4)))
 (let ((?x10706 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x10677 (* l_0_7_21 l_0_7_21)))
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10703 (* ?x10702 l_0_7_24)))
 (let ((?x10675 (* l_0_7_20 l_0_7_20)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10700 (* ?x10699 l_0_7_23)))
 (let ((?x11475 (+ (- (* (* 2.0 l_0_7_19) l_0_7_22) (* l_0_7_19 l_0_7_19)) ?x10700)))
 (let ((?x11481 (- (- (+ (- ?x11475 ?x10675) ?x10703) ?x10677) (* (* 2.0 l_0_7_34) l_0_7_37))))
 (let ((?x11487 (- (- ?x11481 (* (* 2.0 l_0_7_35) l_0_7_38)) (* (* 2.0 l_0_7_36) l_0_7_39))))
 (let ((?x11500 (- (- (+ (- (- (+ (- ?x11487 ?x10706) ?x10679) ?x11491) ?x10709) ?x10681) ?x11496) ?x11499)))
 (= (+ (- ?x11500 ?x10712) ?x10683) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11445 (* l_0_7_51 l_0_7_51)))
 (let ((?x11498 (* 2.0 l_0_7_51)))
 (let ((?x11576 (* ?x11498 l_0_7_58)))
 (let ((?x11443 (* l_0_7_50 l_0_7_50)))
 (let ((?x11495 (* 2.0 l_0_7_50)))
 (let ((?x11573 (* ?x11495 l_0_7_57)))
 (let ((?x11440 (* l_0_7_49 l_0_7_49)))
 (let ((?x11490 (* 2.0 l_0_7_49)))
 (let ((?x11570 (* ?x11490 l_0_7_56)))
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10751 (* ?x10702 l_0_7_28)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10749 (* ?x10699 l_0_7_27)))
 (let ((?x10697 (* 2.0 l_0_7_19)))
 (let ((?x10747 (* ?x10697 l_0_7_26)))
 (let ((?x10744 (* 2.0 l_0_7_13)))
 (let ((?x10745 (* ?x10744 l_0_7_6)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10742 (* ?x10467 l_0_7_5)))
 (let ((?x10750 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x10742) ?x10745) ?x10747) ?x10749)))
 (let ((?x10752 (+ ?x10750 ?x10751)))
 (let ((?x11567 (- (- ?x10752 (* (* 2.0 l_0_7_34) l_0_7_41)) (* (* 2.0 l_0_7_35) l_0_7_42))))
 (let ((?x11574 (- (+ (- (- ?x11567 (* (* 2.0 l_0_7_36) l_0_7_43)) ?x11570) ?x11440) ?x11573)))
 (= (+ (- (+ ?x11574 ?x11443) ?x11576) ?x11445) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x10791 (* l_0_7_9 l_0_7_9)))
 (let ((?x10789 (* l_0_7_8 l_0_7_8)))
 (let ((?x10787 (* l_0_7_7 l_0_7_7)))
 (let ((?x10712 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11647 (* l_0_7_55 l_0_7_55)))
 (let ((?x11645 (* l_0_7_54 l_0_7_54)))
 (let ((?x11643 (* l_0_7_53 l_0_7_53)))
 (let ((?x11641 (* l_0_7_52 l_0_7_52)))
 (let ((?x10709 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x11638 (* l_0_7_40 l_0_7_40)))
 (let ((?x10706 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x11635 (* l_0_7_39 l_0_7_39)))
 (let ((?x11633 (* l_0_7_38 l_0_7_38)))
 (let ((?x11631 (* l_0_7_37 l_0_7_37)))
 (let ((?x10785 (* l_0_7_25 l_0_7_25)))
 (let ((?x10783 (* l_0_7_24 l_0_7_24)))
 (let ((?x10781 (* l_0_7_23 l_0_7_23)))
 (let ((?x10773 (* l_0_7_22 l_0_7_22)))
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10703 (* ?x10702 l_0_7_24)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10700 (* ?x10699 l_0_7_23)))
 (let ((?x11625 (- (- (* (- l_0_7_10) l_0_7_10) (* (* 2.0 l_0_7_19) l_0_7_22)) ?x10700)))
 (let ((?x11634 (- (- (+ (+ (+ (+ (- ?x11625 ?x10703) ?x10773) ?x10781) ?x10783) ?x10785) ?x11631) ?x11633)))
 (let ((?x11646 (- (- (- (+ (- (+ (- ?x11634 ?x11635) ?x10706) ?x11638) ?x10709) ?x11641) ?x11643) ?x11645)))
 (= (- (- (- (+ (- ?x11646 ?x11647) ?x10712) ?x10787) ?x10789) ?x10791) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x11742 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11739 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11736 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11733 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x11498 (* 2.0 l_0_7_51)))
 (let ((?x11499 (* ?x11498 l_0_7_54)))
 (let ((?x11495 (* 2.0 l_0_7_50)))
 (let ((?x11496 (* ?x11495 l_0_7_53)))
 (let ((?x11490 (* 2.0 l_0_7_49)))
 (let ((?x11491 (* ?x11490 l_0_7_52)))
 (let ((?x10826 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10823 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10820 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10817 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10702 (* 2.0 l_0_7_21)))
 (let ((?x10751 (* ?x10702 l_0_7_28)))
 (let ((?x10699 (* 2.0 l_0_7_20)))
 (let ((?x10749 (* ?x10699 l_0_7_27)))
 (let ((?x10697 (* 2.0 l_0_7_19)))
 (let ((?x10747 (* ?x10697 l_0_7_26)))
 (let ((?x10744 (* 2.0 l_0_7_13)))
 (let ((?x10814 (* ?x10744 l_0_7_9)))
 (let ((?x10745 (* ?x10744 l_0_7_6)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10812 (* ?x10467 l_0_7_8)))
 (let ((?x10742 (* ?x10467 l_0_7_5)))
 (let ((?x10464 (* 2.0 l_0_7_11)))
 (let ((?x10810 (* ?x10464 l_0_7_7)))
 (let ((?x11706 (+ (- (+ (* (* (- 2.0) l_0_7_10) l_0_7_14) (* ?x10464 l_0_7_4)) ?x10810) ?x10742)))
 (let ((?x11713 (+ (- (- (- (- (+ (- ?x11706 ?x10812) ?x10745) ?x10814) ?x10747) ?x10749) ?x10751) ?x10817)))
 (let ((?x11719 (- (+ (+ (+ ?x11713 ?x10820) ?x10823) ?x10826) (* (* 2.0 l_0_7_37) l_0_7_41))))
 (let ((?x11725 (- (- ?x11719 (* (* 2.0 l_0_7_38) l_0_7_42)) (* (* 2.0 l_0_7_39) l_0_7_43))))
 (let ((?x11731 (+ (+ (+ (- ?x11725 (* (* 2.0 l_0_7_40) l_0_7_44)) ?x11491) ?x11496) ?x11499)))
 (= (- (- (- (- ?x11731 ?x11733) ?x11736) ?x11739) ?x11742) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11839 (* l_0_7_60 l_0_7_60)))
 (let ((?x11837 (* l_0_7_59 l_0_7_59)))
 (let ((?x11835 (* l_0_7_58 l_0_7_58)))
 (let ((?x11833 (* l_0_7_57 l_0_7_57)))
 (let ((?x11831 (* l_0_7_56 l_0_7_56)))
 (let ((?x11498 (* 2.0 l_0_7_51)))
 (let ((?x11576 (* ?x11498 l_0_7_58)))
 (let ((?x11495 (* 2.0 l_0_7_50)))
 (let ((?x11573 (* ?x11495 l_0_7_57)))
 (let ((?x11490 (* 2.0 l_0_7_49)))
 (let ((?x11570 (* ?x11490 l_0_7_56)))
 (let ((?x11826 (* l_0_7_45 l_0_7_45)))
 (let ((?x11824 (* l_0_7_44 l_0_7_44)))
 (let ((?x11822 (* l_0_7_43 l_0_7_43)))
 (let ((?x11820 (* l_0_7_42 l_0_7_42)))
 (let ((?x11818 (* l_0_7_41 l_0_7_41)))
 (let ((?x10878 (* l_0_7_30 l_0_7_30)))
 (let ((?x10876 (* l_0_7_29 l_0_7_29)))
 (let ((?x10874 (* l_0_7_28 l_0_7_28)))
 (let ((?x10872 (* l_0_7_27 l_0_7_27)))
 (let ((?x10870 (* l_0_7_26 l_0_7_26)))
 (let ((?x10868 (* l_0_7_15 l_0_7_15)))
 (let ((?x10866 (* l_0_7_14 l_0_7_14)))
 (let ((?x10857 (* l_0_7_13 l_0_7_13)))
 (let ((?x10867 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10857) ?x10866)))
 (let ((?x10879 (+ (+ (+ (+ (+ (- ?x10867 ?x10868) ?x10870) ?x10872) ?x10874) ?x10876) ?x10878)))
 (let ((?x11829 (+ (+ (- (- (- (- (- ?x10879 ?x11818) ?x11820) ?x11822) ?x11824) ?x11826) ?x11570) ?x11573)))
 (= (- (- (- (- (- (+ ?x11829 ?x11576) ?x11831) ?x11833) ?x11835) ?x11837) ?x11839) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10450 (* ?x10449 l_0_7_17)))
 (let ((?x11878 (- (* (* 2.0 l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_107) l_0_7_112))))
 (let ((?x11883 (- (- (- ?x11878 (* (* 2.0 l_0_7_108) l_0_7_113)) ?x10450) (* (* 2.0 l_0_7_62) l_0_7_67))))
 (let ((?x11887 (- (- ?x11883 (* (* 2.0 l_0_7_63) l_0_7_68)) (* (* 2.0 l_0_7_77) l_0_7_82))))
 (let ((?x11891 (- (- ?x11887 (* (* 2.0 l_0_7_78) l_0_7_83)) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x11891 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0))))))))
(assert
 (let ((?x11978 (* l_0_7_99 l_0_7_99)))
 (let ((?x11976 (* l_0_7_98 l_0_7_98)))
 (let ((?x11974 (* l_0_7_97 l_0_7_97)))
 (let ((?x11972 (* l_0_7_85 l_0_7_85)))
 (let ((?x11970 (* l_0_7_84 l_0_7_84)))
 (let ((?x11968 (* l_0_7_83 l_0_7_83)))
 (let ((?x11966 (* l_0_7_82 l_0_7_82)))
 (let ((?x11964 (* l_0_7_70 l_0_7_70)))
 (let ((?x11962 (* l_0_7_69 l_0_7_69)))
 (let ((?x11960 (* l_0_7_68 l_0_7_68)))
 (let ((?x11958 (* l_0_7_67 l_0_7_67)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10557 (* ?x10449 l_0_7_22)))
 (let ((?x11955 (* l_0_7_115 l_0_7_115)))
 (let ((?x11953 (* l_0_7_114 l_0_7_114)))
 (let ((?x11951 (* l_0_7_113 l_0_7_113)))
 (let ((?x11949 (* l_0_7_112 l_0_7_112)))
 (let ((?x11950 (- (- (* (* 2.0 l_0_7_1) l_0_7_7) (* l_0_7_100 l_0_7_100)) ?x11949)))
 (let ((?x11963 (- (- (- (- (- (- (- ?x11950 ?x11951) ?x11953) ?x11955) ?x10557) ?x11958) ?x11960) ?x11962)))
 (let ((?x11977 (- (- (- (- (- (- (- ?x11963 ?x11964) ?x11966) ?x11968) ?x11970) ?x11972) ?x11974) ?x11976)))
 (= (- ?x11977 ?x11978) 0.0))))))))))))))))))))))
(assert
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x11086 (* ?x10322 l_0_7_52)))
 (let ((?x10449 (* 2.0 l_0_7_16)))
 (let ((?x10584 (* ?x10449 l_0_7_26)))
 (let ((?x12036 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_100) l_0_7_104))))
 (let ((?x12040 (- (- ?x12036 (* (* 2.0 l_0_7_101) l_0_7_97)) (* (* 2.0 l_0_7_102) l_0_7_98))))
 (let ((?x12045 (- (- ?x12040 (* (* 2.0 l_0_7_103) l_0_7_99)) (* (* 2.0 l_0_7_112) l_0_7_116))))
 (let ((?x12051 (- (- ?x12045 (* (* 2.0 l_0_7_113) l_0_7_117)) (* (* 2.0 l_0_7_114) l_0_7_118))))
 (let ((?x12059 (- (+ (- (- ?x12051 (* (* 2.0 l_0_7_115) l_0_7_119)) ?x10584) ?x11086) (* (* 2.0 l_0_7_67) l_0_7_71))))
 (let ((?x12065 (- (- ?x12059 (* (* 2.0 l_0_7_68) l_0_7_72)) (* (* 2.0 l_0_7_69) l_0_7_73))))
 (let ((?x12071 (- (- ?x12065 (* (* 2.0 l_0_7_70) l_0_7_74)) (* (* 2.0 l_0_7_82) l_0_7_86))))
 (let ((?x12077 (- (- ?x12071 (* (* 2.0 l_0_7_83) l_0_7_87)) (* (* 2.0 l_0_7_84) l_0_7_88))))
 (= (- ?x12077 (* (* 2.0 l_0_7_85) l_0_7_89)) 0.0))))))))))))))
(assert
 (let ((?x10600 (* l_0_7_3 l_0_7_3)))
 (let ((?x10598 (* l_0_7_2 l_0_7_2)))
 (let ((?x12187 (+ (+ (- (* (- l_0_7_17) l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x10598) ?x10600)))
 (= ?x12187 0.0)))))
(assert
 (let ((?x10616 (* 2.0 l_0_7_3)))
 (let ((?x10643 (* ?x10616 l_0_7_8)))
 (let ((?x10613 (* 2.0 l_0_7_2)))
 (let ((?x10641 (* ?x10613 l_0_7_7)))
 (let ((?x10475 (* 2.0 l_0_7_18)))
 (let ((?x10639 (* ?x10475 l_0_7_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x10639) ?x10641) ?x10643) 0.0))))))))
(assert
 (let ((?x10791 (* l_0_7_9 l_0_7_9)))
 (let ((?x10789 (* l_0_7_8 l_0_7_8)))
 (let ((?x10787 (* l_0_7_7 l_0_7_7)))
 (let ((?x10785 (* l_0_7_25 l_0_7_25)))
 (let ((?x10783 (* l_0_7_24 l_0_7_24)))
 (let ((?x10781 (* l_0_7_23 l_0_7_23)))
 (let ((?x12201 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x10781) ?x10783)))
 (= (+ (+ (+ (- ?x12201 ?x10785) ?x10787) ?x10789) ?x10791) 0.0)))))))))
(assert
 (let ((?x11647 (* l_0_7_55 l_0_7_55)))
 (let ((?x11645 (* l_0_7_54 l_0_7_54)))
 (let ((?x11643 (* l_0_7_53 l_0_7_53)))
 (let ((?x11641 (* l_0_7_52 l_0_7_52)))
 (let ((?x10826 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10823 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10820 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10817 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10744 (* 2.0 l_0_7_13)))
 (let ((?x10814 (* ?x10744 l_0_7_9)))
 (let ((?x10467 (* 2.0 l_0_7_12)))
 (let ((?x10812 (* ?x10467 l_0_7_8)))
 (let ((?x10464 (* 2.0 l_0_7_11)))
 (let ((?x10810 (* ?x10464 l_0_7_7)))
 (let ((?x12220 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x10810) ?x10812) ?x10814) ?x10817)))
 (let ((?x12227 (+ (+ (+ (+ (- (- (- ?x12220 ?x10820) ?x10823) ?x10826) ?x11641) ?x11643) ?x11645) ?x11647)))
 (= ?x12227 0.0))))))))))))))))))
(assert
 (let ((?x11742 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11739 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11736 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11733 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x10878 (* l_0_7_30 l_0_7_30)))
 (let ((?x10876 (* l_0_7_29 l_0_7_29)))
 (let ((?x10874 (* l_0_7_28 l_0_7_28)))
 (let ((?x10872 (* l_0_7_27 l_0_7_27)))
 (let ((?x10870 (* l_0_7_26 l_0_7_26)))
 (let ((?x10868 (* l_0_7_15 l_0_7_15)))
 (let ((?x10866 (* l_0_7_14 l_0_7_14)))
 (let ((?x10857 (* l_0_7_13 l_0_7_13)))
 (let ((?x12245 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10857) ?x10866)))
 (let ((?x12252 (+ (- (- (- (- (- (+ ?x12245 ?x10868) ?x10870) ?x10872) ?x10874) ?x10876) ?x10878) ?x11733)))
 (= (+ (+ (+ ?x12252 ?x11736) ?x11739) ?x11742) 0.0))))))))))))))))
(assert
 (let ((?x10402 (* l_0_7_46 l_0_7_46)))
 (let ((?x12272 (- (* (* (- 2.0) l_0_7_101) l_0_7_91) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (let ((?x12277 (- (- (+ ?x12272 ?x10402) (* (* 2.0 l_0_7_61) l_0_7_71)) (* (* 2.0 l_0_7_76) l_0_7_86))))
 (= ?x12277 0.0)))))
(assert
 (let ((?x12340 (* l_0_7_90 l_0_7_90)))
 (let ((?x12338 (* l_0_7_89 l_0_7_89)))
 (let ((?x12336 (* l_0_7_88 l_0_7_88)))
 (let ((?x12334 (* l_0_7_87 l_0_7_87)))
 (let ((?x12332 (* l_0_7_86 l_0_7_86)))
 (let ((?x12330 (* l_0_7_75 l_0_7_75)))
 (let ((?x12328 (* l_0_7_74 l_0_7_74)))
 (let ((?x12326 (* l_0_7_73 l_0_7_73)))
 (let ((?x12324 (* l_0_7_72 l_0_7_72)))
 (let ((?x12322 (* l_0_7_71 l_0_7_71)))
 (let ((?x10322 (* 2.0 l_0_7_46)))
 (let ((?x11226 (* ?x10322 l_0_7_56)))
 (let ((?x12319 (* l_0_7_120 l_0_7_120)))
 (let ((?x12317 (* l_0_7_119 l_0_7_119)))
 (let ((?x12315 (* l_0_7_118 l_0_7_118)))
 (let ((?x12313 (* l_0_7_117 l_0_7_117)))
 (let ((?x12311 (* l_0_7_116 l_0_7_116)))
 (let ((?x12309 (* l_0_7_105 l_0_7_105)))
 (let ((?x12307 (* l_0_7_104 l_0_7_104)))
 (let ((?x12305 (* l_0_7_103 l_0_7_103)))
 (let ((?x12306 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x12305)))
 (let ((?x12320 (- (- (- (- (- (- (- ?x12306 ?x12307) ?x12309) ?x12311) ?x12313) ?x12315) ?x12317) ?x12319)))
 (let ((?x12333 (- (- (- (- (- (- (+ ?x12320 ?x11226) ?x12322) ?x12324) ?x12326) ?x12328) ?x12330) ?x12332)))
 (= (- (- (- (- ?x12333 ?x12334) ?x12336) ?x12338) ?x12340) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11839 (* l_0_7_60 l_0_7_60)))
 (let ((?x11837 (* l_0_7_59 l_0_7_59)))
 (let ((?x11835 (* l_0_7_58 l_0_7_58)))
 (let ((?x12407 (+ (+ (+ (* l_0_7_56 l_0_7_56) (* l_0_7_57 l_0_7_57)) ?x11835) ?x11837)))
 (= (+ ?x12407 ?x11839) 0.0))))))
(assert
 (let ((?x12418 (* l_0_7_91 l_0_7_91)))
 (let ((?x12416 (* l_0_7_76 l_0_7_76)))
 (let ((?x12419 (- (- (- (* (- l_0_7_106) l_0_7_106) (* l_0_7_61 l_0_7_61)) ?x12416) ?x12418)))
 (= ?x12419 0.0)))))
(assert
 (let ((?x12438 (- (* (* (- 2.0) l_0_7_106) l_0_7_107) (* (* 2.0 l_0_7_61) l_0_7_62))))
 (let ((?x12442 (- (- ?x12438 (* (* 2.0 l_0_7_76) l_0_7_77)) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= ?x12442 0.0))))
(assert
 (let ((?x12481 (* l_0_7_93 l_0_7_93)))
 (let ((?x12479 (* l_0_7_92 l_0_7_92)))
 (let ((?x12477 (* l_0_7_78 l_0_7_78)))
 (let ((?x12475 (* l_0_7_77 l_0_7_77)))
 (let ((?x12473 (* l_0_7_63 l_0_7_63)))
 (let ((?x12471 (* l_0_7_62 l_0_7_62)))
 (let ((?x12472 (- (- (* (- l_0_7_107) l_0_7_107) (* l_0_7_108 l_0_7_108)) ?x12471)))
 (= (- (- (- (- (- ?x12472 ?x12473) ?x12475) ?x12477) ?x12479) ?x12481) 0.0)))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (let ((?x12562 (* l_0_8_46 l_0_8_46)))
 (let ((?x12560 (* l_0_8_31 l_0_8_31)))
 (let ((?x12558 (* l_0_8_16 l_0_8_16)))
 (let ((?x12557 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_109)) (* (* 2.0 l_0_8_121) l_0_8_124))))
 (let ((?x12566 (- (- (- (+ ?x12557 ?x12558) ?x12560) ?x12562) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (let ((?x12572 (- (- ?x12566 (* (* 2.0 l_0_8_76) l_0_8_79)) (* (* 2.0 l_0_8_91) l_0_8_94))))
 (= (+ ?x12572 1.0) 0.0))))))))
(assert
 (let ((?x12624 (* l_0_8_91 l_0_8_91)))
 (let ((?x12622 (* l_0_8_76 l_0_8_76)))
 (let ((?x12620 (* l_0_8_61 l_0_8_61)))
 (let ((?x12621 (- (- (* (- l_0_8_106) l_0_8_106) (* l_0_8_121 l_0_8_121)) ?x12620)))
 (= (- (- ?x12621 ?x12622) ?x12624) 0.0))))))
(assert
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x12664 (* ?x12663 l_0_8_47)))
 (let ((?x12558 (* l_0_8_16 l_0_8_16)))
 (let ((?x12649 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_101) l_0_8_92)) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x12655 (- (- ?x12649 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x12661 (- (- ?x12655 (* (* 2.0 l_0_8_122) l_0_8_131)) (* (* 2.0 l_0_8_123) l_0_8_132))))
 (let ((?x12671 (- (- (+ (+ ?x12661 ?x12558) ?x12664) (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x12677 (- (- ?x12671 (* (* 2.0 l_0_8_77) l_0_8_86)) (* (* 2.0 l_0_8_78) l_0_8_87))))
 (= ?x12677 0.0))))))))))
(assert
 (let ((?x12750 (* l_0_8_48 l_0_8_48)))
 (let ((?x12748 (* l_0_8_47 l_0_8_47)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12746 (* ?x12745 l_0_8_17)))
 (let ((?x12743 (* (- 2.0) l_0_8_1)))
 (let ((?x12744 (* ?x12743 l_0_8_2)))
 (= (+ (+ (+ ?x12744 ?x12746) ?x12748) ?x12750) 0.0))))))))
(assert
 (let ((?x12785 (* 2.0 l_0_8_48)))
 (let ((?x12788 (* ?x12785 l_0_8_57)))
 (let ((?x12786 (* ?x12785 l_0_8_50)))
 (let ((?x12780 (* 2.0 l_0_8_47)))
 (let ((?x12783 (* ?x12780 l_0_8_56)))
 (let ((?x12781 (* ?x12780 l_0_8_49)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12772 (* ?x12771 l_0_8_27)))
 (let ((?x12768 (* 2.0 l_0_8_17)))
 (let ((?x12769 (* ?x12768 l_0_8_26)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12766 (* ?x12745 l_0_8_19)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x12764 (* ?x12763 l_0_8_3)))
 (let ((?x12760 (* 2.0 l_0_8_11)))
 (let ((?x12761 (* ?x12760 l_0_8_2)))
 (let ((?x12743 (* (- 2.0) l_0_8_1)))
 (let ((?x12759 (* ?x12743 l_0_8_4)))
 (let ((?x12776 (- (+ (+ (+ (- (- ?x12759 ?x12761) ?x12764) ?x12766) ?x12769) ?x12772) (* (* 2.0 l_0_8_32) l_0_8_41))))
 (let ((?x12787 (+ (- (+ (- ?x12776 (* (* 2.0 l_0_8_33) l_0_8_42)) ?x12781) ?x12783) ?x12786)))
 (= (- ?x12787 ?x12788) 0.0))))))))))))))))))))))
(assert
 (let ((?x12785 (* 2.0 l_0_8_48)))
 (let ((?x12859 (* ?x12785 l_0_8_53)))
 (let ((?x12780 (* 2.0 l_0_8_47)))
 (let ((?x12857 (* ?x12780 l_0_8_52)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12772 (* ?x12771 l_0_8_27)))
 (let ((?x12768 (* 2.0 l_0_8_17)))
 (let ((?x12769 (* ?x12768 l_0_8_26)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12853 (* ?x12745 l_0_8_22)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x12764 (* ?x12763 l_0_8_3)))
 (let ((?x12760 (* 2.0 l_0_8_11)))
 (let ((?x12761 (* ?x12760 l_0_8_2)))
 (let ((?x12855 (- (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x12761) ?x12764) ?x12853) ?x12769)))
 (= (+ (+ (- ?x12855 ?x12772) ?x12857) ?x12859) 0.0)))))))))))))))))
(assert
 (let ((?x12785 (* 2.0 l_0_8_48)))
 (let ((?x12788 (* ?x12785 l_0_8_57)))
 (let ((?x12780 (* 2.0 l_0_8_47)))
 (let ((?x12783 (* ?x12780 l_0_8_56)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12880 (* ?x12745 l_0_8_26)))
 (let ((?x12743 (* (- 2.0) l_0_8_1)))
 (let ((?x12879 (* ?x12743 l_0_8_11)))
 (= (+ (+ (+ ?x12879 ?x12880) ?x12783) ?x12788) 0.0))))))))))
(assert
 (let ((?x12896 (* l_0_8_3 l_0_8_3)))
 (let ((?x12894 (* l_0_8_2 l_0_8_2)))
 (let ((?x12892 (* l_0_8_18 l_0_8_18)))
 (let ((?x12891 (* l_0_8_17 l_0_8_17)))
 (let ((?x12893 (+ ?x12891 ?x12892)))
 (let ((?x12897 (- (- ?x12893 ?x12894) ?x12896)))
 (= ?x12897 0.0))))))))
(assert
 (let ((?x12912 (* 2.0 l_0_8_3)))
 (let ((?x12913 (* ?x12912 l_0_8_5)))
 (let ((?x12909 (* 2.0 l_0_8_2)))
 (let ((?x12910 (* ?x12909 l_0_8_4)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12907 (* ?x12771 l_0_8_20)))
 (let ((?x12914 (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_19) ?x12907) ?x12910) ?x12913)))
 (= ?x12914 0.0)))))))))
(assert
 (let ((?x12912 (* 2.0 l_0_8_3)))
 (let ((?x12939 (* ?x12912 l_0_8_8)))
 (let ((?x12909 (* 2.0 l_0_8_2)))
 (let ((?x12937 (* ?x12909 l_0_8_7)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12935 (* ?x12771 l_0_8_23)))
 (let ((?x12768 (* 2.0 l_0_8_17)))
 (let ((?x12934 (* ?x12768 l_0_8_22)))
 (= (- (- (+ ?x12934 ?x12935) ?x12937) ?x12939) 0.0))))))))))
(assert
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12772 (* ?x12771 l_0_8_27)))
 (let ((?x12768 (* 2.0 l_0_8_17)))
 (let ((?x12769 (* ?x12768 l_0_8_26)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x12764 (* ?x12763 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x12764) ?x12769) ?x12772) 0.0))))))))
(assert
 (let ((?x12979 (* l_0_8_6 l_0_8_6)))
 (let ((?x12977 (* l_0_8_5 l_0_8_5)))
 (let ((?x12975 (* l_0_8_4 l_0_8_4)))
 (let ((?x12973 (* l_0_8_21 l_0_8_21)))
 (let ((?x12974 (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x12973)))
 (= (- (- (- ?x12974 ?x12975) ?x12977) ?x12979) 0.0)))))))
(assert
 (let ((?x13008 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13005 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13002 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x12999 (* ?x12998 l_0_8_24)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x12996 (* ?x12995 l_0_8_23)))
 (let ((?x12993 (* 2.0 l_0_8_19)))
 (let ((?x12994 (* ?x12993 l_0_8_22)))
 (= (- (- (- (+ (+ ?x12994 ?x12996) ?x12999) ?x13002) ?x13005) ?x13008) 0.0)))))))))))
(assert
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x13047 (* ?x12998 l_0_8_28)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x13045 (* ?x12995 l_0_8_27)))
 (let ((?x12993 (* 2.0 l_0_8_19)))
 (let ((?x13043 (* ?x12993 l_0_8_26)))
 (let ((?x13040 (* 2.0 l_0_8_13)))
 (let ((?x13041 (* ?x13040 l_0_8_6)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x13038 (* ?x12763 l_0_8_5)))
 (let ((?x13046 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x13038) ?x13041) ?x13043) ?x13045)))
 (let ((?x13048 (+ ?x13046 ?x13047)))
 (= ?x13048 0.0))))))))))))))
(assert
 (let ((?x13087 (* l_0_8_9 l_0_8_9)))
 (let ((?x13085 (* l_0_8_8 l_0_8_8)))
 (let ((?x13083 (* l_0_8_7 l_0_8_7)))
 (let ((?x13081 (* l_0_8_25 l_0_8_25)))
 (let ((?x13079 (* l_0_8_24 l_0_8_24)))
 (let ((?x13077 (* l_0_8_23 l_0_8_23)))
 (let ((?x13080 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x13077) ?x13079)))
 (= (- (- (- (+ ?x13080 ?x13081) ?x13083) ?x13085) ?x13087) 0.0)))))))))
(assert
 (let ((?x13122 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x13119 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x13116 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x13113 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x13040 (* 2.0 l_0_8_13)))
 (let ((?x13110 (* ?x13040 l_0_8_9)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x13108 (* ?x12763 l_0_8_8)))
 (let ((?x12760 (* 2.0 l_0_8_11)))
 (let ((?x13106 (* ?x12760 l_0_8_7)))
 (let ((?x13105 (* (* (- 2.0) l_0_8_10) l_0_8_14)))
 (let ((?x13123 (+ (+ (+ (+ (- (- (- ?x13105 ?x13106) ?x13108) ?x13110) ?x13113) ?x13116) ?x13119) ?x13122)))
 (= ?x13123 0.0))))))))))))))
(assert
 (let ((?x13174 (* l_0_8_30 l_0_8_30)))
 (let ((?x13172 (* l_0_8_29 l_0_8_29)))
 (let ((?x13170 (* l_0_8_28 l_0_8_28)))
 (let ((?x13168 (* l_0_8_27 l_0_8_27)))
 (let ((?x13166 (* l_0_8_26 l_0_8_26)))
 (let ((?x13164 (* l_0_8_15 l_0_8_15)))
 (let ((?x13162 (* l_0_8_14 l_0_8_14)))
 (let ((?x13153 (* l_0_8_13 l_0_8_13)))
 (let ((?x13163 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13153) ?x13162)))
 (let ((?x13175 (+ (+ (+ (+ (+ (- ?x13163 ?x13164) ?x13166) ?x13168) ?x13170) ?x13172) ?x13174)))
 (= ?x13175 0.0))))))))))))
(assert
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x12664 (* ?x12663 l_0_8_47)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12746 (* ?x12745 l_0_8_17)))
 (let ((?x12743 (* (- 2.0) l_0_8_1)))
 (let ((?x12744 (* ?x12743 l_0_8_2)))
 (let ((?x13202 (- (- ?x12744 (* (* 2.0 l_0_8_107) l_0_8_109)) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x13206 (- (- ?x13202 (* (* 2.0 l_0_8_122) l_0_8_124)) (* (* 2.0 l_0_8_123) l_0_8_125))))
 (let ((?x13213 (- (- (- (+ ?x13206 ?x12746) (* (* 2.0 l_0_8_31) l_0_8_32)) ?x12664) (* (* 2.0 l_0_8_62) l_0_8_64))))
 (let ((?x13217 (- (- ?x13213 (* (* 2.0 l_0_8_63) l_0_8_65)) (* (* 2.0 l_0_8_77) l_0_8_79))))
 (let ((?x13222 (- (- ?x13217 (* (* 2.0 l_0_8_78) l_0_8_80)) (* (* 2.0 l_0_8_92) l_0_8_94))))
 (= (- ?x13222 (* (* 2.0 l_0_8_93) l_0_8_95)) 0.0)))))))))))))
(assert
 (let ((?x13335 (* l_0_8_96 l_0_8_96)))
 (let ((?x13333 (* l_0_8_95 l_0_8_95)))
 (let ((?x13331 (* l_0_8_94 l_0_8_94)))
 (let ((?x13329 (* l_0_8_81 l_0_8_81)))
 (let ((?x13327 (* l_0_8_80 l_0_8_80)))
 (let ((?x13325 (* l_0_8_79 l_0_8_79)))
 (let ((?x13323 (* l_0_8_66 l_0_8_66)))
 (let ((?x13321 (* l_0_8_65 l_0_8_65)))
 (let ((?x13319 (* l_0_8_64 l_0_8_64)))
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x13317 (* ?x12663 l_0_8_49)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12766 (* ?x12745 l_0_8_19)))
 (let ((?x13312 (* l_0_8_126 l_0_8_126)))
 (let ((?x13310 (* l_0_8_125 l_0_8_125)))
 (let ((?x13308 (* l_0_8_124 l_0_8_124)))
 (let ((?x13306 (* l_0_8_111 l_0_8_111)))
 (let ((?x13304 (* l_0_8_110 l_0_8_110)))
 (let ((?x13305 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* l_0_8_109 l_0_8_109)) ?x13304)))
 (let ((?x13316 (- (+ (- (- (- (- ?x13305 ?x13306) ?x13308) ?x13310) ?x13312) ?x12766) (* (* 2.0 l_0_8_31) l_0_8_34))))
 (let ((?x13330 (- (- (- (- (- (- (- ?x13316 ?x13317) ?x13319) ?x13321) ?x13323) ?x13325) ?x13327) ?x13329)))
 (= (- (- (- ?x13330 ?x13331) ?x13333) ?x13335) 0.0)))))))))))))))))))))))
(assert
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x13423 (* ?x12663 l_0_8_52)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12853 (* ?x12745 l_0_8_22)))
 (let ((?x12766 (* ?x12745 l_0_8_19)))
 (let ((?x13397 (* 2.0 l_0_8_1)))
 (let ((?x13399 (* ?x13397 l_0_8_7)))
 (let ((?x13403 (- (- (* ?x13397 l_0_8_4) ?x13399) (* (* 2.0 l_0_8_109) l_0_8_112))))
 (let ((?x13409 (- (- ?x13403 (* (* 2.0 l_0_8_110) l_0_8_113)) (* (* 2.0 l_0_8_111) l_0_8_114))))
 (let ((?x13415 (- (- ?x13409 (* (* 2.0 l_0_8_124) l_0_8_127)) (* (* 2.0 l_0_8_125) l_0_8_128))))
 (let ((?x13422 (- (+ (- (- ?x13415 (* (* 2.0 l_0_8_126) l_0_8_129)) ?x12766) ?x12853) (* (* 2.0 l_0_8_31) l_0_8_37))))
 (let ((?x13430 (- (- (- ?x13422 ?x13423) (* (* 2.0 l_0_8_64) l_0_8_67)) (* (* 2.0 l_0_8_65) l_0_8_68))))
 (let ((?x13436 (- (- ?x13430 (* (* 2.0 l_0_8_66) l_0_8_69)) (* (* 2.0 l_0_8_79) l_0_8_82))))
 (let ((?x13442 (- (- ?x13436 (* (* 2.0 l_0_8_80) l_0_8_83)) (* (* 2.0 l_0_8_81) l_0_8_84))))
 (let ((?x13448 (- (- ?x13442 (* (* 2.0 l_0_8_94) l_0_8_97)) (* (* 2.0 l_0_8_95) l_0_8_98))))
 (= (- ?x13448 (* (* 2.0 l_0_8_96) l_0_8_99)) 0.0)))))))))))))))))
(assert
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x13587 (* ?x12663 l_0_8_56)))
 (let ((?x13317 (* ?x12663 l_0_8_49)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12880 (* ?x12745 l_0_8_26)))
 (let ((?x12743 (* (- 2.0) l_0_8_1)))
 (let ((?x12879 (* ?x12743 l_0_8_11)))
 (let ((?x13567 (- (- ?x12879 (* (* 2.0 l_0_8_101) l_0_8_94)) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x13572 (- (- ?x13567 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x13576 (- (- ?x13572 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x13580 (- (- ?x13576 (* (* 2.0 l_0_8_124) l_0_8_131)) (* (* 2.0 l_0_8_125) l_0_8_132))))
 (let ((?x13585 (- (+ (- ?x13580 (* (* 2.0 l_0_8_126) l_0_8_133)) ?x12880) (* (* 2.0 l_0_8_31) l_0_8_41))))
 (let ((?x13592 (- (- (- (+ ?x13585 ?x13317) ?x13587) (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (let ((?x13596 (- (- ?x13592 (* (* 2.0 l_0_8_66) l_0_8_73)) (* (* 2.0 l_0_8_79) l_0_8_86))))
 (let ((?x13600 (- (- ?x13596 (* (* 2.0 l_0_8_80) l_0_8_87)) (* (* 2.0 l_0_8_81) l_0_8_88))))
 (= ?x13600 0.0)))))))))))))))))
(assert
 (let ((?x12750 (* l_0_8_48 l_0_8_48)))
 (let ((?x12748 (* l_0_8_47 l_0_8_47)))
 (let ((?x13712 (* l_0_8_33 l_0_8_33)))
 (let ((?x13710 (* l_0_8_32 l_0_8_32)))
 (let ((?x12896 (* l_0_8_3 l_0_8_3)))
 (let ((?x12894 (* l_0_8_2 l_0_8_2)))
 (let ((?x12892 (* l_0_8_18 l_0_8_18)))
 (let ((?x12891 (* l_0_8_17 l_0_8_17)))
 (let ((?x12893 (+ ?x12891 ?x12892)))
 (let ((?x12897 (- (- ?x12893 ?x12894) ?x12896)))
 (= (- (- (- (- ?x12897 ?x13710) ?x13712) ?x12748) ?x12750) 0.0))))))))))))
(assert
 (let ((?x12785 (* 2.0 l_0_8_48)))
 (let ((?x12786 (* ?x12785 l_0_8_50)))
 (let ((?x12780 (* 2.0 l_0_8_47)))
 (let ((?x12781 (* ?x12780 l_0_8_49)))
 (let ((?x12912 (* 2.0 l_0_8_3)))
 (let ((?x12913 (* ?x12912 l_0_8_5)))
 (let ((?x12909 (* 2.0 l_0_8_2)))
 (let ((?x12910 (* ?x12909 l_0_8_4)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12907 (* ?x12771 l_0_8_20)))
 (let ((?x12914 (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_19) ?x12907) ?x12910) ?x12913)))
 (let ((?x13736 (- (- ?x12914 (* (* 2.0 l_0_8_32) l_0_8_34)) (* (* 2.0 l_0_8_33) l_0_8_35))))
 (= (- (- ?x13736 ?x12781) ?x12786) 0.0))))))))))))))
(assert
 (let ((?x12785 (* 2.0 l_0_8_48)))
 (let ((?x12859 (* ?x12785 l_0_8_53)))
 (let ((?x12780 (* 2.0 l_0_8_47)))
 (let ((?x12857 (* ?x12780 l_0_8_52)))
 (let ((?x12912 (* 2.0 l_0_8_3)))
 (let ((?x12939 (* ?x12912 l_0_8_8)))
 (let ((?x12913 (* ?x12912 l_0_8_5)))
 (let ((?x12909 (* 2.0 l_0_8_2)))
 (let ((?x12937 (* ?x12909 l_0_8_7)))
 (let ((?x12910 (* ?x12909 l_0_8_4)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12935 (* ?x12771 l_0_8_23)))
 (let ((?x12907 (* ?x12771 l_0_8_20)))
 (let ((?x12768 (* 2.0 l_0_8_17)))
 (let ((?x12934 (* ?x12768 l_0_8_22)))
 (let ((?x13767 (+ (+ (- (+ (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x12934) ?x12907) ?x12935) ?x12910)))
 (let ((?x13772 (- (- (+ (- ?x13767 ?x12937) ?x12913) ?x12939) (* (* 2.0 l_0_8_32) l_0_8_37))))
 (= (- (- (- ?x13772 (* (* 2.0 l_0_8_33) l_0_8_38)) ?x12857) ?x12859) 0.0)))))))))))))))))))
(assert
 (let ((?x12979 (* l_0_8_6 l_0_8_6)))
 (let ((?x13824 (* l_0_8_51 l_0_8_51)))
 (let ((?x13822 (* l_0_8_50 l_0_8_50)))
 (let ((?x12977 (* l_0_8_5 l_0_8_5)))
 (let ((?x13819 (* l_0_8_49 l_0_8_49)))
 (let ((?x12975 (* l_0_8_4 l_0_8_4)))
 (let ((?x13816 (* l_0_8_36 l_0_8_36)))
 (let ((?x13814 (* l_0_8_35 l_0_8_35)))
 (let ((?x13812 (* l_0_8_34 l_0_8_34)))
 (let ((?x12973 (* l_0_8_21 l_0_8_21)))
 (let ((?x12974 (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x12973)))
 (let ((?x13823 (- (- (- (- (- (- (- ?x12974 ?x13812) ?x13814) ?x13816) ?x12975) ?x13819) ?x12977) ?x13822)))
 (= (- (- ?x13823 ?x13824) ?x12979) 0.0))))))))))))))
(assert
 (let ((?x12979 (* l_0_8_6 l_0_8_6)))
 (let ((?x13008 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13877 (* 2.0 l_0_8_51)))
 (let ((?x13878 (* ?x13877 l_0_8_54)))
 (let ((?x13874 (* 2.0 l_0_8_50)))
 (let ((?x13875 (* ?x13874 l_0_8_53)))
 (let ((?x12977 (* l_0_8_5 l_0_8_5)))
 (let ((?x13005 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13869 (* 2.0 l_0_8_49)))
 (let ((?x13870 (* ?x13869 l_0_8_52)))
 (let ((?x12975 (* l_0_8_4 l_0_8_4)))
 (let ((?x13002 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x12973 (* l_0_8_21 l_0_8_21)))
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x12999 (* ?x12998 l_0_8_24)))
 (let ((?x12971 (* l_0_8_20 l_0_8_20)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x12996 (* ?x12995 l_0_8_23)))
 (let ((?x13854 (+ (- (* (* 2.0 l_0_8_19) l_0_8_22) (* l_0_8_19 l_0_8_19)) ?x12996)))
 (let ((?x13860 (- (- (+ (- ?x13854 ?x12971) ?x12999) ?x12973) (* (* 2.0 l_0_8_34) l_0_8_37))))
 (let ((?x13866 (- (- ?x13860 (* (* 2.0 l_0_8_35) l_0_8_38)) (* (* 2.0 l_0_8_36) l_0_8_39))))
 (let ((?x13879 (- (- (+ (- (- (+ (- ?x13866 ?x13002) ?x12975) ?x13870) ?x13005) ?x12977) ?x13875) ?x13878)))
 (= (+ (- ?x13879 ?x13008) ?x12979) 0.0))))))))))))))))))))))))
(assert
 (let ((?x13824 (* l_0_8_51 l_0_8_51)))
 (let ((?x13877 (* 2.0 l_0_8_51)))
 (let ((?x13955 (* ?x13877 l_0_8_58)))
 (let ((?x13822 (* l_0_8_50 l_0_8_50)))
 (let ((?x13874 (* 2.0 l_0_8_50)))
 (let ((?x13952 (* ?x13874 l_0_8_57)))
 (let ((?x13819 (* l_0_8_49 l_0_8_49)))
 (let ((?x13869 (* 2.0 l_0_8_49)))
 (let ((?x13949 (* ?x13869 l_0_8_56)))
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x13047 (* ?x12998 l_0_8_28)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x13045 (* ?x12995 l_0_8_27)))
 (let ((?x12993 (* 2.0 l_0_8_19)))
 (let ((?x13043 (* ?x12993 l_0_8_26)))
 (let ((?x13040 (* 2.0 l_0_8_13)))
 (let ((?x13041 (* ?x13040 l_0_8_6)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x13038 (* ?x12763 l_0_8_5)))
 (let ((?x13046 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x13038) ?x13041) ?x13043) ?x13045)))
 (let ((?x13048 (+ ?x13046 ?x13047)))
 (let ((?x13946 (- (- ?x13048 (* (* 2.0 l_0_8_34) l_0_8_41)) (* (* 2.0 l_0_8_35) l_0_8_42))))
 (let ((?x13953 (- (+ (- (- ?x13946 (* (* 2.0 l_0_8_36) l_0_8_43)) ?x13949) ?x13819) ?x13952)))
 (= (+ (- (+ ?x13953 ?x13822) ?x13955) ?x13824) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x13087 (* l_0_8_9 l_0_8_9)))
 (let ((?x13085 (* l_0_8_8 l_0_8_8)))
 (let ((?x13083 (* l_0_8_7 l_0_8_7)))
 (let ((?x13008 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x14026 (* l_0_8_55 l_0_8_55)))
 (let ((?x14024 (* l_0_8_54 l_0_8_54)))
 (let ((?x14022 (* l_0_8_53 l_0_8_53)))
 (let ((?x14020 (* l_0_8_52 l_0_8_52)))
 (let ((?x13005 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x14017 (* l_0_8_40 l_0_8_40)))
 (let ((?x13002 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x14014 (* l_0_8_39 l_0_8_39)))
 (let ((?x14012 (* l_0_8_38 l_0_8_38)))
 (let ((?x14010 (* l_0_8_37 l_0_8_37)))
 (let ((?x13081 (* l_0_8_25 l_0_8_25)))
 (let ((?x13079 (* l_0_8_24 l_0_8_24)))
 (let ((?x13077 (* l_0_8_23 l_0_8_23)))
 (let ((?x13069 (* l_0_8_22 l_0_8_22)))
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x12999 (* ?x12998 l_0_8_24)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x12996 (* ?x12995 l_0_8_23)))
 (let ((?x14004 (- (- (* (- l_0_8_10) l_0_8_10) (* (* 2.0 l_0_8_19) l_0_8_22)) ?x12996)))
 (let ((?x14013 (- (- (+ (+ (+ (+ (- ?x14004 ?x12999) ?x13069) ?x13077) ?x13079) ?x13081) ?x14010) ?x14012)))
 (let ((?x14025 (- (- (- (+ (- (+ (- ?x14013 ?x14014) ?x13002) ?x14017) ?x13005) ?x14020) ?x14022) ?x14024)))
 (= (- (- (- (+ (- ?x14025 ?x14026) ?x13008) ?x13083) ?x13085) ?x13087) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x14121 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x14118 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x14115 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x14112 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13877 (* 2.0 l_0_8_51)))
 (let ((?x13878 (* ?x13877 l_0_8_54)))
 (let ((?x13874 (* 2.0 l_0_8_50)))
 (let ((?x13875 (* ?x13874 l_0_8_53)))
 (let ((?x13869 (* 2.0 l_0_8_49)))
 (let ((?x13870 (* ?x13869 l_0_8_52)))
 (let ((?x13122 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x13119 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x13116 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x13113 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x12998 (* 2.0 l_0_8_21)))
 (let ((?x13047 (* ?x12998 l_0_8_28)))
 (let ((?x12995 (* 2.0 l_0_8_20)))
 (let ((?x13045 (* ?x12995 l_0_8_27)))
 (let ((?x12993 (* 2.0 l_0_8_19)))
 (let ((?x13043 (* ?x12993 l_0_8_26)))
 (let ((?x13040 (* 2.0 l_0_8_13)))
 (let ((?x13110 (* ?x13040 l_0_8_9)))
 (let ((?x13041 (* ?x13040 l_0_8_6)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x13108 (* ?x12763 l_0_8_8)))
 (let ((?x13038 (* ?x12763 l_0_8_5)))
 (let ((?x12760 (* 2.0 l_0_8_11)))
 (let ((?x13106 (* ?x12760 l_0_8_7)))
 (let ((?x14085 (+ (- (+ (* (* (- 2.0) l_0_8_10) l_0_8_14) (* ?x12760 l_0_8_4)) ?x13106) ?x13038)))
 (let ((?x14092 (+ (- (- (- (- (+ (- ?x14085 ?x13108) ?x13041) ?x13110) ?x13043) ?x13045) ?x13047) ?x13113)))
 (let ((?x14098 (- (+ (+ (+ ?x14092 ?x13116) ?x13119) ?x13122) (* (* 2.0 l_0_8_37) l_0_8_41))))
 (let ((?x14104 (- (- ?x14098 (* (* 2.0 l_0_8_38) l_0_8_42)) (* (* 2.0 l_0_8_39) l_0_8_43))))
 (let ((?x14110 (+ (+ (+ (- ?x14104 (* (* 2.0 l_0_8_40) l_0_8_44)) ?x13870) ?x13875) ?x13878)))
 (= (- (- (- (- ?x14110 ?x14112) ?x14115) ?x14118) ?x14121) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14218 (* l_0_8_60 l_0_8_60)))
 (let ((?x14216 (* l_0_8_59 l_0_8_59)))
 (let ((?x14214 (* l_0_8_58 l_0_8_58)))
 (let ((?x14212 (* l_0_8_57 l_0_8_57)))
 (let ((?x14210 (* l_0_8_56 l_0_8_56)))
 (let ((?x13877 (* 2.0 l_0_8_51)))
 (let ((?x13955 (* ?x13877 l_0_8_58)))
 (let ((?x13874 (* 2.0 l_0_8_50)))
 (let ((?x13952 (* ?x13874 l_0_8_57)))
 (let ((?x13869 (* 2.0 l_0_8_49)))
 (let ((?x13949 (* ?x13869 l_0_8_56)))
 (let ((?x14205 (* l_0_8_45 l_0_8_45)))
 (let ((?x14203 (* l_0_8_44 l_0_8_44)))
 (let ((?x14201 (* l_0_8_43 l_0_8_43)))
 (let ((?x14199 (* l_0_8_42 l_0_8_42)))
 (let ((?x14197 (* l_0_8_41 l_0_8_41)))
 (let ((?x13174 (* l_0_8_30 l_0_8_30)))
 (let ((?x13172 (* l_0_8_29 l_0_8_29)))
 (let ((?x13170 (* l_0_8_28 l_0_8_28)))
 (let ((?x13168 (* l_0_8_27 l_0_8_27)))
 (let ((?x13166 (* l_0_8_26 l_0_8_26)))
 (let ((?x13164 (* l_0_8_15 l_0_8_15)))
 (let ((?x13162 (* l_0_8_14 l_0_8_14)))
 (let ((?x13153 (* l_0_8_13 l_0_8_13)))
 (let ((?x13163 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13153) ?x13162)))
 (let ((?x13175 (+ (+ (+ (+ (+ (- ?x13163 ?x13164) ?x13166) ?x13168) ?x13170) ?x13172) ?x13174)))
 (let ((?x14208 (+ (+ (- (- (- (- (- ?x13175 ?x14197) ?x14199) ?x14201) ?x14203) ?x14205) ?x13949) ?x13952)))
 (= (- (- (- (- (- (+ ?x14208 ?x13955) ?x14210) ?x14212) ?x14214) ?x14216) ?x14218) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x12558 (* l_0_8_16 l_0_8_16)))
 (let ((?x14258 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_112)) (* (* 2.0 l_0_8_121) l_0_8_127))))
 (let ((?x14263 (- (- (- ?x14258 ?x12558) (* (* 2.0 l_0_8_61) l_0_8_67)) (* (* 2.0 l_0_8_76) l_0_8_82))))
 (= (- ?x14263 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0)))))
(assert
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12746 (* ?x12745 l_0_8_17)))
 (let ((?x14304 (- (* (* 2.0 l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_107) l_0_8_112))))
 (let ((?x14308 (- (- ?x14304 (* (* 2.0 l_0_8_108) l_0_8_113)) (* (* 2.0 l_0_8_122) l_0_8_127))))
 (let ((?x14313 (- (- (- ?x14308 (* (* 2.0 l_0_8_123) l_0_8_128)) ?x12746) (* (* 2.0 l_0_8_62) l_0_8_67))))
 (let ((?x14317 (- (- ?x14313 (* (* 2.0 l_0_8_63) l_0_8_68)) (* (* 2.0 l_0_8_77) l_0_8_82))))
 (let ((?x14321 (- (- ?x14317 (* (* 2.0 l_0_8_78) l_0_8_83)) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x14321 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0)))))))))
(assert
 (let ((?x14428 (* l_0_8_99 l_0_8_99)))
 (let ((?x14426 (* l_0_8_98 l_0_8_98)))
 (let ((?x14424 (* l_0_8_97 l_0_8_97)))
 (let ((?x14422 (* l_0_8_85 l_0_8_85)))
 (let ((?x14420 (* l_0_8_84 l_0_8_84)))
 (let ((?x14418 (* l_0_8_83 l_0_8_83)))
 (let ((?x14416 (* l_0_8_82 l_0_8_82)))
 (let ((?x14414 (* l_0_8_70 l_0_8_70)))
 (let ((?x14412 (* l_0_8_69 l_0_8_69)))
 (let ((?x14410 (* l_0_8_68 l_0_8_68)))
 (let ((?x14408 (* l_0_8_67 l_0_8_67)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12853 (* ?x12745 l_0_8_22)))
 (let ((?x14405 (* l_0_8_130 l_0_8_130)))
 (let ((?x14403 (* l_0_8_129 l_0_8_129)))
 (let ((?x14401 (* l_0_8_128 l_0_8_128)))
 (let ((?x14399 (* l_0_8_127 l_0_8_127)))
 (let ((?x14397 (* l_0_8_115 l_0_8_115)))
 (let ((?x14395 (* l_0_8_114 l_0_8_114)))
 (let ((?x14393 (* l_0_8_113 l_0_8_113)))
 (let ((?x14391 (* l_0_8_112 l_0_8_112)))
 (let ((?x14392 (- (- (* (* 2.0 l_0_8_1) l_0_8_7) (* l_0_8_100 l_0_8_100)) ?x14391)))
 (let ((?x14406 (- (- (- (- (- (- (- ?x14392 ?x14393) ?x14395) ?x14397) ?x14399) ?x14401) ?x14403) ?x14405)))
 (let ((?x14419 (- (- (- (- (- (- (- ?x14406 ?x12853) ?x14408) ?x14410) ?x14412) ?x14414) ?x14416) ?x14418)))
 (= (- (- (- (- (- ?x14419 ?x14420) ?x14422) ?x14424) ?x14426) ?x14428) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x13423 (* ?x12663 l_0_8_52)))
 (let ((?x12745 (* 2.0 l_0_8_16)))
 (let ((?x12880 (* ?x12745 l_0_8_26)))
 (let ((?x14498 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x14502 (- (- ?x14498 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x14507 (- (- ?x14502 (* (* 2.0 l_0_8_103) l_0_8_99)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x14513 (- (- ?x14507 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x14519 (- (- ?x14513 (* (* 2.0 l_0_8_115) l_0_8_119)) (* (* 2.0 l_0_8_127) l_0_8_131))))
 (let ((?x14525 (- (- ?x14519 (* (* 2.0 l_0_8_128) l_0_8_132)) (* (* 2.0 l_0_8_129) l_0_8_133))))
 (let ((?x14533 (- (+ (- (- ?x14525 (* (* 2.0 l_0_8_130) l_0_8_134)) ?x12880) ?x13423) (* (* 2.0 l_0_8_67) l_0_8_71))))
 (let ((?x14539 (- (- ?x14533 (* (* 2.0 l_0_8_68) l_0_8_72)) (* (* 2.0 l_0_8_69) l_0_8_73))))
 (let ((?x14545 (- (- ?x14539 (* (* 2.0 l_0_8_70) l_0_8_74)) (* (* 2.0 l_0_8_82) l_0_8_86))))
 (let ((?x14551 (- (- ?x14545 (* (* 2.0 l_0_8_83) l_0_8_87)) (* (* 2.0 l_0_8_84) l_0_8_88))))
 (= (- ?x14551 (* (* 2.0 l_0_8_85) l_0_8_89)) 0.0))))))))))))))))
(assert
 (let ((?x12896 (* l_0_8_3 l_0_8_3)))
 (let ((?x12894 (* l_0_8_2 l_0_8_2)))
 (let ((?x14685 (+ (+ (- (* (- l_0_8_17) l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x12894) ?x12896)))
 (= ?x14685 0.0)))))
(assert
 (let ((?x12912 (* 2.0 l_0_8_3)))
 (let ((?x12939 (* ?x12912 l_0_8_8)))
 (let ((?x12909 (* 2.0 l_0_8_2)))
 (let ((?x12937 (* ?x12909 l_0_8_7)))
 (let ((?x12771 (* 2.0 l_0_8_18)))
 (let ((?x12935 (* ?x12771 l_0_8_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x12935) ?x12937) ?x12939) 0.0))))))))
(assert
 (let ((?x13087 (* l_0_8_9 l_0_8_9)))
 (let ((?x13085 (* l_0_8_8 l_0_8_8)))
 (let ((?x13083 (* l_0_8_7 l_0_8_7)))
 (let ((?x13081 (* l_0_8_25 l_0_8_25)))
 (let ((?x13079 (* l_0_8_24 l_0_8_24)))
 (let ((?x13077 (* l_0_8_23 l_0_8_23)))
 (let ((?x14699 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x13077) ?x13079)))
 (= (+ (+ (+ (- ?x14699 ?x13081) ?x13083) ?x13085) ?x13087) 0.0)))))))))
(assert
 (let ((?x14026 (* l_0_8_55 l_0_8_55)))
 (let ((?x14024 (* l_0_8_54 l_0_8_54)))
 (let ((?x14022 (* l_0_8_53 l_0_8_53)))
 (let ((?x14020 (* l_0_8_52 l_0_8_52)))
 (let ((?x13122 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x13119 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x13116 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x13113 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x13040 (* 2.0 l_0_8_13)))
 (let ((?x13110 (* ?x13040 l_0_8_9)))
 (let ((?x12763 (* 2.0 l_0_8_12)))
 (let ((?x13108 (* ?x12763 l_0_8_8)))
 (let ((?x12760 (* 2.0 l_0_8_11)))
 (let ((?x13106 (* ?x12760 l_0_8_7)))
 (let ((?x14718 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x13106) ?x13108) ?x13110) ?x13113)))
 (let ((?x14725 (+ (+ (+ (+ (- (- (- ?x14718 ?x13116) ?x13119) ?x13122) ?x14020) ?x14022) ?x14024) ?x14026)))
 (= ?x14725 0.0))))))))))))))))))
(assert
 (let ((?x14121 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x14118 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x14115 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x14112 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13174 (* l_0_8_30 l_0_8_30)))
 (let ((?x13172 (* l_0_8_29 l_0_8_29)))
 (let ((?x13170 (* l_0_8_28 l_0_8_28)))
 (let ((?x13168 (* l_0_8_27 l_0_8_27)))
 (let ((?x13166 (* l_0_8_26 l_0_8_26)))
 (let ((?x13164 (* l_0_8_15 l_0_8_15)))
 (let ((?x13162 (* l_0_8_14 l_0_8_14)))
 (let ((?x13153 (* l_0_8_13 l_0_8_13)))
 (let ((?x14743 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13153) ?x13162)))
 (let ((?x14750 (+ (- (- (- (- (- (+ ?x14743 ?x13164) ?x13166) ?x13168) ?x13170) ?x13172) ?x13174) ?x14112)))
 (= (+ (+ (+ ?x14750 ?x14115) ?x14118) ?x14121) 0.0))))))))))))))))
(assert
 (let ((?x12562 (* l_0_8_46 l_0_8_46)))
 (let ((?x14770 (- (* (* (- 2.0) l_0_8_101) l_0_8_91) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x14775 (- (+ (- ?x14770 (* (* 2.0 l_0_8_121) l_0_8_131)) ?x12562) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= (- ?x14775 (* (* 2.0 l_0_8_76) l_0_8_86)) 0.0)))))
(assert
 (let ((?x14856 (* l_0_8_90 l_0_8_90)))
 (let ((?x14854 (* l_0_8_89 l_0_8_89)))
 (let ((?x14852 (* l_0_8_88 l_0_8_88)))
 (let ((?x14850 (* l_0_8_87 l_0_8_87)))
 (let ((?x14848 (* l_0_8_86 l_0_8_86)))
 (let ((?x14846 (* l_0_8_75 l_0_8_75)))
 (let ((?x14844 (* l_0_8_74 l_0_8_74)))
 (let ((?x14842 (* l_0_8_73 l_0_8_73)))
 (let ((?x14840 (* l_0_8_72 l_0_8_72)))
 (let ((?x14838 (* l_0_8_71 l_0_8_71)))
 (let ((?x12663 (* 2.0 l_0_8_46)))
 (let ((?x13587 (* ?x12663 l_0_8_56)))
 (let ((?x14835 (* l_0_8_135 l_0_8_135)))
 (let ((?x14833 (* l_0_8_134 l_0_8_134)))
 (let ((?x14831 (* l_0_8_133 l_0_8_133)))
 (let ((?x14829 (* l_0_8_132 l_0_8_132)))
 (let ((?x14827 (* l_0_8_131 l_0_8_131)))
 (let ((?x14825 (* l_0_8_120 l_0_8_120)))
 (let ((?x14823 (* l_0_8_119 l_0_8_119)))
 (let ((?x14821 (* l_0_8_118 l_0_8_118)))
 (let ((?x14819 (* l_0_8_117 l_0_8_117)))
 (let ((?x14817 (* l_0_8_116 l_0_8_116)))
 (let ((?x14815 (* l_0_8_105 l_0_8_105)))
 (let ((?x14813 (* l_0_8_104 l_0_8_104)))
 (let ((?x14811 (* l_0_8_103 l_0_8_103)))
 (let ((?x14812 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x14811)))
 (let ((?x14826 (- (- (- (- (- (- (- ?x14812 ?x14813) ?x14815) ?x14817) ?x14819) ?x14821) ?x14823) ?x14825)))
 (let ((?x14839 (- (+ (- (- (- (- (- ?x14826 ?x14827) ?x14829) ?x14831) ?x14833) ?x14835) ?x13587) ?x14838)))
 (let ((?x14853 (- (- (- (- (- (- (- ?x14839 ?x14840) ?x14842) ?x14844) ?x14846) ?x14848) ?x14850) ?x14852)))
 (= (- (- ?x14853 ?x14854) ?x14856) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x14218 (* l_0_8_60 l_0_8_60)))
 (let ((?x14216 (* l_0_8_59 l_0_8_59)))
 (let ((?x14214 (* l_0_8_58 l_0_8_58)))
 (let ((?x14938 (+ (+ (+ (* l_0_8_56 l_0_8_56) (* l_0_8_57 l_0_8_57)) ?x14214) ?x14216)))
 (= (+ ?x14938 ?x14218) 0.0))))))
(assert
 (let ((?x14946 (- (* (* (- 2.0) l_0_8_106) l_0_8_107) (* (* 2.0 l_0_8_121) l_0_8_122))))
 (let ((?x14950 (- (- ?x14946 (* (* 2.0 l_0_8_61) l_0_8_62)) (* (* 2.0 l_0_8_76) l_0_8_77))))
 (= (- ?x14950 (* (* 2.0 l_0_8_91) l_0_8_92)) 0.0))))
(assert
 (let ((?x15001 (* l_0_8_93 l_0_8_93)))
 (let ((?x14999 (* l_0_8_92 l_0_8_92)))
 (let ((?x14997 (* l_0_8_78 l_0_8_78)))
 (let ((?x14995 (* l_0_8_77 l_0_8_77)))
 (let ((?x14993 (* l_0_8_63 l_0_8_63)))
 (let ((?x14991 (* l_0_8_62 l_0_8_62)))
 (let ((?x14989 (* l_0_8_123 l_0_8_123)))
 (let ((?x14987 (* l_0_8_122 l_0_8_122)))
 (let ((?x14988 (- (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) ?x14987)))
 (let ((?x15002 (- (- (- (- (- (- (- ?x14988 ?x14989) ?x14991) ?x14993) ?x14995) ?x14997) ?x14999) ?x15001)))
 (= ?x15002 0.0))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_121 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_130 0.0))
(assert
 (>= l_0_8_135 0.0))
(assert
 (let ((?x15096 (* l_0_9_46 l_0_9_46)))
 (let ((?x15094 (* l_0_9_31 l_0_9_31)))
 (let ((?x15092 (* l_0_9_16 l_0_9_16)))
 (let ((?x15088 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_109)) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x15097 (- (- (+ (- ?x15088 (* (* 2.0 l_0_9_136) l_0_9_139)) ?x15092) ?x15094) ?x15096)))
 (let ((?x15103 (- (- ?x15097 (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_76) l_0_9_79))))
 (= (+ (- ?x15103 (* (* 2.0 l_0_9_91) l_0_9_94)) 1.0) 0.0))))))))
(assert
 (let ((?x15096 (* l_0_9_46 l_0_9_46)))
 (let ((?x15159 (- (* (* (- 2.0) l_0_9_101) l_0_9_91) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x15163 (- (- ?x15159 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_136) l_0_9_146))))
 (let ((?x15168 (- (- (+ ?x15163 ?x15096) (* (* 2.0 l_0_9_61) l_0_9_71)) (* (* 2.0 l_0_9_76) l_0_9_86))))
 (= (- ?x15168 1.0) 0.0))))))
(assert
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x15233 (* ?x15232 l_0_9_47)))
 (let ((?x15092 (* l_0_9_16 l_0_9_16)))
 (let ((?x15212 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_101) l_0_9_92)) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x15218 (- (- ?x15212 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x15224 (- (- ?x15218 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x15230 (- (- ?x15224 (* (* 2.0 l_0_9_137) l_0_9_146)) (* (* 2.0 l_0_9_138) l_0_9_147))))
 (let ((?x15240 (- (- (+ (+ ?x15230 ?x15092) ?x15233) (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (let ((?x15246 (- (- ?x15240 (* (* 2.0 l_0_9_77) l_0_9_86)) (* (* 2.0 l_0_9_78) l_0_9_87))))
 (= ?x15246 0.0)))))))))))
(assert
 (let ((?x15331 (* l_0_9_48 l_0_9_48)))
 (let ((?x15329 (* l_0_9_47 l_0_9_47)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15327 (* ?x15326 l_0_9_17)))
 (let ((?x15324 (* (- 2.0) l_0_9_1)))
 (let ((?x15325 (* ?x15324 l_0_9_2)))
 (= (+ (+ (+ ?x15325 ?x15327) ?x15329) ?x15331) 0.0))))))))
(assert
 (let ((?x15366 (* 2.0 l_0_9_48)))
 (let ((?x15369 (* ?x15366 l_0_9_57)))
 (let ((?x15367 (* ?x15366 l_0_9_50)))
 (let ((?x15361 (* 2.0 l_0_9_47)))
 (let ((?x15364 (* ?x15361 l_0_9_56)))
 (let ((?x15362 (* ?x15361 l_0_9_49)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15353 (* ?x15352 l_0_9_27)))
 (let ((?x15349 (* 2.0 l_0_9_17)))
 (let ((?x15350 (* ?x15349 l_0_9_26)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15347 (* ?x15326 l_0_9_19)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15345 (* ?x15344 l_0_9_3)))
 (let ((?x15341 (* 2.0 l_0_9_11)))
 (let ((?x15342 (* ?x15341 l_0_9_2)))
 (let ((?x15324 (* (- 2.0) l_0_9_1)))
 (let ((?x15340 (* ?x15324 l_0_9_4)))
 (let ((?x15357 (- (+ (+ (+ (- (- ?x15340 ?x15342) ?x15345) ?x15347) ?x15350) ?x15353) (* (* 2.0 l_0_9_32) l_0_9_41))))
 (let ((?x15368 (+ (- (+ (- ?x15357 (* (* 2.0 l_0_9_33) l_0_9_42)) ?x15362) ?x15364) ?x15367)))
 (= (- ?x15368 ?x15369) 0.0))))))))))))))))))))))
(assert
 (let ((?x15366 (* 2.0 l_0_9_48)))
 (let ((?x15440 (* ?x15366 l_0_9_53)))
 (let ((?x15361 (* 2.0 l_0_9_47)))
 (let ((?x15438 (* ?x15361 l_0_9_52)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15353 (* ?x15352 l_0_9_27)))
 (let ((?x15349 (* 2.0 l_0_9_17)))
 (let ((?x15350 (* ?x15349 l_0_9_26)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15434 (* ?x15326 l_0_9_22)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15345 (* ?x15344 l_0_9_3)))
 (let ((?x15341 (* 2.0 l_0_9_11)))
 (let ((?x15342 (* ?x15341 l_0_9_2)))
 (let ((?x15436 (- (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x15342) ?x15345) ?x15434) ?x15350)))
 (= (+ (+ (- ?x15436 ?x15353) ?x15438) ?x15440) 0.0)))))))))))))))))
(assert
 (let ((?x15366 (* 2.0 l_0_9_48)))
 (let ((?x15369 (* ?x15366 l_0_9_57)))
 (let ((?x15361 (* 2.0 l_0_9_47)))
 (let ((?x15364 (* ?x15361 l_0_9_56)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15461 (* ?x15326 l_0_9_26)))
 (let ((?x15324 (* (- 2.0) l_0_9_1)))
 (let ((?x15460 (* ?x15324 l_0_9_11)))
 (= (+ (+ (+ ?x15460 ?x15461) ?x15364) ?x15369) 0.0))))))))))
(assert
 (let ((?x15477 (* l_0_9_3 l_0_9_3)))
 (let ((?x15475 (* l_0_9_2 l_0_9_2)))
 (let ((?x15473 (* l_0_9_18 l_0_9_18)))
 (let ((?x15472 (* l_0_9_17 l_0_9_17)))
 (let ((?x15474 (+ ?x15472 ?x15473)))
 (let ((?x15478 (- (- ?x15474 ?x15475) ?x15477)))
 (= ?x15478 0.0))))))))
(assert
 (let ((?x15493 (* 2.0 l_0_9_3)))
 (let ((?x15494 (* ?x15493 l_0_9_5)))
 (let ((?x15490 (* 2.0 l_0_9_2)))
 (let ((?x15491 (* ?x15490 l_0_9_4)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15488 (* ?x15352 l_0_9_20)))
 (let ((?x15495 (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_19) ?x15488) ?x15491) ?x15494)))
 (= ?x15495 0.0)))))))))
(assert
 (let ((?x15493 (* 2.0 l_0_9_3)))
 (let ((?x15520 (* ?x15493 l_0_9_8)))
 (let ((?x15490 (* 2.0 l_0_9_2)))
 (let ((?x15518 (* ?x15490 l_0_9_7)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15516 (* ?x15352 l_0_9_23)))
 (let ((?x15349 (* 2.0 l_0_9_17)))
 (let ((?x15515 (* ?x15349 l_0_9_22)))
 (= (- (- (+ ?x15515 ?x15516) ?x15518) ?x15520) 0.0))))))))))
(assert
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15353 (* ?x15352 l_0_9_27)))
 (let ((?x15349 (* 2.0 l_0_9_17)))
 (let ((?x15350 (* ?x15349 l_0_9_26)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15345 (* ?x15344 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x15345) ?x15350) ?x15353) 0.0))))))))
(assert
 (let ((?x15560 (* l_0_9_6 l_0_9_6)))
 (let ((?x15558 (* l_0_9_5 l_0_9_5)))
 (let ((?x15556 (* l_0_9_4 l_0_9_4)))
 (let ((?x15554 (* l_0_9_21 l_0_9_21)))
 (let ((?x15555 (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15554)))
 (= (- (- (- ?x15555 ?x15556) ?x15558) ?x15560) 0.0)))))))
(assert
 (let ((?x15589 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15586 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15583 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15580 (* ?x15579 l_0_9_24)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15577 (* ?x15576 l_0_9_23)))
 (let ((?x15574 (* 2.0 l_0_9_19)))
 (let ((?x15575 (* ?x15574 l_0_9_22)))
 (= (- (- (- (+ (+ ?x15575 ?x15577) ?x15580) ?x15583) ?x15586) ?x15589) 0.0)))))))))))
(assert
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15628 (* ?x15579 l_0_9_28)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15626 (* ?x15576 l_0_9_27)))
 (let ((?x15574 (* 2.0 l_0_9_19)))
 (let ((?x15624 (* ?x15574 l_0_9_26)))
 (let ((?x15621 (* 2.0 l_0_9_13)))
 (let ((?x15622 (* ?x15621 l_0_9_6)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15619 (* ?x15344 l_0_9_5)))
 (let ((?x15627 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x15619) ?x15622) ?x15624) ?x15626)))
 (let ((?x15629 (+ ?x15627 ?x15628)))
 (= ?x15629 0.0))))))))))))))
(assert
 (let ((?x15668 (* l_0_9_9 l_0_9_9)))
 (let ((?x15666 (* l_0_9_8 l_0_9_8)))
 (let ((?x15664 (* l_0_9_7 l_0_9_7)))
 (let ((?x15662 (* l_0_9_25 l_0_9_25)))
 (let ((?x15660 (* l_0_9_24 l_0_9_24)))
 (let ((?x15658 (* l_0_9_23 l_0_9_23)))
 (let ((?x15661 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x15658) ?x15660)))
 (= (- (- (- (+ ?x15661 ?x15662) ?x15664) ?x15666) ?x15668) 0.0)))))))))
(assert
 (let ((?x15703 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15700 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15697 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15694 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15621 (* 2.0 l_0_9_13)))
 (let ((?x15691 (* ?x15621 l_0_9_9)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15689 (* ?x15344 l_0_9_8)))
 (let ((?x15341 (* 2.0 l_0_9_11)))
 (let ((?x15687 (* ?x15341 l_0_9_7)))
 (let ((?x15686 (* (* (- 2.0) l_0_9_10) l_0_9_14)))
 (let ((?x15704 (+ (+ (+ (+ (- (- (- ?x15686 ?x15687) ?x15689) ?x15691) ?x15694) ?x15697) ?x15700) ?x15703)))
 (= ?x15704 0.0))))))))))))))
(assert
 (let ((?x15755 (* l_0_9_30 l_0_9_30)))
 (let ((?x15753 (* l_0_9_29 l_0_9_29)))
 (let ((?x15751 (* l_0_9_28 l_0_9_28)))
 (let ((?x15749 (* l_0_9_27 l_0_9_27)))
 (let ((?x15747 (* l_0_9_26 l_0_9_26)))
 (let ((?x15745 (* l_0_9_15 l_0_9_15)))
 (let ((?x15743 (* l_0_9_14 l_0_9_14)))
 (let ((?x15734 (* l_0_9_13 l_0_9_13)))
 (let ((?x15744 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15734) ?x15743)))
 (let ((?x15756 (+ (+ (+ (+ (+ (- ?x15744 ?x15745) ?x15747) ?x15749) ?x15751) ?x15753) ?x15755)))
 (= ?x15756 0.0))))))))))))
(assert
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x15233 (* ?x15232 l_0_9_47)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15327 (* ?x15326 l_0_9_17)))
 (let ((?x15324 (* (- 2.0) l_0_9_1)))
 (let ((?x15325 (* ?x15324 l_0_9_2)))
 (let ((?x15783 (- (- ?x15325 (* (* 2.0 l_0_9_107) l_0_9_109)) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x15787 (- (- ?x15783 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x15791 (- (- ?x15787 (* (* 2.0 l_0_9_137) l_0_9_139)) (* (* 2.0 l_0_9_138) l_0_9_140))))
 (let ((?x15798 (- (- (- (+ ?x15791 ?x15327) (* (* 2.0 l_0_9_31) l_0_9_32)) ?x15233) (* (* 2.0 l_0_9_62) l_0_9_64))))
 (let ((?x15802 (- (- ?x15798 (* (* 2.0 l_0_9_63) l_0_9_65)) (* (* 2.0 l_0_9_77) l_0_9_79))))
 (let ((?x15807 (- (- ?x15802 (* (* 2.0 l_0_9_78) l_0_9_80)) (* (* 2.0 l_0_9_92) l_0_9_94))))
 (= (- ?x15807 (* (* 2.0 l_0_9_93) l_0_9_95)) 0.0))))))))))))))
(assert
 (let ((?x15938 (* l_0_9_96 l_0_9_96)))
 (let ((?x15936 (* l_0_9_95 l_0_9_95)))
 (let ((?x15934 (* l_0_9_94 l_0_9_94)))
 (let ((?x15932 (* l_0_9_81 l_0_9_81)))
 (let ((?x15930 (* l_0_9_80 l_0_9_80)))
 (let ((?x15928 (* l_0_9_79 l_0_9_79)))
 (let ((?x15926 (* l_0_9_66 l_0_9_66)))
 (let ((?x15924 (* l_0_9_65 l_0_9_65)))
 (let ((?x15922 (* l_0_9_64 l_0_9_64)))
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x15920 (* ?x15232 l_0_9_49)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15347 (* ?x15326 l_0_9_19)))
 (let ((?x15915 (* l_0_9_141 l_0_9_141)))
 (let ((?x15913 (* l_0_9_140 l_0_9_140)))
 (let ((?x15911 (* l_0_9_139 l_0_9_139)))
 (let ((?x15909 (* l_0_9_126 l_0_9_126)))
 (let ((?x15907 (* l_0_9_125 l_0_9_125)))
 (let ((?x15905 (* l_0_9_124 l_0_9_124)))
 (let ((?x15903 (* l_0_9_111 l_0_9_111)))
 (let ((?x15901 (* l_0_9_110 l_0_9_110)))
 (let ((?x15902 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* l_0_9_109 l_0_9_109)) ?x15901)))
 (let ((?x15916 (- (- (- (- (- (- (- ?x15902 ?x15903) ?x15905) ?x15907) ?x15909) ?x15911) ?x15913) ?x15915)))
 (let ((?x15923 (- (- (- (+ ?x15916 ?x15347) (* (* 2.0 l_0_9_31) l_0_9_34)) ?x15920) ?x15922)))
 (let ((?x15937 (- (- (- (- (- (- (- ?x15923 ?x15924) ?x15926) ?x15928) ?x15930) ?x15932) ?x15934) ?x15936)))
 (= (- ?x15937 ?x15938) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x16044 (* ?x15232 l_0_9_52)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15434 (* ?x15326 l_0_9_22)))
 (let ((?x15347 (* ?x15326 l_0_9_19)))
 (let ((?x16009 (* 2.0 l_0_9_1)))
 (let ((?x16011 (* ?x16009 l_0_9_7)))
 (let ((?x16015 (- (- (* ?x16009 l_0_9_4) ?x16011) (* (* 2.0 l_0_9_109) l_0_9_112))))
 (let ((?x16021 (- (- ?x16015 (* (* 2.0 l_0_9_110) l_0_9_113)) (* (* 2.0 l_0_9_111) l_0_9_114))))
 (let ((?x16027 (- (- ?x16021 (* (* 2.0 l_0_9_124) l_0_9_127)) (* (* 2.0 l_0_9_125) l_0_9_128))))
 (let ((?x16033 (- (- ?x16027 (* (* 2.0 l_0_9_126) l_0_9_129)) (* (* 2.0 l_0_9_139) l_0_9_142))))
 (let ((?x16039 (- (- ?x16033 (* (* 2.0 l_0_9_140) l_0_9_143)) (* (* 2.0 l_0_9_141) l_0_9_144))))
 (let ((?x16045 (- (- (+ (- ?x16039 ?x15347) ?x15434) (* (* 2.0 l_0_9_31) l_0_9_37)) ?x16044)))
 (let ((?x16051 (- (- ?x16045 (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x16057 (- (- ?x16051 (* (* 2.0 l_0_9_66) l_0_9_69)) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x16063 (- (- ?x16057 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x16069 (- (- ?x16063 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x16069 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))))))))
(assert
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x16232 (* ?x15232 l_0_9_56)))
 (let ((?x15920 (* ?x15232 l_0_9_49)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15461 (* ?x15326 l_0_9_26)))
 (let ((?x15324 (* (- 2.0) l_0_9_1)))
 (let ((?x15460 (* ?x15324 l_0_9_11)))
 (let ((?x16206 (- (- ?x15460 (* (* 2.0 l_0_9_101) l_0_9_94)) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x16211 (- (- ?x16206 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x16215 (- (- ?x16211 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x16219 (- (- ?x16215 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x16223 (- (- ?x16219 (* (* 2.0 l_0_9_126) l_0_9_133)) (* (* 2.0 l_0_9_139) l_0_9_146))))
 (let ((?x16227 (- (- ?x16223 (* (* 2.0 l_0_9_140) l_0_9_147)) (* (* 2.0 l_0_9_141) l_0_9_148))))
 (let ((?x16233 (- (+ (- (+ ?x16227 ?x15461) (* (* 2.0 l_0_9_31) l_0_9_41)) ?x15920) ?x16232)))
 (let ((?x16237 (- (- ?x16233 (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (let ((?x16241 (- (- ?x16237 (* (* 2.0 l_0_9_66) l_0_9_73)) (* (* 2.0 l_0_9_79) l_0_9_86))))
 (let ((?x16245 (- (- ?x16241 (* (* 2.0 l_0_9_80) l_0_9_87)) (* (* 2.0 l_0_9_81) l_0_9_88))))
 (= ?x16245 0.0)))))))))))))))))))
(assert
 (let ((?x15331 (* l_0_9_48 l_0_9_48)))
 (let ((?x15329 (* l_0_9_47 l_0_9_47)))
 (let ((?x16375 (* l_0_9_33 l_0_9_33)))
 (let ((?x16373 (* l_0_9_32 l_0_9_32)))
 (let ((?x15477 (* l_0_9_3 l_0_9_3)))
 (let ((?x15475 (* l_0_9_2 l_0_9_2)))
 (let ((?x15473 (* l_0_9_18 l_0_9_18)))
 (let ((?x15472 (* l_0_9_17 l_0_9_17)))
 (let ((?x15474 (+ ?x15472 ?x15473)))
 (let ((?x15478 (- (- ?x15474 ?x15475) ?x15477)))
 (= (- (- (- (- ?x15478 ?x16373) ?x16375) ?x15329) ?x15331) 0.0))))))))))))
(assert
 (let ((?x15366 (* 2.0 l_0_9_48)))
 (let ((?x15367 (* ?x15366 l_0_9_50)))
 (let ((?x15361 (* 2.0 l_0_9_47)))
 (let ((?x15362 (* ?x15361 l_0_9_49)))
 (let ((?x15493 (* 2.0 l_0_9_3)))
 (let ((?x15494 (* ?x15493 l_0_9_5)))
 (let ((?x15490 (* 2.0 l_0_9_2)))
 (let ((?x15491 (* ?x15490 l_0_9_4)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15488 (* ?x15352 l_0_9_20)))
 (let ((?x15495 (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_19) ?x15488) ?x15491) ?x15494)))
 (let ((?x16399 (- (- ?x15495 (* (* 2.0 l_0_9_32) l_0_9_34)) (* (* 2.0 l_0_9_33) l_0_9_35))))
 (= (- (- ?x16399 ?x15362) ?x15367) 0.0))))))))))))))
(assert
 (let ((?x15366 (* 2.0 l_0_9_48)))
 (let ((?x15440 (* ?x15366 l_0_9_53)))
 (let ((?x15361 (* 2.0 l_0_9_47)))
 (let ((?x15438 (* ?x15361 l_0_9_52)))
 (let ((?x15493 (* 2.0 l_0_9_3)))
 (let ((?x15520 (* ?x15493 l_0_9_8)))
 (let ((?x15494 (* ?x15493 l_0_9_5)))
 (let ((?x15490 (* 2.0 l_0_9_2)))
 (let ((?x15518 (* ?x15490 l_0_9_7)))
 (let ((?x15491 (* ?x15490 l_0_9_4)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15516 (* ?x15352 l_0_9_23)))
 (let ((?x15488 (* ?x15352 l_0_9_20)))
 (let ((?x15349 (* 2.0 l_0_9_17)))
 (let ((?x15515 (* ?x15349 l_0_9_22)))
 (let ((?x16430 (+ (+ (- (+ (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x15515) ?x15488) ?x15516) ?x15491)))
 (let ((?x16435 (- (- (+ (- ?x16430 ?x15518) ?x15494) ?x15520) (* (* 2.0 l_0_9_32) l_0_9_37))))
 (= (- (- (- ?x16435 (* (* 2.0 l_0_9_33) l_0_9_38)) ?x15438) ?x15440) 0.0)))))))))))))))))))
(assert
 (let ((?x15560 (* l_0_9_6 l_0_9_6)))
 (let ((?x16487 (* l_0_9_51 l_0_9_51)))
 (let ((?x16485 (* l_0_9_50 l_0_9_50)))
 (let ((?x15558 (* l_0_9_5 l_0_9_5)))
 (let ((?x16482 (* l_0_9_49 l_0_9_49)))
 (let ((?x15556 (* l_0_9_4 l_0_9_4)))
 (let ((?x16479 (* l_0_9_36 l_0_9_36)))
 (let ((?x16477 (* l_0_9_35 l_0_9_35)))
 (let ((?x16475 (* l_0_9_34 l_0_9_34)))
 (let ((?x15554 (* l_0_9_21 l_0_9_21)))
 (let ((?x15555 (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15554)))
 (let ((?x16486 (- (- (- (- (- (- (- ?x15555 ?x16475) ?x16477) ?x16479) ?x15556) ?x16482) ?x15558) ?x16485)))
 (= (- (- ?x16486 ?x16487) ?x15560) 0.0))))))))))))))
(assert
 (let ((?x15560 (* l_0_9_6 l_0_9_6)))
 (let ((?x15589 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16540 (* 2.0 l_0_9_51)))
 (let ((?x16541 (* ?x16540 l_0_9_54)))
 (let ((?x16537 (* 2.0 l_0_9_50)))
 (let ((?x16538 (* ?x16537 l_0_9_53)))
 (let ((?x15558 (* l_0_9_5 l_0_9_5)))
 (let ((?x15586 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16532 (* 2.0 l_0_9_49)))
 (let ((?x16533 (* ?x16532 l_0_9_52)))
 (let ((?x15556 (* l_0_9_4 l_0_9_4)))
 (let ((?x15583 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15554 (* l_0_9_21 l_0_9_21)))
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15580 (* ?x15579 l_0_9_24)))
 (let ((?x15552 (* l_0_9_20 l_0_9_20)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15577 (* ?x15576 l_0_9_23)))
 (let ((?x16517 (+ (- (* (* 2.0 l_0_9_19) l_0_9_22) (* l_0_9_19 l_0_9_19)) ?x15577)))
 (let ((?x16523 (- (- (+ (- ?x16517 ?x15552) ?x15580) ?x15554) (* (* 2.0 l_0_9_34) l_0_9_37))))
 (let ((?x16529 (- (- ?x16523 (* (* 2.0 l_0_9_35) l_0_9_38)) (* (* 2.0 l_0_9_36) l_0_9_39))))
 (let ((?x16542 (- (- (+ (- (- (+ (- ?x16529 ?x15583) ?x15556) ?x16533) ?x15586) ?x15558) ?x16538) ?x16541)))
 (= (+ (- ?x16542 ?x15589) ?x15560) 0.0))))))))))))))))))))))))
(assert
 (let ((?x16487 (* l_0_9_51 l_0_9_51)))
 (let ((?x16540 (* 2.0 l_0_9_51)))
 (let ((?x16618 (* ?x16540 l_0_9_58)))
 (let ((?x16485 (* l_0_9_50 l_0_9_50)))
 (let ((?x16537 (* 2.0 l_0_9_50)))
 (let ((?x16615 (* ?x16537 l_0_9_57)))
 (let ((?x16482 (* l_0_9_49 l_0_9_49)))
 (let ((?x16532 (* 2.0 l_0_9_49)))
 (let ((?x16612 (* ?x16532 l_0_9_56)))
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15628 (* ?x15579 l_0_9_28)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15626 (* ?x15576 l_0_9_27)))
 (let ((?x15574 (* 2.0 l_0_9_19)))
 (let ((?x15624 (* ?x15574 l_0_9_26)))
 (let ((?x15621 (* 2.0 l_0_9_13)))
 (let ((?x15622 (* ?x15621 l_0_9_6)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15619 (* ?x15344 l_0_9_5)))
 (let ((?x15627 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x15619) ?x15622) ?x15624) ?x15626)))
 (let ((?x15629 (+ ?x15627 ?x15628)))
 (let ((?x16609 (- (- ?x15629 (* (* 2.0 l_0_9_34) l_0_9_41)) (* (* 2.0 l_0_9_35) l_0_9_42))))
 (let ((?x16616 (- (+ (- (- ?x16609 (* (* 2.0 l_0_9_36) l_0_9_43)) ?x16612) ?x16482) ?x16615)))
 (= (+ (- (+ ?x16616 ?x16485) ?x16618) ?x16487) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15668 (* l_0_9_9 l_0_9_9)))
 (let ((?x15666 (* l_0_9_8 l_0_9_8)))
 (let ((?x15664 (* l_0_9_7 l_0_9_7)))
 (let ((?x15589 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16689 (* l_0_9_55 l_0_9_55)))
 (let ((?x16687 (* l_0_9_54 l_0_9_54)))
 (let ((?x16685 (* l_0_9_53 l_0_9_53)))
 (let ((?x16683 (* l_0_9_52 l_0_9_52)))
 (let ((?x15586 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16680 (* l_0_9_40 l_0_9_40)))
 (let ((?x15583 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x16677 (* l_0_9_39 l_0_9_39)))
 (let ((?x16675 (* l_0_9_38 l_0_9_38)))
 (let ((?x16673 (* l_0_9_37 l_0_9_37)))
 (let ((?x15662 (* l_0_9_25 l_0_9_25)))
 (let ((?x15660 (* l_0_9_24 l_0_9_24)))
 (let ((?x15658 (* l_0_9_23 l_0_9_23)))
 (let ((?x15650 (* l_0_9_22 l_0_9_22)))
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15580 (* ?x15579 l_0_9_24)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15577 (* ?x15576 l_0_9_23)))
 (let ((?x16667 (- (- (* (- l_0_9_10) l_0_9_10) (* (* 2.0 l_0_9_19) l_0_9_22)) ?x15577)))
 (let ((?x16676 (- (- (+ (+ (+ (+ (- ?x16667 ?x15580) ?x15650) ?x15658) ?x15660) ?x15662) ?x16673) ?x16675)))
 (let ((?x16688 (- (- (- (+ (- (+ (- ?x16676 ?x16677) ?x15583) ?x16680) ?x15586) ?x16683) ?x16685) ?x16687)))
 (= (- (- (- (+ (- ?x16688 ?x16689) ?x15589) ?x15664) ?x15666) ?x15668) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x16784 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x16781 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x16778 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x16775 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x16540 (* 2.0 l_0_9_51)))
 (let ((?x16541 (* ?x16540 l_0_9_54)))
 (let ((?x16537 (* 2.0 l_0_9_50)))
 (let ((?x16538 (* ?x16537 l_0_9_53)))
 (let ((?x16532 (* 2.0 l_0_9_49)))
 (let ((?x16533 (* ?x16532 l_0_9_52)))
 (let ((?x15703 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15700 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15697 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15694 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15579 (* 2.0 l_0_9_21)))
 (let ((?x15628 (* ?x15579 l_0_9_28)))
 (let ((?x15576 (* 2.0 l_0_9_20)))
 (let ((?x15626 (* ?x15576 l_0_9_27)))
 (let ((?x15574 (* 2.0 l_0_9_19)))
 (let ((?x15624 (* ?x15574 l_0_9_26)))
 (let ((?x15621 (* 2.0 l_0_9_13)))
 (let ((?x15691 (* ?x15621 l_0_9_9)))
 (let ((?x15622 (* ?x15621 l_0_9_6)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15689 (* ?x15344 l_0_9_8)))
 (let ((?x15619 (* ?x15344 l_0_9_5)))
 (let ((?x15341 (* 2.0 l_0_9_11)))
 (let ((?x15687 (* ?x15341 l_0_9_7)))
 (let ((?x16748 (+ (- (+ (* (* (- 2.0) l_0_9_10) l_0_9_14) (* ?x15341 l_0_9_4)) ?x15687) ?x15619)))
 (let ((?x16755 (+ (- (- (- (- (+ (- ?x16748 ?x15689) ?x15622) ?x15691) ?x15624) ?x15626) ?x15628) ?x15694)))
 (let ((?x16761 (- (+ (+ (+ ?x16755 ?x15697) ?x15700) ?x15703) (* (* 2.0 l_0_9_37) l_0_9_41))))
 (let ((?x16767 (- (- ?x16761 (* (* 2.0 l_0_9_38) l_0_9_42)) (* (* 2.0 l_0_9_39) l_0_9_43))))
 (let ((?x16773 (+ (+ (+ (- ?x16767 (* (* 2.0 l_0_9_40) l_0_9_44)) ?x16533) ?x16538) ?x16541)))
 (= (- (- (- (- ?x16773 ?x16775) ?x16778) ?x16781) ?x16784) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16881 (* l_0_9_60 l_0_9_60)))
 (let ((?x16879 (* l_0_9_59 l_0_9_59)))
 (let ((?x16877 (* l_0_9_58 l_0_9_58)))
 (let ((?x16875 (* l_0_9_57 l_0_9_57)))
 (let ((?x16873 (* l_0_9_56 l_0_9_56)))
 (let ((?x16540 (* 2.0 l_0_9_51)))
 (let ((?x16618 (* ?x16540 l_0_9_58)))
 (let ((?x16537 (* 2.0 l_0_9_50)))
 (let ((?x16615 (* ?x16537 l_0_9_57)))
 (let ((?x16532 (* 2.0 l_0_9_49)))
 (let ((?x16612 (* ?x16532 l_0_9_56)))
 (let ((?x16868 (* l_0_9_45 l_0_9_45)))
 (let ((?x16866 (* l_0_9_44 l_0_9_44)))
 (let ((?x16864 (* l_0_9_43 l_0_9_43)))
 (let ((?x16862 (* l_0_9_42 l_0_9_42)))
 (let ((?x16860 (* l_0_9_41 l_0_9_41)))
 (let ((?x15755 (* l_0_9_30 l_0_9_30)))
 (let ((?x15753 (* l_0_9_29 l_0_9_29)))
 (let ((?x15751 (* l_0_9_28 l_0_9_28)))
 (let ((?x15749 (* l_0_9_27 l_0_9_27)))
 (let ((?x15747 (* l_0_9_26 l_0_9_26)))
 (let ((?x15745 (* l_0_9_15 l_0_9_15)))
 (let ((?x15743 (* l_0_9_14 l_0_9_14)))
 (let ((?x15734 (* l_0_9_13 l_0_9_13)))
 (let ((?x15744 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15734) ?x15743)))
 (let ((?x15756 (+ (+ (+ (+ (+ (- ?x15744 ?x15745) ?x15747) ?x15749) ?x15751) ?x15753) ?x15755)))
 (let ((?x16871 (+ (+ (- (- (- (- (- ?x15756 ?x16860) ?x16862) ?x16864) ?x16866) ?x16868) ?x16612) ?x16615)))
 (= (- (- (- (- (- (+ ?x16871 ?x16618) ?x16873) ?x16875) ?x16877) ?x16879) ?x16881) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x15092 (* l_0_9_16 l_0_9_16)))
 (let ((?x16921 (- (- (* l_0_9_1 l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_112)) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x16926 (- (- (- ?x16921 (* (* 2.0 l_0_9_136) l_0_9_142)) ?x15092) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x16930 (- (- ?x16926 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= ?x16930 0.0))))))
(assert
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15327 (* ?x15326 l_0_9_17)))
 (let ((?x16975 (- (* (* 2.0 l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_107) l_0_9_112))))
 (let ((?x16979 (- (- ?x16975 (* (* 2.0 l_0_9_108) l_0_9_113)) (* (* 2.0 l_0_9_122) l_0_9_127))))
 (let ((?x16983 (- (- ?x16979 (* (* 2.0 l_0_9_123) l_0_9_128)) (* (* 2.0 l_0_9_137) l_0_9_142))))
 (let ((?x16988 (- (- (- ?x16983 (* (* 2.0 l_0_9_138) l_0_9_143)) ?x15327) (* (* 2.0 l_0_9_62) l_0_9_67))))
 (let ((?x16992 (- (- ?x16988 (* (* 2.0 l_0_9_63) l_0_9_68)) (* (* 2.0 l_0_9_77) l_0_9_82))))
 (let ((?x16996 (- (- ?x16992 (* (* 2.0 l_0_9_78) l_0_9_83)) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x16996 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0))))))))))
(assert
 (let ((?x17123 (* l_0_9_99 l_0_9_99)))
 (let ((?x17121 (* l_0_9_98 l_0_9_98)))
 (let ((?x17119 (* l_0_9_97 l_0_9_97)))
 (let ((?x17117 (* l_0_9_85 l_0_9_85)))
 (let ((?x17115 (* l_0_9_84 l_0_9_84)))
 (let ((?x17113 (* l_0_9_83 l_0_9_83)))
 (let ((?x17111 (* l_0_9_82 l_0_9_82)))
 (let ((?x17109 (* l_0_9_70 l_0_9_70)))
 (let ((?x17107 (* l_0_9_69 l_0_9_69)))
 (let ((?x17105 (* l_0_9_68 l_0_9_68)))
 (let ((?x17103 (* l_0_9_67 l_0_9_67)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15434 (* ?x15326 l_0_9_22)))
 (let ((?x17100 (* l_0_9_145 l_0_9_145)))
 (let ((?x17098 (* l_0_9_144 l_0_9_144)))
 (let ((?x17096 (* l_0_9_143 l_0_9_143)))
 (let ((?x17094 (* l_0_9_142 l_0_9_142)))
 (let ((?x17092 (* l_0_9_130 l_0_9_130)))
 (let ((?x17090 (* l_0_9_129 l_0_9_129)))
 (let ((?x17088 (* l_0_9_128 l_0_9_128)))
 (let ((?x17086 (* l_0_9_127 l_0_9_127)))
 (let ((?x17084 (* l_0_9_115 l_0_9_115)))
 (let ((?x17082 (* l_0_9_114 l_0_9_114)))
 (let ((?x17080 (* l_0_9_113 l_0_9_113)))
 (let ((?x17078 (* l_0_9_112 l_0_9_112)))
 (let ((?x17079 (- (- (* (* 2.0 l_0_9_1) l_0_9_7) (* l_0_9_100 l_0_9_100)) ?x17078)))
 (let ((?x17093 (- (- (- (- (- (- (- ?x17079 ?x17080) ?x17082) ?x17084) ?x17086) ?x17088) ?x17090) ?x17092)))
 (let ((?x17106 (- (- (- (- (- (- (- ?x17093 ?x17094) ?x17096) ?x17098) ?x17100) ?x15434) ?x17103) ?x17105)))
 (let ((?x17120 (- (- (- (- (- (- (- ?x17106 ?x17107) ?x17109) ?x17111) ?x17113) ?x17115) ?x17117) ?x17119)))
 (= (- (- ?x17120 ?x17121) ?x17123) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x16044 (* ?x15232 l_0_9_52)))
 (let ((?x15326 (* 2.0 l_0_9_16)))
 (let ((?x15461 (* ?x15326 l_0_9_26)))
 (let ((?x17205 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x17209 (- (- ?x17205 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x17214 (- (- ?x17209 (* (* 2.0 l_0_9_103) l_0_9_99)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x17220 (- (- ?x17214 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x17226 (- (- ?x17220 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_127) l_0_9_131))))
 (let ((?x17232 (- (- ?x17226 (* (* 2.0 l_0_9_128) l_0_9_132)) (* (* 2.0 l_0_9_129) l_0_9_133))))
 (let ((?x17238 (- (- ?x17232 (* (* 2.0 l_0_9_130) l_0_9_134)) (* (* 2.0 l_0_9_142) l_0_9_146))))
 (let ((?x17244 (- (- ?x17238 (* (* 2.0 l_0_9_143) l_0_9_147)) (* (* 2.0 l_0_9_144) l_0_9_148))))
 (let ((?x17252 (- (+ (- (- ?x17244 (* (* 2.0 l_0_9_145) l_0_9_149)) ?x15461) ?x16044) (* (* 2.0 l_0_9_67) l_0_9_71))))
 (let ((?x17258 (- (- ?x17252 (* (* 2.0 l_0_9_68) l_0_9_72)) (* (* 2.0 l_0_9_69) l_0_9_73))))
 (let ((?x17264 (- (- ?x17258 (* (* 2.0 l_0_9_70) l_0_9_74)) (* (* 2.0 l_0_9_82) l_0_9_86))))
 (let ((?x17270 (- (- ?x17264 (* (* 2.0 l_0_9_83) l_0_9_87)) (* (* 2.0 l_0_9_84) l_0_9_88))))
 (= (- ?x17270 (* (* 2.0 l_0_9_85) l_0_9_89)) 0.0))))))))))))))))))
(assert
 (let ((?x15477 (* l_0_9_3 l_0_9_3)))
 (let ((?x15475 (* l_0_9_2 l_0_9_2)))
 (let ((?x17428 (+ (+ (- (* (- l_0_9_17) l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x15475) ?x15477)))
 (= ?x17428 0.0)))))
(assert
 (let ((?x15493 (* 2.0 l_0_9_3)))
 (let ((?x15520 (* ?x15493 l_0_9_8)))
 (let ((?x15490 (* 2.0 l_0_9_2)))
 (let ((?x15518 (* ?x15490 l_0_9_7)))
 (let ((?x15352 (* 2.0 l_0_9_18)))
 (let ((?x15516 (* ?x15352 l_0_9_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x15516) ?x15518) ?x15520) 0.0))))))))
(assert
 (let ((?x15668 (* l_0_9_9 l_0_9_9)))
 (let ((?x15666 (* l_0_9_8 l_0_9_8)))
 (let ((?x15664 (* l_0_9_7 l_0_9_7)))
 (let ((?x15662 (* l_0_9_25 l_0_9_25)))
 (let ((?x15660 (* l_0_9_24 l_0_9_24)))
 (let ((?x15658 (* l_0_9_23 l_0_9_23)))
 (let ((?x17442 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x15658) ?x15660)))
 (= (+ (+ (+ (- ?x17442 ?x15662) ?x15664) ?x15666) ?x15668) 0.0)))))))))
(assert
 (let ((?x16689 (* l_0_9_55 l_0_9_55)))
 (let ((?x16687 (* l_0_9_54 l_0_9_54)))
 (let ((?x16685 (* l_0_9_53 l_0_9_53)))
 (let ((?x16683 (* l_0_9_52 l_0_9_52)))
 (let ((?x15703 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15700 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15697 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15694 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15621 (* 2.0 l_0_9_13)))
 (let ((?x15691 (* ?x15621 l_0_9_9)))
 (let ((?x15344 (* 2.0 l_0_9_12)))
 (let ((?x15689 (* ?x15344 l_0_9_8)))
 (let ((?x15341 (* 2.0 l_0_9_11)))
 (let ((?x15687 (* ?x15341 l_0_9_7)))
 (let ((?x17461 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x15687) ?x15689) ?x15691) ?x15694)))
 (let ((?x17468 (+ (+ (+ (+ (- (- (- ?x17461 ?x15697) ?x15700) ?x15703) ?x16683) ?x16685) ?x16687) ?x16689)))
 (= ?x17468 0.0))))))))))))))))))
(assert
 (let ((?x16784 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x16781 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x16778 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x16775 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15755 (* l_0_9_30 l_0_9_30)))
 (let ((?x15753 (* l_0_9_29 l_0_9_29)))
 (let ((?x15751 (* l_0_9_28 l_0_9_28)))
 (let ((?x15749 (* l_0_9_27 l_0_9_27)))
 (let ((?x15747 (* l_0_9_26 l_0_9_26)))
 (let ((?x15745 (* l_0_9_15 l_0_9_15)))
 (let ((?x15743 (* l_0_9_14 l_0_9_14)))
 (let ((?x15734 (* l_0_9_13 l_0_9_13)))
 (let ((?x17486 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15734) ?x15743)))
 (let ((?x17493 (+ (- (- (- (- (- (+ ?x17486 ?x15745) ?x15747) ?x15749) ?x15751) ?x15753) ?x15755) ?x16775)))
 (= (+ (+ (+ ?x17493 ?x16778) ?x16781) ?x16784) 0.0))))))))))))))))
(assert
 (let ((?x17569 (* l_0_9_90 l_0_9_90)))
 (let ((?x17567 (* l_0_9_89 l_0_9_89)))
 (let ((?x17565 (* l_0_9_88 l_0_9_88)))
 (let ((?x17563 (* l_0_9_87 l_0_9_87)))
 (let ((?x17561 (* l_0_9_86 l_0_9_86)))
 (let ((?x17559 (* l_0_9_75 l_0_9_75)))
 (let ((?x17557 (* l_0_9_74 l_0_9_74)))
 (let ((?x17555 (* l_0_9_73 l_0_9_73)))
 (let ((?x17553 (* l_0_9_72 l_0_9_72)))
 (let ((?x17551 (* l_0_9_71 l_0_9_71)))
 (let ((?x15232 (* 2.0 l_0_9_46)))
 (let ((?x16232 (* ?x15232 l_0_9_56)))
 (let ((?x17548 (* l_0_9_150 l_0_9_150)))
 (let ((?x17546 (* l_0_9_149 l_0_9_149)))
 (let ((?x17544 (* l_0_9_148 l_0_9_148)))
 (let ((?x17542 (* l_0_9_147 l_0_9_147)))
 (let ((?x17540 (* l_0_9_146 l_0_9_146)))
 (let ((?x17538 (* l_0_9_135 l_0_9_135)))
 (let ((?x17536 (* l_0_9_134 l_0_9_134)))
 (let ((?x17534 (* l_0_9_133 l_0_9_133)))
 (let ((?x17532 (* l_0_9_132 l_0_9_132)))
 (let ((?x17530 (* l_0_9_131 l_0_9_131)))
 (let ((?x17528 (* l_0_9_120 l_0_9_120)))
 (let ((?x17526 (* l_0_9_119 l_0_9_119)))
 (let ((?x17524 (* l_0_9_118 l_0_9_118)))
 (let ((?x17522 (* l_0_9_117 l_0_9_117)))
 (let ((?x17520 (* l_0_9_116 l_0_9_116)))
 (let ((?x17518 (* l_0_9_105 l_0_9_105)))
 (let ((?x17516 (* l_0_9_104 l_0_9_104)))
 (let ((?x17514 (* l_0_9_103 l_0_9_103)))
 (let ((?x17515 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x17514)))
 (let ((?x17529 (- (- (- (- (- (- (- ?x17515 ?x17516) ?x17518) ?x17520) ?x17522) ?x17524) ?x17526) ?x17528)))
 (let ((?x17543 (- (- (- (- (- (- (- ?x17529 ?x17530) ?x17532) ?x17534) ?x17536) ?x17538) ?x17540) ?x17542)))
 (let ((?x17556 (- (- (- (+ (- (- (- ?x17543 ?x17544) ?x17546) ?x17548) ?x16232) ?x17551) ?x17553) ?x17555)))
 (let ((?x17570 (- (- (- (- (- (- (- ?x17556 ?x17557) ?x17559) ?x17561) ?x17563) ?x17565) ?x17567) ?x17569)))
 (= ?x17570 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16881 (* l_0_9_60 l_0_9_60)))
 (let ((?x16879 (* l_0_9_59 l_0_9_59)))
 (let ((?x16877 (* l_0_9_58 l_0_9_58)))
 (let ((?x17666 (+ (+ (+ (* l_0_9_56 l_0_9_56) (* l_0_9_57 l_0_9_57)) ?x16877) ?x16879)))
 (= (+ ?x17666 ?x16881) 0.0))))))
(assert
 (let ((?x17681 (* l_0_9_91 l_0_9_91)))
 (let ((?x17679 (* l_0_9_76 l_0_9_76)))
 (let ((?x17677 (* l_0_9_61 l_0_9_61)))
 (let ((?x17675 (* l_0_9_136 l_0_9_136)))
 (let ((?x17676 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_121 l_0_9_121)) ?x17675)))
 (= (- (- (- ?x17676 ?x17677) ?x17679) ?x17681) 0.0)))))))
(assert
 (let ((?x17707 (- (* (* (- 2.0) l_0_9_106) l_0_9_107) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x17711 (- (- ?x17707 (* (* 2.0 l_0_9_136) l_0_9_137)) (* (* 2.0 l_0_9_61) l_0_9_62))))
 (let ((?x17715 (- (- ?x17711 (* (* 2.0 l_0_9_76) l_0_9_77)) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x17715 0.0)))))
(assert
 (let ((?x17774 (* l_0_9_93 l_0_9_93)))
 (let ((?x17772 (* l_0_9_92 l_0_9_92)))
 (let ((?x17770 (* l_0_9_78 l_0_9_78)))
 (let ((?x17768 (* l_0_9_77 l_0_9_77)))
 (let ((?x17766 (* l_0_9_63 l_0_9_63)))
 (let ((?x17764 (* l_0_9_62 l_0_9_62)))
 (let ((?x17762 (* l_0_9_138 l_0_9_138)))
 (let ((?x17760 (* l_0_9_137 l_0_9_137)))
 (let ((?x17758 (* l_0_9_123 l_0_9_123)))
 (let ((?x17756 (* l_0_9_122 l_0_9_122)))
 (let ((?x17757 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x17756)))
 (let ((?x17771 (- (- (- (- (- (- (- ?x17757 ?x17758) ?x17760) ?x17762) ?x17764) ?x17766) ?x17768) ?x17770)))
 (= (- (- ?x17771 ?x17772) ?x17774) 0.0))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_138 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (= (- _a_2_ (* (* 2.0 l_0_10_197) l_0_10_218)) 0.0))
(assert
 (let ((?x17892 (* l_0_10_29 l_0_10_29)))
 (let ((?x17882 (- (+ (- _a_3_ (* l_0_10_1 l_0_10_1)) (* l_0_10_141 l_0_10_141)) (* (* 2.0 l_0_10_203) l_0_10_218))))
 (let ((?x17888 (- (- ?x17882 (* (* 2.0 l_0_10_204) l_0_10_219)) (* (* 2.0 l_0_10_205) l_0_10_220))))
 (= (+ (- ?x17888 (* (* 2.0 l_0_10_206) l_0_10_221)) ?x17892) 0.0)))))
(assert
 (let ((?x17932 (* l_0_10_85 l_0_10_85)))
 (let ((?x17930 (* l_0_10_57 l_0_10_57)))
 (let ((?x17929 (- (- _a_4_ (* (* 2.0 l_0_10_198) l_0_10_218)) (* (* 2.0 l_0_10_199) l_0_10_219))))
 (= (+ (- ?x17929 ?x17930) ?x17932) 0.0)))))
(assert
 (let ((?x17932 (* l_0_10_85 l_0_10_85)))
 (let ((?x17930 (* l_0_10_57 l_0_10_57)))
 (let ((?x17955 (* l_0_10_169 l_0_10_169)))
 (let ((?x17956 (+ (- (* (- l_0_10_113) l_0_10_113) (* l_0_10_141 l_0_10_141)) ?x17955)))
 (let ((?x17961 (+ (+ (- (- ?x17956 (* (* 2.0 l_0_10_197) l_0_10_207)) ?x17930) ?x17932) 1.0)))
 (= ?x17961 0.0)))))))
(assert
 (let ((?x17892 (* l_0_10_29 l_0_10_29)))
 (let ((?x17986 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_169) l_0_10_169)) (* (* 2.0 l_0_10_197) l_0_10_200))))
 (= (- (- ?x17986 ?x17892) 1.0) 0.0))))
(assert
 (let ((?x17932 (* l_0_10_85 l_0_10_85)))
 (let ((?x17930 (* l_0_10_57 l_0_10_57)))
 (= (- (- (+ (* (* (- 2.0) l_0_10_197) l_0_10_212) ?x17930) ?x17932) 1.0) 0.0))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x18033 (* ?x18032 l_0_10_91)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x18030 (* ?x18029 l_0_10_63)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18027 (* ?x18026 l_0_10_30)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18024 (* ?x18023 l_0_10_142)))
 (let ((?x18034 (+ (- (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) ?x18024) ?x18027) ?x18030) ?x18033)))
 (= ?x18034 0.0)))))))))))
(assert
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x18096 (* ?x18095 l_0_10_53)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x18093 (* ?x18092 l_0_10_52)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x18090 (* ?x18089 l_0_10_51)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x18087 (* ?x18086 l_0_10_50)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18084 (* ?x18026 l_0_10_32)))
 (let ((?x18081 (* 2.0 l_0_10_24)))
 (let ((?x18082 (* ?x18081 l_0_10_9)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x18079 (* ?x18078 l_0_10_8)))
 (let ((?x18075 (* 2.0 l_0_10_22)))
 (let ((?x18076 (* ?x18075 l_0_10_7)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18060 (* ?x18023 l_0_10_144)))
 (let ((?x18059 (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_10) l_0_10_25))))
 (let ((?x18068 (- (- (+ ?x18059 ?x18060) (* (* 4.0 l_0_10_175) l_0_10_190)) (* (* 4.0 l_0_10_176) l_0_10_191))))
 (let ((?x18074 (- (- ?x18068 (* (* 4.0 l_0_10_177) l_0_10_192)) (* (* 4.0 l_0_10_178) l_0_10_193))))
 (let ((?x18094 (- (- (- (+ (+ (+ (+ ?x18074 ?x18076) ?x18079) ?x18082) ?x18084) ?x18087) ?x18090) ?x18093)))
 (= (- ?x18094 ?x18096) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18176 (* ?x18026 l_0_10_35)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18174 (* ?x18023 l_0_10_147)))
 (= (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x18174) ?x18176) 0.0))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18250 (* ?x18249 l_0_10_81)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18247 (* ?x18246 l_0_10_80)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18244 (* ?x18243 l_0_10_79)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18241 (* ?x18240 l_0_10_78)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18238 (* ?x18026 l_0_10_39)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x18224 (* ?x18223 l_0_10_165)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x18221 (* ?x18220 l_0_10_164)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x18218 (* ?x18217 l_0_10_163)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x18215 (* ?x18214 l_0_10_162)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18212 (* ?x18023 l_0_10_151)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x18198 (* ?x18197 l_0_10_94)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x18195 (* ?x18194 l_0_10_93)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x18192 (* ?x18191 l_0_10_92)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x18184 (* ?x18182 l_0_10_91)))
 (let ((?x18199 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x18184) ?x18192) ?x18195) ?x18198)))
 (let ((?x18205 (- (- ?x18199 (* (* 2.0 l_0_10_119) l_0_10_134)) (* (* 2.0 l_0_10_120) l_0_10_135))))
 (let ((?x18211 (- (- ?x18205 (* (* 2.0 l_0_10_121) l_0_10_136)) (* (* 2.0 l_0_10_122) l_0_10_137))))
 (let ((?x18228 (+ (- (- (- (- (+ ?x18211 ?x18212) ?x18215) ?x18218) ?x18221) ?x18224) (* (* 2.0 l_0_10_175) l_0_10_190))))
 (let ((?x18234 (+ (+ ?x18228 (* (* 2.0 l_0_10_176) l_0_10_191)) (* (* 2.0 l_0_10_177) l_0_10_192))))
 (let ((?x18245 (- (- (+ (+ ?x18234 (* (* 2.0 l_0_10_178) l_0_10_193)) ?x18238) ?x18241) ?x18244)))
 (= (- (- ?x18245 ?x18247) ?x18250) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18250 (* ?x18249 l_0_10_81)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18247 (* ?x18246 l_0_10_80)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18244 (* ?x18243 l_0_10_79)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18241 (* ?x18240 l_0_10_78)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18354 (* ?x18026 l_0_10_44)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18352 (* ?x18023 l_0_10_156)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x18198 (* ?x18197 l_0_10_94)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x18195 (* ?x18194 l_0_10_93)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x18192 (* ?x18191 l_0_10_92)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x18184 (* ?x18182 l_0_10_91)))
 (let ((?x18351 (- (- (- (- (* (* (- 2.0) l_0_10_1) l_0_10_16) ?x18184) ?x18192) ?x18195) ?x18198)))
 (= (+ (+ (+ (+ (+ (+ ?x18351 ?x18352) ?x18354) ?x18241) ?x18244) ?x18247) ?x18250) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18389 (* ?x18026 l_0_10_50)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18382 (* ?x18023 l_0_10_162)))
 (= (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) ?x18382) ?x18389) 0.0))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x18421 (* ?x18420 l_0_10_92)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x18418 (* ?x18417 l_0_10_91)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x18415 (* ?x18414 l_0_10_64)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x18412 (* ?x18411 l_0_10_63)))
 (let ((?x18409 (* l_0_10_31 l_0_10_31)))
 (let ((?x18407 (* l_0_10_30 l_0_10_30)))
 (let ((?x18405 (* l_0_10_3 l_0_10_3)))
 (let ((?x18398 (* l_0_10_2 l_0_10_2)))
 (let ((?x18404 (- (+ (* l_0_10_142 l_0_10_142) (* l_0_10_143 l_0_10_143)) ?x18398)))
 (let ((?x18422 (+ (+ (- (- (+ (+ (- ?x18404 ?x18405) ?x18407) ?x18409) ?x18412) ?x18415) ?x18418) ?x18421)))
 (= ?x18422 0.0))))))))))))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x18482 (* ?x18481 l_0_10_93)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x18479 (* ?x18478 l_0_10_92)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x18476 (* ?x18475 l_0_10_91)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x18473 (* ?x18472 l_0_10_65)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x18470 (* ?x18469 l_0_10_64)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x18467 (* ?x18466 l_0_10_63)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18464 (* ?x18463 l_0_10_33)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18461 (* ?x18460 l_0_10_32)))
 (let ((?x18457 (* 2.0 l_0_10_3)))
 (let ((?x18458 (* ?x18457 l_0_10_5)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18455 (* ?x18454 l_0_10_4)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18452 (* ?x18451 l_0_10_145)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18450 (* ?x18449 l_0_10_144)))
 (let ((?x18471 (- (- (+ (+ (- (- (+ ?x18450 ?x18452) ?x18455) ?x18458) ?x18461) ?x18464) ?x18467) ?x18470)))
 (= (+ (+ (+ (- ?x18471 ?x18473) ?x18476) ?x18479) ?x18482) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18558 (* l_0_10_94 l_0_10_94)))
 (let ((?x18556 (* l_0_10_93 l_0_10_93)))
 (let ((?x18554 (* l_0_10_92 l_0_10_92)))
 (let ((?x18552 (* l_0_10_91 l_0_10_91)))
 (let ((?x18550 (* l_0_10_66 l_0_10_66)))
 (let ((?x18548 (* l_0_10_65 l_0_10_65)))
 (let ((?x18546 (* l_0_10_64 l_0_10_64)))
 (let ((?x18544 (* l_0_10_63 l_0_10_63)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18542 (* ?x18463 l_0_10_36)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18540 (* ?x18460 l_0_10_35)))
 (let ((?x18457 (* 2.0 l_0_10_3)))
 (let ((?x18538 (* ?x18457 l_0_10_8)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18536 (* ?x18454 l_0_10_7)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18534 (* ?x18451 l_0_10_148)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18533 (* ?x18449 l_0_10_147)))
 (let ((?x18547 (- (- (+ (+ (- (- (+ ?x18533 ?x18534) ?x18536) ?x18538) ?x18540) ?x18542) ?x18544) ?x18546)))
 (= (+ (+ (+ (+ (- (- ?x18547 ?x18548) ?x18550) ?x18552) ?x18554) ?x18556) ?x18558) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18636 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x18633 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x18630 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x18627 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18624 (* ?x18249 l_0_10_70)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18622 (* ?x18246 l_0_10_69)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18620 (* ?x18243 l_0_10_68)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18618 (* ?x18240 l_0_10_67)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18616 (* ?x18463 l_0_10_40)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18614 (* ?x18460 l_0_10_39)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18612 (* ?x18451 l_0_10_152)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18610 (* ?x18449 l_0_10_151)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x18608 (* ?x18607 l_0_10_3)))
 (let ((?x18615 (+ (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x18608) ?x18610) ?x18612) ?x18614)))
 (let ((?x18631 (+ (+ (- (- (- (- (+ ?x18615 ?x18616) ?x18618) ?x18620) ?x18622) ?x18624) ?x18627) ?x18630)))
 (= (+ (+ ?x18631 ?x18633) ?x18636) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18726 (* ?x18249 l_0_10_75)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18724 (* ?x18246 l_0_10_74)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18722 (* ?x18243 l_0_10_73)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18720 (* ?x18240 l_0_10_72)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18718 (* ?x18463 l_0_10_45)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18716 (* ?x18460 l_0_10_44)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x18714 (* ?x18713 l_0_10_3)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x18711 (* ?x18710 l_0_10_2)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18708 (* ?x18451 l_0_10_157)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18706 (* ?x18449 l_0_10_156)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x18704 (* ?x18703 l_0_10_94)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x18701 (* ?x18700 l_0_10_93)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x18687 (* ?x18685 l_0_10_92)))
 (let ((?x18705 (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_91) ?x18687) ?x18701) ?x18704)))
 (let ((?x18721 (- (+ (+ (- (- (+ (+ ?x18705 ?x18706) ?x18708) ?x18711) ?x18714) ?x18716) ?x18718) ?x18720)))
 (= (- (- (- ?x18721 ?x18722) ?x18724) ?x18726) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18250 (* ?x18249 l_0_10_81)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18247 (* ?x18246 l_0_10_80)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18244 (* ?x18243 l_0_10_79)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18241 (* ?x18240 l_0_10_78)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18797 (* ?x18463 l_0_10_51)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18795 (* ?x18460 l_0_10_50)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x18793 (* ?x18078 l_0_10_3)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18791 (* ?x18454 l_0_10_22)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18789 (* ?x18451 l_0_10_163)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18787 (* ?x18449 l_0_10_162)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x18198 (* ?x18197 l_0_10_94)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x18195 (* ?x18194 l_0_10_93)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x18192 (* ?x18191 l_0_10_92)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x18184 (* ?x18182 l_0_10_91)))
 (let ((?x18794 (- (- (+ (+ (+ (+ (+ ?x18184 ?x18192) ?x18195) ?x18198) ?x18787) ?x18789) ?x18791) ?x18793)))
 (= (- (- (- (- (+ (+ ?x18794 ?x18795) ?x18797) ?x18241) ?x18244) ?x18247) ?x18250) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18850 (* l_0_10_6 l_0_10_6)))
 (let ((?x18848 (* l_0_10_5 l_0_10_5)))
 (let ((?x18846 (* l_0_10_4 l_0_10_4)))
 (let ((?x18844 (* l_0_10_34 l_0_10_34)))
 (let ((?x18842 (* l_0_10_33 l_0_10_33)))
 (let ((?x18840 (* l_0_10_32 l_0_10_32)))
 (let ((?x18838 (* l_0_10_146 l_0_10_146)))
 (let ((?x18839 (+ (+ (* l_0_10_144 l_0_10_144) (* l_0_10_145 l_0_10_145)) ?x18838)))
 (= (- (- (- (+ (+ (+ ?x18839 ?x18840) ?x18842) ?x18844) ?x18846) ?x18848) ?x18850) 0.0))))))))))
(assert
 (let ((?x18888 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18885 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18882 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18879 (* ?x18878 l_0_10_37)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18876 (* ?x18875 l_0_10_36)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18873 (* ?x18872 l_0_10_35)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18870 (* ?x18869 l_0_10_149)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18867 (* ?x18866 l_0_10_148)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18865 (* ?x18864 l_0_10_147)))
 (let ((?x18886 (- (- (+ (+ (+ (+ (+ ?x18865 ?x18867) ?x18870) ?x18873) ?x18876) ?x18879) ?x18882) ?x18885)))
 (= (- ?x18886 ?x18888) 0.0))))))))))))))))))
(assert
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18939 (* ?x18878 l_0_10_41)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18937 (* ?x18875 l_0_10_40)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18935 (* ?x18872 l_0_10_39)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18933 (* ?x18869 l_0_10_153)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18931 (* ?x18866 l_0_10_152)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18929 (* ?x18864 l_0_10_151)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x18927 (* ?x18926 l_0_10_6)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x18924 (* ?x18607 l_0_10_5)))
 (let ((?x18932 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x18924) ?x18927) ?x18929) ?x18931)))
 (= (+ (+ (+ (+ ?x18932 ?x18933) ?x18935) ?x18937) ?x18939) 0.0)))))))))))))))))))
(assert
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18987 (* ?x18878 l_0_10_46)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18985 (* ?x18875 l_0_10_45)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18983 (* ?x18872 l_0_10_44)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x18981 (* ?x18980 l_0_10_6)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x18978 (* ?x18713 l_0_10_5)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x18967 (* ?x18710 l_0_10_4)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18963 (* ?x18869 l_0_10_158)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18959 (* ?x18866 l_0_10_157)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18957 (* ?x18864 l_0_10_156)))
 (let ((?x18986 (+ (+ (- (- (- (+ (+ ?x18957 ?x18959) ?x18963) ?x18967) ?x18978) ?x18981) ?x18983) ?x18985)))
 (= (+ ?x18986 ?x18987) 0.0)))))))))))))))))))))
(assert
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x19038 (* ?x18878 l_0_10_52)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x19036 (* ?x18875 l_0_10_51)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x19034 (* ?x18872 l_0_10_50)))
 (let ((?x18081 (* 2.0 l_0_10_24)))
 (let ((?x19032 (* ?x18081 l_0_10_6)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x19030 (* ?x18078 l_0_10_5)))
 (let ((?x18075 (* 2.0 l_0_10_22)))
 (let ((?x19028 (* ?x18075 l_0_10_4)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x19026 (* ?x18869 l_0_10_164)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x19024 (* ?x18866 l_0_10_163)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x19023 (* ?x18864 l_0_10_162)))
 (let ((?x19037 (+ (+ (- (- (- (+ (+ ?x19023 ?x19024) ?x19026) ?x19028) ?x19030) ?x19032) ?x19034) ?x19036)))
 (= (+ ?x19037 ?x19038) 0.0)))))))))))))))))))))
(assert
 (let ((?x19096 (* l_0_10_9 l_0_10_9)))
 (let ((?x19094 (* l_0_10_8 l_0_10_8)))
 (let ((?x19092 (* l_0_10_7 l_0_10_7)))
 (let ((?x19090 (* l_0_10_38 l_0_10_38)))
 (let ((?x19088 (* l_0_10_37 l_0_10_37)))
 (let ((?x19086 (* l_0_10_36 l_0_10_36)))
 (let ((?x19084 (* l_0_10_35 l_0_10_35)))
 (let ((?x19082 (* l_0_10_150 l_0_10_150)))
 (let ((?x19080 (* l_0_10_149 l_0_10_149)))
 (let ((?x19078 (* l_0_10_148 l_0_10_148)))
 (let ((?x19079 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_147 l_0_10_147)) ?x19078)))
 (let ((?x19093 (- (+ (+ (+ (+ (+ (+ ?x19079 ?x19080) ?x19082) ?x19084) ?x19086) ?x19088) ?x19090) ?x19092)))
 (= (- (- ?x19093 ?x19094) ?x19096) 0.0))))))))))))))
(assert
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x19136 (* ?x18095 l_0_10_42)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x19134 (* ?x18092 l_0_10_41)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x19132 (* ?x18089 l_0_10_40)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x19130 (* ?x18086 l_0_10_39)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x19128 (* ?x18223 l_0_10_154)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x19126 (* ?x18220 l_0_10_153)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x19124 (* ?x18217 l_0_10_152)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x19122 (* ?x18214 l_0_10_151)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19120 (* ?x18926 l_0_10_9)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19118 (* ?x18607 l_0_10_8)))
 (let ((?x19115 (* 2.0 l_0_10_11)))
 (let ((?x19116 (* ?x19115 l_0_10_7)))
 (let ((?x19123 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x19116) ?x19118) ?x19120) ?x19122)))
 (let ((?x19137 (+ (+ (+ (+ (+ (+ (+ ?x19123 ?x19124) ?x19126) ?x19128) ?x19130) ?x19132) ?x19134) ?x19136)))
 (= ?x19137 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x19199 (* ?x18095 l_0_10_47)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x19197 (* ?x18092 l_0_10_46)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x19195 (* ?x18089 l_0_10_45)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x19193 (* ?x18086 l_0_10_44)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x19191 (* ?x18980 l_0_10_9)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x19189 (* ?x18713 l_0_10_8)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x19187 (* ?x18710 l_0_10_7)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x19174 (* ?x18223 l_0_10_159)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x19170 (* ?x18220 l_0_10_158)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x19166 (* ?x18217 l_0_10_157)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x19162 (* ?x18214 l_0_10_156)))
 (let ((?x19175 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x19162) ?x19166) ?x19170) ?x19174)))
 (let ((?x19200 (+ (+ (+ (+ (- (- (- ?x19175 ?x19187) ?x19189) ?x19191) ?x19193) ?x19195) ?x19197) ?x19199)))
 (= ?x19200 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x18096 (* ?x18095 l_0_10_53)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x18093 (* ?x18092 l_0_10_52)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x18090 (* ?x18089 l_0_10_51)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x18087 (* ?x18086 l_0_10_50)))
 (let ((?x18081 (* 2.0 l_0_10_24)))
 (let ((?x18082 (* ?x18081 l_0_10_9)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x18079 (* ?x18078 l_0_10_8)))
 (let ((?x18075 (* 2.0 l_0_10_22)))
 (let ((?x18076 (* ?x18075 l_0_10_7)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x18224 (* ?x18223 l_0_10_165)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x18221 (* ?x18220 l_0_10_164)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x18218 (* ?x18217 l_0_10_163)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x18215 (* ?x18214 l_0_10_162)))
 (let ((?x19239 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_10) l_0_10_25) ?x18215) ?x18218) ?x18221) ?x18224)))
 (let ((?x19257 (+ (+ (+ (+ (- (- (- ?x19239 ?x18076) ?x18079) ?x18082) ?x18087) ?x18090) ?x18093) ?x18096)))
 (= ?x19257 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19299 (* l_0_10_43 l_0_10_43)))
 (let ((?x19297 (* l_0_10_42 l_0_10_42)))
 (let ((?x19295 (* l_0_10_41 l_0_10_41)))
 (let ((?x19293 (* l_0_10_40 l_0_10_40)))
 (let ((?x19291 (* l_0_10_39 l_0_10_39)))
 (let ((?x19289 (* l_0_10_155 l_0_10_155)))
 (let ((?x19287 (* l_0_10_154 l_0_10_154)))
 (let ((?x19285 (* l_0_10_153 l_0_10_153)))
 (let ((?x19283 (* l_0_10_152 l_0_10_152)))
 (let ((?x19281 (* l_0_10_151 l_0_10_151)))
 (let ((?x19279 (* l_0_10_15 l_0_10_15)))
 (let ((?x19277 (* l_0_10_14 l_0_10_14)))
 (let ((?x19275 (* l_0_10_13 l_0_10_13)))
 (let ((?x19276 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x19275)))
 (let ((?x19290 (+ (+ (+ (+ (+ (- (- ?x19276 ?x19277) ?x19279) ?x19281) ?x19283) ?x19285) ?x19287) ?x19289)))
 (= (+ (+ (+ (+ (+ ?x19290 ?x19291) ?x19293) ?x19295) ?x19297) ?x19299) 0.0)))))))))))))))))
(assert
 (let ((?x19367 (* 2.0 l_0_10_43)))
 (let ((?x19368 (* ?x19367 l_0_10_48)))
 (let ((?x19364 (* 2.0 l_0_10_42)))
 (let ((?x19365 (* ?x19364 l_0_10_47)))
 (let ((?x19361 (* 2.0 l_0_10_41)))
 (let ((?x19362 (* ?x19361 l_0_10_46)))
 (let ((?x19358 (* 2.0 l_0_10_40)))
 (let ((?x19359 (* ?x19358 l_0_10_45)))
 (let ((?x19355 (* 2.0 l_0_10_39)))
 (let ((?x19356 (* ?x19355 l_0_10_44)))
 (let ((?x19352 (* 2.0 l_0_10_155)))
 (let ((?x19353 (* ?x19352 l_0_10_160)))
 (let ((?x19349 (* 2.0 l_0_10_154)))
 (let ((?x19350 (* ?x19349 l_0_10_159)))
 (let ((?x19346 (* 2.0 l_0_10_153)))
 (let ((?x19347 (* ?x19346 l_0_10_158)))
 (let ((?x19343 (* 2.0 l_0_10_152)))
 (let ((?x19344 (* ?x19343 l_0_10_157)))
 (let ((?x19340 (* 2.0 l_0_10_151)))
 (let ((?x19341 (* ?x19340 l_0_10_156)))
 (let ((?x19337 (* 2.0 l_0_10_15)))
 (let ((?x19338 (* ?x19337 l_0_10_20)))
 (let ((?x19334 (* 2.0 l_0_10_14)))
 (let ((?x19335 (* ?x19334 l_0_10_19)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19332 (* ?x18926 l_0_10_18)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19330 (* ?x18607 l_0_10_17)))
 (let ((?x19339 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_16) ?x19330) ?x19332) ?x19335) ?x19338)))
 (let ((?x19360 (+ (+ (+ (+ (+ (+ (+ ?x19339 ?x19341) ?x19344) ?x19347) ?x19350) ?x19353) ?x19356) ?x19359)))
 (= (+ (+ (+ ?x19360 ?x19362) ?x19365) ?x19368) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x19367 (* 2.0 l_0_10_43)))
 (let ((?x19447 (* ?x19367 l_0_10_54)))
 (let ((?x19364 (* 2.0 l_0_10_42)))
 (let ((?x19445 (* ?x19364 l_0_10_53)))
 (let ((?x19361 (* 2.0 l_0_10_41)))
 (let ((?x19443 (* ?x19361 l_0_10_52)))
 (let ((?x19358 (* 2.0 l_0_10_40)))
 (let ((?x19441 (* ?x19358 l_0_10_51)))
 (let ((?x19355 (* 2.0 l_0_10_39)))
 (let ((?x19439 (* ?x19355 l_0_10_50)))
 (let ((?x19352 (* 2.0 l_0_10_155)))
 (let ((?x19437 (* ?x19352 l_0_10_166)))
 (let ((?x19349 (* 2.0 l_0_10_154)))
 (let ((?x19435 (* ?x19349 l_0_10_165)))
 (let ((?x19346 (* 2.0 l_0_10_153)))
 (let ((?x19433 (* ?x19346 l_0_10_164)))
 (let ((?x19343 (* 2.0 l_0_10_152)))
 (let ((?x19431 (* ?x19343 l_0_10_163)))
 (let ((?x19340 (* 2.0 l_0_10_151)))
 (let ((?x19416 (* ?x19340 l_0_10_162)))
 (let ((?x19337 (* 2.0 l_0_10_15)))
 (let ((?x19412 (* ?x19337 l_0_10_26)))
 (let ((?x19334 (* 2.0 l_0_10_14)))
 (let ((?x19408 (* ?x19334 l_0_10_25)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19404 (* ?x18926 l_0_10_24)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19400 (* ?x18607 l_0_10_23)))
 (let ((?x19414 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_22) ?x19400) ?x19404) ?x19408) ?x19412)))
 (let ((?x19442 (+ (+ (+ (+ (+ (+ (+ ?x19414 ?x19416) ?x19431) ?x19433) ?x19435) ?x19437) ?x19439) ?x19441)))
 (= (+ (+ (+ ?x19442 ?x19443) ?x19445) ?x19447) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x19532 (* l_0_10_49 l_0_10_49)))
 (let ((?x19530 (* l_0_10_48 l_0_10_48)))
 (let ((?x19528 (* l_0_10_47 l_0_10_47)))
 (let ((?x19526 (* l_0_10_46 l_0_10_46)))
 (let ((?x19524 (* l_0_10_45 l_0_10_45)))
 (let ((?x19522 (* l_0_10_44 l_0_10_44)))
 (let ((?x19520 (* l_0_10_21 l_0_10_21)))
 (let ((?x19518 (* l_0_10_20 l_0_10_20)))
 (let ((?x19516 (* l_0_10_19 l_0_10_19)))
 (let ((?x19514 (* l_0_10_18 l_0_10_18)))
 (let ((?x19512 (* l_0_10_17 l_0_10_17)))
 (let ((?x19510 (* l_0_10_161 l_0_10_161)))
 (let ((?x19495 (* l_0_10_160 l_0_10_160)))
 (let ((?x19491 (* l_0_10_16 l_0_10_16)))
 (let ((?x19487 (* l_0_10_159 l_0_10_159)))
 (let ((?x19483 (* l_0_10_158 l_0_10_158)))
 (let ((?x19485 (+ (+ (* l_0_10_156 l_0_10_156) (* l_0_10_157 l_0_10_157)) ?x19483)))
 (let ((?x19517 (- (- (- (+ (+ (- (+ ?x19485 ?x19487) ?x19491) ?x19495) ?x19510) ?x19512) ?x19514) ?x19516)))
 (let ((?x19531 (+ (+ (+ (+ (+ (- (- ?x19517 ?x19518) ?x19520) ?x19522) ?x19524) ?x19526) ?x19528) ?x19530)))
 (= (+ ?x19531 ?x19532) 0.0)))))))))))))))))))))
(assert
 (let ((?x19605 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x19602 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x19599 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x19596 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x19593 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x19590 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x19587 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x19584 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x19581 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x19578 (* ?x18980 l_0_10_24)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x19576 (* ?x18713 l_0_10_23)))
 (let ((?x19574 (* (* 2.0 l_0_10_161) l_0_10_167)))
 (let ((?x19571 (* (* 2.0 l_0_10_160) l_0_10_166)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x19568 (* ?x18710 l_0_10_22)))
 (let ((?x19566 (* (* 2.0 l_0_10_159) l_0_10_165)))
 (let ((?x19563 (* (* 2.0 l_0_10_158) l_0_10_164)))
 (let ((?x19560 (* (* 2.0 l_0_10_157) l_0_10_163)))
 (let ((?x19558 (* (* 2.0 l_0_10_156) l_0_10_162)))
 (let ((?x19577 (- (+ (+ (- (+ (+ (+ ?x19558 ?x19560) ?x19563) ?x19566) ?x19568) ?x19571) ?x19574) ?x19576)))
 (let ((?x19597 (+ (+ (+ (- (- (- (- ?x19577 ?x19578) ?x19581) ?x19584) ?x19587) ?x19590) ?x19593) ?x19596)))
 (= (+ (+ (+ ?x19597 ?x19599) ?x19602) ?x19605) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x19711 (* l_0_10_56 l_0_10_56)))
 (let ((?x19709 (* l_0_10_55 l_0_10_55)))
 (let ((?x19707 (* l_0_10_54 l_0_10_54)))
 (let ((?x19705 (* l_0_10_53 l_0_10_53)))
 (let ((?x19703 (* l_0_10_52 l_0_10_52)))
 (let ((?x19701 (* l_0_10_51 l_0_10_51)))
 (let ((?x19699 (* l_0_10_50 l_0_10_50)))
 (let ((?x19697 (* l_0_10_28 l_0_10_28)))
 (let ((?x19695 (* l_0_10_27 l_0_10_27)))
 (let ((?x19693 (* l_0_10_26 l_0_10_26)))
 (let ((?x19691 (* l_0_10_25 l_0_10_25)))
 (let ((?x19689 (* l_0_10_24 l_0_10_24)))
 (let ((?x19687 (* l_0_10_23 l_0_10_23)))
 (let ((?x19685 (* l_0_10_22 l_0_10_22)))
 (let ((?x19683 (* l_0_10_168 l_0_10_168)))
 (let ((?x19681 (* l_0_10_167 l_0_10_167)))
 (let ((?x19679 (* l_0_10_166 l_0_10_166)))
 (let ((?x19677 (* l_0_10_165 l_0_10_165)))
 (let ((?x19675 (* l_0_10_164 l_0_10_164)))
 (let ((?x19676 (+ (+ (* l_0_10_162 l_0_10_162) (* l_0_10_163 l_0_10_163)) ?x19675)))
 (let ((?x19690 (- (- (- (+ (+ (+ (+ ?x19676 ?x19677) ?x19679) ?x19681) ?x19683) ?x19685) ?x19687) ?x19689)))
 (let ((?x19704 (+ (+ (+ (- (- (- (- ?x19690 ?x19691) ?x19693) ?x19695) ?x19697) ?x19699) ?x19701) ?x19703)))
 (= (+ (+ (+ (+ ?x19704 ?x19705) ?x19707) ?x19709) ?x19711) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18027 (* ?x18026 l_0_10_30)))
 (let ((?x19742 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 4.0 l_0_10_169) l_0_10_170))))
 (let ((?x19746 (- (- ?x19742 (* (* 2.0 l_0_10_198) l_0_10_200)) (* (* 2.0 l_0_10_199) l_0_10_201))))
 (= (- ?x19746 ?x18027) 0.0))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18084 (* ?x18026 l_0_10_32)))
 (let ((?x19778 (* l_0_10_202 l_0_10_202)))
 (let ((?x19776 (* l_0_10_201 l_0_10_201)))
 (let ((?x19774 (* l_0_10_200 l_0_10_200)))
 (let ((?x19773 (- (* (* 2.0 l_0_10_1) l_0_10_4) (* (* 4.0 l_0_10_169) l_0_10_172))))
 (= (- (- (- (- ?x19773 ?x19774) ?x19776) ?x19778) ?x18084) 0.0))))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18176 (* ?x18026 l_0_10_35)))
 (let ((?x19803 (- (* (* 2.0 l_0_10_1) l_0_10_7) (* (* 4.0 l_0_10_169) l_0_10_175))))
 (let ((?x19809 (- (- ?x19803 (* (* 2.0 l_0_10_200) l_0_10_203)) (* (* 2.0 l_0_10_201) l_0_10_204))))
 (= (- (- ?x19809 (* (* 2.0 l_0_10_202) l_0_10_205)) ?x18176) 0.0))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x19862 (* ?x18032 l_0_10_88)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x19860 (* ?x18029 l_0_10_60)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18238 (* ?x18026 l_0_10_39)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18060 (* ?x18023 l_0_10_144)))
 (let ((?x19847 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_113) l_0_10_116))))
 (let ((?x19852 (- (+ (- ?x19847 ?x18060) (* (* 2.0 l_0_10_169) l_0_10_172)) (* (* 4.0 l_0_10_169) l_0_10_179))))
 (let ((?x19856 (- (- ?x19852 (* (* 2.0 l_0_10_200) l_0_10_207)) (* (* 2.0 l_0_10_201) l_0_10_208))))
 (let ((?x19863 (+ (- (- (- ?x19856 (* (* 2.0 l_0_10_202) l_0_10_209)) ?x18238) ?x19860) ?x19862)))
 (= ?x19863 0.0))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x19862 (* ?x18032 l_0_10_88)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x19860 (* ?x18029 l_0_10_60)))
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18354 (* ?x18026 l_0_10_44)))
 (let ((?x19918 (- (* (* 2.0 l_0_10_1) l_0_10_16) (* (* 4.0 l_0_10_169) l_0_10_184))))
 (let ((?x19922 (- (- ?x19918 (* (* 2.0 l_0_10_200) l_0_10_212)) (* (* 2.0 l_0_10_201) l_0_10_213))))
 (let ((?x19927 (- (+ (- (- ?x19922 (* (* 2.0 l_0_10_202) l_0_10_214)) ?x18354) ?x19860) ?x19862)))
 (= ?x19927 0.0)))))))))))
(assert
 (let ((?x18026 (* 2.0 l_0_10_29)))
 (let ((?x18389 (* ?x18026 l_0_10_50)))
 (let ((?x19965 (- (* (* 2.0 l_0_10_1) l_0_10_22) (* (* 4.0 l_0_10_169) l_0_10_190))))
 (let ((?x19969 (- (- ?x19965 (* (* 2.0 l_0_10_200) l_0_10_218)) (* (* 2.0 l_0_10_201) l_0_10_219))))
 (= (- (- ?x19969 (* (* 2.0 l_0_10_202) l_0_10_220)) ?x18389) 0.0))))))
(assert
 (let ((?x18409 (* l_0_10_31 l_0_10_31)))
 (let ((?x18407 (* l_0_10_30 l_0_10_30)))
 (let ((?x18405 (* l_0_10_3 l_0_10_3)))
 (let ((?x18398 (* l_0_10_2 l_0_10_2)))
 (let ((?x20007 (- (* (* (- 2.0) l_0_10_170) l_0_10_170) (* (* 2.0 l_0_10_171) l_0_10_171))))
 (= (- (- (+ (+ ?x20007 ?x18398) ?x18405) ?x18407) ?x18409) 0.0)))))))
(assert
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18464 (* ?x18463 l_0_10_33)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18461 (* ?x18460 l_0_10_32)))
 (let ((?x18457 (* 2.0 l_0_10_3)))
 (let ((?x18458 (* ?x18457 l_0_10_5)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18455 (* ?x18454 l_0_10_4)))
 (let ((?x20033 (- (* (* (- 4.0) l_0_10_170) l_0_10_172) (* (* 4.0 l_0_10_171) l_0_10_173))))
 (= (- (- (+ (+ ?x20033 ?x18455) ?x18458) ?x18461) ?x18464) 0.0)))))))))))
(assert
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18542 (* ?x18463 l_0_10_36)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18540 (* ?x18460 l_0_10_35)))
 (let ((?x18457 (* 2.0 l_0_10_3)))
 (let ((?x18538 (* ?x18457 l_0_10_8)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18536 (* ?x18454 l_0_10_7)))
 (let ((?x20059 (- (* (* (- 4.0) l_0_10_170) l_0_10_175) (* (* 4.0 l_0_10_171) l_0_10_176))))
 (= (- (- (+ (+ ?x20059 ?x18536) ?x18538) ?x18540) ?x18542) 0.0)))))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x20109 (* ?x18420 l_0_10_89)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x20107 (* ?x18417 l_0_10_88)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x20105 (* ?x18414 l_0_10_61)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x20103 (* ?x18411 l_0_10_60)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18616 (* ?x18463 l_0_10_40)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18614 (* ?x18460 l_0_10_39)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18452 (* ?x18451 l_0_10_145)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18450 (* ?x18449 l_0_10_144)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x18608 (* ?x18607 l_0_10_3)))
 (let ((?x20084 (- (* (* 2.0 l_0_10_11) l_0_10_2) (* (* 2.0 l_0_10_114) l_0_10_116))))
 (let ((?x20090 (- (- (+ (- ?x20084 (* (* 2.0 l_0_10_115) l_0_10_117)) ?x18608) ?x18450) ?x18452)))
 (let ((?x20096 (- (+ ?x20090 (* (* 2.0 l_0_10_170) l_0_10_172)) (* (* 4.0 l_0_10_170) l_0_10_179))))
 (let ((?x20100 (- (+ ?x20096 (* (* 2.0 l_0_10_171) l_0_10_173)) (* (* 4.0 l_0_10_171) l_0_10_180))))
 (= (+ (+ (- (- (- (- ?x20100 ?x18614) ?x18616) ?x20103) ?x20105) ?x20107) ?x20109) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x20109 (* ?x18420 l_0_10_89)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x20107 (* ?x18417 l_0_10_88)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x20105 (* ?x18414 l_0_10_61)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x20103 (* ?x18411 l_0_10_60)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18718 (* ?x18463 l_0_10_45)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18716 (* ?x18460 l_0_10_44)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x18714 (* ?x18713 l_0_10_3)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x18711 (* ?x18710 l_0_10_2)))
 (let ((?x20179 (- (- (+ ?x18711 ?x18714) (* (* 4.0 l_0_10_170) l_0_10_184)) (* (* 4.0 l_0_10_171) l_0_10_185))))
 (= (- (- (+ (+ (- (- ?x20179 ?x18716) ?x18718) ?x20103) ?x20105) ?x20107) ?x20109) 0.0)))))))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x19862 (* ?x18032 l_0_10_88)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x19860 (* ?x18029 l_0_10_60)))
 (let ((?x18463 (* 2.0 l_0_10_31)))
 (let ((?x18797 (* ?x18463 l_0_10_51)))
 (let ((?x18460 (* 2.0 l_0_10_30)))
 (let ((?x18795 (* ?x18460 l_0_10_50)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x18793 (* ?x18078 l_0_10_3)))
 (let ((?x18454 (* 2.0 l_0_10_2)))
 (let ((?x18791 (* ?x18454 l_0_10_22)))
 (let ((?x20220 (- (* (* (- 4.0) l_0_10_170) l_0_10_190) (* (* 4.0 l_0_10_171) l_0_10_191))))
 (= (+ (- (- (- (+ (+ ?x20220 ?x18791) ?x18793) ?x18795) ?x18797) ?x19860) ?x19862) 0.0)))))))))))))))
(assert
 (let ((?x18850 (* l_0_10_6 l_0_10_6)))
 (let ((?x18848 (* l_0_10_5 l_0_10_5)))
 (let ((?x18846 (* l_0_10_4 l_0_10_4)))
 (let ((?x18844 (* l_0_10_34 l_0_10_34)))
 (let ((?x18842 (* l_0_10_33 l_0_10_33)))
 (let ((?x18840 (* l_0_10_32 l_0_10_32)))
 (let ((?x20253 (- (* (* (- 2.0) l_0_10_172) l_0_10_172) (* (* 2.0 l_0_10_173) l_0_10_173))))
 (let ((?x20259 (- (- (- (- ?x20253 (* (* 2.0 l_0_10_174) l_0_10_174)) ?x18840) ?x18842) ?x18844)))
 (= (+ (+ (+ ?x20259 ?x18846) ?x18848) ?x18850) 0.0))))))))))
(assert
 (let ((?x18888 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18885 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18882 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18879 (* ?x18878 l_0_10_37)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18876 (* ?x18875 l_0_10_36)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18873 (* ?x18872 l_0_10_35)))
 (let ((?x20294 (- (* (* (- 4.0) l_0_10_172) l_0_10_175) (* (* 4.0 l_0_10_173) l_0_10_176))))
 (let ((?x20300 (- (- (- (- ?x20294 (* (* 4.0 l_0_10_174) l_0_10_177)) ?x18873) ?x18876) ?x18879)))
 (= (+ (+ (+ ?x20300 ?x18882) ?x18885) ?x18888) 0.0)))))))))))))
(assert
 (let ((?x20369 (* l_0_10_90 l_0_10_90)))
 (let ((?x20367 (* l_0_10_89 l_0_10_89)))
 (let ((?x20365 (* l_0_10_88 l_0_10_88)))
 (let ((?x20363 (* l_0_10_62 l_0_10_62)))
 (let ((?x20361 (* l_0_10_61 l_0_10_61)))
 (let ((?x20359 (* l_0_10_60 l_0_10_60)))
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18939 (* ?x18878 l_0_10_41)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18937 (* ?x18875 l_0_10_40)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18935 (* ?x18872 l_0_10_39)))
 (let ((?x20272 (* l_0_10_174 l_0_10_174)))
 (let ((?x20266 (* l_0_10_173 l_0_10_173)))
 (let ((?x20264 (* l_0_10_172 l_0_10_172)))
 (let ((?x18838 (* l_0_10_146 l_0_10_146)))
 (let ((?x18836 (* l_0_10_145 l_0_10_145)))
 (let ((?x18835 (* l_0_10_144 l_0_10_144)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x18927 (* ?x18926 l_0_10_6)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x18924 (* ?x18607 l_0_10_5)))
 (let ((?x20339 (* l_0_10_118 l_0_10_118)))
 (let ((?x20337 (* l_0_10_117 l_0_10_117)))
 (let ((?x20338 (- (- (* (* 2.0 l_0_10_11) l_0_10_4) (* l_0_10_116 l_0_10_116)) ?x20337)))
 (let ((?x20348 (- (- (- (- (+ (+ (- ?x20338 ?x20339) ?x18924) ?x18927) ?x18835) ?x18836) ?x18838) (* (* 4.0 l_0_10_172) l_0_10_179))))
 (let ((?x20354 (- (+ (- (+ ?x20348 ?x20264) (* (* 4.0 l_0_10_173) l_0_10_180)) ?x20266) (* (* 4.0 l_0_10_174) l_0_10_181))))
 (let ((?x20364 (- (- (- (- (- (- (+ ?x20354 ?x20272) ?x18935) ?x18937) ?x18939) ?x20359) ?x20361) ?x20363)))
 (= (+ (+ (+ ?x20364 ?x20365) ?x20367) ?x20369) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x20369 (* l_0_10_90 l_0_10_90)))
 (let ((?x20367 (* l_0_10_89 l_0_10_89)))
 (let ((?x20365 (* l_0_10_88 l_0_10_88)))
 (let ((?x20363 (* l_0_10_62 l_0_10_62)))
 (let ((?x20361 (* l_0_10_61 l_0_10_61)))
 (let ((?x20359 (* l_0_10_60 l_0_10_60)))
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x18987 (* ?x18878 l_0_10_46)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x18985 (* ?x18875 l_0_10_45)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x18983 (* ?x18872 l_0_10_44)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x18981 (* ?x18980 l_0_10_6)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x18978 (* ?x18713 l_0_10_5)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x18967 (* ?x18710 l_0_10_4)))
 (let ((?x20444 (- (- (+ ?x18967 ?x18978) (* (* 4.0 l_0_10_172) l_0_10_184)) (* (* 4.0 l_0_10_173) l_0_10_185))))
 (let ((?x20449 (- (- (+ (- ?x20444 (* (* 4.0 l_0_10_174) l_0_10_186)) ?x18981) ?x18983) ?x18985)))
 (let ((?x20456 (- (- (- (+ (+ (+ (- ?x20449 ?x18987) ?x20359) ?x20361) ?x20363) ?x20365) ?x20367) ?x20369)))
 (= ?x20456 0.0)))))))))))))))))))))))
(assert
 (let ((?x18878 (* 2.0 l_0_10_34)))
 (let ((?x19038 (* ?x18878 l_0_10_52)))
 (let ((?x18875 (* 2.0 l_0_10_33)))
 (let ((?x19036 (* ?x18875 l_0_10_51)))
 (let ((?x18872 (* 2.0 l_0_10_32)))
 (let ((?x19034 (* ?x18872 l_0_10_50)))
 (let ((?x18081 (* 2.0 l_0_10_24)))
 (let ((?x19032 (* ?x18081 l_0_10_6)))
 (let ((?x18078 (* 2.0 l_0_10_23)))
 (let ((?x19030 (* ?x18078 l_0_10_5)))
 (let ((?x18075 (* 2.0 l_0_10_22)))
 (let ((?x19028 (* ?x18075 l_0_10_4)))
 (let ((?x20500 (- (* (* (- 4.0) l_0_10_172) l_0_10_190) (* (* 4.0 l_0_10_173) l_0_10_191))))
 (let ((?x20505 (+ (+ (+ (- ?x20500 (* (* 4.0 l_0_10_174) l_0_10_192)) ?x19028) ?x19030) ?x19032)))
 (= (- (- (- ?x20505 ?x19034) ?x19036) ?x19038) 0.0))))))))))))))))
(assert
 (let ((?x19096 (* l_0_10_9 l_0_10_9)))
 (let ((?x19094 (* l_0_10_8 l_0_10_8)))
 (let ((?x19092 (* l_0_10_7 l_0_10_7)))
 (let ((?x19090 (* l_0_10_38 l_0_10_38)))
 (let ((?x19088 (* l_0_10_37 l_0_10_37)))
 (let ((?x19086 (* l_0_10_36 l_0_10_36)))
 (let ((?x19084 (* l_0_10_35 l_0_10_35)))
 (let ((?x19100 (* l_0_10_10 l_0_10_10)))
 (let ((?x20541 (- (- ?x19100 (* (* 2.0 l_0_10_175) l_0_10_175)) (* (* 2.0 l_0_10_176) l_0_10_176))))
 (let ((?x20545 (- (- ?x20541 (* (* 2.0 l_0_10_177) l_0_10_177)) (* (* 2.0 l_0_10_178) l_0_10_178))))
 (let ((?x20552 (+ (+ (+ (- (- (- (- ?x20545 ?x19084) ?x19086) ?x19088) ?x19090) ?x19092) ?x19094) ?x19096)))
 (= ?x20552 0.0)))))))))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x18482 (* ?x18481 l_0_10_93)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x18479 (* ?x18478 l_0_10_92)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x18476 (* ?x18475 l_0_10_91)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x18473 (* ?x18472 l_0_10_65)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x18470 (* ?x18469 l_0_10_64)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x18467 (* ?x18466 l_0_10_63)))
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x19136 (* ?x18095 l_0_10_42)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x19134 (* ?x18092 l_0_10_41)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x19132 (* ?x18089 l_0_10_40)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x19130 (* ?x18086 l_0_10_39)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18870 (* ?x18869 l_0_10_149)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18867 (* ?x18866 l_0_10_148)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18865 (* ?x18864 l_0_10_147)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19120 (* ?x18926 l_0_10_9)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19118 (* ?x18607 l_0_10_8)))
 (let ((?x19115 (* 2.0 l_0_10_11)))
 (let ((?x19116 (* ?x19115 l_0_10_7)))
 (let ((?x20596 (- (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x19116) (* (* 2.0 l_0_10_116) l_0_10_119))))
 (let ((?x20602 (- (- ?x20596 (* (* 2.0 l_0_10_117) l_0_10_120)) (* (* 2.0 l_0_10_118) l_0_10_121))))
 (let ((?x20610 (+ (- (- (- (+ (+ ?x20602 ?x19118) ?x19120) ?x18865) ?x18867) ?x18870) (* (* 2.0 l_0_10_172) l_0_10_175))))
 (let ((?x20614 (+ (+ ?x20610 (* (* 2.0 l_0_10_173) l_0_10_176)) (* (* 2.0 l_0_10_174) l_0_10_177))))
 (let ((?x20618 (- (- ?x20614 (* (* 4.0 l_0_10_175) l_0_10_179)) (* (* 4.0 l_0_10_176) l_0_10_180))))
 (let ((?x20622 (- (- ?x20618 (* (* 4.0 l_0_10_177) l_0_10_181)) (* (* 4.0 l_0_10_178) l_0_10_182))))
 (let ((?x20629 (- (- (- (- (- (- (- ?x20622 ?x19130) ?x19132) ?x19134) ?x19136) ?x18467) ?x18470) ?x18473)))
 (= (+ (+ (+ ?x20629 ?x18476) ?x18479) ?x18482) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x18482 (* ?x18481 l_0_10_93)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x18479 (* ?x18478 l_0_10_92)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x18476 (* ?x18475 l_0_10_91)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x18473 (* ?x18472 l_0_10_65)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x18470 (* ?x18469 l_0_10_64)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x18467 (* ?x18466 l_0_10_63)))
 (let ((?x18095 (* 2.0 l_0_10_38)))
 (let ((?x19199 (* ?x18095 l_0_10_47)))
 (let ((?x18092 (* 2.0 l_0_10_37)))
 (let ((?x19197 (* ?x18092 l_0_10_46)))
 (let ((?x18089 (* 2.0 l_0_10_36)))
 (let ((?x19195 (* ?x18089 l_0_10_45)))
 (let ((?x18086 (* 2.0 l_0_10_35)))
 (let ((?x19193 (* ?x18086 l_0_10_44)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x19191 (* ?x18980 l_0_10_9)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x19189 (* ?x18713 l_0_10_8)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x19187 (* ?x18710 l_0_10_7)))
 (let ((?x20728 (- (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x19187) ?x19189) (* (* 4.0 l_0_10_175) l_0_10_184))))
 (let ((?x20732 (- (- ?x20728 (* (* 4.0 l_0_10_176) l_0_10_185)) (* (* 4.0 l_0_10_177) l_0_10_186))))
 (let ((?x20737 (- (- (+ (- ?x20732 (* (* 4.0 l_0_10_178) l_0_10_187)) ?x19191) ?x19193) ?x19195)))
 (let ((?x20744 (- (- (+ (+ (+ (- (- ?x20737 ?x19197) ?x19199) ?x18467) ?x18470) ?x18473) ?x18476) ?x18479)))
 (= (- ?x20744 ?x18482) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x20849 (* ?x18481 l_0_10_97)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x20847 (* ?x18478 l_0_10_96)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x20845 (* ?x18475 l_0_10_95)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x20843 (* ?x18472 l_0_10_69)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x20841 (* ?x18469 l_0_10_68)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x20839 (* ?x18466 l_0_10_67)))
 (let ((?x19299 (* l_0_10_43 l_0_10_43)))
 (let ((?x19297 (* l_0_10_42 l_0_10_42)))
 (let ((?x19295 (* l_0_10_41 l_0_10_41)))
 (let ((?x19293 (* l_0_10_40 l_0_10_40)))
 (let ((?x19291 (* l_0_10_39 l_0_10_39)))
 (let ((?x19279 (* l_0_10_15 l_0_10_15)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18933 (* ?x18869 l_0_10_153)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18931 (* ?x18866 l_0_10_152)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18929 (* ?x18864 l_0_10_151)))
 (let ((?x19277 (* l_0_10_14 l_0_10_14)))
 (let ((?x19275 (* l_0_10_13 l_0_10_13)))
 (let ((?x19273 (* l_0_10_12 l_0_10_12)))
 (let ((?x19303 (* l_0_10_11 l_0_10_11)))
 (let ((?x20803 (- (- ?x19303 (* (* 2.0 l_0_10_116) l_0_10_123)) (* (* 2.0 l_0_10_117) l_0_10_124))))
 (let ((?x20808 (+ (+ (+ (- ?x20803 (* (* 2.0 l_0_10_118) l_0_10_125)) ?x19273) ?x19275) ?x19277)))
 (let ((?x20814 (+ (+ (- (- (- ?x20808 ?x18929) ?x18931) ?x18933) ?x19279) (* (* 2.0 l_0_10_172) l_0_10_179))))
 (let ((?x20818 (+ (+ ?x20814 (* (* 2.0 l_0_10_173) l_0_10_180)) (* (* 2.0 l_0_10_174) l_0_10_181))))
 (let ((?x20824 (- (- ?x20818 (* (* 2.0 l_0_10_179) l_0_10_179)) (* (* 2.0 l_0_10_180) l_0_10_180))))
 (let ((?x20830 (- (- ?x20824 (* (* 2.0 l_0_10_181) l_0_10_181)) (* (* 2.0 l_0_10_182) l_0_10_182))))
 (let ((?x20836 (- (- (- (- ?x20830 (* (* 2.0 l_0_10_183) l_0_10_183)) ?x19291) ?x19293) ?x19295)))
 (let ((?x20848 (+ (+ (- (- (- (- (- ?x20836 ?x19297) ?x19299) ?x20839) ?x20841) ?x20843) ?x20845) ?x20847)))
 (= (+ ?x20848 ?x20849) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x20849 (* ?x18481 l_0_10_97)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x20847 (* ?x18478 l_0_10_96)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x20845 (* ?x18475 l_0_10_95)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21009 (* ?x18472 l_0_10_74)))
 (let ((?x20843 (* ?x18472 l_0_10_69)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21006 (* ?x18469 l_0_10_73)))
 (let ((?x20841 (* ?x18469 l_0_10_68)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21003 (* ?x18466 l_0_10_72)))
 (let ((?x20839 (* ?x18466 l_0_10_67)))
 (let ((?x19367 (* 2.0 l_0_10_43)))
 (let ((?x19368 (* ?x19367 l_0_10_48)))
 (let ((?x19364 (* 2.0 l_0_10_42)))
 (let ((?x19365 (* ?x19364 l_0_10_47)))
 (let ((?x19361 (* 2.0 l_0_10_41)))
 (let ((?x19362 (* ?x19361 l_0_10_46)))
 (let ((?x19358 (* 2.0 l_0_10_40)))
 (let ((?x19359 (* ?x19358 l_0_10_45)))
 (let ((?x19355 (* 2.0 l_0_10_39)))
 (let ((?x19356 (* ?x19355 l_0_10_44)))
 (let ((?x19337 (* 2.0 l_0_10_15)))
 (let ((?x19338 (* ?x19337 l_0_10_20)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x18963 (* ?x18869 l_0_10_158)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x18959 (* ?x18866 l_0_10_157)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x18957 (* ?x18864 l_0_10_156)))
 (let ((?x19334 (* 2.0 l_0_10_14)))
 (let ((?x19335 (* ?x19334 l_0_10_19)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19332 (* ?x18926 l_0_10_18)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19330 (* ?x18607 l_0_10_17)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x20951 (* ?x18700 l_0_10_90)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x20948 (* ?x18685 l_0_10_89)))
 (let ((?x20960 (+ (+ (* (* 2.0 l_0_10_100) l_0_10_88) ?x20948) ?x20951)))
 (let ((?x20964 (- (+ ?x20960 (* (* 2.0 l_0_10_11) l_0_10_16)) (* (* 2.0 l_0_10_116) l_0_10_128))))
 (let ((?x20968 (- (- ?x20964 (* (* 2.0 l_0_10_117) l_0_10_129)) (* (* 2.0 l_0_10_118) l_0_10_130))))
 (let ((?x20975 (+ (- (- (- (+ (+ (+ ?x20968 ?x19330) ?x19332) ?x19335) ?x18957) ?x18959) ?x18963) ?x19338)))
 (let ((?x20979 (+ (+ ?x20975 (* (* 2.0 l_0_10_172) l_0_10_184)) (* (* 2.0 l_0_10_173) l_0_10_185))))
 (let ((?x20984 (- (+ ?x20979 (* (* 2.0 l_0_10_174) l_0_10_186)) (* (* 4.0 l_0_10_179) l_0_10_184))))
 (let ((?x20990 (- (- ?x20984 (* (* 4.0 l_0_10_180) l_0_10_185)) (* (* 4.0 l_0_10_181) l_0_10_186))))
 (let ((?x20996 (- (- ?x20990 (* (* 4.0 l_0_10_182) l_0_10_187)) (* (* 4.0 l_0_10_183) l_0_10_188))))
 (let ((?x21004 (- (+ (- (- (- (- (- ?x20996 ?x19356) ?x19359) ?x19362) ?x19365) ?x19368) ?x20839) ?x21003)))
 (let ((?x21013 (- (- (- (- (+ (- (+ ?x21004 ?x20841) ?x21006) ?x20843) ?x21009) ?x20845) ?x20847) ?x20849)))
 (= ?x21013 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21135 (* ?x18472 l_0_10_80)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21133 (* ?x18469 l_0_10_79)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21131 (* ?x18466 l_0_10_78)))
 (let ((?x19367 (* 2.0 l_0_10_43)))
 (let ((?x19447 (* ?x19367 l_0_10_54)))
 (let ((?x19364 (* 2.0 l_0_10_42)))
 (let ((?x19445 (* ?x19364 l_0_10_53)))
 (let ((?x19361 (* 2.0 l_0_10_41)))
 (let ((?x19443 (* ?x19361 l_0_10_52)))
 (let ((?x19358 (* 2.0 l_0_10_40)))
 (let ((?x19441 (* ?x19358 l_0_10_51)))
 (let ((?x19355 (* 2.0 l_0_10_39)))
 (let ((?x19439 (* ?x19355 l_0_10_50)))
 (let ((?x19337 (* 2.0 l_0_10_15)))
 (let ((?x19412 (* ?x19337 l_0_10_26)))
 (let ((?x18869 (* 2.0 l_0_10_146)))
 (let ((?x19026 (* ?x18869 l_0_10_164)))
 (let ((?x18866 (* 2.0 l_0_10_145)))
 (let ((?x19024 (* ?x18866 l_0_10_163)))
 (let ((?x18864 (* 2.0 l_0_10_144)))
 (let ((?x19023 (* ?x18864 l_0_10_162)))
 (let ((?x19334 (* 2.0 l_0_10_14)))
 (let ((?x19408 (* ?x19334 l_0_10_25)))
 (let ((?x18926 (* 2.0 l_0_10_13)))
 (let ((?x19404 (* ?x18926 l_0_10_24)))
 (let ((?x18607 (* 2.0 l_0_10_12)))
 (let ((?x19400 (* ?x18607 l_0_10_23)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21093 (* ?x18194 l_0_10_90)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21091 (* ?x18191 l_0_10_89)))
 (let ((?x21094 (+ (+ (* (* 2.0 l_0_10_106) l_0_10_88) ?x21091) ?x21093)))
 (let ((?x21098 (- (+ ?x21094 (* (* 2.0 l_0_10_11) l_0_10_22)) (* (* 2.0 l_0_10_116) l_0_10_134))))
 (let ((?x21102 (- (- ?x21098 (* (* 2.0 l_0_10_117) l_0_10_135)) (* (* 2.0 l_0_10_118) l_0_10_136))))
 (let ((?x21109 (+ (- (- (- (+ (+ (+ ?x21102 ?x19400) ?x19404) ?x19408) ?x19023) ?x19024) ?x19026) ?x19412)))
 (let ((?x21113 (+ (+ ?x21109 (* (* 2.0 l_0_10_172) l_0_10_190)) (* (* 2.0 l_0_10_173) l_0_10_191))))
 (let ((?x21117 (- (+ ?x21113 (* (* 2.0 l_0_10_174) l_0_10_192)) (* (* 4.0 l_0_10_179) l_0_10_190))))
 (let ((?x21121 (- (- ?x21117 (* (* 4.0 l_0_10_180) l_0_10_191)) (* (* 4.0 l_0_10_181) l_0_10_192))))
 (let ((?x21125 (- (- ?x21121 (* (* 4.0 l_0_10_182) l_0_10_193)) (* (* 4.0 l_0_10_183) l_0_10_194))))
 (let ((?x21134 (- (- (- (- (- (- (- ?x21125 ?x19439) ?x19441) ?x19443) ?x19445) ?x19447) ?x21131) ?x21133)))
 (= (- ?x21134 ?x21135) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21009 (* ?x18472 l_0_10_74)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21006 (* ?x18469 l_0_10_73)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21003 (* ?x18466 l_0_10_72)))
 (let ((?x19532 (* l_0_10_49 l_0_10_49)))
 (let ((?x19530 (* l_0_10_48 l_0_10_48)))
 (let ((?x19528 (* l_0_10_47 l_0_10_47)))
 (let ((?x19526 (* l_0_10_46 l_0_10_46)))
 (let ((?x19524 (* l_0_10_45 l_0_10_45)))
 (let ((?x19522 (* l_0_10_44 l_0_10_44)))
 (let ((?x19520 (* l_0_10_21 l_0_10_21)))
 (let ((?x19518 (* l_0_10_20 l_0_10_20)))
 (let ((?x19516 (* l_0_10_19 l_0_10_19)))
 (let ((?x19514 (* l_0_10_18 l_0_10_18)))
 (let ((?x19512 (* l_0_10_17 l_0_10_17)))
 (let ((?x19491 (* l_0_10_16 l_0_10_16)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x20951 (* ?x18700 l_0_10_90)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x20948 (* ?x18685 l_0_10_89)))
 (let ((?x21182 (+ (+ (- (- (* (* (- 2.0) l_0_10_100) l_0_10_88) ?x20948) ?x20951) ?x19491) ?x19512)))
 (let ((?x21189 (- (- (+ ?x21182 ?x19514) (* (* 2.0 l_0_10_184) l_0_10_184)) (* (* 2.0 l_0_10_185) l_0_10_185))))
 (let ((?x21195 (- (- ?x21189 (* (* 2.0 l_0_10_186) l_0_10_186)) (* (* 2.0 l_0_10_187) l_0_10_187))))
 (let ((?x21201 (- (- ?x21195 (* (* 2.0 l_0_10_188) l_0_10_188)) (* (* 2.0 l_0_10_189) l_0_10_189))))
 (let ((?x21208 (- (- (- (- (+ (+ (+ ?x21201 ?x19516) ?x19518) ?x19520) ?x19522) ?x19524) ?x19526) ?x19528)))
 (= (+ (+ (+ (- (- ?x21208 ?x19530) ?x19532) ?x21003) ?x21006) ?x21009) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21135 (* ?x18472 l_0_10_80)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21133 (* ?x18469 l_0_10_79)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21131 (* ?x18466 l_0_10_78)))
 (let ((?x19605 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x19602 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x19599 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x19596 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x19593 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x19590 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x19587 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x19584 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x19581 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x18980 (* 2.0 l_0_10_18)))
 (let ((?x19578 (* ?x18980 l_0_10_24)))
 (let ((?x18713 (* 2.0 l_0_10_17)))
 (let ((?x19576 (* ?x18713 l_0_10_23)))
 (let ((?x18710 (* 2.0 l_0_10_16)))
 (let ((?x19568 (* ?x18710 l_0_10_22)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21093 (* ?x18194 l_0_10_90)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21091 (* ?x18191 l_0_10_89)))
 (let ((?x4096 (+ (+ (- (- (* (* (- 2.0) l_0_10_106) l_0_10_88) ?x21091) ?x21093) ?x19568) ?x19576)))
 (let ((?x21230 (- (- (+ ?x4096 ?x19578) (* (* 4.0 l_0_10_184) l_0_10_190)) (* (* 4.0 l_0_10_185) l_0_10_191))))
 (let ((?x21236 (- (- ?x21230 (* (* 4.0 l_0_10_186) l_0_10_192)) (* (* 4.0 l_0_10_187) l_0_10_193))))
 (let ((?x21242 (- (- ?x21236 (* (* 4.0 l_0_10_188) l_0_10_194)) (* (* 4.0 l_0_10_189) l_0_10_195))))
 (let ((?x21249 (- (- (- (- (+ (+ (+ ?x21242 ?x19581) ?x19584) ?x19587) ?x19590) ?x19593) ?x19596) ?x19599)))
 (= (+ (+ (+ (- (- ?x21249 ?x19602) ?x19605) ?x21131) ?x21133) ?x21135) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x19711 (* l_0_10_56 l_0_10_56)))
 (let ((?x19709 (* l_0_10_55 l_0_10_55)))
 (let ((?x19707 (* l_0_10_54 l_0_10_54)))
 (let ((?x19705 (* l_0_10_53 l_0_10_53)))
 (let ((?x19703 (* l_0_10_52 l_0_10_52)))
 (let ((?x19701 (* l_0_10_51 l_0_10_51)))
 (let ((?x19699 (* l_0_10_50 l_0_10_50)))
 (let ((?x19697 (* l_0_10_28 l_0_10_28)))
 (let ((?x19695 (* l_0_10_27 l_0_10_27)))
 (let ((?x19693 (* l_0_10_26 l_0_10_26)))
 (let ((?x19691 (* l_0_10_25 l_0_10_25)))
 (let ((?x19689 (* l_0_10_24 l_0_10_24)))
 (let ((?x19687 (* l_0_10_23 l_0_10_23)))
 (let ((?x19685 (* l_0_10_22 l_0_10_22)))
 (let ((?x3744 (- (* (* (- 2.0) l_0_10_190) l_0_10_190) (* (* 2.0 l_0_10_191) l_0_10_191))))
 (let ((?x4212 (- (- ?x3744 (* (* 2.0 l_0_10_192) l_0_10_192)) (* (* 2.0 l_0_10_193) l_0_10_193))))
 (let ((?x21279 (- (- ?x4212 (* (* 2.0 l_0_10_194) l_0_10_194)) (* (* 2.0 l_0_10_195) l_0_10_195))))
 (let ((?x21285 (+ (+ (+ (- ?x21279 (* (* 2.0 l_0_10_196) l_0_10_196)) ?x19685) ?x19687) ?x19689)))
 (let ((?x21292 (- (- (- (+ (+ (+ (+ ?x21285 ?x19691) ?x19693) ?x19695) ?x19697) ?x19699) ?x19701) ?x19703)))
 (= (- (- (- (- ?x21292 ?x19705) ?x19707) ?x19709) ?x19711) 0.0)))))))))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x4329 (* ?x18032 l_0_10_86)))
 (= (+ (* (* (- 2.0) l_0_10_57) l_0_10_58) ?x4329) 0.0))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x21333 (* ?x18032 l_0_10_95)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21331 (* ?x18414 l_0_10_79)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21329 (* ?x18411 l_0_10_78)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21327 (* ?x18029 l_0_10_67)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18789 (* ?x18451 l_0_10_163)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18787 (* ?x18449 l_0_10_162)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21315 (* ?x18191 l_0_10_87)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x21314 (* ?x18182 l_0_10_86)))
 (let ((?x21316 (+ ?x21314 ?x21315)))
 (let ((?x21320 (- (- ?x21316 (* (* 2.0 l_0_10_114) l_0_10_134)) (* (* 2.0 l_0_10_115) l_0_10_135))))
 (let ((?x21326 (+ (+ (- (- ?x21320 ?x18787) ?x18789) (* (* 2.0 l_0_10_170) l_0_10_190)) (* (* 2.0 l_0_10_171) l_0_10_191))))
 (= (+ (- (- (- ?x21326 ?x21327) ?x21329) ?x21331) ?x21333) 0.0)))))))))))))))))))))
(assert
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21331 (* ?x18414 l_0_10_79)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21329 (* ?x18411 l_0_10_78)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21358 (* ?x18029 l_0_10_72)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21315 (* ?x18191 l_0_10_87)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x21314 (* ?x18182 l_0_10_86)))
 (let ((?x18681 (* 2.0 l_0_10_100)))
 (let ((?x4497 (* ?x18681 l_0_10_85)))
 (= (+ (+ (- (- (- ?x4497 ?x21314) ?x21315) ?x21358) ?x21329) ?x21331) 0.0))))))))))))))
(assert
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21368 (* ?x18029 l_0_10_78)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x4516 (* ?x18182 l_0_10_85)))
 (= (- ?x4516 ?x21368) 0.0))))))
(assert
 (let ((?x21382 (* l_0_10_87 l_0_10_87)))
 (let ((?x21380 (* l_0_10_86 l_0_10_86)))
 (let ((?x21381 (+ (- (* (- l_0_10_58) l_0_10_58) (* l_0_10_59 l_0_10_59)) ?x21380)))
 (= (+ ?x21381 ?x21382) 0.0)))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x20109 (* ?x18420 l_0_10_89)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x20107 (* ?x18417 l_0_10_88)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x20105 (* ?x18414 l_0_10_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_58) l_0_10_60) ?x20105) ?x20107) ?x20109) 0.0))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x21410 (* ?x18420 l_0_10_96)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x21408 (* ?x18417 l_0_10_95)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21406 (* ?x18414 l_0_10_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_58) l_0_10_67) ?x21406) ?x21408) ?x21410) 0.0))))))))
(assert
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21433 (* ?x18414 l_0_10_73)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21431 (* ?x18411 l_0_10_72)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21424 (* ?x18685 l_0_10_87)))
 (let ((?x21425 (+ (* (* 2.0 l_0_10_100) l_0_10_86) ?x21424)))
 (= (- (- ?x21425 ?x21431) ?x21433) 0.0)))))))))
(assert
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21331 (* ?x18414 l_0_10_79)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21329 (* ?x18411 l_0_10_78)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21315 (* ?x18191 l_0_10_87)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x21314 (* ?x18182 l_0_10_86)))
 (let ((?x21316 (+ ?x21314 ?x21315)))
 (= (- (- ?x21316 ?x21329) ?x21331) 0.0)))))))))))
(assert
 (let ((?x20369 (* l_0_10_90 l_0_10_90)))
 (let ((?x20367 (* l_0_10_89 l_0_10_89)))
 (let ((?x20365 (* l_0_10_88 l_0_10_88)))
 (let ((?x20363 (* l_0_10_62 l_0_10_62)))
 (let ((?x21460 (- (- (* (- l_0_10_60) l_0_10_60) (* l_0_10_61 l_0_10_61)) ?x20363)))
 (= (+ (+ (+ ?x21460 ?x20365) ?x20367) ?x20369) 0.0)))))))
(assert
 (let ((?x18481 (* 2.0 l_0_10_90)))
 (let ((?x20849 (* ?x18481 l_0_10_97)))
 (let ((?x18478 (* 2.0 l_0_10_89)))
 (let ((?x20847 (* ?x18478 l_0_10_96)))
 (let ((?x18475 (* 2.0 l_0_10_88)))
 (let ((?x20845 (* ?x18475 l_0_10_95)))
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x20843 (* ?x18472 l_0_10_69)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x20841 (* ?x18469 l_0_10_68)))
 (let ((?x21472 (+ (+ (- (- (* (* (- 2.0) l_0_10_60) l_0_10_67) ?x20841) ?x20843) ?x20845) ?x20847)))
 (= (+ ?x21472 ?x20849) 0.0)))))))))))))
(assert
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21009 (* ?x18472 l_0_10_74)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21006 (* ?x18469 l_0_10_73)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21003 (* ?x18466 l_0_10_72)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x20951 (* ?x18700 l_0_10_90)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x20948 (* ?x18685 l_0_10_89)))
 (let ((?x20960 (+ (+ (* (* 2.0 l_0_10_100) l_0_10_88) ?x20948) ?x20951)))
 (= (- (- (- ?x20960 ?x21003) ?x21006) ?x21009) 0.0)))))))))))))
(assert
 (let ((?x18472 (* 2.0 l_0_10_62)))
 (let ((?x21135 (* ?x18472 l_0_10_80)))
 (let ((?x18469 (* 2.0 l_0_10_61)))
 (let ((?x21133 (* ?x18469 l_0_10_79)))
 (let ((?x18466 (* 2.0 l_0_10_60)))
 (let ((?x21131 (* ?x18466 l_0_10_78)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21093 (* ?x18194 l_0_10_90)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x21091 (* ?x18191 l_0_10_89)))
 (let ((?x21094 (+ (+ (* (* 2.0 l_0_10_106) l_0_10_88) ?x21091) ?x21093)))
 (= (- (- (- ?x21094 ?x21131) ?x21133) ?x21135) 0.0)))))))))))))
(assert
 (let ((?x21524 (* l_0_10_99 l_0_10_99)))
 (let ((?x21522 (* l_0_10_98 l_0_10_98)))
 (let ((?x21520 (* l_0_10_97 l_0_10_97)))
 (let ((?x21518 (* l_0_10_96 l_0_10_96)))
 (let ((?x21516 (* l_0_10_95 l_0_10_95)))
 (let ((?x21514 (* l_0_10_71 l_0_10_71)))
 (let ((?x21512 (* l_0_10_70 l_0_10_70)))
 (let ((?x21510 (* l_0_10_69 l_0_10_69)))
 (let ((?x21511 (- (- (* (- l_0_10_67) l_0_10_67) (* l_0_10_68 l_0_10_68)) ?x21510)))
 (let ((?x21525 (+ (+ (+ (+ (+ (- (- ?x21511 ?x21512) ?x21514) ?x21516) ?x21518) ?x21520) ?x21522) ?x21524)))
 (= ?x21525 0.0))))))))))))
(assert
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21566 (* ?x21565 l_0_10_76)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21563 (* ?x21562 l_0_10_75)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21560 (* ?x21559 l_0_10_74)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21557 (* ?x21556 l_0_10_73)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21554 (* ?x21553 l_0_10_72)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21551 (* ?x21550 l_0_10_99)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21548 (* ?x18703 l_0_10_98)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21546 (* ?x18700 l_0_10_97)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21544 (* ?x18685 l_0_10_96)))
 (let ((?x21552 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_95) ?x21544) ?x21546) ?x21548) ?x21551)))
 (= (- (- (- (- (- ?x21552 ?x21554) ?x21557) ?x21560) ?x21563) ?x21566) 0.0)))))))))))))))))))))
(assert
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21613 (* ?x21565 l_0_10_82)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21611 (* ?x21562 l_0_10_81)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21609 (* ?x21559 l_0_10_80)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21607 (* ?x21556 l_0_10_79)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21605 (* ?x21553 l_0_10_78)))
 (let ((?x21603 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x21600 (* ?x18197 l_0_10_98)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21598 (* ?x18194 l_0_10_97)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x4585 (* ?x18191 l_0_10_96)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x4584 (* ?x18182 l_0_10_95)))
 (let ((?x21604 (+ (+ (+ (+ ?x4584 ?x4585) ?x21598) ?x21600) ?x21603)))
 (= (- (- (- (- (- ?x21604 ?x21605) ?x21607) ?x21609) ?x21611) ?x21613) 0.0))))))))))))))))))))))
(assert
 (let ((?x21667 (* l_0_10_77 l_0_10_77)))
 (let ((?x21665 (* l_0_10_76 l_0_10_76)))
 (let ((?x21663 (* l_0_10_75 l_0_10_75)))
 (let ((?x21661 (* l_0_10_74 l_0_10_74)))
 (let ((?x21659 (* l_0_10_73 l_0_10_73)))
 (let ((?x21657 (* l_0_10_72 l_0_10_72)))
 (let ((?x21655 (* l_0_10_105 l_0_10_105)))
 (let ((?x21653 (* l_0_10_104 l_0_10_104)))
 (let ((?x21651 (* l_0_10_103 l_0_10_103)))
 (let ((?x21649 (* l_0_10_102 l_0_10_102)))
 (let ((?x21650 (+ (+ (* l_0_10_100 l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x21649)))
 (let ((?x21664 (- (- (- (- (+ (+ (+ ?x21650 ?x21651) ?x21653) ?x21655) ?x21657) ?x21659) ?x21661) ?x21663)))
 (= (- (- ?x21664 ?x21665) ?x21667) 0.0))))))))))))))
(assert
 (let ((?x21710 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21707 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21704 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21701 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21698 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21695 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x21692 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21689 (* ?x21550 l_0_10_110)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21687 (* ?x18703 l_0_10_109)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21685 (* ?x18700 l_0_10_108)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x4679 (* ?x18685 l_0_10_107)))
 (let ((?x21690 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_106) ?x4679) ?x21685) ?x21687) ?x21689)))
 (let ((?x21693 (+ ?x21690 ?x21692)))
 (= (- (- (- (- (- (- ?x21693 ?x21695) ?x21698) ?x21701) ?x21704) ?x21707) ?x21710) 0.0)))))))))))))))))))
(assert
 (let ((?x21770 (* l_0_10_84 l_0_10_84)))
 (let ((?x21768 (* l_0_10_83 l_0_10_83)))
 (let ((?x21766 (* l_0_10_82 l_0_10_82)))
 (let ((?x21764 (* l_0_10_81 l_0_10_81)))
 (let ((?x21762 (* l_0_10_80 l_0_10_80)))
 (let ((?x21760 (* l_0_10_79 l_0_10_79)))
 (let ((?x21758 (* l_0_10_78 l_0_10_78)))
 (let ((?x21756 (* l_0_10_112 l_0_10_112)))
 (let ((?x21754 (* l_0_10_111 l_0_10_111)))
 (let ((?x21752 (* l_0_10_110 l_0_10_110)))
 (let ((?x21750 (* l_0_10_109 l_0_10_109)))
 (let ((?x21748 (* l_0_10_108 l_0_10_108)))
 (let ((?x21749 (+ (+ (* l_0_10_106 l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21748)))
 (let ((?x21757 (+ (+ (+ (+ ?x21749 ?x21750) ?x21752) ?x21754) ?x21756)))
 (let ((?x21771 (- (- (- (- (- (- (- ?x21757 ?x21758) ?x21760) ?x21762) ?x21764) ?x21766) ?x21768) ?x21770)))
 (= ?x21771 0.0)))))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x4329 (* ?x18032 l_0_10_86)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21797 (* ?x18029 l_0_10_58)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18024 (* ?x18023 l_0_10_142)))
 (let ((?x21792 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_114) ?x18024) (* (* 2.0 l_0_10_169) l_0_10_170))))
 (let ((?x21796 (- (- ?x21792 (* (* 2.0 l_0_10_198) l_0_10_207)) (* (* 2.0 l_0_10_199) l_0_10_208))))
 (= (+ (- ?x21796 ?x21797) ?x4329) 0.0))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x18033 (* ?x18032 l_0_10_91)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x18030 (* ?x18029 l_0_10_63)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18174 (* ?x18023 l_0_10_147)))
 (let ((?x21817 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_119) ?x18174) (* (* 2.0 l_0_10_169) l_0_10_175))))
 (let ((?x21821 (- (- ?x21817 (* (* 2.0 l_0_10_203) l_0_10_207)) (* (* 2.0 l_0_10_204) l_0_10_208))))
 (let ((?x21825 (- (- ?x21821 (* (* 2.0 l_0_10_205) l_0_10_209)) (* (* 2.0 l_0_10_206) l_0_10_210))))
 (= (+ (- ?x21825 ?x18030) ?x18033) 0.0)))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x21333 (* ?x18032 l_0_10_95)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21327 (* ?x18029 l_0_10_67)))
 (let ((?x21865 (* l_0_10_211 l_0_10_211)))
 (let ((?x21863 (* l_0_10_210 l_0_10_210)))
 (let ((?x21861 (* l_0_10_209 l_0_10_209)))
 (let ((?x21859 (* l_0_10_208 l_0_10_208)))
 (let ((?x21857 (* l_0_10_207 l_0_10_207)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18212 (* ?x18023 l_0_10_151)))
 (let ((?x21856 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_123) ?x18212) (* (* 2.0 l_0_10_169) l_0_10_179))))
 (let ((?x21868 (+ (- (- (- (- (- (- ?x21856 ?x21857) ?x21859) ?x21861) ?x21863) ?x21865) ?x21327) ?x21333)))
 (= ?x21868 0.0)))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x21333 (* ?x18032 l_0_10_95)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21358 (* ?x18029 l_0_10_72)))
 (let ((?x21327 (* ?x18029 l_0_10_67)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18352 (* ?x18023 l_0_10_156)))
 (let ((?x18681 (* 2.0 l_0_10_100)))
 (let ((?x4497 (* ?x18681 l_0_10_85)))
 (let ((?x21897 (+ (- (- ?x4497 (* (* 2.0 l_0_10_113) l_0_10_128)) ?x18352) (* (* 2.0 l_0_10_169) l_0_10_184))))
 (let ((?x21903 (- (- ?x21897 (* (* 2.0 l_0_10_207) l_0_10_212)) (* (* 2.0 l_0_10_208) l_0_10_213))))
 (let ((?x21909 (- (- ?x21903 (* (* 2.0 l_0_10_209) l_0_10_214)) (* (* 2.0 l_0_10_210) l_0_10_215))))
 (let ((?x21915 (- (- (+ (- ?x21909 (* (* 2.0 l_0_10_211) l_0_10_216)) ?x21327) ?x21358) ?x21333)))
 (= ?x21915 0.0)))))))))))))))
(assert
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21368 (* ?x18029 l_0_10_78)))
 (let ((?x18023 (* 2.0 l_0_10_141)))
 (let ((?x18382 (* ?x18023 l_0_10_162)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x4516 (* ?x18182 l_0_10_85)))
 (let ((?x21939 (+ (- (- ?x4516 (* (* 2.0 l_0_10_113) l_0_10_134)) ?x18382) (* (* 2.0 l_0_10_169) l_0_10_190))))
 (let ((?x21943 (- (- ?x21939 (* (* 2.0 l_0_10_207) l_0_10_218)) (* (* 2.0 l_0_10_208) l_0_10_219))))
 (let ((?x21947 (- (- ?x21943 (* (* 2.0 l_0_10_209) l_0_10_220)) (* (* 2.0 l_0_10_210) l_0_10_221))))
 (= (- (- ?x21947 (* (* 2.0 l_0_10_211) l_0_10_222)) ?x21368) 0.0)))))))))))
(assert
 (let ((?x21382 (* l_0_10_87 l_0_10_87)))
 (let ((?x21380 (* l_0_10_86 l_0_10_86)))
 (let ((?x21378 (* l_0_10_59 l_0_10_59)))
 (let ((?x21386 (* l_0_10_58 l_0_10_58)))
 (let ((?x20015 (* l_0_10_171 l_0_10_171)))
 (let ((?x20013 (* l_0_10_170 l_0_10_170)))
 (let ((?x18395 (* l_0_10_143 l_0_10_143)))
 (let ((?x18393 (* l_0_10_142 l_0_10_142)))
 (let ((?x21961 (- (- (* (- l_0_10_114) l_0_10_114) (* l_0_10_115 l_0_10_115)) ?x18393)))
 (let ((?x21968 (+ (+ (- (- (+ (+ (- ?x21961 ?x18395) ?x20013) ?x20015) ?x21386) ?x21378) ?x21380) ?x21382)))
 (= ?x21968 0.0))))))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x18421 (* ?x18420 l_0_10_92)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x18418 (* ?x18417 l_0_10_91)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x18415 (* ?x18414 l_0_10_64)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x18412 (* ?x18411 l_0_10_63)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18534 (* ?x18451 l_0_10_148)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18533 (* ?x18449 l_0_10_147)))
 (let ((?x21983 (- (* (* (- 2.0) l_0_10_114) l_0_10_119) (* (* 2.0 l_0_10_115) l_0_10_120))))
 (let ((?x21989 (+ (+ (- (- ?x21983 ?x18533) ?x18534) (* (* 2.0 l_0_10_170) l_0_10_175)) (* (* 2.0 l_0_10_171) l_0_10_176))))
 (= (+ (+ (- (- ?x21989 ?x18412) ?x18415) ?x18418) ?x18421) 0.0))))))))))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x21410 (* ?x18420 l_0_10_96)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x21408 (* ?x18417 l_0_10_95)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21406 (* ?x18414 l_0_10_68)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x22021 (* ?x18411 l_0_10_67)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18612 (* ?x18451 l_0_10_152)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18610 (* ?x18449 l_0_10_151)))
 (let ((?x22014 (- (* (* (- 2.0) l_0_10_114) l_0_10_123) (* (* 2.0 l_0_10_115) l_0_10_124))))
 (let ((?x22020 (+ (+ (- (- ?x22014 ?x18610) ?x18612) (* (* 2.0 l_0_10_170) l_0_10_179)) (* (* 2.0 l_0_10_171) l_0_10_180))))
 (= (+ (+ (- (- ?x22020 ?x22021) ?x21406) ?x21408) ?x21410) 0.0))))))))))))))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x21410 (* ?x18420 l_0_10_96)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x21408 (* ?x18417 l_0_10_95)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21433 (* ?x18414 l_0_10_73)))
 (let ((?x21406 (* ?x18414 l_0_10_68)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21431 (* ?x18411 l_0_10_72)))
 (let ((?x22021 (* ?x18411 l_0_10_67)))
 (let ((?x18451 (* 2.0 l_0_10_143)))
 (let ((?x18708 (* ?x18451 l_0_10_157)))
 (let ((?x18449 (* 2.0 l_0_10_142)))
 (let ((?x18706 (* ?x18449 l_0_10_156)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21424 (* ?x18685 l_0_10_87)))
 (let ((?x21425 (+ (* (* 2.0 l_0_10_100) l_0_10_86) ?x21424)))
 (let ((?x22043 (- (- ?x21425 (* (* 2.0 l_0_10_114) l_0_10_128)) (* (* 2.0 l_0_10_115) l_0_10_129))))
 (let ((?x22049 (+ (+ (- (- ?x22043 ?x18706) ?x18708) (* (* 2.0 l_0_10_170) l_0_10_184)) (* (* 2.0 l_0_10_171) l_0_10_185))))
 (= (- (- (- (+ (- (+ ?x22049 ?x22021) ?x21431) ?x21406) ?x21433) ?x21408) ?x21410) 0.0)))))))))))))))))))))
(assert
 (let ((?x18558 (* l_0_10_94 l_0_10_94)))
 (let ((?x18556 (* l_0_10_93 l_0_10_93)))
 (let ((?x18554 (* l_0_10_92 l_0_10_92)))
 (let ((?x18552 (* l_0_10_91 l_0_10_91)))
 (let ((?x18550 (* l_0_10_66 l_0_10_66)))
 (let ((?x18548 (* l_0_10_65 l_0_10_65)))
 (let ((?x18546 (* l_0_10_64 l_0_10_64)))
 (let ((?x18544 (* l_0_10_63 l_0_10_63)))
 (let ((?x20572 (* l_0_10_178 l_0_10_178)))
 (let ((?x20566 (* l_0_10_177 l_0_10_177)))
 (let ((?x20560 (* l_0_10_176 l_0_10_176)))
 (let ((?x20554 (* l_0_10_175 l_0_10_175)))
 (let ((?x19082 (* l_0_10_150 l_0_10_150)))
 (let ((?x19080 (* l_0_10_149 l_0_10_149)))
 (let ((?x19078 (* l_0_10_148 l_0_10_148)))
 (let ((?x19076 (* l_0_10_147 l_0_10_147)))
 (let ((?x22074 (* l_0_10_122 l_0_10_122)))
 (let ((?x22072 (* l_0_10_121 l_0_10_121)))
 (let ((?x22073 (- (- (* (- l_0_10_119) l_0_10_119) (* l_0_10_120 l_0_10_120)) ?x22072)))
 (let ((?x22081 (+ (+ (- (- (- (- (- ?x22073 ?x22074) ?x19076) ?x19078) ?x19080) ?x19082) ?x20554) ?x20560)))
 (let ((?x22088 (+ (- (- (- (- (+ (+ ?x22081 ?x20566) ?x20572) ?x18544) ?x18546) ?x18548) ?x18550) ?x18552)))
 (= (+ (+ (+ ?x22088 ?x18554) ?x18556) ?x18558) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18636 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x18633 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x18630 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x18627 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18624 (* ?x18249 l_0_10_70)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18622 (* ?x18246 l_0_10_69)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18620 (* ?x18243 l_0_10_68)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18618 (* ?x18240 l_0_10_67)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x19128 (* ?x18223 l_0_10_154)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x19126 (* ?x18220 l_0_10_153)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x19124 (* ?x18217 l_0_10_152)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x19122 (* ?x18214 l_0_10_151)))
 (let ((?x5549 (- (* (* (- 2.0) l_0_10_119) l_0_10_123) (* (* 2.0 l_0_10_120) l_0_10_124))))
 (let ((?x22102 (- (- ?x5549 (* (* 2.0 l_0_10_121) l_0_10_125)) (* (* 2.0 l_0_10_122) l_0_10_126))))
 (let ((?x22108 (+ (- (- (- (- ?x22102 ?x19122) ?x19124) ?x19126) ?x19128) (* (* 2.0 l_0_10_175) l_0_10_179))))
 (let ((?x22112 (+ (+ ?x22108 (* (* 2.0 l_0_10_176) l_0_10_180)) (* (* 2.0 l_0_10_177) l_0_10_181))))
 (let ((?x22117 (- (- (- (+ ?x22112 (* (* 2.0 l_0_10_178) l_0_10_182)) ?x18618) ?x18620) ?x18622)))
 (= (+ (+ (+ (+ (- ?x22117 ?x18624) ?x18627) ?x18630) ?x18633) ?x18636) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18636 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x18633 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x18630 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x18627 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18726 (* ?x18249 l_0_10_75)))
 (let ((?x18624 (* ?x18249 l_0_10_70)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18724 (* ?x18246 l_0_10_74)))
 (let ((?x18622 (* ?x18246 l_0_10_69)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18722 (* ?x18243 l_0_10_73)))
 (let ((?x18620 (* ?x18243 l_0_10_68)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18720 (* ?x18240 l_0_10_72)))
 (let ((?x18618 (* ?x18240 l_0_10_67)))
 (let ((?x18223 (* 2.0 l_0_10_150)))
 (let ((?x19174 (* ?x18223 l_0_10_159)))
 (let ((?x18220 (* 2.0 l_0_10_149)))
 (let ((?x19170 (* ?x18220 l_0_10_158)))
 (let ((?x18217 (* 2.0 l_0_10_148)))
 (let ((?x19166 (* ?x18217 l_0_10_157)))
 (let ((?x18214 (* 2.0 l_0_10_147)))
 (let ((?x19162 (* ?x18214 l_0_10_156)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x18704 (* ?x18703 l_0_10_94)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x18701 (* ?x18700 l_0_10_93)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x18687 (* ?x18685 l_0_10_92)))
 (let ((?x18705 (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_91) ?x18687) ?x18701) ?x18704)))
 (let ((?x22147 (- (- ?x18705 (* (* 2.0 l_0_10_119) l_0_10_128)) (* (* 2.0 l_0_10_120) l_0_10_129))))
 (let ((?x22151 (- (- ?x22147 (* (* 2.0 l_0_10_121) l_0_10_130)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x22157 (+ (- (- (- (- ?x22151 ?x19162) ?x19166) ?x19170) ?x19174) (* (* 2.0 l_0_10_175) l_0_10_184))))
 (let ((?x22161 (+ (+ ?x22157 (* (* 2.0 l_0_10_176) l_0_10_185)) (* (* 2.0 l_0_10_177) l_0_10_186))))
 (let ((?x22166 (+ (- (+ (+ ?x22161 (* (* 2.0 l_0_10_178) l_0_10_187)) ?x18618) ?x18720) ?x18620)))
 (let ((?x22173 (- (- (- (+ (- (+ (- ?x22166 ?x18722) ?x18622) ?x18724) ?x18624) ?x18726) ?x18627) ?x18630)))
 (= (- (- ?x22173 ?x18633) ?x18636) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21524 (* l_0_10_99 l_0_10_99)))
 (let ((?x21522 (* l_0_10_98 l_0_10_98)))
 (let ((?x21520 (* l_0_10_97 l_0_10_97)))
 (let ((?x21518 (* l_0_10_96 l_0_10_96)))
 (let ((?x21516 (* l_0_10_95 l_0_10_95)))
 (let ((?x21514 (* l_0_10_71 l_0_10_71)))
 (let ((?x21512 (* l_0_10_70 l_0_10_70)))
 (let ((?x21510 (* l_0_10_69 l_0_10_69)))
 (let ((?x21508 (* l_0_10_68 l_0_10_68)))
 (let ((?x21528 (* l_0_10_67 l_0_10_67)))
 (let ((?x20911 (* l_0_10_183 l_0_10_183)))
 (let ((?x20905 (* l_0_10_182 l_0_10_182)))
 (let ((?x20899 (* l_0_10_181 l_0_10_181)))
 (let ((?x20893 (* l_0_10_180 l_0_10_180)))
 (let ((?x20887 (* l_0_10_179 l_0_10_179)))
 (let ((?x19289 (* l_0_10_155 l_0_10_155)))
 (let ((?x19287 (* l_0_10_154 l_0_10_154)))
 (let ((?x19285 (* l_0_10_153 l_0_10_153)))
 (let ((?x19283 (* l_0_10_152 l_0_10_152)))
 (let ((?x19281 (* l_0_10_151 l_0_10_151)))
 (let ((?x22212 (* l_0_10_127 l_0_10_127)))
 (let ((?x22210 (* l_0_10_126 l_0_10_126)))
 (let ((?x22208 (* l_0_10_125 l_0_10_125)))
 (let ((?x22209 (- (- (* (- l_0_10_123) l_0_10_123) (* l_0_10_124 l_0_10_124)) ?x22208)))
 (let ((?x22218 (- (- (- (- (- (- (- ?x22209 ?x22210) ?x22212) ?x19281) ?x19283) ?x19285) ?x19287) ?x19289)))
 (let ((?x22225 (- (- (+ (+ (+ (+ (+ ?x22218 ?x20887) ?x20893) ?x20899) ?x20905) ?x20911) ?x21528) ?x21508)))
 (let ((?x22232 (+ (+ (+ (+ (- (- (- ?x22225 ?x21510) ?x21512) ?x21514) ?x21516) ?x21518) ?x21520) ?x21522)))
 (= (+ ?x22232 ?x21524) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21524 (* l_0_10_99 l_0_10_99)))
 (let ((?x21522 (* l_0_10_98 l_0_10_98)))
 (let ((?x21520 (* l_0_10_97 l_0_10_97)))
 (let ((?x21518 (* l_0_10_96 l_0_10_96)))
 (let ((?x21516 (* l_0_10_95 l_0_10_95)))
 (let ((?x21514 (* l_0_10_71 l_0_10_71)))
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21566 (* ?x21565 l_0_10_76)))
 (let ((?x21512 (* l_0_10_70 l_0_10_70)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21563 (* ?x21562 l_0_10_75)))
 (let ((?x21510 (* l_0_10_69 l_0_10_69)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21560 (* ?x21559 l_0_10_74)))
 (let ((?x21508 (* l_0_10_68 l_0_10_68)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21557 (* ?x21556 l_0_10_73)))
 (let ((?x21528 (* l_0_10_67 l_0_10_67)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21554 (* ?x21553 l_0_10_72)))
 (let ((?x19352 (* 2.0 l_0_10_155)))
 (let ((?x19353 (* ?x19352 l_0_10_160)))
 (let ((?x19349 (* 2.0 l_0_10_154)))
 (let ((?x19350 (* ?x19349 l_0_10_159)))
 (let ((?x19346 (* 2.0 l_0_10_153)))
 (let ((?x19347 (* ?x19346 l_0_10_158)))
 (let ((?x19343 (* 2.0 l_0_10_152)))
 (let ((?x19344 (* ?x19343 l_0_10_157)))
 (let ((?x19340 (* 2.0 l_0_10_151)))
 (let ((?x19341 (* ?x19340 l_0_10_156)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21551 (* ?x21550 l_0_10_99)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21548 (* ?x18703 l_0_10_98)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21546 (* ?x18700 l_0_10_97)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21544 (* ?x18685 l_0_10_96)))
 (let ((?x21552 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_95) ?x21544) ?x21546) ?x21548) ?x21551)))
 (let ((?x5851 (- (- ?x21552 (* (* 2.0 l_0_10_123) l_0_10_128)) (* (* 2.0 l_0_10_124) l_0_10_129))))
 (let ((?x5251 (- (- ?x5851 (* (* 2.0 l_0_10_125) l_0_10_130)) (* (* 2.0 l_0_10_126) l_0_10_131))))
 (let ((?x5801 (- (- (- (- ?x5251 (* (* 2.0 l_0_10_127) l_0_10_132)) ?x19341) ?x19344) ?x19347)))
 (let ((?x22245 (+ (+ (- (- ?x5801 ?x19350) ?x19353) (* (* 2.0 l_0_10_179) l_0_10_184)) (* (* 2.0 l_0_10_180) l_0_10_185))))
 (let ((?x22249 (+ (+ ?x22245 (* (* 2.0 l_0_10_181) l_0_10_186)) (* (* 2.0 l_0_10_182) l_0_10_187))))
 (let ((?x22254 (- (+ (- (+ ?x22249 (* (* 2.0 l_0_10_183) l_0_10_188)) ?x21554) ?x21528) ?x21557)))
 (let ((?x22261 (+ (- (+ (- (+ (- (+ ?x22254 ?x21508) ?x21560) ?x21510) ?x21563) ?x21512) ?x21566) ?x21514)))
 (= (- (- (- (- (- ?x22261 ?x21516) ?x21518) ?x21520) ?x21522) ?x21524) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21613 (* ?x21565 l_0_10_82)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21611 (* ?x21562 l_0_10_81)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21609 (* ?x21559 l_0_10_80)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21607 (* ?x21556 l_0_10_79)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21605 (* ?x21553 l_0_10_78)))
 (let ((?x19352 (* 2.0 l_0_10_155)))
 (let ((?x19437 (* ?x19352 l_0_10_166)))
 (let ((?x19349 (* 2.0 l_0_10_154)))
 (let ((?x19435 (* ?x19349 l_0_10_165)))
 (let ((?x19346 (* 2.0 l_0_10_153)))
 (let ((?x19433 (* ?x19346 l_0_10_164)))
 (let ((?x19343 (* 2.0 l_0_10_152)))
 (let ((?x19431 (* ?x19343 l_0_10_163)))
 (let ((?x19340 (* 2.0 l_0_10_151)))
 (let ((?x19416 (* ?x19340 l_0_10_162)))
 (let ((?x21603 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x21600 (* ?x18197 l_0_10_98)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21598 (* ?x18194 l_0_10_97)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x4585 (* ?x18191 l_0_10_96)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x4584 (* ?x18182 l_0_10_95)))
 (let ((?x21604 (+ (+ (+ (+ ?x4584 ?x4585) ?x21598) ?x21600) ?x21603)))
 (let ((?x5965 (- (- ?x21604 (* (* 2.0 l_0_10_123) l_0_10_134)) (* (* 2.0 l_0_10_124) l_0_10_135))))
 (let ((?x22308 (- (- ?x5965 (* (* 2.0 l_0_10_125) l_0_10_136)) (* (* 2.0 l_0_10_126) l_0_10_137))))
 (let ((?x22313 (- (- (- (- ?x22308 (* (* 2.0 l_0_10_127) l_0_10_138)) ?x19416) ?x19431) ?x19433)))
 (let ((?x22319 (+ (+ (- (- ?x22313 ?x19435) ?x19437) (* (* 2.0 l_0_10_179) l_0_10_190)) (* (* 2.0 l_0_10_180) l_0_10_191))))
 (let ((?x22323 (+ (+ ?x22319 (* (* 2.0 l_0_10_181) l_0_10_192)) (* (* 2.0 l_0_10_182) l_0_10_193))))
 (let ((?x22328 (- (- (- (+ ?x22323 (* (* 2.0 l_0_10_183) l_0_10_194)) ?x21605) ?x21607) ?x21609)))
 (= (- (- ?x22328 ?x21611) ?x21613) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21667 (* l_0_10_77 l_0_10_77)))
 (let ((?x21665 (* l_0_10_76 l_0_10_76)))
 (let ((?x21663 (* l_0_10_75 l_0_10_75)))
 (let ((?x21661 (* l_0_10_74 l_0_10_74)))
 (let ((?x21659 (* l_0_10_73 l_0_10_73)))
 (let ((?x21657 (* l_0_10_72 l_0_10_72)))
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21566 (* ?x21565 l_0_10_76)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21563 (* ?x21562 l_0_10_75)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21560 (* ?x21559 l_0_10_74)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21557 (* ?x21556 l_0_10_73)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21554 (* ?x21553 l_0_10_72)))
 (let ((?x4056 (* l_0_10_189 l_0_10_189)))
 (let ((?x4050 (* l_0_10_188 l_0_10_188)))
 (let ((?x4044 (* l_0_10_187 l_0_10_187)))
 (let ((?x4032 (* l_0_10_186 l_0_10_186)))
 (let ((?x4028 (* l_0_10_185 l_0_10_185)))
 (let ((?x4027 (* l_0_10_184 l_0_10_184)))
 (let ((?x19510 (* l_0_10_161 l_0_10_161)))
 (let ((?x19495 (* l_0_10_160 l_0_10_160)))
 (let ((?x19487 (* l_0_10_159 l_0_10_159)))
 (let ((?x19483 (* l_0_10_158 l_0_10_158)))
 (let ((?x19479 (* l_0_10_157 l_0_10_157)))
 (let ((?x19477 (* l_0_10_156 l_0_10_156)))
 (let ((?x22355 (* l_0_10_133 l_0_10_133)))
 (let ((?x22353 (* l_0_10_132 l_0_10_132)))
 (let ((?x22351 (* l_0_10_131 l_0_10_131)))
 (let ((?x22349 (* l_0_10_130 l_0_10_130)))
 (let ((?x22347 (* l_0_10_129 l_0_10_129)))
 (let ((?x22345 (* l_0_10_128 l_0_10_128)))
 (let ((?x21655 (* l_0_10_105 l_0_10_105)))
 (let ((?x21653 (* l_0_10_104 l_0_10_104)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21551 (* ?x21550 l_0_10_99)))
 (let ((?x21651 (* l_0_10_103 l_0_10_103)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21548 (* ?x18703 l_0_10_98)))
 (let ((?x21649 (* l_0_10_102 l_0_10_102)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21546 (* ?x18700 l_0_10_97)))
 (let ((?x21647 (* l_0_10_101 l_0_10_101)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21544 (* ?x18685 l_0_10_96)))
 (let ((?x21646 (* l_0_10_100 l_0_10_100)))
 (let ((?x22338 (- (+ (- (+ (* (* (- 2.0) l_0_10_100) l_0_10_95) ?x21646) ?x21544) ?x21647) ?x21546)))
 (let ((?x22346 (- (+ (+ (- (+ (- (+ ?x22338 ?x21649) ?x21548) ?x21651) ?x21551) ?x21653) ?x21655) ?x22345)))
 (let ((?x22358 (- (- (- (- (- (- (- ?x22346 ?x22347) ?x22349) ?x22351) ?x22353) ?x22355) ?x19477) ?x19479)))
 (let ((?x22365 (+ (+ (+ (- (- (- (- ?x22358 ?x19483) ?x19487) ?x19495) ?x19510) ?x4027) ?x4028) ?x4032)))
 (let ((?x22372 (+ (+ (+ (+ (+ (+ (+ ?x22365 ?x4044) ?x4050) ?x4056) ?x21554) ?x21557) ?x21560) ?x21563)))
 (let ((?x22379 (- (- (- (- (- (- (+ ?x22372 ?x21566) ?x21657) ?x21659) ?x21661) ?x21663) ?x21665) ?x21667)))
 (= ?x22379 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21710 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21707 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21704 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21701 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21698 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21695 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x21565 (* 2.0 l_0_10_71)))
 (let ((?x21613 (* ?x21565 l_0_10_82)))
 (let ((?x21562 (* 2.0 l_0_10_70)))
 (let ((?x21611 (* ?x21562 l_0_10_81)))
 (let ((?x21559 (* 2.0 l_0_10_69)))
 (let ((?x21609 (* ?x21559 l_0_10_80)))
 (let ((?x21556 (* 2.0 l_0_10_68)))
 (let ((?x21607 (* ?x21556 l_0_10_79)))
 (let ((?x21553 (* 2.0 l_0_10_67)))
 (let ((?x21605 (* ?x21553 l_0_10_78)))
 (let ((?x19574 (* (* 2.0 l_0_10_161) l_0_10_167)))
 (let ((?x19571 (* (* 2.0 l_0_10_160) l_0_10_166)))
 (let ((?x19566 (* (* 2.0 l_0_10_159) l_0_10_165)))
 (let ((?x19563 (* (* 2.0 l_0_10_158) l_0_10_164)))
 (let ((?x19560 (* (* 2.0 l_0_10_157) l_0_10_163)))
 (let ((?x19558 (* (* 2.0 l_0_10_156) l_0_10_162)))
 (let ((?x21603 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18197 (* 2.0 l_0_10_109)))
 (let ((?x21600 (* ?x18197 l_0_10_98)))
 (let ((?x18194 (* 2.0 l_0_10_108)))
 (let ((?x21598 (* ?x18194 l_0_10_97)))
 (let ((?x18191 (* 2.0 l_0_10_107)))
 (let ((?x4585 (* ?x18191 l_0_10_96)))
 (let ((?x18182 (* 2.0 l_0_10_106)))
 (let ((?x4584 (* ?x18182 l_0_10_95)))
 (let ((?x21692 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21689 (* ?x21550 l_0_10_110)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21687 (* ?x18703 l_0_10_109)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21685 (* ?x18700 l_0_10_108)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x4679 (* ?x18685 l_0_10_107)))
 (let ((?x21690 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_106) ?x4679) ?x21685) ?x21687) ?x21689)))
 (let ((?x21693 (+ ?x21690 ?x21692)))
 (let ((?x22391 (- (- (- (- (- (- ?x21693 ?x4584) ?x4585) ?x21598) ?x21600) ?x21603) (* (* 2.0 l_0_10_128) l_0_10_134))))
 (let ((?x22397 (- (- ?x22391 (* (* 2.0 l_0_10_129) l_0_10_135)) (* (* 2.0 l_0_10_130) l_0_10_136))))
 (let ((?x22403 (- (- ?x22397 (* (* 2.0 l_0_10_131) l_0_10_137)) (* (* 2.0 l_0_10_132) l_0_10_138))))
 (let ((?x22409 (- (- (- (- ?x22403 (* (* 2.0 l_0_10_133) l_0_10_139)) ?x19558) ?x19560) ?x19563)))
 (let ((?x22414 (+ (- (- (- ?x22409 ?x19566) ?x19571) ?x19574) (* (* 2.0 l_0_10_184) l_0_10_190))))
 (let ((?x22418 (+ (+ ?x22414 (* (* 2.0 l_0_10_185) l_0_10_191)) (* (* 2.0 l_0_10_186) l_0_10_192))))
 (let ((?x22422 (+ (+ ?x22418 (* (* 2.0 l_0_10_187) l_0_10_193)) (* (* 2.0 l_0_10_188) l_0_10_194))))
 (let ((?x22427 (+ (+ (+ (+ ?x22422 (* (* 2.0 l_0_10_189) l_0_10_195)) ?x21605) ?x21607) ?x21609)))
 (let ((?x22434 (- (- (- (- (- (+ (+ ?x22427 ?x21611) ?x21613) ?x21695) ?x21698) ?x21701) ?x21704) ?x21707)))
 (= (- ?x22434 ?x21710) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21770 (* l_0_10_84 l_0_10_84)))
 (let ((?x21768 (* l_0_10_83 l_0_10_83)))
 (let ((?x21766 (* l_0_10_82 l_0_10_82)))
 (let ((?x21764 (* l_0_10_81 l_0_10_81)))
 (let ((?x21762 (* l_0_10_80 l_0_10_80)))
 (let ((?x21760 (* l_0_10_79 l_0_10_79)))
 (let ((?x21758 (* l_0_10_78 l_0_10_78)))
 (let ((?x4330 (* l_0_10_196 l_0_10_196)))
 (let ((?x4327 (* l_0_10_195 l_0_10_195)))
 (let ((?x4322 (* l_0_10_194 l_0_10_194)))
 (let ((?x4288 (* l_0_10_193 l_0_10_193)))
 (let ((?x4252 (* l_0_10_192 l_0_10_192)))
 (let ((?x21300 (* l_0_10_191 l_0_10_191)))
 (let ((?x21298 (* l_0_10_190 l_0_10_190)))
 (let ((?x19683 (* l_0_10_168 l_0_10_168)))
 (let ((?x19681 (* l_0_10_167 l_0_10_167)))
 (let ((?x19679 (* l_0_10_166 l_0_10_166)))
 (let ((?x19677 (* l_0_10_165 l_0_10_165)))
 (let ((?x19675 (* l_0_10_164 l_0_10_164)))
 (let ((?x19673 (* l_0_10_163 l_0_10_163)))
 (let ((?x19672 (* l_0_10_162 l_0_10_162)))
 (let ((?x22474 (* l_0_10_140 l_0_10_140)))
 (let ((?x22472 (* l_0_10_139 l_0_10_139)))
 (let ((?x22470 (* l_0_10_138 l_0_10_138)))
 (let ((?x22468 (* l_0_10_137 l_0_10_137)))
 (let ((?x22466 (* l_0_10_136 l_0_10_136)))
 (let ((?x6419 (* l_0_10_135 l_0_10_135)))
 (let ((?x6457 (* l_0_10_134 l_0_10_134)))
 (let ((?x21756 (* l_0_10_112 l_0_10_112)))
 (let ((?x21754 (* l_0_10_111 l_0_10_111)))
 (let ((?x21752 (* l_0_10_110 l_0_10_110)))
 (let ((?x21750 (* l_0_10_109 l_0_10_109)))
 (let ((?x21748 (* l_0_10_108 l_0_10_108)))
 (let ((?x21749 (+ (+ (* l_0_10_106 l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21748)))
 (let ((?x21757 (+ (+ (+ (+ ?x21749 ?x21750) ?x21752) ?x21754) ?x21756)))
 (let ((?x22475 (- (- (- (- (- (- (- ?x21757 ?x6457) ?x6419) ?x22466) ?x22468) ?x22470) ?x22472) ?x22474)))
 (let ((?x22482 (- (- (- (- (- (- (- ?x22475 ?x19672) ?x19673) ?x19675) ?x19677) ?x19679) ?x19681) ?x19683)))
 (let ((?x22489 (+ (+ (+ (+ (+ (+ (+ ?x22482 ?x21298) ?x21300) ?x4252) ?x4288) ?x4322) ?x4327) ?x4330)))
 (let ((?x22496 (- (- (- (- (- (- (- ?x22489 ?x21758) ?x21760) ?x21762) ?x21764) ?x21766) ?x21768) ?x21770)))
 (= ?x22496 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x4329 (* ?x18032 l_0_10_86)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21797 (* ?x18029 l_0_10_58)))
 (let ((?x6742 (- (* (* (- 2.0) l_0_10_198) l_0_10_212) (* (* 2.0 l_0_10_199) l_0_10_213))))
 (= (- (+ ?x6742 ?x21797) ?x4329) 0.0)))))))
(assert
 (let ((?x18032 (* 2.0 l_0_10_85)))
 (let ((?x18033 (* ?x18032 l_0_10_91)))
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x18030 (* ?x18029 l_0_10_63)))
 (let ((?x22515 (- (* (* (- 2.0) l_0_10_203) l_0_10_212) (* (* 2.0 l_0_10_204) l_0_10_213))))
 (let ((?x22519 (- (- ?x22515 (* (* 2.0 l_0_10_205) l_0_10_214)) (* (* 2.0 l_0_10_206) l_0_10_215))))
 (= (- (+ ?x22519 ?x18030) ?x18033) 0.0))))))))
(assert
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21358 (* ?x18029 l_0_10_72)))
 (let ((?x22557 (* l_0_10_217 l_0_10_217)))
 (let ((?x22555 (* l_0_10_216 l_0_10_216)))
 (let ((?x22553 (* l_0_10_215 l_0_10_215)))
 (let ((?x22551 (* l_0_10_214 l_0_10_214)))
 (let ((?x22549 (* l_0_10_213 l_0_10_213)))
 (let ((?x22547 (* l_0_10_212 l_0_10_212)))
 (let ((?x22554 (- (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_85) ?x22547) ?x22549) ?x22551) ?x22553)))
 (= (+ (- (- ?x22554 ?x22555) ?x22557) ?x21358) 0.0)))))))))))
(assert
 (let ((?x18029 (* 2.0 l_0_10_57)))
 (let ((?x21368 (* ?x18029 l_0_10_78)))
 (let ((?x22577 (- (* (* (- 2.0) l_0_10_106) l_0_10_85) (* (* 2.0 l_0_10_212) l_0_10_218))))
 (let ((?x22583 (- (- ?x22577 (* (* 2.0 l_0_10_213) l_0_10_219)) (* (* 2.0 l_0_10_214) l_0_10_220))))
 (let ((?x22589 (- (- ?x22583 (* (* 2.0 l_0_10_215) l_0_10_221)) (* (* 2.0 l_0_10_216) l_0_10_222))))
 (= (+ (- ?x22589 (* (* 2.0 l_0_10_217) l_0_10_223)) ?x21368) 0.0)))))))
(assert
 (let ((?x21382 (* l_0_10_87 l_0_10_87)))
 (let ((?x21380 (* l_0_10_86 l_0_10_86)))
 (let ((?x22614 (- (- (+ (* l_0_10_58 l_0_10_58) (* l_0_10_59 l_0_10_59)) ?x21380) ?x21382)))
 (= ?x22614 0.0)))))
(assert
 (let ((?x18420 (* 2.0 l_0_10_87)))
 (let ((?x18421 (* ?x18420 l_0_10_92)))
 (let ((?x18417 (* 2.0 l_0_10_86)))
 (let ((?x18418 (* ?x18417 l_0_10_91)))
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x18415 (* ?x18414 l_0_10_64)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x18412 (* ?x18411 l_0_10_63)))
 (= (- (- (+ ?x18412 ?x18415) ?x18418) ?x18421) 0.0))))))))))
(assert
 (let ((?x18414 (* 2.0 l_0_10_59)))
 (let ((?x21433 (* ?x18414 l_0_10_73)))
 (let ((?x18411 (* 2.0 l_0_10_58)))
 (let ((?x21431 (* ?x18411 l_0_10_72)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x21424 (* ?x18685 l_0_10_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_100) l_0_10_86) ?x21424) ?x21431) ?x21433) 0.0))))))))
(assert
 (let ((?x18558 (* l_0_10_94 l_0_10_94)))
 (let ((?x18556 (* l_0_10_93 l_0_10_93)))
 (let ((?x18554 (* l_0_10_92 l_0_10_92)))
 (let ((?x18552 (* l_0_10_91 l_0_10_91)))
 (let ((?x18550 (* l_0_10_66 l_0_10_66)))
 (let ((?x18548 (* l_0_10_65 l_0_10_65)))
 (let ((?x22639 (+ (+ (+ (* l_0_10_63 l_0_10_63) (* l_0_10_64 l_0_10_64)) ?x18548) ?x18550)))
 (= (- (- (- (- ?x22639 ?x18552) ?x18554) ?x18556) ?x18558) 0.0)))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_66)))
 (let ((?x18726 (* ?x18249 l_0_10_75)))
 (let ((?x18246 (* 2.0 l_0_10_65)))
 (let ((?x18724 (* ?x18246 l_0_10_74)))
 (let ((?x18243 (* 2.0 l_0_10_64)))
 (let ((?x18722 (* ?x18243 l_0_10_73)))
 (let ((?x18240 (* 2.0 l_0_10_63)))
 (let ((?x18720 (* ?x18240 l_0_10_72)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x18704 (* ?x18703 l_0_10_94)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x18701 (* ?x18700 l_0_10_93)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x18687 (* ?x18685 l_0_10_92)))
 (let ((?x22656 (+ (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_91) ?x18687) ?x18701) ?x18704) ?x18720)))
 (= (+ (+ (+ ?x22656 ?x18722) ?x18724) ?x18726) 0.0)))))))))))))))))
(assert
 (let ((?x21667 (* l_0_10_77 l_0_10_77)))
 (let ((?x21665 (* l_0_10_76 l_0_10_76)))
 (let ((?x21663 (* l_0_10_75 l_0_10_75)))
 (let ((?x21661 (* l_0_10_74 l_0_10_74)))
 (let ((?x21659 (* l_0_10_73 l_0_10_73)))
 (let ((?x21657 (* l_0_10_72 l_0_10_72)))
 (let ((?x21655 (* l_0_10_105 l_0_10_105)))
 (let ((?x21653 (* l_0_10_104 l_0_10_104)))
 (let ((?x21651 (* l_0_10_103 l_0_10_103)))
 (let ((?x21649 (* l_0_10_102 l_0_10_102)))
 (let ((?x7052 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x21649)))
 (let ((?x22666 (+ (+ (+ (+ (- (- (- ?x7052 ?x21651) ?x21653) ?x21655) ?x21657) ?x21659) ?x21661) ?x21663)))
 (= (+ (+ ?x22666 ?x21665) ?x21667) 0.0))))))))))))))
(assert
 (let ((?x21710 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21707 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21704 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21701 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21698 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21695 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x21692 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x21550 (* 2.0 l_0_10_104)))
 (let ((?x21689 (* ?x21550 l_0_10_110)))
 (let ((?x18703 (* 2.0 l_0_10_103)))
 (let ((?x21687 (* ?x18703 l_0_10_109)))
 (let ((?x18700 (* 2.0 l_0_10_102)))
 (let ((?x21685 (* ?x18700 l_0_10_108)))
 (let ((?x18685 (* 2.0 l_0_10_101)))
 (let ((?x4679 (* ?x18685 l_0_10_107)))
 (let ((?x22690 (- (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_106) ?x4679) ?x21685) ?x21687) ?x21689)))
 (let ((?x22697 (+ (+ (+ (+ (+ (+ (- ?x22690 ?x21692) ?x21695) ?x21698) ?x21701) ?x21704) ?x21707) ?x21710)))
 (= ?x22697 0.0)))))))))))))))))))
(assert
 (let ((?x21770 (* l_0_10_84 l_0_10_84)))
 (let ((?x21768 (* l_0_10_83 l_0_10_83)))
 (let ((?x21766 (* l_0_10_82 l_0_10_82)))
 (let ((?x21764 (* l_0_10_81 l_0_10_81)))
 (let ((?x21762 (* l_0_10_80 l_0_10_80)))
 (let ((?x21760 (* l_0_10_79 l_0_10_79)))
 (let ((?x21758 (* l_0_10_78 l_0_10_78)))
 (let ((?x21756 (* l_0_10_112 l_0_10_112)))
 (let ((?x21754 (* l_0_10_111 l_0_10_111)))
 (let ((?x21752 (* l_0_10_110 l_0_10_110)))
 (let ((?x21750 (* l_0_10_109 l_0_10_109)))
 (let ((?x21748 (* l_0_10_108 l_0_10_108)))
 (let ((?x7097 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21748)))
 (let ((?x7099 (+ (+ (+ (- (- (- (- ?x7097 ?x21750) ?x21752) ?x21754) ?x21756) ?x21758) ?x21760) ?x21762)))
 (= (+ (+ (+ (+ ?x7099 ?x21764) ?x21766) ?x21768) ?x21770) 0.0))))))))))))))))
(assert
 (= (* (- l_0_10_197) l_0_10_197) 0.0))
(assert
 (= (* (* (- 2.0) l_0_10_197) l_0_10_198) 0.0))
(assert
 (= (* (* (- 2.0) l_0_10_197) l_0_10_203) 0.0))
(assert
 (= (- (* (- l_0_10_198) l_0_10_198) (* l_0_10_199 l_0_10_199)) 0.0))
(assert
 (let ((?x22751 (- (* (* (- 2.0) l_0_10_198) l_0_10_203) (* (* 2.0 l_0_10_199) l_0_10_204))))
 (= ?x22751 0.0)))
(assert
 (let ((?x22770 (* l_0_10_206 l_0_10_206)))
 (let ((?x22768 (* l_0_10_205 l_0_10_205)))
 (let ((?x22769 (- (- (* (- l_0_10_203) l_0_10_203) (* l_0_10_204 l_0_10_204)) ?x22768)))
 (= (- ?x22769 ?x22770) 0.0)))))
(assert
 (let ((?x22797 (* l_0_10_224 l_0_10_224)))
 (let ((?x22795 (* l_0_10_223 l_0_10_223)))
 (let ((?x22793 (* l_0_10_222 l_0_10_222)))
 (let ((?x22791 (* l_0_10_221 l_0_10_221)))
 (let ((?x22789 (* l_0_10_220 l_0_10_220)))
 (let ((?x22790 (- (- (* (- l_0_10_218) l_0_10_218) (* l_0_10_219 l_0_10_219)) ?x22789)))
 (= (- (- (- (- ?x22790 ?x22791) ?x22793) ?x22795) ?x22797) 0.0))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_29 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_34 0.0))
(assert
 (>= l_0_10_38 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_49 0.0))
(assert
 (>= l_0_10_56 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_59 0.0))
(assert
 (>= l_0_10_62 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_71 0.0))
(assert
 (>= l_0_10_77 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_112 0.0))
(assert
 (>= l_0_10_113 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_122 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_133 0.0))
(assert
 (>= l_0_10_140 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_143 0.0))
(assert
 (>= l_0_10_146 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_155 0.0))
(assert
 (>= l_0_10_161 0.0))
(assert
 (>= l_0_10_168 0.0))
(assert
 (>= l_0_10_169 0.0))
(assert
 (>= l_0_10_171 0.0))
(assert
 (>= l_0_10_174 0.0))
(assert
 (>= l_0_10_178 0.0))
(assert
 (>= l_0_10_183 0.0))
(assert
 (>= l_0_10_189 0.0))
(assert
 (>= l_0_10_196 0.0))
(assert
 (>= l_0_10_197 0.0))
(assert
 (>= l_0_10_199 0.0))
(assert
 (>= l_0_10_202 0.0))
(assert
 (>= l_0_10_206 0.0))
(assert
 (>= l_0_10_211 0.0))
(assert
 (>= l_0_10_217 0.0))
(assert
 (>= l_0_10_224 0.0))
(assert
 (let ((?x22875 (* l_0_11_85 l_0_11_85)))
 (let ((?x22873 (* l_0_11_57 l_0_11_57)))
 (let ((?x22872 (- (* (* (- 2.0) l_0_11_197) l_0_11_212) (* (* 2.0 l_0_11_225) l_0_11_240))))
 (= (+ (- (+ ?x22872 ?x22873) ?x22875) 1.0) 0.0)))))
(assert
 (let ((?x22893 (- (- (- _a_2_) (* (* 2.0 l_0_11_197) l_0_11_218)) (* (* 2.0 l_0_11_225) l_0_11_246))))
 (= ?x22893 0.0)))
(assert
 (let ((?x22931 (* l_0_11_29 l_0_11_29)))
 (let ((?x22905 (* l_0_11_141 l_0_11_141)))
 (let ((?x22909 (- (+ (- (- _a_3_) (* l_0_11_1 l_0_11_1)) ?x22905) (* (* 2.0 l_0_11_203) l_0_11_218))))
 (let ((?x22915 (- (- ?x22909 (* (* 2.0 l_0_11_204) l_0_11_219)) (* (* 2.0 l_0_11_205) l_0_11_220))))
 (let ((?x22921 (- (- ?x22915 (* (* 2.0 l_0_11_206) l_0_11_221)) (* (* 2.0 l_0_11_231) l_0_11_246))))
 (let ((?x22927 (- (- ?x22921 (* (* 2.0 l_0_11_232) l_0_11_247)) (* (* 2.0 l_0_11_233) l_0_11_248))))
 (= (+ (- ?x22927 (* (* 2.0 l_0_11_234) l_0_11_249)) ?x22931) 0.0))))))))
(assert
 (let ((?x22875 (* l_0_11_85 l_0_11_85)))
 (let ((?x22873 (* l_0_11_57 l_0_11_57)))
 (let ((?x22971 (- (- (- _a_4_) (* (* 2.0 l_0_11_198) l_0_11_218)) (* (* 2.0 l_0_11_199) l_0_11_219))))
 (let ((?x22977 (- (- ?x22971 (* (* 2.0 l_0_11_226) l_0_11_246)) (* (* 2.0 l_0_11_227) l_0_11_247))))
 (= (+ (- ?x22977 ?x22873) ?x22875) 0.0))))))
(assert
 (let ((?x22875 (* l_0_11_85 l_0_11_85)))
 (let ((?x22873 (* l_0_11_57 l_0_11_57)))
 (let ((?x7254 (* l_0_11_169 l_0_11_169)))
 (let ((?x7260 (+ (- (* (- l_0_11_113) l_0_11_113) (* l_0_11_141 l_0_11_141)) ?x7254)))
 (let ((?x7259 (- (- ?x7260 (* (* 2.0 l_0_11_197) l_0_11_207)) (* (* 2.0 l_0_11_225) l_0_11_235))))
 (= (- (+ (- ?x7259 ?x22873) ?x22875) 1.0) 0.0)))))))
(assert
 (let ((?x22931 (* l_0_11_29 l_0_11_29)))
 (let ((?x23018 (- (- (* l_0_11_1 l_0_11_1) (* (* 2.0 l_0_11_169) l_0_11_169)) (* (* 2.0 l_0_11_197) l_0_11_200))))
 (= (+ (- (- ?x23018 (* (* 2.0 l_0_11_225) l_0_11_228)) ?x22931) 1.0) 0.0))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x23049 (* ?x23048 l_0_11_91)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x23046 (* ?x23045 l_0_11_63)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23043 (* ?x23042 l_0_11_30)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23040 (* ?x23039 l_0_11_142)))
 (let ((?x23050 (+ (- (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) ?x23040) ?x23043) ?x23046) ?x23049)))
 (= ?x23050 0.0)))))))))))
(assert
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23102 (* ?x23101 l_0_11_53)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23099 (* ?x23098 l_0_11_52)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23096 (* ?x23095 l_0_11_51)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23093 (* ?x23092 l_0_11_50)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23090 (* ?x23042 l_0_11_32)))
 (let ((?x23087 (* 2.0 l_0_11_24)))
 (let ((?x23088 (* ?x23087 l_0_11_9)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23085 (* ?x23084 l_0_11_8)))
 (let ((?x23081 (* 2.0 l_0_11_22)))
 (let ((?x23082 (* ?x23081 l_0_11_7)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23067 (* ?x23039 l_0_11_144)))
 (let ((?x23066 (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_10) l_0_11_25))))
 (let ((?x23074 (- (- (+ ?x23066 ?x23067) (* (* 4.0 l_0_11_175) l_0_11_190)) (* (* 4.0 l_0_11_176) l_0_11_191))))
 (let ((?x23080 (- (- ?x23074 (* (* 4.0 l_0_11_177) l_0_11_192)) (* (* 4.0 l_0_11_178) l_0_11_193))))
 (let ((?x23100 (- (- (- (+ (+ (+ (+ ?x23080 ?x23082) ?x23085) ?x23088) ?x23090) ?x23093) ?x23096) ?x23099)))
 (= (- ?x23100 ?x23102) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23149 (* ?x23042 l_0_11_35)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23147 (* ?x23039 l_0_11_147)))
 (= (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x23147) ?x23149) 0.0))))))
(assert
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23223 (* ?x23222 l_0_11_81)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23220 (* ?x23219 l_0_11_80)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23217 (* ?x23216 l_0_11_79)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23214 (* ?x23213 l_0_11_78)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23211 (* ?x23042 l_0_11_39)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23197 (* ?x23196 l_0_11_165)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23194 (* ?x23193 l_0_11_164)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x23191 (* ?x23190 l_0_11_163)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23188 (* ?x23187 l_0_11_162)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23185 (* ?x23039 l_0_11_151)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x23171 (* ?x23170 l_0_11_94)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x23168 (* ?x23167 l_0_11_93)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x23165 (* ?x23164 l_0_11_92)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x23157 (* ?x23155 l_0_11_91)))
 (let ((?x23172 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x23157) ?x23165) ?x23168) ?x23171)))
 (let ((?x23178 (- (- ?x23172 (* (* 2.0 l_0_11_119) l_0_11_134)) (* (* 2.0 l_0_11_120) l_0_11_135))))
 (let ((?x23184 (- (- ?x23178 (* (* 2.0 l_0_11_121) l_0_11_136)) (* (* 2.0 l_0_11_122) l_0_11_137))))
 (let ((?x23201 (+ (- (- (- (- (+ ?x23184 ?x23185) ?x23188) ?x23191) ?x23194) ?x23197) (* (* 2.0 l_0_11_175) l_0_11_190))))
 (let ((?x23207 (+ (+ ?x23201 (* (* 2.0 l_0_11_176) l_0_11_191)) (* (* 2.0 l_0_11_177) l_0_11_192))))
 (let ((?x23218 (- (- (+ (+ ?x23207 (* (* 2.0 l_0_11_178) l_0_11_193)) ?x23211) ?x23214) ?x23217)))
 (= (- (- ?x23218 ?x23220) ?x23223) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23223 (* ?x23222 l_0_11_81)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23220 (* ?x23219 l_0_11_80)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23217 (* ?x23216 l_0_11_79)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23214 (* ?x23213 l_0_11_78)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23286 (* ?x23042 l_0_11_44)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23284 (* ?x23039 l_0_11_156)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x23171 (* ?x23170 l_0_11_94)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x23168 (* ?x23167 l_0_11_93)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x23165 (* ?x23164 l_0_11_92)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x23157 (* ?x23155 l_0_11_91)))
 (let ((?x23283 (- (- (- (- (* (* (- 2.0) l_0_11_1) l_0_11_16) ?x23157) ?x23165) ?x23168) ?x23171)))
 (= (+ (+ (+ (+ (+ (+ ?x23283 ?x23284) ?x23286) ?x23214) ?x23217) ?x23220) ?x23223) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x6808 (* ?x23042 l_0_11_50)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x7493 (* ?x23039 l_0_11_162)))
 (= (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) ?x7493) ?x6808) 0.0))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x23327 (* ?x23326 l_0_11_92)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x23324 (* ?x23323 l_0_11_91)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x23321 (* ?x23320 l_0_11_64)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x23318 (* ?x23317 l_0_11_63)))
 (let ((?x23315 (* l_0_11_31 l_0_11_31)))
 (let ((?x23313 (* l_0_11_30 l_0_11_30)))
 (let ((?x23311 (* l_0_11_3 l_0_11_3)))
 (let ((?x23304 (* l_0_11_2 l_0_11_2)))
 (let ((?x23310 (- (+ (* l_0_11_142 l_0_11_142) (* l_0_11_143 l_0_11_143)) ?x23304)))
 (let ((?x23328 (+ (+ (- (- (+ (+ (- ?x23310 ?x23311) ?x23313) ?x23315) ?x23318) ?x23321) ?x23324) ?x23327)))
 (= ?x23328 0.0))))))))))))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x23381 (* ?x23380 l_0_11_93)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x23378 (* ?x23377 l_0_11_92)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x23375 (* ?x23374 l_0_11_91)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x23372 (* ?x23371 l_0_11_65)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x23369 (* ?x23368 l_0_11_64)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x23366 (* ?x23365 l_0_11_63)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23363 (* ?x23362 l_0_11_33)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23360 (* ?x23359 l_0_11_32)))
 (let ((?x23356 (* 2.0 l_0_11_3)))
 (let ((?x23357 (* ?x23356 l_0_11_5)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23354 (* ?x23353 l_0_11_4)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23351 (* ?x23342 l_0_11_145)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23341 (* ?x7546 l_0_11_144)))
 (let ((?x23370 (- (- (+ (+ (- (- (+ ?x23341 ?x23351) ?x23354) ?x23357) ?x23360) ?x23363) ?x23366) ?x23369)))
 (= (+ (+ (+ (- ?x23370 ?x23372) ?x23375) ?x23378) ?x23381) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23443 (* l_0_11_94 l_0_11_94)))
 (let ((?x23441 (* l_0_11_93 l_0_11_93)))
 (let ((?x23439 (* l_0_11_92 l_0_11_92)))
 (let ((?x23437 (* l_0_11_91 l_0_11_91)))
 (let ((?x23435 (* l_0_11_66 l_0_11_66)))
 (let ((?x23433 (* l_0_11_65 l_0_11_65)))
 (let ((?x23431 (* l_0_11_64 l_0_11_64)))
 (let ((?x23429 (* l_0_11_63 l_0_11_63)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23427 (* ?x23362 l_0_11_36)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23425 (* ?x23359 l_0_11_35)))
 (let ((?x23356 (* 2.0 l_0_11_3)))
 (let ((?x23423 (* ?x23356 l_0_11_8)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23412 (* ?x23353 l_0_11_7)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23411 (* ?x23342 l_0_11_148)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x7595 (* ?x7546 l_0_11_147)))
 (let ((?x23432 (- (- (+ (+ (- (- (+ ?x7595 ?x23411) ?x23412) ?x23423) ?x23425) ?x23427) ?x23429) ?x23431)))
 (= (+ (+ (+ (+ (- (- ?x23432 ?x23433) ?x23435) ?x23437) ?x23439) ?x23441) ?x23443) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23481 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23478 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23475 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23472 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23469 (* ?x23222 l_0_11_70)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23467 (* ?x23219 l_0_11_69)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23465 (* ?x23216 l_0_11_68)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23463 (* ?x23213 l_0_11_67)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23461 (* ?x23362 l_0_11_40)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23459 (* ?x23359 l_0_11_39)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x7629 (* ?x23342 l_0_11_152)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x7622 (* ?x7546 l_0_11_151)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x7616 (* ?x7613 l_0_11_3)))
 (let ((?x23460 (+ (+ (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x7616) ?x7622) ?x7629) ?x23459)))
 (let ((?x23476 (+ (+ (- (- (- (- (+ ?x23460 ?x23461) ?x23463) ?x23465) ?x23467) ?x23469) ?x23472) ?x23475)))
 (= (+ (+ ?x23476 ?x23478) ?x23481) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23551 (* ?x23222 l_0_11_75)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23549 (* ?x23219 l_0_11_74)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23547 (* ?x23216 l_0_11_73)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23545 (* ?x23213 l_0_11_72)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23543 (* ?x23362 l_0_11_45)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23541 (* ?x23359 l_0_11_44)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23539 (* ?x23538 l_0_11_3)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23536 (* ?x23535 l_0_11_2)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23533 (* ?x23342 l_0_11_157)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23531 (* ?x7546 l_0_11_156)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x23529 (* ?x23528 l_0_11_94)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x23526 (* ?x23525 l_0_11_93)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x23523 (* ?x23522 l_0_11_92)))
 (let ((?x23530 (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_91) ?x23523) ?x23526) ?x23529)))
 (let ((?x23546 (- (+ (+ (- (- (+ (+ ?x23530 ?x23531) ?x23533) ?x23536) ?x23539) ?x23541) ?x23543) ?x23545)))
 (= (- (- (- ?x23546 ?x23547) ?x23549) ?x23551) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23223 (* ?x23222 l_0_11_81)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23220 (* ?x23219 l_0_11_80)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23217 (* ?x23216 l_0_11_79)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23214 (* ?x23213 l_0_11_78)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23610 (* ?x23362 l_0_11_51)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23608 (* ?x23359 l_0_11_50)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23606 (* ?x23084 l_0_11_3)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23604 (* ?x23353 l_0_11_22)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23602 (* ?x23342 l_0_11_163)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23600 (* ?x7546 l_0_11_162)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x23171 (* ?x23170 l_0_11_94)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x23168 (* ?x23167 l_0_11_93)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x23165 (* ?x23164 l_0_11_92)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x23157 (* ?x23155 l_0_11_91)))
 (let ((?x23607 (- (- (+ (+ (+ (+ (+ ?x23157 ?x23165) ?x23168) ?x23171) ?x23600) ?x23602) ?x23604) ?x23606)))
 (= (- (- (- (- (+ (+ ?x23607 ?x23608) ?x23610) ?x23214) ?x23217) ?x23220) ?x23223) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x23663 (* l_0_11_6 l_0_11_6)))
 (let ((?x23661 (* l_0_11_5 l_0_11_5)))
 (let ((?x23659 (* l_0_11_4 l_0_11_4)))
 (let ((?x23657 (* l_0_11_34 l_0_11_34)))
 (let ((?x23655 (* l_0_11_33 l_0_11_33)))
 (let ((?x23653 (* l_0_11_32 l_0_11_32)))
 (let ((?x23651 (* l_0_11_146 l_0_11_146)))
 (let ((?x23652 (+ (+ (* l_0_11_144 l_0_11_144) (* l_0_11_145 l_0_11_145)) ?x23651)))
 (= (- (- (- (+ (+ (+ ?x23652 ?x23653) ?x23655) ?x23657) ?x23659) ?x23661) ?x23663) 0.0))))))))))
(assert
 (let ((?x23698 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23695 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23692 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23689 (* ?x23688 l_0_11_37)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23686 (* ?x23685 l_0_11_36)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23683 (* ?x23682 l_0_11_35)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x23680 (* ?x23679 l_0_11_149)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x23677 (* ?x23676 l_0_11_148)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23675 (* ?x23674 l_0_11_147)))
 (let ((?x23696 (- (- (+ (+ (+ (+ (+ ?x23675 ?x23677) ?x23680) ?x23683) ?x23686) ?x23689) ?x23692) ?x23695)))
 (= (- ?x23696 ?x23698) 0.0))))))))))))))))))
(assert
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23747 (* ?x23688 l_0_11_41)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23745 (* ?x23685 l_0_11_40)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23743 (* ?x23682 l_0_11_39)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x23741 (* ?x23679 l_0_11_153)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x23739 (* ?x23676 l_0_11_152)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23737 (* ?x23674 l_0_11_151)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x23735 (* ?x23734 l_0_11_6)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x23732 (* ?x7613 l_0_11_5)))
 (let ((?x23740 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x23732) ?x23735) ?x23737) ?x23739)))
 (= (+ (+ (+ (+ ?x23740 ?x23741) ?x23743) ?x23745) ?x23747) 0.0)))))))))))))))))))
(assert
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23782 (* ?x23688 l_0_11_46)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23780 (* ?x23685 l_0_11_45)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23778 (* ?x23682 l_0_11_44)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x23776 (* ?x23775 l_0_11_6)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23773 (* ?x23538 l_0_11_5)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23762 (* ?x23535 l_0_11_4)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x7795 (* ?x23679 l_0_11_158)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x7788 (* ?x23676 l_0_11_157)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23758 (* ?x23674 l_0_11_156)))
 (let ((?x23781 (+ (+ (- (- (- (+ (+ ?x23758 ?x7788) ?x7795) ?x23762) ?x23773) ?x23776) ?x23778) ?x23780)))
 (= (+ ?x23781 ?x23782) 0.0)))))))))))))))))))))
(assert
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23813 (* ?x23688 l_0_11_52)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23811 (* ?x23685 l_0_11_51)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23809 (* ?x23682 l_0_11_50)))
 (let ((?x23087 (* 2.0 l_0_11_24)))
 (let ((?x23807 (* ?x23087 l_0_11_6)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23805 (* ?x23084 l_0_11_5)))
 (let ((?x23081 (* 2.0 l_0_11_22)))
 (let ((?x23803 (* ?x23081 l_0_11_4)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x7807 (* ?x23679 l_0_11_164)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x7808 (* ?x23676 l_0_11_163)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x7806 (* ?x23674 l_0_11_162)))
 (let ((?x23812 (+ (+ (- (- (- (+ (+ ?x7806 ?x7808) ?x7807) ?x23803) ?x23805) ?x23807) ?x23809) ?x23811)))
 (= (+ ?x23812 ?x23813) 0.0)))))))))))))))))))))
(assert
 (let ((?x23865 (* l_0_11_9 l_0_11_9)))
 (let ((?x23863 (* l_0_11_8 l_0_11_8)))
 (let ((?x23861 (* l_0_11_7 l_0_11_7)))
 (let ((?x23859 (* l_0_11_38 l_0_11_38)))
 (let ((?x23857 (* l_0_11_37 l_0_11_37)))
 (let ((?x23855 (* l_0_11_36 l_0_11_36)))
 (let ((?x23853 (* l_0_11_35 l_0_11_35)))
 (let ((?x23851 (* l_0_11_150 l_0_11_150)))
 (let ((?x23849 (* l_0_11_149 l_0_11_149)))
 (let ((?x23847 (* l_0_11_148 l_0_11_148)))
 (let ((?x23848 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_147 l_0_11_147)) ?x23847)))
 (let ((?x23862 (- (+ (+ (+ (+ (+ (+ ?x23848 ?x23849) ?x23851) ?x23853) ?x23855) ?x23857) ?x23859) ?x23861)))
 (= (- (- ?x23862 ?x23863) ?x23865) 0.0))))))))))))))
(assert
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23903 (* ?x23101 l_0_11_42)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23901 (* ?x23098 l_0_11_41)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23899 (* ?x23095 l_0_11_40)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23897 (* ?x23092 l_0_11_39)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23895 (* ?x23196 l_0_11_154)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23893 (* ?x23193 l_0_11_153)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x23891 (* ?x23190 l_0_11_152)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23889 (* ?x23187 l_0_11_151)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x23887 (* ?x23734 l_0_11_9)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x23885 (* ?x7613 l_0_11_8)))
 (let ((?x23882 (* 2.0 l_0_11_11)))
 (let ((?x23883 (* ?x23882 l_0_11_7)))
 (let ((?x23890 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x23883) ?x23885) ?x23887) ?x23889)))
 (let ((?x23904 (+ (+ (+ (+ (+ (+ (+ ?x23890 ?x23891) ?x23893) ?x23895) ?x23897) ?x23899) ?x23901) ?x23903)))
 (= ?x23904 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23948 (* ?x23101 l_0_11_47)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23946 (* ?x23098 l_0_11_46)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23944 (* ?x23095 l_0_11_45)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23942 (* ?x23092 l_0_11_44)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x23940 (* ?x23775 l_0_11_9)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23938 (* ?x23538 l_0_11_8)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23936 (* ?x23535 l_0_11_7)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23923 (* ?x23196 l_0_11_159)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23919 (* ?x23193 l_0_11_158)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x7868 (* ?x23190 l_0_11_157)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23917 (* ?x23187 l_0_11_156)))
 (let ((?x23924 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x23917) ?x7868) ?x23919) ?x23923)))
 (let ((?x23949 (+ (+ (+ (+ (- (- (- ?x23924 ?x23936) ?x23938) ?x23940) ?x23942) ?x23944) ?x23946) ?x23948)))
 (= ?x23949 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23102 (* ?x23101 l_0_11_53)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23099 (* ?x23098 l_0_11_52)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23096 (* ?x23095 l_0_11_51)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23093 (* ?x23092 l_0_11_50)))
 (let ((?x23087 (* 2.0 l_0_11_24)))
 (let ((?x23088 (* ?x23087 l_0_11_9)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23085 (* ?x23084 l_0_11_8)))
 (let ((?x23081 (* 2.0 l_0_11_22)))
 (let ((?x23082 (* ?x23081 l_0_11_7)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23197 (* ?x23196 l_0_11_165)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23194 (* ?x23193 l_0_11_164)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x23191 (* ?x23190 l_0_11_163)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23188 (* ?x23187 l_0_11_162)))
 (let ((?x23980 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_10) l_0_11_25) ?x23188) ?x23191) ?x23194) ?x23197)))
 (let ((?x23998 (+ (+ (+ (+ (- (- (- ?x23980 ?x23082) ?x23085) ?x23088) ?x23093) ?x23096) ?x23099) ?x23102)))
 (= ?x23998 0.0))))))))))))))))))))))))))
(assert
 (let ((?x24029 (* l_0_11_43 l_0_11_43)))
 (let ((?x24027 (* l_0_11_42 l_0_11_42)))
 (let ((?x24025 (* l_0_11_41 l_0_11_41)))
 (let ((?x24023 (* l_0_11_40 l_0_11_40)))
 (let ((?x24021 (* l_0_11_39 l_0_11_39)))
 (let ((?x24019 (* l_0_11_155 l_0_11_155)))
 (let ((?x24017 (* l_0_11_154 l_0_11_154)))
 (let ((?x24015 (* l_0_11_153 l_0_11_153)))
 (let ((?x24013 (* l_0_11_152 l_0_11_152)))
 (let ((?x24011 (* l_0_11_151 l_0_11_151)))
 (let ((?x24009 (* l_0_11_15 l_0_11_15)))
 (let ((?x24007 (* l_0_11_14 l_0_11_14)))
 (let ((?x24005 (* l_0_11_13 l_0_11_13)))
 (let ((?x24006 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x24005)))
 (let ((?x24020 (+ (+ (+ (+ (+ (- (- ?x24006 ?x24007) ?x24009) ?x24011) ?x24013) ?x24015) ?x24017) ?x24019)))
 (= (+ (+ (+ (+ (+ ?x24020 ?x24021) ?x24023) ?x24025) ?x24027) ?x24029) 0.0)))))))))))))))))
(assert
 (let ((?x24089 (* 2.0 l_0_11_43)))
 (let ((?x24090 (* ?x24089 l_0_11_48)))
 (let ((?x24086 (* 2.0 l_0_11_42)))
 (let ((?x24087 (* ?x24086 l_0_11_47)))
 (let ((?x24083 (* 2.0 l_0_11_41)))
 (let ((?x24084 (* ?x24083 l_0_11_46)))
 (let ((?x24080 (* 2.0 l_0_11_40)))
 (let ((?x24081 (* ?x24080 l_0_11_45)))
 (let ((?x24077 (* 2.0 l_0_11_39)))
 (let ((?x24078 (* ?x24077 l_0_11_44)))
 (let ((?x24074 (* 2.0 l_0_11_155)))
 (let ((?x24075 (* ?x24074 l_0_11_160)))
 (let ((?x24071 (* 2.0 l_0_11_154)))
 (let ((?x24072 (* ?x24071 l_0_11_159)))
 (let ((?x24068 (* 2.0 l_0_11_153)))
 (let ((?x24069 (* ?x24068 l_0_11_158)))
 (let ((?x24065 (* 2.0 l_0_11_152)))
 (let ((?x24066 (* ?x24065 l_0_11_157)))
 (let ((?x24062 (* 2.0 l_0_11_151)))
 (let ((?x24063 (* ?x24062 l_0_11_156)))
 (let ((?x24059 (* 2.0 l_0_11_15)))
 (let ((?x24060 (* ?x24059 l_0_11_20)))
 (let ((?x24056 (* 2.0 l_0_11_14)))
 (let ((?x24057 (* ?x24056 l_0_11_19)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x24054 (* ?x23734 l_0_11_18)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x24052 (* ?x7613 l_0_11_17)))
 (let ((?x24061 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_16) ?x24052) ?x24054) ?x24057) ?x24060)))
 (let ((?x24082 (+ (+ (+ (+ (+ (+ (+ ?x24061 ?x24063) ?x24066) ?x24069) ?x24072) ?x24075) ?x24078) ?x24081)))
 (= (+ (+ (+ ?x24082 ?x24084) ?x24087) ?x24090) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x24089 (* 2.0 l_0_11_43)))
 (let ((?x24157 (* ?x24089 l_0_11_54)))
 (let ((?x24086 (* 2.0 l_0_11_42)))
 (let ((?x24155 (* ?x24086 l_0_11_53)))
 (let ((?x24083 (* 2.0 l_0_11_41)))
 (let ((?x24153 (* ?x24083 l_0_11_52)))
 (let ((?x24080 (* 2.0 l_0_11_40)))
 (let ((?x24151 (* ?x24080 l_0_11_51)))
 (let ((?x24077 (* 2.0 l_0_11_39)))
 (let ((?x24149 (* ?x24077 l_0_11_50)))
 (let ((?x24074 (* 2.0 l_0_11_155)))
 (let ((?x24147 (* ?x24074 l_0_11_166)))
 (let ((?x24071 (* 2.0 l_0_11_154)))
 (let ((?x24145 (* ?x24071 l_0_11_165)))
 (let ((?x24068 (* 2.0 l_0_11_153)))
 (let ((?x24143 (* ?x24068 l_0_11_164)))
 (let ((?x24065 (* 2.0 l_0_11_152)))
 (let ((?x24141 (* ?x24065 l_0_11_163)))
 (let ((?x24062 (* 2.0 l_0_11_151)))
 (let ((?x24126 (* ?x24062 l_0_11_162)))
 (let ((?x24059 (* 2.0 l_0_11_15)))
 (let ((?x24122 (* ?x24059 l_0_11_26)))
 (let ((?x24056 (* 2.0 l_0_11_14)))
 (let ((?x24118 (* ?x24056 l_0_11_25)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x24114 (* ?x23734 l_0_11_24)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x24110 (* ?x7613 l_0_11_23)))
 (let ((?x24124 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_22) ?x24110) ?x24114) ?x24118) ?x24122)))
 (let ((?x24152 (+ (+ (+ (+ (+ (+ (+ ?x24124 ?x24126) ?x24141) ?x24143) ?x24145) ?x24147) ?x24149) ?x24151)))
 (= (+ (+ (+ ?x24152 ?x24153) ?x24155) ?x24157) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x24220 (* l_0_11_49 l_0_11_49)))
 (let ((?x24218 (* l_0_11_48 l_0_11_48)))
 (let ((?x24216 (* l_0_11_47 l_0_11_47)))
 (let ((?x24214 (* l_0_11_46 l_0_11_46)))
 (let ((?x24212 (* l_0_11_45 l_0_11_45)))
 (let ((?x24210 (* l_0_11_44 l_0_11_44)))
 (let ((?x24208 (* l_0_11_21 l_0_11_21)))
 (let ((?x24206 (* l_0_11_20 l_0_11_20)))
 (let ((?x24204 (* l_0_11_19 l_0_11_19)))
 (let ((?x24202 (* l_0_11_18 l_0_11_18)))
 (let ((?x24200 (* l_0_11_17 l_0_11_17)))
 (let ((?x24198 (* l_0_11_161 l_0_11_161)))
 (let ((?x24183 (* l_0_11_160 l_0_11_160)))
 (let ((?x24179 (* l_0_11_16 l_0_11_16)))
 (let ((?x24173 (* l_0_11_159 l_0_11_159)))
 (let ((?x8026 (* l_0_11_158 l_0_11_158)))
 (let ((?x8028 (+ (+ (* l_0_11_156 l_0_11_156) (* l_0_11_157 l_0_11_157)) ?x8026)))
 (let ((?x24205 (- (- (- (+ (+ (- (+ ?x8028 ?x24173) ?x24179) ?x24183) ?x24198) ?x24200) ?x24202) ?x24204)))
 (let ((?x24219 (+ (+ (+ (+ (+ (- (- ?x24205 ?x24206) ?x24208) ?x24210) ?x24212) ?x24214) ?x24216) ?x24218)))
 (= (+ ?x24219 ?x24220) 0.0)))))))))))))))))))))
(assert
 (let ((?x24284 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24281 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24278 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24275 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24272 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24269 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24266 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24263 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24260 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x24257 (* ?x23775 l_0_11_24)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x24255 (* ?x23538 l_0_11_23)))
 (let ((?x24253 (* (* 2.0 l_0_11_161) l_0_11_167)))
 (let ((?x24250 (* (* 2.0 l_0_11_160) l_0_11_166)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x24247 (* ?x23535 l_0_11_22)))
 (let ((?x24245 (* (* 2.0 l_0_11_159) l_0_11_165)))
 (let ((?x24242 (* (* 2.0 l_0_11_158) l_0_11_164)))
 (let ((?x24239 (* (* 2.0 l_0_11_157) l_0_11_163)))
 (let ((?x24237 (* (* 2.0 l_0_11_156) l_0_11_162)))
 (let ((?x24256 (- (+ (+ (- (+ (+ (+ ?x24237 ?x24239) ?x24242) ?x24245) ?x24247) ?x24250) ?x24253) ?x24255)))
 (let ((?x24276 (+ (+ (+ (- (- (- (- ?x24256 ?x24257) ?x24260) ?x24263) ?x24266) ?x24269) ?x24272) ?x24275)))
 (= (+ (+ (+ ?x24276 ?x24278) ?x24281) ?x24284) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x24384 (* l_0_11_56 l_0_11_56)))
 (let ((?x24382 (* l_0_11_55 l_0_11_55)))
 (let ((?x24380 (* l_0_11_54 l_0_11_54)))
 (let ((?x24378 (* l_0_11_53 l_0_11_53)))
 (let ((?x24376 (* l_0_11_52 l_0_11_52)))
 (let ((?x24374 (* l_0_11_51 l_0_11_51)))
 (let ((?x24372 (* l_0_11_50 l_0_11_50)))
 (let ((?x24370 (* l_0_11_28 l_0_11_28)))
 (let ((?x24368 (* l_0_11_27 l_0_11_27)))
 (let ((?x24366 (* l_0_11_26 l_0_11_26)))
 (let ((?x24364 (* l_0_11_25 l_0_11_25)))
 (let ((?x24362 (* l_0_11_24 l_0_11_24)))
 (let ((?x24360 (* l_0_11_23 l_0_11_23)))
 (let ((?x24358 (* l_0_11_22 l_0_11_22)))
 (let ((?x24356 (* l_0_11_168 l_0_11_168)))
 (let ((?x24354 (* l_0_11_167 l_0_11_167)))
 (let ((?x24352 (* l_0_11_166 l_0_11_166)))
 (let ((?x24336 (* l_0_11_165 l_0_11_165)))
 (let ((?x24332 (* l_0_11_164 l_0_11_164)))
 (let ((?x24334 (+ (+ (* l_0_11_162 l_0_11_162) (* l_0_11_163 l_0_11_163)) ?x24332)))
 (let ((?x24363 (- (- (- (+ (+ (+ (+ ?x24334 ?x24336) ?x24352) ?x24354) ?x24356) ?x24358) ?x24360) ?x24362)))
 (let ((?x24377 (+ (+ (+ (- (- (- (- ?x24363 ?x24364) ?x24366) ?x24368) ?x24370) ?x24372) ?x24374) ?x24376)))
 (= (+ (+ (+ (+ ?x24377 ?x24378) ?x24380) ?x24382) ?x24384) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23043 (* ?x23042 l_0_11_30)))
 (let ((?x24410 (- (* (* 2.0 l_0_11_1) l_0_11_2) (* (* 4.0 l_0_11_169) l_0_11_170))))
 (let ((?x24414 (- (- ?x24410 (* (* 2.0 l_0_11_198) l_0_11_200)) (* (* 2.0 l_0_11_199) l_0_11_201))))
 (let ((?x24418 (- (- ?x24414 (* (* 2.0 l_0_11_226) l_0_11_228)) (* (* 2.0 l_0_11_227) l_0_11_229))))
 (= (- ?x24418 ?x23043) 0.0)))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23090 (* ?x23042 l_0_11_32)))
 (let ((?x24443 (* l_0_11_230 l_0_11_230)))
 (let ((?x24441 (* l_0_11_229 l_0_11_229)))
 (let ((?x24439 (* l_0_11_228 l_0_11_228)))
 (let ((?x24437 (* l_0_11_202 l_0_11_202)))
 (let ((?x24435 (* l_0_11_201 l_0_11_201)))
 (let ((?x8167 (* l_0_11_200 l_0_11_200)))
 (let ((?x8166 (- (* (* 2.0 l_0_11_1) l_0_11_4) (* (* 4.0 l_0_11_169) l_0_11_172))))
 (let ((?x24445 (- (- (- (- (- (- (- ?x8166 ?x8167) ?x24435) ?x24437) ?x24439) ?x24441) ?x24443) ?x23090)))
 (= ?x24445 0.0))))))))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23149 (* ?x23042 l_0_11_35)))
 (let ((?x8280 (- (* (* 2.0 l_0_11_1) l_0_11_7) (* (* 4.0 l_0_11_169) l_0_11_175))))
 (let ((?x24455 (- (- ?x8280 (* (* 2.0 l_0_11_200) l_0_11_203)) (* (* 2.0 l_0_11_201) l_0_11_204))))
 (let ((?x24461 (- (- ?x24455 (* (* 2.0 l_0_11_202) l_0_11_205)) (* (* 2.0 l_0_11_228) l_0_11_231))))
 (let ((?x24467 (- (- ?x24461 (* (* 2.0 l_0_11_229) l_0_11_232)) (* (* 2.0 l_0_11_230) l_0_11_233))))
 (= (- ?x24467 ?x23149) 0.0))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x24516 (* ?x23048 l_0_11_88)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x24514 (* ?x23045 l_0_11_60)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23211 (* ?x23042 l_0_11_39)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23067 (* ?x23039 l_0_11_144)))
 (let ((?x24495 (- (* (* 2.0 l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_113) l_0_11_116))))
 (let ((?x24500 (- (+ (- ?x24495 ?x23067) (* (* 2.0 l_0_11_169) l_0_11_172)) (* (* 4.0 l_0_11_169) l_0_11_179))))
 (let ((?x24504 (- (- ?x24500 (* (* 2.0 l_0_11_200) l_0_11_207)) (* (* 2.0 l_0_11_201) l_0_11_208))))
 (let ((?x24508 (- (- ?x24504 (* (* 2.0 l_0_11_202) l_0_11_209)) (* (* 2.0 l_0_11_228) l_0_11_235))))
 (let ((?x24512 (- (- ?x24508 (* (* 2.0 l_0_11_229) l_0_11_236)) (* (* 2.0 l_0_11_230) l_0_11_237))))
 (= (+ (- (- ?x24512 ?x23211) ?x24514) ?x24516) 0.0)))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x24516 (* ?x23048 l_0_11_88)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x24514 (* ?x23045 l_0_11_60)))
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x23286 (* ?x23042 l_0_11_44)))
 (let ((?x24534 (- (* (* 2.0 l_0_11_1) l_0_11_16) (* (* 4.0 l_0_11_169) l_0_11_184))))
 (let ((?x24538 (- (- ?x24534 (* (* 2.0 l_0_11_200) l_0_11_212)) (* (* 2.0 l_0_11_201) l_0_11_213))))
 (let ((?x24542 (- (- ?x24538 (* (* 2.0 l_0_11_202) l_0_11_214)) (* (* 2.0 l_0_11_228) l_0_11_240))))
 (let ((?x24546 (- (- ?x24542 (* (* 2.0 l_0_11_229) l_0_11_241)) (* (* 2.0 l_0_11_230) l_0_11_242))))
 (= (- (+ (- ?x24546 ?x23286) ?x24514) ?x24516) 0.0))))))))))))
(assert
 (let ((?x23042 (* 2.0 l_0_11_29)))
 (let ((?x6808 (* ?x23042 l_0_11_50)))
 (let ((?x24591 (- (* (* 2.0 l_0_11_1) l_0_11_22) (* (* 4.0 l_0_11_169) l_0_11_190))))
 (let ((?x24595 (- (- ?x24591 (* (* 2.0 l_0_11_200) l_0_11_218)) (* (* 2.0 l_0_11_201) l_0_11_219))))
 (let ((?x24599 (- (- ?x24595 (* (* 2.0 l_0_11_202) l_0_11_220)) (* (* 2.0 l_0_11_228) l_0_11_246))))
 (let ((?x24603 (- (- ?x24599 (* (* 2.0 l_0_11_229) l_0_11_247)) (* (* 2.0 l_0_11_230) l_0_11_248))))
 (= (- ?x24603 ?x6808) 0.0))))))))
(assert
 (let ((?x23315 (* l_0_11_31 l_0_11_31)))
 (let ((?x23313 (* l_0_11_30 l_0_11_30)))
 (let ((?x23311 (* l_0_11_3 l_0_11_3)))
 (let ((?x23304 (* l_0_11_2 l_0_11_2)))
 (let ((?x8894 (- (* (* (- 2.0) l_0_11_170) l_0_11_170) (* (* 2.0 l_0_11_171) l_0_11_171))))
 (= (- (- (+ (+ ?x8894 ?x23304) ?x23311) ?x23313) ?x23315) 0.0)))))))
(assert
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23363 (* ?x23362 l_0_11_33)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23360 (* ?x23359 l_0_11_32)))
 (let ((?x23356 (* 2.0 l_0_11_3)))
 (let ((?x23357 (* ?x23356 l_0_11_5)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23354 (* ?x23353 l_0_11_4)))
 (let ((?x8927 (- (* (* (- 4.0) l_0_11_170) l_0_11_172) (* (* 4.0 l_0_11_171) l_0_11_173))))
 (= (- (- (+ (+ ?x8927 ?x23354) ?x23357) ?x23360) ?x23363) 0.0)))))))))))
(assert
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23427 (* ?x23362 l_0_11_36)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23425 (* ?x23359 l_0_11_35)))
 (let ((?x23356 (* 2.0 l_0_11_3)))
 (let ((?x23423 (* ?x23356 l_0_11_8)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23412 (* ?x23353 l_0_11_7)))
 (let ((?x8945 (- (* (* (- 4.0) l_0_11_170) l_0_11_175) (* (* 4.0 l_0_11_171) l_0_11_176))))
 (= (- (- (+ (+ ?x8945 ?x23412) ?x23423) ?x23425) ?x23427) 0.0)))))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x24677 (* ?x23326 l_0_11_89)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x24675 (* ?x23323 l_0_11_88)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x24673 (* ?x23320 l_0_11_61)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x24671 (* ?x23317 l_0_11_60)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23461 (* ?x23362 l_0_11_40)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23459 (* ?x23359 l_0_11_39)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23351 (* ?x23342 l_0_11_145)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23341 (* ?x7546 l_0_11_144)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x7616 (* ?x7613 l_0_11_3)))
 (let ((?x24652 (- (* (* 2.0 l_0_11_11) l_0_11_2) (* (* 2.0 l_0_11_114) l_0_11_116))))
 (let ((?x24658 (- (- (+ (- ?x24652 (* (* 2.0 l_0_11_115) l_0_11_117)) ?x7616) ?x23341) ?x23351)))
 (let ((?x24664 (- (+ ?x24658 (* (* 2.0 l_0_11_170) l_0_11_172)) (* (* 4.0 l_0_11_170) l_0_11_179))))
 (let ((?x24668 (- (+ ?x24664 (* (* 2.0 l_0_11_171) l_0_11_173)) (* (* 4.0 l_0_11_171) l_0_11_180))))
 (= (+ (+ (- (- (- (- ?x24668 ?x23459) ?x23461) ?x24671) ?x24673) ?x24675) ?x24677) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x24677 (* ?x23326 l_0_11_89)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x24675 (* ?x23323 l_0_11_88)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x24673 (* ?x23320 l_0_11_61)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x24671 (* ?x23317 l_0_11_60)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23543 (* ?x23362 l_0_11_45)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23541 (* ?x23359 l_0_11_44)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23539 (* ?x23538 l_0_11_3)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23536 (* ?x23535 l_0_11_2)))
 (let ((?x24703 (- (- (+ ?x23536 ?x23539) (* (* 4.0 l_0_11_170) l_0_11_184)) (* (* 4.0 l_0_11_171) l_0_11_185))))
 (= (- (- (+ (+ (- (- ?x24703 ?x23541) ?x23543) ?x24671) ?x24673) ?x24675) ?x24677) 0.0)))))))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x24516 (* ?x23048 l_0_11_88)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x24514 (* ?x23045 l_0_11_60)))
 (let ((?x23362 (* 2.0 l_0_11_31)))
 (let ((?x23610 (* ?x23362 l_0_11_51)))
 (let ((?x23359 (* 2.0 l_0_11_30)))
 (let ((?x23608 (* ?x23359 l_0_11_50)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23606 (* ?x23084 l_0_11_3)))
 (let ((?x23353 (* 2.0 l_0_11_2)))
 (let ((?x23604 (* ?x23353 l_0_11_22)))
 (let ((?x24723 (- (* (* (- 4.0) l_0_11_170) l_0_11_190) (* (* 4.0 l_0_11_171) l_0_11_191))))
 (= (+ (- (- (- (+ (+ ?x24723 ?x23604) ?x23606) ?x23608) ?x23610) ?x24514) ?x24516) 0.0)))))))))))))))
(assert
 (let ((?x23663 (* l_0_11_6 l_0_11_6)))
 (let ((?x23661 (* l_0_11_5 l_0_11_5)))
 (let ((?x23659 (* l_0_11_4 l_0_11_4)))
 (let ((?x23657 (* l_0_11_34 l_0_11_34)))
 (let ((?x23655 (* l_0_11_33 l_0_11_33)))
 (let ((?x23653 (* l_0_11_32 l_0_11_32)))
 (let ((?x9164 (- (* (* (- 2.0) l_0_11_172) l_0_11_172) (* (* 2.0 l_0_11_173) l_0_11_173))))
 (let ((?x24742 (- (- (- (- ?x9164 (* (* 2.0 l_0_11_174) l_0_11_174)) ?x23653) ?x23655) ?x23657)))
 (= (+ (+ (+ ?x24742 ?x23659) ?x23661) ?x23663) 0.0))))))))))
(assert
 (let ((?x23698 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23695 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23692 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23689 (* ?x23688 l_0_11_37)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23686 (* ?x23685 l_0_11_36)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23683 (* ?x23682 l_0_11_35)))
 (let ((?x24761 (- (* (* (- 4.0) l_0_11_172) l_0_11_175) (* (* 4.0 l_0_11_173) l_0_11_176))))
 (let ((?x24767 (- (- (- (- ?x24761 (* (* 4.0 l_0_11_174) l_0_11_177)) ?x23683) ?x23686) ?x23689)))
 (= (+ (+ (+ ?x24767 ?x23692) ?x23695) ?x23698) 0.0)))))))))))))
(assert
 (let ((?x24809 (* l_0_11_90 l_0_11_90)))
 (let ((?x24807 (* l_0_11_89 l_0_11_89)))
 (let ((?x24805 (* l_0_11_88 l_0_11_88)))
 (let ((?x24803 (* l_0_11_62 l_0_11_62)))
 (let ((?x24801 (* l_0_11_61 l_0_11_61)))
 (let ((?x24799 (* l_0_11_60 l_0_11_60)))
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23747 (* ?x23688 l_0_11_41)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23745 (* ?x23685 l_0_11_40)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23743 (* ?x23682 l_0_11_39)))
 (let ((?x9187 (* l_0_11_174 l_0_11_174)))
 (let ((?x24749 (* l_0_11_173 l_0_11_173)))
 (let ((?x24747 (* l_0_11_172 l_0_11_172)))
 (let ((?x23651 (* l_0_11_146 l_0_11_146)))
 (let ((?x23649 (* l_0_11_145 l_0_11_145)))
 (let ((?x23648 (* l_0_11_144 l_0_11_144)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x23735 (* ?x23734 l_0_11_6)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x23732 (* ?x7613 l_0_11_5)))
 (let ((?x9246 (* l_0_11_118 l_0_11_118)))
 (let ((?x9249 (* l_0_11_117 l_0_11_117)))
 (let ((?x9245 (- (- (* (* 2.0 l_0_11_11) l_0_11_4) (* l_0_11_116 l_0_11_116)) ?x9249)))
 (let ((?x24788 (- (- (- (- (+ (+ (- ?x9245 ?x9246) ?x23732) ?x23735) ?x23648) ?x23649) ?x23651) (* (* 4.0 l_0_11_172) l_0_11_179))))
 (let ((?x24794 (- (+ (- (+ ?x24788 ?x24747) (* (* 4.0 l_0_11_173) l_0_11_180)) ?x24749) (* (* 4.0 l_0_11_174) l_0_11_181))))
 (let ((?x24804 (- (- (- (- (- (- (+ ?x24794 ?x9187) ?x23743) ?x23745) ?x23747) ?x24799) ?x24801) ?x24803)))
 (= (+ (+ (+ ?x24804 ?x24805) ?x24807) ?x24809) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x24809 (* l_0_11_90 l_0_11_90)))
 (let ((?x24807 (* l_0_11_89 l_0_11_89)))
 (let ((?x24805 (* l_0_11_88 l_0_11_88)))
 (let ((?x24803 (* l_0_11_62 l_0_11_62)))
 (let ((?x24801 (* l_0_11_61 l_0_11_61)))
 (let ((?x24799 (* l_0_11_60 l_0_11_60)))
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23782 (* ?x23688 l_0_11_46)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23780 (* ?x23685 l_0_11_45)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23778 (* ?x23682 l_0_11_44)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x23776 (* ?x23775 l_0_11_6)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23773 (* ?x23538 l_0_11_5)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23762 (* ?x23535 l_0_11_4)))
 (let ((?x24834 (- (- (+ ?x23762 ?x23773) (* (* 4.0 l_0_11_172) l_0_11_184)) (* (* 4.0 l_0_11_173) l_0_11_185))))
 (let ((?x24839 (- (- (+ (- ?x24834 (* (* 4.0 l_0_11_174) l_0_11_186)) ?x23776) ?x23778) ?x23780)))
 (let ((?x24846 (- (- (- (+ (+ (+ (- ?x24839 ?x23782) ?x24799) ?x24801) ?x24803) ?x24805) ?x24807) ?x24809)))
 (= ?x24846 0.0)))))))))))))))))))))))
(assert
 (let ((?x23688 (* 2.0 l_0_11_34)))
 (let ((?x23813 (* ?x23688 l_0_11_52)))
 (let ((?x23685 (* 2.0 l_0_11_33)))
 (let ((?x23811 (* ?x23685 l_0_11_51)))
 (let ((?x23682 (* 2.0 l_0_11_32)))
 (let ((?x23809 (* ?x23682 l_0_11_50)))
 (let ((?x23087 (* 2.0 l_0_11_24)))
 (let ((?x23807 (* ?x23087 l_0_11_6)))
 (let ((?x23084 (* 2.0 l_0_11_23)))
 (let ((?x23805 (* ?x23084 l_0_11_5)))
 (let ((?x23081 (* 2.0 l_0_11_22)))
 (let ((?x23803 (* ?x23081 l_0_11_4)))
 (let ((?x9402 (- (* (* (- 4.0) l_0_11_172) l_0_11_190) (* (* 4.0 l_0_11_173) l_0_11_191))))
 (let ((?x24860 (+ (+ (+ (- ?x9402 (* (* 4.0 l_0_11_174) l_0_11_192)) ?x23803) ?x23805) ?x23807)))
 (= (- (- (- ?x24860 ?x23809) ?x23811) ?x23813) 0.0))))))))))))))))
(assert
 (let ((?x23865 (* l_0_11_9 l_0_11_9)))
 (let ((?x23863 (* l_0_11_8 l_0_11_8)))
 (let ((?x23861 (* l_0_11_7 l_0_11_7)))
 (let ((?x23859 (* l_0_11_38 l_0_11_38)))
 (let ((?x23857 (* l_0_11_37 l_0_11_37)))
 (let ((?x23855 (* l_0_11_36 l_0_11_36)))
 (let ((?x23853 (* l_0_11_35 l_0_11_35)))
 (let ((?x23869 (* l_0_11_10 l_0_11_10)))
 (let ((?x9450 (- (- ?x23869 (* (* 2.0 l_0_11_175) l_0_11_175)) (* (* 2.0 l_0_11_176) l_0_11_176))))
 (let ((?x24877 (- (- ?x9450 (* (* 2.0 l_0_11_177) l_0_11_177)) (* (* 2.0 l_0_11_178) l_0_11_178))))
 (let ((?x24884 (+ (+ (+ (- (- (- (- ?x24877 ?x23853) ?x23855) ?x23857) ?x23859) ?x23861) ?x23863) ?x23865)))
 (= ?x24884 0.0)))))))))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x23381 (* ?x23380 l_0_11_93)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x23378 (* ?x23377 l_0_11_92)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x23375 (* ?x23374 l_0_11_91)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x23372 (* ?x23371 l_0_11_65)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x23369 (* ?x23368 l_0_11_64)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x23366 (* ?x23365 l_0_11_63)))
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23903 (* ?x23101 l_0_11_42)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23901 (* ?x23098 l_0_11_41)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23899 (* ?x23095 l_0_11_40)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23897 (* ?x23092 l_0_11_39)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x23680 (* ?x23679 l_0_11_149)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x23677 (* ?x23676 l_0_11_148)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23675 (* ?x23674 l_0_11_147)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x23887 (* ?x23734 l_0_11_9)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x23885 (* ?x7613 l_0_11_8)))
 (let ((?x23882 (* 2.0 l_0_11_11)))
 (let ((?x23883 (* ?x23882 l_0_11_7)))
 (let ((?x9523 (- (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23883) (* (* 2.0 l_0_11_116) l_0_11_119))))
 (let ((?x9540 (- (- ?x9523 (* (* 2.0 l_0_11_117) l_0_11_120)) (* (* 2.0 l_0_11_118) l_0_11_121))))
 (let ((?x24893 (+ (- (- (- (+ (+ ?x9540 ?x23885) ?x23887) ?x23675) ?x23677) ?x23680) (* (* 2.0 l_0_11_172) l_0_11_175))))
 (let ((?x24897 (+ (+ ?x24893 (* (* 2.0 l_0_11_173) l_0_11_176)) (* (* 2.0 l_0_11_174) l_0_11_177))))
 (let ((?x24901 (- (- ?x24897 (* (* 4.0 l_0_11_175) l_0_11_179)) (* (* 4.0 l_0_11_176) l_0_11_180))))
 (let ((?x24905 (- (- ?x24901 (* (* 4.0 l_0_11_177) l_0_11_181)) (* (* 4.0 l_0_11_178) l_0_11_182))))
 (let ((?x24912 (- (- (- (- (- (- (- ?x24905 ?x23897) ?x23899) ?x23901) ?x23903) ?x23366) ?x23369) ?x23372)))
 (= (+ (+ (+ ?x24912 ?x23375) ?x23378) ?x23381) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x23381 (* ?x23380 l_0_11_93)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x23378 (* ?x23377 l_0_11_92)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x23375 (* ?x23374 l_0_11_91)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x23372 (* ?x23371 l_0_11_65)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x23369 (* ?x23368 l_0_11_64)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x23366 (* ?x23365 l_0_11_63)))
 (let ((?x23101 (* 2.0 l_0_11_38)))
 (let ((?x23948 (* ?x23101 l_0_11_47)))
 (let ((?x23098 (* 2.0 l_0_11_37)))
 (let ((?x23946 (* ?x23098 l_0_11_46)))
 (let ((?x23095 (* 2.0 l_0_11_36)))
 (let ((?x23944 (* ?x23095 l_0_11_45)))
 (let ((?x23092 (* 2.0 l_0_11_35)))
 (let ((?x23942 (* ?x23092 l_0_11_44)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x23940 (* ?x23775 l_0_11_9)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x23938 (* ?x23538 l_0_11_8)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x23936 (* ?x23535 l_0_11_7)))
 (let ((?x9716 (- (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x23936) ?x23938) (* (* 4.0 l_0_11_175) l_0_11_184))))
 (let ((?x9712 (- (- ?x9716 (* (* 4.0 l_0_11_176) l_0_11_185)) (* (* 4.0 l_0_11_177) l_0_11_186))))
 (let ((?x24933 (- (- (+ (- ?x9712 (* (* 4.0 l_0_11_178) l_0_11_187)) ?x23940) ?x23942) ?x23944)))
 (let ((?x24940 (- (- (+ (+ (+ (- (- ?x24933 ?x23946) ?x23948) ?x23366) ?x23369) ?x23372) ?x23375) ?x23378)))
 (= (- ?x24940 ?x23381) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x25013 (* ?x23380 l_0_11_97)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x25011 (* ?x23377 l_0_11_96)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x25009 (* ?x23374 l_0_11_95)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25007 (* ?x23371 l_0_11_69)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25005 (* ?x23368 l_0_11_68)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25003 (* ?x23365 l_0_11_67)))
 (let ((?x24029 (* l_0_11_43 l_0_11_43)))
 (let ((?x24027 (* l_0_11_42 l_0_11_42)))
 (let ((?x24025 (* l_0_11_41 l_0_11_41)))
 (let ((?x24023 (* l_0_11_40 l_0_11_40)))
 (let ((?x24021 (* l_0_11_39 l_0_11_39)))
 (let ((?x24009 (* l_0_11_15 l_0_11_15)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x23741 (* ?x23679 l_0_11_153)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x23739 (* ?x23676 l_0_11_152)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23737 (* ?x23674 l_0_11_151)))
 (let ((?x24007 (* l_0_11_14 l_0_11_14)))
 (let ((?x24005 (* l_0_11_13 l_0_11_13)))
 (let ((?x7910 (* l_0_11_12 l_0_11_12)))
 (let ((?x24033 (* l_0_11_11 l_0_11_11)))
 (let ((?x24967 (- (- ?x24033 (* (* 2.0 l_0_11_116) l_0_11_123)) (* (* 2.0 l_0_11_117) l_0_11_124))))
 (let ((?x24972 (+ (+ (+ (- ?x24967 (* (* 2.0 l_0_11_118) l_0_11_125)) ?x7910) ?x24005) ?x24007)))
 (let ((?x24978 (+ (+ (- (- (- ?x24972 ?x23737) ?x23739) ?x23741) ?x24009) (* (* 2.0 l_0_11_172) l_0_11_179))))
 (let ((?x24982 (+ (+ ?x24978 (* (* 2.0 l_0_11_173) l_0_11_180)) (* (* 2.0 l_0_11_174) l_0_11_181))))
 (let ((?x24988 (- (- ?x24982 (* (* 2.0 l_0_11_179) l_0_11_179)) (* (* 2.0 l_0_11_180) l_0_11_180))))
 (let ((?x24994 (- (- ?x24988 (* (* 2.0 l_0_11_181) l_0_11_181)) (* (* 2.0 l_0_11_182) l_0_11_182))))
 (let ((?x25000 (- (- (- (- ?x24994 (* (* 2.0 l_0_11_183) l_0_11_183)) ?x24021) ?x24023) ?x24025)))
 (let ((?x25012 (+ (+ (- (- (- (- (- ?x25000 ?x24027) ?x24029) ?x25003) ?x25005) ?x25007) ?x25009) ?x25011)))
 (= (+ ?x25012 ?x25013) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x25013 (* ?x23380 l_0_11_97)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x25011 (* ?x23377 l_0_11_96)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x25009 (* ?x23374 l_0_11_95)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25098 (* ?x23371 l_0_11_74)))
 (let ((?x25007 (* ?x23371 l_0_11_69)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25095 (* ?x23368 l_0_11_73)))
 (let ((?x25005 (* ?x23368 l_0_11_68)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25092 (* ?x23365 l_0_11_72)))
 (let ((?x25003 (* ?x23365 l_0_11_67)))
 (let ((?x24089 (* 2.0 l_0_11_43)))
 (let ((?x24090 (* ?x24089 l_0_11_48)))
 (let ((?x24086 (* 2.0 l_0_11_42)))
 (let ((?x24087 (* ?x24086 l_0_11_47)))
 (let ((?x24083 (* 2.0 l_0_11_41)))
 (let ((?x24084 (* ?x24083 l_0_11_46)))
 (let ((?x24080 (* 2.0 l_0_11_40)))
 (let ((?x24081 (* ?x24080 l_0_11_45)))
 (let ((?x24077 (* 2.0 l_0_11_39)))
 (let ((?x24078 (* ?x24077 l_0_11_44)))
 (let ((?x24059 (* 2.0 l_0_11_15)))
 (let ((?x24060 (* ?x24059 l_0_11_20)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x7795 (* ?x23679 l_0_11_158)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x7788 (* ?x23676 l_0_11_157)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x23758 (* ?x23674 l_0_11_156)))
 (let ((?x24056 (* 2.0 l_0_11_14)))
 (let ((?x24057 (* ?x24056 l_0_11_19)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x24054 (* ?x23734 l_0_11_18)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x24052 (* ?x7613 l_0_11_17)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25040 (* ?x23525 l_0_11_90)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x9986 (* ?x23522 l_0_11_89)))
 (let ((?x25049 (+ (+ (* (* 2.0 l_0_11_100) l_0_11_88) ?x9986) ?x25040)))
 (let ((?x25053 (- (+ ?x25049 (* (* 2.0 l_0_11_11) l_0_11_16)) (* (* 2.0 l_0_11_116) l_0_11_128))))
 (let ((?x25057 (- (- ?x25053 (* (* 2.0 l_0_11_117) l_0_11_129)) (* (* 2.0 l_0_11_118) l_0_11_130))))
 (let ((?x25064 (+ (- (- (- (+ (+ (+ ?x25057 ?x24052) ?x24054) ?x24057) ?x23758) ?x7788) ?x7795) ?x24060)))
 (let ((?x25068 (+ (+ ?x25064 (* (* 2.0 l_0_11_172) l_0_11_184)) (* (* 2.0 l_0_11_173) l_0_11_185))))
 (let ((?x25073 (- (+ ?x25068 (* (* 2.0 l_0_11_174) l_0_11_186)) (* (* 4.0 l_0_11_179) l_0_11_184))))
 (let ((?x25079 (- (- ?x25073 (* (* 4.0 l_0_11_180) l_0_11_185)) (* (* 4.0 l_0_11_181) l_0_11_186))))
 (let ((?x25085 (- (- ?x25079 (* (* 4.0 l_0_11_182) l_0_11_187)) (* (* 4.0 l_0_11_183) l_0_11_188))))
 (let ((?x25093 (- (+ (- (- (- (- (- ?x25085 ?x24078) ?x24081) ?x24084) ?x24087) ?x24090) ?x25003) ?x25092)))
 (let ((?x25102 (- (- (- (- (+ (- (+ ?x25093 ?x25005) ?x25095) ?x25007) ?x25098) ?x25009) ?x25011) ?x25013)))
 (= ?x25102 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25200 (* ?x23371 l_0_11_80)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25198 (* ?x23368 l_0_11_79)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25196 (* ?x23365 l_0_11_78)))
 (let ((?x24089 (* 2.0 l_0_11_43)))
 (let ((?x24157 (* ?x24089 l_0_11_54)))
 (let ((?x24086 (* 2.0 l_0_11_42)))
 (let ((?x24155 (* ?x24086 l_0_11_53)))
 (let ((?x24083 (* 2.0 l_0_11_41)))
 (let ((?x24153 (* ?x24083 l_0_11_52)))
 (let ((?x24080 (* 2.0 l_0_11_40)))
 (let ((?x24151 (* ?x24080 l_0_11_51)))
 (let ((?x24077 (* 2.0 l_0_11_39)))
 (let ((?x24149 (* ?x24077 l_0_11_50)))
 (let ((?x24059 (* 2.0 l_0_11_15)))
 (let ((?x24122 (* ?x24059 l_0_11_26)))
 (let ((?x23679 (* 2.0 l_0_11_146)))
 (let ((?x7807 (* ?x23679 l_0_11_164)))
 (let ((?x23676 (* 2.0 l_0_11_145)))
 (let ((?x7808 (* ?x23676 l_0_11_163)))
 (let ((?x23674 (* 2.0 l_0_11_144)))
 (let ((?x7806 (* ?x23674 l_0_11_162)))
 (let ((?x24056 (* 2.0 l_0_11_14)))
 (let ((?x24118 (* ?x24056 l_0_11_25)))
 (let ((?x23734 (* 2.0 l_0_11_13)))
 (let ((?x24114 (* ?x23734 l_0_11_24)))
 (let ((?x7613 (* 2.0 l_0_11_12)))
 (let ((?x24110 (* ?x7613 l_0_11_23)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x10190 (* ?x23167 l_0_11_90)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x10183 (* ?x23164 l_0_11_89)))
 (let ((?x10184 (+ (+ (* (* 2.0 l_0_11_106) l_0_11_88) ?x10183) ?x10190)))
 (let ((?x25163 (- (+ ?x10184 (* (* 2.0 l_0_11_11) l_0_11_22)) (* (* 2.0 l_0_11_116) l_0_11_134))))
 (let ((?x25167 (- (- ?x25163 (* (* 2.0 l_0_11_117) l_0_11_135)) (* (* 2.0 l_0_11_118) l_0_11_136))))
 (let ((?x25174 (+ (- (- (- (+ (+ (+ ?x25167 ?x24110) ?x24114) ?x24118) ?x7806) ?x7808) ?x7807) ?x24122)))
 (let ((?x25178 (+ (+ ?x25174 (* (* 2.0 l_0_11_172) l_0_11_190)) (* (* 2.0 l_0_11_173) l_0_11_191))))
 (let ((?x25182 (- (+ ?x25178 (* (* 2.0 l_0_11_174) l_0_11_192)) (* (* 4.0 l_0_11_179) l_0_11_190))))
 (let ((?x25186 (- (- ?x25182 (* (* 4.0 l_0_11_180) l_0_11_191)) (* (* 4.0 l_0_11_181) l_0_11_192))))
 (let ((?x25190 (- (- ?x25186 (* (* 4.0 l_0_11_182) l_0_11_193)) (* (* 4.0 l_0_11_183) l_0_11_194))))
 (let ((?x25199 (- (- (- (- (- (- (- ?x25190 ?x24149) ?x24151) ?x24153) ?x24155) ?x24157) ?x25196) ?x25198)))
 (= (- ?x25199 ?x25200) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25098 (* ?x23371 l_0_11_74)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25095 (* ?x23368 l_0_11_73)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25092 (* ?x23365 l_0_11_72)))
 (let ((?x24220 (* l_0_11_49 l_0_11_49)))
 (let ((?x24218 (* l_0_11_48 l_0_11_48)))
 (let ((?x24216 (* l_0_11_47 l_0_11_47)))
 (let ((?x24214 (* l_0_11_46 l_0_11_46)))
 (let ((?x24212 (* l_0_11_45 l_0_11_45)))
 (let ((?x24210 (* l_0_11_44 l_0_11_44)))
 (let ((?x24208 (* l_0_11_21 l_0_11_21)))
 (let ((?x24206 (* l_0_11_20 l_0_11_20)))
 (let ((?x24204 (* l_0_11_19 l_0_11_19)))
 (let ((?x24202 (* l_0_11_18 l_0_11_18)))
 (let ((?x24200 (* l_0_11_17 l_0_11_17)))
 (let ((?x24179 (* l_0_11_16 l_0_11_16)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25040 (* ?x23525 l_0_11_90)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x9986 (* ?x23522 l_0_11_89)))
 (let ((?x10415 (+ (+ (- (- (* (* (- 2.0) l_0_11_100) l_0_11_88) ?x9986) ?x25040) ?x24179) ?x24200)))
 (let ((?x10392 (- (- (+ ?x10415 ?x24202) (* (* 2.0 l_0_11_184) l_0_11_184)) (* (* 2.0 l_0_11_185) l_0_11_185))))
 (let ((?x25224 (- (- ?x10392 (* (* 2.0 l_0_11_186) l_0_11_186)) (* (* 2.0 l_0_11_187) l_0_11_187))))
 (let ((?x25230 (- (- ?x25224 (* (* 2.0 l_0_11_188) l_0_11_188)) (* (* 2.0 l_0_11_189) l_0_11_189))))
 (let ((?x25237 (- (- (- (- (+ (+ (+ ?x25230 ?x24204) ?x24206) ?x24208) ?x24210) ?x24212) ?x24214) ?x24216)))
 (= (+ (+ (+ (- (- ?x25237 ?x24218) ?x24220) ?x25092) ?x25095) ?x25098) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25200 (* ?x23371 l_0_11_80)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25198 (* ?x23368 l_0_11_79)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25196 (* ?x23365 l_0_11_78)))
 (let ((?x24284 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24281 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24278 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24275 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24272 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24269 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24266 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24263 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24260 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23775 (* 2.0 l_0_11_18)))
 (let ((?x24257 (* ?x23775 l_0_11_24)))
 (let ((?x23538 (* 2.0 l_0_11_17)))
 (let ((?x24255 (* ?x23538 l_0_11_23)))
 (let ((?x23535 (* 2.0 l_0_11_16)))
 (let ((?x24247 (* ?x23535 l_0_11_22)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x10190 (* ?x23167 l_0_11_90)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x10183 (* ?x23164 l_0_11_89)))
 (let ((?x25270 (+ (+ (- (- (* (* (- 2.0) l_0_11_106) l_0_11_88) ?x10183) ?x10190) ?x24247) ?x24255)))
 (let ((?x25277 (- (- (+ ?x25270 ?x24257) (* (* 4.0 l_0_11_184) l_0_11_190)) (* (* 4.0 l_0_11_185) l_0_11_191))))
 (let ((?x25283 (- (- ?x25277 (* (* 4.0 l_0_11_186) l_0_11_192)) (* (* 4.0 l_0_11_187) l_0_11_193))))
 (let ((?x25289 (- (- ?x25283 (* (* 4.0 l_0_11_188) l_0_11_194)) (* (* 4.0 l_0_11_189) l_0_11_195))))
 (let ((?x25296 (- (- (- (- (+ (+ (+ ?x25289 ?x24260) ?x24263) ?x24266) ?x24269) ?x24272) ?x24275) ?x24278)))
 (= (+ (+ (+ (- (- ?x25296 ?x24281) ?x24284) ?x25196) ?x25198) ?x25200) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x24384 (* l_0_11_56 l_0_11_56)))
 (let ((?x24382 (* l_0_11_55 l_0_11_55)))
 (let ((?x24380 (* l_0_11_54 l_0_11_54)))
 (let ((?x24378 (* l_0_11_53 l_0_11_53)))
 (let ((?x24376 (* l_0_11_52 l_0_11_52)))
 (let ((?x24374 (* l_0_11_51 l_0_11_51)))
 (let ((?x24372 (* l_0_11_50 l_0_11_50)))
 (let ((?x24370 (* l_0_11_28 l_0_11_28)))
 (let ((?x24368 (* l_0_11_27 l_0_11_27)))
 (let ((?x24366 (* l_0_11_26 l_0_11_26)))
 (let ((?x24364 (* l_0_11_25 l_0_11_25)))
 (let ((?x24362 (* l_0_11_24 l_0_11_24)))
 (let ((?x24360 (* l_0_11_23 l_0_11_23)))
 (let ((?x24358 (* l_0_11_22 l_0_11_22)))
 (let ((?x11023 (- (* (* (- 2.0) l_0_11_190) l_0_11_190) (* (* 2.0 l_0_11_191) l_0_11_191))))
 (let ((?x10977 (- (- ?x11023 (* (* 2.0 l_0_11_192) l_0_11_192)) (* (* 2.0 l_0_11_193) l_0_11_193))))
 (let ((?x25331 (- (- ?x10977 (* (* 2.0 l_0_11_194) l_0_11_194)) (* (* 2.0 l_0_11_195) l_0_11_195))))
 (let ((?x25337 (+ (+ (+ (- ?x25331 (* (* 2.0 l_0_11_196) l_0_11_196)) ?x24358) ?x24360) ?x24362)))
 (let ((?x25344 (- (- (- (+ (+ (+ (+ ?x25337 ?x24364) ?x24366) ?x24368) ?x24370) ?x24372) ?x24374) ?x24376)))
 (= (- (- (- (- ?x25344 ?x24378) ?x24380) ?x24382) ?x24384) 0.0)))))))))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x11127 (* ?x23048 l_0_11_86)))
 (= (+ (* (* (- 2.0) l_0_11_57) l_0_11_58) ?x11127) 0.0))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x25383 (* ?x23048 l_0_11_95)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25381 (* ?x23320 l_0_11_79)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25379 (* ?x23317 l_0_11_78)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25377 (* ?x23045 l_0_11_67)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23602 (* ?x23342 l_0_11_163)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23600 (* ?x7546 l_0_11_162)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25365 (* ?x23164 l_0_11_87)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25364 (* ?x23155 l_0_11_86)))
 (let ((?x25366 (+ ?x25364 ?x25365)))
 (let ((?x25370 (- (- ?x25366 (* (* 2.0 l_0_11_114) l_0_11_134)) (* (* 2.0 l_0_11_115) l_0_11_135))))
 (let ((?x25376 (+ (+ (- (- ?x25370 ?x23600) ?x23602) (* (* 2.0 l_0_11_170) l_0_11_190)) (* (* 2.0 l_0_11_171) l_0_11_191))))
 (= (+ (- (- (- ?x25376 ?x25377) ?x25379) ?x25381) ?x25383) 0.0)))))))))))))))))))))
(assert
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25381 (* ?x23320 l_0_11_79)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25379 (* ?x23317 l_0_11_78)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25415 (* ?x23045 l_0_11_72)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25365 (* ?x23164 l_0_11_87)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25364 (* ?x23155 l_0_11_86)))
 (let ((?x23520 (* 2.0 l_0_11_100)))
 (let ((?x25405 (* ?x23520 l_0_11_85)))
 (= (+ (+ (- (- (- ?x25405 ?x25364) ?x25365) ?x25415) ?x25379) ?x25381) 0.0))))))))))))))
(assert
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25428 (* ?x23045 l_0_11_78)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25427 (* ?x23155 l_0_11_85)))
 (= (- ?x25427 ?x25428) 0.0))))))
(assert
 (let ((?x25443 (* l_0_11_87 l_0_11_87)))
 (let ((?x25441 (* l_0_11_86 l_0_11_86)))
 (let ((?x25442 (+ (- (* (- l_0_11_58) l_0_11_58) (* l_0_11_59 l_0_11_59)) ?x25441)))
 (= (+ ?x25442 ?x25443) 0.0)))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x24677 (* ?x23326 l_0_11_89)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x24675 (* ?x23323 l_0_11_88)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x24673 (* ?x23320 l_0_11_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_58) l_0_11_60) ?x24673) ?x24675) ?x24677) 0.0))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x25471 (* ?x23326 l_0_11_96)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x25469 (* ?x23323 l_0_11_95)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25467 (* ?x23320 l_0_11_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_58) l_0_11_67) ?x25467) ?x25469) ?x25471) 0.0))))))))
(assert
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25494 (* ?x23320 l_0_11_73)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25492 (* ?x23317 l_0_11_72)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25485 (* ?x23522 l_0_11_87)))
 (let ((?x25486 (+ (* (* 2.0 l_0_11_100) l_0_11_86) ?x25485)))
 (= (- (- ?x25486 ?x25492) ?x25494) 0.0)))))))))
(assert
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25381 (* ?x23320 l_0_11_79)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25379 (* ?x23317 l_0_11_78)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25365 (* ?x23164 l_0_11_87)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25364 (* ?x23155 l_0_11_86)))
 (let ((?x25366 (+ ?x25364 ?x25365)))
 (= (- (- ?x25366 ?x25379) ?x25381) 0.0)))))))))))
(assert
 (let ((?x24809 (* l_0_11_90 l_0_11_90)))
 (let ((?x24807 (* l_0_11_89 l_0_11_89)))
 (let ((?x24805 (* l_0_11_88 l_0_11_88)))
 (let ((?x24803 (* l_0_11_62 l_0_11_62)))
 (let ((?x25519 (- (- (* (- l_0_11_60) l_0_11_60) (* l_0_11_61 l_0_11_61)) ?x24803)))
 (= (+ (+ (+ ?x25519 ?x24805) ?x24807) ?x24809) 0.0)))))))
(assert
 (let ((?x23380 (* 2.0 l_0_11_90)))
 (let ((?x25013 (* ?x23380 l_0_11_97)))
 (let ((?x23377 (* 2.0 l_0_11_89)))
 (let ((?x25011 (* ?x23377 l_0_11_96)))
 (let ((?x23374 (* 2.0 l_0_11_88)))
 (let ((?x25009 (* ?x23374 l_0_11_95)))
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25007 (* ?x23371 l_0_11_69)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25005 (* ?x23368 l_0_11_68)))
 (let ((?x25535 (+ (+ (- (- (* (* (- 2.0) l_0_11_60) l_0_11_67) ?x25005) ?x25007) ?x25009) ?x25011)))
 (= (+ ?x25535 ?x25013) 0.0)))))))))))))
(assert
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25098 (* ?x23371 l_0_11_74)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25095 (* ?x23368 l_0_11_73)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25092 (* ?x23365 l_0_11_72)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25040 (* ?x23525 l_0_11_90)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x9986 (* ?x23522 l_0_11_89)))
 (let ((?x25049 (+ (+ (* (* 2.0 l_0_11_100) l_0_11_88) ?x9986) ?x25040)))
 (= (- (- (- ?x25049 ?x25092) ?x25095) ?x25098) 0.0)))))))))))))
(assert
 (let ((?x23371 (* 2.0 l_0_11_62)))
 (let ((?x25200 (* ?x23371 l_0_11_80)))
 (let ((?x23368 (* 2.0 l_0_11_61)))
 (let ((?x25198 (* ?x23368 l_0_11_79)))
 (let ((?x23365 (* 2.0 l_0_11_60)))
 (let ((?x25196 (* ?x23365 l_0_11_78)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x10190 (* ?x23167 l_0_11_90)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x10183 (* ?x23164 l_0_11_89)))
 (let ((?x10184 (+ (+ (* (* 2.0 l_0_11_106) l_0_11_88) ?x10183) ?x10190)))
 (= (- (- (- ?x10184 ?x25196) ?x25198) ?x25200) 0.0)))))))))))))
(assert
 (let ((?x25586 (* l_0_11_99 l_0_11_99)))
 (let ((?x25584 (* l_0_11_98 l_0_11_98)))
 (let ((?x25582 (* l_0_11_97 l_0_11_97)))
 (let ((?x25580 (* l_0_11_96 l_0_11_96)))
 (let ((?x25578 (* l_0_11_95 l_0_11_95)))
 (let ((?x25576 (* l_0_11_71 l_0_11_71)))
 (let ((?x25574 (* l_0_11_70 l_0_11_70)))
 (let ((?x25572 (* l_0_11_69 l_0_11_69)))
 (let ((?x25573 (- (- (* (- l_0_11_67) l_0_11_67) (* l_0_11_68 l_0_11_68)) ?x25572)))
 (let ((?x25587 (+ (+ (+ (+ (+ (- (- ?x25573 ?x25574) ?x25576) ?x25578) ?x25580) ?x25582) ?x25584) ?x25586)))
 (= ?x25587 0.0))))))))))))
(assert
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25631 (* ?x25630 l_0_11_76)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25628 (* ?x25627 l_0_11_75)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25625 (* ?x25624 l_0_11_74)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25622 (* ?x25621 l_0_11_73)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25619 (* ?x25618 l_0_11_72)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25616 (* ?x25615 l_0_11_99)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25613 (* ?x23528 l_0_11_98)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25611 (* ?x23525 l_0_11_97)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25609 (* ?x23522 l_0_11_96)))
 (let ((?x25617 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_95) ?x25609) ?x25611) ?x25613) ?x25616)))
 (= (- (- (- (- (- ?x25617 ?x25619) ?x25622) ?x25625) ?x25628) ?x25631) 0.0)))))))))))))))))))))
(assert
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25682 (* ?x25630 l_0_11_82)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25680 (* ?x25627 l_0_11_81)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25678 (* ?x25624 l_0_11_80)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25676 (* ?x25621 l_0_11_79)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25674 (* ?x25618 l_0_11_78)))
 (let ((?x25672 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x25669 (* ?x23170 l_0_11_98)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x25667 (* ?x23167 l_0_11_97)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25665 (* ?x23164 l_0_11_96)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25664 (* ?x23155 l_0_11_95)))
 (let ((?x25673 (+ (+ (+ (+ ?x25664 ?x25665) ?x25667) ?x25669) ?x25672)))
 (= (- (- (- (- (- ?x25673 ?x25674) ?x25676) ?x25678) ?x25680) ?x25682) 0.0))))))))))))))))))))))
(assert
 (let ((?x25713 (* l_0_11_77 l_0_11_77)))
 (let ((?x25711 (* l_0_11_76 l_0_11_76)))
 (let ((?x25709 (* l_0_11_75 l_0_11_75)))
 (let ((?x25707 (* l_0_11_74 l_0_11_74)))
 (let ((?x25705 (* l_0_11_73 l_0_11_73)))
 (let ((?x25703 (* l_0_11_72 l_0_11_72)))
 (let ((?x25701 (* l_0_11_105 l_0_11_105)))
 (let ((?x25699 (* l_0_11_104 l_0_11_104)))
 (let ((?x25697 (* l_0_11_103 l_0_11_103)))
 (let ((?x25695 (* l_0_11_102 l_0_11_102)))
 (let ((?x25696 (+ (+ (* l_0_11_100 l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25695)))
 (let ((?x25710 (- (- (- (- (+ (+ (+ ?x25696 ?x25697) ?x25699) ?x25701) ?x25703) ?x25705) ?x25707) ?x25709)))
 (= (- (- ?x25710 ?x25711) ?x25713) 0.0))))))))))))))
(assert
 (let ((?x25751 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25748 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25745 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25742 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25739 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25736 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x25733 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25730 (* ?x25615 l_0_11_110)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25728 (* ?x23528 l_0_11_109)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25726 (* ?x23525 l_0_11_108)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x11400 (* ?x23522 l_0_11_107)))
 (let ((?x25731 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_106) ?x11400) ?x25726) ?x25728) ?x25730)))
 (let ((?x25734 (+ ?x25731 ?x25733)))
 (= (- (- (- (- (- (- ?x25734 ?x25736) ?x25739) ?x25742) ?x25745) ?x25748) ?x25751) 0.0)))))))))))))))))))
(assert
 (let ((?x25820 (* l_0_11_84 l_0_11_84)))
 (let ((?x25818 (* l_0_11_83 l_0_11_83)))
 (let ((?x25816 (* l_0_11_82 l_0_11_82)))
 (let ((?x25814 (* l_0_11_81 l_0_11_81)))
 (let ((?x25812 (* l_0_11_80 l_0_11_80)))
 (let ((?x25810 (* l_0_11_79 l_0_11_79)))
 (let ((?x25808 (* l_0_11_78 l_0_11_78)))
 (let ((?x25806 (* l_0_11_112 l_0_11_112)))
 (let ((?x25804 (* l_0_11_111 l_0_11_111)))
 (let ((?x25802 (* l_0_11_110 l_0_11_110)))
 (let ((?x25800 (* l_0_11_109 l_0_11_109)))
 (let ((?x25798 (* l_0_11_108 l_0_11_108)))
 (let ((?x25799 (+ (+ (* l_0_11_106 l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25798)))
 (let ((?x25807 (+ (+ (+ (+ ?x25799 ?x25800) ?x25802) ?x25804) ?x25806)))
 (let ((?x25821 (- (- (- (- (- (- (- ?x25807 ?x25808) ?x25810) ?x25812) ?x25814) ?x25816) ?x25818) ?x25820)))
 (= ?x25821 0.0)))))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x11127 (* ?x23048 l_0_11_86)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25841 (* ?x23045 l_0_11_58)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23040 (* ?x23039 l_0_11_142)))
 (let ((?x25832 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_114) ?x23040) (* (* 2.0 l_0_11_169) l_0_11_170))))
 (let ((?x25836 (- (- ?x25832 (* (* 2.0 l_0_11_198) l_0_11_207)) (* (* 2.0 l_0_11_199) l_0_11_208))))
 (let ((?x25840 (- (- ?x25836 (* (* 2.0 l_0_11_226) l_0_11_235)) (* (* 2.0 l_0_11_227) l_0_11_236))))
 (= (+ (- ?x25840 ?x25841) ?x11127) 0.0)))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x23049 (* ?x23048 l_0_11_91)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x23046 (* ?x23045 l_0_11_63)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23147 (* ?x23039 l_0_11_147)))
 (let ((?x25868 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_119) ?x23147) (* (* 2.0 l_0_11_169) l_0_11_175))))
 (let ((?x25872 (- (- ?x25868 (* (* 2.0 l_0_11_203) l_0_11_207)) (* (* 2.0 l_0_11_204) l_0_11_208))))
 (let ((?x25876 (- (- ?x25872 (* (* 2.0 l_0_11_205) l_0_11_209)) (* (* 2.0 l_0_11_206) l_0_11_210))))
 (let ((?x25880 (- (- ?x25876 (* (* 2.0 l_0_11_231) l_0_11_235)) (* (* 2.0 l_0_11_232) l_0_11_236))))
 (let ((?x25884 (- (- ?x25880 (* (* 2.0 l_0_11_233) l_0_11_237)) (* (* 2.0 l_0_11_234) l_0_11_238))))
 (= (+ (- ?x25884 ?x23046) ?x23049) 0.0)))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x25383 (* ?x23048 l_0_11_95)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25377 (* ?x23045 l_0_11_67)))
 (let ((?x25921 (* l_0_11_239 l_0_11_239)))
 (let ((?x25919 (* l_0_11_238 l_0_11_238)))
 (let ((?x25917 (* l_0_11_237 l_0_11_237)))
 (let ((?x25915 (* l_0_11_236 l_0_11_236)))
 (let ((?x25913 (* l_0_11_235 l_0_11_235)))
 (let ((?x25911 (* l_0_11_211 l_0_11_211)))
 (let ((?x25909 (* l_0_11_210 l_0_11_210)))
 (let ((?x25907 (* l_0_11_209 l_0_11_209)))
 (let ((?x25905 (* l_0_11_208 l_0_11_208)))
 (let ((?x25903 (* l_0_11_207 l_0_11_207)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23185 (* ?x23039 l_0_11_151)))
 (let ((?x25902 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_123) ?x23185) (* (* 2.0 l_0_11_169) l_0_11_179))))
 (let ((?x25916 (- (- (- (- (- (- (- ?x25902 ?x25903) ?x25905) ?x25907) ?x25909) ?x25911) ?x25913) ?x25915)))
 (= (+ (- (- (- (- ?x25916 ?x25917) ?x25919) ?x25921) ?x25377) ?x25383) 0.0))))))))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x25383 (* ?x23048 l_0_11_95)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25415 (* ?x23045 l_0_11_72)))
 (let ((?x25377 (* ?x23045 l_0_11_67)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x23284 (* ?x23039 l_0_11_156)))
 (let ((?x23520 (* 2.0 l_0_11_100)))
 (let ((?x25405 (* ?x23520 l_0_11_85)))
 (let ((?x25945 (+ (- (- ?x25405 (* (* 2.0 l_0_11_113) l_0_11_128)) ?x23284) (* (* 2.0 l_0_11_169) l_0_11_184))))
 (let ((?x25951 (- (- ?x25945 (* (* 2.0 l_0_11_207) l_0_11_212)) (* (* 2.0 l_0_11_208) l_0_11_213))))
 (let ((?x25957 (- (- ?x25951 (* (* 2.0 l_0_11_209) l_0_11_214)) (* (* 2.0 l_0_11_210) l_0_11_215))))
 (let ((?x25963 (- (- ?x25957 (* (* 2.0 l_0_11_211) l_0_11_216)) (* (* 2.0 l_0_11_235) l_0_11_240))))
 (let ((?x25969 (- (- ?x25963 (* (* 2.0 l_0_11_236) l_0_11_241)) (* (* 2.0 l_0_11_237) l_0_11_242))))
 (let ((?x25975 (- (- ?x25969 (* (* 2.0 l_0_11_238) l_0_11_243)) (* (* 2.0 l_0_11_239) l_0_11_244))))
 (= (- (- (+ ?x25975 ?x25377) ?x25415) ?x25383) 0.0)))))))))))))))))
(assert
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25428 (* ?x23045 l_0_11_78)))
 (let ((?x23039 (* 2.0 l_0_11_141)))
 (let ((?x7493 (* ?x23039 l_0_11_162)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25427 (* ?x23155 l_0_11_85)))
 (let ((?x26001 (+ (- (- ?x25427 (* (* 2.0 l_0_11_113) l_0_11_134)) ?x7493) (* (* 2.0 l_0_11_169) l_0_11_190))))
 (let ((?x26005 (- (- ?x26001 (* (* 2.0 l_0_11_207) l_0_11_218)) (* (* 2.0 l_0_11_208) l_0_11_219))))
 (let ((?x26009 (- (- ?x26005 (* (* 2.0 l_0_11_209) l_0_11_220)) (* (* 2.0 l_0_11_210) l_0_11_221))))
 (let ((?x26013 (- (- ?x26009 (* (* 2.0 l_0_11_211) l_0_11_222)) (* (* 2.0 l_0_11_235) l_0_11_246))))
 (let ((?x26017 (- (- ?x26013 (* (* 2.0 l_0_11_236) l_0_11_247)) (* (* 2.0 l_0_11_237) l_0_11_248))))
 (let ((?x26021 (- (- ?x26017 (* (* 2.0 l_0_11_238) l_0_11_249)) (* (* 2.0 l_0_11_239) l_0_11_250))))
 (= (- ?x26021 ?x25428) 0.0))))))))))))))
(assert
 (let ((?x25443 (* l_0_11_87 l_0_11_87)))
 (let ((?x25441 (* l_0_11_86 l_0_11_86)))
 (let ((?x25439 (* l_0_11_59 l_0_11_59)))
 (let ((?x25447 (* l_0_11_58 l_0_11_58)))
 (let ((?x24634 (* l_0_11_171 l_0_11_171)))
 (let ((?x24632 (* l_0_11_170 l_0_11_170)))
 (let ((?x23301 (* l_0_11_143 l_0_11_143)))
 (let ((?x23299 (* l_0_11_142 l_0_11_142)))
 (let ((?x11870 (- (- (* (- l_0_11_114) l_0_11_114) (* l_0_11_115 l_0_11_115)) ?x23299)))
 (let ((?x26051 (+ (+ (- (- (+ (+ (- ?x11870 ?x23301) ?x24632) ?x24634) ?x25447) ?x25439) ?x25441) ?x25443)))
 (= ?x26051 0.0))))))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x23327 (* ?x23326 l_0_11_92)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x23324 (* ?x23323 l_0_11_91)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x23321 (* ?x23320 l_0_11_64)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x23318 (* ?x23317 l_0_11_63)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23411 (* ?x23342 l_0_11_148)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x7595 (* ?x7546 l_0_11_147)))
 (let ((?x11925 (- (* (* (- 2.0) l_0_11_114) l_0_11_119) (* (* 2.0 l_0_11_115) l_0_11_120))))
 (let ((?x26065 (+ (+ (- (- ?x11925 ?x7595) ?x23411) (* (* 2.0 l_0_11_170) l_0_11_175)) (* (* 2.0 l_0_11_171) l_0_11_176))))
 (= (+ (+ (- (- ?x26065 ?x23318) ?x23321) ?x23324) ?x23327) 0.0))))))))))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x25471 (* ?x23326 l_0_11_96)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x25469 (* ?x23323 l_0_11_95)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25467 (* ?x23320 l_0_11_68)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x26094 (* ?x23317 l_0_11_67)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x7629 (* ?x23342 l_0_11_152)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x7622 (* ?x7546 l_0_11_151)))
 (let ((?x26087 (- (* (* (- 2.0) l_0_11_114) l_0_11_123) (* (* 2.0 l_0_11_115) l_0_11_124))))
 (let ((?x26093 (+ (+ (- (- ?x26087 ?x7622) ?x7629) (* (* 2.0 l_0_11_170) l_0_11_179)) (* (* 2.0 l_0_11_171) l_0_11_180))))
 (= (+ (+ (- (- ?x26093 ?x26094) ?x25467) ?x25469) ?x25471) 0.0))))))))))))))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x25471 (* ?x23326 l_0_11_96)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x25469 (* ?x23323 l_0_11_95)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25494 (* ?x23320 l_0_11_73)))
 (let ((?x25467 (* ?x23320 l_0_11_68)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25492 (* ?x23317 l_0_11_72)))
 (let ((?x26094 (* ?x23317 l_0_11_67)))
 (let ((?x23342 (* 2.0 l_0_11_143)))
 (let ((?x23533 (* ?x23342 l_0_11_157)))
 (let ((?x7546 (* 2.0 l_0_11_142)))
 (let ((?x23531 (* ?x7546 l_0_11_156)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25485 (* ?x23522 l_0_11_87)))
 (let ((?x25486 (+ (* (* 2.0 l_0_11_100) l_0_11_86) ?x25485)))
 (let ((?x26115 (- (- ?x25486 (* (* 2.0 l_0_11_114) l_0_11_128)) (* (* 2.0 l_0_11_115) l_0_11_129))))
 (let ((?x26121 (+ (+ (- (- ?x26115 ?x23531) ?x23533) (* (* 2.0 l_0_11_170) l_0_11_184)) (* (* 2.0 l_0_11_171) l_0_11_185))))
 (= (- (- (- (+ (- (+ ?x26121 ?x26094) ?x25492) ?x25467) ?x25494) ?x25469) ?x25471) 0.0)))))))))))))))))))))
(assert
 (let ((?x23443 (* l_0_11_94 l_0_11_94)))
 (let ((?x23441 (* l_0_11_93 l_0_11_93)))
 (let ((?x23439 (* l_0_11_92 l_0_11_92)))
 (let ((?x23437 (* l_0_11_91 l_0_11_91)))
 (let ((?x23435 (* l_0_11_66 l_0_11_66)))
 (let ((?x23433 (* l_0_11_65 l_0_11_65)))
 (let ((?x23431 (* l_0_11_64 l_0_11_64)))
 (let ((?x23429 (* l_0_11_63 l_0_11_63)))
 (let ((?x9534 (* l_0_11_178 l_0_11_178)))
 (let ((?x9522 (* l_0_11_177 l_0_11_177)))
 (let ((?x9511 (* l_0_11_176 l_0_11_176)))
 (let ((?x9507 (* l_0_11_175 l_0_11_175)))
 (let ((?x23851 (* l_0_11_150 l_0_11_150)))
 (let ((?x23849 (* l_0_11_149 l_0_11_149)))
 (let ((?x23847 (* l_0_11_148 l_0_11_148)))
 (let ((?x7830 (* l_0_11_147 l_0_11_147)))
 (let ((?x26140 (* l_0_11_122 l_0_11_122)))
 (let ((?x26138 (* l_0_11_121 l_0_11_121)))
 (let ((?x26139 (- (- (* (- l_0_11_119) l_0_11_119) (* l_0_11_120 l_0_11_120)) ?x26138)))
 (let ((?x26147 (+ (+ (- (- (- (- (- ?x26139 ?x26140) ?x7830) ?x23847) ?x23849) ?x23851) ?x9507) ?x9511)))
 (let ((?x26154 (+ (- (- (- (- (+ (+ ?x26147 ?x9522) ?x9534) ?x23429) ?x23431) ?x23433) ?x23435) ?x23437)))
 (= (+ (+ (+ ?x26154 ?x23439) ?x23441) ?x23443) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23481 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23478 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23475 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23472 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23469 (* ?x23222 l_0_11_70)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23467 (* ?x23219 l_0_11_69)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23465 (* ?x23216 l_0_11_68)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23463 (* ?x23213 l_0_11_67)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23895 (* ?x23196 l_0_11_154)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23893 (* ?x23193 l_0_11_153)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x23891 (* ?x23190 l_0_11_152)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23889 (* ?x23187 l_0_11_151)))
 (let ((?x26173 (- (* (* (- 2.0) l_0_11_119) l_0_11_123) (* (* 2.0 l_0_11_120) l_0_11_124))))
 (let ((?x26177 (- (- ?x26173 (* (* 2.0 l_0_11_121) l_0_11_125)) (* (* 2.0 l_0_11_122) l_0_11_126))))
 (let ((?x26183 (+ (- (- (- (- ?x26177 ?x23889) ?x23891) ?x23893) ?x23895) (* (* 2.0 l_0_11_175) l_0_11_179))))
 (let ((?x26187 (+ (+ ?x26183 (* (* 2.0 l_0_11_176) l_0_11_180)) (* (* 2.0 l_0_11_177) l_0_11_181))))
 (let ((?x26192 (- (- (- (+ ?x26187 (* (* 2.0 l_0_11_178) l_0_11_182)) ?x23463) ?x23465) ?x23467)))
 (= (+ (+ (+ (+ (- ?x26192 ?x23469) ?x23472) ?x23475) ?x23478) ?x23481) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23481 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23478 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23475 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23472 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23551 (* ?x23222 l_0_11_75)))
 (let ((?x23469 (* ?x23222 l_0_11_70)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23549 (* ?x23219 l_0_11_74)))
 (let ((?x23467 (* ?x23219 l_0_11_69)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23547 (* ?x23216 l_0_11_73)))
 (let ((?x23465 (* ?x23216 l_0_11_68)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23545 (* ?x23213 l_0_11_72)))
 (let ((?x23463 (* ?x23213 l_0_11_67)))
 (let ((?x23196 (* 2.0 l_0_11_150)))
 (let ((?x23923 (* ?x23196 l_0_11_159)))
 (let ((?x23193 (* 2.0 l_0_11_149)))
 (let ((?x23919 (* ?x23193 l_0_11_158)))
 (let ((?x23190 (* 2.0 l_0_11_148)))
 (let ((?x7868 (* ?x23190 l_0_11_157)))
 (let ((?x23187 (* 2.0 l_0_11_147)))
 (let ((?x23917 (* ?x23187 l_0_11_156)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x23529 (* ?x23528 l_0_11_94)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x23526 (* ?x23525 l_0_11_93)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x23523 (* ?x23522 l_0_11_92)))
 (let ((?x23530 (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_91) ?x23523) ?x23526) ?x23529)))
 (let ((?x26231 (- (- ?x23530 (* (* 2.0 l_0_11_119) l_0_11_128)) (* (* 2.0 l_0_11_120) l_0_11_129))))
 (let ((?x26235 (- (- ?x26231 (* (* 2.0 l_0_11_121) l_0_11_130)) (* (* 2.0 l_0_11_122) l_0_11_131))))
 (let ((?x26241 (+ (- (- (- (- ?x26235 ?x23917) ?x7868) ?x23919) ?x23923) (* (* 2.0 l_0_11_175) l_0_11_184))))
 (let ((?x26245 (+ (+ ?x26241 (* (* 2.0 l_0_11_176) l_0_11_185)) (* (* 2.0 l_0_11_177) l_0_11_186))))
 (let ((?x26250 (+ (- (+ (+ ?x26245 (* (* 2.0 l_0_11_178) l_0_11_187)) ?x23463) ?x23545) ?x23465)))
 (let ((?x26257 (- (- (- (+ (- (+ (- ?x26250 ?x23547) ?x23467) ?x23549) ?x23469) ?x23551) ?x23472) ?x23475)))
 (= (- (- ?x26257 ?x23478) ?x23481) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25586 (* l_0_11_99 l_0_11_99)))
 (let ((?x25584 (* l_0_11_98 l_0_11_98)))
 (let ((?x25582 (* l_0_11_97 l_0_11_97)))
 (let ((?x25580 (* l_0_11_96 l_0_11_96)))
 (let ((?x25578 (* l_0_11_95 l_0_11_95)))
 (let ((?x25576 (* l_0_11_71 l_0_11_71)))
 (let ((?x25574 (* l_0_11_70 l_0_11_70)))
 (let ((?x25572 (* l_0_11_69 l_0_11_69)))
 (let ((?x25570 (* l_0_11_68 l_0_11_68)))
 (let ((?x25590 (* l_0_11_67 l_0_11_67)))
 (let ((?x9926 (* l_0_11_183 l_0_11_183)))
 (let ((?x9920 (* l_0_11_182 l_0_11_182)))
 (let ((?x9914 (* l_0_11_181 l_0_11_181)))
 (let ((?x25026 (* l_0_11_180 l_0_11_180)))
 (let ((?x9902 (* l_0_11_179 l_0_11_179)))
 (let ((?x24019 (* l_0_11_155 l_0_11_155)))
 (let ((?x24017 (* l_0_11_154 l_0_11_154)))
 (let ((?x24015 (* l_0_11_153 l_0_11_153)))
 (let ((?x24013 (* l_0_11_152 l_0_11_152)))
 (let ((?x24011 (* l_0_11_151 l_0_11_151)))
 (let ((?x26290 (* l_0_11_127 l_0_11_127)))
 (let ((?x26288 (* l_0_11_126 l_0_11_126)))
 (let ((?x26286 (* l_0_11_125 l_0_11_125)))
 (let ((?x26287 (- (- (* (- l_0_11_123) l_0_11_123) (* l_0_11_124 l_0_11_124)) ?x26286)))
 (let ((?x26296 (- (- (- (- (- (- (- ?x26287 ?x26288) ?x26290) ?x24011) ?x24013) ?x24015) ?x24017) ?x24019)))
 (let ((?x26303 (- (- (+ (+ (+ (+ (+ ?x26296 ?x9902) ?x25026) ?x9914) ?x9920) ?x9926) ?x25590) ?x25570)))
 (let ((?x26310 (+ (+ (+ (+ (- (- (- ?x26303 ?x25572) ?x25574) ?x25576) ?x25578) ?x25580) ?x25582) ?x25584)))
 (= (+ ?x26310 ?x25586) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x25586 (* l_0_11_99 l_0_11_99)))
 (let ((?x25584 (* l_0_11_98 l_0_11_98)))
 (let ((?x25582 (* l_0_11_97 l_0_11_97)))
 (let ((?x25580 (* l_0_11_96 l_0_11_96)))
 (let ((?x25578 (* l_0_11_95 l_0_11_95)))
 (let ((?x25576 (* l_0_11_71 l_0_11_71)))
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25631 (* ?x25630 l_0_11_76)))
 (let ((?x25574 (* l_0_11_70 l_0_11_70)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25628 (* ?x25627 l_0_11_75)))
 (let ((?x25572 (* l_0_11_69 l_0_11_69)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25625 (* ?x25624 l_0_11_74)))
 (let ((?x25570 (* l_0_11_68 l_0_11_68)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25622 (* ?x25621 l_0_11_73)))
 (let ((?x25590 (* l_0_11_67 l_0_11_67)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25619 (* ?x25618 l_0_11_72)))
 (let ((?x24074 (* 2.0 l_0_11_155)))
 (let ((?x24075 (* ?x24074 l_0_11_160)))
 (let ((?x24071 (* 2.0 l_0_11_154)))
 (let ((?x24072 (* ?x24071 l_0_11_159)))
 (let ((?x24068 (* 2.0 l_0_11_153)))
 (let ((?x24069 (* ?x24068 l_0_11_158)))
 (let ((?x24065 (* 2.0 l_0_11_152)))
 (let ((?x24066 (* ?x24065 l_0_11_157)))
 (let ((?x24062 (* 2.0 l_0_11_151)))
 (let ((?x24063 (* ?x24062 l_0_11_156)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25616 (* ?x25615 l_0_11_99)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25613 (* ?x23528 l_0_11_98)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25611 (* ?x23525 l_0_11_97)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25609 (* ?x23522 l_0_11_96)))
 (let ((?x25617 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_95) ?x25609) ?x25611) ?x25613) ?x25616)))
 (let ((?x12445 (- (- ?x25617 (* (* 2.0 l_0_11_123) l_0_11_128)) (* (* 2.0 l_0_11_124) l_0_11_129))))
 (let ((?x12460 (- (- ?x12445 (* (* 2.0 l_0_11_125) l_0_11_130)) (* (* 2.0 l_0_11_126) l_0_11_131))))
 (let ((?x12396 (- (- (- (- ?x12460 (* (* 2.0 l_0_11_127) l_0_11_132)) ?x24063) ?x24066) ?x24069)))
 (let ((?x26326 (+ (+ (- (- ?x12396 ?x24072) ?x24075) (* (* 2.0 l_0_11_179) l_0_11_184)) (* (* 2.0 l_0_11_180) l_0_11_185))))
 (let ((?x26330 (+ (+ ?x26326 (* (* 2.0 l_0_11_181) l_0_11_186)) (* (* 2.0 l_0_11_182) l_0_11_187))))
 (let ((?x26335 (- (+ (- (+ ?x26330 (* (* 2.0 l_0_11_183) l_0_11_188)) ?x25619) ?x25590) ?x25622)))
 (let ((?x26342 (+ (- (+ (- (+ (- (+ ?x26335 ?x25570) ?x25625) ?x25572) ?x25628) ?x25574) ?x25631) ?x25576)))
 (= (- (- (- (- (- ?x26342 ?x25578) ?x25580) ?x25582) ?x25584) ?x25586) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25682 (* ?x25630 l_0_11_82)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25680 (* ?x25627 l_0_11_81)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25678 (* ?x25624 l_0_11_80)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25676 (* ?x25621 l_0_11_79)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25674 (* ?x25618 l_0_11_78)))
 (let ((?x24074 (* 2.0 l_0_11_155)))
 (let ((?x24147 (* ?x24074 l_0_11_166)))
 (let ((?x24071 (* 2.0 l_0_11_154)))
 (let ((?x24145 (* ?x24071 l_0_11_165)))
 (let ((?x24068 (* 2.0 l_0_11_153)))
 (let ((?x24143 (* ?x24068 l_0_11_164)))
 (let ((?x24065 (* 2.0 l_0_11_152)))
 (let ((?x24141 (* ?x24065 l_0_11_163)))
 (let ((?x24062 (* 2.0 l_0_11_151)))
 (let ((?x24126 (* ?x24062 l_0_11_162)))
 (let ((?x25672 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x25669 (* ?x23170 l_0_11_98)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x25667 (* ?x23167 l_0_11_97)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25665 (* ?x23164 l_0_11_96)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25664 (* ?x23155 l_0_11_95)))
 (let ((?x25673 (+ (+ (+ (+ ?x25664 ?x25665) ?x25667) ?x25669) ?x25672)))
 (let ((?x26375 (- (- ?x25673 (* (* 2.0 l_0_11_123) l_0_11_134)) (* (* 2.0 l_0_11_124) l_0_11_135))))
 (let ((?x26379 (- (- ?x26375 (* (* 2.0 l_0_11_125) l_0_11_136)) (* (* 2.0 l_0_11_126) l_0_11_137))))
 (let ((?x26384 (- (- (- (- ?x26379 (* (* 2.0 l_0_11_127) l_0_11_138)) ?x24126) ?x24141) ?x24143)))
 (let ((?x26390 (+ (+ (- (- ?x26384 ?x24145) ?x24147) (* (* 2.0 l_0_11_179) l_0_11_190)) (* (* 2.0 l_0_11_180) l_0_11_191))))
 (let ((?x26394 (+ (+ ?x26390 (* (* 2.0 l_0_11_181) l_0_11_192)) (* (* 2.0 l_0_11_182) l_0_11_193))))
 (let ((?x26399 (- (- (- (+ ?x26394 (* (* 2.0 l_0_11_183) l_0_11_194)) ?x25674) ?x25676) ?x25678)))
 (= (- (- ?x26399 ?x25680) ?x25682) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25713 (* l_0_11_77 l_0_11_77)))
 (let ((?x25711 (* l_0_11_76 l_0_11_76)))
 (let ((?x25709 (* l_0_11_75 l_0_11_75)))
 (let ((?x25707 (* l_0_11_74 l_0_11_74)))
 (let ((?x25705 (* l_0_11_73 l_0_11_73)))
 (let ((?x25703 (* l_0_11_72 l_0_11_72)))
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25631 (* ?x25630 l_0_11_76)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25628 (* ?x25627 l_0_11_75)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25625 (* ?x25624 l_0_11_74)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25622 (* ?x25621 l_0_11_73)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25619 (* ?x25618 l_0_11_72)))
 (let ((?x10688 (* l_0_11_189 l_0_11_189)))
 (let ((?x10654 (* l_0_11_188 l_0_11_188)))
 (let ((?x25253 (* l_0_11_187 l_0_11_187)))
 (let ((?x10543 (* l_0_11_186 l_0_11_186)))
 (let ((?x10576 (* l_0_11_185 l_0_11_185)))
 (let ((?x10571 (* l_0_11_184 l_0_11_184)))
 (let ((?x24198 (* l_0_11_161 l_0_11_161)))
 (let ((?x24183 (* l_0_11_160 l_0_11_160)))
 (let ((?x24173 (* l_0_11_159 l_0_11_159)))
 (let ((?x8026 (* l_0_11_158 l_0_11_158)))
 (let ((?x8013 (* l_0_11_157 l_0_11_157)))
 (let ((?x24174 (* l_0_11_156 l_0_11_156)))
 (let ((?x26446 (* l_0_11_133 l_0_11_133)))
 (let ((?x26444 (* l_0_11_132 l_0_11_132)))
 (let ((?x26442 (* l_0_11_131 l_0_11_131)))
 (let ((?x26440 (* l_0_11_130 l_0_11_130)))
 (let ((?x26438 (* l_0_11_129 l_0_11_129)))
 (let ((?x26436 (* l_0_11_128 l_0_11_128)))
 (let ((?x25701 (* l_0_11_105 l_0_11_105)))
 (let ((?x25699 (* l_0_11_104 l_0_11_104)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25616 (* ?x25615 l_0_11_99)))
 (let ((?x25697 (* l_0_11_103 l_0_11_103)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25613 (* ?x23528 l_0_11_98)))
 (let ((?x25695 (* l_0_11_102 l_0_11_102)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25611 (* ?x23525 l_0_11_97)))
 (let ((?x25693 (* l_0_11_101 l_0_11_101)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25609 (* ?x23522 l_0_11_96)))
 (let ((?x25692 (* l_0_11_100 l_0_11_100)))
 (let ((?x26429 (- (+ (- (+ (* (* (- 2.0) l_0_11_100) l_0_11_95) ?x25692) ?x25609) ?x25693) ?x25611)))
 (let ((?x26437 (- (+ (+ (- (+ (- (+ ?x26429 ?x25695) ?x25613) ?x25697) ?x25616) ?x25699) ?x25701) ?x26436)))
 (let ((?x26449 (- (- (- (- (- (- (- ?x26437 ?x26438) ?x26440) ?x26442) ?x26444) ?x26446) ?x24174) ?x8013)))
 (let ((?x26456 (+ (+ (+ (- (- (- (- ?x26449 ?x8026) ?x24173) ?x24183) ?x24198) ?x10571) ?x10576) ?x10543)))
 (let ((?x26463 (+ (+ (+ (+ (+ (+ (+ ?x26456 ?x25253) ?x10654) ?x10688) ?x25619) ?x25622) ?x25625) ?x25628)))
 (let ((?x26470 (- (- (- (- (- (- (+ ?x26463 ?x25631) ?x25703) ?x25705) ?x25707) ?x25709) ?x25711) ?x25713)))
 (= ?x26470 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25751 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25748 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25745 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25742 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25739 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25736 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x25630 (* 2.0 l_0_11_71)))
 (let ((?x25682 (* ?x25630 l_0_11_82)))
 (let ((?x25627 (* 2.0 l_0_11_70)))
 (let ((?x25680 (* ?x25627 l_0_11_81)))
 (let ((?x25624 (* 2.0 l_0_11_69)))
 (let ((?x25678 (* ?x25624 l_0_11_80)))
 (let ((?x25621 (* 2.0 l_0_11_68)))
 (let ((?x25676 (* ?x25621 l_0_11_79)))
 (let ((?x25618 (* 2.0 l_0_11_67)))
 (let ((?x25674 (* ?x25618 l_0_11_78)))
 (let ((?x24253 (* (* 2.0 l_0_11_161) l_0_11_167)))
 (let ((?x24250 (* (* 2.0 l_0_11_160) l_0_11_166)))
 (let ((?x24245 (* (* 2.0 l_0_11_159) l_0_11_165)))
 (let ((?x24242 (* (* 2.0 l_0_11_158) l_0_11_164)))
 (let ((?x24239 (* (* 2.0 l_0_11_157) l_0_11_163)))
 (let ((?x24237 (* (* 2.0 l_0_11_156) l_0_11_162)))
 (let ((?x25672 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23170 (* 2.0 l_0_11_109)))
 (let ((?x25669 (* ?x23170 l_0_11_98)))
 (let ((?x23167 (* 2.0 l_0_11_108)))
 (let ((?x25667 (* ?x23167 l_0_11_97)))
 (let ((?x23164 (* 2.0 l_0_11_107)))
 (let ((?x25665 (* ?x23164 l_0_11_96)))
 (let ((?x23155 (* 2.0 l_0_11_106)))
 (let ((?x25664 (* ?x23155 l_0_11_95)))
 (let ((?x25733 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25730 (* ?x25615 l_0_11_110)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25728 (* ?x23528 l_0_11_109)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25726 (* ?x23525 l_0_11_108)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x11400 (* ?x23522 l_0_11_107)))
 (let ((?x25731 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_106) ?x11400) ?x25726) ?x25728) ?x25730)))
 (let ((?x25734 (+ ?x25731 ?x25733)))
 (let ((?x26512 (- (- (- (- (- (- ?x25734 ?x25664) ?x25665) ?x25667) ?x25669) ?x25672) (* (* 2.0 l_0_11_128) l_0_11_134))))
 (let ((?x26518 (- (- ?x26512 (* (* 2.0 l_0_11_129) l_0_11_135)) (* (* 2.0 l_0_11_130) l_0_11_136))))
 (let ((?x26524 (- (- ?x26518 (* (* 2.0 l_0_11_131) l_0_11_137)) (* (* 2.0 l_0_11_132) l_0_11_138))))
 (let ((?x26530 (- (- (- (- ?x26524 (* (* 2.0 l_0_11_133) l_0_11_139)) ?x24237) ?x24239) ?x24242)))
 (let ((?x26535 (+ (- (- (- ?x26530 ?x24245) ?x24250) ?x24253) (* (* 2.0 l_0_11_184) l_0_11_190))))
 (let ((?x26539 (+ (+ ?x26535 (* (* 2.0 l_0_11_185) l_0_11_191)) (* (* 2.0 l_0_11_186) l_0_11_192))))
 (let ((?x26543 (+ (+ ?x26539 (* (* 2.0 l_0_11_187) l_0_11_193)) (* (* 2.0 l_0_11_188) l_0_11_194))))
 (let ((?x26548 (+ (+ (+ (+ ?x26543 (* (* 2.0 l_0_11_189) l_0_11_195)) ?x25674) ?x25676) ?x25678)))
 (let ((?x26555 (- (- (- (- (- (+ (+ ?x26548 ?x25680) ?x25682) ?x25736) ?x25739) ?x25742) ?x25745) ?x25748)))
 (= (- ?x26555 ?x25751) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25820 (* l_0_11_84 l_0_11_84)))
 (let ((?x25818 (* l_0_11_83 l_0_11_83)))
 (let ((?x25816 (* l_0_11_82 l_0_11_82)))
 (let ((?x25814 (* l_0_11_81 l_0_11_81)))
 (let ((?x25812 (* l_0_11_80 l_0_11_80)))
 (let ((?x25810 (* l_0_11_79 l_0_11_79)))
 (let ((?x25808 (* l_0_11_78 l_0_11_78)))
 (let ((?x11121 (* l_0_11_196 l_0_11_196)))
 (let ((?x11118 (* l_0_11_195 l_0_11_195)))
 (let ((?x11024 (* l_0_11_194 l_0_11_194)))
 (let ((?x11060 (* l_0_11_193 l_0_11_193)))
 (let ((?x11054 (* l_0_11_192 l_0_11_192)))
 (let ((?x25352 (* l_0_11_191 l_0_11_191)))
 (let ((?x25350 (* l_0_11_190 l_0_11_190)))
 (let ((?x24356 (* l_0_11_168 l_0_11_168)))
 (let ((?x24354 (* l_0_11_167 l_0_11_167)))
 (let ((?x24352 (* l_0_11_166 l_0_11_166)))
 (let ((?x24336 (* l_0_11_165 l_0_11_165)))
 (let ((?x24332 (* l_0_11_164 l_0_11_164)))
 (let ((?x24328 (* l_0_11_163 l_0_11_163)))
 (let ((?x8079 (* l_0_11_162 l_0_11_162)))
 (let ((?x13393 (* l_0_11_140 l_0_11_140)))
 (let ((?x13394 (* l_0_11_139 l_0_11_139)))
 (let ((?x13392 (* l_0_11_138 l_0_11_138)))
 (let ((?x13386 (* l_0_11_137 l_0_11_137)))
 (let ((?x13380 (* l_0_11_136 l_0_11_136)))
 (let ((?x13374 (* l_0_11_135 l_0_11_135)))
 (let ((?x13368 (* l_0_11_134 l_0_11_134)))
 (let ((?x25806 (* l_0_11_112 l_0_11_112)))
 (let ((?x25804 (* l_0_11_111 l_0_11_111)))
 (let ((?x25802 (* l_0_11_110 l_0_11_110)))
 (let ((?x25800 (* l_0_11_109 l_0_11_109)))
 (let ((?x25798 (* l_0_11_108 l_0_11_108)))
 (let ((?x25799 (+ (+ (* l_0_11_106 l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25798)))
 (let ((?x25807 (+ (+ (+ (+ ?x25799 ?x25800) ?x25802) ?x25804) ?x25806)))
 (let ((?x13390 (- (- (- (- (- (- (- ?x25807 ?x13368) ?x13374) ?x13380) ?x13386) ?x13392) ?x13394) ?x13393)))
 (let ((?x13277 (- (- (- (- (- (- (- ?x13390 ?x8079) ?x24328) ?x24332) ?x24336) ?x24352) ?x24354) ?x24356)))
 (let ((?x26566 (+ (+ (+ (+ (+ (+ (+ ?x13277 ?x25350) ?x25352) ?x11054) ?x11060) ?x11024) ?x11118) ?x11121)))
 (let ((?x26573 (- (- (- (- (- (- (- ?x26566 ?x25808) ?x25810) ?x25812) ?x25814) ?x25816) ?x25818) ?x25820)))
 (= ?x26573 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x11127 (* ?x23048 l_0_11_86)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25841 (* ?x23045 l_0_11_58)))
 (let ((?x26598 (- (* (* (- 2.0) l_0_11_198) l_0_11_212) (* (* 2.0 l_0_11_199) l_0_11_213))))
 (let ((?x26602 (- (- ?x26598 (* (* 2.0 l_0_11_226) l_0_11_240)) (* (* 2.0 l_0_11_227) l_0_11_241))))
 (= (- (+ ?x26602 ?x25841) ?x11127) 0.0))))))))
(assert
 (let ((?x23048 (* 2.0 l_0_11_85)))
 (let ((?x23049 (* ?x23048 l_0_11_91)))
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x23046 (* ?x23045 l_0_11_63)))
 (let ((?x26623 (- (* (* (- 2.0) l_0_11_203) l_0_11_212) (* (* 2.0 l_0_11_204) l_0_11_213))))
 (let ((?x26627 (- (- ?x26623 (* (* 2.0 l_0_11_205) l_0_11_214)) (* (* 2.0 l_0_11_206) l_0_11_215))))
 (let ((?x26631 (- (- ?x26627 (* (* 2.0 l_0_11_231) l_0_11_240)) (* (* 2.0 l_0_11_232) l_0_11_241))))
 (let ((?x26635 (- (- ?x26631 (* (* 2.0 l_0_11_233) l_0_11_242)) (* (* 2.0 l_0_11_234) l_0_11_243))))
 (= (- (+ ?x26635 ?x23046) ?x23049) 0.0))))))))))
(assert
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25415 (* ?x23045 l_0_11_72)))
 (let ((?x26702 (* l_0_11_245 l_0_11_245)))
 (let ((?x26700 (* l_0_11_244 l_0_11_244)))
 (let ((?x26698 (* l_0_11_243 l_0_11_243)))
 (let ((?x26696 (* l_0_11_242 l_0_11_242)))
 (let ((?x26694 (* l_0_11_241 l_0_11_241)))
 (let ((?x26692 (* l_0_11_240 l_0_11_240)))
 (let ((?x26690 (* l_0_11_217 l_0_11_217)))
 (let ((?x26688 (* l_0_11_216 l_0_11_216)))
 (let ((?x26686 (* l_0_11_215 l_0_11_215)))
 (let ((?x26684 (* l_0_11_214 l_0_11_214)))
 (let ((?x26682 (* l_0_11_213 l_0_11_213)))
 (let ((?x26680 (* l_0_11_212 l_0_11_212)))
 (let ((?x26687 (- (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_85) ?x26680) ?x26682) ?x26684) ?x26686)))
 (let ((?x26701 (- (- (- (- (- (- (- ?x26687 ?x26688) ?x26690) ?x26692) ?x26694) ?x26696) ?x26698) ?x26700)))
 (= (+ (- ?x26701 ?x26702) ?x25415) 0.0))))))))))))))))))
(assert
 (let ((?x23045 (* 2.0 l_0_11_57)))
 (let ((?x25428 (* ?x23045 l_0_11_78)))
 (let ((?x13680 (- (* (* (- 2.0) l_0_11_106) l_0_11_85) (* (* 2.0 l_0_11_212) l_0_11_218))))
 (let ((?x13699 (- (- ?x13680 (* (* 2.0 l_0_11_213) l_0_11_219)) (* (* 2.0 l_0_11_214) l_0_11_220))))
 (let ((?x26726 (- (- ?x13699 (* (* 2.0 l_0_11_215) l_0_11_221)) (* (* 2.0 l_0_11_216) l_0_11_222))))
 (let ((?x26732 (- (- ?x26726 (* (* 2.0 l_0_11_217) l_0_11_223)) (* (* 2.0 l_0_11_240) l_0_11_246))))
 (let ((?x26738 (- (- ?x26732 (* (* 2.0 l_0_11_241) l_0_11_247)) (* (* 2.0 l_0_11_242) l_0_11_248))))
 (let ((?x26744 (- (- ?x26738 (* (* 2.0 l_0_11_243) l_0_11_249)) (* (* 2.0 l_0_11_244) l_0_11_250))))
 (= (+ (- ?x26744 (* (* 2.0 l_0_11_245) l_0_11_251)) ?x25428) 0.0))))))))))
(assert
 (let ((?x25443 (* l_0_11_87 l_0_11_87)))
 (let ((?x25441 (* l_0_11_86 l_0_11_86)))
 (let ((?x26785 (- (- (+ (* l_0_11_58 l_0_11_58) (* l_0_11_59 l_0_11_59)) ?x25441) ?x25443)))
 (= ?x26785 0.0)))))
(assert
 (let ((?x23326 (* 2.0 l_0_11_87)))
 (let ((?x23327 (* ?x23326 l_0_11_92)))
 (let ((?x23323 (* 2.0 l_0_11_86)))
 (let ((?x23324 (* ?x23323 l_0_11_91)))
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x23321 (* ?x23320 l_0_11_64)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x23318 (* ?x23317 l_0_11_63)))
 (= (- (- (+ ?x23318 ?x23321) ?x23324) ?x23327) 0.0))))))))))
(assert
 (let ((?x23320 (* 2.0 l_0_11_59)))
 (let ((?x25494 (* ?x23320 l_0_11_73)))
 (let ((?x23317 (* 2.0 l_0_11_58)))
 (let ((?x25492 (* ?x23317 l_0_11_72)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x25485 (* ?x23522 l_0_11_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_100) l_0_11_86) ?x25485) ?x25492) ?x25494) 0.0))))))))
(assert
 (let ((?x23443 (* l_0_11_94 l_0_11_94)))
 (let ((?x23441 (* l_0_11_93 l_0_11_93)))
 (let ((?x23439 (* l_0_11_92 l_0_11_92)))
 (let ((?x23437 (* l_0_11_91 l_0_11_91)))
 (let ((?x23435 (* l_0_11_66 l_0_11_66)))
 (let ((?x23433 (* l_0_11_65 l_0_11_65)))
 (let ((?x13829 (+ (+ (+ (* l_0_11_63 l_0_11_63) (* l_0_11_64 l_0_11_64)) ?x23433) ?x23435)))
 (= (- (- (- (- ?x13829 ?x23437) ?x23439) ?x23441) ?x23443) 0.0)))))))))
(assert
 (let ((?x23222 (* 2.0 l_0_11_66)))
 (let ((?x23551 (* ?x23222 l_0_11_75)))
 (let ((?x23219 (* 2.0 l_0_11_65)))
 (let ((?x23549 (* ?x23219 l_0_11_74)))
 (let ((?x23216 (* 2.0 l_0_11_64)))
 (let ((?x23547 (* ?x23216 l_0_11_73)))
 (let ((?x23213 (* 2.0 l_0_11_63)))
 (let ((?x23545 (* ?x23213 l_0_11_72)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x23529 (* ?x23528 l_0_11_94)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x23526 (* ?x23525 l_0_11_93)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x23523 (* ?x23522 l_0_11_92)))
 (let ((?x26821 (+ (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_91) ?x23523) ?x23526) ?x23529) ?x23545)))
 (= (+ (+ (+ ?x26821 ?x23547) ?x23549) ?x23551) 0.0)))))))))))))))))
(assert
 (let ((?x25713 (* l_0_11_77 l_0_11_77)))
 (let ((?x25711 (* l_0_11_76 l_0_11_76)))
 (let ((?x25709 (* l_0_11_75 l_0_11_75)))
 (let ((?x25707 (* l_0_11_74 l_0_11_74)))
 (let ((?x25705 (* l_0_11_73 l_0_11_73)))
 (let ((?x25703 (* l_0_11_72 l_0_11_72)))
 (let ((?x25701 (* l_0_11_105 l_0_11_105)))
 (let ((?x25699 (* l_0_11_104 l_0_11_104)))
 (let ((?x25697 (* l_0_11_103 l_0_11_103)))
 (let ((?x25695 (* l_0_11_102 l_0_11_102)))
 (let ((?x26828 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25695)))
 (let ((?x26835 (+ (+ (+ (+ (- (- (- ?x26828 ?x25697) ?x25699) ?x25701) ?x25703) ?x25705) ?x25707) ?x25709)))
 (= (+ (+ ?x26835 ?x25711) ?x25713) 0.0))))))))))))))
(assert
 (let ((?x25751 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25748 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25745 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25742 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25739 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25736 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x25733 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x25615 (* 2.0 l_0_11_104)))
 (let ((?x25730 (* ?x25615 l_0_11_110)))
 (let ((?x23528 (* 2.0 l_0_11_103)))
 (let ((?x25728 (* ?x23528 l_0_11_109)))
 (let ((?x23525 (* 2.0 l_0_11_102)))
 (let ((?x25726 (* ?x23525 l_0_11_108)))
 (let ((?x23522 (* 2.0 l_0_11_101)))
 (let ((?x11400 (* ?x23522 l_0_11_107)))
 (let ((?x13884 (- (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_106) ?x11400) ?x25726) ?x25728) ?x25730)))
 (let ((?x26851 (+ (+ (+ (+ (+ (+ (- ?x13884 ?x25733) ?x25736) ?x25739) ?x25742) ?x25745) ?x25748) ?x25751)))
 (= ?x26851 0.0)))))))))))))))))))
(assert
 (let ((?x25820 (* l_0_11_84 l_0_11_84)))
 (let ((?x25818 (* l_0_11_83 l_0_11_83)))
 (let ((?x25816 (* l_0_11_82 l_0_11_82)))
 (let ((?x25814 (* l_0_11_81 l_0_11_81)))
 (let ((?x25812 (* l_0_11_80 l_0_11_80)))
 (let ((?x25810 (* l_0_11_79 l_0_11_79)))
 (let ((?x25808 (* l_0_11_78 l_0_11_78)))
 (let ((?x25806 (* l_0_11_112 l_0_11_112)))
 (let ((?x25804 (* l_0_11_111 l_0_11_111)))
 (let ((?x25802 (* l_0_11_110 l_0_11_110)))
 (let ((?x25800 (* l_0_11_109 l_0_11_109)))
 (let ((?x25798 (* l_0_11_108 l_0_11_108)))
 (let ((?x13912 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25798)))
 (let ((?x26862 (+ (+ (+ (- (- (- (- ?x13912 ?x25800) ?x25802) ?x25804) ?x25806) ?x25808) ?x25810) ?x25812)))
 (= (+ (+ (+ (+ ?x26862 ?x25814) ?x25816) ?x25818) ?x25820) 0.0))))))))))))))))
(assert
 (= (- (* (- l_0_11_197) l_0_11_197) (* l_0_11_225 l_0_11_225)) 0.0))
(assert
 (let ((?x26888 (- (* (* (- 2.0) l_0_11_197) l_0_11_198) (* (* 2.0 l_0_11_225) l_0_11_226))))
 (= ?x26888 0.0)))
(assert
 (let ((?x26903 (- (* (* (- 2.0) l_0_11_197) l_0_11_203) (* (* 2.0 l_0_11_225) l_0_11_231))))
 (= ?x26903 0.0)))
(assert
 (let ((?x26922 (* l_0_11_227 l_0_11_227)))
 (let ((?x26920 (* l_0_11_226 l_0_11_226)))
 (let ((?x26921 (- (- (* (- l_0_11_198) l_0_11_198) (* l_0_11_199 l_0_11_199)) ?x26920)))
 (= (- ?x26921 ?x26922) 0.0)))))
(assert
 (let ((?x13904 (- (* (* (- 2.0) l_0_11_198) l_0_11_203) (* (* 2.0 l_0_11_199) l_0_11_204))))
 (let ((?x13934 (- (- ?x13904 (* (* 2.0 l_0_11_226) l_0_11_231)) (* (* 2.0 l_0_11_227) l_0_11_232))))
 (= ?x13934 0.0))))
(assert
 (let ((?x26962 (* l_0_11_234 l_0_11_234)))
 (let ((?x26960 (* l_0_11_233 l_0_11_233)))
 (let ((?x26958 (* l_0_11_232 l_0_11_232)))
 (let ((?x26956 (* l_0_11_231 l_0_11_231)))
 (let ((?x26954 (* l_0_11_206 l_0_11_206)))
 (let ((?x26952 (* l_0_11_205 l_0_11_205)))
 (let ((?x26953 (- (- (* (- l_0_11_203) l_0_11_203) (* l_0_11_204 l_0_11_204)) ?x26952)))
 (= (- (- (- (- (- ?x26953 ?x26954) ?x26956) ?x26958) ?x26960) ?x26962) 0.0)))))))))
(assert
 (let ((?x27006 (* l_0_11_252 l_0_11_252)))
 (let ((?x27004 (* l_0_11_251 l_0_11_251)))
 (let ((?x27002 (* l_0_11_250 l_0_11_250)))
 (let ((?x27000 (* l_0_11_249 l_0_11_249)))
 (let ((?x26998 (* l_0_11_248 l_0_11_248)))
 (let ((?x26996 (* l_0_11_247 l_0_11_247)))
 (let ((?x26994 (* l_0_11_246 l_0_11_246)))
 (let ((?x26992 (* l_0_11_224 l_0_11_224)))
 (let ((?x26990 (* l_0_11_223 l_0_11_223)))
 (let ((?x26988 (* l_0_11_222 l_0_11_222)))
 (let ((?x26986 (* l_0_11_221 l_0_11_221)))
 (let ((?x26984 (* l_0_11_220 l_0_11_220)))
 (let ((?x26985 (- (- (* (- l_0_11_218) l_0_11_218) (* l_0_11_219 l_0_11_219)) ?x26984)))
 (let ((?x26999 (- (- (- (- (- (- (- ?x26985 ?x26986) ?x26988) ?x26990) ?x26992) ?x26994) ?x26996) ?x26998)))
 (= (- (- (- (- ?x26999 ?x27000) ?x27002) ?x27004) ?x27006) 0.0))))))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_29 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_34 0.0))
(assert
 (>= l_0_11_38 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_49 0.0))
(assert
 (>= l_0_11_56 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_59 0.0))
(assert
 (>= l_0_11_62 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_71 0.0))
(assert
 (>= l_0_11_77 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_112 0.0))
(assert
 (>= l_0_11_113 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_118 0.0))
(assert
 (>= l_0_11_122 0.0))
(assert
 (>= l_0_11_127 0.0))
(assert
 (>= l_0_11_133 0.0))
(assert
 (>= l_0_11_140 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_143 0.0))
(assert
 (>= l_0_11_146 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_155 0.0))
(assert
 (>= l_0_11_161 0.0))
(assert
 (>= l_0_11_168 0.0))
(assert
 (>= l_0_11_169 0.0))
(assert
 (>= l_0_11_171 0.0))
(assert
 (>= l_0_11_174 0.0))
(assert
 (>= l_0_11_178 0.0))
(assert
 (>= l_0_11_183 0.0))
(assert
 (>= l_0_11_189 0.0))
(assert
 (>= l_0_11_196 0.0))
(assert
 (>= l_0_11_197 0.0))
(assert
 (>= l_0_11_199 0.0))
(assert
 (>= l_0_11_202 0.0))
(assert
 (>= l_0_11_206 0.0))
(assert
 (>= l_0_11_211 0.0))
(assert
 (>= l_0_11_217 0.0))
(assert
 (>= l_0_11_224 0.0))
(assert
 (>= l_0_11_225 0.0))
(assert
 (>= l_0_11_227 0.0))
(assert
 (>= l_0_11_230 0.0))
(assert
 (>= l_0_11_234 0.0))
(assert
 (>= l_0_11_239 0.0))
(assert
 (>= l_0_11_245 0.0))
(assert
 (>= l_0_11_252 0.0))
(assert
 (let ((?x27103 (* l_0_12_85 l_0_12_85)))
 (let ((?x27101 (* l_0_12_57 l_0_12_57)))
 (let ((?x27090 (* l_0_12_169 l_0_12_169)))
 (let ((?x27091 (+ (- (* (- l_0_12_113) l_0_12_113) (* l_0_12_141 l_0_12_141)) ?x27090)))
 (let ((?x27097 (- (- ?x27091 (* (* 2.0 l_0_12_197) l_0_12_207)) (* (* 2.0 l_0_12_225) l_0_12_235))))
 (let ((?x27105 (+ (+ (- (- ?x27097 (* (* 2.0 l_0_12_253) l_0_12_263)) ?x27101) ?x27103) 1.0)))
 (= ?x27105 0.0))))))))
(assert
 (let ((?x27124 (* l_0_12_29 l_0_12_29)))
 (let ((?x14073 (- (- (* l_0_12_1 l_0_12_1) (* (* 2.0 l_0_12_169) l_0_12_169)) (* (* 2.0 l_0_12_197) l_0_12_200))))
 (let ((?x27123 (- (- ?x14073 (* (* 2.0 l_0_12_225) l_0_12_228)) (* (* 2.0 l_0_12_253) l_0_12_256))))
 (= (- (- ?x27123 ?x27124) 1.0) 0.0)))))
(assert
 (let ((?x14140 (* l_0_12_253 l_0_12_253)))
 (let ((?x27138 (- (- (* (- l_0_12_197) l_0_12_197) (* l_0_12_225 l_0_12_225)) ?x14140)))
 (= ?x27138 0.0))))
(assert
 (let ((?x27124 (* l_0_12_29 l_0_12_29)))
 (let ((?x27152 (- (+ (* (- l_0_12_1) l_0_12_1) (* l_0_12_141 l_0_12_141)) (* (* 2.0 l_0_12_203) l_0_12_218))))
 (let ((?x27158 (- (- ?x27152 (* (* 2.0 l_0_12_204) l_0_12_219)) (* (* 2.0 l_0_12_205) l_0_12_220))))
 (let ((?x27164 (- (- ?x27158 (* (* 2.0 l_0_12_206) l_0_12_221)) (* (* 2.0 l_0_12_231) l_0_12_246))))
 (let ((?x27170 (- (- ?x27164 (* (* 2.0 l_0_12_232) l_0_12_247)) (* (* 2.0 l_0_12_233) l_0_12_248))))
 (let ((?x27176 (- (- ?x27170 (* (* 2.0 l_0_12_234) l_0_12_249)) (* (* 2.0 l_0_12_259) l_0_12_274))))
 (let ((?x27182 (- (- ?x27176 (* (* 2.0 l_0_12_260) l_0_12_275)) (* (* 2.0 l_0_12_261) l_0_12_276))))
 (= (+ (- ?x27182 (* (* 2.0 l_0_12_262) l_0_12_277)) ?x27124) 0.0)))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x27224 (* ?x14248 l_0_12_91)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x14249 (* ?x14252 l_0_12_63)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x14247 (* ?x14244 l_0_12_30)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14238 (* ?x14234 l_0_12_142)))
 (let ((?x27225 (+ (- (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) ?x14238) ?x14247) ?x14249) ?x27224)))
 (= ?x27225 0.0)))))))))))
(assert
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x27281 (* ?x27280 l_0_12_53)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x27278 (* ?x27277 l_0_12_52)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x27275 (* ?x27274 l_0_12_51)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x27272 (* ?x27271 l_0_12_50)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27269 (* ?x14244 l_0_12_32)))
 (let ((?x27266 (* 2.0 l_0_12_24)))
 (let ((?x27267 (* ?x27266 l_0_12_9)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x27264 (* ?x27263 l_0_12_8)))
 (let ((?x27260 (* 2.0 l_0_12_22)))
 (let ((?x27261 (* ?x27260 l_0_12_7)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27246 (* ?x14234 l_0_12_144)))
 (let ((?x27245 (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) (* (* 2.0 l_0_12_10) l_0_12_25))))
 (let ((?x27253 (- (- (+ ?x27245 ?x27246) (* (* 4.0 l_0_12_175) l_0_12_190)) (* (* 4.0 l_0_12_176) l_0_12_191))))
 (let ((?x27259 (- (- ?x27253 (* (* 4.0 l_0_12_177) l_0_12_192)) (* (* 4.0 l_0_12_178) l_0_12_193))))
 (let ((?x27279 (- (- (- (+ (+ (+ (+ ?x27259 ?x27261) ?x27264) ?x27267) ?x27269) ?x27272) ?x27275) ?x27278)))
 (= (- ?x27279 ?x27281) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27316 (* ?x14244 l_0_12_35)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14345 (* ?x14234 l_0_12_147)))
 (= (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x14345) ?x27316) 0.0))))))
(assert
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27390 (* ?x27389 l_0_12_81)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27387 (* ?x27386 l_0_12_80)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27384 (* ?x27383 l_0_12_79)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27381 (* ?x27380 l_0_12_78)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27378 (* ?x14244 l_0_12_39)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x27364 (* ?x27363 l_0_12_165)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x27361 (* ?x27360 l_0_12_164)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x27358 (* ?x27357 l_0_12_163)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x27355 (* ?x27354 l_0_12_162)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27352 (* ?x14234 l_0_12_151)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x27338 (* ?x27337 l_0_12_94)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x27335 (* ?x27334 l_0_12_93)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x27332 (* ?x27331 l_0_12_92)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x27324 (* ?x27322 l_0_12_91)))
 (let ((?x27339 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x27324) ?x27332) ?x27335) ?x27338)))
 (let ((?x27345 (- (- ?x27339 (* (* 2.0 l_0_12_119) l_0_12_134)) (* (* 2.0 l_0_12_120) l_0_12_135))))
 (let ((?x27351 (- (- ?x27345 (* (* 2.0 l_0_12_121) l_0_12_136)) (* (* 2.0 l_0_12_122) l_0_12_137))))
 (let ((?x27368 (+ (- (- (- (- (+ ?x27351 ?x27352) ?x27355) ?x27358) ?x27361) ?x27364) (* (* 2.0 l_0_12_175) l_0_12_190))))
 (let ((?x27374 (+ (+ ?x27368 (* (* 2.0 l_0_12_176) l_0_12_191)) (* (* 2.0 l_0_12_177) l_0_12_192))))
 (let ((?x27385 (- (- (+ (+ ?x27374 (* (* 2.0 l_0_12_178) l_0_12_193)) ?x27378) ?x27381) ?x27384)))
 (= (- (- ?x27385 ?x27387) ?x27390) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27390 (* ?x27389 l_0_12_81)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27387 (* ?x27386 l_0_12_80)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27384 (* ?x27383 l_0_12_79)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27381 (* ?x27380 l_0_12_78)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27458 (* ?x14244 l_0_12_44)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27456 (* ?x14234 l_0_12_156)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x27338 (* ?x27337 l_0_12_94)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x27335 (* ?x27334 l_0_12_93)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x27332 (* ?x27331 l_0_12_92)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x27324 (* ?x27322 l_0_12_91)))
 (let ((?x27455 (- (- (- (- (* (* (- 2.0) l_0_12_1) l_0_12_16) ?x27324) ?x27332) ?x27335) ?x27338)))
 (= (+ (+ (+ (+ (+ (+ ?x27455 ?x27456) ?x27458) ?x27381) ?x27384) ?x27387) ?x27390) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27469 (* ?x14244 l_0_12_50)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14477 (* ?x14234 l_0_12_162)))
 (= (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) ?x14477) ?x27469) 0.0))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x27501 (* ?x27500 l_0_12_92)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x27498 (* ?x27497 l_0_12_91)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x27495 (* ?x27494 l_0_12_64)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x27492 (* ?x27491 l_0_12_63)))
 (let ((?x27489 (* l_0_12_31 l_0_12_31)))
 (let ((?x27487 (* l_0_12_30 l_0_12_30)))
 (let ((?x27485 (* l_0_12_3 l_0_12_3)))
 (let ((?x27478 (* l_0_12_2 l_0_12_2)))
 (let ((?x27484 (- (+ (* l_0_12_142 l_0_12_142) (* l_0_12_143 l_0_12_143)) ?x27478)))
 (let ((?x27502 (+ (+ (- (- (+ (+ (- ?x27484 ?x27485) ?x27487) ?x27489) ?x27492) ?x27495) ?x27498) ?x27501)))
 (= ?x27502 0.0))))))))))))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x27558 (* ?x27557 l_0_12_93)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x27555 (* ?x27554 l_0_12_92)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x27552 (* ?x27551 l_0_12_91)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x27549 (* ?x27548 l_0_12_65)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x27546 (* ?x27545 l_0_12_64)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x27543 (* ?x27542 l_0_12_63)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27540 (* ?x27539 l_0_12_33)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27537 (* ?x27536 l_0_12_32)))
 (let ((?x27533 (* 2.0 l_0_12_3)))
 (let ((?x27534 (* ?x27533 l_0_12_5)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27531 (* ?x27530 l_0_12_4)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27528 (* ?x27519 l_0_12_145)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27518 (* ?x27516 l_0_12_144)))
 (let ((?x27547 (- (- (+ (+ (- (- (+ ?x27518 ?x27528) ?x27531) ?x27534) ?x27537) ?x27540) ?x27543) ?x27546)))
 (= (+ (+ (+ (- ?x27547 ?x27549) ?x27552) ?x27555) ?x27558) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27619 (* l_0_12_94 l_0_12_94)))
 (let ((?x27617 (* l_0_12_93 l_0_12_93)))
 (let ((?x27615 (* l_0_12_92 l_0_12_92)))
 (let ((?x27613 (* l_0_12_91 l_0_12_91)))
 (let ((?x27611 (* l_0_12_66 l_0_12_66)))
 (let ((?x27609 (* l_0_12_65 l_0_12_65)))
 (let ((?x27607 (* l_0_12_64 l_0_12_64)))
 (let ((?x27605 (* l_0_12_63 l_0_12_63)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27603 (* ?x27539 l_0_12_36)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27601 (* ?x27536 l_0_12_35)))
 (let ((?x27533 (* 2.0 l_0_12_3)))
 (let ((?x27599 (* ?x27533 l_0_12_8)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27588 (* ?x27530 l_0_12_7)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x14583 (* ?x27519 l_0_12_148)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x14581 (* ?x27516 l_0_12_147)))
 (let ((?x27608 (- (- (+ (+ (- (- (+ ?x14581 ?x14583) ?x27588) ?x27599) ?x27601) ?x27603) ?x27605) ?x27607)))
 (= (+ (+ (+ (+ (- (- ?x27608 ?x27609) ?x27611) ?x27613) ?x27615) ?x27617) ?x27619) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27677 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x27674 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x27671 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x27668 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27665 (* ?x27389 l_0_12_70)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27663 (* ?x27386 l_0_12_69)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27661 (* ?x27383 l_0_12_68)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27659 (* ?x27380 l_0_12_67)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27657 (* ?x27539 l_0_12_40)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27655 (* ?x27536 l_0_12_39)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27653 (* ?x27519 l_0_12_152)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27651 (* ?x27516 l_0_12_151)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x27649 (* ?x27648 l_0_12_3)))
 (let ((?x27656 (+ (+ (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x27649) ?x27651) ?x27653) ?x27655)))
 (let ((?x27672 (+ (+ (- (- (- (- (+ ?x27656 ?x27657) ?x27659) ?x27661) ?x27663) ?x27665) ?x27668) ?x27671)))
 (= (+ (+ ?x27672 ?x27674) ?x27677) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27751 (* ?x27389 l_0_12_75)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27749 (* ?x27386 l_0_12_74)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27747 (* ?x27383 l_0_12_73)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27745 (* ?x27380 l_0_12_72)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27743 (* ?x27539 l_0_12_45)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27741 (* ?x27536 l_0_12_44)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x27739 (* ?x27738 l_0_12_3)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x27736 (* ?x27735 l_0_12_2)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27733 (* ?x27519 l_0_12_157)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27731 (* ?x27516 l_0_12_156)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x27729 (* ?x27728 l_0_12_94)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x27726 (* ?x27725 l_0_12_93)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x27712 (* ?x27710 l_0_12_92)))
 (let ((?x27730 (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_91) ?x27712) ?x27726) ?x27729)))
 (let ((?x27746 (- (+ (+ (- (- (+ (+ ?x27730 ?x27731) ?x27733) ?x27736) ?x27739) ?x27741) ?x27743) ?x27745)))
 (= (- (- (- ?x27746 ?x27747) ?x27749) ?x27751) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27390 (* ?x27389 l_0_12_81)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27387 (* ?x27386 l_0_12_80)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27384 (* ?x27383 l_0_12_79)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27381 (* ?x27380 l_0_12_78)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27811 (* ?x27539 l_0_12_51)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27809 (* ?x27536 l_0_12_50)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x27807 (* ?x27263 l_0_12_3)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27805 (* ?x27530 l_0_12_22)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27803 (* ?x27519 l_0_12_163)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27801 (* ?x27516 l_0_12_162)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x27338 (* ?x27337 l_0_12_94)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x27335 (* ?x27334 l_0_12_93)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x27332 (* ?x27331 l_0_12_92)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x27324 (* ?x27322 l_0_12_91)))
 (let ((?x27808 (- (- (+ (+ (+ (+ (+ ?x27324 ?x27332) ?x27335) ?x27338) ?x27801) ?x27803) ?x27805) ?x27807)))
 (= (- (- (- (- (+ (+ ?x27808 ?x27809) ?x27811) ?x27381) ?x27384) ?x27387) ?x27390) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x27865 (* l_0_12_6 l_0_12_6)))
 (let ((?x27863 (* l_0_12_5 l_0_12_5)))
 (let ((?x27861 (* l_0_12_4 l_0_12_4)))
 (let ((?x27859 (* l_0_12_34 l_0_12_34)))
 (let ((?x27857 (* l_0_12_33 l_0_12_33)))
 (let ((?x27855 (* l_0_12_32 l_0_12_32)))
 (let ((?x27853 (* l_0_12_146 l_0_12_146)))
 (let ((?x27854 (+ (+ (* l_0_12_144 l_0_12_144) (* l_0_12_145 l_0_12_145)) ?x27853)))
 (= (- (- (- (+ (+ (+ ?x27854 ?x27855) ?x27857) ?x27859) ?x27861) ?x27863) ?x27865) 0.0))))))))))
(assert
 (let ((?x27898 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x27895 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x27892 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27889 (* ?x27888 l_0_12_37)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27886 (* ?x27885 l_0_12_36)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27883 (* ?x27882 l_0_12_35)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x27880 (* ?x27879 l_0_12_149)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x27877 (* ?x27876 l_0_12_148)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27875 (* ?x27874 l_0_12_147)))
 (let ((?x27896 (- (- (+ (+ (+ (+ (+ ?x27875 ?x27877) ?x27880) ?x27883) ?x27886) ?x27889) ?x27892) ?x27895)))
 (= (- ?x27896 ?x27898) 0.0))))))))))))))))))
(assert
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27951 (* ?x27888 l_0_12_41)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27949 (* ?x27885 l_0_12_40)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27947 (* ?x27882 l_0_12_39)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x27945 (* ?x27879 l_0_12_153)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x27943 (* ?x27876 l_0_12_152)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27941 (* ?x27874 l_0_12_151)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x27939 (* ?x27938 l_0_12_6)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x27936 (* ?x27648 l_0_12_5)))
 (let ((?x27944 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x27936) ?x27939) ?x27941) ?x27943)))
 (= (+ (+ (+ (+ ?x27944 ?x27945) ?x27947) ?x27949) ?x27951) 0.0)))))))))))))))))))
(assert
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27986 (* ?x27888 l_0_12_46)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27984 (* ?x27885 l_0_12_45)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27982 (* ?x27882 l_0_12_44)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x27980 (* ?x27979 l_0_12_6)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x27977 (* ?x27738 l_0_12_5)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x27965 (* ?x27735 l_0_12_4)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x14731 (* ?x27879 l_0_12_158)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x14728 (* ?x27876 l_0_12_157)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27963 (* ?x27874 l_0_12_156)))
 (let ((?x27985 (+ (+ (- (- (- (+ (+ ?x27963 ?x14728) ?x14731) ?x27965) ?x27977) ?x27980) ?x27982) ?x27984)))
 (= (+ ?x27985 ?x27986) 0.0)))))))))))))))))))))
(assert
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x28034 (* ?x27888 l_0_12_52)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x28032 (* ?x27885 l_0_12_51)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x28030 (* ?x27882 l_0_12_50)))
 (let ((?x27266 (* 2.0 l_0_12_24)))
 (let ((?x28028 (* ?x27266 l_0_12_6)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x28026 (* ?x27263 l_0_12_5)))
 (let ((?x27260 (* 2.0 l_0_12_22)))
 (let ((?x28024 (* ?x27260 l_0_12_4)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x28014 (* ?x27879 l_0_12_164)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x28011 (* ?x27876 l_0_12_163)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x28009 (* ?x27874 l_0_12_162)))
 (let ((?x28033 (+ (+ (- (- (- (+ (+ ?x28009 ?x28011) ?x28014) ?x28024) ?x28026) ?x28028) ?x28030) ?x28032)))
 (= (+ ?x28033 ?x28034) 0.0)))))))))))))))))))))
(assert
 (let ((?x28091 (* l_0_12_9 l_0_12_9)))
 (let ((?x28089 (* l_0_12_8 l_0_12_8)))
 (let ((?x28087 (* l_0_12_7 l_0_12_7)))
 (let ((?x28085 (* l_0_12_38 l_0_12_38)))
 (let ((?x28083 (* l_0_12_37 l_0_12_37)))
 (let ((?x28081 (* l_0_12_36 l_0_12_36)))
 (let ((?x28079 (* l_0_12_35 l_0_12_35)))
 (let ((?x28077 (* l_0_12_150 l_0_12_150)))
 (let ((?x28075 (* l_0_12_149 l_0_12_149)))
 (let ((?x28073 (* l_0_12_148 l_0_12_148)))
 (let ((?x28074 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_147 l_0_12_147)) ?x28073)))
 (let ((?x28088 (- (+ (+ (+ (+ (+ (+ ?x28074 ?x28075) ?x28077) ?x28079) ?x28081) ?x28083) ?x28085) ?x28087)))
 (= (- (- ?x28088 ?x28089) ?x28091) 0.0))))))))))))))
(assert
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x28136 (* ?x27280 l_0_12_42)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x28134 (* ?x27277 l_0_12_41)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x28132 (* ?x27274 l_0_12_40)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x28130 (* ?x27271 l_0_12_39)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x28128 (* ?x27363 l_0_12_154)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x28126 (* ?x27360 l_0_12_153)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x28124 (* ?x27357 l_0_12_152)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x28122 (* ?x27354 l_0_12_151)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28120 (* ?x27938 l_0_12_9)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x28118 (* ?x27648 l_0_12_8)))
 (let ((?x28115 (* 2.0 l_0_12_11)))
 (let ((?x28116 (* ?x28115 l_0_12_7)))
 (let ((?x28123 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x28116) ?x28118) ?x28120) ?x28122)))
 (let ((?x28137 (+ (+ (+ (+ (+ (+ (+ ?x28123 ?x28124) ?x28126) ?x28128) ?x28130) ?x28132) ?x28134) ?x28136)))
 (= ?x28137 0.0))))))))))))))))))))))))))
(assert
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x28185 (* ?x27280 l_0_12_47)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x28183 (* ?x27277 l_0_12_46)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x28181 (* ?x27274 l_0_12_45)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x28179 (* ?x27271 l_0_12_44)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x28177 (* ?x27979 l_0_12_9)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x28175 (* ?x27738 l_0_12_8)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x28173 (* ?x27735 l_0_12_7)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x28160 (* ?x27363 l_0_12_159)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x28156 (* ?x27360 l_0_12_158)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x14795 (* ?x27357 l_0_12_157)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x14784 (* ?x27354 l_0_12_156)))
 (let ((?x28161 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x14784) ?x14795) ?x28156) ?x28160)))
 (let ((?x28186 (+ (+ (+ (+ (- (- (- ?x28161 ?x28173) ?x28175) ?x28177) ?x28179) ?x28181) ?x28183) ?x28185)))
 (= ?x28186 0.0))))))))))))))))))))))))))
(assert
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x27281 (* ?x27280 l_0_12_53)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x27278 (* ?x27277 l_0_12_52)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x27275 (* ?x27274 l_0_12_51)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x27272 (* ?x27271 l_0_12_50)))
 (let ((?x27266 (* 2.0 l_0_12_24)))
 (let ((?x27267 (* ?x27266 l_0_12_9)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x27264 (* ?x27263 l_0_12_8)))
 (let ((?x27260 (* 2.0 l_0_12_22)))
 (let ((?x27261 (* ?x27260 l_0_12_7)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x27364 (* ?x27363 l_0_12_165)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x27361 (* ?x27360 l_0_12_164)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x27358 (* ?x27357 l_0_12_163)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x27355 (* ?x27354 l_0_12_162)))
 (let ((?x28215 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_10) l_0_12_25) ?x27355) ?x27358) ?x27361) ?x27364)))
 (let ((?x28233 (+ (+ (+ (+ (- (- (- ?x28215 ?x27261) ?x27264) ?x27267) ?x27272) ?x27275) ?x27278) ?x27281)))
 (= ?x28233 0.0))))))))))))))))))))))))))
(assert
 (let ((?x28265 (* l_0_12_43 l_0_12_43)))
 (let ((?x28263 (* l_0_12_42 l_0_12_42)))
 (let ((?x28261 (* l_0_12_41 l_0_12_41)))
 (let ((?x28259 (* l_0_12_40 l_0_12_40)))
 (let ((?x28257 (* l_0_12_39 l_0_12_39)))
 (let ((?x28255 (* l_0_12_155 l_0_12_155)))
 (let ((?x28253 (* l_0_12_154 l_0_12_154)))
 (let ((?x28251 (* l_0_12_153 l_0_12_153)))
 (let ((?x28249 (* l_0_12_152 l_0_12_152)))
 (let ((?x28247 (* l_0_12_151 l_0_12_151)))
 (let ((?x28245 (* l_0_12_15 l_0_12_15)))
 (let ((?x28243 (* l_0_12_14 l_0_12_14)))
 (let ((?x28241 (* l_0_12_13 l_0_12_13)))
 (let ((?x28242 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x28241)))
 (let ((?x28256 (+ (+ (+ (+ (+ (- (- ?x28242 ?x28243) ?x28245) ?x28247) ?x28249) ?x28251) ?x28253) ?x28255)))
 (= (+ (+ (+ (+ (+ ?x28256 ?x28257) ?x28259) ?x28261) ?x28263) ?x28265) 0.0)))))))))))))))))
(assert
 (let ((?x28324 (* 2.0 l_0_12_43)))
 (let ((?x28325 (* ?x28324 l_0_12_48)))
 (let ((?x28321 (* 2.0 l_0_12_42)))
 (let ((?x28322 (* ?x28321 l_0_12_47)))
 (let ((?x28318 (* 2.0 l_0_12_41)))
 (let ((?x28319 (* ?x28318 l_0_12_46)))
 (let ((?x28315 (* 2.0 l_0_12_40)))
 (let ((?x28316 (* ?x28315 l_0_12_45)))
 (let ((?x28312 (* 2.0 l_0_12_39)))
 (let ((?x28313 (* ?x28312 l_0_12_44)))
 (let ((?x28309 (* 2.0 l_0_12_155)))
 (let ((?x28310 (* ?x28309 l_0_12_160)))
 (let ((?x28306 (* 2.0 l_0_12_154)))
 (let ((?x28307 (* ?x28306 l_0_12_159)))
 (let ((?x28303 (* 2.0 l_0_12_153)))
 (let ((?x28304 (* ?x28303 l_0_12_158)))
 (let ((?x28300 (* 2.0 l_0_12_152)))
 (let ((?x28301 (* ?x28300 l_0_12_157)))
 (let ((?x28297 (* 2.0 l_0_12_151)))
 (let ((?x28298 (* ?x28297 l_0_12_156)))
 (let ((?x28294 (* 2.0 l_0_12_15)))
 (let ((?x28295 (* ?x28294 l_0_12_20)))
 (let ((?x28291 (* 2.0 l_0_12_14)))
 (let ((?x28292 (* ?x28291 l_0_12_19)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28289 (* ?x27938 l_0_12_18)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x28287 (* ?x27648 l_0_12_17)))
 (let ((?x28296 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_16) ?x28287) ?x28289) ?x28292) ?x28295)))
 (let ((?x28317 (+ (+ (+ (+ (+ (+ (+ ?x28296 ?x28298) ?x28301) ?x28304) ?x28307) ?x28310) ?x28313) ?x28316)))
 (= (+ (+ (+ ?x28317 ?x28319) ?x28322) ?x28325) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x28324 (* 2.0 l_0_12_43)))
 (let ((?x28390 (* ?x28324 l_0_12_54)))
 (let ((?x28321 (* 2.0 l_0_12_42)))
 (let ((?x28388 (* ?x28321 l_0_12_53)))
 (let ((?x28318 (* 2.0 l_0_12_41)))
 (let ((?x28386 (* ?x28318 l_0_12_52)))
 (let ((?x28315 (* 2.0 l_0_12_40)))
 (let ((?x28384 (* ?x28315 l_0_12_51)))
 (let ((?x28312 (* 2.0 l_0_12_39)))
 (let ((?x28382 (* ?x28312 l_0_12_50)))
 (let ((?x28309 (* 2.0 l_0_12_155)))
 (let ((?x28380 (* ?x28309 l_0_12_166)))
 (let ((?x28306 (* 2.0 l_0_12_154)))
 (let ((?x28378 (* ?x28306 l_0_12_165)))
 (let ((?x28303 (* 2.0 l_0_12_153)))
 (let ((?x28376 (* ?x28303 l_0_12_164)))
 (let ((?x28300 (* 2.0 l_0_12_152)))
 (let ((?x28374 (* ?x28300 l_0_12_163)))
 (let ((?x28297 (* 2.0 l_0_12_151)))
 (let ((?x28359 (* ?x28297 l_0_12_162)))
 (let ((?x28294 (* 2.0 l_0_12_15)))
 (let ((?x28355 (* ?x28294 l_0_12_26)))
 (let ((?x28291 (* 2.0 l_0_12_14)))
 (let ((?x28351 (* ?x28291 l_0_12_25)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28347 (* ?x27938 l_0_12_24)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x14924 (* ?x27648 l_0_12_23)))
 (let ((?x28357 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_22) ?x14924) ?x28347) ?x28351) ?x28355)))
 (let ((?x28385 (+ (+ (+ (+ (+ (+ (+ ?x28357 ?x28359) ?x28374) ?x28376) ?x28378) ?x28380) ?x28382) ?x28384)))
 (= (+ (+ (+ ?x28385 ?x28386) ?x28388) ?x28390) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x28451 (* l_0_12_49 l_0_12_49)))
 (let ((?x28449 (* l_0_12_48 l_0_12_48)))
 (let ((?x28447 (* l_0_12_47 l_0_12_47)))
 (let ((?x28445 (* l_0_12_46 l_0_12_46)))
 (let ((?x28443 (* l_0_12_45 l_0_12_45)))
 (let ((?x28441 (* l_0_12_44 l_0_12_44)))
 (let ((?x28439 (* l_0_12_21 l_0_12_21)))
 (let ((?x28437 (* l_0_12_20 l_0_12_20)))
 (let ((?x28435 (* l_0_12_19 l_0_12_19)))
 (let ((?x28433 (* l_0_12_18 l_0_12_18)))
 (let ((?x28431 (* l_0_12_17 l_0_12_17)))
 (let ((?x28429 (* l_0_12_161 l_0_12_161)))
 (let ((?x28420 (* l_0_12_160 l_0_12_160)))
 (let ((?x28415 (* l_0_12_16 l_0_12_16)))
 (let ((?x14966 (* l_0_12_159 l_0_12_159)))
 (let ((?x14970 (* l_0_12_158 l_0_12_158)))
 (let ((?x28416 (+ (+ (* l_0_12_156 l_0_12_156) (* l_0_12_157 l_0_12_157)) ?x14970)))
 (let ((?x28436 (- (- (- (+ (+ (- (+ ?x28416 ?x14966) ?x28415) ?x28420) ?x28429) ?x28431) ?x28433) ?x28435)))
 (let ((?x28450 (+ (+ (+ (+ (+ (- (- ?x28436 ?x28437) ?x28439) ?x28441) ?x28443) ?x28445) ?x28447) ?x28449)))
 (= (+ ?x28450 ?x28451) 0.0)))))))))))))))))))))
(assert
 (let ((?x28515 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x28512 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x28509 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x28506 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x28503 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x28500 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x28497 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x28494 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x28491 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x28488 (* ?x27979 l_0_12_24)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x28486 (* ?x27738 l_0_12_23)))
 (let ((?x28484 (* (* 2.0 l_0_12_161) l_0_12_167)))
 (let ((?x28481 (* (* 2.0 l_0_12_160) l_0_12_166)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x28478 (* ?x27735 l_0_12_22)))
 (let ((?x28476 (* (* 2.0 l_0_12_159) l_0_12_165)))
 (let ((?x28473 (* (* 2.0 l_0_12_158) l_0_12_164)))
 (let ((?x28470 (* (* 2.0 l_0_12_157) l_0_12_163)))
 (let ((?x28468 (* (* 2.0 l_0_12_156) l_0_12_162)))
 (let ((?x28487 (- (+ (+ (- (+ (+ (+ ?x28468 ?x28470) ?x28473) ?x28476) ?x28478) ?x28481) ?x28484) ?x28486)))
 (let ((?x28507 (+ (+ (+ (- (- (- (- ?x28487 ?x28488) ?x28491) ?x28494) ?x28497) ?x28500) ?x28503) ?x28506)))
 (= (+ (+ (+ ?x28507 ?x28509) ?x28512) ?x28515) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x28592 (* l_0_12_56 l_0_12_56)))
 (let ((?x28590 (* l_0_12_55 l_0_12_55)))
 (let ((?x28588 (* l_0_12_54 l_0_12_54)))
 (let ((?x28586 (* l_0_12_53 l_0_12_53)))
 (let ((?x28584 (* l_0_12_52 l_0_12_52)))
 (let ((?x28582 (* l_0_12_51 l_0_12_51)))
 (let ((?x28580 (* l_0_12_50 l_0_12_50)))
 (let ((?x28578 (* l_0_12_28 l_0_12_28)))
 (let ((?x28576 (* l_0_12_27 l_0_12_27)))
 (let ((?x28574 (* l_0_12_26 l_0_12_26)))
 (let ((?x28572 (* l_0_12_25 l_0_12_25)))
 (let ((?x28570 (* l_0_12_24 l_0_12_24)))
 (let ((?x28568 (* l_0_12_23 l_0_12_23)))
 (let ((?x28566 (* l_0_12_22 l_0_12_22)))
 (let ((?x28564 (* l_0_12_168 l_0_12_168)))
 (let ((?x28562 (* l_0_12_167 l_0_12_167)))
 (let ((?x28560 (* l_0_12_166 l_0_12_166)))
 (let ((?x28544 (* l_0_12_165 l_0_12_165)))
 (let ((?x15123 (* l_0_12_164 l_0_12_164)))
 (let ((?x15135 (+ (+ (* l_0_12_162 l_0_12_162) (* l_0_12_163 l_0_12_163)) ?x15123)))
 (let ((?x28571 (- (- (- (+ (+ (+ (+ ?x15135 ?x28544) ?x28560) ?x28562) ?x28564) ?x28566) ?x28568) ?x28570)))
 (let ((?x28585 (+ (+ (+ (- (- (- (- ?x28571 ?x28572) ?x28574) ?x28576) ?x28578) ?x28580) ?x28582) ?x28584)))
 (= (+ (+ (+ (+ ?x28585 ?x28586) ?x28588) ?x28590) ?x28592) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x14247 (* ?x14244 l_0_12_30)))
 (let ((?x28611 (- (* (* 2.0 l_0_12_1) l_0_12_2) (* (* 4.0 l_0_12_169) l_0_12_170))))
 (let ((?x28617 (- (- ?x28611 (* (* 2.0 l_0_12_198) l_0_12_200)) (* (* 2.0 l_0_12_199) l_0_12_201))))
 (let ((?x28623 (- (- ?x28617 (* (* 2.0 l_0_12_226) l_0_12_228)) (* (* 2.0 l_0_12_227) l_0_12_229))))
 (let ((?x28629 (- (- ?x28623 (* (* 2.0 l_0_12_254) l_0_12_256)) (* (* 2.0 l_0_12_255) l_0_12_257))))
 (= (- ?x28629 ?x14247) 0.0))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27269 (* ?x14244 l_0_12_32)))
 (let ((?x28671 (* l_0_12_258 l_0_12_258)))
 (let ((?x28669 (* l_0_12_257 l_0_12_257)))
 (let ((?x28667 (* l_0_12_256 l_0_12_256)))
 (let ((?x28665 (* l_0_12_230 l_0_12_230)))
 (let ((?x28663 (* l_0_12_229 l_0_12_229)))
 (let ((?x28661 (* l_0_12_228 l_0_12_228)))
 (let ((?x28659 (* l_0_12_202 l_0_12_202)))
 (let ((?x28657 (* l_0_12_201 l_0_12_201)))
 (let ((?x28655 (* l_0_12_200 l_0_12_200)))
 (let ((?x28654 (- (* (* 2.0 l_0_12_1) l_0_12_4) (* (* 4.0 l_0_12_169) l_0_12_172))))
 (let ((?x28668 (- (- (- (- (- (- (- ?x28654 ?x28655) ?x28657) ?x28659) ?x28661) ?x28663) ?x28665) ?x28667)))
 (= (- (- (- ?x28668 ?x28669) ?x28671) ?x27269) 0.0)))))))))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27316 (* ?x14244 l_0_12_35)))
 (let ((?x15292 (- (* (* 2.0 l_0_12_1) l_0_12_7) (* (* 4.0 l_0_12_169) l_0_12_175))))
 (let ((?x28690 (- (- ?x15292 (* (* 2.0 l_0_12_200) l_0_12_203)) (* (* 2.0 l_0_12_201) l_0_12_204))))
 (let ((?x28696 (- (- ?x28690 (* (* 2.0 l_0_12_202) l_0_12_205)) (* (* 2.0 l_0_12_228) l_0_12_231))))
 (let ((?x28702 (- (- ?x28696 (* (* 2.0 l_0_12_229) l_0_12_232)) (* (* 2.0 l_0_12_230) l_0_12_233))))
 (let ((?x28708 (- (- ?x28702 (* (* 2.0 l_0_12_256) l_0_12_259)) (* (* 2.0 l_0_12_257) l_0_12_260))))
 (= (- (- ?x28708 (* (* 2.0 l_0_12_258) l_0_12_261)) ?x27316) 0.0)))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x28772 (* ?x14248 l_0_12_88)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x28770 (* ?x14252 l_0_12_60)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27378 (* ?x14244 l_0_12_39)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27246 (* ?x14234 l_0_12_144)))
 (let ((?x28745 (- (* (* 2.0 l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_113) l_0_12_116))))
 (let ((?x28750 (- (+ (- ?x28745 ?x27246) (* (* 2.0 l_0_12_169) l_0_12_172)) (* (* 4.0 l_0_12_169) l_0_12_179))))
 (let ((?x28754 (- (- ?x28750 (* (* 2.0 l_0_12_200) l_0_12_207)) (* (* 2.0 l_0_12_201) l_0_12_208))))
 (let ((?x28758 (- (- ?x28754 (* (* 2.0 l_0_12_202) l_0_12_209)) (* (* 2.0 l_0_12_228) l_0_12_235))))
 (let ((?x28762 (- (- ?x28758 (* (* 2.0 l_0_12_229) l_0_12_236)) (* (* 2.0 l_0_12_230) l_0_12_237))))
 (let ((?x28766 (- (- ?x28762 (* (* 2.0 l_0_12_256) l_0_12_263)) (* (* 2.0 l_0_12_257) l_0_12_264))))
 (let ((?x28773 (+ (- (- (- ?x28766 (* (* 2.0 l_0_12_258) l_0_12_265)) ?x27378) ?x28770) ?x28772)))
 (= ?x28773 0.0)))))))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x28772 (* ?x14248 l_0_12_88)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x28770 (* ?x14252 l_0_12_60)))
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27458 (* ?x14244 l_0_12_44)))
 (let ((?x28813 (- (* (* 2.0 l_0_12_1) l_0_12_16) (* (* 4.0 l_0_12_169) l_0_12_184))))
 (let ((?x28817 (- (- ?x28813 (* (* 2.0 l_0_12_200) l_0_12_212)) (* (* 2.0 l_0_12_201) l_0_12_213))))
 (let ((?x28821 (- (- ?x28817 (* (* 2.0 l_0_12_202) l_0_12_214)) (* (* 2.0 l_0_12_228) l_0_12_240))))
 (let ((?x28825 (- (- ?x28821 (* (* 2.0 l_0_12_229) l_0_12_241)) (* (* 2.0 l_0_12_230) l_0_12_242))))
 (let ((?x28829 (- (- ?x28825 (* (* 2.0 l_0_12_256) l_0_12_268)) (* (* 2.0 l_0_12_257) l_0_12_269))))
 (let ((?x28834 (- (+ (- (- ?x28829 (* (* 2.0 l_0_12_258) l_0_12_270)) ?x27458) ?x28770) ?x28772)))
 (= ?x28834 0.0))))))))))))))
(assert
 (let ((?x14244 (* 2.0 l_0_12_29)))
 (let ((?x27469 (* ?x14244 l_0_12_50)))
 (let ((?x15853 (- (* (* 2.0 l_0_12_1) l_0_12_22) (* (* 4.0 l_0_12_169) l_0_12_190))))
 (let ((?x15881 (- (- ?x15853 (* (* 2.0 l_0_12_200) l_0_12_218)) (* (* 2.0 l_0_12_201) l_0_12_219))))
 (let ((?x15888 (- (- ?x15881 (* (* 2.0 l_0_12_202) l_0_12_220)) (* (* 2.0 l_0_12_228) l_0_12_246))))
 (let ((?x28879 (- (- ?x15888 (* (* 2.0 l_0_12_229) l_0_12_247)) (* (* 2.0 l_0_12_230) l_0_12_248))))
 (let ((?x28883 (- (- ?x28879 (* (* 2.0 l_0_12_256) l_0_12_274)) (* (* 2.0 l_0_12_257) l_0_12_275))))
 (= (- (- ?x28883 (* (* 2.0 l_0_12_258) l_0_12_276)) ?x27469) 0.0)))))))))
(assert
 (let ((?x27489 (* l_0_12_31 l_0_12_31)))
 (let ((?x27487 (* l_0_12_30 l_0_12_30)))
 (let ((?x27485 (* l_0_12_3 l_0_12_3)))
 (let ((?x27478 (* l_0_12_2 l_0_12_2)))
 (let ((?x15983 (- (* (* (- 2.0) l_0_12_170) l_0_12_170) (* (* 2.0 l_0_12_171) l_0_12_171))))
 (= (- (- (+ (+ ?x15983 ?x27478) ?x27485) ?x27487) ?x27489) 0.0)))))))
(assert
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27540 (* ?x27539 l_0_12_33)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27537 (* ?x27536 l_0_12_32)))
 (let ((?x27533 (* 2.0 l_0_12_3)))
 (let ((?x27534 (* ?x27533 l_0_12_5)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27531 (* ?x27530 l_0_12_4)))
 (let ((?x28911 (- (* (* (- 4.0) l_0_12_170) l_0_12_172) (* (* 4.0 l_0_12_171) l_0_12_173))))
 (= (- (- (+ (+ ?x28911 ?x27531) ?x27534) ?x27537) ?x27540) 0.0)))))))))))
(assert
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27603 (* ?x27539 l_0_12_36)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27601 (* ?x27536 l_0_12_35)))
 (let ((?x27533 (* 2.0 l_0_12_3)))
 (let ((?x27599 (* ?x27533 l_0_12_8)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27588 (* ?x27530 l_0_12_7)))
 (let ((?x16116 (- (* (* (- 4.0) l_0_12_170) l_0_12_175) (* (* 4.0 l_0_12_171) l_0_12_176))))
 (= (- (- (+ (+ ?x16116 ?x27588) ?x27599) ?x27601) ?x27603) 0.0)))))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x28958 (* ?x27500 l_0_12_89)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x28956 (* ?x27497 l_0_12_88)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x28954 (* ?x27494 l_0_12_61)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x28952 (* ?x27491 l_0_12_60)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27657 (* ?x27539 l_0_12_40)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27655 (* ?x27536 l_0_12_39)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27528 (* ?x27519 l_0_12_145)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27518 (* ?x27516 l_0_12_144)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x27649 (* ?x27648 l_0_12_3)))
 (let ((?x16127 (- (* (* 2.0 l_0_12_11) l_0_12_2) (* (* 2.0 l_0_12_114) l_0_12_116))))
 (let ((?x28939 (- (- (+ (- ?x16127 (* (* 2.0 l_0_12_115) l_0_12_117)) ?x27649) ?x27518) ?x27528)))
 (let ((?x28945 (- (+ ?x28939 (* (* 2.0 l_0_12_170) l_0_12_172)) (* (* 4.0 l_0_12_170) l_0_12_179))))
 (let ((?x28949 (- (+ ?x28945 (* (* 2.0 l_0_12_171) l_0_12_173)) (* (* 4.0 l_0_12_171) l_0_12_180))))
 (= (+ (+ (- (- (- (- ?x28949 ?x27655) ?x27657) ?x28952) ?x28954) ?x28956) ?x28958) 0.0))))))))))))))))))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x28958 (* ?x27500 l_0_12_89)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x28956 (* ?x27497 l_0_12_88)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x28954 (* ?x27494 l_0_12_61)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x28952 (* ?x27491 l_0_12_60)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27743 (* ?x27539 l_0_12_45)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27741 (* ?x27536 l_0_12_44)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x27739 (* ?x27738 l_0_12_3)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x27736 (* ?x27735 l_0_12_2)))
 (let ((?x28982 (- (- (+ ?x27736 ?x27739) (* (* 4.0 l_0_12_170) l_0_12_184)) (* (* 4.0 l_0_12_171) l_0_12_185))))
 (= (- (- (+ (+ (- (- ?x28982 ?x27741) ?x27743) ?x28952) ?x28954) ?x28956) ?x28958) 0.0)))))))))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x28772 (* ?x14248 l_0_12_88)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x28770 (* ?x14252 l_0_12_60)))
 (let ((?x27539 (* 2.0 l_0_12_31)))
 (let ((?x27811 (* ?x27539 l_0_12_51)))
 (let ((?x27536 (* 2.0 l_0_12_30)))
 (let ((?x27809 (* ?x27536 l_0_12_50)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x27807 (* ?x27263 l_0_12_3)))
 (let ((?x27530 (* 2.0 l_0_12_2)))
 (let ((?x27805 (* ?x27530 l_0_12_22)))
 (let ((?x29006 (- (* (* (- 4.0) l_0_12_170) l_0_12_190) (* (* 4.0 l_0_12_171) l_0_12_191))))
 (= (+ (- (- (- (+ (+ ?x29006 ?x27805) ?x27807) ?x27809) ?x27811) ?x28770) ?x28772) 0.0)))))))))))))))
(assert
 (let ((?x27865 (* l_0_12_6 l_0_12_6)))
 (let ((?x27863 (* l_0_12_5 l_0_12_5)))
 (let ((?x27861 (* l_0_12_4 l_0_12_4)))
 (let ((?x27859 (* l_0_12_34 l_0_12_34)))
 (let ((?x27857 (* l_0_12_33 l_0_12_33)))
 (let ((?x27855 (* l_0_12_32 l_0_12_32)))
 (let ((?x29029 (- (* (* (- 2.0) l_0_12_172) l_0_12_172) (* (* 2.0 l_0_12_173) l_0_12_173))))
 (let ((?x29035 (- (- (- (- ?x29029 (* (* 2.0 l_0_12_174) l_0_12_174)) ?x27855) ?x27857) ?x27859)))
 (= (+ (+ (+ ?x29035 ?x27861) ?x27863) ?x27865) 0.0))))))))))
(assert
 (let ((?x27898 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x27895 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x27892 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27889 (* ?x27888 l_0_12_37)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27886 (* ?x27885 l_0_12_36)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27883 (* ?x27882 l_0_12_35)))
 (let ((?x29056 (- (* (* (- 4.0) l_0_12_172) l_0_12_175) (* (* 4.0 l_0_12_173) l_0_12_176))))
 (let ((?x29062 (- (- (- (- ?x29056 (* (* 4.0 l_0_12_174) l_0_12_177)) ?x27883) ?x27886) ?x27889)))
 (= (+ (+ (+ ?x29062 ?x27892) ?x27895) ?x27898) 0.0)))))))))))))
(assert
 (let ((?x29091 (* l_0_12_90 l_0_12_90)))
 (let ((?x29089 (* l_0_12_89 l_0_12_89)))
 (let ((?x29087 (* l_0_12_88 l_0_12_88)))
 (let ((?x29085 (* l_0_12_62 l_0_12_62)))
 (let ((?x29083 (* l_0_12_61 l_0_12_61)))
 (let ((?x29081 (* l_0_12_60 l_0_12_60)))
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27951 (* ?x27888 l_0_12_41)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27949 (* ?x27885 l_0_12_40)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27947 (* ?x27882 l_0_12_39)))
 (let ((?x29048 (* l_0_12_174 l_0_12_174)))
 (let ((?x29042 (* l_0_12_173 l_0_12_173)))
 (let ((?x29040 (* l_0_12_172 l_0_12_172)))
 (let ((?x27853 (* l_0_12_146 l_0_12_146)))
 (let ((?x27851 (* l_0_12_145 l_0_12_145)))
 (let ((?x27850 (* l_0_12_144 l_0_12_144)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x27939 (* ?x27938 l_0_12_6)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x27936 (* ?x27648 l_0_12_5)))
 (let ((?x16293 (* l_0_12_118 l_0_12_118)))
 (let ((?x16281 (* l_0_12_117 l_0_12_117)))
 (let ((?x16287 (- (- (* (* 2.0 l_0_12_11) l_0_12_4) (* l_0_12_116 l_0_12_116)) ?x16281)))
 (let ((?x16349 (- (- (- (- (+ (+ (- ?x16287 ?x16293) ?x27936) ?x27939) ?x27850) ?x27851) ?x27853) (* (* 4.0 l_0_12_172) l_0_12_179))))
 (let ((?x16365 (- (+ (- (+ ?x16349 ?x29040) (* (* 4.0 l_0_12_173) l_0_12_180)) ?x29042) (* (* 4.0 l_0_12_174) l_0_12_181))))
 (let ((?x29086 (- (- (- (- (- (- (+ ?x16365 ?x29048) ?x27947) ?x27949) ?x27951) ?x29081) ?x29083) ?x29085)))
 (= (+ (+ (+ ?x29086 ?x29087) ?x29089) ?x29091) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x29091 (* l_0_12_90 l_0_12_90)))
 (let ((?x29089 (* l_0_12_89 l_0_12_89)))
 (let ((?x29087 (* l_0_12_88 l_0_12_88)))
 (let ((?x29085 (* l_0_12_62 l_0_12_62)))
 (let ((?x29083 (* l_0_12_61 l_0_12_61)))
 (let ((?x29081 (* l_0_12_60 l_0_12_60)))
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x27986 (* ?x27888 l_0_12_46)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x27984 (* ?x27885 l_0_12_45)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x27982 (* ?x27882 l_0_12_44)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x27980 (* ?x27979 l_0_12_6)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x27977 (* ?x27738 l_0_12_5)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x27965 (* ?x27735 l_0_12_4)))
 (let ((?x29120 (- (- (+ ?x27965 ?x27977) (* (* 4.0 l_0_12_172) l_0_12_184)) (* (* 4.0 l_0_12_173) l_0_12_185))))
 (let ((?x29125 (- (- (+ (- ?x29120 (* (* 4.0 l_0_12_174) l_0_12_186)) ?x27980) ?x27982) ?x27984)))
 (let ((?x29132 (- (- (- (+ (+ (+ (- ?x29125 ?x27986) ?x29081) ?x29083) ?x29085) ?x29087) ?x29089) ?x29091)))
 (= ?x29132 0.0)))))))))))))))))))))))
(assert
 (let ((?x27888 (* 2.0 l_0_12_34)))
 (let ((?x28034 (* ?x27888 l_0_12_52)))
 (let ((?x27885 (* 2.0 l_0_12_33)))
 (let ((?x28032 (* ?x27885 l_0_12_51)))
 (let ((?x27882 (* 2.0 l_0_12_32)))
 (let ((?x28030 (* ?x27882 l_0_12_50)))
 (let ((?x27266 (* 2.0 l_0_12_24)))
 (let ((?x28028 (* ?x27266 l_0_12_6)))
 (let ((?x27263 (* 2.0 l_0_12_23)))
 (let ((?x28026 (* ?x27263 l_0_12_5)))
 (let ((?x27260 (* 2.0 l_0_12_22)))
 (let ((?x28024 (* ?x27260 l_0_12_4)))
 (let ((?x16547 (- (* (* (- 4.0) l_0_12_172) l_0_12_190) (* (* 4.0 l_0_12_173) l_0_12_191))))
 (let ((?x29147 (+ (+ (+ (- ?x16547 (* (* 4.0 l_0_12_174) l_0_12_192)) ?x28024) ?x28026) ?x28028)))
 (= (- (- (- ?x29147 ?x28030) ?x28032) ?x28034) 0.0))))))))))))))))
(assert
 (let ((?x28091 (* l_0_12_9 l_0_12_9)))
 (let ((?x28089 (* l_0_12_8 l_0_12_8)))
 (let ((?x28087 (* l_0_12_7 l_0_12_7)))
 (let ((?x28085 (* l_0_12_38 l_0_12_38)))
 (let ((?x28083 (* l_0_12_37 l_0_12_37)))
 (let ((?x28081 (* l_0_12_36 l_0_12_36)))
 (let ((?x28079 (* l_0_12_35 l_0_12_35)))
 (let ((?x14759 (* l_0_12_10 l_0_12_10)))
 (let ((?x15607 (- (- ?x14759 (* (* 2.0 l_0_12_175) l_0_12_175)) (* (* 2.0 l_0_12_176) l_0_12_176))))
 (let ((?x29162 (- (- ?x15607 (* (* 2.0 l_0_12_177) l_0_12_177)) (* (* 2.0 l_0_12_178) l_0_12_178))))
 (let ((?x29169 (+ (+ (+ (- (- (- (- ?x29162 ?x28079) ?x28081) ?x28083) ?x28085) ?x28087) ?x28089) ?x28091)))
 (= ?x29169 0.0)))))))))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x27558 (* ?x27557 l_0_12_93)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x27555 (* ?x27554 l_0_12_92)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x27552 (* ?x27551 l_0_12_91)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x27549 (* ?x27548 l_0_12_65)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x27546 (* ?x27545 l_0_12_64)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x27543 (* ?x27542 l_0_12_63)))
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x28136 (* ?x27280 l_0_12_42)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x28134 (* ?x27277 l_0_12_41)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x28132 (* ?x27274 l_0_12_40)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x28130 (* ?x27271 l_0_12_39)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x27880 (* ?x27879 l_0_12_149)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x27877 (* ?x27876 l_0_12_148)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27875 (* ?x27874 l_0_12_147)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28120 (* ?x27938 l_0_12_9)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x28118 (* ?x27648 l_0_12_8)))
 (let ((?x28115 (* 2.0 l_0_12_11)))
 (let ((?x28116 (* ?x28115 l_0_12_7)))
 (let ((?x16661 (- (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x28116) (* (* 2.0 l_0_12_116) l_0_12_119))))
 (let ((?x16600 (- (- ?x16661 (* (* 2.0 l_0_12_117) l_0_12_120)) (* (* 2.0 l_0_12_118) l_0_12_121))))
 (let ((?x29183 (+ (- (- (- (+ (+ ?x16600 ?x28118) ?x28120) ?x27875) ?x27877) ?x27880) (* (* 2.0 l_0_12_172) l_0_12_175))))
 (let ((?x29187 (+ (+ ?x29183 (* (* 2.0 l_0_12_173) l_0_12_176)) (* (* 2.0 l_0_12_174) l_0_12_177))))
 (let ((?x29191 (- (- ?x29187 (* (* 4.0 l_0_12_175) l_0_12_179)) (* (* 4.0 l_0_12_176) l_0_12_180))))
 (let ((?x29195 (- (- ?x29191 (* (* 4.0 l_0_12_177) l_0_12_181)) (* (* 4.0 l_0_12_178) l_0_12_182))))
 (let ((?x29202 (- (- (- (- (- (- (- ?x29195 ?x28130) ?x28132) ?x28134) ?x28136) ?x27543) ?x27546) ?x27549)))
 (= (+ (+ (+ ?x29202 ?x27552) ?x27555) ?x27558) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x27558 (* ?x27557 l_0_12_93)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x27555 (* ?x27554 l_0_12_92)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x27552 (* ?x27551 l_0_12_91)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x27549 (* ?x27548 l_0_12_65)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x27546 (* ?x27545 l_0_12_64)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x27543 (* ?x27542 l_0_12_63)))
 (let ((?x27280 (* 2.0 l_0_12_38)))
 (let ((?x28185 (* ?x27280 l_0_12_47)))
 (let ((?x27277 (* 2.0 l_0_12_37)))
 (let ((?x28183 (* ?x27277 l_0_12_46)))
 (let ((?x27274 (* 2.0 l_0_12_36)))
 (let ((?x28181 (* ?x27274 l_0_12_45)))
 (let ((?x27271 (* 2.0 l_0_12_35)))
 (let ((?x28179 (* ?x27271 l_0_12_44)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x28177 (* ?x27979 l_0_12_9)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x28175 (* ?x27738 l_0_12_8)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x28173 (* ?x27735 l_0_12_7)))
 (let ((?x16727 (- (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x28173) ?x28175) (* (* 4.0 l_0_12_175) l_0_12_184))))
 (let ((?x16717 (- (- ?x16727 (* (* 4.0 l_0_12_176) l_0_12_185)) (* (* 4.0 l_0_12_177) l_0_12_186))))
 (let ((?x16701 (- (- (+ (- ?x16717 (* (* 4.0 l_0_12_178) l_0_12_187)) ?x28177) ?x28179) ?x28181)))
 (let ((?x29224 (- (- (+ (+ (+ (- (- ?x16701 ?x28183) ?x28185) ?x27543) ?x27546) ?x27549) ?x27552) ?x27555)))
 (= (- ?x29224 ?x27558) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x29286 (* ?x27557 l_0_12_97)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x29284 (* ?x27554 l_0_12_96)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x29282 (* ?x27551 l_0_12_95)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29280 (* ?x27548 l_0_12_69)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29278 (* ?x27545 l_0_12_68)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29276 (* ?x27542 l_0_12_67)))
 (let ((?x28265 (* l_0_12_43 l_0_12_43)))
 (let ((?x28263 (* l_0_12_42 l_0_12_42)))
 (let ((?x28261 (* l_0_12_41 l_0_12_41)))
 (let ((?x28259 (* l_0_12_40 l_0_12_40)))
 (let ((?x28257 (* l_0_12_39 l_0_12_39)))
 (let ((?x28245 (* l_0_12_15 l_0_12_15)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x27945 (* ?x27879 l_0_12_153)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x27943 (* ?x27876 l_0_12_152)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27941 (* ?x27874 l_0_12_151)))
 (let ((?x28243 (* l_0_12_14 l_0_12_14)))
 (let ((?x28241 (* l_0_12_13 l_0_12_13)))
 (let ((?x14884 (* l_0_12_12 l_0_12_12)))
 (let ((?x14891 (* l_0_12_11 l_0_12_11)))
 (let ((?x16915 (- (- ?x14891 (* (* 2.0 l_0_12_116) l_0_12_123)) (* (* 2.0 l_0_12_117) l_0_12_124))))
 (let ((?x29245 (+ (+ (+ (- ?x16915 (* (* 2.0 l_0_12_118) l_0_12_125)) ?x14884) ?x28241) ?x28243)))
 (let ((?x29251 (+ (+ (- (- (- ?x29245 ?x27941) ?x27943) ?x27945) ?x28245) (* (* 2.0 l_0_12_172) l_0_12_179))))
 (let ((?x29255 (+ (+ ?x29251 (* (* 2.0 l_0_12_173) l_0_12_180)) (* (* 2.0 l_0_12_174) l_0_12_181))))
 (let ((?x29261 (- (- ?x29255 (* (* 2.0 l_0_12_179) l_0_12_179)) (* (* 2.0 l_0_12_180) l_0_12_180))))
 (let ((?x29267 (- (- ?x29261 (* (* 2.0 l_0_12_181) l_0_12_181)) (* (* 2.0 l_0_12_182) l_0_12_182))))
 (let ((?x29273 (- (- (- (- ?x29267 (* (* 2.0 l_0_12_183) l_0_12_183)) ?x28257) ?x28259) ?x28261)))
 (let ((?x29285 (+ (+ (- (- (- (- (- ?x29273 ?x28263) ?x28265) ?x29276) ?x29278) ?x29280) ?x29282) ?x29284)))
 (= (+ ?x29285 ?x29286) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x29286 (* ?x27557 l_0_12_97)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x29284 (* ?x27554 l_0_12_96)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x29282 (* ?x27551 l_0_12_95)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29361 (* ?x27548 l_0_12_74)))
 (let ((?x29280 (* ?x27548 l_0_12_69)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29358 (* ?x27545 l_0_12_73)))
 (let ((?x29278 (* ?x27545 l_0_12_68)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29355 (* ?x27542 l_0_12_72)))
 (let ((?x29276 (* ?x27542 l_0_12_67)))
 (let ((?x28324 (* 2.0 l_0_12_43)))
 (let ((?x28325 (* ?x28324 l_0_12_48)))
 (let ((?x28321 (* 2.0 l_0_12_42)))
 (let ((?x28322 (* ?x28321 l_0_12_47)))
 (let ((?x28318 (* 2.0 l_0_12_41)))
 (let ((?x28319 (* ?x28318 l_0_12_46)))
 (let ((?x28315 (* 2.0 l_0_12_40)))
 (let ((?x28316 (* ?x28315 l_0_12_45)))
 (let ((?x28312 (* 2.0 l_0_12_39)))
 (let ((?x28313 (* ?x28312 l_0_12_44)))
 (let ((?x28294 (* 2.0 l_0_12_15)))
 (let ((?x28295 (* ?x28294 l_0_12_20)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x14731 (* ?x27879 l_0_12_158)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x14728 (* ?x27876 l_0_12_157)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x27963 (* ?x27874 l_0_12_156)))
 (let ((?x28291 (* 2.0 l_0_12_14)))
 (let ((?x28292 (* ?x28291 l_0_12_19)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28289 (* ?x27938 l_0_12_18)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x28287 (* ?x27648 l_0_12_17)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x17048 (* ?x27725 l_0_12_90)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x17144 (* ?x27710 l_0_12_89)))
 (let ((?x29312 (+ (+ (* (* 2.0 l_0_12_100) l_0_12_88) ?x17144) ?x17048)))
 (let ((?x29316 (- (+ ?x29312 (* (* 2.0 l_0_12_11) l_0_12_16)) (* (* 2.0 l_0_12_116) l_0_12_128))))
 (let ((?x29320 (- (- ?x29316 (* (* 2.0 l_0_12_117) l_0_12_129)) (* (* 2.0 l_0_12_118) l_0_12_130))))
 (let ((?x29327 (+ (- (- (- (+ (+ (+ ?x29320 ?x28287) ?x28289) ?x28292) ?x27963) ?x14728) ?x14731) ?x28295)))
 (let ((?x29331 (+ (+ ?x29327 (* (* 2.0 l_0_12_172) l_0_12_184)) (* (* 2.0 l_0_12_173) l_0_12_185))))
 (let ((?x29336 (- (+ ?x29331 (* (* 2.0 l_0_12_174) l_0_12_186)) (* (* 4.0 l_0_12_179) l_0_12_184))))
 (let ((?x29342 (- (- ?x29336 (* (* 4.0 l_0_12_180) l_0_12_185)) (* (* 4.0 l_0_12_181) l_0_12_186))))
 (let ((?x29348 (- (- ?x29342 (* (* 4.0 l_0_12_182) l_0_12_187)) (* (* 4.0 l_0_12_183) l_0_12_188))))
 (let ((?x29356 (- (+ (- (- (- (- (- ?x29348 ?x28313) ?x28316) ?x28319) ?x28322) ?x28325) ?x29276) ?x29355)))
 (let ((?x29365 (- (- (- (- (+ (- (+ ?x29356 ?x29278) ?x29358) ?x29280) ?x29361) ?x29282) ?x29284) ?x29286)))
 (= ?x29365 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29453 (* ?x27548 l_0_12_80)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29451 (* ?x27545 l_0_12_79)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29449 (* ?x27542 l_0_12_78)))
 (let ((?x28324 (* 2.0 l_0_12_43)))
 (let ((?x28390 (* ?x28324 l_0_12_54)))
 (let ((?x28321 (* 2.0 l_0_12_42)))
 (let ((?x28388 (* ?x28321 l_0_12_53)))
 (let ((?x28318 (* 2.0 l_0_12_41)))
 (let ((?x28386 (* ?x28318 l_0_12_52)))
 (let ((?x28315 (* 2.0 l_0_12_40)))
 (let ((?x28384 (* ?x28315 l_0_12_51)))
 (let ((?x28312 (* 2.0 l_0_12_39)))
 (let ((?x28382 (* ?x28312 l_0_12_50)))
 (let ((?x28294 (* 2.0 l_0_12_15)))
 (let ((?x28355 (* ?x28294 l_0_12_26)))
 (let ((?x27879 (* 2.0 l_0_12_146)))
 (let ((?x28014 (* ?x27879 l_0_12_164)))
 (let ((?x27876 (* 2.0 l_0_12_145)))
 (let ((?x28011 (* ?x27876 l_0_12_163)))
 (let ((?x27874 (* 2.0 l_0_12_144)))
 (let ((?x28009 (* ?x27874 l_0_12_162)))
 (let ((?x28291 (* 2.0 l_0_12_14)))
 (let ((?x28351 (* ?x28291 l_0_12_25)))
 (let ((?x27938 (* 2.0 l_0_12_13)))
 (let ((?x28347 (* ?x27938 l_0_12_24)))
 (let ((?x27648 (* 2.0 l_0_12_12)))
 (let ((?x14924 (* ?x27648 l_0_12_23)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29411 (* ?x27334 l_0_12_90)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x17344 (* ?x27331 l_0_12_89)))
 (let ((?x29412 (+ (+ (* (* 2.0 l_0_12_106) l_0_12_88) ?x17344) ?x29411)))
 (let ((?x29416 (- (+ ?x29412 (* (* 2.0 l_0_12_11) l_0_12_22)) (* (* 2.0 l_0_12_116) l_0_12_134))))
 (let ((?x29420 (- (- ?x29416 (* (* 2.0 l_0_12_117) l_0_12_135)) (* (* 2.0 l_0_12_118) l_0_12_136))))
 (let ((?x29427 (+ (- (- (- (+ (+ (+ ?x29420 ?x14924) ?x28347) ?x28351) ?x28009) ?x28011) ?x28014) ?x28355)))
 (let ((?x29431 (+ (+ ?x29427 (* (* 2.0 l_0_12_172) l_0_12_190)) (* (* 2.0 l_0_12_173) l_0_12_191))))
 (let ((?x29435 (- (+ ?x29431 (* (* 2.0 l_0_12_174) l_0_12_192)) (* (* 4.0 l_0_12_179) l_0_12_190))))
 (let ((?x29439 (- (- ?x29435 (* (* 4.0 l_0_12_180) l_0_12_191)) (* (* 4.0 l_0_12_181) l_0_12_192))))
 (let ((?x29443 (- (- ?x29439 (* (* 4.0 l_0_12_182) l_0_12_193)) (* (* 4.0 l_0_12_183) l_0_12_194))))
 (let ((?x29452 (- (- (- (- (- (- (- ?x29443 ?x28382) ?x28384) ?x28386) ?x28388) ?x28390) ?x29449) ?x29451)))
 (= (- ?x29452 ?x29453) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29361 (* ?x27548 l_0_12_74)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29358 (* ?x27545 l_0_12_73)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29355 (* ?x27542 l_0_12_72)))
 (let ((?x28451 (* l_0_12_49 l_0_12_49)))
 (let ((?x28449 (* l_0_12_48 l_0_12_48)))
 (let ((?x28447 (* l_0_12_47 l_0_12_47)))
 (let ((?x28445 (* l_0_12_46 l_0_12_46)))
 (let ((?x28443 (* l_0_12_45 l_0_12_45)))
 (let ((?x28441 (* l_0_12_44 l_0_12_44)))
 (let ((?x28439 (* l_0_12_21 l_0_12_21)))
 (let ((?x28437 (* l_0_12_20 l_0_12_20)))
 (let ((?x28435 (* l_0_12_19 l_0_12_19)))
 (let ((?x28433 (* l_0_12_18 l_0_12_18)))
 (let ((?x28431 (* l_0_12_17 l_0_12_17)))
 (let ((?x28415 (* l_0_12_16 l_0_12_16)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x17048 (* ?x27725 l_0_12_90)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x17144 (* ?x27710 l_0_12_89)))
 (let ((?x29490 (+ (+ (- (- (* (* (- 2.0) l_0_12_100) l_0_12_88) ?x17144) ?x17048) ?x28415) ?x28431)))
 (let ((?x29497 (- (- (+ ?x29490 ?x28433) (* (* 2.0 l_0_12_184) l_0_12_184)) (* (* 2.0 l_0_12_185) l_0_12_185))))
 (let ((?x29503 (- (- ?x29497 (* (* 2.0 l_0_12_186) l_0_12_186)) (* (* 2.0 l_0_12_187) l_0_12_187))))
 (let ((?x29509 (- (- ?x29503 (* (* 2.0 l_0_12_188) l_0_12_188)) (* (* 2.0 l_0_12_189) l_0_12_189))))
 (let ((?x29516 (- (- (- (- (+ (+ (+ ?x29509 ?x28435) ?x28437) ?x28439) ?x28441) ?x28443) ?x28445) ?x28447)))
 (= (+ (+ (+ (- (- ?x29516 ?x28449) ?x28451) ?x29355) ?x29358) ?x29361) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29453 (* ?x27548 l_0_12_80)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29451 (* ?x27545 l_0_12_79)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29449 (* ?x27542 l_0_12_78)))
 (let ((?x28515 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x28512 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x28509 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x28506 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x28503 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x28500 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x28497 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x28494 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x28491 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x27979 (* 2.0 l_0_12_18)))
 (let ((?x28488 (* ?x27979 l_0_12_24)))
 (let ((?x27738 (* 2.0 l_0_12_17)))
 (let ((?x28486 (* ?x27738 l_0_12_23)))
 (let ((?x27735 (* 2.0 l_0_12_16)))
 (let ((?x28478 (* ?x27735 l_0_12_22)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29411 (* ?x27334 l_0_12_90)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x17344 (* ?x27331 l_0_12_89)))
 (let ((?x17594 (+ (+ (- (- (* (* (- 2.0) l_0_12_106) l_0_12_88) ?x17344) ?x29411) ?x28478) ?x28486)))
 (let ((?x29553 (- (- (+ ?x17594 ?x28488) (* (* 4.0 l_0_12_184) l_0_12_190)) (* (* 4.0 l_0_12_185) l_0_12_191))))
 (let ((?x29559 (- (- ?x29553 (* (* 4.0 l_0_12_186) l_0_12_192)) (* (* 4.0 l_0_12_187) l_0_12_193))))
 (let ((?x29565 (- (- ?x29559 (* (* 4.0 l_0_12_188) l_0_12_194)) (* (* 4.0 l_0_12_189) l_0_12_195))))
 (let ((?x29572 (- (- (- (- (+ (+ (+ ?x29565 ?x28491) ?x28494) ?x28497) ?x28500) ?x28503) ?x28506) ?x28509)))
 (= (+ (+ (+ (- (- ?x29572 ?x28512) ?x28515) ?x29449) ?x29451) ?x29453) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x28592 (* l_0_12_56 l_0_12_56)))
 (let ((?x28590 (* l_0_12_55 l_0_12_55)))
 (let ((?x28588 (* l_0_12_54 l_0_12_54)))
 (let ((?x28586 (* l_0_12_53 l_0_12_53)))
 (let ((?x28584 (* l_0_12_52 l_0_12_52)))
 (let ((?x28582 (* l_0_12_51 l_0_12_51)))
 (let ((?x28580 (* l_0_12_50 l_0_12_50)))
 (let ((?x28578 (* l_0_12_28 l_0_12_28)))
 (let ((?x28576 (* l_0_12_27 l_0_12_27)))
 (let ((?x28574 (* l_0_12_26 l_0_12_26)))
 (let ((?x28572 (* l_0_12_25 l_0_12_25)))
 (let ((?x28570 (* l_0_12_24 l_0_12_24)))
 (let ((?x28568 (* l_0_12_23 l_0_12_23)))
 (let ((?x28566 (* l_0_12_22 l_0_12_22)))
 (let ((?x17793 (- (* (* (- 2.0) l_0_12_190) l_0_12_190) (* (* 2.0 l_0_12_191) l_0_12_191))))
 (let ((?x17747 (- (- ?x17793 (* (* 2.0 l_0_12_192) l_0_12_192)) (* (* 2.0 l_0_12_193) l_0_12_193))))
 (let ((?x17701 (- (- ?x17747 (* (* 2.0 l_0_12_194) l_0_12_194)) (* (* 2.0 l_0_12_195) l_0_12_195))))
 (let ((?x29602 (+ (+ (+ (- ?x17701 (* (* 2.0 l_0_12_196) l_0_12_196)) ?x28566) ?x28568) ?x28570)))
 (let ((?x29609 (- (- (- (+ (+ (+ (+ ?x29602 ?x28572) ?x28574) ?x28576) ?x28578) ?x28580) ?x28582) ?x28584)))
 (= (- (- (- (- ?x29609 ?x28586) ?x28588) ?x28590) ?x28592) 0.0)))))))))))))))))))))
(assert
 (let ((?x27103 (* l_0_12_85 l_0_12_85)))
 (let ((?x27101 (* l_0_12_57 l_0_12_57)))
 (let ((?x17943 (- (* (* (- 2.0) l_0_12_198) l_0_12_218) (* (* 2.0 l_0_12_199) l_0_12_219))))
 (let ((?x17918 (- (- ?x17943 (* (* 2.0 l_0_12_226) l_0_12_246)) (* (* 2.0 l_0_12_227) l_0_12_247))))
 (let ((?x17913 (- (- ?x17918 (* (* 2.0 l_0_12_254) l_0_12_274)) (* (* 2.0 l_0_12_255) l_0_12_275))))
 (= (+ (- ?x17913 ?x27101) ?x27103) 0.0)))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x18128 (* ?x14248 l_0_12_86)))
 (= (+ (* (* (- 2.0) l_0_12_57) l_0_12_58) ?x18128) 0.0))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x29663 (* ?x14248 l_0_12_95)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29661 (* ?x27494 l_0_12_79)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29659 (* ?x27491 l_0_12_78)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x29657 (* ?x14252 l_0_12_67)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27803 (* ?x27519 l_0_12_163)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27801 (* ?x27516 l_0_12_162)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29641 (* ?x27331 l_0_12_87)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29639 (* ?x27322 l_0_12_86)))
 (let ((?x29642 (+ ?x29639 ?x29641)))
 (let ((?x29650 (- (- ?x29642 (* (* 2.0 l_0_12_114) l_0_12_134)) (* (* 2.0 l_0_12_115) l_0_12_135))))
 (let ((?x29656 (+ (+ (- (- ?x29650 ?x27801) ?x27803) (* (* 2.0 l_0_12_170) l_0_12_190)) (* (* 2.0 l_0_12_171) l_0_12_191))))
 (= (+ (- (- (- ?x29656 ?x29657) ?x29659) ?x29661) ?x29663) 0.0)))))))))))))))))))))
(assert
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29661 (* ?x27494 l_0_12_79)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29659 (* ?x27491 l_0_12_78)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x29689 (* ?x14252 l_0_12_72)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29641 (* ?x27331 l_0_12_87)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29639 (* ?x27322 l_0_12_86)))
 (let ((?x14634 (* 2.0 l_0_12_100)))
 (let ((?x18283 (* ?x14634 l_0_12_85)))
 (= (+ (+ (- (- (- ?x18283 ?x29639) ?x29641) ?x29689) ?x29659) ?x29661) 0.0))))))))))))))
(assert
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x18312 (* ?x14252 l_0_12_78)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x18311 (* ?x27322 l_0_12_85)))
 (= (- ?x18311 ?x18312) 0.0))))))
(assert
 (let ((?x29714 (* l_0_12_87 l_0_12_87)))
 (let ((?x29712 (* l_0_12_86 l_0_12_86)))
 (let ((?x29713 (+ (- (* (- l_0_12_58) l_0_12_58) (* l_0_12_59 l_0_12_59)) ?x29712)))
 (= (+ ?x29713 ?x29714) 0.0)))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x28958 (* ?x27500 l_0_12_89)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x28956 (* ?x27497 l_0_12_88)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x28954 (* ?x27494 l_0_12_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_58) l_0_12_60) ?x28954) ?x28956) ?x28958) 0.0))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x29739 (* ?x27500 l_0_12_96)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x29737 (* ?x27497 l_0_12_95)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29735 (* ?x27494 l_0_12_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_58) l_0_12_67) ?x29735) ?x29737) ?x29739) 0.0))))))))
(assert
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29762 (* ?x27494 l_0_12_73)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29760 (* ?x27491 l_0_12_72)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29753 (* ?x27710 l_0_12_87)))
 (let ((?x29754 (+ (* (* 2.0 l_0_12_100) l_0_12_86) ?x29753)))
 (= (- (- ?x29754 ?x29760) ?x29762) 0.0)))))))))
(assert
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29661 (* ?x27494 l_0_12_79)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29659 (* ?x27491 l_0_12_78)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29641 (* ?x27331 l_0_12_87)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29639 (* ?x27322 l_0_12_86)))
 (let ((?x29642 (+ ?x29639 ?x29641)))
 (= (- (- ?x29642 ?x29659) ?x29661) 0.0)))))))))))
(assert
 (let ((?x29091 (* l_0_12_90 l_0_12_90)))
 (let ((?x29089 (* l_0_12_89 l_0_12_89)))
 (let ((?x29087 (* l_0_12_88 l_0_12_88)))
 (let ((?x29085 (* l_0_12_62 l_0_12_62)))
 (let ((?x29792 (- (- (* (- l_0_12_60) l_0_12_60) (* l_0_12_61 l_0_12_61)) ?x29085)))
 (= (+ (+ (+ ?x29792 ?x29087) ?x29089) ?x29091) 0.0)))))))
(assert
 (let ((?x27557 (* 2.0 l_0_12_90)))
 (let ((?x29286 (* ?x27557 l_0_12_97)))
 (let ((?x27554 (* 2.0 l_0_12_89)))
 (let ((?x29284 (* ?x27554 l_0_12_96)))
 (let ((?x27551 (* 2.0 l_0_12_88)))
 (let ((?x29282 (* ?x27551 l_0_12_95)))
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29280 (* ?x27548 l_0_12_69)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29278 (* ?x27545 l_0_12_68)))
 (let ((?x29805 (+ (+ (- (- (* (* (- 2.0) l_0_12_60) l_0_12_67) ?x29278) ?x29280) ?x29282) ?x29284)))
 (= (+ ?x29805 ?x29286) 0.0)))))))))))))
(assert
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29361 (* ?x27548 l_0_12_74)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29358 (* ?x27545 l_0_12_73)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29355 (* ?x27542 l_0_12_72)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x17048 (* ?x27725 l_0_12_90)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x17144 (* ?x27710 l_0_12_89)))
 (let ((?x29312 (+ (+ (* (* 2.0 l_0_12_100) l_0_12_88) ?x17144) ?x17048)))
 (= (- (- (- ?x29312 ?x29355) ?x29358) ?x29361) 0.0)))))))))))))
(assert
 (let ((?x27548 (* 2.0 l_0_12_62)))
 (let ((?x29453 (* ?x27548 l_0_12_80)))
 (let ((?x27545 (* 2.0 l_0_12_61)))
 (let ((?x29451 (* ?x27545 l_0_12_79)))
 (let ((?x27542 (* 2.0 l_0_12_60)))
 (let ((?x29449 (* ?x27542 l_0_12_78)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29411 (* ?x27334 l_0_12_90)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x17344 (* ?x27331 l_0_12_89)))
 (let ((?x29412 (+ (+ (* (* 2.0 l_0_12_106) l_0_12_88) ?x17344) ?x29411)))
 (= (- (- (- ?x29412 ?x29449) ?x29451) ?x29453) 0.0)))))))))))))
(assert
 (let ((?x29856 (* l_0_12_99 l_0_12_99)))
 (let ((?x29854 (* l_0_12_98 l_0_12_98)))
 (let ((?x29852 (* l_0_12_97 l_0_12_97)))
 (let ((?x29850 (* l_0_12_96 l_0_12_96)))
 (let ((?x29848 (* l_0_12_95 l_0_12_95)))
 (let ((?x29846 (* l_0_12_71 l_0_12_71)))
 (let ((?x29844 (* l_0_12_70 l_0_12_70)))
 (let ((?x29842 (* l_0_12_69 l_0_12_69)))
 (let ((?x29843 (- (- (* (- l_0_12_67) l_0_12_67) (* l_0_12_68 l_0_12_68)) ?x29842)))
 (let ((?x29857 (+ (+ (+ (+ (+ (- (- ?x29843 ?x29844) ?x29846) ?x29848) ?x29850) ?x29852) ?x29854) ?x29856)))
 (= ?x29857 0.0))))))))))))
(assert
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29901 (* ?x29900 l_0_12_76)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29898 (* ?x29897 l_0_12_75)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29895 (* ?x29894 l_0_12_74)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29892 (* ?x29891 l_0_12_73)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29889 (* ?x29888 l_0_12_72)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x29886 (* ?x29885 l_0_12_99)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x29883 (* ?x27728 l_0_12_98)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x29881 (* ?x27725 l_0_12_97)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29879 (* ?x27710 l_0_12_96)))
 (let ((?x29887 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_95) ?x29879) ?x29881) ?x29883) ?x29886)))
 (= (- (- (- (- (- ?x29887 ?x29889) ?x29892) ?x29895) ?x29898) ?x29901) 0.0)))))))))))))))))))))
(assert
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29943 (* ?x29900 l_0_12_82)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29941 (* ?x29897 l_0_12_81)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29939 (* ?x29894 l_0_12_80)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29937 (* ?x29891 l_0_12_79)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29935 (* ?x29888 l_0_12_78)))
 (let ((?x29933 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x29930 (* ?x27337 l_0_12_98)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29928 (* ?x27334 l_0_12_97)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29926 (* ?x27331 l_0_12_96)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29925 (* ?x27322 l_0_12_95)))
 (let ((?x29934 (+ (+ (+ (+ ?x29925 ?x29926) ?x29928) ?x29930) ?x29933)))
 (= (- (- (- (- (- ?x29934 ?x29935) ?x29937) ?x29939) ?x29941) ?x29943) 0.0))))))))))))))))))))))
(assert
 (let ((?x29987 (* l_0_12_77 l_0_12_77)))
 (let ((?x29985 (* l_0_12_76 l_0_12_76)))
 (let ((?x29983 (* l_0_12_75 l_0_12_75)))
 (let ((?x29981 (* l_0_12_74 l_0_12_74)))
 (let ((?x29979 (* l_0_12_73 l_0_12_73)))
 (let ((?x29977 (* l_0_12_72 l_0_12_72)))
 (let ((?x29975 (* l_0_12_105 l_0_12_105)))
 (let ((?x29973 (* l_0_12_104 l_0_12_104)))
 (let ((?x29971 (* l_0_12_103 l_0_12_103)))
 (let ((?x29969 (* l_0_12_102 l_0_12_102)))
 (let ((?x29970 (+ (+ (* l_0_12_100 l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x29969)))
 (let ((?x29984 (- (- (- (- (+ (+ (+ ?x29970 ?x29971) ?x29973) ?x29975) ?x29977) ?x29979) ?x29981) ?x29983)))
 (= (- (- ?x29984 ?x29985) ?x29987) 0.0))))))))))))))
(assert
 (let ((?x30031 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x30028 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x30025 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x30022 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x30019 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x30016 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x30013 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x30010 (* ?x29885 l_0_12_110)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x30008 (* ?x27728 l_0_12_109)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x30006 (* ?x27725 l_0_12_108)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x30004 (* ?x27710 l_0_12_107)))
 (let ((?x30011 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_106) ?x30004) ?x30006) ?x30008) ?x30010)))
 (let ((?x30014 (+ ?x30011 ?x30013)))
 (= (- (- (- (- (- (- ?x30014 ?x30016) ?x30019) ?x30022) ?x30025) ?x30028) ?x30031) 0.0)))))))))))))))))))
(assert
 (let ((?x30094 (* l_0_12_84 l_0_12_84)))
 (let ((?x30092 (* l_0_12_83 l_0_12_83)))
 (let ((?x30090 (* l_0_12_82 l_0_12_82)))
 (let ((?x30088 (* l_0_12_81 l_0_12_81)))
 (let ((?x30086 (* l_0_12_80 l_0_12_80)))
 (let ((?x30084 (* l_0_12_79 l_0_12_79)))
 (let ((?x30082 (* l_0_12_78 l_0_12_78)))
 (let ((?x30080 (* l_0_12_112 l_0_12_112)))
 (let ((?x30078 (* l_0_12_111 l_0_12_111)))
 (let ((?x30076 (* l_0_12_110 l_0_12_110)))
 (let ((?x30074 (* l_0_12_109 l_0_12_109)))
 (let ((?x30072 (* l_0_12_108 l_0_12_108)))
 (let ((?x30073 (+ (+ (* l_0_12_106 l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x30072)))
 (let ((?x30081 (+ (+ (+ (+ ?x30073 ?x30074) ?x30076) ?x30078) ?x30080)))
 (let ((?x30095 (- (- (- (- (- (- (- ?x30081 ?x30082) ?x30084) ?x30086) ?x30088) ?x30090) ?x30092) ?x30094)))
 (= ?x30095 0.0)))))))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x18128 (* ?x14248 l_0_12_86)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x30123 (* ?x14252 l_0_12_58)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14238 (* ?x14234 l_0_12_142)))
 (let ((?x30110 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_114) ?x14238) (* (* 2.0 l_0_12_169) l_0_12_170))))
 (let ((?x30114 (- (- ?x30110 (* (* 2.0 l_0_12_198) l_0_12_207)) (* (* 2.0 l_0_12_199) l_0_12_208))))
 (let ((?x30118 (- (- ?x30114 (* (* 2.0 l_0_12_226) l_0_12_235)) (* (* 2.0 l_0_12_227) l_0_12_236))))
 (let ((?x30122 (- (- ?x30118 (* (* 2.0 l_0_12_254) l_0_12_263)) (* (* 2.0 l_0_12_255) l_0_12_264))))
 (= (+ (- ?x30122 ?x30123) ?x18128) 0.0))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x27224 (* ?x14248 l_0_12_91)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x14249 (* ?x14252 l_0_12_63)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14345 (* ?x14234 l_0_12_147)))
 (let ((?x30161 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_119) ?x14345) (* (* 2.0 l_0_12_169) l_0_12_175))))
 (let ((?x30165 (- (- ?x30161 (* (* 2.0 l_0_12_203) l_0_12_207)) (* (* 2.0 l_0_12_204) l_0_12_208))))
 (let ((?x30169 (- (- ?x30165 (* (* 2.0 l_0_12_205) l_0_12_209)) (* (* 2.0 l_0_12_206) l_0_12_210))))
 (let ((?x30173 (- (- ?x30169 (* (* 2.0 l_0_12_231) l_0_12_235)) (* (* 2.0 l_0_12_232) l_0_12_236))))
 (let ((?x30177 (- (- ?x30173 (* (* 2.0 l_0_12_233) l_0_12_237)) (* (* 2.0 l_0_12_234) l_0_12_238))))
 (let ((?x30181 (- (- ?x30177 (* (* 2.0 l_0_12_259) l_0_12_263)) (* (* 2.0 l_0_12_260) l_0_12_264))))
 (let ((?x30185 (- (- ?x30181 (* (* 2.0 l_0_12_261) l_0_12_265)) (* (* 2.0 l_0_12_262) l_0_12_266))))
 (= (+ (- ?x30185 ?x14249) ?x27224) 0.0)))))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x29663 (* ?x14248 l_0_12_95)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x29657 (* ?x14252 l_0_12_67)))
 (let ((?x30242 (* l_0_12_267 l_0_12_267)))
 (let ((?x30240 (* l_0_12_266 l_0_12_266)))
 (let ((?x30238 (* l_0_12_265 l_0_12_265)))
 (let ((?x30236 (* l_0_12_264 l_0_12_264)))
 (let ((?x30234 (* l_0_12_263 l_0_12_263)))
 (let ((?x30232 (* l_0_12_239 l_0_12_239)))
 (let ((?x30230 (* l_0_12_238 l_0_12_238)))
 (let ((?x30228 (* l_0_12_237 l_0_12_237)))
 (let ((?x30226 (* l_0_12_236 l_0_12_236)))
 (let ((?x30224 (* l_0_12_235 l_0_12_235)))
 (let ((?x30222 (* l_0_12_211 l_0_12_211)))
 (let ((?x30220 (* l_0_12_210 l_0_12_210)))
 (let ((?x30218 (* l_0_12_209 l_0_12_209)))
 (let ((?x30216 (* l_0_12_208 l_0_12_208)))
 (let ((?x19267 (* l_0_12_207 l_0_12_207)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27352 (* ?x14234 l_0_12_151)))
 (let ((?x19266 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_123) ?x27352) (* (* 2.0 l_0_12_169) l_0_12_179))))
 (let ((?x30227 (- (- (- (- (- (- (- ?x19266 ?x19267) ?x30216) ?x30218) ?x30220) ?x30222) ?x30224) ?x30226)))
 (let ((?x30241 (- (- (- (- (- (- (- ?x30227 ?x30228) ?x30230) ?x30232) ?x30234) ?x30236) ?x30238) ?x30240)))
 (= (+ (- (- ?x30241 ?x30242) ?x29657) ?x29663) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x29663 (* ?x14248 l_0_12_95)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x29689 (* ?x14252 l_0_12_72)))
 (let ((?x29657 (* ?x14252 l_0_12_67)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x27456 (* ?x14234 l_0_12_156)))
 (let ((?x14634 (* 2.0 l_0_12_100)))
 (let ((?x18283 (* ?x14634 l_0_12_85)))
 (let ((?x19473 (+ (- (- ?x18283 (* (* 2.0 l_0_12_113) l_0_12_128)) ?x27456) (* (* 2.0 l_0_12_169) l_0_12_184))))
 (let ((?x30281 (- (- ?x19473 (* (* 2.0 l_0_12_207) l_0_12_212)) (* (* 2.0 l_0_12_208) l_0_12_213))))
 (let ((?x30287 (- (- ?x30281 (* (* 2.0 l_0_12_209) l_0_12_214)) (* (* 2.0 l_0_12_210) l_0_12_215))))
 (let ((?x30293 (- (- ?x30287 (* (* 2.0 l_0_12_211) l_0_12_216)) (* (* 2.0 l_0_12_235) l_0_12_240))))
 (let ((?x30299 (- (- ?x30293 (* (* 2.0 l_0_12_236) l_0_12_241)) (* (* 2.0 l_0_12_237) l_0_12_242))))
 (let ((?x30305 (- (- ?x30299 (* (* 2.0 l_0_12_238) l_0_12_243)) (* (* 2.0 l_0_12_239) l_0_12_244))))
 (let ((?x30311 (- (- ?x30305 (* (* 2.0 l_0_12_263) l_0_12_268)) (* (* 2.0 l_0_12_264) l_0_12_269))))
 (let ((?x30317 (- (- ?x30311 (* (* 2.0 l_0_12_265) l_0_12_270)) (* (* 2.0 l_0_12_266) l_0_12_271))))
 (let ((?x30323 (- (- (+ (- ?x30317 (* (* 2.0 l_0_12_267) l_0_12_272)) ?x29657) ?x29689) ?x29663)))
 (= ?x30323 0.0))))))))))))))))))))
(assert
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x18312 (* ?x14252 l_0_12_78)))
 (let ((?x14234 (* 2.0 l_0_12_141)))
 (let ((?x14477 (* ?x14234 l_0_12_162)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x18311 (* ?x27322 l_0_12_85)))
 (let ((?x30368 (+ (- (- ?x18311 (* (* 2.0 l_0_12_113) l_0_12_134)) ?x14477) (* (* 2.0 l_0_12_169) l_0_12_190))))
 (let ((?x30372 (- (- ?x30368 (* (* 2.0 l_0_12_207) l_0_12_218)) (* (* 2.0 l_0_12_208) l_0_12_219))))
 (let ((?x30376 (- (- ?x30372 (* (* 2.0 l_0_12_209) l_0_12_220)) (* (* 2.0 l_0_12_210) l_0_12_221))))
 (let ((?x30380 (- (- ?x30376 (* (* 2.0 l_0_12_211) l_0_12_222)) (* (* 2.0 l_0_12_235) l_0_12_246))))
 (let ((?x30384 (- (- ?x30380 (* (* 2.0 l_0_12_236) l_0_12_247)) (* (* 2.0 l_0_12_237) l_0_12_248))))
 (let ((?x30388 (- (- ?x30384 (* (* 2.0 l_0_12_238) l_0_12_249)) (* (* 2.0 l_0_12_239) l_0_12_250))))
 (let ((?x30392 (- (- ?x30388 (* (* 2.0 l_0_12_263) l_0_12_274)) (* (* 2.0 l_0_12_264) l_0_12_275))))
 (let ((?x30396 (- (- ?x30392 (* (* 2.0 l_0_12_265) l_0_12_276)) (* (* 2.0 l_0_12_266) l_0_12_277))))
 (= (- (- ?x30396 (* (* 2.0 l_0_12_267) l_0_12_278)) ?x18312) 0.0))))))))))))))))
(assert
 (let ((?x29714 (* l_0_12_87 l_0_12_87)))
 (let ((?x29712 (* l_0_12_86 l_0_12_86)))
 (let ((?x29710 (* l_0_12_59 l_0_12_59)))
 (let ((?x18327 (* l_0_12_58 l_0_12_58)))
 (let ((?x15972 (* l_0_12_171 l_0_12_171)))
 (let ((?x16001 (* l_0_12_170 l_0_12_170)))
 (let ((?x27475 (* l_0_12_143 l_0_12_143)))
 (let ((?x27473 (* l_0_12_142 l_0_12_142)))
 (let ((?x30432 (- (- (* (- l_0_12_114) l_0_12_114) (* l_0_12_115 l_0_12_115)) ?x27473)))
 (let ((?x30439 (+ (+ (- (- (+ (+ (- ?x30432 ?x27475) ?x16001) ?x15972) ?x18327) ?x29710) ?x29712) ?x29714)))
 (= ?x30439 0.0))))))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x27501 (* ?x27500 l_0_12_92)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x27498 (* ?x27497 l_0_12_91)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x27495 (* ?x27494 l_0_12_64)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x27492 (* ?x27491 l_0_12_63)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x14583 (* ?x27519 l_0_12_148)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x14581 (* ?x27516 l_0_12_147)))
 (let ((?x19999 (- (* (* (- 2.0) l_0_12_114) l_0_12_119) (* (* 2.0 l_0_12_115) l_0_12_120))))
 (let ((?x30446 (+ (+ (- (- ?x19999 ?x14581) ?x14583) (* (* 2.0 l_0_12_170) l_0_12_175)) (* (* 2.0 l_0_12_171) l_0_12_176))))
 (= (+ (+ (- (- ?x30446 ?x27492) ?x27495) ?x27498) ?x27501) 0.0))))))))))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x29739 (* ?x27500 l_0_12_96)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x29737 (* ?x27497 l_0_12_95)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29735 (* ?x27494 l_0_12_68)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x30478 (* ?x27491 l_0_12_67)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27653 (* ?x27519 l_0_12_152)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27651 (* ?x27516 l_0_12_151)))
 (let ((?x30471 (- (* (* (- 2.0) l_0_12_114) l_0_12_123) (* (* 2.0 l_0_12_115) l_0_12_124))))
 (let ((?x30477 (+ (+ (- (- ?x30471 ?x27651) ?x27653) (* (* 2.0 l_0_12_170) l_0_12_179)) (* (* 2.0 l_0_12_171) l_0_12_180))))
 (= (+ (+ (- (- ?x30477 ?x30478) ?x29735) ?x29737) ?x29739) 0.0))))))))))))))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x29739 (* ?x27500 l_0_12_96)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x29737 (* ?x27497 l_0_12_95)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29762 (* ?x27494 l_0_12_73)))
 (let ((?x29735 (* ?x27494 l_0_12_68)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29760 (* ?x27491 l_0_12_72)))
 (let ((?x30478 (* ?x27491 l_0_12_67)))
 (let ((?x27519 (* 2.0 l_0_12_143)))
 (let ((?x27733 (* ?x27519 l_0_12_157)))
 (let ((?x27516 (* 2.0 l_0_12_142)))
 (let ((?x27731 (* ?x27516 l_0_12_156)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29753 (* ?x27710 l_0_12_87)))
 (let ((?x29754 (+ (* (* 2.0 l_0_12_100) l_0_12_86) ?x29753)))
 (let ((?x30496 (- (- ?x29754 (* (* 2.0 l_0_12_114) l_0_12_128)) (* (* 2.0 l_0_12_115) l_0_12_129))))
 (let ((?x30502 (+ (+ (- (- ?x30496 ?x27731) ?x27733) (* (* 2.0 l_0_12_170) l_0_12_184)) (* (* 2.0 l_0_12_171) l_0_12_185))))
 (= (- (- (- (+ (- (+ ?x30502 ?x30478) ?x29760) ?x29735) ?x29762) ?x29737) ?x29739) 0.0)))))))))))))))))))))
(assert
 (let ((?x27619 (* l_0_12_94 l_0_12_94)))
 (let ((?x27617 (* l_0_12_93 l_0_12_93)))
 (let ((?x27615 (* l_0_12_92 l_0_12_92)))
 (let ((?x27613 (* l_0_12_91 l_0_12_91)))
 (let ((?x27611 (* l_0_12_66 l_0_12_66)))
 (let ((?x27609 (* l_0_12_65 l_0_12_65)))
 (let ((?x27607 (* l_0_12_64 l_0_12_64)))
 (let ((?x27605 (* l_0_12_63 l_0_12_63)))
 (let ((?x16628 (* l_0_12_178 l_0_12_178)))
 (let ((?x16550 (* l_0_12_177 l_0_12_177)))
 (let ((?x16592 (* l_0_12_176 l_0_12_176)))
 (let ((?x29171 (* l_0_12_175 l_0_12_175)))
 (let ((?x28077 (* l_0_12_150 l_0_12_150)))
 (let ((?x28075 (* l_0_12_149 l_0_12_149)))
 (let ((?x28073 (* l_0_12_148 l_0_12_148)))
 (let ((?x28063 (* l_0_12_147 l_0_12_147)))
 (let ((?x30525 (* l_0_12_122 l_0_12_122)))
 (let ((?x30523 (* l_0_12_121 l_0_12_121)))
 (let ((?x30524 (- (- (* (- l_0_12_119) l_0_12_119) (* l_0_12_120 l_0_12_120)) ?x30523)))
 (let ((?x30532 (+ (+ (- (- (- (- (- ?x30524 ?x30525) ?x28063) ?x28073) ?x28075) ?x28077) ?x29171) ?x16592)))
 (let ((?x30539 (+ (- (- (- (- (+ (+ ?x30532 ?x16550) ?x16628) ?x27605) ?x27607) ?x27609) ?x27611) ?x27613)))
 (= (+ (+ (+ ?x30539 ?x27615) ?x27617) ?x27619) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27677 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x27674 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x27671 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x27668 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27665 (* ?x27389 l_0_12_70)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27663 (* ?x27386 l_0_12_69)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27661 (* ?x27383 l_0_12_68)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27659 (* ?x27380 l_0_12_67)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x28128 (* ?x27363 l_0_12_154)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x28126 (* ?x27360 l_0_12_153)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x28124 (* ?x27357 l_0_12_152)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x28122 (* ?x27354 l_0_12_151)))
 (let ((?x20214 (- (* (* (- 2.0) l_0_12_119) l_0_12_123) (* (* 2.0 l_0_12_120) l_0_12_124))))
 (let ((?x20205 (- (- ?x20214 (* (* 2.0 l_0_12_121) l_0_12_125)) (* (* 2.0 l_0_12_122) l_0_12_126))))
 (let ((?x20147 (+ (- (- (- (- ?x20205 ?x28122) ?x28124) ?x28126) ?x28128) (* (* 2.0 l_0_12_175) l_0_12_179))))
 (let ((?x30553 (+ (+ ?x20147 (* (* 2.0 l_0_12_176) l_0_12_180)) (* (* 2.0 l_0_12_177) l_0_12_181))))
 (let ((?x30558 (- (- (- (+ ?x30553 (* (* 2.0 l_0_12_178) l_0_12_182)) ?x27659) ?x27661) ?x27663)))
 (= (+ (+ (+ (+ (- ?x30558 ?x27665) ?x27668) ?x27671) ?x27674) ?x27677) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27677 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x27674 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x27671 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x27668 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27751 (* ?x27389 l_0_12_75)))
 (let ((?x27665 (* ?x27389 l_0_12_70)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27749 (* ?x27386 l_0_12_74)))
 (let ((?x27663 (* ?x27386 l_0_12_69)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27747 (* ?x27383 l_0_12_73)))
 (let ((?x27661 (* ?x27383 l_0_12_68)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27745 (* ?x27380 l_0_12_72)))
 (let ((?x27659 (* ?x27380 l_0_12_67)))
 (let ((?x27363 (* 2.0 l_0_12_150)))
 (let ((?x28160 (* ?x27363 l_0_12_159)))
 (let ((?x27360 (* 2.0 l_0_12_149)))
 (let ((?x28156 (* ?x27360 l_0_12_158)))
 (let ((?x27357 (* 2.0 l_0_12_148)))
 (let ((?x14795 (* ?x27357 l_0_12_157)))
 (let ((?x27354 (* 2.0 l_0_12_147)))
 (let ((?x14784 (* ?x27354 l_0_12_156)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x27729 (* ?x27728 l_0_12_94)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x27726 (* ?x27725 l_0_12_93)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x27712 (* ?x27710 l_0_12_92)))
 (let ((?x27730 (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_91) ?x27712) ?x27726) ?x27729)))
 (let ((?x30592 (- (- ?x27730 (* (* 2.0 l_0_12_119) l_0_12_128)) (* (* 2.0 l_0_12_120) l_0_12_129))))
 (let ((?x30596 (- (- ?x30592 (* (* 2.0 l_0_12_121) l_0_12_130)) (* (* 2.0 l_0_12_122) l_0_12_131))))
 (let ((?x30602 (+ (- (- (- (- ?x30596 ?x14784) ?x14795) ?x28156) ?x28160) (* (* 2.0 l_0_12_175) l_0_12_184))))
 (let ((?x30606 (+ (+ ?x30602 (* (* 2.0 l_0_12_176) l_0_12_185)) (* (* 2.0 l_0_12_177) l_0_12_186))))
 (let ((?x30611 (+ (- (+ (+ ?x30606 (* (* 2.0 l_0_12_178) l_0_12_187)) ?x27659) ?x27745) ?x27661)))
 (let ((?x30618 (- (- (- (+ (- (+ (- ?x30611 ?x27747) ?x27663) ?x27749) ?x27665) ?x27751) ?x27668) ?x27671)))
 (= (- (- ?x30618 ?x27674) ?x27677) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29856 (* l_0_12_99 l_0_12_99)))
 (let ((?x29854 (* l_0_12_98 l_0_12_98)))
 (let ((?x29852 (* l_0_12_97 l_0_12_97)))
 (let ((?x29850 (* l_0_12_96 l_0_12_96)))
 (let ((?x29848 (* l_0_12_95 l_0_12_95)))
 (let ((?x29846 (* l_0_12_71 l_0_12_71)))
 (let ((?x29844 (* l_0_12_70 l_0_12_70)))
 (let ((?x29842 (* l_0_12_69 l_0_12_69)))
 (let ((?x29840 (* l_0_12_68 l_0_12_68)))
 (let ((?x29860 (* l_0_12_67 l_0_12_67)))
 (let ((?x17035 (* l_0_12_183 l_0_12_183)))
 (let ((?x17029 (* l_0_12_182 l_0_12_182)))
 (let ((?x17023 (* l_0_12_181 l_0_12_181)))
 (let ((?x17017 (* l_0_12_180 l_0_12_180)))
 (let ((?x16957 (* l_0_12_179 l_0_12_179)))
 (let ((?x28255 (* l_0_12_155 l_0_12_155)))
 (let ((?x28253 (* l_0_12_154 l_0_12_154)))
 (let ((?x28251 (* l_0_12_153 l_0_12_153)))
 (let ((?x28249 (* l_0_12_152 l_0_12_152)))
 (let ((?x28247 (* l_0_12_151 l_0_12_151)))
 (let ((?x30649 (* l_0_12_127 l_0_12_127)))
 (let ((?x30647 (* l_0_12_126 l_0_12_126)))
 (let ((?x30645 (* l_0_12_125 l_0_12_125)))
 (let ((?x30646 (- (- (* (- l_0_12_123) l_0_12_123) (* l_0_12_124 l_0_12_124)) ?x30645)))
 (let ((?x30655 (- (- (- (- (- (- (- ?x30646 ?x30647) ?x30649) ?x28247) ?x28249) ?x28251) ?x28253) ?x28255)))
 (let ((?x30662 (- (- (+ (+ (+ (+ (+ ?x30655 ?x16957) ?x17017) ?x17023) ?x17029) ?x17035) ?x29860) ?x29840)))
 (let ((?x30669 (+ (+ (+ (+ (- (- (- ?x30662 ?x29842) ?x29844) ?x29846) ?x29848) ?x29850) ?x29852) ?x29854)))
 (= (+ ?x30669 ?x29856) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x29856 (* l_0_12_99 l_0_12_99)))
 (let ((?x29854 (* l_0_12_98 l_0_12_98)))
 (let ((?x29852 (* l_0_12_97 l_0_12_97)))
 (let ((?x29850 (* l_0_12_96 l_0_12_96)))
 (let ((?x29848 (* l_0_12_95 l_0_12_95)))
 (let ((?x29846 (* l_0_12_71 l_0_12_71)))
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29901 (* ?x29900 l_0_12_76)))
 (let ((?x29844 (* l_0_12_70 l_0_12_70)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29898 (* ?x29897 l_0_12_75)))
 (let ((?x29842 (* l_0_12_69 l_0_12_69)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29895 (* ?x29894 l_0_12_74)))
 (let ((?x29840 (* l_0_12_68 l_0_12_68)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29892 (* ?x29891 l_0_12_73)))
 (let ((?x29860 (* l_0_12_67 l_0_12_67)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29889 (* ?x29888 l_0_12_72)))
 (let ((?x28309 (* 2.0 l_0_12_155)))
 (let ((?x28310 (* ?x28309 l_0_12_160)))
 (let ((?x28306 (* 2.0 l_0_12_154)))
 (let ((?x28307 (* ?x28306 l_0_12_159)))
 (let ((?x28303 (* 2.0 l_0_12_153)))
 (let ((?x28304 (* ?x28303 l_0_12_158)))
 (let ((?x28300 (* 2.0 l_0_12_152)))
 (let ((?x28301 (* ?x28300 l_0_12_157)))
 (let ((?x28297 (* 2.0 l_0_12_151)))
 (let ((?x28298 (* ?x28297 l_0_12_156)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x29886 (* ?x29885 l_0_12_99)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x29883 (* ?x27728 l_0_12_98)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x29881 (* ?x27725 l_0_12_97)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29879 (* ?x27710 l_0_12_96)))
 (let ((?x29887 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_95) ?x29879) ?x29881) ?x29883) ?x29886)))
 (let ((?x20468 (- (- ?x29887 (* (* 2.0 l_0_12_123) l_0_12_128)) (* (* 2.0 l_0_12_124) l_0_12_129))))
 (let ((?x20401 (- (- ?x20468 (* (* 2.0 l_0_12_125) l_0_12_130)) (* (* 2.0 l_0_12_126) l_0_12_131))))
 (let ((?x30682 (- (- (- (- ?x20401 (* (* 2.0 l_0_12_127) l_0_12_132)) ?x28298) ?x28301) ?x28304)))
 (let ((?x30688 (+ (+ (- (- ?x30682 ?x28307) ?x28310) (* (* 2.0 l_0_12_179) l_0_12_184)) (* (* 2.0 l_0_12_180) l_0_12_185))))
 (let ((?x30692 (+ (+ ?x30688 (* (* 2.0 l_0_12_181) l_0_12_186)) (* (* 2.0 l_0_12_182) l_0_12_187))))
 (let ((?x30697 (- (+ (- (+ ?x30692 (* (* 2.0 l_0_12_183) l_0_12_188)) ?x29889) ?x29860) ?x29892)))
 (let ((?x30704 (+ (- (+ (- (+ (- (+ ?x30697 ?x29840) ?x29895) ?x29842) ?x29898) ?x29844) ?x29901) ?x29846)))
 (= (- (- (- (- (- ?x30704 ?x29848) ?x29850) ?x29852) ?x29854) ?x29856) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29943 (* ?x29900 l_0_12_82)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29941 (* ?x29897 l_0_12_81)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29939 (* ?x29894 l_0_12_80)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29937 (* ?x29891 l_0_12_79)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29935 (* ?x29888 l_0_12_78)))
 (let ((?x28309 (* 2.0 l_0_12_155)))
 (let ((?x28380 (* ?x28309 l_0_12_166)))
 (let ((?x28306 (* 2.0 l_0_12_154)))
 (let ((?x28378 (* ?x28306 l_0_12_165)))
 (let ((?x28303 (* 2.0 l_0_12_153)))
 (let ((?x28376 (* ?x28303 l_0_12_164)))
 (let ((?x28300 (* 2.0 l_0_12_152)))
 (let ((?x28374 (* ?x28300 l_0_12_163)))
 (let ((?x28297 (* 2.0 l_0_12_151)))
 (let ((?x28359 (* ?x28297 l_0_12_162)))
 (let ((?x29933 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x29930 (* ?x27337 l_0_12_98)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29928 (* ?x27334 l_0_12_97)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29926 (* ?x27331 l_0_12_96)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29925 (* ?x27322 l_0_12_95)))
 (let ((?x29934 (+ (+ (+ (+ ?x29925 ?x29926) ?x29928) ?x29930) ?x29933)))
 (let ((?x30754 (- (- ?x29934 (* (* 2.0 l_0_12_123) l_0_12_134)) (* (* 2.0 l_0_12_124) l_0_12_135))))
 (let ((?x30758 (- (- ?x30754 (* (* 2.0 l_0_12_125) l_0_12_136)) (* (* 2.0 l_0_12_126) l_0_12_137))))
 (let ((?x30763 (- (- (- (- ?x30758 (* (* 2.0 l_0_12_127) l_0_12_138)) ?x28359) ?x28374) ?x28376)))
 (let ((?x30769 (+ (+ (- (- ?x30763 ?x28378) ?x28380) (* (* 2.0 l_0_12_179) l_0_12_190)) (* (* 2.0 l_0_12_180) l_0_12_191))))
 (let ((?x30773 (+ (+ ?x30769 (* (* 2.0 l_0_12_181) l_0_12_192)) (* (* 2.0 l_0_12_182) l_0_12_193))))
 (let ((?x30778 (- (- (- (+ ?x30773 (* (* 2.0 l_0_12_183) l_0_12_194)) ?x29935) ?x29937) ?x29939)))
 (= (- (- ?x30778 ?x29941) ?x29943) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29987 (* l_0_12_77 l_0_12_77)))
 (let ((?x29985 (* l_0_12_76 l_0_12_76)))
 (let ((?x29983 (* l_0_12_75 l_0_12_75)))
 (let ((?x29981 (* l_0_12_74 l_0_12_74)))
 (let ((?x29979 (* l_0_12_73 l_0_12_73)))
 (let ((?x29977 (* l_0_12_72 l_0_12_72)))
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29901 (* ?x29900 l_0_12_76)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29898 (* ?x29897 l_0_12_75)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29895 (* ?x29894 l_0_12_74)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29892 (* ?x29891 l_0_12_73)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29889 (* ?x29888 l_0_12_72)))
 (let ((?x17591 (* l_0_12_189 l_0_12_189)))
 (let ((?x17585 (* l_0_12_188 l_0_12_188)))
 (let ((?x17579 (* l_0_12_187 l_0_12_187)))
 (let ((?x17572 (* l_0_12_186 l_0_12_186)))
 (let ((?x17507 (* l_0_12_185 l_0_12_185)))
 (let ((?x17505 (* l_0_12_184 l_0_12_184)))
 (let ((?x28429 (* l_0_12_161 l_0_12_161)))
 (let ((?x28420 (* l_0_12_160 l_0_12_160)))
 (let ((?x14966 (* l_0_12_159 l_0_12_159)))
 (let ((?x14970 (* l_0_12_158 l_0_12_158)))
 (let ((?x14964 (* l_0_12_157 l_0_12_157)))
 (let ((?x14960 (* l_0_12_156 l_0_12_156)))
 (let ((?x30835 (* l_0_12_133 l_0_12_133)))
 (let ((?x30833 (* l_0_12_132 l_0_12_132)))
 (let ((?x30831 (* l_0_12_131 l_0_12_131)))
 (let ((?x30829 (* l_0_12_130 l_0_12_130)))
 (let ((?x30827 (* l_0_12_129 l_0_12_129)))
 (let ((?x30825 (* l_0_12_128 l_0_12_128)))
 (let ((?x29975 (* l_0_12_105 l_0_12_105)))
 (let ((?x29973 (* l_0_12_104 l_0_12_104)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x29886 (* ?x29885 l_0_12_99)))
 (let ((?x29971 (* l_0_12_103 l_0_12_103)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x29883 (* ?x27728 l_0_12_98)))
 (let ((?x29969 (* l_0_12_102 l_0_12_102)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x29881 (* ?x27725 l_0_12_97)))
 (let ((?x29967 (* l_0_12_101 l_0_12_101)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29879 (* ?x27710 l_0_12_96)))
 (let ((?x29966 (* l_0_12_100 l_0_12_100)))
 (let ((?x30818 (- (+ (- (+ (* (* (- 2.0) l_0_12_100) l_0_12_95) ?x29966) ?x29879) ?x29967) ?x29881)))
 (let ((?x30826 (- (+ (+ (- (+ (- (+ ?x30818 ?x29969) ?x29883) ?x29971) ?x29886) ?x29973) ?x29975) ?x30825)))
 (let ((?x30838 (- (- (- (- (- (- (- ?x30826 ?x30827) ?x30829) ?x30831) ?x30833) ?x30835) ?x14960) ?x14964)))
 (let ((?x30845 (+ (+ (+ (- (- (- (- ?x30838 ?x14970) ?x14966) ?x28420) ?x28429) ?x17505) ?x17507) ?x17572)))
 (let ((?x30852 (+ (+ (+ (+ (+ (+ (+ ?x30845 ?x17579) ?x17585) ?x17591) ?x29889) ?x29892) ?x29895) ?x29898)))
 (let ((?x30859 (- (- (- (- (- (- (+ ?x30852 ?x29901) ?x29977) ?x29979) ?x29981) ?x29983) ?x29985) ?x29987)))
 (= ?x30859 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30031 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x30028 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x30025 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x30022 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x30019 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x30016 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x29900 (* 2.0 l_0_12_71)))
 (let ((?x29943 (* ?x29900 l_0_12_82)))
 (let ((?x29897 (* 2.0 l_0_12_70)))
 (let ((?x29941 (* ?x29897 l_0_12_81)))
 (let ((?x29894 (* 2.0 l_0_12_69)))
 (let ((?x29939 (* ?x29894 l_0_12_80)))
 (let ((?x29891 (* 2.0 l_0_12_68)))
 (let ((?x29937 (* ?x29891 l_0_12_79)))
 (let ((?x29888 (* 2.0 l_0_12_67)))
 (let ((?x29935 (* ?x29888 l_0_12_78)))
 (let ((?x28484 (* (* 2.0 l_0_12_161) l_0_12_167)))
 (let ((?x28481 (* (* 2.0 l_0_12_160) l_0_12_166)))
 (let ((?x28476 (* (* 2.0 l_0_12_159) l_0_12_165)))
 (let ((?x28473 (* (* 2.0 l_0_12_158) l_0_12_164)))
 (let ((?x28470 (* (* 2.0 l_0_12_157) l_0_12_163)))
 (let ((?x28468 (* (* 2.0 l_0_12_156) l_0_12_162)))
 (let ((?x29933 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27337 (* 2.0 l_0_12_109)))
 (let ((?x29930 (* ?x27337 l_0_12_98)))
 (let ((?x27334 (* 2.0 l_0_12_108)))
 (let ((?x29928 (* ?x27334 l_0_12_97)))
 (let ((?x27331 (* 2.0 l_0_12_107)))
 (let ((?x29926 (* ?x27331 l_0_12_96)))
 (let ((?x27322 (* 2.0 l_0_12_106)))
 (let ((?x29925 (* ?x27322 l_0_12_95)))
 (let ((?x30013 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x30010 (* ?x29885 l_0_12_110)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x30008 (* ?x27728 l_0_12_109)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x30006 (* ?x27725 l_0_12_108)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x30004 (* ?x27710 l_0_12_107)))
 (let ((?x30011 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_106) ?x30004) ?x30006) ?x30008) ?x30010)))
 (let ((?x30014 (+ ?x30011 ?x30013)))
 (let ((?x30877 (- (- (- (- (- (- ?x30014 ?x29925) ?x29926) ?x29928) ?x29930) ?x29933) (* (* 2.0 l_0_12_128) l_0_12_134))))
 (let ((?x30883 (- (- ?x30877 (* (* 2.0 l_0_12_129) l_0_12_135)) (* (* 2.0 l_0_12_130) l_0_12_136))))
 (let ((?x30889 (- (- ?x30883 (* (* 2.0 l_0_12_131) l_0_12_137)) (* (* 2.0 l_0_12_132) l_0_12_138))))
 (let ((?x30895 (- (- (- (- ?x30889 (* (* 2.0 l_0_12_133) l_0_12_139)) ?x28468) ?x28470) ?x28473)))
 (let ((?x30900 (+ (- (- (- ?x30895 ?x28476) ?x28481) ?x28484) (* (* 2.0 l_0_12_184) l_0_12_190))))
 (let ((?x30904 (+ (+ ?x30900 (* (* 2.0 l_0_12_185) l_0_12_191)) (* (* 2.0 l_0_12_186) l_0_12_192))))
 (let ((?x30908 (+ (+ ?x30904 (* (* 2.0 l_0_12_187) l_0_12_193)) (* (* 2.0 l_0_12_188) l_0_12_194))))
 (let ((?x30913 (+ (+ (+ (+ ?x30908 (* (* 2.0 l_0_12_189) l_0_12_195)) ?x29935) ?x29937) ?x29939)))
 (let ((?x30920 (- (- (- (- (- (+ (+ ?x30913 ?x29941) ?x29943) ?x30016) ?x30019) ?x30022) ?x30025) ?x30028)))
 (= (- ?x30920 ?x30031) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30094 (* l_0_12_84 l_0_12_84)))
 (let ((?x30092 (* l_0_12_83 l_0_12_83)))
 (let ((?x30090 (* l_0_12_82 l_0_12_82)))
 (let ((?x30088 (* l_0_12_81 l_0_12_81)))
 (let ((?x30086 (* l_0_12_80 l_0_12_80)))
 (let ((?x30084 (* l_0_12_79 l_0_12_79)))
 (let ((?x30082 (* l_0_12_78 l_0_12_78)))
 (let ((?x17905 (* l_0_12_196 l_0_12_196)))
 (let ((?x17899 (* l_0_12_195 l_0_12_195)))
 (let ((?x17870 (* l_0_12_194 l_0_12_194)))
 (let ((?x17783 (* l_0_12_193 l_0_12_193)))
 (let ((?x17805 (* l_0_12_192 l_0_12_192)))
 (let ((?x29617 (* l_0_12_191 l_0_12_191)))
 (let ((?x29615 (* l_0_12_190 l_0_12_190)))
 (let ((?x28564 (* l_0_12_168 l_0_12_168)))
 (let ((?x28562 (* l_0_12_167 l_0_12_167)))
 (let ((?x28560 (* l_0_12_166 l_0_12_166)))
 (let ((?x28544 (* l_0_12_165 l_0_12_165)))
 (let ((?x15123 (* l_0_12_164 l_0_12_164)))
 (let ((?x15126 (* l_0_12_163 l_0_12_163)))
 (let ((?x15032 (* l_0_12_162 l_0_12_162)))
 (let ((?x30950 (* l_0_12_140 l_0_12_140)))
 (let ((?x30948 (* l_0_12_139 l_0_12_139)))
 (let ((?x30946 (* l_0_12_138 l_0_12_138)))
 (let ((?x30944 (* l_0_12_137 l_0_12_137)))
 (let ((?x30942 (* l_0_12_136 l_0_12_136)))
 (let ((?x30940 (* l_0_12_135 l_0_12_135)))
 (let ((?x20929 (* l_0_12_134 l_0_12_134)))
 (let ((?x30080 (* l_0_12_112 l_0_12_112)))
 (let ((?x30078 (* l_0_12_111 l_0_12_111)))
 (let ((?x30076 (* l_0_12_110 l_0_12_110)))
 (let ((?x30074 (* l_0_12_109 l_0_12_109)))
 (let ((?x30072 (* l_0_12_108 l_0_12_108)))
 (let ((?x30073 (+ (+ (* l_0_12_106 l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x30072)))
 (let ((?x30081 (+ (+ (+ (+ ?x30073 ?x30074) ?x30076) ?x30078) ?x30080)))
 (let ((?x30951 (- (- (- (- (- (- (- ?x30081 ?x20929) ?x30940) ?x30942) ?x30944) ?x30946) ?x30948) ?x30950)))
 (let ((?x30958 (- (- (- (- (- (- (- ?x30951 ?x15032) ?x15126) ?x15123) ?x28544) ?x28560) ?x28562) ?x28564)))
 (let ((?x30965 (+ (+ (+ (+ (+ (+ (+ ?x30958 ?x29615) ?x29617) ?x17805) ?x17783) ?x17870) ?x17899) ?x17905)))
 (let ((?x30972 (- (- (- (- (- (- (- ?x30965 ?x30082) ?x30084) ?x30086) ?x30088) ?x30090) ?x30092) ?x30094)))
 (= ?x30972 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27103 (* l_0_12_85 l_0_12_85)))
 (let ((?x27101 (* l_0_12_57 l_0_12_57)))
 (let ((?x3538 (- (* (* (- 2.0) l_0_12_197) l_0_12_212) (* (* 2.0 l_0_12_225) l_0_12_240))))
 (= (- (+ (- ?x3538 (* (* 2.0 l_0_12_253) l_0_12_268)) ?x27101) ?x27103) 0.0)))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x18128 (* ?x14248 l_0_12_86)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x30123 (* ?x14252 l_0_12_58)))
 (let ((?x31003 (- (* (* (- 2.0) l_0_12_198) l_0_12_212) (* (* 2.0 l_0_12_199) l_0_12_213))))
 (let ((?x31007 (- (- ?x31003 (* (* 2.0 l_0_12_226) l_0_12_240)) (* (* 2.0 l_0_12_227) l_0_12_241))))
 (let ((?x31011 (- (- ?x31007 (* (* 2.0 l_0_12_254) l_0_12_268)) (* (* 2.0 l_0_12_255) l_0_12_269))))
 (= (- (+ ?x31011 ?x30123) ?x18128) 0.0)))))))))
(assert
 (let ((?x14248 (* 2.0 l_0_12_85)))
 (let ((?x27224 (* ?x14248 l_0_12_91)))
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x14249 (* ?x14252 l_0_12_63)))
 (let ((?x31043 (- (* (* (- 2.0) l_0_12_203) l_0_12_212) (* (* 2.0 l_0_12_204) l_0_12_213))))
 (let ((?x31047 (- (- ?x31043 (* (* 2.0 l_0_12_205) l_0_12_214)) (* (* 2.0 l_0_12_206) l_0_12_215))))
 (let ((?x31051 (- (- ?x31047 (* (* 2.0 l_0_12_231) l_0_12_240)) (* (* 2.0 l_0_12_232) l_0_12_241))))
 (let ((?x31055 (- (- ?x31051 (* (* 2.0 l_0_12_233) l_0_12_242)) (* (* 2.0 l_0_12_234) l_0_12_243))))
 (let ((?x31059 (- (- ?x31055 (* (* 2.0 l_0_12_259) l_0_12_268)) (* (* 2.0 l_0_12_260) l_0_12_269))))
 (let ((?x31063 (- (- ?x31059 (* (* 2.0 l_0_12_261) l_0_12_270)) (* (* 2.0 l_0_12_262) l_0_12_271))))
 (= (- (+ ?x31063 ?x14249) ?x27224) 0.0))))))))))))
(assert
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x29689 (* ?x14252 l_0_12_72)))
 (let ((?x31150 (* l_0_12_273 l_0_12_273)))
 (let ((?x31148 (* l_0_12_272 l_0_12_272)))
 (let ((?x31146 (* l_0_12_271 l_0_12_271)))
 (let ((?x31144 (* l_0_12_270 l_0_12_270)))
 (let ((?x31142 (* l_0_12_269 l_0_12_269)))
 (let ((?x31140 (* l_0_12_268 l_0_12_268)))
 (let ((?x31138 (* l_0_12_245 l_0_12_245)))
 (let ((?x31136 (* l_0_12_244 l_0_12_244)))
 (let ((?x31134 (* l_0_12_243 l_0_12_243)))
 (let ((?x31132 (* l_0_12_242 l_0_12_242)))
 (let ((?x31130 (* l_0_12_241 l_0_12_241)))
 (let ((?x31128 (* l_0_12_240 l_0_12_240)))
 (let ((?x31126 (* l_0_12_217 l_0_12_217)))
 (let ((?x31124 (* l_0_12_216 l_0_12_216)))
 (let ((?x31122 (* l_0_12_215 l_0_12_215)))
 (let ((?x31120 (* l_0_12_214 l_0_12_214)))
 (let ((?x31118 (* l_0_12_213 l_0_12_213)))
 (let ((?x31116 (* l_0_12_212 l_0_12_212)))
 (let ((?x31123 (- (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_85) ?x31116) ?x31118) ?x31120) ?x31122)))
 (let ((?x31137 (- (- (- (- (- (- (- ?x31123 ?x31124) ?x31126) ?x31128) ?x31130) ?x31132) ?x31134) ?x31136)))
 (let ((?x31151 (- (- (- (- (- (- (- ?x31137 ?x31138) ?x31140) ?x31142) ?x31144) ?x31146) ?x31148) ?x31150)))
 (= (+ ?x31151 ?x29689) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x14252 (* 2.0 l_0_12_57)))
 (let ((?x18312 (* ?x14252 l_0_12_78)))
 (let ((?x31188 (- (* (* (- 2.0) l_0_12_106) l_0_12_85) (* (* 2.0 l_0_12_212) l_0_12_218))))
 (let ((?x31194 (- (- ?x31188 (* (* 2.0 l_0_12_213) l_0_12_219)) (* (* 2.0 l_0_12_214) l_0_12_220))))
 (let ((?x31200 (- (- ?x31194 (* (* 2.0 l_0_12_215) l_0_12_221)) (* (* 2.0 l_0_12_216) l_0_12_222))))
 (let ((?x31206 (- (- ?x31200 (* (* 2.0 l_0_12_217) l_0_12_223)) (* (* 2.0 l_0_12_240) l_0_12_246))))
 (let ((?x31212 (- (- ?x31206 (* (* 2.0 l_0_12_241) l_0_12_247)) (* (* 2.0 l_0_12_242) l_0_12_248))))
 (let ((?x31218 (- (- ?x31212 (* (* 2.0 l_0_12_243) l_0_12_249)) (* (* 2.0 l_0_12_244) l_0_12_250))))
 (let ((?x31224 (- (- ?x31218 (* (* 2.0 l_0_12_245) l_0_12_251)) (* (* 2.0 l_0_12_268) l_0_12_274))))
 (let ((?x31230 (- (- ?x31224 (* (* 2.0 l_0_12_269) l_0_12_275)) (* (* 2.0 l_0_12_270) l_0_12_276))))
 (let ((?x31236 (- (- ?x31230 (* (* 2.0 l_0_12_271) l_0_12_277)) (* (* 2.0 l_0_12_272) l_0_12_278))))
 (= (+ (- ?x31236 (* (* 2.0 l_0_12_273) l_0_12_279)) ?x18312) 0.0)))))))))))))
(assert
 (let ((?x29714 (* l_0_12_87 l_0_12_87)))
 (let ((?x29712 (* l_0_12_86 l_0_12_86)))
 (let ((?x31295 (- (- (+ (* l_0_12_58 l_0_12_58) (* l_0_12_59 l_0_12_59)) ?x29712) ?x29714)))
 (= ?x31295 0.0)))))
(assert
 (let ((?x27500 (* 2.0 l_0_12_87)))
 (let ((?x27501 (* ?x27500 l_0_12_92)))
 (let ((?x27497 (* 2.0 l_0_12_86)))
 (let ((?x27498 (* ?x27497 l_0_12_91)))
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x27495 (* ?x27494 l_0_12_64)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x27492 (* ?x27491 l_0_12_63)))
 (= (- (- (+ ?x27492 ?x27495) ?x27498) ?x27501) 0.0))))))))))
(assert
 (let ((?x27494 (* 2.0 l_0_12_59)))
 (let ((?x29762 (* ?x27494 l_0_12_73)))
 (let ((?x27491 (* 2.0 l_0_12_58)))
 (let ((?x29760 (* ?x27491 l_0_12_72)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x29753 (* ?x27710 l_0_12_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_100) l_0_12_86) ?x29753) ?x29760) ?x29762) 0.0))))))))
(assert
 (let ((?x27619 (* l_0_12_94 l_0_12_94)))
 (let ((?x27617 (* l_0_12_93 l_0_12_93)))
 (let ((?x27615 (* l_0_12_92 l_0_12_92)))
 (let ((?x27613 (* l_0_12_91 l_0_12_91)))
 (let ((?x27611 (* l_0_12_66 l_0_12_66)))
 (let ((?x27609 (* l_0_12_65 l_0_12_65)))
 (let ((?x31316 (+ (+ (+ (* l_0_12_63 l_0_12_63) (* l_0_12_64 l_0_12_64)) ?x27609) ?x27611)))
 (= (- (- (- (- ?x31316 ?x27613) ?x27615) ?x27617) ?x27619) 0.0)))))))))
(assert
 (let ((?x27389 (* 2.0 l_0_12_66)))
 (let ((?x27751 (* ?x27389 l_0_12_75)))
 (let ((?x27386 (* 2.0 l_0_12_65)))
 (let ((?x27749 (* ?x27386 l_0_12_74)))
 (let ((?x27383 (* 2.0 l_0_12_64)))
 (let ((?x27747 (* ?x27383 l_0_12_73)))
 (let ((?x27380 (* 2.0 l_0_12_63)))
 (let ((?x27745 (* ?x27380 l_0_12_72)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x27729 (* ?x27728 l_0_12_94)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x27726 (* ?x27725 l_0_12_93)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x27712 (* ?x27710 l_0_12_92)))
 (let ((?x31336 (+ (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_91) ?x27712) ?x27726) ?x27729) ?x27745)))
 (= (+ (+ (+ ?x31336 ?x27747) ?x27749) ?x27751) 0.0)))))))))))))))))
(assert
 (let ((?x29987 (* l_0_12_77 l_0_12_77)))
 (let ((?x29985 (* l_0_12_76 l_0_12_76)))
 (let ((?x29983 (* l_0_12_75 l_0_12_75)))
 (let ((?x29981 (* l_0_12_74 l_0_12_74)))
 (let ((?x29979 (* l_0_12_73 l_0_12_73)))
 (let ((?x29977 (* l_0_12_72 l_0_12_72)))
 (let ((?x29975 (* l_0_12_105 l_0_12_105)))
 (let ((?x29973 (* l_0_12_104 l_0_12_104)))
 (let ((?x29971 (* l_0_12_103 l_0_12_103)))
 (let ((?x29969 (* l_0_12_102 l_0_12_102)))
 (let ((?x31346 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x29969)))
 (let ((?x31353 (+ (+ (+ (+ (- (- (- ?x31346 ?x29971) ?x29973) ?x29975) ?x29977) ?x29979) ?x29981) ?x29983)))
 (= (+ (+ ?x31353 ?x29985) ?x29987) 0.0))))))))))))))
(assert
 (let ((?x30031 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x30028 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x30025 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x30022 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x30019 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x30016 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x30013 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x29885 (* 2.0 l_0_12_104)))
 (let ((?x30010 (* ?x29885 l_0_12_110)))
 (let ((?x27728 (* 2.0 l_0_12_103)))
 (let ((?x30008 (* ?x27728 l_0_12_109)))
 (let ((?x27725 (* 2.0 l_0_12_102)))
 (let ((?x30006 (* ?x27725 l_0_12_108)))
 (let ((?x27710 (* 2.0 l_0_12_101)))
 (let ((?x30004 (* ?x27710 l_0_12_107)))
 (let ((?x21272 (- (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_106) ?x30004) ?x30006) ?x30008) ?x30010)))
 (let ((?x19653 (+ (+ (+ (+ (+ (+ (- ?x21272 ?x30013) ?x30016) ?x30019) ?x30022) ?x30025) ?x30028) ?x30031)))
 (= ?x19653 0.0)))))))))))))))))))
(assert
 (let ((?x30094 (* l_0_12_84 l_0_12_84)))
 (let ((?x30092 (* l_0_12_83 l_0_12_83)))
 (let ((?x30090 (* l_0_12_82 l_0_12_82)))
 (let ((?x30088 (* l_0_12_81 l_0_12_81)))
 (let ((?x30086 (* l_0_12_80 l_0_12_80)))
 (let ((?x30084 (* l_0_12_79 l_0_12_79)))
 (let ((?x30082 (* l_0_12_78 l_0_12_78)))
 (let ((?x30080 (* l_0_12_112 l_0_12_112)))
 (let ((?x30078 (* l_0_12_111 l_0_12_111)))
 (let ((?x30076 (* l_0_12_110 l_0_12_110)))
 (let ((?x30074 (* l_0_12_109 l_0_12_109)))
 (let ((?x30072 (* l_0_12_108 l_0_12_108)))
 (let ((?x21305 (- (- (* (- l_0_12_106) l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x30072)))
 (let ((?x4267 (+ (+ (+ (- (- (- (- ?x21305 ?x30074) ?x30076) ?x30078) ?x30080) ?x30082) ?x30084) ?x30086)))
 (= (+ (+ (+ (+ ?x4267 ?x30088) ?x30090) ?x30092) ?x30094) 0.0))))))))))))))))
(assert
 (let ((?x31380 (- (* (* (- 2.0) l_0_12_197) l_0_12_198) (* (* 2.0 l_0_12_225) l_0_12_226))))
 (= (- ?x31380 (* (* 2.0 l_0_12_253) l_0_12_254)) 0.0)))
(assert
 (let ((?x31403 (- (* (* (- 2.0) l_0_12_197) l_0_12_203) (* (* 2.0 l_0_12_225) l_0_12_231))))
 (= (- ?x31403 (* (* 2.0 l_0_12_253) l_0_12_259)) 0.0)))
(assert
 (let ((?x31422 (- (* (* (- 2.0) l_0_12_197) l_0_12_218) (* (* 2.0 l_0_12_225) l_0_12_246))))
 (= (- ?x31422 (* (* 2.0 l_0_12_253) l_0_12_274)) 0.0)))
(assert
 (let ((?x31447 (* l_0_12_255 l_0_12_255)))
 (let ((?x31445 (* l_0_12_254 l_0_12_254)))
 (let ((?x31443 (* l_0_12_227 l_0_12_227)))
 (let ((?x31441 (* l_0_12_226 l_0_12_226)))
 (let ((?x31442 (- (- (* (- l_0_12_198) l_0_12_198) (* l_0_12_199 l_0_12_199)) ?x31441)))
 (= (- (- (- ?x31442 ?x31443) ?x31445) ?x31447) 0.0)))))))
(assert
 (let ((?x4408 (- (* (* (- 2.0) l_0_12_198) l_0_12_203) (* (* 2.0 l_0_12_199) l_0_12_204))))
 (let ((?x21304 (- (- ?x4408 (* (* 2.0 l_0_12_226) l_0_12_231)) (* (* 2.0 l_0_12_227) l_0_12_232))))
 (let ((?x31458 (- (- ?x21304 (* (* 2.0 l_0_12_254) l_0_12_259)) (* (* 2.0 l_0_12_255) l_0_12_260))))
 (= ?x31458 0.0)))))
(assert
 (let ((?x31497 (* l_0_12_262 l_0_12_262)))
 (let ((?x31495 (* l_0_12_261 l_0_12_261)))
 (let ((?x31493 (* l_0_12_260 l_0_12_260)))
 (let ((?x31491 (* l_0_12_259 l_0_12_259)))
 (let ((?x31489 (* l_0_12_234 l_0_12_234)))
 (let ((?x31487 (* l_0_12_233 l_0_12_233)))
 (let ((?x31485 (* l_0_12_232 l_0_12_232)))
 (let ((?x31483 (* l_0_12_231 l_0_12_231)))
 (let ((?x31481 (* l_0_12_206 l_0_12_206)))
 (let ((?x21349 (* l_0_12_205 l_0_12_205)))
 (let ((?x4487 (- (- (* (- l_0_12_203) l_0_12_203) (* l_0_12_204 l_0_12_204)) ?x21349)))
 (let ((?x31494 (- (- (- (- (- (- (- ?x4487 ?x31481) ?x31483) ?x31485) ?x31487) ?x31489) ?x31491) ?x31493)))
 (= (- (- ?x31494 ?x31495) ?x31497) 0.0))))))))))))))
(assert
 (let ((?x31560 (* l_0_12_280 l_0_12_280)))
 (let ((?x31558 (* l_0_12_279 l_0_12_279)))
 (let ((?x31556 (* l_0_12_278 l_0_12_278)))
 (let ((?x31554 (* l_0_12_277 l_0_12_277)))
 (let ((?x31552 (* l_0_12_276 l_0_12_276)))
 (let ((?x31550 (* l_0_12_275 l_0_12_275)))
 (let ((?x31548 (* l_0_12_274 l_0_12_274)))
 (let ((?x31546 (* l_0_12_252 l_0_12_252)))
 (let ((?x31544 (* l_0_12_251 l_0_12_251)))
 (let ((?x31542 (* l_0_12_250 l_0_12_250)))
 (let ((?x31540 (* l_0_12_249 l_0_12_249)))
 (let ((?x31538 (* l_0_12_248 l_0_12_248)))
 (let ((?x31536 (* l_0_12_247 l_0_12_247)))
 (let ((?x31534 (* l_0_12_246 l_0_12_246)))
 (let ((?x31532 (* l_0_12_224 l_0_12_224)))
 (let ((?x31530 (* l_0_12_223 l_0_12_223)))
 (let ((?x31528 (* l_0_12_222 l_0_12_222)))
 (let ((?x31526 (* l_0_12_221 l_0_12_221)))
 (let ((?x31524 (* l_0_12_220 l_0_12_220)))
 (let ((?x31525 (- (- (* (- l_0_12_218) l_0_12_218) (* l_0_12_219 l_0_12_219)) ?x31524)))
 (let ((?x31539 (- (- (- (- (- (- (- ?x31525 ?x31526) ?x31528) ?x31530) ?x31532) ?x31534) ?x31536) ?x31538)))
 (let ((?x31553 (- (- (- (- (- (- (- ?x31539 ?x31540) ?x31542) ?x31544) ?x31546) ?x31548) ?x31550) ?x31552)))
 (= (- (- (- (- ?x31553 ?x31554) ?x31556) ?x31558) ?x31560) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_29 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_34 0.0))
(assert
 (>= l_0_12_38 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_49 0.0))
(assert
 (>= l_0_12_56 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_59 0.0))
(assert
 (>= l_0_12_62 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_71 0.0))
(assert
 (>= l_0_12_77 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_112 0.0))
(assert
 (>= l_0_12_113 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_122 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_133 0.0))
(assert
 (>= l_0_12_140 0.0))
(assert
 (>= l_0_12_141 0.0))
(assert
 (>= l_0_12_143 0.0))
(assert
 (>= l_0_12_146 0.0))
(assert
 (>= l_0_12_150 0.0))
(assert
 (>= l_0_12_155 0.0))
(assert
 (>= l_0_12_161 0.0))
(assert
 (>= l_0_12_168 0.0))
(assert
 (>= l_0_12_169 0.0))
(assert
 (>= l_0_12_171 0.0))
(assert
 (>= l_0_12_174 0.0))
(assert
 (>= l_0_12_178 0.0))
(assert
 (>= l_0_12_183 0.0))
(assert
 (>= l_0_12_189 0.0))
(assert
 (>= l_0_12_196 0.0))
(assert
 (>= l_0_12_197 0.0))
(assert
 (>= l_0_12_199 0.0))
(assert
 (>= l_0_12_202 0.0))
(assert
 (>= l_0_12_206 0.0))
(assert
 (>= l_0_12_211 0.0))
(assert
 (>= l_0_12_217 0.0))
(assert
 (>= l_0_12_224 0.0))
(assert
 (>= l_0_12_225 0.0))
(assert
 (>= l_0_12_227 0.0))
(assert
 (>= l_0_12_230 0.0))
(assert
 (>= l_0_12_234 0.0))
(assert
 (>= l_0_12_239 0.0))
(assert
 (>= l_0_12_245 0.0))
(assert
 (>= l_0_12_252 0.0))
(assert
 (>= l_0_12_253 0.0))
(assert
 (>= l_0_12_255 0.0))
(assert
 (>= l_0_12_258 0.0))
(assert
 (>= l_0_12_262 0.0))
(assert
 (>= l_0_12_267 0.0))
(assert
 (>= l_0_12_273 0.0))
(assert
 (>= l_0_12_280 0.0))
(assert
 (let ((?x31673 (* l_0_13_29 l_0_13_29)))
 (let ((?x31663 (- (+ (* (- l_0_13_1) l_0_13_1) (* l_0_13_141 l_0_13_141)) (* (* 2.0 l_0_13_203) l_0_13_218))))
 (let ((?x31669 (- (- ?x31663 (* (* 2.0 l_0_13_204) l_0_13_219)) (* (* 2.0 l_0_13_205) l_0_13_220))))
 (= (+ (+ (- ?x31669 (* (* 2.0 l_0_13_206) l_0_13_221)) ?x31673) 2.0) 0.0)))))
(assert
 (= (- (- _a_0_) (* l_0_13_197 l_0_13_197)) 0.0))
(assert
 (let ((?x31673 (* l_0_13_29 l_0_13_29)))
 (let ((?x31709 (+ (+ (- _a_1_) (* l_0_13_1 l_0_13_1)) (* 2.0 (* l_0_13_169 l_0_13_169)))))
 (= (- (- ?x31709 (* (* 2.0 l_0_13_197) l_0_13_200)) ?x31673) 0.0))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x31732 (* ?x31731 l_0_13_91)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x31729 (* ?x31728 l_0_13_63)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31726 (* ?x31725 l_0_13_30)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31723 (* ?x31722 l_0_13_142)))
 (let ((?x31733 (+ (- (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_2) ?x31723) ?x31726) ?x31729) ?x31732)))
 (= ?x31733 0.0)))))))))))
(assert
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x31789 (* ?x31788 l_0_13_53)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x31786 (* ?x31785 l_0_13_52)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x31783 (* ?x31782 l_0_13_51)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x31780 (* ?x31779 l_0_13_50)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31777 (* ?x31725 l_0_13_32)))
 (let ((?x31774 (* 2.0 l_0_13_24)))
 (let ((?x31775 (* ?x31774 l_0_13_9)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x31772 (* ?x31771 l_0_13_8)))
 (let ((?x31768 (* 2.0 l_0_13_22)))
 (let ((?x31769 (* ?x31768 l_0_13_7)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31754 (* ?x31722 l_0_13_144)))
 (let ((?x31753 (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) (* (* 2.0 l_0_13_10) l_0_13_25))))
 (let ((?x31761 (+ (+ (+ ?x31753 ?x31754) (* (* 4.0 l_0_13_175) l_0_13_190)) (* (* 4.0 l_0_13_176) l_0_13_191))))
 (let ((?x31767 (+ (+ ?x31761 (* (* 4.0 l_0_13_177) l_0_13_192)) (* (* 4.0 l_0_13_178) l_0_13_193))))
 (let ((?x31787 (- (- (- (+ (+ (+ (+ ?x31767 ?x31769) ?x31772) ?x31775) ?x31777) ?x31780) ?x31783) ?x31786)))
 (= (- ?x31787 ?x31789) 0.0))))))))))))))))))))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31826 (* ?x31725 l_0_13_35)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31824 (* ?x31722 l_0_13_147)))
 (= (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x31824) ?x31826) 0.0))))))
(assert
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x31900 (* ?x31899 l_0_13_81)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x31897 (* ?x31896 l_0_13_80)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x31894 (* ?x31893 l_0_13_79)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x31891 (* ?x31890 l_0_13_78)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31888 (* ?x31725 l_0_13_39)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x31874 (* ?x31873 l_0_13_165)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x31871 (* ?x31870 l_0_13_164)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x31868 (* ?x31867 l_0_13_163)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x31865 (* ?x31864 l_0_13_162)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31862 (* ?x31722 l_0_13_151)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x31848 (* ?x31847 l_0_13_94)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x31845 (* ?x31844 l_0_13_93)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x31842 (* ?x31841 l_0_13_92)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x31834 (* ?x31832 l_0_13_91)))
 (let ((?x31849 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) ?x31834) ?x31842) ?x31845) ?x31848)))
 (let ((?x31855 (- (- ?x31849 (* (* 2.0 l_0_13_119) l_0_13_134)) (* (* 2.0 l_0_13_120) l_0_13_135))))
 (let ((?x31861 (- (- ?x31855 (* (* 2.0 l_0_13_121) l_0_13_136)) (* (* 2.0 l_0_13_122) l_0_13_137))))
 (let ((?x31878 (- (- (- (- (- (+ ?x31861 ?x31862) ?x31865) ?x31868) ?x31871) ?x31874) (* (* 2.0 l_0_13_175) l_0_13_190))))
 (let ((?x31884 (- (- ?x31878 (* (* 2.0 l_0_13_176) l_0_13_191)) (* (* 2.0 l_0_13_177) l_0_13_192))))
 (let ((?x31895 (- (- (+ (- ?x31884 (* (* 2.0 l_0_13_178) l_0_13_193)) ?x31888) ?x31891) ?x31894)))
 (= (- (- ?x31895 ?x31897) ?x31900) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x31900 (* ?x31899 l_0_13_81)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x31897 (* ?x31896 l_0_13_80)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x31894 (* ?x31893 l_0_13_79)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x31891 (* ?x31890 l_0_13_78)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31970 (* ?x31725 l_0_13_44)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31968 (* ?x31722 l_0_13_156)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x31848 (* ?x31847 l_0_13_94)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x31845 (* ?x31844 l_0_13_93)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x31842 (* ?x31841 l_0_13_92)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x31834 (* ?x31832 l_0_13_91)))
 (let ((?x31967 (- (- (- (- (* (* (- 2.0) l_0_13_1) l_0_13_16) ?x31834) ?x31842) ?x31845) ?x31848)))
 (= (+ (+ (+ (+ (+ (+ ?x31967 ?x31968) ?x31970) ?x31891) ?x31894) ?x31897) ?x31900) 0.0)))))))))))))))))))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x21830 (* ?x31725 l_0_13_50)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x4803 (* ?x31722 l_0_13_162)))
 (= (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_22) ?x4803) ?x21830) 0.0))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x32007 (* ?x32006 l_0_13_92)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x32004 (* ?x32003 l_0_13_91)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x32001 (* ?x32000 l_0_13_64)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x31998 (* ?x31997 l_0_13_63)))
 (let ((?x31995 (* l_0_13_31 l_0_13_31)))
 (let ((?x31993 (* l_0_13_30 l_0_13_30)))
 (let ((?x31991 (* l_0_13_3 l_0_13_3)))
 (let ((?x31984 (* l_0_13_2 l_0_13_2)))
 (let ((?x31990 (- (+ (* l_0_13_142 l_0_13_142) (* l_0_13_143 l_0_13_143)) ?x31984)))
 (let ((?x32008 (+ (+ (- (- (+ (+ (- ?x31990 ?x31991) ?x31993) ?x31995) ?x31998) ?x32001) ?x32004) ?x32007)))
 (= ?x32008 0.0))))))))))))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x32057 (* ?x32056 l_0_13_93)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x32054 (* ?x32053 l_0_13_92)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x32051 (* ?x32050 l_0_13_91)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x32048 (* ?x32047 l_0_13_65)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x32045 (* ?x32044 l_0_13_64)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x32042 (* ?x32041 l_0_13_63)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32039 (* ?x32038 l_0_13_33)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32036 (* ?x32035 l_0_13_32)))
 (let ((?x32032 (* 2.0 l_0_13_3)))
 (let ((?x32033 (* ?x32032 l_0_13_5)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32030 (* ?x32029 l_0_13_4)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32027 (* ?x32018 l_0_13_145)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32017 (* ?x32015 l_0_13_144)))
 (let ((?x32046 (- (- (+ (+ (- (- (+ ?x32017 ?x32027) ?x32030) ?x32033) ?x32036) ?x32039) ?x32042) ?x32045)))
 (= (+ (+ (+ (- ?x32046 ?x32048) ?x32051) ?x32054) ?x32057) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32112 (* l_0_13_94 l_0_13_94)))
 (let ((?x32110 (* l_0_13_93 l_0_13_93)))
 (let ((?x32108 (* l_0_13_92 l_0_13_92)))
 (let ((?x32106 (* l_0_13_91 l_0_13_91)))
 (let ((?x32104 (* l_0_13_66 l_0_13_66)))
 (let ((?x32102 (* l_0_13_65 l_0_13_65)))
 (let ((?x32100 (* l_0_13_64 l_0_13_64)))
 (let ((?x32098 (* l_0_13_63 l_0_13_63)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32096 (* ?x32038 l_0_13_36)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32094 (* ?x32035 l_0_13_35)))
 (let ((?x32032 (* 2.0 l_0_13_3)))
 (let ((?x32092 (* ?x32032 l_0_13_8)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32090 (* ?x32029 l_0_13_7)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32088 (* ?x32018 l_0_13_148)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32087 (* ?x32015 l_0_13_147)))
 (let ((?x32101 (- (- (+ (+ (- (- (+ ?x32087 ?x32088) ?x32090) ?x32092) ?x32094) ?x32096) ?x32098) ?x32100)))
 (= (+ (+ (+ (+ (- (- ?x32101 ?x32102) ?x32104) ?x32106) ?x32108) ?x32110) ?x32112) 0.0)))))))))))))))))))))))
(assert
 (let ((?x32173 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32170 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32167 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32164 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x32161 (* ?x31899 l_0_13_70)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x32159 (* ?x31896 l_0_13_69)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x32157 (* ?x31893 l_0_13_68)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x32155 (* ?x31890 l_0_13_67)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32153 (* ?x32038 l_0_13_40)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32151 (* ?x32035 l_0_13_39)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32149 (* ?x32018 l_0_13_152)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32147 (* ?x32015 l_0_13_151)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32145 (* ?x32144 l_0_13_3)))
 (let ((?x32152 (+ (+ (+ (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x32145) ?x32147) ?x32149) ?x32151)))
 (let ((?x32168 (+ (+ (- (- (- (- (+ ?x32152 ?x32153) ?x32155) ?x32157) ?x32159) ?x32161) ?x32164) ?x32167)))
 (= (+ (+ ?x32168 ?x32170) ?x32173) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x32246 (* ?x31899 l_0_13_75)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x32244 (* ?x31896 l_0_13_74)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x32242 (* ?x31893 l_0_13_73)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x32240 (* ?x31890 l_0_13_72)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32238 (* ?x32038 l_0_13_45)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32236 (* ?x32035 l_0_13_44)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32234 (* ?x32233 l_0_13_3)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32231 (* ?x32230 l_0_13_2)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32228 (* ?x32018 l_0_13_157)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32226 (* ?x32015 l_0_13_156)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x32224 (* ?x32223 l_0_13_94)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x32221 (* ?x32220 l_0_13_93)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x32218 (* ?x32217 l_0_13_92)))
 (let ((?x32225 (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_91) ?x32218) ?x32221) ?x32224)))
 (let ((?x32241 (- (+ (+ (- (- (+ (+ ?x32225 ?x32226) ?x32228) ?x32231) ?x32234) ?x32236) ?x32238) ?x32240)))
 (= (- (- (- ?x32241 ?x32242) ?x32244) ?x32246) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x31900 (* ?x31899 l_0_13_81)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x31897 (* ?x31896 l_0_13_80)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x31894 (* ?x31893 l_0_13_79)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x31891 (* ?x31890 l_0_13_78)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32294 (* ?x32038 l_0_13_51)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32292 (* ?x32035 l_0_13_50)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x32290 (* ?x31771 l_0_13_3)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32288 (* ?x32029 l_0_13_22)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32286 (* ?x32018 l_0_13_163)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32284 (* ?x32015 l_0_13_162)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x31848 (* ?x31847 l_0_13_94)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x31845 (* ?x31844 l_0_13_93)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x31842 (* ?x31841 l_0_13_92)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x31834 (* ?x31832 l_0_13_91)))
 (let ((?x32291 (- (- (+ (+ (+ (+ (+ ?x31834 ?x31842) ?x31845) ?x31848) ?x32284) ?x32286) ?x32288) ?x32290)))
 (= (- (- (- (- (+ (+ ?x32291 ?x32292) ?x32294) ?x31891) ?x31894) ?x31897) ?x31900) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x32336 (* l_0_13_6 l_0_13_6)))
 (let ((?x32334 (* l_0_13_5 l_0_13_5)))
 (let ((?x32332 (* l_0_13_4 l_0_13_4)))
 (let ((?x32330 (* l_0_13_34 l_0_13_34)))
 (let ((?x32328 (* l_0_13_33 l_0_13_33)))
 (let ((?x32326 (* l_0_13_32 l_0_13_32)))
 (let ((?x32324 (* l_0_13_146 l_0_13_146)))
 (let ((?x32325 (+ (+ (* l_0_13_144 l_0_13_144) (* l_0_13_145 l_0_13_145)) ?x32324)))
 (= (- (- (- (+ (+ (+ ?x32325 ?x32326) ?x32328) ?x32330) ?x32332) ?x32334) ?x32336) 0.0))))))))))
(assert
 (let ((?x32371 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x32368 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x32365 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32362 (* ?x32361 l_0_13_37)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32359 (* ?x32358 l_0_13_36)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32356 (* ?x32355 l_0_13_35)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32353 (* ?x32352 l_0_13_149)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32350 (* ?x32349 l_0_13_148)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x5212 (* ?x5210 l_0_13_147)))
 (let ((?x32369 (- (- (+ (+ (+ (+ (+ ?x5212 ?x32350) ?x32353) ?x32356) ?x32359) ?x32362) ?x32365) ?x32368)))
 (= (- ?x32369 ?x32371) 0.0))))))))))))))))))
(assert
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32414 (* ?x32361 l_0_13_41)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32412 (* ?x32358 l_0_13_40)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32410 (* ?x32355 l_0_13_39)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32408 (* ?x32352 l_0_13_153)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32406 (* ?x32349 l_0_13_152)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x32404 (* ?x5210 l_0_13_151)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32402 (* ?x32401 l_0_13_6)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32399 (* ?x32144 l_0_13_5)))
 (let ((?x32407 (+ (+ (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x32399) ?x32402) ?x32404) ?x32406)))
 (= (+ (+ (+ (+ ?x32407 ?x32408) ?x32410) ?x32412) ?x32414) 0.0)))))))))))))))))))
(assert
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32452 (* ?x32361 l_0_13_46)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32450 (* ?x32358 l_0_13_45)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32448 (* ?x32355 l_0_13_44)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32446 (* ?x32445 l_0_13_6)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32443 (* ?x32233 l_0_13_5)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32441 (* ?x32230 l_0_13_4)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32439 (* ?x32352 l_0_13_158)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32437 (* ?x32349 l_0_13_157)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x32436 (* ?x5210 l_0_13_156)))
 (let ((?x32451 (+ (+ (- (- (- (+ (+ ?x32436 ?x32437) ?x32439) ?x32441) ?x32443) ?x32446) ?x32448) ?x32450)))
 (= (+ ?x32451 ?x32452) 0.0)))))))))))))))))))))
(assert
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32492 (* ?x32361 l_0_13_52)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32490 (* ?x32358 l_0_13_51)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32488 (* ?x32355 l_0_13_50)))
 (let ((?x31774 (* 2.0 l_0_13_24)))
 (let ((?x32486 (* ?x31774 l_0_13_6)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x32484 (* ?x31771 l_0_13_5)))
 (let ((?x31768 (* 2.0 l_0_13_22)))
 (let ((?x32482 (* ?x31768 l_0_13_4)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32472 (* ?x32352 l_0_13_164)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x22060 (* ?x32349 l_0_13_163)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x22035 (* ?x5210 l_0_13_162)))
 (let ((?x32491 (+ (+ (- (- (- (+ (+ ?x22035 ?x22060) ?x32472) ?x32482) ?x32484) ?x32486) ?x32488) ?x32490)))
 (= (+ ?x32491 ?x32492) 0.0)))))))))))))))))))))
(assert
 (let ((?x32547 (* l_0_13_9 l_0_13_9)))
 (let ((?x32545 (* l_0_13_8 l_0_13_8)))
 (let ((?x32543 (* l_0_13_7 l_0_13_7)))
 (let ((?x32541 (* l_0_13_38 l_0_13_38)))
 (let ((?x32539 (* l_0_13_37 l_0_13_37)))
 (let ((?x32537 (* l_0_13_36 l_0_13_36)))
 (let ((?x32535 (* l_0_13_35 l_0_13_35)))
 (let ((?x32533 (* l_0_13_150 l_0_13_150)))
 (let ((?x32531 (* l_0_13_149 l_0_13_149)))
 (let ((?x32529 (* l_0_13_148 l_0_13_148)))
 (let ((?x32530 (+ (+ (* (- l_0_13_10) l_0_13_10) (* l_0_13_147 l_0_13_147)) ?x32529)))
 (let ((?x32544 (- (+ (+ (+ (+ (+ (+ ?x32530 ?x32531) ?x32533) ?x32535) ?x32537) ?x32539) ?x32541) ?x32543)))
 (= (- (- ?x32544 ?x32545) ?x32547) 0.0))))))))))))))
(assert
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x32583 (* ?x31788 l_0_13_42)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x32581 (* ?x31785 l_0_13_41)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x32579 (* ?x31782 l_0_13_40)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x32577 (* ?x31779 l_0_13_39)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x32575 (* ?x31873 l_0_13_154)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x32573 (* ?x31870 l_0_13_153)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x32571 (* ?x31867 l_0_13_152)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x32569 (* ?x31864 l_0_13_151)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32567 (* ?x32401 l_0_13_9)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32565 (* ?x32144 l_0_13_8)))
 (let ((?x32562 (* 2.0 l_0_13_11)))
 (let ((?x32563 (* ?x32562 l_0_13_7)))
 (let ((?x32570 (+ (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x32563) ?x32565) ?x32567) ?x32569)))
 (let ((?x32584 (+ (+ (+ (+ (+ (+ (+ ?x32570 ?x32571) ?x32573) ?x32575) ?x32577) ?x32579) ?x32581) ?x32583)))
 (= ?x32584 0.0))))))))))))))))))))))))))
(assert
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x32618 (* ?x31788 l_0_13_47)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x32616 (* ?x31785 l_0_13_46)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x32614 (* ?x31782 l_0_13_45)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x32612 (* ?x31779 l_0_13_44)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32610 (* ?x32445 l_0_13_9)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32608 (* ?x32233 l_0_13_8)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32606 (* ?x32230 l_0_13_7)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x32604 (* ?x31873 l_0_13_159)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x32602 (* ?x31870 l_0_13_158)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x32600 (* ?x31867 l_0_13_157)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x32598 (* ?x31864 l_0_13_156)))
 (let ((?x32605 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_10) l_0_13_19) ?x32598) ?x32600) ?x32602) ?x32604)))
 (let ((?x32619 (+ (+ (+ (+ (- (- (- ?x32605 ?x32606) ?x32608) ?x32610) ?x32612) ?x32614) ?x32616) ?x32618)))
 (= ?x32619 0.0))))))))))))))))))))))))))
(assert
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x31789 (* ?x31788 l_0_13_53)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x31786 (* ?x31785 l_0_13_52)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x31783 (* ?x31782 l_0_13_51)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x31780 (* ?x31779 l_0_13_50)))
 (let ((?x31774 (* 2.0 l_0_13_24)))
 (let ((?x31775 (* ?x31774 l_0_13_9)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x31772 (* ?x31771 l_0_13_8)))
 (let ((?x31768 (* 2.0 l_0_13_22)))
 (let ((?x31769 (* ?x31768 l_0_13_7)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x31874 (* ?x31873 l_0_13_165)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x31871 (* ?x31870 l_0_13_164)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x31868 (* ?x31867 l_0_13_163)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x31865 (* ?x31864 l_0_13_162)))
 (let ((?x32654 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_10) l_0_13_25) ?x31865) ?x31868) ?x31871) ?x31874)))
 (let ((?x32672 (+ (+ (+ (+ (- (- (- ?x32654 ?x31769) ?x31772) ?x31775) ?x31780) ?x31783) ?x31786) ?x31789)))
 (= ?x32672 0.0))))))))))))))))))))))))))
(assert
 (let ((?x32694 (* l_0_13_43 l_0_13_43)))
 (let ((?x32692 (* l_0_13_42 l_0_13_42)))
 (let ((?x32690 (* l_0_13_41 l_0_13_41)))
 (let ((?x32688 (* l_0_13_40 l_0_13_40)))
 (let ((?x32686 (* l_0_13_39 l_0_13_39)))
 (let ((?x32684 (* l_0_13_155 l_0_13_155)))
 (let ((?x32682 (* l_0_13_154 l_0_13_154)))
 (let ((?x32680 (* l_0_13_153 l_0_13_153)))
 (let ((?x5554 (* l_0_13_152 l_0_13_152)))
 (let ((?x5557 (* l_0_13_151 l_0_13_151)))
 (let ((?x22095 (* l_0_13_15 l_0_13_15)))
 (let ((?x5539 (* l_0_13_14 l_0_13_14)))
 (let ((?x5509 (* l_0_13_13 l_0_13_13)))
 (let ((?x5017 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x5509)))
 (let ((?x32685 (+ (+ (+ (+ (+ (- (- ?x5017 ?x5539) ?x22095) ?x5557) ?x5554) ?x32680) ?x32682) ?x32684)))
 (= (+ (+ (+ (+ (+ ?x32685 ?x32686) ?x32688) ?x32690) ?x32692) ?x32694) 0.0)))))))))))))))))
(assert
 (let ((?x32756 (* 2.0 l_0_13_43)))
 (let ((?x32757 (* ?x32756 l_0_13_48)))
 (let ((?x32753 (* 2.0 l_0_13_42)))
 (let ((?x32754 (* ?x32753 l_0_13_47)))
 (let ((?x32750 (* 2.0 l_0_13_41)))
 (let ((?x32751 (* ?x32750 l_0_13_46)))
 (let ((?x32747 (* 2.0 l_0_13_40)))
 (let ((?x32748 (* ?x32747 l_0_13_45)))
 (let ((?x32744 (* 2.0 l_0_13_39)))
 (let ((?x32745 (* ?x32744 l_0_13_44)))
 (let ((?x32741 (* 2.0 l_0_13_155)))
 (let ((?x32742 (* ?x32741 l_0_13_160)))
 (let ((?x32738 (* 2.0 l_0_13_154)))
 (let ((?x32739 (* ?x32738 l_0_13_159)))
 (let ((?x32735 (* 2.0 l_0_13_153)))
 (let ((?x32736 (* ?x32735 l_0_13_158)))
 (let ((?x32732 (* 2.0 l_0_13_152)))
 (let ((?x32733 (* ?x32732 l_0_13_157)))
 (let ((?x32729 (* 2.0 l_0_13_151)))
 (let ((?x32730 (* ?x32729 l_0_13_156)))
 (let ((?x32726 (* 2.0 l_0_13_15)))
 (let ((?x32727 (* ?x32726 l_0_13_20)))
 (let ((?x32723 (* 2.0 l_0_13_14)))
 (let ((?x32724 (* ?x32723 l_0_13_19)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32721 (* ?x32401 l_0_13_18)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32719 (* ?x32144 l_0_13_17)))
 (let ((?x32728 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_16) ?x32719) ?x32721) ?x32724) ?x32727)))
 (let ((?x32749 (+ (+ (+ (+ (+ (+ (+ ?x32728 ?x32730) ?x32733) ?x32736) ?x32739) ?x32742) ?x32745) ?x32748)))
 (= (+ (+ (+ ?x32749 ?x32751) ?x32754) ?x32757) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32756 (* 2.0 l_0_13_43)))
 (let ((?x32830 (* ?x32756 l_0_13_54)))
 (let ((?x32753 (* 2.0 l_0_13_42)))
 (let ((?x32828 (* ?x32753 l_0_13_53)))
 (let ((?x32750 (* 2.0 l_0_13_41)))
 (let ((?x32826 (* ?x32750 l_0_13_52)))
 (let ((?x32747 (* 2.0 l_0_13_40)))
 (let ((?x32824 (* ?x32747 l_0_13_51)))
 (let ((?x32744 (* 2.0 l_0_13_39)))
 (let ((?x32822 (* ?x32744 l_0_13_50)))
 (let ((?x32741 (* 2.0 l_0_13_155)))
 (let ((?x32820 (* ?x32741 l_0_13_166)))
 (let ((?x32738 (* 2.0 l_0_13_154)))
 (let ((?x32818 (* ?x32738 l_0_13_165)))
 (let ((?x32735 (* 2.0 l_0_13_153)))
 (let ((?x32816 (* ?x32735 l_0_13_164)))
 (let ((?x32732 (* 2.0 l_0_13_152)))
 (let ((?x32814 (* ?x32732 l_0_13_163)))
 (let ((?x32729 (* 2.0 l_0_13_151)))
 (let ((?x32799 (* ?x32729 l_0_13_162)))
 (let ((?x32726 (* 2.0 l_0_13_15)))
 (let ((?x32795 (* ?x32726 l_0_13_26)))
 (let ((?x32723 (* 2.0 l_0_13_14)))
 (let ((?x32791 (* ?x32723 l_0_13_25)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32787 (* ?x32401 l_0_13_24)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32783 (* ?x32144 l_0_13_23)))
 (let ((?x32797 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_22) ?x32783) ?x32787) ?x32791) ?x32795)))
 (let ((?x32825 (+ (+ (+ (+ (+ (+ (+ ?x32797 ?x32799) ?x32814) ?x32816) ?x32818) ?x32820) ?x32822) ?x32824)))
 (= (+ (+ (+ ?x32825 ?x32826) ?x32828) ?x32830) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32884 (* l_0_13_49 l_0_13_49)))
 (let ((?x32882 (* l_0_13_48 l_0_13_48)))
 (let ((?x32880 (* l_0_13_47 l_0_13_47)))
 (let ((?x32878 (* l_0_13_46 l_0_13_46)))
 (let ((?x32876 (* l_0_13_45 l_0_13_45)))
 (let ((?x32874 (* l_0_13_44 l_0_13_44)))
 (let ((?x32872 (* l_0_13_21 l_0_13_21)))
 (let ((?x32870 (* l_0_13_20 l_0_13_20)))
 (let ((?x32868 (* l_0_13_19 l_0_13_19)))
 (let ((?x32866 (* l_0_13_18 l_0_13_18)))
 (let ((?x32864 (* l_0_13_17 l_0_13_17)))
 (let ((?x32862 (* l_0_13_161 l_0_13_161)))
 (let ((?x32847 (* l_0_13_160 l_0_13_160)))
 (let ((?x5664 (* l_0_13_16 l_0_13_16)))
 (let ((?x22130 (* l_0_13_159 l_0_13_159)))
 (let ((?x5639 (* l_0_13_158 l_0_13_158)))
 (let ((?x5638 (+ (+ (* l_0_13_156 l_0_13_156) (* l_0_13_157 l_0_13_157)) ?x5639)))
 (let ((?x32869 (- (- (- (+ (+ (- (+ ?x5638 ?x22130) ?x5664) ?x32847) ?x32862) ?x32864) ?x32866) ?x32868)))
 (let ((?x32883 (+ (+ (+ (+ (+ (- (- ?x32869 ?x32870) ?x32872) ?x32874) ?x32876) ?x32878) ?x32880) ?x32882)))
 (= (+ ?x32883 ?x32884) 0.0)))))))))))))))))))))
(assert
 (let ((?x32948 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x32945 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x32942 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x32939 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x32936 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x32933 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x32930 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x32927 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x32924 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32921 (* ?x32445 l_0_13_24)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32919 (* ?x32233 l_0_13_23)))
 (let ((?x32917 (* (* 2.0 l_0_13_161) l_0_13_167)))
 (let ((?x32914 (* (* 2.0 l_0_13_160) l_0_13_166)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32911 (* ?x32230 l_0_13_22)))
 (let ((?x32909 (* (* 2.0 l_0_13_159) l_0_13_165)))
 (let ((?x32906 (* (* 2.0 l_0_13_158) l_0_13_164)))
 (let ((?x32903 (* (* 2.0 l_0_13_157) l_0_13_163)))
 (let ((?x32901 (* (* 2.0 l_0_13_156) l_0_13_162)))
 (let ((?x32920 (- (+ (+ (- (+ (+ (+ ?x32901 ?x32903) ?x32906) ?x32909) ?x32911) ?x32914) ?x32917) ?x32919)))
 (let ((?x32940 (+ (+ (+ (- (- (- (- ?x32920 ?x32921) ?x32924) ?x32927) ?x32930) ?x32933) ?x32936) ?x32939)))
 (= (+ (+ (+ ?x32940 ?x32942) ?x32945) ?x32948) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x33037 (* l_0_13_56 l_0_13_56)))
 (let ((?x33035 (* l_0_13_55 l_0_13_55)))
 (let ((?x33033 (* l_0_13_54 l_0_13_54)))
 (let ((?x33031 (* l_0_13_53 l_0_13_53)))
 (let ((?x33029 (* l_0_13_52 l_0_13_52)))
 (let ((?x33027 (* l_0_13_51 l_0_13_51)))
 (let ((?x33025 (* l_0_13_50 l_0_13_50)))
 (let ((?x33023 (* l_0_13_28 l_0_13_28)))
 (let ((?x33021 (* l_0_13_27 l_0_13_27)))
 (let ((?x33019 (* l_0_13_26 l_0_13_26)))
 (let ((?x33017 (* l_0_13_25 l_0_13_25)))
 (let ((?x33015 (* l_0_13_24 l_0_13_24)))
 (let ((?x33013 (* l_0_13_23 l_0_13_23)))
 (let ((?x33011 (* l_0_13_22 l_0_13_22)))
 (let ((?x33009 (* l_0_13_168 l_0_13_168)))
 (let ((?x33007 (* l_0_13_167 l_0_13_167)))
 (let ((?x33005 (* l_0_13_166 l_0_13_166)))
 (let ((?x33003 (* l_0_13_165 l_0_13_165)))
 (let ((?x33001 (* l_0_13_164 l_0_13_164)))
 (let ((?x33002 (+ (+ (* l_0_13_162 l_0_13_162) (* l_0_13_163 l_0_13_163)) ?x33001)))
 (let ((?x33016 (- (- (- (+ (+ (+ (+ ?x33002 ?x33003) ?x33005) ?x33007) ?x33009) ?x33011) ?x33013) ?x33015)))
 (let ((?x33030 (+ (+ (+ (- (- (- (- ?x33016 ?x33017) ?x33019) ?x33021) ?x33023) ?x33025) ?x33027) ?x33029)))
 (= (+ (+ (+ (+ ?x33030 ?x33031) ?x33033) ?x33035) ?x33037) 0.0))))))))))))))))))))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31726 (* ?x31725 l_0_13_30)))
 (let ((?x33054 (+ (* (* 2.0 l_0_13_1) l_0_13_2) (* (* 4.0 l_0_13_169) l_0_13_170))))
 (let ((?x33060 (- (- ?x33054 (* (* 2.0 l_0_13_198) l_0_13_200)) (* (* 2.0 l_0_13_199) l_0_13_201))))
 (= (- ?x33060 ?x31726) 0.0))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31777 (* ?x31725 l_0_13_32)))
 (let ((?x5748 (* l_0_13_202 l_0_13_202)))
 (let ((?x5747 (* l_0_13_201 l_0_13_201)))
 (let ((?x5698 (* l_0_13_200 l_0_13_200)))
 (let ((?x5174 (+ (* (* 2.0 l_0_13_1) l_0_13_4) (* (* 4.0 l_0_13_169) l_0_13_172))))
 (= (- (- (- (- ?x5174 ?x5698) ?x5747) ?x5748) ?x31777) 0.0))))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31826 (* ?x31725 l_0_13_35)))
 (let ((?x33091 (+ (* (* 2.0 l_0_13_1) l_0_13_7) (* (* 4.0 l_0_13_169) l_0_13_175))))
 (let ((?x33097 (- (- ?x33091 (* (* 2.0 l_0_13_200) l_0_13_203)) (* (* 2.0 l_0_13_201) l_0_13_204))))
 (= (- (- ?x33097 (* (* 2.0 l_0_13_202) l_0_13_205)) ?x31826) 0.0))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33142 (* ?x31731 l_0_13_88)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x33140 (* ?x31728 l_0_13_60)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31888 (* ?x31725 l_0_13_39)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31754 (* ?x31722 l_0_13_144)))
 (let ((?x33126 (- (* (* 2.0 l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_113) l_0_13_116))))
 (let ((?x33132 (+ (- (- ?x33126 ?x31754) (* (* 2.0 l_0_13_169) l_0_13_172)) (* (* 4.0 l_0_13_169) l_0_13_179))))
 (let ((?x33136 (- (- ?x33132 (* (* 2.0 l_0_13_200) l_0_13_207)) (* (* 2.0 l_0_13_201) l_0_13_208))))
 (let ((?x33143 (+ (- (- (- ?x33136 (* (* 2.0 l_0_13_202) l_0_13_209)) ?x31888) ?x33140) ?x33142)))
 (= ?x33143 0.0))))))))))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33142 (* ?x31731 l_0_13_88)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x33140 (* ?x31728 l_0_13_60)))
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x31970 (* ?x31725 l_0_13_44)))
 (let ((?x33158 (+ (* (* 2.0 l_0_13_1) l_0_13_16) (* (* 4.0 l_0_13_169) l_0_13_184))))
 (let ((?x33162 (- (- ?x33158 (* (* 2.0 l_0_13_200) l_0_13_212)) (* (* 2.0 l_0_13_201) l_0_13_213))))
 (let ((?x33167 (- (+ (- (- ?x33162 (* (* 2.0 l_0_13_202) l_0_13_214)) ?x31970) ?x33140) ?x33142)))
 (= ?x33167 0.0)))))))))))
(assert
 (let ((?x31725 (* 2.0 l_0_13_29)))
 (let ((?x21830 (* ?x31725 l_0_13_50)))
 (let ((?x33191 (+ (* (* 2.0 l_0_13_1) l_0_13_22) (* (* 4.0 l_0_13_169) l_0_13_190))))
 (let ((?x33195 (- (- ?x33191 (* (* 2.0 l_0_13_200) l_0_13_218)) (* (* 2.0 l_0_13_201) l_0_13_219))))
 (= (- (- ?x33195 (* (* 2.0 l_0_13_202) l_0_13_220)) ?x21830) 0.0))))))
(assert
 (let ((?x31995 (* l_0_13_31 l_0_13_31)))
 (let ((?x31993 (* l_0_13_30 l_0_13_30)))
 (let ((?x31991 (* l_0_13_3 l_0_13_3)))
 (let ((?x31984 (* l_0_13_2 l_0_13_2)))
 (let ((?x22299 (* l_0_13_171 l_0_13_171)))
 (let ((?x22295 (* 2.0 ?x22299)))
 (let ((?x22298 (* l_0_13_170 l_0_13_170)))
 (let ((?x4569 (* 2.0 ?x22298)))
 (= (- (- (+ (+ (+ ?x4569 ?x22295) ?x31984) ?x31991) ?x31993) ?x31995) 0.0))))))))))
(assert
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32039 (* ?x32038 l_0_13_33)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32036 (* ?x32035 l_0_13_32)))
 (let ((?x32032 (* 2.0 l_0_13_3)))
 (let ((?x32033 (* ?x32032 l_0_13_5)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32030 (* ?x32029 l_0_13_4)))
 (let ((?x33211 (+ (* (* 4.0 l_0_13_170) l_0_13_172) (* (* 4.0 l_0_13_171) l_0_13_173))))
 (= (- (- (+ (+ ?x33211 ?x32030) ?x32033) ?x32036) ?x32039) 0.0)))))))))))
(assert
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32096 (* ?x32038 l_0_13_36)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32094 (* ?x32035 l_0_13_35)))
 (let ((?x32032 (* 2.0 l_0_13_3)))
 (let ((?x32092 (* ?x32032 l_0_13_8)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32090 (* ?x32029 l_0_13_7)))
 (let ((?x33232 (+ (* (* 4.0 l_0_13_170) l_0_13_175) (* (* 4.0 l_0_13_171) l_0_13_176))))
 (= (- (- (+ (+ ?x33232 ?x32090) ?x32092) ?x32094) ?x32096) 0.0)))))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x33266 (* ?x32006 l_0_13_89)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x33264 (* ?x32003 l_0_13_88)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33262 (* ?x32000 l_0_13_61)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x33260 (* ?x31997 l_0_13_60)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32153 (* ?x32038 l_0_13_40)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32151 (* ?x32035 l_0_13_39)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32027 (* ?x32018 l_0_13_145)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32017 (* ?x32015 l_0_13_144)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32145 (* ?x32144 l_0_13_3)))
 (let ((?x33241 (- (* (* 2.0 l_0_13_11) l_0_13_2) (* (* 2.0 l_0_13_114) l_0_13_116))))
 (let ((?x33247 (- (- (+ (- ?x33241 (* (* 2.0 l_0_13_115) l_0_13_117)) ?x32145) ?x32017) ?x32027)))
 (let ((?x33252 (+ (- ?x33247 (* (* 2.0 l_0_13_170) l_0_13_172)) (* (* 4.0 l_0_13_170) l_0_13_179))))
 (let ((?x33257 (+ (- ?x33252 (* (* 2.0 l_0_13_171) l_0_13_173)) (* (* 4.0 l_0_13_171) l_0_13_180))))
 (= (+ (+ (- (- (- (- ?x33257 ?x32151) ?x32153) ?x33260) ?x33262) ?x33264) ?x33266) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x33266 (* ?x32006 l_0_13_89)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x33264 (* ?x32003 l_0_13_88)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33262 (* ?x32000 l_0_13_61)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x33260 (* ?x31997 l_0_13_60)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32238 (* ?x32038 l_0_13_45)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32236 (* ?x32035 l_0_13_44)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32234 (* ?x32233 l_0_13_3)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32231 (* ?x32230 l_0_13_2)))
 (let ((?x33296 (+ (+ (+ ?x32231 ?x32234) (* (* 4.0 l_0_13_170) l_0_13_184)) (* (* 4.0 l_0_13_171) l_0_13_185))))
 (= (- (- (+ (+ (- (- ?x33296 ?x32236) ?x32238) ?x33260) ?x33262) ?x33264) ?x33266) 0.0)))))))))))))))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33142 (* ?x31731 l_0_13_88)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x33140 (* ?x31728 l_0_13_60)))
 (let ((?x32038 (* 2.0 l_0_13_31)))
 (let ((?x32294 (* ?x32038 l_0_13_51)))
 (let ((?x32035 (* 2.0 l_0_13_30)))
 (let ((?x32292 (* ?x32035 l_0_13_50)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x32290 (* ?x31771 l_0_13_3)))
 (let ((?x32029 (* 2.0 l_0_13_2)))
 (let ((?x32288 (* ?x32029 l_0_13_22)))
 (let ((?x33317 (+ (* (* 4.0 l_0_13_170) l_0_13_190) (* (* 4.0 l_0_13_171) l_0_13_191))))
 (= (+ (- (- (- (+ (+ ?x33317 ?x32288) ?x32290) ?x32292) ?x32294) ?x33140) ?x33142) 0.0)))))))))))))))
(assert
 (let ((?x32336 (* l_0_13_6 l_0_13_6)))
 (let ((?x32334 (* l_0_13_5 l_0_13_5)))
 (let ((?x32332 (* l_0_13_4 l_0_13_4)))
 (let ((?x32330 (* l_0_13_34 l_0_13_34)))
 (let ((?x32328 (* l_0_13_33 l_0_13_33)))
 (let ((?x32326 (* l_0_13_32 l_0_13_32)))
 (let ((?x33335 (* l_0_13_174 l_0_13_174)))
 (let ((?x33336 (* 2.0 ?x33335)))
 (let ((?x33332 (* l_0_13_173 l_0_13_173)))
 (let ((?x33333 (* 2.0 ?x33332)))
 (let ((?x6163 (* l_0_13_172 l_0_13_172)))
 (let ((?x33331 (* 2.0 ?x6163)))
 (let ((?x33342 (+ (+ (- (- (- (+ (+ ?x33331 ?x33333) ?x33336) ?x32326) ?x32328) ?x32330) ?x32332) ?x32334)))
 (= (+ ?x33342 ?x32336) 0.0)))))))))))))))
(assert
 (let ((?x32371 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x32368 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x32365 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32362 (* ?x32361 l_0_13_37)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32359 (* ?x32358 l_0_13_36)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32356 (* ?x32355 l_0_13_35)))
 (let ((?x33353 (+ (* (* 4.0 l_0_13_172) l_0_13_175) (* (* 4.0 l_0_13_173) l_0_13_176))))
 (let ((?x33359 (- (- (- (+ ?x33353 (* (* 4.0 l_0_13_174) l_0_13_177)) ?x32356) ?x32359) ?x32362)))
 (= (+ (+ (+ ?x33359 ?x32365) ?x32368) ?x32371) 0.0)))))))))))))
(assert
 (let ((?x33403 (* l_0_13_90 l_0_13_90)))
 (let ((?x33401 (* l_0_13_89 l_0_13_89)))
 (let ((?x33399 (* l_0_13_88 l_0_13_88)))
 (let ((?x33397 (* l_0_13_62 l_0_13_62)))
 (let ((?x33395 (* l_0_13_61 l_0_13_61)))
 (let ((?x33393 (* l_0_13_60 l_0_13_60)))
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32414 (* ?x32361 l_0_13_41)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32412 (* ?x32358 l_0_13_40)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32410 (* ?x32355 l_0_13_39)))
 (let ((?x33335 (* l_0_13_174 l_0_13_174)))
 (let ((?x33332 (* l_0_13_173 l_0_13_173)))
 (let ((?x6163 (* l_0_13_172 l_0_13_172)))
 (let ((?x32324 (* l_0_13_146 l_0_13_146)))
 (let ((?x32322 (* l_0_13_145 l_0_13_145)))
 (let ((?x22000 (* l_0_13_144 l_0_13_144)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32402 (* ?x32401 l_0_13_6)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32399 (* ?x32144 l_0_13_5)))
 (let ((?x33374 (* l_0_13_118 l_0_13_118)))
 (let ((?x6201 (* l_0_13_117 l_0_13_117)))
 (let ((?x6196 (- (- (* (* 2.0 l_0_13_11) l_0_13_4) (* l_0_13_116 l_0_13_116)) ?x6201)))
 (let ((?x33382 (+ (- (- (- (+ (+ (- ?x6196 ?x33374) ?x32399) ?x32402) ?x22000) ?x32322) ?x32324) (* (* 4.0 l_0_13_172) l_0_13_179))))
 (let ((?x33388 (+ (- (+ (- ?x33382 ?x6163) (* (* 4.0 l_0_13_173) l_0_13_180)) ?x33332) (* (* 4.0 l_0_13_174) l_0_13_181))))
 (let ((?x33398 (- (- (- (- (- (- (- ?x33388 ?x33335) ?x32410) ?x32412) ?x32414) ?x33393) ?x33395) ?x33397)))
 (= (+ (+ (+ ?x33398 ?x33399) ?x33401) ?x33403) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x33403 (* l_0_13_90 l_0_13_90)))
 (let ((?x33401 (* l_0_13_89 l_0_13_89)))
 (let ((?x33399 (* l_0_13_88 l_0_13_88)))
 (let ((?x33397 (* l_0_13_62 l_0_13_62)))
 (let ((?x33395 (* l_0_13_61 l_0_13_61)))
 (let ((?x33393 (* l_0_13_60 l_0_13_60)))
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32452 (* ?x32361 l_0_13_46)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32450 (* ?x32358 l_0_13_45)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32448 (* ?x32355 l_0_13_44)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32446 (* ?x32445 l_0_13_6)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32443 (* ?x32233 l_0_13_5)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32441 (* ?x32230 l_0_13_4)))
 (let ((?x33448 (+ (+ (+ ?x32441 ?x32443) (* (* 4.0 l_0_13_172) l_0_13_184)) (* (* 4.0 l_0_13_173) l_0_13_185))))
 (let ((?x33453 (- (- (+ (+ ?x33448 (* (* 4.0 l_0_13_174) l_0_13_186)) ?x32446) ?x32448) ?x32450)))
 (let ((?x33460 (- (- (- (+ (+ (+ (- ?x33453 ?x32452) ?x33393) ?x33395) ?x33397) ?x33399) ?x33401) ?x33403)))
 (= ?x33460 0.0)))))))))))))))))))))))
(assert
 (let ((?x32361 (* 2.0 l_0_13_34)))
 (let ((?x32492 (* ?x32361 l_0_13_52)))
 (let ((?x32358 (* 2.0 l_0_13_33)))
 (let ((?x32490 (* ?x32358 l_0_13_51)))
 (let ((?x32355 (* 2.0 l_0_13_32)))
 (let ((?x32488 (* ?x32355 l_0_13_50)))
 (let ((?x31774 (* 2.0 l_0_13_24)))
 (let ((?x32486 (* ?x31774 l_0_13_6)))
 (let ((?x31771 (* 2.0 l_0_13_23)))
 (let ((?x32484 (* ?x31771 l_0_13_5)))
 (let ((?x31768 (* 2.0 l_0_13_22)))
 (let ((?x32482 (* ?x31768 l_0_13_4)))
 (let ((?x6309 (+ (* (* 4.0 l_0_13_172) l_0_13_190) (* (* 4.0 l_0_13_173) l_0_13_191))))
 (let ((?x33474 (+ (+ (+ (+ ?x6309 (* (* 4.0 l_0_13_174) l_0_13_192)) ?x32482) ?x32484) ?x32486)))
 (= (- (- (- ?x33474 ?x32488) ?x32490) ?x32492) 0.0))))))))))))))))
(assert
 (let ((?x32547 (* l_0_13_9 l_0_13_9)))
 (let ((?x32545 (* l_0_13_8 l_0_13_8)))
 (let ((?x32543 (* l_0_13_7 l_0_13_7)))
 (let ((?x32541 (* l_0_13_38 l_0_13_38)))
 (let ((?x32539 (* l_0_13_37 l_0_13_37)))
 (let ((?x32537 (* l_0_13_36 l_0_13_36)))
 (let ((?x32535 (* l_0_13_35 l_0_13_35)))
 (let ((?x33495 (* l_0_13_178 l_0_13_178)))
 (let ((?x33496 (* 2.0 ?x33495)))
 (let ((?x33492 (* l_0_13_177 l_0_13_177)))
 (let ((?x33493 (* 2.0 ?x33492)))
 (let ((?x33489 (* l_0_13_176 l_0_13_176)))
 (let ((?x33490 (* 2.0 ?x33489)))
 (let ((?x6361 (* l_0_13_175 l_0_13_175)))
 (let ((?x6362 (* 2.0 ?x6361)))
 (let ((?x32551 (* l_0_13_10 l_0_13_10)))
 (let ((?x33500 (- (- (- (+ (+ (+ (+ ?x32551 ?x6362) ?x33490) ?x33493) ?x33496) ?x32535) ?x32537) ?x32539)))
 (= (+ (+ (+ (- ?x33500 ?x32541) ?x32543) ?x32545) ?x32547) 0.0)))))))))))))))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x32057 (* ?x32056 l_0_13_93)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x32054 (* ?x32053 l_0_13_92)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x32051 (* ?x32050 l_0_13_91)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x32048 (* ?x32047 l_0_13_65)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x32045 (* ?x32044 l_0_13_64)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x32042 (* ?x32041 l_0_13_63)))
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x32583 (* ?x31788 l_0_13_42)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x32581 (* ?x31785 l_0_13_41)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x32579 (* ?x31782 l_0_13_40)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x32577 (* ?x31779 l_0_13_39)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32353 (* ?x32352 l_0_13_149)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32350 (* ?x32349 l_0_13_148)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x5212 (* ?x5210 l_0_13_147)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32567 (* ?x32401 l_0_13_9)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32565 (* ?x32144 l_0_13_8)))
 (let ((?x32562 (* 2.0 l_0_13_11)))
 (let ((?x32563 (* ?x32562 l_0_13_7)))
 (let ((?x33516 (- (+ (* (* 2.0 l_0_13_10) l_0_13_14) ?x32563) (* (* 2.0 l_0_13_116) l_0_13_119))))
 (let ((?x33522 (- (- ?x33516 (* (* 2.0 l_0_13_117) l_0_13_120)) (* (* 2.0 l_0_13_118) l_0_13_121))))
 (let ((?x33530 (- (- (- (- (+ (+ ?x33522 ?x32565) ?x32567) ?x5212) ?x32350) ?x32353) (* (* 2.0 l_0_13_172) l_0_13_175))))
 (let ((?x33536 (- (- ?x33530 (* (* 2.0 l_0_13_173) l_0_13_176)) (* (* 2.0 l_0_13_174) l_0_13_177))))
 (let ((?x33540 (+ (+ ?x33536 (* (* 4.0 l_0_13_175) l_0_13_179)) (* (* 4.0 l_0_13_176) l_0_13_180))))
 (let ((?x33544 (+ (+ ?x33540 (* (* 4.0 l_0_13_177) l_0_13_181)) (* (* 4.0 l_0_13_178) l_0_13_182))))
 (let ((?x33551 (- (- (- (- (- (- (- ?x33544 ?x32577) ?x32579) ?x32581) ?x32583) ?x32042) ?x32045) ?x32048)))
 (= (+ (+ (+ ?x33551 ?x32051) ?x32054) ?x32057) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x32057 (* ?x32056 l_0_13_93)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x32054 (* ?x32053 l_0_13_92)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x32051 (* ?x32050 l_0_13_91)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x32048 (* ?x32047 l_0_13_65)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x32045 (* ?x32044 l_0_13_64)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x32042 (* ?x32041 l_0_13_63)))
 (let ((?x31788 (* 2.0 l_0_13_38)))
 (let ((?x32618 (* ?x31788 l_0_13_47)))
 (let ((?x31785 (* 2.0 l_0_13_37)))
 (let ((?x32616 (* ?x31785 l_0_13_46)))
 (let ((?x31782 (* 2.0 l_0_13_36)))
 (let ((?x32614 (* ?x31782 l_0_13_45)))
 (let ((?x31779 (* 2.0 l_0_13_35)))
 (let ((?x32612 (* ?x31779 l_0_13_44)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32610 (* ?x32445 l_0_13_9)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32608 (* ?x32233 l_0_13_8)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32606 (* ?x32230 l_0_13_7)))
 (let ((?x33580 (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_19) ?x32606) ?x32608) (* (* 4.0 l_0_13_175) l_0_13_184))))
 (let ((?x33584 (+ (+ ?x33580 (* (* 4.0 l_0_13_176) l_0_13_185)) (* (* 4.0 l_0_13_177) l_0_13_186))))
 (let ((?x33589 (- (- (+ (+ ?x33584 (* (* 4.0 l_0_13_178) l_0_13_187)) ?x32610) ?x32612) ?x32614)))
 (let ((?x33596 (- (- (+ (+ (+ (- (- ?x33589 ?x32616) ?x32618) ?x32042) ?x32045) ?x32048) ?x32051) ?x32054)))
 (= (- ?x33596 ?x32057) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x33659 (* ?x32056 l_0_13_97)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x33657 (* ?x32053 l_0_13_96)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x33655 (* ?x32050 l_0_13_95)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33653 (* ?x32047 l_0_13_69)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33651 (* ?x32044 l_0_13_68)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33649 (* ?x32041 l_0_13_67)))
 (let ((?x32694 (* l_0_13_43 l_0_13_43)))
 (let ((?x32692 (* l_0_13_42 l_0_13_42)))
 (let ((?x32690 (* l_0_13_41 l_0_13_41)))
 (let ((?x32688 (* l_0_13_40 l_0_13_40)))
 (let ((?x32686 (* l_0_13_39 l_0_13_39)))
 (let ((?x22095 (* l_0_13_15 l_0_13_15)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32408 (* ?x32352 l_0_13_153)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32406 (* ?x32349 l_0_13_152)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x32404 (* ?x5210 l_0_13_151)))
 (let ((?x5539 (* l_0_13_14 l_0_13_14)))
 (let ((?x5509 (* l_0_13_13 l_0_13_13)))
 (let ((?x18589 (* l_0_13_12 l_0_13_12)))
 (let ((?x32698 (* l_0_13_11 l_0_13_11)))
 (let ((?x22538 (- (- ?x32698 (* (* 2.0 l_0_13_116) l_0_13_123)) (* (* 2.0 l_0_13_117) l_0_13_124))))
 (let ((?x33618 (+ (+ (+ (- ?x22538 (* (* 2.0 l_0_13_118) l_0_13_125)) ?x18589) ?x5509) ?x5539)))
 (let ((?x33624 (- (+ (- (- (- ?x33618 ?x32404) ?x32406) ?x32408) ?x22095) (* (* 2.0 l_0_13_172) l_0_13_179))))
 (let ((?x33628 (- (- ?x33624 (* (* 2.0 l_0_13_173) l_0_13_180)) (* (* 2.0 l_0_13_174) l_0_13_181))))
 (let ((?x33634 (+ (+ ?x33628 (* 2.0 (* l_0_13_179 l_0_13_179))) (* 2.0 (* l_0_13_180 l_0_13_180)))))
 (let ((?x33640 (+ (+ ?x33634 (* 2.0 (* l_0_13_181 l_0_13_181))) (* 2.0 (* l_0_13_182 l_0_13_182)))))
 (let ((?x33646 (- (- (- (+ ?x33640 (* 2.0 (* l_0_13_183 l_0_13_183))) ?x32686) ?x32688) ?x32690)))
 (let ((?x33658 (+ (+ (- (- (- (- (- ?x33646 ?x32692) ?x32694) ?x33649) ?x33651) ?x33653) ?x33655) ?x33657)))
 (= (+ ?x33658 ?x33659) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x33659 (* ?x32056 l_0_13_97)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x33657 (* ?x32053 l_0_13_96)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x33655 (* ?x32050 l_0_13_95)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33734 (* ?x32047 l_0_13_74)))
 (let ((?x33653 (* ?x32047 l_0_13_69)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33731 (* ?x32044 l_0_13_73)))
 (let ((?x33651 (* ?x32044 l_0_13_68)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33728 (* ?x32041 l_0_13_72)))
 (let ((?x33649 (* ?x32041 l_0_13_67)))
 (let ((?x32756 (* 2.0 l_0_13_43)))
 (let ((?x32757 (* ?x32756 l_0_13_48)))
 (let ((?x32753 (* 2.0 l_0_13_42)))
 (let ((?x32754 (* ?x32753 l_0_13_47)))
 (let ((?x32750 (* 2.0 l_0_13_41)))
 (let ((?x32751 (* ?x32750 l_0_13_46)))
 (let ((?x32747 (* 2.0 l_0_13_40)))
 (let ((?x32748 (* ?x32747 l_0_13_45)))
 (let ((?x32744 (* 2.0 l_0_13_39)))
 (let ((?x32745 (* ?x32744 l_0_13_44)))
 (let ((?x32726 (* 2.0 l_0_13_15)))
 (let ((?x32727 (* ?x32726 l_0_13_20)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32439 (* ?x32352 l_0_13_158)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x32437 (* ?x32349 l_0_13_157)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x32436 (* ?x5210 l_0_13_156)))
 (let ((?x32723 (* 2.0 l_0_13_14)))
 (let ((?x32724 (* ?x32723 l_0_13_19)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32721 (* ?x32401 l_0_13_18)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32719 (* ?x32144 l_0_13_17)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x33674 (* ?x32220 l_0_13_90)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7000 (* ?x32217 l_0_13_89)))
 (let ((?x33685 (+ (+ (* (* 2.0 l_0_13_100) l_0_13_88) ?x7000) ?x33674)))
 (let ((?x33689 (- (+ ?x33685 (* (* 2.0 l_0_13_11) l_0_13_16)) (* (* 2.0 l_0_13_116) l_0_13_128))))
 (let ((?x33693 (- (- ?x33689 (* (* 2.0 l_0_13_117) l_0_13_129)) (* (* 2.0 l_0_13_118) l_0_13_130))))
 (let ((?x33700 (+ (- (- (- (+ (+ (+ ?x33693 ?x32719) ?x32721) ?x32724) ?x32436) ?x32437) ?x32439) ?x32727)))
 (let ((?x33704 (- (- ?x33700 (* (* 2.0 l_0_13_172) l_0_13_184)) (* (* 2.0 l_0_13_173) l_0_13_185))))
 (let ((?x33709 (+ (- ?x33704 (* (* 2.0 l_0_13_174) l_0_13_186)) (* (* 4.0 l_0_13_179) l_0_13_184))))
 (let ((?x33715 (+ (+ ?x33709 (* (* 4.0 l_0_13_180) l_0_13_185)) (* (* 4.0 l_0_13_181) l_0_13_186))))
 (let ((?x33721 (+ (+ ?x33715 (* (* 4.0 l_0_13_182) l_0_13_187)) (* (* 4.0 l_0_13_183) l_0_13_188))))
 (let ((?x33729 (- (+ (- (- (- (- (- ?x33721 ?x32745) ?x32748) ?x32751) ?x32754) ?x32757) ?x33649) ?x33728)))
 (let ((?x33738 (- (- (- (- (+ (- (+ ?x33729 ?x33651) ?x33731) ?x33653) ?x33734) ?x33655) ?x33657) ?x33659)))
 (= ?x33738 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33806 (* ?x32047 l_0_13_80)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33804 (* ?x32044 l_0_13_79)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33802 (* ?x32041 l_0_13_78)))
 (let ((?x32756 (* 2.0 l_0_13_43)))
 (let ((?x32830 (* ?x32756 l_0_13_54)))
 (let ((?x32753 (* 2.0 l_0_13_42)))
 (let ((?x32828 (* ?x32753 l_0_13_53)))
 (let ((?x32750 (* 2.0 l_0_13_41)))
 (let ((?x32826 (* ?x32750 l_0_13_52)))
 (let ((?x32747 (* 2.0 l_0_13_40)))
 (let ((?x32824 (* ?x32747 l_0_13_51)))
 (let ((?x32744 (* 2.0 l_0_13_39)))
 (let ((?x32822 (* ?x32744 l_0_13_50)))
 (let ((?x32726 (* 2.0 l_0_13_15)))
 (let ((?x32795 (* ?x32726 l_0_13_26)))
 (let ((?x32352 (* 2.0 l_0_13_146)))
 (let ((?x32472 (* ?x32352 l_0_13_164)))
 (let ((?x32349 (* 2.0 l_0_13_145)))
 (let ((?x22060 (* ?x32349 l_0_13_163)))
 (let ((?x5210 (* 2.0 l_0_13_144)))
 (let ((?x22035 (* ?x5210 l_0_13_162)))
 (let ((?x32723 (* 2.0 l_0_13_14)))
 (let ((?x32791 (* ?x32723 l_0_13_25)))
 (let ((?x32401 (* 2.0 l_0_13_13)))
 (let ((?x32787 (* ?x32401 l_0_13_24)))
 (let ((?x32144 (* 2.0 l_0_13_12)))
 (let ((?x32783 (* ?x32144 l_0_13_23)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x22783 (* ?x31844 l_0_13_90)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x22901 (* ?x31841 l_0_13_89)))
 (let ((?x33765 (+ (+ (* (* 2.0 l_0_13_106) l_0_13_88) ?x22901) ?x22783)))
 (let ((?x33769 (- (+ ?x33765 (* (* 2.0 l_0_13_11) l_0_13_22)) (* (* 2.0 l_0_13_116) l_0_13_134))))
 (let ((?x33773 (- (- ?x33769 (* (* 2.0 l_0_13_117) l_0_13_135)) (* (* 2.0 l_0_13_118) l_0_13_136))))
 (let ((?x33780 (+ (- (- (- (+ (+ (+ ?x33773 ?x32783) ?x32787) ?x32791) ?x22035) ?x22060) ?x32472) ?x32795)))
 (let ((?x33784 (- (- ?x33780 (* (* 2.0 l_0_13_172) l_0_13_190)) (* (* 2.0 l_0_13_173) l_0_13_191))))
 (let ((?x33788 (+ (- ?x33784 (* (* 2.0 l_0_13_174) l_0_13_192)) (* (* 4.0 l_0_13_179) l_0_13_190))))
 (let ((?x33792 (+ (+ ?x33788 (* (* 4.0 l_0_13_180) l_0_13_191)) (* (* 4.0 l_0_13_181) l_0_13_192))))
 (let ((?x33796 (+ (+ ?x33792 (* (* 4.0 l_0_13_182) l_0_13_193)) (* (* 4.0 l_0_13_183) l_0_13_194))))
 (let ((?x33805 (- (- (- (- (- (- (- ?x33796 ?x32822) ?x32824) ?x32826) ?x32828) ?x32830) ?x33802) ?x33804)))
 (= (- ?x33805 ?x33806) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33734 (* ?x32047 l_0_13_74)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33731 (* ?x32044 l_0_13_73)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33728 (* ?x32041 l_0_13_72)))
 (let ((?x32884 (* l_0_13_49 l_0_13_49)))
 (let ((?x32882 (* l_0_13_48 l_0_13_48)))
 (let ((?x32880 (* l_0_13_47 l_0_13_47)))
 (let ((?x32878 (* l_0_13_46 l_0_13_46)))
 (let ((?x32876 (* l_0_13_45 l_0_13_45)))
 (let ((?x32874 (* l_0_13_44 l_0_13_44)))
 (let ((?x32872 (* l_0_13_21 l_0_13_21)))
 (let ((?x32870 (* l_0_13_20 l_0_13_20)))
 (let ((?x32868 (* l_0_13_19 l_0_13_19)))
 (let ((?x33845 (* l_0_13_189 l_0_13_189)))
 (let ((?x33846 (* 2.0 ?x33845)))
 (let ((?x33842 (* l_0_13_188 l_0_13_188)))
 (let ((?x33843 (* 2.0 ?x33842)))
 (let ((?x33839 (* l_0_13_187 l_0_13_187)))
 (let ((?x33840 (* 2.0 ?x33839)))
 (let ((?x33836 (* l_0_13_186 l_0_13_186)))
 (let ((?x33837 (* 2.0 ?x33836)))
 (let ((?x33833 (* l_0_13_185 l_0_13_185)))
 (let ((?x33834 (* 2.0 ?x33833)))
 (let ((?x33830 (* l_0_13_184 l_0_13_184)))
 (let ((?x33831 (* 2.0 ?x33830)))
 (let ((?x32866 (* l_0_13_18 l_0_13_18)))
 (let ((?x32864 (* l_0_13_17 l_0_13_17)))
 (let ((?x5664 (* l_0_13_16 l_0_13_16)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x33674 (* ?x32220 l_0_13_90)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7000 (* ?x32217 l_0_13_89)))
 (let ((?x33828 (+ (+ (- (- (* (* (- 2.0) l_0_13_100) l_0_13_88) ?x7000) ?x33674) ?x5664) ?x32864)))
 (let ((?x33847 (+ (+ (+ (+ (+ (+ (+ ?x33828 ?x32866) ?x33831) ?x33834) ?x33837) ?x33840) ?x33843) ?x33846)))
 (let ((?x33854 (- (- (- (- (+ (+ (+ ?x33847 ?x32868) ?x32870) ?x32872) ?x32874) ?x32876) ?x32878) ?x32880)))
 (= (+ (+ (+ (- (- ?x33854 ?x32882) ?x32884) ?x33728) ?x33731) ?x33734) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33806 (* ?x32047 l_0_13_80)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33804 (* ?x32044 l_0_13_79)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33802 (* ?x32041 l_0_13_78)))
 (let ((?x32948 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x32945 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x32942 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x32939 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x32936 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x32933 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x32930 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x32927 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x32924 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x32445 (* 2.0 l_0_13_18)))
 (let ((?x32921 (* ?x32445 l_0_13_24)))
 (let ((?x32233 (* 2.0 l_0_13_17)))
 (let ((?x32919 (* ?x32233 l_0_13_23)))
 (let ((?x32230 (* 2.0 l_0_13_16)))
 (let ((?x32911 (* ?x32230 l_0_13_22)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x22783 (* ?x31844 l_0_13_90)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x22901 (* ?x31841 l_0_13_89)))
 (let ((?x7358 (+ (+ (- (- (* (* (- 2.0) l_0_13_106) l_0_13_88) ?x22901) ?x22783) ?x32911) ?x32919)))
 (let ((?x33866 (+ (+ (+ ?x7358 ?x32921) (* (* 4.0 l_0_13_184) l_0_13_190)) (* (* 4.0 l_0_13_185) l_0_13_191))))
 (let ((?x33872 (+ (+ ?x33866 (* (* 4.0 l_0_13_186) l_0_13_192)) (* (* 4.0 l_0_13_187) l_0_13_193))))
 (let ((?x33878 (+ (+ ?x33872 (* (* 4.0 l_0_13_188) l_0_13_194)) (* (* 4.0 l_0_13_189) l_0_13_195))))
 (let ((?x33885 (- (- (- (- (+ (+ (+ ?x33878 ?x32924) ?x32927) ?x32930) ?x32933) ?x32936) ?x32939) ?x32942)))
 (= (+ (+ (+ (- (- ?x33885 ?x32945) ?x32948) ?x33802) ?x33804) ?x33806) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x33037 (* l_0_13_56 l_0_13_56)))
 (let ((?x33035 (* l_0_13_55 l_0_13_55)))
 (let ((?x33033 (* l_0_13_54 l_0_13_54)))
 (let ((?x33031 (* l_0_13_53 l_0_13_53)))
 (let ((?x33029 (* l_0_13_52 l_0_13_52)))
 (let ((?x33027 (* l_0_13_51 l_0_13_51)))
 (let ((?x33025 (* l_0_13_50 l_0_13_50)))
 (let ((?x33023 (* l_0_13_28 l_0_13_28)))
 (let ((?x33021 (* l_0_13_27 l_0_13_27)))
 (let ((?x33019 (* l_0_13_26 l_0_13_26)))
 (let ((?x33017 (* l_0_13_25 l_0_13_25)))
 (let ((?x33015 (* l_0_13_24 l_0_13_24)))
 (let ((?x33013 (* l_0_13_23 l_0_13_23)))
 (let ((?x33011 (* l_0_13_22 l_0_13_22)))
 (let ((?x33927 (* l_0_13_196 l_0_13_196)))
 (let ((?x33928 (* 2.0 ?x33927)))
 (let ((?x33924 (* l_0_13_195 l_0_13_195)))
 (let ((?x33925 (* 2.0 ?x33924)))
 (let ((?x33921 (* l_0_13_194 l_0_13_194)))
 (let ((?x33922 (* 2.0 ?x33921)))
 (let ((?x33918 (* l_0_13_193 l_0_13_193)))
 (let ((?x33919 (* 2.0 ?x33918)))
 (let ((?x33915 (* l_0_13_192 l_0_13_192)))
 (let ((?x33916 (* 2.0 ?x33915)))
 (let ((?x33912 (* l_0_13_191 l_0_13_191)))
 (let ((?x33913 (* 2.0 ?x33912)))
 (let ((?x23333 (* l_0_13_190 l_0_13_190)))
 (let ((?x33911 (* 2.0 ?x23333)))
 (let ((?x33930 (+ (+ (+ (+ (+ (+ (+ ?x33911 ?x33913) ?x33916) ?x33919) ?x33922) ?x33925) ?x33928) ?x33011)))
 (let ((?x33937 (- (+ (+ (+ (+ (+ (+ ?x33930 ?x33013) ?x33015) ?x33017) ?x33019) ?x33021) ?x33023) ?x33025)))
 (= (- (- (- (- (- (- ?x33937 ?x33027) ?x33029) ?x33031) ?x33033) ?x33035) ?x33037) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7549 (* l_0_13_85 l_0_13_85)))
 (let ((?x23330 (* l_0_13_57 l_0_13_57)))
 (let ((?x23392 (- (* (* (- 2.0) l_0_13_198) l_0_13_218) (* (* 2.0 l_0_13_199) l_0_13_219))))
 (= (+ (- ?x23392 ?x23330) ?x7549) 0.0)))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33952 (* ?x31731 l_0_13_86)))
 (= (+ (* (* (- 2.0) l_0_13_57) l_0_13_58) ?x33952) 0.0))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33980 (* ?x31731 l_0_13_95)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33978 (* ?x32000 l_0_13_79)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x33976 (* ?x31997 l_0_13_78)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x33974 (* ?x31728 l_0_13_67)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32286 (* ?x32018 l_0_13_163)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32284 (* ?x32015 l_0_13_162)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x33958 (* ?x31841 l_0_13_87)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x33956 (* ?x31832 l_0_13_86)))
 (let ((?x33959 (+ ?x33956 ?x33958)))
 (let ((?x33967 (- (- ?x33959 (* (* 2.0 l_0_13_114) l_0_13_134)) (* (* 2.0 l_0_13_115) l_0_13_135))))
 (let ((?x33973 (- (- (- (- ?x33967 ?x32284) ?x32286) (* (* 2.0 l_0_13_170) l_0_13_190)) (* (* 2.0 l_0_13_171) l_0_13_191))))
 (= (+ (- (- (- ?x33973 ?x33974) ?x33976) ?x33978) ?x33980) 0.0)))))))))))))))))))))
(assert
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33978 (* ?x32000 l_0_13_79)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x33976 (* ?x31997 l_0_13_78)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x34006 (* ?x31728 l_0_13_72)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x33958 (* ?x31841 l_0_13_87)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x33956 (* ?x31832 l_0_13_86)))
 (let ((?x32215 (* 2.0 l_0_13_100)))
 (let ((?x34003 (* ?x32215 l_0_13_85)))
 (= (+ (+ (- (- (- ?x34003 ?x33956) ?x33958) ?x34006) ?x33976) ?x33978) 0.0))))))))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x23276 (* ?x31728 l_0_13_78)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x23671 (* ?x31832 l_0_13_85)))
 (= (- ?x23671 ?x23276) 0.0))))))
(assert
 (let ((?x34029 (* l_0_13_87 l_0_13_87)))
 (let ((?x34027 (* l_0_13_86 l_0_13_86)))
 (let ((?x34028 (+ (- (* (- l_0_13_58) l_0_13_58) (* l_0_13_59 l_0_13_59)) ?x34027)))
 (= (+ ?x34028 ?x34029) 0.0)))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x33266 (* ?x32006 l_0_13_89)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x33264 (* ?x32003 l_0_13_88)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33262 (* ?x32000 l_0_13_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_58) l_0_13_60) ?x33262) ?x33264) ?x33266) 0.0))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x34054 (* ?x32006 l_0_13_96)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x34052 (* ?x32003 l_0_13_95)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x34050 (* ?x32000 l_0_13_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_58) l_0_13_67) ?x34050) ?x34052) ?x34054) 0.0))))))))
(assert
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x34077 (* ?x32000 l_0_13_73)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x34075 (* ?x31997 l_0_13_72)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34068 (* ?x32217 l_0_13_87)))
 (let ((?x34069 (+ (* (* 2.0 l_0_13_100) l_0_13_86) ?x34068)))
 (= (- (- ?x34069 ?x34075) ?x34077) 0.0)))))))))
(assert
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x33978 (* ?x32000 l_0_13_79)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x33976 (* ?x31997 l_0_13_78)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x33958 (* ?x31841 l_0_13_87)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x33956 (* ?x31832 l_0_13_86)))
 (let ((?x33959 (+ ?x33956 ?x33958)))
 (= (- (- ?x33959 ?x33976) ?x33978) 0.0)))))))))))
(assert
 (let ((?x33403 (* l_0_13_90 l_0_13_90)))
 (let ((?x33401 (* l_0_13_89 l_0_13_89)))
 (let ((?x33399 (* l_0_13_88 l_0_13_88)))
 (let ((?x33397 (* l_0_13_62 l_0_13_62)))
 (let ((?x34104 (- (- (* (- l_0_13_60) l_0_13_60) (* l_0_13_61 l_0_13_61)) ?x33397)))
 (= (+ (+ (+ ?x34104 ?x33399) ?x33401) ?x33403) 0.0)))))))
(assert
 (let ((?x32056 (* 2.0 l_0_13_90)))
 (let ((?x33659 (* ?x32056 l_0_13_97)))
 (let ((?x32053 (* 2.0 l_0_13_89)))
 (let ((?x33657 (* ?x32053 l_0_13_96)))
 (let ((?x32050 (* 2.0 l_0_13_88)))
 (let ((?x33655 (* ?x32050 l_0_13_95)))
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33653 (* ?x32047 l_0_13_69)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33651 (* ?x32044 l_0_13_68)))
 (let ((?x34113 (+ (+ (- (- (* (* (- 2.0) l_0_13_60) l_0_13_67) ?x33651) ?x33653) ?x33655) ?x33657)))
 (= (+ ?x34113 ?x33659) 0.0)))))))))))))
(assert
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33734 (* ?x32047 l_0_13_74)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33731 (* ?x32044 l_0_13_73)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33728 (* ?x32041 l_0_13_72)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x33674 (* ?x32220 l_0_13_90)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7000 (* ?x32217 l_0_13_89)))
 (let ((?x33685 (+ (+ (* (* 2.0 l_0_13_100) l_0_13_88) ?x7000) ?x33674)))
 (= (- (- (- ?x33685 ?x33728) ?x33731) ?x33734) 0.0)))))))))))))
(assert
 (let ((?x32047 (* 2.0 l_0_13_62)))
 (let ((?x33806 (* ?x32047 l_0_13_80)))
 (let ((?x32044 (* 2.0 l_0_13_61)))
 (let ((?x33804 (* ?x32044 l_0_13_79)))
 (let ((?x32041 (* 2.0 l_0_13_60)))
 (let ((?x33802 (* ?x32041 l_0_13_78)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x22783 (* ?x31844 l_0_13_90)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x22901 (* ?x31841 l_0_13_89)))
 (let ((?x33765 (+ (+ (* (* 2.0 l_0_13_106) l_0_13_88) ?x22901) ?x22783)))
 (= (- (- (- ?x33765 ?x33802) ?x33804) ?x33806) 0.0)))))))))))))
(assert
 (let ((?x34165 (* l_0_13_99 l_0_13_99)))
 (let ((?x34163 (* l_0_13_98 l_0_13_98)))
 (let ((?x34161 (* l_0_13_97 l_0_13_97)))
 (let ((?x34159 (* l_0_13_96 l_0_13_96)))
 (let ((?x34157 (* l_0_13_95 l_0_13_95)))
 (let ((?x34155 (* l_0_13_71 l_0_13_71)))
 (let ((?x34153 (* l_0_13_70 l_0_13_70)))
 (let ((?x34151 (* l_0_13_69 l_0_13_69)))
 (let ((?x34152 (- (- (* (- l_0_13_67) l_0_13_67) (* l_0_13_68 l_0_13_68)) ?x34151)))
 (let ((?x34166 (+ (+ (+ (+ (+ (- (- ?x34152 ?x34153) ?x34155) ?x34157) ?x34159) ?x34161) ?x34163) ?x34165)))
 (= ?x34166 0.0))))))))))))
(assert
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34207 (* ?x34206 l_0_13_76)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34204 (* ?x34203 l_0_13_75)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34201 (* ?x34200 l_0_13_74)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34198 (* ?x34197 l_0_13_73)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34195 (* ?x34194 l_0_13_72)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34192 (* ?x34191 l_0_13_99)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34189 (* ?x32223 l_0_13_98)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34187 (* ?x32220 l_0_13_97)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34185 (* ?x32217 l_0_13_96)))
 (let ((?x34193 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_95) ?x34185) ?x34187) ?x34189) ?x34192)))
 (= (- (- (- (- (- ?x34193 ?x34195) ?x34198) ?x34201) ?x34204) ?x34207) 0.0)))))))))))))))))))))
(assert
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34254 (* ?x34206 l_0_13_82)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34252 (* ?x34203 l_0_13_81)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34250 (* ?x34200 l_0_13_80)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34248 (* ?x34197 l_0_13_79)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34246 (* ?x34194 l_0_13_78)))
 (let ((?x34244 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x34241 (* ?x31847 l_0_13_98)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x34239 (* ?x31844 l_0_13_97)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x34237 (* ?x31841 l_0_13_96)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x34236 (* ?x31832 l_0_13_95)))
 (let ((?x34245 (+ (+ (+ (+ ?x34236 ?x34237) ?x34239) ?x34241) ?x34244)))
 (= (- (- (- (- (- ?x34245 ?x34246) ?x34248) ?x34250) ?x34252) ?x34254) 0.0))))))))))))))))))))))
(assert
 (let ((?x34295 (* l_0_13_77 l_0_13_77)))
 (let ((?x34293 (* l_0_13_76 l_0_13_76)))
 (let ((?x34291 (* l_0_13_75 l_0_13_75)))
 (let ((?x34289 (* l_0_13_74 l_0_13_74)))
 (let ((?x34287 (* l_0_13_73 l_0_13_73)))
 (let ((?x34285 (* l_0_13_72 l_0_13_72)))
 (let ((?x34283 (* l_0_13_105 l_0_13_105)))
 (let ((?x34281 (* l_0_13_104 l_0_13_104)))
 (let ((?x23973 (* l_0_13_103 l_0_13_103)))
 (let ((?x23971 (* l_0_13_102 l_0_13_102)))
 (let ((?x23972 (+ (+ (* l_0_13_100 l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x23971)))
 (let ((?x34292 (- (- (- (- (+ (+ (+ ?x23972 ?x23973) ?x34281) ?x34283) ?x34285) ?x34287) ?x34289) ?x34291)))
 (= (- (- ?x34292 ?x34293) ?x34295) 0.0))))))))))))))
(assert
 (let ((?x34340 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x34337 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x34334 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x34331 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x34328 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x34325 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x34322 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34319 (* ?x34191 l_0_13_110)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34317 (* ?x32223 l_0_13_109)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34315 (* ?x32220 l_0_13_108)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7907 (* ?x32217 l_0_13_107)))
 (let ((?x34320 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_106) ?x7907) ?x34315) ?x34317) ?x34319)))
 (let ((?x34323 (+ ?x34320 ?x34322)))
 (= (- (- (- (- (- (- ?x34323 ?x34325) ?x34328) ?x34331) ?x34334) ?x34337) ?x34340) 0.0)))))))))))))))))))
(assert
 (let ((?x34406 (* l_0_13_84 l_0_13_84)))
 (let ((?x34404 (* l_0_13_83 l_0_13_83)))
 (let ((?x34402 (* l_0_13_82 l_0_13_82)))
 (let ((?x34400 (* l_0_13_81 l_0_13_81)))
 (let ((?x34398 (* l_0_13_80 l_0_13_80)))
 (let ((?x34396 (* l_0_13_79 l_0_13_79)))
 (let ((?x34394 (* l_0_13_78 l_0_13_78)))
 (let ((?x34392 (* l_0_13_112 l_0_13_112)))
 (let ((?x34390 (* l_0_13_111 l_0_13_111)))
 (let ((?x34388 (* l_0_13_110 l_0_13_110)))
 (let ((?x34386 (* l_0_13_109 l_0_13_109)))
 (let ((?x34384 (* l_0_13_108 l_0_13_108)))
 (let ((?x34385 (+ (+ (* l_0_13_106 l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34384)))
 (let ((?x34393 (+ (+ (+ (+ ?x34385 ?x34386) ?x34388) ?x34390) ?x34392)))
 (let ((?x34407 (- (- (- (- (- (- (- ?x34393 ?x34394) ?x34396) ?x34398) ?x34400) ?x34402) ?x34404) ?x34406)))
 (= ?x34407 0.0)))))))))))))))))
(assert
 (let ((?x7549 (* l_0_13_85 l_0_13_85)))
 (let ((?x23330 (* l_0_13_57 l_0_13_57)))
 (let ((?x31707 (* l_0_13_169 l_0_13_169)))
 (let ((?x24108 (- (- (* (- l_0_13_113) l_0_13_113) (* l_0_13_141 l_0_13_141)) ?x31707)))
 (= (+ (- (- ?x24108 (* (* 2.0 l_0_13_197) l_0_13_207)) ?x23330) ?x7549) 0.0))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33952 (* ?x31731 l_0_13_86)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x24171 (* ?x31728 l_0_13_58)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31723 (* ?x31722 l_0_13_142)))
 (let ((?x24225 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_114) ?x31723) (* (* 2.0 l_0_13_169) l_0_13_170))))
 (let ((?x24166 (- (- ?x24225 (* (* 2.0 l_0_13_198) l_0_13_207)) (* (* 2.0 l_0_13_199) l_0_13_208))))
 (= (+ (- ?x24166 ?x24171) ?x33952) 0.0))))))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x31732 (* ?x31731 l_0_13_91)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x31729 (* ?x31728 l_0_13_63)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31824 (* ?x31722 l_0_13_147)))
 (let ((?x34444 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_119) ?x31824) (* (* 2.0 l_0_13_169) l_0_13_175))))
 (let ((?x34448 (- (- ?x34444 (* (* 2.0 l_0_13_203) l_0_13_207)) (* (* 2.0 l_0_13_204) l_0_13_208))))
 (let ((?x34452 (- (- ?x34448 (* (* 2.0 l_0_13_205) l_0_13_209)) (* (* 2.0 l_0_13_206) l_0_13_210))))
 (= (+ (- ?x34452 ?x31729) ?x31732) 0.0)))))))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33980 (* ?x31731 l_0_13_95)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x33974 (* ?x31728 l_0_13_67)))
 (let ((?x34471 (* l_0_13_211 l_0_13_211)))
 (let ((?x34469 (* l_0_13_210 l_0_13_210)))
 (let ((?x34467 (* l_0_13_209 l_0_13_209)))
 (let ((?x34465 (* l_0_13_208 l_0_13_208)))
 (let ((?x34463 (* l_0_13_207 l_0_13_207)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31862 (* ?x31722 l_0_13_151)))
 (let ((?x34462 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_123) ?x31862) (* (* 2.0 l_0_13_169) l_0_13_179))))
 (let ((?x34474 (+ (- (- (- (- (- (- ?x34462 ?x34463) ?x34465) ?x34467) ?x34469) ?x34471) ?x33974) ?x33980)))
 (= ?x34474 0.0)))))))))))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33980 (* ?x31731 l_0_13_95)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x34006 (* ?x31728 l_0_13_72)))
 (let ((?x33974 (* ?x31728 l_0_13_67)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x31968 (* ?x31722 l_0_13_156)))
 (let ((?x32215 (* 2.0 l_0_13_100)))
 (let ((?x34003 (* ?x32215 l_0_13_85)))
 (let ((?x34488 (- (- (- ?x34003 (* (* 2.0 l_0_13_113) l_0_13_128)) ?x31968) (* (* 2.0 l_0_13_169) l_0_13_184))))
 (let ((?x34494 (- (- ?x34488 (* (* 2.0 l_0_13_207) l_0_13_212)) (* (* 2.0 l_0_13_208) l_0_13_213))))
 (let ((?x34500 (- (- ?x34494 (* (* 2.0 l_0_13_209) l_0_13_214)) (* (* 2.0 l_0_13_210) l_0_13_215))))
 (let ((?x34506 (- (- (+ (- ?x34500 (* (* 2.0 l_0_13_211) l_0_13_216)) ?x33974) ?x34006) ?x33980)))
 (= ?x34506 0.0)))))))))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x23276 (* ?x31728 l_0_13_78)))
 (let ((?x31722 (* 2.0 l_0_13_141)))
 (let ((?x4803 (* ?x31722 l_0_13_162)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x23671 (* ?x31832 l_0_13_85)))
 (let ((?x34531 (- (- (- ?x23671 (* (* 2.0 l_0_13_113) l_0_13_134)) ?x4803) (* (* 2.0 l_0_13_169) l_0_13_190))))
 (let ((?x34535 (- (- ?x34531 (* (* 2.0 l_0_13_207) l_0_13_218)) (* (* 2.0 l_0_13_208) l_0_13_219))))
 (let ((?x34539 (- (- ?x34535 (* (* 2.0 l_0_13_209) l_0_13_220)) (* (* 2.0 l_0_13_210) l_0_13_221))))
 (= (- (- ?x34539 (* (* 2.0 l_0_13_211) l_0_13_222)) ?x23276) 0.0)))))))))))
(assert
 (let ((?x34029 (* l_0_13_87 l_0_13_87)))
 (let ((?x34027 (* l_0_13_86 l_0_13_86)))
 (let ((?x34025 (* l_0_13_59 l_0_13_59)))
 (let ((?x34033 (* l_0_13_58 l_0_13_58)))
 (let ((?x22299 (* l_0_13_171 l_0_13_171)))
 (let ((?x22298 (* l_0_13_170 l_0_13_170)))
 (let ((?x21849 (* l_0_13_143 l_0_13_143)))
 (let ((?x18045 (* l_0_13_142 l_0_13_142)))
 (let ((?x34551 (- (- (* (- l_0_13_114) l_0_13_114) (* l_0_13_115 l_0_13_115)) ?x18045)))
 (let ((?x34558 (+ (+ (- (- (- (- (- ?x34551 ?x21849) ?x22298) ?x22299) ?x34033) ?x34025) ?x34027) ?x34029)))
 (= ?x34558 0.0))))))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x32007 (* ?x32006 l_0_13_92)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x32004 (* ?x32003 l_0_13_91)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x32001 (* ?x32000 l_0_13_64)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x31998 (* ?x31997 l_0_13_63)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32088 (* ?x32018 l_0_13_148)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32087 (* ?x32015 l_0_13_147)))
 (let ((?x8586 (- (* (* (- 2.0) l_0_13_114) l_0_13_119) (* (* 2.0 l_0_13_115) l_0_13_120))))
 (let ((?x34571 (- (- (- (- ?x8586 ?x32087) ?x32088) (* (* 2.0 l_0_13_170) l_0_13_175)) (* (* 2.0 l_0_13_171) l_0_13_176))))
 (= (+ (+ (- (- ?x34571 ?x31998) ?x32001) ?x32004) ?x32007) 0.0))))))))))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x34054 (* ?x32006 l_0_13_96)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x34052 (* ?x32003 l_0_13_95)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x34050 (* ?x32000 l_0_13_68)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x34588 (* ?x31997 l_0_13_67)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32149 (* ?x32018 l_0_13_152)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32147 (* ?x32015 l_0_13_151)))
 (let ((?x24586 (- (* (* (- 2.0) l_0_13_114) l_0_13_123) (* (* 2.0 l_0_13_115) l_0_13_124))))
 (let ((?x34587 (- (- (- (- ?x24586 ?x32147) ?x32149) (* (* 2.0 l_0_13_170) l_0_13_179)) (* (* 2.0 l_0_13_171) l_0_13_180))))
 (= (+ (+ (- (- ?x34587 ?x34588) ?x34050) ?x34052) ?x34054) 0.0))))))))))))))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x34054 (* ?x32006 l_0_13_96)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x34052 (* ?x32003 l_0_13_95)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x34077 (* ?x32000 l_0_13_73)))
 (let ((?x34050 (* ?x32000 l_0_13_68)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x34075 (* ?x31997 l_0_13_72)))
 (let ((?x34588 (* ?x31997 l_0_13_67)))
 (let ((?x32018 (* 2.0 l_0_13_143)))
 (let ((?x32228 (* ?x32018 l_0_13_157)))
 (let ((?x32015 (* 2.0 l_0_13_142)))
 (let ((?x32226 (* ?x32015 l_0_13_156)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34068 (* ?x32217 l_0_13_87)))
 (let ((?x34069 (+ (* (* 2.0 l_0_13_100) l_0_13_86) ?x34068)))
 (let ((?x8882 (- (- ?x34069 (* (* 2.0 l_0_13_114) l_0_13_128)) (* (* 2.0 l_0_13_115) l_0_13_129))))
 (let ((?x34610 (- (- (- (- ?x8882 ?x32226) ?x32228) (* (* 2.0 l_0_13_170) l_0_13_184)) (* (* 2.0 l_0_13_171) l_0_13_185))))
 (= (- (- (- (+ (- (+ ?x34610 ?x34588) ?x34075) ?x34050) ?x34077) ?x34052) ?x34054) 0.0)))))))))))))))))))))
(assert
 (let ((?x32112 (* l_0_13_94 l_0_13_94)))
 (let ((?x32110 (* l_0_13_93 l_0_13_93)))
 (let ((?x32108 (* l_0_13_92 l_0_13_92)))
 (let ((?x32106 (* l_0_13_91 l_0_13_91)))
 (let ((?x32104 (* l_0_13_66 l_0_13_66)))
 (let ((?x32102 (* l_0_13_65 l_0_13_65)))
 (let ((?x32100 (* l_0_13_64 l_0_13_64)))
 (let ((?x32098 (* l_0_13_63 l_0_13_63)))
 (let ((?x33495 (* l_0_13_178 l_0_13_178)))
 (let ((?x33492 (* l_0_13_177 l_0_13_177)))
 (let ((?x33489 (* l_0_13_176 l_0_13_176)))
 (let ((?x6361 (* l_0_13_175 l_0_13_175)))
 (let ((?x32533 (* l_0_13_150 l_0_13_150)))
 (let ((?x32531 (* l_0_13_149 l_0_13_149)))
 (let ((?x32529 (* l_0_13_148 l_0_13_148)))
 (let ((?x32519 (* l_0_13_147 l_0_13_147)))
 (let ((?x34638 (* l_0_13_122 l_0_13_122)))
 (let ((?x34636 (* l_0_13_121 l_0_13_121)))
 (let ((?x34637 (- (- (* (- l_0_13_119) l_0_13_119) (* l_0_13_120 l_0_13_120)) ?x34636)))
 (let ((?x34645 (- (- (- (- (- (- (- ?x34637 ?x34638) ?x32519) ?x32529) ?x32531) ?x32533) ?x6361) ?x33489)))
 (let ((?x34652 (+ (- (- (- (- (- (- ?x34645 ?x33492) ?x33495) ?x32098) ?x32100) ?x32102) ?x32104) ?x32106)))
 (= (+ (+ (+ ?x34652 ?x32108) ?x32110) ?x32112) 0.0)))))))))))))))))))))))
(assert
 (let ((?x32173 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32170 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32167 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32164 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x32161 (* ?x31899 l_0_13_70)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x32159 (* ?x31896 l_0_13_69)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x32157 (* ?x31893 l_0_13_68)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x32155 (* ?x31890 l_0_13_67)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x32575 (* ?x31873 l_0_13_154)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x32573 (* ?x31870 l_0_13_153)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x32571 (* ?x31867 l_0_13_152)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x32569 (* ?x31864 l_0_13_151)))
 (let ((?x24717 (- (* (* (- 2.0) l_0_13_119) l_0_13_123) (* (* 2.0 l_0_13_120) l_0_13_124))))
 (let ((?x23487 (- (- ?x24717 (* (* 2.0 l_0_13_121) l_0_13_125)) (* (* 2.0 l_0_13_122) l_0_13_126))))
 (let ((?x9109 (- (- (- (- (- ?x23487 ?x32569) ?x32571) ?x32573) ?x32575) (* (* 2.0 l_0_13_175) l_0_13_179))))
 (let ((?x34672 (- (- ?x9109 (* (* 2.0 l_0_13_176) l_0_13_180)) (* (* 2.0 l_0_13_177) l_0_13_181))))
 (let ((?x34677 (- (- (- (- ?x34672 (* (* 2.0 l_0_13_178) l_0_13_182)) ?x32155) ?x32157) ?x32159)))
 (= (+ (+ (+ (+ (- ?x34677 ?x32161) ?x32164) ?x32167) ?x32170) ?x32173) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32173 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32170 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32167 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32164 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x32246 (* ?x31899 l_0_13_75)))
 (let ((?x32161 (* ?x31899 l_0_13_70)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x32244 (* ?x31896 l_0_13_74)))
 (let ((?x32159 (* ?x31896 l_0_13_69)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x32242 (* ?x31893 l_0_13_73)))
 (let ((?x32157 (* ?x31893 l_0_13_68)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x32240 (* ?x31890 l_0_13_72)))
 (let ((?x32155 (* ?x31890 l_0_13_67)))
 (let ((?x31873 (* 2.0 l_0_13_150)))
 (let ((?x32604 (* ?x31873 l_0_13_159)))
 (let ((?x31870 (* 2.0 l_0_13_149)))
 (let ((?x32602 (* ?x31870 l_0_13_158)))
 (let ((?x31867 (* 2.0 l_0_13_148)))
 (let ((?x32600 (* ?x31867 l_0_13_157)))
 (let ((?x31864 (* 2.0 l_0_13_147)))
 (let ((?x32598 (* ?x31864 l_0_13_156)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x32224 (* ?x32223 l_0_13_94)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x32221 (* ?x32220 l_0_13_93)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x32218 (* ?x32217 l_0_13_92)))
 (let ((?x32225 (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_91) ?x32218) ?x32221) ?x32224)))
 (let ((?x9184 (- (- ?x32225 (* (* 2.0 l_0_13_119) l_0_13_128)) (* (* 2.0 l_0_13_120) l_0_13_129))))
 (let ((?x34698 (- (- ?x9184 (* (* 2.0 l_0_13_121) l_0_13_130)) (* (* 2.0 l_0_13_122) l_0_13_131))))
 (let ((?x34704 (- (- (- (- (- ?x34698 ?x32598) ?x32600) ?x32602) ?x32604) (* (* 2.0 l_0_13_175) l_0_13_184))))
 (let ((?x34708 (- (- ?x34704 (* (* 2.0 l_0_13_176) l_0_13_185)) (* (* 2.0 l_0_13_177) l_0_13_186))))
 (let ((?x34713 (+ (- (+ (- ?x34708 (* (* 2.0 l_0_13_178) l_0_13_187)) ?x32155) ?x32240) ?x32157)))
 (let ((?x34720 (- (- (- (+ (- (+ (- ?x34713 ?x32242) ?x32159) ?x32244) ?x32161) ?x32246) ?x32164) ?x32167)))
 (= (- (- ?x34720 ?x32170) ?x32173) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34165 (* l_0_13_99 l_0_13_99)))
 (let ((?x34163 (* l_0_13_98 l_0_13_98)))
 (let ((?x34161 (* l_0_13_97 l_0_13_97)))
 (let ((?x34159 (* l_0_13_96 l_0_13_96)))
 (let ((?x34157 (* l_0_13_95 l_0_13_95)))
 (let ((?x34155 (* l_0_13_71 l_0_13_71)))
 (let ((?x34153 (* l_0_13_70 l_0_13_70)))
 (let ((?x34151 (* l_0_13_69 l_0_13_69)))
 (let ((?x34149 (* l_0_13_68 l_0_13_68)))
 (let ((?x34169 (* l_0_13_67 l_0_13_67)))
 (let ((?x33641 (* l_0_13_183 l_0_13_183)))
 (let ((?x33638 (* l_0_13_182 l_0_13_182)))
 (let ((?x33635 (* l_0_13_181 l_0_13_181)))
 (let ((?x33632 (* l_0_13_180 l_0_13_180)))
 (let ((?x33629 (* l_0_13_179 l_0_13_179)))
 (let ((?x32684 (* l_0_13_155 l_0_13_155)))
 (let ((?x32682 (* l_0_13_154 l_0_13_154)))
 (let ((?x32680 (* l_0_13_153 l_0_13_153)))
 (let ((?x5554 (* l_0_13_152 l_0_13_152)))
 (let ((?x5557 (* l_0_13_151 l_0_13_151)))
 (let ((?x34758 (* l_0_13_127 l_0_13_127)))
 (let ((?x34756 (* l_0_13_126 l_0_13_126)))
 (let ((?x34754 (* l_0_13_125 l_0_13_125)))
 (let ((?x34755 (- (- (* (- l_0_13_123) l_0_13_123) (* l_0_13_124 l_0_13_124)) ?x34754)))
 (let ((?x34764 (- (- (- (- (- (- (- ?x34755 ?x34756) ?x34758) ?x5557) ?x5554) ?x32680) ?x32682) ?x32684)))
 (let ((?x34771 (- (- (- (- (- (- (- ?x34764 ?x33629) ?x33632) ?x33635) ?x33638) ?x33641) ?x34169) ?x34149)))
 (let ((?x34778 (+ (+ (+ (+ (- (- (- ?x34771 ?x34151) ?x34153) ?x34155) ?x34157) ?x34159) ?x34161) ?x34163)))
 (= (+ ?x34778 ?x34165) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x34165 (* l_0_13_99 l_0_13_99)))
 (let ((?x34163 (* l_0_13_98 l_0_13_98)))
 (let ((?x34161 (* l_0_13_97 l_0_13_97)))
 (let ((?x34159 (* l_0_13_96 l_0_13_96)))
 (let ((?x34157 (* l_0_13_95 l_0_13_95)))
 (let ((?x34155 (* l_0_13_71 l_0_13_71)))
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34207 (* ?x34206 l_0_13_76)))
 (let ((?x34153 (* l_0_13_70 l_0_13_70)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34204 (* ?x34203 l_0_13_75)))
 (let ((?x34151 (* l_0_13_69 l_0_13_69)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34201 (* ?x34200 l_0_13_74)))
 (let ((?x34149 (* l_0_13_68 l_0_13_68)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34198 (* ?x34197 l_0_13_73)))
 (let ((?x34169 (* l_0_13_67 l_0_13_67)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34195 (* ?x34194 l_0_13_72)))
 (let ((?x32741 (* 2.0 l_0_13_155)))
 (let ((?x32742 (* ?x32741 l_0_13_160)))
 (let ((?x32738 (* 2.0 l_0_13_154)))
 (let ((?x32739 (* ?x32738 l_0_13_159)))
 (let ((?x32735 (* 2.0 l_0_13_153)))
 (let ((?x32736 (* ?x32735 l_0_13_158)))
 (let ((?x32732 (* 2.0 l_0_13_152)))
 (let ((?x32733 (* ?x32732 l_0_13_157)))
 (let ((?x32729 (* 2.0 l_0_13_151)))
 (let ((?x32730 (* ?x32729 l_0_13_156)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34192 (* ?x34191 l_0_13_99)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34189 (* ?x32223 l_0_13_98)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34187 (* ?x32220 l_0_13_97)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34185 (* ?x32217 l_0_13_96)))
 (let ((?x34193 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_95) ?x34185) ?x34187) ?x34189) ?x34192)))
 (let ((?x9595 (- (- ?x34193 (* (* 2.0 l_0_13_123) l_0_13_128)) (* (* 2.0 l_0_13_124) l_0_13_129))))
 (let ((?x9538 (- (- ?x9595 (* (* 2.0 l_0_13_125) l_0_13_130)) (* (* 2.0 l_0_13_126) l_0_13_131))))
 (let ((?x9500 (- (- (- (- ?x9538 (* (* 2.0 l_0_13_127) l_0_13_132)) ?x32730) ?x32733) ?x32736)))
 (let ((?x9394 (- (- (- (- ?x9500 ?x32739) ?x32742) (* (* 2.0 l_0_13_179) l_0_13_184)) (* (* 2.0 l_0_13_180) l_0_13_185))))
 (let ((?x9349 (- (- ?x9394 (* (* 2.0 l_0_13_181) l_0_13_186)) (* (* 2.0 l_0_13_182) l_0_13_187))))
 (let ((?x34796 (- (+ (- (- ?x9349 (* (* 2.0 l_0_13_183) l_0_13_188)) ?x34195) ?x34169) ?x34198)))
 (let ((?x34803 (+ (- (+ (- (+ (- (+ ?x34796 ?x34149) ?x34201) ?x34151) ?x34204) ?x34153) ?x34207) ?x34155)))
 (= (- (- (- (- (- ?x34803 ?x34157) ?x34159) ?x34161) ?x34163) ?x34165) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34254 (* ?x34206 l_0_13_82)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34252 (* ?x34203 l_0_13_81)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34250 (* ?x34200 l_0_13_80)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34248 (* ?x34197 l_0_13_79)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34246 (* ?x34194 l_0_13_78)))
 (let ((?x32741 (* 2.0 l_0_13_155)))
 (let ((?x32820 (* ?x32741 l_0_13_166)))
 (let ((?x32738 (* 2.0 l_0_13_154)))
 (let ((?x32818 (* ?x32738 l_0_13_165)))
 (let ((?x32735 (* 2.0 l_0_13_153)))
 (let ((?x32816 (* ?x32735 l_0_13_164)))
 (let ((?x32732 (* 2.0 l_0_13_152)))
 (let ((?x32814 (* ?x32732 l_0_13_163)))
 (let ((?x32729 (* 2.0 l_0_13_151)))
 (let ((?x32799 (* ?x32729 l_0_13_162)))
 (let ((?x34244 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x34241 (* ?x31847 l_0_13_98)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x34239 (* ?x31844 l_0_13_97)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x34237 (* ?x31841 l_0_13_96)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x34236 (* ?x31832 l_0_13_95)))
 (let ((?x34245 (+ (+ (+ (+ ?x34236 ?x34237) ?x34239) ?x34241) ?x34244)))
 (let ((?x34865 (- (- ?x34245 (* (* 2.0 l_0_13_123) l_0_13_134)) (* (* 2.0 l_0_13_124) l_0_13_135))))
 (let ((?x34869 (- (- ?x34865 (* (* 2.0 l_0_13_125) l_0_13_136)) (* (* 2.0 l_0_13_126) l_0_13_137))))
 (let ((?x34874 (- (- (- (- ?x34869 (* (* 2.0 l_0_13_127) l_0_13_138)) ?x32799) ?x32814) ?x32816)))
 (let ((?x34880 (- (- (- (- ?x34874 ?x32818) ?x32820) (* (* 2.0 l_0_13_179) l_0_13_190)) (* (* 2.0 l_0_13_180) l_0_13_191))))
 (let ((?x34884 (- (- ?x34880 (* (* 2.0 l_0_13_181) l_0_13_192)) (* (* 2.0 l_0_13_182) l_0_13_193))))
 (let ((?x34889 (- (- (- (- ?x34884 (* (* 2.0 l_0_13_183) l_0_13_194)) ?x34246) ?x34248) ?x34250)))
 (= (- (- ?x34889 ?x34252) ?x34254) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34295 (* l_0_13_77 l_0_13_77)))
 (let ((?x34293 (* l_0_13_76 l_0_13_76)))
 (let ((?x34291 (* l_0_13_75 l_0_13_75)))
 (let ((?x34289 (* l_0_13_74 l_0_13_74)))
 (let ((?x34287 (* l_0_13_73 l_0_13_73)))
 (let ((?x34285 (* l_0_13_72 l_0_13_72)))
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34207 (* ?x34206 l_0_13_76)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34204 (* ?x34203 l_0_13_75)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34201 (* ?x34200 l_0_13_74)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34198 (* ?x34197 l_0_13_73)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34195 (* ?x34194 l_0_13_72)))
 (let ((?x33845 (* l_0_13_189 l_0_13_189)))
 (let ((?x33842 (* l_0_13_188 l_0_13_188)))
 (let ((?x33839 (* l_0_13_187 l_0_13_187)))
 (let ((?x33836 (* l_0_13_186 l_0_13_186)))
 (let ((?x33833 (* l_0_13_185 l_0_13_185)))
 (let ((?x33830 (* l_0_13_184 l_0_13_184)))
 (let ((?x32862 (* l_0_13_161 l_0_13_161)))
 (let ((?x32847 (* l_0_13_160 l_0_13_160)))
 (let ((?x22130 (* l_0_13_159 l_0_13_159)))
 (let ((?x5639 (* l_0_13_158 l_0_13_158)))
 (let ((?x5613 (* l_0_13_157 l_0_13_157)))
 (let ((?x5620 (* l_0_13_156 l_0_13_156)))
 (let ((?x34921 (* l_0_13_133 l_0_13_133)))
 (let ((?x34919 (* l_0_13_132 l_0_13_132)))
 (let ((?x34917 (* l_0_13_131 l_0_13_131)))
 (let ((?x34915 (* l_0_13_130 l_0_13_130)))
 (let ((?x34913 (* l_0_13_129 l_0_13_129)))
 (let ((?x34911 (* l_0_13_128 l_0_13_128)))
 (let ((?x34283 (* l_0_13_105 l_0_13_105)))
 (let ((?x34281 (* l_0_13_104 l_0_13_104)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34192 (* ?x34191 l_0_13_99)))
 (let ((?x23973 (* l_0_13_103 l_0_13_103)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34189 (* ?x32223 l_0_13_98)))
 (let ((?x23971 (* l_0_13_102 l_0_13_102)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34187 (* ?x32220 l_0_13_97)))
 (let ((?x23970 (* l_0_13_101 l_0_13_101)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34185 (* ?x32217 l_0_13_96)))
 (let ((?x23964 (* l_0_13_100 l_0_13_100)))
 (let ((?x34904 (- (+ (- (+ (* (* (- 2.0) l_0_13_100) l_0_13_95) ?x23964) ?x34185) ?x23970) ?x34187)))
 (let ((?x34912 (- (+ (+ (- (+ (- (+ ?x34904 ?x23971) ?x34189) ?x23973) ?x34192) ?x34281) ?x34283) ?x34911)))
 (let ((?x34924 (- (- (- (- (- (- (- ?x34912 ?x34913) ?x34915) ?x34917) ?x34919) ?x34921) ?x5620) ?x5613)))
 (let ((?x34931 (- (- (- (- (- (- (- ?x34924 ?x5639) ?x22130) ?x32847) ?x32862) ?x33830) ?x33833) ?x33836)))
 (let ((?x34938 (+ (+ (+ (+ (- (- (- ?x34931 ?x33839) ?x33842) ?x33845) ?x34195) ?x34198) ?x34201) ?x34204)))
 (let ((?x34945 (- (- (- (- (- (- (+ ?x34938 ?x34207) ?x34285) ?x34287) ?x34289) ?x34291) ?x34293) ?x34295)))
 (= ?x34945 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34340 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x34337 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x34334 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x34331 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x34328 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x34325 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x34206 (* 2.0 l_0_13_71)))
 (let ((?x34254 (* ?x34206 l_0_13_82)))
 (let ((?x34203 (* 2.0 l_0_13_70)))
 (let ((?x34252 (* ?x34203 l_0_13_81)))
 (let ((?x34200 (* 2.0 l_0_13_69)))
 (let ((?x34250 (* ?x34200 l_0_13_80)))
 (let ((?x34197 (* 2.0 l_0_13_68)))
 (let ((?x34248 (* ?x34197 l_0_13_79)))
 (let ((?x34194 (* 2.0 l_0_13_67)))
 (let ((?x34246 (* ?x34194 l_0_13_78)))
 (let ((?x32917 (* (* 2.0 l_0_13_161) l_0_13_167)))
 (let ((?x32914 (* (* 2.0 l_0_13_160) l_0_13_166)))
 (let ((?x32909 (* (* 2.0 l_0_13_159) l_0_13_165)))
 (let ((?x32906 (* (* 2.0 l_0_13_158) l_0_13_164)))
 (let ((?x32903 (* (* 2.0 l_0_13_157) l_0_13_163)))
 (let ((?x32901 (* (* 2.0 l_0_13_156) l_0_13_162)))
 (let ((?x34244 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31847 (* 2.0 l_0_13_109)))
 (let ((?x34241 (* ?x31847 l_0_13_98)))
 (let ((?x31844 (* 2.0 l_0_13_108)))
 (let ((?x34239 (* ?x31844 l_0_13_97)))
 (let ((?x31841 (* 2.0 l_0_13_107)))
 (let ((?x34237 (* ?x31841 l_0_13_96)))
 (let ((?x31832 (* 2.0 l_0_13_106)))
 (let ((?x34236 (* ?x31832 l_0_13_95)))
 (let ((?x34322 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34319 (* ?x34191 l_0_13_110)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34317 (* ?x32223 l_0_13_109)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34315 (* ?x32220 l_0_13_108)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7907 (* ?x32217 l_0_13_107)))
 (let ((?x34320 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_106) ?x7907) ?x34315) ?x34317) ?x34319)))
 (let ((?x34323 (+ ?x34320 ?x34322)))
 (let ((?x34964 (- (- (- (- (- (- ?x34323 ?x34236) ?x34237) ?x34239) ?x34241) ?x34244) (* (* 2.0 l_0_13_128) l_0_13_134))))
 (let ((?x34970 (- (- ?x34964 (* (* 2.0 l_0_13_129) l_0_13_135)) (* (* 2.0 l_0_13_130) l_0_13_136))))
 (let ((?x34976 (- (- ?x34970 (* (* 2.0 l_0_13_131) l_0_13_137)) (* (* 2.0 l_0_13_132) l_0_13_138))))
 (let ((?x34982 (- (- (- (- ?x34976 (* (* 2.0 l_0_13_133) l_0_13_139)) ?x32901) ?x32903) ?x32906)))
 (let ((?x34988 (- (- (- (- ?x34982 ?x32909) ?x32914) ?x32917) (* (* 2.0 l_0_13_184) l_0_13_190))))
 (let ((?x34994 (- (- ?x34988 (* (* 2.0 l_0_13_185) l_0_13_191)) (* (* 2.0 l_0_13_186) l_0_13_192))))
 (let ((?x35000 (- (- ?x34994 (* (* 2.0 l_0_13_187) l_0_13_193)) (* (* 2.0 l_0_13_188) l_0_13_194))))
 (let ((?x35006 (+ (+ (+ (- ?x35000 (* (* 2.0 l_0_13_189) l_0_13_195)) ?x34246) ?x34248) ?x34250)))
 (let ((?x35013 (- (- (- (- (- (+ (+ ?x35006 ?x34252) ?x34254) ?x34325) ?x34328) ?x34331) ?x34334) ?x34337)))
 (= (- ?x35013 ?x34340) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34406 (* l_0_13_84 l_0_13_84)))
 (let ((?x34404 (* l_0_13_83 l_0_13_83)))
 (let ((?x34402 (* l_0_13_82 l_0_13_82)))
 (let ((?x34400 (* l_0_13_81 l_0_13_81)))
 (let ((?x34398 (* l_0_13_80 l_0_13_80)))
 (let ((?x34396 (* l_0_13_79 l_0_13_79)))
 (let ((?x34394 (* l_0_13_78 l_0_13_78)))
 (let ((?x33927 (* l_0_13_196 l_0_13_196)))
 (let ((?x33924 (* l_0_13_195 l_0_13_195)))
 (let ((?x33921 (* l_0_13_194 l_0_13_194)))
 (let ((?x33918 (* l_0_13_193 l_0_13_193)))
 (let ((?x33915 (* l_0_13_192 l_0_13_192)))
 (let ((?x33912 (* l_0_13_191 l_0_13_191)))
 (let ((?x23333 (* l_0_13_190 l_0_13_190)))
 (let ((?x33009 (* l_0_13_168 l_0_13_168)))
 (let ((?x33007 (* l_0_13_167 l_0_13_167)))
 (let ((?x33005 (* l_0_13_166 l_0_13_166)))
 (let ((?x33003 (* l_0_13_165 l_0_13_165)))
 (let ((?x33001 (* l_0_13_164 l_0_13_164)))
 (let ((?x32999 (* l_0_13_163 l_0_13_163)))
 (let ((?x32998 (* l_0_13_162 l_0_13_162)))
 (let ((?x35048 (* l_0_13_140 l_0_13_140)))
 (let ((?x35046 (* l_0_13_139 l_0_13_139)))
 (let ((?x35044 (* l_0_13_138 l_0_13_138)))
 (let ((?x35042 (* l_0_13_137 l_0_13_137)))
 (let ((?x35040 (* l_0_13_136 l_0_13_136)))
 (let ((?x35038 (* l_0_13_135 l_0_13_135)))
 (let ((?x10414 (* l_0_13_134 l_0_13_134)))
 (let ((?x34392 (* l_0_13_112 l_0_13_112)))
 (let ((?x34390 (* l_0_13_111 l_0_13_111)))
 (let ((?x34388 (* l_0_13_110 l_0_13_110)))
 (let ((?x34386 (* l_0_13_109 l_0_13_109)))
 (let ((?x34384 (* l_0_13_108 l_0_13_108)))
 (let ((?x34385 (+ (+ (* l_0_13_106 l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34384)))
 (let ((?x34393 (+ (+ (+ (+ ?x34385 ?x34386) ?x34388) ?x34390) ?x34392)))
 (let ((?x35049 (- (- (- (- (- (- (- ?x34393 ?x10414) ?x35038) ?x35040) ?x35042) ?x35044) ?x35046) ?x35048)))
 (let ((?x35056 (- (- (- (- (- (- (- ?x35049 ?x32998) ?x32999) ?x33001) ?x33003) ?x33005) ?x33007) ?x33009)))
 (let ((?x35063 (- (- (- (- (- (- (- ?x35056 ?x23333) ?x33912) ?x33915) ?x33918) ?x33921) ?x33924) ?x33927)))
 (let ((?x35070 (- (- (- (- (- (- (- ?x35063 ?x34394) ?x34396) ?x34398) ?x34400) ?x34402) ?x34404) ?x34406)))
 (= ?x35070 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7549 (* l_0_13_85 l_0_13_85)))
 (let ((?x23330 (* l_0_13_57 l_0_13_57)))
 (= (- (+ (* (* (- 2.0) l_0_13_197) l_0_13_212) ?x23330) ?x7549) 0.0))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x33952 (* ?x31731 l_0_13_86)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x24171 (* ?x31728 l_0_13_58)))
 (let ((?x10805 (- (* (* (- 2.0) l_0_13_198) l_0_13_212) (* (* 2.0 l_0_13_199) l_0_13_213))))
 (= (- (+ ?x10805 ?x24171) ?x33952) 0.0)))))))
(assert
 (let ((?x31731 (* 2.0 l_0_13_85)))
 (let ((?x31732 (* ?x31731 l_0_13_91)))
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x31729 (* ?x31728 l_0_13_63)))
 (let ((?x35100 (- (* (* (- 2.0) l_0_13_203) l_0_13_212) (* (* 2.0 l_0_13_204) l_0_13_213))))
 (let ((?x35104 (- (- ?x35100 (* (* 2.0 l_0_13_205) l_0_13_214)) (* (* 2.0 l_0_13_206) l_0_13_215))))
 (= (- (+ ?x35104 ?x31729) ?x31732) 0.0))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x34006 (* ?x31728 l_0_13_72)))
 (let ((?x35139 (* l_0_13_217 l_0_13_217)))
 (let ((?x35137 (* l_0_13_216 l_0_13_216)))
 (let ((?x35135 (* l_0_13_215 l_0_13_215)))
 (let ((?x35133 (* l_0_13_214 l_0_13_214)))
 (let ((?x35131 (* l_0_13_213 l_0_13_213)))
 (let ((?x35129 (* l_0_13_212 l_0_13_212)))
 (let ((?x35136 (- (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_85) ?x35129) ?x35131) ?x35133) ?x35135)))
 (= (+ (- (- ?x35136 ?x35137) ?x35139) ?x34006) 0.0)))))))))))
(assert
 (let ((?x31728 (* 2.0 l_0_13_57)))
 (let ((?x23276 (* ?x31728 l_0_13_78)))
 (let ((?x35157 (- (* (* (- 2.0) l_0_13_106) l_0_13_85) (* (* 2.0 l_0_13_212) l_0_13_218))))
 (let ((?x35163 (- (- ?x35157 (* (* 2.0 l_0_13_213) l_0_13_219)) (* (* 2.0 l_0_13_214) l_0_13_220))))
 (let ((?x35169 (- (- ?x35163 (* (* 2.0 l_0_13_215) l_0_13_221)) (* (* 2.0 l_0_13_216) l_0_13_222))))
 (= (+ (- ?x35169 (* (* 2.0 l_0_13_217) l_0_13_223)) ?x23276) 0.0)))))))
(assert
 (let ((?x34029 (* l_0_13_87 l_0_13_87)))
 (let ((?x34027 (* l_0_13_86 l_0_13_86)))
 (let ((?x35192 (- (- (+ (* l_0_13_58 l_0_13_58) (* l_0_13_59 l_0_13_59)) ?x34027) ?x34029)))
 (= ?x35192 0.0)))))
(assert
 (let ((?x32006 (* 2.0 l_0_13_87)))
 (let ((?x32007 (* ?x32006 l_0_13_92)))
 (let ((?x32003 (* 2.0 l_0_13_86)))
 (let ((?x32004 (* ?x32003 l_0_13_91)))
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x32001 (* ?x32000 l_0_13_64)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x31998 (* ?x31997 l_0_13_63)))
 (= (- (- (+ ?x31998 ?x32001) ?x32004) ?x32007) 0.0))))))))))
(assert
 (let ((?x32000 (* 2.0 l_0_13_59)))
 (let ((?x34077 (* ?x32000 l_0_13_73)))
 (let ((?x31997 (* 2.0 l_0_13_58)))
 (let ((?x34075 (* ?x31997 l_0_13_72)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x34068 (* ?x32217 l_0_13_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_100) l_0_13_86) ?x34068) ?x34075) ?x34077) 0.0))))))))
(assert
 (let ((?x32112 (* l_0_13_94 l_0_13_94)))
 (let ((?x32110 (* l_0_13_93 l_0_13_93)))
 (let ((?x32108 (* l_0_13_92 l_0_13_92)))
 (let ((?x32106 (* l_0_13_91 l_0_13_91)))
 (let ((?x32104 (* l_0_13_66 l_0_13_66)))
 (let ((?x32102 (* l_0_13_65 l_0_13_65)))
 (let ((?x35218 (+ (+ (+ (* l_0_13_63 l_0_13_63) (* l_0_13_64 l_0_13_64)) ?x32102) ?x32104)))
 (= (- (- (- (- ?x35218 ?x32106) ?x32108) ?x32110) ?x32112) 0.0)))))))))
(assert
 (let ((?x31899 (* 2.0 l_0_13_66)))
 (let ((?x32246 (* ?x31899 l_0_13_75)))
 (let ((?x31896 (* 2.0 l_0_13_65)))
 (let ((?x32244 (* ?x31896 l_0_13_74)))
 (let ((?x31893 (* 2.0 l_0_13_64)))
 (let ((?x32242 (* ?x31893 l_0_13_73)))
 (let ((?x31890 (* 2.0 l_0_13_63)))
 (let ((?x32240 (* ?x31890 l_0_13_72)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x32224 (* ?x32223 l_0_13_94)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x32221 (* ?x32220 l_0_13_93)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x32218 (* ?x32217 l_0_13_92)))
 (let ((?x35236 (+ (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_91) ?x32218) ?x32221) ?x32224) ?x32240)))
 (= (+ (+ (+ ?x35236 ?x32242) ?x32244) ?x32246) 0.0)))))))))))))))))
(assert
 (let ((?x34295 (* l_0_13_77 l_0_13_77)))
 (let ((?x34293 (* l_0_13_76 l_0_13_76)))
 (let ((?x34291 (* l_0_13_75 l_0_13_75)))
 (let ((?x34289 (* l_0_13_74 l_0_13_74)))
 (let ((?x34287 (* l_0_13_73 l_0_13_73)))
 (let ((?x34285 (* l_0_13_72 l_0_13_72)))
 (let ((?x34283 (* l_0_13_105 l_0_13_105)))
 (let ((?x34281 (* l_0_13_104 l_0_13_104)))
 (let ((?x23973 (* l_0_13_103 l_0_13_103)))
 (let ((?x23971 (* l_0_13_102 l_0_13_102)))
 (let ((?x35251 (- (- (* (- l_0_13_100) l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x23971)))
 (let ((?x35258 (+ (+ (+ (+ (- (- (- ?x35251 ?x23973) ?x34281) ?x34283) ?x34285) ?x34287) ?x34289) ?x34291)))
 (= (+ (+ ?x35258 ?x34293) ?x34295) 0.0))))))))))))))
(assert
 (let ((?x34340 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x34337 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x34334 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x34331 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x34328 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x34325 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x34322 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x34191 (* 2.0 l_0_13_104)))
 (let ((?x34319 (* ?x34191 l_0_13_110)))
 (let ((?x32223 (* 2.0 l_0_13_103)))
 (let ((?x34317 (* ?x32223 l_0_13_109)))
 (let ((?x32220 (* 2.0 l_0_13_102)))
 (let ((?x34315 (* ?x32220 l_0_13_108)))
 (let ((?x32217 (* 2.0 l_0_13_101)))
 (let ((?x7907 (* ?x32217 l_0_13_107)))
 (let ((?x11141 (- (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_106) ?x7907) ?x34315) ?x34317) ?x34319)))
 (let ((?x25356 (+ (+ (+ (+ (+ (+ (- ?x11141 ?x34322) ?x34325) ?x34328) ?x34331) ?x34334) ?x34337) ?x34340)))
 (= ?x25356 0.0)))))))))))))))))))
(assert
 (let ((?x34406 (* l_0_13_84 l_0_13_84)))
 (let ((?x34404 (* l_0_13_83 l_0_13_83)))
 (let ((?x34402 (* l_0_13_82 l_0_13_82)))
 (let ((?x34400 (* l_0_13_81 l_0_13_81)))
 (let ((?x34398 (* l_0_13_80 l_0_13_80)))
 (let ((?x34396 (* l_0_13_79 l_0_13_79)))
 (let ((?x34394 (* l_0_13_78 l_0_13_78)))
 (let ((?x34392 (* l_0_13_112 l_0_13_112)))
 (let ((?x34390 (* l_0_13_111 l_0_13_111)))
 (let ((?x34388 (* l_0_13_110 l_0_13_110)))
 (let ((?x34386 (* l_0_13_109 l_0_13_109)))
 (let ((?x34384 (* l_0_13_108 l_0_13_108)))
 (let ((?x11191 (- (- (* (- l_0_13_106) l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34384)))
 (let ((?x35277 (+ (+ (+ (- (- (- (- ?x11191 ?x34386) ?x34388) ?x34390) ?x34392) ?x34394) ?x34396) ?x34398)))
 (= (+ (+ (+ (+ ?x35277 ?x34400) ?x34402) ?x34404) ?x34406) 0.0))))))))))))))))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_198) 0.0))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_203) 0.0))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_218) 0.0))
(assert
 (= (- (* (- l_0_13_198) l_0_13_198) (* l_0_13_199 l_0_13_199)) 0.0))
(assert
 (let ((?x35313 (- (* (* (- 2.0) l_0_13_198) l_0_13_203) (* (* 2.0 l_0_13_199) l_0_13_204))))
 (= ?x35313 0.0)))
(assert
 (let ((?x35332 (* l_0_13_206 l_0_13_206)))
 (let ((?x35330 (* l_0_13_205 l_0_13_205)))
 (let ((?x35331 (- (- (* (- l_0_13_203) l_0_13_203) (* l_0_13_204 l_0_13_204)) ?x35330)))
 (= (- ?x35331 ?x35332) 0.0)))))
(assert
 (let ((?x35361 (* l_0_13_224 l_0_13_224)))
 (let ((?x35359 (* l_0_13_223 l_0_13_223)))
 (let ((?x35357 (* l_0_13_222 l_0_13_222)))
 (let ((?x35355 (* l_0_13_221 l_0_13_221)))
 (let ((?x35353 (* l_0_13_220 l_0_13_220)))
 (let ((?x35354 (- (- (* (- l_0_13_218) l_0_13_218) (* l_0_13_219 l_0_13_219)) ?x35353)))
 (= (- (- (- (- ?x35354 ?x35355) ?x35357) ?x35359) ?x35361) 0.0))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_28 0.0))
(assert
 (>= l_0_13_29 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_34 0.0))
(assert
 (>= l_0_13_38 0.0))
(assert
 (>= l_0_13_43 0.0))
(assert
 (>= l_0_13_49 0.0))
(assert
 (>= l_0_13_56 0.0))
(assert
 (>= l_0_13_57 0.0))
(assert
 (>= l_0_13_59 0.0))
(assert
 (>= l_0_13_62 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_71 0.0))
(assert
 (>= l_0_13_77 0.0))
(assert
 (>= l_0_13_84 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_87 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_94 0.0))
(assert
 (>= l_0_13_99 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_112 0.0))
(assert
 (>= l_0_13_113 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_118 0.0))
(assert
 (>= l_0_13_122 0.0))
(assert
 (>= l_0_13_127 0.0))
(assert
 (>= l_0_13_133 0.0))
(assert
 (>= l_0_13_140 0.0))
(assert
 (>= l_0_13_141 0.0))
(assert
 (>= l_0_13_143 0.0))
(assert
 (>= l_0_13_146 0.0))
(assert
 (>= l_0_13_150 0.0))
(assert
 (>= l_0_13_155 0.0))
(assert
 (>= l_0_13_161 0.0))
(assert
 (>= l_0_13_168 0.0))
(assert
 (>= l_0_13_169 0.0))
(assert
 (>= l_0_13_171 0.0))
(assert
 (>= l_0_13_174 0.0))
(assert
 (>= l_0_13_178 0.0))
(assert
 (>= l_0_13_183 0.0))
(assert
 (>= l_0_13_189 0.0))
(assert
 (>= l_0_13_196 0.0))
(assert
 (>= l_0_13_197 0.0))
(assert
 (>= l_0_13_199 0.0))
(assert
 (>= l_0_13_202 0.0))
(assert
 (>= l_0_13_206 0.0))
(assert
 (>= l_0_13_211 0.0))
(assert
 (>= l_0_13_217 0.0))
(assert
 (>= l_0_13_224 0.0))
(assert
 (let ((?x35431 (* l_0_14_225 l_0_14_225)))
 (= (- (- _a_0_ (* l_0_14_197 l_0_14_197)) ?x35431) 0.0)))
(assert
 (let ((?x35451 (* l_0_14_29 l_0_14_29)))
 (let ((?x35442 (* l_0_14_169 l_0_14_169)))
 (let ((?x35443 (* 2.0 ?x35442)))
 (let ((?x35447 (- (+ (+ _a_1_ (* l_0_14_1 l_0_14_1)) ?x35443) (* (* 2.0 l_0_14_197) l_0_14_200))))
 (= (- (- ?x35447 (* (* 2.0 l_0_14_225) l_0_14_228)) ?x35451) 0.0))))))
(assert
 (let ((?x35451 (* l_0_14_29 l_0_14_29)))
 (let ((?x35471 (- (+ (* (- l_0_14_1) l_0_14_1) (* l_0_14_141 l_0_14_141)) (* (* 2.0 l_0_14_203) l_0_14_218))))
 (let ((?x35477 (- (- ?x35471 (* (* 2.0 l_0_14_204) l_0_14_219)) (* (* 2.0 l_0_14_205) l_0_14_220))))
 (let ((?x35483 (- (- ?x35477 (* (* 2.0 l_0_14_206) l_0_14_221)) (* (* 2.0 l_0_14_231) l_0_14_246))))
 (let ((?x35489 (- (- ?x35483 (* (* 2.0 l_0_14_232) l_0_14_247)) (* (* 2.0 l_0_14_233) l_0_14_248))))
 (= (- (+ (- ?x35489 (* (* 2.0 l_0_14_234) l_0_14_249)) ?x35451) 2.0) 0.0)))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x35535 (* ?x35534 l_0_14_91)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x35532 (* ?x35531 l_0_14_63)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35529 (* ?x35528 l_0_14_30)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35526 (* ?x35525 l_0_14_142)))
 (let ((?x35536 (+ (- (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_2) ?x35526) ?x35529) ?x35532) ?x35535)))
 (= ?x35536 0.0)))))))))))
(assert
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x35589 (* ?x35588 l_0_14_53)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x35586 (* ?x35585 l_0_14_52)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x35583 (* ?x35582 l_0_14_51)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x35580 (* ?x35579 l_0_14_50)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35577 (* ?x35528 l_0_14_32)))
 (let ((?x35574 (* 2.0 l_0_14_24)))
 (let ((?x35575 (* ?x35574 l_0_14_9)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x35572 (* ?x35571 l_0_14_8)))
 (let ((?x35568 (* 2.0 l_0_14_22)))
 (let ((?x35569 (* ?x35568 l_0_14_7)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35554 (* ?x35525 l_0_14_144)))
 (let ((?x35553 (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) (* (* 2.0 l_0_14_10) l_0_14_25))))
 (let ((?x35561 (+ (+ (+ ?x35553 ?x35554) (* (* 4.0 l_0_14_175) l_0_14_190)) (* (* 4.0 l_0_14_176) l_0_14_191))))
 (let ((?x35567 (+ (+ ?x35561 (* (* 4.0 l_0_14_177) l_0_14_192)) (* (* 4.0 l_0_14_178) l_0_14_193))))
 (let ((?x35587 (- (- (- (+ (+ (+ (+ ?x35567 ?x35569) ?x35572) ?x35575) ?x35577) ?x35580) ?x35583) ?x35586)))
 (= (- ?x35587 ?x35589) 0.0))))))))))))))))))))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35641 (* ?x35528 l_0_14_35)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35639 (* ?x35525 l_0_14_147)))
 (= (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_7) ?x35639) ?x35641) 0.0))))))
(assert
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x35715 (* ?x35714 l_0_14_81)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x35712 (* ?x35711 l_0_14_80)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x35709 (* ?x35708 l_0_14_79)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x35706 (* ?x35705 l_0_14_78)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35703 (* ?x35528 l_0_14_39)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x35689 (* ?x35688 l_0_14_165)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x35686 (* ?x35685 l_0_14_164)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x35683 (* ?x35682 l_0_14_163)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x35680 (* ?x35679 l_0_14_162)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35677 (* ?x35525 l_0_14_151)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x35663 (* ?x35662 l_0_14_94)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x35660 (* ?x35659 l_0_14_93)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x35657 (* ?x35656 l_0_14_92)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x35649 (* ?x35647 l_0_14_91)))
 (let ((?x35664 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) ?x35649) ?x35657) ?x35660) ?x35663)))
 (let ((?x35670 (- (- ?x35664 (* (* 2.0 l_0_14_119) l_0_14_134)) (* (* 2.0 l_0_14_120) l_0_14_135))))
 (let ((?x35676 (- (- ?x35670 (* (* 2.0 l_0_14_121) l_0_14_136)) (* (* 2.0 l_0_14_122) l_0_14_137))))
 (let ((?x35693 (- (- (- (- (- (+ ?x35676 ?x35677) ?x35680) ?x35683) ?x35686) ?x35689) (* (* 2.0 l_0_14_175) l_0_14_190))))
 (let ((?x35699 (- (- ?x35693 (* (* 2.0 l_0_14_176) l_0_14_191)) (* (* 2.0 l_0_14_177) l_0_14_192))))
 (let ((?x35710 (- (- (+ (- ?x35699 (* (* 2.0 l_0_14_178) l_0_14_193)) ?x35703) ?x35706) ?x35709)))
 (= (- (- ?x35710 ?x35712) ?x35715) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x35715 (* ?x35714 l_0_14_81)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x35712 (* ?x35711 l_0_14_80)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x35709 (* ?x35708 l_0_14_79)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x35706 (* ?x35705 l_0_14_78)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35795 (* ?x35528 l_0_14_44)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35793 (* ?x35525 l_0_14_156)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x35663 (* ?x35662 l_0_14_94)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x35660 (* ?x35659 l_0_14_93)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x35657 (* ?x35656 l_0_14_92)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x35649 (* ?x35647 l_0_14_91)))
 (let ((?x35792 (- (- (- (- (* (* (- 2.0) l_0_14_1) l_0_14_16) ?x35649) ?x35657) ?x35660) ?x35663)))
 (= (+ (+ (+ (+ (+ (+ ?x35792 ?x35793) ?x35795) ?x35706) ?x35709) ?x35712) ?x35715) 0.0)))))))))))))))))))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x25858 (* ?x35528 l_0_14_50)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x11507 (* ?x35525 l_0_14_162)))
 (= (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_22) ?x11507) ?x25858) 0.0))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x35834 (* ?x35833 l_0_14_92)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x35831 (* ?x35830 l_0_14_91)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x35828 (* ?x35827 l_0_14_64)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x35825 (* ?x35824 l_0_14_63)))
 (let ((?x35822 (* l_0_14_31 l_0_14_31)))
 (let ((?x35820 (* l_0_14_30 l_0_14_30)))
 (let ((?x35818 (* l_0_14_3 l_0_14_3)))
 (let ((?x35811 (* l_0_14_2 l_0_14_2)))
 (let ((?x35817 (- (+ (* l_0_14_142 l_0_14_142) (* l_0_14_143 l_0_14_143)) ?x35811)))
 (let ((?x35835 (+ (+ (- (- (+ (+ (- ?x35817 ?x35818) ?x35820) ?x35822) ?x35825) ?x35828) ?x35831) ?x35834)))
 (= ?x35835 0.0))))))))))))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x35883 (* ?x35882 l_0_14_93)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x35880 (* ?x35879 l_0_14_92)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x35877 (* ?x35876 l_0_14_91)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x35874 (* ?x35873 l_0_14_65)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x35871 (* ?x35870 l_0_14_64)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x35868 (* ?x35867 l_0_14_63)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35865 (* ?x35864 l_0_14_33)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35862 (* ?x35861 l_0_14_32)))
 (let ((?x35858 (* 2.0 l_0_14_3)))
 (let ((?x35859 (* ?x35858 l_0_14_5)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x35856 (* ?x35855 l_0_14_4)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35853 (* ?x35852 l_0_14_145)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35851 (* ?x35850 l_0_14_144)))
 (let ((?x35872 (- (- (+ (+ (- (- (+ ?x35851 ?x35853) ?x35856) ?x35859) ?x35862) ?x35865) ?x35868) ?x35871)))
 (= (+ (+ (+ (- ?x35872 ?x35874) ?x35877) ?x35880) ?x35883) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x35943 (* l_0_14_94 l_0_14_94)))
 (let ((?x35941 (* l_0_14_93 l_0_14_93)))
 (let ((?x35939 (* l_0_14_92 l_0_14_92)))
 (let ((?x35937 (* l_0_14_91 l_0_14_91)))
 (let ((?x35935 (* l_0_14_66 l_0_14_66)))
 (let ((?x35933 (* l_0_14_65 l_0_14_65)))
 (let ((?x35931 (* l_0_14_64 l_0_14_64)))
 (let ((?x35929 (* l_0_14_63 l_0_14_63)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35927 (* ?x35864 l_0_14_36)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35925 (* ?x35861 l_0_14_35)))
 (let ((?x35858 (* 2.0 l_0_14_3)))
 (let ((?x35923 (* ?x35858 l_0_14_8)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x35921 (* ?x35855 l_0_14_7)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35919 (* ?x35852 l_0_14_148)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35918 (* ?x35850 l_0_14_147)))
 (let ((?x35932 (- (- (+ (+ (- (- (+ ?x35918 ?x35919) ?x35921) ?x35923) ?x35925) ?x35927) ?x35929) ?x35931)))
 (= (+ (+ (+ (+ (- (- ?x35932 ?x35933) ?x35935) ?x35937) ?x35939) ?x35941) ?x35943) 0.0)))))))))))))))))))))))
(assert
 (let ((?x35998 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x35995 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x35992 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x35989 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x35986 (* ?x35714 l_0_14_70)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x35984 (* ?x35711 l_0_14_69)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x35982 (* ?x35708 l_0_14_68)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x35980 (* ?x35705 l_0_14_67)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35978 (* ?x35864 l_0_14_40)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35976 (* ?x35861 l_0_14_39)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35974 (* ?x35852 l_0_14_152)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35972 (* ?x35850 l_0_14_151)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x35970 (* ?x35969 l_0_14_3)))
 (let ((?x35977 (+ (+ (+ (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x35970) ?x35972) ?x35974) ?x35976)))
 (let ((?x35993 (+ (+ (- (- (- (- (+ ?x35977 ?x35978) ?x35980) ?x35982) ?x35984) ?x35986) ?x35989) ?x35992)))
 (= (+ (+ ?x35993 ?x35995) ?x35998) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x36054 (* ?x35714 l_0_14_75)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x36052 (* ?x35711 l_0_14_74)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x36050 (* ?x35708 l_0_14_73)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x36048 (* ?x35705 l_0_14_72)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x36046 (* ?x35864 l_0_14_45)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x36044 (* ?x35861 l_0_14_44)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36042 (* ?x36041 l_0_14_3)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36039 (* ?x36038 l_0_14_2)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x36036 (* ?x35852 l_0_14_157)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x36034 (* ?x35850 l_0_14_156)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x36032 (* ?x36031 l_0_14_94)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x36029 (* ?x36028 l_0_14_93)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x11185 (* ?x11663 l_0_14_92)))
 (let ((?x36033 (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_91) ?x11185) ?x36029) ?x36032)))
 (let ((?x36049 (- (+ (+ (- (- (+ (+ ?x36033 ?x36034) ?x36036) ?x36039) ?x36042) ?x36044) ?x36046) ?x36048)))
 (= (- (- (- ?x36049 ?x36050) ?x36052) ?x36054) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x35715 (* ?x35714 l_0_14_81)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x35712 (* ?x35711 l_0_14_80)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x35709 (* ?x35708 l_0_14_79)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x35706 (* ?x35705 l_0_14_78)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x36110 (* ?x35864 l_0_14_51)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x36108 (* ?x35861 l_0_14_50)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x36106 (* ?x35571 l_0_14_3)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x36104 (* ?x35855 l_0_14_22)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x36102 (* ?x35852 l_0_14_163)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x36100 (* ?x35850 l_0_14_162)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x35663 (* ?x35662 l_0_14_94)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x35660 (* ?x35659 l_0_14_93)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x35657 (* ?x35656 l_0_14_92)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x35649 (* ?x35647 l_0_14_91)))
 (let ((?x36107 (- (- (+ (+ (+ (+ (+ ?x35649 ?x35657) ?x35660) ?x35663) ?x36100) ?x36102) ?x36104) ?x36106)))
 (= (- (- (- (- (+ (+ ?x36107 ?x36108) ?x36110) ?x35706) ?x35709) ?x35712) ?x35715) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x36165 (* l_0_14_6 l_0_14_6)))
 (let ((?x36163 (* l_0_14_5 l_0_14_5)))
 (let ((?x36161 (* l_0_14_4 l_0_14_4)))
 (let ((?x36159 (* l_0_14_34 l_0_14_34)))
 (let ((?x36157 (* l_0_14_33 l_0_14_33)))
 (let ((?x36155 (* l_0_14_32 l_0_14_32)))
 (let ((?x36153 (* l_0_14_146 l_0_14_146)))
 (let ((?x36154 (+ (+ (* l_0_14_144 l_0_14_144) (* l_0_14_145 l_0_14_145)) ?x36153)))
 (= (- (- (- (+ (+ (+ ?x36154 ?x36155) ?x36157) ?x36159) ?x36161) ?x36163) ?x36165) 0.0))))))))))
(assert
 (let ((?x36200 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x36197 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x36194 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36191 (* ?x36190 l_0_14_37)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36188 (* ?x36187 l_0_14_36)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36185 (* ?x36184 l_0_14_35)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36182 (* ?x36181 l_0_14_149)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36179 (* ?x36178 l_0_14_148)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x36177 (* ?x36176 l_0_14_147)))
 (let ((?x36198 (- (- (+ (+ (+ (+ (+ ?x36177 ?x36179) ?x36182) ?x36185) ?x36188) ?x36191) ?x36194) ?x36197)))
 (= (- ?x36198 ?x36200) 0.0))))))))))))))))))
(assert
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36249 (* ?x36190 l_0_14_41)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36247 (* ?x36187 l_0_14_40)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36245 (* ?x36184 l_0_14_39)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36243 (* ?x36181 l_0_14_153)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36241 (* ?x36178 l_0_14_152)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x36239 (* ?x36176 l_0_14_151)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36237 (* ?x36236 l_0_14_6)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36234 (* ?x35969 l_0_14_5)))
 (let ((?x36242 (+ (+ (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x36234) ?x36237) ?x36239) ?x36241)))
 (= (+ (+ (+ (+ ?x36242 ?x36243) ?x36245) ?x36247) ?x36249) 0.0)))))))))))))))))))
(assert
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36269 (* ?x36190 l_0_14_46)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36267 (* ?x36187 l_0_14_45)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36265 (* ?x36184 l_0_14_44)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36263 (* ?x36262 l_0_14_6)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x11777 (* ?x36041 l_0_14_5)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x11783 (* ?x36038 l_0_14_4)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x25997 (* ?x36181 l_0_14_158)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x11691 (* ?x36178 l_0_14_157)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x11761 (* ?x36176 l_0_14_156)))
 (let ((?x36268 (+ (+ (- (- (- (+ (+ ?x11761 ?x11691) ?x25997) ?x11783) ?x11777) ?x36263) ?x36265) ?x36267)))
 (= (+ ?x36268 ?x36269) 0.0)))))))))))))))))))))
(assert
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36317 (* ?x36190 l_0_14_52)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36315 (* ?x36187 l_0_14_51)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36313 (* ?x36184 l_0_14_50)))
 (let ((?x35574 (* 2.0 l_0_14_24)))
 (let ((?x36311 (* ?x35574 l_0_14_6)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x36309 (* ?x35571 l_0_14_5)))
 (let ((?x35568 (* 2.0 l_0_14_22)))
 (let ((?x36307 (* ?x35568 l_0_14_4)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36297 (* ?x36181 l_0_14_164)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36294 (* ?x36178 l_0_14_163)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x26032 (* ?x36176 l_0_14_162)))
 (let ((?x36316 (+ (+ (- (- (- (+ (+ ?x26032 ?x36294) ?x36297) ?x36307) ?x36309) ?x36311) ?x36313) ?x36315)))
 (= (+ ?x36316 ?x36317) 0.0)))))))))))))))))))))
(assert
 (let ((?x36372 (* l_0_14_9 l_0_14_9)))
 (let ((?x36370 (* l_0_14_8 l_0_14_8)))
 (let ((?x36368 (* l_0_14_7 l_0_14_7)))
 (let ((?x36366 (* l_0_14_38 l_0_14_38)))
 (let ((?x36364 (* l_0_14_37 l_0_14_37)))
 (let ((?x36362 (* l_0_14_36 l_0_14_36)))
 (let ((?x36360 (* l_0_14_35 l_0_14_35)))
 (let ((?x36358 (* l_0_14_150 l_0_14_150)))
 (let ((?x36356 (* l_0_14_149 l_0_14_149)))
 (let ((?x36354 (* l_0_14_148 l_0_14_148)))
 (let ((?x36355 (+ (+ (* (- l_0_14_10) l_0_14_10) (* l_0_14_147 l_0_14_147)) ?x36354)))
 (let ((?x36369 (- (+ (+ (+ (+ (+ (+ ?x36355 ?x36356) ?x36358) ?x36360) ?x36362) ?x36364) ?x36366) ?x36368)))
 (= (- (- ?x36369 ?x36370) ?x36372) 0.0))))))))))))))
(assert
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x36409 (* ?x35588 l_0_14_42)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x36407 (* ?x35585 l_0_14_41)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x36405 (* ?x35582 l_0_14_40)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x36403 (* ?x35579 l_0_14_39)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x36401 (* ?x35688 l_0_14_154)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x36399 (* ?x35685 l_0_14_153)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x36397 (* ?x35682 l_0_14_152)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x36395 (* ?x35679 l_0_14_151)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36393 (* ?x36236 l_0_14_9)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36391 (* ?x35969 l_0_14_8)))
 (let ((?x36388 (* 2.0 l_0_14_11)))
 (let ((?x36389 (* ?x36388 l_0_14_7)))
 (let ((?x36396 (+ (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x36389) ?x36391) ?x36393) ?x36395)))
 (let ((?x36410 (+ (+ (+ (+ (+ (+ (+ ?x36396 ?x36397) ?x36399) ?x36401) ?x36403) ?x36405) ?x36407) ?x36409)))
 (= ?x36410 0.0))))))))))))))))))))))))))
(assert
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x36460 (* ?x35588 l_0_14_47)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x36458 (* ?x35585 l_0_14_46)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x36456 (* ?x35582 l_0_14_45)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x36454 (* ?x35579 l_0_14_44)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36452 (* ?x36262 l_0_14_9)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36450 (* ?x36041 l_0_14_8)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36448 (* ?x36038 l_0_14_7)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x36435 (* ?x35688 l_0_14_159)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x36430 (* ?x35685 l_0_14_158)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x36426 (* ?x35682 l_0_14_157)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x11866 (* ?x35679 l_0_14_156)))
 (let ((?x36436 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_10) l_0_14_19) ?x11866) ?x36426) ?x36430) ?x36435)))
 (let ((?x36461 (+ (+ (+ (+ (- (- (- ?x36436 ?x36448) ?x36450) ?x36452) ?x36454) ?x36456) ?x36458) ?x36460)))
 (= ?x36461 0.0))))))))))))))))))))))))))
(assert
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x35589 (* ?x35588 l_0_14_53)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x35586 (* ?x35585 l_0_14_52)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x35583 (* ?x35582 l_0_14_51)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x35580 (* ?x35579 l_0_14_50)))
 (let ((?x35574 (* 2.0 l_0_14_24)))
 (let ((?x35575 (* ?x35574 l_0_14_9)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x35572 (* ?x35571 l_0_14_8)))
 (let ((?x35568 (* 2.0 l_0_14_22)))
 (let ((?x35569 (* ?x35568 l_0_14_7)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x35689 (* ?x35688 l_0_14_165)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x35686 (* ?x35685 l_0_14_164)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x35683 (* ?x35682 l_0_14_163)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x35680 (* ?x35679 l_0_14_162)))
 (let ((?x36494 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_10) l_0_14_25) ?x35680) ?x35683) ?x35686) ?x35689)))
 (let ((?x36512 (+ (+ (+ (+ (- (- (- ?x36494 ?x35569) ?x35572) ?x35575) ?x35580) ?x35583) ?x35586) ?x35589)))
 (= ?x36512 0.0))))))))))))))))))))))))))
(assert
 (let ((?x36531 (* l_0_14_43 l_0_14_43)))
 (let ((?x36529 (* l_0_14_42 l_0_14_42)))
 (let ((?x36527 (* l_0_14_41 l_0_14_41)))
 (let ((?x36525 (* l_0_14_40 l_0_14_40)))
 (let ((?x36523 (* l_0_14_39 l_0_14_39)))
 (let ((?x36521 (* l_0_14_155 l_0_14_155)))
 (let ((?x11911 (* l_0_14_154 l_0_14_154)))
 (let ((?x11909 (* l_0_14_153 l_0_14_153)))
 (let ((?x26028 (* l_0_14_152 l_0_14_152)))
 (let ((?x11865 (* l_0_14_151 l_0_14_151)))
 (let ((?x26045 (* l_0_14_15 l_0_14_15)))
 (let ((?x11850 (* l_0_14_14 l_0_14_14)))
 (let ((?x11848 (* l_0_14_13 l_0_14_13)))
 (let ((?x11896 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x11848)))
 (let ((?x36522 (+ (+ (+ (+ (+ (- (- ?x11896 ?x11850) ?x26045) ?x11865) ?x26028) ?x11909) ?x11911) ?x36521)))
 (= (+ (+ (+ (+ (+ ?x36522 ?x36523) ?x36525) ?x36527) ?x36529) ?x36531) 0.0)))))))))))))))))
(assert
 (let ((?x36594 (* 2.0 l_0_14_43)))
 (let ((?x36595 (* ?x36594 l_0_14_48)))
 (let ((?x36591 (* 2.0 l_0_14_42)))
 (let ((?x36592 (* ?x36591 l_0_14_47)))
 (let ((?x36588 (* 2.0 l_0_14_41)))
 (let ((?x36589 (* ?x36588 l_0_14_46)))
 (let ((?x36585 (* 2.0 l_0_14_40)))
 (let ((?x36586 (* ?x36585 l_0_14_45)))
 (let ((?x36582 (* 2.0 l_0_14_39)))
 (let ((?x36583 (* ?x36582 l_0_14_44)))
 (let ((?x36579 (* 2.0 l_0_14_155)))
 (let ((?x36580 (* ?x36579 l_0_14_160)))
 (let ((?x36576 (* 2.0 l_0_14_154)))
 (let ((?x36577 (* ?x36576 l_0_14_159)))
 (let ((?x36573 (* 2.0 l_0_14_153)))
 (let ((?x36574 (* ?x36573 l_0_14_158)))
 (let ((?x36570 (* 2.0 l_0_14_152)))
 (let ((?x36571 (* ?x36570 l_0_14_157)))
 (let ((?x36567 (* 2.0 l_0_14_151)))
 (let ((?x36568 (* ?x36567 l_0_14_156)))
 (let ((?x36564 (* 2.0 l_0_14_15)))
 (let ((?x36565 (* ?x36564 l_0_14_20)))
 (let ((?x36561 (* 2.0 l_0_14_14)))
 (let ((?x36562 (* ?x36561 l_0_14_19)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36559 (* ?x36236 l_0_14_18)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36557 (* ?x35969 l_0_14_17)))
 (let ((?x36566 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_16) ?x36557) ?x36559) ?x36562) ?x36565)))
 (let ((?x36587 (+ (+ (+ (+ (+ (+ (+ ?x36566 ?x36568) ?x36571) ?x36574) ?x36577) ?x36580) ?x36583) ?x36586)))
 (= (+ (+ (+ ?x36587 ?x36589) ?x36592) ?x36595) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x36594 (* 2.0 l_0_14_43)))
 (let ((?x36662 (* ?x36594 l_0_14_54)))
 (let ((?x36591 (* 2.0 l_0_14_42)))
 (let ((?x36660 (* ?x36591 l_0_14_53)))
 (let ((?x36588 (* 2.0 l_0_14_41)))
 (let ((?x36658 (* ?x36588 l_0_14_52)))
 (let ((?x36585 (* 2.0 l_0_14_40)))
 (let ((?x36656 (* ?x36585 l_0_14_51)))
 (let ((?x36582 (* 2.0 l_0_14_39)))
 (let ((?x36654 (* ?x36582 l_0_14_50)))
 (let ((?x36579 (* 2.0 l_0_14_155)))
 (let ((?x36652 (* ?x36579 l_0_14_166)))
 (let ((?x36576 (* 2.0 l_0_14_154)))
 (let ((?x36650 (* ?x36576 l_0_14_165)))
 (let ((?x36573 (* 2.0 l_0_14_153)))
 (let ((?x36648 (* ?x36573 l_0_14_164)))
 (let ((?x36570 (* 2.0 l_0_14_152)))
 (let ((?x36646 (* ?x36570 l_0_14_163)))
 (let ((?x36567 (* 2.0 l_0_14_151)))
 (let ((?x36631 (* ?x36567 l_0_14_162)))
 (let ((?x36564 (* 2.0 l_0_14_15)))
 (let ((?x36627 (* ?x36564 l_0_14_26)))
 (let ((?x36561 (* 2.0 l_0_14_14)))
 (let ((?x36623 (* ?x36561 l_0_14_25)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36619 (* ?x36236 l_0_14_24)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36615 (* ?x35969 l_0_14_23)))
 (let ((?x36629 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_22) ?x36615) ?x36619) ?x36623) ?x36627)))
 (let ((?x36657 (+ (+ (+ (+ (+ (+ (+ ?x36629 ?x36631) ?x36646) ?x36648) ?x36650) ?x36652) ?x36654) ?x36656)))
 (= (+ (+ (+ ?x36657 ?x36658) ?x36660) ?x36662) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x36706 (* l_0_14_49 l_0_14_49)))
 (let ((?x36704 (* l_0_14_48 l_0_14_48)))
 (let ((?x36702 (* l_0_14_47 l_0_14_47)))
 (let ((?x36700 (* l_0_14_46 l_0_14_46)))
 (let ((?x36698 (* l_0_14_45 l_0_14_45)))
 (let ((?x36696 (* l_0_14_44 l_0_14_44)))
 (let ((?x36694 (* l_0_14_21 l_0_14_21)))
 (let ((?x36692 (* l_0_14_20 l_0_14_20)))
 (let ((?x36690 (* l_0_14_19 l_0_14_19)))
 (let ((?x36688 (* l_0_14_18 l_0_14_18)))
 (let ((?x36686 (* l_0_14_17 l_0_14_17)))
 (let ((?x36684 (* l_0_14_161 l_0_14_161)))
 (let ((?x36682 (* l_0_14_160 l_0_14_160)))
 (let ((?x36680 (* l_0_14_16 l_0_14_16)))
 (let ((?x36678 (* l_0_14_159 l_0_14_159)))
 (let ((?x25478 (* l_0_14_158 l_0_14_158)))
 (let ((?x12030 (+ (+ (* l_0_14_156 l_0_14_156) (* l_0_14_157 l_0_14_157)) ?x25478)))
 (let ((?x36691 (- (- (- (+ (+ (- (+ ?x12030 ?x36678) ?x36680) ?x36682) ?x36684) ?x36686) ?x36688) ?x36690)))
 (let ((?x36705 (+ (+ (+ (+ (+ (- (- ?x36691 ?x36692) ?x36694) ?x36696) ?x36698) ?x36700) ?x36702) ?x36704)))
 (= (+ ?x36705 ?x36706) 0.0)))))))))))))))))))))
(assert
 (let ((?x36771 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x36768 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x36765 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x36762 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x36759 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x36756 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x36753 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x36750 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x36747 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36744 (* ?x36262 l_0_14_24)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36742 (* ?x36041 l_0_14_23)))
 (let ((?x36740 (* (* 2.0 l_0_14_161) l_0_14_167)))
 (let ((?x36737 (* (* 2.0 l_0_14_160) l_0_14_166)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36734 (* ?x36038 l_0_14_22)))
 (let ((?x36732 (* (* 2.0 l_0_14_159) l_0_14_165)))
 (let ((?x36729 (* (* 2.0 l_0_14_158) l_0_14_164)))
 (let ((?x36726 (* (* 2.0 l_0_14_157) l_0_14_163)))
 (let ((?x36724 (* (* 2.0 l_0_14_156) l_0_14_162)))
 (let ((?x36743 (- (+ (+ (- (+ (+ (+ ?x36724 ?x36726) ?x36729) ?x36732) ?x36734) ?x36737) ?x36740) ?x36742)))
 (let ((?x36763 (+ (+ (+ (- (- (- (- ?x36743 ?x36744) ?x36747) ?x36750) ?x36753) ?x36756) ?x36759) ?x36762)))
 (= (+ (+ (+ ?x36763 ?x36765) ?x36768) ?x36771) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x36855 (* l_0_14_56 l_0_14_56)))
 (let ((?x36853 (* l_0_14_55 l_0_14_55)))
 (let ((?x36851 (* l_0_14_54 l_0_14_54)))
 (let ((?x36849 (* l_0_14_53 l_0_14_53)))
 (let ((?x36847 (* l_0_14_52 l_0_14_52)))
 (let ((?x36845 (* l_0_14_51 l_0_14_51)))
 (let ((?x36843 (* l_0_14_50 l_0_14_50)))
 (let ((?x36841 (* l_0_14_28 l_0_14_28)))
 (let ((?x36839 (* l_0_14_27 l_0_14_27)))
 (let ((?x36837 (* l_0_14_26 l_0_14_26)))
 (let ((?x36835 (* l_0_14_25 l_0_14_25)))
 (let ((?x36833 (* l_0_14_24 l_0_14_24)))
 (let ((?x36831 (* l_0_14_23 l_0_14_23)))
 (let ((?x36829 (* l_0_14_22 l_0_14_22)))
 (let ((?x36827 (* l_0_14_168 l_0_14_168)))
 (let ((?x36825 (* l_0_14_167 l_0_14_167)))
 (let ((?x36823 (* l_0_14_166 l_0_14_166)))
 (let ((?x36821 (* l_0_14_165 l_0_14_165)))
 (let ((?x36819 (* l_0_14_164 l_0_14_164)))
 (let ((?x36820 (+ (+ (* l_0_14_162 l_0_14_162) (* l_0_14_163 l_0_14_163)) ?x36819)))
 (let ((?x36834 (- (- (- (+ (+ (+ (+ ?x36820 ?x36821) ?x36823) ?x36825) ?x36827) ?x36829) ?x36831) ?x36833)))
 (let ((?x36848 (+ (+ (+ (- (- (- (- ?x36834 ?x36835) ?x36837) ?x36839) ?x36841) ?x36843) ?x36845) ?x36847)))
 (= (+ (+ (+ (+ ?x36848 ?x36849) ?x36851) ?x36853) ?x36855) 0.0))))))))))))))))))))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35529 (* ?x35528 l_0_14_30)))
 (let ((?x36876 (+ (* (* 2.0 l_0_14_1) l_0_14_2) (* (* 4.0 l_0_14_169) l_0_14_170))))
 (let ((?x36882 (- (- ?x36876 (* (* 2.0 l_0_14_198) l_0_14_200)) (* (* 2.0 l_0_14_199) l_0_14_201))))
 (let ((?x36888 (- (- ?x36882 (* (* 2.0 l_0_14_226) l_0_14_228)) (* (* 2.0 l_0_14_227) l_0_14_229))))
 (= (- ?x36888 ?x35529) 0.0)))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35577 (* ?x35528 l_0_14_32)))
 (let ((?x36915 (* l_0_14_230 l_0_14_230)))
 (let ((?x36913 (* l_0_14_229 l_0_14_229)))
 (let ((?x36911 (* l_0_14_228 l_0_14_228)))
 (let ((?x36909 (* l_0_14_202 l_0_14_202)))
 (let ((?x12159 (* l_0_14_201 l_0_14_201)))
 (let ((?x12163 (* l_0_14_200 l_0_14_200)))
 (let ((?x26161 (+ (* (* 2.0 l_0_14_1) l_0_14_4) (* (* 4.0 l_0_14_169) l_0_14_172))))
 (let ((?x36917 (- (- (- (- (- (- (- ?x26161 ?x12163) ?x12159) ?x36909) ?x36911) ?x36913) ?x36915) ?x35577)))
 (= ?x36917 0.0))))))))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35641 (* ?x35528 l_0_14_35)))
 (let ((?x36936 (+ (* (* 2.0 l_0_14_1) l_0_14_7) (* (* 4.0 l_0_14_169) l_0_14_175))))
 (let ((?x36942 (- (- ?x36936 (* (* 2.0 l_0_14_200) l_0_14_203)) (* (* 2.0 l_0_14_201) l_0_14_204))))
 (let ((?x36948 (- (- ?x36942 (* (* 2.0 l_0_14_202) l_0_14_205)) (* (* 2.0 l_0_14_228) l_0_14_231))))
 (let ((?x36954 (- (- ?x36948 (* (* 2.0 l_0_14_229) l_0_14_232)) (* (* 2.0 l_0_14_230) l_0_14_233))))
 (= (- ?x36954 ?x35641) 0.0))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x36997 (* ?x35534 l_0_14_88)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x36995 (* ?x35531 l_0_14_60)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35703 (* ?x35528 l_0_14_39)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35554 (* ?x35525 l_0_14_144)))
 (let ((?x12239 (- (* (* 2.0 l_0_14_1) l_0_14_11) (* (* 2.0 l_0_14_113) l_0_14_116))))
 (let ((?x36981 (+ (- (- ?x12239 ?x35554) (* (* 2.0 l_0_14_169) l_0_14_172)) (* (* 4.0 l_0_14_169) l_0_14_179))))
 (let ((?x36985 (- (- ?x36981 (* (* 2.0 l_0_14_200) l_0_14_207)) (* (* 2.0 l_0_14_201) l_0_14_208))))
 (let ((?x36989 (- (- ?x36985 (* (* 2.0 l_0_14_202) l_0_14_209)) (* (* 2.0 l_0_14_228) l_0_14_235))))
 (let ((?x36993 (- (- ?x36989 (* (* 2.0 l_0_14_229) l_0_14_236)) (* (* 2.0 l_0_14_230) l_0_14_237))))
 (= (+ (- (- ?x36993 ?x35703) ?x36995) ?x36997) 0.0)))))))))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x36997 (* ?x35534 l_0_14_88)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x36995 (* ?x35531 l_0_14_60)))
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x35795 (* ?x35528 l_0_14_44)))
 (let ((?x12295 (+ (* (* 2.0 l_0_14_1) l_0_14_16) (* (* 4.0 l_0_14_169) l_0_14_184))))
 (let ((?x37019 (- (- ?x12295 (* (* 2.0 l_0_14_200) l_0_14_212)) (* (* 2.0 l_0_14_201) l_0_14_213))))
 (let ((?x37023 (- (- ?x37019 (* (* 2.0 l_0_14_202) l_0_14_214)) (* (* 2.0 l_0_14_228) l_0_14_240))))
 (let ((?x37027 (- (- ?x37023 (* (* 2.0 l_0_14_229) l_0_14_241)) (* (* 2.0 l_0_14_230) l_0_14_242))))
 (= (- (+ (- ?x37027 ?x35795) ?x36995) ?x36997) 0.0))))))))))))
(assert
 (let ((?x35528 (* 2.0 l_0_14_29)))
 (let ((?x25858 (* ?x35528 l_0_14_50)))
 (let ((?x37067 (+ (* (* 2.0 l_0_14_1) l_0_14_22) (* (* 4.0 l_0_14_169) l_0_14_190))))
 (let ((?x37071 (- (- ?x37067 (* (* 2.0 l_0_14_200) l_0_14_218)) (* (* 2.0 l_0_14_201) l_0_14_219))))
 (let ((?x37075 (- (- ?x37071 (* (* 2.0 l_0_14_202) l_0_14_220)) (* (* 2.0 l_0_14_228) l_0_14_246))))
 (let ((?x37079 (- (- ?x37075 (* (* 2.0 l_0_14_229) l_0_14_247)) (* (* 2.0 l_0_14_230) l_0_14_248))))
 (= (- ?x37079 ?x25858) 0.0))))))))
(assert
 (let ((?x35822 (* l_0_14_31 l_0_14_31)))
 (let ((?x35820 (* l_0_14_30 l_0_14_30)))
 (let ((?x35818 (* l_0_14_3 l_0_14_3)))
 (let ((?x35811 (* l_0_14_2 l_0_14_2)))
 (let ((?x37112 (* l_0_14_171 l_0_14_171)))
 (let ((?x37113 (* 2.0 ?x37112)))
 (let ((?x37110 (* l_0_14_170 l_0_14_170)))
 (let ((?x37111 (* 2.0 ?x37110)))
 (= (- (- (+ (+ (+ ?x37111 ?x37113) ?x35811) ?x35818) ?x35820) ?x35822) 0.0))))))))))
(assert
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35865 (* ?x35864 l_0_14_33)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35862 (* ?x35861 l_0_14_32)))
 (let ((?x35858 (* 2.0 l_0_14_3)))
 (let ((?x35859 (* ?x35858 l_0_14_5)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x35856 (* ?x35855 l_0_14_4)))
 (let ((?x37126 (+ (* (* 4.0 l_0_14_170) l_0_14_172) (* (* 4.0 l_0_14_171) l_0_14_173))))
 (= (- (- (+ (+ ?x37126 ?x35856) ?x35859) ?x35862) ?x35865) 0.0)))))))))))
(assert
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35927 (* ?x35864 l_0_14_36)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35925 (* ?x35861 l_0_14_35)))
 (let ((?x35858 (* 2.0 l_0_14_3)))
 (let ((?x35923 (* ?x35858 l_0_14_8)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x35921 (* ?x35855 l_0_14_7)))
 (let ((?x37145 (+ (* (* 4.0 l_0_14_170) l_0_14_175) (* (* 4.0 l_0_14_171) l_0_14_176))))
 (= (- (- (+ (+ ?x37145 ?x35921) ?x35923) ?x35925) ?x35927) 0.0)))))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37182 (* ?x35833 l_0_14_89)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37180 (* ?x35830 l_0_14_88)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37178 (* ?x35827 l_0_14_61)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37176 (* ?x35824 l_0_14_60)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x35978 (* ?x35864 l_0_14_40)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x35976 (* ?x35861 l_0_14_39)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35853 (* ?x35852 l_0_14_145)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35851 (* ?x35850 l_0_14_144)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x35970 (* ?x35969 l_0_14_3)))
 (let ((?x37157 (- (* (* 2.0 l_0_14_11) l_0_14_2) (* (* 2.0 l_0_14_114) l_0_14_116))))
 (let ((?x37163 (- (- (+ (- ?x37157 (* (* 2.0 l_0_14_115) l_0_14_117)) ?x35970) ?x35851) ?x35853)))
 (let ((?x37168 (+ (- ?x37163 (* (* 2.0 l_0_14_170) l_0_14_172)) (* (* 4.0 l_0_14_170) l_0_14_179))))
 (let ((?x37173 (+ (- ?x37168 (* (* 2.0 l_0_14_171) l_0_14_173)) (* (* 4.0 l_0_14_171) l_0_14_180))))
 (= (+ (+ (- (- (- (- ?x37173 ?x35976) ?x35978) ?x37176) ?x37178) ?x37180) ?x37182) 0.0))))))))))))))))))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37182 (* ?x35833 l_0_14_89)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37180 (* ?x35830 l_0_14_88)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37178 (* ?x35827 l_0_14_61)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37176 (* ?x35824 l_0_14_60)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x36046 (* ?x35864 l_0_14_45)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x36044 (* ?x35861 l_0_14_44)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36042 (* ?x36041 l_0_14_3)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36039 (* ?x36038 l_0_14_2)))
 (let ((?x37201 (+ (+ (+ ?x36039 ?x36042) (* (* 4.0 l_0_14_170) l_0_14_184)) (* (* 4.0 l_0_14_171) l_0_14_185))))
 (= (- (- (+ (+ (- (- ?x37201 ?x36044) ?x36046) ?x37176) ?x37178) ?x37180) ?x37182) 0.0)))))))))))))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x36997 (* ?x35534 l_0_14_88)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x36995 (* ?x35531 l_0_14_60)))
 (let ((?x35864 (* 2.0 l_0_14_31)))
 (let ((?x36110 (* ?x35864 l_0_14_51)))
 (let ((?x35861 (* 2.0 l_0_14_30)))
 (let ((?x36108 (* ?x35861 l_0_14_50)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x36106 (* ?x35571 l_0_14_3)))
 (let ((?x35855 (* 2.0 l_0_14_2)))
 (let ((?x36104 (* ?x35855 l_0_14_22)))
 (let ((?x37225 (+ (* (* 4.0 l_0_14_170) l_0_14_190) (* (* 4.0 l_0_14_171) l_0_14_191))))
 (= (+ (- (- (- (+ (+ ?x37225 ?x36104) ?x36106) ?x36108) ?x36110) ?x36995) ?x36997) 0.0)))))))))))))))
(assert
 (let ((?x36165 (* l_0_14_6 l_0_14_6)))
 (let ((?x36163 (* l_0_14_5 l_0_14_5)))
 (let ((?x36161 (* l_0_14_4 l_0_14_4)))
 (let ((?x36159 (* l_0_14_34 l_0_14_34)))
 (let ((?x36157 (* l_0_14_33 l_0_14_33)))
 (let ((?x36155 (* l_0_14_32 l_0_14_32)))
 (let ((?x37246 (* l_0_14_174 l_0_14_174)))
 (let ((?x37247 (* 2.0 ?x37246)))
 (let ((?x37243 (* l_0_14_173 l_0_14_173)))
 (let ((?x37244 (* 2.0 ?x37243)))
 (let ((?x12830 (* l_0_14_172 l_0_14_172)))
 (let ((?x37242 (* 2.0 ?x12830)))
 (let ((?x37253 (+ (+ (- (- (- (+ (+ ?x37242 ?x37244) ?x37247) ?x36155) ?x36157) ?x36159) ?x36161) ?x36163)))
 (= (+ ?x37253 ?x36165) 0.0)))))))))))))))
(assert
 (let ((?x36200 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x36197 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x36194 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36191 (* ?x36190 l_0_14_37)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36188 (* ?x36187 l_0_14_36)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36185 (* ?x36184 l_0_14_35)))
 (let ((?x37265 (+ (* (* 4.0 l_0_14_172) l_0_14_175) (* (* 4.0 l_0_14_173) l_0_14_176))))
 (let ((?x37271 (- (- (- (+ ?x37265 (* (* 4.0 l_0_14_174) l_0_14_177)) ?x36185) ?x36188) ?x36191)))
 (= (+ (+ (+ ?x37271 ?x36194) ?x36197) ?x36200) 0.0)))))))))))))
(assert
 (let ((?x37302 (* l_0_14_90 l_0_14_90)))
 (let ((?x37300 (* l_0_14_89 l_0_14_89)))
 (let ((?x37298 (* l_0_14_88 l_0_14_88)))
 (let ((?x37296 (* l_0_14_62 l_0_14_62)))
 (let ((?x37294 (* l_0_14_61 l_0_14_61)))
 (let ((?x37292 (* l_0_14_60 l_0_14_60)))
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36249 (* ?x36190 l_0_14_41)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36247 (* ?x36187 l_0_14_40)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36245 (* ?x36184 l_0_14_39)))
 (let ((?x37246 (* l_0_14_174 l_0_14_174)))
 (let ((?x37243 (* l_0_14_173 l_0_14_173)))
 (let ((?x12830 (* l_0_14_172 l_0_14_172)))
 (let ((?x36153 (* l_0_14_146 l_0_14_146)))
 (let ((?x36151 (* l_0_14_145 l_0_14_145)))
 (let ((?x36150 (* l_0_14_144 l_0_14_144)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36237 (* ?x36236 l_0_14_6)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36234 (* ?x35969 l_0_14_5)))
 (let ((?x12739 (* l_0_14_118 l_0_14_118)))
 (let ((?x12720 (* l_0_14_117 l_0_14_117)))
 (let ((?x26408 (- (- (* (* 2.0 l_0_14_11) l_0_14_4) (* l_0_14_116 l_0_14_116)) ?x12720)))
 (let ((?x26411 (+ (- (- (- (+ (+ (- ?x26408 ?x12739) ?x36234) ?x36237) ?x36150) ?x36151) ?x36153) (* (* 4.0 l_0_14_172) l_0_14_179))))
 (let ((?x37287 (+ (- (+ (- ?x26411 ?x12830) (* (* 4.0 l_0_14_173) l_0_14_180)) ?x37243) (* (* 4.0 l_0_14_174) l_0_14_181))))
 (let ((?x37297 (- (- (- (- (- (- (- ?x37287 ?x37246) ?x36245) ?x36247) ?x36249) ?x37292) ?x37294) ?x37296)))
 (= (+ (+ (+ ?x37297 ?x37298) ?x37300) ?x37302) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x37302 (* l_0_14_90 l_0_14_90)))
 (let ((?x37300 (* l_0_14_89 l_0_14_89)))
 (let ((?x37298 (* l_0_14_88 l_0_14_88)))
 (let ((?x37296 (* l_0_14_62 l_0_14_62)))
 (let ((?x37294 (* l_0_14_61 l_0_14_61)))
 (let ((?x37292 (* l_0_14_60 l_0_14_60)))
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36269 (* ?x36190 l_0_14_46)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36267 (* ?x36187 l_0_14_45)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36265 (* ?x36184 l_0_14_44)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36263 (* ?x36262 l_0_14_6)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x11777 (* ?x36041 l_0_14_5)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x11783 (* ?x36038 l_0_14_4)))
 (let ((?x37333 (+ (+ (+ ?x11783 ?x11777) (* (* 4.0 l_0_14_172) l_0_14_184)) (* (* 4.0 l_0_14_173) l_0_14_185))))
 (let ((?x37338 (- (- (+ (+ ?x37333 (* (* 4.0 l_0_14_174) l_0_14_186)) ?x36263) ?x36265) ?x36267)))
 (let ((?x37345 (- (- (- (+ (+ (+ (- ?x37338 ?x36269) ?x37292) ?x37294) ?x37296) ?x37298) ?x37300) ?x37302)))
 (= ?x37345 0.0)))))))))))))))))))))))
(assert
 (let ((?x36190 (* 2.0 l_0_14_34)))
 (let ((?x36317 (* ?x36190 l_0_14_52)))
 (let ((?x36187 (* 2.0 l_0_14_33)))
 (let ((?x36315 (* ?x36187 l_0_14_51)))
 (let ((?x36184 (* 2.0 l_0_14_32)))
 (let ((?x36313 (* ?x36184 l_0_14_50)))
 (let ((?x35574 (* 2.0 l_0_14_24)))
 (let ((?x36311 (* ?x35574 l_0_14_6)))
 (let ((?x35571 (* 2.0 l_0_14_23)))
 (let ((?x36309 (* ?x35571 l_0_14_5)))
 (let ((?x35568 (* 2.0 l_0_14_22)))
 (let ((?x36307 (* ?x35568 l_0_14_4)))
 (let ((?x26488 (+ (* (* 4.0 l_0_14_172) l_0_14_190) (* (* 4.0 l_0_14_173) l_0_14_191))))
 (let ((?x26477 (+ (+ (+ (+ ?x26488 (* (* 4.0 l_0_14_174) l_0_14_192)) ?x36307) ?x36309) ?x36311)))
 (= (- (- (- ?x26477 ?x36313) ?x36315) ?x36317) 0.0))))))))))))))))
(assert
 (let ((?x36372 (* l_0_14_9 l_0_14_9)))
 (let ((?x36370 (* l_0_14_8 l_0_14_8)))
 (let ((?x36368 (* l_0_14_7 l_0_14_7)))
 (let ((?x36366 (* l_0_14_38 l_0_14_38)))
 (let ((?x36364 (* l_0_14_37 l_0_14_37)))
 (let ((?x36362 (* l_0_14_36 l_0_14_36)))
 (let ((?x36360 (* l_0_14_35 l_0_14_35)))
 (let ((?x37374 (* l_0_14_178 l_0_14_178)))
 (let ((?x37375 (* 2.0 ?x37374)))
 (let ((?x37371 (* l_0_14_177 l_0_14_177)))
 (let ((?x37372 (* 2.0 ?x37371)))
 (let ((?x37368 (* l_0_14_176 l_0_14_176)))
 (let ((?x37369 (* 2.0 ?x37368)))
 (let ((?x13243 (* l_0_14_175 l_0_14_175)))
 (let ((?x13249 (* 2.0 ?x13243)))
 (let ((?x36376 (* l_0_14_10 l_0_14_10)))
 (let ((?x37379 (- (- (- (+ (+ (+ (+ ?x36376 ?x13249) ?x37369) ?x37372) ?x37375) ?x36360) ?x36362) ?x36364)))
 (= (+ (+ (+ (- ?x37379 ?x36366) ?x36368) ?x36370) ?x36372) 0.0)))))))))))))))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x35883 (* ?x35882 l_0_14_93)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x35880 (* ?x35879 l_0_14_92)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x35877 (* ?x35876 l_0_14_91)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x35874 (* ?x35873 l_0_14_65)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x35871 (* ?x35870 l_0_14_64)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x35868 (* ?x35867 l_0_14_63)))
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x36409 (* ?x35588 l_0_14_42)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x36407 (* ?x35585 l_0_14_41)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x36405 (* ?x35582 l_0_14_40)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x36403 (* ?x35579 l_0_14_39)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36182 (* ?x36181 l_0_14_149)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36179 (* ?x36178 l_0_14_148)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x36177 (* ?x36176 l_0_14_147)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36393 (* ?x36236 l_0_14_9)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36391 (* ?x35969 l_0_14_8)))
 (let ((?x36388 (* 2.0 l_0_14_11)))
 (let ((?x36389 (* ?x36388 l_0_14_7)))
 (let ((?x37395 (- (+ (* (* 2.0 l_0_14_10) l_0_14_14) ?x36389) (* (* 2.0 l_0_14_116) l_0_14_119))))
 (let ((?x37401 (- (- ?x37395 (* (* 2.0 l_0_14_117) l_0_14_120)) (* (* 2.0 l_0_14_118) l_0_14_121))))
 (let ((?x37409 (- (- (- (- (+ (+ ?x37401 ?x36391) ?x36393) ?x36177) ?x36179) ?x36182) (* (* 2.0 l_0_14_172) l_0_14_175))))
 (let ((?x37415 (- (- ?x37409 (* (* 2.0 l_0_14_173) l_0_14_176)) (* (* 2.0 l_0_14_174) l_0_14_177))))
 (let ((?x37419 (+ (+ ?x37415 (* (* 4.0 l_0_14_175) l_0_14_179)) (* (* 4.0 l_0_14_176) l_0_14_180))))
 (let ((?x37423 (+ (+ ?x37419 (* (* 4.0 l_0_14_177) l_0_14_181)) (* (* 4.0 l_0_14_178) l_0_14_182))))
 (let ((?x37430 (- (- (- (- (- (- (- ?x37423 ?x36403) ?x36405) ?x36407) ?x36409) ?x35868) ?x35871) ?x35874)))
 (= (+ (+ (+ ?x37430 ?x35877) ?x35880) ?x35883) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x35883 (* ?x35882 l_0_14_93)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x35880 (* ?x35879 l_0_14_92)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x35877 (* ?x35876 l_0_14_91)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x35874 (* ?x35873 l_0_14_65)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x35871 (* ?x35870 l_0_14_64)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x35868 (* ?x35867 l_0_14_63)))
 (let ((?x35588 (* 2.0 l_0_14_38)))
 (let ((?x36460 (* ?x35588 l_0_14_47)))
 (let ((?x35585 (* 2.0 l_0_14_37)))
 (let ((?x36458 (* ?x35585 l_0_14_46)))
 (let ((?x35582 (* 2.0 l_0_14_36)))
 (let ((?x36456 (* ?x35582 l_0_14_45)))
 (let ((?x35579 (* 2.0 l_0_14_35)))
 (let ((?x36454 (* ?x35579 l_0_14_44)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36452 (* ?x36262 l_0_14_9)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36450 (* ?x36041 l_0_14_8)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36448 (* ?x36038 l_0_14_7)))
 (let ((?x13516 (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_19) ?x36448) ?x36450) (* (* 4.0 l_0_14_175) l_0_14_184))))
 (let ((?x13272 (+ (+ ?x13516 (* (* 4.0 l_0_14_176) l_0_14_185)) (* (* 4.0 l_0_14_177) l_0_14_186))))
 (let ((?x25755 (- (- (+ (+ ?x13272 (* (* 4.0 l_0_14_178) l_0_14_187)) ?x36452) ?x36454) ?x36456)))
 (let ((?x37461 (- (- (+ (+ (+ (- (- ?x25755 ?x36458) ?x36460) ?x35868) ?x35871) ?x35874) ?x35877) ?x35880)))
 (= (- ?x37461 ?x35883) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x37540 (* ?x35882 l_0_14_97)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x37538 (* ?x35879 l_0_14_96)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x37536 (* ?x35876 l_0_14_95)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37534 (* ?x35873 l_0_14_69)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37532 (* ?x35870 l_0_14_68)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37530 (* ?x35867 l_0_14_67)))
 (let ((?x36531 (* l_0_14_43 l_0_14_43)))
 (let ((?x36529 (* l_0_14_42 l_0_14_42)))
 (let ((?x36527 (* l_0_14_41 l_0_14_41)))
 (let ((?x36525 (* l_0_14_40 l_0_14_40)))
 (let ((?x36523 (* l_0_14_39 l_0_14_39)))
 (let ((?x26045 (* l_0_14_15 l_0_14_15)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36243 (* ?x36181 l_0_14_153)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36241 (* ?x36178 l_0_14_152)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x36239 (* ?x36176 l_0_14_151)))
 (let ((?x11850 (* l_0_14_14 l_0_14_14)))
 (let ((?x11848 (* l_0_14_13 l_0_14_13)))
 (let ((?x26037 (* l_0_14_12 l_0_14_12)))
 (let ((?x36535 (* l_0_14_11 l_0_14_11)))
 (let ((?x37494 (- (- ?x36535 (* (* 2.0 l_0_14_116) l_0_14_123)) (* (* 2.0 l_0_14_117) l_0_14_124))))
 (let ((?x37499 (+ (+ (+ (- ?x37494 (* (* 2.0 l_0_14_118) l_0_14_125)) ?x26037) ?x11848) ?x11850)))
 (let ((?x37505 (- (+ (- (- (- ?x37499 ?x36239) ?x36241) ?x36243) ?x26045) (* (* 2.0 l_0_14_172) l_0_14_179))))
 (let ((?x37509 (- (- ?x37505 (* (* 2.0 l_0_14_173) l_0_14_180)) (* (* 2.0 l_0_14_174) l_0_14_181))))
 (let ((?x37515 (+ (+ ?x37509 (* 2.0 (* l_0_14_179 l_0_14_179))) (* 2.0 (* l_0_14_180 l_0_14_180)))))
 (let ((?x37521 (+ (+ ?x37515 (* 2.0 (* l_0_14_181 l_0_14_181))) (* 2.0 (* l_0_14_182 l_0_14_182)))))
 (let ((?x37527 (- (- (- (+ ?x37521 (* 2.0 (* l_0_14_183 l_0_14_183))) ?x36523) ?x36525) ?x36527)))
 (let ((?x37539 (+ (+ (- (- (- (- (- ?x37527 ?x36529) ?x36531) ?x37530) ?x37532) ?x37534) ?x37536) ?x37538)))
 (= (+ ?x37539 ?x37540) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x37540 (* ?x35882 l_0_14_97)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x37538 (* ?x35879 l_0_14_96)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x37536 (* ?x35876 l_0_14_95)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37586 (* ?x35873 l_0_14_74)))
 (let ((?x37534 (* ?x35873 l_0_14_69)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37583 (* ?x35870 l_0_14_73)))
 (let ((?x37532 (* ?x35870 l_0_14_68)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37580 (* ?x35867 l_0_14_72)))
 (let ((?x37530 (* ?x35867 l_0_14_67)))
 (let ((?x36594 (* 2.0 l_0_14_43)))
 (let ((?x36595 (* ?x36594 l_0_14_48)))
 (let ((?x36591 (* 2.0 l_0_14_42)))
 (let ((?x36592 (* ?x36591 l_0_14_47)))
 (let ((?x36588 (* 2.0 l_0_14_41)))
 (let ((?x36589 (* ?x36588 l_0_14_46)))
 (let ((?x36585 (* 2.0 l_0_14_40)))
 (let ((?x36586 (* ?x36585 l_0_14_45)))
 (let ((?x36582 (* 2.0 l_0_14_39)))
 (let ((?x36583 (* ?x36582 l_0_14_44)))
 (let ((?x36564 (* 2.0 l_0_14_15)))
 (let ((?x36565 (* ?x36564 l_0_14_20)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x25997 (* ?x36181 l_0_14_158)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x11691 (* ?x36178 l_0_14_157)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x11761 (* ?x36176 l_0_14_156)))
 (let ((?x36561 (* 2.0 l_0_14_14)))
 (let ((?x36562 (* ?x36561 l_0_14_19)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36559 (* ?x36236 l_0_14_18)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36557 (* ?x35969 l_0_14_17)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x26651 (* ?x36028 l_0_14_90)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x13630 (* ?x11663 l_0_14_89)))
 (let ((?x26659 (+ (+ (* (* 2.0 l_0_14_100) l_0_14_88) ?x13630) ?x26651)))
 (let ((?x13511 (- (+ ?x26659 (* (* 2.0 l_0_14_11) l_0_14_16)) (* (* 2.0 l_0_14_116) l_0_14_128))))
 (let ((?x13554 (- (- ?x13511 (* (* 2.0 l_0_14_117) l_0_14_129)) (* (* 2.0 l_0_14_118) l_0_14_130))))
 (let ((?x13628 (+ (- (- (- (+ (+ (+ ?x13554 ?x36557) ?x36559) ?x36562) ?x11761) ?x11691) ?x25997) ?x36565)))
 (let ((?x37556 (- (- ?x13628 (* (* 2.0 l_0_14_172) l_0_14_184)) (* (* 2.0 l_0_14_173) l_0_14_185))))
 (let ((?x37561 (+ (- ?x37556 (* (* 2.0 l_0_14_174) l_0_14_186)) (* (* 4.0 l_0_14_179) l_0_14_184))))
 (let ((?x37567 (+ (+ ?x37561 (* (* 4.0 l_0_14_180) l_0_14_185)) (* (* 4.0 l_0_14_181) l_0_14_186))))
 (let ((?x37573 (+ (+ ?x37567 (* (* 4.0 l_0_14_182) l_0_14_187)) (* (* 4.0 l_0_14_183) l_0_14_188))))
 (let ((?x37581 (- (+ (- (- (- (- (- ?x37573 ?x36583) ?x36586) ?x36589) ?x36592) ?x36595) ?x37530) ?x37580)))
 (let ((?x37590 (- (- (- (- (+ (- (+ ?x37581 ?x37532) ?x37583) ?x37534) ?x37586) ?x37536) ?x37538) ?x37540)))
 (= ?x37590 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37694 (* ?x35873 l_0_14_80)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37692 (* ?x35870 l_0_14_79)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37690 (* ?x35867 l_0_14_78)))
 (let ((?x36594 (* 2.0 l_0_14_43)))
 (let ((?x36662 (* ?x36594 l_0_14_54)))
 (let ((?x36591 (* 2.0 l_0_14_42)))
 (let ((?x36660 (* ?x36591 l_0_14_53)))
 (let ((?x36588 (* 2.0 l_0_14_41)))
 (let ((?x36658 (* ?x36588 l_0_14_52)))
 (let ((?x36585 (* 2.0 l_0_14_40)))
 (let ((?x36656 (* ?x36585 l_0_14_51)))
 (let ((?x36582 (* 2.0 l_0_14_39)))
 (let ((?x36654 (* ?x36582 l_0_14_50)))
 (let ((?x36564 (* 2.0 l_0_14_15)))
 (let ((?x36627 (* ?x36564 l_0_14_26)))
 (let ((?x36181 (* 2.0 l_0_14_146)))
 (let ((?x36297 (* ?x36181 l_0_14_164)))
 (let ((?x36178 (* 2.0 l_0_14_145)))
 (let ((?x36294 (* ?x36178 l_0_14_163)))
 (let ((?x36176 (* 2.0 l_0_14_144)))
 (let ((?x26032 (* ?x36176 l_0_14_162)))
 (let ((?x36561 (* 2.0 l_0_14_14)))
 (let ((?x36623 (* ?x36561 l_0_14_25)))
 (let ((?x36236 (* 2.0 l_0_14_13)))
 (let ((?x36619 (* ?x36236 l_0_14_24)))
 (let ((?x35969 (* 2.0 l_0_14_12)))
 (let ((?x36615 (* ?x35969 l_0_14_23)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x37652 (* ?x35659 l_0_14_90)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37650 (* ?x35656 l_0_14_89)))
 (let ((?x37653 (+ (+ (* (* 2.0 l_0_14_106) l_0_14_88) ?x37650) ?x37652)))
 (let ((?x37657 (- (+ ?x37653 (* (* 2.0 l_0_14_11) l_0_14_22)) (* (* 2.0 l_0_14_116) l_0_14_134))))
 (let ((?x37661 (- (- ?x37657 (* (* 2.0 l_0_14_117) l_0_14_135)) (* (* 2.0 l_0_14_118) l_0_14_136))))
 (let ((?x37668 (+ (- (- (- (+ (+ (+ ?x37661 ?x36615) ?x36619) ?x36623) ?x26032) ?x36294) ?x36297) ?x36627)))
 (let ((?x37672 (- (- ?x37668 (* (* 2.0 l_0_14_172) l_0_14_190)) (* (* 2.0 l_0_14_173) l_0_14_191))))
 (let ((?x37676 (+ (- ?x37672 (* (* 2.0 l_0_14_174) l_0_14_192)) (* (* 4.0 l_0_14_179) l_0_14_190))))
 (let ((?x37680 (+ (+ ?x37676 (* (* 4.0 l_0_14_180) l_0_14_191)) (* (* 4.0 l_0_14_181) l_0_14_192))))
 (let ((?x37684 (+ (+ ?x37680 (* (* 4.0 l_0_14_182) l_0_14_193)) (* (* 4.0 l_0_14_183) l_0_14_194))))
 (let ((?x37693 (- (- (- (- (- (- (- ?x37684 ?x36654) ?x36656) ?x36658) ?x36660) ?x36662) ?x37690) ?x37692)))
 (= (- ?x37693 ?x37694) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37586 (* ?x35873 l_0_14_74)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37583 (* ?x35870 l_0_14_73)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37580 (* ?x35867 l_0_14_72)))
 (let ((?x36706 (* l_0_14_49 l_0_14_49)))
 (let ((?x36704 (* l_0_14_48 l_0_14_48)))
 (let ((?x36702 (* l_0_14_47 l_0_14_47)))
 (let ((?x36700 (* l_0_14_46 l_0_14_46)))
 (let ((?x36698 (* l_0_14_45 l_0_14_45)))
 (let ((?x36696 (* l_0_14_44 l_0_14_44)))
 (let ((?x36694 (* l_0_14_21 l_0_14_21)))
 (let ((?x36692 (* l_0_14_20 l_0_14_20)))
 (let ((?x36690 (* l_0_14_19 l_0_14_19)))
 (let ((?x36688 (* l_0_14_18 l_0_14_18)))
 (let ((?x36686 (* l_0_14_17 l_0_14_17)))
 (let ((?x36680 (* l_0_14_16 l_0_14_16)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x26651 (* ?x36028 l_0_14_90)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x13630 (* ?x11663 l_0_14_89)))
 (let ((?x26882 (+ (+ (- (- (* (* (- 2.0) l_0_14_100) l_0_14_88) ?x13630) ?x26651) ?x36680) ?x36686)))
 (let ((?x37742 (+ (+ (+ ?x26882 ?x36688) (* 2.0 (* l_0_14_184 l_0_14_184))) (* 2.0 (* l_0_14_185 l_0_14_185)))))
 (let ((?x37748 (+ (+ ?x37742 (* 2.0 (* l_0_14_186 l_0_14_186))) (* 2.0 (* l_0_14_187 l_0_14_187)))))
 (let ((?x37754 (+ (+ ?x37748 (* 2.0 (* l_0_14_188 l_0_14_188))) (* 2.0 (* l_0_14_189 l_0_14_189)))))
 (let ((?x37761 (- (- (- (- (+ (+ (+ ?x37754 ?x36690) ?x36692) ?x36694) ?x36696) ?x36698) ?x36700) ?x36702)))
 (= (+ (+ (+ (- (- ?x37761 ?x36704) ?x36706) ?x37580) ?x37583) ?x37586) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37694 (* ?x35873 l_0_14_80)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37692 (* ?x35870 l_0_14_79)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37690 (* ?x35867 l_0_14_78)))
 (let ((?x36771 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x36768 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x36765 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x36762 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x36759 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x36756 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x36753 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x36750 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x36747 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x36262 (* 2.0 l_0_14_18)))
 (let ((?x36744 (* ?x36262 l_0_14_24)))
 (let ((?x36041 (* 2.0 l_0_14_17)))
 (let ((?x36742 (* ?x36041 l_0_14_23)))
 (let ((?x36038 (* 2.0 l_0_14_16)))
 (let ((?x36734 (* ?x36038 l_0_14_22)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x37652 (* ?x35659 l_0_14_90)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37650 (* ?x35656 l_0_14_89)))
 (let ((?x26943 (+ (+ (- (- (* (* (- 2.0) l_0_14_106) l_0_14_88) ?x37650) ?x37652) ?x36734) ?x36742)))
 (let ((?x13932 (+ (+ (+ ?x26943 ?x36744) (* (* 4.0 l_0_14_184) l_0_14_190)) (* (* 4.0 l_0_14_185) l_0_14_191))))
 (let ((?x37771 (+ (+ ?x13932 (* (* 4.0 l_0_14_186) l_0_14_192)) (* (* 4.0 l_0_14_187) l_0_14_193))))
 (let ((?x37777 (+ (+ ?x37771 (* (* 4.0 l_0_14_188) l_0_14_194)) (* (* 4.0 l_0_14_189) l_0_14_195))))
 (let ((?x37784 (- (- (- (- (+ (+ (+ ?x37777 ?x36747) ?x36750) ?x36753) ?x36756) ?x36759) ?x36762) ?x36765)))
 (= (+ (+ (+ (- (- ?x37784 ?x36768) ?x36771) ?x37690) ?x37692) ?x37694) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x36855 (* l_0_14_56 l_0_14_56)))
 (let ((?x36853 (* l_0_14_55 l_0_14_55)))
 (let ((?x36851 (* l_0_14_54 l_0_14_54)))
 (let ((?x36849 (* l_0_14_53 l_0_14_53)))
 (let ((?x36847 (* l_0_14_52 l_0_14_52)))
 (let ((?x36845 (* l_0_14_51 l_0_14_51)))
 (let ((?x36843 (* l_0_14_50 l_0_14_50)))
 (let ((?x36841 (* l_0_14_28 l_0_14_28)))
 (let ((?x36839 (* l_0_14_27 l_0_14_27)))
 (let ((?x36837 (* l_0_14_26 l_0_14_26)))
 (let ((?x36835 (* l_0_14_25 l_0_14_25)))
 (let ((?x36833 (* l_0_14_24 l_0_14_24)))
 (let ((?x36831 (* l_0_14_23 l_0_14_23)))
 (let ((?x36829 (* l_0_14_22 l_0_14_22)))
 (let ((?x14059 (* l_0_14_196 l_0_14_196)))
 (let ((?x14056 (* 2.0 ?x14059)))
 (let ((?x14055 (* l_0_14_195 l_0_14_195)))
 (let ((?x14058 (* 2.0 ?x14055)))
 (let ((?x14041 (* l_0_14_194 l_0_14_194)))
 (let ((?x14044 (* 2.0 ?x14041)))
 (let ((?x27018 (* l_0_14_193 l_0_14_193)))
 (let ((?x14035 (* 2.0 ?x27018)))
 (let ((?x27119 (* l_0_14_192 l_0_14_192)))
 (let ((?x13998 (* 2.0 ?x27119)))
 (let ((?x14043 (* l_0_14_191 l_0_14_191)))
 (let ((?x14049 (* 2.0 ?x14043)))
 (let ((?x27130 (* l_0_14_190 l_0_14_190)))
 (let ((?x14126 (* 2.0 ?x27130)))
 (let ((?x14052 (+ (+ (+ (+ (+ (+ (+ ?x14126 ?x14049) ?x13998) ?x14035) ?x14044) ?x14058) ?x14056) ?x36829)))
 (let ((?x37806 (- (+ (+ (+ (+ (+ (+ ?x14052 ?x36831) ?x36833) ?x36835) ?x36837) ?x36839) ?x36841) ?x36843)))
 (= (- (- (- (- (- (- ?x37806 ?x36845) ?x36847) ?x36849) ?x36851) ?x36853) ?x36855) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x37816 (* l_0_14_85 l_0_14_85)))
 (let ((?x37814 (* l_0_14_57 l_0_14_57)))
 (let ((?x14137 (- (* (* (- 2.0) l_0_14_198) l_0_14_218) (* (* 2.0 l_0_14_199) l_0_14_219))))
 (let ((?x14127 (- (- ?x14137 (* (* 2.0 l_0_14_226) l_0_14_246)) (* (* 2.0 l_0_14_227) l_0_14_247))))
 (= (+ (- ?x14127 ?x37814) ?x37816) 0.0))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37836 (* ?x35534 l_0_14_86)))
 (= (+ (* (* (- 2.0) l_0_14_57) l_0_14_58) ?x37836) 0.0))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37864 (* ?x35534 l_0_14_95)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37862 (* ?x35827 l_0_14_79)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37860 (* ?x35824 l_0_14_78)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x37858 (* ?x35531 l_0_14_67)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x36102 (* ?x35852 l_0_14_163)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x36100 (* ?x35850 l_0_14_162)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37842 (* ?x35656 l_0_14_87)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x37840 (* ?x35647 l_0_14_86)))
 (let ((?x37843 (+ ?x37840 ?x37842)))
 (let ((?x37851 (- (- ?x37843 (* (* 2.0 l_0_14_114) l_0_14_134)) (* (* 2.0 l_0_14_115) l_0_14_135))))
 (let ((?x37857 (- (- (- (- ?x37851 ?x36100) ?x36102) (* (* 2.0 l_0_14_170) l_0_14_190)) (* (* 2.0 l_0_14_171) l_0_14_191))))
 (= (+ (- (- (- ?x37857 ?x37858) ?x37860) ?x37862) ?x37864) 0.0)))))))))))))))))))))
(assert
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37862 (* ?x35827 l_0_14_79)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37860 (* ?x35824 l_0_14_78)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27220 (* ?x35531 l_0_14_72)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37842 (* ?x35656 l_0_14_87)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x37840 (* ?x35647 l_0_14_86)))
 (let ((?x25927 (* 2.0 l_0_14_100)))
 (let ((?x14285 (* ?x25927 l_0_14_85)))
 (= (+ (+ (- (- (- ?x14285 ?x37840) ?x37842) ?x27220) ?x37860) ?x37862) 0.0))))))))))))))
(assert
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27309 (* ?x35531 l_0_14_78)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x14334 (* ?x35647 l_0_14_85)))
 (= (- ?x14334 ?x27309) 0.0))))))
(assert
 (let ((?x37903 (* l_0_14_87 l_0_14_87)))
 (let ((?x37901 (* l_0_14_86 l_0_14_86)))
 (let ((?x37902 (+ (- (* (- l_0_14_58) l_0_14_58) (* l_0_14_59 l_0_14_59)) ?x37901)))
 (= (+ ?x37902 ?x37903) 0.0)))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37182 (* ?x35833 l_0_14_89)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37180 (* ?x35830 l_0_14_88)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37178 (* ?x35827 l_0_14_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_58) l_0_14_60) ?x37178) ?x37180) ?x37182) 0.0))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37931 (* ?x35833 l_0_14_96)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37929 (* ?x35830 l_0_14_95)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37927 (* ?x35827 l_0_14_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_58) l_0_14_67) ?x37927) ?x37929) ?x37931) 0.0))))))))
(assert
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37949 (* ?x35827 l_0_14_73)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37947 (* ?x35824 l_0_14_72)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x37945 (* ?x11663 l_0_14_87)))
 (let ((?x37946 (+ (* (* 2.0 l_0_14_100) l_0_14_86) ?x37945)))
 (= (- (- ?x37946 ?x37947) ?x37949) 0.0)))))))))
(assert
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37862 (* ?x35827 l_0_14_79)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37860 (* ?x35824 l_0_14_78)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37842 (* ?x35656 l_0_14_87)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x37840 (* ?x35647 l_0_14_86)))
 (let ((?x37843 (+ ?x37840 ?x37842)))
 (= (- (- ?x37843 ?x37860) ?x37862) 0.0)))))))))))
(assert
 (let ((?x37302 (* l_0_14_90 l_0_14_90)))
 (let ((?x37300 (* l_0_14_89 l_0_14_89)))
 (let ((?x37298 (* l_0_14_88 l_0_14_88)))
 (let ((?x37296 (* l_0_14_62 l_0_14_62)))
 (let ((?x37974 (- (- (* (- l_0_14_60) l_0_14_60) (* l_0_14_61 l_0_14_61)) ?x37296)))
 (= (+ (+ (+ ?x37974 ?x37298) ?x37300) ?x37302) 0.0)))))))
(assert
 (let ((?x35882 (* 2.0 l_0_14_90)))
 (let ((?x37540 (* ?x35882 l_0_14_97)))
 (let ((?x35879 (* 2.0 l_0_14_89)))
 (let ((?x37538 (* ?x35879 l_0_14_96)))
 (let ((?x35876 (* 2.0 l_0_14_88)))
 (let ((?x37536 (* ?x35876 l_0_14_95)))
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37534 (* ?x35873 l_0_14_69)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37532 (* ?x35870 l_0_14_68)))
 (let ((?x37990 (+ (+ (- (- (* (* (- 2.0) l_0_14_60) l_0_14_67) ?x37532) ?x37534) ?x37536) ?x37538)))
 (= (+ ?x37990 ?x37540) 0.0)))))))))))))
(assert
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37586 (* ?x35873 l_0_14_74)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37583 (* ?x35870 l_0_14_73)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37580 (* ?x35867 l_0_14_72)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x26651 (* ?x36028 l_0_14_90)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x13630 (* ?x11663 l_0_14_89)))
 (let ((?x26659 (+ (+ (* (* 2.0 l_0_14_100) l_0_14_88) ?x13630) ?x26651)))
 (= (- (- (- ?x26659 ?x37580) ?x37583) ?x37586) 0.0)))))))))))))
(assert
 (let ((?x35873 (* 2.0 l_0_14_62)))
 (let ((?x37694 (* ?x35873 l_0_14_80)))
 (let ((?x35870 (* 2.0 l_0_14_61)))
 (let ((?x37692 (* ?x35870 l_0_14_79)))
 (let ((?x35867 (* 2.0 l_0_14_60)))
 (let ((?x37690 (* ?x35867 l_0_14_78)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x37652 (* ?x35659 l_0_14_90)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x37650 (* ?x35656 l_0_14_89)))
 (let ((?x37653 (+ (+ (* (* 2.0 l_0_14_106) l_0_14_88) ?x37650) ?x37652)))
 (= (- (- (- ?x37653 ?x37690) ?x37692) ?x37694) 0.0)))))))))))))
(assert
 (let ((?x38041 (* l_0_14_99 l_0_14_99)))
 (let ((?x38039 (* l_0_14_98 l_0_14_98)))
 (let ((?x38037 (* l_0_14_97 l_0_14_97)))
 (let ((?x38035 (* l_0_14_96 l_0_14_96)))
 (let ((?x38033 (* l_0_14_95 l_0_14_95)))
 (let ((?x38031 (* l_0_14_71 l_0_14_71)))
 (let ((?x38029 (* l_0_14_70 l_0_14_70)))
 (let ((?x38027 (* l_0_14_69 l_0_14_69)))
 (let ((?x38028 (- (- (* (- l_0_14_67) l_0_14_67) (* l_0_14_68 l_0_14_68)) ?x38027)))
 (let ((?x38042 (+ (+ (+ (+ (+ (- (- ?x38028 ?x38029) ?x38031) ?x38033) ?x38035) ?x38037) ?x38039) ?x38041)))
 (= ?x38042 0.0))))))))))))
(assert
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38081 (* ?x38080 l_0_14_76)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38078 (* ?x38077 l_0_14_75)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38075 (* ?x38074 l_0_14_74)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38072 (* ?x38071 l_0_14_73)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38069 (* ?x38068 l_0_14_72)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38066 (* ?x38065 l_0_14_99)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38063 (* ?x36031 l_0_14_98)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38061 (* ?x36028 l_0_14_97)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38059 (* ?x11663 l_0_14_96)))
 (let ((?x38067 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_95) ?x38059) ?x38061) ?x38063) ?x38066)))
 (= (- (- (- (- (- ?x38067 ?x38069) ?x38072) ?x38075) ?x38078) ?x38081) 0.0)))))))))))))))))))))
(assert
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38134 (* ?x38080 l_0_14_82)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38132 (* ?x38077 l_0_14_81)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38130 (* ?x38074 l_0_14_80)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38128 (* ?x38071 l_0_14_79)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38126 (* ?x38068 l_0_14_78)))
 (let ((?x38124 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x38121 (* ?x35662 l_0_14_98)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x38119 (* ?x35659 l_0_14_97)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x38117 (* ?x35656 l_0_14_96)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x38116 (* ?x35647 l_0_14_95)))
 (let ((?x38125 (+ (+ (+ (+ ?x38116 ?x38117) ?x38119) ?x38121) ?x38124)))
 (= (- (- (- (- (- ?x38125 ?x38126) ?x38128) ?x38130) ?x38132) ?x38134) 0.0))))))))))))))))))))))
(assert
 (let ((?x38177 (* l_0_14_77 l_0_14_77)))
 (let ((?x38175 (* l_0_14_76 l_0_14_76)))
 (let ((?x38173 (* l_0_14_75 l_0_14_75)))
 (let ((?x38171 (* l_0_14_74 l_0_14_74)))
 (let ((?x38169 (* l_0_14_73 l_0_14_73)))
 (let ((?x38167 (* l_0_14_72 l_0_14_72)))
 (let ((?x38165 (* l_0_14_105 l_0_14_105)))
 (let ((?x38163 (* l_0_14_104 l_0_14_104)))
 (let ((?x38161 (* l_0_14_103 l_0_14_103)))
 (let ((?x38159 (* l_0_14_102 l_0_14_102)))
 (let ((?x38160 (+ (+ (* l_0_14_100 l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x38159)))
 (let ((?x38174 (- (- (- (- (+ (+ (+ ?x38160 ?x38161) ?x38163) ?x38165) ?x38167) ?x38169) ?x38171) ?x38173)))
 (= (- (- ?x38174 ?x38175) ?x38177) 0.0))))))))))))))
(assert
 (let ((?x38219 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x38216 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x38213 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x38210 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x38207 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x38204 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x38201 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38198 (* ?x38065 l_0_14_110)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38196 (* ?x36031 l_0_14_109)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38194 (* ?x36028 l_0_14_108)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38192 (* ?x11663 l_0_14_107)))
 (let ((?x38199 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_106) ?x38192) ?x38194) ?x38196) ?x38198)))
 (let ((?x38202 (+ ?x38199 ?x38201)))
 (= (- (- (- (- (- (- ?x38202 ?x38204) ?x38207) ?x38210) ?x38213) ?x38216) ?x38219) 0.0)))))))))))))))))))
(assert
 (let ((?x38274 (* l_0_14_84 l_0_14_84)))
 (let ((?x38272 (* l_0_14_83 l_0_14_83)))
 (let ((?x38270 (* l_0_14_82 l_0_14_82)))
 (let ((?x38268 (* l_0_14_81 l_0_14_81)))
 (let ((?x38266 (* l_0_14_80 l_0_14_80)))
 (let ((?x38264 (* l_0_14_79 l_0_14_79)))
 (let ((?x38262 (* l_0_14_78 l_0_14_78)))
 (let ((?x38260 (* l_0_14_112 l_0_14_112)))
 (let ((?x38258 (* l_0_14_111 l_0_14_111)))
 (let ((?x38256 (* l_0_14_110 l_0_14_110)))
 (let ((?x38254 (* l_0_14_109 l_0_14_109)))
 (let ((?x38252 (* l_0_14_108 l_0_14_108)))
 (let ((?x38253 (+ (+ (* l_0_14_106 l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38252)))
 (let ((?x38261 (+ (+ (+ (+ ?x38253 ?x38254) ?x38256) ?x38258) ?x38260)))
 (let ((?x38275 (- (- (- (- (- (- (- ?x38261 ?x38262) ?x38264) ?x38266) ?x38268) ?x38270) ?x38272) ?x38274)))
 (= ?x38275 0.0)))))))))))))))))
(assert
 (let ((?x37816 (* l_0_14_85 l_0_14_85)))
 (let ((?x37814 (* l_0_14_57 l_0_14_57)))
 (let ((?x35442 (* l_0_14_169 l_0_14_169)))
 (let ((?x38293 (- (- (* (- l_0_14_113) l_0_14_113) (* l_0_14_141 l_0_14_141)) ?x35442)))
 (let ((?x38297 (- (- ?x38293 (* (* 2.0 l_0_14_197) l_0_14_207)) (* (* 2.0 l_0_14_225) l_0_14_235))))
 (= (+ (- ?x38297 ?x37814) ?x37816) 0.0)))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37836 (* ?x35534 l_0_14_86)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x38316 (* ?x35531 l_0_14_58)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35526 (* ?x35525 l_0_14_142)))
 (let ((?x14655 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_114) ?x35526) (* (* 2.0 l_0_14_169) l_0_14_170))))
 (let ((?x38311 (- (- ?x14655 (* (* 2.0 l_0_14_198) l_0_14_207)) (* (* 2.0 l_0_14_199) l_0_14_208))))
 (let ((?x38315 (- (- ?x38311 (* (* 2.0 l_0_14_226) l_0_14_235)) (* (* 2.0 l_0_14_227) l_0_14_236))))
 (= (+ (- ?x38315 ?x38316) ?x37836) 0.0)))))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x35535 (* ?x35534 l_0_14_91)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x35532 (* ?x35531 l_0_14_63)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35639 (* ?x35525 l_0_14_147)))
 (let ((?x38334 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_119) ?x35639) (* (* 2.0 l_0_14_169) l_0_14_175))))
 (let ((?x38338 (- (- ?x38334 (* (* 2.0 l_0_14_203) l_0_14_207)) (* (* 2.0 l_0_14_204) l_0_14_208))))
 (let ((?x38342 (- (- ?x38338 (* (* 2.0 l_0_14_205) l_0_14_209)) (* (* 2.0 l_0_14_206) l_0_14_210))))
 (let ((?x38346 (- (- ?x38342 (* (* 2.0 l_0_14_231) l_0_14_235)) (* (* 2.0 l_0_14_232) l_0_14_236))))
 (let ((?x38350 (- (- ?x38346 (* (* 2.0 l_0_14_233) l_0_14_237)) (* (* 2.0 l_0_14_234) l_0_14_238))))
 (= (+ (- ?x38350 ?x35532) ?x35535) 0.0)))))))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37864 (* ?x35534 l_0_14_95)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x37858 (* ?x35531 l_0_14_67)))
 (let ((?x38379 (* l_0_14_239 l_0_14_239)))
 (let ((?x38377 (* l_0_14_238 l_0_14_238)))
 (let ((?x38375 (* l_0_14_237 l_0_14_237)))
 (let ((?x38373 (* l_0_14_236 l_0_14_236)))
 (let ((?x38371 (* l_0_14_235 l_0_14_235)))
 (let ((?x38369 (* l_0_14_211 l_0_14_211)))
 (let ((?x38367 (* l_0_14_210 l_0_14_210)))
 (let ((?x38365 (* l_0_14_209 l_0_14_209)))
 (let ((?x38363 (* l_0_14_208 l_0_14_208)))
 (let ((?x38361 (* l_0_14_207 l_0_14_207)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35677 (* ?x35525 l_0_14_151)))
 (let ((?x28008 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_123) ?x35677) (* (* 2.0 l_0_14_169) l_0_14_179))))
 (let ((?x38374 (- (- (- (- (- (- (- ?x28008 ?x38361) ?x38363) ?x38365) ?x38367) ?x38369) ?x38371) ?x38373)))
 (= (+ (- (- (- (- ?x38374 ?x38375) ?x38377) ?x38379) ?x37858) ?x37864) 0.0))))))))))))))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37864 (* ?x35534 l_0_14_95)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27220 (* ?x35531 l_0_14_72)))
 (let ((?x37858 (* ?x35531 l_0_14_67)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x35793 (* ?x35525 l_0_14_156)))
 (let ((?x25927 (* 2.0 l_0_14_100)))
 (let ((?x14285 (* ?x25927 l_0_14_85)))
 (let ((?x14876 (- (- (- ?x14285 (* (* 2.0 l_0_14_113) l_0_14_128)) ?x35793) (* (* 2.0 l_0_14_169) l_0_14_184))))
 (let ((?x38404 (- (- ?x14876 (* (* 2.0 l_0_14_207) l_0_14_212)) (* (* 2.0 l_0_14_208) l_0_14_213))))
 (let ((?x38410 (- (- ?x38404 (* (* 2.0 l_0_14_209) l_0_14_214)) (* (* 2.0 l_0_14_210) l_0_14_215))))
 (let ((?x38416 (- (- ?x38410 (* (* 2.0 l_0_14_211) l_0_14_216)) (* (* 2.0 l_0_14_235) l_0_14_240))))
 (let ((?x38422 (- (- ?x38416 (* (* 2.0 l_0_14_236) l_0_14_241)) (* (* 2.0 l_0_14_237) l_0_14_242))))
 (let ((?x38428 (- (- ?x38422 (* (* 2.0 l_0_14_238) l_0_14_243)) (* (* 2.0 l_0_14_239) l_0_14_244))))
 (= (- (- (+ ?x38428 ?x37858) ?x27220) ?x37864) 0.0)))))))))))))))))
(assert
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27309 (* ?x35531 l_0_14_78)))
 (let ((?x35525 (* 2.0 l_0_14_141)))
 (let ((?x11507 (* ?x35525 l_0_14_162)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x14334 (* ?x35647 l_0_14_85)))
 (let ((?x38457 (- (- (- ?x14334 (* (* 2.0 l_0_14_113) l_0_14_134)) ?x11507) (* (* 2.0 l_0_14_169) l_0_14_190))))
 (let ((?x38461 (- (- ?x38457 (* (* 2.0 l_0_14_207) l_0_14_218)) (* (* 2.0 l_0_14_208) l_0_14_219))))
 (let ((?x38465 (- (- ?x38461 (* (* 2.0 l_0_14_209) l_0_14_220)) (* (* 2.0 l_0_14_210) l_0_14_221))))
 (let ((?x38469 (- (- ?x38465 (* (* 2.0 l_0_14_211) l_0_14_222)) (* (* 2.0 l_0_14_235) l_0_14_246))))
 (let ((?x38473 (- (- ?x38469 (* (* 2.0 l_0_14_236) l_0_14_247)) (* (* 2.0 l_0_14_237) l_0_14_248))))
 (let ((?x38477 (- (- ?x38473 (* (* 2.0 l_0_14_238) l_0_14_249)) (* (* 2.0 l_0_14_239) l_0_14_250))))
 (= (- ?x38477 ?x27309) 0.0))))))))))))))
(assert
 (let ((?x37903 (* l_0_14_87 l_0_14_87)))
 (let ((?x37901 (* l_0_14_86 l_0_14_86)))
 (let ((?x37899 (* l_0_14_59 l_0_14_59)))
 (let ((?x37907 (* l_0_14_58 l_0_14_58)))
 (let ((?x37112 (* l_0_14_171 l_0_14_171)))
 (let ((?x37110 (* l_0_14_170 l_0_14_170)))
 (let ((?x35808 (* l_0_14_143 l_0_14_143)))
 (let ((?x35806 (* l_0_14_142 l_0_14_142)))
 (let ((?x15255 (- (- (* (- l_0_14_114) l_0_14_114) (* l_0_14_115 l_0_14_115)) ?x35806)))
 (let ((?x38496 (+ (+ (- (- (- (- (- ?x15255 ?x35808) ?x37110) ?x37112) ?x37907) ?x37899) ?x37901) ?x37903)))
 (= ?x38496 0.0))))))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x35834 (* ?x35833 l_0_14_92)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x35831 (* ?x35830 l_0_14_91)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x35828 (* ?x35827 l_0_14_64)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x35825 (* ?x35824 l_0_14_63)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35919 (* ?x35852 l_0_14_148)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35918 (* ?x35850 l_0_14_147)))
 (let ((?x15271 (- (* (* (- 2.0) l_0_14_114) l_0_14_119) (* (* 2.0 l_0_14_115) l_0_14_120))))
 (let ((?x15295 (- (- (- (- ?x15271 ?x35918) ?x35919) (* (* 2.0 l_0_14_170) l_0_14_175)) (* (* 2.0 l_0_14_171) l_0_14_176))))
 (= (+ (+ (- (- ?x15295 ?x35825) ?x35828) ?x35831) ?x35834) 0.0))))))))))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37931 (* ?x35833 l_0_14_96)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37929 (* ?x35830 l_0_14_95)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37927 (* ?x35827 l_0_14_68)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x38525 (* ?x35824 l_0_14_67)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x35974 (* ?x35852 l_0_14_152)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x35972 (* ?x35850 l_0_14_151)))
 (let ((?x15421 (- (* (* (- 2.0) l_0_14_114) l_0_14_123) (* (* 2.0 l_0_14_115) l_0_14_124))))
 (let ((?x38524 (- (- (- (- ?x15421 ?x35972) ?x35974) (* (* 2.0 l_0_14_170) l_0_14_179)) (* (* 2.0 l_0_14_171) l_0_14_180))))
 (= (+ (+ (- (- ?x38524 ?x38525) ?x37927) ?x37929) ?x37931) 0.0))))))))))))))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x37931 (* ?x35833 l_0_14_96)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x37929 (* ?x35830 l_0_14_95)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37949 (* ?x35827 l_0_14_73)))
 (let ((?x37927 (* ?x35827 l_0_14_68)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37947 (* ?x35824 l_0_14_72)))
 (let ((?x38525 (* ?x35824 l_0_14_67)))
 (let ((?x35852 (* 2.0 l_0_14_143)))
 (let ((?x36036 (* ?x35852 l_0_14_157)))
 (let ((?x35850 (* 2.0 l_0_14_142)))
 (let ((?x36034 (* ?x35850 l_0_14_156)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x37945 (* ?x11663 l_0_14_87)))
 (let ((?x37946 (+ (* (* 2.0 l_0_14_100) l_0_14_86) ?x37945)))
 (let ((?x28724 (- (- ?x37946 (* (* 2.0 l_0_14_114) l_0_14_128)) (* (* 2.0 l_0_14_115) l_0_14_129))))
 (let ((?x38540 (- (- (- (- ?x28724 ?x36034) ?x36036) (* (* 2.0 l_0_14_170) l_0_14_184)) (* (* 2.0 l_0_14_171) l_0_14_185))))
 (= (- (- (- (+ (- (+ ?x38540 ?x38525) ?x37947) ?x37927) ?x37949) ?x37929) ?x37931) 0.0)))))))))))))))))))))
(assert
 (let ((?x35943 (* l_0_14_94 l_0_14_94)))
 (let ((?x35941 (* l_0_14_93 l_0_14_93)))
 (let ((?x35939 (* l_0_14_92 l_0_14_92)))
 (let ((?x35937 (* l_0_14_91 l_0_14_91)))
 (let ((?x35935 (* l_0_14_66 l_0_14_66)))
 (let ((?x35933 (* l_0_14_65 l_0_14_65)))
 (let ((?x35931 (* l_0_14_64 l_0_14_64)))
 (let ((?x35929 (* l_0_14_63 l_0_14_63)))
 (let ((?x37374 (* l_0_14_178 l_0_14_178)))
 (let ((?x37371 (* l_0_14_177 l_0_14_177)))
 (let ((?x37368 (* l_0_14_176 l_0_14_176)))
 (let ((?x13243 (* l_0_14_175 l_0_14_175)))
 (let ((?x36358 (* l_0_14_150 l_0_14_150)))
 (let ((?x36356 (* l_0_14_149 l_0_14_149)))
 (let ((?x36354 (* l_0_14_148 l_0_14_148)))
 (let ((?x36344 (* l_0_14_147 l_0_14_147)))
 (let ((?x38565 (* l_0_14_122 l_0_14_122)))
 (let ((?x38563 (* l_0_14_121 l_0_14_121)))
 (let ((?x38564 (- (- (* (- l_0_14_119) l_0_14_119) (* l_0_14_120 l_0_14_120)) ?x38563)))
 (let ((?x38572 (- (- (- (- (- (- (- ?x38564 ?x38565) ?x36344) ?x36354) ?x36356) ?x36358) ?x13243) ?x37368)))
 (let ((?x38579 (+ (- (- (- (- (- (- ?x38572 ?x37371) ?x37374) ?x35929) ?x35931) ?x35933) ?x35935) ?x35937)))
 (= (+ (+ (+ ?x38579 ?x35939) ?x35941) ?x35943) 0.0)))))))))))))))))))))))
(assert
 (let ((?x35998 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x35995 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x35992 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x35989 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x35986 (* ?x35714 l_0_14_70)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x35984 (* ?x35711 l_0_14_69)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x35982 (* ?x35708 l_0_14_68)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x35980 (* ?x35705 l_0_14_67)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x36401 (* ?x35688 l_0_14_154)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x36399 (* ?x35685 l_0_14_153)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x36397 (* ?x35682 l_0_14_152)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x36395 (* ?x35679 l_0_14_151)))
 (let ((?x28862 (- (* (* (- 2.0) l_0_14_119) l_0_14_123) (* (* 2.0 l_0_14_120) l_0_14_124))))
 (let ((?x28836 (- (- ?x28862 (* (* 2.0 l_0_14_121) l_0_14_125)) (* (* 2.0 l_0_14_122) l_0_14_126))))
 (let ((?x15947 (- (- (- (- (- ?x28836 ?x36395) ?x36397) ?x36399) ?x36401) (* (* 2.0 l_0_14_175) l_0_14_179))))
 (let ((?x15822 (- (- ?x15947 (* (* 2.0 l_0_14_176) l_0_14_180)) (* (* 2.0 l_0_14_177) l_0_14_181))))
 (let ((?x38603 (- (- (- (- ?x15822 (* (* 2.0 l_0_14_178) l_0_14_182)) ?x35980) ?x35982) ?x35984)))
 (= (+ (+ (+ (+ (- ?x38603 ?x35986) ?x35989) ?x35992) ?x35995) ?x35998) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x35998 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x35995 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x35992 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x35989 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x36054 (* ?x35714 l_0_14_75)))
 (let ((?x35986 (* ?x35714 l_0_14_70)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x36052 (* ?x35711 l_0_14_74)))
 (let ((?x35984 (* ?x35711 l_0_14_69)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x36050 (* ?x35708 l_0_14_73)))
 (let ((?x35982 (* ?x35708 l_0_14_68)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x36048 (* ?x35705 l_0_14_72)))
 (let ((?x35980 (* ?x35705 l_0_14_67)))
 (let ((?x35688 (* 2.0 l_0_14_150)))
 (let ((?x36435 (* ?x35688 l_0_14_159)))
 (let ((?x35685 (* 2.0 l_0_14_149)))
 (let ((?x36430 (* ?x35685 l_0_14_158)))
 (let ((?x35682 (* 2.0 l_0_14_148)))
 (let ((?x36426 (* ?x35682 l_0_14_157)))
 (let ((?x35679 (* 2.0 l_0_14_147)))
 (let ((?x11866 (* ?x35679 l_0_14_156)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x36032 (* ?x36031 l_0_14_94)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x36029 (* ?x36028 l_0_14_93)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x11185 (* ?x11663 l_0_14_92)))
 (let ((?x36033 (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_91) ?x11185) ?x36029) ?x36032)))
 (let ((?x28934 (- (- ?x36033 (* (* 2.0 l_0_14_119) l_0_14_128)) (* (* 2.0 l_0_14_120) l_0_14_129))))
 (let ((?x16095 (- (- ?x28934 (* (* 2.0 l_0_14_121) l_0_14_130)) (* (* 2.0 l_0_14_122) l_0_14_131))))
 (let ((?x16079 (- (- (- (- (- ?x16095 ?x11866) ?x36426) ?x36430) ?x36435) (* (* 2.0 l_0_14_175) l_0_14_184))))
 (let ((?x38625 (- (- ?x16079 (* (* 2.0 l_0_14_176) l_0_14_185)) (* (* 2.0 l_0_14_177) l_0_14_186))))
 (let ((?x38630 (+ (- (+ (- ?x38625 (* (* 2.0 l_0_14_178) l_0_14_187)) ?x35980) ?x36048) ?x35982)))
 (let ((?x38637 (- (- (- (+ (- (+ (- ?x38630 ?x36050) ?x35984) ?x36052) ?x35986) ?x36054) ?x35989) ?x35992)))
 (= (- (- ?x38637 ?x35995) ?x35998) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38041 (* l_0_14_99 l_0_14_99)))
 (let ((?x38039 (* l_0_14_98 l_0_14_98)))
 (let ((?x38037 (* l_0_14_97 l_0_14_97)))
 (let ((?x38035 (* l_0_14_96 l_0_14_96)))
 (let ((?x38033 (* l_0_14_95 l_0_14_95)))
 (let ((?x38031 (* l_0_14_71 l_0_14_71)))
 (let ((?x38029 (* l_0_14_70 l_0_14_70)))
 (let ((?x38027 (* l_0_14_69 l_0_14_69)))
 (let ((?x38025 (* l_0_14_68 l_0_14_68)))
 (let ((?x38045 (* l_0_14_67 l_0_14_67)))
 (let ((?x37522 (* l_0_14_183 l_0_14_183)))
 (let ((?x37519 (* l_0_14_182 l_0_14_182)))
 (let ((?x37516 (* l_0_14_181 l_0_14_181)))
 (let ((?x37513 (* l_0_14_180 l_0_14_180)))
 (let ((?x37510 (* l_0_14_179 l_0_14_179)))
 (let ((?x36521 (* l_0_14_155 l_0_14_155)))
 (let ((?x11911 (* l_0_14_154 l_0_14_154)))
 (let ((?x11909 (* l_0_14_153 l_0_14_153)))
 (let ((?x26028 (* l_0_14_152 l_0_14_152)))
 (let ((?x11865 (* l_0_14_151 l_0_14_151)))
 (let ((?x38686 (* l_0_14_127 l_0_14_127)))
 (let ((?x38684 (* l_0_14_126 l_0_14_126)))
 (let ((?x38682 (* l_0_14_125 l_0_14_125)))
 (let ((?x38683 (- (- (* (- l_0_14_123) l_0_14_123) (* l_0_14_124 l_0_14_124)) ?x38682)))
 (let ((?x38692 (- (- (- (- (- (- (- ?x38683 ?x38684) ?x38686) ?x11865) ?x26028) ?x11909) ?x11911) ?x36521)))
 (let ((?x38699 (- (- (- (- (- (- (- ?x38692 ?x37510) ?x37513) ?x37516) ?x37519) ?x37522) ?x38045) ?x38025)))
 (let ((?x38706 (+ (+ (+ (+ (- (- (- ?x38699 ?x38027) ?x38029) ?x38031) ?x38033) ?x38035) ?x38037) ?x38039)))
 (= (+ ?x38706 ?x38041) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x38041 (* l_0_14_99 l_0_14_99)))
 (let ((?x38039 (* l_0_14_98 l_0_14_98)))
 (let ((?x38037 (* l_0_14_97 l_0_14_97)))
 (let ((?x38035 (* l_0_14_96 l_0_14_96)))
 (let ((?x38033 (* l_0_14_95 l_0_14_95)))
 (let ((?x38031 (* l_0_14_71 l_0_14_71)))
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38081 (* ?x38080 l_0_14_76)))
 (let ((?x38029 (* l_0_14_70 l_0_14_70)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38078 (* ?x38077 l_0_14_75)))
 (let ((?x38027 (* l_0_14_69 l_0_14_69)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38075 (* ?x38074 l_0_14_74)))
 (let ((?x38025 (* l_0_14_68 l_0_14_68)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38072 (* ?x38071 l_0_14_73)))
 (let ((?x38045 (* l_0_14_67 l_0_14_67)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38069 (* ?x38068 l_0_14_72)))
 (let ((?x36579 (* 2.0 l_0_14_155)))
 (let ((?x36580 (* ?x36579 l_0_14_160)))
 (let ((?x36576 (* 2.0 l_0_14_154)))
 (let ((?x36577 (* ?x36576 l_0_14_159)))
 (let ((?x36573 (* 2.0 l_0_14_153)))
 (let ((?x36574 (* ?x36573 l_0_14_158)))
 (let ((?x36570 (* 2.0 l_0_14_152)))
 (let ((?x36571 (* ?x36570 l_0_14_157)))
 (let ((?x36567 (* 2.0 l_0_14_151)))
 (let ((?x36568 (* ?x36567 l_0_14_156)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38066 (* ?x38065 l_0_14_99)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38063 (* ?x36031 l_0_14_98)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38061 (* ?x36028 l_0_14_97)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38059 (* ?x11663 l_0_14_96)))
 (let ((?x38067 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_95) ?x38059) ?x38061) ?x38063) ?x38066)))
 (let ((?x16353 (- (- ?x38067 (* (* 2.0 l_0_14_123) l_0_14_128)) (* (* 2.0 l_0_14_124) l_0_14_129))))
 (let ((?x29046 (- (- ?x16353 (* (* 2.0 l_0_14_125) l_0_14_130)) (* (* 2.0 l_0_14_126) l_0_14_131))))
 (let ((?x16303 (- (- (- (- ?x29046 (* (* 2.0 l_0_14_127) l_0_14_132)) ?x36568) ?x36571) ?x36574)))
 (let ((?x38721 (- (- (- (- ?x16303 ?x36577) ?x36580) (* (* 2.0 l_0_14_179) l_0_14_184)) (* (* 2.0 l_0_14_180) l_0_14_185))))
 (let ((?x38727 (- (- ?x38721 (* (* 2.0 l_0_14_181) l_0_14_186)) (* (* 2.0 l_0_14_182) l_0_14_187))))
 (let ((?x38733 (- (+ (- (- ?x38727 (* (* 2.0 l_0_14_183) l_0_14_188)) ?x38069) ?x38045) ?x38072)))
 (let ((?x38740 (+ (- (+ (- (+ (- (+ ?x38733 ?x38025) ?x38075) ?x38027) ?x38078) ?x38029) ?x38081) ?x38031)))
 (= (- (- (- (- (- ?x38740 ?x38033) ?x38035) ?x38037) ?x38039) ?x38041) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38134 (* ?x38080 l_0_14_82)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38132 (* ?x38077 l_0_14_81)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38130 (* ?x38074 l_0_14_80)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38128 (* ?x38071 l_0_14_79)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38126 (* ?x38068 l_0_14_78)))
 (let ((?x36579 (* 2.0 l_0_14_155)))
 (let ((?x36652 (* ?x36579 l_0_14_166)))
 (let ((?x36576 (* 2.0 l_0_14_154)))
 (let ((?x36650 (* ?x36576 l_0_14_165)))
 (let ((?x36573 (* 2.0 l_0_14_153)))
 (let ((?x36648 (* ?x36573 l_0_14_164)))
 (let ((?x36570 (* 2.0 l_0_14_152)))
 (let ((?x36646 (* ?x36570 l_0_14_163)))
 (let ((?x36567 (* 2.0 l_0_14_151)))
 (let ((?x36631 (* ?x36567 l_0_14_162)))
 (let ((?x38124 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x38121 (* ?x35662 l_0_14_98)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x38119 (* ?x35659 l_0_14_97)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x38117 (* ?x35656 l_0_14_96)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x38116 (* ?x35647 l_0_14_95)))
 (let ((?x38125 (+ (+ (+ (+ ?x38116 ?x38117) ?x38119) ?x38121) ?x38124)))
 (let ((?x38791 (- (- ?x38125 (* (* 2.0 l_0_14_123) l_0_14_134)) (* (* 2.0 l_0_14_124) l_0_14_135))))
 (let ((?x38795 (- (- ?x38791 (* (* 2.0 l_0_14_125) l_0_14_136)) (* (* 2.0 l_0_14_126) l_0_14_137))))
 (let ((?x38800 (- (- (- (- ?x38795 (* (* 2.0 l_0_14_127) l_0_14_138)) ?x36631) ?x36646) ?x36648)))
 (let ((?x38806 (- (- (- (- ?x38800 ?x36650) ?x36652) (* (* 2.0 l_0_14_179) l_0_14_190)) (* (* 2.0 l_0_14_180) l_0_14_191))))
 (let ((?x38810 (- (- ?x38806 (* (* 2.0 l_0_14_181) l_0_14_192)) (* (* 2.0 l_0_14_182) l_0_14_193))))
 (let ((?x38815 (- (- (- (- ?x38810 (* (* 2.0 l_0_14_183) l_0_14_194)) ?x38126) ?x38128) ?x38130)))
 (= (- (- ?x38815 ?x38132) ?x38134) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38177 (* l_0_14_77 l_0_14_77)))
 (let ((?x38175 (* l_0_14_76 l_0_14_76)))
 (let ((?x38173 (* l_0_14_75 l_0_14_75)))
 (let ((?x38171 (* l_0_14_74 l_0_14_74)))
 (let ((?x38169 (* l_0_14_73 l_0_14_73)))
 (let ((?x38167 (* l_0_14_72 l_0_14_72)))
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38081 (* ?x38080 l_0_14_76)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38078 (* ?x38077 l_0_14_75)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38075 (* ?x38074 l_0_14_74)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38072 (* ?x38071 l_0_14_73)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38069 (* ?x38068 l_0_14_72)))
 (let ((?x37752 (* l_0_14_189 l_0_14_189)))
 (let ((?x37749 (* l_0_14_188 l_0_14_188)))
 (let ((?x37746 (* l_0_14_187 l_0_14_187)))
 (let ((?x37743 (* l_0_14_186 l_0_14_186)))
 (let ((?x37740 (* l_0_14_185 l_0_14_185)))
 (let ((?x37737 (* l_0_14_184 l_0_14_184)))
 (let ((?x36684 (* l_0_14_161 l_0_14_161)))
 (let ((?x36682 (* l_0_14_160 l_0_14_160)))
 (let ((?x36678 (* l_0_14_159 l_0_14_159)))
 (let ((?x25478 (* l_0_14_158 l_0_14_158)))
 (let ((?x26107 (* l_0_14_157 l_0_14_157)))
 (let ((?x26106 (* l_0_14_156 l_0_14_156)))
 (let ((?x38857 (* l_0_14_133 l_0_14_133)))
 (let ((?x38855 (* l_0_14_132 l_0_14_132)))
 (let ((?x38853 (* l_0_14_131 l_0_14_131)))
 (let ((?x38851 (* l_0_14_130 l_0_14_130)))
 (let ((?x38849 (* l_0_14_129 l_0_14_129)))
 (let ((?x38847 (* l_0_14_128 l_0_14_128)))
 (let ((?x38165 (* l_0_14_105 l_0_14_105)))
 (let ((?x38163 (* l_0_14_104 l_0_14_104)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38066 (* ?x38065 l_0_14_99)))
 (let ((?x38161 (* l_0_14_103 l_0_14_103)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38063 (* ?x36031 l_0_14_98)))
 (let ((?x38159 (* l_0_14_102 l_0_14_102)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38061 (* ?x36028 l_0_14_97)))
 (let ((?x27514 (* l_0_14_101 l_0_14_101)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38059 (* ?x11663 l_0_14_96)))
 (let ((?x14487 (* l_0_14_100 l_0_14_100)))
 (let ((?x38840 (- (+ (- (+ (* (* (- 2.0) l_0_14_100) l_0_14_95) ?x14487) ?x38059) ?x27514) ?x38061)))
 (let ((?x38848 (- (+ (+ (- (+ (- (+ ?x38840 ?x38159) ?x38063) ?x38161) ?x38066) ?x38163) ?x38165) ?x38847)))
 (let ((?x38860 (- (- (- (- (- (- (- ?x38848 ?x38849) ?x38851) ?x38853) ?x38855) ?x38857) ?x26106) ?x26107)))
 (let ((?x38867 (- (- (- (- (- (- (- ?x38860 ?x25478) ?x36678) ?x36682) ?x36684) ?x37737) ?x37740) ?x37743)))
 (let ((?x38874 (+ (+ (+ (+ (- (- (- ?x38867 ?x37746) ?x37749) ?x37752) ?x38069) ?x38072) ?x38075) ?x38078)))
 (let ((?x38881 (- (- (- (- (- (- (+ ?x38874 ?x38081) ?x38167) ?x38169) ?x38171) ?x38173) ?x38175) ?x38177)))
 (= ?x38881 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38219 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x38216 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x38213 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x38210 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x38207 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x38204 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x38080 (* 2.0 l_0_14_71)))
 (let ((?x38134 (* ?x38080 l_0_14_82)))
 (let ((?x38077 (* 2.0 l_0_14_70)))
 (let ((?x38132 (* ?x38077 l_0_14_81)))
 (let ((?x38074 (* 2.0 l_0_14_69)))
 (let ((?x38130 (* ?x38074 l_0_14_80)))
 (let ((?x38071 (* 2.0 l_0_14_68)))
 (let ((?x38128 (* ?x38071 l_0_14_79)))
 (let ((?x38068 (* 2.0 l_0_14_67)))
 (let ((?x38126 (* ?x38068 l_0_14_78)))
 (let ((?x36740 (* (* 2.0 l_0_14_161) l_0_14_167)))
 (let ((?x36737 (* (* 2.0 l_0_14_160) l_0_14_166)))
 (let ((?x36732 (* (* 2.0 l_0_14_159) l_0_14_165)))
 (let ((?x36729 (* (* 2.0 l_0_14_158) l_0_14_164)))
 (let ((?x36726 (* (* 2.0 l_0_14_157) l_0_14_163)))
 (let ((?x36724 (* (* 2.0 l_0_14_156) l_0_14_162)))
 (let ((?x38124 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35662 (* 2.0 l_0_14_109)))
 (let ((?x38121 (* ?x35662 l_0_14_98)))
 (let ((?x35659 (* 2.0 l_0_14_108)))
 (let ((?x38119 (* ?x35659 l_0_14_97)))
 (let ((?x35656 (* 2.0 l_0_14_107)))
 (let ((?x38117 (* ?x35656 l_0_14_96)))
 (let ((?x35647 (* 2.0 l_0_14_106)))
 (let ((?x38116 (* ?x35647 l_0_14_95)))
 (let ((?x38201 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38198 (* ?x38065 l_0_14_110)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38196 (* ?x36031 l_0_14_109)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38194 (* ?x36028 l_0_14_108)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38192 (* ?x11663 l_0_14_107)))
 (let ((?x38199 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_106) ?x38192) ?x38194) ?x38196) ?x38198)))
 (let ((?x38202 (+ ?x38199 ?x38201)))
 (let ((?x16735 (- (- (- (- (- (- ?x38202 ?x38116) ?x38117) ?x38119) ?x38121) ?x38124) (* (* 2.0 l_0_14_128) l_0_14_134))))
 (let ((?x38899 (- (- ?x16735 (* (* 2.0 l_0_14_129) l_0_14_135)) (* (* 2.0 l_0_14_130) l_0_14_136))))
 (let ((?x38905 (- (- ?x38899 (* (* 2.0 l_0_14_131) l_0_14_137)) (* (* 2.0 l_0_14_132) l_0_14_138))))
 (let ((?x38911 (- (- (- (- ?x38905 (* (* 2.0 l_0_14_133) l_0_14_139)) ?x36724) ?x36726) ?x36729)))
 (let ((?x38917 (- (- (- (- ?x38911 ?x36732) ?x36737) ?x36740) (* (* 2.0 l_0_14_184) l_0_14_190))))
 (let ((?x38923 (- (- ?x38917 (* (* 2.0 l_0_14_185) l_0_14_191)) (* (* 2.0 l_0_14_186) l_0_14_192))))
 (let ((?x38929 (- (- ?x38923 (* (* 2.0 l_0_14_187) l_0_14_193)) (* (* 2.0 l_0_14_188) l_0_14_194))))
 (let ((?x38935 (+ (+ (+ (- ?x38929 (* (* 2.0 l_0_14_189) l_0_14_195)) ?x38126) ?x38128) ?x38130)))
 (let ((?x38942 (- (- (- (- (- (+ (+ ?x38935 ?x38132) ?x38134) ?x38204) ?x38207) ?x38210) ?x38213) ?x38216)))
 (= (- ?x38942 ?x38219) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38274 (* l_0_14_84 l_0_14_84)))
 (let ((?x38272 (* l_0_14_83 l_0_14_83)))
 (let ((?x38270 (* l_0_14_82 l_0_14_82)))
 (let ((?x38268 (* l_0_14_81 l_0_14_81)))
 (let ((?x38266 (* l_0_14_80 l_0_14_80)))
 (let ((?x38264 (* l_0_14_79 l_0_14_79)))
 (let ((?x38262 (* l_0_14_78 l_0_14_78)))
 (let ((?x14059 (* l_0_14_196 l_0_14_196)))
 (let ((?x14055 (* l_0_14_195 l_0_14_195)))
 (let ((?x14041 (* l_0_14_194 l_0_14_194)))
 (let ((?x27018 (* l_0_14_193 l_0_14_193)))
 (let ((?x27119 (* l_0_14_192 l_0_14_192)))
 (let ((?x14043 (* l_0_14_191 l_0_14_191)))
 (let ((?x27130 (* l_0_14_190 l_0_14_190)))
 (let ((?x36827 (* l_0_14_168 l_0_14_168)))
 (let ((?x36825 (* l_0_14_167 l_0_14_167)))
 (let ((?x36823 (* l_0_14_166 l_0_14_166)))
 (let ((?x36821 (* l_0_14_165 l_0_14_165)))
 (let ((?x36819 (* l_0_14_164 l_0_14_164)))
 (let ((?x36817 (* l_0_14_163 l_0_14_163)))
 (let ((?x36816 (* l_0_14_162 l_0_14_162)))
 (let ((?x38975 (* l_0_14_140 l_0_14_140)))
 (let ((?x38973 (* l_0_14_139 l_0_14_139)))
 (let ((?x38971 (* l_0_14_138 l_0_14_138)))
 (let ((?x38969 (* l_0_14_137 l_0_14_137)))
 (let ((?x38967 (* l_0_14_136 l_0_14_136)))
 (let ((?x38965 (* l_0_14_135 l_0_14_135)))
 (let ((?x17179 (* l_0_14_134 l_0_14_134)))
 (let ((?x38260 (* l_0_14_112 l_0_14_112)))
 (let ((?x38258 (* l_0_14_111 l_0_14_111)))
 (let ((?x38256 (* l_0_14_110 l_0_14_110)))
 (let ((?x38254 (* l_0_14_109 l_0_14_109)))
 (let ((?x38252 (* l_0_14_108 l_0_14_108)))
 (let ((?x38253 (+ (+ (* l_0_14_106 l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38252)))
 (let ((?x38261 (+ (+ (+ (+ ?x38253 ?x38254) ?x38256) ?x38258) ?x38260)))
 (let ((?x38976 (- (- (- (- (- (- (- ?x38261 ?x17179) ?x38965) ?x38967) ?x38969) ?x38971) ?x38973) ?x38975)))
 (let ((?x38983 (- (- (- (- (- (- (- ?x38976 ?x36816) ?x36817) ?x36819) ?x36821) ?x36823) ?x36825) ?x36827)))
 (let ((?x38990 (- (- (- (- (- (- (- ?x38983 ?x27130) ?x14043) ?x27119) ?x27018) ?x14041) ?x14055) ?x14059)))
 (let ((?x38997 (- (- (- (- (- (- (- ?x38990 ?x38262) ?x38264) ?x38266) ?x38268) ?x38270) ?x38272) ?x38274)))
 (= ?x38997 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x37816 (* l_0_14_85 l_0_14_85)))
 (let ((?x37814 (* l_0_14_57 l_0_14_57)))
 (let ((?x39004 (- (* (* (- 2.0) l_0_14_197) l_0_14_212) (* (* 2.0 l_0_14_225) l_0_14_240))))
 (= (- (+ ?x39004 ?x37814) ?x37816) 0.0)))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x37836 (* ?x35534 l_0_14_86)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x38316 (* ?x35531 l_0_14_58)))
 (let ((?x39022 (- (* (* (- 2.0) l_0_14_198) l_0_14_212) (* (* 2.0 l_0_14_199) l_0_14_213))))
 (let ((?x39026 (- (- ?x39022 (* (* 2.0 l_0_14_226) l_0_14_240)) (* (* 2.0 l_0_14_227) l_0_14_241))))
 (= (- (+ ?x39026 ?x38316) ?x37836) 0.0))))))))
(assert
 (let ((?x35534 (* 2.0 l_0_14_85)))
 (let ((?x35535 (* ?x35534 l_0_14_91)))
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x35532 (* ?x35531 l_0_14_63)))
 (let ((?x39048 (- (* (* (- 2.0) l_0_14_203) l_0_14_212) (* (* 2.0 l_0_14_204) l_0_14_213))))
 (let ((?x39052 (- (- ?x39048 (* (* 2.0 l_0_14_205) l_0_14_214)) (* (* 2.0 l_0_14_206) l_0_14_215))))
 (let ((?x39056 (- (- ?x39052 (* (* 2.0 l_0_14_231) l_0_14_240)) (* (* 2.0 l_0_14_232) l_0_14_241))))
 (let ((?x39060 (- (- ?x39056 (* (* 2.0 l_0_14_233) l_0_14_242)) (* (* 2.0 l_0_14_234) l_0_14_243))))
 (= (- (+ ?x39060 ?x35532) ?x35535) 0.0))))))))))
(assert
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27220 (* ?x35531 l_0_14_72)))
 (let ((?x39118 (* l_0_14_245 l_0_14_245)))
 (let ((?x39116 (* l_0_14_244 l_0_14_244)))
 (let ((?x39114 (* l_0_14_243 l_0_14_243)))
 (let ((?x39112 (* l_0_14_242 l_0_14_242)))
 (let ((?x39110 (* l_0_14_241 l_0_14_241)))
 (let ((?x39108 (* l_0_14_240 l_0_14_240)))
 (let ((?x39106 (* l_0_14_217 l_0_14_217)))
 (let ((?x39104 (* l_0_14_216 l_0_14_216)))
 (let ((?x39102 (* l_0_14_215 l_0_14_215)))
 (let ((?x39100 (* l_0_14_214 l_0_14_214)))
 (let ((?x39098 (* l_0_14_213 l_0_14_213)))
 (let ((?x39096 (* l_0_14_212 l_0_14_212)))
 (let ((?x39103 (- (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_85) ?x39096) ?x39098) ?x39100) ?x39102)))
 (let ((?x39117 (- (- (- (- (- (- (- ?x39103 ?x39104) ?x39106) ?x39108) ?x39110) ?x39112) ?x39114) ?x39116)))
 (= (+ (- ?x39117 ?x39118) ?x27220) 0.0))))))))))))))))))
(assert
 (let ((?x35531 (* 2.0 l_0_14_57)))
 (let ((?x27309 (* ?x35531 l_0_14_78)))
 (let ((?x39146 (- (* (* (- 2.0) l_0_14_106) l_0_14_85) (* (* 2.0 l_0_14_212) l_0_14_218))))
 (let ((?x39152 (- (- ?x39146 (* (* 2.0 l_0_14_213) l_0_14_219)) (* (* 2.0 l_0_14_214) l_0_14_220))))
 (let ((?x39158 (- (- ?x39152 (* (* 2.0 l_0_14_215) l_0_14_221)) (* (* 2.0 l_0_14_216) l_0_14_222))))
 (let ((?x39164 (- (- ?x39158 (* (* 2.0 l_0_14_217) l_0_14_223)) (* (* 2.0 l_0_14_240) l_0_14_246))))
 (let ((?x39170 (- (- ?x39164 (* (* 2.0 l_0_14_241) l_0_14_247)) (* (* 2.0 l_0_14_242) l_0_14_248))))
 (let ((?x39176 (- (- ?x39170 (* (* 2.0 l_0_14_243) l_0_14_249)) (* (* 2.0 l_0_14_244) l_0_14_250))))
 (= (+ (- ?x39176 (* (* 2.0 l_0_14_245) l_0_14_251)) ?x27309) 0.0))))))))))
(assert
 (let ((?x37903 (* l_0_14_87 l_0_14_87)))
 (let ((?x37901 (* l_0_14_86 l_0_14_86)))
 (let ((?x17610 (- (- (+ (* l_0_14_58 l_0_14_58) (* l_0_14_59 l_0_14_59)) ?x37901) ?x37903)))
 (= ?x17610 0.0)))))
(assert
 (let ((?x35833 (* 2.0 l_0_14_87)))
 (let ((?x35834 (* ?x35833 l_0_14_92)))
 (let ((?x35830 (* 2.0 l_0_14_86)))
 (let ((?x35831 (* ?x35830 l_0_14_91)))
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x35828 (* ?x35827 l_0_14_64)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x35825 (* ?x35824 l_0_14_63)))
 (= (- (- (+ ?x35825 ?x35828) ?x35831) ?x35834) 0.0))))))))))
(assert
 (let ((?x35827 (* 2.0 l_0_14_59)))
 (let ((?x37949 (* ?x35827 l_0_14_73)))
 (let ((?x35824 (* 2.0 l_0_14_58)))
 (let ((?x37947 (* ?x35824 l_0_14_72)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x37945 (* ?x11663 l_0_14_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_100) l_0_14_86) ?x37945) ?x37947) ?x37949) 0.0))))))))
(assert
 (let ((?x35943 (* l_0_14_94 l_0_14_94)))
 (let ((?x35941 (* l_0_14_93 l_0_14_93)))
 (let ((?x35939 (* l_0_14_92 l_0_14_92)))
 (let ((?x35937 (* l_0_14_91 l_0_14_91)))
 (let ((?x35935 (* l_0_14_66 l_0_14_66)))
 (let ((?x35933 (* l_0_14_65 l_0_14_65)))
 (let ((?x17643 (+ (+ (+ (* l_0_14_63 l_0_14_63) (* l_0_14_64 l_0_14_64)) ?x35933) ?x35935)))
 (= (- (- (- (- ?x17643 ?x35937) ?x35939) ?x35941) ?x35943) 0.0)))))))))
(assert
 (let ((?x35714 (* 2.0 l_0_14_66)))
 (let ((?x36054 (* ?x35714 l_0_14_75)))
 (let ((?x35711 (* 2.0 l_0_14_65)))
 (let ((?x36052 (* ?x35711 l_0_14_74)))
 (let ((?x35708 (* 2.0 l_0_14_64)))
 (let ((?x36050 (* ?x35708 l_0_14_73)))
 (let ((?x35705 (* 2.0 l_0_14_63)))
 (let ((?x36048 (* ?x35705 l_0_14_72)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x36032 (* ?x36031 l_0_14_94)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x36029 (* ?x36028 l_0_14_93)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x11185 (* ?x11663 l_0_14_92)))
 (let ((?x39248 (+ (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_91) ?x11185) ?x36029) ?x36032) ?x36048)))
 (= (+ (+ (+ ?x39248 ?x36050) ?x36052) ?x36054) 0.0)))))))))))))))))
(assert
 (let ((?x38177 (* l_0_14_77 l_0_14_77)))
 (let ((?x38175 (* l_0_14_76 l_0_14_76)))
 (let ((?x38173 (* l_0_14_75 l_0_14_75)))
 (let ((?x38171 (* l_0_14_74 l_0_14_74)))
 (let ((?x38169 (* l_0_14_73 l_0_14_73)))
 (let ((?x38167 (* l_0_14_72 l_0_14_72)))
 (let ((?x38165 (* l_0_14_105 l_0_14_105)))
 (let ((?x38163 (* l_0_14_104 l_0_14_104)))
 (let ((?x38161 (* l_0_14_103 l_0_14_103)))
 (let ((?x38159 (* l_0_14_102 l_0_14_102)))
 (let ((?x39255 (- (- (* (- l_0_14_100) l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x38159)))
 (let ((?x39262 (+ (+ (+ (+ (- (- (- ?x39255 ?x38161) ?x38163) ?x38165) ?x38167) ?x38169) ?x38171) ?x38173)))
 (= (+ (+ ?x39262 ?x38175) ?x38177) 0.0))))))))))))))
(assert
 (let ((?x38219 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x38216 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x38213 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x38210 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x38207 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x38204 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x38201 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x38065 (* 2.0 l_0_14_104)))
 (let ((?x38198 (* ?x38065 l_0_14_110)))
 (let ((?x36031 (* 2.0 l_0_14_103)))
 (let ((?x38196 (* ?x36031 l_0_14_109)))
 (let ((?x36028 (* 2.0 l_0_14_102)))
 (let ((?x38194 (* ?x36028 l_0_14_108)))
 (let ((?x11663 (* 2.0 l_0_14_101)))
 (let ((?x38192 (* ?x11663 l_0_14_107)))
 (let ((?x39286 (- (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_106) ?x38192) ?x38194) ?x38196) ?x38198)))
 (let ((?x39293 (+ (+ (+ (+ (+ (+ (- ?x39286 ?x38201) ?x38204) ?x38207) ?x38210) ?x38213) ?x38216) ?x38219)))
 (= ?x39293 0.0)))))))))))))))))))
(assert
 (let ((?x38274 (* l_0_14_84 l_0_14_84)))
 (let ((?x38272 (* l_0_14_83 l_0_14_83)))
 (let ((?x38270 (* l_0_14_82 l_0_14_82)))
 (let ((?x38268 (* l_0_14_81 l_0_14_81)))
 (let ((?x38266 (* l_0_14_80 l_0_14_80)))
 (let ((?x38264 (* l_0_14_79 l_0_14_79)))
 (let ((?x38262 (* l_0_14_78 l_0_14_78)))
 (let ((?x38260 (* l_0_14_112 l_0_14_112)))
 (let ((?x38258 (* l_0_14_111 l_0_14_111)))
 (let ((?x38256 (* l_0_14_110 l_0_14_110)))
 (let ((?x38254 (* l_0_14_109 l_0_14_109)))
 (let ((?x38252 (* l_0_14_108 l_0_14_108)))
 (let ((?x17696 (- (- (* (- l_0_14_106) l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38252)))
 (let ((?x39303 (+ (+ (+ (- (- (- (- ?x17696 ?x38254) ?x38256) ?x38258) ?x38260) ?x38262) ?x38264) ?x38266)))
 (= (+ (+ (+ (+ ?x39303 ?x38268) ?x38270) ?x38272) ?x38274) 0.0))))))))))))))))
(assert
 (let ((?x17740 (- (* (* (- 2.0) l_0_14_197) l_0_14_198) (* (* 2.0 l_0_14_225) l_0_14_226))))
 (= ?x17740 0.0)))
(assert
 (let ((?x39334 (- (* (* (- 2.0) l_0_14_197) l_0_14_203) (* (* 2.0 l_0_14_225) l_0_14_231))))
 (= ?x39334 0.0)))
(assert
 (let ((?x39349 (- (* (* (- 2.0) l_0_14_197) l_0_14_218) (* (* 2.0 l_0_14_225) l_0_14_246))))
 (= ?x39349 0.0)))
(assert
 (let ((?x39368 (* l_0_14_227 l_0_14_227)))
 (let ((?x39366 (* l_0_14_226 l_0_14_226)))
 (let ((?x39367 (- (- (* (- l_0_14_198) l_0_14_198) (* l_0_14_199 l_0_14_199)) ?x39366)))
 (= (- ?x39367 ?x39368) 0.0)))))
(assert
 (let ((?x39383 (- (* (* (- 2.0) l_0_14_198) l_0_14_203) (* (* 2.0 l_0_14_199) l_0_14_204))))
 (let ((?x39387 (- (- ?x39383 (* (* 2.0 l_0_14_226) l_0_14_231)) (* (* 2.0 l_0_14_227) l_0_14_232))))
 (= ?x39387 0.0))))
(assert
 (let ((?x39413 (* l_0_14_234 l_0_14_234)))
 (let ((?x39411 (* l_0_14_233 l_0_14_233)))
 (let ((?x39409 (* l_0_14_232 l_0_14_232)))
 (let ((?x39407 (* l_0_14_231 l_0_14_231)))
 (let ((?x39405 (* l_0_14_206 l_0_14_206)))
 (let ((?x39403 (* l_0_14_205 l_0_14_205)))
 (let ((?x39404 (- (- (* (- l_0_14_203) l_0_14_203) (* l_0_14_204 l_0_14_204)) ?x39403)))
 (= (- (- (- (- (- ?x39404 ?x39405) ?x39407) ?x39409) ?x39411) ?x39413) 0.0)))))))))
(assert
 (let ((?x39458 (* l_0_14_252 l_0_14_252)))
 (let ((?x39456 (* l_0_14_251 l_0_14_251)))
 (let ((?x39454 (* l_0_14_250 l_0_14_250)))
 (let ((?x39452 (* l_0_14_249 l_0_14_249)))
 (let ((?x39450 (* l_0_14_248 l_0_14_248)))
 (let ((?x39448 (* l_0_14_247 l_0_14_247)))
 (let ((?x39446 (* l_0_14_246 l_0_14_246)))
 (let ((?x39444 (* l_0_14_224 l_0_14_224)))
 (let ((?x39442 (* l_0_14_223 l_0_14_223)))
 (let ((?x39440 (* l_0_14_222 l_0_14_222)))
 (let ((?x39438 (* l_0_14_221 l_0_14_221)))
 (let ((?x39436 (* l_0_14_220 l_0_14_220)))
 (let ((?x39437 (- (- (* (- l_0_14_218) l_0_14_218) (* l_0_14_219 l_0_14_219)) ?x39436)))
 (let ((?x39451 (- (- (- (- (- (- (- ?x39437 ?x39438) ?x39440) ?x39442) ?x39444) ?x39446) ?x39448) ?x39450)))
 (= (- (- (- (- ?x39451 ?x39452) ?x39454) ?x39456) ?x39458) 0.0))))))))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_28 0.0))
(assert
 (>= l_0_14_29 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_34 0.0))
(assert
 (>= l_0_14_38 0.0))
(assert
 (>= l_0_14_43 0.0))
(assert
 (>= l_0_14_49 0.0))
(assert
 (>= l_0_14_56 0.0))
(assert
 (>= l_0_14_57 0.0))
(assert
 (>= l_0_14_59 0.0))
(assert
 (>= l_0_14_62 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_71 0.0))
(assert
 (>= l_0_14_77 0.0))
(assert
 (>= l_0_14_84 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_87 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (>= l_0_14_94 0.0))
(assert
 (>= l_0_14_99 0.0))
(assert
 (>= l_0_14_105 0.0))
(assert
 (>= l_0_14_112 0.0))
(assert
 (>= l_0_14_113 0.0))
(assert
 (>= l_0_14_115 0.0))
(assert
 (>= l_0_14_118 0.0))
(assert
 (>= l_0_14_122 0.0))
(assert
 (>= l_0_14_127 0.0))
(assert
 (>= l_0_14_133 0.0))
(assert
 (>= l_0_14_140 0.0))
(assert
 (>= l_0_14_141 0.0))
(assert
 (>= l_0_14_143 0.0))
(assert
 (>= l_0_14_146 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (>= l_0_14_155 0.0))
(assert
 (>= l_0_14_161 0.0))
(assert
 (>= l_0_14_168 0.0))
(assert
 (>= l_0_14_169 0.0))
(assert
 (>= l_0_14_171 0.0))
(assert
 (>= l_0_14_174 0.0))
(assert
 (>= l_0_14_178 0.0))
(assert
 (>= l_0_14_183 0.0))
(assert
 (>= l_0_14_189 0.0))
(assert
 (>= l_0_14_196 0.0))
(assert
 (>= l_0_14_197 0.0))
(assert
 (>= l_0_14_199 0.0))
(assert
 (>= l_0_14_202 0.0))
(assert
 (>= l_0_14_206 0.0))
(assert
 (>= l_0_14_211 0.0))
(assert
 (>= l_0_14_217 0.0))
(assert
 (>= l_0_14_224 0.0))
(assert
 (>= l_0_14_225 0.0))
(assert
 (>= l_0_14_227 0.0))
(assert
 (>= l_0_14_230 0.0))
(assert
 (>= l_0_14_234 0.0))
(assert
 (>= l_0_14_239 0.0))
(assert
 (>= l_0_14_245 0.0))
(assert
 (>= l_0_14_252 0.0))
(assert
 (let ((?x39556 (* l_0_15_85 l_0_15_85)))
 (let ((?x39554 (* l_0_15_57 l_0_15_57)))
 (let ((?x39541 (- (* (* (- 2.0) l_0_15_198) l_0_15_218) (* (* 2.0 l_0_15_199) l_0_15_219))))
 (let ((?x39547 (- (- ?x39541 (* (* 2.0 l_0_15_226) l_0_15_246)) (* (* 2.0 l_0_15_227) l_0_15_247))))
 (let ((?x39553 (- (- ?x39547 (* (* 2.0 l_0_15_254) l_0_15_274)) (* (* 2.0 l_0_15_255) l_0_15_275))))
 (= (+ (+ (- ?x39553 ?x39554) ?x39556) 1.0) 0.0)))))))
(assert
 (let ((?x39556 (* l_0_15_85 l_0_15_85)))
 (let ((?x39554 (* l_0_15_57 l_0_15_57)))
 (let ((?x39579 (* l_0_15_169 l_0_15_169)))
 (let ((?x39580 (- (- (* (- l_0_15_113) l_0_15_113) (* l_0_15_141 l_0_15_141)) ?x39579)))
 (let ((?x39586 (- (- ?x39580 (* (* 2.0 l_0_15_197) l_0_15_207)) (* (* 2.0 l_0_15_225) l_0_15_235))))
 (let ((?x39592 (+ (+ (- (- ?x39586 (* (* 2.0 l_0_15_253) l_0_15_263)) ?x39554) ?x39556) 1.0)))
 (= ?x39592 0.0))))))))
(assert
 (let ((?x39556 (* l_0_15_85 l_0_15_85)))
 (let ((?x39554 (* l_0_15_57 l_0_15_57)))
 (let ((?x39614 (- (* (* (- 2.0) l_0_15_197) l_0_15_212) (* (* 2.0 l_0_15_225) l_0_15_240))))
 (let ((?x39619 (- (- (+ (- ?x39614 (* (* 2.0 l_0_15_253) l_0_15_268)) ?x39554) ?x39556) 1.0)))
 (= ?x39619 0.0))))))
(assert
 (let ((?x39667 (* l_0_15_29 l_0_15_29)))
 (let ((?x39633 (- (+ (* (- l_0_15_1) l_0_15_1) (* l_0_15_141 l_0_15_141)) (* (* 2.0 l_0_15_203) l_0_15_218))))
 (let ((?x39639 (- (- ?x39633 (* (* 2.0 l_0_15_204) l_0_15_219)) (* (* 2.0 l_0_15_205) l_0_15_220))))
 (let ((?x39645 (- (- ?x39639 (* (* 2.0 l_0_15_206) l_0_15_221)) (* (* 2.0 l_0_15_231) l_0_15_246))))
 (let ((?x39651 (- (- ?x39645 (* (* 2.0 l_0_15_232) l_0_15_247)) (* (* 2.0 l_0_15_233) l_0_15_248))))
 (let ((?x39657 (- (- ?x39651 (* (* 2.0 l_0_15_234) l_0_15_249)) (* (* 2.0 l_0_15_259) l_0_15_274))))
 (let ((?x39663 (- (- ?x39657 (* (* 2.0 l_0_15_260) l_0_15_275)) (* (* 2.0 l_0_15_261) l_0_15_276))))
 (= (+ (- ?x39663 (* (* 2.0 l_0_15_262) l_0_15_277)) ?x39667) 0.0)))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x39717 (* ?x39716 l_0_15_91)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x39714 (* ?x39713 l_0_15_63)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39711 (* ?x39710 l_0_15_30)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39708 (* ?x39707 l_0_15_142)))
 (let ((?x39718 (+ (- (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_2) ?x39708) ?x39711) ?x39714) ?x39717)))
 (= ?x39718 0.0)))))))))))
(assert
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x39772 (* ?x39771 l_0_15_53)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x39769 (* ?x39768 l_0_15_52)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x39766 (* ?x39765 l_0_15_51)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x39763 (* ?x39762 l_0_15_50)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39760 (* ?x39710 l_0_15_32)))
 (let ((?x39757 (* 2.0 l_0_15_24)))
 (let ((?x39758 (* ?x39757 l_0_15_9)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x39755 (* ?x39754 l_0_15_8)))
 (let ((?x39751 (* 2.0 l_0_15_22)))
 (let ((?x39752 (* ?x39751 l_0_15_7)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39737 (* ?x39707 l_0_15_144)))
 (let ((?x39736 (+ (* (* (- 2.0) l_0_15_1) l_0_15_4) (* (* 2.0 l_0_15_10) l_0_15_25))))
 (let ((?x39744 (+ (+ (+ ?x39736 ?x39737) (* (* 4.0 l_0_15_175) l_0_15_190)) (* (* 4.0 l_0_15_176) l_0_15_191))))
 (let ((?x39750 (+ (+ ?x39744 (* (* 4.0 l_0_15_177) l_0_15_192)) (* (* 4.0 l_0_15_178) l_0_15_193))))
 (let ((?x39770 (- (- (- (+ (+ (+ (+ ?x39750 ?x39752) ?x39755) ?x39758) ?x39760) ?x39763) ?x39766) ?x39769)))
 (= (- ?x39770 ?x39772) 0.0))))))))))))))))))))))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39823 (* ?x39710 l_0_15_35)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39821 (* ?x39707 l_0_15_147)))
 (= (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_7) ?x39821) ?x39823) 0.0))))))
(assert
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x39897 (* ?x39896 l_0_15_81)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x39894 (* ?x39893 l_0_15_80)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x39891 (* ?x39890 l_0_15_79)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x39888 (* ?x39887 l_0_15_78)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39885 (* ?x39710 l_0_15_39)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x39871 (* ?x39870 l_0_15_165)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x39868 (* ?x39867 l_0_15_164)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x39865 (* ?x39864 l_0_15_163)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x39862 (* ?x39861 l_0_15_162)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39859 (* ?x39707 l_0_15_151)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x39845 (* ?x39844 l_0_15_94)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x39842 (* ?x39841 l_0_15_93)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x39839 (* ?x39838 l_0_15_92)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x39831 (* ?x39829 l_0_15_91)))
 (let ((?x39846 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_11) ?x39831) ?x39839) ?x39842) ?x39845)))
 (let ((?x39852 (- (- ?x39846 (* (* 2.0 l_0_15_119) l_0_15_134)) (* (* 2.0 l_0_15_120) l_0_15_135))))
 (let ((?x39858 (- (- ?x39852 (* (* 2.0 l_0_15_121) l_0_15_136)) (* (* 2.0 l_0_15_122) l_0_15_137))))
 (let ((?x39875 (- (- (- (- (- (+ ?x39858 ?x39859) ?x39862) ?x39865) ?x39868) ?x39871) (* (* 2.0 l_0_15_175) l_0_15_190))))
 (let ((?x39881 (- (- ?x39875 (* (* 2.0 l_0_15_176) l_0_15_191)) (* (* 2.0 l_0_15_177) l_0_15_192))))
 (let ((?x39892 (- (- (+ (- ?x39881 (* (* 2.0 l_0_15_178) l_0_15_193)) ?x39885) ?x39888) ?x39891)))
 (= (- (- ?x39892 ?x39894) ?x39897) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x39897 (* ?x39896 l_0_15_81)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x39894 (* ?x39893 l_0_15_80)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x39891 (* ?x39890 l_0_15_79)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x39888 (* ?x39887 l_0_15_78)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39975 (* ?x39710 l_0_15_44)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39973 (* ?x39707 l_0_15_156)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x39845 (* ?x39844 l_0_15_94)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x39842 (* ?x39841 l_0_15_93)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x39839 (* ?x39838 l_0_15_92)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x39831 (* ?x39829 l_0_15_91)))
 (let ((?x39972 (- (- (- (- (* (* (- 2.0) l_0_15_1) l_0_15_16) ?x39831) ?x39839) ?x39842) ?x39845)))
 (= (+ (+ (+ (+ (+ (+ ?x39972 ?x39973) ?x39975) ?x39888) ?x39891) ?x39894) ?x39897) 0.0)))))))))))))))))))))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39990 (* ?x39710 l_0_15_50)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39988 (* ?x39707 l_0_15_162)))
 (= (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_22) ?x39988) ?x39990) 0.0))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x40022 (* ?x40021 l_0_15_92)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x40019 (* ?x40018 l_0_15_91)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x40016 (* ?x40015 l_0_15_64)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x40013 (* ?x40012 l_0_15_63)))
 (let ((?x40010 (* l_0_15_31 l_0_15_31)))
 (let ((?x40008 (* l_0_15_30 l_0_15_30)))
 (let ((?x40006 (* l_0_15_3 l_0_15_3)))
 (let ((?x39999 (* l_0_15_2 l_0_15_2)))
 (let ((?x40005 (- (+ (* l_0_15_142 l_0_15_142) (* l_0_15_143 l_0_15_143)) ?x39999)))
 (let ((?x40023 (+ (+ (- (- (+ (+ (- ?x40005 ?x40006) ?x40008) ?x40010) ?x40013) ?x40016) ?x40019) ?x40022)))
 (= ?x40023 0.0))))))))))))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x40064 (* ?x40063 l_0_15_93)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x40061 (* ?x40060 l_0_15_92)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x40058 (* ?x40057 l_0_15_91)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x40055 (* ?x40054 l_0_15_65)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x40052 (* ?x40051 l_0_15_64)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x40049 (* ?x40048 l_0_15_63)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40046 (* ?x40045 l_0_15_33)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40043 (* ?x40042 l_0_15_32)))
 (let ((?x40039 (* 2.0 l_0_15_3)))
 (let ((?x40040 (* ?x40039 l_0_15_5)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40037 (* ?x18952 l_0_15_4)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x18955 (* ?x18996 l_0_15_145)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x30147 (* ?x30135 l_0_15_144)))
 (let ((?x40053 (- (- (+ (+ (- (- (+ ?x30147 ?x18955) ?x40037) ?x40040) ?x40043) ?x40046) ?x40049) ?x40052)))
 (= (+ (+ (+ (- ?x40053 ?x40055) ?x40058) ?x40061) ?x40064) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x40124 (* l_0_15_94 l_0_15_94)))
 (let ((?x40122 (* l_0_15_93 l_0_15_93)))
 (let ((?x40120 (* l_0_15_92 l_0_15_92)))
 (let ((?x40118 (* l_0_15_91 l_0_15_91)))
 (let ((?x40116 (* l_0_15_66 l_0_15_66)))
 (let ((?x40114 (* l_0_15_65 l_0_15_65)))
 (let ((?x40112 (* l_0_15_64 l_0_15_64)))
 (let ((?x40110 (* l_0_15_63 l_0_15_63)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40108 (* ?x40045 l_0_15_36)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40106 (* ?x40042 l_0_15_35)))
 (let ((?x40039 (* 2.0 l_0_15_3)))
 (let ((?x40104 (* ?x40039 l_0_15_8)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40093 (* ?x18952 l_0_15_7)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x19099 (* ?x18996 l_0_15_148)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x19107 (* ?x30135 l_0_15_147)))
 (let ((?x40113 (- (- (+ (+ (- (- (+ ?x19107 ?x19099) ?x40093) ?x40104) ?x40106) ?x40108) ?x40110) ?x40112)))
 (= (+ (+ (+ (+ (- (- ?x40113 ?x40114) ?x40116) ?x40118) ?x40120) ?x40122) ?x40124) 0.0)))))))))))))))))))))))
(assert
 (let ((?x40182 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40179 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40176 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40173 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x40170 (* ?x39896 l_0_15_70)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x40168 (* ?x39893 l_0_15_69)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x40166 (* ?x39890 l_0_15_68)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x40164 (* ?x39887 l_0_15_67)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40162 (* ?x40045 l_0_15_40)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40160 (* ?x40042 l_0_15_39)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40158 (* ?x18996 l_0_15_152)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40156 (* ?x30135 l_0_15_151)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40154 (* ?x40153 l_0_15_3)))
 (let ((?x40161 (+ (+ (+ (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x40154) ?x40156) ?x40158) ?x40160)))
 (let ((?x40177 (+ (+ (- (- (- (- (+ ?x40161 ?x40162) ?x40164) ?x40166) ?x40168) ?x40170) ?x40173) ?x40176)))
 (= (+ (+ ?x40177 ?x40179) ?x40182) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x40256 (* ?x39896 l_0_15_75)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x40254 (* ?x39893 l_0_15_74)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x40252 (* ?x39890 l_0_15_73)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x40250 (* ?x39887 l_0_15_72)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40248 (* ?x40045 l_0_15_45)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40246 (* ?x40042 l_0_15_44)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40244 (* ?x40243 l_0_15_3)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40241 (* ?x40240 l_0_15_2)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40238 (* ?x18996 l_0_15_157)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40236 (* ?x30135 l_0_15_156)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x40234 (* ?x40233 l_0_15_94)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x40231 (* ?x40230 l_0_15_93)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x40217 (* ?x40215 l_0_15_92)))
 (let ((?x40235 (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_91) ?x40217) ?x40231) ?x40234)))
 (let ((?x40251 (- (+ (+ (- (- (+ (+ ?x40235 ?x40236) ?x40238) ?x40241) ?x40244) ?x40246) ?x40248) ?x40250)))
 (= (- (- (- ?x40251 ?x40252) ?x40254) ?x40256) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x39897 (* ?x39896 l_0_15_81)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x39894 (* ?x39893 l_0_15_80)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x39891 (* ?x39890 l_0_15_79)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x39888 (* ?x39887 l_0_15_78)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40306 (* ?x40045 l_0_15_51)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40304 (* ?x40042 l_0_15_50)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x40302 (* ?x39754 l_0_15_3)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40300 (* ?x18952 l_0_15_22)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40298 (* ?x18996 l_0_15_163)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40296 (* ?x30135 l_0_15_162)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x39845 (* ?x39844 l_0_15_94)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x39842 (* ?x39841 l_0_15_93)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x39839 (* ?x39838 l_0_15_92)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x39831 (* ?x39829 l_0_15_91)))
 (let ((?x40303 (- (- (+ (+ (+ (+ (+ ?x39831 ?x39839) ?x39842) ?x39845) ?x40296) ?x40298) ?x40300) ?x40302)))
 (= (- (- (- (- (+ (+ ?x40303 ?x40304) ?x40306) ?x39888) ?x39891) ?x39894) ?x39897) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40358 (* l_0_15_6 l_0_15_6)))
 (let ((?x40356 (* l_0_15_5 l_0_15_5)))
 (let ((?x40354 (* l_0_15_4 l_0_15_4)))
 (let ((?x40352 (* l_0_15_34 l_0_15_34)))
 (let ((?x40350 (* l_0_15_33 l_0_15_33)))
 (let ((?x40348 (* l_0_15_32 l_0_15_32)))
 (let ((?x40346 (* l_0_15_146 l_0_15_146)))
 (let ((?x40347 (+ (+ (* l_0_15_144 l_0_15_144) (* l_0_15_145 l_0_15_145)) ?x40346)))
 (= (- (- (- (+ (+ (+ ?x40347 ?x40348) ?x40350) ?x40352) ?x40354) ?x40356) ?x40358) 0.0))))))))))
(assert
 (let ((?x40392 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x40389 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x40386 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40383 (* ?x40382 l_0_15_37)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40380 (* ?x40379 l_0_15_36)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40377 (* ?x40376 l_0_15_35)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40374 (* ?x40373 l_0_15_149)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40371 (* ?x40370 l_0_15_148)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x40369 (* ?x40368 l_0_15_147)))
 (let ((?x40390 (- (- (+ (+ (+ (+ (+ ?x40369 ?x40371) ?x40374) ?x40377) ?x40380) ?x40383) ?x40386) ?x40389)))
 (= (- ?x40390 ?x40392) 0.0))))))))))))))))))
(assert
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40424 (* ?x40382 l_0_15_41)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40422 (* ?x40379 l_0_15_40)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40420 (* ?x40376 l_0_15_39)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40418 (* ?x40373 l_0_15_153)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40416 (* ?x40370 l_0_15_152)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x18266 (* ?x40368 l_0_15_151)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x19466 (* ?x30248 l_0_15_6)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x19457 (* ?x40153 l_0_15_5)))
 (let ((?x40417 (+ (+ (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x19457) ?x19466) ?x18266) ?x40416)))
 (= (+ (+ (+ (+ ?x40417 ?x40418) ?x40420) ?x40422) ?x40424) 0.0)))))))))))))))))))
(assert
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40459 (* ?x40382 l_0_15_46)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40457 (* ?x40379 l_0_15_45)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40455 (* ?x40376 l_0_15_44)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40453 (* ?x40452 l_0_15_6)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40450 (* ?x40243 l_0_15_5)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40438 (* ?x40240 l_0_15_4)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40439 (* ?x40373 l_0_15_158)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x30330 (* ?x40370 l_0_15_157)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x19620 (* ?x40368 l_0_15_156)))
 (let ((?x40458 (+ (+ (- (- (- (+ (+ ?x19620 ?x30330) ?x40439) ?x40438) ?x40450) ?x40453) ?x40455) ?x40457)))
 (= (+ ?x40458 ?x40459) 0.0)))))))))))))))))))))
(assert
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40507 (* ?x40382 l_0_15_52)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40505 (* ?x40379 l_0_15_51)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40503 (* ?x40376 l_0_15_50)))
 (let ((?x39757 (* 2.0 l_0_15_24)))
 (let ((?x40501 (* ?x39757 l_0_15_6)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x40499 (* ?x39754 l_0_15_5)))
 (let ((?x39751 (* 2.0 l_0_15_22)))
 (let ((?x40497 (* ?x39751 l_0_15_4)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40487 (* ?x40373 l_0_15_164)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40484 (* ?x40370 l_0_15_163)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x40482 (* ?x40368 l_0_15_162)))
 (let ((?x40506 (+ (+ (- (- (- (+ (+ ?x40482 ?x40484) ?x40487) ?x40497) ?x40499) ?x40501) ?x40503) ?x40505)))
 (= (+ ?x40506 ?x40507) 0.0)))))))))))))))))))))
(assert
 (let ((?x40559 (* l_0_15_9 l_0_15_9)))
 (let ((?x40557 (* l_0_15_8 l_0_15_8)))
 (let ((?x40555 (* l_0_15_7 l_0_15_7)))
 (let ((?x40553 (* l_0_15_38 l_0_15_38)))
 (let ((?x40551 (* l_0_15_37 l_0_15_37)))
 (let ((?x40549 (* l_0_15_36 l_0_15_36)))
 (let ((?x40547 (* l_0_15_35 l_0_15_35)))
 (let ((?x40545 (* l_0_15_150 l_0_15_150)))
 (let ((?x40543 (* l_0_15_149 l_0_15_149)))
 (let ((?x40541 (* l_0_15_148 l_0_15_148)))
 (let ((?x40542 (+ (+ (* (- l_0_15_10) l_0_15_10) (* l_0_15_147 l_0_15_147)) ?x40541)))
 (let ((?x40556 (- (+ (+ (+ (+ (+ (+ ?x40542 ?x40543) ?x40545) ?x40547) ?x40549) ?x40551) ?x40553) ?x40555)))
 (= (- (- ?x40556 ?x40557) ?x40559) 0.0))))))))))))))
(assert
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x40596 (* ?x39771 l_0_15_42)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x40594 (* ?x39768 l_0_15_41)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x40592 (* ?x39765 l_0_15_40)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x40590 (* ?x39762 l_0_15_39)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x40588 (* ?x39870 l_0_15_154)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x40586 (* ?x39867 l_0_15_153)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x40584 (* ?x39864 l_0_15_152)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x40582 (* ?x39861 l_0_15_151)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40580 (* ?x30248 l_0_15_9)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40578 (* ?x40153 l_0_15_8)))
 (let ((?x40575 (* 2.0 l_0_15_11)))
 (let ((?x40576 (* ?x40575 l_0_15_7)))
 (let ((?x40583 (+ (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x40576) ?x40578) ?x40580) ?x40582)))
 (let ((?x40597 (+ (+ (+ (+ (+ (+ (+ ?x40583 ?x40584) ?x40586) ?x40588) ?x40590) ?x40592) ?x40594) ?x40596)))
 (= ?x40597 0.0))))))))))))))))))))))))))
(assert
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x40644 (* ?x39771 l_0_15_47)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x40642 (* ?x39768 l_0_15_46)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x40640 (* ?x39765 l_0_15_45)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x40638 (* ?x39762 l_0_15_44)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40636 (* ?x40452 l_0_15_9)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40634 (* ?x40243 l_0_15_8)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40632 (* ?x40240 l_0_15_7)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x40618 (* ?x39870 l_0_15_159)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x40613 (* ?x39867 l_0_15_158)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x40614 (* ?x39864 l_0_15_157)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x19764 (* ?x39861 l_0_15_156)))
 (let ((?x40620 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_10) l_0_15_19) ?x19764) ?x40614) ?x40613) ?x40618)))
 (let ((?x40645 (+ (+ (+ (+ (- (- (- ?x40620 ?x40632) ?x40634) ?x40636) ?x40638) ?x40640) ?x40642) ?x40644)))
 (= ?x40645 0.0))))))))))))))))))))))))))
(assert
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x39772 (* ?x39771 l_0_15_53)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x39769 (* ?x39768 l_0_15_52)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x39766 (* ?x39765 l_0_15_51)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x39763 (* ?x39762 l_0_15_50)))
 (let ((?x39757 (* 2.0 l_0_15_24)))
 (let ((?x39758 (* ?x39757 l_0_15_9)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x39755 (* ?x39754 l_0_15_8)))
 (let ((?x39751 (* 2.0 l_0_15_22)))
 (let ((?x39752 (* ?x39751 l_0_15_7)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x39871 (* ?x39870 l_0_15_165)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x39868 (* ?x39867 l_0_15_164)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x39865 (* ?x39864 l_0_15_163)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x39862 (* ?x39861 l_0_15_162)))
 (let ((?x40677 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_10) l_0_15_25) ?x39862) ?x39865) ?x39868) ?x39871)))
 (let ((?x40695 (+ (+ (+ (+ (- (- (- ?x40677 ?x39752) ?x39755) ?x39758) ?x39763) ?x39766) ?x39769) ?x39772)))
 (= ?x40695 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40709 (* l_0_15_43 l_0_15_43)))
 (let ((?x40707 (* l_0_15_42 l_0_15_42)))
 (let ((?x40705 (* l_0_15_41 l_0_15_41)))
 (let ((?x40703 (* l_0_15_40 l_0_15_40)))
 (let ((?x40701 (* l_0_15_39 l_0_15_39)))
 (let ((?x30359 (* l_0_15_155 l_0_15_155)))
 (let ((?x19793 (* l_0_15_154 l_0_15_154)))
 (let ((?x30358 (* l_0_15_153 l_0_15_153)))
 (let ((?x30353 (* l_0_15_152 l_0_15_152)))
 (let ((?x30349 (* l_0_15_151 l_0_15_151)))
 (let ((?x19729 (* l_0_15_15 l_0_15_15)))
 (let ((?x19717 (* l_0_15_14 l_0_15_14)))
 (let ((?x30338 (* l_0_15_13 l_0_15_13)))
 (let ((?x30341 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x30338)))
 (let ((?x30360 (+ (+ (+ (+ (+ (- (- ?x30341 ?x19717) ?x19729) ?x30349) ?x30353) ?x30358) ?x19793) ?x30359)))
 (= (+ (+ (+ (+ (+ ?x30360 ?x40701) ?x40703) ?x40705) ?x40707) ?x40709) 0.0)))))))))))))))))
(assert
 (let ((?x40770 (* 2.0 l_0_15_43)))
 (let ((?x40771 (* ?x40770 l_0_15_48)))
 (let ((?x40767 (* 2.0 l_0_15_42)))
 (let ((?x40768 (* ?x40767 l_0_15_47)))
 (let ((?x40764 (* 2.0 l_0_15_41)))
 (let ((?x40765 (* ?x40764 l_0_15_46)))
 (let ((?x40761 (* 2.0 l_0_15_40)))
 (let ((?x40762 (* ?x40761 l_0_15_45)))
 (let ((?x40758 (* 2.0 l_0_15_39)))
 (let ((?x40759 (* ?x40758 l_0_15_44)))
 (let ((?x40755 (* 2.0 l_0_15_155)))
 (let ((?x40756 (* ?x40755 l_0_15_160)))
 (let ((?x40752 (* 2.0 l_0_15_154)))
 (let ((?x40753 (* ?x40752 l_0_15_159)))
 (let ((?x40749 (* 2.0 l_0_15_153)))
 (let ((?x40750 (* ?x40749 l_0_15_158)))
 (let ((?x40746 (* 2.0 l_0_15_152)))
 (let ((?x40747 (* ?x40746 l_0_15_157)))
 (let ((?x40743 (* 2.0 l_0_15_151)))
 (let ((?x40744 (* ?x40743 l_0_15_156)))
 (let ((?x40740 (* 2.0 l_0_15_15)))
 (let ((?x40741 (* ?x40740 l_0_15_20)))
 (let ((?x40737 (* 2.0 l_0_15_14)))
 (let ((?x40738 (* ?x40737 l_0_15_19)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40735 (* ?x30248 l_0_15_18)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40733 (* ?x40153 l_0_15_17)))
 (let ((?x40742 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_16) ?x40733) ?x40735) ?x40738) ?x40741)))
 (let ((?x40763 (+ (+ (+ (+ (+ (+ (+ ?x40742 ?x40744) ?x40747) ?x40750) ?x40753) ?x40756) ?x40759) ?x40762)))
 (= (+ (+ (+ ?x40763 ?x40765) ?x40768) ?x40771) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x40770 (* 2.0 l_0_15_43)))
 (let ((?x40844 (* ?x40770 l_0_15_54)))
 (let ((?x40767 (* 2.0 l_0_15_42)))
 (let ((?x40842 (* ?x40767 l_0_15_53)))
 (let ((?x40764 (* 2.0 l_0_15_41)))
 (let ((?x40840 (* ?x40764 l_0_15_52)))
 (let ((?x40761 (* 2.0 l_0_15_40)))
 (let ((?x40838 (* ?x40761 l_0_15_51)))
 (let ((?x40758 (* 2.0 l_0_15_39)))
 (let ((?x40836 (* ?x40758 l_0_15_50)))
 (let ((?x40755 (* 2.0 l_0_15_155)))
 (let ((?x40834 (* ?x40755 l_0_15_166)))
 (let ((?x40752 (* 2.0 l_0_15_154)))
 (let ((?x40832 (* ?x40752 l_0_15_165)))
 (let ((?x40749 (* 2.0 l_0_15_153)))
 (let ((?x40830 (* ?x40749 l_0_15_164)))
 (let ((?x40746 (* 2.0 l_0_15_152)))
 (let ((?x40828 (* ?x40746 l_0_15_163)))
 (let ((?x40743 (* 2.0 l_0_15_151)))
 (let ((?x40813 (* ?x40743 l_0_15_162)))
 (let ((?x40740 (* 2.0 l_0_15_15)))
 (let ((?x40809 (* ?x40740 l_0_15_26)))
 (let ((?x40737 (* 2.0 l_0_15_14)))
 (let ((?x40805 (* ?x40737 l_0_15_25)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40801 (* ?x30248 l_0_15_24)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40797 (* ?x40153 l_0_15_23)))
 (let ((?x40811 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_22) ?x40797) ?x40801) ?x40805) ?x40809)))
 (let ((?x40839 (+ (+ (+ (+ (+ (+ (+ ?x40811 ?x40813) ?x40828) ?x40830) ?x40832) ?x40834) ?x40836) ?x40838)))
 (= (+ (+ (+ ?x40839 ?x40840) ?x40842) ?x40844) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x40911 (* l_0_15_49 l_0_15_49)))
 (let ((?x40909 (* l_0_15_48 l_0_15_48)))
 (let ((?x40907 (* l_0_15_47 l_0_15_47)))
 (let ((?x40905 (* l_0_15_46 l_0_15_46)))
 (let ((?x40903 (* l_0_15_45 l_0_15_45)))
 (let ((?x40901 (* l_0_15_44 l_0_15_44)))
 (let ((?x40899 (* l_0_15_21 l_0_15_21)))
 (let ((?x40897 (* l_0_15_20 l_0_15_20)))
 (let ((?x40895 (* l_0_15_19 l_0_15_19)))
 (let ((?x40893 (* l_0_15_18 l_0_15_18)))
 (let ((?x40891 (* l_0_15_17 l_0_15_17)))
 (let ((?x40889 (* l_0_15_161 l_0_15_161)))
 (let ((?x40875 (* l_0_15_160 l_0_15_160)))
 (let ((?x40871 (* l_0_15_16 l_0_15_16)))
 (let ((?x40866 (* l_0_15_159 l_0_15_159)))
 (let ((?x40864 (* l_0_15_158 l_0_15_158)))
 (let ((?x40869 (+ (+ (* l_0_15_156 l_0_15_156) (* l_0_15_157 l_0_15_157)) ?x40864)))
 (let ((?x40896 (- (- (- (+ (+ (- (+ ?x40869 ?x40866) ?x40871) ?x40875) ?x40889) ?x40891) ?x40893) ?x40895)))
 (let ((?x40910 (+ (+ (+ (+ (+ (- (- ?x40896 ?x40897) ?x40899) ?x40901) ?x40903) ?x40905) ?x40907) ?x40909)))
 (= (+ ?x40910 ?x40911) 0.0)))))))))))))))))))))
(assert
 (let ((?x40978 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x40975 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x40972 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x40969 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x40966 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x40963 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x40960 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x40957 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x40954 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40951 (* ?x40452 l_0_15_24)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40949 (* ?x40243 l_0_15_23)))
 (let ((?x40947 (* (* 2.0 l_0_15_161) l_0_15_167)))
 (let ((?x40944 (* (* 2.0 l_0_15_160) l_0_15_166)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40941 (* ?x40240 l_0_15_22)))
 (let ((?x40939 (* (* 2.0 l_0_15_159) l_0_15_165)))
 (let ((?x40936 (* (* 2.0 l_0_15_158) l_0_15_164)))
 (let ((?x40933 (* (* 2.0 l_0_15_157) l_0_15_163)))
 (let ((?x40931 (* (* 2.0 l_0_15_156) l_0_15_162)))
 (let ((?x40950 (- (+ (+ (- (+ (+ (+ ?x40931 ?x40933) ?x40936) ?x40939) ?x40941) ?x40944) ?x40947) ?x40949)))
 (let ((?x40970 (+ (+ (+ (- (- (- (- ?x40950 ?x40951) ?x40954) ?x40957) ?x40960) ?x40963) ?x40966) ?x40969)))
 (= (+ (+ (+ ?x40970 ?x40972) ?x40975) ?x40978) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x41053 (* l_0_15_56 l_0_15_56)))
 (let ((?x41051 (* l_0_15_55 l_0_15_55)))
 (let ((?x41049 (* l_0_15_54 l_0_15_54)))
 (let ((?x41047 (* l_0_15_53 l_0_15_53)))
 (let ((?x41045 (* l_0_15_52 l_0_15_52)))
 (let ((?x41043 (* l_0_15_51 l_0_15_51)))
 (let ((?x41041 (* l_0_15_50 l_0_15_50)))
 (let ((?x41039 (* l_0_15_28 l_0_15_28)))
 (let ((?x41037 (* l_0_15_27 l_0_15_27)))
 (let ((?x41035 (* l_0_15_26 l_0_15_26)))
 (let ((?x41033 (* l_0_15_25 l_0_15_25)))
 (let ((?x41031 (* l_0_15_24 l_0_15_24)))
 (let ((?x41029 (* l_0_15_23 l_0_15_23)))
 (let ((?x41027 (* l_0_15_22 l_0_15_22)))
 (let ((?x41025 (* l_0_15_168 l_0_15_168)))
 (let ((?x41023 (* l_0_15_167 l_0_15_167)))
 (let ((?x41021 (* l_0_15_166 l_0_15_166)))
 (let ((?x19975 (* l_0_15_165 l_0_15_165)))
 (let ((?x19954 (* l_0_15_164 l_0_15_164)))
 (let ((?x29705 (+ (+ (* l_0_15_162 l_0_15_162) (* l_0_15_163 l_0_15_163)) ?x19954)))
 (let ((?x41032 (- (- (- (+ (+ (+ (+ ?x29705 ?x19975) ?x41021) ?x41023) ?x41025) ?x41027) ?x41029) ?x41031)))
 (let ((?x41046 (+ (+ (+ (- (- (- (- ?x41032 ?x41033) ?x41035) ?x41037) ?x41039) ?x41041) ?x41043) ?x41045)))
 (= (+ (+ (+ (+ ?x41046 ?x41047) ?x41049) ?x41051) ?x41053) 0.0))))))))))))))))))))))))
(assert
 (let ((?x39667 (* l_0_15_29 l_0_15_29)))
 (let ((?x41074 (- (+ (* l_0_15_1 l_0_15_1) (* 2.0 (* l_0_15_169 l_0_15_169))) (* (* 2.0 l_0_15_197) l_0_15_200))))
 (let ((?x41078 (- (- ?x41074 (* (* 2.0 l_0_15_225) l_0_15_228)) (* (* 2.0 l_0_15_253) l_0_15_256))))
 (= (- ?x41078 ?x39667) 0.0)))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39711 (* ?x39710 l_0_15_30)))
 (let ((?x41098 (+ (* (* 2.0 l_0_15_1) l_0_15_2) (* (* 4.0 l_0_15_169) l_0_15_170))))
 (let ((?x41103 (- (- ?x41098 (* (* 2.0 l_0_15_198) l_0_15_200)) (* (* 2.0 l_0_15_199) l_0_15_201))))
 (let ((?x41107 (- (- ?x41103 (* (* 2.0 l_0_15_226) l_0_15_228)) (* (* 2.0 l_0_15_227) l_0_15_229))))
 (let ((?x41111 (- (- ?x41107 (* (* 2.0 l_0_15_254) l_0_15_256)) (* (* 2.0 l_0_15_255) l_0_15_257))))
 (= (- ?x41111 ?x39711) 0.0))))))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39760 (* ?x39710 l_0_15_32)))
 (let ((?x41145 (* l_0_15_258 l_0_15_258)))
 (let ((?x41143 (* l_0_15_257 l_0_15_257)))
 (let ((?x41141 (* l_0_15_256 l_0_15_256)))
 (let ((?x41139 (* l_0_15_230 l_0_15_230)))
 (let ((?x41137 (* l_0_15_229 l_0_15_229)))
 (let ((?x41135 (* l_0_15_228 l_0_15_228)))
 (let ((?x41133 (* l_0_15_202 l_0_15_202)))
 (let ((?x41131 (* l_0_15_201 l_0_15_201)))
 (let ((?x41129 (* l_0_15_200 l_0_15_200)))
 (let ((?x41128 (+ (* (* 2.0 l_0_15_1) l_0_15_4) (* (* 4.0 l_0_15_169) l_0_15_172))))
 (let ((?x41142 (- (- (- (- (- (- (- ?x41128 ?x41129) ?x41131) ?x41133) ?x41135) ?x41137) ?x41139) ?x41141)))
 (= (- (- (- ?x41142 ?x41143) ?x41145) ?x39760) 0.0)))))))))))))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39823 (* ?x39710 l_0_15_35)))
 (let ((?x20150 (+ (* (* 2.0 l_0_15_1) l_0_15_7) (* (* 4.0 l_0_15_169) l_0_15_175))))
 (let ((?x41165 (- (- ?x20150 (* (* 2.0 l_0_15_200) l_0_15_203)) (* (* 2.0 l_0_15_201) l_0_15_204))))
 (let ((?x41171 (- (- ?x41165 (* (* 2.0 l_0_15_202) l_0_15_205)) (* (* 2.0 l_0_15_228) l_0_15_231))))
 (let ((?x41177 (- (- ?x41171 (* (* 2.0 l_0_15_229) l_0_15_232)) (* (* 2.0 l_0_15_230) l_0_15_233))))
 (let ((?x41183 (- (- ?x41177 (* (* 2.0 l_0_15_256) l_0_15_259)) (* (* 2.0 l_0_15_257) l_0_15_260))))
 (= (- (- ?x41183 (* (* 2.0 l_0_15_258) l_0_15_261)) ?x39823) 0.0)))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x41260 (* ?x39716 l_0_15_88)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x41258 (* ?x39713 l_0_15_60)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39885 (* ?x39710 l_0_15_39)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39737 (* ?x39707 l_0_15_144)))
 (let ((?x41232 (- (* (* 2.0 l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_113) l_0_15_116))))
 (let ((?x41238 (+ (- (- ?x41232 ?x39737) (* (* 2.0 l_0_15_169) l_0_15_172)) (* (* 4.0 l_0_15_169) l_0_15_179))))
 (let ((?x41242 (- (- ?x41238 (* (* 2.0 l_0_15_200) l_0_15_207)) (* (* 2.0 l_0_15_201) l_0_15_208))))
 (let ((?x41246 (- (- ?x41242 (* (* 2.0 l_0_15_202) l_0_15_209)) (* (* 2.0 l_0_15_228) l_0_15_235))))
 (let ((?x41250 (- (- ?x41246 (* (* 2.0 l_0_15_229) l_0_15_236)) (* (* 2.0 l_0_15_230) l_0_15_237))))
 (let ((?x41254 (- (- ?x41250 (* (* 2.0 l_0_15_256) l_0_15_263)) (* (* 2.0 l_0_15_257) l_0_15_264))))
 (let ((?x41261 (+ (- (- (- ?x41254 (* (* 2.0 l_0_15_258) l_0_15_265)) ?x39885) ?x41258) ?x41260)))
 (= ?x41261 0.0)))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x41260 (* ?x39716 l_0_15_88)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x41258 (* ?x39713 l_0_15_60)))
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39975 (* ?x39710 l_0_15_44)))
 (let ((?x41285 (+ (* (* 2.0 l_0_15_1) l_0_15_16) (* (* 4.0 l_0_15_169) l_0_15_184))))
 (let ((?x41289 (- (- ?x41285 (* (* 2.0 l_0_15_200) l_0_15_212)) (* (* 2.0 l_0_15_201) l_0_15_213))))
 (let ((?x41293 (- (- ?x41289 (* (* 2.0 l_0_15_202) l_0_15_214)) (* (* 2.0 l_0_15_228) l_0_15_240))))
 (let ((?x41297 (- (- ?x41293 (* (* 2.0 l_0_15_229) l_0_15_241)) (* (* 2.0 l_0_15_230) l_0_15_242))))
 (let ((?x41301 (- (- ?x41297 (* (* 2.0 l_0_15_256) l_0_15_268)) (* (* 2.0 l_0_15_257) l_0_15_269))))
 (let ((?x41306 (- (+ (- (- ?x41301 (* (* 2.0 l_0_15_258) l_0_15_270)) ?x39975) ?x41258) ?x41260)))
 (= ?x41306 0.0))))))))))))))
(assert
 (let ((?x39710 (* 2.0 l_0_15_29)))
 (let ((?x39990 (* ?x39710 l_0_15_50)))
 (let ((?x41342 (+ (* (* 2.0 l_0_15_1) l_0_15_22) (* (* 4.0 l_0_15_169) l_0_15_190))))
 (let ((?x41346 (- (- ?x41342 (* (* 2.0 l_0_15_200) l_0_15_218)) (* (* 2.0 l_0_15_201) l_0_15_219))))
 (let ((?x41350 (- (- ?x41346 (* (* 2.0 l_0_15_202) l_0_15_220)) (* (* 2.0 l_0_15_228) l_0_15_246))))
 (let ((?x41354 (- (- ?x41350 (* (* 2.0 l_0_15_229) l_0_15_247)) (* (* 2.0 l_0_15_230) l_0_15_248))))
 (let ((?x41358 (- (- ?x41354 (* (* 2.0 l_0_15_256) l_0_15_274)) (* (* 2.0 l_0_15_257) l_0_15_275))))
 (= (- (- ?x41358 (* (* 2.0 l_0_15_258) l_0_15_276)) ?x39990) 0.0)))))))))
(assert
 (let ((?x40010 (* l_0_15_31 l_0_15_31)))
 (let ((?x40008 (* l_0_15_30 l_0_15_30)))
 (let ((?x40006 (* l_0_15_3 l_0_15_3)))
 (let ((?x39999 (* l_0_15_2 l_0_15_2)))
 (let ((?x41405 (* l_0_15_171 l_0_15_171)))
 (let ((?x41406 (* 2.0 ?x41405)))
 (let ((?x41403 (* l_0_15_170 l_0_15_170)))
 (let ((?x41404 (* 2.0 ?x41403)))
 (= (- (- (+ (+ (+ ?x41404 ?x41406) ?x39999) ?x40006) ?x40008) ?x40010) 0.0))))))))))
(assert
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40046 (* ?x40045 l_0_15_33)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40043 (* ?x40042 l_0_15_32)))
 (let ((?x40039 (* 2.0 l_0_15_3)))
 (let ((?x40040 (* ?x40039 l_0_15_5)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40037 (* ?x18952 l_0_15_4)))
 (let ((?x41419 (+ (* (* 4.0 l_0_15_170) l_0_15_172) (* (* 4.0 l_0_15_171) l_0_15_173))))
 (= (- (- (+ (+ ?x41419 ?x40037) ?x40040) ?x40043) ?x40046) 0.0)))))))))))
(assert
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40108 (* ?x40045 l_0_15_36)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40106 (* ?x40042 l_0_15_35)))
 (let ((?x40039 (* 2.0 l_0_15_3)))
 (let ((?x40104 (* ?x40039 l_0_15_8)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40093 (* ?x18952 l_0_15_7)))
 (let ((?x41433 (+ (* (* 4.0 l_0_15_170) l_0_15_175) (* (* 4.0 l_0_15_171) l_0_15_176))))
 (= (- (- (+ (+ ?x41433 ?x40093) ?x40104) ?x40106) ?x40108) 0.0)))))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x41470 (* ?x40021 l_0_15_89)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x41468 (* ?x40018 l_0_15_88)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x41466 (* ?x40015 l_0_15_61)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x41464 (* ?x40012 l_0_15_60)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40162 (* ?x40045 l_0_15_40)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40160 (* ?x40042 l_0_15_39)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x18955 (* ?x18996 l_0_15_145)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x30147 (* ?x30135 l_0_15_144)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40154 (* ?x40153 l_0_15_3)))
 (let ((?x41445 (- (* (* 2.0 l_0_15_11) l_0_15_2) (* (* 2.0 l_0_15_114) l_0_15_116))))
 (let ((?x41451 (- (- (+ (- ?x41445 (* (* 2.0 l_0_15_115) l_0_15_117)) ?x40154) ?x30147) ?x18955)))
 (let ((?x41456 (+ (- ?x41451 (* (* 2.0 l_0_15_170) l_0_15_172)) (* (* 4.0 l_0_15_170) l_0_15_179))))
 (let ((?x41461 (+ (- ?x41456 (* (* 2.0 l_0_15_171) l_0_15_173)) (* (* 4.0 l_0_15_171) l_0_15_180))))
 (= (+ (+ (- (- (- (- ?x41461 ?x40160) ?x40162) ?x41464) ?x41466) ?x41468) ?x41470) 0.0))))))))))))))))))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x41470 (* ?x40021 l_0_15_89)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x41468 (* ?x40018 l_0_15_88)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x41466 (* ?x40015 l_0_15_61)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x41464 (* ?x40012 l_0_15_60)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40248 (* ?x40045 l_0_15_45)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40246 (* ?x40042 l_0_15_44)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40244 (* ?x40243 l_0_15_3)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40241 (* ?x40240 l_0_15_2)))
 (let ((?x41484 (+ (+ (+ ?x40241 ?x40244) (* (* 4.0 l_0_15_170) l_0_15_184)) (* (* 4.0 l_0_15_171) l_0_15_185))))
 (= (- (- (+ (+ (- (- ?x41484 ?x40246) ?x40248) ?x41464) ?x41466) ?x41468) ?x41470) 0.0)))))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x41260 (* ?x39716 l_0_15_88)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x41258 (* ?x39713 l_0_15_60)))
 (let ((?x40045 (* 2.0 l_0_15_31)))
 (let ((?x40306 (* ?x40045 l_0_15_51)))
 (let ((?x40042 (* 2.0 l_0_15_30)))
 (let ((?x40304 (* ?x40042 l_0_15_50)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x40302 (* ?x39754 l_0_15_3)))
 (let ((?x18952 (* 2.0 l_0_15_2)))
 (let ((?x40300 (* ?x18952 l_0_15_22)))
 (let ((?x41511 (+ (* (* 4.0 l_0_15_170) l_0_15_190) (* (* 4.0 l_0_15_171) l_0_15_191))))
 (= (+ (- (- (- (+ (+ ?x41511 ?x40300) ?x40302) ?x40304) ?x40306) ?x41258) ?x41260) 0.0)))))))))))))))
(assert
 (let ((?x40358 (* l_0_15_6 l_0_15_6)))
 (let ((?x40356 (* l_0_15_5 l_0_15_5)))
 (let ((?x40354 (* l_0_15_4 l_0_15_4)))
 (let ((?x40352 (* l_0_15_34 l_0_15_34)))
 (let ((?x40350 (* l_0_15_33 l_0_15_33)))
 (let ((?x40348 (* l_0_15_32 l_0_15_32)))
 (let ((?x41532 (* l_0_15_174 l_0_15_174)))
 (let ((?x41533 (* 2.0 ?x41532)))
 (let ((?x41529 (* l_0_15_173 l_0_15_173)))
 (let ((?x41530 (* 2.0 ?x41529)))
 (let ((?x20662 (* l_0_15_172 l_0_15_172)))
 (let ((?x41528 (* 2.0 ?x20662)))
 (let ((?x41539 (+ (+ (- (- (- (+ (+ ?x41528 ?x41530) ?x41533) ?x40348) ?x40350) ?x40352) ?x40354) ?x40356)))
 (= (+ ?x41539 ?x40358) 0.0)))))))))))))))
(assert
 (let ((?x40392 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x40389 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x40386 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40383 (* ?x40382 l_0_15_37)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40380 (* ?x40379 l_0_15_36)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40377 (* ?x40376 l_0_15_35)))
 (let ((?x41551 (+ (* (* 4.0 l_0_15_172) l_0_15_175) (* (* 4.0 l_0_15_173) l_0_15_176))))
 (let ((?x41557 (- (- (- (+ ?x41551 (* (* 4.0 l_0_15_174) l_0_15_177)) ?x40377) ?x40380) ?x40383)))
 (= (+ (+ (+ ?x41557 ?x40386) ?x40389) ?x40392) 0.0)))))))))))))
(assert
 (let ((?x41588 (* l_0_15_90 l_0_15_90)))
 (let ((?x41586 (* l_0_15_89 l_0_15_89)))
 (let ((?x41584 (* l_0_15_88 l_0_15_88)))
 (let ((?x41582 (* l_0_15_62 l_0_15_62)))
 (let ((?x41580 (* l_0_15_61 l_0_15_61)))
 (let ((?x41578 (* l_0_15_60 l_0_15_60)))
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40424 (* ?x40382 l_0_15_41)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40422 (* ?x40379 l_0_15_40)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40420 (* ?x40376 l_0_15_39)))
 (let ((?x41532 (* l_0_15_174 l_0_15_174)))
 (let ((?x41529 (* l_0_15_173 l_0_15_173)))
 (let ((?x20662 (* l_0_15_172 l_0_15_172)))
 (let ((?x40346 (* l_0_15_146 l_0_15_146)))
 (let ((?x40344 (* l_0_15_145 l_0_15_145)))
 (let ((?x40343 (* l_0_15_144 l_0_15_144)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x19466 (* ?x30248 l_0_15_6)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x19457 (* ?x40153 l_0_15_5)))
 (let ((?x30797 (* l_0_15_118 l_0_15_118)))
 (let ((?x30791 (* l_0_15_117 l_0_15_117)))
 (let ((?x30794 (- (- (* (* 2.0 l_0_15_11) l_0_15_4) (* l_0_15_116 l_0_15_116)) ?x30791)))
 (let ((?x30807 (+ (- (- (- (+ (+ (- ?x30794 ?x30797) ?x19457) ?x19466) ?x40343) ?x40344) ?x40346) (* (* 4.0 l_0_15_172) l_0_15_179))))
 (let ((?x41573 (+ (- (+ (- ?x30807 ?x20662) (* (* 4.0 l_0_15_173) l_0_15_180)) ?x41529) (* (* 4.0 l_0_15_174) l_0_15_181))))
 (let ((?x41583 (- (- (- (- (- (- (- ?x41573 ?x41532) ?x40420) ?x40422) ?x40424) ?x41578) ?x41580) ?x41582)))
 (= (+ (+ (+ ?x41583 ?x41584) ?x41586) ?x41588) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x41588 (* l_0_15_90 l_0_15_90)))
 (let ((?x41586 (* l_0_15_89 l_0_15_89)))
 (let ((?x41584 (* l_0_15_88 l_0_15_88)))
 (let ((?x41582 (* l_0_15_62 l_0_15_62)))
 (let ((?x41580 (* l_0_15_61 l_0_15_61)))
 (let ((?x41578 (* l_0_15_60 l_0_15_60)))
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40459 (* ?x40382 l_0_15_46)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40457 (* ?x40379 l_0_15_45)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40455 (* ?x40376 l_0_15_44)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40453 (* ?x40452 l_0_15_6)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40450 (* ?x40243 l_0_15_5)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40438 (* ?x40240 l_0_15_4)))
 (let ((?x41612 (+ (+ (+ ?x40438 ?x40450) (* (* 4.0 l_0_15_172) l_0_15_184)) (* (* 4.0 l_0_15_173) l_0_15_185))))
 (let ((?x41617 (- (- (+ (+ ?x41612 (* (* 4.0 l_0_15_174) l_0_15_186)) ?x40453) ?x40455) ?x40457)))
 (let ((?x41624 (- (- (- (+ (+ (+ (- ?x41617 ?x40459) ?x41578) ?x41580) ?x41582) ?x41584) ?x41586) ?x41588)))
 (= ?x41624 0.0)))))))))))))))))))))))
(assert
 (let ((?x40382 (* 2.0 l_0_15_34)))
 (let ((?x40507 (* ?x40382 l_0_15_52)))
 (let ((?x40379 (* 2.0 l_0_15_33)))
 (let ((?x40505 (* ?x40379 l_0_15_51)))
 (let ((?x40376 (* 2.0 l_0_15_32)))
 (let ((?x40503 (* ?x40376 l_0_15_50)))
 (let ((?x39757 (* 2.0 l_0_15_24)))
 (let ((?x40501 (* ?x39757 l_0_15_6)))
 (let ((?x39754 (* 2.0 l_0_15_23)))
 (let ((?x40499 (* ?x39754 l_0_15_5)))
 (let ((?x39751 (* 2.0 l_0_15_22)))
 (let ((?x40497 (* ?x39751 l_0_15_4)))
 (let ((?x20751 (+ (* (* 4.0 l_0_15_172) l_0_15_190) (* (* 4.0 l_0_15_173) l_0_15_191))))
 (let ((?x20857 (+ (+ (+ (+ ?x20751 (* (* 4.0 l_0_15_174) l_0_15_192)) ?x40497) ?x40499) ?x40501)))
 (= (- (- (- ?x20857 ?x40503) ?x40505) ?x40507) 0.0))))))))))))))))
(assert
 (let ((?x40559 (* l_0_15_9 l_0_15_9)))
 (let ((?x40557 (* l_0_15_8 l_0_15_8)))
 (let ((?x40555 (* l_0_15_7 l_0_15_7)))
 (let ((?x40553 (* l_0_15_38 l_0_15_38)))
 (let ((?x40551 (* l_0_15_37 l_0_15_37)))
 (let ((?x40549 (* l_0_15_36 l_0_15_36)))
 (let ((?x40547 (* l_0_15_35 l_0_15_35)))
 (let ((?x41659 (* l_0_15_178 l_0_15_178)))
 (let ((?x41660 (* 2.0 ?x41659)))
 (let ((?x41656 (* l_0_15_177 l_0_15_177)))
 (let ((?x41657 (* 2.0 ?x41656)))
 (let ((?x41653 (* l_0_15_176 l_0_15_176)))
 (let ((?x41654 (* 2.0 ?x41653)))
 (let ((?x20880 (* l_0_15_175 l_0_15_175)))
 (let ((?x41651 (* 2.0 ?x20880)))
 (let ((?x40563 (* l_0_15_10 l_0_15_10)))
 (let ((?x41664 (- (- (- (+ (+ (+ (+ ?x40563 ?x41651) ?x41654) ?x41657) ?x41660) ?x40547) ?x40549) ?x40551)))
 (= (+ (+ (+ (- ?x41664 ?x40553) ?x40555) ?x40557) ?x40559) 0.0)))))))))))))))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x40064 (* ?x40063 l_0_15_93)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x40061 (* ?x40060 l_0_15_92)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x40058 (* ?x40057 l_0_15_91)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x40055 (* ?x40054 l_0_15_65)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x40052 (* ?x40051 l_0_15_64)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x40049 (* ?x40048 l_0_15_63)))
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x40596 (* ?x39771 l_0_15_42)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x40594 (* ?x39768 l_0_15_41)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x40592 (* ?x39765 l_0_15_40)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x40590 (* ?x39762 l_0_15_39)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40374 (* ?x40373 l_0_15_149)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40371 (* ?x40370 l_0_15_148)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x40369 (* ?x40368 l_0_15_147)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40580 (* ?x30248 l_0_15_9)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40578 (* ?x40153 l_0_15_8)))
 (let ((?x40575 (* 2.0 l_0_15_11)))
 (let ((?x40576 (* ?x40575 l_0_15_7)))
 (let ((?x41677 (- (+ (* (* 2.0 l_0_15_10) l_0_15_14) ?x40576) (* (* 2.0 l_0_15_116) l_0_15_119))))
 (let ((?x41683 (- (- ?x41677 (* (* 2.0 l_0_15_117) l_0_15_120)) (* (* 2.0 l_0_15_118) l_0_15_121))))
 (let ((?x41691 (- (- (- (- (+ (+ ?x41683 ?x40578) ?x40580) ?x40369) ?x40371) ?x40374) (* (* 2.0 l_0_15_172) l_0_15_175))))
 (let ((?x41697 (- (- ?x41691 (* (* 2.0 l_0_15_173) l_0_15_176)) (* (* 2.0 l_0_15_174) l_0_15_177))))
 (let ((?x41701 (+ (+ ?x41697 (* (* 4.0 l_0_15_175) l_0_15_179)) (* (* 4.0 l_0_15_176) l_0_15_180))))
 (let ((?x41705 (+ (+ ?x41701 (* (* 4.0 l_0_15_177) l_0_15_181)) (* (* 4.0 l_0_15_178) l_0_15_182))))
 (let ((?x41712 (- (- (- (- (- (- (- ?x41705 ?x40590) ?x40592) ?x40594) ?x40596) ?x40049) ?x40052) ?x40055)))
 (= (+ (+ (+ ?x41712 ?x40058) ?x40061) ?x40064) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x40064 (* ?x40063 l_0_15_93)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x40061 (* ?x40060 l_0_15_92)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x40058 (* ?x40057 l_0_15_91)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x40055 (* ?x40054 l_0_15_65)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x40052 (* ?x40051 l_0_15_64)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x40049 (* ?x40048 l_0_15_63)))
 (let ((?x39771 (* 2.0 l_0_15_38)))
 (let ((?x40644 (* ?x39771 l_0_15_47)))
 (let ((?x39768 (* 2.0 l_0_15_37)))
 (let ((?x40642 (* ?x39768 l_0_15_46)))
 (let ((?x39765 (* 2.0 l_0_15_36)))
 (let ((?x40640 (* ?x39765 l_0_15_45)))
 (let ((?x39762 (* 2.0 l_0_15_35)))
 (let ((?x40638 (* ?x39762 l_0_15_44)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40636 (* ?x40452 l_0_15_9)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40634 (* ?x40243 l_0_15_8)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40632 (* ?x40240 l_0_15_7)))
 (let ((?x20916 (+ (+ (+ (* (* 2.0 l_0_15_10) l_0_15_19) ?x40632) ?x40634) (* (* 4.0 l_0_15_175) l_0_15_184))))
 (let ((?x20920 (+ (+ ?x20916 (* (* 4.0 l_0_15_176) l_0_15_185)) (* (* 4.0 l_0_15_177) l_0_15_186))))
 (let ((?x21052 (- (- (+ (+ ?x20920 (* (* 4.0 l_0_15_178) l_0_15_187)) ?x40636) ?x40638) ?x40640)))
 (let ((?x41750 (- (- (+ (+ (+ (- (- ?x21052 ?x40642) ?x40644) ?x40049) ?x40052) ?x40055) ?x40058) ?x40061)))
 (= (- ?x41750 ?x40064) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x41823 (* ?x40063 l_0_15_97)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x41821 (* ?x40060 l_0_15_96)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x41819 (* ?x40057 l_0_15_95)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41817 (* ?x40054 l_0_15_69)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41815 (* ?x40051 l_0_15_68)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41813 (* ?x40048 l_0_15_67)))
 (let ((?x40709 (* l_0_15_43 l_0_15_43)))
 (let ((?x40707 (* l_0_15_42 l_0_15_42)))
 (let ((?x40705 (* l_0_15_41 l_0_15_41)))
 (let ((?x40703 (* l_0_15_40 l_0_15_40)))
 (let ((?x40701 (* l_0_15_39 l_0_15_39)))
 (let ((?x19729 (* l_0_15_15 l_0_15_15)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40418 (* ?x40373 l_0_15_153)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40416 (* ?x40370 l_0_15_152)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x18266 (* ?x40368 l_0_15_151)))
 (let ((?x19717 (* l_0_15_14 l_0_15_14)))
 (let ((?x30338 (* l_0_15_13 l_0_15_13)))
 (let ((?x30332 (* l_0_15_12 l_0_15_12)))
 (let ((?x19818 (* l_0_15_11 l_0_15_11)))
 (let ((?x41777 (- (- ?x19818 (* (* 2.0 l_0_15_116) l_0_15_123)) (* (* 2.0 l_0_15_117) l_0_15_124))))
 (let ((?x41782 (+ (+ (+ (- ?x41777 (* (* 2.0 l_0_15_118) l_0_15_125)) ?x30332) ?x30338) ?x19717)))
 (let ((?x41788 (- (+ (- (- (- ?x41782 ?x18266) ?x40416) ?x40418) ?x19729) (* (* 2.0 l_0_15_172) l_0_15_179))))
 (let ((?x41792 (- (- ?x41788 (* (* 2.0 l_0_15_173) l_0_15_180)) (* (* 2.0 l_0_15_174) l_0_15_181))))
 (let ((?x41798 (+ (+ ?x41792 (* 2.0 (* l_0_15_179 l_0_15_179))) (* 2.0 (* l_0_15_180 l_0_15_180)))))
 (let ((?x41804 (+ (+ ?x41798 (* 2.0 (* l_0_15_181 l_0_15_181))) (* 2.0 (* l_0_15_182 l_0_15_182)))))
 (let ((?x41810 (- (- (- (+ ?x41804 (* 2.0 (* l_0_15_183 l_0_15_183))) ?x40701) ?x40703) ?x40705)))
 (let ((?x41822 (+ (+ (- (- (- (- (- ?x41810 ?x40707) ?x40709) ?x41813) ?x41815) ?x41817) ?x41819) ?x41821)))
 (= (+ ?x41822 ?x41823) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x41823 (* ?x40063 l_0_15_97)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x41821 (* ?x40060 l_0_15_96)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x41819 (* ?x40057 l_0_15_95)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41881 (* ?x40054 l_0_15_74)))
 (let ((?x41817 (* ?x40054 l_0_15_69)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41878 (* ?x40051 l_0_15_73)))
 (let ((?x41815 (* ?x40051 l_0_15_68)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41875 (* ?x40048 l_0_15_72)))
 (let ((?x41813 (* ?x40048 l_0_15_67)))
 (let ((?x40770 (* 2.0 l_0_15_43)))
 (let ((?x40771 (* ?x40770 l_0_15_48)))
 (let ((?x40767 (* 2.0 l_0_15_42)))
 (let ((?x40768 (* ?x40767 l_0_15_47)))
 (let ((?x40764 (* 2.0 l_0_15_41)))
 (let ((?x40765 (* ?x40764 l_0_15_46)))
 (let ((?x40761 (* 2.0 l_0_15_40)))
 (let ((?x40762 (* ?x40761 l_0_15_45)))
 (let ((?x40758 (* 2.0 l_0_15_39)))
 (let ((?x40759 (* ?x40758 l_0_15_44)))
 (let ((?x40740 (* 2.0 l_0_15_15)))
 (let ((?x40741 (* ?x40740 l_0_15_20)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40439 (* ?x40373 l_0_15_158)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x30330 (* ?x40370 l_0_15_157)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x19620 (* ?x40368 l_0_15_156)))
 (let ((?x40737 (* 2.0 l_0_15_14)))
 (let ((?x40738 (* ?x40737 l_0_15_19)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40735 (* ?x30248 l_0_15_18)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40733 (* ?x40153 l_0_15_17)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x31098 (* ?x40230 l_0_15_90)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x21161 (* ?x40215 l_0_15_89)))
 (let ((?x3378 (+ (+ (* (* 2.0 l_0_15_100) l_0_15_88) ?x21161) ?x31098)))
 (let ((?x41836 (- (+ ?x3378 (* (* 2.0 l_0_15_11) l_0_15_16)) (* (* 2.0 l_0_15_116) l_0_15_128))))
 (let ((?x41840 (- (- ?x41836 (* (* 2.0 l_0_15_117) l_0_15_129)) (* (* 2.0 l_0_15_118) l_0_15_130))))
 (let ((?x41847 (+ (- (- (- (+ (+ (+ ?x41840 ?x40733) ?x40735) ?x40738) ?x19620) ?x30330) ?x40439) ?x40741)))
 (let ((?x41851 (- (- ?x41847 (* (* 2.0 l_0_15_172) l_0_15_184)) (* (* 2.0 l_0_15_173) l_0_15_185))))
 (let ((?x41856 (+ (- ?x41851 (* (* 2.0 l_0_15_174) l_0_15_186)) (* (* 4.0 l_0_15_179) l_0_15_184))))
 (let ((?x41862 (+ (+ ?x41856 (* (* 4.0 l_0_15_180) l_0_15_185)) (* (* 4.0 l_0_15_181) l_0_15_186))))
 (let ((?x41868 (+ (+ ?x41862 (* (* 4.0 l_0_15_182) l_0_15_187)) (* (* 4.0 l_0_15_183) l_0_15_188))))
 (let ((?x41876 (- (+ (- (- (- (- (- ?x41868 ?x40759) ?x40762) ?x40765) ?x40768) ?x40771) ?x41813) ?x41875)))
 (let ((?x41885 (- (- (- (- (+ (- (+ ?x41876 ?x41815) ?x41878) ?x41817) ?x41881) ?x41819) ?x41821) ?x41823)))
 (= ?x41885 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41970 (* ?x40054 l_0_15_80)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41968 (* ?x40051 l_0_15_79)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41966 (* ?x40048 l_0_15_78)))
 (let ((?x40770 (* 2.0 l_0_15_43)))
 (let ((?x40844 (* ?x40770 l_0_15_54)))
 (let ((?x40767 (* 2.0 l_0_15_42)))
 (let ((?x40842 (* ?x40767 l_0_15_53)))
 (let ((?x40764 (* 2.0 l_0_15_41)))
 (let ((?x40840 (* ?x40764 l_0_15_52)))
 (let ((?x40761 (* 2.0 l_0_15_40)))
 (let ((?x40838 (* ?x40761 l_0_15_51)))
 (let ((?x40758 (* 2.0 l_0_15_39)))
 (let ((?x40836 (* ?x40758 l_0_15_50)))
 (let ((?x40740 (* 2.0 l_0_15_15)))
 (let ((?x40809 (* ?x40740 l_0_15_26)))
 (let ((?x40373 (* 2.0 l_0_15_146)))
 (let ((?x40487 (* ?x40373 l_0_15_164)))
 (let ((?x40370 (* 2.0 l_0_15_145)))
 (let ((?x40484 (* ?x40370 l_0_15_163)))
 (let ((?x40368 (* 2.0 l_0_15_144)))
 (let ((?x40482 (* ?x40368 l_0_15_162)))
 (let ((?x40737 (* 2.0 l_0_15_14)))
 (let ((?x40805 (* ?x40737 l_0_15_25)))
 (let ((?x30248 (* 2.0 l_0_15_13)))
 (let ((?x40801 (* ?x30248 l_0_15_24)))
 (let ((?x40153 (* 2.0 l_0_15_12)))
 (let ((?x40797 (* ?x40153 l_0_15_23)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x41928 (* ?x39841 l_0_15_90)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x41926 (* ?x39838 l_0_15_89)))
 (let ((?x41929 (+ (+ (* (* 2.0 l_0_15_106) l_0_15_88) ?x41926) ?x41928)))
 (let ((?x41933 (- (+ ?x41929 (* (* 2.0 l_0_15_11) l_0_15_22)) (* (* 2.0 l_0_15_116) l_0_15_134))))
 (let ((?x41937 (- (- ?x41933 (* (* 2.0 l_0_15_117) l_0_15_135)) (* (* 2.0 l_0_15_118) l_0_15_136))))
 (let ((?x41944 (+ (- (- (- (+ (+ (+ ?x41937 ?x40797) ?x40801) ?x40805) ?x40482) ?x40484) ?x40487) ?x40809)))
 (let ((?x41948 (- (- ?x41944 (* (* 2.0 l_0_15_172) l_0_15_190)) (* (* 2.0 l_0_15_173) l_0_15_191))))
 (let ((?x41952 (+ (- ?x41948 (* (* 2.0 l_0_15_174) l_0_15_192)) (* (* 4.0 l_0_15_179) l_0_15_190))))
 (let ((?x41956 (+ (+ ?x41952 (* (* 4.0 l_0_15_180) l_0_15_191)) (* (* 4.0 l_0_15_181) l_0_15_192))))
 (let ((?x41960 (+ (+ ?x41956 (* (* 4.0 l_0_15_182) l_0_15_193)) (* (* 4.0 l_0_15_183) l_0_15_194))))
 (let ((?x41969 (- (- (- (- (- (- (- ?x41960 ?x40836) ?x40838) ?x40840) ?x40842) ?x40844) ?x41966) ?x41968)))
 (= (- ?x41969 ?x41970) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41881 (* ?x40054 l_0_15_74)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41878 (* ?x40051 l_0_15_73)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41875 (* ?x40048 l_0_15_72)))
 (let ((?x40911 (* l_0_15_49 l_0_15_49)))
 (let ((?x40909 (* l_0_15_48 l_0_15_48)))
 (let ((?x40907 (* l_0_15_47 l_0_15_47)))
 (let ((?x40905 (* l_0_15_46 l_0_15_46)))
 (let ((?x40903 (* l_0_15_45 l_0_15_45)))
 (let ((?x40901 (* l_0_15_44 l_0_15_44)))
 (let ((?x40899 (* l_0_15_21 l_0_15_21)))
 (let ((?x40897 (* l_0_15_20 l_0_15_20)))
 (let ((?x40895 (* l_0_15_19 l_0_15_19)))
 (let ((?x42019 (* l_0_15_189 l_0_15_189)))
 (let ((?x42020 (* 2.0 ?x42019)))
 (let ((?x42016 (* l_0_15_188 l_0_15_188)))
 (let ((?x42017 (* 2.0 ?x42016)))
 (let ((?x42013 (* l_0_15_187 l_0_15_187)))
 (let ((?x42014 (* 2.0 ?x42013)))
 (let ((?x42010 (* l_0_15_186 l_0_15_186)))
 (let ((?x42011 (* 2.0 ?x42010)))
 (let ((?x42007 (* l_0_15_185 l_0_15_185)))
 (let ((?x42008 (* 2.0 ?x42007)))
 (let ((?x42004 (* l_0_15_184 l_0_15_184)))
 (let ((?x42005 (* 2.0 ?x42004)))
 (let ((?x40893 (* l_0_15_18 l_0_15_18)))
 (let ((?x40891 (* l_0_15_17 l_0_15_17)))
 (let ((?x40871 (* l_0_15_16 l_0_15_16)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x31098 (* ?x40230 l_0_15_90)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x21161 (* ?x40215 l_0_15_89)))
 (let ((?x42002 (+ (+ (- (- (* (* (- 2.0) l_0_15_100) l_0_15_88) ?x21161) ?x31098) ?x40871) ?x40891)))
 (let ((?x42021 (+ (+ (+ (+ (+ (+ (+ ?x42002 ?x40893) ?x42005) ?x42008) ?x42011) ?x42014) ?x42017) ?x42020)))
 (let ((?x42028 (- (- (- (- (+ (+ (+ ?x42021 ?x40895) ?x40897) ?x40899) ?x40901) ?x40903) ?x40905) ?x40907)))
 (= (+ (+ (+ (- (- ?x42028 ?x40909) ?x40911) ?x41875) ?x41878) ?x41881) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41970 (* ?x40054 l_0_15_80)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41968 (* ?x40051 l_0_15_79)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41966 (* ?x40048 l_0_15_78)))
 (let ((?x40978 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x40975 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x40972 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x40969 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x40966 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x40963 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x40960 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x40957 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x40954 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x40452 (* 2.0 l_0_15_18)))
 (let ((?x40951 (* ?x40452 l_0_15_24)))
 (let ((?x40243 (* 2.0 l_0_15_17)))
 (let ((?x40949 (* ?x40243 l_0_15_23)))
 (let ((?x40240 (* 2.0 l_0_15_16)))
 (let ((?x40941 (* ?x40240 l_0_15_22)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x41928 (* ?x39841 l_0_15_90)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x41926 (* ?x39838 l_0_15_89)))
 (let ((?x42047 (+ (+ (- (- (* (* (- 2.0) l_0_15_106) l_0_15_88) ?x41926) ?x41928) ?x40941) ?x40949)))
 (let ((?x42054 (+ (+ (+ ?x42047 ?x40951) (* (* 4.0 l_0_15_184) l_0_15_190)) (* (* 4.0 l_0_15_185) l_0_15_191))))
 (let ((?x42060 (+ (+ ?x42054 (* (* 4.0 l_0_15_186) l_0_15_192)) (* (* 4.0 l_0_15_187) l_0_15_193))))
 (let ((?x42066 (+ (+ ?x42060 (* (* 4.0 l_0_15_188) l_0_15_194)) (* (* 4.0 l_0_15_189) l_0_15_195))))
 (let ((?x42073 (- (- (- (- (+ (+ (+ ?x42066 ?x40954) ?x40957) ?x40960) ?x40963) ?x40966) ?x40969) ?x40972)))
 (= (+ (+ (+ (- (- ?x42073 ?x40975) ?x40978) ?x41966) ?x41968) ?x41970) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x41053 (* l_0_15_56 l_0_15_56)))
 (let ((?x41051 (* l_0_15_55 l_0_15_55)))
 (let ((?x41049 (* l_0_15_54 l_0_15_54)))
 (let ((?x41047 (* l_0_15_53 l_0_15_53)))
 (let ((?x41045 (* l_0_15_52 l_0_15_52)))
 (let ((?x41043 (* l_0_15_51 l_0_15_51)))
 (let ((?x41041 (* l_0_15_50 l_0_15_50)))
 (let ((?x41039 (* l_0_15_28 l_0_15_28)))
 (let ((?x41037 (* l_0_15_27 l_0_15_27)))
 (let ((?x41035 (* l_0_15_26 l_0_15_26)))
 (let ((?x41033 (* l_0_15_25 l_0_15_25)))
 (let ((?x41031 (* l_0_15_24 l_0_15_24)))
 (let ((?x41029 (* l_0_15_23 l_0_15_23)))
 (let ((?x41027 (* l_0_15_22 l_0_15_22)))
 (let ((?x42109 (* l_0_15_196 l_0_15_196)))
 (let ((?x42110 (* 2.0 ?x42109)))
 (let ((?x42106 (* l_0_15_195 l_0_15_195)))
 (let ((?x42107 (* 2.0 ?x42106)))
 (let ((?x42103 (* l_0_15_194 l_0_15_194)))
 (let ((?x42104 (* 2.0 ?x42103)))
 (let ((?x42100 (* l_0_15_193 l_0_15_193)))
 (let ((?x42101 (* 2.0 ?x42100)))
 (let ((?x42097 (* l_0_15_192 l_0_15_192)))
 (let ((?x42098 (* 2.0 ?x42097)))
 (let ((?x31394 (* l_0_15_191 l_0_15_191)))
 (let ((?x31395 (* 2.0 ?x31394)))
 (let ((?x31417 (* l_0_15_190 l_0_15_190)))
 (let ((?x31391 (* 2.0 ?x31417)))
 (let ((?x42112 (+ (+ (+ (+ (+ (+ (+ ?x31391 ?x31395) ?x42098) ?x42101) ?x42104) ?x42107) ?x42110) ?x41027)))
 (let ((?x42119 (- (+ (+ (+ (+ (+ (+ ?x42112 ?x41029) ?x41031) ?x41033) ?x41035) ?x41037) ?x41039) ?x41041)))
 (= (- (- (- (- (- (- ?x42119 ?x41043) ?x41045) ?x41047) ?x41049) ?x41051) ?x41053) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x4342 (* ?x39716 l_0_15_86)))
 (= (+ (* (* (- 2.0) l_0_15_57) l_0_15_58) ?x4342) 0.0))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x42146 (* ?x39716 l_0_15_95)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42144 (* ?x40015 l_0_15_79)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42142 (* ?x40012 l_0_15_78)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x42140 (* ?x39713 l_0_15_67)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40298 (* ?x18996 l_0_15_163)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40296 (* ?x30135 l_0_15_162)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x31435 (* ?x39838 l_0_15_87)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4398 (* ?x39829 l_0_15_86)))
 (let ((?x31430 (+ ?x4398 ?x31435)))
 (let ((?x42133 (- (- ?x31430 (* (* 2.0 l_0_15_114) l_0_15_134)) (* (* 2.0 l_0_15_115) l_0_15_135))))
 (let ((?x42139 (- (- (- (- ?x42133 ?x40296) ?x40298) (* (* 2.0 l_0_15_170) l_0_15_190)) (* (* 2.0 l_0_15_171) l_0_15_191))))
 (= (+ (- (- (- ?x42139 ?x42140) ?x42142) ?x42144) ?x42146) 0.0)))))))))))))))))))))
(assert
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42144 (* ?x40015 l_0_15_79)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42142 (* ?x40012 l_0_15_78)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x21444 (* ?x39713 l_0_15_72)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x31435 (* ?x39838 l_0_15_87)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4398 (* ?x39829 l_0_15_86)))
 (let ((?x18298 (* 2.0 l_0_15_100)))
 (let ((?x31573 (* ?x18298 l_0_15_85)))
 (= (+ (+ (- (- (- ?x31573 ?x4398) ?x31435) ?x21444) ?x42142) ?x42144) 0.0))))))))))))))
(assert
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x31578 (* ?x39713 l_0_15_78)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x21477 (* ?x39829 l_0_15_85)))
 (= (- ?x21477 ?x31578) 0.0))))))
(assert
 (let ((?x42176 (* l_0_15_87 l_0_15_87)))
 (let ((?x42174 (* l_0_15_86 l_0_15_86)))
 (let ((?x42175 (+ (- (* (- l_0_15_58) l_0_15_58) (* l_0_15_59 l_0_15_59)) ?x42174)))
 (= (+ ?x42175 ?x42176) 0.0)))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x41470 (* ?x40021 l_0_15_89)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x41468 (* ?x40018 l_0_15_88)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x41466 (* ?x40015 l_0_15_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_58) l_0_15_60) ?x41466) ?x41468) ?x41470) 0.0))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x42201 (* ?x40021 l_0_15_96)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x42199 (* ?x40018 l_0_15_95)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42197 (* ?x40015 l_0_15_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_58) l_0_15_67) ?x42197) ?x42199) ?x42201) 0.0))))))))
(assert
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42221 (* ?x40015 l_0_15_73)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42219 (* ?x40012 l_0_15_72)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42217 (* ?x40215 l_0_15_87)))
 (let ((?x42218 (+ (* (* 2.0 l_0_15_100) l_0_15_86) ?x42217)))
 (= (- (- ?x42218 ?x42219) ?x42221) 0.0)))))))))
(assert
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42144 (* ?x40015 l_0_15_79)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42142 (* ?x40012 l_0_15_78)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x31435 (* ?x39838 l_0_15_87)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4398 (* ?x39829 l_0_15_86)))
 (let ((?x31430 (+ ?x4398 ?x31435)))
 (= (- (- ?x31430 ?x42142) ?x42144) 0.0)))))))))))
(assert
 (let ((?x41588 (* l_0_15_90 l_0_15_90)))
 (let ((?x41586 (* l_0_15_89 l_0_15_89)))
 (let ((?x41584 (* l_0_15_88 l_0_15_88)))
 (let ((?x41582 (* l_0_15_62 l_0_15_62)))
 (let ((?x42249 (- (- (* (- l_0_15_60) l_0_15_60) (* l_0_15_61 l_0_15_61)) ?x41582)))
 (= (+ (+ (+ ?x42249 ?x41584) ?x41586) ?x41588) 0.0)))))))
(assert
 (let ((?x40063 (* 2.0 l_0_15_90)))
 (let ((?x41823 (* ?x40063 l_0_15_97)))
 (let ((?x40060 (* 2.0 l_0_15_89)))
 (let ((?x41821 (* ?x40060 l_0_15_96)))
 (let ((?x40057 (* 2.0 l_0_15_88)))
 (let ((?x41819 (* ?x40057 l_0_15_95)))
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41817 (* ?x40054 l_0_15_69)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41815 (* ?x40051 l_0_15_68)))
 (let ((?x20935 (+ (+ (- (- (* (* (- 2.0) l_0_15_60) l_0_15_67) ?x41815) ?x41817) ?x41819) ?x41821)))
 (= (+ ?x20935 ?x41823) 0.0)))))))))))))
(assert
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41881 (* ?x40054 l_0_15_74)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41878 (* ?x40051 l_0_15_73)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41875 (* ?x40048 l_0_15_72)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x31098 (* ?x40230 l_0_15_90)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x21161 (* ?x40215 l_0_15_89)))
 (let ((?x3378 (+ (+ (* (* 2.0 l_0_15_100) l_0_15_88) ?x21161) ?x31098)))
 (= (- (- (- ?x3378 ?x41875) ?x41878) ?x41881) 0.0)))))))))))))
(assert
 (let ((?x40054 (* 2.0 l_0_15_62)))
 (let ((?x41970 (* ?x40054 l_0_15_80)))
 (let ((?x40051 (* 2.0 l_0_15_61)))
 (let ((?x41968 (* ?x40051 l_0_15_79)))
 (let ((?x40048 (* 2.0 l_0_15_60)))
 (let ((?x41966 (* ?x40048 l_0_15_78)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x41928 (* ?x39841 l_0_15_90)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x41926 (* ?x39838 l_0_15_89)))
 (let ((?x41929 (+ (+ (* (* 2.0 l_0_15_106) l_0_15_88) ?x41926) ?x41928)))
 (= (- (- (- ?x41929 ?x41966) ?x41968) ?x41970) 0.0)))))))))))))
(assert
 (let ((?x42292 (* l_0_15_99 l_0_15_99)))
 (let ((?x42290 (* l_0_15_98 l_0_15_98)))
 (let ((?x42288 (* l_0_15_97 l_0_15_97)))
 (let ((?x42286 (* l_0_15_96 l_0_15_96)))
 (let ((?x42284 (* l_0_15_95 l_0_15_95)))
 (let ((?x42282 (* l_0_15_71 l_0_15_71)))
 (let ((?x42280 (* l_0_15_70 l_0_15_70)))
 (let ((?x42278 (* l_0_15_69 l_0_15_69)))
 (let ((?x42279 (- (- (* (- l_0_15_67) l_0_15_67) (* l_0_15_68 l_0_15_68)) ?x42278)))
 (let ((?x42293 (+ (+ (+ (+ (+ (- (- ?x42279 ?x42280) ?x42282) ?x42284) ?x42286) ?x42288) ?x42290) ?x42292)))
 (= ?x42293 0.0))))))))))))
(assert
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42337 (* ?x42336 l_0_15_76)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42334 (* ?x42333 l_0_15_75)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42331 (* ?x42330 l_0_15_74)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42328 (* ?x42327 l_0_15_73)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42325 (* ?x42324 l_0_15_72)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42322 (* ?x42321 l_0_15_99)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42319 (* ?x40233 l_0_15_98)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42317 (* ?x40230 l_0_15_97)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42315 (* ?x40215 l_0_15_96)))
 (let ((?x42323 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_95) ?x42315) ?x42317) ?x42319) ?x42322)))
 (= (- (- (- (- (- ?x42323 ?x42325) ?x42328) ?x42331) ?x42334) ?x42337) 0.0)))))))))))))))))))))
(assert
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42376 (* ?x42336 l_0_15_82)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42374 (* ?x42333 l_0_15_81)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42372 (* ?x42330 l_0_15_80)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42370 (* ?x42327 l_0_15_79)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42368 (* ?x42324 l_0_15_78)))
 (let ((?x42366 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x42363 (* ?x39844 l_0_15_98)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x42361 (* ?x39841 l_0_15_97)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x4586 (* ?x39838 l_0_15_96)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4563 (* ?x39829 l_0_15_95)))
 (let ((?x42367 (+ (+ (+ (+ ?x4563 ?x4586) ?x42361) ?x42363) ?x42366)))
 (= (- (- (- (- (- ?x42367 ?x42368) ?x42370) ?x42372) ?x42374) ?x42376) 0.0))))))))))))))))))))))
(assert
 (let ((?x42425 (* l_0_15_77 l_0_15_77)))
 (let ((?x42423 (* l_0_15_76 l_0_15_76)))
 (let ((?x42421 (* l_0_15_75 l_0_15_75)))
 (let ((?x42419 (* l_0_15_74 l_0_15_74)))
 (let ((?x42417 (* l_0_15_73 l_0_15_73)))
 (let ((?x42415 (* l_0_15_72 l_0_15_72)))
 (let ((?x42413 (* l_0_15_105 l_0_15_105)))
 (let ((?x42411 (* l_0_15_104 l_0_15_104)))
 (let ((?x42409 (* l_0_15_103 l_0_15_103)))
 (let ((?x42407 (* l_0_15_102 l_0_15_102)))
 (let ((?x42408 (+ (+ (* l_0_15_100 l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x42407)))
 (let ((?x42422 (- (- (- (- (+ (+ (+ ?x42408 ?x42409) ?x42411) ?x42413) ?x42415) ?x42417) ?x42419) ?x42421)))
 (= (- (- ?x42422 ?x42423) ?x42425) 0.0))))))))))))))
(assert
 (let ((?x42464 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42461 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42458 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42455 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42452 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42449 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x42446 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42443 (* ?x42321 l_0_15_110)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42441 (* ?x40233 l_0_15_109)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42439 (* ?x40230 l_0_15_108)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42437 (* ?x40215 l_0_15_107)))
 (let ((?x42444 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_106) ?x42437) ?x42439) ?x42441) ?x42443)))
 (let ((?x42447 (+ ?x42444 ?x42446)))
 (= (- (- (- (- (- (- ?x42447 ?x42449) ?x42452) ?x42455) ?x42458) ?x42461) ?x42464) 0.0)))))))))))))))))))
(assert
 (let ((?x42528 (* l_0_15_84 l_0_15_84)))
 (let ((?x42526 (* l_0_15_83 l_0_15_83)))
 (let ((?x42524 (* l_0_15_82 l_0_15_82)))
 (let ((?x42522 (* l_0_15_81 l_0_15_81)))
 (let ((?x42520 (* l_0_15_80 l_0_15_80)))
 (let ((?x42518 (* l_0_15_79 l_0_15_79)))
 (let ((?x42516 (* l_0_15_78 l_0_15_78)))
 (let ((?x42514 (* l_0_15_112 l_0_15_112)))
 (let ((?x42512 (* l_0_15_111 l_0_15_111)))
 (let ((?x42510 (* l_0_15_110 l_0_15_110)))
 (let ((?x42508 (* l_0_15_109 l_0_15_109)))
 (let ((?x42506 (* l_0_15_108 l_0_15_108)))
 (let ((?x42507 (+ (+ (* l_0_15_106 l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42506)))
 (let ((?x42515 (+ (+ (+ (+ ?x42507 ?x42508) ?x42510) ?x42512) ?x42514)))
 (let ((?x42529 (- (- (- (- (- (- (- ?x42515 ?x42516) ?x42518) ?x42520) ?x42522) ?x42524) ?x42526) ?x42528)))
 (= ?x42529 0.0)))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x4342 (* ?x39716 l_0_15_86)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x42560 (* ?x39713 l_0_15_58)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39708 (* ?x39707 l_0_15_142)))
 (let ((?x42547 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_114) ?x39708) (* (* 2.0 l_0_15_169) l_0_15_170))))
 (let ((?x42551 (- (- ?x42547 (* (* 2.0 l_0_15_198) l_0_15_207)) (* (* 2.0 l_0_15_199) l_0_15_208))))
 (let ((?x42555 (- (- ?x42551 (* (* 2.0 l_0_15_226) l_0_15_235)) (* (* 2.0 l_0_15_227) l_0_15_236))))
 (let ((?x42559 (- (- ?x42555 (* (* 2.0 l_0_15_254) l_0_15_263)) (* (* 2.0 l_0_15_255) l_0_15_264))))
 (= (+ (- ?x42559 ?x42560) ?x4342) 0.0))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x39717 (* ?x39716 l_0_15_91)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x39714 (* ?x39713 l_0_15_63)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39821 (* ?x39707 l_0_15_147)))
 (let ((?x42588 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_119) ?x39821) (* (* 2.0 l_0_15_169) l_0_15_175))))
 (let ((?x42592 (- (- ?x42588 (* (* 2.0 l_0_15_203) l_0_15_207)) (* (* 2.0 l_0_15_204) l_0_15_208))))
 (let ((?x42596 (- (- ?x42592 (* (* 2.0 l_0_15_205) l_0_15_209)) (* (* 2.0 l_0_15_206) l_0_15_210))))
 (let ((?x42600 (- (- ?x42596 (* (* 2.0 l_0_15_231) l_0_15_235)) (* (* 2.0 l_0_15_232) l_0_15_236))))
 (let ((?x42604 (- (- ?x42600 (* (* 2.0 l_0_15_233) l_0_15_237)) (* (* 2.0 l_0_15_234) l_0_15_238))))
 (let ((?x42608 (- (- ?x42604 (* (* 2.0 l_0_15_259) l_0_15_263)) (* (* 2.0 l_0_15_260) l_0_15_264))))
 (let ((?x42612 (- (- ?x42608 (* (* 2.0 l_0_15_261) l_0_15_265)) (* (* 2.0 l_0_15_262) l_0_15_266))))
 (= (+ (- ?x42612 ?x39714) ?x39717) 0.0)))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x42146 (* ?x39716 l_0_15_95)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x42140 (* ?x39713 l_0_15_67)))
 (let ((?x42666 (* l_0_15_267 l_0_15_267)))
 (let ((?x42664 (* l_0_15_266 l_0_15_266)))
 (let ((?x42662 (* l_0_15_265 l_0_15_265)))
 (let ((?x42660 (* l_0_15_264 l_0_15_264)))
 (let ((?x42658 (* l_0_15_263 l_0_15_263)))
 (let ((?x42656 (* l_0_15_239 l_0_15_239)))
 (let ((?x42654 (* l_0_15_238 l_0_15_238)))
 (let ((?x42652 (* l_0_15_237 l_0_15_237)))
 (let ((?x42650 (* l_0_15_236 l_0_15_236)))
 (let ((?x42648 (* l_0_15_235 l_0_15_235)))
 (let ((?x42646 (* l_0_15_211 l_0_15_211)))
 (let ((?x42644 (* l_0_15_210 l_0_15_210)))
 (let ((?x42642 (* l_0_15_209 l_0_15_209)))
 (let ((?x42640 (* l_0_15_208 l_0_15_208)))
 (let ((?x42638 (* l_0_15_207 l_0_15_207)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39859 (* ?x39707 l_0_15_151)))
 (let ((?x42637 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_123) ?x39859) (* (* 2.0 l_0_15_169) l_0_15_179))))
 (let ((?x42651 (- (- (- (- (- (- (- ?x42637 ?x42638) ?x42640) ?x42642) ?x42644) ?x42646) ?x42648) ?x42650)))
 (let ((?x42665 (- (- (- (- (- (- (- ?x42651 ?x42652) ?x42654) ?x42656) ?x42658) ?x42660) ?x42662) ?x42664)))
 (= (+ (- (- ?x42665 ?x42666) ?x42140) ?x42146) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x42146 (* ?x39716 l_0_15_95)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x21444 (* ?x39713 l_0_15_72)))
 (let ((?x42140 (* ?x39713 l_0_15_67)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39973 (* ?x39707 l_0_15_156)))
 (let ((?x18298 (* 2.0 l_0_15_100)))
 (let ((?x31573 (* ?x18298 l_0_15_85)))
 (let ((?x42694 (- (- (- ?x31573 (* (* 2.0 l_0_15_113) l_0_15_128)) ?x39973) (* (* 2.0 l_0_15_169) l_0_15_184))))
 (let ((?x42700 (- (- ?x42694 (* (* 2.0 l_0_15_207) l_0_15_212)) (* (* 2.0 l_0_15_208) l_0_15_213))))
 (let ((?x42706 (- (- ?x42700 (* (* 2.0 l_0_15_209) l_0_15_214)) (* (* 2.0 l_0_15_210) l_0_15_215))))
 (let ((?x42712 (- (- ?x42706 (* (* 2.0 l_0_15_211) l_0_15_216)) (* (* 2.0 l_0_15_235) l_0_15_240))))
 (let ((?x42718 (- (- ?x42712 (* (* 2.0 l_0_15_236) l_0_15_241)) (* (* 2.0 l_0_15_237) l_0_15_242))))
 (let ((?x42724 (- (- ?x42718 (* (* 2.0 l_0_15_238) l_0_15_243)) (* (* 2.0 l_0_15_239) l_0_15_244))))
 (let ((?x42730 (- (- ?x42724 (* (* 2.0 l_0_15_263) l_0_15_268)) (* (* 2.0 l_0_15_264) l_0_15_269))))
 (let ((?x42736 (- (- ?x42730 (* (* 2.0 l_0_15_265) l_0_15_270)) (* (* 2.0 l_0_15_266) l_0_15_271))))
 (let ((?x42742 (- (- (+ (- ?x42736 (* (* 2.0 l_0_15_267) l_0_15_272)) ?x42140) ?x21444) ?x42146)))
 (= ?x42742 0.0))))))))))))))))))))
(assert
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x31578 (* ?x39713 l_0_15_78)))
 (let ((?x39707 (* 2.0 l_0_15_141)))
 (let ((?x39988 (* ?x39707 l_0_15_162)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x21477 (* ?x39829 l_0_15_85)))
 (let ((?x42786 (- (- (- ?x21477 (* (* 2.0 l_0_15_113) l_0_15_134)) ?x39988) (* (* 2.0 l_0_15_169) l_0_15_190))))
 (let ((?x42790 (- (- ?x42786 (* (* 2.0 l_0_15_207) l_0_15_218)) (* (* 2.0 l_0_15_208) l_0_15_219))))
 (let ((?x42794 (- (- ?x42790 (* (* 2.0 l_0_15_209) l_0_15_220)) (* (* 2.0 l_0_15_210) l_0_15_221))))
 (let ((?x42798 (- (- ?x42794 (* (* 2.0 l_0_15_211) l_0_15_222)) (* (* 2.0 l_0_15_235) l_0_15_246))))
 (let ((?x42802 (- (- ?x42798 (* (* 2.0 l_0_15_236) l_0_15_247)) (* (* 2.0 l_0_15_237) l_0_15_248))))
 (let ((?x42806 (- (- ?x42802 (* (* 2.0 l_0_15_238) l_0_15_249)) (* (* 2.0 l_0_15_239) l_0_15_250))))
 (let ((?x42810 (- (- ?x42806 (* (* 2.0 l_0_15_263) l_0_15_274)) (* (* 2.0 l_0_15_264) l_0_15_275))))
 (let ((?x42814 (- (- ?x42810 (* (* 2.0 l_0_15_265) l_0_15_276)) (* (* 2.0 l_0_15_266) l_0_15_277))))
 (= (- (- ?x42814 (* (* 2.0 l_0_15_267) l_0_15_278)) ?x31578) 0.0))))))))))))))))
(assert
 (let ((?x42176 (* l_0_15_87 l_0_15_87)))
 (let ((?x42174 (* l_0_15_86 l_0_15_86)))
 (let ((?x42172 (* l_0_15_59 l_0_15_59)))
 (let ((?x31581 (* l_0_15_58 l_0_15_58)))
 (let ((?x41405 (* l_0_15_171 l_0_15_171)))
 (let ((?x41403 (* l_0_15_170 l_0_15_170)))
 (let ((?x39996 (* l_0_15_143 l_0_15_143)))
 (let ((?x39994 (* l_0_15_142 l_0_15_142)))
 (let ((?x5713 (- (- (* (- l_0_15_114) l_0_15_114) (* l_0_15_115 l_0_15_115)) ?x39994)))
 (let ((?x42836 (+ (+ (- (- (- (- (- ?x5713 ?x39996) ?x41403) ?x41405) ?x31581) ?x42172) ?x42174) ?x42176)))
 (= ?x42836 0.0))))))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x40022 (* ?x40021 l_0_15_92)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x40019 (* ?x40018 l_0_15_91)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x40016 (* ?x40015 l_0_15_64)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x40013 (* ?x40012 l_0_15_63)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x19099 (* ?x18996 l_0_15_148)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x19107 (* ?x30135 l_0_15_147)))
 (let ((?x33152 (- (* (* (- 2.0) l_0_15_114) l_0_15_119) (* (* 2.0 l_0_15_115) l_0_15_120))))
 (let ((?x42848 (- (- (- (- ?x33152 ?x19107) ?x19099) (* (* 2.0 l_0_15_170) l_0_15_175)) (* (* 2.0 l_0_15_171) l_0_15_176))))
 (= (+ (+ (- (- ?x42848 ?x40013) ?x40016) ?x40019) ?x40022) 0.0))))))))))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x42201 (* ?x40021 l_0_15_96)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x42199 (* ?x40018 l_0_15_95)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42197 (* ?x40015 l_0_15_68)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42862 (* ?x40012 l_0_15_67)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40158 (* ?x18996 l_0_15_152)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40156 (* ?x30135 l_0_15_151)))
 (let ((?x5823 (- (* (* (- 2.0) l_0_15_114) l_0_15_123) (* (* 2.0 l_0_15_115) l_0_15_124))))
 (let ((?x5881 (- (- (- (- ?x5823 ?x40156) ?x40158) (* (* 2.0 l_0_15_170) l_0_15_179)) (* (* 2.0 l_0_15_171) l_0_15_180))))
 (= (+ (+ (- (- ?x5881 ?x42862) ?x42197) ?x42199) ?x42201) 0.0))))))))))))))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x42201 (* ?x40021 l_0_15_96)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x42199 (* ?x40018 l_0_15_95)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42221 (* ?x40015 l_0_15_73)))
 (let ((?x42197 (* ?x40015 l_0_15_68)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42219 (* ?x40012 l_0_15_72)))
 (let ((?x42862 (* ?x40012 l_0_15_67)))
 (let ((?x18996 (* 2.0 l_0_15_143)))
 (let ((?x40238 (* ?x18996 l_0_15_157)))
 (let ((?x30135 (* 2.0 l_0_15_142)))
 (let ((?x40236 (* ?x30135 l_0_15_156)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42217 (* ?x40215 l_0_15_87)))
 (let ((?x42218 (+ (* (* 2.0 l_0_15_100) l_0_15_86) ?x42217)))
 (let ((?x42880 (- (- ?x42218 (* (* 2.0 l_0_15_114) l_0_15_128)) (* (* 2.0 l_0_15_115) l_0_15_129))))
 (let ((?x42886 (- (- (- (- ?x42880 ?x40236) ?x40238) (* (* 2.0 l_0_15_170) l_0_15_184)) (* (* 2.0 l_0_15_171) l_0_15_185))))
 (= (- (- (- (+ (- (+ ?x42886 ?x42862) ?x42219) ?x42197) ?x42221) ?x42199) ?x42201) 0.0)))))))))))))))))))))
(assert
 (let ((?x40124 (* l_0_15_94 l_0_15_94)))
 (let ((?x40122 (* l_0_15_93 l_0_15_93)))
 (let ((?x40120 (* l_0_15_92 l_0_15_92)))
 (let ((?x40118 (* l_0_15_91 l_0_15_91)))
 (let ((?x40116 (* l_0_15_66 l_0_15_66)))
 (let ((?x40114 (* l_0_15_65 l_0_15_65)))
 (let ((?x40112 (* l_0_15_64 l_0_15_64)))
 (let ((?x40110 (* l_0_15_63 l_0_15_63)))
 (let ((?x41659 (* l_0_15_178 l_0_15_178)))
 (let ((?x41656 (* l_0_15_177 l_0_15_177)))
 (let ((?x41653 (* l_0_15_176 l_0_15_176)))
 (let ((?x20880 (* l_0_15_175 l_0_15_175)))
 (let ((?x40545 (* l_0_15_150 l_0_15_150)))
 (let ((?x40543 (* l_0_15_149 l_0_15_149)))
 (let ((?x40541 (* l_0_15_148 l_0_15_148)))
 (let ((?x40531 (* l_0_15_147 l_0_15_147)))
 (let ((?x42911 (* l_0_15_122 l_0_15_122)))
 (let ((?x42909 (* l_0_15_121 l_0_15_121)))
 (let ((?x42910 (- (- (* (- l_0_15_119) l_0_15_119) (* l_0_15_120 l_0_15_120)) ?x42909)))
 (let ((?x42918 (- (- (- (- (- (- (- ?x42910 ?x42911) ?x40531) ?x40541) ?x40543) ?x40545) ?x20880) ?x41653)))
 (let ((?x42925 (+ (- (- (- (- (- (- ?x42918 ?x41656) ?x41659) ?x40110) ?x40112) ?x40114) ?x40116) ?x40118)))
 (= (+ (+ (+ ?x42925 ?x40120) ?x40122) ?x40124) 0.0)))))))))))))))))))))))
(assert
 (let ((?x40182 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40179 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40176 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40173 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x40170 (* ?x39896 l_0_15_70)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x40168 (* ?x39893 l_0_15_69)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x40166 (* ?x39890 l_0_15_68)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x40164 (* ?x39887 l_0_15_67)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x40588 (* ?x39870 l_0_15_154)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x40586 (* ?x39867 l_0_15_153)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x40584 (* ?x39864 l_0_15_152)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x40582 (* ?x39861 l_0_15_151)))
 (let ((?x32263 (- (* (* (- 2.0) l_0_15_119) l_0_15_123) (* (* 2.0 l_0_15_120) l_0_15_124))))
 (let ((?x6142 (- (- ?x32263 (* (* 2.0 l_0_15_121) l_0_15_125)) (* (* 2.0 l_0_15_122) l_0_15_126))))
 (let ((?x33311 (- (- (- (- (- ?x6142 ?x40582) ?x40584) ?x40586) ?x40588) (* (* 2.0 l_0_15_175) l_0_15_179))))
 (let ((?x42945 (- (- ?x33311 (* (* 2.0 l_0_15_176) l_0_15_180)) (* (* 2.0 l_0_15_177) l_0_15_181))))
 (let ((?x42950 (- (- (- (- ?x42945 (* (* 2.0 l_0_15_178) l_0_15_182)) ?x40164) ?x40166) ?x40168)))
 (= (+ (+ (+ (+ (- ?x42950 ?x40170) ?x40173) ?x40176) ?x40179) ?x40182) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x40182 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40179 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40176 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40173 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x40256 (* ?x39896 l_0_15_75)))
 (let ((?x40170 (* ?x39896 l_0_15_70)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x40254 (* ?x39893 l_0_15_74)))
 (let ((?x40168 (* ?x39893 l_0_15_69)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x40252 (* ?x39890 l_0_15_73)))
 (let ((?x40166 (* ?x39890 l_0_15_68)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x40250 (* ?x39887 l_0_15_72)))
 (let ((?x40164 (* ?x39887 l_0_15_67)))
 (let ((?x39870 (* 2.0 l_0_15_150)))
 (let ((?x40618 (* ?x39870 l_0_15_159)))
 (let ((?x39867 (* 2.0 l_0_15_149)))
 (let ((?x40613 (* ?x39867 l_0_15_158)))
 (let ((?x39864 (* 2.0 l_0_15_148)))
 (let ((?x40614 (* ?x39864 l_0_15_157)))
 (let ((?x39861 (* 2.0 l_0_15_147)))
 (let ((?x19764 (* ?x39861 l_0_15_156)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x40234 (* ?x40233 l_0_15_94)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x40231 (* ?x40230 l_0_15_93)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x40217 (* ?x40215 l_0_15_92)))
 (let ((?x40235 (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_91) ?x40217) ?x40231) ?x40234)))
 (let ((?x42968 (- (- ?x40235 (* (* 2.0 l_0_15_119) l_0_15_128)) (* (* 2.0 l_0_15_120) l_0_15_129))))
 (let ((?x42972 (- (- ?x42968 (* (* 2.0 l_0_15_121) l_0_15_130)) (* (* 2.0 l_0_15_122) l_0_15_131))))
 (let ((?x42978 (- (- (- (- (- ?x42972 ?x19764) ?x40614) ?x40613) ?x40618) (* (* 2.0 l_0_15_175) l_0_15_184))))
 (let ((?x42982 (- (- ?x42978 (* (* 2.0 l_0_15_176) l_0_15_185)) (* (* 2.0 l_0_15_177) l_0_15_186))))
 (let ((?x42987 (+ (- (+ (- ?x42982 (* (* 2.0 l_0_15_178) l_0_15_187)) ?x40164) ?x40250) ?x40166)))
 (let ((?x42994 (- (- (- (+ (- (+ (- ?x42987 ?x40252) ?x40168) ?x40254) ?x40170) ?x40256) ?x40173) ?x40176)))
 (= (- (- ?x42994 ?x40179) ?x40182) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42292 (* l_0_15_99 l_0_15_99)))
 (let ((?x42290 (* l_0_15_98 l_0_15_98)))
 (let ((?x42288 (* l_0_15_97 l_0_15_97)))
 (let ((?x42286 (* l_0_15_96 l_0_15_96)))
 (let ((?x42284 (* l_0_15_95 l_0_15_95)))
 (let ((?x42282 (* l_0_15_71 l_0_15_71)))
 (let ((?x42280 (* l_0_15_70 l_0_15_70)))
 (let ((?x42278 (* l_0_15_69 l_0_15_69)))
 (let ((?x42276 (* l_0_15_68 l_0_15_68)))
 (let ((?x42296 (* l_0_15_67 l_0_15_67)))
 (let ((?x41805 (* l_0_15_183 l_0_15_183)))
 (let ((?x41802 (* l_0_15_182 l_0_15_182)))
 (let ((?x41799 (* l_0_15_181 l_0_15_181)))
 (let ((?x41796 (* l_0_15_180 l_0_15_180)))
 (let ((?x41793 (* l_0_15_179 l_0_15_179)))
 (let ((?x30359 (* l_0_15_155 l_0_15_155)))
 (let ((?x19793 (* l_0_15_154 l_0_15_154)))
 (let ((?x30358 (* l_0_15_153 l_0_15_153)))
 (let ((?x30353 (* l_0_15_152 l_0_15_152)))
 (let ((?x30349 (* l_0_15_151 l_0_15_151)))
 (let ((?x43028 (* l_0_15_127 l_0_15_127)))
 (let ((?x43026 (* l_0_15_126 l_0_15_126)))
 (let ((?x43024 (* l_0_15_125 l_0_15_125)))
 (let ((?x43025 (- (- (* (- l_0_15_123) l_0_15_123) (* l_0_15_124 l_0_15_124)) ?x43024)))
 (let ((?x43034 (- (- (- (- (- (- (- ?x43025 ?x43026) ?x43028) ?x30349) ?x30353) ?x30358) ?x19793) ?x30359)))
 (let ((?x43041 (- (- (- (- (- (- (- ?x43034 ?x41793) ?x41796) ?x41799) ?x41802) ?x41805) ?x42296) ?x42276)))
 (let ((?x43048 (+ (+ (+ (+ (- (- (- ?x43041 ?x42278) ?x42280) ?x42282) ?x42284) ?x42286) ?x42288) ?x42290)))
 (= (+ ?x43048 ?x42292) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x42292 (* l_0_15_99 l_0_15_99)))
 (let ((?x42290 (* l_0_15_98 l_0_15_98)))
 (let ((?x42288 (* l_0_15_97 l_0_15_97)))
 (let ((?x42286 (* l_0_15_96 l_0_15_96)))
 (let ((?x42284 (* l_0_15_95 l_0_15_95)))
 (let ((?x42282 (* l_0_15_71 l_0_15_71)))
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42337 (* ?x42336 l_0_15_76)))
 (let ((?x42280 (* l_0_15_70 l_0_15_70)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42334 (* ?x42333 l_0_15_75)))
 (let ((?x42278 (* l_0_15_69 l_0_15_69)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42331 (* ?x42330 l_0_15_74)))
 (let ((?x42276 (* l_0_15_68 l_0_15_68)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42328 (* ?x42327 l_0_15_73)))
 (let ((?x42296 (* l_0_15_67 l_0_15_67)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42325 (* ?x42324 l_0_15_72)))
 (let ((?x40755 (* 2.0 l_0_15_155)))
 (let ((?x40756 (* ?x40755 l_0_15_160)))
 (let ((?x40752 (* 2.0 l_0_15_154)))
 (let ((?x40753 (* ?x40752 l_0_15_159)))
 (let ((?x40749 (* 2.0 l_0_15_153)))
 (let ((?x40750 (* ?x40749 l_0_15_158)))
 (let ((?x40746 (* 2.0 l_0_15_152)))
 (let ((?x40747 (* ?x40746 l_0_15_157)))
 (let ((?x40743 (* 2.0 l_0_15_151)))
 (let ((?x40744 (* ?x40743 l_0_15_156)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42322 (* ?x42321 l_0_15_99)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42319 (* ?x40233 l_0_15_98)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42317 (* ?x40230 l_0_15_97)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42315 (* ?x40215 l_0_15_96)))
 (let ((?x42323 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_95) ?x42315) ?x42317) ?x42319) ?x42322)))
 (let ((?x6598 (- (- ?x42323 (* (* 2.0 l_0_15_123) l_0_15_128)) (* (* 2.0 l_0_15_124) l_0_15_129))))
 (let ((?x32589 (- (- ?x6598 (* (* 2.0 l_0_15_125) l_0_15_130)) (* (* 2.0 l_0_15_126) l_0_15_131))))
 (let ((?x6793 (- (- (- (- ?x32589 (* (* 2.0 l_0_15_127) l_0_15_132)) ?x40744) ?x40747) ?x40750)))
 (let ((?x6647 (- (- (- (- ?x6793 ?x40753) ?x40756) (* (* 2.0 l_0_15_179) l_0_15_184)) (* (* 2.0 l_0_15_180) l_0_15_185))))
 (let ((?x43065 (- (- ?x6647 (* (* 2.0 l_0_15_181) l_0_15_186)) (* (* 2.0 l_0_15_182) l_0_15_187))))
 (let ((?x43071 (- (+ (- (- ?x43065 (* (* 2.0 l_0_15_183) l_0_15_188)) ?x42325) ?x42296) ?x42328)))
 (let ((?x43078 (+ (- (+ (- (+ (- (+ ?x43071 ?x42276) ?x42331) ?x42278) ?x42334) ?x42280) ?x42337) ?x42282)))
 (= (- (- (- (- (- ?x43078 ?x42284) ?x42286) ?x42288) ?x42290) ?x42292) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42376 (* ?x42336 l_0_15_82)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42374 (* ?x42333 l_0_15_81)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42372 (* ?x42330 l_0_15_80)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42370 (* ?x42327 l_0_15_79)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42368 (* ?x42324 l_0_15_78)))
 (let ((?x40755 (* 2.0 l_0_15_155)))
 (let ((?x40834 (* ?x40755 l_0_15_166)))
 (let ((?x40752 (* 2.0 l_0_15_154)))
 (let ((?x40832 (* ?x40752 l_0_15_165)))
 (let ((?x40749 (* 2.0 l_0_15_153)))
 (let ((?x40830 (* ?x40749 l_0_15_164)))
 (let ((?x40746 (* 2.0 l_0_15_152)))
 (let ((?x40828 (* ?x40746 l_0_15_163)))
 (let ((?x40743 (* 2.0 l_0_15_151)))
 (let ((?x40813 (* ?x40743 l_0_15_162)))
 (let ((?x42366 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x42363 (* ?x39844 l_0_15_98)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x42361 (* ?x39841 l_0_15_97)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x4586 (* ?x39838 l_0_15_96)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4563 (* ?x39829 l_0_15_95)))
 (let ((?x42367 (+ (+ (+ (+ ?x4563 ?x4586) ?x42361) ?x42363) ?x42366)))
 (let ((?x43144 (- (- ?x42367 (* (* 2.0 l_0_15_123) l_0_15_134)) (* (* 2.0 l_0_15_124) l_0_15_135))))
 (let ((?x43148 (- (- ?x43144 (* (* 2.0 l_0_15_125) l_0_15_136)) (* (* 2.0 l_0_15_126) l_0_15_137))))
 (let ((?x43153 (- (- (- (- ?x43148 (* (* 2.0 l_0_15_127) l_0_15_138)) ?x40813) ?x40828) ?x40830)))
 (let ((?x43159 (- (- (- (- ?x43153 ?x40832) ?x40834) (* (* 2.0 l_0_15_179) l_0_15_190)) (* (* 2.0 l_0_15_180) l_0_15_191))))
 (let ((?x43163 (- (- ?x43159 (* (* 2.0 l_0_15_181) l_0_15_192)) (* (* 2.0 l_0_15_182) l_0_15_193))))
 (let ((?x43168 (- (- (- (- ?x43163 (* (* 2.0 l_0_15_183) l_0_15_194)) ?x42368) ?x42370) ?x42372)))
 (= (- (- ?x43168 ?x42374) ?x42376) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42425 (* l_0_15_77 l_0_15_77)))
 (let ((?x42423 (* l_0_15_76 l_0_15_76)))
 (let ((?x42421 (* l_0_15_75 l_0_15_75)))
 (let ((?x42419 (* l_0_15_74 l_0_15_74)))
 (let ((?x42417 (* l_0_15_73 l_0_15_73)))
 (let ((?x42415 (* l_0_15_72 l_0_15_72)))
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42337 (* ?x42336 l_0_15_76)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42334 (* ?x42333 l_0_15_75)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42331 (* ?x42330 l_0_15_74)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42328 (* ?x42327 l_0_15_73)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42325 (* ?x42324 l_0_15_72)))
 (let ((?x42019 (* l_0_15_189 l_0_15_189)))
 (let ((?x42016 (* l_0_15_188 l_0_15_188)))
 (let ((?x42013 (* l_0_15_187 l_0_15_187)))
 (let ((?x42010 (* l_0_15_186 l_0_15_186)))
 (let ((?x42007 (* l_0_15_185 l_0_15_185)))
 (let ((?x42004 (* l_0_15_184 l_0_15_184)))
 (let ((?x40889 (* l_0_15_161 l_0_15_161)))
 (let ((?x40875 (* l_0_15_160 l_0_15_160)))
 (let ((?x40866 (* l_0_15_159 l_0_15_159)))
 (let ((?x40864 (* l_0_15_158 l_0_15_158)))
 (let ((?x30425 (* l_0_15_157 l_0_15_157)))
 (let ((?x30422 (* l_0_15_156 l_0_15_156)))
 (let ((?x43194 (* l_0_15_133 l_0_15_133)))
 (let ((?x43192 (* l_0_15_132 l_0_15_132)))
 (let ((?x43190 (* l_0_15_131 l_0_15_131)))
 (let ((?x43188 (* l_0_15_130 l_0_15_130)))
 (let ((?x22674 (* l_0_15_129 l_0_15_129)))
 (let ((?x33666 (* l_0_15_128 l_0_15_128)))
 (let ((?x42413 (* l_0_15_105 l_0_15_105)))
 (let ((?x42411 (* l_0_15_104 l_0_15_104)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42322 (* ?x42321 l_0_15_99)))
 (let ((?x42409 (* l_0_15_103 l_0_15_103)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42319 (* ?x40233 l_0_15_98)))
 (let ((?x42407 (* l_0_15_102 l_0_15_102)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42317 (* ?x40230 l_0_15_97)))
 (let ((?x42405 (* l_0_15_101 l_0_15_101)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42315 (* ?x40215 l_0_15_96)))
 (let ((?x42404 (* l_0_15_100 l_0_15_100)))
 (let ((?x22743 (- (+ (- (+ (* (* (- 2.0) l_0_15_100) l_0_15_95) ?x42404) ?x42315) ?x42405) ?x42317)))
 (let ((?x22699 (- (+ (+ (- (+ (- (+ ?x22743 ?x42407) ?x42319) ?x42409) ?x42322) ?x42411) ?x42413) ?x33666)))
 (let ((?x43197 (- (- (- (- (- (- (- ?x22699 ?x22674) ?x43188) ?x43190) ?x43192) ?x43194) ?x30422) ?x30425)))
 (let ((?x43204 (- (- (- (- (- (- (- ?x43197 ?x40864) ?x40866) ?x40875) ?x40889) ?x42004) ?x42007) ?x42010)))
 (let ((?x43211 (+ (+ (+ (+ (- (- (- ?x43204 ?x42013) ?x42016) ?x42019) ?x42325) ?x42328) ?x42331) ?x42334)))
 (let ((?x43218 (- (- (- (- (- (- (+ ?x43211 ?x42337) ?x42415) ?x42417) ?x42419) ?x42421) ?x42423) ?x42425)))
 (= ?x43218 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42464 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42461 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42458 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42455 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42452 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42449 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x42336 (* 2.0 l_0_15_71)))
 (let ((?x42376 (* ?x42336 l_0_15_82)))
 (let ((?x42333 (* 2.0 l_0_15_70)))
 (let ((?x42374 (* ?x42333 l_0_15_81)))
 (let ((?x42330 (* 2.0 l_0_15_69)))
 (let ((?x42372 (* ?x42330 l_0_15_80)))
 (let ((?x42327 (* 2.0 l_0_15_68)))
 (let ((?x42370 (* ?x42327 l_0_15_79)))
 (let ((?x42324 (* 2.0 l_0_15_67)))
 (let ((?x42368 (* ?x42324 l_0_15_78)))
 (let ((?x40947 (* (* 2.0 l_0_15_161) l_0_15_167)))
 (let ((?x40944 (* (* 2.0 l_0_15_160) l_0_15_166)))
 (let ((?x40939 (* (* 2.0 l_0_15_159) l_0_15_165)))
 (let ((?x40936 (* (* 2.0 l_0_15_158) l_0_15_164)))
 (let ((?x40933 (* (* 2.0 l_0_15_157) l_0_15_163)))
 (let ((?x40931 (* (* 2.0 l_0_15_156) l_0_15_162)))
 (let ((?x42366 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39844 (* 2.0 l_0_15_109)))
 (let ((?x42363 (* ?x39844 l_0_15_98)))
 (let ((?x39841 (* 2.0 l_0_15_108)))
 (let ((?x42361 (* ?x39841 l_0_15_97)))
 (let ((?x39838 (* 2.0 l_0_15_107)))
 (let ((?x4586 (* ?x39838 l_0_15_96)))
 (let ((?x39829 (* 2.0 l_0_15_106)))
 (let ((?x4563 (* ?x39829 l_0_15_95)))
 (let ((?x42446 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42443 (* ?x42321 l_0_15_110)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42441 (* ?x40233 l_0_15_109)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42439 (* ?x40230 l_0_15_108)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42437 (* ?x40215 l_0_15_107)))
 (let ((?x42444 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_106) ?x42437) ?x42439) ?x42441) ?x42443)))
 (let ((?x42447 (+ ?x42444 ?x42446)))
 (let ((?x43242 (- (- (- (- (- (- ?x42447 ?x4563) ?x4586) ?x42361) ?x42363) ?x42366) (* (* 2.0 l_0_15_128) l_0_15_134))))
 (let ((?x43248 (- (- ?x43242 (* (* 2.0 l_0_15_129) l_0_15_135)) (* (* 2.0 l_0_15_130) l_0_15_136))))
 (let ((?x43254 (- (- ?x43248 (* (* 2.0 l_0_15_131) l_0_15_137)) (* (* 2.0 l_0_15_132) l_0_15_138))))
 (let ((?x43260 (- (- (- (- ?x43254 (* (* 2.0 l_0_15_133) l_0_15_139)) ?x40931) ?x40933) ?x40936)))
 (let ((?x43266 (- (- (- (- ?x43260 ?x40939) ?x40944) ?x40947) (* (* 2.0 l_0_15_184) l_0_15_190))))
 (let ((?x43272 (- (- ?x43266 (* (* 2.0 l_0_15_185) l_0_15_191)) (* (* 2.0 l_0_15_186) l_0_15_192))))
 (let ((?x43278 (- (- ?x43272 (* (* 2.0 l_0_15_187) l_0_15_193)) (* (* 2.0 l_0_15_188) l_0_15_194))))
 (let ((?x43284 (+ (+ (+ (- ?x43278 (* (* 2.0 l_0_15_189) l_0_15_195)) ?x42368) ?x42370) ?x42372)))
 (let ((?x43291 (- (- (- (- (- (+ (+ ?x43284 ?x42374) ?x42376) ?x42449) ?x42452) ?x42455) ?x42458) ?x42461)))
 (= (- ?x43291 ?x42464) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42528 (* l_0_15_84 l_0_15_84)))
 (let ((?x42526 (* l_0_15_83 l_0_15_83)))
 (let ((?x42524 (* l_0_15_82 l_0_15_82)))
 (let ((?x42522 (* l_0_15_81 l_0_15_81)))
 (let ((?x42520 (* l_0_15_80 l_0_15_80)))
 (let ((?x42518 (* l_0_15_79 l_0_15_79)))
 (let ((?x42516 (* l_0_15_78 l_0_15_78)))
 (let ((?x42109 (* l_0_15_196 l_0_15_196)))
 (let ((?x42106 (* l_0_15_195 l_0_15_195)))
 (let ((?x42103 (* l_0_15_194 l_0_15_194)))
 (let ((?x42100 (* l_0_15_193 l_0_15_193)))
 (let ((?x42097 (* l_0_15_192 l_0_15_192)))
 (let ((?x31394 (* l_0_15_191 l_0_15_191)))
 (let ((?x31417 (* l_0_15_190 l_0_15_190)))
 (let ((?x41025 (* l_0_15_168 l_0_15_168)))
 (let ((?x41023 (* l_0_15_167 l_0_15_167)))
 (let ((?x41021 (* l_0_15_166 l_0_15_166)))
 (let ((?x19975 (* l_0_15_165 l_0_15_165)))
 (let ((?x19954 (* l_0_15_164 l_0_15_164)))
 (let ((?x30410 (* l_0_15_163 l_0_15_163)))
 (let ((?x30405 (* l_0_15_162 l_0_15_162)))
 (let ((?x43334 (* l_0_15_140 l_0_15_140)))
 (let ((?x43332 (* l_0_15_139 l_0_15_139)))
 (let ((?x43330 (* l_0_15_138 l_0_15_138)))
 (let ((?x43328 (* l_0_15_137 l_0_15_137)))
 (let ((?x7460 (* l_0_15_136 l_0_15_136)))
 (let ((?x7534 (* l_0_15_135 l_0_15_135)))
 (let ((?x33948 (* l_0_15_134 l_0_15_134)))
 (let ((?x42514 (* l_0_15_112 l_0_15_112)))
 (let ((?x42512 (* l_0_15_111 l_0_15_111)))
 (let ((?x42510 (* l_0_15_110 l_0_15_110)))
 (let ((?x42508 (* l_0_15_109 l_0_15_109)))
 (let ((?x42506 (* l_0_15_108 l_0_15_108)))
 (let ((?x42507 (+ (+ (* l_0_15_106 l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42506)))
 (let ((?x42515 (+ (+ (+ (+ ?x42507 ?x42508) ?x42510) ?x42512) ?x42514)))
 (let ((?x43335 (- (- (- (- (- (- (- ?x42515 ?x33948) ?x7534) ?x7460) ?x43328) ?x43330) ?x43332) ?x43334)))
 (let ((?x43342 (- (- (- (- (- (- (- ?x43335 ?x30405) ?x30410) ?x19954) ?x19975) ?x41021) ?x41023) ?x41025)))
 (let ((?x43349 (- (- (- (- (- (- (- ?x43342 ?x31417) ?x31394) ?x42097) ?x42100) ?x42103) ?x42106) ?x42109)))
 (let ((?x43356 (- (- (- (- (- (- (- ?x43349 ?x42516) ?x42518) ?x42520) ?x42522) ?x42524) ?x42526) ?x42528)))
 (= ?x43356 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x4342 (* ?x39716 l_0_15_86)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x42560 (* ?x39713 l_0_15_58)))
 (let ((?x23754 (- (* (* (- 2.0) l_0_15_198) l_0_15_212) (* (* 2.0 l_0_15_199) l_0_15_213))))
 (let ((?x34095 (- (- ?x23754 (* (* 2.0 l_0_15_226) l_0_15_240)) (* (* 2.0 l_0_15_227) l_0_15_241))))
 (let ((?x43372 (- (- ?x34095 (* (* 2.0 l_0_15_254) l_0_15_268)) (* (* 2.0 l_0_15_255) l_0_15_269))))
 (= (- (+ ?x43372 ?x42560) ?x4342) 0.0)))))))))
(assert
 (let ((?x39716 (* 2.0 l_0_15_85)))
 (let ((?x39717 (* ?x39716 l_0_15_91)))
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x39714 (* ?x39713 l_0_15_63)))
 (let ((?x43396 (- (* (* (- 2.0) l_0_15_203) l_0_15_212) (* (* 2.0 l_0_15_204) l_0_15_213))))
 (let ((?x43400 (- (- ?x43396 (* (* 2.0 l_0_15_205) l_0_15_214)) (* (* 2.0 l_0_15_206) l_0_15_215))))
 (let ((?x43404 (- (- ?x43400 (* (* 2.0 l_0_15_231) l_0_15_240)) (* (* 2.0 l_0_15_232) l_0_15_241))))
 (let ((?x43408 (- (- ?x43404 (* (* 2.0 l_0_15_233) l_0_15_242)) (* (* 2.0 l_0_15_234) l_0_15_243))))
 (let ((?x43412 (- (- ?x43408 (* (* 2.0 l_0_15_259) l_0_15_268)) (* (* 2.0 l_0_15_260) l_0_15_269))))
 (let ((?x43416 (- (- ?x43412 (* (* 2.0 l_0_15_261) l_0_15_270)) (* (* 2.0 l_0_15_262) l_0_15_271))))
 (= (- (+ ?x43416 ?x39714) ?x39717) 0.0))))))))))))
(assert
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x21444 (* ?x39713 l_0_15_72)))
 (let ((?x43503 (* l_0_15_273 l_0_15_273)))
 (let ((?x43501 (* l_0_15_272 l_0_15_272)))
 (let ((?x43499 (* l_0_15_271 l_0_15_271)))
 (let ((?x43497 (* l_0_15_270 l_0_15_270)))
 (let ((?x43495 (* l_0_15_269 l_0_15_269)))
 (let ((?x43493 (* l_0_15_268 l_0_15_268)))
 (let ((?x43491 (* l_0_15_245 l_0_15_245)))
 (let ((?x43489 (* l_0_15_244 l_0_15_244)))
 (let ((?x43487 (* l_0_15_243 l_0_15_243)))
 (let ((?x43485 (* l_0_15_242 l_0_15_242)))
 (let ((?x43483 (* l_0_15_241 l_0_15_241)))
 (let ((?x43481 (* l_0_15_240 l_0_15_240)))
 (let ((?x43479 (* l_0_15_217 l_0_15_217)))
 (let ((?x43477 (* l_0_15_216 l_0_15_216)))
 (let ((?x43475 (* l_0_15_215 l_0_15_215)))
 (let ((?x43473 (* l_0_15_214 l_0_15_214)))
 (let ((?x43471 (* l_0_15_213 l_0_15_213)))
 (let ((?x43469 (* l_0_15_212 l_0_15_212)))
 (let ((?x43476 (- (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_85) ?x43469) ?x43471) ?x43473) ?x43475)))
 (let ((?x43490 (- (- (- (- (- (- (- ?x43476 ?x43477) ?x43479) ?x43481) ?x43483) ?x43485) ?x43487) ?x43489)))
 (let ((?x43504 (- (- (- (- (- (- (- ?x43490 ?x43491) ?x43493) ?x43495) ?x43497) ?x43499) ?x43501) ?x43503)))
 (= (+ ?x43504 ?x21444) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x39713 (* 2.0 l_0_15_57)))
 (let ((?x31578 (* ?x39713 l_0_15_78)))
 (let ((?x43537 (- (* (* (- 2.0) l_0_15_106) l_0_15_85) (* (* 2.0 l_0_15_212) l_0_15_218))))
 (let ((?x43543 (- (- ?x43537 (* (* 2.0 l_0_15_213) l_0_15_219)) (* (* 2.0 l_0_15_214) l_0_15_220))))
 (let ((?x43549 (- (- ?x43543 (* (* 2.0 l_0_15_215) l_0_15_221)) (* (* 2.0 l_0_15_216) l_0_15_222))))
 (let ((?x43555 (- (- ?x43549 (* (* 2.0 l_0_15_217) l_0_15_223)) (* (* 2.0 l_0_15_240) l_0_15_246))))
 (let ((?x43561 (- (- ?x43555 (* (* 2.0 l_0_15_241) l_0_15_247)) (* (* 2.0 l_0_15_242) l_0_15_248))))
 (let ((?x43567 (- (- ?x43561 (* (* 2.0 l_0_15_243) l_0_15_249)) (* (* 2.0 l_0_15_244) l_0_15_250))))
 (let ((?x43573 (- (- ?x43567 (* (* 2.0 l_0_15_245) l_0_15_251)) (* (* 2.0 l_0_15_268) l_0_15_274))))
 (let ((?x43579 (- (- ?x43573 (* (* 2.0 l_0_15_269) l_0_15_275)) (* (* 2.0 l_0_15_270) l_0_15_276))))
 (let ((?x43585 (- (- ?x43579 (* (* 2.0 l_0_15_271) l_0_15_277)) (* (* 2.0 l_0_15_272) l_0_15_278))))
 (= (+ (- ?x43585 (* (* 2.0 l_0_15_273) l_0_15_279)) ?x31578) 0.0)))))))))))))
(assert
 (let ((?x42176 (* l_0_15_87 l_0_15_87)))
 (let ((?x42174 (* l_0_15_86 l_0_15_86)))
 (let ((?x43637 (- (- (+ (* l_0_15_58 l_0_15_58) (* l_0_15_59 l_0_15_59)) ?x42174) ?x42176)))
 (= ?x43637 0.0)))))
(assert
 (let ((?x40021 (* 2.0 l_0_15_87)))
 (let ((?x40022 (* ?x40021 l_0_15_92)))
 (let ((?x40018 (* 2.0 l_0_15_86)))
 (let ((?x40019 (* ?x40018 l_0_15_91)))
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x40016 (* ?x40015 l_0_15_64)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x40013 (* ?x40012 l_0_15_63)))
 (= (- (- (+ ?x40013 ?x40016) ?x40019) ?x40022) 0.0))))))))))
(assert
 (let ((?x40015 (* 2.0 l_0_15_59)))
 (let ((?x42221 (* ?x40015 l_0_15_73)))
 (let ((?x40012 (* 2.0 l_0_15_58)))
 (let ((?x42219 (* ?x40012 l_0_15_72)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42217 (* ?x40215 l_0_15_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_100) l_0_15_86) ?x42217) ?x42219) ?x42221) 0.0))))))))
(assert
 (let ((?x40124 (* l_0_15_94 l_0_15_94)))
 (let ((?x40122 (* l_0_15_93 l_0_15_93)))
 (let ((?x40120 (* l_0_15_92 l_0_15_92)))
 (let ((?x40118 (* l_0_15_91 l_0_15_91)))
 (let ((?x40116 (* l_0_15_66 l_0_15_66)))
 (let ((?x40114 (* l_0_15_65 l_0_15_65)))
 (let ((?x24428 (+ (+ (+ (* l_0_15_63 l_0_15_63) (* l_0_15_64 l_0_15_64)) ?x40114) ?x40116)))
 (= (- (- (- (- ?x24428 ?x40118) ?x40120) ?x40122) ?x40124) 0.0)))))))))
(assert
 (let ((?x39896 (* 2.0 l_0_15_66)))
 (let ((?x40256 (* ?x39896 l_0_15_75)))
 (let ((?x39893 (* 2.0 l_0_15_65)))
 (let ((?x40254 (* ?x39893 l_0_15_74)))
 (let ((?x39890 (* 2.0 l_0_15_64)))
 (let ((?x40252 (* ?x39890 l_0_15_73)))
 (let ((?x39887 (* 2.0 l_0_15_63)))
 (let ((?x40250 (* ?x39887 l_0_15_72)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x40234 (* ?x40233 l_0_15_94)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x40231 (* ?x40230 l_0_15_93)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x40217 (* ?x40215 l_0_15_92)))
 (let ((?x43669 (+ (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_91) ?x40217) ?x40231) ?x40234) ?x40250)))
 (= (+ (+ (+ ?x43669 ?x40252) ?x40254) ?x40256) 0.0)))))))))))))))))
(assert
 (let ((?x42425 (* l_0_15_77 l_0_15_77)))
 (let ((?x42423 (* l_0_15_76 l_0_15_76)))
 (let ((?x42421 (* l_0_15_75 l_0_15_75)))
 (let ((?x42419 (* l_0_15_74 l_0_15_74)))
 (let ((?x42417 (* l_0_15_73 l_0_15_73)))
 (let ((?x42415 (* l_0_15_72 l_0_15_72)))
 (let ((?x42413 (* l_0_15_105 l_0_15_105)))
 (let ((?x42411 (* l_0_15_104 l_0_15_104)))
 (let ((?x42409 (* l_0_15_103 l_0_15_103)))
 (let ((?x42407 (* l_0_15_102 l_0_15_102)))
 (let ((?x43677 (- (- (* (- l_0_15_100) l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x42407)))
 (let ((?x43684 (+ (+ (+ (+ (- (- (- ?x43677 ?x42409) ?x42411) ?x42413) ?x42415) ?x42417) ?x42419) ?x42421)))
 (= (+ (+ ?x43684 ?x42423) ?x42425) 0.0))))))))))))))
(assert
 (let ((?x42464 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42461 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42458 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42455 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42452 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42449 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x42446 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x42321 (* 2.0 l_0_15_104)))
 (let ((?x42443 (* ?x42321 l_0_15_110)))
 (let ((?x40233 (* 2.0 l_0_15_103)))
 (let ((?x42441 (* ?x40233 l_0_15_109)))
 (let ((?x40230 (* 2.0 l_0_15_102)))
 (let ((?x42439 (* ?x40230 l_0_15_108)))
 (let ((?x40215 (* 2.0 l_0_15_101)))
 (let ((?x42437 (* ?x40215 l_0_15_107)))
 (let ((?x43699 (- (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_106) ?x42437) ?x42439) ?x42441) ?x42443)))
 (let ((?x43706 (+ (+ (+ (+ (+ (+ (- ?x43699 ?x42446) ?x42449) ?x42452) ?x42455) ?x42458) ?x42461) ?x42464)))
 (= ?x43706 0.0)))))))))))))))))))
(assert
 (let ((?x42528 (* l_0_15_84 l_0_15_84)))
 (let ((?x42526 (* l_0_15_83 l_0_15_83)))
 (let ((?x42524 (* l_0_15_82 l_0_15_82)))
 (let ((?x42522 (* l_0_15_81 l_0_15_81)))
 (let ((?x42520 (* l_0_15_80 l_0_15_80)))
 (let ((?x42518 (* l_0_15_79 l_0_15_79)))
 (let ((?x42516 (* l_0_15_78 l_0_15_78)))
 (let ((?x42514 (* l_0_15_112 l_0_15_112)))
 (let ((?x42512 (* l_0_15_111 l_0_15_111)))
 (let ((?x42510 (* l_0_15_110 l_0_15_110)))
 (let ((?x42508 (* l_0_15_109 l_0_15_109)))
 (let ((?x42506 (* l_0_15_108 l_0_15_108)))
 (let ((?x34513 (- (- (* (- l_0_15_106) l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42506)))
 (let ((?x34525 (+ (+ (+ (- (- (- (- ?x34513 ?x42508) ?x42510) ?x42512) ?x42514) ?x42516) ?x42518) ?x42520)))
 (= (+ (+ (+ (+ ?x34525 ?x42522) ?x42524) ?x42526) ?x42528) 0.0))))))))))))))))
(assert
 (let ((?x43728 (* l_0_15_253 l_0_15_253)))
 (let ((?x43729 (- (- (* (- l_0_15_197) l_0_15_197) (* l_0_15_225 l_0_15_225)) ?x43728)))
 (= ?x43729 0.0))))
(assert
 (let ((?x43744 (- (* (* (- 2.0) l_0_15_197) l_0_15_198) (* (* 2.0 l_0_15_225) l_0_15_226))))
 (= (- ?x43744 (* (* 2.0 l_0_15_253) l_0_15_254)) 0.0)))
(assert
 (let ((?x43764 (- (* (* (- 2.0) l_0_15_197) l_0_15_203) (* (* 2.0 l_0_15_225) l_0_15_231))))
 (= (- ?x43764 (* (* 2.0 l_0_15_253) l_0_15_259)) 0.0)))
(assert
 (let ((?x43781 (- (* (* (- 2.0) l_0_15_197) l_0_15_218) (* (* 2.0 l_0_15_225) l_0_15_246))))
 (= (- ?x43781 (* (* 2.0 l_0_15_253) l_0_15_274)) 0.0)))
(assert
 (let ((?x43809 (* l_0_15_255 l_0_15_255)))
 (let ((?x43807 (* l_0_15_254 l_0_15_254)))
 (let ((?x43805 (* l_0_15_227 l_0_15_227)))
 (let ((?x43803 (* l_0_15_226 l_0_15_226)))
 (let ((?x43804 (- (- (* (- l_0_15_198) l_0_15_198) (* l_0_15_199 l_0_15_199)) ?x43803)))
 (= (- (- (- ?x43804 ?x43805) ?x43807) ?x43809) 0.0)))))))
(assert
 (let ((?x43828 (- (* (* (- 2.0) l_0_15_198) l_0_15_203) (* (* 2.0 l_0_15_199) l_0_15_204))))
 (let ((?x43832 (- (- ?x43828 (* (* 2.0 l_0_15_226) l_0_15_231)) (* (* 2.0 l_0_15_227) l_0_15_232))))
 (let ((?x43836 (- (- ?x43832 (* (* 2.0 l_0_15_254) l_0_15_259)) (* (* 2.0 l_0_15_255) l_0_15_260))))
 (= ?x43836 0.0)))))
(assert
 (let ((?x43875 (* l_0_15_262 l_0_15_262)))
 (let ((?x43873 (* l_0_15_261 l_0_15_261)))
 (let ((?x43871 (* l_0_15_260 l_0_15_260)))
 (let ((?x43869 (* l_0_15_259 l_0_15_259)))
 (let ((?x43867 (* l_0_15_234 l_0_15_234)))
 (let ((?x43865 (* l_0_15_233 l_0_15_233)))
 (let ((?x43863 (* l_0_15_232 l_0_15_232)))
 (let ((?x43861 (* l_0_15_231 l_0_15_231)))
 (let ((?x43859 (* l_0_15_206 l_0_15_206)))
 (let ((?x43857 (* l_0_15_205 l_0_15_205)))
 (let ((?x43858 (- (- (* (- l_0_15_203) l_0_15_203) (* l_0_15_204 l_0_15_204)) ?x43857)))
 (let ((?x43872 (- (- (- (- (- (- (- ?x43858 ?x43859) ?x43861) ?x43863) ?x43865) ?x43867) ?x43869) ?x43871)))
 (= (- (- ?x43872 ?x43873) ?x43875) 0.0))))))))))))))
(assert
 (let ((?x43935 (* l_0_15_280 l_0_15_280)))
 (let ((?x43933 (* l_0_15_279 l_0_15_279)))
 (let ((?x43931 (* l_0_15_278 l_0_15_278)))
 (let ((?x43929 (* l_0_15_277 l_0_15_277)))
 (let ((?x43927 (* l_0_15_276 l_0_15_276)))
 (let ((?x43925 (* l_0_15_275 l_0_15_275)))
 (let ((?x43923 (* l_0_15_274 l_0_15_274)))
 (let ((?x43921 (* l_0_15_252 l_0_15_252)))
 (let ((?x43919 (* l_0_15_251 l_0_15_251)))
 (let ((?x43917 (* l_0_15_250 l_0_15_250)))
 (let ((?x43915 (* l_0_15_249 l_0_15_249)))
 (let ((?x43913 (* l_0_15_248 l_0_15_248)))
 (let ((?x43911 (* l_0_15_247 l_0_15_247)))
 (let ((?x43909 (* l_0_15_246 l_0_15_246)))
 (let ((?x43907 (* l_0_15_224 l_0_15_224)))
 (let ((?x43905 (* l_0_15_223 l_0_15_223)))
 (let ((?x43903 (* l_0_15_222 l_0_15_222)))
 (let ((?x43901 (* l_0_15_221 l_0_15_221)))
 (let ((?x43899 (* l_0_15_220 l_0_15_220)))
 (let ((?x43900 (- (- (* (- l_0_15_218) l_0_15_218) (* l_0_15_219 l_0_15_219)) ?x43899)))
 (let ((?x43914 (- (- (- (- (- (- (- ?x43900 ?x43901) ?x43903) ?x43905) ?x43907) ?x43909) ?x43911) ?x43913)))
 (let ((?x43928 (- (- (- (- (- (- (- ?x43914 ?x43915) ?x43917) ?x43919) ?x43921) ?x43923) ?x43925) ?x43927)))
 (= (- (- (- (- ?x43928 ?x43929) ?x43931) ?x43933) ?x43935) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_28 0.0))
(assert
 (>= l_0_15_29 0.0))
(assert
 (>= l_0_15_31 0.0))
(assert
 (>= l_0_15_34 0.0))
(assert
 (>= l_0_15_38 0.0))
(assert
 (>= l_0_15_43 0.0))
(assert
 (>= l_0_15_49 0.0))
(assert
 (>= l_0_15_56 0.0))
(assert
 (>= l_0_15_57 0.0))
(assert
 (>= l_0_15_59 0.0))
(assert
 (>= l_0_15_62 0.0))
(assert
 (>= l_0_15_66 0.0))
(assert
 (>= l_0_15_71 0.0))
(assert
 (>= l_0_15_77 0.0))
(assert
 (>= l_0_15_84 0.0))
(assert
 (>= l_0_15_85 0.0))
(assert
 (>= l_0_15_87 0.0))
(assert
 (>= l_0_15_90 0.0))
(assert
 (>= l_0_15_94 0.0))
(assert
 (>= l_0_15_99 0.0))
(assert
 (>= l_0_15_105 0.0))
(assert
 (>= l_0_15_112 0.0))
(assert
 (>= l_0_15_113 0.0))
(assert
 (>= l_0_15_115 0.0))
(assert
 (>= l_0_15_118 0.0))
(assert
 (>= l_0_15_122 0.0))
(assert
 (>= l_0_15_127 0.0))
(assert
 (>= l_0_15_133 0.0))
(assert
 (>= l_0_15_140 0.0))
(assert
 (>= l_0_15_141 0.0))
(assert
 (>= l_0_15_143 0.0))
(assert
 (>= l_0_15_146 0.0))
(assert
 (>= l_0_15_150 0.0))
(assert
 (>= l_0_15_155 0.0))
(assert
 (>= l_0_15_161 0.0))
(assert
 (>= l_0_15_168 0.0))
(assert
 (>= l_0_15_169 0.0))
(assert
 (>= l_0_15_171 0.0))
(assert
 (>= l_0_15_174 0.0))
(assert
 (>= l_0_15_178 0.0))
(assert
 (>= l_0_15_183 0.0))
(assert
 (>= l_0_15_189 0.0))
(assert
 (>= l_0_15_196 0.0))
(assert
 (>= l_0_15_197 0.0))
(assert
 (>= l_0_15_199 0.0))
(assert
 (>= l_0_15_202 0.0))
(assert
 (>= l_0_15_206 0.0))
(assert
 (>= l_0_15_211 0.0))
(assert
 (>= l_0_15_217 0.0))
(assert
 (>= l_0_15_224 0.0))
(assert
 (>= l_0_15_225 0.0))
(assert
 (>= l_0_15_227 0.0))
(assert
 (>= l_0_15_230 0.0))
(assert
 (>= l_0_15_234 0.0))
(assert
 (>= l_0_15_239 0.0))
(assert
 (>= l_0_15_245 0.0))
(assert
 (>= l_0_15_252 0.0))
(assert
 (>= l_0_15_253 0.0))
(assert
 (>= l_0_15_255 0.0))
(assert
 (>= l_0_15_258 0.0))
(assert
 (>= l_0_15_262 0.0))
(assert
 (>= l_0_15_267 0.0))
(assert
 (>= l_0_15_273 0.0))
(assert
 (>= l_0_15_280 0.0))
(assert
 (let ((?x44052 (* l_0_16_85 l_0_16_85)))
 (let ((?x44050 (* l_0_16_57 l_0_16_57)))
 (let ((?x44043 (- (* (* (- 2.0) l_0_16_197) l_0_16_212) (* (* 2.0 l_0_16_225) l_0_16_240))))
 (let ((?x44049 (- (- ?x44043 (* (* 2.0 l_0_16_253) l_0_16_268)) (* (* 2.0 l_0_16_281) l_0_16_296))))
 (= (+ (- (+ ?x44049 ?x44050) ?x44052) 1.0) 0.0))))))
(assert
 (let ((?x44052 (* l_0_16_85 l_0_16_85)))
 (let ((?x44050 (* l_0_16_57 l_0_16_57)))
 (let ((?x44072 (- (* (* (- 2.0) l_0_16_198) l_0_16_218) (* (* 2.0 l_0_16_199) l_0_16_219))))
 (let ((?x44078 (- (- ?x44072 (* (* 2.0 l_0_16_226) l_0_16_246)) (* (* 2.0 l_0_16_227) l_0_16_247))))
 (let ((?x44084 (- (- ?x44078 (* (* 2.0 l_0_16_254) l_0_16_274)) (* (* 2.0 l_0_16_255) l_0_16_275))))
 (let ((?x44090 (- (- ?x44084 (* (* 2.0 l_0_16_282) l_0_16_302)) (* (* 2.0 l_0_16_283) l_0_16_303))))
 (= (- (+ (- ?x44090 ?x44050) ?x44052) 1.0) 0.0))))))))
(assert
 (let ((?x44052 (* l_0_16_85 l_0_16_85)))
 (let ((?x44050 (* l_0_16_57 l_0_16_57)))
 (let ((?x44125 (* l_0_16_169 l_0_16_169)))
 (let ((?x44126 (- (- (* (- l_0_16_113) l_0_16_113) (* l_0_16_141 l_0_16_141)) ?x44125)))
 (let ((?x44131 (- (- ?x44126 (* (* 2.0 l_0_16_197) l_0_16_207)) (* (* 2.0 l_0_16_225) l_0_16_235))))
 (let ((?x44135 (- (- ?x44131 (* (* 2.0 l_0_16_253) l_0_16_263)) (* (* 2.0 l_0_16_281) l_0_16_291))))
 (= (- (+ (- ?x44135 ?x44050) ?x44052) 1.0) 0.0))))))))
(assert
 (let ((?x44202 (* l_0_16_29 l_0_16_29)))
 (let ((?x44159 (- (+ (* (- l_0_16_1) l_0_16_1) (* l_0_16_141 l_0_16_141)) (* (* 2.0 l_0_16_203) l_0_16_218))))
 (let ((?x44165 (- (- ?x44159 (* (* 2.0 l_0_16_204) l_0_16_219)) (* (* 2.0 l_0_16_205) l_0_16_220))))
 (let ((?x44171 (- (- ?x44165 (* (* 2.0 l_0_16_206) l_0_16_221)) (* (* 2.0 l_0_16_231) l_0_16_246))))
 (let ((?x44177 (- (- ?x44171 (* (* 2.0 l_0_16_232) l_0_16_247)) (* (* 2.0 l_0_16_233) l_0_16_248))))
 (let ((?x44183 (- (- ?x44177 (* (* 2.0 l_0_16_234) l_0_16_249)) (* (* 2.0 l_0_16_259) l_0_16_274))))
 (let ((?x44189 (- (- ?x44183 (* (* 2.0 l_0_16_260) l_0_16_275)) (* (* 2.0 l_0_16_261) l_0_16_276))))
 (let ((?x44195 (- (- ?x44189 (* (* 2.0 l_0_16_262) l_0_16_277)) (* (* 2.0 l_0_16_287) l_0_16_302))))
 (let ((?x44201 (- (- ?x44195 (* (* 2.0 l_0_16_288) l_0_16_303)) (* (* 2.0 l_0_16_289) l_0_16_304))))
 (= (- (+ ?x44201 ?x44202) (* (* 2.0 l_0_16_290) l_0_16_305)) 0.0)))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x44265 (* ?x44264 l_0_16_91)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x44262 (* ?x44261 l_0_16_63)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44259 (* ?x44258 l_0_16_30)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44256 (* ?x44255 l_0_16_142)))
 (let ((?x44266 (+ (- (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_2) ?x44256) ?x44259) ?x44262) ?x44265)))
 (= ?x44266 0.0)))))))))))
(assert
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x44321 (* ?x44320 l_0_16_53)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x44318 (* ?x44317 l_0_16_52)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x44315 (* ?x44314 l_0_16_51)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x44312 (* ?x44311 l_0_16_50)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44309 (* ?x44258 l_0_16_32)))
 (let ((?x44306 (* 2.0 l_0_16_24)))
 (let ((?x44307 (* ?x44306 l_0_16_9)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x44304 (* ?x44303 l_0_16_8)))
 (let ((?x44300 (* 2.0 l_0_16_22)))
 (let ((?x44301 (* ?x44300 l_0_16_7)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44286 (* ?x44255 l_0_16_144)))
 (let ((?x44285 (+ (* (* (- 2.0) l_0_16_1) l_0_16_4) (* (* 2.0 l_0_16_10) l_0_16_25))))
 (let ((?x44293 (+ (+ (+ ?x44285 ?x44286) (* (* 4.0 l_0_16_175) l_0_16_190)) (* (* 4.0 l_0_16_176) l_0_16_191))))
 (let ((?x44299 (+ (+ ?x44293 (* (* 4.0 l_0_16_177) l_0_16_192)) (* (* 4.0 l_0_16_178) l_0_16_193))))
 (let ((?x44319 (- (- (- (+ (+ (+ (+ ?x44299 ?x44301) ?x44304) ?x44307) ?x44309) ?x44312) ?x44315) ?x44318)))
 (= (- ?x44319 ?x44321) 0.0))))))))))))))))))))))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x34685 (* ?x44258 l_0_16_35)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x24737 (* ?x44255 l_0_16_147)))
 (= (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_7) ?x24737) ?x34685) 0.0))))))
(assert
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44421 (* ?x44420 l_0_16_81)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44418 (* ?x44417 l_0_16_80)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44415 (* ?x44414 l_0_16_79)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44412 (* ?x44411 l_0_16_78)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44409 (* ?x44258 l_0_16_39)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x44395 (* ?x44394 l_0_16_165)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x44392 (* ?x44391 l_0_16_164)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x44389 (* ?x44388 l_0_16_163)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x44386 (* ?x44385 l_0_16_162)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44383 (* ?x44255 l_0_16_151)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x44369 (* ?x44368 l_0_16_94)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x44366 (* ?x44365 l_0_16_93)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x44363 (* ?x44362 l_0_16_92)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x44360 (* ?x44359 l_0_16_91)))
 (let ((?x44370 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_11) ?x44360) ?x44363) ?x44366) ?x44369)))
 (let ((?x44376 (- (- ?x44370 (* (* 2.0 l_0_16_119) l_0_16_134)) (* (* 2.0 l_0_16_120) l_0_16_135))))
 (let ((?x44382 (- (- ?x44376 (* (* 2.0 l_0_16_121) l_0_16_136)) (* (* 2.0 l_0_16_122) l_0_16_137))))
 (let ((?x44399 (- (- (- (- (- (+ ?x44382 ?x44383) ?x44386) ?x44389) ?x44392) ?x44395) (* (* 2.0 l_0_16_175) l_0_16_190))))
 (let ((?x44405 (- (- ?x44399 (* (* 2.0 l_0_16_176) l_0_16_191)) (* (* 2.0 l_0_16_177) l_0_16_192))))
 (let ((?x44416 (- (- (+ (- ?x44405 (* (* 2.0 l_0_16_178) l_0_16_193)) ?x44409) ?x44412) ?x44415)))
 (= (- (- ?x44416 ?x44418) ?x44421) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44421 (* ?x44420 l_0_16_81)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44418 (* ?x44417 l_0_16_80)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44415 (* ?x44414 l_0_16_79)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44412 (* ?x44411 l_0_16_78)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44485 (* ?x44258 l_0_16_44)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44483 (* ?x44255 l_0_16_156)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x44369 (* ?x44368 l_0_16_94)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x44366 (* ?x44365 l_0_16_93)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x44363 (* ?x44362 l_0_16_92)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x44360 (* ?x44359 l_0_16_91)))
 (let ((?x44482 (- (- (- (- (* (* (- 2.0) l_0_16_1) l_0_16_16) ?x44360) ?x44363) ?x44366) ?x44369)))
 (= (+ (+ (+ (+ (+ (+ ?x44482 ?x44483) ?x44485) ?x44412) ?x44415) ?x44418) ?x44421) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44497 (* ?x44258 l_0_16_50)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x9386 (* ?x44255 l_0_16_162)))
 (= (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_22) ?x9386) ?x44497) 0.0))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x44529 (* ?x44528 l_0_16_92)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x44526 (* ?x44525 l_0_16_91)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x44523 (* ?x44522 l_0_16_64)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x44520 (* ?x44519 l_0_16_63)))
 (let ((?x44517 (* l_0_16_31 l_0_16_31)))
 (let ((?x44515 (* l_0_16_30 l_0_16_30)))
 (let ((?x44513 (* l_0_16_3 l_0_16_3)))
 (let ((?x44506 (* l_0_16_2 l_0_16_2)))
 (let ((?x44512 (- (+ (* l_0_16_142 l_0_16_142) (* l_0_16_143 l_0_16_143)) ?x44506)))
 (let ((?x44530 (+ (+ (- (- (+ (+ (- ?x44512 ?x44513) ?x44515) ?x44517) ?x44520) ?x44523) ?x44526) ?x44529)))
 (= ?x44530 0.0))))))))))))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x44584 (* ?x44583 l_0_16_93)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x44581 (* ?x44580 l_0_16_92)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x44578 (* ?x44577 l_0_16_91)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x44575 (* ?x44574 l_0_16_65)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x44572 (* ?x44571 l_0_16_64)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x44569 (* ?x44568 l_0_16_63)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44566 (* ?x44565 l_0_16_33)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44563 (* ?x44562 l_0_16_32)))
 (let ((?x44559 (* 2.0 l_0_16_3)))
 (let ((?x44560 (* ?x44559 l_0_16_5)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44557 (* ?x44556 l_0_16_4)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44554 (* ?x44553 l_0_16_145)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44552 (* ?x44551 l_0_16_144)))
 (let ((?x44573 (- (- (+ (+ (- (- (+ ?x44552 ?x44554) ?x44557) ?x44560) ?x44563) ?x44566) ?x44569) ?x44572)))
 (= (+ (+ (+ (- ?x44573 ?x44575) ?x44578) ?x44581) ?x44584) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x44654 (* l_0_16_94 l_0_16_94)))
 (let ((?x44652 (* l_0_16_93 l_0_16_93)))
 (let ((?x44650 (* l_0_16_92 l_0_16_92)))
 (let ((?x44648 (* l_0_16_91 l_0_16_91)))
 (let ((?x44646 (* l_0_16_66 l_0_16_66)))
 (let ((?x44644 (* l_0_16_65 l_0_16_65)))
 (let ((?x44642 (* l_0_16_64 l_0_16_64)))
 (let ((?x44640 (* l_0_16_63 l_0_16_63)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44638 (* ?x44565 l_0_16_36)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44636 (* ?x44562 l_0_16_35)))
 (let ((?x44559 (* 2.0 l_0_16_3)))
 (let ((?x44634 (* ?x44559 l_0_16_8)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44623 (* ?x44556 l_0_16_7)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44620 (* ?x44553 l_0_16_148)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44618 (* ?x44551 l_0_16_147)))
 (let ((?x44643 (- (- (+ (+ (- (- (+ ?x44618 ?x44620) ?x44623) ?x44634) ?x44636) ?x44638) ?x44640) ?x44642)))
 (= (+ (+ (+ (+ (- (- ?x44643 ?x44644) ?x44646) ?x44648) ?x44650) ?x44652) ?x44654) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44718 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x44715 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x44712 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x44709 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44706 (* ?x44420 l_0_16_70)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44704 (* ?x44417 l_0_16_69)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44702 (* ?x44414 l_0_16_68)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44700 (* ?x44411 l_0_16_67)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44698 (* ?x44565 l_0_16_40)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44696 (* ?x44562 l_0_16_39)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44694 (* ?x44553 l_0_16_152)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44692 (* ?x44551 l_0_16_151)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x44690 (* ?x44689 l_0_16_3)))
 (let ((?x44697 (+ (+ (+ (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x44690) ?x44692) ?x44694) ?x44696)))
 (let ((?x44713 (+ (+ (- (- (- (- (+ ?x44697 ?x44698) ?x44700) ?x44702) ?x44704) ?x44706) ?x44709) ?x44712)))
 (= (+ (+ ?x44713 ?x44715) ?x44718) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44781 (* ?x44420 l_0_16_75)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44779 (* ?x44417 l_0_16_74)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44777 (* ?x44414 l_0_16_73)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44775 (* ?x44411 l_0_16_72)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44773 (* ?x44565 l_0_16_45)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44771 (* ?x44562 l_0_16_44)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x44769 (* ?x44768 l_0_16_3)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x44766 (* ?x44765 l_0_16_2)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44763 (* ?x44553 l_0_16_157)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44761 (* ?x44551 l_0_16_156)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x44759 (* ?x44758 l_0_16_94)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x44756 (* ?x44755 l_0_16_93)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x44753 (* ?x44752 l_0_16_92)))
 (let ((?x44760 (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_91) ?x44753) ?x44756) ?x44759)))
 (let ((?x44776 (- (+ (+ (- (- (+ (+ ?x44760 ?x44761) ?x44763) ?x44766) ?x44769) ?x44771) ?x44773) ?x44775)))
 (= (- (- (- ?x44776 ?x44777) ?x44779) ?x44781) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44421 (* ?x44420 l_0_16_81)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44418 (* ?x44417 l_0_16_80)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44415 (* ?x44414 l_0_16_79)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44412 (* ?x44411 l_0_16_78)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44849 (* ?x44565 l_0_16_51)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44847 (* ?x44562 l_0_16_50)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x44845 (* ?x44303 l_0_16_3)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44843 (* ?x44556 l_0_16_22)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44841 (* ?x44553 l_0_16_163)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44839 (* ?x44551 l_0_16_162)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x44369 (* ?x44368 l_0_16_94)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x44366 (* ?x44365 l_0_16_93)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x44363 (* ?x44362 l_0_16_92)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x44360 (* ?x44359 l_0_16_91)))
 (let ((?x44846 (- (- (+ (+ (+ (+ (+ ?x44360 ?x44363) ?x44366) ?x44369) ?x44839) ?x44841) ?x44843) ?x44845)))
 (= (- (- (- (- (+ (+ ?x44846 ?x44847) ?x44849) ?x44412) ?x44415) ?x44418) ?x44421) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x44904 (* l_0_16_6 l_0_16_6)))
 (let ((?x44902 (* l_0_16_5 l_0_16_5)))
 (let ((?x44900 (* l_0_16_4 l_0_16_4)))
 (let ((?x44898 (* l_0_16_34 l_0_16_34)))
 (let ((?x44896 (* l_0_16_33 l_0_16_33)))
 (let ((?x44894 (* l_0_16_32 l_0_16_32)))
 (let ((?x44892 (* l_0_16_146 l_0_16_146)))
 (let ((?x44893 (+ (+ (* l_0_16_144 l_0_16_144) (* l_0_16_145 l_0_16_145)) ?x44892)))
 (= (- (- (- (+ (+ (+ ?x44893 ?x44894) ?x44896) ?x44898) ?x44900) ?x44902) ?x44904) 0.0))))))))))
(assert
 (let ((?x44939 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x44936 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x44933 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x44930 (* ?x44929 l_0_16_37)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x44927 (* ?x44926 l_0_16_36)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x44924 (* ?x44923 l_0_16_35)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x44921 (* ?x44920 l_0_16_149)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x44918 (* ?x44917 l_0_16_148)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x44916 (* ?x44915 l_0_16_147)))
 (let ((?x44937 (- (- (+ (+ (+ (+ (+ ?x44916 ?x44918) ?x44921) ?x44924) ?x44927) ?x44930) ?x44933) ?x44936)))
 (= (- ?x44937 ?x44939) 0.0))))))))))))))))))
(assert
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x44988 (* ?x44929 l_0_16_41)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x44986 (* ?x44926 l_0_16_40)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x44984 (* ?x44923 l_0_16_39)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x44982 (* ?x44920 l_0_16_153)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x44980 (* ?x44917 l_0_16_152)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x44978 (* ?x44915 l_0_16_151)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x44976 (* ?x44975 l_0_16_6)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x44973 (* ?x44689 l_0_16_5)))
 (let ((?x44981 (+ (+ (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x44973) ?x44976) ?x44978) ?x44980)))
 (= (+ (+ (+ (+ ?x44981 ?x44982) ?x44984) ?x44986) ?x44988) 0.0)))))))))))))))))))
(assert
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x45018 (* ?x44929 l_0_16_46)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x45016 (* ?x44926 l_0_16_45)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x45014 (* ?x44923 l_0_16_44)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45012 (* ?x45011 l_0_16_6)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45009 (* ?x44768 l_0_16_5)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45007 (* ?x44765 l_0_16_4)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x45005 (* ?x44920 l_0_16_158)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x45003 (* ?x44917 l_0_16_157)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x45002 (* ?x44915 l_0_16_156)))
 (let ((?x45017 (+ (+ (- (- (- (+ (+ ?x45002 ?x45003) ?x45005) ?x45007) ?x45009) ?x45012) ?x45014) ?x45016)))
 (= (+ ?x45017 ?x45018) 0.0)))))))))))))))))))))
(assert
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x45058 (* ?x44929 l_0_16_52)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x45056 (* ?x44926 l_0_16_51)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x45054 (* ?x44923 l_0_16_50)))
 (let ((?x44306 (* 2.0 l_0_16_24)))
 (let ((?x45052 (* ?x44306 l_0_16_6)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x45050 (* ?x44303 l_0_16_5)))
 (let ((?x44300 (* 2.0 l_0_16_22)))
 (let ((?x45048 (* ?x44300 l_0_16_4)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x45038 (* ?x44920 l_0_16_164)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x34231 (* ?x44917 l_0_16_163)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x45035 (* ?x44915 l_0_16_162)))
 (let ((?x45057 (+ (+ (- (- (- (+ (+ ?x45035 ?x34231) ?x45038) ?x45048) ?x45050) ?x45052) ?x45054) ?x45056)))
 (= (+ ?x45057 ?x45058) 0.0)))))))))))))))))))))
(assert
 (let ((?x45110 (* l_0_16_9 l_0_16_9)))
 (let ((?x45108 (* l_0_16_8 l_0_16_8)))
 (let ((?x45106 (* l_0_16_7 l_0_16_7)))
 (let ((?x45104 (* l_0_16_38 l_0_16_38)))
 (let ((?x45102 (* l_0_16_37 l_0_16_37)))
 (let ((?x45100 (* l_0_16_36 l_0_16_36)))
 (let ((?x45098 (* l_0_16_35 l_0_16_35)))
 (let ((?x45096 (* l_0_16_150 l_0_16_150)))
 (let ((?x45094 (* l_0_16_149 l_0_16_149)))
 (let ((?x45092 (* l_0_16_148 l_0_16_148)))
 (let ((?x45093 (+ (+ (* (- l_0_16_10) l_0_16_10) (* l_0_16_147 l_0_16_147)) ?x45092)))
 (let ((?x45107 (- (+ (+ (+ (+ (+ (+ ?x45093 ?x45094) ?x45096) ?x45098) ?x45100) ?x45102) ?x45104) ?x45106)))
 (= (- (- ?x45107 ?x45108) ?x45110) 0.0))))))))))))))
(assert
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x45146 (* ?x44320 l_0_16_42)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x45144 (* ?x44317 l_0_16_41)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x45142 (* ?x44314 l_0_16_40)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x45140 (* ?x44311 l_0_16_39)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x45138 (* ?x44394 l_0_16_154)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x45136 (* ?x44391 l_0_16_153)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x45134 (* ?x44388 l_0_16_152)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x45132 (* ?x44385 l_0_16_151)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45130 (* ?x44975 l_0_16_9)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45128 (* ?x44689 l_0_16_8)))
 (let ((?x45125 (* 2.0 l_0_16_11)))
 (let ((?x45126 (* ?x45125 l_0_16_7)))
 (let ((?x45133 (+ (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x45126) ?x45128) ?x45130) ?x45132)))
 (let ((?x45147 (+ (+ (+ (+ (+ (+ (+ ?x45133 ?x45134) ?x45136) ?x45138) ?x45140) ?x45142) ?x45144) ?x45146)))
 (= ?x45147 0.0))))))))))))))))))))))))))
(assert
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x45197 (* ?x44320 l_0_16_47)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x45195 (* ?x44317 l_0_16_46)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x45193 (* ?x44314 l_0_16_45)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x45191 (* ?x44311 l_0_16_44)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45189 (* ?x45011 l_0_16_9)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45187 (* ?x44768 l_0_16_8)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45185 (* ?x44765 l_0_16_7)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x45172 (* ?x44394 l_0_16_159)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x45167 (* ?x44391 l_0_16_158)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x45168 (* ?x44388 l_0_16_157)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x24947 (* ?x44385 l_0_16_156)))
 (let ((?x45173 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_10) l_0_16_19) ?x24947) ?x45168) ?x45167) ?x45172)))
 (let ((?x45198 (+ (+ (+ (+ (- (- (- ?x45173 ?x45185) ?x45187) ?x45189) ?x45191) ?x45193) ?x45195) ?x45197)))
 (= ?x45198 0.0))))))))))))))))))))))))))
(assert
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x44321 (* ?x44320 l_0_16_53)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x44318 (* ?x44317 l_0_16_52)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x44315 (* ?x44314 l_0_16_51)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x44312 (* ?x44311 l_0_16_50)))
 (let ((?x44306 (* 2.0 l_0_16_24)))
 (let ((?x44307 (* ?x44306 l_0_16_9)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x44304 (* ?x44303 l_0_16_8)))
 (let ((?x44300 (* 2.0 l_0_16_22)))
 (let ((?x44301 (* ?x44300 l_0_16_7)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x44395 (* ?x44394 l_0_16_165)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x44392 (* ?x44391 l_0_16_164)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x44389 (* ?x44388 l_0_16_163)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x44386 (* ?x44385 l_0_16_162)))
 (let ((?x45237 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_10) l_0_16_25) ?x44386) ?x44389) ?x44392) ?x44395)))
 (let ((?x45244 (+ (+ (+ (+ (- (- (- ?x45237 ?x44301) ?x44304) ?x44307) ?x44312) ?x44315) ?x44318) ?x44321)))
 (= ?x45244 0.0))))))))))))))))))))))))))
(assert
 (let ((?x45281 (* l_0_16_43 l_0_16_43)))
 (let ((?x45279 (* l_0_16_42 l_0_16_42)))
 (let ((?x45277 (* l_0_16_41 l_0_16_41)))
 (let ((?x45275 (* l_0_16_40 l_0_16_40)))
 (let ((?x45273 (* l_0_16_39 l_0_16_39)))
 (let ((?x45271 (* l_0_16_155 l_0_16_155)))
 (let ((?x45269 (* l_0_16_154 l_0_16_154)))
 (let ((?x45267 (* l_0_16_153 l_0_16_153)))
 (let ((?x45265 (* l_0_16_152 l_0_16_152)))
 (let ((?x45263 (* l_0_16_151 l_0_16_151)))
 (let ((?x45261 (* l_0_16_15 l_0_16_15)))
 (let ((?x45259 (* l_0_16_14 l_0_16_14)))
 (let ((?x45257 (* l_0_16_13 l_0_16_13)))
 (let ((?x45258 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x45257)))
 (let ((?x45272 (+ (+ (+ (+ (+ (- (- ?x45258 ?x45259) ?x45261) ?x45263) ?x45265) ?x45267) ?x45269) ?x45271)))
 (= (+ (+ (+ (+ (+ ?x45272 ?x45273) ?x45275) ?x45277) ?x45279) ?x45281) 0.0)))))))))))))))))
(assert
 (let ((?x45346 (* 2.0 l_0_16_43)))
 (let ((?x45347 (* ?x45346 l_0_16_48)))
 (let ((?x45343 (* 2.0 l_0_16_42)))
 (let ((?x45344 (* ?x45343 l_0_16_47)))
 (let ((?x45340 (* 2.0 l_0_16_41)))
 (let ((?x45341 (* ?x45340 l_0_16_46)))
 (let ((?x45337 (* 2.0 l_0_16_40)))
 (let ((?x45338 (* ?x45337 l_0_16_45)))
 (let ((?x45334 (* 2.0 l_0_16_39)))
 (let ((?x45335 (* ?x45334 l_0_16_44)))
 (let ((?x45331 (* 2.0 l_0_16_155)))
 (let ((?x45332 (* ?x45331 l_0_16_160)))
 (let ((?x45328 (* 2.0 l_0_16_154)))
 (let ((?x45329 (* ?x45328 l_0_16_159)))
 (let ((?x45325 (* 2.0 l_0_16_153)))
 (let ((?x45326 (* ?x45325 l_0_16_158)))
 (let ((?x45322 (* 2.0 l_0_16_152)))
 (let ((?x45323 (* ?x45322 l_0_16_157)))
 (let ((?x45319 (* 2.0 l_0_16_151)))
 (let ((?x45320 (* ?x45319 l_0_16_156)))
 (let ((?x45316 (* 2.0 l_0_16_15)))
 (let ((?x45317 (* ?x45316 l_0_16_20)))
 (let ((?x45313 (* 2.0 l_0_16_14)))
 (let ((?x45314 (* ?x45313 l_0_16_19)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45311 (* ?x44975 l_0_16_18)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45309 (* ?x44689 l_0_16_17)))
 (let ((?x45318 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_16) ?x45309) ?x45311) ?x45314) ?x45317)))
 (let ((?x45339 (+ (+ (+ (+ (+ (+ (+ ?x45318 ?x45320) ?x45323) ?x45326) ?x45329) ?x45332) ?x45335) ?x45338)))
 (= (+ (+ (+ ?x45339 ?x45341) ?x45344) ?x45347) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x45346 (* 2.0 l_0_16_43)))
 (let ((?x45417 (* ?x45346 l_0_16_54)))
 (let ((?x45343 (* 2.0 l_0_16_42)))
 (let ((?x45415 (* ?x45343 l_0_16_53)))
 (let ((?x45340 (* 2.0 l_0_16_41)))
 (let ((?x45413 (* ?x45340 l_0_16_52)))
 (let ((?x45337 (* 2.0 l_0_16_40)))
 (let ((?x45411 (* ?x45337 l_0_16_51)))
 (let ((?x45334 (* 2.0 l_0_16_39)))
 (let ((?x45409 (* ?x45334 l_0_16_50)))
 (let ((?x45331 (* 2.0 l_0_16_155)))
 (let ((?x45407 (* ?x45331 l_0_16_166)))
 (let ((?x45328 (* 2.0 l_0_16_154)))
 (let ((?x45405 (* ?x45328 l_0_16_165)))
 (let ((?x45325 (* 2.0 l_0_16_153)))
 (let ((?x45403 (* ?x45325 l_0_16_164)))
 (let ((?x45322 (* 2.0 l_0_16_152)))
 (let ((?x45401 (* ?x45322 l_0_16_163)))
 (let ((?x45319 (* 2.0 l_0_16_151)))
 (let ((?x45386 (* ?x45319 l_0_16_162)))
 (let ((?x45316 (* 2.0 l_0_16_15)))
 (let ((?x45382 (* ?x45316 l_0_16_26)))
 (let ((?x45313 (* 2.0 l_0_16_14)))
 (let ((?x45378 (* ?x45313 l_0_16_25)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45374 (* ?x44975 l_0_16_24)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45370 (* ?x44689 l_0_16_23)))
 (let ((?x45384 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_22) ?x45370) ?x45374) ?x45378) ?x45382)))
 (let ((?x45412 (+ (+ (+ (+ (+ (+ (+ ?x45384 ?x45386) ?x45401) ?x45403) ?x45405) ?x45407) ?x45409) ?x45411)))
 (= (+ (+ (+ ?x45412 ?x45413) ?x45415) ?x45417) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x45469 (* l_0_16_49 l_0_16_49)))
 (let ((?x45467 (* l_0_16_48 l_0_16_48)))
 (let ((?x45465 (* l_0_16_47 l_0_16_47)))
 (let ((?x45463 (* l_0_16_46 l_0_16_46)))
 (let ((?x45461 (* l_0_16_45 l_0_16_45)))
 (let ((?x45459 (* l_0_16_44 l_0_16_44)))
 (let ((?x45457 (* l_0_16_21 l_0_16_21)))
 (let ((?x45455 (* l_0_16_20 l_0_16_20)))
 (let ((?x45453 (* l_0_16_19 l_0_16_19)))
 (let ((?x45451 (* l_0_16_18 l_0_16_18)))
 (let ((?x45449 (* l_0_16_17 l_0_16_17)))
 (let ((?x45447 (* l_0_16_161 l_0_16_161)))
 (let ((?x45445 (* l_0_16_160 l_0_16_160)))
 (let ((?x45443 (* l_0_16_16 l_0_16_16)))
 (let ((?x45441 (* l_0_16_159 l_0_16_159)))
 (let ((?x9912 (* l_0_16_158 l_0_16_158)))
 (let ((?x45440 (+ (+ (* l_0_16_156 l_0_16_156) (* l_0_16_157 l_0_16_157)) ?x9912)))
 (let ((?x45454 (- (- (- (+ (+ (- (+ ?x45440 ?x45441) ?x45443) ?x45445) ?x45447) ?x45449) ?x45451) ?x45453)))
 (let ((?x45468 (+ (+ (+ (+ (+ (- (- ?x45454 ?x45455) ?x45457) ?x45459) ?x45461) ?x45463) ?x45465) ?x45467)))
 (= (+ ?x45468 ?x45469) 0.0)))))))))))))))))))))
(assert
 (let ((?x45530 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x45527 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x45524 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x45521 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x45518 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x45515 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x45512 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x45509 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x45506 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45503 (* ?x45011 l_0_16_24)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45501 (* ?x44768 l_0_16_23)))
 (let ((?x45499 (* (* 2.0 l_0_16_161) l_0_16_167)))
 (let ((?x45496 (* (* 2.0 l_0_16_160) l_0_16_166)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45493 (* ?x44765 l_0_16_22)))
 (let ((?x45491 (* (* 2.0 l_0_16_159) l_0_16_165)))
 (let ((?x45488 (* (* 2.0 l_0_16_158) l_0_16_164)))
 (let ((?x45485 (* (* 2.0 l_0_16_157) l_0_16_163)))
 (let ((?x34947 (* (* 2.0 l_0_16_156) l_0_16_162)))
 (let ((?x45502 (- (+ (+ (- (+ (+ (+ ?x34947 ?x45485) ?x45488) ?x45491) ?x45493) ?x45496) ?x45499) ?x45501)))
 (let ((?x45522 (+ (+ (+ (- (- (- (- ?x45502 ?x45503) ?x45506) ?x45509) ?x45512) ?x45515) ?x45518) ?x45521)))
 (= (+ (+ (+ ?x45522 ?x45524) ?x45527) ?x45530) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x45616 (* l_0_16_56 l_0_16_56)))
 (let ((?x45614 (* l_0_16_55 l_0_16_55)))
 (let ((?x45612 (* l_0_16_54 l_0_16_54)))
 (let ((?x45610 (* l_0_16_53 l_0_16_53)))
 (let ((?x45608 (* l_0_16_52 l_0_16_52)))
 (let ((?x45606 (* l_0_16_51 l_0_16_51)))
 (let ((?x45604 (* l_0_16_50 l_0_16_50)))
 (let ((?x45602 (* l_0_16_28 l_0_16_28)))
 (let ((?x45600 (* l_0_16_27 l_0_16_27)))
 (let ((?x45598 (* l_0_16_26 l_0_16_26)))
 (let ((?x45596 (* l_0_16_25 l_0_16_25)))
 (let ((?x45594 (* l_0_16_24 l_0_16_24)))
 (let ((?x45592 (* l_0_16_23 l_0_16_23)))
 (let ((?x45590 (* l_0_16_22 l_0_16_22)))
 (let ((?x45588 (* l_0_16_168 l_0_16_168)))
 (let ((?x45586 (* l_0_16_167 l_0_16_167)))
 (let ((?x45584 (* l_0_16_166 l_0_16_166)))
 (let ((?x45582 (* l_0_16_165 l_0_16_165)))
 (let ((?x45580 (* l_0_16_164 l_0_16_164)))
 (let ((?x45581 (+ (+ (* l_0_16_162 l_0_16_162) (* l_0_16_163 l_0_16_163)) ?x45580)))
 (let ((?x45595 (- (- (- (+ (+ (+ (+ ?x45581 ?x45582) ?x45584) ?x45586) ?x45588) ?x45590) ?x45592) ?x45594)))
 (let ((?x45609 (+ (+ (+ (- (- (- (- ?x45595 ?x45596) ?x45598) ?x45600) ?x45602) ?x45604) ?x45606) ?x45608)))
 (= (+ (+ (+ (+ ?x45609 ?x45610) ?x45612) ?x45614) ?x45616) 0.0))))))))))))))))))))))))
(assert
 (let ((?x44202 (* l_0_16_29 l_0_16_29)))
 (let ((?x45638 (- (+ (* l_0_16_1 l_0_16_1) (* 2.0 (* l_0_16_169 l_0_16_169))) (* (* 2.0 l_0_16_197) l_0_16_200))))
 (let ((?x45642 (- (- ?x45638 (* (* 2.0 l_0_16_225) l_0_16_228)) (* (* 2.0 l_0_16_253) l_0_16_256))))
 (= (- (- ?x45642 (* (* 2.0 l_0_16_281) l_0_16_284)) ?x44202) 0.0)))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44259 (* ?x44258 l_0_16_30)))
 (let ((?x45665 (+ (* (* 2.0 l_0_16_1) l_0_16_2) (* (* 4.0 l_0_16_169) l_0_16_170))))
 (let ((?x45670 (- (- ?x45665 (* (* 2.0 l_0_16_198) l_0_16_200)) (* (* 2.0 l_0_16_199) l_0_16_201))))
 (let ((?x45674 (- (- ?x45670 (* (* 2.0 l_0_16_226) l_0_16_228)) (* (* 2.0 l_0_16_227) l_0_16_229))))
 (let ((?x45678 (- (- ?x45674 (* (* 2.0 l_0_16_254) l_0_16_256)) (* (* 2.0 l_0_16_255) l_0_16_257))))
 (let ((?x45682 (- (- ?x45678 (* (* 2.0 l_0_16_282) l_0_16_284)) (* (* 2.0 l_0_16_283) l_0_16_285))))
 (= (- ?x45682 ?x44259) 0.0)))))))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44309 (* ?x44258 l_0_16_32)))
 (let ((?x45725 (* l_0_16_286 l_0_16_286)))
 (let ((?x45723 (* l_0_16_285 l_0_16_285)))
 (let ((?x45721 (* l_0_16_284 l_0_16_284)))
 (let ((?x45719 (* l_0_16_258 l_0_16_258)))
 (let ((?x45717 (* l_0_16_257 l_0_16_257)))
 (let ((?x45715 (* l_0_16_256 l_0_16_256)))
 (let ((?x45713 (* l_0_16_230 l_0_16_230)))
 (let ((?x45711 (* l_0_16_229 l_0_16_229)))
 (let ((?x45709 (* l_0_16_228 l_0_16_228)))
 (let ((?x45707 (* l_0_16_202 l_0_16_202)))
 (let ((?x45705 (* l_0_16_201 l_0_16_201)))
 (let ((?x45703 (* l_0_16_200 l_0_16_200)))
 (let ((?x45702 (+ (* (* 2.0 l_0_16_1) l_0_16_4) (* (* 4.0 l_0_16_169) l_0_16_172))))
 (let ((?x45716 (- (- (- (- (- (- (- ?x45702 ?x45703) ?x45705) ?x45707) ?x45709) ?x45711) ?x45713) ?x45715)))
 (= (- (- (- (- (- (- ?x45716 ?x45717) ?x45719) ?x45721) ?x45723) ?x45725) ?x44309) 0.0))))))))))))))))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x34685 (* ?x44258 l_0_16_35)))
 (let ((?x45755 (+ (* (* 2.0 l_0_16_1) l_0_16_7) (* (* 4.0 l_0_16_169) l_0_16_175))))
 (let ((?x45761 (- (- ?x45755 (* (* 2.0 l_0_16_200) l_0_16_203)) (* (* 2.0 l_0_16_201) l_0_16_204))))
 (let ((?x45767 (- (- ?x45761 (* (* 2.0 l_0_16_202) l_0_16_205)) (* (* 2.0 l_0_16_228) l_0_16_231))))
 (let ((?x45773 (- (- ?x45767 (* (* 2.0 l_0_16_229) l_0_16_232)) (* (* 2.0 l_0_16_230) l_0_16_233))))
 (let ((?x45779 (- (- ?x45773 (* (* 2.0 l_0_16_256) l_0_16_259)) (* (* 2.0 l_0_16_257) l_0_16_260))))
 (let ((?x45785 (- (- ?x45779 (* (* 2.0 l_0_16_258) l_0_16_261)) (* (* 2.0 l_0_16_284) l_0_16_287))))
 (let ((?x45791 (- (- ?x45785 (* (* 2.0 l_0_16_285) l_0_16_288)) (* (* 2.0 l_0_16_286) l_0_16_289))))
 (= (- ?x45791 ?x34685) 0.0)))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x45874 (* ?x44264 l_0_16_88)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x45872 (* ?x44261 l_0_16_60)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44409 (* ?x44258 l_0_16_39)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44286 (* ?x44255 l_0_16_144)))
 (let ((?x45840 (- (* (* 2.0 l_0_16_1) l_0_16_11) (* (* 2.0 l_0_16_113) l_0_16_116))))
 (let ((?x45846 (+ (- (- ?x45840 ?x44286) (* (* 2.0 l_0_16_169) l_0_16_172)) (* (* 4.0 l_0_16_169) l_0_16_179))))
 (let ((?x45850 (- (- ?x45846 (* (* 2.0 l_0_16_200) l_0_16_207)) (* (* 2.0 l_0_16_201) l_0_16_208))))
 (let ((?x45854 (- (- ?x45850 (* (* 2.0 l_0_16_202) l_0_16_209)) (* (* 2.0 l_0_16_228) l_0_16_235))))
 (let ((?x45858 (- (- ?x45854 (* (* 2.0 l_0_16_229) l_0_16_236)) (* (* 2.0 l_0_16_230) l_0_16_237))))
 (let ((?x45862 (- (- ?x45858 (* (* 2.0 l_0_16_256) l_0_16_263)) (* (* 2.0 l_0_16_257) l_0_16_264))))
 (let ((?x45866 (- (- ?x45862 (* (* 2.0 l_0_16_258) l_0_16_265)) (* (* 2.0 l_0_16_284) l_0_16_291))))
 (let ((?x45870 (- (- ?x45866 (* (* 2.0 l_0_16_285) l_0_16_292)) (* (* 2.0 l_0_16_286) l_0_16_293))))
 (= (+ (- (- ?x45870 ?x44409) ?x45872) ?x45874) 0.0))))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x45874 (* ?x44264 l_0_16_88)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x45872 (* ?x44261 l_0_16_60)))
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44485 (* ?x44258 l_0_16_44)))
 (let ((?x45901 (+ (* (* 2.0 l_0_16_1) l_0_16_16) (* (* 4.0 l_0_16_169) l_0_16_184))))
 (let ((?x45905 (- (- ?x45901 (* (* 2.0 l_0_16_200) l_0_16_212)) (* (* 2.0 l_0_16_201) l_0_16_213))))
 (let ((?x45909 (- (- ?x45905 (* (* 2.0 l_0_16_202) l_0_16_214)) (* (* 2.0 l_0_16_228) l_0_16_240))))
 (let ((?x45913 (- (- ?x45909 (* (* 2.0 l_0_16_229) l_0_16_241)) (* (* 2.0 l_0_16_230) l_0_16_242))))
 (let ((?x45917 (- (- ?x45913 (* (* 2.0 l_0_16_256) l_0_16_268)) (* (* 2.0 l_0_16_257) l_0_16_269))))
 (let ((?x45921 (- (- ?x45917 (* (* 2.0 l_0_16_258) l_0_16_270)) (* (* 2.0 l_0_16_284) l_0_16_296))))
 (let ((?x45925 (- (- ?x45921 (* (* 2.0 l_0_16_285) l_0_16_297)) (* (* 2.0 l_0_16_286) l_0_16_298))))
 (= (- (+ (- ?x45925 ?x44485) ?x45872) ?x45874) 0.0)))))))))))))))
(assert
 (let ((?x44258 (* 2.0 l_0_16_29)))
 (let ((?x44497 (* ?x44258 l_0_16_50)))
 (let ((?x45952 (+ (* (* 2.0 l_0_16_1) l_0_16_22) (* (* 4.0 l_0_16_169) l_0_16_190))))
 (let ((?x45956 (- (- ?x45952 (* (* 2.0 l_0_16_200) l_0_16_218)) (* (* 2.0 l_0_16_201) l_0_16_219))))
 (let ((?x45960 (- (- ?x45956 (* (* 2.0 l_0_16_202) l_0_16_220)) (* (* 2.0 l_0_16_228) l_0_16_246))))
 (let ((?x45964 (- (- ?x45960 (* (* 2.0 l_0_16_229) l_0_16_247)) (* (* 2.0 l_0_16_230) l_0_16_248))))
 (let ((?x45968 (- (- ?x45964 (* (* 2.0 l_0_16_256) l_0_16_274)) (* (* 2.0 l_0_16_257) l_0_16_275))))
 (let ((?x45972 (- (- ?x45968 (* (* 2.0 l_0_16_258) l_0_16_276)) (* (* 2.0 l_0_16_284) l_0_16_302))))
 (let ((?x45976 (- (- ?x45972 (* (* 2.0 l_0_16_285) l_0_16_303)) (* (* 2.0 l_0_16_286) l_0_16_304))))
 (= (- ?x45976 ?x44497) 0.0)))))))))))
(assert
 (let ((?x44517 (* l_0_16_31 l_0_16_31)))
 (let ((?x44515 (* l_0_16_30 l_0_16_30)))
 (let ((?x44513 (* l_0_16_3 l_0_16_3)))
 (let ((?x44506 (* l_0_16_2 l_0_16_2)))
 (let ((?x46018 (* l_0_16_171 l_0_16_171)))
 (let ((?x46019 (* 2.0 ?x46018)))
 (let ((?x46016 (* l_0_16_170 l_0_16_170)))
 (let ((?x46017 (* 2.0 ?x46016)))
 (= (- (- (+ (+ (+ ?x46017 ?x46019) ?x44506) ?x44513) ?x44515) ?x44517) 0.0))))))))))
(assert
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44566 (* ?x44565 l_0_16_33)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44563 (* ?x44562 l_0_16_32)))
 (let ((?x44559 (* 2.0 l_0_16_3)))
 (let ((?x44560 (* ?x44559 l_0_16_5)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44557 (* ?x44556 l_0_16_4)))
 (let ((?x46033 (+ (* (* 4.0 l_0_16_170) l_0_16_172) (* (* 4.0 l_0_16_171) l_0_16_173))))
 (= (- (- (+ (+ ?x46033 ?x44557) ?x44560) ?x44563) ?x44566) 0.0)))))))))))
(assert
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44638 (* ?x44565 l_0_16_36)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44636 (* ?x44562 l_0_16_35)))
 (let ((?x44559 (* 2.0 l_0_16_3)))
 (let ((?x44634 (* ?x44559 l_0_16_8)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44623 (* ?x44556 l_0_16_7)))
 (let ((?x46047 (+ (* (* 4.0 l_0_16_170) l_0_16_175) (* (* 4.0 l_0_16_171) l_0_16_176))))
 (= (- (- (+ (+ ?x46047 ?x44623) ?x44634) ?x44636) ?x44638) 0.0)))))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46086 (* ?x44528 l_0_16_89)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46084 (* ?x44525 l_0_16_88)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46082 (* ?x44522 l_0_16_61)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46080 (* ?x44519 l_0_16_60)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44698 (* ?x44565 l_0_16_40)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44696 (* ?x44562 l_0_16_39)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44554 (* ?x44553 l_0_16_145)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44552 (* ?x44551 l_0_16_144)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x44690 (* ?x44689 l_0_16_3)))
 (let ((?x46061 (- (* (* 2.0 l_0_16_11) l_0_16_2) (* (* 2.0 l_0_16_114) l_0_16_116))))
 (let ((?x46067 (- (- (+ (- ?x46061 (* (* 2.0 l_0_16_115) l_0_16_117)) ?x44690) ?x44552) ?x44554)))
 (let ((?x46072 (+ (- ?x46067 (* (* 2.0 l_0_16_170) l_0_16_172)) (* (* 4.0 l_0_16_170) l_0_16_179))))
 (let ((?x46077 (+ (- ?x46072 (* (* 2.0 l_0_16_171) l_0_16_173)) (* (* 4.0 l_0_16_171) l_0_16_180))))
 (= (+ (+ (- (- (- (- ?x46077 ?x44696) ?x44698) ?x46080) ?x46082) ?x46084) ?x46086) 0.0))))))))))))))))))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46086 (* ?x44528 l_0_16_89)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46084 (* ?x44525 l_0_16_88)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46082 (* ?x44522 l_0_16_61)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46080 (* ?x44519 l_0_16_60)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44773 (* ?x44565 l_0_16_45)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44771 (* ?x44562 l_0_16_44)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x44769 (* ?x44768 l_0_16_3)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x44766 (* ?x44765 l_0_16_2)))
 (let ((?x46115 (+ (+ (+ ?x44766 ?x44769) (* (* 4.0 l_0_16_170) l_0_16_184)) (* (* 4.0 l_0_16_171) l_0_16_185))))
 (= (- (- (+ (+ (- (- ?x46115 ?x44771) ?x44773) ?x46080) ?x46082) ?x46084) ?x46086) 0.0)))))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x45874 (* ?x44264 l_0_16_88)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x45872 (* ?x44261 l_0_16_60)))
 (let ((?x44565 (* 2.0 l_0_16_31)))
 (let ((?x44849 (* ?x44565 l_0_16_51)))
 (let ((?x44562 (* 2.0 l_0_16_30)))
 (let ((?x44847 (* ?x44562 l_0_16_50)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x44845 (* ?x44303 l_0_16_3)))
 (let ((?x44556 (* 2.0 l_0_16_2)))
 (let ((?x44843 (* ?x44556 l_0_16_22)))
 (let ((?x25436 (+ (* (* 4.0 l_0_16_170) l_0_16_190) (* (* 4.0 l_0_16_171) l_0_16_191))))
 (= (+ (- (- (- (+ (+ ?x25436 ?x44843) ?x44845) ?x44847) ?x44849) ?x45872) ?x45874) 0.0)))))))))))))))
(assert
 (let ((?x44904 (* l_0_16_6 l_0_16_6)))
 (let ((?x44902 (* l_0_16_5 l_0_16_5)))
 (let ((?x44900 (* l_0_16_4 l_0_16_4)))
 (let ((?x44898 (* l_0_16_34 l_0_16_34)))
 (let ((?x44896 (* l_0_16_33 l_0_16_33)))
 (let ((?x44894 (* l_0_16_32 l_0_16_32)))
 (let ((?x46135 (* l_0_16_174 l_0_16_174)))
 (let ((?x46136 (* 2.0 ?x46135)))
 (let ((?x46132 (* l_0_16_173 l_0_16_173)))
 (let ((?x46133 (* 2.0 ?x46132)))
 (let ((?x35502 (* l_0_16_172 l_0_16_172)))
 (let ((?x46131 (* 2.0 ?x35502)))
 (let ((?x46142 (+ (+ (- (- (- (+ (+ ?x46131 ?x46133) ?x46136) ?x44894) ?x44896) ?x44898) ?x44900) ?x44902)))
 (= (+ ?x46142 ?x44904) 0.0)))))))))))))))
(assert
 (let ((?x44939 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x44936 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x44933 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x44930 (* ?x44929 l_0_16_37)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x44927 (* ?x44926 l_0_16_36)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x44924 (* ?x44923 l_0_16_35)))
 (let ((?x46155 (+ (* (* 4.0 l_0_16_172) l_0_16_175) (* (* 4.0 l_0_16_173) l_0_16_176))))
 (let ((?x46161 (- (- (- (+ ?x46155 (* (* 4.0 l_0_16_174) l_0_16_177)) ?x44924) ?x44927) ?x44930)))
 (= (+ (+ (+ ?x46161 ?x44933) ?x44936) ?x44939) 0.0)))))))))))))
(assert
 (let ((?x46202 (* l_0_16_90 l_0_16_90)))
 (let ((?x46200 (* l_0_16_89 l_0_16_89)))
 (let ((?x46198 (* l_0_16_88 l_0_16_88)))
 (let ((?x46196 (* l_0_16_62 l_0_16_62)))
 (let ((?x46194 (* l_0_16_61 l_0_16_61)))
 (let ((?x46192 (* l_0_16_60 l_0_16_60)))
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x44988 (* ?x44929 l_0_16_41)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x44986 (* ?x44926 l_0_16_40)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x44984 (* ?x44923 l_0_16_39)))
 (let ((?x46135 (* l_0_16_174 l_0_16_174)))
 (let ((?x46132 (* l_0_16_173 l_0_16_173)))
 (let ((?x35502 (* l_0_16_172 l_0_16_172)))
 (let ((?x44892 (* l_0_16_146 l_0_16_146)))
 (let ((?x44890 (* l_0_16_145 l_0_16_145)))
 (let ((?x44889 (* l_0_16_144 l_0_16_144)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x44976 (* ?x44975 l_0_16_6)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x44973 (* ?x44689 l_0_16_5)))
 (let ((?x46173 (* l_0_16_118 l_0_16_118)))
 (let ((?x35516 (* l_0_16_117 l_0_16_117)))
 (let ((?x35513 (- (- (* (* 2.0 l_0_16_11) l_0_16_4) (* l_0_16_116 l_0_16_116)) ?x35516)))
 (let ((?x46181 (+ (- (- (- (+ (+ (- ?x35513 ?x46173) ?x44973) ?x44976) ?x44889) ?x44890) ?x44892) (* (* 4.0 l_0_16_172) l_0_16_179))))
 (let ((?x46187 (+ (- (+ (- ?x46181 ?x35502) (* (* 4.0 l_0_16_173) l_0_16_180)) ?x46132) (* (* 4.0 l_0_16_174) l_0_16_181))))
 (let ((?x46197 (- (- (- (- (- (- (- ?x46187 ?x46135) ?x44984) ?x44986) ?x44988) ?x46192) ?x46194) ?x46196)))
 (= (+ (+ (+ ?x46197 ?x46198) ?x46200) ?x46202) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x46202 (* l_0_16_90 l_0_16_90)))
 (let ((?x46200 (* l_0_16_89 l_0_16_89)))
 (let ((?x46198 (* l_0_16_88 l_0_16_88)))
 (let ((?x46196 (* l_0_16_62 l_0_16_62)))
 (let ((?x46194 (* l_0_16_61 l_0_16_61)))
 (let ((?x46192 (* l_0_16_60 l_0_16_60)))
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x45018 (* ?x44929 l_0_16_46)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x45016 (* ?x44926 l_0_16_45)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x45014 (* ?x44923 l_0_16_44)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45012 (* ?x45011 l_0_16_6)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45009 (* ?x44768 l_0_16_5)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45007 (* ?x44765 l_0_16_4)))
 (let ((?x46219 (+ (+ (+ ?x45007 ?x45009) (* (* 4.0 l_0_16_172) l_0_16_184)) (* (* 4.0 l_0_16_173) l_0_16_185))))
 (let ((?x46224 (- (- (+ (+ ?x46219 (* (* 4.0 l_0_16_174) l_0_16_186)) ?x45012) ?x45014) ?x45016)))
 (let ((?x46231 (- (- (- (+ (+ (+ (- ?x46224 ?x45018) ?x46192) ?x46194) ?x46196) ?x46198) ?x46200) ?x46202)))
 (= ?x46231 0.0)))))))))))))))))))))))
(assert
 (let ((?x44929 (* 2.0 l_0_16_34)))
 (let ((?x45058 (* ?x44929 l_0_16_52)))
 (let ((?x44926 (* 2.0 l_0_16_33)))
 (let ((?x45056 (* ?x44926 l_0_16_51)))
 (let ((?x44923 (* 2.0 l_0_16_32)))
 (let ((?x45054 (* ?x44923 l_0_16_50)))
 (let ((?x44306 (* 2.0 l_0_16_24)))
 (let ((?x45052 (* ?x44306 l_0_16_6)))
 (let ((?x44303 (* 2.0 l_0_16_23)))
 (let ((?x45050 (* ?x44303 l_0_16_5)))
 (let ((?x44300 (* 2.0 l_0_16_22)))
 (let ((?x45048 (* ?x44300 l_0_16_4)))
 (let ((?x35767 (+ (* (* 4.0 l_0_16_172) l_0_16_190) (* (* 4.0 l_0_16_173) l_0_16_191))))
 (let ((?x46244 (+ (+ (+ (+ ?x35767 (* (* 4.0 l_0_16_174) l_0_16_192)) ?x45048) ?x45050) ?x45052)))
 (= (- (- (- ?x46244 ?x45054) ?x45056) ?x45058) 0.0))))))))))))))))
(assert
 (let ((?x45110 (* l_0_16_9 l_0_16_9)))
 (let ((?x45108 (* l_0_16_8 l_0_16_8)))
 (let ((?x45106 (* l_0_16_7 l_0_16_7)))
 (let ((?x45104 (* l_0_16_38 l_0_16_38)))
 (let ((?x45102 (* l_0_16_37 l_0_16_37)))
 (let ((?x45100 (* l_0_16_36 l_0_16_36)))
 (let ((?x45098 (* l_0_16_35 l_0_16_35)))
 (let ((?x46256 (* l_0_16_178 l_0_16_178)))
 (let ((?x46257 (* 2.0 ?x46256)))
 (let ((?x35780 (* l_0_16_177 l_0_16_177)))
 (let ((?x35778 (* 2.0 ?x35780)))
 (let ((?x35753 (* l_0_16_176 l_0_16_176)))
 (let ((?x25827 (* 2.0 ?x35753)))
 (let ((?x35719 (* l_0_16_175 l_0_16_175)))
 (let ((?x35733 (* 2.0 ?x35719)))
 (let ((?x34845 (* l_0_16_10 l_0_16_10)))
 (let ((?x46261 (- (- (- (+ (+ (+ (+ ?x34845 ?x35733) ?x25827) ?x35778) ?x46257) ?x45098) ?x45100) ?x45102)))
 (= (+ (+ (+ (- ?x46261 ?x45104) ?x45106) ?x45108) ?x45110) 0.0)))))))))))))))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x44584 (* ?x44583 l_0_16_93)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x44581 (* ?x44580 l_0_16_92)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x44578 (* ?x44577 l_0_16_91)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x44575 (* ?x44574 l_0_16_65)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x44572 (* ?x44571 l_0_16_64)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x44569 (* ?x44568 l_0_16_63)))
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x45146 (* ?x44320 l_0_16_42)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x45144 (* ?x44317 l_0_16_41)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x45142 (* ?x44314 l_0_16_40)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x45140 (* ?x44311 l_0_16_39)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x44921 (* ?x44920 l_0_16_149)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x44918 (* ?x44917 l_0_16_148)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x44916 (* ?x44915 l_0_16_147)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45130 (* ?x44975 l_0_16_9)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45128 (* ?x44689 l_0_16_8)))
 (let ((?x45125 (* 2.0 l_0_16_11)))
 (let ((?x45126 (* ?x45125 l_0_16_7)))
 (let ((?x25896 (- (+ (* (* 2.0 l_0_16_10) l_0_16_14) ?x45126) (* (* 2.0 l_0_16_116) l_0_16_119))))
 (let ((?x46268 (- (- ?x25896 (* (* 2.0 l_0_16_117) l_0_16_120)) (* (* 2.0 l_0_16_118) l_0_16_121))))
 (let ((?x46276 (- (- (- (- (+ (+ ?x46268 ?x45128) ?x45130) ?x44916) ?x44918) ?x44921) (* (* 2.0 l_0_16_172) l_0_16_175))))
 (let ((?x46282 (- (- ?x46276 (* (* 2.0 l_0_16_173) l_0_16_176)) (* (* 2.0 l_0_16_174) l_0_16_177))))
 (let ((?x46286 (+ (+ ?x46282 (* (* 4.0 l_0_16_175) l_0_16_179)) (* (* 4.0 l_0_16_176) l_0_16_180))))
 (let ((?x46290 (+ (+ ?x46286 (* (* 4.0 l_0_16_177) l_0_16_181)) (* (* 4.0 l_0_16_178) l_0_16_182))))
 (let ((?x46297 (- (- (- (- (- (- (- ?x46290 ?x45140) ?x45142) ?x45144) ?x45146) ?x44569) ?x44572) ?x44575)))
 (= (+ (+ (+ ?x46297 ?x44578) ?x44581) ?x44584) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x44584 (* ?x44583 l_0_16_93)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x44581 (* ?x44580 l_0_16_92)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x44578 (* ?x44577 l_0_16_91)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x44575 (* ?x44574 l_0_16_65)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x44572 (* ?x44571 l_0_16_64)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x44569 (* ?x44568 l_0_16_63)))
 (let ((?x44320 (* 2.0 l_0_16_38)))
 (let ((?x45197 (* ?x44320 l_0_16_47)))
 (let ((?x44317 (* 2.0 l_0_16_37)))
 (let ((?x45195 (* ?x44317 l_0_16_46)))
 (let ((?x44314 (* 2.0 l_0_16_36)))
 (let ((?x45193 (* ?x44314 l_0_16_45)))
 (let ((?x44311 (* 2.0 l_0_16_35)))
 (let ((?x45191 (* ?x44311 l_0_16_44)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45189 (* ?x45011 l_0_16_9)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45187 (* ?x44768 l_0_16_8)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45185 (* ?x44765 l_0_16_7)))
 (let ((?x36141 (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_19) ?x45185) ?x45187) (* (* 4.0 l_0_16_175) l_0_16_184))))
 (let ((?x36131 (+ (+ ?x36141 (* (* 4.0 l_0_16_176) l_0_16_185)) (* (* 4.0 l_0_16_177) l_0_16_186))))
 (let ((?x46317 (- (- (+ (+ ?x36131 (* (* 4.0 l_0_16_178) l_0_16_187)) ?x45189) ?x45191) ?x45193)))
 (let ((?x46324 (- (- (+ (+ (+ (- (- ?x46317 ?x45195) ?x45197) ?x44569) ?x44572) ?x44575) ?x44578) ?x44581)))
 (= (- ?x46324 ?x44584) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x46396 (* ?x44583 l_0_16_97)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x46394 (* ?x44580 l_0_16_96)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x46392 (* ?x44577 l_0_16_95)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46390 (* ?x44574 l_0_16_69)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46388 (* ?x44571 l_0_16_68)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46386 (* ?x44568 l_0_16_67)))
 (let ((?x45281 (* l_0_16_43 l_0_16_43)))
 (let ((?x45279 (* l_0_16_42 l_0_16_42)))
 (let ((?x45277 (* l_0_16_41 l_0_16_41)))
 (let ((?x45275 (* l_0_16_40 l_0_16_40)))
 (let ((?x45273 (* l_0_16_39 l_0_16_39)))
 (let ((?x45261 (* l_0_16_15 l_0_16_15)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x44982 (* ?x44920 l_0_16_153)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x44980 (* ?x44917 l_0_16_152)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x44978 (* ?x44915 l_0_16_151)))
 (let ((?x45259 (* l_0_16_14 l_0_16_14)))
 (let ((?x45257 (* l_0_16_13 l_0_16_13)))
 (let ((?x9804 (* l_0_16_12 l_0_16_12)))
 (let ((?x45285 (* l_0_16_11 l_0_16_11)))
 (let ((?x46350 (- (- ?x45285 (* (* 2.0 l_0_16_116) l_0_16_123)) (* (* 2.0 l_0_16_117) l_0_16_124))))
 (let ((?x46355 (+ (+ (+ (- ?x46350 (* (* 2.0 l_0_16_118) l_0_16_125)) ?x9804) ?x45257) ?x45259)))
 (let ((?x46361 (- (+ (- (- (- ?x46355 ?x44978) ?x44980) ?x44982) ?x45261) (* (* 2.0 l_0_16_172) l_0_16_179))))
 (let ((?x46365 (- (- ?x46361 (* (* 2.0 l_0_16_173) l_0_16_180)) (* (* 2.0 l_0_16_174) l_0_16_181))))
 (let ((?x46371 (+ (+ ?x46365 (* 2.0 (* l_0_16_179 l_0_16_179))) (* 2.0 (* l_0_16_180 l_0_16_180)))))
 (let ((?x46377 (+ (+ ?x46371 (* 2.0 (* l_0_16_181 l_0_16_181))) (* 2.0 (* l_0_16_182 l_0_16_182)))))
 (let ((?x46383 (- (- (- (+ ?x46377 (* 2.0 (* l_0_16_183 l_0_16_183))) ?x45273) ?x45275) ?x45277)))
 (let ((?x46395 (+ (+ (- (- (- (- (- ?x46383 ?x45279) ?x45281) ?x46386) ?x46388) ?x46390) ?x46392) ?x46394)))
 (= (+ ?x46395 ?x46396) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x46396 (* ?x44583 l_0_16_97)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x46394 (* ?x44580 l_0_16_96)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x46392 (* ?x44577 l_0_16_95)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46461 (* ?x44574 l_0_16_74)))
 (let ((?x46390 (* ?x44574 l_0_16_69)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46458 (* ?x44571 l_0_16_73)))
 (let ((?x46388 (* ?x44571 l_0_16_68)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46455 (* ?x44568 l_0_16_72)))
 (let ((?x46386 (* ?x44568 l_0_16_67)))
 (let ((?x45346 (* 2.0 l_0_16_43)))
 (let ((?x45347 (* ?x45346 l_0_16_48)))
 (let ((?x45343 (* 2.0 l_0_16_42)))
 (let ((?x45344 (* ?x45343 l_0_16_47)))
 (let ((?x45340 (* 2.0 l_0_16_41)))
 (let ((?x45341 (* ?x45340 l_0_16_46)))
 (let ((?x45337 (* 2.0 l_0_16_40)))
 (let ((?x45338 (* ?x45337 l_0_16_45)))
 (let ((?x45334 (* 2.0 l_0_16_39)))
 (let ((?x45335 (* ?x45334 l_0_16_44)))
 (let ((?x45316 (* 2.0 l_0_16_15)))
 (let ((?x45317 (* ?x45316 l_0_16_20)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x45005 (* ?x44920 l_0_16_158)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x45003 (* ?x44917 l_0_16_157)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x45002 (* ?x44915 l_0_16_156)))
 (let ((?x45313 (* 2.0 l_0_16_14)))
 (let ((?x45314 (* ?x45313 l_0_16_19)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45311 (* ?x44975 l_0_16_18)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45309 (* ?x44689 l_0_16_17)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x11935 (* ?x44755 l_0_16_90)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x36339 (* ?x44752 l_0_16_89)))
 (let ((?x46412 (+ (+ (* (* 2.0 l_0_16_100) l_0_16_88) ?x36339) ?x11935)))
 (let ((?x46416 (- (+ ?x46412 (* (* 2.0 l_0_16_11) l_0_16_16)) (* (* 2.0 l_0_16_116) l_0_16_128))))
 (let ((?x46420 (- (- ?x46416 (* (* 2.0 l_0_16_117) l_0_16_129)) (* (* 2.0 l_0_16_118) l_0_16_130))))
 (let ((?x46427 (+ (- (- (- (+ (+ (+ ?x46420 ?x45309) ?x45311) ?x45314) ?x45002) ?x45003) ?x45005) ?x45317)))
 (let ((?x46431 (- (- ?x46427 (* (* 2.0 l_0_16_172) l_0_16_184)) (* (* 2.0 l_0_16_173) l_0_16_185))))
 (let ((?x46436 (+ (- ?x46431 (* (* 2.0 l_0_16_174) l_0_16_186)) (* (* 4.0 l_0_16_179) l_0_16_184))))
 (let ((?x46442 (+ (+ ?x46436 (* (* 4.0 l_0_16_180) l_0_16_185)) (* (* 4.0 l_0_16_181) l_0_16_186))))
 (let ((?x46448 (+ (+ ?x46442 (* (* 4.0 l_0_16_182) l_0_16_187)) (* (* 4.0 l_0_16_183) l_0_16_188))))
 (let ((?x46456 (- (+ (- (- (- (- (- ?x46448 ?x45335) ?x45338) ?x45341) ?x45344) ?x45347) ?x46386) ?x46455)))
 (let ((?x46465 (- (- (- (- (+ (- (+ ?x46456 ?x46388) ?x46458) ?x46390) ?x46461) ?x46392) ?x46394) ?x46396)))
 (= ?x46465 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46563 (* ?x44574 l_0_16_80)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46561 (* ?x44571 l_0_16_79)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46559 (* ?x44568 l_0_16_78)))
 (let ((?x45346 (* 2.0 l_0_16_43)))
 (let ((?x45417 (* ?x45346 l_0_16_54)))
 (let ((?x45343 (* 2.0 l_0_16_42)))
 (let ((?x45415 (* ?x45343 l_0_16_53)))
 (let ((?x45340 (* 2.0 l_0_16_41)))
 (let ((?x45413 (* ?x45340 l_0_16_52)))
 (let ((?x45337 (* 2.0 l_0_16_40)))
 (let ((?x45411 (* ?x45337 l_0_16_51)))
 (let ((?x45334 (* 2.0 l_0_16_39)))
 (let ((?x45409 (* ?x45334 l_0_16_50)))
 (let ((?x45316 (* 2.0 l_0_16_15)))
 (let ((?x45382 (* ?x45316 l_0_16_26)))
 (let ((?x44920 (* 2.0 l_0_16_146)))
 (let ((?x45038 (* ?x44920 l_0_16_164)))
 (let ((?x44917 (* 2.0 l_0_16_145)))
 (let ((?x34231 (* ?x44917 l_0_16_163)))
 (let ((?x44915 (* 2.0 l_0_16_144)))
 (let ((?x45035 (* ?x44915 l_0_16_162)))
 (let ((?x45313 (* 2.0 l_0_16_14)))
 (let ((?x45378 (* ?x45313 l_0_16_25)))
 (let ((?x44975 (* 2.0 l_0_16_13)))
 (let ((?x45374 (* ?x44975 l_0_16_24)))
 (let ((?x44689 (* 2.0 l_0_16_12)))
 (let ((?x45370 (* ?x44689 l_0_16_23)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46521 (* ?x44365 l_0_16_90)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46519 (* ?x44362 l_0_16_89)))
 (let ((?x46522 (+ (+ (* (* 2.0 l_0_16_106) l_0_16_88) ?x46519) ?x46521)))
 (let ((?x46526 (- (+ ?x46522 (* (* 2.0 l_0_16_11) l_0_16_22)) (* (* 2.0 l_0_16_116) l_0_16_134))))
 (let ((?x46530 (- (- ?x46526 (* (* 2.0 l_0_16_117) l_0_16_135)) (* (* 2.0 l_0_16_118) l_0_16_136))))
 (let ((?x46537 (+ (- (- (- (+ (+ (+ ?x46530 ?x45370) ?x45374) ?x45378) ?x45035) ?x34231) ?x45038) ?x45382)))
 (let ((?x46541 (- (- ?x46537 (* (* 2.0 l_0_16_172) l_0_16_190)) (* (* 2.0 l_0_16_173) l_0_16_191))))
 (let ((?x46545 (+ (- ?x46541 (* (* 2.0 l_0_16_174) l_0_16_192)) (* (* 4.0 l_0_16_179) l_0_16_190))))
 (let ((?x46549 (+ (+ ?x46545 (* (* 4.0 l_0_16_180) l_0_16_191)) (* (* 4.0 l_0_16_181) l_0_16_192))))
 (let ((?x46553 (+ (+ ?x46549 (* (* 4.0 l_0_16_182) l_0_16_193)) (* (* 4.0 l_0_16_183) l_0_16_194))))
 (let ((?x46562 (- (- (- (- (- (- (- ?x46553 ?x45409) ?x45411) ?x45413) ?x45415) ?x45417) ?x46559) ?x46561)))
 (= (- ?x46562 ?x46563) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46461 (* ?x44574 l_0_16_74)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46458 (* ?x44571 l_0_16_73)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46455 (* ?x44568 l_0_16_72)))
 (let ((?x45469 (* l_0_16_49 l_0_16_49)))
 (let ((?x45467 (* l_0_16_48 l_0_16_48)))
 (let ((?x45465 (* l_0_16_47 l_0_16_47)))
 (let ((?x45463 (* l_0_16_46 l_0_16_46)))
 (let ((?x45461 (* l_0_16_45 l_0_16_45)))
 (let ((?x45459 (* l_0_16_44 l_0_16_44)))
 (let ((?x45457 (* l_0_16_21 l_0_16_21)))
 (let ((?x45455 (* l_0_16_20 l_0_16_20)))
 (let ((?x45453 (* l_0_16_19 l_0_16_19)))
 (let ((?x46609 (* l_0_16_189 l_0_16_189)))
 (let ((?x46610 (* 2.0 ?x46609)))
 (let ((?x46606 (* l_0_16_188 l_0_16_188)))
 (let ((?x46607 (* 2.0 ?x46606)))
 (let ((?x46603 (* l_0_16_187 l_0_16_187)))
 (let ((?x46604 (* 2.0 ?x46603)))
 (let ((?x46600 (* l_0_16_186 l_0_16_186)))
 (let ((?x46601 (* 2.0 ?x46600)))
 (let ((?x46597 (* l_0_16_185 l_0_16_185)))
 (let ((?x46598 (* 2.0 ?x46597)))
 (let ((?x46594 (* l_0_16_184 l_0_16_184)))
 (let ((?x46595 (* 2.0 ?x46594)))
 (let ((?x45451 (* l_0_16_18 l_0_16_18)))
 (let ((?x45449 (* l_0_16_17 l_0_16_17)))
 (let ((?x45443 (* l_0_16_16 l_0_16_16)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x11935 (* ?x44755 l_0_16_90)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x36339 (* ?x44752 l_0_16_89)))
 (let ((?x46592 (+ (+ (- (- (* (* (- 2.0) l_0_16_100) l_0_16_88) ?x36339) ?x11935) ?x45443) ?x45449)))
 (let ((?x46611 (+ (+ (+ (+ (+ (+ (+ ?x46592 ?x45451) ?x46595) ?x46598) ?x46601) ?x46604) ?x46607) ?x46610)))
 (let ((?x46618 (- (- (- (- (+ (+ (+ ?x46611 ?x45453) ?x45455) ?x45457) ?x45459) ?x45461) ?x45463) ?x45465)))
 (= (+ (+ (+ (- (- ?x46618 ?x45467) ?x45469) ?x46455) ?x46458) ?x46461) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46563 (* ?x44574 l_0_16_80)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46561 (* ?x44571 l_0_16_79)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46559 (* ?x44568 l_0_16_78)))
 (let ((?x45530 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x45527 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x45524 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x45521 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x45518 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x45515 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x45512 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x45509 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x45506 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x45011 (* 2.0 l_0_16_18)))
 (let ((?x45503 (* ?x45011 l_0_16_24)))
 (let ((?x44768 (* 2.0 l_0_16_17)))
 (let ((?x45501 (* ?x44768 l_0_16_23)))
 (let ((?x44765 (* 2.0 l_0_16_16)))
 (let ((?x45493 (* ?x44765 l_0_16_22)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46521 (* ?x44365 l_0_16_90)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46519 (* ?x44362 l_0_16_89)))
 (let ((?x12359 (+ (+ (- (- (* (* (- 2.0) l_0_16_106) l_0_16_88) ?x46519) ?x46521) ?x45493) ?x45501)))
 (let ((?x46629 (+ (+ (+ ?x12359 ?x45503) (* (* 4.0 l_0_16_184) l_0_16_190)) (* (* 4.0 l_0_16_185) l_0_16_191))))
 (let ((?x46635 (+ (+ ?x46629 (* (* 4.0 l_0_16_186) l_0_16_192)) (* (* 4.0 l_0_16_187) l_0_16_193))))
 (let ((?x46641 (+ (+ ?x46635 (* (* 4.0 l_0_16_188) l_0_16_194)) (* (* 4.0 l_0_16_189) l_0_16_195))))
 (let ((?x46648 (- (- (- (- (+ (+ (+ ?x46641 ?x45506) ?x45509) ?x45512) ?x45515) ?x45518) ?x45521) ?x45524)))
 (= (+ (+ (+ (- (- ?x46648 ?x45527) ?x45530) ?x46559) ?x46561) ?x46563) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x45616 (* l_0_16_56 l_0_16_56)))
 (let ((?x45614 (* l_0_16_55 l_0_16_55)))
 (let ((?x45612 (* l_0_16_54 l_0_16_54)))
 (let ((?x45610 (* l_0_16_53 l_0_16_53)))
 (let ((?x45608 (* l_0_16_52 l_0_16_52)))
 (let ((?x45606 (* l_0_16_51 l_0_16_51)))
 (let ((?x45604 (* l_0_16_50 l_0_16_50)))
 (let ((?x45602 (* l_0_16_28 l_0_16_28)))
 (let ((?x45600 (* l_0_16_27 l_0_16_27)))
 (let ((?x45598 (* l_0_16_26 l_0_16_26)))
 (let ((?x45596 (* l_0_16_25 l_0_16_25)))
 (let ((?x45594 (* l_0_16_24 l_0_16_24)))
 (let ((?x45592 (* l_0_16_23 l_0_16_23)))
 (let ((?x45590 (* l_0_16_22 l_0_16_22)))
 (let ((?x46671 (* l_0_16_196 l_0_16_196)))
 (let ((?x46672 (* 2.0 ?x46671)))
 (let ((?x46668 (* l_0_16_195 l_0_16_195)))
 (let ((?x46669 (* 2.0 ?x46668)))
 (let ((?x46665 (* l_0_16_194 l_0_16_194)))
 (let ((?x46666 (* 2.0 ?x46665)))
 (let ((?x37106 (* l_0_16_193 l_0_16_193)))
 (let ((?x37107 (* 2.0 ?x37106)))
 (let ((?x37089 (* l_0_16_192 l_0_16_192)))
 (let ((?x25641 (* 2.0 ?x37089)))
 (let ((?x37098 (* l_0_16_191 l_0_16_191)))
 (let ((?x12489 (* 2.0 ?x37098)))
 (let ((?x12448 (* l_0_16_190 l_0_16_190)))
 (let ((?x37102 (* 2.0 ?x12448)))
 (let ((?x46674 (+ (+ (+ (+ (+ (+ (+ ?x37102 ?x12489) ?x25641) ?x37107) ?x46666) ?x46669) ?x46672) ?x45590)))
 (let ((?x46681 (- (+ (+ (+ (+ (+ (+ ?x46674 ?x45592) ?x45594) ?x45596) ?x45598) ?x45600) ?x45602) ?x45604)))
 (= (- (- (- (- (- (- ?x46681 ?x45606) ?x45608) ?x45610) ?x45612) ?x45614) ?x45616) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x12595 (* ?x44264 l_0_16_86)))
 (= (+ (* (* (- 2.0) l_0_16_57) l_0_16_58) ?x12595) 0.0))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x46719 (* ?x44264 l_0_16_95)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46717 (* ?x44522 l_0_16_79)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46715 (* ?x44519 l_0_16_78)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x46713 (* ?x44261 l_0_16_67)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44841 (* ?x44553 l_0_16_163)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44839 (* ?x44551 l_0_16_162)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46697 (* ?x44362 l_0_16_87)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46695 (* ?x44359 l_0_16_86)))
 (let ((?x46698 (+ ?x46695 ?x46697)))
 (let ((?x46706 (- (- ?x46698 (* (* 2.0 l_0_16_114) l_0_16_134)) (* (* 2.0 l_0_16_115) l_0_16_135))))
 (let ((?x46712 (- (- (- (- ?x46706 ?x44839) ?x44841) (* (* 2.0 l_0_16_170) l_0_16_190)) (* (* 2.0 l_0_16_171) l_0_16_191))))
 (= (+ (- (- (- ?x46712 ?x46713) ?x46715) ?x46717) ?x46719) 0.0)))))))))))))))))))))
(assert
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46717 (* ?x44522 l_0_16_79)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46715 (* ?x44519 l_0_16_78)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x37190 (* ?x44261 l_0_16_72)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46697 (* ?x44362 l_0_16_87)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46695 (* ?x44359 l_0_16_86)))
 (let ((?x44750 (* 2.0 l_0_16_100)))
 (let ((?x25644 (* ?x44750 l_0_16_85)))
 (= (+ (+ (- (- (- ?x25644 ?x46695) ?x46697) ?x37190) ?x46715) ?x46717) 0.0))))))))))))))
(assert
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x46750 (* ?x44261 l_0_16_78)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x37219 (* ?x44359 l_0_16_85)))
 (= (- ?x37219 ?x46750) 0.0))))))
(assert
 (let ((?x46765 (* l_0_16_87 l_0_16_87)))
 (let ((?x46763 (* l_0_16_86 l_0_16_86)))
 (let ((?x46764 (+ (- (* (- l_0_16_58) l_0_16_58) (* l_0_16_59 l_0_16_59)) ?x46763)))
 (= (+ ?x46764 ?x46765) 0.0)))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46086 (* ?x44528 l_0_16_89)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46084 (* ?x44525 l_0_16_88)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46082 (* ?x44522 l_0_16_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_58) l_0_16_60) ?x46082) ?x46084) ?x46086) 0.0))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46793 (* ?x44528 l_0_16_96)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46791 (* ?x44525 l_0_16_95)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46789 (* ?x44522 l_0_16_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_58) l_0_16_67) ?x46789) ?x46791) ?x46793) 0.0))))))))
(assert
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46816 (* ?x44522 l_0_16_73)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46814 (* ?x44519 l_0_16_72)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46807 (* ?x44752 l_0_16_87)))
 (let ((?x46808 (+ (* (* 2.0 l_0_16_100) l_0_16_86) ?x46807)))
 (= (- (- ?x46808 ?x46814) ?x46816) 0.0)))))))))
(assert
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46717 (* ?x44522 l_0_16_79)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46715 (* ?x44519 l_0_16_78)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46697 (* ?x44362 l_0_16_87)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46695 (* ?x44359 l_0_16_86)))
 (let ((?x46698 (+ ?x46695 ?x46697)))
 (= (- (- ?x46698 ?x46715) ?x46717) 0.0)))))))))))
(assert
 (let ((?x46202 (* l_0_16_90 l_0_16_90)))
 (let ((?x46200 (* l_0_16_89 l_0_16_89)))
 (let ((?x46198 (* l_0_16_88 l_0_16_88)))
 (let ((?x46196 (* l_0_16_62 l_0_16_62)))
 (let ((?x46846 (- (- (* (- l_0_16_60) l_0_16_60) (* l_0_16_61 l_0_16_61)) ?x46196)))
 (= (+ (+ (+ ?x46846 ?x46198) ?x46200) ?x46202) 0.0)))))))
(assert
 (let ((?x44583 (* 2.0 l_0_16_90)))
 (let ((?x46396 (* ?x44583 l_0_16_97)))
 (let ((?x44580 (* 2.0 l_0_16_89)))
 (let ((?x46394 (* ?x44580 l_0_16_96)))
 (let ((?x44577 (* 2.0 l_0_16_88)))
 (let ((?x46392 (* ?x44577 l_0_16_95)))
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46390 (* ?x44574 l_0_16_69)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46388 (* ?x44571 l_0_16_68)))
 (let ((?x46856 (+ (+ (- (- (* (* (- 2.0) l_0_16_60) l_0_16_67) ?x46388) ?x46390) ?x46392) ?x46394)))
 (= (+ ?x46856 ?x46396) 0.0)))))))))))))
(assert
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46461 (* ?x44574 l_0_16_74)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46458 (* ?x44571 l_0_16_73)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46455 (* ?x44568 l_0_16_72)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x11935 (* ?x44755 l_0_16_90)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x36339 (* ?x44752 l_0_16_89)))
 (let ((?x46412 (+ (+ (* (* 2.0 l_0_16_100) l_0_16_88) ?x36339) ?x11935)))
 (= (- (- (- ?x46412 ?x46455) ?x46458) ?x46461) 0.0)))))))))))))
(assert
 (let ((?x44574 (* 2.0 l_0_16_62)))
 (let ((?x46563 (* ?x44574 l_0_16_80)))
 (let ((?x44571 (* 2.0 l_0_16_61)))
 (let ((?x46561 (* ?x44571 l_0_16_79)))
 (let ((?x44568 (* 2.0 l_0_16_60)))
 (let ((?x46559 (* ?x44568 l_0_16_78)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46521 (* ?x44365 l_0_16_90)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46519 (* ?x44362 l_0_16_89)))
 (let ((?x46522 (+ (+ (* (* 2.0 l_0_16_106) l_0_16_88) ?x46519) ?x46521)))
 (= (- (- (- ?x46522 ?x46559) ?x46561) ?x46563) 0.0)))))))))))))
(assert
 (let ((?x46909 (* l_0_16_99 l_0_16_99)))
 (let ((?x46907 (* l_0_16_98 l_0_16_98)))
 (let ((?x46905 (* l_0_16_97 l_0_16_97)))
 (let ((?x46903 (* l_0_16_96 l_0_16_96)))
 (let ((?x46901 (* l_0_16_95 l_0_16_95)))
 (let ((?x46899 (* l_0_16_71 l_0_16_71)))
 (let ((?x46897 (* l_0_16_70 l_0_16_70)))
 (let ((?x46895 (* l_0_16_69 l_0_16_69)))
 (let ((?x46896 (- (- (* (- l_0_16_67) l_0_16_67) (* l_0_16_68 l_0_16_68)) ?x46895)))
 (let ((?x46910 (+ (+ (+ (+ (+ (- (- ?x46896 ?x46897) ?x46899) ?x46901) ?x46903) ?x46905) ?x46907) ?x46909)))
 (= ?x46910 0.0))))))))))))
(assert
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x46953 (* ?x46952 l_0_16_76)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x46950 (* ?x46949 l_0_16_75)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x46947 (* ?x46946 l_0_16_74)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x46944 (* ?x46943 l_0_16_73)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46941 (* ?x46940 l_0_16_72)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x46938 (* ?x46937 l_0_16_99)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x46935 (* ?x44758 l_0_16_98)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x46933 (* ?x44755 l_0_16_97)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46931 (* ?x44752 l_0_16_96)))
 (let ((?x46939 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_95) ?x46931) ?x46933) ?x46935) ?x46938)))
 (= (- (- (- (- (- ?x46939 ?x46941) ?x46944) ?x46947) ?x46950) ?x46953) 0.0)))))))))))))))))))))
(assert
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x47006 (* ?x46952 l_0_16_82)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x47004 (* ?x46949 l_0_16_81)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x47002 (* ?x46946 l_0_16_80)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x47000 (* ?x46943 l_0_16_79)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46998 (* ?x46940 l_0_16_78)))
 (let ((?x46996 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x46993 (* ?x44368 l_0_16_98)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46991 (* ?x44365 l_0_16_97)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46989 (* ?x44362 l_0_16_96)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46988 (* ?x44359 l_0_16_95)))
 (let ((?x46997 (+ (+ (+ (+ ?x46988 ?x46989) ?x46991) ?x46993) ?x46996)))
 (= (- (- (- (- (- ?x46997 ?x46998) ?x47000) ?x47002) ?x47004) ?x47006) 0.0))))))))))))))))))))))
(assert
 (let ((?x47057 (* l_0_16_77 l_0_16_77)))
 (let ((?x47055 (* l_0_16_76 l_0_16_76)))
 (let ((?x47053 (* l_0_16_75 l_0_16_75)))
 (let ((?x47051 (* l_0_16_74 l_0_16_74)))
 (let ((?x47049 (* l_0_16_73 l_0_16_73)))
 (let ((?x47047 (* l_0_16_72 l_0_16_72)))
 (let ((?x47045 (* l_0_16_105 l_0_16_105)))
 (let ((?x47043 (* l_0_16_104 l_0_16_104)))
 (let ((?x47041 (* l_0_16_103 l_0_16_103)))
 (let ((?x47039 (* l_0_16_102 l_0_16_102)))
 (let ((?x47040 (+ (+ (* l_0_16_100 l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x47039)))
 (let ((?x47054 (- (- (- (- (+ (+ (+ ?x47040 ?x47041) ?x47043) ?x47045) ?x47047) ?x47049) ?x47051) ?x47053)))
 (= (- (- ?x47054 ?x47055) ?x47057) 0.0))))))))))))))
(assert
 (let ((?x47102 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x47099 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x47096 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x47093 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x47090 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x47087 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x47084 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x47081 (* ?x46937 l_0_16_110)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x47079 (* ?x44758 l_0_16_109)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x47077 (* ?x44755 l_0_16_108)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x47075 (* ?x44752 l_0_16_107)))
 (let ((?x47082 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_106) ?x47075) ?x47077) ?x47079) ?x47081)))
 (let ((?x47085 (+ ?x47082 ?x47084)))
 (= (- (- (- (- (- (- ?x47085 ?x47087) ?x47090) ?x47093) ?x47096) ?x47099) ?x47102) 0.0)))))))))))))))))))
(assert
 (let ((?x47151 (* l_0_16_84 l_0_16_84)))
 (let ((?x47149 (* l_0_16_83 l_0_16_83)))
 (let ((?x47147 (* l_0_16_82 l_0_16_82)))
 (let ((?x47145 (* l_0_16_81 l_0_16_81)))
 (let ((?x47143 (* l_0_16_80 l_0_16_80)))
 (let ((?x47141 (* l_0_16_79 l_0_16_79)))
 (let ((?x47139 (* l_0_16_78 l_0_16_78)))
 (let ((?x47137 (* l_0_16_112 l_0_16_112)))
 (let ((?x47135 (* l_0_16_111 l_0_16_111)))
 (let ((?x47133 (* l_0_16_110 l_0_16_110)))
 (let ((?x47131 (* l_0_16_109 l_0_16_109)))
 (let ((?x47129 (* l_0_16_108 l_0_16_108)))
 (let ((?x47130 (+ (+ (* l_0_16_106 l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47129)))
 (let ((?x47138 (+ (+ (+ (+ ?x47130 ?x47131) ?x47133) ?x47135) ?x47137)))
 (let ((?x47152 (- (- (- (- (- (- (- ?x47138 ?x47139) ?x47141) ?x47143) ?x47145) ?x47147) ?x47149) ?x47151)))
 (= ?x47152 0.0)))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x12595 (* ?x44264 l_0_16_86)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x47187 (* ?x44261 l_0_16_58)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44256 (* ?x44255 l_0_16_142)))
 (let ((?x47170 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_114) ?x44256) (* (* 2.0 l_0_16_169) l_0_16_170))))
 (let ((?x47174 (- (- ?x47170 (* (* 2.0 l_0_16_198) l_0_16_207)) (* (* 2.0 l_0_16_199) l_0_16_208))))
 (let ((?x47178 (- (- ?x47174 (* (* 2.0 l_0_16_226) l_0_16_235)) (* (* 2.0 l_0_16_227) l_0_16_236))))
 (let ((?x47182 (- (- ?x47178 (* (* 2.0 l_0_16_254) l_0_16_263)) (* (* 2.0 l_0_16_255) l_0_16_264))))
 (let ((?x47186 (- (- ?x47182 (* (* 2.0 l_0_16_282) l_0_16_291)) (* (* 2.0 l_0_16_283) l_0_16_292))))
 (= (+ (- ?x47186 ?x47187) ?x12595) 0.0)))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x44265 (* ?x44264 l_0_16_91)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x44262 (* ?x44261 l_0_16_63)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x24737 (* ?x44255 l_0_16_147)))
 (let ((?x47232 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_119) ?x24737) (* (* 2.0 l_0_16_169) l_0_16_175))))
 (let ((?x47236 (- (- ?x47232 (* (* 2.0 l_0_16_203) l_0_16_207)) (* (* 2.0 l_0_16_204) l_0_16_208))))
 (let ((?x47240 (- (- ?x47236 (* (* 2.0 l_0_16_205) l_0_16_209)) (* (* 2.0 l_0_16_206) l_0_16_210))))
 (let ((?x47244 (- (- ?x47240 (* (* 2.0 l_0_16_231) l_0_16_235)) (* (* 2.0 l_0_16_232) l_0_16_236))))
 (let ((?x47248 (- (- ?x47244 (* (* 2.0 l_0_16_233) l_0_16_237)) (* (* 2.0 l_0_16_234) l_0_16_238))))
 (let ((?x47252 (- (- ?x47248 (* (* 2.0 l_0_16_259) l_0_16_263)) (* (* 2.0 l_0_16_260) l_0_16_264))))
 (let ((?x47256 (- (- ?x47252 (* (* 2.0 l_0_16_261) l_0_16_265)) (* (* 2.0 l_0_16_262) l_0_16_266))))
 (let ((?x47260 (- (- ?x47256 (* (* 2.0 l_0_16_287) l_0_16_291)) (* (* 2.0 l_0_16_288) l_0_16_292))))
 (let ((?x47264 (- (- ?x47260 (* (* 2.0 l_0_16_289) l_0_16_293)) (* (* 2.0 l_0_16_290) l_0_16_294))))
 (= (+ (- ?x47264 ?x44262) ?x44265) 0.0)))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x46719 (* ?x44264 l_0_16_95)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x46713 (* ?x44261 l_0_16_67)))
 (let ((?x47335 (* l_0_16_295 l_0_16_295)))
 (let ((?x47333 (* l_0_16_294 l_0_16_294)))
 (let ((?x47331 (* l_0_16_293 l_0_16_293)))
 (let ((?x47329 (* l_0_16_292 l_0_16_292)))
 (let ((?x47327 (* l_0_16_291 l_0_16_291)))
 (let ((?x47325 (* l_0_16_267 l_0_16_267)))
 (let ((?x47323 (* l_0_16_266 l_0_16_266)))
 (let ((?x47321 (* l_0_16_265 l_0_16_265)))
 (let ((?x47319 (* l_0_16_264 l_0_16_264)))
 (let ((?x47317 (* l_0_16_263 l_0_16_263)))
 (let ((?x47315 (* l_0_16_239 l_0_16_239)))
 (let ((?x47313 (* l_0_16_238 l_0_16_238)))
 (let ((?x47311 (* l_0_16_237 l_0_16_237)))
 (let ((?x47309 (* l_0_16_236 l_0_16_236)))
 (let ((?x47307 (* l_0_16_235 l_0_16_235)))
 (let ((?x47305 (* l_0_16_211 l_0_16_211)))
 (let ((?x47303 (* l_0_16_210 l_0_16_210)))
 (let ((?x37483 (* l_0_16_209 l_0_16_209)))
 (let ((?x13607 (* l_0_16_208 l_0_16_208)))
 (let ((?x37486 (* l_0_16_207 l_0_16_207)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44383 (* ?x44255 l_0_16_151)))
 (let ((?x37469 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_123) ?x44383) (* (* 2.0 l_0_16_169) l_0_16_179))))
 (let ((?x47310 (- (- (- (- (- (- (- ?x37469 ?x37486) ?x13607) ?x37483) ?x47303) ?x47305) ?x47307) ?x47309)))
 (let ((?x47324 (- (- (- (- (- (- (- ?x47310 ?x47311) ?x47313) ?x47315) ?x47317) ?x47319) ?x47321) ?x47323)))
 (let ((?x47337 (- (- (- (- (- (- (- ?x47324 ?x47325) ?x47327) ?x47329) ?x47331) ?x47333) ?x47335) ?x46713)))
 (= (+ ?x47337 ?x46719) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x46719 (* ?x44264 l_0_16_95)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x37190 (* ?x44261 l_0_16_72)))
 (let ((?x46713 (* ?x44261 l_0_16_67)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x44483 (* ?x44255 l_0_16_156)))
 (let ((?x44750 (* 2.0 l_0_16_100)))
 (let ((?x25644 (* ?x44750 l_0_16_85)))
 (let ((?x47385 (- (- (- ?x25644 (* (* 2.0 l_0_16_113) l_0_16_128)) ?x44483) (* (* 2.0 l_0_16_169) l_0_16_184))))
 (let ((?x47391 (- (- ?x47385 (* (* 2.0 l_0_16_207) l_0_16_212)) (* (* 2.0 l_0_16_208) l_0_16_213))))
 (let ((?x47397 (- (- ?x47391 (* (* 2.0 l_0_16_209) l_0_16_214)) (* (* 2.0 l_0_16_210) l_0_16_215))))
 (let ((?x47403 (- (- ?x47397 (* (* 2.0 l_0_16_211) l_0_16_216)) (* (* 2.0 l_0_16_235) l_0_16_240))))
 (let ((?x47409 (- (- ?x47403 (* (* 2.0 l_0_16_236) l_0_16_241)) (* (* 2.0 l_0_16_237) l_0_16_242))))
 (let ((?x47415 (- (- ?x47409 (* (* 2.0 l_0_16_238) l_0_16_243)) (* (* 2.0 l_0_16_239) l_0_16_244))))
 (let ((?x47421 (- (- ?x47415 (* (* 2.0 l_0_16_263) l_0_16_268)) (* (* 2.0 l_0_16_264) l_0_16_269))))
 (let ((?x47427 (- (- ?x47421 (* (* 2.0 l_0_16_265) l_0_16_270)) (* (* 2.0 l_0_16_266) l_0_16_271))))
 (let ((?x47433 (- (- ?x47427 (* (* 2.0 l_0_16_267) l_0_16_272)) (* (* 2.0 l_0_16_291) l_0_16_296))))
 (let ((?x47439 (- (- ?x47433 (* (* 2.0 l_0_16_292) l_0_16_297)) (* (* 2.0 l_0_16_293) l_0_16_298))))
 (let ((?x47445 (- (- ?x47439 (* (* 2.0 l_0_16_294) l_0_16_299)) (* (* 2.0 l_0_16_295) l_0_16_300))))
 (= (- (- (+ ?x47445 ?x46713) ?x37190) ?x46719) 0.0))))))))))))))))))))))
(assert
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x46750 (* ?x44261 l_0_16_78)))
 (let ((?x44255 (* 2.0 l_0_16_141)))
 (let ((?x9386 (* ?x44255 l_0_16_162)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x37219 (* ?x44359 l_0_16_85)))
 (let ((?x37600 (- (- (- ?x37219 (* (* 2.0 l_0_16_113) l_0_16_134)) ?x9386) (* (* 2.0 l_0_16_169) l_0_16_190))))
 (let ((?x37626 (- (- ?x37600 (* (* 2.0 l_0_16_207) l_0_16_218)) (* (* 2.0 l_0_16_208) l_0_16_219))))
 (let ((?x13804 (- (- ?x37626 (* (* 2.0 l_0_16_209) l_0_16_220)) (* (* 2.0 l_0_16_210) l_0_16_221))))
 (let ((?x47512 (- (- ?x13804 (* (* 2.0 l_0_16_211) l_0_16_222)) (* (* 2.0 l_0_16_235) l_0_16_246))))
 (let ((?x47516 (- (- ?x47512 (* (* 2.0 l_0_16_236) l_0_16_247)) (* (* 2.0 l_0_16_237) l_0_16_248))))
 (let ((?x47520 (- (- ?x47516 (* (* 2.0 l_0_16_238) l_0_16_249)) (* (* 2.0 l_0_16_239) l_0_16_250))))
 (let ((?x47524 (- (- ?x47520 (* (* 2.0 l_0_16_263) l_0_16_274)) (* (* 2.0 l_0_16_264) l_0_16_275))))
 (let ((?x47528 (- (- ?x47524 (* (* 2.0 l_0_16_265) l_0_16_276)) (* (* 2.0 l_0_16_266) l_0_16_277))))
 (let ((?x47532 (- (- ?x47528 (* (* 2.0 l_0_16_267) l_0_16_278)) (* (* 2.0 l_0_16_291) l_0_16_302))))
 (let ((?x47536 (- (- ?x47532 (* (* 2.0 l_0_16_292) l_0_16_303)) (* (* 2.0 l_0_16_293) l_0_16_304))))
 (let ((?x47540 (- (- ?x47536 (* (* 2.0 l_0_16_294) l_0_16_305)) (* (* 2.0 l_0_16_295) l_0_16_306))))
 (= (- ?x47540 ?x46750) 0.0)))))))))))))))))))
(assert
 (let ((?x46765 (* l_0_16_87 l_0_16_87)))
 (let ((?x46763 (* l_0_16_86 l_0_16_86)))
 (let ((?x46761 (* l_0_16_59 l_0_16_59)))
 (let ((?x46769 (* l_0_16_58 l_0_16_58)))
 (let ((?x46018 (* l_0_16_171 l_0_16_171)))
 (let ((?x46016 (* l_0_16_170 l_0_16_170)))
 (let ((?x44503 (* l_0_16_143 l_0_16_143)))
 (let ((?x44501 (* l_0_16_142 l_0_16_142)))
 (let ((?x47596 (- (- (* (- l_0_16_114) l_0_16_114) (* l_0_16_115 l_0_16_115)) ?x44501)))
 (let ((?x47603 (+ (+ (- (- (- (- (- ?x47596 ?x44503) ?x46016) ?x46018) ?x46769) ?x46761) ?x46763) ?x46765)))
 (= ?x47603 0.0))))))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x44529 (* ?x44528 l_0_16_92)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x44526 (* ?x44525 l_0_16_91)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x44523 (* ?x44522 l_0_16_64)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x44520 (* ?x44519 l_0_16_63)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44620 (* ?x44553 l_0_16_148)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44618 (* ?x44551 l_0_16_147)))
 (let ((?x47620 (- (* (* (- 2.0) l_0_16_114) l_0_16_119) (* (* 2.0 l_0_16_115) l_0_16_120))))
 (let ((?x47626 (- (- (- (- ?x47620 ?x44618) ?x44620) (* (* 2.0 l_0_16_170) l_0_16_175)) (* (* 2.0 l_0_16_171) l_0_16_176))))
 (= (+ (+ (- (- ?x47626 ?x44520) ?x44523) ?x44526) ?x44529) 0.0))))))))))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46793 (* ?x44528 l_0_16_96)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46791 (* ?x44525 l_0_16_95)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46789 (* ?x44522 l_0_16_68)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x47658 (* ?x44519 l_0_16_67)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44694 (* ?x44553 l_0_16_152)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44692 (* ?x44551 l_0_16_151)))
 (let ((?x47651 (- (* (* (- 2.0) l_0_16_114) l_0_16_123) (* (* 2.0 l_0_16_115) l_0_16_124))))
 (let ((?x47657 (- (- (- (- ?x47651 ?x44692) ?x44694) (* (* 2.0 l_0_16_170) l_0_16_179)) (* (* 2.0 l_0_16_171) l_0_16_180))))
 (= (+ (+ (- (- ?x47657 ?x47658) ?x46789) ?x46791) ?x46793) 0.0))))))))))))))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x46793 (* ?x44528 l_0_16_96)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x46791 (* ?x44525 l_0_16_95)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46816 (* ?x44522 l_0_16_73)))
 (let ((?x46789 (* ?x44522 l_0_16_68)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46814 (* ?x44519 l_0_16_72)))
 (let ((?x47658 (* ?x44519 l_0_16_67)))
 (let ((?x44553 (* 2.0 l_0_16_143)))
 (let ((?x44763 (* ?x44553 l_0_16_157)))
 (let ((?x44551 (* 2.0 l_0_16_142)))
 (let ((?x44761 (* ?x44551 l_0_16_156)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46807 (* ?x44752 l_0_16_87)))
 (let ((?x46808 (+ (* (* 2.0 l_0_16_100) l_0_16_86) ?x46807)))
 (let ((?x27206 (- (- ?x46808 (* (* 2.0 l_0_16_114) l_0_16_128)) (* (* 2.0 l_0_16_115) l_0_16_129))))
 (let ((?x47681 (- (- (- (- ?x27206 ?x44761) ?x44763) (* (* 2.0 l_0_16_170) l_0_16_184)) (* (* 2.0 l_0_16_171) l_0_16_185))))
 (= (- (- (- (+ (- (+ ?x47681 ?x47658) ?x46814) ?x46789) ?x46816) ?x46791) ?x46793) 0.0)))))))))))))))))))))
(assert
 (let ((?x44654 (* l_0_16_94 l_0_16_94)))
 (let ((?x44652 (* l_0_16_93 l_0_16_93)))
 (let ((?x44650 (* l_0_16_92 l_0_16_92)))
 (let ((?x44648 (* l_0_16_91 l_0_16_91)))
 (let ((?x44646 (* l_0_16_66 l_0_16_66)))
 (let ((?x44644 (* l_0_16_65 l_0_16_65)))
 (let ((?x44642 (* l_0_16_64 l_0_16_64)))
 (let ((?x44640 (* l_0_16_63 l_0_16_63)))
 (let ((?x46256 (* l_0_16_178 l_0_16_178)))
 (let ((?x35780 (* l_0_16_177 l_0_16_177)))
 (let ((?x35753 (* l_0_16_176 l_0_16_176)))
 (let ((?x35719 (* l_0_16_175 l_0_16_175)))
 (let ((?x45096 (* l_0_16_150 l_0_16_150)))
 (let ((?x45094 (* l_0_16_149 l_0_16_149)))
 (let ((?x45092 (* l_0_16_148 l_0_16_148)))
 (let ((?x45090 (* l_0_16_147 l_0_16_147)))
 (let ((?x47709 (* l_0_16_122 l_0_16_122)))
 (let ((?x47707 (* l_0_16_121 l_0_16_121)))
 (let ((?x47708 (- (- (* (- l_0_16_119) l_0_16_119) (* l_0_16_120 l_0_16_120)) ?x47707)))
 (let ((?x47716 (- (- (- (- (- (- (- ?x47708 ?x47709) ?x45090) ?x45092) ?x45094) ?x45096) ?x35719) ?x35753)))
 (let ((?x47723 (+ (- (- (- (- (- (- ?x47716 ?x35780) ?x46256) ?x44640) ?x44642) ?x44644) ?x44646) ?x44648)))
 (= (+ (+ (+ ?x47723 ?x44650) ?x44652) ?x44654) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44718 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x44715 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x44712 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x44709 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44706 (* ?x44420 l_0_16_70)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44704 (* ?x44417 l_0_16_69)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44702 (* ?x44414 l_0_16_68)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44700 (* ?x44411 l_0_16_67)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x45138 (* ?x44394 l_0_16_154)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x45136 (* ?x44391 l_0_16_153)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x45134 (* ?x44388 l_0_16_152)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x45132 (* ?x44385 l_0_16_151)))
 (let ((?x38018 (- (* (* (- 2.0) l_0_16_119) l_0_16_123) (* (* 2.0 l_0_16_120) l_0_16_124))))
 (let ((?x38006 (- (- ?x38018 (* (* 2.0 l_0_16_121) l_0_16_125)) (* (* 2.0 l_0_16_122) l_0_16_126))))
 (let ((?x37922 (- (- (- (- (- ?x38006 ?x45132) ?x45134) ?x45136) ?x45138) (* (* 2.0 l_0_16_175) l_0_16_179))))
 (let ((?x47736 (- (- ?x37922 (* (* 2.0 l_0_16_176) l_0_16_180)) (* (* 2.0 l_0_16_177) l_0_16_181))))
 (let ((?x47741 (- (- (- (- ?x47736 (* (* 2.0 l_0_16_178) l_0_16_182)) ?x44700) ?x44702) ?x44704)))
 (= (+ (+ (+ (+ (- ?x47741 ?x44706) ?x44709) ?x44712) ?x44715) ?x44718) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x44718 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x44715 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x44712 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x44709 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44781 (* ?x44420 l_0_16_75)))
 (let ((?x44706 (* ?x44420 l_0_16_70)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44779 (* ?x44417 l_0_16_74)))
 (let ((?x44704 (* ?x44417 l_0_16_69)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44777 (* ?x44414 l_0_16_73)))
 (let ((?x44702 (* ?x44414 l_0_16_68)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44775 (* ?x44411 l_0_16_72)))
 (let ((?x44700 (* ?x44411 l_0_16_67)))
 (let ((?x44394 (* 2.0 l_0_16_150)))
 (let ((?x45172 (* ?x44394 l_0_16_159)))
 (let ((?x44391 (* 2.0 l_0_16_149)))
 (let ((?x45167 (* ?x44391 l_0_16_158)))
 (let ((?x44388 (* 2.0 l_0_16_148)))
 (let ((?x45168 (* ?x44388 l_0_16_157)))
 (let ((?x44385 (* 2.0 l_0_16_147)))
 (let ((?x24947 (* ?x44385 l_0_16_156)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x44759 (* ?x44758 l_0_16_94)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x44756 (* ?x44755 l_0_16_93)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x44753 (* ?x44752 l_0_16_92)))
 (let ((?x44760 (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_91) ?x44753) ?x44756) ?x44759)))
 (let ((?x47765 (- (- ?x44760 (* (* 2.0 l_0_16_119) l_0_16_128)) (* (* 2.0 l_0_16_120) l_0_16_129))))
 (let ((?x47769 (- (- ?x47765 (* (* 2.0 l_0_16_121) l_0_16_130)) (* (* 2.0 l_0_16_122) l_0_16_131))))
 (let ((?x47775 (- (- (- (- (- ?x47769 ?x24947) ?x45168) ?x45167) ?x45172) (* (* 2.0 l_0_16_175) l_0_16_184))))
 (let ((?x47779 (- (- ?x47775 (* (* 2.0 l_0_16_176) l_0_16_185)) (* (* 2.0 l_0_16_177) l_0_16_186))))
 (let ((?x47784 (+ (- (+ (- ?x47779 (* (* 2.0 l_0_16_178) l_0_16_187)) ?x44700) ?x44775) ?x44702)))
 (let ((?x47791 (- (- (- (+ (- (+ (- ?x47784 ?x44777) ?x44704) ?x44779) ?x44706) ?x44781) ?x44709) ?x44712)))
 (= (- (- ?x47791 ?x44715) ?x44718) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x46909 (* l_0_16_99 l_0_16_99)))
 (let ((?x46907 (* l_0_16_98 l_0_16_98)))
 (let ((?x46905 (* l_0_16_97 l_0_16_97)))
 (let ((?x46903 (* l_0_16_96 l_0_16_96)))
 (let ((?x46901 (* l_0_16_95 l_0_16_95)))
 (let ((?x46899 (* l_0_16_71 l_0_16_71)))
 (let ((?x46897 (* l_0_16_70 l_0_16_70)))
 (let ((?x46895 (* l_0_16_69 l_0_16_69)))
 (let ((?x46893 (* l_0_16_68 l_0_16_68)))
 (let ((?x46913 (* l_0_16_67 l_0_16_67)))
 (let ((?x46378 (* l_0_16_183 l_0_16_183)))
 (let ((?x46375 (* l_0_16_182 l_0_16_182)))
 (let ((?x46372 (* l_0_16_181 l_0_16_181)))
 (let ((?x46369 (* l_0_16_180 l_0_16_180)))
 (let ((?x46366 (* l_0_16_179 l_0_16_179)))
 (let ((?x45271 (* l_0_16_155 l_0_16_155)))
 (let ((?x45269 (* l_0_16_154 l_0_16_154)))
 (let ((?x45267 (* l_0_16_153 l_0_16_153)))
 (let ((?x45265 (* l_0_16_152 l_0_16_152)))
 (let ((?x45263 (* l_0_16_151 l_0_16_151)))
 (let ((?x47830 (* l_0_16_127 l_0_16_127)))
 (let ((?x27921 (* l_0_16_126 l_0_16_126)))
 (let ((?x27926 (* l_0_16_125 l_0_16_125)))
 (let ((?x14688 (- (- (* (- l_0_16_123) l_0_16_123) (* l_0_16_124 l_0_16_124)) ?x27926)))
 (let ((?x47836 (- (- (- (- (- (- (- ?x14688 ?x27921) ?x47830) ?x45263) ?x45265) ?x45267) ?x45269) ?x45271)))
 (let ((?x47843 (- (- (- (- (- (- (- ?x47836 ?x46366) ?x46369) ?x46372) ?x46375) ?x46378) ?x46913) ?x46893)))
 (let ((?x47850 (+ (+ (+ (+ (- (- (- ?x47843 ?x46895) ?x46897) ?x46899) ?x46901) ?x46903) ?x46905) ?x46907)))
 (= (+ ?x47850 ?x46909) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x46909 (* l_0_16_99 l_0_16_99)))
 (let ((?x46907 (* l_0_16_98 l_0_16_98)))
 (let ((?x46905 (* l_0_16_97 l_0_16_97)))
 (let ((?x46903 (* l_0_16_96 l_0_16_96)))
 (let ((?x46901 (* l_0_16_95 l_0_16_95)))
 (let ((?x46899 (* l_0_16_71 l_0_16_71)))
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x46953 (* ?x46952 l_0_16_76)))
 (let ((?x46897 (* l_0_16_70 l_0_16_70)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x46950 (* ?x46949 l_0_16_75)))
 (let ((?x46895 (* l_0_16_69 l_0_16_69)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x46947 (* ?x46946 l_0_16_74)))
 (let ((?x46893 (* l_0_16_68 l_0_16_68)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x46944 (* ?x46943 l_0_16_73)))
 (let ((?x46913 (* l_0_16_67 l_0_16_67)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46941 (* ?x46940 l_0_16_72)))
 (let ((?x45331 (* 2.0 l_0_16_155)))
 (let ((?x45332 (* ?x45331 l_0_16_160)))
 (let ((?x45328 (* 2.0 l_0_16_154)))
 (let ((?x45329 (* ?x45328 l_0_16_159)))
 (let ((?x45325 (* 2.0 l_0_16_153)))
 (let ((?x45326 (* ?x45325 l_0_16_158)))
 (let ((?x45322 (* 2.0 l_0_16_152)))
 (let ((?x45323 (* ?x45322 l_0_16_157)))
 (let ((?x45319 (* 2.0 l_0_16_151)))
 (let ((?x45320 (* ?x45319 l_0_16_156)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x46938 (* ?x46937 l_0_16_99)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x46935 (* ?x44758 l_0_16_98)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x46933 (* ?x44755 l_0_16_97)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46931 (* ?x44752 l_0_16_96)))
 (let ((?x46939 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_95) ?x46931) ?x46933) ?x46935) ?x46938)))
 (let ((?x38398 (- (- ?x46939 (* (* 2.0 l_0_16_123) l_0_16_128)) (* (* 2.0 l_0_16_124) l_0_16_129))))
 (let ((?x28268 (- (- ?x38398 (* (* 2.0 l_0_16_125) l_0_16_130)) (* (* 2.0 l_0_16_126) l_0_16_131))))
 (let ((?x28239 (- (- (- (- ?x28268 (* (* 2.0 l_0_16_127) l_0_16_132)) ?x45320) ?x45323) ?x45326)))
 (let ((?x28209 (- (- (- (- ?x28239 ?x45329) ?x45332) (* (* 2.0 l_0_16_179) l_0_16_184)) (* (* 2.0 l_0_16_180) l_0_16_185))))
 (let ((?x14712 (- (- ?x28209 (* (* 2.0 l_0_16_181) l_0_16_186)) (* (* 2.0 l_0_16_182) l_0_16_187))))
 (let ((?x28000 (- (+ (- (- ?x14712 (* (* 2.0 l_0_16_183) l_0_16_188)) ?x46941) ?x46913) ?x46944)))
 (let ((?x47870 (+ (- (+ (- (+ (- (+ ?x28000 ?x46893) ?x46947) ?x46895) ?x46950) ?x46897) ?x46953) ?x46899)))
 (= (- (- (- (- (- ?x47870 ?x46901) ?x46903) ?x46905) ?x46907) ?x46909) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x47006 (* ?x46952 l_0_16_82)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x47004 (* ?x46949 l_0_16_81)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x47002 (* ?x46946 l_0_16_80)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x47000 (* ?x46943 l_0_16_79)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46998 (* ?x46940 l_0_16_78)))
 (let ((?x45331 (* 2.0 l_0_16_155)))
 (let ((?x45407 (* ?x45331 l_0_16_166)))
 (let ((?x45328 (* 2.0 l_0_16_154)))
 (let ((?x45405 (* ?x45328 l_0_16_165)))
 (let ((?x45325 (* 2.0 l_0_16_153)))
 (let ((?x45403 (* ?x45325 l_0_16_164)))
 (let ((?x45322 (* 2.0 l_0_16_152)))
 (let ((?x45401 (* ?x45322 l_0_16_163)))
 (let ((?x45319 (* 2.0 l_0_16_151)))
 (let ((?x45386 (* ?x45319 l_0_16_162)))
 (let ((?x46996 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x46993 (* ?x44368 l_0_16_98)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46991 (* ?x44365 l_0_16_97)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46989 (* ?x44362 l_0_16_96)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46988 (* ?x44359 l_0_16_95)))
 (let ((?x46997 (+ (+ (+ (+ ?x46988 ?x46989) ?x46991) ?x46993) ?x46996)))
 (let ((?x47918 (- (- ?x46997 (* (* 2.0 l_0_16_123) l_0_16_134)) (* (* 2.0 l_0_16_124) l_0_16_135))))
 (let ((?x47922 (- (- ?x47918 (* (* 2.0 l_0_16_125) l_0_16_136)) (* (* 2.0 l_0_16_126) l_0_16_137))))
 (let ((?x47927 (- (- (- (- ?x47922 (* (* 2.0 l_0_16_127) l_0_16_138)) ?x45386) ?x45401) ?x45403)))
 (let ((?x47933 (- (- (- (- ?x47927 ?x45405) ?x45407) (* (* 2.0 l_0_16_179) l_0_16_190)) (* (* 2.0 l_0_16_180) l_0_16_191))))
 (let ((?x47937 (- (- ?x47933 (* (* 2.0 l_0_16_181) l_0_16_192)) (* (* 2.0 l_0_16_182) l_0_16_193))))
 (let ((?x47942 (- (- (- (- ?x47937 (* (* 2.0 l_0_16_183) l_0_16_194)) ?x46998) ?x47000) ?x47002)))
 (= (- (- ?x47942 ?x47004) ?x47006) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x47057 (* l_0_16_77 l_0_16_77)))
 (let ((?x47055 (* l_0_16_76 l_0_16_76)))
 (let ((?x47053 (* l_0_16_75 l_0_16_75)))
 (let ((?x47051 (* l_0_16_74 l_0_16_74)))
 (let ((?x47049 (* l_0_16_73 l_0_16_73)))
 (let ((?x47047 (* l_0_16_72 l_0_16_72)))
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x46953 (* ?x46952 l_0_16_76)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x46950 (* ?x46949 l_0_16_75)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x46947 (* ?x46946 l_0_16_74)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x46944 (* ?x46943 l_0_16_73)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46941 (* ?x46940 l_0_16_72)))
 (let ((?x46609 (* l_0_16_189 l_0_16_189)))
 (let ((?x46606 (* l_0_16_188 l_0_16_188)))
 (let ((?x46603 (* l_0_16_187 l_0_16_187)))
 (let ((?x46600 (* l_0_16_186 l_0_16_186)))
 (let ((?x46597 (* l_0_16_185 l_0_16_185)))
 (let ((?x46594 (* l_0_16_184 l_0_16_184)))
 (let ((?x45447 (* l_0_16_161 l_0_16_161)))
 (let ((?x45445 (* l_0_16_160 l_0_16_160)))
 (let ((?x45441 (* l_0_16_159 l_0_16_159)))
 (let ((?x9912 (* l_0_16_158 l_0_16_158)))
 (let ((?x25028 (* l_0_16_157 l_0_16_157)))
 (let ((?x9916 (* l_0_16_156 l_0_16_156)))
 (let ((?x47971 (* l_0_16_133 l_0_16_133)))
 (let ((?x15267 (* l_0_16_132 l_0_16_132)))
 (let ((?x28681 (* l_0_16_131 l_0_16_131)))
 (let ((?x15274 (* l_0_16_130 l_0_16_130)))
 (let ((?x28601 (* l_0_16_129 l_0_16_129)))
 (let ((?x28640 (* l_0_16_128 l_0_16_128)))
 (let ((?x47045 (* l_0_16_105 l_0_16_105)))
 (let ((?x47043 (* l_0_16_104 l_0_16_104)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x46938 (* ?x46937 l_0_16_99)))
 (let ((?x47041 (* l_0_16_103 l_0_16_103)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x46935 (* ?x44758 l_0_16_98)))
 (let ((?x47039 (* l_0_16_102 l_0_16_102)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x46933 (* ?x44755 l_0_16_97)))
 (let ((?x47037 (* l_0_16_101 l_0_16_101)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46931 (* ?x44752 l_0_16_96)))
 (let ((?x47036 (* l_0_16_100 l_0_16_100)))
 (let ((?x28676 (- (+ (- (+ (* (* (- 2.0) l_0_16_100) l_0_16_95) ?x47036) ?x46931) ?x47037) ?x46933)))
 (let ((?x15205 (- (+ (+ (- (+ (- (+ ?x28676 ?x47039) ?x46935) ?x47041) ?x46938) ?x47043) ?x47045) ?x28640)))
 (let ((?x47974 (- (- (- (- (- (- (- ?x15205 ?x28601) ?x15274) ?x28681) ?x15267) ?x47971) ?x9916) ?x25028)))
 (let ((?x47981 (- (- (- (- (- (- (- ?x47974 ?x9912) ?x45441) ?x45445) ?x45447) ?x46594) ?x46597) ?x46600)))
 (let ((?x47988 (+ (+ (+ (+ (- (- (- ?x47981 ?x46603) ?x46606) ?x46609) ?x46941) ?x46944) ?x46947) ?x46950)))
 (let ((?x47995 (- (- (- (- (- (- (+ ?x47988 ?x46953) ?x47047) ?x47049) ?x47051) ?x47053) ?x47055) ?x47057)))
 (= ?x47995 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x47102 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x47099 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x47096 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x47093 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x47090 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x47087 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x46952 (* 2.0 l_0_16_71)))
 (let ((?x47006 (* ?x46952 l_0_16_82)))
 (let ((?x46949 (* 2.0 l_0_16_70)))
 (let ((?x47004 (* ?x46949 l_0_16_81)))
 (let ((?x46946 (* 2.0 l_0_16_69)))
 (let ((?x47002 (* ?x46946 l_0_16_80)))
 (let ((?x46943 (* 2.0 l_0_16_68)))
 (let ((?x47000 (* ?x46943 l_0_16_79)))
 (let ((?x46940 (* 2.0 l_0_16_67)))
 (let ((?x46998 (* ?x46940 l_0_16_78)))
 (let ((?x45499 (* (* 2.0 l_0_16_161) l_0_16_167)))
 (let ((?x45496 (* (* 2.0 l_0_16_160) l_0_16_166)))
 (let ((?x45491 (* (* 2.0 l_0_16_159) l_0_16_165)))
 (let ((?x45488 (* (* 2.0 l_0_16_158) l_0_16_164)))
 (let ((?x45485 (* (* 2.0 l_0_16_157) l_0_16_163)))
 (let ((?x34947 (* (* 2.0 l_0_16_156) l_0_16_162)))
 (let ((?x46996 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44368 (* 2.0 l_0_16_109)))
 (let ((?x46993 (* ?x44368 l_0_16_98)))
 (let ((?x44365 (* 2.0 l_0_16_108)))
 (let ((?x46991 (* ?x44365 l_0_16_97)))
 (let ((?x44362 (* 2.0 l_0_16_107)))
 (let ((?x46989 (* ?x44362 l_0_16_96)))
 (let ((?x44359 (* 2.0 l_0_16_106)))
 (let ((?x46988 (* ?x44359 l_0_16_95)))
 (let ((?x47084 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x47081 (* ?x46937 l_0_16_110)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x47079 (* ?x44758 l_0_16_109)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x47077 (* ?x44755 l_0_16_108)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x47075 (* ?x44752 l_0_16_107)))
 (let ((?x47082 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_106) ?x47075) ?x47077) ?x47079) ?x47081)))
 (let ((?x47085 (+ ?x47082 ?x47084)))
 (let ((?x28809 (- (- (- (- (- (- ?x47085 ?x46988) ?x46989) ?x46991) ?x46993) ?x46996) (* (* 2.0 l_0_16_128) l_0_16_134))))
 (let ((?x48015 (- (- ?x28809 (* (* 2.0 l_0_16_129) l_0_16_135)) (* (* 2.0 l_0_16_130) l_0_16_136))))
 (let ((?x48021 (- (- ?x48015 (* (* 2.0 l_0_16_131) l_0_16_137)) (* (* 2.0 l_0_16_132) l_0_16_138))))
 (let ((?x48027 (- (- (- (- ?x48021 (* (* 2.0 l_0_16_133) l_0_16_139)) ?x34947) ?x45485) ?x45488)))
 (let ((?x48033 (- (- (- (- ?x48027 ?x45491) ?x45496) ?x45499) (* (* 2.0 l_0_16_184) l_0_16_190))))
 (let ((?x48039 (- (- ?x48033 (* (* 2.0 l_0_16_185) l_0_16_191)) (* (* 2.0 l_0_16_186) l_0_16_192))))
 (let ((?x48045 (- (- ?x48039 (* (* 2.0 l_0_16_187) l_0_16_193)) (* (* 2.0 l_0_16_188) l_0_16_194))))
 (let ((?x48051 (+ (+ (+ (- ?x48045 (* (* 2.0 l_0_16_189) l_0_16_195)) ?x46998) ?x47000) ?x47002)))
 (let ((?x48058 (- (- (- (- (- (+ (+ ?x48051 ?x47004) ?x47006) ?x47087) ?x47090) ?x47093) ?x47096) ?x47099)))
 (= (- ?x48058 ?x47102) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x47151 (* l_0_16_84 l_0_16_84)))
 (let ((?x47149 (* l_0_16_83 l_0_16_83)))
 (let ((?x47147 (* l_0_16_82 l_0_16_82)))
 (let ((?x47145 (* l_0_16_81 l_0_16_81)))
 (let ((?x47143 (* l_0_16_80 l_0_16_80)))
 (let ((?x47141 (* l_0_16_79 l_0_16_79)))
 (let ((?x47139 (* l_0_16_78 l_0_16_78)))
 (let ((?x46671 (* l_0_16_196 l_0_16_196)))
 (let ((?x46668 (* l_0_16_195 l_0_16_195)))
 (let ((?x46665 (* l_0_16_194 l_0_16_194)))
 (let ((?x37106 (* l_0_16_193 l_0_16_193)))
 (let ((?x37089 (* l_0_16_192 l_0_16_192)))
 (let ((?x37098 (* l_0_16_191 l_0_16_191)))
 (let ((?x12448 (* l_0_16_190 l_0_16_190)))
 (let ((?x45588 (* l_0_16_168 l_0_16_168)))
 (let ((?x45586 (* l_0_16_167 l_0_16_167)))
 (let ((?x45584 (* l_0_16_166 l_0_16_166)))
 (let ((?x45582 (* l_0_16_165 l_0_16_165)))
 (let ((?x45580 (* l_0_16_164 l_0_16_164)))
 (let ((?x45578 (* l_0_16_163 l_0_16_163)))
 (let ((?x45577 (* l_0_16_162 l_0_16_162)))
 (let ((?x48084 (* l_0_16_140 l_0_16_140)))
 (let ((?x48082 (* l_0_16_139 l_0_16_139)))
 (let ((?x48080 (* l_0_16_138 l_0_16_138)))
 (let ((?x48078 (* l_0_16_137 l_0_16_137)))
 (let ((?x48076 (* l_0_16_136 l_0_16_136)))
 (let ((?x48074 (* l_0_16_135 l_0_16_135)))
 (let ((?x48072 (* l_0_16_134 l_0_16_134)))
 (let ((?x47137 (* l_0_16_112 l_0_16_112)))
 (let ((?x47135 (* l_0_16_111 l_0_16_111)))
 (let ((?x47133 (* l_0_16_110 l_0_16_110)))
 (let ((?x47131 (* l_0_16_109 l_0_16_109)))
 (let ((?x47129 (* l_0_16_108 l_0_16_108)))
 (let ((?x47130 (+ (+ (* l_0_16_106 l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47129)))
 (let ((?x47138 (+ (+ (+ (+ ?x47130 ?x47131) ?x47133) ?x47135) ?x47137)))
 (let ((?x48085 (- (- (- (- (- (- (- ?x47138 ?x48072) ?x48074) ?x48076) ?x48078) ?x48080) ?x48082) ?x48084)))
 (let ((?x48092 (- (- (- (- (- (- (- ?x48085 ?x45577) ?x45578) ?x45580) ?x45582) ?x45584) ?x45586) ?x45588)))
 (let ((?x48099 (- (- (- (- (- (- (- ?x48092 ?x12448) ?x37098) ?x37089) ?x37106) ?x46665) ?x46668) ?x46671)))
 (let ((?x48106 (- (- (- (- (- (- (- ?x48099 ?x47139) ?x47141) ?x47143) ?x47145) ?x47147) ?x47149) ?x47151)))
 (= ?x48106 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x12595 (* ?x44264 l_0_16_86)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x47187 (* ?x44261 l_0_16_58)))
 (let ((?x16173 (- (* (* (- 2.0) l_0_16_198) l_0_16_212) (* (* 2.0 l_0_16_199) l_0_16_213))))
 (let ((?x14646 (- (- ?x16173 (* (* 2.0 l_0_16_226) l_0_16_240)) (* (* 2.0 l_0_16_227) l_0_16_241))))
 (let ((?x16157 (- (- ?x14646 (* (* 2.0 l_0_16_254) l_0_16_268)) (* (* 2.0 l_0_16_255) l_0_16_269))))
 (let ((?x48121 (- (- ?x16157 (* (* 2.0 l_0_16_282) l_0_16_296)) (* (* 2.0 l_0_16_283) l_0_16_297))))
 (= (- (+ ?x48121 ?x47187) ?x12595) 0.0))))))))))
(assert
 (let ((?x44264 (* 2.0 l_0_16_85)))
 (let ((?x44265 (* ?x44264 l_0_16_91)))
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x44262 (* ?x44261 l_0_16_63)))
 (let ((?x48150 (- (* (* (- 2.0) l_0_16_203) l_0_16_212) (* (* 2.0 l_0_16_204) l_0_16_213))))
 (let ((?x48154 (- (- ?x48150 (* (* 2.0 l_0_16_205) l_0_16_214)) (* (* 2.0 l_0_16_206) l_0_16_215))))
 (let ((?x48158 (- (- ?x48154 (* (* 2.0 l_0_16_231) l_0_16_240)) (* (* 2.0 l_0_16_232) l_0_16_241))))
 (let ((?x48162 (- (- ?x48158 (* (* 2.0 l_0_16_233) l_0_16_242)) (* (* 2.0 l_0_16_234) l_0_16_243))))
 (let ((?x48166 (- (- ?x48162 (* (* 2.0 l_0_16_259) l_0_16_268)) (* (* 2.0 l_0_16_260) l_0_16_269))))
 (let ((?x48170 (- (- ?x48166 (* (* 2.0 l_0_16_261) l_0_16_270)) (* (* 2.0 l_0_16_262) l_0_16_271))))
 (let ((?x48174 (- (- ?x48170 (* (* 2.0 l_0_16_287) l_0_16_296)) (* (* 2.0 l_0_16_288) l_0_16_297))))
 (let ((?x48178 (- (- ?x48174 (* (* 2.0 l_0_16_289) l_0_16_298)) (* (* 2.0 l_0_16_290) l_0_16_299))))
 (= (- (+ ?x48178 ?x44262) ?x44265) 0.0))))))))))))))
(assert
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x37190 (* ?x44261 l_0_16_72)))
 (let ((?x48299 (* l_0_16_301 l_0_16_301)))
 (let ((?x48297 (* l_0_16_300 l_0_16_300)))
 (let ((?x48295 (* l_0_16_299 l_0_16_299)))
 (let ((?x48293 (* l_0_16_298 l_0_16_298)))
 (let ((?x48291 (* l_0_16_297 l_0_16_297)))
 (let ((?x48289 (* l_0_16_296 l_0_16_296)))
 (let ((?x48287 (* l_0_16_273 l_0_16_273)))
 (let ((?x48285 (* l_0_16_272 l_0_16_272)))
 (let ((?x48283 (* l_0_16_271 l_0_16_271)))
 (let ((?x48281 (* l_0_16_270 l_0_16_270)))
 (let ((?x48279 (* l_0_16_269 l_0_16_269)))
 (let ((?x48277 (* l_0_16_268 l_0_16_268)))
 (let ((?x48275 (* l_0_16_245 l_0_16_245)))
 (let ((?x48273 (* l_0_16_244 l_0_16_244)))
 (let ((?x48271 (* l_0_16_243 l_0_16_243)))
 (let ((?x48269 (* l_0_16_242 l_0_16_242)))
 (let ((?x48267 (* l_0_16_241 l_0_16_241)))
 (let ((?x48265 (* l_0_16_240 l_0_16_240)))
 (let ((?x48263 (* l_0_16_217 l_0_16_217)))
 (let ((?x48261 (* l_0_16_216 l_0_16_216)))
 (let ((?x48259 (* l_0_16_215 l_0_16_215)))
 (let ((?x48257 (* l_0_16_214 l_0_16_214)))
 (let ((?x48255 (* l_0_16_213 l_0_16_213)))
 (let ((?x48253 (* l_0_16_212 l_0_16_212)))
 (let ((?x48260 (- (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_85) ?x48253) ?x48255) ?x48257) ?x48259)))
 (let ((?x48274 (- (- (- (- (- (- (- ?x48260 ?x48261) ?x48263) ?x48265) ?x48267) ?x48269) ?x48271) ?x48273)))
 (let ((?x48288 (- (- (- (- (- (- (- ?x48274 ?x48275) ?x48277) ?x48279) ?x48281) ?x48283) ?x48285) ?x48287)))
 (let ((?x48301 (+ (- (- (- (- (- (- ?x48288 ?x48289) ?x48291) ?x48293) ?x48295) ?x48297) ?x48299) ?x37190)))
 (= ?x48301 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44261 (* 2.0 l_0_16_57)))
 (let ((?x46750 (* ?x44261 l_0_16_78)))
 (let ((?x48326 (- (* (* (- 2.0) l_0_16_106) l_0_16_85) (* (* 2.0 l_0_16_212) l_0_16_218))))
 (let ((?x48332 (- (- ?x48326 (* (* 2.0 l_0_16_213) l_0_16_219)) (* (* 2.0 l_0_16_214) l_0_16_220))))
 (let ((?x48338 (- (- ?x48332 (* (* 2.0 l_0_16_215) l_0_16_221)) (* (* 2.0 l_0_16_216) l_0_16_222))))
 (let ((?x48344 (- (- ?x48338 (* (* 2.0 l_0_16_217) l_0_16_223)) (* (* 2.0 l_0_16_240) l_0_16_246))))
 (let ((?x48350 (- (- ?x48344 (* (* 2.0 l_0_16_241) l_0_16_247)) (* (* 2.0 l_0_16_242) l_0_16_248))))
 (let ((?x48356 (- (- ?x48350 (* (* 2.0 l_0_16_243) l_0_16_249)) (* (* 2.0 l_0_16_244) l_0_16_250))))
 (let ((?x48362 (- (- ?x48356 (* (* 2.0 l_0_16_245) l_0_16_251)) (* (* 2.0 l_0_16_268) l_0_16_274))))
 (let ((?x48368 (- (- ?x48362 (* (* 2.0 l_0_16_269) l_0_16_275)) (* (* 2.0 l_0_16_270) l_0_16_276))))
 (let ((?x48374 (- (- ?x48368 (* (* 2.0 l_0_16_271) l_0_16_277)) (* (* 2.0 l_0_16_272) l_0_16_278))))
 (let ((?x48380 (- (- ?x48374 (* (* 2.0 l_0_16_273) l_0_16_279)) (* (* 2.0 l_0_16_296) l_0_16_302))))
 (let ((?x48386 (- (- ?x48380 (* (* 2.0 l_0_16_297) l_0_16_303)) (* (* 2.0 l_0_16_298) l_0_16_304))))
 (let ((?x48392 (- (- ?x48386 (* (* 2.0 l_0_16_299) l_0_16_305)) (* (* 2.0 l_0_16_300) l_0_16_306))))
 (= (+ (- ?x48392 (* (* 2.0 l_0_16_301) l_0_16_307)) ?x46750) 0.0))))))))))))))))
(assert
 (let ((?x46765 (* l_0_16_87 l_0_16_87)))
 (let ((?x46763 (* l_0_16_86 l_0_16_86)))
 (let ((?x16788 (- (- (+ (* l_0_16_58 l_0_16_58) (* l_0_16_59 l_0_16_59)) ?x46763) ?x46765)))
 (= ?x16788 0.0)))))
(assert
 (let ((?x44528 (* 2.0 l_0_16_87)))
 (let ((?x44529 (* ?x44528 l_0_16_92)))
 (let ((?x44525 (* 2.0 l_0_16_86)))
 (let ((?x44526 (* ?x44525 l_0_16_91)))
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x44523 (* ?x44522 l_0_16_64)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x44520 (* ?x44519 l_0_16_63)))
 (= (- (- (+ ?x44520 ?x44523) ?x44526) ?x44529) 0.0))))))))))
(assert
 (let ((?x44522 (* 2.0 l_0_16_59)))
 (let ((?x46816 (* ?x44522 l_0_16_73)))
 (let ((?x44519 (* 2.0 l_0_16_58)))
 (let ((?x46814 (* ?x44519 l_0_16_72)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x46807 (* ?x44752 l_0_16_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_100) l_0_16_86) ?x46807) ?x46814) ?x46816) 0.0))))))))
(assert
 (let ((?x44654 (* l_0_16_94 l_0_16_94)))
 (let ((?x44652 (* l_0_16_93 l_0_16_93)))
 (let ((?x44650 (* l_0_16_92 l_0_16_92)))
 (let ((?x44648 (* l_0_16_91 l_0_16_91)))
 (let ((?x44646 (* l_0_16_66 l_0_16_66)))
 (let ((?x44644 (* l_0_16_65 l_0_16_65)))
 (let ((?x16728 (+ (+ (+ (* l_0_16_63 l_0_16_63) (* l_0_16_64 l_0_16_64)) ?x44644) ?x44646)))
 (= (- (- (- (- ?x16728 ?x44648) ?x44650) ?x44652) ?x44654) 0.0)))))))))
(assert
 (let ((?x44420 (* 2.0 l_0_16_66)))
 (let ((?x44781 (* ?x44420 l_0_16_75)))
 (let ((?x44417 (* 2.0 l_0_16_65)))
 (let ((?x44779 (* ?x44417 l_0_16_74)))
 (let ((?x44414 (* 2.0 l_0_16_64)))
 (let ((?x44777 (* ?x44414 l_0_16_73)))
 (let ((?x44411 (* 2.0 l_0_16_63)))
 (let ((?x44775 (* ?x44411 l_0_16_72)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x44759 (* ?x44758 l_0_16_94)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x44756 (* ?x44755 l_0_16_93)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x44753 (* ?x44752 l_0_16_92)))
 (let ((?x48498 (+ (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_91) ?x44753) ?x44756) ?x44759) ?x44775)))
 (= (+ (+ (+ ?x48498 ?x44777) ?x44779) ?x44781) 0.0)))))))))))))))))
(assert
 (let ((?x47057 (* l_0_16_77 l_0_16_77)))
 (let ((?x47055 (* l_0_16_76 l_0_16_76)))
 (let ((?x47053 (* l_0_16_75 l_0_16_75)))
 (let ((?x47051 (* l_0_16_74 l_0_16_74)))
 (let ((?x47049 (* l_0_16_73 l_0_16_73)))
 (let ((?x47047 (* l_0_16_72 l_0_16_72)))
 (let ((?x47045 (* l_0_16_105 l_0_16_105)))
 (let ((?x47043 (* l_0_16_104 l_0_16_104)))
 (let ((?x47041 (* l_0_16_103 l_0_16_103)))
 (let ((?x47039 (* l_0_16_102 l_0_16_102)))
 (let ((?x48505 (- (- (* (- l_0_16_100) l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x47039)))
 (let ((?x48512 (+ (+ (+ (+ (- (- (- ?x48505 ?x47041) ?x47043) ?x47045) ?x47047) ?x47049) ?x47051) ?x47053)))
 (= (+ (+ ?x48512 ?x47055) ?x47057) 0.0))))))))))))))
(assert
 (let ((?x47102 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x47099 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x47096 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x47093 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x47090 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x47087 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x47084 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x46937 (* 2.0 l_0_16_104)))
 (let ((?x47081 (* ?x46937 l_0_16_110)))
 (let ((?x44758 (* 2.0 l_0_16_103)))
 (let ((?x47079 (* ?x44758 l_0_16_109)))
 (let ((?x44755 (* 2.0 l_0_16_102)))
 (let ((?x47077 (* ?x44755 l_0_16_108)))
 (let ((?x44752 (* 2.0 l_0_16_101)))
 (let ((?x47075 (* ?x44752 l_0_16_107)))
 (let ((?x48528 (- (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_106) ?x47075) ?x47077) ?x47079) ?x47081)))
 (let ((?x48535 (+ (+ (+ (+ (+ (+ (- ?x48528 ?x47084) ?x47087) ?x47090) ?x47093) ?x47096) ?x47099) ?x47102)))
 (= ?x48535 0.0)))))))))))))))))))
(assert
 (let ((?x47151 (* l_0_16_84 l_0_16_84)))
 (let ((?x47149 (* l_0_16_83 l_0_16_83)))
 (let ((?x47147 (* l_0_16_82 l_0_16_82)))
 (let ((?x47145 (* l_0_16_81 l_0_16_81)))
 (let ((?x47143 (* l_0_16_80 l_0_16_80)))
 (let ((?x47141 (* l_0_16_79 l_0_16_79)))
 (let ((?x47139 (* l_0_16_78 l_0_16_78)))
 (let ((?x47137 (* l_0_16_112 l_0_16_112)))
 (let ((?x47135 (* l_0_16_111 l_0_16_111)))
 (let ((?x47133 (* l_0_16_110 l_0_16_110)))
 (let ((?x47131 (* l_0_16_109 l_0_16_109)))
 (let ((?x47129 (* l_0_16_108 l_0_16_108)))
 (let ((?x14571 (- (- (* (- l_0_16_106) l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47129)))
 (let ((?x48548 (+ (+ (+ (- (- (- (- ?x14571 ?x47131) ?x47133) ?x47135) ?x47137) ?x47139) ?x47141) ?x47143)))
 (= (+ (+ (+ (+ ?x48548 ?x47145) ?x47147) ?x47149) ?x47151) 0.0))))))))))))))))
(assert
 (let ((?x48567 (* l_0_16_281 l_0_16_281)))
 (let ((?x48565 (* l_0_16_253 l_0_16_253)))
 (let ((?x48566 (- (- (* (- l_0_16_197) l_0_16_197) (* l_0_16_225 l_0_16_225)) ?x48565)))
 (= (- ?x48566 ?x48567) 0.0)))))
(assert
 (let ((?x48586 (- (* (* (- 2.0) l_0_16_197) l_0_16_198) (* (* 2.0 l_0_16_225) l_0_16_226))))
 (let ((?x48590 (- (- ?x48586 (* (* 2.0 l_0_16_253) l_0_16_254)) (* (* 2.0 l_0_16_281) l_0_16_282))))
 (= ?x48590 0.0))))
(assert
 (let ((?x48611 (- (* (* (- 2.0) l_0_16_197) l_0_16_203) (* (* 2.0 l_0_16_225) l_0_16_231))))
 (let ((?x48615 (- (- ?x48611 (* (* 2.0 l_0_16_253) l_0_16_259)) (* (* 2.0 l_0_16_281) l_0_16_287))))
 (= ?x48615 0.0))))
(assert
 (let ((?x48635 (- (* (* (- 2.0) l_0_16_197) l_0_16_218) (* (* 2.0 l_0_16_225) l_0_16_246))))
 (let ((?x48639 (- (- ?x48635 (* (* 2.0 l_0_16_253) l_0_16_274)) (* (* 2.0 l_0_16_281) l_0_16_302))))
 (= ?x48639 0.0))))
(assert
 (let ((?x48672 (* l_0_16_283 l_0_16_283)))
 (let ((?x48670 (* l_0_16_282 l_0_16_282)))
 (let ((?x48668 (* l_0_16_255 l_0_16_255)))
 (let ((?x48666 (* l_0_16_254 l_0_16_254)))
 (let ((?x48664 (* l_0_16_227 l_0_16_227)))
 (let ((?x48662 (* l_0_16_226 l_0_16_226)))
 (let ((?x48663 (- (- (* (- l_0_16_198) l_0_16_198) (* l_0_16_199 l_0_16_199)) ?x48662)))
 (= (- (- (- (- (- ?x48663 ?x48664) ?x48666) ?x48668) ?x48670) ?x48672) 0.0)))))))))
(assert
 (let ((?x48694 (- (* (* (- 2.0) l_0_16_198) l_0_16_203) (* (* 2.0 l_0_16_199) l_0_16_204))))
 (let ((?x48698 (- (- ?x48694 (* (* 2.0 l_0_16_226) l_0_16_231)) (* (* 2.0 l_0_16_227) l_0_16_232))))
 (let ((?x48702 (- (- ?x48698 (* (* 2.0 l_0_16_254) l_0_16_259)) (* (* 2.0 l_0_16_255) l_0_16_260))))
 (let ((?x48706 (- (- ?x48702 (* (* 2.0 l_0_16_282) l_0_16_287)) (* (* 2.0 l_0_16_283) l_0_16_288))))
 (= ?x48706 0.0))))))
(assert
 (let ((?x48767 (* l_0_16_290 l_0_16_290)))
 (let ((?x48765 (* l_0_16_289 l_0_16_289)))
 (let ((?x48763 (* l_0_16_288 l_0_16_288)))
 (let ((?x48761 (* l_0_16_287 l_0_16_287)))
 (let ((?x48759 (* l_0_16_262 l_0_16_262)))
 (let ((?x48757 (* l_0_16_261 l_0_16_261)))
 (let ((?x48755 (* l_0_16_260 l_0_16_260)))
 (let ((?x48753 (* l_0_16_259 l_0_16_259)))
 (let ((?x48751 (* l_0_16_234 l_0_16_234)))
 (let ((?x48749 (* l_0_16_233 l_0_16_233)))
 (let ((?x48747 (* l_0_16_232 l_0_16_232)))
 (let ((?x48745 (* l_0_16_231 l_0_16_231)))
 (let ((?x48743 (* l_0_16_206 l_0_16_206)))
 (let ((?x48741 (* l_0_16_205 l_0_16_205)))
 (let ((?x48742 (- (- (* (- l_0_16_203) l_0_16_203) (* l_0_16_204 l_0_16_204)) ?x48741)))
 (let ((?x48756 (- (- (- (- (- (- (- ?x48742 ?x48743) ?x48745) ?x48747) ?x48749) ?x48751) ?x48753) ?x48755)))
 (= (- (- (- (- (- (- ?x48756 ?x48757) ?x48759) ?x48761) ?x48763) ?x48765) ?x48767) 0.0))))))))))))))))))
(assert
 (let ((?x48856 (* l_0_16_308 l_0_16_308)))
 (let ((?x48854 (* l_0_16_307 l_0_16_307)))
 (let ((?x48852 (* l_0_16_306 l_0_16_306)))
 (let ((?x48850 (* l_0_16_305 l_0_16_305)))
 (let ((?x48848 (* l_0_16_304 l_0_16_304)))
 (let ((?x48846 (* l_0_16_303 l_0_16_303)))
 (let ((?x48844 (* l_0_16_302 l_0_16_302)))
 (let ((?x48842 (* l_0_16_280 l_0_16_280)))
 (let ((?x48840 (* l_0_16_279 l_0_16_279)))
 (let ((?x48838 (* l_0_16_278 l_0_16_278)))
 (let ((?x48836 (* l_0_16_277 l_0_16_277)))
 (let ((?x48834 (* l_0_16_276 l_0_16_276)))
 (let ((?x48832 (* l_0_16_275 l_0_16_275)))
 (let ((?x48830 (* l_0_16_274 l_0_16_274)))
 (let ((?x48828 (* l_0_16_252 l_0_16_252)))
 (let ((?x48826 (* l_0_16_251 l_0_16_251)))
 (let ((?x48824 (* l_0_16_250 l_0_16_250)))
 (let ((?x48822 (* l_0_16_249 l_0_16_249)))
 (let ((?x48820 (* l_0_16_248 l_0_16_248)))
 (let ((?x48818 (* l_0_16_247 l_0_16_247)))
 (let ((?x48816 (* l_0_16_246 l_0_16_246)))
 (let ((?x48814 (* l_0_16_224 l_0_16_224)))
 (let ((?x48812 (* l_0_16_223 l_0_16_223)))
 (let ((?x48810 (* l_0_16_222 l_0_16_222)))
 (let ((?x48808 (* l_0_16_221 l_0_16_221)))
 (let ((?x48806 (* l_0_16_220 l_0_16_220)))
 (let ((?x48807 (- (- (* (- l_0_16_218) l_0_16_218) (* l_0_16_219 l_0_16_219)) ?x48806)))
 (let ((?x48821 (- (- (- (- (- (- (- ?x48807 ?x48808) ?x48810) ?x48812) ?x48814) ?x48816) ?x48818) ?x48820)))
 (let ((?x48835 (- (- (- (- (- (- (- ?x48821 ?x48822) ?x48824) ?x48826) ?x48828) ?x48830) ?x48832) ?x48834)))
 (let ((?x48849 (- (- (- (- (- (- (- ?x48835 ?x48836) ?x48838) ?x48840) ?x48842) ?x48844) ?x48846) ?x48848)))
 (= (- (- (- (- ?x48849 ?x48850) ?x48852) ?x48854) ?x48856) 0.0))))))))))))))))))))))))))))))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_28 0.0))
(assert
 (>= l_0_16_29 0.0))
(assert
 (>= l_0_16_31 0.0))
(assert
 (>= l_0_16_34 0.0))
(assert
 (>= l_0_16_38 0.0))
(assert
 (>= l_0_16_43 0.0))
(assert
 (>= l_0_16_49 0.0))
(assert
 (>= l_0_16_56 0.0))
(assert
 (>= l_0_16_57 0.0))
(assert
 (>= l_0_16_59 0.0))
(assert
 (>= l_0_16_62 0.0))
(assert
 (>= l_0_16_66 0.0))
(assert
 (>= l_0_16_71 0.0))
(assert
 (>= l_0_16_77 0.0))
(assert
 (>= l_0_16_84 0.0))
(assert
 (>= l_0_16_85 0.0))
(assert
 (>= l_0_16_87 0.0))
(assert
 (>= l_0_16_90 0.0))
(assert
 (>= l_0_16_94 0.0))
(assert
 (>= l_0_16_99 0.0))
(assert
 (>= l_0_16_105 0.0))
(assert
 (>= l_0_16_112 0.0))
(assert
 (>= l_0_16_113 0.0))
(assert
 (>= l_0_16_115 0.0))
(assert
 (>= l_0_16_118 0.0))
(assert
 (>= l_0_16_122 0.0))
(assert
 (>= l_0_16_127 0.0))
(assert
 (>= l_0_16_133 0.0))
(assert
 (>= l_0_16_140 0.0))
(assert
 (>= l_0_16_141 0.0))
(assert
 (>= l_0_16_143 0.0))
(assert
 (>= l_0_16_146 0.0))
(assert
 (>= l_0_16_150 0.0))
(assert
 (>= l_0_16_155 0.0))
(assert
 (>= l_0_16_161 0.0))
(assert
 (>= l_0_16_168 0.0))
(assert
 (>= l_0_16_169 0.0))
(assert
 (>= l_0_16_171 0.0))
(assert
 (>= l_0_16_174 0.0))
(assert
 (>= l_0_16_178 0.0))
(assert
 (>= l_0_16_183 0.0))
(assert
 (>= l_0_16_189 0.0))
(assert
 (>= l_0_16_196 0.0))
(assert
 (>= l_0_16_197 0.0))
(assert
 (>= l_0_16_199 0.0))
(assert
 (>= l_0_16_202 0.0))
(assert
 (>= l_0_16_206 0.0))
(assert
 (>= l_0_16_211 0.0))
(assert
 (>= l_0_16_217 0.0))
(assert
 (>= l_0_16_224 0.0))
(assert
 (>= l_0_16_225 0.0))
(assert
 (>= l_0_16_227 0.0))
(assert
 (>= l_0_16_230 0.0))
(assert
 (>= l_0_16_234 0.0))
(assert
 (>= l_0_16_239 0.0))
(assert
 (>= l_0_16_245 0.0))
(assert
 (>= l_0_16_252 0.0))
(assert
 (>= l_0_16_253 0.0))
(assert
 (>= l_0_16_255 0.0))
(assert
 (>= l_0_16_258 0.0))
(assert
 (>= l_0_16_262 0.0))
(assert
 (>= l_0_16_267 0.0))
(assert
 (>= l_0_16_273 0.0))
(assert
 (>= l_0_16_280 0.0))
(assert
 (>= l_0_16_281 0.0))
(assert
 (>= l_0_16_283 0.0))
(assert
 (>= l_0_16_286 0.0))
(assert
 (>= l_0_16_290 0.0))
(assert
 (>= l_0_16_295 0.0))
(assert
 (>= l_0_16_301 0.0))
(assert
 (>= l_0_16_308 0.0))
(assert
 (let ((?x48976 (* l_0_17_85 l_0_17_85)))
 (let ((?x48974 (* l_0_17_57 l_0_17_57)))
 (let ((?x48957 (* l_0_17_169 l_0_17_169)))
 (let ((?x48958 (- (- (* (- l_0_17_113) l_0_17_113) (* l_0_17_141 l_0_17_141)) ?x48957)))
 (let ((?x48964 (- (- ?x48958 (* (* 2.0 l_0_17_197) l_0_17_207)) (* (* 2.0 l_0_17_225) l_0_17_235))))
 (let ((?x48970 (- (- ?x48964 (* (* 2.0 l_0_17_253) l_0_17_263)) (* (* 2.0 l_0_17_281) l_0_17_291))))
 (let ((?x48978 (+ (+ (- (- ?x48970 (* (* 2.0 l_0_17_309) l_0_17_319)) ?x48974) ?x48976) 1.0)))
 (= ?x48978 0.0)))))))))
(assert
 (let ((?x49016 (* l_0_17_309 l_0_17_309)))
 (let ((?x49014 (* l_0_17_281 l_0_17_281)))
 (let ((?x49012 (* l_0_17_253 l_0_17_253)))
 (let ((?x49013 (- (- (* (- l_0_17_197) l_0_17_197) (* l_0_17_225 l_0_17_225)) ?x49012)))
 (= (- (- ?x49013 ?x49014) ?x49016) 0.0))))))
(assert
 (let ((?x49079 (* l_0_17_29 l_0_17_29)))
 (let ((?x49036 (- (+ (* (- l_0_17_1) l_0_17_1) (* l_0_17_141 l_0_17_141)) (* (* 2.0 l_0_17_203) l_0_17_218))))
 (let ((?x49042 (- (- ?x49036 (* (* 2.0 l_0_17_204) l_0_17_219)) (* (* 2.0 l_0_17_205) l_0_17_220))))
 (let ((?x49048 (- (- ?x49042 (* (* 2.0 l_0_17_206) l_0_17_221)) (* (* 2.0 l_0_17_231) l_0_17_246))))
 (let ((?x49054 (- (- ?x49048 (* (* 2.0 l_0_17_232) l_0_17_247)) (* (* 2.0 l_0_17_233) l_0_17_248))))
 (let ((?x49060 (- (- ?x49054 (* (* 2.0 l_0_17_234) l_0_17_249)) (* (* 2.0 l_0_17_259) l_0_17_274))))
 (let ((?x49066 (- (- ?x49060 (* (* 2.0 l_0_17_260) l_0_17_275)) (* (* 2.0 l_0_17_261) l_0_17_276))))
 (let ((?x49072 (- (- ?x49066 (* (* 2.0 l_0_17_262) l_0_17_277)) (* (* 2.0 l_0_17_287) l_0_17_302))))
 (let ((?x49078 (- (- ?x49072 (* (* 2.0 l_0_17_288) l_0_17_303)) (* (* 2.0 l_0_17_289) l_0_17_304))))
 (let ((?x49086 (- (- (+ ?x49078 ?x49079) (* (* 2.0 l_0_17_290) l_0_17_305)) (* (* 2.0 l_0_17_315) l_0_17_330))))
 (let ((?x49092 (- (- ?x49086 (* (* 2.0 l_0_17_316) l_0_17_331)) (* (* 2.0 l_0_17_317) l_0_17_332))))
 (= (- ?x49092 (* (* 2.0 l_0_17_318) l_0_17_333)) 0.0)))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x49149 (* ?x49148 l_0_17_91)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x49146 (* ?x49145 l_0_17_63)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49143 (* ?x49142 l_0_17_30)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49140 (* ?x49139 l_0_17_142)))
 (let ((?x49150 (+ (- (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_2) ?x49140) ?x49143) ?x49146) ?x49149)))
 (= ?x49150 0.0)))))))))))
(assert
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x49195 (* ?x49194 l_0_17_53)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x49192 (* ?x49191 l_0_17_52)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x49189 (* ?x49188 l_0_17_51)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x49186 (* ?x49185 l_0_17_50)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49183 (* ?x49142 l_0_17_32)))
 (let ((?x49180 (* 2.0 l_0_17_24)))
 (let ((?x49181 (* ?x49180 l_0_17_9)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49178 (* ?x49177 l_0_17_8)))
 (let ((?x49174 (* 2.0 l_0_17_22)))
 (let ((?x49175 (* ?x49174 l_0_17_7)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x39095 (* ?x49139 l_0_17_144)))
 (let ((?x39088 (+ (* (* (- 2.0) l_0_17_1) l_0_17_4) (* (* 2.0 l_0_17_10) l_0_17_25))))
 (let ((?x49167 (+ (+ (+ ?x39088 ?x39095) (* (* 4.0 l_0_17_175) l_0_17_190)) (* (* 4.0 l_0_17_176) l_0_17_191))))
 (let ((?x49173 (+ (+ ?x49167 (* (* 4.0 l_0_17_177) l_0_17_192)) (* (* 4.0 l_0_17_178) l_0_17_193))))
 (let ((?x49193 (- (- (- (+ (+ (+ (+ ?x49173 ?x49175) ?x49178) ?x49181) ?x49183) ?x49186) ?x49189) ?x49192)))
 (= (- ?x49193 ?x49195) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49243 (* ?x49142 l_0_17_35)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49241 (* ?x49139 l_0_17_147)))
 (= (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_7) ?x49241) ?x49243) 0.0))))))
(assert
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49317 (* ?x49316 l_0_17_81)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49314 (* ?x49313 l_0_17_80)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49311 (* ?x49310 l_0_17_79)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49308 (* ?x49307 l_0_17_78)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49305 (* ?x49142 l_0_17_39)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x49291 (* ?x49290 l_0_17_165)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x49288 (* ?x49287 l_0_17_164)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x49285 (* ?x49284 l_0_17_163)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x49282 (* ?x49281 l_0_17_162)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49279 (* ?x49139 l_0_17_151)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x49265 (* ?x49264 l_0_17_94)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x49262 (* ?x49261 l_0_17_93)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x49259 (* ?x49258 l_0_17_92)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x49251 (* ?x49249 l_0_17_91)))
 (let ((?x49266 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_11) ?x49251) ?x49259) ?x49262) ?x49265)))
 (let ((?x49272 (- (- ?x49266 (* (* 2.0 l_0_17_119) l_0_17_134)) (* (* 2.0 l_0_17_120) l_0_17_135))))
 (let ((?x49278 (- (- ?x49272 (* (* 2.0 l_0_17_121) l_0_17_136)) (* (* 2.0 l_0_17_122) l_0_17_137))))
 (let ((?x49295 (- (- (- (- (- (+ ?x49278 ?x49279) ?x49282) ?x49285) ?x49288) ?x49291) (* (* 2.0 l_0_17_175) l_0_17_190))))
 (let ((?x49301 (- (- ?x49295 (* (* 2.0 l_0_17_176) l_0_17_191)) (* (* 2.0 l_0_17_177) l_0_17_192))))
 (let ((?x49312 (- (- (+ (- ?x49301 (* (* 2.0 l_0_17_178) l_0_17_193)) ?x49305) ?x49308) ?x49311)))
 (= (- (- ?x49312 ?x49314) ?x49317) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49317 (* ?x49316 l_0_17_81)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49314 (* ?x49313 l_0_17_80)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49311 (* ?x49310 l_0_17_79)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49308 (* ?x49307 l_0_17_78)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49390 (* ?x49142 l_0_17_44)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49388 (* ?x49139 l_0_17_156)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x49265 (* ?x49264 l_0_17_94)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x49262 (* ?x49261 l_0_17_93)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x49259 (* ?x49258 l_0_17_92)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x49251 (* ?x49249 l_0_17_91)))
 (let ((?x49387 (- (- (- (- (* (* (- 2.0) l_0_17_1) l_0_17_16) ?x49251) ?x49259) ?x49262) ?x49265)))
 (= (+ (+ (+ (+ (+ (+ ?x49387 ?x49388) ?x49390) ?x49308) ?x49311) ?x49314) ?x49317) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49400 (* ?x49142 l_0_17_50)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x39221 (* ?x49139 l_0_17_162)))
 (= (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_22) ?x39221) ?x49400) 0.0))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x49432 (* ?x49431 l_0_17_92)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x49429 (* ?x49428 l_0_17_91)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x49426 (* ?x49425 l_0_17_64)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x49423 (* ?x49422 l_0_17_63)))
 (let ((?x49420 (* l_0_17_31 l_0_17_31)))
 (let ((?x49418 (* l_0_17_30 l_0_17_30)))
 (let ((?x49416 (* l_0_17_3 l_0_17_3)))
 (let ((?x49409 (* l_0_17_2 l_0_17_2)))
 (let ((?x49415 (- (+ (* l_0_17_142 l_0_17_142) (* l_0_17_143 l_0_17_143)) ?x49409)))
 (let ((?x49433 (+ (+ (- (- (+ (+ (- ?x49415 ?x49416) ?x49418) ?x49420) ?x49423) ?x49426) ?x49429) ?x49432)))
 (= ?x49433 0.0))))))))))))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x49488 (* ?x49487 l_0_17_93)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x49485 (* ?x49484 l_0_17_92)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x49482 (* ?x49481 l_0_17_91)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x49479 (* ?x49478 l_0_17_65)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x49476 (* ?x49475 l_0_17_64)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x49473 (* ?x49472 l_0_17_63)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49470 (* ?x49469 l_0_17_33)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49467 (* ?x49466 l_0_17_32)))
 (let ((?x49463 (* 2.0 l_0_17_3)))
 (let ((?x49464 (* ?x49463 l_0_17_5)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49461 (* ?x49460 l_0_17_4)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49458 (* ?x49457 l_0_17_145)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49456 (* ?x49455 l_0_17_144)))
 (let ((?x49477 (- (- (+ (+ (- (- (+ ?x49456 ?x49458) ?x49461) ?x49464) ?x49467) ?x49470) ?x49473) ?x49476)))
 (= (+ (+ (+ (- ?x49477 ?x49479) ?x49482) ?x49485) ?x49488) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49548 (* l_0_17_94 l_0_17_94)))
 (let ((?x49546 (* l_0_17_93 l_0_17_93)))
 (let ((?x49544 (* l_0_17_92 l_0_17_92)))
 (let ((?x49542 (* l_0_17_91 l_0_17_91)))
 (let ((?x49540 (* l_0_17_66 l_0_17_66)))
 (let ((?x49538 (* l_0_17_65 l_0_17_65)))
 (let ((?x49536 (* l_0_17_64 l_0_17_64)))
 (let ((?x49534 (* l_0_17_63 l_0_17_63)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49532 (* ?x49469 l_0_17_36)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49530 (* ?x49466 l_0_17_35)))
 (let ((?x49463 (* 2.0 l_0_17_3)))
 (let ((?x49528 (* ?x49463 l_0_17_8)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49517 (* ?x49460 l_0_17_7)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49514 (* ?x49457 l_0_17_148)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49512 (* ?x49455 l_0_17_147)))
 (let ((?x49537 (- (- (+ (+ (- (- (+ ?x49512 ?x49514) ?x49517) ?x49528) ?x49530) ?x49532) ?x49534) ?x49536)))
 (= (+ (+ (+ (+ (- (- ?x49537 ?x49538) ?x49540) ?x49542) ?x49544) ?x49546) ?x49548) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49600 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49597 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49594 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49591 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49588 (* ?x49316 l_0_17_70)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49586 (* ?x49313 l_0_17_69)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49584 (* ?x49310 l_0_17_68)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49582 (* ?x49307 l_0_17_67)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49580 (* ?x49469 l_0_17_40)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49578 (* ?x49466 l_0_17_39)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49576 (* ?x49457 l_0_17_152)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49574 (* ?x49455 l_0_17_151)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x49572 (* ?x49571 l_0_17_3)))
 (let ((?x49579 (+ (+ (+ (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x49572) ?x49574) ?x49576) ?x49578)))
 (let ((?x49595 (+ (+ (- (- (- (- (+ ?x49579 ?x49580) ?x49582) ?x49584) ?x49586) ?x49588) ?x49591) ?x49594)))
 (= (+ (+ ?x49595 ?x49597) ?x49600) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49675 (* ?x49316 l_0_17_75)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49673 (* ?x49313 l_0_17_74)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49671 (* ?x49310 l_0_17_73)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49669 (* ?x49307 l_0_17_72)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49667 (* ?x49469 l_0_17_45)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49665 (* ?x49466 l_0_17_44)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x49663 (* ?x49662 l_0_17_3)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x49660 (* ?x49659 l_0_17_2)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49657 (* ?x49457 l_0_17_157)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49655 (* ?x49455 l_0_17_156)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x49653 (* ?x49652 l_0_17_94)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x49650 (* ?x49649 l_0_17_93)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x49636 (* ?x49634 l_0_17_92)))
 (let ((?x49654 (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_91) ?x49636) ?x49650) ?x49653)))
 (let ((?x49670 (- (+ (+ (- (- (+ (+ ?x49654 ?x49655) ?x49657) ?x49660) ?x49663) ?x49665) ?x49667) ?x49669)))
 (= (- (- (- ?x49670 ?x49671) ?x49673) ?x49675) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49317 (* ?x49316 l_0_17_81)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49314 (* ?x49313 l_0_17_80)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49311 (* ?x49310 l_0_17_79)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49308 (* ?x49307 l_0_17_78)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49729 (* ?x49469 l_0_17_51)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49727 (* ?x49466 l_0_17_50)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49725 (* ?x49177 l_0_17_3)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49723 (* ?x49460 l_0_17_22)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49721 (* ?x49457 l_0_17_163)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49719 (* ?x49455 l_0_17_162)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x49265 (* ?x49264 l_0_17_94)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x49262 (* ?x49261 l_0_17_93)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x49259 (* ?x49258 l_0_17_92)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x49251 (* ?x49249 l_0_17_91)))
 (let ((?x49726 (- (- (+ (+ (+ (+ (+ ?x49251 ?x49259) ?x49262) ?x49265) ?x49719) ?x49721) ?x49723) ?x49725)))
 (= (- (- (- (- (+ (+ ?x49726 ?x49727) ?x49729) ?x49308) ?x49311) ?x49314) ?x49317) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49777 (* l_0_17_6 l_0_17_6)))
 (let ((?x49775 (* l_0_17_5 l_0_17_5)))
 (let ((?x49773 (* l_0_17_4 l_0_17_4)))
 (let ((?x49771 (* l_0_17_34 l_0_17_34)))
 (let ((?x49769 (* l_0_17_33 l_0_17_33)))
 (let ((?x49767 (* l_0_17_32 l_0_17_32)))
 (let ((?x49765 (* l_0_17_146 l_0_17_146)))
 (let ((?x49766 (+ (+ (* l_0_17_144 l_0_17_144) (* l_0_17_145 l_0_17_145)) ?x49765)))
 (= (- (- (- (+ (+ (+ ?x49766 ?x49767) ?x49769) ?x49771) ?x49773) ?x49775) ?x49777) 0.0))))))))))
(assert
 (let ((?x49811 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x49808 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x49805 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49802 (* ?x49801 l_0_17_37)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49799 (* ?x49798 l_0_17_36)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49796 (* ?x49795 l_0_17_35)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49793 (* ?x49792 l_0_17_149)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49790 (* ?x49789 l_0_17_148)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49788 (* ?x49787 l_0_17_147)))
 (let ((?x49809 (- (- (+ (+ (+ (+ (+ ?x49788 ?x49790) ?x49793) ?x49796) ?x49799) ?x49802) ?x49805) ?x49808)))
 (= (- ?x49809 ?x49811) 0.0))))))))))))))))))
(assert
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49848 (* ?x49801 l_0_17_41)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49846 (* ?x49798 l_0_17_40)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49844 (* ?x49795 l_0_17_39)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49842 (* ?x49792 l_0_17_153)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49840 (* ?x49789 l_0_17_152)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49838 (* ?x49787 l_0_17_151)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x49836 (* ?x49835 l_0_17_6)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x17907 (* ?x49571 l_0_17_5)))
 (let ((?x49841 (+ (+ (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x17907) ?x49836) ?x49838) ?x49840)))
 (= (+ (+ (+ (+ ?x49841 ?x49842) ?x49844) ?x49846) ?x49848) 0.0)))))))))))))))))))
(assert
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49881 (* ?x49801 l_0_17_46)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49879 (* ?x49798 l_0_17_45)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49877 (* ?x49795 l_0_17_44)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x49875 (* ?x49874 l_0_17_6)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x49872 (* ?x49662 l_0_17_5)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x49870 (* ?x49659 l_0_17_4)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49868 (* ?x49792 l_0_17_158)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49866 (* ?x49789 l_0_17_157)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49865 (* ?x49787 l_0_17_156)))
 (let ((?x49880 (+ (+ (- (- (- (+ (+ ?x49865 ?x49866) ?x49868) ?x49870) ?x49872) ?x49875) ?x49877) ?x49879)))
 (= (+ ?x49880 ?x49881) 0.0)))))))))))))))))))))
(assert
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49910 (* ?x49801 l_0_17_52)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49908 (* ?x49798 l_0_17_51)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49906 (* ?x49795 l_0_17_50)))
 (let ((?x49180 (* 2.0 l_0_17_24)))
 (let ((?x49904 (* ?x49180 l_0_17_6)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49902 (* ?x49177 l_0_17_5)))
 (let ((?x49174 (* 2.0 l_0_17_22)))
 (let ((?x17779 (* ?x49174 l_0_17_4)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x39476 (* ?x49792 l_0_17_164)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x17949 (* ?x49789 l_0_17_163)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x39471 (* ?x49787 l_0_17_162)))
 (let ((?x49909 (+ (+ (- (- (- (+ (+ ?x39471 ?x17949) ?x39476) ?x17779) ?x49902) ?x49904) ?x49906) ?x49908)))
 (= (+ ?x49909 ?x49910) 0.0)))))))))))))))))))))
(assert
 (let ((?x49962 (* l_0_17_9 l_0_17_9)))
 (let ((?x49960 (* l_0_17_8 l_0_17_8)))
 (let ((?x49958 (* l_0_17_7 l_0_17_7)))
 (let ((?x49956 (* l_0_17_38 l_0_17_38)))
 (let ((?x49954 (* l_0_17_37 l_0_17_37)))
 (let ((?x49952 (* l_0_17_36 l_0_17_36)))
 (let ((?x49950 (* l_0_17_35 l_0_17_35)))
 (let ((?x49948 (* l_0_17_150 l_0_17_150)))
 (let ((?x49946 (* l_0_17_149 l_0_17_149)))
 (let ((?x49944 (* l_0_17_148 l_0_17_148)))
 (let ((?x49945 (+ (+ (* (- l_0_17_10) l_0_17_10) (* l_0_17_147 l_0_17_147)) ?x49944)))
 (let ((?x49959 (- (+ (+ (+ (+ (+ (+ ?x49945 ?x49946) ?x49948) ?x49950) ?x49952) ?x49954) ?x49956) ?x49958)))
 (= (- (- ?x49959 ?x49960) ?x49962) 0.0))))))))))))))
(assert
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x49999 (* ?x49194 l_0_17_42)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x49997 (* ?x49191 l_0_17_41)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x49995 (* ?x49188 l_0_17_40)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x49993 (* ?x49185 l_0_17_39)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x49991 (* ?x49290 l_0_17_154)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x49989 (* ?x49287 l_0_17_153)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x49987 (* ?x49284 l_0_17_152)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x49985 (* ?x49281 l_0_17_151)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x49983 (* ?x49835 l_0_17_9)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x49981 (* ?x49571 l_0_17_8)))
 (let ((?x49978 (* 2.0 l_0_17_11)))
 (let ((?x49979 (* ?x49978 l_0_17_7)))
 (let ((?x49986 (+ (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x49979) ?x49981) ?x49983) ?x49985)))
 (let ((?x50000 (+ (+ (+ (+ (+ (+ (+ ?x49986 ?x49987) ?x49989) ?x49991) ?x49993) ?x49995) ?x49997) ?x49999)))
 (= ?x50000 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x50036 (* ?x49194 l_0_17_47)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x50034 (* ?x49191 l_0_17_46)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x50032 (* ?x49188 l_0_17_45)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x50030 (* ?x49185 l_0_17_44)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x50028 (* ?x49874 l_0_17_9)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x50026 (* ?x49662 l_0_17_8)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x50024 (* ?x49659 l_0_17_7)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x50022 (* ?x49290 l_0_17_159)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x50020 (* ?x49287 l_0_17_158)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x50018 (* ?x49284 l_0_17_157)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x50016 (* ?x49281 l_0_17_156)))
 (let ((?x50023 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_10) l_0_17_19) ?x50016) ?x50018) ?x50020) ?x50022)))
 (let ((?x50037 (+ (+ (+ (+ (- (- (- ?x50023 ?x50024) ?x50026) ?x50028) ?x50030) ?x50032) ?x50034) ?x50036)))
 (= ?x50037 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x49195 (* ?x49194 l_0_17_53)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x49192 (* ?x49191 l_0_17_52)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x49189 (* ?x49188 l_0_17_51)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x49186 (* ?x49185 l_0_17_50)))
 (let ((?x49180 (* 2.0 l_0_17_24)))
 (let ((?x49181 (* ?x49180 l_0_17_9)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49178 (* ?x49177 l_0_17_8)))
 (let ((?x49174 (* 2.0 l_0_17_22)))
 (let ((?x49175 (* ?x49174 l_0_17_7)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x49291 (* ?x49290 l_0_17_165)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x49288 (* ?x49287 l_0_17_164)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x49285 (* ?x49284 l_0_17_163)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x49282 (* ?x49281 l_0_17_162)))
 (let ((?x50071 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_10) l_0_17_25) ?x49282) ?x49285) ?x49288) ?x49291)))
 (let ((?x50078 (+ (+ (+ (+ (- (- (- ?x50071 ?x49175) ?x49178) ?x49181) ?x49186) ?x49189) ?x49192) ?x49195)))
 (= ?x50078 0.0))))))))))))))))))))))))))
(assert
 (let ((?x50103 (* l_0_17_43 l_0_17_43)))
 (let ((?x50101 (* l_0_17_42 l_0_17_42)))
 (let ((?x50099 (* l_0_17_41 l_0_17_41)))
 (let ((?x50097 (* l_0_17_40 l_0_17_40)))
 (let ((?x50095 (* l_0_17_39 l_0_17_39)))
 (let ((?x50093 (* l_0_17_155 l_0_17_155)))
 (let ((?x50091 (* l_0_17_154 l_0_17_154)))
 (let ((?x50089 (* l_0_17_153 l_0_17_153)))
 (let ((?x50087 (* l_0_17_152 l_0_17_152)))
 (let ((?x50085 (* l_0_17_151 l_0_17_151)))
 (let ((?x39623 (* l_0_17_15 l_0_17_15)))
 (let ((?x18294 (* l_0_17_14 l_0_17_14)))
 (let ((?x39625 (* l_0_17_13 l_0_17_13)))
 (let ((?x39626 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x39625)))
 (let ((?x50094 (+ (+ (+ (+ (+ (- (- ?x39626 ?x18294) ?x39623) ?x50085) ?x50087) ?x50089) ?x50091) ?x50093)))
 (= (+ (+ (+ (+ (+ ?x50094 ?x50095) ?x50097) ?x50099) ?x50101) ?x50103) 0.0)))))))))))))))))
(assert
 (let ((?x50162 (* 2.0 l_0_17_43)))
 (let ((?x50163 (* ?x50162 l_0_17_48)))
 (let ((?x50159 (* 2.0 l_0_17_42)))
 (let ((?x50160 (* ?x50159 l_0_17_47)))
 (let ((?x50156 (* 2.0 l_0_17_41)))
 (let ((?x50157 (* ?x50156 l_0_17_46)))
 (let ((?x50153 (* 2.0 l_0_17_40)))
 (let ((?x50154 (* ?x50153 l_0_17_45)))
 (let ((?x50150 (* 2.0 l_0_17_39)))
 (let ((?x50151 (* ?x50150 l_0_17_44)))
 (let ((?x50147 (* 2.0 l_0_17_155)))
 (let ((?x50148 (* ?x50147 l_0_17_160)))
 (let ((?x50144 (* 2.0 l_0_17_154)))
 (let ((?x50145 (* ?x50144 l_0_17_159)))
 (let ((?x50141 (* 2.0 l_0_17_153)))
 (let ((?x50142 (* ?x50141 l_0_17_158)))
 (let ((?x50138 (* 2.0 l_0_17_152)))
 (let ((?x50139 (* ?x50138 l_0_17_157)))
 (let ((?x50135 (* 2.0 l_0_17_151)))
 (let ((?x50136 (* ?x50135 l_0_17_156)))
 (let ((?x50132 (* 2.0 l_0_17_15)))
 (let ((?x50133 (* ?x50132 l_0_17_20)))
 (let ((?x50129 (* 2.0 l_0_17_14)))
 (let ((?x50130 (* ?x50129 l_0_17_19)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x50127 (* ?x49835 l_0_17_18)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x50125 (* ?x49571 l_0_17_17)))
 (let ((?x50134 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_16) ?x50125) ?x50127) ?x50130) ?x50133)))
 (let ((?x50155 (+ (+ (+ (+ (+ (+ (+ ?x50134 ?x50136) ?x50139) ?x50142) ?x50145) ?x50148) ?x50151) ?x50154)))
 (= (+ (+ (+ ?x50155 ?x50157) ?x50160) ?x50163) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x50162 (* 2.0 l_0_17_43)))
 (let ((?x50229 (* ?x50162 l_0_17_54)))
 (let ((?x50159 (* 2.0 l_0_17_42)))
 (let ((?x50227 (* ?x50159 l_0_17_53)))
 (let ((?x50156 (* 2.0 l_0_17_41)))
 (let ((?x50225 (* ?x50156 l_0_17_52)))
 (let ((?x50153 (* 2.0 l_0_17_40)))
 (let ((?x50223 (* ?x50153 l_0_17_51)))
 (let ((?x50150 (* 2.0 l_0_17_39)))
 (let ((?x50221 (* ?x50150 l_0_17_50)))
 (let ((?x50147 (* 2.0 l_0_17_155)))
 (let ((?x50219 (* ?x50147 l_0_17_166)))
 (let ((?x50144 (* 2.0 l_0_17_154)))
 (let ((?x50217 (* ?x50144 l_0_17_165)))
 (let ((?x50141 (* 2.0 l_0_17_153)))
 (let ((?x50215 (* ?x50141 l_0_17_164)))
 (let ((?x50138 (* 2.0 l_0_17_152)))
 (let ((?x50213 (* ?x50138 l_0_17_163)))
 (let ((?x50135 (* 2.0 l_0_17_151)))
 (let ((?x50211 (* ?x50135 l_0_17_162)))
 (let ((?x50132 (* 2.0 l_0_17_15)))
 (let ((?x50209 (* ?x50132 l_0_17_26)))
 (let ((?x50129 (* 2.0 l_0_17_14)))
 (let ((?x50207 (* ?x50129 l_0_17_25)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x50205 (* ?x49835 l_0_17_24)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x50203 (* ?x49571 l_0_17_23)))
 (let ((?x50210 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_22) ?x50203) ?x50205) ?x50207) ?x50209)))
 (let ((?x50224 (+ (+ (+ (+ (+ (+ (+ ?x50210 ?x50211) ?x50213) ?x50215) ?x50217) ?x50219) ?x50221) ?x50223)))
 (= (+ (+ (+ ?x50224 ?x50225) ?x50227) ?x50229) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x50283 (* l_0_17_49 l_0_17_49)))
 (let ((?x50281 (* l_0_17_48 l_0_17_48)))
 (let ((?x50279 (* l_0_17_47 l_0_17_47)))
 (let ((?x50277 (* l_0_17_46 l_0_17_46)))
 (let ((?x50275 (* l_0_17_45 l_0_17_45)))
 (let ((?x50273 (* l_0_17_44 l_0_17_44)))
 (let ((?x50271 (* l_0_17_21 l_0_17_21)))
 (let ((?x50269 (* l_0_17_20 l_0_17_20)))
 (let ((?x50267 (* l_0_17_19 l_0_17_19)))
 (let ((?x50265 (* l_0_17_18 l_0_17_18)))
 (let ((?x50263 (* l_0_17_17 l_0_17_17)))
 (let ((?x50261 (* l_0_17_161 l_0_17_161)))
 (let ((?x50247 (* l_0_17_160 l_0_17_160)))
 (let ((?x39797 (* l_0_17_16 l_0_17_16)))
 (let ((?x39700 (* l_0_17_159 l_0_17_159)))
 (let ((?x39702 (* l_0_17_158 l_0_17_158)))
 (let ((?x39726 (+ (+ (* l_0_17_156 l_0_17_156) (* l_0_17_157 l_0_17_157)) ?x39702)))
 (let ((?x50268 (- (- (- (+ (+ (- (+ ?x39726 ?x39700) ?x39797) ?x50247) ?x50261) ?x50263) ?x50265) ?x50267)))
 (let ((?x50282 (+ (+ (+ (+ (+ (- (- ?x50268 ?x50269) ?x50271) ?x50273) ?x50275) ?x50277) ?x50279) ?x50281)))
 (= (+ ?x50282 ?x50283) 0.0)))))))))))))))))))))
(assert
 (let ((?x50350 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x50347 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x50344 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x50341 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x50338 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x50335 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x50332 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x50329 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x50326 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x50323 (* ?x49874 l_0_17_24)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x50321 (* ?x49662 l_0_17_23)))
 (let ((?x50319 (* (* 2.0 l_0_17_161) l_0_17_167)))
 (let ((?x50316 (* (* 2.0 l_0_17_160) l_0_17_166)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x50313 (* ?x49659 l_0_17_22)))
 (let ((?x50311 (* (* 2.0 l_0_17_159) l_0_17_165)))
 (let ((?x50308 (* (* 2.0 l_0_17_158) l_0_17_164)))
 (let ((?x50305 (* (* 2.0 l_0_17_157) l_0_17_163)))
 (let ((?x50303 (* (* 2.0 l_0_17_156) l_0_17_162)))
 (let ((?x50322 (- (+ (+ (- (+ (+ (+ ?x50303 ?x50305) ?x50308) ?x50311) ?x50313) ?x50316) ?x50319) ?x50321)))
 (let ((?x50342 (+ (+ (+ (- (- (- (- ?x50322 ?x50323) ?x50326) ?x50329) ?x50332) ?x50335) ?x50338) ?x50341)))
 (= (+ (+ (+ ?x50342 ?x50344) ?x50347) ?x50350) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x50432 (* l_0_17_56 l_0_17_56)))
 (let ((?x50430 (* l_0_17_55 l_0_17_55)))
 (let ((?x50428 (* l_0_17_54 l_0_17_54)))
 (let ((?x50426 (* l_0_17_53 l_0_17_53)))
 (let ((?x50424 (* l_0_17_52 l_0_17_52)))
 (let ((?x50422 (* l_0_17_51 l_0_17_51)))
 (let ((?x50420 (* l_0_17_50 l_0_17_50)))
 (let ((?x50418 (* l_0_17_28 l_0_17_28)))
 (let ((?x50416 (* l_0_17_27 l_0_17_27)))
 (let ((?x50414 (* l_0_17_26 l_0_17_26)))
 (let ((?x50412 (* l_0_17_25 l_0_17_25)))
 (let ((?x50410 (* l_0_17_24 l_0_17_24)))
 (let ((?x50408 (* l_0_17_23 l_0_17_23)))
 (let ((?x50406 (* l_0_17_22 l_0_17_22)))
 (let ((?x50404 (* l_0_17_168 l_0_17_168)))
 (let ((?x50402 (* l_0_17_167 l_0_17_167)))
 (let ((?x50400 (* l_0_17_166 l_0_17_166)))
 (let ((?x50384 (* l_0_17_165 l_0_17_165)))
 (let ((?x50380 (* l_0_17_164 l_0_17_164)))
 (let ((?x50382 (+ (+ (* l_0_17_162 l_0_17_162) (* l_0_17_163 l_0_17_163)) ?x50380)))
 (let ((?x50411 (- (- (- (+ (+ (+ (+ ?x50382 ?x50384) ?x50400) ?x50402) ?x50404) ?x50406) ?x50408) ?x50410)))
 (let ((?x50425 (+ (+ (+ (- (- (- (- ?x50411 ?x50412) ?x50414) ?x50416) ?x50418) ?x50420) ?x50422) ?x50424)))
 (= (+ (+ (+ (+ ?x50425 ?x50426) ?x50428) ?x50430) ?x50432) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49079 (* l_0_17_29 l_0_17_29)))
 (let ((?x50453 (- (+ (* l_0_17_1 l_0_17_1) (* 2.0 (* l_0_17_169 l_0_17_169))) (* (* 2.0 l_0_17_197) l_0_17_200))))
 (let ((?x50457 (- (- ?x50453 (* (* 2.0 l_0_17_225) l_0_17_228)) (* (* 2.0 l_0_17_253) l_0_17_256))))
 (let ((?x50462 (- (- (- ?x50457 (* (* 2.0 l_0_17_281) l_0_17_284)) ?x49079) (* (* 2.0 l_0_17_309) l_0_17_312))))
 (= ?x50462 0.0))))))
(assert
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49143 (* ?x49142 l_0_17_30)))
 (let ((?x39921 (+ (* (* 2.0 l_0_17_1) l_0_17_2) (* (* 4.0 l_0_17_169) l_0_17_170))))
 (let ((?x50471 (- (- ?x39921 (* (* 2.0 l_0_17_198) l_0_17_200)) (* (* 2.0 l_0_17_199) l_0_17_201))))
 (let ((?x50477 (- (- ?x50471 (* (* 2.0 l_0_17_226) l_0_17_228)) (* (* 2.0 l_0_17_227) l_0_17_229))))
 (let ((?x50483 (- (- ?x50477 (* (* 2.0 l_0_17_254) l_0_17_256)) (* (* 2.0 l_0_17_255) l_0_17_257))))
 (let ((?x50489 (- (- ?x50483 (* (* 2.0 l_0_17_282) l_0_17_284)) (* (* 2.0 l_0_17_283) l_0_17_285))))
 (let ((?x50496 (- (- (- ?x50489 ?x49143) (* (* 2.0 l_0_17_310) l_0_17_312)) (* (* 2.0 l_0_17_311) l_0_17_313))))
 (= ?x50496 0.0))))))))))
(assert
 (let ((?x50555 (* l_0_17_314 l_0_17_314)))
 (let ((?x50553 (* l_0_17_313 l_0_17_313)))
 (let ((?x50551 (* l_0_17_312 l_0_17_312)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49183 (* ?x49142 l_0_17_32)))
 (let ((?x50548 (* l_0_17_286 l_0_17_286)))
 (let ((?x50546 (* l_0_17_285 l_0_17_285)))
 (let ((?x50544 (* l_0_17_284 l_0_17_284)))
 (let ((?x50542 (* l_0_17_258 l_0_17_258)))
 (let ((?x50540 (* l_0_17_257 l_0_17_257)))
 (let ((?x50538 (* l_0_17_256 l_0_17_256)))
 (let ((?x50536 (* l_0_17_230 l_0_17_230)))
 (let ((?x50534 (* l_0_17_229 l_0_17_229)))
 (let ((?x50532 (* l_0_17_228 l_0_17_228)))
 (let ((?x50530 (* l_0_17_202 l_0_17_202)))
 (let ((?x50528 (* l_0_17_201 l_0_17_201)))
 (let ((?x50526 (* l_0_17_200 l_0_17_200)))
 (let ((?x50525 (+ (* (* 2.0 l_0_17_1) l_0_17_4) (* (* 4.0 l_0_17_169) l_0_17_172))))
 (let ((?x50539 (- (- (- (- (- (- (- ?x50525 ?x50526) ?x50528) ?x50530) ?x50532) ?x50534) ?x50536) ?x50538)))
 (let ((?x50552 (- (- (- (- (- (- (- ?x50539 ?x50540) ?x50542) ?x50544) ?x50546) ?x50548) ?x49183) ?x50551)))
 (= (- (- ?x50552 ?x50553) ?x50555) 0.0))))))))))))))))))))))
(assert
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49243 (* ?x49142 l_0_17_35)))
 (let ((?x50578 (+ (* (* 2.0 l_0_17_1) l_0_17_7) (* (* 4.0 l_0_17_169) l_0_17_175))))
 (let ((?x50584 (- (- ?x50578 (* (* 2.0 l_0_17_200) l_0_17_203)) (* (* 2.0 l_0_17_201) l_0_17_204))))
 (let ((?x50590 (- (- ?x50584 (* (* 2.0 l_0_17_202) l_0_17_205)) (* (* 2.0 l_0_17_228) l_0_17_231))))
 (let ((?x50596 (- (- ?x50590 (* (* 2.0 l_0_17_229) l_0_17_232)) (* (* 2.0 l_0_17_230) l_0_17_233))))
 (let ((?x50602 (- (- ?x50596 (* (* 2.0 l_0_17_256) l_0_17_259)) (* (* 2.0 l_0_17_257) l_0_17_260))))
 (let ((?x50608 (- (- ?x50602 (* (* 2.0 l_0_17_258) l_0_17_261)) (* (* 2.0 l_0_17_284) l_0_17_287))))
 (let ((?x50614 (- (- ?x50608 (* (* 2.0 l_0_17_285) l_0_17_288)) (* (* 2.0 l_0_17_286) l_0_17_289))))
 (let ((?x50621 (- (- (- ?x50614 ?x49243) (* (* 2.0 l_0_17_312) l_0_17_315)) (* (* 2.0 l_0_17_313) l_0_17_316))))
 (= (- ?x50621 (* (* 2.0 l_0_17_314) l_0_17_317)) 0.0))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x50696 (* ?x49148 l_0_17_88)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x50694 (* ?x49145 l_0_17_60)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49305 (* ?x49142 l_0_17_39)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x39095 (* ?x49139 l_0_17_144)))
 (let ((?x50656 (- (* (* 2.0 l_0_17_1) l_0_17_11) (* (* 2.0 l_0_17_113) l_0_17_116))))
 (let ((?x50662 (+ (- (- ?x50656 ?x39095) (* (* 2.0 l_0_17_169) l_0_17_172)) (* (* 4.0 l_0_17_169) l_0_17_179))))
 (let ((?x50666 (- (- ?x50662 (* (* 2.0 l_0_17_200) l_0_17_207)) (* (* 2.0 l_0_17_201) l_0_17_208))))
 (let ((?x50670 (- (- ?x50666 (* (* 2.0 l_0_17_202) l_0_17_209)) (* (* 2.0 l_0_17_228) l_0_17_235))))
 (let ((?x50674 (- (- ?x50670 (* (* 2.0 l_0_17_229) l_0_17_236)) (* (* 2.0 l_0_17_230) l_0_17_237))))
 (let ((?x50678 (- (- ?x50674 (* (* 2.0 l_0_17_256) l_0_17_263)) (* (* 2.0 l_0_17_257) l_0_17_264))))
 (let ((?x50682 (- (- ?x50678 (* (* 2.0 l_0_17_258) l_0_17_265)) (* (* 2.0 l_0_17_284) l_0_17_291))))
 (let ((?x50686 (- (- ?x50682 (* (* 2.0 l_0_17_285) l_0_17_292)) (* (* 2.0 l_0_17_286) l_0_17_293))))
 (let ((?x50691 (- (- (- ?x50686 ?x49305) (* (* 2.0 l_0_17_312) l_0_17_319)) (* (* 2.0 l_0_17_313) l_0_17_320))))
 (= (+ (- (- ?x50691 (* (* 2.0 l_0_17_314) l_0_17_321)) ?x50694) ?x50696) 0.0)))))))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x50696 (* ?x49148 l_0_17_88)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x50694 (* ?x49145 l_0_17_60)))
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49390 (* ?x49142 l_0_17_44)))
 (let ((?x40860 (+ (* (* 2.0 l_0_17_1) l_0_17_16) (* (* 4.0 l_0_17_169) l_0_17_184))))
 (let ((?x40794 (- (- ?x40860 (* (* 2.0 l_0_17_200) l_0_17_212)) (* (* 2.0 l_0_17_201) l_0_17_213))))
 (let ((?x50732 (- (- ?x40794 (* (* 2.0 l_0_17_202) l_0_17_214)) (* (* 2.0 l_0_17_228) l_0_17_240))))
 (let ((?x50736 (- (- ?x50732 (* (* 2.0 l_0_17_229) l_0_17_241)) (* (* 2.0 l_0_17_230) l_0_17_242))))
 (let ((?x50740 (- (- ?x50736 (* (* 2.0 l_0_17_256) l_0_17_268)) (* (* 2.0 l_0_17_257) l_0_17_269))))
 (let ((?x50744 (- (- ?x50740 (* (* 2.0 l_0_17_258) l_0_17_270)) (* (* 2.0 l_0_17_284) l_0_17_296))))
 (let ((?x50748 (- (- ?x50744 (* (* 2.0 l_0_17_285) l_0_17_297)) (* (* 2.0 l_0_17_286) l_0_17_298))))
 (let ((?x50753 (- (- (- ?x50748 ?x49390) (* (* 2.0 l_0_17_312) l_0_17_324)) (* (* 2.0 l_0_17_313) l_0_17_325))))
 (= (- (+ (- ?x50753 (* (* 2.0 l_0_17_314) l_0_17_326)) ?x50694) ?x50696) 0.0))))))))))))))))
(assert
 (let ((?x49142 (* 2.0 l_0_17_29)))
 (let ((?x49400 (* ?x49142 l_0_17_50)))
 (let ((?x27509 (+ (* (* 2.0 l_0_17_1) l_0_17_22) (* (* 4.0 l_0_17_169) l_0_17_190))))
 (let ((?x50820 (- (- ?x27509 (* (* 2.0 l_0_17_200) l_0_17_218)) (* (* 2.0 l_0_17_201) l_0_17_219))))
 (let ((?x50824 (- (- ?x50820 (* (* 2.0 l_0_17_202) l_0_17_220)) (* (* 2.0 l_0_17_228) l_0_17_246))))
 (let ((?x50828 (- (- ?x50824 (* (* 2.0 l_0_17_229) l_0_17_247)) (* (* 2.0 l_0_17_230) l_0_17_248))))
 (let ((?x50832 (- (- ?x50828 (* (* 2.0 l_0_17_256) l_0_17_274)) (* (* 2.0 l_0_17_257) l_0_17_275))))
 (let ((?x50836 (- (- ?x50832 (* (* 2.0 l_0_17_258) l_0_17_276)) (* (* 2.0 l_0_17_284) l_0_17_302))))
 (let ((?x50840 (- (- ?x50836 (* (* 2.0 l_0_17_285) l_0_17_303)) (* (* 2.0 l_0_17_286) l_0_17_304))))
 (let ((?x50845 (- (- (- ?x50840 ?x49400) (* (* 2.0 l_0_17_312) l_0_17_330)) (* (* 2.0 l_0_17_313) l_0_17_331))))
 (= (- ?x50845 (* (* 2.0 l_0_17_314) l_0_17_332)) 0.0))))))))))))
(assert
 (let ((?x49420 (* l_0_17_31 l_0_17_31)))
 (let ((?x49418 (* l_0_17_30 l_0_17_30)))
 (let ((?x49416 (* l_0_17_3 l_0_17_3)))
 (let ((?x49409 (* l_0_17_2 l_0_17_2)))
 (let ((?x50887 (* l_0_17_171 l_0_17_171)))
 (let ((?x50888 (* 2.0 ?x50887)))
 (let ((?x50885 (* l_0_17_170 l_0_17_170)))
 (let ((?x50886 (* 2.0 ?x50885)))
 (= (- (- (+ (+ (+ ?x50886 ?x50888) ?x49409) ?x49416) ?x49418) ?x49420) 0.0))))))))))
(assert
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49470 (* ?x49469 l_0_17_33)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49467 (* ?x49466 l_0_17_32)))
 (let ((?x49463 (* 2.0 l_0_17_3)))
 (let ((?x49464 (* ?x49463 l_0_17_5)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49461 (* ?x49460 l_0_17_4)))
 (let ((?x50901 (+ (* (* 4.0 l_0_17_170) l_0_17_172) (* (* 4.0 l_0_17_171) l_0_17_173))))
 (= (- (- (+ (+ ?x50901 ?x49461) ?x49464) ?x49467) ?x49470) 0.0)))))))))))
(assert
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49532 (* ?x49469 l_0_17_36)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49530 (* ?x49466 l_0_17_35)))
 (let ((?x49463 (* 2.0 l_0_17_3)))
 (let ((?x49528 (* ?x49463 l_0_17_8)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49517 (* ?x49460 l_0_17_7)))
 (let ((?x50915 (+ (* (* 4.0 l_0_17_170) l_0_17_175) (* (* 4.0 l_0_17_171) l_0_17_176))))
 (= (- (- (+ (+ ?x50915 ?x49517) ?x49528) ?x49530) ?x49532) 0.0)))))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x50947 (* ?x49431 l_0_17_89)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x50945 (* ?x49428 l_0_17_88)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x50943 (* ?x49425 l_0_17_61)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x50941 (* ?x49422 l_0_17_60)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49580 (* ?x49469 l_0_17_40)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49578 (* ?x49466 l_0_17_39)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49458 (* ?x49457 l_0_17_145)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49456 (* ?x49455 l_0_17_144)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x49572 (* ?x49571 l_0_17_3)))
 (let ((?x30572 (- (* (* 2.0 l_0_17_11) l_0_17_2) (* (* 2.0 l_0_17_114) l_0_17_116))))
 (let ((?x50928 (- (- (+ (- ?x30572 (* (* 2.0 l_0_17_115) l_0_17_117)) ?x49572) ?x49456) ?x49458)))
 (let ((?x50933 (+ (- ?x50928 (* (* 2.0 l_0_17_170) l_0_17_172)) (* (* 4.0 l_0_17_170) l_0_17_179))))
 (let ((?x50938 (+ (- ?x50933 (* (* 2.0 l_0_17_171) l_0_17_173)) (* (* 4.0 l_0_17_171) l_0_17_180))))
 (= (+ (+ (- (- (- (- ?x50938 ?x49578) ?x49580) ?x50941) ?x50943) ?x50945) ?x50947) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x50947 (* ?x49431 l_0_17_89)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x50945 (* ?x49428 l_0_17_88)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x50943 (* ?x49425 l_0_17_61)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x50941 (* ?x49422 l_0_17_60)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49667 (* ?x49469 l_0_17_45)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49665 (* ?x49466 l_0_17_44)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x49663 (* ?x49662 l_0_17_3)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x49660 (* ?x49659 l_0_17_2)))
 (let ((?x50979 (+ (+ (+ ?x49660 ?x49663) (* (* 4.0 l_0_17_170) l_0_17_184)) (* (* 4.0 l_0_17_171) l_0_17_185))))
 (= (- (- (+ (+ (- (- ?x50979 ?x49665) ?x49667) ?x50941) ?x50943) ?x50945) ?x50947) 0.0)))))))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x50696 (* ?x49148 l_0_17_88)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x50694 (* ?x49145 l_0_17_60)))
 (let ((?x49469 (* 2.0 l_0_17_31)))
 (let ((?x49729 (* ?x49469 l_0_17_51)))
 (let ((?x49466 (* 2.0 l_0_17_30)))
 (let ((?x49727 (* ?x49466 l_0_17_50)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49725 (* ?x49177 l_0_17_3)))
 (let ((?x49460 (* 2.0 l_0_17_2)))
 (let ((?x49723 (* ?x49460 l_0_17_22)))
 (let ((?x41267 (+ (* (* 4.0 l_0_17_170) l_0_17_190) (* (* 4.0 l_0_17_171) l_0_17_191))))
 (= (+ (- (- (- (+ (+ ?x41267 ?x49723) ?x49725) ?x49727) ?x49729) ?x50694) ?x50696) 0.0)))))))))))))))
(assert
 (let ((?x49777 (* l_0_17_6 l_0_17_6)))
 (let ((?x49775 (* l_0_17_5 l_0_17_5)))
 (let ((?x49773 (* l_0_17_4 l_0_17_4)))
 (let ((?x49771 (* l_0_17_34 l_0_17_34)))
 (let ((?x49769 (* l_0_17_33 l_0_17_33)))
 (let ((?x49767 (* l_0_17_32 l_0_17_32)))
 (let ((?x51007 (* l_0_17_174 l_0_17_174)))
 (let ((?x51008 (* 2.0 ?x51007)))
 (let ((?x51004 (* l_0_17_173 l_0_17_173)))
 (let ((?x51005 (* 2.0 ?x51004)))
 (let ((?x20407 (* l_0_17_172 l_0_17_172)))
 (let ((?x51003 (* 2.0 ?x20407)))
 (let ((?x51014 (+ (+ (- (- (- (+ (+ ?x51003 ?x51005) ?x51008) ?x49767) ?x49769) ?x49771) ?x49773) ?x49775)))
 (= (+ ?x51014 ?x49777) 0.0)))))))))))))))
(assert
 (let ((?x49811 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x49808 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x49805 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49802 (* ?x49801 l_0_17_37)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49799 (* ?x49798 l_0_17_36)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49796 (* ?x49795 l_0_17_35)))
 (let ((?x51024 (+ (* (* 4.0 l_0_17_172) l_0_17_175) (* (* 4.0 l_0_17_173) l_0_17_176))))
 (let ((?x51030 (- (- (- (+ ?x51024 (* (* 4.0 l_0_17_174) l_0_17_177)) ?x49796) ?x49799) ?x49802)))
 (= (+ (+ (+ ?x51030 ?x49805) ?x49808) ?x49811) 0.0)))))))))))))
(assert
 (let ((?x51061 (* l_0_17_90 l_0_17_90)))
 (let ((?x51059 (* l_0_17_89 l_0_17_89)))
 (let ((?x51057 (* l_0_17_88 l_0_17_88)))
 (let ((?x51055 (* l_0_17_62 l_0_17_62)))
 (let ((?x51053 (* l_0_17_61 l_0_17_61)))
 (let ((?x51051 (* l_0_17_60 l_0_17_60)))
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49848 (* ?x49801 l_0_17_41)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49846 (* ?x49798 l_0_17_40)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49844 (* ?x49795 l_0_17_39)))
 (let ((?x51007 (* l_0_17_174 l_0_17_174)))
 (let ((?x51004 (* l_0_17_173 l_0_17_173)))
 (let ((?x20407 (* l_0_17_172 l_0_17_172)))
 (let ((?x49765 (* l_0_17_146 l_0_17_146)))
 (let ((?x49763 (* l_0_17_145 l_0_17_145)))
 (let ((?x49762 (* l_0_17_144 l_0_17_144)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x49836 (* ?x49835 l_0_17_6)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x17907 (* ?x49571 l_0_17_5)))
 (let ((?x14653 (* l_0_17_118 l_0_17_118)))
 (let ((?x41332 (* l_0_17_117 l_0_17_117)))
 (let ((?x20395 (- (- (* (* 2.0 l_0_17_11) l_0_17_4) (* l_0_17_116 l_0_17_116)) ?x41332)))
 (let ((?x30677 (+ (- (- (- (+ (+ (- ?x20395 ?x14653) ?x17907) ?x49836) ?x49762) ?x49763) ?x49765) (* (* 4.0 l_0_17_172) l_0_17_179))))
 (let ((?x51046 (+ (- (+ (- ?x30677 ?x20407) (* (* 4.0 l_0_17_173) l_0_17_180)) ?x51004) (* (* 4.0 l_0_17_174) l_0_17_181))))
 (let ((?x51056 (- (- (- (- (- (- (- ?x51046 ?x51007) ?x49844) ?x49846) ?x49848) ?x51051) ?x51053) ?x51055)))
 (= (+ (+ (+ ?x51056 ?x51057) ?x51059) ?x51061) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x51061 (* l_0_17_90 l_0_17_90)))
 (let ((?x51059 (* l_0_17_89 l_0_17_89)))
 (let ((?x51057 (* l_0_17_88 l_0_17_88)))
 (let ((?x51055 (* l_0_17_62 l_0_17_62)))
 (let ((?x51053 (* l_0_17_61 l_0_17_61)))
 (let ((?x51051 (* l_0_17_60 l_0_17_60)))
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49881 (* ?x49801 l_0_17_46)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49879 (* ?x49798 l_0_17_45)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49877 (* ?x49795 l_0_17_44)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x49875 (* ?x49874 l_0_17_6)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x49872 (* ?x49662 l_0_17_5)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x49870 (* ?x49659 l_0_17_4)))
 (let ((?x51092 (+ (+ (+ ?x49870 ?x49872) (* (* 4.0 l_0_17_172) l_0_17_184)) (* (* 4.0 l_0_17_173) l_0_17_185))))
 (let ((?x51097 (- (- (+ (+ ?x51092 (* (* 4.0 l_0_17_174) l_0_17_186)) ?x49875) ?x49877) ?x49879)))
 (let ((?x51104 (- (- (- (+ (+ (+ (- ?x51097 ?x49881) ?x51051) ?x51053) ?x51055) ?x51057) ?x51059) ?x51061)))
 (= ?x51104 0.0)))))))))))))))))))))))
(assert
 (let ((?x49801 (* 2.0 l_0_17_34)))
 (let ((?x49910 (* ?x49801 l_0_17_52)))
 (let ((?x49798 (* 2.0 l_0_17_33)))
 (let ((?x49908 (* ?x49798 l_0_17_51)))
 (let ((?x49795 (* 2.0 l_0_17_32)))
 (let ((?x49906 (* ?x49795 l_0_17_50)))
 (let ((?x49180 (* 2.0 l_0_17_24)))
 (let ((?x49904 (* ?x49180 l_0_17_6)))
 (let ((?x49177 (* 2.0 l_0_17_23)))
 (let ((?x49902 (* ?x49177 l_0_17_5)))
 (let ((?x49174 (* 2.0 l_0_17_22)))
 (let ((?x17779 (* ?x49174 l_0_17_4)))
 (let ((?x19155 (+ (* (* 4.0 l_0_17_172) l_0_17_190) (* (* 4.0 l_0_17_173) l_0_17_191))))
 (let ((?x51122 (+ (+ (+ (+ ?x19155 (* (* 4.0 l_0_17_174) l_0_17_192)) ?x17779) ?x49902) ?x49904)))
 (= (- (- (- ?x51122 ?x49906) ?x49908) ?x49910) 0.0))))))))))))))))
(assert
 (let ((?x49962 (* l_0_17_9 l_0_17_9)))
 (let ((?x49960 (* l_0_17_8 l_0_17_8)))
 (let ((?x49958 (* l_0_17_7 l_0_17_7)))
 (let ((?x49956 (* l_0_17_38 l_0_17_38)))
 (let ((?x49954 (* l_0_17_37 l_0_17_37)))
 (let ((?x49952 (* l_0_17_36 l_0_17_36)))
 (let ((?x49950 (* l_0_17_35 l_0_17_35)))
 (let ((?x51143 (* l_0_17_178 l_0_17_178)))
 (let ((?x51144 (* 2.0 ?x51143)))
 (let ((?x51140 (* l_0_17_177 l_0_17_177)))
 (let ((?x51141 (* 2.0 ?x51140)))
 (let ((?x51137 (* l_0_17_176 l_0_17_176)))
 (let ((?x51138 (* 2.0 ?x51137)))
 (let ((?x29920 (* l_0_17_175 l_0_17_175)))
 (let ((?x51135 (* 2.0 ?x29920)))
 (let ((?x49966 (* l_0_17_10 l_0_17_10)))
 (let ((?x51148 (- (- (- (+ (+ (+ (+ ?x49966 ?x51135) ?x51138) ?x51141) ?x51144) ?x49950) ?x49952) ?x49954)))
 (= (+ (+ (+ (- ?x51148 ?x49956) ?x49958) ?x49960) ?x49962) 0.0)))))))))))))))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x49488 (* ?x49487 l_0_17_93)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x49485 (* ?x49484 l_0_17_92)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x49482 (* ?x49481 l_0_17_91)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x49479 (* ?x49478 l_0_17_65)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x49476 (* ?x49475 l_0_17_64)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x49473 (* ?x49472 l_0_17_63)))
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x49999 (* ?x49194 l_0_17_42)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x49997 (* ?x49191 l_0_17_41)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x49995 (* ?x49188 l_0_17_40)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x49993 (* ?x49185 l_0_17_39)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49793 (* ?x49792 l_0_17_149)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49790 (* ?x49789 l_0_17_148)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49788 (* ?x49787 l_0_17_147)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x49983 (* ?x49835 l_0_17_9)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x49981 (* ?x49571 l_0_17_8)))
 (let ((?x49978 (* 2.0 l_0_17_11)))
 (let ((?x49979 (* ?x49978 l_0_17_7)))
 (let ((?x30718 (- (+ (* (* 2.0 l_0_17_10) l_0_17_14) ?x49979) (* (* 2.0 l_0_17_116) l_0_17_119))))
 (let ((?x51164 (- (- ?x30718 (* (* 2.0 l_0_17_117) l_0_17_120)) (* (* 2.0 l_0_17_118) l_0_17_121))))
 (let ((?x51172 (- (- (- (- (+ (+ ?x51164 ?x49981) ?x49983) ?x49788) ?x49790) ?x49793) (* (* 2.0 l_0_17_172) l_0_17_175))))
 (let ((?x51178 (- (- ?x51172 (* (* 2.0 l_0_17_173) l_0_17_176)) (* (* 2.0 l_0_17_174) l_0_17_177))))
 (let ((?x51182 (+ (+ ?x51178 (* (* 4.0 l_0_17_175) l_0_17_179)) (* (* 4.0 l_0_17_176) l_0_17_180))))
 (let ((?x51186 (+ (+ ?x51182 (* (* 4.0 l_0_17_177) l_0_17_181)) (* (* 4.0 l_0_17_178) l_0_17_182))))
 (let ((?x51193 (- (- (- (- (- (- (- ?x51186 ?x49993) ?x49995) ?x49997) ?x49999) ?x49473) ?x49476) ?x49479)))
 (= (+ (+ (+ ?x51193 ?x49482) ?x49485) ?x49488) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x49488 (* ?x49487 l_0_17_93)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x49485 (* ?x49484 l_0_17_92)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x49482 (* ?x49481 l_0_17_91)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x49479 (* ?x49478 l_0_17_65)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x49476 (* ?x49475 l_0_17_64)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x49473 (* ?x49472 l_0_17_63)))
 (let ((?x49194 (* 2.0 l_0_17_38)))
 (let ((?x50036 (* ?x49194 l_0_17_47)))
 (let ((?x49191 (* 2.0 l_0_17_37)))
 (let ((?x50034 (* ?x49191 l_0_17_46)))
 (let ((?x49188 (* 2.0 l_0_17_36)))
 (let ((?x50032 (* ?x49188 l_0_17_45)))
 (let ((?x49185 (* 2.0 l_0_17_35)))
 (let ((?x50030 (* ?x49185 l_0_17_44)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x50028 (* ?x49874 l_0_17_9)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x50026 (* ?x49662 l_0_17_8)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x50024 (* ?x49659 l_0_17_7)))
 (let ((?x51219 (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_19) ?x50024) ?x50026) (* (* 4.0 l_0_17_175) l_0_17_184))))
 (let ((?x51223 (+ (+ ?x51219 (* (* 4.0 l_0_17_176) l_0_17_185)) (* (* 4.0 l_0_17_177) l_0_17_186))))
 (let ((?x51228 (- (- (+ (+ ?x51223 (* (* 4.0 l_0_17_178) l_0_17_187)) ?x50028) ?x50030) ?x50032)))
 (let ((?x51235 (- (- (+ (+ (+ (- (- ?x51228 ?x50034) ?x50036) ?x49473) ?x49476) ?x49479) ?x49482) ?x49485)))
 (= (- ?x51235 ?x49488) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x51308 (* ?x49487 l_0_17_97)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x51306 (* ?x49484 l_0_17_96)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x51304 (* ?x49481 l_0_17_95)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51302 (* ?x49478 l_0_17_69)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51300 (* ?x49475 l_0_17_68)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51298 (* ?x49472 l_0_17_67)))
 (let ((?x50103 (* l_0_17_43 l_0_17_43)))
 (let ((?x50101 (* l_0_17_42 l_0_17_42)))
 (let ((?x50099 (* l_0_17_41 l_0_17_41)))
 (let ((?x50097 (* l_0_17_40 l_0_17_40)))
 (let ((?x50095 (* l_0_17_39 l_0_17_39)))
 (let ((?x51290 (* l_0_17_183 l_0_17_183)))
 (let ((?x51291 (* 2.0 ?x51290)))
 (let ((?x51287 (* l_0_17_182 l_0_17_182)))
 (let ((?x51288 (* 2.0 ?x51287)))
 (let ((?x51284 (* l_0_17_181 l_0_17_181)))
 (let ((?x51285 (* 2.0 ?x51284)))
 (let ((?x51281 (* l_0_17_180 l_0_17_180)))
 (let ((?x51282 (* 2.0 ?x51281)))
 (let ((?x51278 (* l_0_17_179 l_0_17_179)))
 (let ((?x51279 (* 2.0 ?x51278)))
 (let ((?x39623 (* l_0_17_15 l_0_17_15)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49842 (* ?x49792 l_0_17_153)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49840 (* ?x49789 l_0_17_152)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49838 (* ?x49787 l_0_17_151)))
 (let ((?x18294 (* l_0_17_14 l_0_17_14)))
 (let ((?x39625 (* l_0_17_13 l_0_17_13)))
 (let ((?x39622 (* l_0_17_12 l_0_17_12)))
 (let ((?x29719 (* l_0_17_11 l_0_17_11)))
 (let ((?x51262 (- (- ?x29719 (* (* 2.0 l_0_17_116) l_0_17_123)) (* (* 2.0 l_0_17_117) l_0_17_124))))
 (let ((?x51267 (+ (+ (+ (- ?x51262 (* (* 2.0 l_0_17_118) l_0_17_125)) ?x39622) ?x39625) ?x18294)))
 (let ((?x51273 (- (+ (- (- (- ?x51267 ?x49838) ?x49840) ?x49842) ?x39623) (* (* 2.0 l_0_17_172) l_0_17_179))))
 (let ((?x51277 (- (- ?x51273 (* (* 2.0 l_0_17_173) l_0_17_180)) (* (* 2.0 l_0_17_174) l_0_17_181))))
 (let ((?x51294 (- (- (+ (+ (+ (+ (+ ?x51277 ?x51279) ?x51282) ?x51285) ?x51288) ?x51291) ?x50095) ?x50097)))
 (let ((?x51305 (+ (- (- (- (- (- (- ?x51294 ?x50099) ?x50101) ?x50103) ?x51298) ?x51300) ?x51302) ?x51304)))
 (= (+ (+ ?x51305 ?x51306) ?x51308) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x51308 (* ?x49487 l_0_17_97)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x51306 (* ?x49484 l_0_17_96)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x51304 (* ?x49481 l_0_17_95)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51394 (* ?x49478 l_0_17_74)))
 (let ((?x51302 (* ?x49478 l_0_17_69)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51391 (* ?x49475 l_0_17_73)))
 (let ((?x51300 (* ?x49475 l_0_17_68)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51388 (* ?x49472 l_0_17_72)))
 (let ((?x51298 (* ?x49472 l_0_17_67)))
 (let ((?x50162 (* 2.0 l_0_17_43)))
 (let ((?x50163 (* ?x50162 l_0_17_48)))
 (let ((?x50159 (* 2.0 l_0_17_42)))
 (let ((?x50160 (* ?x50159 l_0_17_47)))
 (let ((?x50156 (* 2.0 l_0_17_41)))
 (let ((?x50157 (* ?x50156 l_0_17_46)))
 (let ((?x50153 (* 2.0 l_0_17_40)))
 (let ((?x50154 (* ?x50153 l_0_17_45)))
 (let ((?x50150 (* 2.0 l_0_17_39)))
 (let ((?x50151 (* ?x50150 l_0_17_44)))
 (let ((?x50132 (* 2.0 l_0_17_15)))
 (let ((?x50133 (* ?x50132 l_0_17_20)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x49868 (* ?x49792 l_0_17_158)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x49866 (* ?x49789 l_0_17_157)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x49865 (* ?x49787 l_0_17_156)))
 (let ((?x50129 (* 2.0 l_0_17_14)))
 (let ((?x50130 (* ?x50129 l_0_17_19)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x50127 (* ?x49835 l_0_17_18)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x50125 (* ?x49571 l_0_17_17)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51334 (* ?x49649 l_0_17_90)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x20924 (* ?x49634 l_0_17_89)))
 (let ((?x51345 (+ (+ (* (* 2.0 l_0_17_100) l_0_17_88) ?x20924) ?x51334)))
 (let ((?x51349 (- (+ ?x51345 (* (* 2.0 l_0_17_11) l_0_17_16)) (* (* 2.0 l_0_17_116) l_0_17_128))))
 (let ((?x51353 (- (- ?x51349 (* (* 2.0 l_0_17_117) l_0_17_129)) (* (* 2.0 l_0_17_118) l_0_17_130))))
 (let ((?x51360 (+ (- (- (- (+ (+ (+ ?x51353 ?x50125) ?x50127) ?x50130) ?x49865) ?x49866) ?x49868) ?x50133)))
 (let ((?x51364 (- (- ?x51360 (* (* 2.0 l_0_17_172) l_0_17_184)) (* (* 2.0 l_0_17_173) l_0_17_185))))
 (let ((?x51369 (+ (- ?x51364 (* (* 2.0 l_0_17_174) l_0_17_186)) (* (* 4.0 l_0_17_179) l_0_17_184))))
 (let ((?x51375 (+ (+ ?x51369 (* (* 4.0 l_0_17_180) l_0_17_185)) (* (* 4.0 l_0_17_181) l_0_17_186))))
 (let ((?x51381 (+ (+ ?x51375 (* (* 4.0 l_0_17_182) l_0_17_187)) (* (* 4.0 l_0_17_183) l_0_17_188))))
 (let ((?x51389 (- (+ (- (- (- (- (- ?x51381 ?x50151) ?x50154) ?x50157) ?x50160) ?x50163) ?x51298) ?x51388)))
 (let ((?x51398 (- (- (- (- (+ (- (+ ?x51389 ?x51300) ?x51391) ?x51302) ?x51394) ?x51304) ?x51306) ?x51308)))
 (= ?x51398 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51500 (* ?x49478 l_0_17_80)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51498 (* ?x49475 l_0_17_79)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51496 (* ?x49472 l_0_17_78)))
 (let ((?x50162 (* 2.0 l_0_17_43)))
 (let ((?x50229 (* ?x50162 l_0_17_54)))
 (let ((?x50159 (* 2.0 l_0_17_42)))
 (let ((?x50227 (* ?x50159 l_0_17_53)))
 (let ((?x50156 (* 2.0 l_0_17_41)))
 (let ((?x50225 (* ?x50156 l_0_17_52)))
 (let ((?x50153 (* 2.0 l_0_17_40)))
 (let ((?x50223 (* ?x50153 l_0_17_51)))
 (let ((?x50150 (* 2.0 l_0_17_39)))
 (let ((?x50221 (* ?x50150 l_0_17_50)))
 (let ((?x50132 (* 2.0 l_0_17_15)))
 (let ((?x50209 (* ?x50132 l_0_17_26)))
 (let ((?x49792 (* 2.0 l_0_17_146)))
 (let ((?x39476 (* ?x49792 l_0_17_164)))
 (let ((?x49789 (* 2.0 l_0_17_145)))
 (let ((?x17949 (* ?x49789 l_0_17_163)))
 (let ((?x49787 (* 2.0 l_0_17_144)))
 (let ((?x39471 (* ?x49787 l_0_17_162)))
 (let ((?x50129 (* 2.0 l_0_17_14)))
 (let ((?x50207 (* ?x50129 l_0_17_25)))
 (let ((?x49835 (* 2.0 l_0_17_13)))
 (let ((?x50205 (* ?x49835 l_0_17_24)))
 (let ((?x49571 (* 2.0 l_0_17_12)))
 (let ((?x50203 (* ?x49571 l_0_17_23)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x51458 (* ?x49261 l_0_17_90)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51456 (* ?x49258 l_0_17_89)))
 (let ((?x51459 (+ (+ (* (* 2.0 l_0_17_106) l_0_17_88) ?x51456) ?x51458)))
 (let ((?x51463 (- (+ ?x51459 (* (* 2.0 l_0_17_11) l_0_17_22)) (* (* 2.0 l_0_17_116) l_0_17_134))))
 (let ((?x51467 (- (- ?x51463 (* (* 2.0 l_0_17_117) l_0_17_135)) (* (* 2.0 l_0_17_118) l_0_17_136))))
 (let ((?x51474 (+ (- (- (- (+ (+ (+ ?x51467 ?x50203) ?x50205) ?x50207) ?x39471) ?x17949) ?x39476) ?x50209)))
 (let ((?x51478 (- (- ?x51474 (* (* 2.0 l_0_17_172) l_0_17_190)) (* (* 2.0 l_0_17_173) l_0_17_191))))
 (let ((?x51482 (+ (- ?x51478 (* (* 2.0 l_0_17_174) l_0_17_192)) (* (* 4.0 l_0_17_179) l_0_17_190))))
 (let ((?x51486 (+ (+ ?x51482 (* (* 4.0 l_0_17_180) l_0_17_191)) (* (* 4.0 l_0_17_181) l_0_17_192))))
 (let ((?x51490 (+ (+ ?x51486 (* (* 4.0 l_0_17_182) l_0_17_193)) (* (* 4.0 l_0_17_183) l_0_17_194))))
 (let ((?x51499 (- (- (- (- (- (- (- ?x51490 ?x50221) ?x50223) ?x50225) ?x50227) ?x50229) ?x51496) ?x51498)))
 (= (- ?x51499 ?x51500) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51394 (* ?x49478 l_0_17_74)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51391 (* ?x49475 l_0_17_73)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51388 (* ?x49472 l_0_17_72)))
 (let ((?x50283 (* l_0_17_49 l_0_17_49)))
 (let ((?x50281 (* l_0_17_48 l_0_17_48)))
 (let ((?x50279 (* l_0_17_47 l_0_17_47)))
 (let ((?x50277 (* l_0_17_46 l_0_17_46)))
 (let ((?x50275 (* l_0_17_45 l_0_17_45)))
 (let ((?x50273 (* l_0_17_44 l_0_17_44)))
 (let ((?x50271 (* l_0_17_21 l_0_17_21)))
 (let ((?x50269 (* l_0_17_20 l_0_17_20)))
 (let ((?x50267 (* l_0_17_19 l_0_17_19)))
 (let ((?x51572 (* l_0_17_189 l_0_17_189)))
 (let ((?x51573 (* 2.0 ?x51572)))
 (let ((?x51569 (* l_0_17_188 l_0_17_188)))
 (let ((?x51570 (* 2.0 ?x51569)))
 (let ((?x51566 (* l_0_17_187 l_0_17_187)))
 (let ((?x51567 (* 2.0 ?x51566)))
 (let ((?x51563 (* l_0_17_186 l_0_17_186)))
 (let ((?x51564 (* 2.0 ?x51563)))
 (let ((?x51560 (* l_0_17_185 l_0_17_185)))
 (let ((?x51561 (* 2.0 ?x51560)))
 (let ((?x51557 (* l_0_17_184 l_0_17_184)))
 (let ((?x51558 (* 2.0 ?x51557)))
 (let ((?x50265 (* l_0_17_18 l_0_17_18)))
 (let ((?x50263 (* l_0_17_17 l_0_17_17)))
 (let ((?x39797 (* l_0_17_16 l_0_17_16)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51334 (* ?x49649 l_0_17_90)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x20924 (* ?x49634 l_0_17_89)))
 (let ((?x51555 (+ (+ (- (- (* (* (- 2.0) l_0_17_100) l_0_17_88) ?x20924) ?x51334) ?x39797) ?x50263)))
 (let ((?x51574 (+ (+ (+ (+ (+ (+ (+ ?x51555 ?x50265) ?x51558) ?x51561) ?x51564) ?x51567) ?x51570) ?x51573)))
 (let ((?x51581 (- (- (- (- (+ (+ (+ ?x51574 ?x50267) ?x50269) ?x50271) ?x50273) ?x50275) ?x50277) ?x50279)))
 (= (+ (+ (+ (- (- ?x51581 ?x50281) ?x50283) ?x51388) ?x51391) ?x51394) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51500 (* ?x49478 l_0_17_80)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51498 (* ?x49475 l_0_17_79)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51496 (* ?x49472 l_0_17_78)))
 (let ((?x50350 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x50347 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x50344 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x50341 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x50338 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x50335 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x50332 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x50329 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x50326 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x49874 (* 2.0 l_0_17_18)))
 (let ((?x50323 (* ?x49874 l_0_17_24)))
 (let ((?x49662 (* 2.0 l_0_17_17)))
 (let ((?x50321 (* ?x49662 l_0_17_23)))
 (let ((?x49659 (* 2.0 l_0_17_16)))
 (let ((?x50313 (* ?x49659 l_0_17_22)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x51458 (* ?x49261 l_0_17_90)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51456 (* ?x49258 l_0_17_89)))
 (let ((?x51592 (+ (+ (- (- (* (* (- 2.0) l_0_17_106) l_0_17_88) ?x51456) ?x51458) ?x50313) ?x50321)))
 (let ((?x51599 (+ (+ (+ ?x51592 ?x50323) (* (* 4.0 l_0_17_184) l_0_17_190)) (* (* 4.0 l_0_17_185) l_0_17_191))))
 (let ((?x51605 (+ (+ ?x51599 (* (* 4.0 l_0_17_186) l_0_17_192)) (* (* 4.0 l_0_17_187) l_0_17_193))))
 (let ((?x51611 (+ (+ ?x51605 (* (* 4.0 l_0_17_188) l_0_17_194)) (* (* 4.0 l_0_17_189) l_0_17_195))))
 (let ((?x51618 (- (- (- (- (+ (+ (+ ?x51611 ?x50326) ?x50329) ?x50332) ?x50335) ?x50338) ?x50341) ?x50344)))
 (= (+ (+ (+ (- (- ?x51618 ?x50347) ?x50350) ?x51496) ?x51498) ?x51500) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x50432 (* l_0_17_56 l_0_17_56)))
 (let ((?x50430 (* l_0_17_55 l_0_17_55)))
 (let ((?x50428 (* l_0_17_54 l_0_17_54)))
 (let ((?x50426 (* l_0_17_53 l_0_17_53)))
 (let ((?x50424 (* l_0_17_52 l_0_17_52)))
 (let ((?x50422 (* l_0_17_51 l_0_17_51)))
 (let ((?x50420 (* l_0_17_50 l_0_17_50)))
 (let ((?x50418 (* l_0_17_28 l_0_17_28)))
 (let ((?x50416 (* l_0_17_27 l_0_17_27)))
 (let ((?x50414 (* l_0_17_26 l_0_17_26)))
 (let ((?x50412 (* l_0_17_25 l_0_17_25)))
 (let ((?x50410 (* l_0_17_24 l_0_17_24)))
 (let ((?x50408 (* l_0_17_23 l_0_17_23)))
 (let ((?x50406 (* l_0_17_22 l_0_17_22)))
 (let ((?x51644 (* l_0_17_196 l_0_17_196)))
 (let ((?x51645 (* 2.0 ?x51644)))
 (let ((?x51641 (* l_0_17_195 l_0_17_195)))
 (let ((?x51642 (* 2.0 ?x51641)))
 (let ((?x51638 (* l_0_17_194 l_0_17_194)))
 (let ((?x51639 (* 2.0 ?x51638)))
 (let ((?x51635 (* l_0_17_193 l_0_17_193)))
 (let ((?x51636 (* 2.0 ?x51635)))
 (let ((?x41986 (* l_0_17_192 l_0_17_192)))
 (let ((?x41923 (* 2.0 ?x41986)))
 (let ((?x41989 (* l_0_17_191 l_0_17_191)))
 (let ((?x41984 (* 2.0 ?x41989)))
 (let ((?x41987 (* l_0_17_190 l_0_17_190)))
 (let ((?x41988 (* 2.0 ?x41987)))
 (let ((?x51647 (+ (+ (+ (+ (+ (+ (+ ?x41988 ?x41984) ?x41923) ?x51636) ?x51639) ?x51642) ?x51645) ?x50406)))
 (let ((?x51654 (- (+ (+ (+ (+ (+ (+ ?x51647 ?x50408) ?x50410) ?x50412) ?x50414) ?x50416) ?x50418) ?x50420)))
 (= (- (- (- (- (- (- ?x51654 ?x50422) ?x50424) ?x50426) ?x50428) ?x50430) ?x50432) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x48976 (* l_0_17_85 l_0_17_85)))
 (let ((?x48974 (* l_0_17_57 l_0_17_57)))
 (let ((?x31283 (- (* (* (- 2.0) l_0_17_198) l_0_17_218) (* (* 2.0 l_0_17_199) l_0_17_219))))
 (let ((?x51666 (- (- ?x31283 (* (* 2.0 l_0_17_226) l_0_17_246)) (* (* 2.0 l_0_17_227) l_0_17_247))))
 (let ((?x51670 (- (- ?x51666 (* (* 2.0 l_0_17_254) l_0_17_274)) (* (* 2.0 l_0_17_255) l_0_17_275))))
 (let ((?x51674 (- (- ?x51670 (* (* 2.0 l_0_17_282) l_0_17_302)) (* (* 2.0 l_0_17_283) l_0_17_303))))
 (let ((?x51678 (- (- ?x51674 (* (* 2.0 l_0_17_310) l_0_17_330)) (* (* 2.0 l_0_17_311) l_0_17_331))))
 (= (+ (- ?x51678 ?x48974) ?x48976) 0.0)))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51713 (* ?x49148 l_0_17_86)))
 (= (+ (* (* (- 2.0) l_0_17_57) l_0_17_58) ?x51713) 0.0))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51741 (* ?x49148 l_0_17_95)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51739 (* ?x49425 l_0_17_79)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51737 (* ?x49422 l_0_17_78)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51735 (* ?x49145 l_0_17_67)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49721 (* ?x49457 l_0_17_163)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49719 (* ?x49455 l_0_17_162)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51719 (* ?x49258 l_0_17_87)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x51717 (* ?x49249 l_0_17_86)))
 (let ((?x51720 (+ ?x51717 ?x51719)))
 (let ((?x51728 (- (- ?x51720 (* (* 2.0 l_0_17_114) l_0_17_134)) (* (* 2.0 l_0_17_115) l_0_17_135))))
 (let ((?x51734 (- (- (- (- ?x51728 ?x49719) ?x49721) (* (* 2.0 l_0_17_170) l_0_17_190)) (* (* 2.0 l_0_17_171) l_0_17_191))))
 (= (+ (- (- (- ?x51734 ?x51735) ?x51737) ?x51739) ?x51741) 0.0)))))))))))))))))))))
(assert
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51739 (* ?x49425 l_0_17_79)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51737 (* ?x49422 l_0_17_78)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51782 (* ?x49145 l_0_17_72)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51719 (* ?x49258 l_0_17_87)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x51717 (* ?x49249 l_0_17_86)))
 (let ((?x39326 (* 2.0 l_0_17_100)))
 (let ((?x51774 (* ?x39326 l_0_17_85)))
 (= (+ (+ (- (- (- ?x51774 ?x51717) ?x51719) ?x51782) ?x51737) ?x51739) 0.0))))))))))))))
(assert
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51795 (* ?x49145 l_0_17_78)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x51794 (* ?x49249 l_0_17_85)))
 (= (- ?x51794 ?x51795) 0.0))))))
(assert
 (let ((?x51810 (* l_0_17_87 l_0_17_87)))
 (let ((?x51808 (* l_0_17_86 l_0_17_86)))
 (let ((?x51809 (+ (- (* (- l_0_17_58) l_0_17_58) (* l_0_17_59 l_0_17_59)) ?x51808)))
 (= (+ ?x51809 ?x51810) 0.0)))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x50947 (* ?x49431 l_0_17_89)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x50945 (* ?x49428 l_0_17_88)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x50943 (* ?x49425 l_0_17_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_58) l_0_17_60) ?x50943) ?x50945) ?x50947) 0.0))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x51838 (* ?x49431 l_0_17_96)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x51836 (* ?x49428 l_0_17_95)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51834 (* ?x49425 l_0_17_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_58) l_0_17_67) ?x51834) ?x51836) ?x51838) 0.0))))))))
(assert
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51861 (* ?x49425 l_0_17_73)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51859 (* ?x49422 l_0_17_72)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51852 (* ?x49634 l_0_17_87)))
 (let ((?x51853 (+ (* (* 2.0 l_0_17_100) l_0_17_86) ?x51852)))
 (= (- (- ?x51853 ?x51859) ?x51861) 0.0)))))))))
(assert
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51739 (* ?x49425 l_0_17_79)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51737 (* ?x49422 l_0_17_78)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51719 (* ?x49258 l_0_17_87)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x51717 (* ?x49249 l_0_17_86)))
 (let ((?x51720 (+ ?x51717 ?x51719)))
 (= (- (- ?x51720 ?x51737) ?x51739) 0.0)))))))))))
(assert
 (let ((?x51061 (* l_0_17_90 l_0_17_90)))
 (let ((?x51059 (* l_0_17_89 l_0_17_89)))
 (let ((?x51057 (* l_0_17_88 l_0_17_88)))
 (let ((?x51055 (* l_0_17_62 l_0_17_62)))
 (let ((?x31385 (- (- (* (- l_0_17_60) l_0_17_60) (* l_0_17_61 l_0_17_61)) ?x51055)))
 (= (+ (+ (+ ?x31385 ?x51057) ?x51059) ?x51061) 0.0)))))))
(assert
 (let ((?x49487 (* 2.0 l_0_17_90)))
 (let ((?x51308 (* ?x49487 l_0_17_97)))
 (let ((?x49484 (* 2.0 l_0_17_89)))
 (let ((?x51306 (* ?x49484 l_0_17_96)))
 (let ((?x49481 (* 2.0 l_0_17_88)))
 (let ((?x51304 (* ?x49481 l_0_17_95)))
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51302 (* ?x49478 l_0_17_69)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51300 (* ?x49475 l_0_17_68)))
 (let ((?x51886 (+ (+ (- (- (* (* (- 2.0) l_0_17_60) l_0_17_67) ?x51300) ?x51302) ?x51304) ?x51306)))
 (= (+ ?x51886 ?x51308) 0.0)))))))))))))
(assert
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51394 (* ?x49478 l_0_17_74)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51391 (* ?x49475 l_0_17_73)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51388 (* ?x49472 l_0_17_72)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51334 (* ?x49649 l_0_17_90)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x20924 (* ?x49634 l_0_17_89)))
 (let ((?x51345 (+ (+ (* (* 2.0 l_0_17_100) l_0_17_88) ?x20924) ?x51334)))
 (= (- (- (- ?x51345 ?x51388) ?x51391) ?x51394) 0.0)))))))))))))
(assert
 (let ((?x49478 (* 2.0 l_0_17_62)))
 (let ((?x51500 (* ?x49478 l_0_17_80)))
 (let ((?x49475 (* 2.0 l_0_17_61)))
 (let ((?x51498 (* ?x49475 l_0_17_79)))
 (let ((?x49472 (* 2.0 l_0_17_60)))
 (let ((?x51496 (* ?x49472 l_0_17_78)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x51458 (* ?x49261 l_0_17_90)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x51456 (* ?x49258 l_0_17_89)))
 (let ((?x51459 (+ (+ (* (* 2.0 l_0_17_106) l_0_17_88) ?x51456) ?x51458)))
 (= (- (- (- ?x51459 ?x51496) ?x51498) ?x51500) 0.0)))))))))))))
(assert
 (let ((?x51938 (* l_0_17_99 l_0_17_99)))
 (let ((?x51936 (* l_0_17_98 l_0_17_98)))
 (let ((?x51934 (* l_0_17_97 l_0_17_97)))
 (let ((?x51932 (* l_0_17_96 l_0_17_96)))
 (let ((?x51930 (* l_0_17_95 l_0_17_95)))
 (let ((?x51928 (* l_0_17_71 l_0_17_71)))
 (let ((?x51926 (* l_0_17_70 l_0_17_70)))
 (let ((?x51924 (* l_0_17_69 l_0_17_69)))
 (let ((?x51925 (- (- (* (- l_0_17_67) l_0_17_67) (* l_0_17_68 l_0_17_68)) ?x51924)))
 (let ((?x51939 (+ (+ (+ (+ (+ (- (- ?x51925 ?x51926) ?x51928) ?x51930) ?x51932) ?x51934) ?x51936) ?x51938)))
 (= ?x51939 0.0))))))))))))
(assert
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x51982 (* ?x51981 l_0_17_76)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x51979 (* ?x51978 l_0_17_75)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x51976 (* ?x51975 l_0_17_74)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x51973 (* ?x51972 l_0_17_73)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x51970 (* ?x51969 l_0_17_72)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x51967 (* ?x51966 l_0_17_99)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x51964 (* ?x49652 l_0_17_98)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51962 (* ?x49649 l_0_17_97)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51960 (* ?x49634 l_0_17_96)))
 (let ((?x51968 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_95) ?x51960) ?x51962) ?x51964) ?x51967)))
 (= (- (- (- (- (- ?x51968 ?x51970) ?x51973) ?x51976) ?x51979) ?x51982) 0.0)))))))))))))))))))))
(assert
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x52038 (* ?x51981 l_0_17_82)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x52036 (* ?x51978 l_0_17_81)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x52034 (* ?x51975 l_0_17_80)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x52032 (* ?x51972 l_0_17_79)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x52030 (* ?x51969 l_0_17_78)))
 (let ((?x52028 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x52025 (* ?x49264 l_0_17_98)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x52023 (* ?x49261 l_0_17_97)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x52021 (* ?x49258 l_0_17_96)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x52020 (* ?x49249 l_0_17_95)))
 (let ((?x52029 (+ (+ (+ (+ ?x52020 ?x52021) ?x52023) ?x52025) ?x52028)))
 (= (- (- (- (- (- ?x52029 ?x52030) ?x52032) ?x52034) ?x52036) ?x52038) 0.0))))))))))))))))))))))
(assert
 (let ((?x52087 (* l_0_17_77 l_0_17_77)))
 (let ((?x52085 (* l_0_17_76 l_0_17_76)))
 (let ((?x52083 (* l_0_17_75 l_0_17_75)))
 (let ((?x52081 (* l_0_17_74 l_0_17_74)))
 (let ((?x52079 (* l_0_17_73 l_0_17_73)))
 (let ((?x52077 (* l_0_17_72 l_0_17_72)))
 (let ((?x52075 (* l_0_17_105 l_0_17_105)))
 (let ((?x52073 (* l_0_17_104 l_0_17_104)))
 (let ((?x52071 (* l_0_17_103 l_0_17_103)))
 (let ((?x52069 (* l_0_17_102 l_0_17_102)))
 (let ((?x52070 (+ (+ (* l_0_17_100 l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x52069)))
 (let ((?x52084 (- (- (- (- (+ (+ (+ ?x52070 ?x52071) ?x52073) ?x52075) ?x52077) ?x52079) ?x52081) ?x52083)))
 (= (- (- ?x52084 ?x52085) ?x52087) 0.0))))))))))))))
(assert
 (let ((?x52130 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x52127 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x52124 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x52121 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x52118 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x52115 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x52112 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x52109 (* ?x51966 l_0_17_110)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x52107 (* ?x49652 l_0_17_109)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x52105 (* ?x49649 l_0_17_108)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x52103 (* ?x49634 l_0_17_107)))
 (let ((?x52110 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_106) ?x52103) ?x52105) ?x52107) ?x52109)))
 (let ((?x52113 (+ ?x52110 ?x52112)))
 (= (- (- (- (- (- (- ?x52113 ?x52115) ?x52118) ?x52121) ?x52124) ?x52127) ?x52130) 0.0)))))))))))))))))))
(assert
 (let ((?x52195 (* l_0_17_84 l_0_17_84)))
 (let ((?x52193 (* l_0_17_83 l_0_17_83)))
 (let ((?x52191 (* l_0_17_82 l_0_17_82)))
 (let ((?x52189 (* l_0_17_81 l_0_17_81)))
 (let ((?x52187 (* l_0_17_80 l_0_17_80)))
 (let ((?x52185 (* l_0_17_79 l_0_17_79)))
 (let ((?x52183 (* l_0_17_78 l_0_17_78)))
 (let ((?x52181 (* l_0_17_112 l_0_17_112)))
 (let ((?x52179 (* l_0_17_111 l_0_17_111)))
 (let ((?x52177 (* l_0_17_110 l_0_17_110)))
 (let ((?x52175 (* l_0_17_109 l_0_17_109)))
 (let ((?x52173 (* l_0_17_108 l_0_17_108)))
 (let ((?x52174 (+ (+ (* l_0_17_106 l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52173)))
 (let ((?x52182 (+ (+ (+ (+ ?x52174 ?x52175) ?x52177) ?x52179) ?x52181)))
 (let ((?x52196 (- (- (- (- (- (- (- ?x52182 ?x52183) ?x52185) ?x52187) ?x52189) ?x52191) ?x52193) ?x52195)))
 (= ?x52196 0.0)))))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51713 (* ?x49148 l_0_17_86)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x52235 (* ?x49145 l_0_17_58)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49140 (* ?x49139 l_0_17_142)))
 (let ((?x52214 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_114) ?x49140) (* (* 2.0 l_0_17_169) l_0_17_170))))
 (let ((?x52218 (- (- ?x52214 (* (* 2.0 l_0_17_198) l_0_17_207)) (* (* 2.0 l_0_17_199) l_0_17_208))))
 (let ((?x52222 (- (- ?x52218 (* (* 2.0 l_0_17_226) l_0_17_235)) (* (* 2.0 l_0_17_227) l_0_17_236))))
 (let ((?x52226 (- (- ?x52222 (* (* 2.0 l_0_17_254) l_0_17_263)) (* (* 2.0 l_0_17_255) l_0_17_264))))
 (let ((?x52230 (- (- ?x52226 (* (* 2.0 l_0_17_282) l_0_17_291)) (* (* 2.0 l_0_17_283) l_0_17_292))))
 (let ((?x52234 (- (- ?x52230 (* (* 2.0 l_0_17_310) l_0_17_319)) (* (* 2.0 l_0_17_311) l_0_17_320))))
 (= (+ (- ?x52234 ?x52235) ?x51713) 0.0))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x49149 (* ?x49148 l_0_17_91)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x49146 (* ?x49145 l_0_17_63)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49241 (* ?x49139 l_0_17_147)))
 (let ((?x52282 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_119) ?x49241) (* (* 2.0 l_0_17_169) l_0_17_175))))
 (let ((?x52286 (- (- ?x52282 (* (* 2.0 l_0_17_203) l_0_17_207)) (* (* 2.0 l_0_17_204) l_0_17_208))))
 (let ((?x52290 (- (- ?x52286 (* (* 2.0 l_0_17_205) l_0_17_209)) (* (* 2.0 l_0_17_206) l_0_17_210))))
 (let ((?x52294 (- (- ?x52290 (* (* 2.0 l_0_17_231) l_0_17_235)) (* (* 2.0 l_0_17_232) l_0_17_236))))
 (let ((?x52298 (- (- ?x52294 (* (* 2.0 l_0_17_233) l_0_17_237)) (* (* 2.0 l_0_17_234) l_0_17_238))))
 (let ((?x52302 (- (- ?x52298 (* (* 2.0 l_0_17_259) l_0_17_263)) (* (* 2.0 l_0_17_260) l_0_17_264))))
 (let ((?x52306 (- (- ?x52302 (* (* 2.0 l_0_17_261) l_0_17_265)) (* (* 2.0 l_0_17_262) l_0_17_266))))
 (let ((?x52310 (- (- ?x52306 (* (* 2.0 l_0_17_287) l_0_17_291)) (* (* 2.0 l_0_17_288) l_0_17_292))))
 (let ((?x52314 (- (- ?x52310 (* (* 2.0 l_0_17_289) l_0_17_293)) (* (* 2.0 l_0_17_290) l_0_17_294))))
 (let ((?x52318 (- (- ?x52314 (* (* 2.0 l_0_17_315) l_0_17_319)) (* (* 2.0 l_0_17_316) l_0_17_320))))
 (let ((?x52322 (- (- ?x52318 (* (* 2.0 l_0_17_317) l_0_17_321)) (* (* 2.0 l_0_17_318) l_0_17_322))))
 (= (+ (- ?x52322 ?x49146) ?x49149) 0.0)))))))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51741 (* ?x49148 l_0_17_95)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51735 (* ?x49145 l_0_17_67)))
 (let ((?x52416 (* l_0_17_323 l_0_17_323)))
 (let ((?x52414 (* l_0_17_322 l_0_17_322)))
 (let ((?x52412 (* l_0_17_321 l_0_17_321)))
 (let ((?x52410 (* l_0_17_320 l_0_17_320)))
 (let ((?x52408 (* l_0_17_319 l_0_17_319)))
 (let ((?x52406 (* l_0_17_295 l_0_17_295)))
 (let ((?x52404 (* l_0_17_294 l_0_17_294)))
 (let ((?x52402 (* l_0_17_293 l_0_17_293)))
 (let ((?x52400 (* l_0_17_292 l_0_17_292)))
 (let ((?x52398 (* l_0_17_291 l_0_17_291)))
 (let ((?x52396 (* l_0_17_267 l_0_17_267)))
 (let ((?x52394 (* l_0_17_266 l_0_17_266)))
 (let ((?x52392 (* l_0_17_265 l_0_17_265)))
 (let ((?x52390 (* l_0_17_264 l_0_17_264)))
 (let ((?x52388 (* l_0_17_263 l_0_17_263)))
 (let ((?x52386 (* l_0_17_239 l_0_17_239)))
 (let ((?x52384 (* l_0_17_238 l_0_17_238)))
 (let ((?x52382 (* l_0_17_237 l_0_17_237)))
 (let ((?x52380 (* l_0_17_236 l_0_17_236)))
 (let ((?x52378 (* l_0_17_235 l_0_17_235)))
 (let ((?x52376 (* l_0_17_211 l_0_17_211)))
 (let ((?x52374 (* l_0_17_210 l_0_17_210)))
 (let ((?x52372 (* l_0_17_209 l_0_17_209)))
 (let ((?x52370 (* l_0_17_208 l_0_17_208)))
 (let ((?x52368 (* l_0_17_207 l_0_17_207)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49279 (* ?x49139 l_0_17_151)))
 (let ((?x52367 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_123) ?x49279) (* (* 2.0 l_0_17_169) l_0_17_179))))
 (let ((?x52381 (- (- (- (- (- (- (- ?x52367 ?x52368) ?x52370) ?x52372) ?x52374) ?x52376) ?x52378) ?x52380)))
 (let ((?x52395 (- (- (- (- (- (- (- ?x52381 ?x52382) ?x52384) ?x52386) ?x52388) ?x52390) ?x52392) ?x52394)))
 (let ((?x52409 (- (- (- (- (- (- (- ?x52395 ?x52396) ?x52398) ?x52400) ?x52402) ?x52404) ?x52406) ?x52408)))
 (= (+ (- (- (- (- (- ?x52409 ?x52410) ?x52412) ?x52414) ?x52416) ?x51735) ?x51741) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51741 (* ?x49148 l_0_17_95)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51782 (* ?x49145 l_0_17_72)))
 (let ((?x51735 (* ?x49145 l_0_17_67)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x49388 (* ?x49139 l_0_17_156)))
 (let ((?x39326 (* 2.0 l_0_17_100)))
 (let ((?x51774 (* ?x39326 l_0_17_85)))
 (let ((?x52450 (- (- (- ?x51774 (* (* 2.0 l_0_17_113) l_0_17_128)) ?x49388) (* (* 2.0 l_0_17_169) l_0_17_184))))
 (let ((?x52456 (- (- ?x52450 (* (* 2.0 l_0_17_207) l_0_17_212)) (* (* 2.0 l_0_17_208) l_0_17_213))))
 (let ((?x52462 (- (- ?x52456 (* (* 2.0 l_0_17_209) l_0_17_214)) (* (* 2.0 l_0_17_210) l_0_17_215))))
 (let ((?x52468 (- (- ?x52462 (* (* 2.0 l_0_17_211) l_0_17_216)) (* (* 2.0 l_0_17_235) l_0_17_240))))
 (let ((?x52474 (- (- ?x52468 (* (* 2.0 l_0_17_236) l_0_17_241)) (* (* 2.0 l_0_17_237) l_0_17_242))))
 (let ((?x52480 (- (- ?x52474 (* (* 2.0 l_0_17_238) l_0_17_243)) (* (* 2.0 l_0_17_239) l_0_17_244))))
 (let ((?x52486 (- (- ?x52480 (* (* 2.0 l_0_17_263) l_0_17_268)) (* (* 2.0 l_0_17_264) l_0_17_269))))
 (let ((?x52492 (- (- ?x52486 (* (* 2.0 l_0_17_265) l_0_17_270)) (* (* 2.0 l_0_17_266) l_0_17_271))))
 (let ((?x52498 (- (- ?x52492 (* (* 2.0 l_0_17_267) l_0_17_272)) (* (* 2.0 l_0_17_291) l_0_17_296))))
 (let ((?x52504 (- (- ?x52498 (* (* 2.0 l_0_17_292) l_0_17_297)) (* (* 2.0 l_0_17_293) l_0_17_298))))
 (let ((?x52510 (- (- ?x52504 (* (* 2.0 l_0_17_294) l_0_17_299)) (* (* 2.0 l_0_17_295) l_0_17_300))))
 (let ((?x52516 (- (- ?x52510 (* (* 2.0 l_0_17_319) l_0_17_324)) (* (* 2.0 l_0_17_320) l_0_17_325))))
 (let ((?x52522 (- (- ?x52516 (* (* 2.0 l_0_17_321) l_0_17_326)) (* (* 2.0 l_0_17_322) l_0_17_327))))
 (let ((?x52528 (- (- (+ (- ?x52522 (* (* 2.0 l_0_17_323) l_0_17_328)) ?x51735) ?x51782) ?x51741)))
 (= ?x52528 0.0)))))))))))))))))))))))))
(assert
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51795 (* ?x49145 l_0_17_78)))
 (let ((?x49139 (* 2.0 l_0_17_141)))
 (let ((?x39221 (* ?x49139 l_0_17_162)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x51794 (* ?x49249 l_0_17_85)))
 (let ((?x52582 (- (- (- ?x51794 (* (* 2.0 l_0_17_113) l_0_17_134)) ?x39221) (* (* 2.0 l_0_17_169) l_0_17_190))))
 (let ((?x52586 (- (- ?x52582 (* (* 2.0 l_0_17_207) l_0_17_218)) (* (* 2.0 l_0_17_208) l_0_17_219))))
 (let ((?x52590 (- (- ?x52586 (* (* 2.0 l_0_17_209) l_0_17_220)) (* (* 2.0 l_0_17_210) l_0_17_221))))
 (let ((?x52594 (- (- ?x52590 (* (* 2.0 l_0_17_211) l_0_17_222)) (* (* 2.0 l_0_17_235) l_0_17_246))))
 (let ((?x52598 (- (- ?x52594 (* (* 2.0 l_0_17_236) l_0_17_247)) (* (* 2.0 l_0_17_237) l_0_17_248))))
 (let ((?x52602 (- (- ?x52598 (* (* 2.0 l_0_17_238) l_0_17_249)) (* (* 2.0 l_0_17_239) l_0_17_250))))
 (let ((?x52606 (- (- ?x52602 (* (* 2.0 l_0_17_263) l_0_17_274)) (* (* 2.0 l_0_17_264) l_0_17_275))))
 (let ((?x52610 (- (- ?x52606 (* (* 2.0 l_0_17_265) l_0_17_276)) (* (* 2.0 l_0_17_266) l_0_17_277))))
 (let ((?x52614 (- (- ?x52610 (* (* 2.0 l_0_17_267) l_0_17_278)) (* (* 2.0 l_0_17_291) l_0_17_302))))
 (let ((?x52618 (- (- ?x52614 (* (* 2.0 l_0_17_292) l_0_17_303)) (* (* 2.0 l_0_17_293) l_0_17_304))))
 (let ((?x52622 (- (- ?x52618 (* (* 2.0 l_0_17_294) l_0_17_305)) (* (* 2.0 l_0_17_295) l_0_17_306))))
 (let ((?x52626 (- (- ?x52622 (* (* 2.0 l_0_17_319) l_0_17_330)) (* (* 2.0 l_0_17_320) l_0_17_331))))
 (let ((?x52630 (- (- ?x52626 (* (* 2.0 l_0_17_321) l_0_17_332)) (* (* 2.0 l_0_17_322) l_0_17_333))))
 (= (- (- ?x52630 (* (* 2.0 l_0_17_323) l_0_17_334)) ?x51795) 0.0)))))))))))))))))))))
(assert
 (let ((?x51810 (* l_0_17_87 l_0_17_87)))
 (let ((?x51808 (* l_0_17_86 l_0_17_86)))
 (let ((?x51806 (* l_0_17_59 l_0_17_59)))
 (let ((?x51814 (* l_0_17_58 l_0_17_58)))
 (let ((?x50887 (* l_0_17_171 l_0_17_171)))
 (let ((?x50885 (* l_0_17_170 l_0_17_170)))
 (let ((?x49406 (* l_0_17_143 l_0_17_143)))
 (let ((?x49404 (* l_0_17_142 l_0_17_142)))
 (let ((?x52678 (- (- (* (- l_0_17_114) l_0_17_114) (* l_0_17_115 l_0_17_115)) ?x49404)))
 (let ((?x52685 (+ (+ (- (- (- (- (- ?x52678 ?x49406) ?x50885) ?x50887) ?x51814) ?x51806) ?x51808) ?x51810)))
 (= ?x52685 0.0))))))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x49432 (* ?x49431 l_0_17_92)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x49429 (* ?x49428 l_0_17_91)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x49426 (* ?x49425 l_0_17_64)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x49423 (* ?x49422 l_0_17_63)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49514 (* ?x49457 l_0_17_148)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49512 (* ?x49455 l_0_17_147)))
 (let ((?x52699 (- (* (* (- 2.0) l_0_17_114) l_0_17_119) (* (* 2.0 l_0_17_115) l_0_17_120))))
 (let ((?x52705 (- (- (- (- ?x52699 ?x49512) ?x49514) (* (* 2.0 l_0_17_170) l_0_17_175)) (* (* 2.0 l_0_17_171) l_0_17_176))))
 (= (+ (+ (- (- ?x52705 ?x49423) ?x49426) ?x49429) ?x49432) 0.0))))))))))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x51838 (* ?x49431 l_0_17_96)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x51836 (* ?x49428 l_0_17_95)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51834 (* ?x49425 l_0_17_68)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x33273 (* ?x49422 l_0_17_67)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49576 (* ?x49457 l_0_17_152)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49574 (* ?x49455 l_0_17_151)))
 (let ((?x42904 (- (* (* (- 2.0) l_0_17_114) l_0_17_123) (* (* 2.0 l_0_17_115) l_0_17_124))))
 (let ((?x6040 (- (- (- (- ?x42904 ?x49574) ?x49576) (* (* 2.0 l_0_17_170) l_0_17_179)) (* (* 2.0 l_0_17_171) l_0_17_180))))
 (= (+ (+ (- (- ?x6040 ?x33273) ?x51834) ?x51836) ?x51838) 0.0))))))))))))))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x51838 (* ?x49431 l_0_17_96)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x51836 (* ?x49428 l_0_17_95)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51861 (* ?x49425 l_0_17_73)))
 (let ((?x51834 (* ?x49425 l_0_17_68)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51859 (* ?x49422 l_0_17_72)))
 (let ((?x33273 (* ?x49422 l_0_17_67)))
 (let ((?x49457 (* 2.0 l_0_17_143)))
 (let ((?x49657 (* ?x49457 l_0_17_157)))
 (let ((?x49455 (* 2.0 l_0_17_142)))
 (let ((?x49655 (* ?x49455 l_0_17_156)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51852 (* ?x49634 l_0_17_87)))
 (let ((?x51853 (+ (* (* 2.0 l_0_17_100) l_0_17_86) ?x51852)))
 (let ((?x33287 (- (- ?x51853 (* (* 2.0 l_0_17_114) l_0_17_128)) (* (* 2.0 l_0_17_115) l_0_17_129))))
 (let ((?x42936 (- (- (- (- ?x33287 ?x49655) ?x49657) (* (* 2.0 l_0_17_170) l_0_17_184)) (* (* 2.0 l_0_17_171) l_0_17_185))))
 (= (- (- (- (+ (- (+ ?x42936 ?x33273) ?x51859) ?x51834) ?x51861) ?x51836) ?x51838) 0.0)))))))))))))))))))))
(assert
 (let ((?x49548 (* l_0_17_94 l_0_17_94)))
 (let ((?x49546 (* l_0_17_93 l_0_17_93)))
 (let ((?x49544 (* l_0_17_92 l_0_17_92)))
 (let ((?x49542 (* l_0_17_91 l_0_17_91)))
 (let ((?x49540 (* l_0_17_66 l_0_17_66)))
 (let ((?x49538 (* l_0_17_65 l_0_17_65)))
 (let ((?x49536 (* l_0_17_64 l_0_17_64)))
 (let ((?x49534 (* l_0_17_63 l_0_17_63)))
 (let ((?x51143 (* l_0_17_178 l_0_17_178)))
 (let ((?x51140 (* l_0_17_177 l_0_17_177)))
 (let ((?x51137 (* l_0_17_176 l_0_17_176)))
 (let ((?x29920 (* l_0_17_175 l_0_17_175)))
 (let ((?x49948 (* l_0_17_150 l_0_17_150)))
 (let ((?x49946 (* l_0_17_149 l_0_17_149)))
 (let ((?x49944 (* l_0_17_148 l_0_17_148)))
 (let ((?x49942 (* l_0_17_147 l_0_17_147)))
 (let ((?x52762 (* l_0_17_122 l_0_17_122)))
 (let ((?x52760 (* l_0_17_121 l_0_17_121)))
 (let ((?x52761 (- (- (* (- l_0_17_119) l_0_17_119) (* l_0_17_120 l_0_17_120)) ?x52760)))
 (let ((?x52769 (- (- (- (- (- (- (- ?x52761 ?x52762) ?x49942) ?x49944) ?x49946) ?x49948) ?x29920) ?x51137)))
 (let ((?x52776 (+ (- (- (- (- (- (- ?x52769 ?x51140) ?x51143) ?x49534) ?x49536) ?x49538) ?x49540) ?x49542)))
 (= (+ (+ (+ ?x52776 ?x49544) ?x49546) ?x49548) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49600 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49597 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49594 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49591 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49588 (* ?x49316 l_0_17_70)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49586 (* ?x49313 l_0_17_69)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49584 (* ?x49310 l_0_17_68)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49582 (* ?x49307 l_0_17_67)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x49991 (* ?x49290 l_0_17_154)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x49989 (* ?x49287 l_0_17_153)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x49987 (* ?x49284 l_0_17_152)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x49985 (* ?x49281 l_0_17_151)))
 (let ((?x6261 (- (* (* (- 2.0) l_0_17_119) l_0_17_123) (* (* 2.0 l_0_17_120) l_0_17_124))))
 (let ((?x52790 (- (- ?x6261 (* (* 2.0 l_0_17_121) l_0_17_125)) (* (* 2.0 l_0_17_122) l_0_17_126))))
 (let ((?x52796 (- (- (- (- (- ?x52790 ?x49985) ?x49987) ?x49989) ?x49991) (* (* 2.0 l_0_17_175) l_0_17_179))))
 (let ((?x52800 (- (- ?x52796 (* (* 2.0 l_0_17_176) l_0_17_180)) (* (* 2.0 l_0_17_177) l_0_17_181))))
 (let ((?x52805 (- (- (- (- ?x52800 (* (* 2.0 l_0_17_178) l_0_17_182)) ?x49582) ?x49584) ?x49586)))
 (= (+ (+ (+ (+ (- ?x52805 ?x49588) ?x49591) ?x49594) ?x49597) ?x49600) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49600 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49597 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49594 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49591 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49675 (* ?x49316 l_0_17_75)))
 (let ((?x49588 (* ?x49316 l_0_17_70)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49673 (* ?x49313 l_0_17_74)))
 (let ((?x49586 (* ?x49313 l_0_17_69)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49671 (* ?x49310 l_0_17_73)))
 (let ((?x49584 (* ?x49310 l_0_17_68)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49669 (* ?x49307 l_0_17_72)))
 (let ((?x49582 (* ?x49307 l_0_17_67)))
 (let ((?x49290 (* 2.0 l_0_17_150)))
 (let ((?x50022 (* ?x49290 l_0_17_159)))
 (let ((?x49287 (* 2.0 l_0_17_149)))
 (let ((?x50020 (* ?x49287 l_0_17_158)))
 (let ((?x49284 (* 2.0 l_0_17_148)))
 (let ((?x50018 (* ?x49284 l_0_17_157)))
 (let ((?x49281 (* 2.0 l_0_17_147)))
 (let ((?x50016 (* ?x49281 l_0_17_156)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x49653 (* ?x49652 l_0_17_94)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x49650 (* ?x49649 l_0_17_93)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x49636 (* ?x49634 l_0_17_92)))
 (let ((?x49654 (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_91) ?x49636) ?x49650) ?x49653)))
 (let ((?x43013 (- (- ?x49654 (* (* 2.0 l_0_17_119) l_0_17_128)) (* (* 2.0 l_0_17_120) l_0_17_129))))
 (let ((?x43003 (- (- ?x43013 (* (* 2.0 l_0_17_121) l_0_17_130)) (* (* 2.0 l_0_17_122) l_0_17_131))))
 (let ((?x52827 (- (- (- (- (- ?x43003 ?x50016) ?x50018) ?x50020) ?x50022) (* (* 2.0 l_0_17_175) l_0_17_184))))
 (let ((?x52831 (- (- ?x52827 (* (* 2.0 l_0_17_176) l_0_17_185)) (* (* 2.0 l_0_17_177) l_0_17_186))))
 (let ((?x52836 (+ (- (+ (- ?x52831 (* (* 2.0 l_0_17_178) l_0_17_187)) ?x49582) ?x49669) ?x49584)))
 (let ((?x52843 (- (- (- (+ (- (+ (- ?x52836 ?x49671) ?x49586) ?x49673) ?x49588) ?x49675) ?x49591) ?x49594)))
 (= (- (- ?x52843 ?x49597) ?x49600) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51938 (* l_0_17_99 l_0_17_99)))
 (let ((?x51936 (* l_0_17_98 l_0_17_98)))
 (let ((?x51934 (* l_0_17_97 l_0_17_97)))
 (let ((?x51932 (* l_0_17_96 l_0_17_96)))
 (let ((?x51930 (* l_0_17_95 l_0_17_95)))
 (let ((?x51928 (* l_0_17_71 l_0_17_71)))
 (let ((?x51926 (* l_0_17_70 l_0_17_70)))
 (let ((?x51924 (* l_0_17_69 l_0_17_69)))
 (let ((?x51922 (* l_0_17_68 l_0_17_68)))
 (let ((?x51942 (* l_0_17_67 l_0_17_67)))
 (let ((?x51290 (* l_0_17_183 l_0_17_183)))
 (let ((?x51287 (* l_0_17_182 l_0_17_182)))
 (let ((?x51284 (* l_0_17_181 l_0_17_181)))
 (let ((?x51281 (* l_0_17_180 l_0_17_180)))
 (let ((?x51278 (* l_0_17_179 l_0_17_179)))
 (let ((?x50093 (* l_0_17_155 l_0_17_155)))
 (let ((?x50091 (* l_0_17_154 l_0_17_154)))
 (let ((?x50089 (* l_0_17_153 l_0_17_153)))
 (let ((?x50087 (* l_0_17_152 l_0_17_152)))
 (let ((?x50085 (* l_0_17_151 l_0_17_151)))
 (let ((?x52892 (* l_0_17_127 l_0_17_127)))
 (let ((?x52890 (* l_0_17_126 l_0_17_126)))
 (let ((?x52888 (* l_0_17_125 l_0_17_125)))
 (let ((?x52889 (- (- (* (- l_0_17_123) l_0_17_123) (* l_0_17_124 l_0_17_124)) ?x52888)))
 (let ((?x52898 (- (- (- (- (- (- (- ?x52889 ?x52890) ?x52892) ?x50085) ?x50087) ?x50089) ?x50091) ?x50093)))
 (let ((?x52905 (- (- (- (- (- (- (- ?x52898 ?x51278) ?x51281) ?x51284) ?x51287) ?x51290) ?x51942) ?x51922)))
 (let ((?x52912 (+ (+ (+ (+ (- (- (- ?x52905 ?x51924) ?x51926) ?x51928) ?x51930) ?x51932) ?x51934) ?x51936)))
 (= (+ ?x52912 ?x51938) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x51938 (* l_0_17_99 l_0_17_99)))
 (let ((?x51936 (* l_0_17_98 l_0_17_98)))
 (let ((?x51934 (* l_0_17_97 l_0_17_97)))
 (let ((?x51932 (* l_0_17_96 l_0_17_96)))
 (let ((?x51930 (* l_0_17_95 l_0_17_95)))
 (let ((?x51928 (* l_0_17_71 l_0_17_71)))
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x51982 (* ?x51981 l_0_17_76)))
 (let ((?x51926 (* l_0_17_70 l_0_17_70)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x51979 (* ?x51978 l_0_17_75)))
 (let ((?x51924 (* l_0_17_69 l_0_17_69)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x51976 (* ?x51975 l_0_17_74)))
 (let ((?x51922 (* l_0_17_68 l_0_17_68)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x51973 (* ?x51972 l_0_17_73)))
 (let ((?x51942 (* l_0_17_67 l_0_17_67)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x51970 (* ?x51969 l_0_17_72)))
 (let ((?x50147 (* 2.0 l_0_17_155)))
 (let ((?x50148 (* ?x50147 l_0_17_160)))
 (let ((?x50144 (* 2.0 l_0_17_154)))
 (let ((?x50145 (* ?x50144 l_0_17_159)))
 (let ((?x50141 (* 2.0 l_0_17_153)))
 (let ((?x50142 (* ?x50141 l_0_17_158)))
 (let ((?x50138 (* 2.0 l_0_17_152)))
 (let ((?x50139 (* ?x50138 l_0_17_157)))
 (let ((?x50135 (* 2.0 l_0_17_151)))
 (let ((?x50136 (* ?x50135 l_0_17_156)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x51967 (* ?x51966 l_0_17_99)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x51964 (* ?x49652 l_0_17_98)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51962 (* ?x49649 l_0_17_97)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51960 (* ?x49634 l_0_17_96)))
 (let ((?x51968 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_95) ?x51960) ?x51962) ?x51964) ?x51967)))
 (let ((?x43089 (- (- ?x51968 (* (* 2.0 l_0_17_123) l_0_17_128)) (* (* 2.0 l_0_17_124) l_0_17_129))))
 (let ((?x22624 (- (- ?x43089 (* (* 2.0 l_0_17_125) l_0_17_130)) (* (* 2.0 l_0_17_126) l_0_17_131))))
 (let ((?x43127 (- (- (- (- ?x22624 (* (* 2.0 l_0_17_127) l_0_17_132)) ?x50136) ?x50139) ?x50142)))
 (let ((?x42356 (- (- (- (- ?x43127 ?x50145) ?x50148) (* (* 2.0 l_0_17_179) l_0_17_184)) (* (* 2.0 l_0_17_180) l_0_17_185))))
 (let ((?x22612 (- (- ?x42356 (* (* 2.0 l_0_17_181) l_0_17_186)) (* (* 2.0 l_0_17_182) l_0_17_187))))
 (let ((?x52932 (- (+ (- (- ?x22612 (* (* 2.0 l_0_17_183) l_0_17_188)) ?x51970) ?x51942) ?x51973)))
 (let ((?x52939 (+ (- (+ (- (+ (- (+ ?x52932 ?x51922) ?x51976) ?x51924) ?x51979) ?x51926) ?x51982) ?x51928)))
 (= (- (- (- (- (- ?x52939 ?x51930) ?x51932) ?x51934) ?x51936) ?x51938) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x52038 (* ?x51981 l_0_17_82)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x52036 (* ?x51978 l_0_17_81)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x52034 (* ?x51975 l_0_17_80)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x52032 (* ?x51972 l_0_17_79)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x52030 (* ?x51969 l_0_17_78)))
 (let ((?x50147 (* 2.0 l_0_17_155)))
 (let ((?x50219 (* ?x50147 l_0_17_166)))
 (let ((?x50144 (* 2.0 l_0_17_154)))
 (let ((?x50217 (* ?x50144 l_0_17_165)))
 (let ((?x50141 (* 2.0 l_0_17_153)))
 (let ((?x50215 (* ?x50141 l_0_17_164)))
 (let ((?x50138 (* 2.0 l_0_17_152)))
 (let ((?x50213 (* ?x50138 l_0_17_163)))
 (let ((?x50135 (* 2.0 l_0_17_151)))
 (let ((?x50211 (* ?x50135 l_0_17_162)))
 (let ((?x52028 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x52025 (* ?x49264 l_0_17_98)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x52023 (* ?x49261 l_0_17_97)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x52021 (* ?x49258 l_0_17_96)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x52020 (* ?x49249 l_0_17_95)))
 (let ((?x52029 (+ (+ (+ (+ ?x52020 ?x52021) ?x52023) ?x52025) ?x52028)))
 (let ((?x53012 (- (- ?x52029 (* (* 2.0 l_0_17_123) l_0_17_134)) (* (* 2.0 l_0_17_124) l_0_17_135))))
 (let ((?x53016 (- (- ?x53012 (* (* 2.0 l_0_17_125) l_0_17_136)) (* (* 2.0 l_0_17_126) l_0_17_137))))
 (let ((?x53021 (- (- (- (- ?x53016 (* (* 2.0 l_0_17_127) l_0_17_138)) ?x50211) ?x50213) ?x50215)))
 (let ((?x53027 (- (- (- (- ?x53021 ?x50217) ?x50219) (* (* 2.0 l_0_17_179) l_0_17_190)) (* (* 2.0 l_0_17_180) l_0_17_191))))
 (let ((?x53031 (- (- ?x53027 (* (* 2.0 l_0_17_181) l_0_17_192)) (* (* 2.0 l_0_17_182) l_0_17_193))))
 (let ((?x53036 (- (- (- (- ?x53031 (* (* 2.0 l_0_17_183) l_0_17_194)) ?x52030) ?x52032) ?x52034)))
 (= (- (- ?x53036 ?x52036) ?x52038) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52087 (* l_0_17_77 l_0_17_77)))
 (let ((?x52085 (* l_0_17_76 l_0_17_76)))
 (let ((?x52083 (* l_0_17_75 l_0_17_75)))
 (let ((?x52081 (* l_0_17_74 l_0_17_74)))
 (let ((?x52079 (* l_0_17_73 l_0_17_73)))
 (let ((?x52077 (* l_0_17_72 l_0_17_72)))
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x51982 (* ?x51981 l_0_17_76)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x51979 (* ?x51978 l_0_17_75)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x51976 (* ?x51975 l_0_17_74)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x51973 (* ?x51972 l_0_17_73)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x51970 (* ?x51969 l_0_17_72)))
 (let ((?x51572 (* l_0_17_189 l_0_17_189)))
 (let ((?x51569 (* l_0_17_188 l_0_17_188)))
 (let ((?x51566 (* l_0_17_187 l_0_17_187)))
 (let ((?x51563 (* l_0_17_186 l_0_17_186)))
 (let ((?x51560 (* l_0_17_185 l_0_17_185)))
 (let ((?x51557 (* l_0_17_184 l_0_17_184)))
 (let ((?x50261 (* l_0_17_161 l_0_17_161)))
 (let ((?x50247 (* l_0_17_160 l_0_17_160)))
 (let ((?x39700 (* l_0_17_159 l_0_17_159)))
 (let ((?x39702 (* l_0_17_158 l_0_17_158)))
 (let ((?x29831 (* l_0_17_157 l_0_17_157)))
 (let ((?x29407 (* l_0_17_156 l_0_17_156)))
 (let ((?x53059 (* l_0_17_133 l_0_17_133)))
 (let ((?x53057 (* l_0_17_132 l_0_17_132)))
 (let ((?x53055 (* l_0_17_131 l_0_17_131)))
 (let ((?x53053 (* l_0_17_130 l_0_17_130)))
 (let ((?x53051 (* l_0_17_129 l_0_17_129)))
 (let ((?x53049 (* l_0_17_128 l_0_17_128)))
 (let ((?x52075 (* l_0_17_105 l_0_17_105)))
 (let ((?x52073 (* l_0_17_104 l_0_17_104)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x51967 (* ?x51966 l_0_17_99)))
 (let ((?x52071 (* l_0_17_103 l_0_17_103)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x51964 (* ?x49652 l_0_17_98)))
 (let ((?x52069 (* l_0_17_102 l_0_17_102)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x51962 (* ?x49649 l_0_17_97)))
 (let ((?x52067 (* l_0_17_101 l_0_17_101)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51960 (* ?x49634 l_0_17_96)))
 (let ((?x52066 (* l_0_17_100 l_0_17_100)))
 (let ((?x22779 (- (+ (- (+ (* (* (- 2.0) l_0_17_100) l_0_17_95) ?x52066) ?x51960) ?x52067) ?x51962)))
 (let ((?x53050 (- (+ (+ (- (+ (- (+ ?x22779 ?x52069) ?x51964) ?x52071) ?x51967) ?x52073) ?x52075) ?x53049)))
 (let ((?x53062 (- (- (- (- (- (- (- ?x53050 ?x53051) ?x53053) ?x53055) ?x53057) ?x53059) ?x29407) ?x29831)))
 (let ((?x53069 (- (- (- (- (- (- (- ?x53062 ?x39702) ?x39700) ?x50247) ?x50261) ?x51557) ?x51560) ?x51563)))
 (let ((?x53076 (+ (+ (+ (+ (- (- (- ?x53069 ?x51566) ?x51569) ?x51572) ?x51970) ?x51973) ?x51976) ?x51979)))
 (let ((?x53083 (- (- (- (- (- (- (+ ?x53076 ?x51982) ?x52077) ?x52079) ?x52081) ?x52083) ?x52085) ?x52087)))
 (= ?x53083 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52130 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x52127 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x52124 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x52121 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x52118 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x52115 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x51981 (* 2.0 l_0_17_71)))
 (let ((?x52038 (* ?x51981 l_0_17_82)))
 (let ((?x51978 (* 2.0 l_0_17_70)))
 (let ((?x52036 (* ?x51978 l_0_17_81)))
 (let ((?x51975 (* 2.0 l_0_17_69)))
 (let ((?x52034 (* ?x51975 l_0_17_80)))
 (let ((?x51972 (* 2.0 l_0_17_68)))
 (let ((?x52032 (* ?x51972 l_0_17_79)))
 (let ((?x51969 (* 2.0 l_0_17_67)))
 (let ((?x52030 (* ?x51969 l_0_17_78)))
 (let ((?x50319 (* (* 2.0 l_0_17_161) l_0_17_167)))
 (let ((?x50316 (* (* 2.0 l_0_17_160) l_0_17_166)))
 (let ((?x50311 (* (* 2.0 l_0_17_159) l_0_17_165)))
 (let ((?x50308 (* (* 2.0 l_0_17_158) l_0_17_164)))
 (let ((?x50305 (* (* 2.0 l_0_17_157) l_0_17_163)))
 (let ((?x50303 (* (* 2.0 l_0_17_156) l_0_17_162)))
 (let ((?x52028 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49264 (* 2.0 l_0_17_109)))
 (let ((?x52025 (* ?x49264 l_0_17_98)))
 (let ((?x49261 (* 2.0 l_0_17_108)))
 (let ((?x52023 (* ?x49261 l_0_17_97)))
 (let ((?x49258 (* 2.0 l_0_17_107)))
 (let ((?x52021 (* ?x49258 l_0_17_96)))
 (let ((?x49249 (* 2.0 l_0_17_106)))
 (let ((?x52020 (* ?x49249 l_0_17_95)))
 (let ((?x52112 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x52109 (* ?x51966 l_0_17_110)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x52107 (* ?x49652 l_0_17_109)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x52105 (* ?x49649 l_0_17_108)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x52103 (* ?x49634 l_0_17_107)))
 (let ((?x52110 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_106) ?x52103) ?x52105) ?x52107) ?x52109)))
 (let ((?x52113 (+ ?x52110 ?x52112)))
 (let ((?x53102 (- (- (- (- (- (- ?x52113 ?x52020) ?x52021) ?x52023) ?x52025) ?x52028) (* (* 2.0 l_0_17_128) l_0_17_134))))
 (let ((?x53108 (- (- ?x53102 (* (* 2.0 l_0_17_129) l_0_17_135)) (* (* 2.0 l_0_17_130) l_0_17_136))))
 (let ((?x53114 (- (- ?x53108 (* (* 2.0 l_0_17_131) l_0_17_137)) (* (* 2.0 l_0_17_132) l_0_17_138))))
 (let ((?x53120 (- (- (- (- ?x53114 (* (* 2.0 l_0_17_133) l_0_17_139)) ?x50303) ?x50305) ?x50308)))
 (let ((?x53126 (- (- (- (- ?x53120 ?x50311) ?x50316) ?x50319) (* (* 2.0 l_0_17_184) l_0_17_190))))
 (let ((?x53132 (- (- ?x53126 (* (* 2.0 l_0_17_185) l_0_17_191)) (* (* 2.0 l_0_17_186) l_0_17_192))))
 (let ((?x53138 (- (- ?x53132 (* (* 2.0 l_0_17_187) l_0_17_193)) (* (* 2.0 l_0_17_188) l_0_17_194))))
 (let ((?x53144 (+ (+ (+ (- ?x53138 (* (* 2.0 l_0_17_189) l_0_17_195)) ?x52030) ?x52032) ?x52034)))
 (let ((?x53151 (- (- (- (- (- (+ (+ ?x53144 ?x52036) ?x52038) ?x52115) ?x52118) ?x52121) ?x52124) ?x52127)))
 (= (- ?x53151 ?x52130) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52195 (* l_0_17_84 l_0_17_84)))
 (let ((?x52193 (* l_0_17_83 l_0_17_83)))
 (let ((?x52191 (* l_0_17_82 l_0_17_82)))
 (let ((?x52189 (* l_0_17_81 l_0_17_81)))
 (let ((?x52187 (* l_0_17_80 l_0_17_80)))
 (let ((?x52185 (* l_0_17_79 l_0_17_79)))
 (let ((?x52183 (* l_0_17_78 l_0_17_78)))
 (let ((?x51644 (* l_0_17_196 l_0_17_196)))
 (let ((?x51641 (* l_0_17_195 l_0_17_195)))
 (let ((?x51638 (* l_0_17_194 l_0_17_194)))
 (let ((?x51635 (* l_0_17_193 l_0_17_193)))
 (let ((?x41986 (* l_0_17_192 l_0_17_192)))
 (let ((?x41989 (* l_0_17_191 l_0_17_191)))
 (let ((?x41987 (* l_0_17_190 l_0_17_190)))
 (let ((?x50404 (* l_0_17_168 l_0_17_168)))
 (let ((?x50402 (* l_0_17_167 l_0_17_167)))
 (let ((?x50400 (* l_0_17_166 l_0_17_166)))
 (let ((?x50384 (* l_0_17_165 l_0_17_165)))
 (let ((?x50380 (* l_0_17_164 l_0_17_164)))
 (let ((?x50376 (* l_0_17_163 l_0_17_163)))
 (let ((?x39933 (* l_0_17_162 l_0_17_162)))
 (let ((?x53169 (* l_0_17_140 l_0_17_140)))
 (let ((?x53167 (* l_0_17_139 l_0_17_139)))
 (let ((?x53165 (* l_0_17_138 l_0_17_138)))
 (let ((?x53163 (* l_0_17_137 l_0_17_137)))
 (let ((?x53161 (* l_0_17_136 l_0_17_136)))
 (let ((?x31947 (* l_0_17_135 l_0_17_135)))
 (let ((?x7604 (* l_0_17_134 l_0_17_134)))
 (let ((?x52181 (* l_0_17_112 l_0_17_112)))
 (let ((?x52179 (* l_0_17_111 l_0_17_111)))
 (let ((?x52177 (* l_0_17_110 l_0_17_110)))
 (let ((?x52175 (* l_0_17_109 l_0_17_109)))
 (let ((?x52173 (* l_0_17_108 l_0_17_108)))
 (let ((?x52174 (+ (+ (* l_0_17_106 l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52173)))
 (let ((?x52182 (+ (+ (+ (+ ?x52174 ?x52175) ?x52177) ?x52179) ?x52181)))
 (let ((?x53170 (- (- (- (- (- (- (- ?x52182 ?x7604) ?x31947) ?x53161) ?x53163) ?x53165) ?x53167) ?x53169)))
 (let ((?x53177 (- (- (- (- (- (- (- ?x53170 ?x39933) ?x50376) ?x50380) ?x50384) ?x50400) ?x50402) ?x50404)))
 (let ((?x53184 (- (- (- (- (- (- (- ?x53177 ?x41987) ?x41989) ?x41986) ?x51635) ?x51638) ?x51641) ?x51644)))
 (let ((?x53191 (- (- (- (- (- (- (- ?x53184 ?x52183) ?x52185) ?x52187) ?x52189) ?x52191) ?x52193) ?x52195)))
 (= ?x53191 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x48976 (* l_0_17_85 l_0_17_85)))
 (let ((?x48974 (* l_0_17_57 l_0_17_57)))
 (let ((?x43458 (- (* (* (- 2.0) l_0_17_197) l_0_17_212) (* (* 2.0 l_0_17_225) l_0_17_240))))
 (let ((?x43438 (- (- ?x43458 (* (* 2.0 l_0_17_253) l_0_17_268)) (* (* 2.0 l_0_17_281) l_0_17_296))))
 (= (- (+ (- ?x43438 (* (* 2.0 l_0_17_309) l_0_17_324)) ?x48974) ?x48976) 0.0))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x51713 (* ?x49148 l_0_17_86)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x52235 (* ?x49145 l_0_17_58)))
 (let ((?x53201 (- (* (* (- 2.0) l_0_17_198) l_0_17_212) (* (* 2.0 l_0_17_199) l_0_17_213))))
 (let ((?x53205 (- (- ?x53201 (* (* 2.0 l_0_17_226) l_0_17_240)) (* (* 2.0 l_0_17_227) l_0_17_241))))
 (let ((?x53209 (- (- ?x53205 (* (* 2.0 l_0_17_254) l_0_17_268)) (* (* 2.0 l_0_17_255) l_0_17_269))))
 (let ((?x53213 (- (- ?x53209 (* (* 2.0 l_0_17_282) l_0_17_296)) (* (* 2.0 l_0_17_283) l_0_17_297))))
 (let ((?x53217 (- (- ?x53213 (* (* 2.0 l_0_17_310) l_0_17_324)) (* (* 2.0 l_0_17_311) l_0_17_325))))
 (= (- (+ ?x53217 ?x52235) ?x51713) 0.0)))))))))))
(assert
 (let ((?x49148 (* 2.0 l_0_17_85)))
 (let ((?x49149 (* ?x49148 l_0_17_91)))
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x49146 (* ?x49145 l_0_17_63)))
 (let ((?x53258 (- (* (* (- 2.0) l_0_17_203) l_0_17_212) (* (* 2.0 l_0_17_204) l_0_17_213))))
 (let ((?x53262 (- (- ?x53258 (* (* 2.0 l_0_17_205) l_0_17_214)) (* (* 2.0 l_0_17_206) l_0_17_215))))
 (let ((?x53266 (- (- ?x53262 (* (* 2.0 l_0_17_231) l_0_17_240)) (* (* 2.0 l_0_17_232) l_0_17_241))))
 (let ((?x53270 (- (- ?x53266 (* (* 2.0 l_0_17_233) l_0_17_242)) (* (* 2.0 l_0_17_234) l_0_17_243))))
 (let ((?x53274 (- (- ?x53270 (* (* 2.0 l_0_17_259) l_0_17_268)) (* (* 2.0 l_0_17_260) l_0_17_269))))
 (let ((?x53278 (- (- ?x53274 (* (* 2.0 l_0_17_261) l_0_17_270)) (* (* 2.0 l_0_17_262) l_0_17_271))))
 (let ((?x53282 (- (- ?x53278 (* (* 2.0 l_0_17_287) l_0_17_296)) (* (* 2.0 l_0_17_288) l_0_17_297))))
 (let ((?x53286 (- (- ?x53282 (* (* 2.0 l_0_17_289) l_0_17_298)) (* (* 2.0 l_0_17_290) l_0_17_299))))
 (let ((?x53290 (- (- ?x53286 (* (* 2.0 l_0_17_315) l_0_17_324)) (* (* 2.0 l_0_17_316) l_0_17_325))))
 (let ((?x53294 (- (- ?x53290 (* (* 2.0 l_0_17_317) l_0_17_326)) (* (* 2.0 l_0_17_318) l_0_17_327))))
 (= (- (+ ?x53294 ?x49146) ?x49149) 0.0))))))))))))))))
(assert
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51782 (* ?x49145 l_0_17_72)))
 (let ((?x53418 (* l_0_17_329 l_0_17_329)))
 (let ((?x53416 (* l_0_17_328 l_0_17_328)))
 (let ((?x53414 (* l_0_17_327 l_0_17_327)))
 (let ((?x53412 (* l_0_17_326 l_0_17_326)))
 (let ((?x53410 (* l_0_17_325 l_0_17_325)))
 (let ((?x53408 (* l_0_17_324 l_0_17_324)))
 (let ((?x53406 (* l_0_17_301 l_0_17_301)))
 (let ((?x53404 (* l_0_17_300 l_0_17_300)))
 (let ((?x53402 (* l_0_17_299 l_0_17_299)))
 (let ((?x53400 (* l_0_17_298 l_0_17_298)))
 (let ((?x53398 (* l_0_17_297 l_0_17_297)))
 (let ((?x53396 (* l_0_17_296 l_0_17_296)))
 (let ((?x53394 (* l_0_17_273 l_0_17_273)))
 (let ((?x53392 (* l_0_17_272 l_0_17_272)))
 (let ((?x53390 (* l_0_17_271 l_0_17_271)))
 (let ((?x53388 (* l_0_17_270 l_0_17_270)))
 (let ((?x53386 (* l_0_17_269 l_0_17_269)))
 (let ((?x53384 (* l_0_17_268 l_0_17_268)))
 (let ((?x53382 (* l_0_17_245 l_0_17_245)))
 (let ((?x53380 (* l_0_17_244 l_0_17_244)))
 (let ((?x53378 (* l_0_17_243 l_0_17_243)))
 (let ((?x53376 (* l_0_17_242 l_0_17_242)))
 (let ((?x53374 (* l_0_17_241 l_0_17_241)))
 (let ((?x53372 (* l_0_17_240 l_0_17_240)))
 (let ((?x53370 (* l_0_17_217 l_0_17_217)))
 (let ((?x53368 (* l_0_17_216 l_0_17_216)))
 (let ((?x53366 (* l_0_17_215 l_0_17_215)))
 (let ((?x53364 (* l_0_17_214 l_0_17_214)))
 (let ((?x53362 (* l_0_17_213 l_0_17_213)))
 (let ((?x53360 (* l_0_17_212 l_0_17_212)))
 (let ((?x53367 (- (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_85) ?x53360) ?x53362) ?x53364) ?x53366)))
 (let ((?x53381 (- (- (- (- (- (- (- ?x53367 ?x53368) ?x53370) ?x53372) ?x53374) ?x53376) ?x53378) ?x53380)))
 (let ((?x53395 (- (- (- (- (- (- (- ?x53381 ?x53382) ?x53384) ?x53386) ?x53388) ?x53390) ?x53392) ?x53394)))
 (let ((?x53409 (- (- (- (- (- (- (- ?x53395 ?x53396) ?x53398) ?x53400) ?x53402) ?x53404) ?x53406) ?x53408)))
 (= (+ (- (- (- (- (- ?x53409 ?x53410) ?x53412) ?x53414) ?x53416) ?x53418) ?x51782) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49145 (* 2.0 l_0_17_57)))
 (let ((?x51795 (* ?x49145 l_0_17_78)))
 (let ((?x53479 (- (* (* (- 2.0) l_0_17_106) l_0_17_85) (* (* 2.0 l_0_17_212) l_0_17_218))))
 (let ((?x53485 (- (- ?x53479 (* (* 2.0 l_0_17_213) l_0_17_219)) (* (* 2.0 l_0_17_214) l_0_17_220))))
 (let ((?x53491 (- (- ?x53485 (* (* 2.0 l_0_17_215) l_0_17_221)) (* (* 2.0 l_0_17_216) l_0_17_222))))
 (let ((?x53497 (- (- ?x53491 (* (* 2.0 l_0_17_217) l_0_17_223)) (* (* 2.0 l_0_17_240) l_0_17_246))))
 (let ((?x53503 (- (- ?x53497 (* (* 2.0 l_0_17_241) l_0_17_247)) (* (* 2.0 l_0_17_242) l_0_17_248))))
 (let ((?x53509 (- (- ?x53503 (* (* 2.0 l_0_17_243) l_0_17_249)) (* (* 2.0 l_0_17_244) l_0_17_250))))
 (let ((?x53515 (- (- ?x53509 (* (* 2.0 l_0_17_245) l_0_17_251)) (* (* 2.0 l_0_17_268) l_0_17_274))))
 (let ((?x53521 (- (- ?x53515 (* (* 2.0 l_0_17_269) l_0_17_275)) (* (* 2.0 l_0_17_270) l_0_17_276))))
 (let ((?x53527 (- (- ?x53521 (* (* 2.0 l_0_17_271) l_0_17_277)) (* (* 2.0 l_0_17_272) l_0_17_278))))
 (let ((?x53533 (- (- ?x53527 (* (* 2.0 l_0_17_273) l_0_17_279)) (* (* 2.0 l_0_17_296) l_0_17_302))))
 (let ((?x53539 (- (- ?x53533 (* (* 2.0 l_0_17_297) l_0_17_303)) (* (* 2.0 l_0_17_298) l_0_17_304))))
 (let ((?x53545 (- (- ?x53539 (* (* 2.0 l_0_17_299) l_0_17_305)) (* (* 2.0 l_0_17_300) l_0_17_306))))
 (let ((?x53551 (- (- ?x53545 (* (* 2.0 l_0_17_301) l_0_17_307)) (* (* 2.0 l_0_17_324) l_0_17_330))))
 (let ((?x53557 (- (- ?x53551 (* (* 2.0 l_0_17_325) l_0_17_331)) (* (* 2.0 l_0_17_326) l_0_17_332))))
 (let ((?x53563 (- (- ?x53557 (* (* 2.0 l_0_17_327) l_0_17_333)) (* (* 2.0 l_0_17_328) l_0_17_334))))
 (= (+ (- ?x53563 (* (* 2.0 l_0_17_329) l_0_17_335)) ?x51795) 0.0)))))))))))))))))))
(assert
 (let ((?x51810 (* l_0_17_87 l_0_17_87)))
 (let ((?x51808 (* l_0_17_86 l_0_17_86)))
 (let ((?x43892 (- (- (+ (* l_0_17_58 l_0_17_58) (* l_0_17_59 l_0_17_59)) ?x51808) ?x51810)))
 (= ?x43892 0.0)))))
(assert
 (let ((?x49431 (* 2.0 l_0_17_87)))
 (let ((?x49432 (* ?x49431 l_0_17_92)))
 (let ((?x49428 (* 2.0 l_0_17_86)))
 (let ((?x49429 (* ?x49428 l_0_17_91)))
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x49426 (* ?x49425 l_0_17_64)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x49423 (* ?x49422 l_0_17_63)))
 (= (- (- (+ ?x49423 ?x49426) ?x49429) ?x49432) 0.0))))))))))
(assert
 (let ((?x49425 (* 2.0 l_0_17_59)))
 (let ((?x51861 (* ?x49425 l_0_17_73)))
 (let ((?x49422 (* 2.0 l_0_17_58)))
 (let ((?x51859 (* ?x49422 l_0_17_72)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x51852 (* ?x49634 l_0_17_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_100) l_0_17_86) ?x51852) ?x51859) ?x51861) 0.0))))))))
(assert
 (let ((?x49548 (* l_0_17_94 l_0_17_94)))
 (let ((?x49546 (* l_0_17_93 l_0_17_93)))
 (let ((?x49544 (* l_0_17_92 l_0_17_92)))
 (let ((?x49542 (* l_0_17_91 l_0_17_91)))
 (let ((?x49540 (* l_0_17_66 l_0_17_66)))
 (let ((?x49538 (* l_0_17_65 l_0_17_65)))
 (let ((?x21917 (+ (+ (+ (* l_0_17_63 l_0_17_63) (* l_0_17_64 l_0_17_64)) ?x49538) ?x49540)))
 (= (- (- (- (- ?x21917 ?x49542) ?x49544) ?x49546) ?x49548) 0.0)))))))))
(assert
 (let ((?x49316 (* 2.0 l_0_17_66)))
 (let ((?x49675 (* ?x49316 l_0_17_75)))
 (let ((?x49313 (* 2.0 l_0_17_65)))
 (let ((?x49673 (* ?x49313 l_0_17_74)))
 (let ((?x49310 (* 2.0 l_0_17_64)))
 (let ((?x49671 (* ?x49310 l_0_17_73)))
 (let ((?x49307 (* 2.0 l_0_17_63)))
 (let ((?x49669 (* ?x49307 l_0_17_72)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x49653 (* ?x49652 l_0_17_94)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x49650 (* ?x49649 l_0_17_93)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x49636 (* ?x49634 l_0_17_92)))
 (let ((?x53648 (+ (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_91) ?x49636) ?x49650) ?x49653) ?x49669)))
 (= (+ (+ (+ ?x53648 ?x49671) ?x49673) ?x49675) 0.0)))))))))))))))))
(assert
 (let ((?x52087 (* l_0_17_77 l_0_17_77)))
 (let ((?x52085 (* l_0_17_76 l_0_17_76)))
 (let ((?x52083 (* l_0_17_75 l_0_17_75)))
 (let ((?x52081 (* l_0_17_74 l_0_17_74)))
 (let ((?x52079 (* l_0_17_73 l_0_17_73)))
 (let ((?x52077 (* l_0_17_72 l_0_17_72)))
 (let ((?x52075 (* l_0_17_105 l_0_17_105)))
 (let ((?x52073 (* l_0_17_104 l_0_17_104)))
 (let ((?x52071 (* l_0_17_103 l_0_17_103)))
 (let ((?x52069 (* l_0_17_102 l_0_17_102)))
 (let ((?x24564 (- (- (* (- l_0_17_100) l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x52069)))
 (let ((?x34601 (+ (+ (+ (+ (- (- (- ?x24564 ?x52071) ?x52073) ?x52075) ?x52077) ?x52079) ?x52081) ?x52083)))
 (= (+ (+ ?x34601 ?x52085) ?x52087) 0.0))))))))))))))
(assert
 (let ((?x52130 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x52127 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x52124 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x52121 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x52118 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x52115 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x52112 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x51966 (* 2.0 l_0_17_104)))
 (let ((?x52109 (* ?x51966 l_0_17_110)))
 (let ((?x49652 (* 2.0 l_0_17_103)))
 (let ((?x52107 (* ?x49652 l_0_17_109)))
 (let ((?x49649 (* 2.0 l_0_17_102)))
 (let ((?x52105 (* ?x49649 l_0_17_108)))
 (let ((?x49634 (* 2.0 l_0_17_101)))
 (let ((?x52103 (* ?x49634 l_0_17_107)))
 (let ((?x53662 (- (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_106) ?x52103) ?x52105) ?x52107) ?x52109)))
 (let ((?x53669 (+ (+ (+ (+ (+ (+ (- ?x53662 ?x52112) ?x52115) ?x52118) ?x52121) ?x52124) ?x52127) ?x52130)))
 (= ?x53669 0.0)))))))))))))))))))
(assert
 (let ((?x52195 (* l_0_17_84 l_0_17_84)))
 (let ((?x52193 (* l_0_17_83 l_0_17_83)))
 (let ((?x52191 (* l_0_17_82 l_0_17_82)))
 (let ((?x52189 (* l_0_17_81 l_0_17_81)))
 (let ((?x52187 (* l_0_17_80 l_0_17_80)))
 (let ((?x52185 (* l_0_17_79 l_0_17_79)))
 (let ((?x52183 (* l_0_17_78 l_0_17_78)))
 (let ((?x52181 (* l_0_17_112 l_0_17_112)))
 (let ((?x52179 (* l_0_17_111 l_0_17_111)))
 (let ((?x52177 (* l_0_17_110 l_0_17_110)))
 (let ((?x52175 (* l_0_17_109 l_0_17_109)))
 (let ((?x52173 (* l_0_17_108 l_0_17_108)))
 (let ((?x44057 (- (- (* (- l_0_17_106) l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52173)))
 (let ((?x24619 (+ (+ (+ (- (- (- (- ?x44057 ?x52175) ?x52177) ?x52179) ?x52181) ?x52183) ?x52185) ?x52187)))
 (= (+ (+ (+ (+ ?x24619 ?x52189) ?x52191) ?x52193) ?x52195) 0.0))))))))))))))))
(assert
 (let ((?x53692 (- (* (* (- 2.0) l_0_17_197) l_0_17_198) (* (* 2.0 l_0_17_225) l_0_17_226))))
 (let ((?x53696 (- (- ?x53692 (* (* 2.0 l_0_17_253) l_0_17_254)) (* (* 2.0 l_0_17_281) l_0_17_282))))
 (= (- ?x53696 (* (* 2.0 l_0_17_309) l_0_17_310)) 0.0))))
(assert
 (let ((?x53725 (- (* (* (- 2.0) l_0_17_197) l_0_17_203) (* (* 2.0 l_0_17_225) l_0_17_231))))
 (let ((?x53729 (- (- ?x53725 (* (* 2.0 l_0_17_253) l_0_17_259)) (* (* 2.0 l_0_17_281) l_0_17_287))))
 (= (- ?x53729 (* (* 2.0 l_0_17_309) l_0_17_315)) 0.0))))
(assert
 (let ((?x34623 (- (* (* (- 2.0) l_0_17_197) l_0_17_218) (* (* 2.0 l_0_17_225) l_0_17_246))))
 (let ((?x9010 (- (- ?x34623 (* (* 2.0 l_0_17_253) l_0_17_274)) (* (* 2.0 l_0_17_281) l_0_17_302))))
 (= (- ?x9010 (* (* 2.0 l_0_17_309) l_0_17_330)) 0.0))))
(assert
 (let ((?x53774 (* l_0_17_311 l_0_17_311)))
 (let ((?x53772 (* l_0_17_310 l_0_17_310)))
 (let ((?x53770 (* l_0_17_283 l_0_17_283)))
 (let ((?x53768 (* l_0_17_282 l_0_17_282)))
 (let ((?x53766 (* l_0_17_255 l_0_17_255)))
 (let ((?x44146 (* l_0_17_254 l_0_17_254)))
 (let ((?x24688 (* l_0_17_227 l_0_17_227)))
 (let ((?x44150 (* l_0_17_226 l_0_17_226)))
 (let ((?x9044 (- (- (* (- l_0_17_198) l_0_17_198) (* l_0_17_199 l_0_17_199)) ?x44150)))
 (let ((?x53775 (- (- (- (- (- (- (- ?x9044 ?x24688) ?x44146) ?x53766) ?x53768) ?x53770) ?x53772) ?x53774)))
 (= ?x53775 0.0))))))))))))
(assert
 (let ((?x53798 (- (* (* (- 2.0) l_0_17_198) l_0_17_203) (* (* 2.0 l_0_17_199) l_0_17_204))))
 (let ((?x53802 (- (- ?x53798 (* (* 2.0 l_0_17_226) l_0_17_231)) (* (* 2.0 l_0_17_227) l_0_17_232))))
 (let ((?x53806 (- (- ?x53802 (* (* 2.0 l_0_17_254) l_0_17_259)) (* (* 2.0 l_0_17_255) l_0_17_260))))
 (let ((?x53810 (- (- ?x53806 (* (* 2.0 l_0_17_282) l_0_17_287)) (* (* 2.0 l_0_17_283) l_0_17_288))))
 (let ((?x53814 (- (- ?x53810 (* (* 2.0 l_0_17_310) l_0_17_315)) (* (* 2.0 l_0_17_311) l_0_17_316))))
 (= ?x53814 0.0)))))))
(assert
 (let ((?x53889 (* l_0_17_318 l_0_17_318)))
 (let ((?x53887 (* l_0_17_317 l_0_17_317)))
 (let ((?x53885 (* l_0_17_316 l_0_17_316)))
 (let ((?x53883 (* l_0_17_315 l_0_17_315)))
 (let ((?x53881 (* l_0_17_290 l_0_17_290)))
 (let ((?x53879 (* l_0_17_289 l_0_17_289)))
 (let ((?x53877 (* l_0_17_288 l_0_17_288)))
 (let ((?x53875 (* l_0_17_287 l_0_17_287)))
 (let ((?x53873 (* l_0_17_262 l_0_17_262)))
 (let ((?x53871 (* l_0_17_261 l_0_17_261)))
 (let ((?x53869 (* l_0_17_260 l_0_17_260)))
 (let ((?x53867 (* l_0_17_259 l_0_17_259)))
 (let ((?x53865 (* l_0_17_234 l_0_17_234)))
 (let ((?x53863 (* l_0_17_233 l_0_17_233)))
 (let ((?x53861 (* l_0_17_232 l_0_17_232)))
 (let ((?x53859 (* l_0_17_231 l_0_17_231)))
 (let ((?x53857 (* l_0_17_206 l_0_17_206)))
 (let ((?x53855 (* l_0_17_205 l_0_17_205)))
 (let ((?x53856 (- (- (* (- l_0_17_203) l_0_17_203) (* l_0_17_204 l_0_17_204)) ?x53855)))
 (let ((?x53870 (- (- (- (- (- (- (- ?x53856 ?x53857) ?x53859) ?x53861) ?x53863) ?x53865) ?x53867) ?x53869)))
 (let ((?x53884 (- (- (- (- (- (- (- ?x53870 ?x53871) ?x53873) ?x53875) ?x53877) ?x53879) ?x53881) ?x53883)))
 (= (- (- (- ?x53884 ?x53885) ?x53887) ?x53889) 0.0)))))))))))))))))))))))
(assert
 (let ((?x53970 (* l_0_17_336 l_0_17_336)))
 (let ((?x53968 (* l_0_17_335 l_0_17_335)))
 (let ((?x53966 (* l_0_17_334 l_0_17_334)))
 (let ((?x53964 (* l_0_17_333 l_0_17_333)))
 (let ((?x53962 (* l_0_17_332 l_0_17_332)))
 (let ((?x53960 (* l_0_17_331 l_0_17_331)))
 (let ((?x53958 (* l_0_17_330 l_0_17_330)))
 (let ((?x53956 (* l_0_17_308 l_0_17_308)))
 (let ((?x53954 (* l_0_17_307 l_0_17_307)))
 (let ((?x53952 (* l_0_17_306 l_0_17_306)))
 (let ((?x53950 (* l_0_17_305 l_0_17_305)))
 (let ((?x53948 (* l_0_17_304 l_0_17_304)))
 (let ((?x53946 (* l_0_17_303 l_0_17_303)))
 (let ((?x53944 (* l_0_17_302 l_0_17_302)))
 (let ((?x53942 (* l_0_17_280 l_0_17_280)))
 (let ((?x53940 (* l_0_17_279 l_0_17_279)))
 (let ((?x53938 (* l_0_17_278 l_0_17_278)))
 (let ((?x53936 (* l_0_17_277 l_0_17_277)))
 (let ((?x53934 (* l_0_17_276 l_0_17_276)))
 (let ((?x53932 (* l_0_17_275 l_0_17_275)))
 (let ((?x53930 (* l_0_17_274 l_0_17_274)))
 (let ((?x53928 (* l_0_17_252 l_0_17_252)))
 (let ((?x53926 (* l_0_17_251 l_0_17_251)))
 (let ((?x53924 (* l_0_17_250 l_0_17_250)))
 (let ((?x53922 (* l_0_17_249 l_0_17_249)))
 (let ((?x53920 (* l_0_17_248 l_0_17_248)))
 (let ((?x53918 (* l_0_17_247 l_0_17_247)))
 (let ((?x53916 (* l_0_17_246 l_0_17_246)))
 (let ((?x53914 (* l_0_17_224 l_0_17_224)))
 (let ((?x53912 (* l_0_17_223 l_0_17_223)))
 (let ((?x53910 (* l_0_17_222 l_0_17_222)))
 (let ((?x53908 (* l_0_17_221 l_0_17_221)))
 (let ((?x53906 (* l_0_17_220 l_0_17_220)))
 (let ((?x53907 (- (- (* (- l_0_17_218) l_0_17_218) (* l_0_17_219 l_0_17_219)) ?x53906)))
 (let ((?x53921 (- (- (- (- (- (- (- ?x53907 ?x53908) ?x53910) ?x53912) ?x53914) ?x53916) ?x53918) ?x53920)))
 (let ((?x53935 (- (- (- (- (- (- (- ?x53921 ?x53922) ?x53924) ?x53926) ?x53928) ?x53930) ?x53932) ?x53934)))
 (let ((?x53949 (- (- (- (- (- (- (- ?x53935 ?x53936) ?x53938) ?x53940) ?x53942) ?x53944) ?x53946) ?x53948)))
 (let ((?x53963 (- (- (- (- (- (- (- ?x53949 ?x53950) ?x53952) ?x53954) ?x53956) ?x53958) ?x53960) ?x53962)))
 (= (- (- (- (- ?x53963 ?x53964) ?x53966) ?x53968) ?x53970) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_28 0.0))
(assert
 (>= l_0_17_29 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_34 0.0))
(assert
 (>= l_0_17_38 0.0))
(assert
 (>= l_0_17_43 0.0))
(assert
 (>= l_0_17_49 0.0))
(assert
 (>= l_0_17_56 0.0))
(assert
 (>= l_0_17_57 0.0))
(assert
 (>= l_0_17_59 0.0))
(assert
 (>= l_0_17_62 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_71 0.0))
(assert
 (>= l_0_17_77 0.0))
(assert
 (>= l_0_17_84 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_87 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (>= l_0_17_94 0.0))
(assert
 (>= l_0_17_99 0.0))
(assert
 (>= l_0_17_105 0.0))
(assert
 (>= l_0_17_112 0.0))
(assert
 (>= l_0_17_113 0.0))
(assert
 (>= l_0_17_115 0.0))
(assert
 (>= l_0_17_118 0.0))
(assert
 (>= l_0_17_122 0.0))
(assert
 (>= l_0_17_127 0.0))
(assert
 (>= l_0_17_133 0.0))
(assert
 (>= l_0_17_140 0.0))
(assert
 (>= l_0_17_141 0.0))
(assert
 (>= l_0_17_143 0.0))
(assert
 (>= l_0_17_146 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_155 0.0))
(assert
 (>= l_0_17_161 0.0))
(assert
 (>= l_0_17_168 0.0))
(assert
 (>= l_0_17_169 0.0))
(assert
 (>= l_0_17_171 0.0))
(assert
 (>= l_0_17_174 0.0))
(assert
 (>= l_0_17_178 0.0))
(assert
 (>= l_0_17_183 0.0))
(assert
 (>= l_0_17_189 0.0))
(assert
 (>= l_0_17_196 0.0))
(assert
 (>= l_0_17_197 0.0))
(assert
 (>= l_0_17_199 0.0))
(assert
 (>= l_0_17_202 0.0))
(assert
 (>= l_0_17_206 0.0))
(assert
 (>= l_0_17_211 0.0))
(assert
 (>= l_0_17_217 0.0))
(assert
 (>= l_0_17_224 0.0))
(assert
 (>= l_0_17_225 0.0))
(assert
 (>= l_0_17_227 0.0))
(assert
 (>= l_0_17_230 0.0))
(assert
 (>= l_0_17_234 0.0))
(assert
 (>= l_0_17_239 0.0))
(assert
 (>= l_0_17_245 0.0))
(assert
 (>= l_0_17_252 0.0))
(assert
 (>= l_0_17_253 0.0))
(assert
 (>= l_0_17_255 0.0))
(assert
 (>= l_0_17_258 0.0))
(assert
 (>= l_0_17_262 0.0))
(assert
 (>= l_0_17_267 0.0))
(assert
 (>= l_0_17_273 0.0))
(assert
 (>= l_0_17_280 0.0))
(assert
 (>= l_0_17_281 0.0))
(assert
 (>= l_0_17_283 0.0))
(assert
 (>= l_0_17_286 0.0))
(assert
 (>= l_0_17_290 0.0))
(assert
 (>= l_0_17_295 0.0))
(assert
 (>= l_0_17_301 0.0))
(assert
 (>= l_0_17_308 0.0))
(assert
 (>= l_0_17_309 0.0))
(assert
 (>= l_0_17_311 0.0))
(assert
 (>= l_0_17_314 0.0))
(assert
 (>= l_0_17_318 0.0))
(assert
 (>= l_0_17_323 0.0))
(assert
 (>= l_0_17_329 0.0))
(assert
 (>= l_0_17_336 0.0))
(assert
 (let ((?x54124 (* l_0_18_85 l_0_18_85)))
 (let ((?x54122 (* l_0_18_57 l_0_18_57)))
 (let ((?x54102 (* l_0_18_169 l_0_18_169)))
 (let ((?x54103 (- (- (* (- l_0_18_113) l_0_18_113) (* l_0_18_141 l_0_18_141)) ?x54102)))
 (let ((?x54109 (- (- ?x54103 (* (* 2.0 l_0_18_197) l_0_18_207)) (* (* 2.0 l_0_18_225) l_0_18_235))))
 (let ((?x54115 (- (- ?x54109 (* (* 2.0 l_0_18_253) l_0_18_263)) (* (* 2.0 l_0_18_281) l_0_18_291))))
 (let ((?x54121 (- (- ?x54115 (* (* 2.0 l_0_18_309) l_0_18_319)) (* (* 2.0 l_0_18_337) l_0_18_347))))
 (= (+ (+ (- ?x54121 ?x54122) ?x54124) 1.0) 0.0)))))))))
(assert
 (let ((?x54195 (* l_0_18_29 l_0_18_29)))
 (let ((?x54152 (- (+ (* (- l_0_18_1) l_0_18_1) (* l_0_18_141 l_0_18_141)) (* (* 2.0 l_0_18_203) l_0_18_218))))
 (let ((?x54158 (- (- ?x54152 (* (* 2.0 l_0_18_204) l_0_18_219)) (* (* 2.0 l_0_18_205) l_0_18_220))))
 (let ((?x54164 (- (- ?x54158 (* (* 2.0 l_0_18_206) l_0_18_221)) (* (* 2.0 l_0_18_231) l_0_18_246))))
 (let ((?x54170 (- (- ?x54164 (* (* 2.0 l_0_18_232) l_0_18_247)) (* (* 2.0 l_0_18_233) l_0_18_248))))
 (let ((?x54176 (- (- ?x54170 (* (* 2.0 l_0_18_234) l_0_18_249)) (* (* 2.0 l_0_18_259) l_0_18_274))))
 (let ((?x54182 (- (- ?x54176 (* (* 2.0 l_0_18_260) l_0_18_275)) (* (* 2.0 l_0_18_261) l_0_18_276))))
 (let ((?x54188 (- (- ?x54182 (* (* 2.0 l_0_18_262) l_0_18_277)) (* (* 2.0 l_0_18_287) l_0_18_302))))
 (let ((?x54194 (- (- ?x54188 (* (* 2.0 l_0_18_288) l_0_18_303)) (* (* 2.0 l_0_18_289) l_0_18_304))))
 (let ((?x54202 (- (- (+ ?x54194 ?x54195) (* (* 2.0 l_0_18_290) l_0_18_305)) (* (* 2.0 l_0_18_315) l_0_18_330))))
 (let ((?x54208 (- (- ?x54202 (* (* 2.0 l_0_18_316) l_0_18_331)) (* (* 2.0 l_0_18_317) l_0_18_332))))
 (let ((?x54214 (- (- ?x54208 (* (* 2.0 l_0_18_318) l_0_18_333)) (* (* 2.0 l_0_18_343) l_0_18_358))))
 (let ((?x54220 (- (- ?x54214 (* (* 2.0 l_0_18_344) l_0_18_359)) (* (* 2.0 l_0_18_345) l_0_18_360))))
 (= (- (- ?x54220 (* (* 2.0 l_0_18_346) l_0_18_361)) 2.0) 0.0)))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x54288 (* ?x54287 l_0_18_91)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x54285 (* ?x54284 l_0_18_63)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54282 (* ?x54281 l_0_18_30)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54279 (* ?x54278 l_0_18_142)))
 (let ((?x54289 (+ (- (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_2) ?x54279) ?x54282) ?x54285) ?x54288)))
 (= ?x54289 0.0)))))))))))
(assert
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x54350 (* ?x54349 l_0_18_53)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x54347 (* ?x54346 l_0_18_52)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x54344 (* ?x54343 l_0_18_51)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x54341 (* ?x54340 l_0_18_50)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54338 (* ?x54281 l_0_18_32)))
 (let ((?x54335 (* 2.0 l_0_18_24)))
 (let ((?x54336 (* ?x54335 l_0_18_9)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x54333 (* ?x54332 l_0_18_8)))
 (let ((?x54329 (* 2.0 l_0_18_22)))
 (let ((?x54330 (* ?x54329 l_0_18_7)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54315 (* ?x54278 l_0_18_144)))
 (let ((?x54314 (+ (* (* (- 2.0) l_0_18_1) l_0_18_4) (* (* 2.0 l_0_18_10) l_0_18_25))))
 (let ((?x54322 (+ (+ (+ ?x54314 ?x54315) (* (* 4.0 l_0_18_175) l_0_18_190)) (* (* 4.0 l_0_18_176) l_0_18_191))))
 (let ((?x54328 (+ (+ ?x54322 (* (* 4.0 l_0_18_177) l_0_18_192)) (* (* 4.0 l_0_18_178) l_0_18_193))))
 (let ((?x54348 (- (- (- (+ (+ (+ (+ ?x54328 ?x54330) ?x54333) ?x54336) ?x54338) ?x54341) ?x54344) ?x54347)))
 (= (- ?x54348 ?x54350) 0.0))))))))))))))))))))))))
(assert
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54387 (* ?x54281 l_0_18_35)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54385 (* ?x54278 l_0_18_147)))
 (= (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_7) ?x54385) ?x54387) 0.0))))))
(assert
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54461 (* ?x54460 l_0_18_81)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54458 (* ?x54457 l_0_18_80)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54455 (* ?x54454 l_0_18_79)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54452 (* ?x54451 l_0_18_78)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54449 (* ?x54281 l_0_18_39)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x54435 (* ?x54434 l_0_18_165)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x54432 (* ?x54431 l_0_18_164)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x54429 (* ?x54428 l_0_18_163)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x54426 (* ?x54425 l_0_18_162)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54423 (* ?x54278 l_0_18_151)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x54409 (* ?x54408 l_0_18_94)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x54406 (* ?x54405 l_0_18_93)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x54403 (* ?x54402 l_0_18_92)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x54395 (* ?x54393 l_0_18_91)))
 (let ((?x54410 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_11) ?x54395) ?x54403) ?x54406) ?x54409)))
 (let ((?x54416 (- (- ?x54410 (* (* 2.0 l_0_18_119) l_0_18_134)) (* (* 2.0 l_0_18_120) l_0_18_135))))
 (let ((?x54422 (- (- ?x54416 (* (* 2.0 l_0_18_121) l_0_18_136)) (* (* 2.0 l_0_18_122) l_0_18_137))))
 (let ((?x54439 (- (- (- (- (- (+ ?x54422 ?x54423) ?x54426) ?x54429) ?x54432) ?x54435) (* (* 2.0 l_0_18_175) l_0_18_190))))
 (let ((?x54445 (- (- ?x54439 (* (* 2.0 l_0_18_176) l_0_18_191)) (* (* 2.0 l_0_18_177) l_0_18_192))))
 (let ((?x54456 (- (- (+ (- ?x54445 (* (* 2.0 l_0_18_178) l_0_18_193)) ?x54449) ?x54452) ?x54455)))
 (= (- (- ?x54456 ?x54458) ?x54461) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54461 (* ?x54460 l_0_18_81)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54458 (* ?x54457 l_0_18_80)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54455 (* ?x54454 l_0_18_79)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54452 (* ?x54451 l_0_18_78)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54540 (* ?x54281 l_0_18_44)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54538 (* ?x54278 l_0_18_156)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x54409 (* ?x54408 l_0_18_94)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x54406 (* ?x54405 l_0_18_93)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x54403 (* ?x54402 l_0_18_92)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x54395 (* ?x54393 l_0_18_91)))
 (let ((?x54537 (- (- (- (- (* (* (- 2.0) l_0_18_1) l_0_18_16) ?x54395) ?x54403) ?x54406) ?x54409)))
 (= (+ (+ (+ (+ (+ (+ ?x54537 ?x54538) ?x54540) ?x54452) ?x54455) ?x54458) ?x54461) 0.0)))))))))))))))))))))))
(assert
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x45474 (* ?x54281 l_0_18_50)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x45481 (* ?x54278 l_0_18_162)))
 (= (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_22) ?x45481) ?x45474) 0.0))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x54580 (* ?x54579 l_0_18_92)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x54577 (* ?x54576 l_0_18_91)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x54574 (* ?x54573 l_0_18_64)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x54571 (* ?x54570 l_0_18_63)))
 (let ((?x54568 (* l_0_18_31 l_0_18_31)))
 (let ((?x54566 (* l_0_18_30 l_0_18_30)))
 (let ((?x54564 (* l_0_18_3 l_0_18_3)))
 (let ((?x54557 (* l_0_18_2 l_0_18_2)))
 (let ((?x54554 (* l_0_18_143 l_0_18_143)))
 (let ((?x54552 (* l_0_18_142 l_0_18_142)))
 (let ((?x54556 (+ ?x54552 ?x54554)))
 (let ((?x54578 (+ (- (- (+ (+ (- (- ?x54556 ?x54557) ?x54564) ?x54566) ?x54568) ?x54571) ?x54574) ?x54577)))
 (= (+ ?x54578 ?x54580) 0.0))))))))))))))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x54631 (* ?x54630 l_0_18_93)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x54628 (* ?x54627 l_0_18_92)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x54625 (* ?x54624 l_0_18_91)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x54622 (* ?x54621 l_0_18_65)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x54619 (* ?x54618 l_0_18_64)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x54616 (* ?x54615 l_0_18_63)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54613 (* ?x54612 l_0_18_33)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54610 (* ?x54609 l_0_18_32)))
 (let ((?x54606 (* 2.0 l_0_18_3)))
 (let ((?x54607 (* ?x54606 l_0_18_5)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54604 (* ?x54603 l_0_18_4)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54601 (* ?x54600 l_0_18_145)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54599 (* ?x54598 l_0_18_144)))
 (let ((?x54620 (- (- (+ (+ (- (- (+ ?x54599 ?x54601) ?x54604) ?x54607) ?x54610) ?x54613) ?x54616) ?x54619)))
 (= (+ (+ (+ (- ?x54620 ?x54622) ?x54625) ?x54628) ?x54631) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54689 (* l_0_18_94 l_0_18_94)))
 (let ((?x54687 (* l_0_18_93 l_0_18_93)))
 (let ((?x54685 (* l_0_18_92 l_0_18_92)))
 (let ((?x54683 (* l_0_18_91 l_0_18_91)))
 (let ((?x54681 (* l_0_18_66 l_0_18_66)))
 (let ((?x54679 (* l_0_18_65 l_0_18_65)))
 (let ((?x54677 (* l_0_18_64 l_0_18_64)))
 (let ((?x54675 (* l_0_18_63 l_0_18_63)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54673 (* ?x54612 l_0_18_36)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54671 (* ?x54609 l_0_18_35)))
 (let ((?x54606 (* 2.0 l_0_18_3)))
 (let ((?x54669 (* ?x54606 l_0_18_8)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54667 (* ?x54603 l_0_18_7)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54665 (* ?x54600 l_0_18_148)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54664 (* ?x54598 l_0_18_147)))
 (let ((?x54678 (- (- (+ (+ (- (- (+ ?x54664 ?x54665) ?x54667) ?x54669) ?x54671) ?x54673) ?x54675) ?x54677)))
 (= (+ (+ (+ (+ (- (- ?x54678 ?x54679) ?x54681) ?x54683) ?x54685) ?x54687) ?x54689) 0.0)))))))))))))))))))))))
(assert
 (let ((?x54747 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x54744 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54741 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54738 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54735 (* ?x54460 l_0_18_70)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54733 (* ?x54457 l_0_18_69)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54731 (* ?x54454 l_0_18_68)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54729 (* ?x54451 l_0_18_67)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54727 (* ?x54612 l_0_18_40)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54725 (* ?x54609 l_0_18_39)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54723 (* ?x54600 l_0_18_152)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54721 (* ?x54598 l_0_18_151)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x54719 (* ?x54718 l_0_18_3)))
 (let ((?x54726 (+ (+ (+ (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x54719) ?x54721) ?x54723) ?x54725)))
 (let ((?x54742 (+ (+ (- (- (- (- (+ ?x54726 ?x54727) ?x54729) ?x54731) ?x54733) ?x54735) ?x54738) ?x54741)))
 (= (+ (+ ?x54742 ?x54744) ?x54747) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54818 (* ?x54460 l_0_18_75)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54816 (* ?x54457 l_0_18_74)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54814 (* ?x54454 l_0_18_73)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54812 (* ?x54451 l_0_18_72)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54810 (* ?x54612 l_0_18_45)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54808 (* ?x54609 l_0_18_44)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x54806 (* ?x54805 l_0_18_3)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x54803 (* ?x54802 l_0_18_2)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54800 (* ?x54600 l_0_18_157)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54798 (* ?x54598 l_0_18_156)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x54796 (* ?x54795 l_0_18_94)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x54793 (* ?x54792 l_0_18_93)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x54779 (* ?x54777 l_0_18_92)))
 (let ((?x54797 (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_91) ?x54779) ?x54793) ?x54796)))
 (let ((?x54813 (- (+ (+ (- (- (+ (+ ?x54797 ?x54798) ?x54800) ?x54803) ?x54806) ?x54808) ?x54810) ?x54812)))
 (= (- (- (- ?x54813 ?x54814) ?x54816) ?x54818) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54461 (* ?x54460 l_0_18_81)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54458 (* ?x54457 l_0_18_80)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54455 (* ?x54454 l_0_18_79)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54452 (* ?x54451 l_0_18_78)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54883 (* ?x54612 l_0_18_51)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54881 (* ?x54609 l_0_18_50)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x54879 (* ?x54332 l_0_18_3)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54877 (* ?x54603 l_0_18_22)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54875 (* ?x54600 l_0_18_163)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54873 (* ?x54598 l_0_18_162)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x54409 (* ?x54408 l_0_18_94)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x54406 (* ?x54405 l_0_18_93)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x54403 (* ?x54402 l_0_18_92)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x54395 (* ?x54393 l_0_18_91)))
 (let ((?x54880 (- (- (+ (+ (+ (+ (+ ?x54395 ?x54403) ?x54406) ?x54409) ?x54873) ?x54875) ?x54877) ?x54879)))
 (= (- (- (- (- (+ (+ ?x54880 ?x54881) ?x54883) ?x54452) ?x54455) ?x54458) ?x54461) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x54938 (* l_0_18_6 l_0_18_6)))
 (let ((?x54936 (* l_0_18_5 l_0_18_5)))
 (let ((?x54934 (* l_0_18_4 l_0_18_4)))
 (let ((?x54932 (* l_0_18_34 l_0_18_34)))
 (let ((?x54930 (* l_0_18_33 l_0_18_33)))
 (let ((?x54928 (* l_0_18_32 l_0_18_32)))
 (let ((?x54926 (* l_0_18_146 l_0_18_146)))
 (let ((?x54927 (+ (+ (* l_0_18_144 l_0_18_144) (* l_0_18_145 l_0_18_145)) ?x54926)))
 (= (- (- (- (+ (+ (+ ?x54927 ?x54928) ?x54930) ?x54932) ?x54934) ?x54936) ?x54938) 0.0))))))))))
(assert
 (let ((?x54959 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x54956 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x54953 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x54950 (* ?x54949 l_0_18_37)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x10060 (* ?x10119 l_0_18_36)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x10137 (* ?x45693 l_0_18_35)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x10134 (* ?x45685 l_0_18_149)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x45699 (* ?x25119 l_0_18_148)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x25030 (* ?x10122 l_0_18_147)))
 (let ((?x54957 (- (- (+ (+ (+ (+ (+ ?x25030 ?x45699) ?x10134) ?x10137) ?x10060) ?x54950) ?x54953) ?x54956)))
 (= (- ?x54957 ?x54959) 0.0))))))))))))))))))
(assert
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55005 (* ?x54949 l_0_18_41)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55003 (* ?x10119 l_0_18_40)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55001 (* ?x45693 l_0_18_39)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x54999 (* ?x45685 l_0_18_153)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x54997 (* ?x25119 l_0_18_152)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x54995 (* ?x10122 l_0_18_151)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x54993 (* ?x54992 l_0_18_6)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x54990 (* ?x54718 l_0_18_5)))
 (let ((?x54998 (+ (+ (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x54990) ?x54993) ?x54995) ?x54997)))
 (= (+ (+ (+ (+ ?x54998 ?x54999) ?x55001) ?x55003) ?x55005) 0.0)))))))))))))))))))
(assert
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55040 (* ?x54949 l_0_18_46)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55038 (* ?x10119 l_0_18_45)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55036 (* ?x45693 l_0_18_44)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55034 (* ?x55033 l_0_18_6)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55031 (* ?x54805 l_0_18_5)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x55021 (* ?x54802 l_0_18_4)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x55017 (* ?x45685 l_0_18_158)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x45749 (* ?x25119 l_0_18_157)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x45746 (* ?x10122 l_0_18_156)))
 (let ((?x55039 (+ (+ (- (- (- (+ (+ ?x45746 ?x45749) ?x55017) ?x55021) ?x55031) ?x55034) ?x55036) ?x55038)))
 (= (+ ?x55039 ?x55040) 0.0)))))))))))))))))))))
(assert
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55088 (* ?x54949 l_0_18_52)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55086 (* ?x10119 l_0_18_51)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55084 (* ?x45693 l_0_18_50)))
 (let ((?x54335 (* 2.0 l_0_18_24)))
 (let ((?x55082 (* ?x54335 l_0_18_6)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x55080 (* ?x54332 l_0_18_5)))
 (let ((?x54329 (* 2.0 l_0_18_22)))
 (let ((?x55078 (* ?x54329 l_0_18_4)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x55068 (* ?x45685 l_0_18_164)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x55065 (* ?x25119 l_0_18_163)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x55063 (* ?x10122 l_0_18_162)))
 (let ((?x55087 (+ (+ (- (- (- (+ (+ ?x55063 ?x55065) ?x55068) ?x55078) ?x55080) ?x55082) ?x55084) ?x55086)))
 (= (+ ?x55087 ?x55088) 0.0)))))))))))))))))))))
(assert
 (let ((?x55140 (* l_0_18_9 l_0_18_9)))
 (let ((?x55138 (* l_0_18_8 l_0_18_8)))
 (let ((?x55136 (* l_0_18_7 l_0_18_7)))
 (let ((?x55134 (* l_0_18_38 l_0_18_38)))
 (let ((?x55132 (* l_0_18_37 l_0_18_37)))
 (let ((?x55130 (* l_0_18_36 l_0_18_36)))
 (let ((?x55128 (* l_0_18_35 l_0_18_35)))
 (let ((?x55126 (* l_0_18_150 l_0_18_150)))
 (let ((?x55124 (* l_0_18_149 l_0_18_149)))
 (let ((?x55122 (* l_0_18_148 l_0_18_148)))
 (let ((?x55123 (+ (+ (* (- l_0_18_10) l_0_18_10) (* l_0_18_147 l_0_18_147)) ?x55122)))
 (let ((?x55137 (- (+ (+ (+ (+ (+ (+ ?x55123 ?x55124) ?x55126) ?x55128) ?x55130) ?x55132) ?x55134) ?x55136)))
 (= (- (- ?x55137 ?x55138) ?x55140) 0.0))))))))))))))
(assert
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x55177 (* ?x54349 l_0_18_42)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x55175 (* ?x54346 l_0_18_41)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x55173 (* ?x54343 l_0_18_40)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x55171 (* ?x54340 l_0_18_39)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x55169 (* ?x54434 l_0_18_154)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x55167 (* ?x54431 l_0_18_153)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x55165 (* ?x54428 l_0_18_152)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x55163 (* ?x54425 l_0_18_151)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55161 (* ?x54992 l_0_18_9)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55159 (* ?x54718 l_0_18_8)))
 (let ((?x55156 (* 2.0 l_0_18_11)))
 (let ((?x55157 (* ?x55156 l_0_18_7)))
 (let ((?x55164 (+ (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x55157) ?x55159) ?x55161) ?x55163)))
 (let ((?x55178 (+ (+ (+ (+ (+ (+ (+ ?x55164 ?x55165) ?x55167) ?x55169) ?x55171) ?x55173) ?x55175) ?x55177)))
 (= ?x55178 0.0))))))))))))))))))))))))))
(assert
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x55225 (* ?x54349 l_0_18_47)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x55223 (* ?x54346 l_0_18_46)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x55221 (* ?x54343 l_0_18_45)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x55219 (* ?x54340 l_0_18_44)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55217 (* ?x55033 l_0_18_9)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55215 (* ?x54805 l_0_18_8)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x55213 (* ?x54802 l_0_18_7)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x55199 (* ?x54434 l_0_18_159)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x55194 (* ?x54431 l_0_18_158)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x10377 (* ?x54428 l_0_18_157)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x35027 (* ?x54425 l_0_18_156)))
 (let ((?x55201 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_10) l_0_18_19) ?x35027) ?x10377) ?x55194) ?x55199)))
 (let ((?x55226 (+ (+ (+ (+ (- (- (- ?x55201 ?x55213) ?x55215) ?x55217) ?x55219) ?x55221) ?x55223) ?x55225)))
 (= ?x55226 0.0))))))))))))))))))))))))))
(assert
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x54350 (* ?x54349 l_0_18_53)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x54347 (* ?x54346 l_0_18_52)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x54344 (* ?x54343 l_0_18_51)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x54341 (* ?x54340 l_0_18_50)))
 (let ((?x54335 (* 2.0 l_0_18_24)))
 (let ((?x54336 (* ?x54335 l_0_18_9)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x54333 (* ?x54332 l_0_18_8)))
 (let ((?x54329 (* 2.0 l_0_18_22)))
 (let ((?x54330 (* ?x54329 l_0_18_7)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x54435 (* ?x54434 l_0_18_165)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x54432 (* ?x54431 l_0_18_164)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x54429 (* ?x54428 l_0_18_163)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x54426 (* ?x54425 l_0_18_162)))
 (let ((?x55262 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_10) l_0_18_25) ?x54426) ?x54429) ?x54432) ?x54435)))
 (let ((?x55280 (+ (+ (+ (+ (- (- (- ?x55262 ?x54330) ?x54333) ?x54336) ?x54341) ?x54344) ?x54347) ?x54350)))
 (= ?x55280 0.0))))))))))))))))))))))))))
(assert
 (let ((?x55294 (* l_0_18_43 l_0_18_43)))
 (let ((?x55292 (* l_0_18_42 l_0_18_42)))
 (let ((?x55290 (* l_0_18_41 l_0_18_41)))
 (let ((?x55288 (* l_0_18_40 l_0_18_40)))
 (let ((?x55286 (* l_0_18_39 l_0_18_39)))
 (let ((?x35031 (* l_0_18_155 l_0_18_155)))
 (let ((?x45839 (* l_0_18_154 l_0_18_154)))
 (let ((?x10289 (* l_0_18_153 l_0_18_153)))
 (let ((?x45796 (* l_0_18_152 l_0_18_152)))
 (let ((?x45838 (* l_0_18_151 l_0_18_151)))
 (let ((?x45794 (* l_0_18_15 l_0_18_15)))
 (let ((?x45832 (* l_0_18_14 l_0_18_14)))
 (let ((?x45829 (* l_0_18_13 l_0_18_13)))
 (let ((?x45817 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x45829)))
 (let ((?x55285 (+ (+ (+ (+ (+ (- (- ?x45817 ?x45832) ?x45794) ?x45838) ?x45796) ?x10289) ?x45839) ?x35031)))
 (= (+ (+ (+ (+ (+ ?x55285 ?x55286) ?x55288) ?x55290) ?x55292) ?x55294) 0.0)))))))))))))))))
(assert
 (let ((?x55346 (* 2.0 l_0_18_43)))
 (let ((?x55347 (* ?x55346 l_0_18_48)))
 (let ((?x55343 (* 2.0 l_0_18_42)))
 (let ((?x55344 (* ?x55343 l_0_18_47)))
 (let ((?x55340 (* 2.0 l_0_18_41)))
 (let ((?x55341 (* ?x55340 l_0_18_46)))
 (let ((?x55337 (* 2.0 l_0_18_40)))
 (let ((?x55338 (* ?x55337 l_0_18_45)))
 (let ((?x55334 (* 2.0 l_0_18_39)))
 (let ((?x55335 (* ?x55334 l_0_18_44)))
 (let ((?x55331 (* 2.0 l_0_18_155)))
 (let ((?x55332 (* ?x55331 l_0_18_160)))
 (let ((?x55328 (* 2.0 l_0_18_154)))
 (let ((?x55329 (* ?x55328 l_0_18_159)))
 (let ((?x55325 (* 2.0 l_0_18_153)))
 (let ((?x55326 (* ?x55325 l_0_18_158)))
 (let ((?x55322 (* 2.0 l_0_18_152)))
 (let ((?x55323 (* ?x55322 l_0_18_157)))
 (let ((?x55319 (* 2.0 l_0_18_151)))
 (let ((?x55320 (* ?x55319 l_0_18_156)))
 (let ((?x55316 (* 2.0 l_0_18_15)))
 (let ((?x55317 (* ?x55316 l_0_18_20)))
 (let ((?x55313 (* 2.0 l_0_18_14)))
 (let ((?x55314 (* ?x55313 l_0_18_19)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55311 (* ?x54992 l_0_18_18)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55309 (* ?x54718 l_0_18_17)))
 (let ((?x55318 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_16) ?x55309) ?x55311) ?x55314) ?x55317)))
 (let ((?x55339 (+ (+ (+ (+ (+ (+ (+ ?x55318 ?x55320) ?x55323) ?x55326) ?x55329) ?x55332) ?x55335) ?x55338)))
 (= (+ (+ (+ ?x55339 ?x55341) ?x55344) ?x55347) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x55346 (* 2.0 l_0_18_43)))
 (let ((?x55417 (* ?x55346 l_0_18_54)))
 (let ((?x55343 (* 2.0 l_0_18_42)))
 (let ((?x55415 (* ?x55343 l_0_18_53)))
 (let ((?x55340 (* 2.0 l_0_18_41)))
 (let ((?x55413 (* ?x55340 l_0_18_52)))
 (let ((?x55337 (* 2.0 l_0_18_40)))
 (let ((?x55411 (* ?x55337 l_0_18_51)))
 (let ((?x55334 (* 2.0 l_0_18_39)))
 (let ((?x55409 (* ?x55334 l_0_18_50)))
 (let ((?x55331 (* 2.0 l_0_18_155)))
 (let ((?x55407 (* ?x55331 l_0_18_166)))
 (let ((?x55328 (* 2.0 l_0_18_154)))
 (let ((?x55405 (* ?x55328 l_0_18_165)))
 (let ((?x55325 (* 2.0 l_0_18_153)))
 (let ((?x55403 (* ?x55325 l_0_18_164)))
 (let ((?x55322 (* 2.0 l_0_18_152)))
 (let ((?x55401 (* ?x55322 l_0_18_163)))
 (let ((?x55319 (* 2.0 l_0_18_151)))
 (let ((?x55386 (* ?x55319 l_0_18_162)))
 (let ((?x55316 (* 2.0 l_0_18_15)))
 (let ((?x55382 (* ?x55316 l_0_18_26)))
 (let ((?x55313 (* 2.0 l_0_18_14)))
 (let ((?x55378 (* ?x55313 l_0_18_25)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55374 (* ?x54992 l_0_18_24)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55370 (* ?x54718 l_0_18_23)))
 (let ((?x55384 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_22) ?x55370) ?x55374) ?x55378) ?x55382)))
 (let ((?x55412 (+ (+ (+ (+ (+ (+ (+ ?x55384 ?x55386) ?x55401) ?x55403) ?x55405) ?x55407) ?x55409) ?x55411)))
 (= (+ (+ (+ ?x55412 ?x55413) ?x55415) ?x55417) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x55481 (* l_0_18_49 l_0_18_49)))
 (let ((?x55479 (* l_0_18_48 l_0_18_48)))
 (let ((?x55477 (* l_0_18_47 l_0_18_47)))
 (let ((?x55475 (* l_0_18_46 l_0_18_46)))
 (let ((?x55473 (* l_0_18_45 l_0_18_45)))
 (let ((?x55471 (* l_0_18_44 l_0_18_44)))
 (let ((?x55469 (* l_0_18_21 l_0_18_21)))
 (let ((?x55467 (* l_0_18_20 l_0_18_20)))
 (let ((?x55465 (* l_0_18_19 l_0_18_19)))
 (let ((?x55463 (* l_0_18_18 l_0_18_18)))
 (let ((?x55461 (* l_0_18_17 l_0_18_17)))
 (let ((?x55459 (* l_0_18_161 l_0_18_161)))
 (let ((?x55444 (* l_0_18_160 l_0_18_160)))
 (let ((?x55439 (* l_0_18_16 l_0_18_16)))
 (let ((?x55442 (* l_0_18_159 l_0_18_159)))
 (let ((?x55434 (* l_0_18_158 l_0_18_158)))
 (let ((?x55437 (+ (+ (* l_0_18_156 l_0_18_156) (* l_0_18_157 l_0_18_157)) ?x55434)))
 (let ((?x55466 (- (- (- (+ (+ (- (+ ?x55437 ?x55442) ?x55439) ?x55444) ?x55459) ?x55461) ?x55463) ?x55465)))
 (let ((?x55480 (+ (+ (+ (+ (+ (- (- ?x55466 ?x55467) ?x55469) ?x55471) ?x55473) ?x55475) ?x55477) ?x55479)))
 (= (+ ?x55480 ?x55481) 0.0)))))))))))))))))))))
(assert
 (let ((?x55529 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x55526 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x55523 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x55520 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x55517 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x55514 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x55511 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x55508 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x55505 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55502 (* ?x55033 l_0_18_24)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55500 (* ?x54805 l_0_18_23)))
 (let ((?x55498 (* (* 2.0 l_0_18_161) l_0_18_167)))
 (let ((?x55495 (* (* 2.0 l_0_18_160) l_0_18_166)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x10929 (* ?x54802 l_0_18_22)))
 (let ((?x45887 (* (* 2.0 l_0_18_159) l_0_18_165)))
 (let ((?x10350 (* (* 2.0 l_0_18_158) l_0_18_164)))
 (let ((?x10427 (* (* 2.0 l_0_18_157) l_0_18_163)))
 (let ((?x34344 (* (* 2.0 l_0_18_156) l_0_18_162)))
 (let ((?x55501 (- (+ (+ (- (+ (+ (+ ?x34344 ?x10427) ?x10350) ?x45887) ?x10929) ?x55495) ?x55498) ?x55500)))
 (let ((?x55521 (+ (+ (+ (- (- (- (- ?x55501 ?x55502) ?x55505) ?x55508) ?x55511) ?x55514) ?x55517) ?x55520)))
 (= (+ (+ (+ ?x55521 ?x55523) ?x55526) ?x55529) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x55626 (* l_0_18_56 l_0_18_56)))
 (let ((?x55624 (* l_0_18_55 l_0_18_55)))
 (let ((?x55622 (* l_0_18_54 l_0_18_54)))
 (let ((?x55620 (* l_0_18_53 l_0_18_53)))
 (let ((?x55618 (* l_0_18_52 l_0_18_52)))
 (let ((?x55616 (* l_0_18_51 l_0_18_51)))
 (let ((?x55614 (* l_0_18_50 l_0_18_50)))
 (let ((?x55612 (* l_0_18_28 l_0_18_28)))
 (let ((?x55610 (* l_0_18_27 l_0_18_27)))
 (let ((?x55608 (* l_0_18_26 l_0_18_26)))
 (let ((?x55606 (* l_0_18_25 l_0_18_25)))
 (let ((?x55604 (* l_0_18_24 l_0_18_24)))
 (let ((?x55602 (* l_0_18_23 l_0_18_23)))
 (let ((?x55600 (* l_0_18_22 l_0_18_22)))
 (let ((?x55598 (* l_0_18_168 l_0_18_168)))
 (let ((?x55596 (* l_0_18_167 l_0_18_167)))
 (let ((?x55594 (* l_0_18_166 l_0_18_166)))
 (let ((?x55578 (* l_0_18_165 l_0_18_165)))
 (let ((?x55574 (* l_0_18_164 l_0_18_164)))
 (let ((?x55576 (+ (+ (* l_0_18_162 l_0_18_162) (* l_0_18_163 l_0_18_163)) ?x55574)))
 (let ((?x55605 (- (- (- (+ (+ (+ (+ ?x55576 ?x55578) ?x55594) ?x55596) ?x55598) ?x55600) ?x55602) ?x55604)))
 (let ((?x55619 (+ (+ (+ (- (- (- (- ?x55605 ?x55606) ?x55608) ?x55610) ?x55612) ?x55614) ?x55616) ?x55618)))
 (= (+ (+ (+ (+ ?x55619 ?x55620) ?x55622) ?x55624) ?x55626) 0.0))))))))))))))))))))))))
(assert
 (let ((?x54195 (* l_0_18_29 l_0_18_29)))
 (let ((?x54102 (* l_0_18_169 l_0_18_169)))
 (let ((?x55644 (* 2.0 ?x54102)))
 (let ((?x44668 (* l_0_18_1 l_0_18_1)))
 (let ((?x55645 (+ ?x44668 ?x55644)))
 (let ((?x55649 (- (- ?x55645 (* (* 2.0 l_0_18_197) l_0_18_200)) (* (* 2.0 l_0_18_225) l_0_18_228))))
 (let ((?x55653 (- (- ?x55649 (* (* 2.0 l_0_18_253) l_0_18_256)) (* (* 2.0 l_0_18_281) l_0_18_284))))
 (let ((?x55658 (- (- (- ?x55653 ?x54195) (* (* 2.0 l_0_18_309) l_0_18_312)) (* (* 2.0 l_0_18_337) l_0_18_340))))
 (= ?x55658 0.0))))))))))
(assert
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54282 (* ?x54281 l_0_18_30)))
 (let ((?x45930 (+ (* (* 2.0 l_0_18_1) l_0_18_2) (* (* 4.0 l_0_18_169) l_0_18_170))))
 (let ((?x35151 (- (- ?x45930 (* (* 2.0 l_0_18_198) l_0_18_200)) (* (* 2.0 l_0_18_199) l_0_18_201))))
 (let ((?x55670 (- (- ?x35151 (* (* 2.0 l_0_18_226) l_0_18_228)) (* (* 2.0 l_0_18_227) l_0_18_229))))
 (let ((?x55676 (- (- ?x55670 (* (* 2.0 l_0_18_254) l_0_18_256)) (* (* 2.0 l_0_18_255) l_0_18_257))))
 (let ((?x55682 (- (- ?x55676 (* (* 2.0 l_0_18_282) l_0_18_284)) (* (* 2.0 l_0_18_283) l_0_18_285))))
 (let ((?x55689 (- (- (- ?x55682 ?x54282) (* (* 2.0 l_0_18_310) l_0_18_312)) (* (* 2.0 l_0_18_311) l_0_18_313))))
 (let ((?x55695 (- (- ?x55689 (* (* 2.0 l_0_18_338) l_0_18_340)) (* (* 2.0 l_0_18_339) l_0_18_341))))
 (= ?x55695 0.0)))))))))))
(assert
 (let ((?x55766 (* l_0_18_342 l_0_18_342)))
 (let ((?x55764 (* l_0_18_341 l_0_18_341)))
 (let ((?x55762 (* l_0_18_340 l_0_18_340)))
 (let ((?x55760 (* l_0_18_314 l_0_18_314)))
 (let ((?x55758 (* l_0_18_313 l_0_18_313)))
 (let ((?x55756 (* l_0_18_312 l_0_18_312)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54338 (* ?x54281 l_0_18_32)))
 (let ((?x55753 (* l_0_18_286 l_0_18_286)))
 (let ((?x55751 (* l_0_18_285 l_0_18_285)))
 (let ((?x55749 (* l_0_18_284 l_0_18_284)))
 (let ((?x55747 (* l_0_18_258 l_0_18_258)))
 (let ((?x55745 (* l_0_18_257 l_0_18_257)))
 (let ((?x55743 (* l_0_18_256 l_0_18_256)))
 (let ((?x55741 (* l_0_18_230 l_0_18_230)))
 (let ((?x55739 (* l_0_18_229 l_0_18_229)))
 (let ((?x55737 (* l_0_18_228 l_0_18_228)))
 (let ((?x55735 (* l_0_18_202 l_0_18_202)))
 (let ((?x55733 (* l_0_18_201 l_0_18_201)))
 (let ((?x55731 (* l_0_18_200 l_0_18_200)))
 (let ((?x55730 (+ (* (* 2.0 l_0_18_1) l_0_18_4) (* (* 4.0 l_0_18_169) l_0_18_172))))
 (let ((?x55744 (- (- (- (- (- (- (- ?x55730 ?x55731) ?x55733) ?x55735) ?x55737) ?x55739) ?x55741) ?x55743)))
 (let ((?x55757 (- (- (- (- (- (- (- ?x55744 ?x55745) ?x55747) ?x55749) ?x55751) ?x55753) ?x54338) ?x55756)))
 (= (- (- (- (- (- ?x55757 ?x55758) ?x55760) ?x55762) ?x55764) ?x55766) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54387 (* ?x54281 l_0_18_35)))
 (let ((?x55801 (+ (* (* 2.0 l_0_18_1) l_0_18_7) (* (* 4.0 l_0_18_169) l_0_18_175))))
 (let ((?x55807 (- (- ?x55801 (* (* 2.0 l_0_18_200) l_0_18_203)) (* (* 2.0 l_0_18_201) l_0_18_204))))
 (let ((?x55813 (- (- ?x55807 (* (* 2.0 l_0_18_202) l_0_18_205)) (* (* 2.0 l_0_18_228) l_0_18_231))))
 (let ((?x55819 (- (- ?x55813 (* (* 2.0 l_0_18_229) l_0_18_232)) (* (* 2.0 l_0_18_230) l_0_18_233))))
 (let ((?x55825 (- (- ?x55819 (* (* 2.0 l_0_18_256) l_0_18_259)) (* (* 2.0 l_0_18_257) l_0_18_260))))
 (let ((?x55831 (- (- ?x55825 (* (* 2.0 l_0_18_258) l_0_18_261)) (* (* 2.0 l_0_18_284) l_0_18_287))))
 (let ((?x55837 (- (- ?x55831 (* (* 2.0 l_0_18_285) l_0_18_288)) (* (* 2.0 l_0_18_286) l_0_18_289))))
 (let ((?x55844 (- (- (- ?x55837 ?x54387) (* (* 2.0 l_0_18_312) l_0_18_315)) (* (* 2.0 l_0_18_313) l_0_18_316))))
 (let ((?x55850 (- (- ?x55844 (* (* 2.0 l_0_18_314) l_0_18_317)) (* (* 2.0 l_0_18_340) l_0_18_343))))
 (let ((?x55856 (- (- ?x55850 (* (* 2.0 l_0_18_341) l_0_18_344)) (* (* 2.0 l_0_18_342) l_0_18_345))))
 (= ?x55856 0.0))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x55954 (* ?x54287 l_0_18_88)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x55952 (* ?x54284 l_0_18_60)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54449 (* ?x54281 l_0_18_39)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54315 (* ?x54278 l_0_18_144)))
 (let ((?x55908 (- (* (* 2.0 l_0_18_1) l_0_18_11) (* (* 2.0 l_0_18_113) l_0_18_116))))
 (let ((?x55914 (+ (- (- ?x55908 ?x54315) (* (* 2.0 l_0_18_169) l_0_18_172)) (* (* 4.0 l_0_18_169) l_0_18_179))))
 (let ((?x55918 (- (- ?x55914 (* (* 2.0 l_0_18_200) l_0_18_207)) (* (* 2.0 l_0_18_201) l_0_18_208))))
 (let ((?x55922 (- (- ?x55918 (* (* 2.0 l_0_18_202) l_0_18_209)) (* (* 2.0 l_0_18_228) l_0_18_235))))
 (let ((?x55926 (- (- ?x55922 (* (* 2.0 l_0_18_229) l_0_18_236)) (* (* 2.0 l_0_18_230) l_0_18_237))))
 (let ((?x55930 (- (- ?x55926 (* (* 2.0 l_0_18_256) l_0_18_263)) (* (* 2.0 l_0_18_257) l_0_18_264))))
 (let ((?x55934 (- (- ?x55930 (* (* 2.0 l_0_18_258) l_0_18_265)) (* (* 2.0 l_0_18_284) l_0_18_291))))
 (let ((?x55938 (- (- ?x55934 (* (* 2.0 l_0_18_285) l_0_18_292)) (* (* 2.0 l_0_18_286) l_0_18_293))))
 (let ((?x55943 (- (- (- ?x55938 ?x54449) (* (* 2.0 l_0_18_312) l_0_18_319)) (* (* 2.0 l_0_18_313) l_0_18_320))))
 (let ((?x55947 (- (- ?x55943 (* (* 2.0 l_0_18_314) l_0_18_321)) (* (* 2.0 l_0_18_340) l_0_18_347))))
 (let ((?x55951 (- (- ?x55947 (* (* 2.0 l_0_18_341) l_0_18_348)) (* (* 2.0 l_0_18_342) l_0_18_349))))
 (= (+ (- ?x55951 ?x55952) ?x55954) 0.0)))))))))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x55954 (* ?x54287 l_0_18_88)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x55952 (* ?x54284 l_0_18_60)))
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x54540 (* ?x54281 l_0_18_44)))
 (let ((?x55991 (+ (* (* 2.0 l_0_18_1) l_0_18_16) (* (* 4.0 l_0_18_169) l_0_18_184))))
 (let ((?x55995 (- (- ?x55991 (* (* 2.0 l_0_18_200) l_0_18_212)) (* (* 2.0 l_0_18_201) l_0_18_213))))
 (let ((?x55999 (- (- ?x55995 (* (* 2.0 l_0_18_202) l_0_18_214)) (* (* 2.0 l_0_18_228) l_0_18_240))))
 (let ((?x56003 (- (- ?x55999 (* (* 2.0 l_0_18_229) l_0_18_241)) (* (* 2.0 l_0_18_230) l_0_18_242))))
 (let ((?x56007 (- (- ?x56003 (* (* 2.0 l_0_18_256) l_0_18_268)) (* (* 2.0 l_0_18_257) l_0_18_269))))
 (let ((?x56011 (- (- ?x56007 (* (* 2.0 l_0_18_258) l_0_18_270)) (* (* 2.0 l_0_18_284) l_0_18_296))))
 (let ((?x56015 (- (- ?x56011 (* (* 2.0 l_0_18_285) l_0_18_297)) (* (* 2.0 l_0_18_286) l_0_18_298))))
 (let ((?x56020 (- (- (- ?x56015 ?x54540) (* (* 2.0 l_0_18_312) l_0_18_324)) (* (* 2.0 l_0_18_313) l_0_18_325))))
 (let ((?x56024 (- (- ?x56020 (* (* 2.0 l_0_18_314) l_0_18_326)) (* (* 2.0 l_0_18_340) l_0_18_352))))
 (let ((?x56028 (- (- ?x56024 (* (* 2.0 l_0_18_341) l_0_18_353)) (* (* 2.0 l_0_18_342) l_0_18_354))))
 (= (- (+ ?x56028 ?x55952) ?x55954) 0.0))))))))))))))))))
(assert
 (let ((?x54281 (* 2.0 l_0_18_29)))
 (let ((?x45474 (* ?x54281 l_0_18_50)))
 (let ((?x56104 (+ (* (* 2.0 l_0_18_1) l_0_18_22) (* (* 4.0 l_0_18_169) l_0_18_190))))
 (let ((?x56108 (- (- ?x56104 (* (* 2.0 l_0_18_200) l_0_18_218)) (* (* 2.0 l_0_18_201) l_0_18_219))))
 (let ((?x56112 (- (- ?x56108 (* (* 2.0 l_0_18_202) l_0_18_220)) (* (* 2.0 l_0_18_228) l_0_18_246))))
 (let ((?x56116 (- (- ?x56112 (* (* 2.0 l_0_18_229) l_0_18_247)) (* (* 2.0 l_0_18_230) l_0_18_248))))
 (let ((?x56120 (- (- ?x56116 (* (* 2.0 l_0_18_256) l_0_18_274)) (* (* 2.0 l_0_18_257) l_0_18_275))))
 (let ((?x56124 (- (- ?x56120 (* (* 2.0 l_0_18_258) l_0_18_276)) (* (* 2.0 l_0_18_284) l_0_18_302))))
 (let ((?x56128 (- (- ?x56124 (* (* 2.0 l_0_18_285) l_0_18_303)) (* (* 2.0 l_0_18_286) l_0_18_304))))
 (let ((?x56133 (- (- (- ?x56128 ?x45474) (* (* 2.0 l_0_18_312) l_0_18_330)) (* (* 2.0 l_0_18_313) l_0_18_331))))
 (let ((?x56137 (- (- ?x56133 (* (* 2.0 l_0_18_314) l_0_18_332)) (* (* 2.0 l_0_18_340) l_0_18_358))))
 (let ((?x56141 (- (- ?x56137 (* (* 2.0 l_0_18_341) l_0_18_359)) (* (* 2.0 l_0_18_342) l_0_18_360))))
 (= ?x56141 0.0))))))))))))))
(assert
 (let ((?x54568 (* l_0_18_31 l_0_18_31)))
 (let ((?x54566 (* l_0_18_30 l_0_18_30)))
 (let ((?x54564 (* l_0_18_3 l_0_18_3)))
 (let ((?x54557 (* l_0_18_2 l_0_18_2)))
 (let ((?x56199 (* l_0_18_171 l_0_18_171)))
 (let ((?x56200 (* 2.0 ?x56199)))
 (let ((?x56197 (* l_0_18_170 l_0_18_170)))
 (let ((?x56198 (* 2.0 ?x56197)))
 (= (- (- (+ (+ (+ ?x56198 ?x56200) ?x54557) ?x54564) ?x54566) ?x54568) 0.0))))))))))
(assert
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54613 (* ?x54612 l_0_18_33)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54610 (* ?x54609 l_0_18_32)))
 (let ((?x54606 (* 2.0 l_0_18_3)))
 (let ((?x54607 (* ?x54606 l_0_18_5)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54604 (* ?x54603 l_0_18_4)))
 (let ((?x56215 (+ (* (* 4.0 l_0_18_170) l_0_18_172) (* (* 4.0 l_0_18_171) l_0_18_173))))
 (= (- (- (+ (+ ?x56215 ?x54604) ?x54607) ?x54610) ?x54613) 0.0)))))))))))
(assert
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54673 (* ?x54612 l_0_18_36)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54671 (* ?x54609 l_0_18_35)))
 (let ((?x54606 (* 2.0 l_0_18_3)))
 (let ((?x54669 (* ?x54606 l_0_18_8)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54667 (* ?x54603 l_0_18_7)))
 (let ((?x56233 (+ (* (* 4.0 l_0_18_170) l_0_18_175) (* (* 4.0 l_0_18_171) l_0_18_176))))
 (= (- (- (+ (+ ?x56233 ?x54667) ?x54669) ?x54671) ?x54673) 0.0)))))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x56259 (* ?x54579 l_0_18_89)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x56257 (* ?x54576 l_0_18_88)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x56255 (* ?x54573 l_0_18_61)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x56253 (* ?x54570 l_0_18_60)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54727 (* ?x54612 l_0_18_40)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54725 (* ?x54609 l_0_18_39)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54601 (* ?x54600 l_0_18_145)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54599 (* ?x54598 l_0_18_144)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x54719 (* ?x54718 l_0_18_3)))
 (let ((?x36383 (- (* (* 2.0 l_0_18_11) l_0_18_2) (* (* 2.0 l_0_18_114) l_0_18_116))))
 (let ((?x56240 (- (- (+ (- ?x36383 (* (* 2.0 l_0_18_115) l_0_18_117)) ?x54719) ?x54599) ?x54601)))
 (let ((?x56245 (+ (- ?x56240 (* (* 2.0 l_0_18_170) l_0_18_172)) (* (* 4.0 l_0_18_170) l_0_18_179))))
 (let ((?x56250 (+ (- ?x56245 (* (* 2.0 l_0_18_171) l_0_18_173)) (* (* 4.0 l_0_18_171) l_0_18_180))))
 (= (+ (+ (- (- (- (- ?x56250 ?x54725) ?x54727) ?x56253) ?x56255) ?x56257) ?x56259) 0.0))))))))))))))))))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x56259 (* ?x54579 l_0_18_89)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x56257 (* ?x54576 l_0_18_88)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x56255 (* ?x54573 l_0_18_61)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x56253 (* ?x54570 l_0_18_60)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54810 (* ?x54612 l_0_18_45)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54808 (* ?x54609 l_0_18_44)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x54806 (* ?x54805 l_0_18_3)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x54803 (* ?x54802 l_0_18_2)))
 (let ((?x56298 (+ (+ (+ ?x54803 ?x54806) (* (* 4.0 l_0_18_170) l_0_18_184)) (* (* 4.0 l_0_18_171) l_0_18_185))))
 (= (- (- (+ (+ (- (- ?x56298 ?x54808) ?x54810) ?x56253) ?x56255) ?x56257) ?x56259) 0.0)))))))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x55954 (* ?x54287 l_0_18_88)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x55952 (* ?x54284 l_0_18_60)))
 (let ((?x54612 (* 2.0 l_0_18_31)))
 (let ((?x54883 (* ?x54612 l_0_18_51)))
 (let ((?x54609 (* 2.0 l_0_18_30)))
 (let ((?x54881 (* ?x54609 l_0_18_50)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x54879 (* ?x54332 l_0_18_3)))
 (let ((?x54603 (* 2.0 l_0_18_2)))
 (let ((?x54877 (* ?x54603 l_0_18_22)))
 (let ((?x56314 (+ (* (* 4.0 l_0_18_170) l_0_18_190) (* (* 4.0 l_0_18_171) l_0_18_191))))
 (= (+ (- (- (- (+ (+ ?x56314 ?x54877) ?x54879) ?x54881) ?x54883) ?x55952) ?x55954) 0.0)))))))))))))))
(assert
 (let ((?x54938 (* l_0_18_6 l_0_18_6)))
 (let ((?x54936 (* l_0_18_5 l_0_18_5)))
 (let ((?x54934 (* l_0_18_4 l_0_18_4)))
 (let ((?x54932 (* l_0_18_34 l_0_18_34)))
 (let ((?x54930 (* l_0_18_33 l_0_18_33)))
 (let ((?x54928 (* l_0_18_32 l_0_18_32)))
 (let ((?x46488 (* l_0_18_174 l_0_18_174)))
 (let ((?x46490 (* 2.0 ?x46488)))
 (let ((?x12090 (* l_0_18_173 l_0_18_173)))
 (let ((?x46486 (* 2.0 ?x12090)))
 (let ((?x46481 (* l_0_18_172 l_0_18_172)))
 (let ((?x46483 (* 2.0 ?x46481)))
 (let ((?x36898 (+ (+ (- (- (- (+ (+ ?x46483 ?x46486) ?x46490) ?x54928) ?x54930) ?x54932) ?x54934) ?x54936)))
 (= (+ ?x36898 ?x54938) 0.0)))))))))))))))
(assert
 (let ((?x54959 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x54956 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x54953 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x54950 (* ?x54949 l_0_18_37)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x10060 (* ?x10119 l_0_18_36)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x10137 (* ?x45693 l_0_18_35)))
 (let ((?x56340 (+ (* (* 4.0 l_0_18_172) l_0_18_175) (* (* 4.0 l_0_18_173) l_0_18_176))))
 (let ((?x56346 (- (- (- (+ ?x56340 (* (* 4.0 l_0_18_174) l_0_18_177)) ?x10137) ?x10060) ?x54950)))
 (= (+ (+ (+ ?x56346 ?x54953) ?x54956) ?x54959) 0.0)))))))))))))
(assert
 (let ((?x56393 (* l_0_18_90 l_0_18_90)))
 (let ((?x56391 (* l_0_18_89 l_0_18_89)))
 (let ((?x56389 (* l_0_18_88 l_0_18_88)))
 (let ((?x56387 (* l_0_18_62 l_0_18_62)))
 (let ((?x56385 (* l_0_18_61 l_0_18_61)))
 (let ((?x56383 (* l_0_18_60 l_0_18_60)))
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55005 (* ?x54949 l_0_18_41)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55003 (* ?x10119 l_0_18_40)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55001 (* ?x45693 l_0_18_39)))
 (let ((?x46488 (* l_0_18_174 l_0_18_174)))
 (let ((?x12090 (* l_0_18_173 l_0_18_173)))
 (let ((?x46481 (* l_0_18_172 l_0_18_172)))
 (let ((?x54926 (* l_0_18_146 l_0_18_146)))
 (let ((?x54924 (* l_0_18_145 l_0_18_145)))
 (let ((?x54923 (* l_0_18_144 l_0_18_144)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x54993 (* ?x54992 l_0_18_6)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x54990 (* ?x54718 l_0_18_5)))
 (let ((?x56364 (* l_0_18_118 l_0_18_118)))
 (let ((?x56362 (* l_0_18_117 l_0_18_117)))
 (let ((?x56363 (- (- (* (* 2.0 l_0_18_11) l_0_18_4) (* l_0_18_116 l_0_18_116)) ?x56362)))
 (let ((?x56372 (+ (- (- (- (+ (+ (- ?x56363 ?x56364) ?x54990) ?x54993) ?x54923) ?x54924) ?x54926) (* (* 4.0 l_0_18_172) l_0_18_179))))
 (let ((?x56378 (+ (- (+ (- ?x56372 ?x46481) (* (* 4.0 l_0_18_173) l_0_18_180)) ?x12090) (* (* 4.0 l_0_18_174) l_0_18_181))))
 (let ((?x56388 (- (- (- (- (- (- (- ?x56378 ?x46488) ?x55001) ?x55003) ?x55005) ?x56383) ?x56385) ?x56387)))
 (= (+ (+ (+ ?x56388 ?x56389) ?x56391) ?x56393) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x56393 (* l_0_18_90 l_0_18_90)))
 (let ((?x56391 (* l_0_18_89 l_0_18_89)))
 (let ((?x56389 (* l_0_18_88 l_0_18_88)))
 (let ((?x56387 (* l_0_18_62 l_0_18_62)))
 (let ((?x56385 (* l_0_18_61 l_0_18_61)))
 (let ((?x56383 (* l_0_18_60 l_0_18_60)))
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55040 (* ?x54949 l_0_18_46)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55038 (* ?x10119 l_0_18_45)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55036 (* ?x45693 l_0_18_44)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55034 (* ?x55033 l_0_18_6)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55031 (* ?x54805 l_0_18_5)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x55021 (* ?x54802 l_0_18_4)))
 (let ((?x56437 (+ (+ (+ ?x55021 ?x55031) (* (* 4.0 l_0_18_172) l_0_18_184)) (* (* 4.0 l_0_18_173) l_0_18_185))))
 (let ((?x56442 (- (- (+ (+ ?x56437 (* (* 4.0 l_0_18_174) l_0_18_186)) ?x55034) ?x55036) ?x55038)))
 (let ((?x56449 (- (- (- (+ (+ (+ (- ?x56442 ?x55040) ?x56383) ?x56385) ?x56387) ?x56389) ?x56391) ?x56393)))
 (= ?x56449 0.0)))))))))))))))))))))))
(assert
 (let ((?x54949 (* 2.0 l_0_18_34)))
 (let ((?x55088 (* ?x54949 l_0_18_52)))
 (let ((?x10119 (* 2.0 l_0_18_33)))
 (let ((?x55086 (* ?x10119 l_0_18_51)))
 (let ((?x45693 (* 2.0 l_0_18_32)))
 (let ((?x55084 (* ?x45693 l_0_18_50)))
 (let ((?x54335 (* 2.0 l_0_18_24)))
 (let ((?x55082 (* ?x54335 l_0_18_6)))
 (let ((?x54332 (* 2.0 l_0_18_23)))
 (let ((?x55080 (* ?x54332 l_0_18_5)))
 (let ((?x54329 (* 2.0 l_0_18_22)))
 (let ((?x55078 (* ?x54329 l_0_18_4)))
 (let ((?x36923 (+ (* (* 4.0 l_0_18_172) l_0_18_190) (* (* 4.0 l_0_18_173) l_0_18_191))))
 (let ((?x36925 (+ (+ (+ (+ ?x36923 (* (* 4.0 l_0_18_174) l_0_18_192)) ?x55078) ?x55080) ?x55082)))
 (= (- (- (- ?x36925 ?x55084) ?x55086) ?x55088) 0.0))))))))))))))))
(assert
 (let ((?x55140 (* l_0_18_9 l_0_18_9)))
 (let ((?x55138 (* l_0_18_8 l_0_18_8)))
 (let ((?x55136 (* l_0_18_7 l_0_18_7)))
 (let ((?x55134 (* l_0_18_38 l_0_18_38)))
 (let ((?x55132 (* l_0_18_37 l_0_18_37)))
 (let ((?x55130 (* l_0_18_36 l_0_18_36)))
 (let ((?x55128 (* l_0_18_35 l_0_18_35)))
 (let ((?x56467 (* l_0_18_178 l_0_18_178)))
 (let ((?x56468 (* 2.0 ?x56467)))
 (let ((?x56464 (* l_0_18_177 l_0_18_177)))
 (let ((?x56465 (* 2.0 ?x56464)))
 (let ((?x56461 (* l_0_18_176 l_0_18_176)))
 (let ((?x56462 (* 2.0 ?x56461)))
 (let ((?x56458 (* l_0_18_175 l_0_18_175)))
 (let ((?x56459 (* 2.0 ?x56458)))
 (let ((?x55144 (* l_0_18_10 l_0_18_10)))
 (let ((?x56472 (- (- (- (+ (+ (+ (+ ?x55144 ?x56459) ?x56462) ?x56465) ?x56468) ?x55128) ?x55130) ?x55132)))
 (= (+ (+ (+ (- ?x56472 ?x55134) ?x55136) ?x55138) ?x55140) 0.0)))))))))))))))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x54631 (* ?x54630 l_0_18_93)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x54628 (* ?x54627 l_0_18_92)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x54625 (* ?x54624 l_0_18_91)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x54622 (* ?x54621 l_0_18_65)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x54619 (* ?x54618 l_0_18_64)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x54616 (* ?x54615 l_0_18_63)))
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x55177 (* ?x54349 l_0_18_42)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x55175 (* ?x54346 l_0_18_41)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x55173 (* ?x54343 l_0_18_40)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x55171 (* ?x54340 l_0_18_39)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x10134 (* ?x45685 l_0_18_149)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x45699 (* ?x25119 l_0_18_148)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x25030 (* ?x10122 l_0_18_147)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55161 (* ?x54992 l_0_18_9)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55159 (* ?x54718 l_0_18_8)))
 (let ((?x55156 (* 2.0 l_0_18_11)))
 (let ((?x55157 (* ?x55156 l_0_18_7)))
 (let ((?x56495 (- (+ (* (* 2.0 l_0_18_10) l_0_18_14) ?x55157) (* (* 2.0 l_0_18_116) l_0_18_119))))
 (let ((?x56501 (- (- ?x56495 (* (* 2.0 l_0_18_117) l_0_18_120)) (* (* 2.0 l_0_18_118) l_0_18_121))))
 (let ((?x56509 (- (- (- (- (+ (+ ?x56501 ?x55159) ?x55161) ?x25030) ?x45699) ?x10134) (* (* 2.0 l_0_18_172) l_0_18_175))))
 (let ((?x56515 (- (- ?x56509 (* (* 2.0 l_0_18_173) l_0_18_176)) (* (* 2.0 l_0_18_174) l_0_18_177))))
 (let ((?x56519 (+ (+ ?x56515 (* (* 4.0 l_0_18_175) l_0_18_179)) (* (* 4.0 l_0_18_176) l_0_18_180))))
 (let ((?x56523 (+ (+ ?x56519 (* (* 4.0 l_0_18_177) l_0_18_181)) (* (* 4.0 l_0_18_178) l_0_18_182))))
 (let ((?x56530 (- (- (- (- (- (- (- ?x56523 ?x55171) ?x55173) ?x55175) ?x55177) ?x54616) ?x54619) ?x54622)))
 (= (+ (+ (+ ?x56530 ?x54625) ?x54628) ?x54631) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x54631 (* ?x54630 l_0_18_93)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x54628 (* ?x54627 l_0_18_92)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x54625 (* ?x54624 l_0_18_91)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x54622 (* ?x54621 l_0_18_65)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x54619 (* ?x54618 l_0_18_64)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x54616 (* ?x54615 l_0_18_63)))
 (let ((?x54349 (* 2.0 l_0_18_38)))
 (let ((?x55225 (* ?x54349 l_0_18_47)))
 (let ((?x54346 (* 2.0 l_0_18_37)))
 (let ((?x55223 (* ?x54346 l_0_18_46)))
 (let ((?x54343 (* 2.0 l_0_18_36)))
 (let ((?x55221 (* ?x54343 l_0_18_45)))
 (let ((?x54340 (* 2.0 l_0_18_35)))
 (let ((?x55219 (* ?x54340 l_0_18_44)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55217 (* ?x55033 l_0_18_9)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55215 (* ?x54805 l_0_18_8)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x55213 (* ?x54802 l_0_18_7)))
 (let ((?x56568 (+ (+ (+ (* (* 2.0 l_0_18_10) l_0_18_19) ?x55213) ?x55215) (* (* 4.0 l_0_18_175) l_0_18_184))))
 (let ((?x56572 (+ (+ ?x56568 (* (* 4.0 l_0_18_176) l_0_18_185)) (* (* 4.0 l_0_18_177) l_0_18_186))))
 (let ((?x56577 (- (- (+ (+ ?x56572 (* (* 4.0 l_0_18_178) l_0_18_187)) ?x55217) ?x55219) ?x55221)))
 (let ((?x56584 (- (- (+ (+ (+ (- (- ?x56577 ?x55223) ?x55225) ?x54616) ?x54619) ?x54622) ?x54625) ?x54628)))
 (= (- ?x56584 ?x54631) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x56655 (* ?x54630 l_0_18_97)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x56653 (* ?x54627 l_0_18_96)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x56651 (* ?x54624 l_0_18_95)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56649 (* ?x54621 l_0_18_69)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56647 (* ?x54618 l_0_18_68)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56645 (* ?x54615 l_0_18_67)))
 (let ((?x55294 (* l_0_18_43 l_0_18_43)))
 (let ((?x55292 (* l_0_18_42 l_0_18_42)))
 (let ((?x55290 (* l_0_18_41 l_0_18_41)))
 (let ((?x55288 (* l_0_18_40 l_0_18_40)))
 (let ((?x55286 (* l_0_18_39 l_0_18_39)))
 (let ((?x56637 (* l_0_18_183 l_0_18_183)))
 (let ((?x56638 (* 2.0 ?x56637)))
 (let ((?x56634 (* l_0_18_182 l_0_18_182)))
 (let ((?x56635 (* 2.0 ?x56634)))
 (let ((?x56631 (* l_0_18_181 l_0_18_181)))
 (let ((?x56632 (* 2.0 ?x56631)))
 (let ((?x56628 (* l_0_18_180 l_0_18_180)))
 (let ((?x56629 (* 2.0 ?x56628)))
 (let ((?x56625 (* l_0_18_179 l_0_18_179)))
 (let ((?x56626 (* 2.0 ?x56625)))
 (let ((?x45794 (* l_0_18_15 l_0_18_15)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x54999 (* ?x45685 l_0_18_153)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x54997 (* ?x25119 l_0_18_152)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x54995 (* ?x10122 l_0_18_151)))
 (let ((?x45832 (* l_0_18_14 l_0_18_14)))
 (let ((?x45829 (* l_0_18_13 l_0_18_13)))
 (let ((?x23255 (* l_0_18_12 l_0_18_12)))
 (let ((?x55298 (* l_0_18_11 l_0_18_11)))
 (let ((?x56609 (- (- ?x55298 (* (* 2.0 l_0_18_116) l_0_18_123)) (* (* 2.0 l_0_18_117) l_0_18_124))))
 (let ((?x56614 (+ (+ (+ (- ?x56609 (* (* 2.0 l_0_18_118) l_0_18_125)) ?x23255) ?x45829) ?x45832)))
 (let ((?x56620 (- (+ (- (- (- ?x56614 ?x54995) ?x54997) ?x54999) ?x45794) (* (* 2.0 l_0_18_172) l_0_18_179))))
 (let ((?x56624 (- (- ?x56620 (* (* 2.0 l_0_18_173) l_0_18_180)) (* (* 2.0 l_0_18_174) l_0_18_181))))
 (let ((?x56641 (- (- (+ (+ (+ (+ (+ ?x56624 ?x56626) ?x56629) ?x56632) ?x56635) ?x56638) ?x55286) ?x55288)))
 (let ((?x56652 (+ (- (- (- (- (- (- ?x56641 ?x55290) ?x55292) ?x55294) ?x56645) ?x56647) ?x56649) ?x56651)))
 (= (+ (+ ?x56652 ?x56653) ?x56655) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x56655 (* ?x54630 l_0_18_97)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x56653 (* ?x54627 l_0_18_96)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x56651 (* ?x54624 l_0_18_95)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56732 (* ?x54621 l_0_18_74)))
 (let ((?x56649 (* ?x54621 l_0_18_69)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56729 (* ?x54618 l_0_18_73)))
 (let ((?x56647 (* ?x54618 l_0_18_68)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56726 (* ?x54615 l_0_18_72)))
 (let ((?x56645 (* ?x54615 l_0_18_67)))
 (let ((?x55346 (* 2.0 l_0_18_43)))
 (let ((?x55347 (* ?x55346 l_0_18_48)))
 (let ((?x55343 (* 2.0 l_0_18_42)))
 (let ((?x55344 (* ?x55343 l_0_18_47)))
 (let ((?x55340 (* 2.0 l_0_18_41)))
 (let ((?x55341 (* ?x55340 l_0_18_46)))
 (let ((?x55337 (* 2.0 l_0_18_40)))
 (let ((?x55338 (* ?x55337 l_0_18_45)))
 (let ((?x55334 (* 2.0 l_0_18_39)))
 (let ((?x55335 (* ?x55334 l_0_18_44)))
 (let ((?x55316 (* 2.0 l_0_18_15)))
 (let ((?x55317 (* ?x55316 l_0_18_20)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x55017 (* ?x45685 l_0_18_158)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x45749 (* ?x25119 l_0_18_157)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x45746 (* ?x10122 l_0_18_156)))
 (let ((?x55313 (* 2.0 l_0_18_14)))
 (let ((?x55314 (* ?x55313 l_0_18_19)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55311 (* ?x54992 l_0_18_18)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55309 (* ?x54718 l_0_18_17)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x56672 (* ?x54792 l_0_18_90)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x12966 (* ?x54777 l_0_18_89)))
 (let ((?x56683 (+ (+ (* (* 2.0 l_0_18_100) l_0_18_88) ?x12966) ?x56672)))
 (let ((?x56687 (- (+ ?x56683 (* (* 2.0 l_0_18_11) l_0_18_16)) (* (* 2.0 l_0_18_116) l_0_18_128))))
 (let ((?x56691 (- (- ?x56687 (* (* 2.0 l_0_18_117) l_0_18_129)) (* (* 2.0 l_0_18_118) l_0_18_130))))
 (let ((?x56698 (+ (- (- (- (+ (+ (+ ?x56691 ?x55309) ?x55311) ?x55314) ?x45746) ?x45749) ?x55017) ?x55317)))
 (let ((?x56702 (- (- ?x56698 (* (* 2.0 l_0_18_172) l_0_18_184)) (* (* 2.0 l_0_18_173) l_0_18_185))))
 (let ((?x56707 (+ (- ?x56702 (* (* 2.0 l_0_18_174) l_0_18_186)) (* (* 4.0 l_0_18_179) l_0_18_184))))
 (let ((?x56713 (+ (+ ?x56707 (* (* 4.0 l_0_18_180) l_0_18_185)) (* (* 4.0 l_0_18_181) l_0_18_186))))
 (let ((?x56719 (+ (+ ?x56713 (* (* 4.0 l_0_18_182) l_0_18_187)) (* (* 4.0 l_0_18_183) l_0_18_188))))
 (let ((?x56727 (- (+ (- (- (- (- (- ?x56719 ?x55335) ?x55338) ?x55341) ?x55344) ?x55347) ?x56645) ?x56726)))
 (let ((?x56736 (- (- (- (- (+ (- (+ ?x56727 ?x56647) ?x56729) ?x56649) ?x56732) ?x56651) ?x56653) ?x56655)))
 (= ?x56736 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56841 (* ?x54621 l_0_18_80)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56839 (* ?x54618 l_0_18_79)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56837 (* ?x54615 l_0_18_78)))
 (let ((?x55346 (* 2.0 l_0_18_43)))
 (let ((?x55417 (* ?x55346 l_0_18_54)))
 (let ((?x55343 (* 2.0 l_0_18_42)))
 (let ((?x55415 (* ?x55343 l_0_18_53)))
 (let ((?x55340 (* 2.0 l_0_18_41)))
 (let ((?x55413 (* ?x55340 l_0_18_52)))
 (let ((?x55337 (* 2.0 l_0_18_40)))
 (let ((?x55411 (* ?x55337 l_0_18_51)))
 (let ((?x55334 (* 2.0 l_0_18_39)))
 (let ((?x55409 (* ?x55334 l_0_18_50)))
 (let ((?x55316 (* 2.0 l_0_18_15)))
 (let ((?x55382 (* ?x55316 l_0_18_26)))
 (let ((?x45685 (* 2.0 l_0_18_146)))
 (let ((?x55068 (* ?x45685 l_0_18_164)))
 (let ((?x25119 (* 2.0 l_0_18_145)))
 (let ((?x55065 (* ?x25119 l_0_18_163)))
 (let ((?x10122 (* 2.0 l_0_18_144)))
 (let ((?x55063 (* ?x10122 l_0_18_162)))
 (let ((?x55313 (* 2.0 l_0_18_14)))
 (let ((?x55378 (* ?x55313 l_0_18_25)))
 (let ((?x54992 (* 2.0 l_0_18_13)))
 (let ((?x55374 (* ?x54992 l_0_18_24)))
 (let ((?x54718 (* 2.0 l_0_18_12)))
 (let ((?x55370 (* ?x54718 l_0_18_23)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x56799 (* ?x54405 l_0_18_90)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56797 (* ?x54402 l_0_18_89)))
 (let ((?x56800 (+ (+ (* (* 2.0 l_0_18_106) l_0_18_88) ?x56797) ?x56799)))
 (let ((?x56804 (- (+ ?x56800 (* (* 2.0 l_0_18_11) l_0_18_22)) (* (* 2.0 l_0_18_116) l_0_18_134))))
 (let ((?x56808 (- (- ?x56804 (* (* 2.0 l_0_18_117) l_0_18_135)) (* (* 2.0 l_0_18_118) l_0_18_136))))
 (let ((?x56815 (+ (- (- (- (+ (+ (+ ?x56808 ?x55370) ?x55374) ?x55378) ?x55063) ?x55065) ?x55068) ?x55382)))
 (let ((?x56819 (- (- ?x56815 (* (* 2.0 l_0_18_172) l_0_18_190)) (* (* 2.0 l_0_18_173) l_0_18_191))))
 (let ((?x56823 (+ (- ?x56819 (* (* 2.0 l_0_18_174) l_0_18_192)) (* (* 4.0 l_0_18_179) l_0_18_190))))
 (let ((?x56827 (+ (+ ?x56823 (* (* 4.0 l_0_18_180) l_0_18_191)) (* (* 4.0 l_0_18_181) l_0_18_192))))
 (let ((?x56831 (+ (+ ?x56827 (* (* 4.0 l_0_18_182) l_0_18_193)) (* (* 4.0 l_0_18_183) l_0_18_194))))
 (let ((?x56840 (- (- (- (- (- (- (- ?x56831 ?x55409) ?x55411) ?x55413) ?x55415) ?x55417) ?x56837) ?x56839)))
 (= (- ?x56840 ?x56841) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56732 (* ?x54621 l_0_18_74)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56729 (* ?x54618 l_0_18_73)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56726 (* ?x54615 l_0_18_72)))
 (let ((?x55481 (* l_0_18_49 l_0_18_49)))
 (let ((?x55479 (* l_0_18_48 l_0_18_48)))
 (let ((?x55477 (* l_0_18_47 l_0_18_47)))
 (let ((?x55475 (* l_0_18_46 l_0_18_46)))
 (let ((?x55473 (* l_0_18_45 l_0_18_45)))
 (let ((?x55471 (* l_0_18_44 l_0_18_44)))
 (let ((?x55469 (* l_0_18_21 l_0_18_21)))
 (let ((?x55467 (* l_0_18_20 l_0_18_20)))
 (let ((?x55465 (* l_0_18_19 l_0_18_19)))
 (let ((?x56876 (* l_0_18_189 l_0_18_189)))
 (let ((?x56877 (* 2.0 ?x56876)))
 (let ((?x56873 (* l_0_18_188 l_0_18_188)))
 (let ((?x56874 (* 2.0 ?x56873)))
 (let ((?x56870 (* l_0_18_187 l_0_18_187)))
 (let ((?x56871 (* 2.0 ?x56870)))
 (let ((?x56867 (* l_0_18_186 l_0_18_186)))
 (let ((?x56868 (* 2.0 ?x56867)))
 (let ((?x56864 (* l_0_18_185 l_0_18_185)))
 (let ((?x56865 (* 2.0 ?x56864)))
 (let ((?x56861 (* l_0_18_184 l_0_18_184)))
 (let ((?x56862 (* 2.0 ?x56861)))
 (let ((?x55463 (* l_0_18_18 l_0_18_18)))
 (let ((?x55461 (* l_0_18_17 l_0_18_17)))
 (let ((?x55439 (* l_0_18_16 l_0_18_16)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x56672 (* ?x54792 l_0_18_90)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x12966 (* ?x54777 l_0_18_89)))
 (let ((?x56859 (+ (+ (- (- (* (* (- 2.0) l_0_18_100) l_0_18_88) ?x12966) ?x56672) ?x55439) ?x55461)))
 (let ((?x56878 (+ (+ (+ (+ (+ (+ (+ ?x56859 ?x55463) ?x56862) ?x56865) ?x56868) ?x56871) ?x56874) ?x56877)))
 (let ((?x56885 (- (- (- (- (+ (+ (+ ?x56878 ?x55465) ?x55467) ?x55469) ?x55471) ?x55473) ?x55475) ?x55477)))
 (= (+ (+ (+ (- (- ?x56885 ?x55479) ?x55481) ?x56726) ?x56729) ?x56732) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56841 (* ?x54621 l_0_18_80)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56839 (* ?x54618 l_0_18_79)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56837 (* ?x54615 l_0_18_78)))
 (let ((?x55529 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x55526 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x55523 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x55520 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x55517 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x55514 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x55511 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x55508 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x55505 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x55033 (* 2.0 l_0_18_18)))
 (let ((?x55502 (* ?x55033 l_0_18_24)))
 (let ((?x54805 (* 2.0 l_0_18_17)))
 (let ((?x55500 (* ?x54805 l_0_18_23)))
 (let ((?x54802 (* 2.0 l_0_18_16)))
 (let ((?x10929 (* ?x54802 l_0_18_22)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x56799 (* ?x54405 l_0_18_90)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56797 (* ?x54402 l_0_18_89)))
 (let ((?x47345 (+ (+ (- (- (* (* (- 2.0) l_0_18_106) l_0_18_88) ?x56797) ?x56799) ?x10929) ?x55500)))
 (let ((?x56901 (+ (+ (+ ?x47345 ?x55502) (* (* 4.0 l_0_18_184) l_0_18_190)) (* (* 4.0 l_0_18_185) l_0_18_191))))
 (let ((?x56907 (+ (+ ?x56901 (* (* 4.0 l_0_18_186) l_0_18_192)) (* (* 4.0 l_0_18_187) l_0_18_193))))
 (let ((?x56913 (+ (+ ?x56907 (* (* 4.0 l_0_18_188) l_0_18_194)) (* (* 4.0 l_0_18_189) l_0_18_195))))
 (let ((?x56920 (- (- (- (- (+ (+ (+ ?x56913 ?x55505) ?x55508) ?x55511) ?x55514) ?x55517) ?x55520) ?x55523)))
 (= (+ (+ (+ (- (- ?x56920 ?x55526) ?x55529) ?x56837) ?x56839) ?x56841) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x55626 (* l_0_18_56 l_0_18_56)))
 (let ((?x55624 (* l_0_18_55 l_0_18_55)))
 (let ((?x55622 (* l_0_18_54 l_0_18_54)))
 (let ((?x55620 (* l_0_18_53 l_0_18_53)))
 (let ((?x55618 (* l_0_18_52 l_0_18_52)))
 (let ((?x55616 (* l_0_18_51 l_0_18_51)))
 (let ((?x55614 (* l_0_18_50 l_0_18_50)))
 (let ((?x55612 (* l_0_18_28 l_0_18_28)))
 (let ((?x55610 (* l_0_18_27 l_0_18_27)))
 (let ((?x55608 (* l_0_18_26 l_0_18_26)))
 (let ((?x55606 (* l_0_18_25 l_0_18_25)))
 (let ((?x55604 (* l_0_18_24 l_0_18_24)))
 (let ((?x55602 (* l_0_18_23 l_0_18_23)))
 (let ((?x55600 (* l_0_18_22 l_0_18_22)))
 (let ((?x47367 (* l_0_18_196 l_0_18_196)))
 (let ((?x26644 (* 2.0 ?x47367)))
 (let ((?x13637 (* l_0_18_195 l_0_18_195)))
 (let ((?x47364 (* 2.0 ?x13637)))
 (let ((?x13517 (* l_0_18_194 l_0_18_194)))
 (let ((?x47359 (* 2.0 ?x13517)))
 (let ((?x47353 (* l_0_18_193 l_0_18_193)))
 (let ((?x13540 (* 2.0 ?x47353)))
 (let ((?x37553 (* l_0_18_192 l_0_18_192)))
 (let ((?x47455 (* 2.0 ?x37553)))
 (let ((?x37599 (* l_0_18_191 l_0_18_191)))
 (let ((?x26620 (* 2.0 ?x37599)))
 (let ((?x37547 (* l_0_18_190 l_0_18_190)))
 (let ((?x26722 (* 2.0 ?x37547)))
 (let ((?x26646 (+ (+ (+ (+ (+ (+ (+ ?x26722 ?x26620) ?x47455) ?x13540) ?x47359) ?x47364) ?x26644) ?x55600)))
 (let ((?x12694 (- (+ (+ (+ (+ (+ (+ ?x26646 ?x55602) ?x55604) ?x55606) ?x55608) ?x55610) ?x55612) ?x55614)))
 (= (- (- (- (- (- (- ?x12694 ?x55616) ?x55618) ?x55620) ?x55622) ?x55624) ?x55626) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x54124 (* l_0_18_85 l_0_18_85)))
 (let ((?x54122 (* l_0_18_57 l_0_18_57)))
 (let ((?x56948 (- (* (* (- 2.0) l_0_18_198) l_0_18_218) (* (* 2.0 l_0_18_199) l_0_18_219))))
 (let ((?x56952 (- (- ?x56948 (* (* 2.0 l_0_18_226) l_0_18_246)) (* (* 2.0 l_0_18_227) l_0_18_247))))
 (let ((?x56956 (- (- ?x56952 (* (* 2.0 l_0_18_254) l_0_18_274)) (* (* 2.0 l_0_18_255) l_0_18_275))))
 (let ((?x56960 (- (- ?x56956 (* (* 2.0 l_0_18_282) l_0_18_302)) (* (* 2.0 l_0_18_283) l_0_18_303))))
 (let ((?x56964 (- (- ?x56960 (* (* 2.0 l_0_18_310) l_0_18_330)) (* (* 2.0 l_0_18_311) l_0_18_331))))
 (let ((?x56968 (- (- ?x56964 (* (* 2.0 l_0_18_338) l_0_18_358)) (* (* 2.0 l_0_18_339) l_0_18_359))))
 (= (+ (- ?x56968 ?x54122) ?x54124) 0.0))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x56991 (* ?x54287 l_0_18_86)))
 (= (+ (* (* (- 2.0) l_0_18_57) l_0_18_58) ?x56991) 0.0))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x57019 (* ?x54287 l_0_18_95)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57017 (* ?x54573 l_0_18_79)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57015 (* ?x54570 l_0_18_78)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57013 (* ?x54284 l_0_18_67)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54875 (* ?x54600 l_0_18_163)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54873 (* ?x54598 l_0_18_162)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56997 (* ?x54402 l_0_18_87)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x56995 (* ?x54393 l_0_18_86)))
 (let ((?x56998 (+ ?x56995 ?x56997)))
 (let ((?x57006 (- (- ?x56998 (* (* 2.0 l_0_18_114) l_0_18_134)) (* (* 2.0 l_0_18_115) l_0_18_135))))
 (let ((?x57012 (- (- (- (- ?x57006 ?x54873) ?x54875) (* (* 2.0 l_0_18_170) l_0_18_190)) (* (* 2.0 l_0_18_171) l_0_18_191))))
 (= (+ (- (- (- ?x57012 ?x57013) ?x57015) ?x57017) ?x57019) 0.0)))))))))))))))))))))
(assert
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57017 (* ?x54573 l_0_18_79)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57015 (* ?x54570 l_0_18_78)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57058 (* ?x54284 l_0_18_72)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56997 (* ?x54402 l_0_18_87)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x56995 (* ?x54393 l_0_18_86)))
 (let ((?x45696 (* 2.0 l_0_18_100)))
 (let ((?x57050 (* ?x45696 l_0_18_85)))
 (= (+ (+ (- (- (- ?x57050 ?x56995) ?x56997) ?x57058) ?x57015) ?x57017) 0.0))))))))))))))
(assert
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57071 (* ?x54284 l_0_18_78)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x47567 (* ?x54393 l_0_18_85)))
 (= (- ?x47567 ?x57071) 0.0))))))
(assert
 (let ((?x57086 (* l_0_18_87 l_0_18_87)))
 (let ((?x57084 (* l_0_18_86 l_0_18_86)))
 (let ((?x57085 (+ (- (* (- l_0_18_58) l_0_18_58) (* l_0_18_59 l_0_18_59)) ?x57084)))
 (= (+ ?x57085 ?x57086) 0.0)))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x56259 (* ?x54579 l_0_18_89)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x56257 (* ?x54576 l_0_18_88)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x56255 (* ?x54573 l_0_18_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_58) l_0_18_60) ?x56255) ?x56257) ?x56259) 0.0))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x57114 (* ?x54579 l_0_18_96)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x57112 (* ?x54576 l_0_18_95)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57110 (* ?x54573 l_0_18_68)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_58) l_0_18_67) ?x57110) ?x57112) ?x57114) 0.0))))))))
(assert
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57137 (* ?x54573 l_0_18_73)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57135 (* ?x54570 l_0_18_72)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57128 (* ?x54777 l_0_18_87)))
 (let ((?x57129 (+ (* (* 2.0 l_0_18_100) l_0_18_86) ?x57128)))
 (= (- (- ?x57129 ?x57135) ?x57137) 0.0)))))))))
(assert
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57017 (* ?x54573 l_0_18_79)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57015 (* ?x54570 l_0_18_78)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56997 (* ?x54402 l_0_18_87)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x56995 (* ?x54393 l_0_18_86)))
 (let ((?x56998 (+ ?x56995 ?x56997)))
 (= (- (- ?x56998 ?x57015) ?x57017) 0.0)))))))))))
(assert
 (let ((?x56393 (* l_0_18_90 l_0_18_90)))
 (let ((?x56391 (* l_0_18_89 l_0_18_89)))
 (let ((?x56389 (* l_0_18_88 l_0_18_88)))
 (let ((?x56387 (* l_0_18_62 l_0_18_62)))
 (let ((?x57167 (- (- (* (- l_0_18_60) l_0_18_60) (* l_0_18_61 l_0_18_61)) ?x56387)))
 (= (+ (+ (+ ?x57167 ?x56389) ?x56391) ?x56393) 0.0)))))))
(assert
 (let ((?x54630 (* 2.0 l_0_18_90)))
 (let ((?x56655 (* ?x54630 l_0_18_97)))
 (let ((?x54627 (* 2.0 l_0_18_89)))
 (let ((?x56653 (* ?x54627 l_0_18_96)))
 (let ((?x54624 (* 2.0 l_0_18_88)))
 (let ((?x56651 (* ?x54624 l_0_18_95)))
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56649 (* ?x54621 l_0_18_69)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56647 (* ?x54618 l_0_18_68)))
 (let ((?x57183 (+ (+ (- (- (* (* (- 2.0) l_0_18_60) l_0_18_67) ?x56647) ?x56649) ?x56651) ?x56653)))
 (= (+ ?x57183 ?x56655) 0.0)))))))))))))
(assert
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56732 (* ?x54621 l_0_18_74)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56729 (* ?x54618 l_0_18_73)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56726 (* ?x54615 l_0_18_72)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x56672 (* ?x54792 l_0_18_90)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x12966 (* ?x54777 l_0_18_89)))
 (let ((?x56683 (+ (+ (* (* 2.0 l_0_18_100) l_0_18_88) ?x12966) ?x56672)))
 (= (- (- (- ?x56683 ?x56726) ?x56729) ?x56732) 0.0)))))))))))))
(assert
 (let ((?x54621 (* 2.0 l_0_18_62)))
 (let ((?x56841 (* ?x54621 l_0_18_80)))
 (let ((?x54618 (* 2.0 l_0_18_61)))
 (let ((?x56839 (* ?x54618 l_0_18_79)))
 (let ((?x54615 (* 2.0 l_0_18_60)))
 (let ((?x56837 (* ?x54615 l_0_18_78)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x56799 (* ?x54405 l_0_18_90)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x56797 (* ?x54402 l_0_18_89)))
 (let ((?x56800 (+ (+ (* (* 2.0 l_0_18_106) l_0_18_88) ?x56797) ?x56799)))
 (= (- (- (- ?x56800 ?x56837) ?x56839) ?x56841) 0.0)))))))))))))
(assert
 (let ((?x57236 (* l_0_18_99 l_0_18_99)))
 (let ((?x57234 (* l_0_18_98 l_0_18_98)))
 (let ((?x57232 (* l_0_18_97 l_0_18_97)))
 (let ((?x57230 (* l_0_18_96 l_0_18_96)))
 (let ((?x57228 (* l_0_18_95 l_0_18_95)))
 (let ((?x57226 (* l_0_18_71 l_0_18_71)))
 (let ((?x57224 (* l_0_18_70 l_0_18_70)))
 (let ((?x57222 (* l_0_18_69 l_0_18_69)))
 (let ((?x57223 (- (- (* (- l_0_18_67) l_0_18_67) (* l_0_18_68 l_0_18_68)) ?x57222)))
 (let ((?x57237 (+ (+ (+ (+ (+ (- (- ?x57223 ?x57224) ?x57226) ?x57228) ?x57230) ?x57232) ?x57234) ?x57236)))
 (= ?x57237 0.0))))))))))))
(assert
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57278 (* ?x57277 l_0_18_76)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57275 (* ?x57274 l_0_18_75)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57272 (* ?x57271 l_0_18_74)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57269 (* ?x57268 l_0_18_73)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57266 (* ?x57265 l_0_18_72)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57263 (* ?x57262 l_0_18_99)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57260 (* ?x54795 l_0_18_98)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x57258 (* ?x54792 l_0_18_97)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57256 (* ?x54777 l_0_18_96)))
 (let ((?x57264 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_95) ?x57256) ?x57258) ?x57260) ?x57263)))
 (= (- (- (- (- (- ?x57264 ?x57266) ?x57269) ?x57272) ?x57275) ?x57278) 0.0)))))))))))))))))))))
(assert
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57335 (* ?x57277 l_0_18_82)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57333 (* ?x57274 l_0_18_81)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57331 (* ?x57271 l_0_18_80)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57329 (* ?x57268 l_0_18_79)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57327 (* ?x57265 l_0_18_78)))
 (let ((?x57325 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x57322 (* ?x54408 l_0_18_98)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x57320 (* ?x54405 l_0_18_97)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x57318 (* ?x54402 l_0_18_96)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x57317 (* ?x54393 l_0_18_95)))
 (let ((?x57326 (+ (+ (+ (+ ?x57317 ?x57318) ?x57320) ?x57322) ?x57325)))
 (= (- (- (- (- (- ?x57326 ?x57327) ?x57329) ?x57331) ?x57333) ?x57335) 0.0))))))))))))))))))))))
(assert
 (let ((?x57366 (* l_0_18_77 l_0_18_77)))
 (let ((?x57364 (* l_0_18_76 l_0_18_76)))
 (let ((?x57362 (* l_0_18_75 l_0_18_75)))
 (let ((?x57360 (* l_0_18_74 l_0_18_74)))
 (let ((?x57358 (* l_0_18_73 l_0_18_73)))
 (let ((?x37793 (* l_0_18_72 l_0_18_72)))
 (let ((?x37792 (* l_0_18_105 l_0_18_105)))
 (let ((?x47547 (* l_0_18_104 l_0_18_104)))
 (let ((?x26928 (* l_0_18_103 l_0_18_103)))
 (let ((?x37721 (* l_0_18_102 l_0_18_102)))
 (let ((?x47565 (+ (+ (* l_0_18_100 l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x37721)))
 (let ((?x57363 (- (- (- (- (+ (+ (+ ?x47565 ?x26928) ?x47547) ?x37792) ?x37793) ?x57358) ?x57360) ?x57362)))
 (= (- (- ?x57363 ?x57364) ?x57366) 0.0))))))))))))))
(assert
 (let ((?x57399 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x57396 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x57393 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x57390 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x57387 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x57384 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x57381 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57378 (* ?x57262 l_0_18_110)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57376 (* ?x54795 l_0_18_109)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x14042 (* ?x54792 l_0_18_108)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x47640 (* ?x54777 l_0_18_107)))
 (let ((?x57379 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_106) ?x47640) ?x14042) ?x57376) ?x57378)))
 (let ((?x57382 (+ ?x57379 ?x57381)))
 (= (- (- (- (- (- (- ?x57382 ?x57384) ?x57387) ?x57390) ?x57393) ?x57396) ?x57399) 0.0)))))))))))))))))))
(assert
 (let ((?x57463 (* l_0_18_84 l_0_18_84)))
 (let ((?x57461 (* l_0_18_83 l_0_18_83)))
 (let ((?x57459 (* l_0_18_82 l_0_18_82)))
 (let ((?x57457 (* l_0_18_81 l_0_18_81)))
 (let ((?x57455 (* l_0_18_80 l_0_18_80)))
 (let ((?x57453 (* l_0_18_79 l_0_18_79)))
 (let ((?x57451 (* l_0_18_78 l_0_18_78)))
 (let ((?x57449 (* l_0_18_112 l_0_18_112)))
 (let ((?x57447 (* l_0_18_111 l_0_18_111)))
 (let ((?x57445 (* l_0_18_110 l_0_18_110)))
 (let ((?x57443 (* l_0_18_109 l_0_18_109)))
 (let ((?x57441 (* l_0_18_108 l_0_18_108)))
 (let ((?x57442 (+ (+ (* l_0_18_106 l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57441)))
 (let ((?x57450 (+ (+ (+ (+ ?x57442 ?x57443) ?x57445) ?x57447) ?x57449)))
 (let ((?x57464 (- (- (- (- (- (- (- ?x57450 ?x57451) ?x57453) ?x57455) ?x57457) ?x57459) ?x57461) ?x57463)))
 (= ?x57464 0.0)))))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x56991 (* ?x54287 l_0_18_86)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57512 (* ?x54284 l_0_18_58)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54279 (* ?x54278 l_0_18_142)))
 (let ((?x57487 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_114) ?x54279) (* (* 2.0 l_0_18_169) l_0_18_170))))
 (let ((?x57491 (- (- ?x57487 (* (* 2.0 l_0_18_198) l_0_18_207)) (* (* 2.0 l_0_18_199) l_0_18_208))))
 (let ((?x57495 (- (- ?x57491 (* (* 2.0 l_0_18_226) l_0_18_235)) (* (* 2.0 l_0_18_227) l_0_18_236))))
 (let ((?x57499 (- (- ?x57495 (* (* 2.0 l_0_18_254) l_0_18_263)) (* (* 2.0 l_0_18_255) l_0_18_264))))
 (let ((?x57503 (- (- ?x57499 (* (* 2.0 l_0_18_282) l_0_18_291)) (* (* 2.0 l_0_18_283) l_0_18_292))))
 (let ((?x57507 (- (- ?x57503 (* (* 2.0 l_0_18_310) l_0_18_319)) (* (* 2.0 l_0_18_311) l_0_18_320))))
 (let ((?x57511 (- (- ?x57507 (* (* 2.0 l_0_18_338) l_0_18_347)) (* (* 2.0 l_0_18_339) l_0_18_348))))
 (= (+ (- ?x57511 ?x57512) ?x56991) 0.0)))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x54288 (* ?x54287 l_0_18_91)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x54285 (* ?x54284 l_0_18_63)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54385 (* ?x54278 l_0_18_147)))
 (let ((?x27221 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_119) ?x54385) (* (* 2.0 l_0_18_169) l_0_18_175))))
 (let ((?x57556 (- (- ?x27221 (* (* 2.0 l_0_18_203) l_0_18_207)) (* (* 2.0 l_0_18_204) l_0_18_208))))
 (let ((?x57560 (- (- ?x57556 (* (* 2.0 l_0_18_205) l_0_18_209)) (* (* 2.0 l_0_18_206) l_0_18_210))))
 (let ((?x57564 (- (- ?x57560 (* (* 2.0 l_0_18_231) l_0_18_235)) (* (* 2.0 l_0_18_232) l_0_18_236))))
 (let ((?x57568 (- (- ?x57564 (* (* 2.0 l_0_18_233) l_0_18_237)) (* (* 2.0 l_0_18_234) l_0_18_238))))
 (let ((?x57572 (- (- ?x57568 (* (* 2.0 l_0_18_259) l_0_18_263)) (* (* 2.0 l_0_18_260) l_0_18_264))))
 (let ((?x57576 (- (- ?x57572 (* (* 2.0 l_0_18_261) l_0_18_265)) (* (* 2.0 l_0_18_262) l_0_18_266))))
 (let ((?x57580 (- (- ?x57576 (* (* 2.0 l_0_18_287) l_0_18_291)) (* (* 2.0 l_0_18_288) l_0_18_292))))
 (let ((?x57584 (- (- ?x57580 (* (* 2.0 l_0_18_289) l_0_18_293)) (* (* 2.0 l_0_18_290) l_0_18_294))))
 (let ((?x57588 (- (- ?x57584 (* (* 2.0 l_0_18_315) l_0_18_319)) (* (* 2.0 l_0_18_316) l_0_18_320))))
 (let ((?x57592 (- (- ?x57588 (* (* 2.0 l_0_18_317) l_0_18_321)) (* (* 2.0 l_0_18_318) l_0_18_322))))
 (let ((?x57596 (- (- ?x57592 (* (* 2.0 l_0_18_343) l_0_18_347)) (* (* 2.0 l_0_18_344) l_0_18_348))))
 (let ((?x57600 (- (- ?x57596 (* (* 2.0 l_0_18_345) l_0_18_349)) (* (* 2.0 l_0_18_346) l_0_18_350))))
 (= (+ (- ?x57600 ?x54285) ?x54288) 0.0)))))))))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x57019 (* ?x54287 l_0_18_95)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57013 (* ?x54284 l_0_18_67)))
 (let ((?x57713 (* l_0_18_351 l_0_18_351)))
 (let ((?x57711 (* l_0_18_350 l_0_18_350)))
 (let ((?x57709 (* l_0_18_349 l_0_18_349)))
 (let ((?x57707 (* l_0_18_348 l_0_18_348)))
 (let ((?x57705 (* l_0_18_347 l_0_18_347)))
 (let ((?x57703 (* l_0_18_323 l_0_18_323)))
 (let ((?x57701 (* l_0_18_322 l_0_18_322)))
 (let ((?x57699 (* l_0_18_321 l_0_18_321)))
 (let ((?x57697 (* l_0_18_320 l_0_18_320)))
 (let ((?x57695 (* l_0_18_319 l_0_18_319)))
 (let ((?x57693 (* l_0_18_295 l_0_18_295)))
 (let ((?x57691 (* l_0_18_294 l_0_18_294)))
 (let ((?x57689 (* l_0_18_293 l_0_18_293)))
 (let ((?x57687 (* l_0_18_292 l_0_18_292)))
 (let ((?x57685 (* l_0_18_291 l_0_18_291)))
 (let ((?x57683 (* l_0_18_267 l_0_18_267)))
 (let ((?x57681 (* l_0_18_266 l_0_18_266)))
 (let ((?x57679 (* l_0_18_265 l_0_18_265)))
 (let ((?x57677 (* l_0_18_264 l_0_18_264)))
 (let ((?x57675 (* l_0_18_263 l_0_18_263)))
 (let ((?x57673 (* l_0_18_239 l_0_18_239)))
 (let ((?x57671 (* l_0_18_238 l_0_18_238)))
 (let ((?x57669 (* l_0_18_237 l_0_18_237)))
 (let ((?x57667 (* l_0_18_236 l_0_18_236)))
 (let ((?x57665 (* l_0_18_235 l_0_18_235)))
 (let ((?x57663 (* l_0_18_211 l_0_18_211)))
 (let ((?x57661 (* l_0_18_210 l_0_18_210)))
 (let ((?x57659 (* l_0_18_209 l_0_18_209)))
 (let ((?x57657 (* l_0_18_208 l_0_18_208)))
 (let ((?x57655 (* l_0_18_207 l_0_18_207)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54423 (* ?x54278 l_0_18_151)))
 (let ((?x57654 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_123) ?x54423) (* (* 2.0 l_0_18_169) l_0_18_179))))
 (let ((?x57668 (- (- (- (- (- (- (- ?x57654 ?x57655) ?x57657) ?x57659) ?x57661) ?x57663) ?x57665) ?x57667)))
 (let ((?x57682 (- (- (- (- (- (- (- ?x57668 ?x57669) ?x57671) ?x57673) ?x57675) ?x57677) ?x57679) ?x57681)))
 (let ((?x57696 (- (- (- (- (- (- (- ?x57682 ?x57683) ?x57685) ?x57687) ?x57689) ?x57691) ?x57693) ?x57695)))
 (let ((?x57710 (- (- (- (- (- (- (- ?x57696 ?x57697) ?x57699) ?x57701) ?x57703) ?x57705) ?x57707) ?x57709)))
 (= (+ (- (- (- ?x57710 ?x57711) ?x57713) ?x57013) ?x57019) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x57019 (* ?x54287 l_0_18_95)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57058 (* ?x54284 l_0_18_72)))
 (let ((?x57013 (* ?x54284 l_0_18_67)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x54538 (* ?x54278 l_0_18_156)))
 (let ((?x45696 (* 2.0 l_0_18_100)))
 (let ((?x57050 (* ?x45696 l_0_18_85)))
 (let ((?x57765 (- (- (- ?x57050 (* (* 2.0 l_0_18_113) l_0_18_128)) ?x54538) (* (* 2.0 l_0_18_169) l_0_18_184))))
 (let ((?x57771 (- (- ?x57765 (* (* 2.0 l_0_18_207) l_0_18_212)) (* (* 2.0 l_0_18_208) l_0_18_213))))
 (let ((?x57777 (- (- ?x57771 (* (* 2.0 l_0_18_209) l_0_18_214)) (* (* 2.0 l_0_18_210) l_0_18_215))))
 (let ((?x57783 (- (- ?x57777 (* (* 2.0 l_0_18_211) l_0_18_216)) (* (* 2.0 l_0_18_235) l_0_18_240))))
 (let ((?x57789 (- (- ?x57783 (* (* 2.0 l_0_18_236) l_0_18_241)) (* (* 2.0 l_0_18_237) l_0_18_242))))
 (let ((?x57795 (- (- ?x57789 (* (* 2.0 l_0_18_238) l_0_18_243)) (* (* 2.0 l_0_18_239) l_0_18_244))))
 (let ((?x57801 (- (- ?x57795 (* (* 2.0 l_0_18_263) l_0_18_268)) (* (* 2.0 l_0_18_264) l_0_18_269))))
 (let ((?x57807 (- (- ?x57801 (* (* 2.0 l_0_18_265) l_0_18_270)) (* (* 2.0 l_0_18_266) l_0_18_271))))
 (let ((?x57813 (- (- ?x57807 (* (* 2.0 l_0_18_267) l_0_18_272)) (* (* 2.0 l_0_18_291) l_0_18_296))))
 (let ((?x57819 (- (- ?x57813 (* (* 2.0 l_0_18_292) l_0_18_297)) (* (* 2.0 l_0_18_293) l_0_18_298))))
 (let ((?x57825 (- (- ?x57819 (* (* 2.0 l_0_18_294) l_0_18_299)) (* (* 2.0 l_0_18_295) l_0_18_300))))
 (let ((?x57831 (- (- ?x57825 (* (* 2.0 l_0_18_319) l_0_18_324)) (* (* 2.0 l_0_18_320) l_0_18_325))))
 (let ((?x57837 (- (- ?x57831 (* (* 2.0 l_0_18_321) l_0_18_326)) (* (* 2.0 l_0_18_322) l_0_18_327))))
 (let ((?x57843 (- (- ?x57837 (* (* 2.0 l_0_18_323) l_0_18_328)) (* (* 2.0 l_0_18_347) l_0_18_352))))
 (let ((?x57849 (- (- ?x57843 (* (* 2.0 l_0_18_348) l_0_18_353)) (* (* 2.0 l_0_18_349) l_0_18_354))))
 (let ((?x57855 (- (- ?x57849 (* (* 2.0 l_0_18_350) l_0_18_355)) (* (* 2.0 l_0_18_351) l_0_18_356))))
 (= (- (- (+ ?x57855 ?x57013) ?x57058) ?x57019) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57071 (* ?x54284 l_0_18_78)))
 (let ((?x54278 (* 2.0 l_0_18_141)))
 (let ((?x45481 (* ?x54278 l_0_18_162)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x47567 (* ?x54393 l_0_18_85)))
 (let ((?x57941 (- (- (- ?x47567 (* (* 2.0 l_0_18_113) l_0_18_134)) ?x45481) (* (* 2.0 l_0_18_169) l_0_18_190))))
 (let ((?x57945 (- (- ?x57941 (* (* 2.0 l_0_18_207) l_0_18_218)) (* (* 2.0 l_0_18_208) l_0_18_219))))
 (let ((?x57949 (- (- ?x57945 (* (* 2.0 l_0_18_209) l_0_18_220)) (* (* 2.0 l_0_18_210) l_0_18_221))))
 (let ((?x57953 (- (- ?x57949 (* (* 2.0 l_0_18_211) l_0_18_222)) (* (* 2.0 l_0_18_235) l_0_18_246))))
 (let ((?x57957 (- (- ?x57953 (* (* 2.0 l_0_18_236) l_0_18_247)) (* (* 2.0 l_0_18_237) l_0_18_248))))
 (let ((?x57961 (- (- ?x57957 (* (* 2.0 l_0_18_238) l_0_18_249)) (* (* 2.0 l_0_18_239) l_0_18_250))))
 (let ((?x57965 (- (- ?x57961 (* (* 2.0 l_0_18_263) l_0_18_274)) (* (* 2.0 l_0_18_264) l_0_18_275))))
 (let ((?x57969 (- (- ?x57965 (* (* 2.0 l_0_18_265) l_0_18_276)) (* (* 2.0 l_0_18_266) l_0_18_277))))
 (let ((?x57973 (- (- ?x57969 (* (* 2.0 l_0_18_267) l_0_18_278)) (* (* 2.0 l_0_18_291) l_0_18_302))))
 (let ((?x57977 (- (- ?x57973 (* (* 2.0 l_0_18_292) l_0_18_303)) (* (* 2.0 l_0_18_293) l_0_18_304))))
 (let ((?x57981 (- (- ?x57977 (* (* 2.0 l_0_18_294) l_0_18_305)) (* (* 2.0 l_0_18_295) l_0_18_306))))
 (let ((?x57985 (- (- ?x57981 (* (* 2.0 l_0_18_319) l_0_18_330)) (* (* 2.0 l_0_18_320) l_0_18_331))))
 (let ((?x57989 (- (- ?x57985 (* (* 2.0 l_0_18_321) l_0_18_332)) (* (* 2.0 l_0_18_322) l_0_18_333))))
 (let ((?x57993 (- (- ?x57989 (* (* 2.0 l_0_18_323) l_0_18_334)) (* (* 2.0 l_0_18_347) l_0_18_358))))
 (let ((?x57997 (- (- ?x57993 (* (* 2.0 l_0_18_348) l_0_18_359)) (* (* 2.0 l_0_18_349) l_0_18_360))))
 (let ((?x58001 (- (- ?x57997 (* (* 2.0 l_0_18_350) l_0_18_361)) (* (* 2.0 l_0_18_351) l_0_18_362))))
 (= (- ?x58001 ?x57071) 0.0))))))))))))))))))))))))
(assert
 (let ((?x57086 (* l_0_18_87 l_0_18_87)))
 (let ((?x57084 (* l_0_18_86 l_0_18_86)))
 (let ((?x57082 (* l_0_18_59 l_0_18_59)))
 (let ((?x57090 (* l_0_18_58 l_0_18_58)))
 (let ((?x56199 (* l_0_18_171 l_0_18_171)))
 (let ((?x56197 (* l_0_18_170 l_0_18_170)))
 (let ((?x54554 (* l_0_18_143 l_0_18_143)))
 (let ((?x54552 (* l_0_18_142 l_0_18_142)))
 (let ((?x15422 (- (- (* (- l_0_18_114) l_0_18_114) (* l_0_18_115 l_0_18_115)) ?x54552)))
 (let ((?x15814 (+ (+ (- (- (- (- (- ?x15422 ?x54554) ?x56197) ?x56199) ?x57090) ?x57082) ?x57084) ?x57086)))
 (= ?x15814 0.0))))))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x54580 (* ?x54579 l_0_18_92)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x54577 (* ?x54576 l_0_18_91)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x54574 (* ?x54573 l_0_18_64)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x54571 (* ?x54570 l_0_18_63)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54665 (* ?x54600 l_0_18_148)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54664 (* ?x54598 l_0_18_147)))
 (let ((?x58072 (- (* (* (- 2.0) l_0_18_114) l_0_18_119) (* (* 2.0 l_0_18_115) l_0_18_120))))
 (let ((?x58078 (- (- (- (- ?x58072 ?x54664) ?x54665) (* (* 2.0 l_0_18_170) l_0_18_175)) (* (* 2.0 l_0_18_171) l_0_18_176))))
 (= (+ (+ (- (- ?x58078 ?x54571) ?x54574) ?x54577) ?x54580) 0.0))))))))))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x57114 (* ?x54579 l_0_18_96)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x57112 (* ?x54576 l_0_18_95)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57110 (* ?x54573 l_0_18_68)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x58107 (* ?x54570 l_0_18_67)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54723 (* ?x54600 l_0_18_152)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54721 (* ?x54598 l_0_18_151)))
 (let ((?x58100 (- (* (* (- 2.0) l_0_18_114) l_0_18_123) (* (* 2.0 l_0_18_115) l_0_18_124))))
 (let ((?x58106 (- (- (- (- ?x58100 ?x54721) ?x54723) (* (* 2.0 l_0_18_170) l_0_18_179)) (* (* 2.0 l_0_18_171) l_0_18_180))))
 (= (+ (+ (- (- ?x58106 ?x58107) ?x57110) ?x57112) ?x57114) 0.0))))))))))))))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x57114 (* ?x54579 l_0_18_96)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x57112 (* ?x54576 l_0_18_95)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57137 (* ?x54573 l_0_18_73)))
 (let ((?x57110 (* ?x54573 l_0_18_68)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57135 (* ?x54570 l_0_18_72)))
 (let ((?x58107 (* ?x54570 l_0_18_67)))
 (let ((?x54600 (* 2.0 l_0_18_143)))
 (let ((?x54800 (* ?x54600 l_0_18_157)))
 (let ((?x54598 (* 2.0 l_0_18_142)))
 (let ((?x54798 (* ?x54598 l_0_18_156)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57128 (* ?x54777 l_0_18_87)))
 (let ((?x57129 (+ (* (* 2.0 l_0_18_100) l_0_18_86) ?x57128)))
 (let ((?x58132 (- (- ?x57129 (* (* 2.0 l_0_18_114) l_0_18_128)) (* (* 2.0 l_0_18_115) l_0_18_129))))
 (let ((?x58138 (- (- (- (- ?x58132 ?x54798) ?x54800) (* (* 2.0 l_0_18_170) l_0_18_184)) (* (* 2.0 l_0_18_171) l_0_18_185))))
 (= (- (- (- (+ (- (+ ?x58138 ?x58107) ?x57135) ?x57110) ?x57137) ?x57112) ?x57114) 0.0)))))))))))))))))))))
(assert
 (let ((?x54689 (* l_0_18_94 l_0_18_94)))
 (let ((?x54687 (* l_0_18_93 l_0_18_93)))
 (let ((?x54685 (* l_0_18_92 l_0_18_92)))
 (let ((?x54683 (* l_0_18_91 l_0_18_91)))
 (let ((?x54681 (* l_0_18_66 l_0_18_66)))
 (let ((?x54679 (* l_0_18_65 l_0_18_65)))
 (let ((?x54677 (* l_0_18_64 l_0_18_64)))
 (let ((?x54675 (* l_0_18_63 l_0_18_63)))
 (let ((?x56467 (* l_0_18_178 l_0_18_178)))
 (let ((?x56464 (* l_0_18_177 l_0_18_177)))
 (let ((?x56461 (* l_0_18_176 l_0_18_176)))
 (let ((?x56458 (* l_0_18_175 l_0_18_175)))
 (let ((?x55126 (* l_0_18_150 l_0_18_150)))
 (let ((?x55124 (* l_0_18_149 l_0_18_149)))
 (let ((?x55122 (* l_0_18_148 l_0_18_148)))
 (let ((?x55112 (* l_0_18_147 l_0_18_147)))
 (let ((?x28896 (* l_0_18_122 l_0_18_122)))
 (let ((?x16109 (* l_0_18_121 l_0_18_121)))
 (let ((?x15960 (- (- (* (- l_0_18_119) l_0_18_119) (* l_0_18_120 l_0_18_120)) ?x16109)))
 (let ((?x28866 (- (- (- (- (- (- (- ?x15960 ?x28896) ?x55112) ?x55122) ?x55124) ?x55126) ?x56458) ?x56461)))
 (let ((?x58154 (+ (- (- (- (- (- (- ?x28866 ?x56464) ?x56467) ?x54675) ?x54677) ?x54679) ?x54681) ?x54683)))
 (= (+ (+ (+ ?x58154 ?x54685) ?x54687) ?x54689) 0.0)))))))))))))))))))))))
(assert
 (let ((?x54747 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x54744 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54741 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54738 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54735 (* ?x54460 l_0_18_70)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54733 (* ?x54457 l_0_18_69)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54731 (* ?x54454 l_0_18_68)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54729 (* ?x54451 l_0_18_67)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x55169 (* ?x54434 l_0_18_154)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x55167 (* ?x54431 l_0_18_153)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x55165 (* ?x54428 l_0_18_152)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x55163 (* ?x54425 l_0_18_151)))
 (let ((?x58174 (- (* (* (- 2.0) l_0_18_119) l_0_18_123) (* (* 2.0 l_0_18_120) l_0_18_124))))
 (let ((?x58178 (- (- ?x58174 (* (* 2.0 l_0_18_121) l_0_18_125)) (* (* 2.0 l_0_18_122) l_0_18_126))))
 (let ((?x58184 (- (- (- (- (- ?x58178 ?x55163) ?x55165) ?x55167) ?x55169) (* (* 2.0 l_0_18_175) l_0_18_179))))
 (let ((?x58188 (- (- ?x58184 (* (* 2.0 l_0_18_176) l_0_18_180)) (* (* 2.0 l_0_18_177) l_0_18_181))))
 (let ((?x58193 (- (- (- (- ?x58188 (* (* 2.0 l_0_18_178) l_0_18_182)) ?x54729) ?x54731) ?x54733)))
 (= (+ (+ (+ (+ (- ?x58193 ?x54735) ?x54738) ?x54741) ?x54744) ?x54747) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54747 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x54744 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54741 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54738 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54818 (* ?x54460 l_0_18_75)))
 (let ((?x54735 (* ?x54460 l_0_18_70)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54816 (* ?x54457 l_0_18_74)))
 (let ((?x54733 (* ?x54457 l_0_18_69)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54814 (* ?x54454 l_0_18_73)))
 (let ((?x54731 (* ?x54454 l_0_18_68)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54812 (* ?x54451 l_0_18_72)))
 (let ((?x54729 (* ?x54451 l_0_18_67)))
 (let ((?x54434 (* 2.0 l_0_18_150)))
 (let ((?x55199 (* ?x54434 l_0_18_159)))
 (let ((?x54431 (* 2.0 l_0_18_149)))
 (let ((?x55194 (* ?x54431 l_0_18_158)))
 (let ((?x54428 (* 2.0 l_0_18_148)))
 (let ((?x10377 (* ?x54428 l_0_18_157)))
 (let ((?x54425 (* 2.0 l_0_18_147)))
 (let ((?x35027 (* ?x54425 l_0_18_156)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x54796 (* ?x54795 l_0_18_94)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x54793 (* ?x54792 l_0_18_93)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x54779 (* ?x54777 l_0_18_92)))
 (let ((?x54797 (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_91) ?x54779) ?x54793) ?x54796)))
 (let ((?x38752 (- (- ?x54797 (* (* 2.0 l_0_18_119) l_0_18_128)) (* (* 2.0 l_0_18_120) l_0_18_129))))
 (let ((?x16312 (- (- ?x38752 (* (* 2.0 l_0_18_121) l_0_18_130)) (* (* 2.0 l_0_18_122) l_0_18_131))))
 (let ((?x38710 (- (- (- (- (- ?x16312 ?x35027) ?x10377) ?x55194) ?x55199) (* (* 2.0 l_0_18_175) l_0_18_184))))
 (let ((?x16171 (- (- ?x38710 (* (* 2.0 l_0_18_176) l_0_18_185)) (* (* 2.0 l_0_18_177) l_0_18_186))))
 (let ((?x16309 (+ (- (+ (- ?x16171 (* (* 2.0 l_0_18_178) l_0_18_187)) ?x54729) ?x54812) ?x54731)))
 (let ((?x58219 (- (- (- (+ (- (+ (- ?x16309 ?x54814) ?x54733) ?x54816) ?x54735) ?x54818) ?x54738) ?x54741)))
 (= (- (- ?x58219 ?x54744) ?x54747) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57236 (* l_0_18_99 l_0_18_99)))
 (let ((?x57234 (* l_0_18_98 l_0_18_98)))
 (let ((?x57232 (* l_0_18_97 l_0_18_97)))
 (let ((?x57230 (* l_0_18_96 l_0_18_96)))
 (let ((?x57228 (* l_0_18_95 l_0_18_95)))
 (let ((?x57226 (* l_0_18_71 l_0_18_71)))
 (let ((?x57224 (* l_0_18_70 l_0_18_70)))
 (let ((?x57222 (* l_0_18_69 l_0_18_69)))
 (let ((?x57220 (* l_0_18_68 l_0_18_68)))
 (let ((?x57240 (* l_0_18_67 l_0_18_67)))
 (let ((?x56637 (* l_0_18_183 l_0_18_183)))
 (let ((?x56634 (* l_0_18_182 l_0_18_182)))
 (let ((?x56631 (* l_0_18_181 l_0_18_181)))
 (let ((?x56628 (* l_0_18_180 l_0_18_180)))
 (let ((?x56625 (* l_0_18_179 l_0_18_179)))
 (let ((?x35031 (* l_0_18_155 l_0_18_155)))
 (let ((?x45839 (* l_0_18_154 l_0_18_154)))
 (let ((?x10289 (* l_0_18_153 l_0_18_153)))
 (let ((?x45796 (* l_0_18_152 l_0_18_152)))
 (let ((?x45838 (* l_0_18_151 l_0_18_151)))
 (let ((?x48194 (* l_0_18_127 l_0_18_127)))
 (let ((?x48183 (* l_0_18_126 l_0_18_126)))
 (let ((?x48197 (* l_0_18_125 l_0_18_125)))
 (let ((?x48200 (- (- (* (- l_0_18_123) l_0_18_123) (* l_0_18_124 l_0_18_124)) ?x48197)))
 (let ((?x16447 (- (- (- (- (- (- (- ?x48200 ?x48183) ?x48194) ?x45838) ?x45796) ?x10289) ?x45839) ?x35031)))
 (let ((?x58256 (- (- (- (- (- (- (- ?x16447 ?x56625) ?x56628) ?x56631) ?x56634) ?x56637) ?x57240) ?x57220)))
 (let ((?x58263 (+ (+ (+ (+ (- (- (- ?x58256 ?x57222) ?x57224) ?x57226) ?x57228) ?x57230) ?x57232) ?x57234)))
 (= (+ ?x58263 ?x57236) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x57236 (* l_0_18_99 l_0_18_99)))
 (let ((?x57234 (* l_0_18_98 l_0_18_98)))
 (let ((?x57232 (* l_0_18_97 l_0_18_97)))
 (let ((?x57230 (* l_0_18_96 l_0_18_96)))
 (let ((?x57228 (* l_0_18_95 l_0_18_95)))
 (let ((?x57226 (* l_0_18_71 l_0_18_71)))
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57278 (* ?x57277 l_0_18_76)))
 (let ((?x57224 (* l_0_18_70 l_0_18_70)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57275 (* ?x57274 l_0_18_75)))
 (let ((?x57222 (* l_0_18_69 l_0_18_69)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57272 (* ?x57271 l_0_18_74)))
 (let ((?x57220 (* l_0_18_68 l_0_18_68)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57269 (* ?x57268 l_0_18_73)))
 (let ((?x57240 (* l_0_18_67 l_0_18_67)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57266 (* ?x57265 l_0_18_72)))
 (let ((?x55331 (* 2.0 l_0_18_155)))
 (let ((?x55332 (* ?x55331 l_0_18_160)))
 (let ((?x55328 (* 2.0 l_0_18_154)))
 (let ((?x55329 (* ?x55328 l_0_18_159)))
 (let ((?x55325 (* 2.0 l_0_18_153)))
 (let ((?x55326 (* ?x55325 l_0_18_158)))
 (let ((?x55322 (* 2.0 l_0_18_152)))
 (let ((?x55323 (* ?x55322 l_0_18_157)))
 (let ((?x55319 (* 2.0 l_0_18_151)))
 (let ((?x55320 (* ?x55319 l_0_18_156)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57263 (* ?x57262 l_0_18_99)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57260 (* ?x54795 l_0_18_98)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x57258 (* ?x54792 l_0_18_97)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57256 (* ?x54777 l_0_18_96)))
 (let ((?x57264 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_95) ?x57256) ?x57258) ?x57260) ?x57263)))
 (let ((?x48407 (- (- ?x57264 (* (* 2.0 l_0_18_123) l_0_18_128)) (* (* 2.0 l_0_18_124) l_0_18_129))))
 (let ((?x58281 (- (- ?x48407 (* (* 2.0 l_0_18_125) l_0_18_130)) (* (* 2.0 l_0_18_126) l_0_18_131))))
 (let ((?x58287 (- (- (- (- ?x58281 (* (* 2.0 l_0_18_127) l_0_18_132)) ?x55320) ?x55323) ?x55326)))
 (let ((?x58295 (- (- (- (- ?x58287 ?x55329) ?x55332) (* (* 2.0 l_0_18_179) l_0_18_184)) (* (* 2.0 l_0_18_180) l_0_18_185))))
 (let ((?x58301 (- (- ?x58295 (* (* 2.0 l_0_18_181) l_0_18_186)) (* (* 2.0 l_0_18_182) l_0_18_187))))
 (let ((?x58307 (- (+ (- (- ?x58301 (* (* 2.0 l_0_18_183) l_0_18_188)) ?x57266) ?x57240) ?x57269)))
 (let ((?x58314 (+ (- (+ (- (+ (- (+ ?x58307 ?x57220) ?x57272) ?x57222) ?x57275) ?x57224) ?x57278) ?x57226)))
 (= (- (- (- (- (- ?x58314 ?x57228) ?x57230) ?x57232) ?x57234) ?x57236) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57335 (* ?x57277 l_0_18_82)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57333 (* ?x57274 l_0_18_81)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57331 (* ?x57271 l_0_18_80)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57329 (* ?x57268 l_0_18_79)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57327 (* ?x57265 l_0_18_78)))
 (let ((?x55331 (* 2.0 l_0_18_155)))
 (let ((?x55407 (* ?x55331 l_0_18_166)))
 (let ((?x55328 (* 2.0 l_0_18_154)))
 (let ((?x55405 (* ?x55328 l_0_18_165)))
 (let ((?x55325 (* 2.0 l_0_18_153)))
 (let ((?x55403 (* ?x55325 l_0_18_164)))
 (let ((?x55322 (* 2.0 l_0_18_152)))
 (let ((?x55401 (* ?x55322 l_0_18_163)))
 (let ((?x55319 (* 2.0 l_0_18_151)))
 (let ((?x55386 (* ?x55319 l_0_18_162)))
 (let ((?x57325 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x57322 (* ?x54408 l_0_18_98)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x57320 (* ?x54405 l_0_18_97)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x57318 (* ?x54402 l_0_18_96)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x57317 (* ?x54393 l_0_18_95)))
 (let ((?x57326 (+ (+ (+ (+ ?x57317 ?x57318) ?x57320) ?x57322) ?x57325)))
 (let ((?x48444 (- (- ?x57326 (* (* 2.0 l_0_18_123) l_0_18_134)) (* (* 2.0 l_0_18_124) l_0_18_135))))
 (let ((?x38885 (- (- ?x48444 (* (* 2.0 l_0_18_125) l_0_18_136)) (* (* 2.0 l_0_18_126) l_0_18_137))))
 (let ((?x16698 (- (- (- (- ?x38885 (* (* 2.0 l_0_18_127) l_0_18_138)) ?x55386) ?x55401) ?x55403)))
 (let ((?x16571 (- (- (- (- ?x16698 ?x55405) ?x55407) (* (* 2.0 l_0_18_179) l_0_18_190)) (* (* 2.0 l_0_18_180) l_0_18_191))))
 (let ((?x38089 (- (- ?x16571 (* (* 2.0 l_0_18_181) l_0_18_192)) (* (* 2.0 l_0_18_182) l_0_18_193))))
 (let ((?x58372 (- (- (- (- ?x38089 (* (* 2.0 l_0_18_183) l_0_18_194)) ?x57327) ?x57329) ?x57331)))
 (= (- (- ?x58372 ?x57333) ?x57335) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57366 (* l_0_18_77 l_0_18_77)))
 (let ((?x57364 (* l_0_18_76 l_0_18_76)))
 (let ((?x57362 (* l_0_18_75 l_0_18_75)))
 (let ((?x57360 (* l_0_18_74 l_0_18_74)))
 (let ((?x57358 (* l_0_18_73 l_0_18_73)))
 (let ((?x37793 (* l_0_18_72 l_0_18_72)))
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57278 (* ?x57277 l_0_18_76)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57275 (* ?x57274 l_0_18_75)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57272 (* ?x57271 l_0_18_74)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57269 (* ?x57268 l_0_18_73)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57266 (* ?x57265 l_0_18_72)))
 (let ((?x56876 (* l_0_18_189 l_0_18_189)))
 (let ((?x56873 (* l_0_18_188 l_0_18_188)))
 (let ((?x56870 (* l_0_18_187 l_0_18_187)))
 (let ((?x56867 (* l_0_18_186 l_0_18_186)))
 (let ((?x56864 (* l_0_18_185 l_0_18_185)))
 (let ((?x56861 (* l_0_18_184 l_0_18_184)))
 (let ((?x55459 (* l_0_18_161 l_0_18_161)))
 (let ((?x55444 (* l_0_18_160 l_0_18_160)))
 (let ((?x55442 (* l_0_18_159 l_0_18_159)))
 (let ((?x55434 (* l_0_18_158 l_0_18_158)))
 (let ((?x10737 (* l_0_18_157 l_0_18_157)))
 (let ((?x45891 (* l_0_18_156 l_0_18_156)))
 (let ((?x58417 (* l_0_18_133 l_0_18_133)))
 (let ((?x58415 (* l_0_18_132 l_0_18_132)))
 (let ((?x58413 (* l_0_18_131 l_0_18_131)))
 (let ((?x58411 (* l_0_18_130 l_0_18_130)))
 (let ((?x58409 (* l_0_18_129 l_0_18_129)))
 (let ((?x58407 (* l_0_18_128 l_0_18_128)))
 (let ((?x37792 (* l_0_18_105 l_0_18_105)))
 (let ((?x47547 (* l_0_18_104 l_0_18_104)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57263 (* ?x57262 l_0_18_99)))
 (let ((?x26928 (* l_0_18_103 l_0_18_103)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57260 (* ?x54795 l_0_18_98)))
 (let ((?x37721 (* l_0_18_102 l_0_18_102)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x57258 (* ?x54792 l_0_18_97)))
 (let ((?x47549 (* l_0_18_101 l_0_18_101)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57256 (* ?x54777 l_0_18_96)))
 (let ((?x47553 (* l_0_18_100 l_0_18_100)))
 (let ((?x58400 (- (+ (- (+ (* (* (- 2.0) l_0_18_100) l_0_18_95) ?x47553) ?x57256) ?x47549) ?x57258)))
 (let ((?x58408 (- (+ (+ (- (+ (- (+ ?x58400 ?x37721) ?x57260) ?x26928) ?x57263) ?x47547) ?x37792) ?x58407)))
 (let ((?x58420 (- (- (- (- (- (- (- ?x58408 ?x58409) ?x58411) ?x58413) ?x58415) ?x58417) ?x45891) ?x10737)))
 (let ((?x58427 (- (- (- (- (- (- (- ?x58420 ?x55434) ?x55442) ?x55444) ?x55459) ?x56861) ?x56864) ?x56867)))
 (let ((?x58434 (+ (+ (+ (+ (- (- (- ?x58427 ?x56870) ?x56873) ?x56876) ?x57266) ?x57269) ?x57272) ?x57275)))
 (let ((?x58441 (- (- (- (- (- (- (+ ?x58434 ?x57278) ?x37793) ?x57358) ?x57360) ?x57362) ?x57364) ?x57366)))
 (= ?x58441 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57399 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x57396 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x57393 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x57390 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x57387 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x57384 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x57277 (* 2.0 l_0_18_71)))
 (let ((?x57335 (* ?x57277 l_0_18_82)))
 (let ((?x57274 (* 2.0 l_0_18_70)))
 (let ((?x57333 (* ?x57274 l_0_18_81)))
 (let ((?x57271 (* 2.0 l_0_18_69)))
 (let ((?x57331 (* ?x57271 l_0_18_80)))
 (let ((?x57268 (* 2.0 l_0_18_68)))
 (let ((?x57329 (* ?x57268 l_0_18_79)))
 (let ((?x57265 (* 2.0 l_0_18_67)))
 (let ((?x57327 (* ?x57265 l_0_18_78)))
 (let ((?x55498 (* (* 2.0 l_0_18_161) l_0_18_167)))
 (let ((?x55495 (* (* 2.0 l_0_18_160) l_0_18_166)))
 (let ((?x45887 (* (* 2.0 l_0_18_159) l_0_18_165)))
 (let ((?x10350 (* (* 2.0 l_0_18_158) l_0_18_164)))
 (let ((?x10427 (* (* 2.0 l_0_18_157) l_0_18_163)))
 (let ((?x34344 (* (* 2.0 l_0_18_156) l_0_18_162)))
 (let ((?x57325 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54408 (* 2.0 l_0_18_109)))
 (let ((?x57322 (* ?x54408 l_0_18_98)))
 (let ((?x54405 (* 2.0 l_0_18_108)))
 (let ((?x57320 (* ?x54405 l_0_18_97)))
 (let ((?x54402 (* 2.0 l_0_18_107)))
 (let ((?x57318 (* ?x54402 l_0_18_96)))
 (let ((?x54393 (* 2.0 l_0_18_106)))
 (let ((?x57317 (* ?x54393 l_0_18_95)))
 (let ((?x57381 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57378 (* ?x57262 l_0_18_110)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57376 (* ?x54795 l_0_18_109)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x14042 (* ?x54792 l_0_18_108)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x47640 (* ?x54777 l_0_18_107)))
 (let ((?x57379 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_106) ?x47640) ?x14042) ?x57376) ?x57378)))
 (let ((?x57382 (+ ?x57379 ?x57381)))
 (let ((?x48689 (- (- (- (- (- (- ?x57382 ?x57317) ?x57318) ?x57320) ?x57322) ?x57325) (* (* 2.0 l_0_18_128) l_0_18_134))))
 (let ((?x48655 (- (- ?x48689 (* (* 2.0 l_0_18_129) l_0_18_135)) (* (* 2.0 l_0_18_130) l_0_18_136))))
 (let ((?x58445 (- (- ?x48655 (* (* 2.0 l_0_18_131) l_0_18_137)) (* (* 2.0 l_0_18_132) l_0_18_138))))
 (let ((?x58451 (- (- (- (- ?x58445 (* (* 2.0 l_0_18_133) l_0_18_139)) ?x34344) ?x10427) ?x10350)))
 (let ((?x58457 (- (- (- (- ?x58451 ?x45887) ?x55495) ?x55498) (* (* 2.0 l_0_18_184) l_0_18_190))))
 (let ((?x58463 (- (- ?x58457 (* (* 2.0 l_0_18_185) l_0_18_191)) (* (* 2.0 l_0_18_186) l_0_18_192))))
 (let ((?x58469 (- (- ?x58463 (* (* 2.0 l_0_18_187) l_0_18_193)) (* (* 2.0 l_0_18_188) l_0_18_194))))
 (let ((?x58475 (+ (+ (+ (- ?x58469 (* (* 2.0 l_0_18_189) l_0_18_195)) ?x57327) ?x57329) ?x57331)))
 (let ((?x58482 (- (- (- (- (- (+ (+ ?x58475 ?x57333) ?x57335) ?x57384) ?x57387) ?x57390) ?x57393) ?x57396)))
 (= (- ?x58482 ?x57399) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57463 (* l_0_18_84 l_0_18_84)))
 (let ((?x57461 (* l_0_18_83 l_0_18_83)))
 (let ((?x57459 (* l_0_18_82 l_0_18_82)))
 (let ((?x57457 (* l_0_18_81 l_0_18_81)))
 (let ((?x57455 (* l_0_18_80 l_0_18_80)))
 (let ((?x57453 (* l_0_18_79 l_0_18_79)))
 (let ((?x57451 (* l_0_18_78 l_0_18_78)))
 (let ((?x47367 (* l_0_18_196 l_0_18_196)))
 (let ((?x13637 (* l_0_18_195 l_0_18_195)))
 (let ((?x13517 (* l_0_18_194 l_0_18_194)))
 (let ((?x47353 (* l_0_18_193 l_0_18_193)))
 (let ((?x37553 (* l_0_18_192 l_0_18_192)))
 (let ((?x37599 (* l_0_18_191 l_0_18_191)))
 (let ((?x37547 (* l_0_18_190 l_0_18_190)))
 (let ((?x55598 (* l_0_18_168 l_0_18_168)))
 (let ((?x55596 (* l_0_18_167 l_0_18_167)))
 (let ((?x55594 (* l_0_18_166 l_0_18_166)))
 (let ((?x55578 (* l_0_18_165 l_0_18_165)))
 (let ((?x55574 (* l_0_18_164 l_0_18_164)))
 (let ((?x55570 (* l_0_18_163 l_0_18_163)))
 (let ((?x10689 (* l_0_18_162 l_0_18_162)))
 (let ((?x38957 (* l_0_18_140 l_0_18_140)))
 (let ((?x38243 (* l_0_18_139 l_0_18_139)))
 (let ((?x49003 (* l_0_18_138 l_0_18_138)))
 (let ((?x17316 (* l_0_18_137 l_0_18_137)))
 (let ((?x49004 (* l_0_18_136 l_0_18_136)))
 (let ((?x17325 (* l_0_18_135 l_0_18_135)))
 (let ((?x49028 (* l_0_18_134 l_0_18_134)))
 (let ((?x57449 (* l_0_18_112 l_0_18_112)))
 (let ((?x57447 (* l_0_18_111 l_0_18_111)))
 (let ((?x57445 (* l_0_18_110 l_0_18_110)))
 (let ((?x57443 (* l_0_18_109 l_0_18_109)))
 (let ((?x57441 (* l_0_18_108 l_0_18_108)))
 (let ((?x57442 (+ (+ (* l_0_18_106 l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57441)))
 (let ((?x57450 (+ (+ (+ (+ ?x57442 ?x57443) ?x57445) ?x57447) ?x57449)))
 (let ((?x38277 (- (- (- (- (- (- (- ?x57450 ?x49028) ?x17325) ?x49004) ?x17316) ?x49003) ?x38243) ?x38957)))
 (let ((?x29303 (- (- (- (- (- (- (- ?x38277 ?x10689) ?x55570) ?x55574) ?x55578) ?x55594) ?x55596) ?x55598)))
 (let ((?x38952 (- (- (- (- (- (- (- ?x29303 ?x37547) ?x37599) ?x37553) ?x47353) ?x13517) ?x13637) ?x47367)))
 (let ((?x27992 (- (- (- (- (- (- (- ?x38952 ?x57451) ?x57453) ?x57455) ?x57457) ?x57459) ?x57461) ?x57463)))
 (= ?x27992 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54124 (* l_0_18_85 l_0_18_85)))
 (let ((?x54122 (* l_0_18_57 l_0_18_57)))
 (let ((?x49228 (- (* (* (- 2.0) l_0_18_197) l_0_18_212) (* (* 2.0 l_0_18_225) l_0_18_240))))
 (let ((?x49162 (- (- ?x49228 (* (* 2.0 l_0_18_253) l_0_18_268)) (* (* 2.0 l_0_18_281) l_0_18_296))))
 (let ((?x49123 (- (- ?x49162 (* (* 2.0 l_0_18_309) l_0_18_324)) (* (* 2.0 l_0_18_337) l_0_18_352))))
 (= (- (+ ?x49123 ?x54122) ?x54124) 0.0)))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x56991 (* ?x54287 l_0_18_86)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57512 (* ?x54284 l_0_18_58)))
 (let ((?x58493 (- (* (* (- 2.0) l_0_18_198) l_0_18_212) (* (* 2.0 l_0_18_199) l_0_18_213))))
 (let ((?x58497 (- (- ?x58493 (* (* 2.0 l_0_18_226) l_0_18_240)) (* (* 2.0 l_0_18_227) l_0_18_241))))
 (let ((?x58501 (- (- ?x58497 (* (* 2.0 l_0_18_254) l_0_18_268)) (* (* 2.0 l_0_18_255) l_0_18_269))))
 (let ((?x58505 (- (- ?x58501 (* (* 2.0 l_0_18_282) l_0_18_296)) (* (* 2.0 l_0_18_283) l_0_18_297))))
 (let ((?x58509 (- (- ?x58505 (* (* 2.0 l_0_18_310) l_0_18_324)) (* (* 2.0 l_0_18_311) l_0_18_325))))
 (let ((?x58513 (- (- ?x58509 (* (* 2.0 l_0_18_338) l_0_18_352)) (* (* 2.0 l_0_18_339) l_0_18_353))))
 (= (- (+ ?x58513 ?x57512) ?x56991) 0.0))))))))))))
(assert
 (let ((?x54287 (* 2.0 l_0_18_85)))
 (let ((?x54288 (* ?x54287 l_0_18_91)))
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x54285 (* ?x54284 l_0_18_63)))
 (let ((?x49341 (- (* (* (- 2.0) l_0_18_203) l_0_18_212) (* (* 2.0 l_0_18_204) l_0_18_213))))
 (let ((?x39209 (- (- ?x49341 (* (* 2.0 l_0_18_205) l_0_18_214)) (* (* 2.0 l_0_18_206) l_0_18_215))))
 (let ((?x58555 (- (- ?x39209 (* (* 2.0 l_0_18_231) l_0_18_240)) (* (* 2.0 l_0_18_232) l_0_18_241))))
 (let ((?x58559 (- (- ?x58555 (* (* 2.0 l_0_18_233) l_0_18_242)) (* (* 2.0 l_0_18_234) l_0_18_243))))
 (let ((?x58563 (- (- ?x58559 (* (* 2.0 l_0_18_259) l_0_18_268)) (* (* 2.0 l_0_18_260) l_0_18_269))))
 (let ((?x58567 (- (- ?x58563 (* (* 2.0 l_0_18_261) l_0_18_270)) (* (* 2.0 l_0_18_262) l_0_18_271))))
 (let ((?x58571 (- (- ?x58567 (* (* 2.0 l_0_18_287) l_0_18_296)) (* (* 2.0 l_0_18_288) l_0_18_297))))
 (let ((?x58575 (- (- ?x58571 (* (* 2.0 l_0_18_289) l_0_18_298)) (* (* 2.0 l_0_18_290) l_0_18_299))))
 (let ((?x58579 (- (- ?x58575 (* (* 2.0 l_0_18_315) l_0_18_324)) (* (* 2.0 l_0_18_316) l_0_18_325))))
 (let ((?x58583 (- (- ?x58579 (* (* 2.0 l_0_18_317) l_0_18_326)) (* (* 2.0 l_0_18_318) l_0_18_327))))
 (let ((?x58587 (- (- ?x58583 (* (* 2.0 l_0_18_343) l_0_18_352)) (* (* 2.0 l_0_18_344) l_0_18_353))))
 (let ((?x58591 (- (- ?x58587 (* (* 2.0 l_0_18_345) l_0_18_354)) (* (* 2.0 l_0_18_346) l_0_18_355))))
 (= (- (+ ?x58591 ?x54285) ?x54288) 0.0))))))))))))))))))
(assert
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57058 (* ?x54284 l_0_18_72)))
 (let ((?x58741 (* l_0_18_357 l_0_18_357)))
 (let ((?x58739 (* l_0_18_356 l_0_18_356)))
 (let ((?x58737 (* l_0_18_355 l_0_18_355)))
 (let ((?x58735 (* l_0_18_354 l_0_18_354)))
 (let ((?x58733 (* l_0_18_353 l_0_18_353)))
 (let ((?x58731 (* l_0_18_352 l_0_18_352)))
 (let ((?x58729 (* l_0_18_329 l_0_18_329)))
 (let ((?x58727 (* l_0_18_328 l_0_18_328)))
 (let ((?x58725 (* l_0_18_327 l_0_18_327)))
 (let ((?x58723 (* l_0_18_326 l_0_18_326)))
 (let ((?x58721 (* l_0_18_325 l_0_18_325)))
 (let ((?x58719 (* l_0_18_324 l_0_18_324)))
 (let ((?x58717 (* l_0_18_301 l_0_18_301)))
 (let ((?x58715 (* l_0_18_300 l_0_18_300)))
 (let ((?x58713 (* l_0_18_299 l_0_18_299)))
 (let ((?x58711 (* l_0_18_298 l_0_18_298)))
 (let ((?x58709 (* l_0_18_297 l_0_18_297)))
 (let ((?x58707 (* l_0_18_296 l_0_18_296)))
 (let ((?x58705 (* l_0_18_273 l_0_18_273)))
 (let ((?x58703 (* l_0_18_272 l_0_18_272)))
 (let ((?x58701 (* l_0_18_271 l_0_18_271)))
 (let ((?x58699 (* l_0_18_270 l_0_18_270)))
 (let ((?x58697 (* l_0_18_269 l_0_18_269)))
 (let ((?x58695 (* l_0_18_268 l_0_18_268)))
 (let ((?x58693 (* l_0_18_245 l_0_18_245)))
 (let ((?x58691 (* l_0_18_244 l_0_18_244)))
 (let ((?x58689 (* l_0_18_243 l_0_18_243)))
 (let ((?x58687 (* l_0_18_242 l_0_18_242)))
 (let ((?x58685 (* l_0_18_241 l_0_18_241)))
 (let ((?x58683 (* l_0_18_240 l_0_18_240)))
 (let ((?x58681 (* l_0_18_217 l_0_18_217)))
 (let ((?x58679 (* l_0_18_216 l_0_18_216)))
 (let ((?x58677 (* l_0_18_215 l_0_18_215)))
 (let ((?x58675 (* l_0_18_214 l_0_18_214)))
 (let ((?x58673 (* l_0_18_213 l_0_18_213)))
 (let ((?x58671 (* l_0_18_212 l_0_18_212)))
 (let ((?x58678 (- (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_85) ?x58671) ?x58673) ?x58675) ?x58677)))
 (let ((?x58692 (- (- (- (- (- (- (- ?x58678 ?x58679) ?x58681) ?x58683) ?x58685) ?x58687) ?x58689) ?x58691)))
 (let ((?x58706 (- (- (- (- (- (- (- ?x58692 ?x58693) ?x58695) ?x58697) ?x58699) ?x58701) ?x58703) ?x58705)))
 (let ((?x58720 (- (- (- (- (- (- (- ?x58706 ?x58707) ?x58709) ?x58711) ?x58713) ?x58715) ?x58717) ?x58719)))
 (let ((?x58734 (- (- (- (- (- (- (- ?x58720 ?x58721) ?x58723) ?x58725) ?x58727) ?x58729) ?x58731) ?x58733)))
 (= (+ (- (- (- (- ?x58734 ?x58735) ?x58737) ?x58739) ?x58741) ?x57058) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54284 (* 2.0 l_0_18_57)))
 (let ((?x57071 (* ?x54284 l_0_18_78)))
 (let ((?x58784 (- (* (* (- 2.0) l_0_18_106) l_0_18_85) (* (* 2.0 l_0_18_212) l_0_18_218))))
 (let ((?x58790 (- (- ?x58784 (* (* 2.0 l_0_18_213) l_0_18_219)) (* (* 2.0 l_0_18_214) l_0_18_220))))
 (let ((?x58796 (- (- ?x58790 (* (* 2.0 l_0_18_215) l_0_18_221)) (* (* 2.0 l_0_18_216) l_0_18_222))))
 (let ((?x58802 (- (- ?x58796 (* (* 2.0 l_0_18_217) l_0_18_223)) (* (* 2.0 l_0_18_240) l_0_18_246))))
 (let ((?x58808 (- (- ?x58802 (* (* 2.0 l_0_18_241) l_0_18_247)) (* (* 2.0 l_0_18_242) l_0_18_248))))
 (let ((?x58814 (- (- ?x58808 (* (* 2.0 l_0_18_243) l_0_18_249)) (* (* 2.0 l_0_18_244) l_0_18_250))))
 (let ((?x58820 (- (- ?x58814 (* (* 2.0 l_0_18_245) l_0_18_251)) (* (* 2.0 l_0_18_268) l_0_18_274))))
 (let ((?x58826 (- (- ?x58820 (* (* 2.0 l_0_18_269) l_0_18_275)) (* (* 2.0 l_0_18_270) l_0_18_276))))
 (let ((?x58832 (- (- ?x58826 (* (* 2.0 l_0_18_271) l_0_18_277)) (* (* 2.0 l_0_18_272) l_0_18_278))))
 (let ((?x58838 (- (- ?x58832 (* (* 2.0 l_0_18_273) l_0_18_279)) (* (* 2.0 l_0_18_296) l_0_18_302))))
 (let ((?x58844 (- (- ?x58838 (* (* 2.0 l_0_18_297) l_0_18_303)) (* (* 2.0 l_0_18_298) l_0_18_304))))
 (let ((?x58850 (- (- ?x58844 (* (* 2.0 l_0_18_299) l_0_18_305)) (* (* 2.0 l_0_18_300) l_0_18_306))))
 (let ((?x58856 (- (- ?x58850 (* (* 2.0 l_0_18_301) l_0_18_307)) (* (* 2.0 l_0_18_324) l_0_18_330))))
 (let ((?x58862 (- (- ?x58856 (* (* 2.0 l_0_18_325) l_0_18_331)) (* (* 2.0 l_0_18_326) l_0_18_332))))
 (let ((?x58868 (- (- ?x58862 (* (* 2.0 l_0_18_327) l_0_18_333)) (* (* 2.0 l_0_18_328) l_0_18_334))))
 (let ((?x58874 (- (- ?x58868 (* (* 2.0 l_0_18_329) l_0_18_335)) (* (* 2.0 l_0_18_352) l_0_18_358))))
 (let ((?x58880 (- (- ?x58874 (* (* 2.0 l_0_18_353) l_0_18_359)) (* (* 2.0 l_0_18_354) l_0_18_360))))
 (let ((?x58886 (- (- ?x58880 (* (* 2.0 l_0_18_355) l_0_18_361)) (* (* 2.0 l_0_18_356) l_0_18_362))))
 (= (+ (- ?x58886 (* (* 2.0 l_0_18_357) l_0_18_363)) ?x57071) 0.0))))))))))))))))))))))
(assert
 (let ((?x57086 (* l_0_18_87 l_0_18_87)))
 (let ((?x57084 (* l_0_18_86 l_0_18_86)))
 (let ((?x58980 (- (- (+ (* l_0_18_58 l_0_18_58) (* l_0_18_59 l_0_18_59)) ?x57084) ?x57086)))
 (= ?x58980 0.0)))))
(assert
 (let ((?x54579 (* 2.0 l_0_18_87)))
 (let ((?x54580 (* ?x54579 l_0_18_92)))
 (let ((?x54576 (* 2.0 l_0_18_86)))
 (let ((?x54577 (* ?x54576 l_0_18_91)))
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x54574 (* ?x54573 l_0_18_64)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x54571 (* ?x54570 l_0_18_63)))
 (= (- (- (+ ?x54571 ?x54574) ?x54577) ?x54580) 0.0))))))))))
(assert
 (let ((?x54573 (* 2.0 l_0_18_59)))
 (let ((?x57137 (* ?x54573 l_0_18_73)))
 (let ((?x54570 (* 2.0 l_0_18_58)))
 (let ((?x57135 (* ?x54570 l_0_18_72)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x57128 (* ?x54777 l_0_18_87)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_100) l_0_18_86) ?x57128) ?x57135) ?x57137) 0.0))))))))
(assert
 (let ((?x54689 (* l_0_18_94 l_0_18_94)))
 (let ((?x54687 (* l_0_18_93 l_0_18_93)))
 (let ((?x54685 (* l_0_18_92 l_0_18_92)))
 (let ((?x54683 (* l_0_18_91 l_0_18_91)))
 (let ((?x54681 (* l_0_18_66 l_0_18_66)))
 (let ((?x54679 (* l_0_18_65 l_0_18_65)))
 (let ((?x50470 (+ (+ (+ (* l_0_18_63 l_0_18_63) (* l_0_18_64 l_0_18_64)) ?x54679) ?x54681)))
 (= (- (- (- (- ?x50470 ?x54683) ?x54685) ?x54687) ?x54689) 0.0)))))))))
(assert
 (let ((?x54460 (* 2.0 l_0_18_66)))
 (let ((?x54818 (* ?x54460 l_0_18_75)))
 (let ((?x54457 (* 2.0 l_0_18_65)))
 (let ((?x54816 (* ?x54457 l_0_18_74)))
 (let ((?x54454 (* 2.0 l_0_18_64)))
 (let ((?x54814 (* ?x54454 l_0_18_73)))
 (let ((?x54451 (* 2.0 l_0_18_63)))
 (let ((?x54812 (* ?x54451 l_0_18_72)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x54796 (* ?x54795 l_0_18_94)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x54793 (* ?x54792 l_0_18_93)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x54779 (* ?x54777 l_0_18_92)))
 (let ((?x59023 (+ (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_91) ?x54779) ?x54793) ?x54796) ?x54812)))
 (= (+ (+ (+ ?x59023 ?x54814) ?x54816) ?x54818) 0.0)))))))))))))))))
(assert
 (let ((?x57366 (* l_0_18_77 l_0_18_77)))
 (let ((?x57364 (* l_0_18_76 l_0_18_76)))
 (let ((?x57362 (* l_0_18_75 l_0_18_75)))
 (let ((?x57360 (* l_0_18_74 l_0_18_74)))
 (let ((?x57358 (* l_0_18_73 l_0_18_73)))
 (let ((?x37793 (* l_0_18_72 l_0_18_72)))
 (let ((?x37792 (* l_0_18_105 l_0_18_105)))
 (let ((?x47547 (* l_0_18_104 l_0_18_104)))
 (let ((?x26928 (* l_0_18_103 l_0_18_103)))
 (let ((?x37721 (* l_0_18_102 l_0_18_102)))
 (let ((?x59029 (- (- (* (- l_0_18_100) l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x37721)))
 (let ((?x59036 (+ (+ (+ (+ (- (- (- ?x59029 ?x26928) ?x47547) ?x37792) ?x37793) ?x57358) ?x57360) ?x57362)))
 (= (+ (+ ?x59036 ?x57364) ?x57366) 0.0))))))))))))))
(assert
 (let ((?x57399 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x57396 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x57393 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x57390 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x57387 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x57384 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x57381 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x57262 (* 2.0 l_0_18_104)))
 (let ((?x57378 (* ?x57262 l_0_18_110)))
 (let ((?x54795 (* 2.0 l_0_18_103)))
 (let ((?x57376 (* ?x54795 l_0_18_109)))
 (let ((?x54792 (* 2.0 l_0_18_102)))
 (let ((?x14042 (* ?x54792 l_0_18_108)))
 (let ((?x54777 (* 2.0 l_0_18_101)))
 (let ((?x47640 (* ?x54777 l_0_18_107)))
 (let ((?x59049 (- (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_106) ?x47640) ?x14042) ?x57376) ?x57378)))
 (let ((?x59056 (+ (+ (+ (+ (+ (+ (- ?x59049 ?x57381) ?x57384) ?x57387) ?x57390) ?x57393) ?x57396) ?x57399)))
 (= ?x59056 0.0)))))))))))))))))))
(assert
 (let ((?x57463 (* l_0_18_84 l_0_18_84)))
 (let ((?x57461 (* l_0_18_83 l_0_18_83)))
 (let ((?x57459 (* l_0_18_82 l_0_18_82)))
 (let ((?x57457 (* l_0_18_81 l_0_18_81)))
 (let ((?x57455 (* l_0_18_80 l_0_18_80)))
 (let ((?x57453 (* l_0_18_79 l_0_18_79)))
 (let ((?x57451 (* l_0_18_78 l_0_18_78)))
 (let ((?x57449 (* l_0_18_112 l_0_18_112)))
 (let ((?x57447 (* l_0_18_111 l_0_18_111)))
 (let ((?x57445 (* l_0_18_110 l_0_18_110)))
 (let ((?x57443 (* l_0_18_109 l_0_18_109)))
 (let ((?x57441 (* l_0_18_108 l_0_18_108)))
 (let ((?x18915 (- (- (* (- l_0_18_106) l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57441)))
 (let ((?x59068 (+ (+ (+ (- (- (- (- ?x18915 ?x57443) ?x57445) ?x57447) ?x57449) ?x57451) ?x57453) ?x57455)))
 (= (+ (+ (+ (+ ?x59068 ?x57457) ?x57459) ?x57461) ?x57463) 0.0))))))))))))))))
(assert
 (let ((?x59093 (* l_0_18_337 l_0_18_337)))
 (let ((?x59091 (* l_0_18_309 l_0_18_309)))
 (let ((?x59089 (* l_0_18_281 l_0_18_281)))
 (let ((?x59087 (* l_0_18_253 l_0_18_253)))
 (let ((?x59088 (- (- (* (- l_0_18_197) l_0_18_197) (* l_0_18_225 l_0_18_225)) ?x59087)))
 (= (- (- (- ?x59088 ?x59089) ?x59091) ?x59093) 0.0)))))))
(assert
 (let ((?x59115 (- (* (* (- 2.0) l_0_18_197) l_0_18_198) (* (* 2.0 l_0_18_225) l_0_18_226))))
 (let ((?x59119 (- (- ?x59115 (* (* 2.0 l_0_18_253) l_0_18_254)) (* (* 2.0 l_0_18_281) l_0_18_282))))
 (let ((?x59123 (- (- ?x59119 (* (* 2.0 l_0_18_309) l_0_18_310)) (* (* 2.0 l_0_18_337) l_0_18_338))))
 (= ?x59123 0.0)))))
(assert
 (let ((?x40139 (- (* (* (- 2.0) l_0_18_197) l_0_18_203) (* (* 2.0 l_0_18_225) l_0_18_231))))
 (let ((?x59133 (- (- ?x40139 (* (* 2.0 l_0_18_253) l_0_18_259)) (* (* 2.0 l_0_18_281) l_0_18_287))))
 (let ((?x59137 (- (- ?x59133 (* (* 2.0 l_0_18_309) l_0_18_315)) (* (* 2.0 l_0_18_337) l_0_18_343))))
 (= ?x59137 0.0)))))
(assert
 (let ((?x59158 (- (* (* (- 2.0) l_0_18_197) l_0_18_218) (* (* 2.0 l_0_18_225) l_0_18_246))))
 (let ((?x59162 (- (- ?x59158 (* (* 2.0 l_0_18_253) l_0_18_274)) (* (* 2.0 l_0_18_281) l_0_18_302))))
 (let ((?x59166 (- (- ?x59162 (* (* 2.0 l_0_18_309) l_0_18_330)) (* (* 2.0 l_0_18_337) l_0_18_358))))
 (= ?x59166 0.0)))))
(assert
 (let ((?x59210 (* l_0_18_339 l_0_18_339)))
 (let ((?x59208 (* l_0_18_338 l_0_18_338)))
 (let ((?x59206 (* l_0_18_311 l_0_18_311)))
 (let ((?x59204 (* l_0_18_310 l_0_18_310)))
 (let ((?x59202 (* l_0_18_283 l_0_18_283)))
 (let ((?x59200 (* l_0_18_282 l_0_18_282)))
 (let ((?x59198 (* l_0_18_255 l_0_18_255)))
 (let ((?x59196 (* l_0_18_254 l_0_18_254)))
 (let ((?x59194 (* l_0_18_227 l_0_18_227)))
 (let ((?x59192 (* l_0_18_226 l_0_18_226)))
 (let ((?x59193 (- (- (* (- l_0_18_198) l_0_18_198) (* l_0_18_199 l_0_18_199)) ?x59192)))
 (let ((?x59207 (- (- (- (- (- (- (- ?x59193 ?x59194) ?x59196) ?x59198) ?x59200) ?x59202) ?x59204) ?x59206)))
 (= (- (- ?x59207 ?x59208) ?x59210) 0.0))))))))))))))
(assert
 (let ((?x59238 (- (* (* (- 2.0) l_0_18_198) l_0_18_203) (* (* 2.0 l_0_18_199) l_0_18_204))))
 (let ((?x59242 (- (- ?x59238 (* (* 2.0 l_0_18_226) l_0_18_231)) (* (* 2.0 l_0_18_227) l_0_18_232))))
 (let ((?x59246 (- (- ?x59242 (* (* 2.0 l_0_18_254) l_0_18_259)) (* (* 2.0 l_0_18_255) l_0_18_260))))
 (let ((?x59250 (- (- ?x59246 (* (* 2.0 l_0_18_282) l_0_18_287)) (* (* 2.0 l_0_18_283) l_0_18_288))))
 (let ((?x59254 (- (- ?x59250 (* (* 2.0 l_0_18_310) l_0_18_315)) (* (* 2.0 l_0_18_311) l_0_18_316))))
 (let ((?x59258 (- (- ?x59254 (* (* 2.0 l_0_18_338) l_0_18_343)) (* (* 2.0 l_0_18_339) l_0_18_344))))
 (= ?x59258 0.0))))))))
(assert
 (let ((?x59330 (* l_0_18_346 l_0_18_346)))
 (let ((?x59328 (* l_0_18_345 l_0_18_345)))
 (let ((?x59326 (* l_0_18_344 l_0_18_344)))
 (let ((?x59324 (* l_0_18_343 l_0_18_343)))
 (let ((?x59322 (* l_0_18_318 l_0_18_318)))
 (let ((?x59320 (* l_0_18_317 l_0_18_317)))
 (let ((?x59318 (* l_0_18_316 l_0_18_316)))
 (let ((?x59316 (* l_0_18_315 l_0_18_315)))
 (let ((?x59314 (* l_0_18_290 l_0_18_290)))
 (let ((?x59312 (* l_0_18_289 l_0_18_289)))
 (let ((?x59310 (* l_0_18_288 l_0_18_288)))
 (let ((?x59308 (* l_0_18_287 l_0_18_287)))
 (let ((?x59306 (* l_0_18_262 l_0_18_262)))
 (let ((?x59304 (* l_0_18_261 l_0_18_261)))
 (let ((?x59302 (* l_0_18_260 l_0_18_260)))
 (let ((?x59300 (* l_0_18_259 l_0_18_259)))
 (let ((?x59298 (* l_0_18_234 l_0_18_234)))
 (let ((?x59296 (* l_0_18_233 l_0_18_233)))
 (let ((?x59294 (* l_0_18_232 l_0_18_232)))
 (let ((?x59292 (* l_0_18_231 l_0_18_231)))
 (let ((?x59290 (* l_0_18_206 l_0_18_206)))
 (let ((?x59288 (* l_0_18_205 l_0_18_205)))
 (let ((?x59289 (- (- (* (- l_0_18_203) l_0_18_203) (* l_0_18_204 l_0_18_204)) ?x59288)))
 (let ((?x59303 (- (- (- (- (- (- (- ?x59289 ?x59290) ?x59292) ?x59294) ?x59296) ?x59298) ?x59300) ?x59302)))
 (let ((?x59317 (- (- (- (- (- (- (- ?x59303 ?x59304) ?x59306) ?x59308) ?x59310) ?x59312) ?x59314) ?x59316)))
 (let ((?x59331 (- (- (- (- (- (- (- ?x59317 ?x59318) ?x59320) ?x59322) ?x59324) ?x59326) ?x59328) ?x59330)))
 (= ?x59331 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x59453 (* l_0_18_364 l_0_18_364)))
 (let ((?x59451 (* l_0_18_363 l_0_18_363)))
 (let ((?x59449 (* l_0_18_362 l_0_18_362)))
 (let ((?x59447 (* l_0_18_361 l_0_18_361)))
 (let ((?x59445 (* l_0_18_360 l_0_18_360)))
 (let ((?x59443 (* l_0_18_359 l_0_18_359)))
 (let ((?x59441 (* l_0_18_358 l_0_18_358)))
 (let ((?x59439 (* l_0_18_336 l_0_18_336)))
 (let ((?x59437 (* l_0_18_335 l_0_18_335)))
 (let ((?x59435 (* l_0_18_334 l_0_18_334)))
 (let ((?x59433 (* l_0_18_333 l_0_18_333)))
 (let ((?x59431 (* l_0_18_332 l_0_18_332)))
 (let ((?x59429 (* l_0_18_331 l_0_18_331)))
 (let ((?x59427 (* l_0_18_330 l_0_18_330)))
 (let ((?x59425 (* l_0_18_308 l_0_18_308)))
 (let ((?x59423 (* l_0_18_307 l_0_18_307)))
 (let ((?x59421 (* l_0_18_306 l_0_18_306)))
 (let ((?x59419 (* l_0_18_305 l_0_18_305)))
 (let ((?x59417 (* l_0_18_304 l_0_18_304)))
 (let ((?x59415 (* l_0_18_303 l_0_18_303)))
 (let ((?x59413 (* l_0_18_302 l_0_18_302)))
 (let ((?x59411 (* l_0_18_280 l_0_18_280)))
 (let ((?x59409 (* l_0_18_279 l_0_18_279)))
 (let ((?x59407 (* l_0_18_278 l_0_18_278)))
 (let ((?x59405 (* l_0_18_277 l_0_18_277)))
 (let ((?x59403 (* l_0_18_276 l_0_18_276)))
 (let ((?x59401 (* l_0_18_275 l_0_18_275)))
 (let ((?x59399 (* l_0_18_274 l_0_18_274)))
 (let ((?x59397 (* l_0_18_252 l_0_18_252)))
 (let ((?x59395 (* l_0_18_251 l_0_18_251)))
 (let ((?x59393 (* l_0_18_250 l_0_18_250)))
 (let ((?x59391 (* l_0_18_249 l_0_18_249)))
 (let ((?x59389 (* l_0_18_248 l_0_18_248)))
 (let ((?x59387 (* l_0_18_247 l_0_18_247)))
 (let ((?x59385 (* l_0_18_246 l_0_18_246)))
 (let ((?x59383 (* l_0_18_224 l_0_18_224)))
 (let ((?x59381 (* l_0_18_223 l_0_18_223)))
 (let ((?x59379 (* l_0_18_222 l_0_18_222)))
 (let ((?x59377 (* l_0_18_221 l_0_18_221)))
 (let ((?x59375 (* l_0_18_220 l_0_18_220)))
 (let ((?x59376 (- (- (* (- l_0_18_218) l_0_18_218) (* l_0_18_219 l_0_18_219)) ?x59375)))
 (let ((?x59390 (- (- (- (- (- (- (- ?x59376 ?x59377) ?x59379) ?x59381) ?x59383) ?x59385) ?x59387) ?x59389)))
 (let ((?x59404 (- (- (- (- (- (- (- ?x59390 ?x59391) ?x59393) ?x59395) ?x59397) ?x59399) ?x59401) ?x59403)))
 (let ((?x59418 (- (- (- (- (- (- (- ?x59404 ?x59405) ?x59407) ?x59409) ?x59411) ?x59413) ?x59415) ?x59417)))
 (let ((?x59432 (- (- (- (- (- (- (- ?x59418 ?x59419) ?x59421) ?x59423) ?x59425) ?x59427) ?x59429) ?x59431)))
 (let ((?x59446 (- (- (- (- (- (- (- ?x59432 ?x59433) ?x59435) ?x59437) ?x59439) ?x59441) ?x59443) ?x59445)))
 (= (- (- (- (- ?x59446 ?x59447) ?x59449) ?x59451) ?x59453) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_28 0.0))
(assert
 (>= l_0_18_29 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_34 0.0))
(assert
 (>= l_0_18_38 0.0))
(assert
 (>= l_0_18_43 0.0))
(assert
 (>= l_0_18_49 0.0))
(assert
 (>= l_0_18_56 0.0))
(assert
 (>= l_0_18_57 0.0))
(assert
 (>= l_0_18_59 0.0))
(assert
 (>= l_0_18_62 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_71 0.0))
(assert
 (>= l_0_18_77 0.0))
(assert
 (>= l_0_18_84 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_87 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_94 0.0))
(assert
 (>= l_0_18_99 0.0))
(assert
 (>= l_0_18_105 0.0))
(assert
 (>= l_0_18_112 0.0))
(assert
 (>= l_0_18_113 0.0))
(assert
 (>= l_0_18_115 0.0))
(assert
 (>= l_0_18_118 0.0))
(assert
 (>= l_0_18_122 0.0))
(assert
 (>= l_0_18_127 0.0))
(assert
 (>= l_0_18_133 0.0))
(assert
 (>= l_0_18_140 0.0))
(assert
 (>= l_0_18_141 0.0))
(assert
 (>= l_0_18_143 0.0))
(assert
 (>= l_0_18_146 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_155 0.0))
(assert
 (>= l_0_18_161 0.0))
(assert
 (>= l_0_18_168 0.0))
(assert
 (>= l_0_18_169 0.0))
(assert
 (>= l_0_18_171 0.0))
(assert
 (>= l_0_18_174 0.0))
(assert
 (>= l_0_18_178 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_189 0.0))
(assert
 (>= l_0_18_196 0.0))
(assert
 (>= l_0_18_197 0.0))
(assert
 (>= l_0_18_199 0.0))
(assert
 (>= l_0_18_202 0.0))
(assert
 (>= l_0_18_206 0.0))
(assert
 (>= l_0_18_211 0.0))
(assert
 (>= l_0_18_217 0.0))
(assert
 (>= l_0_18_224 0.0))
(assert
 (>= l_0_18_225 0.0))
(assert
 (>= l_0_18_227 0.0))
(assert
 (>= l_0_18_230 0.0))
(assert
 (>= l_0_18_234 0.0))
(assert
 (>= l_0_18_239 0.0))
(assert
 (>= l_0_18_245 0.0))
(assert
 (>= l_0_18_252 0.0))
(assert
 (>= l_0_18_253 0.0))
(assert
 (>= l_0_18_255 0.0))
(assert
 (>= l_0_18_258 0.0))
(assert
 (>= l_0_18_262 0.0))
(assert
 (>= l_0_18_267 0.0))
(assert
 (>= l_0_18_273 0.0))
(assert
 (>= l_0_18_280 0.0))
(assert
 (>= l_0_18_281 0.0))
(assert
 (>= l_0_18_283 0.0))
(assert
 (>= l_0_18_286 0.0))
(assert
 (>= l_0_18_290 0.0))
(assert
 (>= l_0_18_295 0.0))
(assert
 (>= l_0_18_301 0.0))
(assert
 (>= l_0_18_308 0.0))
(assert
 (>= l_0_18_309 0.0))
(assert
 (>= l_0_18_311 0.0))
(assert
 (>= l_0_18_314 0.0))
(assert
 (>= l_0_18_318 0.0))
(assert
 (>= l_0_18_323 0.0))
(assert
 (>= l_0_18_329 0.0))
(assert
 (>= l_0_18_336 0.0))
(assert
 (>= l_0_18_337 0.0))
(assert
 (>= l_0_18_339 0.0))
(assert
 (>= l_0_18_342 0.0))
(assert
 (>= l_0_18_346 0.0))
(assert
 (>= l_0_18_351 0.0))
(assert
 (>= l_0_18_357 0.0))
(assert
 (>= l_0_18_364 0.0))
(check-sat)
(get-model)