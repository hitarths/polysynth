(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_45 () Real)
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- 1.0 (* l_0_2_46 l_0_2_46)) 0.0))
(assert
 (let ((?x528 (* l_0_2_51 l_0_2_51)))
 (let ((?x526 (* l_0_2_50 l_0_2_50)))
 (let ((?x524 (* l_0_2_49 l_0_2_49)))
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (= (- (- (- ?x523 ?x524) ?x526) ?x528) 0.0))))))))
(assert
 (let ((?x564 (* l_0_2_6 l_0_2_6)))
 (let ((?x565 (* 2.0 ?x564)))
 (let ((?x561 (* l_0_2_5 l_0_2_5)))
 (let ((?x562 (* 2.0 ?x561)))
 (let ((?x558 (* l_0_2_4 l_0_2_4)))
 (let ((?x559 (* 2.0 ?x558)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x547 (* ?x546 l_0_2_17)))
 (let ((?x544 (* 2.0 l_0_2_1)))
 (let ((?x545 (* ?x544 l_0_2_2)))
 (let ((?x554 (- (- (- ?x545 ?x547) (* (* 2.0 l_0_2_19) l_0_2_19)) (* (* 2.0 l_0_2_20) l_0_2_20))))
 (let ((?x566 (+ (+ (+ (- ?x554 (* (* 2.0 l_0_2_21) l_0_2_21)) ?x559) ?x562) ?x565)))
 (= ?x566 0.0))))))))))))))
(assert
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x598 (* ?x546 l_0_2_19)))
 (let ((?x599 (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x598)))
 (= ?x599 0.0)))))
(assert
 (let ((?x564 (* l_0_2_6 l_0_2_6)))
 (let ((?x561 (* l_0_2_5 l_0_2_5)))
 (let ((?x558 (* l_0_2_4 l_0_2_4)))
 (let ((?x589 (* l_0_2_21 l_0_2_21)))
 (let ((?x583 (* l_0_2_20 l_0_2_20)))
 (let ((?x577 (* l_0_2_19 l_0_2_19)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x611 (* ?x546 l_0_2_22)))
 (let ((?x544 (* 2.0 l_0_2_1)))
 (let ((?x610 (* ?x544 l_0_2_7)))
 (let ((?x618 (- (- (- (+ (+ (+ (- ?x610 ?x611) ?x577) ?x583) ?x589) ?x558) ?x561) ?x564)))
 (= ?x618 0.0)))))))))))))
(assert
 (let ((?x564 (* l_0_2_6 l_0_2_6)))
 (let ((?x561 (* l_0_2_5 l_0_2_5)))
 (let ((?x558 (* l_0_2_4 l_0_2_4)))
 (let ((?x589 (* l_0_2_21 l_0_2_21)))
 (let ((?x583 (* l_0_2_20 l_0_2_20)))
 (let ((?x577 (* l_0_2_19 l_0_2_19)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x645 (* ?x546 l_0_2_26)))
 (let ((?x646 (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x645)))
 (let ((?x652 (- (- (- (- ?x646 ?x577) ?x583) ?x589) (* (* 1.0 l_0_2_34) l_0_2_34))))
 (let ((?x658 (- (- ?x652 (* (* 1.0 l_0_2_35) l_0_2_35)) (* (* 1.0 l_0_2_36) l_0_2_36))))
 (= (+ (+ (+ ?x658 ?x558) ?x561) ?x564) 0.0)))))))))))))
(assert
 (let ((?x697 (* l_0_2_3 l_0_2_3)))
 (let ((?x695 (* l_0_2_2 l_0_2_2)))
 (let ((?x698 (+ (+ (- (* (- l_0_2_17) l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x695) ?x697)))
 (= ?x698 0.0)))))
(assert
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x719 (* ?x718 l_0_2_5)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x716 (* ?x715 l_0_2_4)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x713 (* ?x712 l_0_2_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_19) ?x713) ?x716) ?x719) 0.0))))))))
(assert
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x742 (* ?x718 l_0_2_8)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x740 (* ?x715 l_0_2_7)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x733 (* ?x712 l_0_2_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_22) ?x733) ?x740) ?x742) 0.0))))))))
(assert
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x768 (* ?x712 l_0_2_27)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x766 (* ?x765 l_0_2_26)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x763 (* ?x757 l_0_2_3)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x756 (* ?x754 l_0_2_2)))
 (= (- (- (+ ?x756 ?x763) ?x766) ?x768) 0.0))))))))))
(assert
 (let ((?x564 (* l_0_2_6 l_0_2_6)))
 (let ((?x561 (* l_0_2_5 l_0_2_5)))
 (let ((?x558 (* l_0_2_4 l_0_2_4)))
 (let ((?x589 (* l_0_2_21 l_0_2_21)))
 (let ((?x793 (+ (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x589) ?x558)))
 (= (+ (+ ?x793 ?x561) ?x564) 0.0)))))))
(assert
 (let ((?x816 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x813 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x810 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x555 (* 2.0 l_0_2_21)))
 (let ((?x807 (* ?x555 l_0_2_24)))
 (let ((?x552 (* 2.0 l_0_2_20)))
 (let ((?x805 (* ?x552 l_0_2_23)))
 (let ((?x814 (+ (+ (- (- (* (* (- 2.0) l_0_2_19) l_0_2_22) ?x805) ?x807) ?x810) ?x813)))
 (= (+ ?x814 ?x816) 0.0))))))))))
(assert
 (let ((?x555 (* 2.0 l_0_2_21)))
 (let ((?x852 (* ?x555 l_0_2_28)))
 (let ((?x552 (* 2.0 l_0_2_20)))
 (let ((?x850 (* ?x552 l_0_2_27)))
 (let ((?x549 (* 2.0 l_0_2_19)))
 (let ((?x848 (* ?x549 l_0_2_26)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x846 (* ?x839 l_0_2_6)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x836 (* ?x757 l_0_2_5)))
 (let ((?x851 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x836) ?x846) ?x848) ?x850)))
 (let ((?x853 (- ?x851 ?x852)))
 (= ?x853 0.0))))))))))))))
(assert
 (let ((?x894 (* l_0_2_9 l_0_2_9)))
 (let ((?x892 (* l_0_2_8 l_0_2_8)))
 (let ((?x890 (* l_0_2_7 l_0_2_7)))
 (let ((?x888 (* l_0_2_25 l_0_2_25)))
 (let ((?x886 (* l_0_2_24 l_0_2_24)))
 (let ((?x884 (* l_0_2_23 l_0_2_23)))
 (let ((?x887 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x884) ?x886)))
 (= (+ (+ (+ (- ?x887 ?x888) ?x890) ?x892) ?x894) 0.0)))))))))
(assert
 (let ((?x927 (* 2.0 l_0_2_25)))
 (let ((?x928 (* ?x927 l_0_2_29)))
 (let ((?x924 (* 2.0 l_0_2_24)))
 (let ((?x925 (* ?x924 l_0_2_28)))
 (let ((?x921 (* 2.0 l_0_2_23)))
 (let ((?x922 (* ?x921 l_0_2_27)))
 (let ((?x918 (* 2.0 l_0_2_22)))
 (let ((?x919 (* ?x918 l_0_2_26)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x916 (* ?x839 l_0_2_9)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x914 (* ?x757 l_0_2_8)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x912 (* ?x754 l_0_2_7)))
 (let ((?x913 (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x912)))
 (= (- (- (- (- (+ (+ ?x913 ?x914) ?x916) ?x919) ?x922) ?x925) ?x928) 0.0)))))))))))))))))
(assert
 (let ((?x685 (* l_0_2_36 l_0_2_36)))
 (let ((?x681 (* l_0_2_35 l_0_2_35)))
 (let ((?x677 (* l_0_2_34 l_0_2_34)))
 (let ((?x982 (* l_0_2_30 l_0_2_30)))
 (let ((?x980 (* l_0_2_29 l_0_2_29)))
 (let ((?x978 (* l_0_2_28 l_0_2_28)))
 (let ((?x976 (* l_0_2_27 l_0_2_27)))
 (let ((?x974 (* l_0_2_26 l_0_2_26)))
 (let ((?x972 (* l_0_2_15 l_0_2_15)))
 (let ((?x970 (* l_0_2_14 l_0_2_14)))
 (let ((?x968 (* l_0_2_13 l_0_2_13)))
 (let ((?x971 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x968) ?x970)))
 (let ((?x983 (- (- (- (- (- (+ ?x971 ?x972) ?x974) ?x976) ?x978) ?x980) ?x982)))
 (= (+ (+ (+ ?x983 ?x677) ?x681) ?x685) 0.0)))))))))))))))
(assert
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x1006 (* 2.0 ?x521)))
 (let ((?x1011 (- (- ?x1006 (* (* 2.0 l_0_2_16) l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_47))))
 (= ?x1011 0.0)))))
(assert
 (let ((?x1033 (* l_0_2_48 l_0_2_48)))
 (let ((?x1031 (* l_0_2_47 l_0_2_47)))
 (let ((?x1030 (- (* (* 4.0 l_0_2_1) l_0_2_2) (* (* 4.0 l_0_2_16) l_0_2_17))))
 (= (- (- ?x1030 ?x1031) ?x1033) 0.0)))))
(assert
 (let ((?x1052 (- (* (* 4.0 l_0_2_1) l_0_2_4) (* (* 4.0 l_0_2_16) l_0_2_19))))
 (let ((?x1058 (- (- ?x1052 (* (* 2.0 l_0_2_47) l_0_2_49)) (* (* 2.0 l_0_2_48) l_0_2_50))))
 (= ?x1058 0.0))))
(assert
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x547 (* ?x546 l_0_2_17)))
 (let ((?x1082 (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) (* (* 4.0 l_0_2_1) l_0_2_7))))
 (let ((?x1087 (- (- (+ ?x1082 ?x547) (* (* 4.0 l_0_2_16) l_0_2_22)) (* (* 2.0 l_0_2_47) l_0_2_52))))
 (= (- ?x1087 (* (* 2.0 l_0_2_48) l_0_2_53)) 0.0))))))
(assert
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1120 (* ?x1119 l_0_2_32)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x547 (* ?x546 l_0_2_17)))
 (let ((?x544 (* 2.0 l_0_2_1)))
 (let ((?x545 (* ?x544 l_0_2_2)))
 (let ((?x1118 (- (- (+ (* (* 4.0 l_0_2_1) l_0_2_11) ?x545) ?x547) (* (* 4.0 l_0_2_16) l_0_2_26))))
 (let ((?x1125 (- (- (- ?x1118 ?x1120) (* (* 2.0 l_0_2_47) l_0_2_56)) (* (* 2.0 l_0_2_48) l_0_2_57))))
 (= ?x1125 0.0))))))))))
(assert
 (let ((?x1157 (- (* (* (- 2.0) l_0_2_17) l_0_2_17) (* (* 2.0 l_0_2_18) l_0_2_18))))
 (let ((?x1161 (+ (+ ?x1157 (* 2.0 (* l_0_2_2 l_0_2_2))) (* 2.0 (* l_0_2_3 l_0_2_3)))))
 (= ?x1161 0.0))))
(assert
 (let ((?x1178 (- (* (* (- 4.0) l_0_2_17) l_0_2_19) (* (* 4.0 l_0_2_18) l_0_2_20))))
 (let ((?x1184 (+ (+ ?x1178 (* (* 4.0 l_0_2_2) l_0_2_4)) (* (* 4.0 l_0_2_3) l_0_2_5))))
 (= ?x1184 0.0))))
(assert
 (let ((?x697 (* l_0_2_3 l_0_2_3)))
 (let ((?x695 (* l_0_2_2 l_0_2_2)))
 (let ((?x693 (* l_0_2_18 l_0_2_18)))
 (let ((?x1200 (- (+ (* (* (- 4.0) l_0_2_17) l_0_2_22) (* l_0_2_17 l_0_2_17)) (* (* 4.0 l_0_2_18) l_0_2_23))))
 (let ((?x1206 (+ (- (+ (+ ?x1200 ?x693) (* (* 4.0 l_0_2_2) l_0_2_7)) ?x695) (* (* 4.0 l_0_2_3) l_0_2_8))))
 (= (- ?x1206 ?x697) 0.0)))))))
(assert
 (let ((?x697 (* l_0_2_3 l_0_2_3)))
 (let ((?x695 (* l_0_2_2 l_0_2_2)))
 (let ((?x693 (* l_0_2_18 l_0_2_18)))
 (let ((?x701 (* l_0_2_17 l_0_2_17)))
 (let ((?x1229 (+ (* (* 4.0 l_0_2_11) l_0_2_2) (* (* 4.0 l_0_2_12) l_0_2_3))))
 (let ((?x1235 (- (- (- ?x1229 (* (* 4.0 l_0_2_17) l_0_2_26)) ?x701) (* (* 4.0 l_0_2_18) l_0_2_27))))
 (let ((?x1241 (- (+ (+ (- ?x1235 ?x693) ?x695) ?x697) (* (* 1.0 l_0_2_32) l_0_2_32))))
 (= (- ?x1241 (* (* 1.0 l_0_2_33) l_0_2_33)) 0.0)))))))))
(assert
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x719 (* ?x718 l_0_2_5)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x716 (* ?x715 l_0_2_4)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x713 (* ?x712 l_0_2_20)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x1276 (* ?x765 l_0_2_19)))
 (let ((?x1284 (- (- (- (+ ?x1276 ?x713) (* (* 4.0 l_0_2_19) l_0_2_22)) ?x716) (* (* 4.0 l_0_2_20) l_0_2_23))))
 (let ((?x1291 (+ (- (- ?x1284 (* (* 4.0 l_0_2_21) l_0_2_24)) ?x719) (* (* 4.0 l_0_2_4) l_0_2_7))))
 (let ((?x1297 (+ (+ ?x1291 (* (* 4.0 l_0_2_5) l_0_2_8)) (* (* 4.0 l_0_2_6) l_0_2_9))))
 (= ?x1297 0.0)))))))))))))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1348 (* ?x1347 l_0_2_35)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1345 (* ?x1344 l_0_2_34)))
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x719 (* ?x718 l_0_2_5)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x716 (* ?x715 l_0_2_4)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x713 (* ?x712 l_0_2_20)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x1276 (* ?x765 l_0_2_19)))
 (let ((?x1330 (+ (* (* 4.0 l_0_2_11) l_0_2_4) (* (* 4.0 l_0_2_12) l_0_2_5))))
 (let ((?x1337 (- (- (- (+ ?x1330 (* (* 4.0 l_0_2_13) l_0_2_6)) ?x1276) ?x713) (* (* 4.0 l_0_2_19) l_0_2_26))))
 (let ((?x1342 (- (- (+ ?x1337 ?x716) (* (* 4.0 l_0_2_20) l_0_2_27)) (* (* 4.0 l_0_2_21) l_0_2_28))))
 (= (- (- (+ ?x1342 ?x719) ?x1345) ?x1348) 0.0)))))))))))))))))
(assert
 (let ((?x894 (* l_0_2_9 l_0_2_9)))
 (let ((?x1412 (* 2.0 ?x894)))
 (let ((?x892 (* l_0_2_8 l_0_2_8)))
 (let ((?x1410 (* 2.0 ?x892)))
 (let ((?x890 (* l_0_2_7 l_0_2_7)))
 (let ((?x1408 (* 2.0 ?x890)))
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x742 (* ?x718 l_0_2_8)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x740 (* ?x715 l_0_2_7)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x733 (* ?x712 l_0_2_23)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x1395 (* ?x765 l_0_2_22)))
 (let ((?x881 (* l_0_2_10 l_0_2_10)))
 (let ((?x1394 (* 2.0 ?x881)))
 (let ((?x1400 (- (- (+ (+ ?x1394 ?x1395) ?x733) ?x740) (* (* 2.0 l_0_2_22) l_0_2_22))))
 (let ((?x1404 (- (- ?x1400 (* (* 2.0 l_0_2_23) l_0_2_23)) (* (* 2.0 l_0_2_24) l_0_2_24))))
 (let ((?x1411 (+ (+ (- (- ?x1404 (* (* 2.0 l_0_2_25) l_0_2_25)) ?x742) ?x1408) ?x1410)))
 (= (+ ?x1411 ?x1412) 0.0)))))))))))))))))))))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1476 (* ?x1347 l_0_2_38)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1474 (* ?x1344 l_0_2_37)))
 (let ((?x718 (* 2.0 l_0_2_3)))
 (let ((?x742 (* ?x718 l_0_2_8)))
 (let ((?x715 (* 2.0 l_0_2_2)))
 (let ((?x740 (* ?x715 l_0_2_7)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x768 (* ?x712 l_0_2_27)))
 (let ((?x733 (* ?x712 l_0_2_23)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x766 (* ?x765 l_0_2_26)))
 (let ((?x1395 (* ?x765 l_0_2_22)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x763 (* ?x757 l_0_2_3)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x756 (* ?x754 l_0_2_2)))
 (let ((?x1450 (+ (- (* (* 4.0 l_0_2_10) l_0_2_14) ?x756) (* (* 4.0 l_0_2_11) l_0_2_7))))
 (let ((?x1455 (+ (+ (- ?x1450 ?x763) (* (* 4.0 l_0_2_12) l_0_2_8)) (* (* 4.0 l_0_2_13) l_0_2_9))))
 (let ((?x1463 (- (+ (+ (- (+ (- ?x1455 ?x1395) ?x766) ?x733) ?x768) ?x740) (* (* 4.0 l_0_2_22) l_0_2_26))))
 (let ((?x1469 (- (- ?x1463 (* (* 4.0 l_0_2_23) l_0_2_27)) (* (* 4.0 l_0_2_24) l_0_2_28))))
 (let ((?x1477 (- (- (+ (- ?x1469 (* (* 4.0 l_0_2_25) l_0_2_29)) ?x742) ?x1474) ?x1476)))
 (= ?x1477 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1570 (* ?x1347 l_0_2_42)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1568 (* ?x1344 l_0_2_41)))
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1120 (* ?x1119 l_0_2_32)))
 (let ((?x712 (* 2.0 l_0_2_18)))
 (let ((?x768 (* ?x712 l_0_2_27)))
 (let ((?x765 (* 2.0 l_0_2_17)))
 (let ((?x766 (* ?x765 l_0_2_26)))
 (let ((?x972 (* l_0_2_15 l_0_2_15)))
 (let ((?x1548 (* 2.0 ?x972)))
 (let ((?x970 (* l_0_2_14 l_0_2_14)))
 (let ((?x1546 (* 2.0 ?x970)))
 (let ((?x968 (* l_0_2_13 l_0_2_13)))
 (let ((?x1544 (* 2.0 ?x968)))
 (let ((?x966 (* l_0_2_12 l_0_2_12)))
 (let ((?x1542 (* 2.0 ?x966)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x763 (* ?x757 l_0_2_3)))
 (let ((?x965 (* l_0_2_11 l_0_2_11)))
 (let ((?x1539 (* 2.0 ?x965)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x756 (* ?x754 l_0_2_2)))
 (let ((?x1550 (- (+ (+ (+ (+ (+ (+ ?x756 ?x1539) ?x763) ?x1542) ?x1544) ?x1546) ?x1548) ?x766)))
 (let ((?x1557 (- (- (- ?x1550 ?x768) (* (* 2.0 l_0_2_26) l_0_2_26)) (* (* 2.0 l_0_2_27) l_0_2_27))))
 (let ((?x1563 (- (- ?x1557 (* (* 2.0 l_0_2_28) l_0_2_28)) (* (* 2.0 l_0_2_29) l_0_2_29))))
 (let ((?x1571 (- (- (+ (- ?x1563 (* (* 2.0 l_0_2_30) l_0_2_30)) ?x1120) ?x1568) ?x1570)))
 (= ?x1571 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (let ((?x1621 (- (- ?x523 (* (* 1.0 l_0_2_31) l_0_2_31)) (* (* 2.0 l_0_2_46) l_0_2_56))))
 (= ?x1621 0.0))))))
(assert
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1634 (* ?x1119 l_0_2_34)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x598 (* ?x546 l_0_2_19)))
 (let ((?x599 (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x598)))
 (let ((?x1641 (- (- (- ?x599 ?x1634) (* (* 2.0 l_0_2_49) l_0_2_56)) (* (* 2.0 l_0_2_50) l_0_2_57))))
 (= (- ?x1641 (* (* 2.0 l_0_2_51) l_0_2_58)) 0.0))))))))
(assert
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1675 (* ?x1119 l_0_2_37)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x645 (* ?x546 l_0_2_26)))
 (let ((?x611 (* ?x546 l_0_2_22)))
 (let ((?x544 (* 2.0 l_0_2_1)))
 (let ((?x610 (* ?x544 l_0_2_7)))
 (let ((?x1676 (- (+ (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x610) ?x611) ?x645) ?x1675)))
 (let ((?x1682 (- (- ?x1676 (* (* 2.0 l_0_2_52) l_0_2_56)) (* (* 2.0 l_0_2_53) l_0_2_57))))
 (let ((?x1688 (- (- ?x1682 (* (* 2.0 l_0_2_54) l_0_2_58)) (* (* 2.0 l_0_2_55) l_0_2_59))))
 (= ?x1688 0.0))))))))))))
(assert
 (let ((?x1737 (* l_0_2_60 l_0_2_60)))
 (let ((?x1735 (* l_0_2_59 l_0_2_59)))
 (let ((?x1733 (* l_0_2_58 l_0_2_58)))
 (let ((?x1731 (* l_0_2_57 l_0_2_57)))
 (let ((?x1729 (* l_0_2_56 l_0_2_56)))
 (let ((?x1623 (* l_0_2_31 l_0_2_31)))
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1726 (* ?x1119 l_0_2_41)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x645 (* ?x546 l_0_2_26)))
 (let ((?x646 (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x645)))
 (let ((?x1738 (- (- (- (- (- (+ (- ?x646 ?x1726) ?x1623) ?x1729) ?x1731) ?x1733) ?x1735) ?x1737)))
 (= ?x1738 0.0))))))))))))))
(assert
 (let ((?x816 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x813 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x810 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1780 (* 2.0 l_0_2_36)))
 (let ((?x1781 (* ?x1780 l_0_2_39)))
 (let ((?x1777 (* 2.0 l_0_2_35)))
 (let ((?x1778 (* ?x1777 l_0_2_38)))
 (let ((?x1774 (* 2.0 l_0_2_34)))
 (let ((?x1775 (* ?x1774 l_0_2_37)))
 (let ((?x555 (* 2.0 l_0_2_21)))
 (let ((?x852 (* ?x555 l_0_2_28)))
 (let ((?x807 (* ?x555 l_0_2_24)))
 (let ((?x552 (* 2.0 l_0_2_20)))
 (let ((?x850 (* ?x552 l_0_2_27)))
 (let ((?x805 (* ?x552 l_0_2_23)))
 (let ((?x549 (* 2.0 l_0_2_19)))
 (let ((?x848 (* ?x549 l_0_2_26)))
 (let ((?x1767 (* ?x549 l_0_2_22)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x846 (* ?x839 l_0_2_6)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x836 (* ?x757 l_0_2_5)))
 (let ((?x1769 (+ (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_4) ?x836) ?x846) ?x1767) ?x848)))
 (let ((?x1782 (- (- (- (+ (- (+ (- ?x1769 ?x805) ?x850) ?x807) ?x852) ?x1775) ?x1778) ?x1781)))
 (= (+ (+ (+ ?x1782 ?x810) ?x813) ?x816) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x1780 (* 2.0 l_0_2_36)))
 (let ((?x1834 (* ?x1780 l_0_2_43)))
 (let ((?x1777 (* 2.0 l_0_2_35)))
 (let ((?x1832 (* ?x1777 l_0_2_42)))
 (let ((?x1774 (* 2.0 l_0_2_34)))
 (let ((?x1830 (* ?x1774 l_0_2_41)))
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1634 (* ?x1119 l_0_2_34)))
 (let ((?x555 (* 2.0 l_0_2_21)))
 (let ((?x852 (* ?x555 l_0_2_28)))
 (let ((?x552 (* 2.0 l_0_2_20)))
 (let ((?x850 (* ?x552 l_0_2_27)))
 (let ((?x549 (* 2.0 l_0_2_19)))
 (let ((?x848 (* ?x549 l_0_2_26)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x846 (* ?x839 l_0_2_6)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x836 (* ?x757 l_0_2_5)))
 (let ((?x851 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x836) ?x846) ?x848) ?x850)))
 (let ((?x853 (- ?x851 ?x852)))
 (= (- (- (- (+ ?x853 ?x1634) ?x1830) ?x1832) ?x1834) 0.0))))))))))))))))))))))
(assert
 (let ((?x894 (* l_0_2_9 l_0_2_9)))
 (let ((?x892 (* l_0_2_8 l_0_2_8)))
 (let ((?x890 (* l_0_2_7 l_0_2_7)))
 (let ((?x888 (* l_0_2_25 l_0_2_25)))
 (let ((?x927 (* 2.0 l_0_2_25)))
 (let ((?x928 (* ?x927 l_0_2_29)))
 (let ((?x886 (* l_0_2_24 l_0_2_24)))
 (let ((?x924 (* 2.0 l_0_2_24)))
 (let ((?x925 (* ?x924 l_0_2_28)))
 (let ((?x884 (* l_0_2_23 l_0_2_23)))
 (let ((?x921 (* 2.0 l_0_2_23)))
 (let ((?x922 (* ?x921 l_0_2_27)))
 (let ((?x882 (* l_0_2_22 l_0_2_22)))
 (let ((?x918 (* 2.0 l_0_2_22)))
 (let ((?x919 (* ?x918 l_0_2_26)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x916 (* ?x839 l_0_2_9)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x914 (* ?x757 l_0_2_8)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x912 (* ?x754 l_0_2_7)))
 (let ((?x1860 (- (+ (* (* (- 2.0) l_0_2_10) l_0_2_14) (* l_0_2_10 l_0_2_10)) ?x912)))
 (let ((?x1867 (+ (- (+ (- (+ (- (- ?x1860 ?x914) ?x916) ?x919) ?x882) ?x922) ?x884) ?x925)))
 (let ((?x1873 (- (- (+ (- ?x1867 ?x886) ?x928) ?x888) (* (* 1.0 l_0_2_37) l_0_2_37))))
 (let ((?x1879 (- (- ?x1873 (* (* 1.0 l_0_2_38) l_0_2_38)) (* (* 1.0 l_0_2_39) l_0_2_39))))
 (let ((?x1885 (+ (+ (+ (- ?x1879 (* (* 1.0 l_0_2_40) l_0_2_40)) ?x890) ?x892) ?x894)))
 (= ?x1885 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1958 (* (* 2.0 l_0_2_40) l_0_2_44)))
 (let ((?x1955 (* (* 2.0 l_0_2_39) l_0_2_43)))
 (let ((?x1952 (* (* 2.0 l_0_2_38) l_0_2_42)))
 (let ((?x1949 (* (* 2.0 l_0_2_37) l_0_2_41)))
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1675 (* ?x1119 l_0_2_37)))
 (let ((?x982 (* l_0_2_30 l_0_2_30)))
 (let ((?x980 (* l_0_2_29 l_0_2_29)))
 (let ((?x978 (* l_0_2_28 l_0_2_28)))
 (let ((?x976 (* l_0_2_27 l_0_2_27)))
 (let ((?x974 (* l_0_2_26 l_0_2_26)))
 (let ((?x927 (* 2.0 l_0_2_25)))
 (let ((?x928 (* ?x927 l_0_2_29)))
 (let ((?x924 (* 2.0 l_0_2_24)))
 (let ((?x925 (* ?x924 l_0_2_28)))
 (let ((?x921 (* 2.0 l_0_2_23)))
 (let ((?x922 (* ?x921 l_0_2_27)))
 (let ((?x918 (* 2.0 l_0_2_22)))
 (let ((?x919 (* ?x918 l_0_2_26)))
 (let ((?x972 (* l_0_2_15 l_0_2_15)))
 (let ((?x970 (* l_0_2_14 l_0_2_14)))
 (let ((?x968 (* l_0_2_13 l_0_2_13)))
 (let ((?x839 (* 2.0 l_0_2_13)))
 (let ((?x916 (* ?x839 l_0_2_9)))
 (let ((?x966 (* l_0_2_12 l_0_2_12)))
 (let ((?x757 (* 2.0 l_0_2_12)))
 (let ((?x914 (* ?x757 l_0_2_8)))
 (let ((?x965 (* l_0_2_11 l_0_2_11)))
 (let ((?x754 (* 2.0 l_0_2_11)))
 (let ((?x912 (* ?x754 l_0_2_7)))
 (let ((?x913 (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x912)))
 (let ((?x1937 (- (- (- (+ (- (+ (- ?x913 ?x965) ?x914) ?x966) ?x916) ?x968) ?x970) ?x972)))
 (let ((?x1944 (+ (+ (+ (- (- (- (- ?x1937 ?x919) ?x922) ?x925) ?x928) ?x974) ?x976) ?x978)))
 (let ((?x1959 (- (- (- (- (+ (+ (+ ?x1944 ?x980) ?x982) ?x1675) ?x1949) ?x1952) ?x1955) ?x1958)))
 (= ?x1959 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1119 (* 2.0 l_0_2_31)))
 (let ((?x1726 (* ?x1119 l_0_2_41)))
 (let ((?x982 (* l_0_2_30 l_0_2_30)))
 (let ((?x980 (* l_0_2_29 l_0_2_29)))
 (let ((?x978 (* l_0_2_28 l_0_2_28)))
 (let ((?x976 (* l_0_2_27 l_0_2_27)))
 (let ((?x974 (* l_0_2_26 l_0_2_26)))
 (let ((?x972 (* l_0_2_15 l_0_2_15)))
 (let ((?x970 (* l_0_2_14 l_0_2_14)))
 (let ((?x968 (* l_0_2_13 l_0_2_13)))
 (let ((?x971 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x968) ?x970)))
 (let ((?x983 (- (- (- (- (- (+ ?x971 ?x972) ?x974) ?x976) ?x978) ?x980) ?x982)))
 (let ((?x2019 (- (- (+ ?x983 ?x1726) (* (* 1.0 l_0_2_41) l_0_2_41)) (* (* 1.0 l_0_2_42) l_0_2_42))))
 (let ((?x2025 (- (- ?x2019 (* (* 1.0 l_0_2_43) l_0_2_43)) (* (* 1.0 l_0_2_44) l_0_2_44))))
 (= (- ?x2025 (* (* 1.0 l_0_2_45) l_0_2_45)) 0.0))))))))))))))))
(assert
 (let ((?x2056 (- (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_16 l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_52))))
 (= ?x2056 0.0)))
(assert
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x598 (* ?x546 l_0_2_19)))
 (let ((?x2072 (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x598) (* (* 2.0 l_0_2_49) l_0_2_52))))
 (let ((?x2076 (- (- ?x2072 (* (* 2.0 l_0_2_50) l_0_2_53)) (* (* 2.0 l_0_2_51) l_0_2_54))))
 (= ?x2076 0.0))))))
(assert
 (let ((?x2108 (* l_0_2_55 l_0_2_55)))
 (let ((?x2106 (* l_0_2_54 l_0_2_54)))
 (let ((?x2104 (* l_0_2_53 l_0_2_53)))
 (let ((?x2102 (* l_0_2_52 l_0_2_52)))
 (let ((?x546 (* 2.0 l_0_2_16)))
 (let ((?x611 (* ?x546 l_0_2_22)))
 (let ((?x2107 (- (- (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_7) ?x611) ?x2102) ?x2104) ?x2106)))
 (= (- ?x2107 ?x2108) 0.0)))))))))
(assert
 (let ((?x816 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x813 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x810 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x555 (* 2.0 l_0_2_21)))
 (let ((?x807 (* ?x555 l_0_2_24)))
 (let ((?x552 (* 2.0 l_0_2_20)))
 (let ((?x805 (* ?x552 l_0_2_23)))
 (let ((?x549 (* 2.0 l_0_2_19)))
 (let ((?x1767 (* ?x549 l_0_2_22)))
 (= (- (- (- (+ (+ ?x1767 ?x805) ?x807) ?x810) ?x813) ?x816) 0.0)))))))))))
(assert
 (let ((?x894 (* l_0_2_9 l_0_2_9)))
 (let ((?x892 (* l_0_2_8 l_0_2_8)))
 (let ((?x890 (* l_0_2_7 l_0_2_7)))
 (let ((?x888 (* l_0_2_25 l_0_2_25)))
 (let ((?x886 (* l_0_2_24 l_0_2_24)))
 (let ((?x884 (* l_0_2_23 l_0_2_23)))
 (let ((?x2145 (+ (+ (+ (* (- l_0_2_10) l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x884) ?x886)))
 (= (- (- (- (+ ?x2145 ?x888) ?x890) ?x892) ?x894) 0.0)))))))))
(assert
 (= (+ (* l_0_2_32 l_0_2_32) (* l_0_2_33 l_0_2_33)) 0.0))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1348 (* ?x1347 l_0_2_35)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1345 (* ?x1344 l_0_2_34)))
 (= (+ ?x1345 ?x1348) 0.0))))))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1476 (* ?x1347 l_0_2_38)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1474 (* ?x1344 l_0_2_37)))
 (= (+ ?x1474 ?x1476) 0.0))))))
(assert
 (let ((?x1347 (* 2.0 l_0_2_33)))
 (let ((?x1570 (* ?x1347 l_0_2_42)))
 (let ((?x1344 (* 2.0 l_0_2_32)))
 (let ((?x1568 (* ?x1344 l_0_2_41)))
 (= (+ ?x1568 ?x1570) 0.0))))))
(assert
 (let ((?x1780 (* 2.0 l_0_2_36)))
 (let ((?x1781 (* ?x1780 l_0_2_39)))
 (let ((?x1777 (* 2.0 l_0_2_35)))
 (let ((?x1778 (* ?x1777 l_0_2_38)))
 (let ((?x1774 (* 2.0 l_0_2_34)))
 (let ((?x1775 (* ?x1774 l_0_2_37)))
 (= (+ (+ ?x1775 ?x1778) ?x1781) 0.0))))))))
(assert
 (let ((?x1780 (* 2.0 l_0_2_36)))
 (let ((?x1834 (* ?x1780 l_0_2_43)))
 (let ((?x1777 (* 2.0 l_0_2_35)))
 (let ((?x1832 (* ?x1777 l_0_2_42)))
 (let ((?x1774 (* 2.0 l_0_2_34)))
 (let ((?x1830 (* ?x1774 l_0_2_41)))
 (= (+ (+ ?x1830 ?x1832) ?x1834) 0.0))))))))
(assert
 (let ((?x1925 (* l_0_2_40 l_0_2_40)))
 (let ((?x1921 (* l_0_2_39 l_0_2_39)))
 (let ((?x2189 (+ (+ (+ (* l_0_2_37 l_0_2_37) (* l_0_2_38 l_0_2_38)) ?x1921) ?x1925)))
 (= ?x2189 0.0)))))
(assert
 (let ((?x1958 (* (* 2.0 l_0_2_40) l_0_2_44)))
 (let ((?x1955 (* (* 2.0 l_0_2_39) l_0_2_43)))
 (let ((?x1952 (* (* 2.0 l_0_2_38) l_0_2_42)))
 (let ((?x1949 (* (* 2.0 l_0_2_37) l_0_2_41)))
 (= (+ (+ (+ ?x1949 ?x1952) ?x1955) ?x1958) 0.0))))))
(assert
 (let ((?x2047 (* l_0_2_45 l_0_2_45)))
 (let ((?x2043 (* l_0_2_44 l_0_2_44)))
 (let ((?x2039 (* l_0_2_43 l_0_2_43)))
 (let ((?x2201 (+ (+ (+ (* l_0_2_41 l_0_2_41) (* l_0_2_42 l_0_2_42)) ?x2039) ?x2043)))
 (= (+ ?x2201 ?x2047) 0.0))))))
(assert
 (= (* (* (- 2.0) l_0_2_46) l_0_2_49) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_16 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_40 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_46 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_51 0.0))
(assert
 (>= l_0_2_55 0.0))
(assert
 (>= l_0_2_60 0.0))
(assert
 (= (- (- (- _a_0_) (* l_0_3_76 l_0_3_76)) 1.0) 0.0))
(assert
 (let ((?x2257 (* l_0_3_81 l_0_3_81)))
 (let ((?x2255 (* l_0_3_80 l_0_3_80)))
 (let ((?x2253 (* l_0_3_79 l_0_3_79)))
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x2251 (* ?x2250 l_0_3_64)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x2248 (* ?x2247 l_0_3_49)))
 (let ((?x2252 (+ (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) ?x2248) ?x2251)))
 (= (- (- (- (- ?x2252 ?x2253) ?x2255) ?x2257) 1.0) 0.0))))))))))
(assert
 (let ((?x2287 (* l_0_3_61 l_0_3_61)))
 (let ((?x2291 (- (+ (- (- _a_1_) (* l_0_3_46 l_0_3_46)) ?x2287) (* (* 2.0 l_0_3_76) l_0_3_79))))
 (= (- ?x2291 2.0) 0.0))))
(assert
 (let ((?x2315 (+ (- (+ (- _a_2_) (* l_0_3_1 l_0_3_1)) (* l_0_3_16 l_0_3_16)) (* 1.0 (* l_0_3_31 l_0_3_31)))))
 (= (- ?x2315 (* (* 2.0 l_0_3_76) l_0_3_86)) 0.0)))
(assert
 (let ((?x2338 (- (+ (* (- l_0_3_1) l_0_3_1) (* l_0_3_16 l_0_3_16)) (* (* 2.0 l_0_3_76) l_0_3_82))))
 (= (+ ?x2338 1.0) 0.0)))
(assert
 (let ((?x2396 (* l_0_3_66 l_0_3_66)))
 (let ((?x2394 (* l_0_3_65 l_0_3_65)))
 (let ((?x2392 (* l_0_3_64 l_0_3_64)))
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x2390 (* ?x2389 l_0_3_65)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x2387 (* ?x2386 l_0_3_64)))
 (let ((?x2383 (* l_0_3_6 l_0_3_6)))
 (let ((?x2384 (* 2.0 ?x2383)))
 (let ((?x2381 (* l_0_3_51 l_0_3_51)))
 (let ((?x2379 (* l_0_3_50 l_0_3_50)))
 (let ((?x2376 (* l_0_3_5 l_0_3_5)))
 (let ((?x2377 (* 2.0 ?x2376)))
 (let ((?x2374 (* l_0_3_49 l_0_3_49)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x2372 (* ?x2371 l_0_3_50)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x2369 (* ?x2368 l_0_3_49)))
 (let ((?x2365 (* l_0_3_4 l_0_3_4)))
 (let ((?x2366 (* 2.0 ?x2365)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2354 (* ?x2353 l_0_3_17)))
 (let ((?x2349 (* 2.0 l_0_3_1)))
 (let ((?x2352 (* ?x2349 l_0_3_2)))
 (let ((?x2361 (- (- (- ?x2352 ?x2354) (* (* 2.0 l_0_3_19) l_0_3_19)) (* (* 2.0 l_0_3_20) l_0_3_20))))
 (let ((?x2373 (- (- (+ (- ?x2361 (* (* 2.0 l_0_3_21) l_0_3_21)) ?x2366) ?x2369) ?x2372)))
 (let ((?x2391 (+ (+ (+ (+ (+ (+ (+ ?x2373 ?x2374) ?x2377) ?x2379) ?x2381) ?x2384) ?x2387) ?x2390)))
 (= (- (- (- ?x2391 ?x2392) ?x2394) ?x2396) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2396 (* l_0_3_66 l_0_3_66)))
 (let ((?x2394 (* l_0_3_65 l_0_3_65)))
 (let ((?x2392 (* l_0_3_64 l_0_3_64)))
 (let ((?x2381 (* l_0_3_51 l_0_3_51)))
 (let ((?x2379 (* l_0_3_50 l_0_3_50)))
 (let ((?x2374 (* l_0_3_49 l_0_3_49)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2454 (* ?x2353 l_0_3_19)))
 (let ((?x2455 (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x2454)))
 (= (+ (+ (+ (- (- (- ?x2455 ?x2374) ?x2379) ?x2381) ?x2392) ?x2394) ?x2396) 0.0)))))))))))
(assert
 (let ((?x2507 (* 2.0 l_0_3_66)))
 (let ((?x2508 (* ?x2507 l_0_3_69)))
 (let ((?x2504 (* 2.0 l_0_3_65)))
 (let ((?x2505 (* ?x2504 l_0_3_68)))
 (let ((?x2501 (* 2.0 l_0_3_64)))
 (let ((?x2502 (* ?x2501 l_0_3_67)))
 (let ((?x2383 (* l_0_3_6 l_0_3_6)))
 (let ((?x2497 (* 2.0 l_0_3_51)))
 (let ((?x2498 (* ?x2497 l_0_3_54)))
 (let ((?x2494 (* 2.0 l_0_3_50)))
 (let ((?x2495 (* ?x2494 l_0_3_53)))
 (let ((?x2376 (* l_0_3_5 l_0_3_5)))
 (let ((?x2490 (* 2.0 l_0_3_49)))
 (let ((?x2491 (* ?x2490 l_0_3_52)))
 (let ((?x2365 (* l_0_3_4 l_0_3_4)))
 (let ((?x2419 (* l_0_3_21 l_0_3_21)))
 (let ((?x2413 (* l_0_3_20 l_0_3_20)))
 (let ((?x2407 (* l_0_3_19 l_0_3_19)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2484 (* ?x2353 l_0_3_22)))
 (let ((?x2349 (* 2.0 l_0_3_1)))
 (let ((?x2480 (* ?x2349 l_0_3_7)))
 (let ((?x2493 (- (- (- (+ (+ (+ (- ?x2480 ?x2484) ?x2407) ?x2413) ?x2419) ?x2365) ?x2491) ?x2376)))
 (= (+ (+ (+ (- (- (- ?x2493 ?x2495) ?x2498) ?x2383) ?x2502) ?x2505) ?x2508) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2507 (* 2.0 l_0_3_66)))
 (let ((?x2587 (* ?x2507 l_0_3_73)))
 (let ((?x2504 (* 2.0 l_0_3_65)))
 (let ((?x2585 (* ?x2504 l_0_3_72)))
 (let ((?x2501 (* 2.0 l_0_3_64)))
 (let ((?x2583 (* ?x2501 l_0_3_71)))
 (let ((?x2383 (* l_0_3_6 l_0_3_6)))
 (let ((?x2497 (* 2.0 l_0_3_51)))
 (let ((?x2580 (* ?x2497 l_0_3_58)))
 (let ((?x2494 (* 2.0 l_0_3_50)))
 (let ((?x2578 (* ?x2494 l_0_3_57)))
 (let ((?x2376 (* l_0_3_5 l_0_3_5)))
 (let ((?x2490 (* 2.0 l_0_3_49)))
 (let ((?x2575 (* ?x2490 l_0_3_56)))
 (let ((?x2365 (* l_0_3_4 l_0_3_4)))
 (let ((?x2419 (* l_0_3_21 l_0_3_21)))
 (let ((?x2413 (* l_0_3_20 l_0_3_20)))
 (let ((?x2407 (* l_0_3_19 l_0_3_19)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2550 (* ?x2353 l_0_3_26)))
 (let ((?x2552 (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x2550)))
 (let ((?x2567 (+ (- (- (- ?x2552 ?x2407) ?x2413) ?x2419) (* 1.0 (* l_0_3_34 l_0_3_34)))))
 (let ((?x2573 (+ (+ ?x2567 (* 1.0 (* l_0_3_35 l_0_3_35))) (* 1.0 (* l_0_3_36 l_0_3_36)))))
 (let ((?x2584 (+ (+ (- (- (+ (- (+ ?x2573 ?x2365) ?x2575) ?x2376) ?x2578) ?x2580) ?x2383) ?x2583)))
 (= (+ (+ ?x2584 ?x2585) ?x2587) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2638 (* l_0_3_3 l_0_3_3)))
 (let ((?x2636 (* l_0_3_2 l_0_3_2)))
 (let ((?x2639 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2636) ?x2638)))
 (= ?x2639 0.0)))))
(assert
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2660 (* ?x2659 l_0_3_5)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2657 (* ?x2656 l_0_3_4)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2654 (* ?x2653 l_0_3_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x2654) ?x2657) ?x2660) 0.0))))))))
(assert
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2683 (* ?x2659 l_0_3_8)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2681 (* ?x2656 l_0_3_7)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2674 (* ?x2653 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x2674) ?x2681) ?x2683) 0.0))))))))
(assert
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2709 (* ?x2653 l_0_3_27)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x2707 (* ?x2706 l_0_3_26)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2704 (* ?x2698 l_0_3_3)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2697 (* ?x2695 l_0_3_2)))
 (= (- (- (+ ?x2697 ?x2704) ?x2707) ?x2709) 0.0))))))))))
(assert
 (let ((?x2383 (* l_0_3_6 l_0_3_6)))
 (let ((?x2376 (* l_0_3_5 l_0_3_5)))
 (let ((?x2365 (* l_0_3_4 l_0_3_4)))
 (let ((?x2419 (* l_0_3_21 l_0_3_21)))
 (let ((?x2734 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2419) ?x2365)))
 (= (+ (+ ?x2734 ?x2376) ?x2383) 0.0)))))))
(assert
 (let ((?x2757 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2754 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2751 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2362 (* 2.0 l_0_3_21)))
 (let ((?x2748 (* ?x2362 l_0_3_24)))
 (let ((?x2359 (* 2.0 l_0_3_20)))
 (let ((?x2746 (* ?x2359 l_0_3_23)))
 (let ((?x2755 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x2746) ?x2748) ?x2751) ?x2754)))
 (= (+ ?x2755 ?x2757) 0.0))))))))))
(assert
 (let ((?x2362 (* 2.0 l_0_3_21)))
 (let ((?x2793 (* ?x2362 l_0_3_28)))
 (let ((?x2359 (* 2.0 l_0_3_20)))
 (let ((?x2791 (* ?x2359 l_0_3_27)))
 (let ((?x2356 (* 2.0 l_0_3_19)))
 (let ((?x2789 (* ?x2356 l_0_3_26)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2787 (* ?x2780 l_0_3_6)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2777 (* ?x2698 l_0_3_5)))
 (let ((?x2792 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x2777) ?x2787) ?x2789) ?x2791)))
 (let ((?x2794 (- ?x2792 ?x2793)))
 (= ?x2794 0.0))))))))))))))
(assert
 (let ((?x2835 (* l_0_3_9 l_0_3_9)))
 (let ((?x2833 (* l_0_3_8 l_0_3_8)))
 (let ((?x2831 (* l_0_3_7 l_0_3_7)))
 (let ((?x2829 (* l_0_3_25 l_0_3_25)))
 (let ((?x2827 (* l_0_3_24 l_0_3_24)))
 (let ((?x2825 (* l_0_3_23 l_0_3_23)))
 (let ((?x2828 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2825) ?x2827)))
 (= (+ (+ (+ (- ?x2828 ?x2829) ?x2831) ?x2833) ?x2835) 0.0)))))))))
(assert
 (let ((?x2868 (* 2.0 l_0_3_25)))
 (let ((?x2869 (* ?x2868 l_0_3_29)))
 (let ((?x2865 (* 2.0 l_0_3_24)))
 (let ((?x2866 (* ?x2865 l_0_3_28)))
 (let ((?x2862 (* 2.0 l_0_3_23)))
 (let ((?x2863 (* ?x2862 l_0_3_27)))
 (let ((?x2859 (* 2.0 l_0_3_22)))
 (let ((?x2860 (* ?x2859 l_0_3_26)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2857 (* ?x2780 l_0_3_9)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2855 (* ?x2698 l_0_3_8)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2853 (* ?x2695 l_0_3_7)))
 (let ((?x2854 (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2853)))
 (= (- (- (- (- (+ (+ ?x2854 ?x2855) ?x2857) ?x2860) ?x2863) ?x2866) ?x2869) 0.0)))))))))))))))))
(assert
 (let ((?x2571 (* l_0_3_36 l_0_3_36)))
 (let ((?x2568 (* l_0_3_35 l_0_3_35)))
 (let ((?x2565 (* l_0_3_34 l_0_3_34)))
 (let ((?x2923 (* l_0_3_30 l_0_3_30)))
 (let ((?x2921 (* l_0_3_29 l_0_3_29)))
 (let ((?x2919 (* l_0_3_28 l_0_3_28)))
 (let ((?x2917 (* l_0_3_27 l_0_3_27)))
 (let ((?x2915 (* l_0_3_26 l_0_3_26)))
 (let ((?x2913 (* l_0_3_15 l_0_3_15)))
 (let ((?x2911 (* l_0_3_14 l_0_3_14)))
 (let ((?x2909 (* l_0_3_13 l_0_3_13)))
 (let ((?x2912 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2909) ?x2911)))
 (let ((?x2924 (- (- (- (- (- (+ ?x2912 ?x2913) ?x2915) ?x2917) ?x2919) ?x2921) ?x2923)))
 (= (- (- (- ?x2924 ?x2565) ?x2568) ?x2571) 0.0)))))))))))))))
(assert
 (let ((?x2287 (* l_0_3_61 l_0_3_61)))
 (let ((?x2285 (* l_0_3_46 l_0_3_46)))
 (let ((?x2244 (* l_0_3_1 l_0_3_1)))
 (let ((?x2961 (* 2.0 ?x2244)))
 (let ((?x2967 (- (- (+ (- ?x2961 (* (* 2.0 l_0_3_16) l_0_3_16)) ?x2285) ?x2287) (* (* 2.0 l_0_3_76) l_0_3_77))))
 (= ?x2967 0.0)))))))
(assert
 (let ((?x2995 (* l_0_3_78 l_0_3_78)))
 (let ((?x2993 (* l_0_3_77 l_0_3_77)))
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x2991 (* ?x2250 l_0_3_62)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x2989 (* ?x2247 l_0_3_47)))
 (let ((?x2988 (- (* (* 4.0 l_0_3_1) l_0_3_2) (* (* 4.0 l_0_3_16) l_0_3_17))))
 (= (- (- (- (+ ?x2988 ?x2989) ?x2991) ?x2993) ?x2995) 0.0)))))))))
(assert
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x2251 (* ?x2250 l_0_3_64)))
 (let ((?x2991 (* ?x2250 l_0_3_62)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x2248 (* ?x2247 l_0_3_49)))
 (let ((?x2989 (* ?x2247 l_0_3_47)))
 (let ((?x3022 (- (* (* 4.0 l_0_3_1) l_0_3_4) (* (* 4.0 l_0_3_16) l_0_3_19))))
 (let ((?x3029 (- (- (+ (+ (- ?x3022 ?x2989) ?x2248) ?x2991) ?x2251) (* (* 2.0 l_0_3_77) l_0_3_79))))
 (= (- ?x3029 (* (* 2.0 l_0_3_78) l_0_3_80)) 0.0))))))))))
(assert
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x3071 (* ?x2250 l_0_3_67)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x3069 (* ?x2247 l_0_3_52)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2354 (* ?x2353 l_0_3_17)))
 (let ((?x3065 (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) (* (* 4.0 l_0_3_1) l_0_3_7))))
 (let ((?x3072 (- (+ (- (+ ?x3065 ?x2354) (* (* 4.0 l_0_3_16) l_0_3_22)) ?x3069) ?x3071)))
 (let ((?x3076 (- (- ?x3072 (* (* 2.0 l_0_3_77) l_0_3_82)) (* (* 2.0 l_0_3_78) l_0_3_83))))
 (= ?x3076 0.0)))))))))))
(assert
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x3121 (* ?x2250 l_0_3_71)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x3119 (* ?x2247 l_0_3_56)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3117 (* ?x3116 l_0_3_32)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2354 (* ?x2353 l_0_3_17)))
 (let ((?x2349 (* 2.0 l_0_3_1)))
 (let ((?x2352 (* ?x2349 l_0_3_2)))
 (let ((?x3115 (- (- (+ (* (* 4.0 l_0_3_1) l_0_3_11) ?x2352) ?x2354) (* (* 4.0 l_0_3_16) l_0_3_26))))
 (let ((?x3124 (- (- (+ (+ ?x3115 ?x3117) ?x3119) ?x3121) (* (* 2.0 l_0_3_77) l_0_3_86))))
 (= (- ?x3124 (* (* 2.0 l_0_3_78) l_0_3_87)) 0.0))))))))))))))
(assert
 (let ((?x3174 (* l_0_3_63 l_0_3_63)))
 (let ((?x3172 (* l_0_3_62 l_0_3_62)))
 (let ((?x3170 (* l_0_3_48 l_0_3_48)))
 (let ((?x3168 (* l_0_3_47 l_0_3_47)))
 (let ((?x3163 (- (* (* (- 2.0) l_0_3_17) l_0_3_17) (* (* 2.0 l_0_3_18) l_0_3_18))))
 (let ((?x3167 (+ (+ ?x3163 (* 2.0 (* l_0_3_2 l_0_3_2))) (* 2.0 (* l_0_3_3 l_0_3_3)))))
 (= (- (- (+ (+ ?x3167 ?x3168) ?x3170) ?x3172) ?x3174) 0.0))))))))
(assert
 (let ((?x3174 (* l_0_3_63 l_0_3_63)))
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x2390 (* ?x2389 l_0_3_65)))
 (let ((?x3172 (* l_0_3_62 l_0_3_62)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x2387 (* ?x2386 l_0_3_64)))
 (let ((?x3170 (* l_0_3_48 l_0_3_48)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x2372 (* ?x2371 l_0_3_50)))
 (let ((?x3168 (* l_0_3_47 l_0_3_47)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x2369 (* ?x2368 l_0_3_49)))
 (let ((?x3201 (- (* (* (- 4.0) l_0_3_17) l_0_3_19) (* (* 4.0 l_0_3_18) l_0_3_20))))
 (let ((?x3207 (+ (+ ?x3201 (* (* 4.0 l_0_3_2) l_0_3_4)) (* (* 4.0 l_0_3_3) l_0_3_5))))
 (let ((?x3214 (- (+ (- (- (+ (- (+ ?x3207 ?x2369) ?x3168) ?x2372) ?x3170) ?x2387) ?x3172) ?x2390)))
 (= (+ ?x3214 ?x3174) 0.0)))))))))))))))))
(assert
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x3259 (* ?x2389 l_0_3_68)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x3257 (* ?x2386 l_0_3_67)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x3255 (* ?x2371 l_0_3_53)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x3253 (* ?x2368 l_0_3_52)))
 (let ((?x2638 (* l_0_3_3 l_0_3_3)))
 (let ((?x2636 (* l_0_3_2 l_0_3_2)))
 (let ((?x2634 (* l_0_3_18 l_0_3_18)))
 (let ((?x3245 (- (+ (* (* (- 4.0) l_0_3_17) l_0_3_22) (* l_0_3_17 l_0_3_17)) (* (* 4.0 l_0_3_18) l_0_3_23))))
 (let ((?x3251 (+ (- (+ (+ ?x3245 ?x2634) (* (* 4.0 l_0_3_2) l_0_3_7)) ?x2636) (* (* 4.0 l_0_3_3) l_0_3_8))))
 (= (- (- (+ (+ (- ?x3251 ?x2638) ?x3253) ?x3255) ?x3257) ?x3259) 0.0)))))))))))))))
(assert
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x3321 (* ?x2389 l_0_3_72)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x3319 (* ?x2386 l_0_3_71)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x3317 (* ?x2371 l_0_3_57)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x3315 (* ?x2368 l_0_3_56)))
 (let ((?x2638 (* l_0_3_3 l_0_3_3)))
 (let ((?x2636 (* l_0_3_2 l_0_3_2)))
 (let ((?x2634 (* l_0_3_18 l_0_3_18)))
 (let ((?x2642 (* l_0_3_17 l_0_3_17)))
 (let ((?x3299 (+ (* (* 4.0 l_0_3_11) l_0_3_2) (* (* 4.0 l_0_3_12) l_0_3_3))))
 (let ((?x3305 (- (- (- ?x3299 (* (* 4.0 l_0_3_17) l_0_3_26)) ?x2642) (* (* 4.0 l_0_3_18) l_0_3_27))))
 (let ((?x3311 (+ (+ (+ (- ?x3305 ?x2634) ?x2636) ?x2638) (* 1.0 (* l_0_3_32 l_0_3_32)))))
 (let ((?x3320 (- (+ (+ (+ ?x3311 (* 1.0 (* l_0_3_33 l_0_3_33))) ?x3315) ?x3317) ?x3319)))
 (= (- ?x3320 ?x3321) 0.0))))))))))))))))))
(assert
 (let ((?x2507 (* 2.0 l_0_3_66)))
 (let ((?x2508 (* ?x2507 l_0_3_69)))
 (let ((?x2504 (* 2.0 l_0_3_65)))
 (let ((?x2505 (* ?x2504 l_0_3_68)))
 (let ((?x2501 (* 2.0 l_0_3_64)))
 (let ((?x2502 (* ?x2501 l_0_3_67)))
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x3259 (* ?x2389 l_0_3_68)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x3257 (* ?x2386 l_0_3_67)))
 (let ((?x2497 (* 2.0 l_0_3_51)))
 (let ((?x2498 (* ?x2497 l_0_3_54)))
 (let ((?x2494 (* 2.0 l_0_3_50)))
 (let ((?x2495 (* ?x2494 l_0_3_53)))
 (let ((?x2490 (* 2.0 l_0_3_49)))
 (let ((?x2491 (* ?x2490 l_0_3_52)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x3255 (* ?x2371 l_0_3_53)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x3253 (* ?x2368 l_0_3_52)))
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2660 (* ?x2659 l_0_3_5)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2657 (* ?x2656 l_0_3_4)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2654 (* ?x2653 l_0_3_20)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x3366 (* ?x2706 l_0_3_19)))
 (let ((?x3374 (- (- (- (+ ?x3366 ?x2654) (* (* 4.0 l_0_3_19) l_0_3_22)) ?x2657) (* (* 4.0 l_0_3_20) l_0_3_23))))
 (let ((?x3381 (+ (- (- ?x3374 (* (* 4.0 l_0_3_21) l_0_3_24)) ?x2660) (* (* 4.0 l_0_3_4) l_0_3_7))))
 (let ((?x3387 (+ (+ (- (- ?x3381 ?x3253) ?x3255) ?x2491) (* (* 4.0 l_0_3_5) l_0_3_8))))
 (let ((?x3393 (+ (+ (+ (+ ?x3387 ?x2495) ?x2498) (* (* 4.0 l_0_3_6) l_0_3_9)) ?x3257)))
 (= (- (- (- (+ ?x3393 ?x3259) ?x2502) ?x2505) ?x2508) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2507 (* 2.0 l_0_3_66)))
 (let ((?x2587 (* ?x2507 l_0_3_73)))
 (let ((?x2504 (* 2.0 l_0_3_65)))
 (let ((?x2585 (* ?x2504 l_0_3_72)))
 (let ((?x2501 (* 2.0 l_0_3_64)))
 (let ((?x2583 (* ?x2501 l_0_3_71)))
 (let ((?x2389 (* 2.0 l_0_3_63)))
 (let ((?x3321 (* ?x2389 l_0_3_72)))
 (let ((?x2386 (* 2.0 l_0_3_62)))
 (let ((?x3319 (* ?x2386 l_0_3_71)))
 (let ((?x2497 (* 2.0 l_0_3_51)))
 (let ((?x2580 (* ?x2497 l_0_3_58)))
 (let ((?x2494 (* 2.0 l_0_3_50)))
 (let ((?x2578 (* ?x2494 l_0_3_57)))
 (let ((?x2490 (* 2.0 l_0_3_49)))
 (let ((?x2575 (* ?x2490 l_0_3_56)))
 (let ((?x2371 (* 2.0 l_0_3_48)))
 (let ((?x3317 (* ?x2371 l_0_3_57)))
 (let ((?x2368 (* 2.0 l_0_3_47)))
 (let ((?x3315 (* ?x2368 l_0_3_56)))
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3469 (* ?x3468 l_0_3_35)))
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2660 (* ?x2659 l_0_3_5)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2657 (* ?x2656 l_0_3_4)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2654 (* ?x2653 l_0_3_20)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x3366 (* ?x2706 l_0_3_19)))
 (let ((?x3451 (+ (* (* 4.0 l_0_3_11) l_0_3_4) (* (* 4.0 l_0_3_12) l_0_3_5))))
 (let ((?x3458 (- (- (- (+ ?x3451 (* (* 4.0 l_0_3_13) l_0_3_6)) ?x3366) ?x2654) (* (* 4.0 l_0_3_19) l_0_3_26))))
 (let ((?x3463 (- (- (+ ?x3458 ?x2657) (* (* 4.0 l_0_3_20) l_0_3_27)) (* (* 4.0 l_0_3_21) l_0_3_28))))
 (let ((?x3471 (- (+ (+ (+ ?x3463 ?x2660) (* (* 2.0 l_0_3_32) l_0_3_34)) ?x3469) ?x3315)))
 (let ((?x3478 (- (+ (+ (+ (+ (+ (- ?x3471 ?x3317) ?x2575) ?x2578) ?x2580) ?x3319) ?x3321) ?x2583)))
 (= (- (- ?x3478 ?x2585) ?x2587) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2835 (* l_0_3_9 l_0_3_9)))
 (let ((?x3566 (* 2.0 ?x2835)))
 (let ((?x2833 (* l_0_3_8 l_0_3_8)))
 (let ((?x3564 (* 2.0 ?x2833)))
 (let ((?x3562 (* l_0_3_70 l_0_3_70)))
 (let ((?x2831 (* l_0_3_7 l_0_3_7)))
 (let ((?x3560 (* 2.0 ?x2831)))
 (let ((?x3558 (* l_0_3_69 l_0_3_69)))
 (let ((?x3556 (* l_0_3_68 l_0_3_68)))
 (let ((?x3554 (* l_0_3_67 l_0_3_67)))
 (let ((?x3552 (* l_0_3_55 l_0_3_55)))
 (let ((?x3550 (* l_0_3_54 l_0_3_54)))
 (let ((?x3548 (* l_0_3_53 l_0_3_53)))
 (let ((?x3546 (* l_0_3_52 l_0_3_52)))
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2683 (* ?x2659 l_0_3_8)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2681 (* ?x2656 l_0_3_7)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2674 (* ?x2653 l_0_3_23)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x3533 (* ?x2706 l_0_3_22)))
 (let ((?x2822 (* l_0_3_10 l_0_3_10)))
 (let ((?x3532 (* 2.0 ?x2822)))
 (let ((?x3538 (- (- (+ (+ ?x3532 ?x3533) ?x2674) ?x2681) (* (* 2.0 l_0_3_22) l_0_3_22))))
 (let ((?x3542 (- (- ?x3538 (* (* 2.0 l_0_3_23) l_0_3_23)) (* (* 2.0 l_0_3_24) l_0_3_24))))
 (let ((?x3549 (+ (+ (- (- ?x3542 (* (* 2.0 l_0_3_25) l_0_3_25)) ?x2683) ?x3546) ?x3548)))
 (let ((?x3563 (- (+ (- (- (- (+ (+ ?x3549 ?x3550) ?x3552) ?x3554) ?x3556) ?x3558) ?x3560) ?x3562)))
 (= (+ (+ ?x3563 ?x3564) ?x3566) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x3668 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x3665 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x3662 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x3659 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x3656 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3653 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3650 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x3647 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3644 (* ?x3468 l_0_3_38)))
 (let ((?x2659 (* 2.0 l_0_3_3)))
 (let ((?x2683 (* ?x2659 l_0_3_8)))
 (let ((?x2656 (* 2.0 l_0_3_2)))
 (let ((?x2681 (* ?x2656 l_0_3_7)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2709 (* ?x2653 l_0_3_27)))
 (let ((?x2674 (* ?x2653 l_0_3_23)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x2707 (* ?x2706 l_0_3_26)))
 (let ((?x3533 (* ?x2706 l_0_3_22)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2704 (* ?x2698 l_0_3_3)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2697 (* ?x2695 l_0_3_2)))
 (let ((?x3618 (+ (- (* (* 4.0 l_0_3_10) l_0_3_14) ?x2697) (* (* 4.0 l_0_3_11) l_0_3_7))))
 (let ((?x3623 (+ (+ (- ?x3618 ?x2704) (* (* 4.0 l_0_3_12) l_0_3_8)) (* (* 4.0 l_0_3_13) l_0_3_9))))
 (let ((?x3631 (- (+ (+ (- (+ (- ?x3623 ?x3533) ?x2707) ?x2674) ?x2709) ?x2681) (* (* 4.0 l_0_3_22) l_0_3_26))))
 (let ((?x3637 (- (- ?x3631 (* (* 4.0 l_0_3_23) l_0_3_27)) (* (* 4.0 l_0_3_24) l_0_3_28))))
 (let ((?x3643 (+ (+ (- ?x3637 (* (* 4.0 l_0_3_25) l_0_3_29)) ?x2683) (* (* 2.0 l_0_3_32) l_0_3_37))))
 (let ((?x3663 (- (- (+ (+ (+ (+ (+ ?x3643 ?x3644) ?x3647) ?x3650) ?x3653) ?x3656) ?x3659) ?x3662)))
 (= (- (- ?x3663 ?x3665) ?x3668) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3812 (* l_0_3_75 l_0_3_75)))
 (let ((?x3810 (* l_0_3_74 l_0_3_74)))
 (let ((?x3808 (* l_0_3_73 l_0_3_73)))
 (let ((?x3806 (* l_0_3_72 l_0_3_72)))
 (let ((?x3804 (* l_0_3_71 l_0_3_71)))
 (let ((?x3802 (* l_0_3_60 l_0_3_60)))
 (let ((?x3800 (* l_0_3_59 l_0_3_59)))
 (let ((?x3798 (* l_0_3_58 l_0_3_58)))
 (let ((?x3796 (* l_0_3_57 l_0_3_57)))
 (let ((?x3794 (* l_0_3_56 l_0_3_56)))
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3792 (* ?x3468 l_0_3_42)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3117 (* ?x3116 l_0_3_32)))
 (let ((?x2653 (* 2.0 l_0_3_18)))
 (let ((?x2709 (* ?x2653 l_0_3_27)))
 (let ((?x2706 (* 2.0 l_0_3_17)))
 (let ((?x2707 (* ?x2706 l_0_3_26)))
 (let ((?x2913 (* l_0_3_15 l_0_3_15)))
 (let ((?x3770 (* 2.0 ?x2913)))
 (let ((?x2911 (* l_0_3_14 l_0_3_14)))
 (let ((?x3768 (* 2.0 ?x2911)))
 (let ((?x2909 (* l_0_3_13 l_0_3_13)))
 (let ((?x3766 (* 2.0 ?x2909)))
 (let ((?x2907 (* l_0_3_12 l_0_3_12)))
 (let ((?x3764 (* 2.0 ?x2907)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2704 (* ?x2698 l_0_3_3)))
 (let ((?x2906 (* l_0_3_11 l_0_3_11)))
 (let ((?x3761 (* 2.0 ?x2906)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2697 (* ?x2695 l_0_3_2)))
 (let ((?x3772 (- (+ (+ (+ (+ (+ (+ ?x2697 ?x3761) ?x2704) ?x3764) ?x3766) ?x3768) ?x3770) ?x2707)))
 (let ((?x3779 (- (- (- ?x3772 ?x2709) (* (* 2.0 l_0_3_26) l_0_3_26)) (* (* 2.0 l_0_3_27) l_0_3_27))))
 (let ((?x3785 (- (- ?x3779 (* (* 2.0 l_0_3_28) l_0_3_28)) (* (* 2.0 l_0_3_29) l_0_3_29))))
 (let ((?x3791 (+ (- (- ?x3785 (* (* 2.0 l_0_3_30) l_0_3_30)) ?x3117) (* (* 2.0 l_0_3_32) l_0_3_41))))
 (let ((?x3805 (- (+ (+ (+ (+ (+ (+ ?x3791 ?x3792) ?x3794) ?x3796) ?x3798) ?x3800) ?x3802) ?x3804)))
 (= (- (- (- (- ?x3805 ?x3806) ?x3808) ?x3810) ?x3812) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x3121 (* ?x2250 l_0_3_71)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x3119 (* ?x2247 l_0_3_56)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3870 (* ?x3116 l_0_3_34)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2454 (* ?x2353 l_0_3_19)))
 (let ((?x2455 (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x2454)))
 (let ((?x3876 (- (+ (- (+ ?x2455 ?x3870) ?x3119) ?x3121) (* (* 2.0 l_0_3_79) l_0_3_86))))
 (let ((?x3882 (- (- ?x3876 (* (* 2.0 l_0_3_80) l_0_3_87)) (* (* 2.0 l_0_3_81) l_0_3_88))))
 (= ?x3882 0.0)))))))))))))
(assert
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3915 (* ?x3116 l_0_3_37)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2550 (* ?x2353 l_0_3_26)))
 (let ((?x2484 (* ?x2353 l_0_3_22)))
 (let ((?x2349 (* 2.0 l_0_3_1)))
 (let ((?x2480 (* ?x2349 l_0_3_7)))
 (let ((?x3916 (+ (+ (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x2480) ?x2484) ?x2550) ?x3915)))
 (let ((?x3922 (- (- ?x3916 (* (* 2.0 l_0_3_82) l_0_3_86)) (* (* 2.0 l_0_3_83) l_0_3_87))))
 (let ((?x3928 (- (- ?x3922 (* (* 2.0 l_0_3_84) l_0_3_88)) (* (* 2.0 l_0_3_85) l_0_3_89))))
 (= ?x3928 0.0))))))))))))
(assert
 (let ((?x3973 (* l_0_3_90 l_0_3_90)))
 (let ((?x3971 (* l_0_3_89 l_0_3_89)))
 (let ((?x3969 (* l_0_3_88 l_0_3_88)))
 (let ((?x3967 (* l_0_3_87 l_0_3_87)))
 (let ((?x3965 (* l_0_3_86 l_0_3_86)))
 (let ((?x2313 (* l_0_3_31 l_0_3_31)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3962 (* ?x3116 l_0_3_41)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2550 (* ?x2353 l_0_3_26)))
 (let ((?x2552 (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x2550)))
 (let ((?x3974 (- (- (- (- (- (- (+ ?x2552 ?x3962) ?x2313) ?x3965) ?x3967) ?x3969) ?x3971) ?x3973)))
 (= ?x3974 0.0))))))))))))))
(assert
 (let ((?x3668 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x3665 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x3662 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x3659 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x2757 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3656 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3653 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3650 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x3647 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2754 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2751 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4008 (* 2.0 l_0_3_36)))
 (let ((?x4009 (* ?x4008 l_0_3_39)))
 (let ((?x4005 (* 2.0 l_0_3_35)))
 (let ((?x4006 (* ?x4005 l_0_3_38)))
 (let ((?x2362 (* 2.0 l_0_3_21)))
 (let ((?x2793 (* ?x2362 l_0_3_28)))
 (let ((?x2748 (* ?x2362 l_0_3_24)))
 (let ((?x2359 (* 2.0 l_0_3_20)))
 (let ((?x2791 (* ?x2359 l_0_3_27)))
 (let ((?x2746 (* ?x2359 l_0_3_23)))
 (let ((?x2356 (* 2.0 l_0_3_19)))
 (let ((?x2789 (* ?x2356 l_0_3_26)))
 (let ((?x3995 (* ?x2356 l_0_3_22)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2787 (* ?x2780 l_0_3_6)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2777 (* ?x2698 l_0_3_5)))
 (let ((?x3997 (+ (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x2777) ?x2787) ?x3995) ?x2789)))
 (let ((?x4004 (+ (+ (- (+ (- ?x3997 ?x2746) ?x2791) ?x2748) ?x2793) (* (* 2.0 l_0_3_34) l_0_3_37))))
 (let ((?x4015 (- (- (- (+ (+ (+ (+ ?x4004 ?x4006) ?x4009) ?x2751) ?x2754) ?x3647) ?x3650) ?x3653)))
 (= (+ (+ (+ (+ (+ (- ?x4015 ?x3656) ?x2757) ?x3659) ?x3662) ?x3665) ?x3668) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3812 (* l_0_3_75 l_0_3_75)))
 (let ((?x3810 (* l_0_3_74 l_0_3_74)))
 (let ((?x3808 (* l_0_3_73 l_0_3_73)))
 (let ((?x3806 (* l_0_3_72 l_0_3_72)))
 (let ((?x3804 (* l_0_3_71 l_0_3_71)))
 (let ((?x3802 (* l_0_3_60 l_0_3_60)))
 (let ((?x3800 (* l_0_3_59 l_0_3_59)))
 (let ((?x3798 (* l_0_3_58 l_0_3_58)))
 (let ((?x3796 (* l_0_3_57 l_0_3_57)))
 (let ((?x3794 (* l_0_3_56 l_0_3_56)))
 (let ((?x4008 (* 2.0 l_0_3_36)))
 (let ((?x727 (* ?x4008 l_0_3_43)))
 (let ((?x4005 (* 2.0 l_0_3_35)))
 (let ((?x752 (* ?x4005 l_0_3_42)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3870 (* ?x3116 l_0_3_34)))
 (let ((?x2362 (* 2.0 l_0_3_21)))
 (let ((?x2793 (* ?x2362 l_0_3_28)))
 (let ((?x2359 (* 2.0 l_0_3_20)))
 (let ((?x2791 (* ?x2359 l_0_3_27)))
 (let ((?x2356 (* 2.0 l_0_3_19)))
 (let ((?x2789 (* ?x2356 l_0_3_26)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2787 (* ?x2780 l_0_3_6)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2777 (* ?x2698 l_0_3_5)))
 (let ((?x2792 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x2777) ?x2787) ?x2789) ?x2791)))
 (let ((?x2794 (- ?x2792 ?x2793)))
 (let ((?x704 (+ (+ (+ (- ?x2794 ?x3870) (* (* 2.0 l_0_3_34) l_0_3_41)) ?x752) ?x727)))
 (let ((?x671 (+ (+ (- (- (- (- (- ?x704 ?x3794) ?x3796) ?x3798) ?x3800) ?x3802) ?x3804) ?x3806)))
 (= (+ (+ (+ ?x671 ?x3808) ?x3810) ?x3812) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x2835 (* l_0_3_9 l_0_3_9)))
 (let ((?x2833 (* l_0_3_8 l_0_3_8)))
 (let ((?x2831 (* l_0_3_7 l_0_3_7)))
 (let ((?x2829 (* l_0_3_25 l_0_3_25)))
 (let ((?x2868 (* 2.0 l_0_3_25)))
 (let ((?x2869 (* ?x2868 l_0_3_29)))
 (let ((?x2827 (* l_0_3_24 l_0_3_24)))
 (let ((?x2865 (* 2.0 l_0_3_24)))
 (let ((?x2866 (* ?x2865 l_0_3_28)))
 (let ((?x2825 (* l_0_3_23 l_0_3_23)))
 (let ((?x2862 (* 2.0 l_0_3_23)))
 (let ((?x2863 (* ?x2862 l_0_3_27)))
 (let ((?x2823 (* l_0_3_22 l_0_3_22)))
 (let ((?x2859 (* 2.0 l_0_3_22)))
 (let ((?x2860 (* ?x2859 l_0_3_26)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2857 (* ?x2780 l_0_3_9)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2855 (* ?x2698 l_0_3_8)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2853 (* ?x2695 l_0_3_7)))
 (let ((?x943 (- (+ (* (* (- 2.0) l_0_3_10) l_0_3_14) (* l_0_3_10 l_0_3_10)) ?x2853)))
 (let ((?x4048 (+ (- (+ (- (+ (- (- ?x943 ?x2855) ?x2857) ?x2860) ?x2823) ?x2863) ?x2825) ?x2866)))
 (let ((?x4054 (+ (- (+ (- ?x4048 ?x2827) ?x2869) ?x2829) (* 1.0 (* l_0_3_37 l_0_3_37)))))
 (let ((?x4060 (+ (+ ?x4054 (* 1.0 (* l_0_3_38 l_0_3_38))) (* 1.0 (* l_0_3_39 l_0_3_39)))))
 (let ((?x4066 (+ (+ (+ (+ ?x4060 (* 1.0 (* l_0_3_40 l_0_3_40))) ?x2831) ?x2833) ?x2835)))
 (= ?x4066 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4111 (* (* 2.0 l_0_3_40) l_0_3_44)))
 (let ((?x4108 (* (* 2.0 l_0_3_39) l_0_3_43)))
 (let ((?x4105 (* (* 2.0 l_0_3_38) l_0_3_42)))
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3915 (* ?x3116 l_0_3_37)))
 (let ((?x2923 (* l_0_3_30 l_0_3_30)))
 (let ((?x2921 (* l_0_3_29 l_0_3_29)))
 (let ((?x2919 (* l_0_3_28 l_0_3_28)))
 (let ((?x2917 (* l_0_3_27 l_0_3_27)))
 (let ((?x2915 (* l_0_3_26 l_0_3_26)))
 (let ((?x2868 (* 2.0 l_0_3_25)))
 (let ((?x2869 (* ?x2868 l_0_3_29)))
 (let ((?x2865 (* 2.0 l_0_3_24)))
 (let ((?x2866 (* ?x2865 l_0_3_28)))
 (let ((?x2862 (* 2.0 l_0_3_23)))
 (let ((?x2863 (* ?x2862 l_0_3_27)))
 (let ((?x2859 (* 2.0 l_0_3_22)))
 (let ((?x2860 (* ?x2859 l_0_3_26)))
 (let ((?x2913 (* l_0_3_15 l_0_3_15)))
 (let ((?x2911 (* l_0_3_14 l_0_3_14)))
 (let ((?x2909 (* l_0_3_13 l_0_3_13)))
 (let ((?x2780 (* 2.0 l_0_3_13)))
 (let ((?x2857 (* ?x2780 l_0_3_9)))
 (let ((?x2907 (* l_0_3_12 l_0_3_12)))
 (let ((?x2698 (* 2.0 l_0_3_12)))
 (let ((?x2855 (* ?x2698 l_0_3_8)))
 (let ((?x2906 (* l_0_3_11 l_0_3_11)))
 (let ((?x2695 (* 2.0 l_0_3_11)))
 (let ((?x2853 (* ?x2695 l_0_3_7)))
 (let ((?x2854 (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2853)))
 (let ((?x4090 (- (- (- (+ (- (+ (- ?x2854 ?x2906) ?x2855) ?x2907) ?x2857) ?x2909) ?x2911) ?x2913)))
 (let ((?x4097 (+ (+ (+ (- (- (- (- ?x4090 ?x2860) ?x2863) ?x2866) ?x2869) ?x2915) ?x2917) ?x2919)))
 (let ((?x4103 (+ (- (+ (+ ?x4097 ?x2921) ?x2923) ?x3915) (* (* 2.0 l_0_3_37) l_0_3_41))))
 (= (+ (+ (+ ?x4103 ?x4105) ?x4108) ?x4111) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3116 (* 2.0 l_0_3_31)))
 (let ((?x3962 (* ?x3116 l_0_3_41)))
 (let ((?x2923 (* l_0_3_30 l_0_3_30)))
 (let ((?x2921 (* l_0_3_29 l_0_3_29)))
 (let ((?x2919 (* l_0_3_28 l_0_3_28)))
 (let ((?x2917 (* l_0_3_27 l_0_3_27)))
 (let ((?x2915 (* l_0_3_26 l_0_3_26)))
 (let ((?x2913 (* l_0_3_15 l_0_3_15)))
 (let ((?x2911 (* l_0_3_14 l_0_3_14)))
 (let ((?x2909 (* l_0_3_13 l_0_3_13)))
 (let ((?x2912 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2909) ?x2911)))
 (let ((?x2924 (- (- (- (- (- (+ ?x2912 ?x2913) ?x2915) ?x2917) ?x2919) ?x2921) ?x2923)))
 (let ((?x4149 (+ (+ (- ?x2924 ?x3962) (* 1.0 (* l_0_3_41 l_0_3_41))) (* 1.0 (* l_0_3_42 l_0_3_42)))))
 (let ((?x4155 (+ (+ ?x4149 (* 1.0 (* l_0_3_43 l_0_3_43))) (* 1.0 (* l_0_3_44 l_0_3_44)))))
 (= (+ ?x4155 (* 1.0 (* l_0_3_45 l_0_3_45))) 0.0))))))))))))))))
(assert
 (let ((?x2250 (* 2.0 l_0_3_61)))
 (let ((?x3071 (* ?x2250 l_0_3_67)))
 (let ((?x2247 (* 2.0 l_0_3_46)))
 (let ((?x3069 (* ?x2247 l_0_3_52)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2454 (* ?x2353 l_0_3_19)))
 (let ((?x4170 (- (+ (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x2454) ?x3069) ?x3071) (* (* 2.0 l_0_3_79) l_0_3_82))))
 (let ((?x4174 (- (- ?x4170 (* (* 2.0 l_0_3_80) l_0_3_83)) (* (* 2.0 l_0_3_81) l_0_3_84))))
 (= ?x4174 0.0))))))))))
(assert
 (let ((?x4186 (* l_0_3_85 l_0_3_85)))
 (let ((?x4184 (* l_0_3_84 l_0_3_84)))
 (let ((?x1107 (* l_0_3_83 l_0_3_83)))
 (let ((?x1110 (* l_0_3_82 l_0_3_82)))
 (let ((?x2353 (* 2.0 l_0_3_16)))
 (let ((?x2484 (* ?x2353 l_0_3_22)))
 (let ((?x4185 (- (- (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x2484) ?x1110) ?x1107) ?x4184)))
 (= (- ?x4185 ?x4186) 0.0)))))))))
(assert
 (let ((?x3562 (* l_0_3_70 l_0_3_70)))
 (let ((?x3558 (* l_0_3_69 l_0_3_69)))
 (let ((?x3556 (* l_0_3_68 l_0_3_68)))
 (let ((?x3554 (* l_0_3_67 l_0_3_67)))
 (let ((?x2757 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3552 (* l_0_3_55 l_0_3_55)))
 (let ((?x3550 (* l_0_3_54 l_0_3_54)))
 (let ((?x3548 (* l_0_3_53 l_0_3_53)))
 (let ((?x3546 (* l_0_3_52 l_0_3_52)))
 (let ((?x2754 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2751 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2362 (* 2.0 l_0_3_21)))
 (let ((?x2748 (* ?x2362 l_0_3_24)))
 (let ((?x2359 (* 2.0 l_0_3_20)))
 (let ((?x2746 (* ?x2359 l_0_3_23)))
 (let ((?x2356 (* 2.0 l_0_3_19)))
 (let ((?x3995 (* ?x2356 l_0_3_22)))
 (let ((?x4203 (- (- (- (- (- (+ (+ ?x3995 ?x2746) ?x2748) ?x2751) ?x2754) ?x3546) ?x3548) ?x3550)))
 (= (+ (+ (+ (+ (- (- ?x4203 ?x3552) ?x2757) ?x3554) ?x3556) ?x3558) ?x3562) 0.0))))))))))))))))))))
(assert
 (let ((?x2835 (* l_0_3_9 l_0_3_9)))
 (let ((?x2833 (* l_0_3_8 l_0_3_8)))
 (let ((?x2831 (* l_0_3_7 l_0_3_7)))
 (let ((?x2829 (* l_0_3_25 l_0_3_25)))
 (let ((?x2827 (* l_0_3_24 l_0_3_24)))
 (let ((?x2825 (* l_0_3_23 l_0_3_23)))
 (let ((?x1213 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2825) ?x2827)))
 (= (- (- (- (+ ?x1213 ?x2829) ?x2831) ?x2833) ?x2835) 0.0)))))))))
(assert
 (= (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) 0.0))
(assert
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3469 (* ?x3468 l_0_3_35)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_34) ?x3469) 0.0))))
(assert
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3644 (* ?x3468 l_0_3_38)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_37) ?x3644) 0.0))))
(assert
 (let ((?x3468 (* 2.0 l_0_3_33)))
 (let ((?x3792 (* ?x3468 l_0_3_42)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_41) ?x3792) 0.0))))
(assert
 (let ((?x4008 (* 2.0 l_0_3_36)))
 (let ((?x4009 (* ?x4008 l_0_3_39)))
 (let ((?x4005 (* 2.0 l_0_3_35)))
 (let ((?x4006 (* ?x4005 l_0_3_38)))
 (= (- (- (* (* (- 2.0) l_0_3_34) l_0_3_37) ?x4006) ?x4009) 0.0))))))
(assert
 (let ((?x4008 (* 2.0 l_0_3_36)))
 (let ((?x727 (* ?x4008 l_0_3_43)))
 (let ((?x4005 (* 2.0 l_0_3_35)))
 (let ((?x752 (* ?x4005 l_0_3_42)))
 (= (- (- (* (* (- 2.0) l_0_3_34) l_0_3_41) ?x752) ?x727) 0.0))))))
(assert
 (let ((?x4061 (* l_0_3_40 l_0_3_40)))
 (let ((?x4058 (* l_0_3_39 l_0_3_39)))
 (let ((?x4249 (- (- (- (* (- l_0_3_37) l_0_3_37) (* l_0_3_38 l_0_3_38)) ?x4058) ?x4061)))
 (= ?x4249 0.0)))))
(assert
 (let ((?x4111 (* (* 2.0 l_0_3_40) l_0_3_44)))
 (let ((?x4108 (* (* 2.0 l_0_3_39) l_0_3_43)))
 (let ((?x4105 (* (* 2.0 l_0_3_38) l_0_3_42)))
 (= (- (- (- (* (* (- 2.0) l_0_3_37) l_0_3_41) ?x4105) ?x4108) ?x4111) 0.0)))))
(assert
 (let ((?x4156 (* l_0_3_45 l_0_3_45)))
 (let ((?x4153 (* l_0_3_44 l_0_3_44)))
 (let ((?x4150 (* l_0_3_43 l_0_3_43)))
 (let ((?x1363 (- (- (- (* (- l_0_3_41) l_0_3_41) (* l_0_3_42 l_0_3_42)) ?x4150) ?x4153)))
 (= (- ?x1363 ?x4156) 0.0))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (>= l_0_3_76 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_81 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (let ((?x4309 (* l_0_4_96 l_0_4_96)))
 (let ((?x4307 (* l_0_4_95 l_0_4_95)))
 (let ((?x4305 (* l_0_4_94 l_0_4_94)))
 (let ((?x4303 (* l_0_4_81 l_0_4_81)))
 (let ((?x4301 (* l_0_4_80 l_0_4_80)))
 (let ((?x4299 (* l_0_4_79 l_0_4_79)))
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4297 (* ?x4296 l_0_4_64)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4294 (* ?x4293 l_0_4_49)))
 (let ((?x4298 (+ (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_16 l_0_4_16)) ?x4294) ?x4297)))
 (let ((?x4311 (+ (- (- (- (- (- (- ?x4298 ?x4299) ?x4301) ?x4303) ?x4305) ?x4307) ?x4309) 1.0)))
 (= ?x4311 0.0))))))))))))))
(assert
 (let ((?x4334 (- (+ (- _a_1_ (* l_0_4_46 l_0_4_46)) (* l_0_4_61 l_0_4_61)) (* (* 2.0 l_0_4_76) l_0_4_79))))
 (= (+ (- ?x4334 (* (* 2.0 l_0_4_91) l_0_4_94)) 2.0) 0.0)))
(assert
 (let ((?x4350 (+ (- (- _a_0_ (* l_0_4_76 l_0_4_76)) (* l_0_4_91 l_0_4_91)) 1.0)))
 (= ?x4350 0.0)))
(assert
 (let ((?x4291 (* l_0_4_16 l_0_4_16)))
 (let ((?x4358 (- (+ _a_2_ (* l_0_4_1 l_0_4_1)) (* (* 2.0 l_0_4_101) l_0_4_91))))
 (let ((?x4364 (- (+ (- ?x4358 ?x4291) (* 1.0 (* l_0_4_31 l_0_4_31))) (* (* 2.0 l_0_4_76) l_0_4_86))))
 (= ?x4364 0.0)))))
(assert
 (let ((?x1491 (- (+ (* (- l_0_4_1) l_0_4_1) (* l_0_4_16 l_0_4_16)) (* (* 2.0 l_0_4_76) l_0_4_82))))
 (= (- (- ?x1491 (* (* 2.0 l_0_4_91) l_0_4_97)) 1.0) 0.0)))
(assert
 (let ((?x4421 (* l_0_4_66 l_0_4_66)))
 (let ((?x4419 (* l_0_4_65 l_0_4_65)))
 (let ((?x4417 (* l_0_4_64 l_0_4_64)))
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x4415 (* ?x4414 l_0_4_65)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x4412 (* ?x4411 l_0_4_64)))
 (let ((?x4406 (* l_0_4_51 l_0_4_51)))
 (let ((?x4404 (* l_0_4_50 l_0_4_50)))
 (let ((?x4399 (* l_0_4_49 l_0_4_49)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x4397 (* ?x4396 l_0_4_50)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x4394 (* ?x4393 l_0_4_49)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4379 (* ?x4378 l_0_4_17)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x4377 (* ?x1576 l_0_4_2)))
 (let ((?x4386 (- (- (- ?x4377 ?x4379) (* (* 2.0 l_0_4_19) l_0_4_19)) (* (* 2.0 l_0_4_20) l_0_4_20))))
 (let ((?x4392 (+ (- ?x4386 (* (* 2.0 l_0_4_21) l_0_4_21)) (* 2.0 (* l_0_4_4 l_0_4_4)))))
 (let ((?x4403 (+ (+ (- (- ?x4392 ?x4394) ?x4397) ?x4399) (* 2.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x4413 (+ (+ (+ (+ ?x4403 ?x4404) ?x4406) (* 2.0 (* l_0_4_6 l_0_4_6))) ?x4412)))
 (= (- (- (- (+ ?x4413 ?x4415) ?x4417) ?x4419) ?x4421) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4421 (* l_0_4_66 l_0_4_66)))
 (let ((?x4419 (* l_0_4_65 l_0_4_65)))
 (let ((?x4417 (* l_0_4_64 l_0_4_64)))
 (let ((?x4406 (* l_0_4_51 l_0_4_51)))
 (let ((?x4404 (* l_0_4_50 l_0_4_50)))
 (let ((?x4399 (* l_0_4_49 l_0_4_49)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4461 (* ?x4378 l_0_4_19)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x4460 (* ?x1576 l_0_4_4)))
 (let ((?x4468 (+ (+ (+ (- (- (- (- ?x4460 ?x4461) ?x4399) ?x4404) ?x4406) ?x4417) ?x4419) ?x4421)))
 (= ?x4468 0.0)))))))))))))
(assert
 (let ((?x4493 (* 2.0 l_0_4_66)))
 (let ((?x4494 (* ?x4493 l_0_4_69)))
 (let ((?x4490 (* 2.0 l_0_4_65)))
 (let ((?x4491 (* ?x4490 l_0_4_68)))
 (let ((?x4487 (* 2.0 l_0_4_64)))
 (let ((?x4488 (* ?x4487 l_0_4_67)))
 (let ((?x4408 (* l_0_4_6 l_0_4_6)))
 (let ((?x4483 (* 2.0 l_0_4_51)))
 (let ((?x4484 (* ?x4483 l_0_4_54)))
 (let ((?x4480 (* 2.0 l_0_4_50)))
 (let ((?x4481 (* ?x4480 l_0_4_53)))
 (let ((?x4401 (* l_0_4_5 l_0_4_5)))
 (let ((?x1655 (* 2.0 l_0_4_49)))
 (let ((?x4477 (* ?x1655 l_0_4_52)))
 (let ((?x4390 (* l_0_4_4 l_0_4_4)))
 (let ((?x1602 (* l_0_4_21 l_0_4_21)))
 (let ((?x1588 (* l_0_4_20 l_0_4_20)))
 (let ((?x1583 (* l_0_4_19 l_0_4_19)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x1665 (* ?x4378 l_0_4_22)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x1693 (* ?x1576 l_0_4_7)))
 (let ((?x4479 (- (- (- (+ (+ (+ (- ?x1693 ?x1665) ?x1583) ?x1588) ?x1602) ?x4390) ?x4477) ?x4401)))
 (= (+ (+ (+ (- (- (- ?x4479 ?x4481) ?x4484) ?x4408) ?x4488) ?x4491) ?x4494) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4493 (* 2.0 l_0_4_66)))
 (let ((?x4550 (* ?x4493 l_0_4_73)))
 (let ((?x4490 (* 2.0 l_0_4_65)))
 (let ((?x4548 (* ?x4490 l_0_4_72)))
 (let ((?x4487 (* 2.0 l_0_4_64)))
 (let ((?x4546 (* ?x4487 l_0_4_71)))
 (let ((?x4408 (* l_0_4_6 l_0_4_6)))
 (let ((?x4483 (* 2.0 l_0_4_51)))
 (let ((?x4543 (* ?x4483 l_0_4_58)))
 (let ((?x4480 (* 2.0 l_0_4_50)))
 (let ((?x4541 (* ?x4480 l_0_4_57)))
 (let ((?x4401 (* l_0_4_5 l_0_4_5)))
 (let ((?x1655 (* 2.0 l_0_4_49)))
 (let ((?x4538 (* ?x1655 l_0_4_56)))
 (let ((?x4390 (* l_0_4_4 l_0_4_4)))
 (let ((?x1602 (* l_0_4_21 l_0_4_21)))
 (let ((?x1588 (* l_0_4_20 l_0_4_20)))
 (let ((?x1583 (* l_0_4_19 l_0_4_19)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4523 (* ?x4378 l_0_4_26)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x4522 (* ?x1576 l_0_4_11)))
 (let ((?x4530 (+ (- (- (- (- ?x4522 ?x4523) ?x1583) ?x1588) ?x1602) (* 1.0 (* l_0_4_34 l_0_4_34)))))
 (let ((?x4536 (+ (+ ?x4530 (* 1.0 (* l_0_4_35 l_0_4_35))) (* 1.0 (* l_0_4_36 l_0_4_36)))))
 (let ((?x4547 (+ (+ (- (- (+ (- (+ ?x4536 ?x4390) ?x4538) ?x4401) ?x4541) ?x4543) ?x4408) ?x4546)))
 (= (+ (+ ?x4547 ?x4548) ?x4550) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4590 (* l_0_4_3 l_0_4_3)))
 (let ((?x4588 (* l_0_4_2 l_0_4_2)))
 (let ((?x4591 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x4588) ?x4590)))
 (= ?x4591 0.0)))))
(assert
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4607 (* ?x4606 l_0_4_5)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4604 (* ?x4603 l_0_4_4)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4601 (* ?x4600 l_0_4_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x4601) ?x4604) ?x4607) 0.0))))))))
(assert
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4621 (* ?x4606 l_0_4_8)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4619 (* ?x4603 l_0_4_7)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4617 (* ?x4600 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x4617) ?x4619) ?x4621) 0.0))))))))
(assert
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4640 (* ?x4600 l_0_4_27)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x4638 (* ?x4637 l_0_4_26)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4635 (* ?x4634 l_0_4_3)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4633 (* ?x4632 l_0_4_2)))
 (= (- (- (+ ?x4633 ?x4635) ?x4638) ?x4640) 0.0))))))))))
(assert
 (let ((?x4408 (* l_0_4_6 l_0_4_6)))
 (let ((?x4401 (* l_0_4_5 l_0_4_5)))
 (let ((?x4390 (* l_0_4_4 l_0_4_4)))
 (let ((?x1602 (* l_0_4_21 l_0_4_21)))
 (let ((?x1822 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x1602) ?x4390)))
 (= (+ (+ ?x1822 ?x4401) ?x4408) 0.0)))))))
(assert
 (let ((?x4674 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4671 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4668 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4387 (* 2.0 l_0_4_21)))
 (let ((?x4665 (* ?x4387 l_0_4_24)))
 (let ((?x4384 (* 2.0 l_0_4_20)))
 (let ((?x4663 (* ?x4384 l_0_4_23)))
 (let ((?x4672 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x4663) ?x4665) ?x4668) ?x4671)))
 (= (+ ?x4672 ?x4674) 0.0))))))))))
(assert
 (let ((?x4387 (* 2.0 l_0_4_21)))
 (let ((?x4701 (* ?x4387 l_0_4_28)))
 (let ((?x4384 (* 2.0 l_0_4_20)))
 (let ((?x4699 (* ?x4384 l_0_4_27)))
 (let ((?x4381 (* 2.0 l_0_4_19)))
 (let ((?x4697 (* ?x4381 l_0_4_26)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4695 (* ?x4688 l_0_4_6)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x1853 (* ?x4634 l_0_4_5)))
 (let ((?x4700 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x1853) ?x4695) ?x4697) ?x4699)))
 (let ((?x4702 (- ?x4700 ?x4701)))
 (= ?x4702 0.0))))))))))))))
(assert
 (let ((?x4734 (* l_0_4_9 l_0_4_9)))
 (let ((?x4732 (* l_0_4_8 l_0_4_8)))
 (let ((?x4730 (* l_0_4_7 l_0_4_7)))
 (let ((?x4728 (* l_0_4_25 l_0_4_25)))
 (let ((?x4726 (* l_0_4_24 l_0_4_24)))
 (let ((?x4724 (* l_0_4_23 l_0_4_23)))
 (let ((?x4727 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4724) ?x4726)))
 (= (+ (+ (+ (- ?x4727 ?x4728) ?x4730) ?x4732) ?x4734) 0.0)))))))))
(assert
 (let ((?x4760 (* 2.0 l_0_4_25)))
 (let ((?x4761 (* ?x4760 l_0_4_29)))
 (let ((?x4757 (* 2.0 l_0_4_24)))
 (let ((?x4758 (* ?x4757 l_0_4_28)))
 (let ((?x4754 (* 2.0 l_0_4_23)))
 (let ((?x4755 (* ?x4754 l_0_4_27)))
 (let ((?x4751 (* 2.0 l_0_4_22)))
 (let ((?x4752 (* ?x4751 l_0_4_26)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4749 (* ?x4688 l_0_4_9)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4747 (* ?x4634 l_0_4_8)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4745 (* ?x4632 l_0_4_7)))
 (let ((?x4746 (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x4745)))
 (= (- (- (- (- (+ (+ ?x4746 ?x4747) ?x4749) ?x4752) ?x4755) ?x4758) ?x4761) 0.0)))))))))))))))))
(assert
 (let ((?x4534 (* l_0_4_36 l_0_4_36)))
 (let ((?x4531 (* l_0_4_35 l_0_4_35)))
 (let ((?x4528 (* l_0_4_34 l_0_4_34)))
 (let ((?x4803 (* l_0_4_30 l_0_4_30)))
 (let ((?x4801 (* l_0_4_29 l_0_4_29)))
 (let ((?x4799 (* l_0_4_28 l_0_4_28)))
 (let ((?x4797 (* l_0_4_27 l_0_4_27)))
 (let ((?x4795 (* l_0_4_26 l_0_4_26)))
 (let ((?x4793 (* l_0_4_15 l_0_4_15)))
 (let ((?x4791 (* l_0_4_14 l_0_4_14)))
 (let ((?x4789 (* l_0_4_13 l_0_4_13)))
 (let ((?x4792 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4789) ?x4791)))
 (let ((?x4804 (- (- (- (- (- (+ ?x4792 ?x4793) ?x4795) ?x4797) ?x4799) ?x4801) ?x4803)))
 (= (- (- (- ?x4804 ?x4528) ?x4531) ?x4534) 0.0)))))))))))))))
(assert
 (let ((?x4330 (* l_0_4_61 l_0_4_61)))
 (let ((?x1492 (* l_0_4_46 l_0_4_46)))
 (let ((?x4290 (* l_0_4_1 l_0_4_1)))
 (let ((?x4817 (* 2.0 ?x4290)))
 (let ((?x4823 (- (- (+ (- ?x4817 (* (* 2.0 l_0_4_16) l_0_4_16)) ?x1492) ?x4330) (* (* 2.0 l_0_4_76) l_0_4_77))))
 (= (- ?x4823 (* (* 2.0 l_0_4_91) l_0_4_92)) 0.0)))))))
(assert
 (let ((?x4854 (* l_0_4_93 l_0_4_93)))
 (let ((?x4852 (* l_0_4_92 l_0_4_92)))
 (let ((?x4850 (* l_0_4_78 l_0_4_78)))
 (let ((?x4848 (* l_0_4_77 l_0_4_77)))
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4846 (* ?x4296 l_0_4_62)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4844 (* ?x4293 l_0_4_47)))
 (let ((?x4843 (- (* (* 4.0 l_0_4_1) l_0_4_2) (* (* 4.0 l_0_4_16) l_0_4_17))))
 (= (- (- (- (- (- (+ ?x4843 ?x4844) ?x4846) ?x4848) ?x4850) ?x4852) ?x4854) 0.0)))))))))))
(assert
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4297 (* ?x4296 l_0_4_64)))
 (let ((?x4846 (* ?x4296 l_0_4_62)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4294 (* ?x4293 l_0_4_49)))
 (let ((?x4844 (* ?x4293 l_0_4_47)))
 (let ((?x4874 (- (* (* 4.0 l_0_4_1) l_0_4_4) (* (* 4.0 l_0_4_16) l_0_4_19))))
 (let ((?x4881 (- (- (+ (+ (- ?x4874 ?x4844) ?x4294) ?x4846) ?x4297) (* (* 2.0 l_0_4_77) l_0_4_79))))
 (let ((?x4887 (- (- ?x4881 (* (* 2.0 l_0_4_78) l_0_4_80)) (* (* 2.0 l_0_4_92) l_0_4_94))))
 (= (- ?x4887 (* (* 2.0 l_0_4_93) l_0_4_95)) 0.0)))))))))))
(assert
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4910 (* ?x4296 l_0_4_67)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4908 (* ?x4293 l_0_4_52)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4379 (* ?x4378 l_0_4_17)))
 (let ((?x4904 (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) (* (* 4.0 l_0_4_1) l_0_4_7))))
 (let ((?x4911 (- (+ (- (+ ?x4904 ?x4379) (* (* 4.0 l_0_4_16) l_0_4_22)) ?x4908) ?x4910)))
 (let ((?x4915 (- (- ?x4911 (* (* 2.0 l_0_4_77) l_0_4_82)) (* (* 2.0 l_0_4_78) l_0_4_83))))
 (let ((?x4919 (- (- ?x4915 (* (* 2.0 l_0_4_92) l_0_4_97)) (* (* 2.0 l_0_4_93) l_0_4_98))))
 (= ?x4919 0.0))))))))))))
(assert
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4965 (* ?x4296 l_0_4_71)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4963 (* ?x4293 l_0_4_56)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x4961 (* ?x4960 l_0_4_32)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4379 (* ?x4378 l_0_4_17)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x4377 (* ?x1576 l_0_4_2)))
 (let ((?x4953 (- (+ (* (* 4.0 l_0_4_1) l_0_4_11) ?x4377) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x4959 (- (- (- ?x4953 (* (* 2.0 l_0_4_102) l_0_4_93)) ?x4379) (* (* 4.0 l_0_4_16) l_0_4_26))))
 (let ((?x4968 (- (- (+ (+ ?x4959 ?x4961) ?x4963) ?x4965) (* (* 2.0 l_0_4_77) l_0_4_86))))
 (= (- ?x4968 (* (* 2.0 l_0_4_78) l_0_4_87)) 0.0)))))))))))))))
(assert
 (let ((?x5023 (* l_0_4_63 l_0_4_63)))
 (let ((?x5021 (* l_0_4_62 l_0_4_62)))
 (let ((?x5019 (* l_0_4_48 l_0_4_48)))
 (let ((?x5017 (* l_0_4_47 l_0_4_47)))
 (let ((?x5012 (- (* (* (- 2.0) l_0_4_17) l_0_4_17) (* (* 2.0 l_0_4_18) l_0_4_18))))
 (let ((?x5016 (+ (+ ?x5012 (* 2.0 (* l_0_4_2 l_0_4_2))) (* 2.0 (* l_0_4_3 l_0_4_3)))))
 (= (- (- (+ (+ ?x5016 ?x5017) ?x5019) ?x5021) ?x5023) 0.0))))))))
(assert
 (let ((?x5023 (* l_0_4_63 l_0_4_63)))
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x4415 (* ?x4414 l_0_4_65)))
 (let ((?x5021 (* l_0_4_62 l_0_4_62)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x4412 (* ?x4411 l_0_4_64)))
 (let ((?x5019 (* l_0_4_48 l_0_4_48)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x4397 (* ?x4396 l_0_4_50)))
 (let ((?x5017 (* l_0_4_47 l_0_4_47)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x4394 (* ?x4393 l_0_4_49)))
 (let ((?x5044 (- (* (* (- 4.0) l_0_4_17) l_0_4_19) (* (* 4.0 l_0_4_18) l_0_4_20))))
 (let ((?x5050 (+ (+ ?x5044 (* (* 4.0 l_0_4_2) l_0_4_4)) (* (* 4.0 l_0_4_3) l_0_4_5))))
 (let ((?x5057 (- (+ (- (- (+ (- (+ ?x5050 ?x4394) ?x5017) ?x4397) ?x5019) ?x4412) ?x5021) ?x4415)))
 (= (+ ?x5057 ?x5023) 0.0)))))))))))))))))
(assert
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x5070 (* ?x4414 l_0_4_68)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x5068 (* ?x4411 l_0_4_67)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x5066 (* ?x4396 l_0_4_53)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x2304 (* ?x4393 l_0_4_52)))
 (let ((?x4590 (* l_0_4_3 l_0_4_3)))
 (let ((?x4588 (* l_0_4_2 l_0_4_2)))
 (let ((?x4577 (* l_0_4_18 l_0_4_18)))
 (let ((?x2348 (- (+ (* (* (- 4.0) l_0_4_17) l_0_4_22) (* l_0_4_17 l_0_4_17)) (* (* 4.0 l_0_4_18) l_0_4_23))))
 (let ((?x2327 (+ (- (+ (+ ?x2348 ?x4577) (* (* 4.0 l_0_4_2) l_0_4_7)) ?x4588) (* (* 4.0 l_0_4_3) l_0_4_8))))
 (= (- (- (+ (+ (- ?x2327 ?x4590) ?x2304) ?x5066) ?x5068) ?x5070) 0.0)))))))))))))))
(assert
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x5113 (* ?x4414 l_0_4_72)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x5111 (* ?x4411 l_0_4_71)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x5109 (* ?x4396 l_0_4_57)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x5107 (* ?x4393 l_0_4_56)))
 (let ((?x4590 (* l_0_4_3 l_0_4_3)))
 (let ((?x4588 (* l_0_4_2 l_0_4_2)))
 (let ((?x4577 (* l_0_4_18 l_0_4_18)))
 (let ((?x1798 (* l_0_4_17 l_0_4_17)))
 (let ((?x5091 (+ (* (* 4.0 l_0_4_11) l_0_4_2) (* (* 4.0 l_0_4_12) l_0_4_3))))
 (let ((?x5097 (- (- (- ?x5091 (* (* 4.0 l_0_4_17) l_0_4_26)) ?x1798) (* (* 4.0 l_0_4_18) l_0_4_27))))
 (let ((?x5103 (+ (+ (+ (- ?x5097 ?x4577) ?x4588) ?x4590) (* 1.0 (* l_0_4_32 l_0_4_32)))))
 (let ((?x5112 (- (+ (+ (+ ?x5103 (* 1.0 (* l_0_4_33 l_0_4_33))) ?x5107) ?x5109) ?x5111)))
 (= (- ?x5112 ?x5113) 0.0))))))))))))))))))
(assert
 (let ((?x4493 (* 2.0 l_0_4_66)))
 (let ((?x4494 (* ?x4493 l_0_4_69)))
 (let ((?x4490 (* 2.0 l_0_4_65)))
 (let ((?x4491 (* ?x4490 l_0_4_68)))
 (let ((?x4487 (* 2.0 l_0_4_64)))
 (let ((?x4488 (* ?x4487 l_0_4_67)))
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x5070 (* ?x4414 l_0_4_68)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x5068 (* ?x4411 l_0_4_67)))
 (let ((?x4483 (* 2.0 l_0_4_51)))
 (let ((?x4484 (* ?x4483 l_0_4_54)))
 (let ((?x4480 (* 2.0 l_0_4_50)))
 (let ((?x4481 (* ?x4480 l_0_4_53)))
 (let ((?x1655 (* 2.0 l_0_4_49)))
 (let ((?x4477 (* ?x1655 l_0_4_52)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x5066 (* ?x4396 l_0_4_53)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x2304 (* ?x4393 l_0_4_52)))
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4607 (* ?x4606 l_0_4_5)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4604 (* ?x4603 l_0_4_4)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4601 (* ?x4600 l_0_4_20)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x5146 (* ?x4637 l_0_4_19)))
 (let ((?x5154 (- (- (- (+ ?x5146 ?x4601) (* (* 4.0 l_0_4_19) l_0_4_22)) ?x4604) (* (* 4.0 l_0_4_20) l_0_4_23))))
 (let ((?x5161 (+ (- (- ?x5154 (* (* 4.0 l_0_4_21) l_0_4_24)) ?x4607) (* (* 4.0 l_0_4_4) l_0_4_7))))
 (let ((?x5167 (+ (+ (- (- ?x5161 ?x2304) ?x5066) ?x4477) (* (* 4.0 l_0_4_5) l_0_4_8))))
 (let ((?x5173 (+ (+ (+ (+ ?x5167 ?x4481) ?x4484) (* (* 4.0 l_0_4_6) l_0_4_9)) ?x5068)))
 (= (- (- (- (+ ?x5173 ?x5070) ?x4488) ?x4491) ?x4494) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4493 (* 2.0 l_0_4_66)))
 (let ((?x4550 (* ?x4493 l_0_4_73)))
 (let ((?x4490 (* 2.0 l_0_4_65)))
 (let ((?x4548 (* ?x4490 l_0_4_72)))
 (let ((?x4487 (* 2.0 l_0_4_64)))
 (let ((?x4546 (* ?x4487 l_0_4_71)))
 (let ((?x4414 (* 2.0 l_0_4_63)))
 (let ((?x5113 (* ?x4414 l_0_4_72)))
 (let ((?x4411 (* 2.0 l_0_4_62)))
 (let ((?x5111 (* ?x4411 l_0_4_71)))
 (let ((?x4483 (* 2.0 l_0_4_51)))
 (let ((?x4543 (* ?x4483 l_0_4_58)))
 (let ((?x4480 (* 2.0 l_0_4_50)))
 (let ((?x4541 (* ?x4480 l_0_4_57)))
 (let ((?x1655 (* 2.0 l_0_4_49)))
 (let ((?x4538 (* ?x1655 l_0_4_56)))
 (let ((?x4396 (* 2.0 l_0_4_48)))
 (let ((?x5109 (* ?x4396 l_0_4_57)))
 (let ((?x4393 (* 2.0 l_0_4_47)))
 (let ((?x5107 (* ?x4393 l_0_4_56)))
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5208 (* ?x5207 l_0_4_35)))
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4607 (* ?x4606 l_0_4_5)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4604 (* ?x4603 l_0_4_4)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4601 (* ?x4600 l_0_4_20)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x5146 (* ?x4637 l_0_4_19)))
 (let ((?x2621 (+ (* (* 4.0 l_0_4_11) l_0_4_4) (* (* 4.0 l_0_4_12) l_0_4_5))))
 (let ((?x5197 (- (- (- (+ ?x2621 (* (* 4.0 l_0_4_13) l_0_4_6)) ?x5146) ?x4601) (* (* 4.0 l_0_4_19) l_0_4_26))))
 (let ((?x5202 (- (- (+ ?x5197 ?x4604) (* (* 4.0 l_0_4_20) l_0_4_27)) (* (* 4.0 l_0_4_21) l_0_4_28))))
 (let ((?x5210 (- (+ (+ (+ ?x5202 ?x4607) (* (* 2.0 l_0_4_32) l_0_4_34)) ?x5208) ?x5107)))
 (let ((?x5217 (- (+ (+ (+ (+ (+ (- ?x5210 ?x5109) ?x4538) ?x4541) ?x4543) ?x5111) ?x5113) ?x4546)))
 (= (- (- ?x5217 ?x4548) ?x4550) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5265 (* l_0_4_70 l_0_4_70)))
 (let ((?x5261 (* l_0_4_69 l_0_4_69)))
 (let ((?x5259 (* l_0_4_68 l_0_4_68)))
 (let ((?x5257 (* l_0_4_67 l_0_4_67)))
 (let ((?x5255 (* l_0_4_55 l_0_4_55)))
 (let ((?x5253 (* l_0_4_54 l_0_4_54)))
 (let ((?x5251 (* l_0_4_53 l_0_4_53)))
 (let ((?x5249 (* l_0_4_52 l_0_4_52)))
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4621 (* ?x4606 l_0_4_8)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4619 (* ?x4603 l_0_4_7)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4617 (* ?x4600 l_0_4_23)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x2971 (* ?x4637 l_0_4_22)))
 (let ((?x2847 (- (- (+ (+ (* 2.0 (* l_0_4_10 l_0_4_10)) ?x2971) ?x4617) ?x4619) (* (* 2.0 l_0_4_22) l_0_4_22))))
 (let ((?x5245 (- (- ?x2847 (* (* 2.0 l_0_4_23) l_0_4_23)) (* (* 2.0 l_0_4_24) l_0_4_24))))
 (let ((?x5252 (+ (+ (- (- ?x5245 (* (* 2.0 l_0_4_25) l_0_4_25)) ?x4621) ?x5249) ?x5251)))
 (let ((?x5264 (+ (- (- (- (+ (+ ?x5252 ?x5253) ?x5255) ?x5257) ?x5259) ?x5261) (* 2.0 (* l_0_4_7 l_0_4_7)))))
 (let ((?x5270 (+ (+ (- ?x5264 ?x5265) (* 2.0 (* l_0_4_8 l_0_4_8))) (* 2.0 (* l_0_4_9 l_0_4_9)))))
 (= ?x5270 0.0)))))))))))))))))))))))
(assert
 (let ((?x5341 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x5338 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x5335 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x5332 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x5329 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5326 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5323 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5320 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5317 (* ?x5207 l_0_4_38)))
 (let ((?x4606 (* 2.0 l_0_4_3)))
 (let ((?x4621 (* ?x4606 l_0_4_8)))
 (let ((?x4603 (* 2.0 l_0_4_2)))
 (let ((?x4619 (* ?x4603 l_0_4_7)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4640 (* ?x4600 l_0_4_27)))
 (let ((?x4617 (* ?x4600 l_0_4_23)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x4638 (* ?x4637 l_0_4_26)))
 (let ((?x2971 (* ?x4637 l_0_4_22)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4635 (* ?x4634 l_0_4_3)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4633 (* ?x4632 l_0_4_2)))
 (let ((?x5291 (+ (- (* (* 4.0 l_0_4_10) l_0_4_14) ?x4633) (* (* 4.0 l_0_4_11) l_0_4_7))))
 (let ((?x5296 (+ (+ (- ?x5291 ?x4635) (* (* 4.0 l_0_4_12) l_0_4_8)) (* (* 4.0 l_0_4_13) l_0_4_9))))
 (let ((?x5304 (- (+ (+ (- (+ (- ?x5296 ?x2971) ?x4638) ?x4617) ?x4640) ?x4619) (* (* 4.0 l_0_4_22) l_0_4_26))))
 (let ((?x5310 (- (- ?x5304 (* (* 4.0 l_0_4_23) l_0_4_27)) (* (* 4.0 l_0_4_24) l_0_4_28))))
 (let ((?x5316 (+ (+ (- ?x5310 (* (* 4.0 l_0_4_25) l_0_4_29)) ?x4621) (* (* 2.0 l_0_4_32) l_0_4_37))))
 (let ((?x5336 (- (- (+ (+ (+ (+ (+ ?x5316 ?x5317) ?x5320) ?x5323) ?x5326) ?x5329) ?x5332) ?x5335)))
 (= (- (- ?x5336 ?x5338) ?x5341) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5424 (* l_0_4_75 l_0_4_75)))
 (let ((?x5422 (* l_0_4_74 l_0_4_74)))
 (let ((?x5420 (* l_0_4_73 l_0_4_73)))
 (let ((?x5418 (* l_0_4_72 l_0_4_72)))
 (let ((?x5416 (* l_0_4_71 l_0_4_71)))
 (let ((?x5414 (* l_0_4_60 l_0_4_60)))
 (let ((?x5412 (* l_0_4_59 l_0_4_59)))
 (let ((?x5410 (* l_0_4_58 l_0_4_58)))
 (let ((?x5408 (* l_0_4_57 l_0_4_57)))
 (let ((?x5406 (* l_0_4_56 l_0_4_56)))
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5404 (* ?x5207 l_0_4_42)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x4961 (* ?x4960 l_0_4_32)))
 (let ((?x4600 (* 2.0 l_0_4_18)))
 (let ((?x4640 (* ?x4600 l_0_4_27)))
 (let ((?x4637 (* 2.0 l_0_4_17)))
 (let ((?x4638 (* ?x4637 l_0_4_26)))
 (let ((?x4793 (* l_0_4_15 l_0_4_15)))
 (let ((?x3156 (* 2.0 ?x4793)))
 (let ((?x4791 (* l_0_4_14 l_0_4_14)))
 (let ((?x3186 (* 2.0 ?x4791)))
 (let ((?x4789 (* l_0_4_13 l_0_4_13)))
 (let ((?x3187 (* 2.0 ?x4789)))
 (let ((?x4787 (* l_0_4_12 l_0_4_12)))
 (let ((?x3177 (* 2.0 ?x4787)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4635 (* ?x4634 l_0_4_3)))
 (let ((?x4786 (* l_0_4_11 l_0_4_11)))
 (let ((?x3218 (* 2.0 ?x4786)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4633 (* ?x4632 l_0_4_2)))
 (let ((?x5384 (- (+ (+ (+ (+ (+ (+ ?x4633 ?x3218) ?x4635) ?x3177) ?x3187) ?x3186) ?x3156) ?x4638)))
 (let ((?x5391 (- (- (- ?x5384 ?x4640) (* (* 2.0 l_0_4_26) l_0_4_26)) (* (* 2.0 l_0_4_27) l_0_4_27))))
 (let ((?x5397 (- (- ?x5391 (* (* 2.0 l_0_4_28) l_0_4_28)) (* (* 2.0 l_0_4_29) l_0_4_29))))
 (let ((?x5403 (+ (- (- ?x5397 (* (* 2.0 l_0_4_30) l_0_4_30)) ?x4961) (* (* 2.0 l_0_4_32) l_0_4_41))))
 (let ((?x5417 (- (+ (+ (+ (+ (+ (+ ?x5403 ?x5404) ?x5406) ?x5408) ?x5410) ?x5412) ?x5414) ?x5416)))
 (= (- (- (- (- ?x5417 ?x5418) ?x5420) ?x5422) ?x5424) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4965 (* ?x4296 l_0_4_71)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4963 (* ?x4293 l_0_4_56)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5459 (* ?x4960 l_0_4_34)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4461 (* ?x4378 l_0_4_19)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x4460 (* ?x1576 l_0_4_4)))
 (let ((?x5454 (- (- ?x4460 (* (* 2.0 l_0_4_101) l_0_4_94)) (* (* 2.0 l_0_4_102) l_0_4_95))))
 (let ((?x5461 (- (+ (- (- ?x5454 (* (* 2.0 l_0_4_103) l_0_4_96)) ?x4461) ?x5459) ?x4963)))
 (let ((?x5468 (- (- (+ ?x5461 ?x4965) (* (* 2.0 l_0_4_79) l_0_4_86)) (* (* 2.0 l_0_4_80) l_0_4_87))))
 (= (- ?x5468 (* (* 2.0 l_0_4_81) l_0_4_88)) 0.0)))))))))))))))
(assert
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5487 (* ?x4960 l_0_4_37)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4523 (* ?x4378 l_0_4_26)))
 (let ((?x1665 (* ?x4378 l_0_4_22)))
 (let ((?x1576 (* 2.0 l_0_4_1)))
 (let ((?x1693 (* ?x1576 l_0_4_7)))
 (let ((?x3355 (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x1693) (* (* 2.0 l_0_4_100) l_0_4_104))))
 (let ((?x5482 (- (- ?x3355 (* (* 2.0 l_0_4_101) l_0_4_97)) (* (* 2.0 l_0_4_102) l_0_4_98))))
 (let ((?x5488 (+ (+ (- (- ?x5482 (* (* 2.0 l_0_4_103) l_0_4_99)) ?x1665) ?x4523) ?x5487)))
 (let ((?x5494 (- (- ?x5488 (* (* 2.0 l_0_4_82) l_0_4_86)) (* (* 2.0 l_0_4_83) l_0_4_87))))
 (let ((?x5500 (- (- ?x5494 (* (* 2.0 l_0_4_84) l_0_4_88)) (* (* 2.0 l_0_4_85) l_0_4_89))))
 (= ?x5500 0.0))))))))))))))
(assert
 (let ((?x5557 (* l_0_4_90 l_0_4_90)))
 (let ((?x5555 (* l_0_4_89 l_0_4_89)))
 (let ((?x5553 (* l_0_4_88 l_0_4_88)))
 (let ((?x5551 (* l_0_4_87 l_0_4_87)))
 (let ((?x5549 (* l_0_4_86 l_0_4_86)))
 (let ((?x4360 (* l_0_4_31 l_0_4_31)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5546 (* ?x4960 l_0_4_41)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4523 (* ?x4378 l_0_4_26)))
 (let ((?x5543 (* l_0_4_105 l_0_4_105)))
 (let ((?x5541 (* l_0_4_104 l_0_4_104)))
 (let ((?x5539 (* l_0_4_103 l_0_4_103)))
 (let ((?x5537 (* l_0_4_102 l_0_4_102)))
 (let ((?x5538 (- (- (* (* 2.0 l_0_4_1) l_0_4_11) (* l_0_4_101 l_0_4_101)) ?x5537)))
 (let ((?x5550 (- (- (+ (- (- (- (- ?x5538 ?x5539) ?x5541) ?x5543) ?x4523) ?x5546) ?x4360) ?x5549)))
 (= (- (- (- (- ?x5550 ?x5551) ?x5553) ?x5555) ?x5557) 0.0))))))))))))))))))
(assert
 (let ((?x5341 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x5338 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x5335 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x5332 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x4674 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5329 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5326 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5323 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5320 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4671 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4668 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5594 (* 2.0 l_0_4_36)))
 (let ((?x5595 (* ?x5594 l_0_4_39)))
 (let ((?x5591 (* 2.0 l_0_4_35)))
 (let ((?x5592 (* ?x5591 l_0_4_38)))
 (let ((?x4387 (* 2.0 l_0_4_21)))
 (let ((?x4701 (* ?x4387 l_0_4_28)))
 (let ((?x4665 (* ?x4387 l_0_4_24)))
 (let ((?x4384 (* 2.0 l_0_4_20)))
 (let ((?x4699 (* ?x4384 l_0_4_27)))
 (let ((?x4663 (* ?x4384 l_0_4_23)))
 (let ((?x4381 (* 2.0 l_0_4_19)))
 (let ((?x4697 (* ?x4381 l_0_4_26)))
 (let ((?x5581 (* ?x4381 l_0_4_22)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4695 (* ?x4688 l_0_4_6)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x1853 (* ?x4634 l_0_4_5)))
 (let ((?x5583 (+ (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x1853) ?x4695) ?x5581) ?x4697)))
 (let ((?x5590 (+ (+ (- (+ (- ?x5583 ?x4663) ?x4699) ?x4665) ?x4701) (* (* 2.0 l_0_4_34) l_0_4_37))))
 (let ((?x5601 (- (- (- (+ (+ (+ (+ ?x5590 ?x5592) ?x5595) ?x4668) ?x4671) ?x5320) ?x5323) ?x5326)))
 (= (+ (+ (+ (+ (+ (- ?x5601 ?x5329) ?x4674) ?x5332) ?x5335) ?x5338) ?x5341) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5424 (* l_0_4_75 l_0_4_75)))
 (let ((?x5422 (* l_0_4_74 l_0_4_74)))
 (let ((?x5420 (* l_0_4_73 l_0_4_73)))
 (let ((?x5418 (* l_0_4_72 l_0_4_72)))
 (let ((?x5416 (* l_0_4_71 l_0_4_71)))
 (let ((?x5414 (* l_0_4_60 l_0_4_60)))
 (let ((?x5412 (* l_0_4_59 l_0_4_59)))
 (let ((?x5410 (* l_0_4_58 l_0_4_58)))
 (let ((?x5408 (* l_0_4_57 l_0_4_57)))
 (let ((?x5406 (* l_0_4_56 l_0_4_56)))
 (let ((?x5594 (* 2.0 l_0_4_36)))
 (let ((?x3595 (* ?x5594 l_0_4_43)))
 (let ((?x5591 (* 2.0 l_0_4_35)))
 (let ((?x3597 (* ?x5591 l_0_4_42)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5459 (* ?x4960 l_0_4_34)))
 (let ((?x4387 (* 2.0 l_0_4_21)))
 (let ((?x4701 (* ?x4387 l_0_4_28)))
 (let ((?x4384 (* 2.0 l_0_4_20)))
 (let ((?x4699 (* ?x4384 l_0_4_27)))
 (let ((?x4381 (* 2.0 l_0_4_19)))
 (let ((?x4697 (* ?x4381 l_0_4_26)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4695 (* ?x4688 l_0_4_6)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x1853 (* ?x4634 l_0_4_5)))
 (let ((?x4700 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x1853) ?x4695) ?x4697) ?x4699)))
 (let ((?x4702 (- ?x4700 ?x4701)))
 (let ((?x3596 (+ (+ (+ (- ?x4702 ?x5459) (* (* 2.0 l_0_4_34) l_0_4_41)) ?x3597) ?x3595)))
 (let ((?x5626 (+ (+ (- (- (- (- (- ?x3596 ?x5406) ?x5408) ?x5410) ?x5412) ?x5414) ?x5416) ?x5418)))
 (= (+ (+ (+ ?x5626 ?x5420) ?x5422) ?x5424) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x4734 (* l_0_4_9 l_0_4_9)))
 (let ((?x4732 (* l_0_4_8 l_0_4_8)))
 (let ((?x4730 (* l_0_4_7 l_0_4_7)))
 (let ((?x4728 (* l_0_4_25 l_0_4_25)))
 (let ((?x4760 (* 2.0 l_0_4_25)))
 (let ((?x4761 (* ?x4760 l_0_4_29)))
 (let ((?x4726 (* l_0_4_24 l_0_4_24)))
 (let ((?x4757 (* 2.0 l_0_4_24)))
 (let ((?x4758 (* ?x4757 l_0_4_28)))
 (let ((?x4724 (* l_0_4_23 l_0_4_23)))
 (let ((?x4754 (* 2.0 l_0_4_23)))
 (let ((?x4755 (* ?x4754 l_0_4_27)))
 (let ((?x4722 (* l_0_4_22 l_0_4_22)))
 (let ((?x4751 (* 2.0 l_0_4_22)))
 (let ((?x4752 (* ?x4751 l_0_4_26)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4749 (* ?x4688 l_0_4_9)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4747 (* ?x4634 l_0_4_8)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4745 (* ?x4632 l_0_4_7)))
 (let ((?x2690 (- (+ (* (* (- 2.0) l_0_4_10) l_0_4_14) (* l_0_4_10 l_0_4_10)) ?x4745)))
 (let ((?x5648 (+ (- (+ (- (+ (- (- ?x2690 ?x4747) ?x4749) ?x4752) ?x4722) ?x4755) ?x4724) ?x4758)))
 (let ((?x5654 (+ (- (+ (- ?x5648 ?x4726) ?x4761) ?x4728) (* 1.0 (* l_0_4_37 l_0_4_37)))))
 (let ((?x5660 (+ (+ ?x5654 (* 1.0 (* l_0_4_38 l_0_4_38))) (* 1.0 (* l_0_4_39 l_0_4_39)))))
 (let ((?x5666 (+ (+ (+ (+ ?x5660 (* 1.0 (* l_0_4_40 l_0_4_40))) ?x4730) ?x4732) ?x4734)))
 (= ?x5666 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5687 (* (* 2.0 l_0_4_40) l_0_4_44)))
 (let ((?x5684 (* (* 2.0 l_0_4_39) l_0_4_43)))
 (let ((?x5681 (* (* 2.0 l_0_4_38) l_0_4_42)))
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5487 (* ?x4960 l_0_4_37)))
 (let ((?x4803 (* l_0_4_30 l_0_4_30)))
 (let ((?x4801 (* l_0_4_29 l_0_4_29)))
 (let ((?x4799 (* l_0_4_28 l_0_4_28)))
 (let ((?x4797 (* l_0_4_27 l_0_4_27)))
 (let ((?x4795 (* l_0_4_26 l_0_4_26)))
 (let ((?x4760 (* 2.0 l_0_4_25)))
 (let ((?x4761 (* ?x4760 l_0_4_29)))
 (let ((?x4757 (* 2.0 l_0_4_24)))
 (let ((?x4758 (* ?x4757 l_0_4_28)))
 (let ((?x4754 (* 2.0 l_0_4_23)))
 (let ((?x4755 (* ?x4754 l_0_4_27)))
 (let ((?x4751 (* 2.0 l_0_4_22)))
 (let ((?x4752 (* ?x4751 l_0_4_26)))
 (let ((?x4793 (* l_0_4_15 l_0_4_15)))
 (let ((?x4791 (* l_0_4_14 l_0_4_14)))
 (let ((?x4789 (* l_0_4_13 l_0_4_13)))
 (let ((?x4688 (* 2.0 l_0_4_13)))
 (let ((?x4749 (* ?x4688 l_0_4_9)))
 (let ((?x4787 (* l_0_4_12 l_0_4_12)))
 (let ((?x4634 (* 2.0 l_0_4_12)))
 (let ((?x4747 (* ?x4634 l_0_4_8)))
 (let ((?x4786 (* l_0_4_11 l_0_4_11)))
 (let ((?x4632 (* 2.0 l_0_4_11)))
 (let ((?x4745 (* ?x4632 l_0_4_7)))
 (let ((?x4746 (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x4745)))
 (let ((?x3700 (- (- (- (+ (- (+ (- ?x4746 ?x4786) ?x4747) ?x4787) ?x4749) ?x4789) ?x4791) ?x4793)))
 (let ((?x3748 (+ (+ (+ (- (- (- (- ?x3700 ?x4752) ?x4755) ?x4758) ?x4761) ?x4795) ?x4797) ?x4799)))
 (let ((?x5679 (+ (- (+ (+ ?x3748 ?x4801) ?x4803) ?x5487) (* (* 2.0 l_0_4_37) l_0_4_41))))
 (= (+ (+ (+ ?x5679 ?x5681) ?x5684) ?x5687) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4960 (* 2.0 l_0_4_31)))
 (let ((?x5546 (* ?x4960 l_0_4_41)))
 (let ((?x4803 (* l_0_4_30 l_0_4_30)))
 (let ((?x4801 (* l_0_4_29 l_0_4_29)))
 (let ((?x4799 (* l_0_4_28 l_0_4_28)))
 (let ((?x4797 (* l_0_4_27 l_0_4_27)))
 (let ((?x4795 (* l_0_4_26 l_0_4_26)))
 (let ((?x4793 (* l_0_4_15 l_0_4_15)))
 (let ((?x4791 (* l_0_4_14 l_0_4_14)))
 (let ((?x4789 (* l_0_4_13 l_0_4_13)))
 (let ((?x4792 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4789) ?x4791)))
 (let ((?x4804 (- (- (- (- (- (+ ?x4792 ?x4793) ?x4795) ?x4797) ?x4799) ?x4801) ?x4803)))
 (let ((?x5725 (+ (+ (- ?x4804 ?x5546) (* 1.0 (* l_0_4_41 l_0_4_41))) (* 1.0 (* l_0_4_42 l_0_4_42)))))
 (let ((?x5731 (+ (+ ?x5725 (* 1.0 (* l_0_4_43 l_0_4_43))) (* 1.0 (* l_0_4_44 l_0_4_44)))))
 (= (+ ?x5731 (* 1.0 (* l_0_4_45 l_0_4_45))) 0.0))))))))))))))))
(assert
 (let ((?x4296 (* 2.0 l_0_4_61)))
 (let ((?x4910 (* ?x4296 l_0_4_67)))
 (let ((?x4293 (* 2.0 l_0_4_46)))
 (let ((?x4908 (* ?x4293 l_0_4_52)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x4461 (* ?x4378 l_0_4_19)))
 (let ((?x5746 (- (+ (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x4461) ?x4908) ?x4910) (* (* 2.0 l_0_4_79) l_0_4_82))))
 (let ((?x5750 (- (- ?x5746 (* (* 2.0 l_0_4_80) l_0_4_83)) (* (* 2.0 l_0_4_81) l_0_4_84))))
 (let ((?x5756 (- (- ?x5750 (* (* 2.0 l_0_4_94) l_0_4_97)) (* (* 2.0 l_0_4_95) l_0_4_98))))
 (= (- ?x5756 (* (* 2.0 l_0_4_96) l_0_4_99)) 0.0)))))))))))
(assert
 (let ((?x5786 (* l_0_4_99 l_0_4_99)))
 (let ((?x5784 (* l_0_4_98 l_0_4_98)))
 (let ((?x5782 (* l_0_4_97 l_0_4_97)))
 (let ((?x5780 (* l_0_4_85 l_0_4_85)))
 (let ((?x5778 (* l_0_4_84 l_0_4_84)))
 (let ((?x5776 (* l_0_4_83 l_0_4_83)))
 (let ((?x5774 (* l_0_4_82 l_0_4_82)))
 (let ((?x4378 (* 2.0 l_0_4_16)))
 (let ((?x1665 (* ?x4378 l_0_4_22)))
 (let ((?x5773 (+ (- (* (* (- 2.0) l_0_4_1) l_0_4_7) (* l_0_4_100 l_0_4_100)) ?x1665)))
 (let ((?x5787 (- (- (- (- (- (- (- ?x5773 ?x5774) ?x5776) ?x5778) ?x5780) ?x5782) ?x5784) ?x5786)))
 (= ?x5787 0.0)))))))))))))
(assert
 (let ((?x5265 (* l_0_4_70 l_0_4_70)))
 (let ((?x5261 (* l_0_4_69 l_0_4_69)))
 (let ((?x5259 (* l_0_4_68 l_0_4_68)))
 (let ((?x5257 (* l_0_4_67 l_0_4_67)))
 (let ((?x4674 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5255 (* l_0_4_55 l_0_4_55)))
 (let ((?x5253 (* l_0_4_54 l_0_4_54)))
 (let ((?x5251 (* l_0_4_53 l_0_4_53)))
 (let ((?x5249 (* l_0_4_52 l_0_4_52)))
 (let ((?x4671 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4668 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4387 (* 2.0 l_0_4_21)))
 (let ((?x4665 (* ?x4387 l_0_4_24)))
 (let ((?x4384 (* 2.0 l_0_4_20)))
 (let ((?x4663 (* ?x4384 l_0_4_23)))
 (let ((?x4381 (* 2.0 l_0_4_19)))
 (let ((?x5581 (* ?x4381 l_0_4_22)))
 (let ((?x5809 (- (- (- (- (- (+ (+ ?x5581 ?x4663) ?x4665) ?x4668) ?x4671) ?x5249) ?x5251) ?x5253)))
 (= (+ (+ (+ (+ (- (- ?x5809 ?x5255) ?x4674) ?x5257) ?x5259) ?x5261) ?x5265) 0.0))))))))))))))))))))
(assert
 (let ((?x4734 (* l_0_4_9 l_0_4_9)))
 (let ((?x4732 (* l_0_4_8 l_0_4_8)))
 (let ((?x4730 (* l_0_4_7 l_0_4_7)))
 (let ((?x4728 (* l_0_4_25 l_0_4_25)))
 (let ((?x4726 (* l_0_4_24 l_0_4_24)))
 (let ((?x4724 (* l_0_4_23 l_0_4_23)))
 (let ((?x3958 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4724) ?x4726)))
 (= (- (- (- (+ ?x3958 ?x4728) ?x4730) ?x4732) ?x4734) 0.0)))))))))
(assert
 (= (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) 0.0))
(assert
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5208 (* ?x5207 l_0_4_35)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_34) ?x5208) 0.0))))
(assert
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5317 (* ?x5207 l_0_4_38)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_37) ?x5317) 0.0))))
(assert
 (let ((?x5207 (* 2.0 l_0_4_33)))
 (let ((?x5404 (* ?x5207 l_0_4_42)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_41) ?x5404) 0.0))))
(assert
 (let ((?x5594 (* 2.0 l_0_4_36)))
 (let ((?x5595 (* ?x5594 l_0_4_39)))
 (let ((?x5591 (* 2.0 l_0_4_35)))
 (let ((?x5592 (* ?x5591 l_0_4_38)))
 (= (- (- (* (* (- 2.0) l_0_4_34) l_0_4_37) ?x5592) ?x5595) 0.0))))))
(assert
 (let ((?x5594 (* 2.0 l_0_4_36)))
 (let ((?x3595 (* ?x5594 l_0_4_43)))
 (let ((?x5591 (* 2.0 l_0_4_35)))
 (let ((?x3597 (* ?x5591 l_0_4_42)))
 (= (- (- (* (* (- 2.0) l_0_4_34) l_0_4_41) ?x3597) ?x3595) 0.0))))))
(assert
 (let ((?x5661 (* l_0_4_40 l_0_4_40)))
 (let ((?x5658 (* l_0_4_39 l_0_4_39)))
 (let ((?x5851 (- (- (- (* (- l_0_4_37) l_0_4_37) (* l_0_4_38 l_0_4_38)) ?x5658) ?x5661)))
 (= ?x5851 0.0)))))
(assert
 (let ((?x5687 (* (* 2.0 l_0_4_40) l_0_4_44)))
 (let ((?x5684 (* (* 2.0 l_0_4_39) l_0_4_43)))
 (let ((?x5681 (* (* 2.0 l_0_4_38) l_0_4_42)))
 (= (- (- (- (* (* (- 2.0) l_0_4_37) l_0_4_41) ?x5681) ?x5684) ?x5687) 0.0)))))
(assert
 (let ((?x5732 (* l_0_4_45 l_0_4_45)))
 (let ((?x5729 (* l_0_4_44 l_0_4_44)))
 (let ((?x5726 (* l_0_4_43 l_0_4_43)))
 (let ((?x5879 (- (- (- (* (- l_0_4_41) l_0_4_41) (* l_0_4_42 l_0_4_42)) ?x5726) ?x5729)))
 (= (- ?x5879 ?x5732) 0.0))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_91 0.0))
(assert
 (>= l_0_4_93 0.0))
(assert
 (>= l_0_4_96 0.0))
(assert
 (>= l_0_4_100 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (= (* (- l_0_5_76) l_0_5_76) 0.0))
(assert
 (let ((?x5945 (* l_0_5_81 l_0_5_81)))
 (let ((?x5943 (* l_0_5_80 l_0_5_80)))
 (let ((?x5941 (* l_0_5_79 l_0_5_79)))
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x5939 (* ?x5938 l_0_5_64)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x5936 (* ?x5935 l_0_5_49)))
 (let ((?x5933 (* l_0_5_16 l_0_5_16)))
 (let ((?x5931 (* l_0_5_1 l_0_5_1)))
 (let ((?x5934 (- ?x5931 ?x5933)))
 (= (- (- (- (- (- (+ ?x5934 ?x5936) ?x5939) ?x5941) ?x5943) ?x5945) 1.0) 0.0))))))))))))
(assert
 (let ((?x5962 (* l_0_5_61 l_0_5_61)))
 (let ((?x5960 (* l_0_5_46 l_0_5_46)))
 (let ((?x5931 (* l_0_5_1 l_0_5_1)))
 (let ((?x1021 (* 2.0 ?x5931)))
 (let ((?x5966 (- (+ (- (- ?x1021 (* (* 2.0 l_0_5_16) l_0_5_16)) ?x5960) ?x5962) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= (- ?x5966 2.0) 0.0)))))))
(assert
 (let ((?x5933 (* l_0_5_16 l_0_5_16)))
 (let ((?x5931 (* l_0_5_1 l_0_5_1)))
 (let ((?x5934 (- ?x5931 ?x5933)))
 (let ((?x5981 (- (+ ?x5934 (* 1.0 (* l_0_5_31 l_0_5_31))) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= (- ?x5981 1.0) 0.0))))))
(assert
 (let ((?x5996 (- (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_16 l_0_5_16)) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= (+ ?x5996 1.0) 0.0)))
(assert
 (let ((?x6052 (* l_0_5_66 l_0_5_66)))
 (let ((?x6050 (* l_0_5_65 l_0_5_65)))
 (let ((?x6048 (* l_0_5_64 l_0_5_64)))
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6046 (* ?x6045 l_0_5_65)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6043 (* ?x6042 l_0_5_64)))
 (let ((?x6037 (* l_0_5_51 l_0_5_51)))
 (let ((?x6035 (* l_0_5_50 l_0_5_50)))
 (let ((?x6030 (* l_0_5_49 l_0_5_49)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6028 (* ?x6027 l_0_5_50)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6025 (* ?x6024 l_0_5_49)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6010 (* ?x4080 l_0_5_17)))
 (let ((?x6006 (* 2.0 l_0_5_1)))
 (let ((?x6009 (* ?x6006 l_0_5_2)))
 (let ((?x6017 (- (- (- ?x6009 ?x6010) (* (* 2.0 l_0_5_19) l_0_5_19)) (* (* 2.0 l_0_5_20) l_0_5_20))))
 (let ((?x6023 (+ (- ?x6017 (* (* 2.0 l_0_5_21) l_0_5_21)) (* 2.0 (* l_0_5_4 l_0_5_4)))))
 (let ((?x6034 (+ (- (+ (+ ?x6023 ?x6025) ?x6028) ?x6030) (* 2.0 (* l_0_5_5 l_0_5_5)))))
 (let ((?x6044 (- (+ (- (- ?x6034 ?x6035) ?x6037) (* 2.0 (* l_0_5_6 l_0_5_6))) ?x6043)))
 (= (+ (+ (+ (- ?x6044 ?x6046) ?x6048) ?x6050) ?x6052) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6052 (* l_0_5_66 l_0_5_66)))
 (let ((?x6050 (* l_0_5_65 l_0_5_65)))
 (let ((?x6048 (* l_0_5_64 l_0_5_64)))
 (let ((?x6037 (* l_0_5_51 l_0_5_51)))
 (let ((?x6035 (* l_0_5_50 l_0_5_50)))
 (let ((?x6030 (* l_0_5_49 l_0_5_49)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6096 (* ?x4080 l_0_5_19)))
 (let ((?x6097 (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x6096)))
 (= (- (- (- (+ (+ (+ ?x6097 ?x6030) ?x6035) ?x6037) ?x6048) ?x6050) ?x6052) 0.0)))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6127 (* ?x6126 l_0_5_69)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6124 (* ?x6123 l_0_5_68)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6121 (* ?x6120 l_0_5_67)))
 (let ((?x6039 (* l_0_5_6 l_0_5_6)))
 (let ((?x6116 (* 2.0 l_0_5_51)))
 (let ((?x6117 (* ?x6116 l_0_5_54)))
 (let ((?x6113 (* 2.0 l_0_5_50)))
 (let ((?x6114 (* ?x6113 l_0_5_53)))
 (let ((?x6032 (* l_0_5_5 l_0_5_5)))
 (let ((?x1102 (* 2.0 l_0_5_49)))
 (let ((?x4182 (* ?x1102 l_0_5_52)))
 (let ((?x6021 (* l_0_5_4 l_0_5_4)))
 (let ((?x1062 (* l_0_5_21 l_0_5_21)))
 (let ((?x2895 (* l_0_5_20 l_0_5_20)))
 (let ((?x1047 (* l_0_5_19 l_0_5_19)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x4194 (* ?x4080 l_0_5_22)))
 (let ((?x6006 (* 2.0 l_0_5_1)))
 (let ((?x572 (* ?x6006 l_0_5_7)))
 (let ((?x6112 (- (+ (- (+ (+ (+ (- ?x572 ?x4194) ?x1047) ?x2895) ?x1062) ?x6021) ?x4182) ?x6032)))
 (= (- (- (- (- (+ (+ ?x6112 ?x6114) ?x6117) ?x6039) ?x6121) ?x6124) ?x6127) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6186 (* ?x6126 l_0_5_73)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6184 (* ?x6123 l_0_5_72)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6182 (* ?x6120 l_0_5_71)))
 (let ((?x6039 (* l_0_5_6 l_0_5_6)))
 (let ((?x6116 (* 2.0 l_0_5_51)))
 (let ((?x6179 (* ?x6116 l_0_5_58)))
 (let ((?x6113 (* 2.0 l_0_5_50)))
 (let ((?x6177 (* ?x6113 l_0_5_57)))
 (let ((?x6032 (* l_0_5_5 l_0_5_5)))
 (let ((?x1102 (* 2.0 l_0_5_49)))
 (let ((?x6174 (* ?x1102 l_0_5_56)))
 (let ((?x6021 (* l_0_5_4 l_0_5_4)))
 (let ((?x1062 (* l_0_5_21 l_0_5_21)))
 (let ((?x2895 (* l_0_5_20 l_0_5_20)))
 (let ((?x1047 (* l_0_5_19 l_0_5_19)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6159 (* ?x4080 l_0_5_26)))
 (let ((?x6160 (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6159)))
 (let ((?x6166 (+ (- (- (- ?x6160 ?x1047) ?x2895) ?x1062) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x6172 (+ (+ ?x6166 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x6183 (- (+ (+ (+ (+ (+ (+ ?x6172 ?x6021) ?x6174) ?x6032) ?x6177) ?x6179) ?x6039) ?x6182)))
 (= (- (- ?x6183 ?x6184) ?x6186) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6225 (* l_0_5_3 l_0_5_3)))
 (let ((?x6223 (* l_0_5_2 l_0_5_2)))
 (let ((?x6226 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x6223) ?x6225)))
 (= ?x6226 0.0)))))
(assert
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6245 (* ?x6244 l_0_5_5)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6242 (* ?x6241 l_0_5_4)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6239 (* ?x6238 l_0_5_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x6239) ?x6242) ?x6245) 0.0))))))))
(assert
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6262 (* ?x6244 l_0_5_8)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6260 (* ?x6241 l_0_5_7)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6258 (* ?x6238 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6258) ?x6260) ?x6262) 0.0))))))))
(assert
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6284 (* ?x6238 l_0_5_27)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x6282 (* ?x6281 l_0_5_26)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6279 (* ?x6278 l_0_5_3)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6277 (* ?x6276 l_0_5_2)))
 (= (- (- (+ ?x6277 ?x6279) ?x6282) ?x6284) 0.0))))))))))
(assert
 (let ((?x6039 (* l_0_5_6 l_0_5_6)))
 (let ((?x6032 (* l_0_5_5 l_0_5_5)))
 (let ((?x6021 (* l_0_5_4 l_0_5_4)))
 (let ((?x1062 (* l_0_5_21 l_0_5_21)))
 (let ((?x6305 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x1062) ?x6021)))
 (= (+ (+ ?x6305 ?x6032) ?x6039) 0.0)))))))
(assert
 (let ((?x6321 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6318 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6315 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6018 (* 2.0 l_0_5_21)))
 (let ((?x1314 (* ?x6018 l_0_5_24)))
 (let ((?x6015 (* 2.0 l_0_5_20)))
 (let ((?x4237 (* ?x6015 l_0_5_23)))
 (let ((?x6319 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x4237) ?x1314) ?x6315) ?x6318)))
 (= (+ ?x6319 ?x6321) 0.0))))))))))
(assert
 (let ((?x6018 (* 2.0 l_0_5_21)))
 (let ((?x6355 (* ?x6018 l_0_5_28)))
 (let ((?x6015 (* 2.0 l_0_5_20)))
 (let ((?x6353 (* ?x6015 l_0_5_27)))
 (let ((?x6012 (* 2.0 l_0_5_19)))
 (let ((?x6351 (* ?x6012 l_0_5_26)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6349 (* ?x6342 l_0_5_6)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6339 (* ?x6278 l_0_5_5)))
 (let ((?x6354 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x6339) ?x6349) ?x6351) ?x6353)))
 (let ((?x6356 (- ?x6354 ?x6355)))
 (= ?x6356 0.0))))))))))))))
(assert
 (let ((?x6381 (* l_0_5_9 l_0_5_9)))
 (let ((?x6379 (* l_0_5_8 l_0_5_8)))
 (let ((?x6377 (* l_0_5_7 l_0_5_7)))
 (let ((?x6375 (* l_0_5_25 l_0_5_25)))
 (let ((?x6373 (* l_0_5_24 l_0_5_24)))
 (let ((?x6371 (* l_0_5_23 l_0_5_23)))
 (let ((?x6374 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6371) ?x6373)))
 (= (+ (+ (+ (- ?x6374 ?x6375) ?x6377) ?x6379) ?x6381) 0.0)))))))))
(assert
 (let ((?x6411 (* 2.0 l_0_5_25)))
 (let ((?x6412 (* ?x6411 l_0_5_29)))
 (let ((?x6408 (* 2.0 l_0_5_24)))
 (let ((?x6409 (* ?x6408 l_0_5_28)))
 (let ((?x6405 (* 2.0 l_0_5_23)))
 (let ((?x6406 (* ?x6405 l_0_5_27)))
 (let ((?x6402 (* 2.0 l_0_5_22)))
 (let ((?x6403 (* ?x6402 l_0_5_26)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6400 (* ?x6342 l_0_5_9)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6398 (* ?x6278 l_0_5_8)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6396 (* ?x6276 l_0_5_7)))
 (let ((?x6397 (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x6396)))
 (= (- (- (- (- (+ (+ ?x6397 ?x6398) ?x6400) ?x6403) ?x6406) ?x6409) ?x6412) 0.0)))))))))))))))))
(assert
 (let ((?x6170 (* l_0_5_36 l_0_5_36)))
 (let ((?x6167 (* l_0_5_35 l_0_5_35)))
 (let ((?x6164 (* l_0_5_34 l_0_5_34)))
 (let ((?x6453 (* l_0_5_30 l_0_5_30)))
 (let ((?x6451 (* l_0_5_29 l_0_5_29)))
 (let ((?x6449 (* l_0_5_28 l_0_5_28)))
 (let ((?x6447 (* l_0_5_27 l_0_5_27)))
 (let ((?x6445 (* l_0_5_26 l_0_5_26)))
 (let ((?x6443 (* l_0_5_15 l_0_5_15)))
 (let ((?x6441 (* l_0_5_14 l_0_5_14)))
 (let ((?x6439 (* l_0_5_13 l_0_5_13)))
 (let ((?x6442 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6439) ?x6441)))
 (let ((?x6454 (- (- (- (- (- (+ ?x6442 ?x6443) ?x6445) ?x6447) ?x6449) ?x6451) ?x6453)))
 (= (- (- (- ?x6454 ?x6164) ?x6167) ?x6170) 0.0)))))))))))))))
(assert
 (let ((?x6479 (* l_0_5_78 l_0_5_78)))
 (let ((?x6477 (* l_0_5_77 l_0_5_77)))
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x6475 (* ?x5938 l_0_5_62)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x6473 (* ?x5935 l_0_5_47)))
 (let ((?x6472 (- (* (* 4.0 l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_16) l_0_5_17))))
 (= (- (- (+ (- ?x6472 ?x6473) ?x6475) ?x6477) ?x6479) 0.0)))))))))
(assert
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x5939 (* ?x5938 l_0_5_64)))
 (let ((?x6475 (* ?x5938 l_0_5_62)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x5936 (* ?x5935 l_0_5_49)))
 (let ((?x6473 (* ?x5935 l_0_5_47)))
 (let ((?x6498 (- (* (* 4.0 l_0_5_1) l_0_5_4) (* (* 4.0 l_0_5_16) l_0_5_19))))
 (let ((?x6505 (- (+ (- (- (+ ?x6498 ?x6473) ?x5936) ?x6475) ?x5939) (* (* 2.0 l_0_5_77) l_0_5_79))))
 (= (- ?x6505 (* (* 2.0 l_0_5_78) l_0_5_80)) 0.0))))))))))
(assert
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x6523 (* ?x5938 l_0_5_67)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x6521 (* ?x5935 l_0_5_52)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6010 (* ?x4080 l_0_5_17)))
 (let ((?x6517 (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_1) l_0_5_7))))
 (let ((?x6524 (+ (- (- (+ ?x6517 ?x6010) (* (* 4.0 l_0_5_16) l_0_5_22)) ?x6521) ?x6523)))
 (let ((?x6528 (- (- ?x6524 (* (* 2.0 l_0_5_77) l_0_5_82)) (* (* 2.0 l_0_5_78) l_0_5_83))))
 (= ?x6528 0.0)))))))))))
(assert
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x6554 (* ?x5938 l_0_5_71)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x6552 (* ?x5935 l_0_5_56)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x6550 (* ?x6549 l_0_5_32)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6010 (* ?x4080 l_0_5_17)))
 (let ((?x6006 (* 2.0 l_0_5_1)))
 (let ((?x6009 (* ?x6006 l_0_5_2)))
 (let ((?x4440 (- (- (+ (* (* 4.0 l_0_5_1) l_0_5_11) ?x6009) ?x6010) (* (* 4.0 l_0_5_16) l_0_5_26))))
 (let ((?x6557 (- (+ (- (+ ?x4440 ?x6550) ?x6552) ?x6554) (* (* 2.0 l_0_5_77) l_0_5_86))))
 (= (- ?x6557 (* (* 2.0 l_0_5_78) l_0_5_87)) 0.0))))))))))))))
(assert
 (let ((?x6599 (* l_0_5_63 l_0_5_63)))
 (let ((?x6597 (* l_0_5_62 l_0_5_62)))
 (let ((?x6595 (* l_0_5_48 l_0_5_48)))
 (let ((?x6593 (* l_0_5_47 l_0_5_47)))
 (let ((?x6588 (- (* (* (- 2.0) l_0_5_17) l_0_5_17) (* (* 2.0 l_0_5_18) l_0_5_18))))
 (let ((?x6592 (+ (+ ?x6588 (* 2.0 (* l_0_5_2 l_0_5_2))) (* 2.0 (* l_0_5_3 l_0_5_3)))))
 (= (+ (+ (- (- ?x6592 ?x6593) ?x6595) ?x6597) ?x6599) 0.0))))))))
(assert
 (let ((?x6599 (* l_0_5_63 l_0_5_63)))
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6046 (* ?x6045 l_0_5_65)))
 (let ((?x6597 (* l_0_5_62 l_0_5_62)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6043 (* ?x6042 l_0_5_64)))
 (let ((?x6595 (* l_0_5_48 l_0_5_48)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6028 (* ?x6027 l_0_5_50)))
 (let ((?x6593 (* l_0_5_47 l_0_5_47)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6025 (* ?x6024 l_0_5_49)))
 (let ((?x6623 (- (* (* (- 4.0) l_0_5_17) l_0_5_19) (* (* 4.0 l_0_5_18) l_0_5_20))))
 (let ((?x6629 (+ (+ ?x6623 (* (* 4.0 l_0_5_2) l_0_5_4)) (* (* 4.0 l_0_5_3) l_0_5_5))))
 (let ((?x6636 (+ (- (+ (+ (- (+ (- ?x6629 ?x6025) ?x6593) ?x6028) ?x6595) ?x6043) ?x6597) ?x6046)))
 (= (- ?x6636 ?x6599) 0.0)))))))))))))))))
(assert
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6660 (* ?x6045 l_0_5_68)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6658 (* ?x6042 l_0_5_67)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6656 (* ?x6027 l_0_5_53)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6654 (* ?x6024 l_0_5_52)))
 (let ((?x6225 (* l_0_5_3 l_0_5_3)))
 (let ((?x6223 (* l_0_5_2 l_0_5_2)))
 (let ((?x6221 (* l_0_5_18 l_0_5_18)))
 (let ((?x1702 (- (+ (* (* (- 4.0) l_0_5_17) l_0_5_22) (* l_0_5_17 l_0_5_17)) (* (* 4.0 l_0_5_18) l_0_5_23))))
 (let ((?x6652 (+ (- (+ (+ ?x1702 ?x6221) (* (* 4.0 l_0_5_2) l_0_5_7)) ?x6223) (* (* 4.0 l_0_5_3) l_0_5_8))))
 (= (+ (+ (- (- (- ?x6652 ?x6225) ?x6654) ?x6656) ?x6658) ?x6660) 0.0)))))))))))))))
(assert
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6697 (* ?x6045 l_0_5_72)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6695 (* ?x6042 l_0_5_71)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6693 (* ?x6027 l_0_5_57)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6691 (* ?x6024 l_0_5_56)))
 (let ((?x6225 (* l_0_5_3 l_0_5_3)))
 (let ((?x6223 (* l_0_5_2 l_0_5_2)))
 (let ((?x6221 (* l_0_5_18 l_0_5_18)))
 (let ((?x4226 (* l_0_5_17 l_0_5_17)))
 (let ((?x6675 (+ (* (* 4.0 l_0_5_11) l_0_5_2) (* (* 4.0 l_0_5_12) l_0_5_3))))
 (let ((?x6681 (- (- (- ?x6675 (* (* 4.0 l_0_5_17) l_0_5_26)) ?x4226) (* (* 4.0 l_0_5_18) l_0_5_27))))
 (let ((?x6687 (+ (+ (+ (- ?x6681 ?x6221) ?x6223) ?x6225) (* 1.0 (* l_0_5_32 l_0_5_32)))))
 (let ((?x6696 (+ (- (- (+ ?x6687 (* 1.0 (* l_0_5_33 l_0_5_33))) ?x6691) ?x6693) ?x6695)))
 (= (+ ?x6696 ?x6697) 0.0))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6127 (* ?x6126 l_0_5_69)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6124 (* ?x6123 l_0_5_68)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6121 (* ?x6120 l_0_5_67)))
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6660 (* ?x6045 l_0_5_68)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6658 (* ?x6042 l_0_5_67)))
 (let ((?x6116 (* 2.0 l_0_5_51)))
 (let ((?x6117 (* ?x6116 l_0_5_54)))
 (let ((?x6113 (* 2.0 l_0_5_50)))
 (let ((?x6114 (* ?x6113 l_0_5_53)))
 (let ((?x1102 (* 2.0 l_0_5_49)))
 (let ((?x4182 (* ?x1102 l_0_5_52)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6656 (* ?x6027 l_0_5_53)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6654 (* ?x6024 l_0_5_52)))
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6245 (* ?x6244 l_0_5_5)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6242 (* ?x6241 l_0_5_4)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6239 (* ?x6238 l_0_5_20)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x1843 (* ?x6281 l_0_5_19)))
 (let ((?x6734 (- (- (- (+ ?x1843 ?x6239) (* (* 4.0 l_0_5_19) l_0_5_22)) ?x6242) (* (* 4.0 l_0_5_20) l_0_5_23))))
 (let ((?x6741 (+ (- (- ?x6734 (* (* 4.0 l_0_5_21) l_0_5_24)) ?x6245) (* (* 4.0 l_0_5_4) l_0_5_7))))
 (let ((?x6747 (+ (- (+ (+ ?x6741 ?x6654) ?x6656) ?x4182) (* (* 4.0 l_0_5_5) l_0_5_8))))
 (let ((?x6753 (- (+ (- (- ?x6747 ?x6114) ?x6117) (* (* 4.0 l_0_5_6) l_0_5_9)) ?x6658)))
 (= (+ (+ (+ (- ?x6753 ?x6660) ?x6121) ?x6124) ?x6127) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6186 (* ?x6126 l_0_5_73)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6184 (* ?x6123 l_0_5_72)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6182 (* ?x6120 l_0_5_71)))
 (let ((?x6045 (* 2.0 l_0_5_63)))
 (let ((?x6697 (* ?x6045 l_0_5_72)))
 (let ((?x6042 (* 2.0 l_0_5_62)))
 (let ((?x6695 (* ?x6042 l_0_5_71)))
 (let ((?x6116 (* 2.0 l_0_5_51)))
 (let ((?x6179 (* ?x6116 l_0_5_58)))
 (let ((?x6113 (* 2.0 l_0_5_50)))
 (let ((?x6177 (* ?x6113 l_0_5_57)))
 (let ((?x1102 (* 2.0 l_0_5_49)))
 (let ((?x6174 (* ?x1102 l_0_5_56)))
 (let ((?x6027 (* 2.0 l_0_5_48)))
 (let ((?x6693 (* ?x6027 l_0_5_57)))
 (let ((?x6024 (* 2.0 l_0_5_47)))
 (let ((?x6691 (* ?x6024 l_0_5_56)))
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6810 (* ?x6809 l_0_5_35)))
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6245 (* ?x6244 l_0_5_5)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6242 (* ?x6241 l_0_5_4)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6239 (* ?x6238 l_0_5_20)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x1843 (* ?x6281 l_0_5_19)))
 (let ((?x6792 (+ (* (* 4.0 l_0_5_11) l_0_5_4) (* (* 4.0 l_0_5_12) l_0_5_5))))
 (let ((?x6799 (- (- (- (+ ?x6792 (* (* 4.0 l_0_5_13) l_0_5_6)) ?x1843) ?x6239) (* (* 4.0 l_0_5_19) l_0_5_26))))
 (let ((?x6804 (- (- (+ ?x6799 ?x6242) (* (* 4.0 l_0_5_20) l_0_5_27)) (* (* 4.0 l_0_5_21) l_0_5_28))))
 (let ((?x6812 (+ (+ (+ (+ ?x6804 ?x6245) (* (* 2.0 l_0_5_32) l_0_5_34)) ?x6810) ?x6691)))
 (let ((?x6819 (+ (- (- (- (- (- (+ ?x6812 ?x6693) ?x6174) ?x6177) ?x6179) ?x6695) ?x6697) ?x6182)))
 (= (+ (+ ?x6819 ?x6184) ?x6186) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6865 (* l_0_5_70 l_0_5_70)))
 (let ((?x6861 (* l_0_5_69 l_0_5_69)))
 (let ((?x6859 (* l_0_5_68 l_0_5_68)))
 (let ((?x6857 (* l_0_5_67 l_0_5_67)))
 (let ((?x6855 (* l_0_5_55 l_0_5_55)))
 (let ((?x6853 (* l_0_5_54 l_0_5_54)))
 (let ((?x6851 (* l_0_5_53 l_0_5_53)))
 (let ((?x6849 (* l_0_5_52 l_0_5_52)))
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6262 (* ?x6244 l_0_5_8)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6260 (* ?x6241 l_0_5_7)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6258 (* ?x6238 l_0_5_23)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x2089 (* ?x6281 l_0_5_22)))
 (let ((?x6841 (- (- (+ (+ (* 2.0 (* l_0_5_10 l_0_5_10)) ?x2089) ?x6258) ?x6260) (* (* 2.0 l_0_5_22) l_0_5_22))))
 (let ((?x6845 (- (- ?x6841 (* (* 2.0 l_0_5_23) l_0_5_23)) (* (* 2.0 l_0_5_24) l_0_5_24))))
 (let ((?x6852 (- (- (- (- ?x6845 (* (* 2.0 l_0_5_25) l_0_5_25)) ?x6262) ?x6849) ?x6851)))
 (let ((?x6864 (+ (+ (+ (+ (- (- ?x6852 ?x6853) ?x6855) ?x6857) ?x6859) ?x6861) (* 2.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x6870 (+ (+ (+ ?x6864 ?x6865) (* 2.0 (* l_0_5_8 l_0_5_8))) (* 2.0 (* l_0_5_9 l_0_5_9)))))
 (= ?x6870 0.0)))))))))))))))))))))))
(assert
 (let ((?x6929 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6926 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6923 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6920 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6917 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6914 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6911 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6908 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6905 (* ?x6809 l_0_5_38)))
 (let ((?x6244 (* 2.0 l_0_5_3)))
 (let ((?x6262 (* ?x6244 l_0_5_8)))
 (let ((?x6241 (* 2.0 l_0_5_2)))
 (let ((?x6260 (* ?x6241 l_0_5_7)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6284 (* ?x6238 l_0_5_27)))
 (let ((?x6258 (* ?x6238 l_0_5_23)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x6282 (* ?x6281 l_0_5_26)))
 (let ((?x2089 (* ?x6281 l_0_5_22)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6279 (* ?x6278 l_0_5_3)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6277 (* ?x6276 l_0_5_2)))
 (let ((?x2094 (+ (- (* (* 4.0 l_0_5_10) l_0_5_14) ?x6277) (* (* 4.0 l_0_5_11) l_0_5_7))))
 (let ((?x6884 (+ (+ (- ?x2094 ?x6279) (* (* 4.0 l_0_5_12) l_0_5_8)) (* (* 4.0 l_0_5_13) l_0_5_9))))
 (let ((?x6892 (- (+ (+ (- (+ (- ?x6884 ?x2089) ?x6282) ?x6258) ?x6284) ?x6260) (* (* 4.0 l_0_5_22) l_0_5_26))))
 (let ((?x6898 (- (- ?x6892 (* (* 4.0 l_0_5_23) l_0_5_27)) (* (* 4.0 l_0_5_24) l_0_5_28))))
 (let ((?x6904 (+ (+ (- ?x6898 (* (* 4.0 l_0_5_25) l_0_5_29)) ?x6262) (* (* 2.0 l_0_5_32) l_0_5_37))))
 (let ((?x6924 (+ (+ (- (- (- (- (+ ?x6904 ?x6905) ?x6908) ?x6911) ?x6914) ?x6917) ?x6920) ?x6923)))
 (= (+ (+ ?x6924 ?x6926) ?x6929) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7019 (* l_0_5_75 l_0_5_75)))
 (let ((?x7017 (* l_0_5_74 l_0_5_74)))
 (let ((?x7015 (* l_0_5_73 l_0_5_73)))
 (let ((?x7013 (* l_0_5_72 l_0_5_72)))
 (let ((?x7011 (* l_0_5_71 l_0_5_71)))
 (let ((?x7009 (* l_0_5_60 l_0_5_60)))
 (let ((?x7007 (* l_0_5_59 l_0_5_59)))
 (let ((?x7005 (* l_0_5_58 l_0_5_58)))
 (let ((?x7003 (* l_0_5_57 l_0_5_57)))
 (let ((?x7001 (* l_0_5_56 l_0_5_56)))
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6999 (* ?x6809 l_0_5_42)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x6550 (* ?x6549 l_0_5_32)))
 (let ((?x6238 (* 2.0 l_0_5_18)))
 (let ((?x6284 (* ?x6238 l_0_5_27)))
 (let ((?x6281 (* 2.0 l_0_5_17)))
 (let ((?x6282 (* ?x6281 l_0_5_26)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6279 (* ?x6278 l_0_5_3)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6277 (* ?x6276 l_0_5_2)))
 (let ((?x6960 (+ (+ (+ ?x6277 (* 2.0 (* l_0_5_11 l_0_5_11))) ?x6279) (* 2.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x6976 (+ (+ ?x6960 (* 2.0 (* l_0_5_13 l_0_5_13))) (* 2.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x6983 (- (- (- (+ ?x6976 (* 2.0 (* l_0_5_15 l_0_5_15))) ?x6282) ?x6284) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x6989 (- (- ?x6983 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x6995 (- (- ?x6989 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x7002 (- (+ (+ (- ?x6995 ?x6550) (* (* 2.0 l_0_5_32) l_0_5_41)) ?x6999) ?x7001)))
 (let ((?x7016 (+ (+ (+ (- (- (- (- ?x7002 ?x7003) ?x7005) ?x7007) ?x7009) ?x7011) ?x7013) ?x7015)))
 (= (+ (+ ?x7016 ?x7017) ?x7019) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x6554 (* ?x5938 l_0_5_71)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x6552 (* ?x5935 l_0_5_56)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x7040 (* ?x6549 l_0_5_34)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6096 (* ?x4080 l_0_5_19)))
 (let ((?x6097 (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x6096)))
 (let ((?x7060 (- (- (+ (+ ?x6097 ?x7040) ?x6552) ?x6554) (* (* 2.0 l_0_5_79) l_0_5_86))))
 (let ((?x7066 (- (- ?x7060 (* (* 2.0 l_0_5_80) l_0_5_87)) (* (* 2.0 l_0_5_81) l_0_5_88))))
 (= ?x7066 0.0)))))))))))))
(assert
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x5135 (* ?x6549 l_0_5_37)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6159 (* ?x4080 l_0_5_26)))
 (let ((?x4194 (* ?x4080 l_0_5_22)))
 (let ((?x6006 (* 2.0 l_0_5_1)))
 (let ((?x572 (* ?x6006 l_0_5_7)))
 (let ((?x5138 (+ (+ (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x572) ?x4194) ?x6159) ?x5135)))
 (let ((?x7077 (- (- ?x5138 (* (* 2.0 l_0_5_82) l_0_5_86)) (* (* 2.0 l_0_5_83) l_0_5_87))))
 (let ((?x7083 (- (- ?x7077 (* (* 2.0 l_0_5_84) l_0_5_88)) (* (* 2.0 l_0_5_85) l_0_5_89))))
 (= ?x7083 0.0))))))))))))
(assert
 (let ((?x7116 (* l_0_5_90 l_0_5_90)))
 (let ((?x7114 (* l_0_5_89 l_0_5_89)))
 (let ((?x7112 (* l_0_5_88 l_0_5_88)))
 (let ((?x7110 (* l_0_5_87 l_0_5_87)))
 (let ((?x7108 (* l_0_5_86 l_0_5_86)))
 (let ((?x4121 (* l_0_5_31 l_0_5_31)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x7105 (* ?x6549 l_0_5_41)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6159 (* ?x4080 l_0_5_26)))
 (let ((?x6160 (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6159)))
 (let ((?x7117 (- (- (- (- (- (- (+ ?x6160 ?x7105) ?x4121) ?x7108) ?x7110) ?x7112) ?x7114) ?x7116)))
 (= ?x7117 0.0))))))))))))))
(assert
 (let ((?x6929 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6926 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6923 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6920 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6321 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6917 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6914 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6911 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6908 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6318 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6315 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7154 (* 2.0 l_0_5_36)))
 (let ((?x7155 (* ?x7154 l_0_5_39)))
 (let ((?x7151 (* 2.0 l_0_5_35)))
 (let ((?x7152 (* ?x7151 l_0_5_38)))
 (let ((?x6018 (* 2.0 l_0_5_21)))
 (let ((?x6355 (* ?x6018 l_0_5_28)))
 (let ((?x1314 (* ?x6018 l_0_5_24)))
 (let ((?x6015 (* 2.0 l_0_5_20)))
 (let ((?x6353 (* ?x6015 l_0_5_27)))
 (let ((?x4237 (* ?x6015 l_0_5_23)))
 (let ((?x6012 (* 2.0 l_0_5_19)))
 (let ((?x6351 (* ?x6012 l_0_5_26)))
 (let ((?x7141 (* ?x6012 l_0_5_22)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6349 (* ?x6342 l_0_5_6)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6339 (* ?x6278 l_0_5_5)))
 (let ((?x7143 (+ (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x6339) ?x6349) ?x7141) ?x6351)))
 (let ((?x7150 (+ (+ (- (+ (- ?x7143 ?x4237) ?x6353) ?x1314) ?x6355) (* (* 2.0 l_0_5_34) l_0_5_37))))
 (let ((?x7161 (+ (+ (+ (+ (+ (+ (+ ?x7150 ?x7152) ?x7155) ?x6315) ?x6318) ?x6908) ?x6911) ?x6914)))
 (= (- (- (- (- (+ (+ ?x7161 ?x6917) ?x6321) ?x6920) ?x6923) ?x6926) ?x6929) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x7019 (* l_0_5_75 l_0_5_75)))
 (let ((?x7017 (* l_0_5_74 l_0_5_74)))
 (let ((?x7015 (* l_0_5_73 l_0_5_73)))
 (let ((?x7013 (* l_0_5_72 l_0_5_72)))
 (let ((?x7011 (* l_0_5_71 l_0_5_71)))
 (let ((?x7009 (* l_0_5_60 l_0_5_60)))
 (let ((?x7007 (* l_0_5_59 l_0_5_59)))
 (let ((?x7005 (* l_0_5_58 l_0_5_58)))
 (let ((?x7003 (* l_0_5_57 l_0_5_57)))
 (let ((?x7001 (* l_0_5_56 l_0_5_56)))
 (let ((?x7154 (* 2.0 l_0_5_36)))
 (let ((?x5184 (* ?x7154 l_0_5_43)))
 (let ((?x7151 (* 2.0 l_0_5_35)))
 (let ((?x4507 (* ?x7151 l_0_5_42)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x7040 (* ?x6549 l_0_5_34)))
 (let ((?x6018 (* 2.0 l_0_5_21)))
 (let ((?x6355 (* ?x6018 l_0_5_28)))
 (let ((?x6015 (* 2.0 l_0_5_20)))
 (let ((?x6353 (* ?x6015 l_0_5_27)))
 (let ((?x6012 (* 2.0 l_0_5_19)))
 (let ((?x6351 (* ?x6012 l_0_5_26)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6349 (* ?x6342 l_0_5_6)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6339 (* ?x6278 l_0_5_5)))
 (let ((?x6354 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x6339) ?x6349) ?x6351) ?x6353)))
 (let ((?x6356 (- ?x6354 ?x6355)))
 (let ((?x2531 (+ (+ (+ (- ?x6356 ?x7040) (* (* 2.0 l_0_5_34) l_0_5_41)) ?x4507) ?x5184)))
 (let ((?x7175 (- (- (+ (+ (+ (+ (+ ?x2531 ?x7001) ?x7003) ?x7005) ?x7007) ?x7009) ?x7011) ?x7013)))
 (= (- (- (- ?x7175 ?x7015) ?x7017) ?x7019) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6381 (* l_0_5_9 l_0_5_9)))
 (let ((?x6379 (* l_0_5_8 l_0_5_8)))
 (let ((?x6377 (* l_0_5_7 l_0_5_7)))
 (let ((?x6375 (* l_0_5_25 l_0_5_25)))
 (let ((?x6411 (* 2.0 l_0_5_25)))
 (let ((?x6412 (* ?x6411 l_0_5_29)))
 (let ((?x6373 (* l_0_5_24 l_0_5_24)))
 (let ((?x6408 (* 2.0 l_0_5_24)))
 (let ((?x6409 (* ?x6408 l_0_5_28)))
 (let ((?x6371 (* l_0_5_23 l_0_5_23)))
 (let ((?x6405 (* 2.0 l_0_5_23)))
 (let ((?x6406 (* ?x6405 l_0_5_27)))
 (let ((?x6369 (* l_0_5_22 l_0_5_22)))
 (let ((?x6402 (* 2.0 l_0_5_22)))
 (let ((?x6403 (* ?x6402 l_0_5_26)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6400 (* ?x6342 l_0_5_9)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6398 (* ?x6278 l_0_5_8)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6396 (* ?x6276 l_0_5_7)))
 (let ((?x3001 (- (+ (* (* (- 2.0) l_0_5_10) l_0_5_14) (* l_0_5_10 l_0_5_10)) ?x6396)))
 (let ((?x2845 (+ (- (+ (- (+ (- (- ?x3001 ?x6398) ?x6400) ?x6403) ?x6369) ?x6406) ?x6371) ?x6409)))
 (let ((?x7195 (+ (- (+ (- ?x2845 ?x6373) ?x6412) ?x6375) (* 1.0 (* l_0_5_37 l_0_5_37)))))
 (let ((?x7201 (+ (+ ?x7195 (* 1.0 (* l_0_5_38 l_0_5_38))) (* 1.0 (* l_0_5_39 l_0_5_39)))))
 (let ((?x7207 (+ (+ (+ (+ ?x7201 (* 1.0 (* l_0_5_40 l_0_5_40))) ?x6377) ?x6379) ?x6381)))
 (= ?x7207 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7229 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x7226 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x7223 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x5135 (* ?x6549 l_0_5_37)))
 (let ((?x6453 (* l_0_5_30 l_0_5_30)))
 (let ((?x6451 (* l_0_5_29 l_0_5_29)))
 (let ((?x6449 (* l_0_5_28 l_0_5_28)))
 (let ((?x6447 (* l_0_5_27 l_0_5_27)))
 (let ((?x6445 (* l_0_5_26 l_0_5_26)))
 (let ((?x6411 (* 2.0 l_0_5_25)))
 (let ((?x6412 (* ?x6411 l_0_5_29)))
 (let ((?x6408 (* 2.0 l_0_5_24)))
 (let ((?x6409 (* ?x6408 l_0_5_28)))
 (let ((?x6405 (* 2.0 l_0_5_23)))
 (let ((?x6406 (* ?x6405 l_0_5_27)))
 (let ((?x6402 (* 2.0 l_0_5_22)))
 (let ((?x6403 (* ?x6402 l_0_5_26)))
 (let ((?x6443 (* l_0_5_15 l_0_5_15)))
 (let ((?x6441 (* l_0_5_14 l_0_5_14)))
 (let ((?x6439 (* l_0_5_13 l_0_5_13)))
 (let ((?x6342 (* 2.0 l_0_5_13)))
 (let ((?x6400 (* ?x6342 l_0_5_9)))
 (let ((?x6437 (* l_0_5_12 l_0_5_12)))
 (let ((?x6278 (* 2.0 l_0_5_12)))
 (let ((?x6398 (* ?x6278 l_0_5_8)))
 (let ((?x6436 (* l_0_5_11 l_0_5_11)))
 (let ((?x6276 (* 2.0 l_0_5_11)))
 (let ((?x6396 (* ?x6276 l_0_5_7)))
 (let ((?x6397 (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x6396)))
 (let ((?x3044 (- (- (- (+ (- (+ (- ?x6397 ?x6436) ?x6398) ?x6437) ?x6400) ?x6439) ?x6441) ?x6443)))
 (let ((?x7215 (+ (+ (+ (- (- (- (- ?x3044 ?x6403) ?x6406) ?x6409) ?x6412) ?x6445) ?x6447) ?x6449)))
 (let ((?x7221 (+ (- (+ (+ ?x7215 ?x6451) ?x6453) ?x5135) (* (* 2.0 l_0_5_37) l_0_5_41))))
 (= (+ (+ (+ ?x7221 ?x7223) ?x7226) ?x7229) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6549 (* 2.0 l_0_5_31)))
 (let ((?x7105 (* ?x6549 l_0_5_41)))
 (let ((?x6453 (* l_0_5_30 l_0_5_30)))
 (let ((?x6451 (* l_0_5_29 l_0_5_29)))
 (let ((?x6449 (* l_0_5_28 l_0_5_28)))
 (let ((?x6447 (* l_0_5_27 l_0_5_27)))
 (let ((?x6445 (* l_0_5_26 l_0_5_26)))
 (let ((?x6443 (* l_0_5_15 l_0_5_15)))
 (let ((?x6441 (* l_0_5_14 l_0_5_14)))
 (let ((?x6439 (* l_0_5_13 l_0_5_13)))
 (let ((?x6442 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6439) ?x6441)))
 (let ((?x6454 (- (- (- (- (- (+ ?x6442 ?x6443) ?x6445) ?x6447) ?x6449) ?x6451) ?x6453)))
 (let ((?x7260 (+ (+ (- ?x6454 ?x7105) (* 1.0 (* l_0_5_41 l_0_5_41))) (* 1.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x7266 (+ (+ ?x7260 (* 1.0 (* l_0_5_43 l_0_5_43))) (* 1.0 (* l_0_5_44 l_0_5_44)))))
 (= (+ ?x7266 (* 1.0 (* l_0_5_45 l_0_5_45))) 0.0))))))))))))))))
(assert
 (let ((?x5938 (* 2.0 l_0_5_61)))
 (let ((?x6523 (* ?x5938 l_0_5_67)))
 (let ((?x5935 (* 2.0 l_0_5_46)))
 (let ((?x6521 (* ?x5935 l_0_5_52)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x6096 (* ?x4080 l_0_5_19)))
 (let ((?x7281 (- (- (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x6096) ?x6521) ?x6523) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x7285 (- (- ?x7281 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x7285 0.0))))))))))
(assert
 (let ((?x7299 (* l_0_5_85 l_0_5_85)))
 (let ((?x7297 (* l_0_5_84 l_0_5_84)))
 (let ((?x7295 (* l_0_5_83 l_0_5_83)))
 (let ((?x7293 (* l_0_5_82 l_0_5_82)))
 (let ((?x4080 (* 2.0 l_0_5_16)))
 (let ((?x4194 (* ?x4080 l_0_5_22)))
 (let ((?x7298 (- (- (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x4194) ?x7293) ?x7295) ?x7297)))
 (= (- ?x7298 ?x7299) 0.0)))))))))
(assert
 (let ((?x6865 (* l_0_5_70 l_0_5_70)))
 (let ((?x6861 (* l_0_5_69 l_0_5_69)))
 (let ((?x6859 (* l_0_5_68 l_0_5_68)))
 (let ((?x6857 (* l_0_5_67 l_0_5_67)))
 (let ((?x6321 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6855 (* l_0_5_55 l_0_5_55)))
 (let ((?x6853 (* l_0_5_54 l_0_5_54)))
 (let ((?x6851 (* l_0_5_53 l_0_5_53)))
 (let ((?x6849 (* l_0_5_52 l_0_5_52)))
 (let ((?x6318 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6315 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6018 (* 2.0 l_0_5_21)))
 (let ((?x1314 (* ?x6018 l_0_5_24)))
 (let ((?x6015 (* 2.0 l_0_5_20)))
 (let ((?x4237 (* ?x6015 l_0_5_23)))
 (let ((?x6012 (* 2.0 l_0_5_19)))
 (let ((?x7141 (* ?x6012 l_0_5_22)))
 (let ((?x7317 (+ (+ (+ (- (- (+ (+ ?x7141 ?x4237) ?x1314) ?x6315) ?x6318) ?x6849) ?x6851) ?x6853)))
 (= (- (- (- (- (- (+ ?x7317 ?x6855) ?x6321) ?x6857) ?x6859) ?x6861) ?x6865) 0.0))))))))))))))))))))
(assert
 (let ((?x6381 (* l_0_5_9 l_0_5_9)))
 (let ((?x6379 (* l_0_5_8 l_0_5_8)))
 (let ((?x6377 (* l_0_5_7 l_0_5_7)))
 (let ((?x6375 (* l_0_5_25 l_0_5_25)))
 (let ((?x6373 (* l_0_5_24 l_0_5_24)))
 (let ((?x6371 (* l_0_5_23 l_0_5_23)))
 (let ((?x3272 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6371) ?x6373)))
 (= (- (- (- (+ ?x3272 ?x6375) ?x6377) ?x6379) ?x6381) 0.0)))))))))
(assert
 (= (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) 0.0))
(assert
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6810 (* ?x6809 l_0_5_35)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_34) ?x6810) 0.0))))
(assert
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6905 (* ?x6809 l_0_5_38)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_37) ?x6905) 0.0))))
(assert
 (let ((?x6809 (* 2.0 l_0_5_33)))
 (let ((?x6999 (* ?x6809 l_0_5_42)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_41) ?x6999) 0.0))))
(assert
 (let ((?x7154 (* 2.0 l_0_5_36)))
 (let ((?x7155 (* ?x7154 l_0_5_39)))
 (let ((?x7151 (* 2.0 l_0_5_35)))
 (let ((?x7152 (* ?x7151 l_0_5_38)))
 (= (- (- (* (* (- 2.0) l_0_5_34) l_0_5_37) ?x7152) ?x7155) 0.0))))))
(assert
 (let ((?x7154 (* 2.0 l_0_5_36)))
 (let ((?x5184 (* ?x7154 l_0_5_43)))
 (let ((?x7151 (* 2.0 l_0_5_35)))
 (let ((?x4507 (* ?x7151 l_0_5_42)))
 (= (- (- (* (* (- 2.0) l_0_5_34) l_0_5_41) ?x4507) ?x5184) 0.0))))))
(assert
 (let ((?x7202 (* l_0_5_40 l_0_5_40)))
 (let ((?x7199 (* l_0_5_39 l_0_5_39)))
 (let ((?x7361 (- (- (- (* (- l_0_5_37) l_0_5_37) (* l_0_5_38 l_0_5_38)) ?x7199) ?x7202)))
 (= ?x7361 0.0)))))
(assert
 (let ((?x7229 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x7226 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x7223 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (= (- (- (- (* (* (- 2.0) l_0_5_37) l_0_5_41) ?x7223) ?x7226) ?x7229) 0.0)))))
(assert
 (let ((?x7267 (* l_0_5_45 l_0_5_45)))
 (let ((?x7264 (* l_0_5_44 l_0_5_44)))
 (let ((?x7261 (* l_0_5_43 l_0_5_43)))
 (let ((?x7381 (- (- (- (* (- l_0_5_41) l_0_5_41) (* l_0_5_42 l_0_5_42)) ?x7261) ?x7264)))
 (= (- ?x7381 ?x7267) 0.0))))))
(assert
 (let ((?x3443 (- (- (* l_0_5_46 l_0_5_46) (* l_0_5_61 l_0_5_61)) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= ?x3443 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x7444 (* l_0_6_96 l_0_6_96)))
 (let ((?x7442 (* l_0_6_95 l_0_6_95)))
 (let ((?x7440 (* l_0_6_94 l_0_6_94)))
 (let ((?x7438 (* l_0_6_81 l_0_6_81)))
 (let ((?x7436 (* l_0_6_80 l_0_6_80)))
 (let ((?x7434 (* l_0_6_79 l_0_6_79)))
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x7432 (* ?x7431 l_0_6_64)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x7429 (* ?x7428 l_0_6_49)))
 (let ((?x7433 (- (+ (- (* l_0_6_1 l_0_6_1) (* l_0_6_16 l_0_6_16)) ?x7429) ?x7432)))
 (let ((?x7446 (+ (- (- (- (- (- (- ?x7433 ?x7434) ?x7436) ?x7438) ?x7440) ?x7442) ?x7444) 1.0)))
 (= ?x7446 0.0))))))))))))))
(assert
 (let ((?x7466 (* l_0_6_61 l_0_6_61)))
 (let ((?x7464 (* l_0_6_46 l_0_6_46)))
 (let ((?x7425 (* l_0_6_1 l_0_6_1)))
 (let ((?x5574 (* 2.0 ?x7425)))
 (let ((?x7470 (- (+ (- (- ?x5574 (* (* 2.0 l_0_6_16) l_0_6_16)) ?x7464) ?x7466) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x7470 (* (* 2.0 l_0_6_91) l_0_6_92)) 2.0) 0.0)))))))
(assert
 (= (- (* (- l_0_6_76) l_0_6_76) (* l_0_6_91 l_0_6_91)) 0.0))
(assert
 (let ((?x7426 (* l_0_6_16 l_0_6_16)))
 (let ((?x7491 (- (- (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_101) l_0_6_91)) ?x7426)))
 (let ((?x7496 (- (+ ?x7491 (* 1.0 (* l_0_6_31 l_0_6_31))) (* (* 2.0 l_0_6_76) l_0_6_86))))
 (= (+ ?x7496 1.0) 0.0)))))
(assert
 (let ((?x7515 (- (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_16 l_0_6_16)) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (- (- ?x7515 (* (* 2.0 l_0_6_91) l_0_6_97)) 1.0) 0.0)))
(assert
 (let ((?x7576 (* l_0_6_66 l_0_6_66)))
 (let ((?x7574 (* l_0_6_65 l_0_6_65)))
 (let ((?x7572 (* l_0_6_64 l_0_6_64)))
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x7570 (* ?x7569 l_0_6_65)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x7567 (* ?x7566 l_0_6_64)))
 (let ((?x7563 (* l_0_6_6 l_0_6_6)))
 (let ((?x7564 (* 2.0 ?x7563)))
 (let ((?x7561 (* l_0_6_51 l_0_6_51)))
 (let ((?x7559 (* l_0_6_50 l_0_6_50)))
 (let ((?x7556 (* l_0_6_5 l_0_6_5)))
 (let ((?x7557 (* 2.0 ?x7556)))
 (let ((?x7554 (* l_0_6_49 l_0_6_49)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x7552 (* ?x7551 l_0_6_50)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x7549 (* ?x7548 l_0_6_49)))
 (let ((?x7545 (* l_0_6_4 l_0_6_4)))
 (let ((?x7546 (* 2.0 ?x7545)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7534 (* ?x7461 l_0_6_17)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x7533 (* ?x7532 l_0_6_2)))
 (let ((?x7541 (- (- (- ?x7533 ?x7534) (* (* 2.0 l_0_6_19) l_0_6_19)) (* (* 2.0 l_0_6_20) l_0_6_20))))
 (let ((?x7553 (+ (+ (+ (- ?x7541 (* (* 2.0 l_0_6_21) l_0_6_21)) ?x7546) ?x7549) ?x7552)))
 (let ((?x7571 (- (- (+ (- (- (+ (- ?x7553 ?x7554) ?x7557) ?x7559) ?x7561) ?x7564) ?x7567) ?x7570)))
 (= (+ (+ (+ ?x7571 ?x7572) ?x7574) ?x7576) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7576 (* l_0_6_66 l_0_6_66)))
 (let ((?x7574 (* l_0_6_65 l_0_6_65)))
 (let ((?x7572 (* l_0_6_64 l_0_6_64)))
 (let ((?x7561 (* l_0_6_51 l_0_6_51)))
 (let ((?x7559 (* l_0_6_50 l_0_6_50)))
 (let ((?x7554 (* l_0_6_49 l_0_6_49)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7612 (* ?x7461 l_0_6_19)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x5633 (* ?x7532 l_0_6_4)))
 (let ((?x7619 (- (- (- (+ (+ (+ (- ?x5633 ?x7612) ?x7554) ?x7559) ?x7561) ?x7572) ?x7574) ?x7576)))
 (= ?x7619 0.0)))))))))))))
(assert
 (let ((?x7651 (* 2.0 l_0_6_66)))
 (let ((?x7652 (* ?x7651 l_0_6_69)))
 (let ((?x7648 (* 2.0 l_0_6_65)))
 (let ((?x7649 (* ?x7648 l_0_6_68)))
 (let ((?x7645 (* 2.0 l_0_6_64)))
 (let ((?x7646 (* ?x7645 l_0_6_67)))
 (let ((?x7563 (* l_0_6_6 l_0_6_6)))
 (let ((?x7641 (* 2.0 l_0_6_51)))
 (let ((?x7642 (* ?x7641 l_0_6_54)))
 (let ((?x7638 (* 2.0 l_0_6_50)))
 (let ((?x7639 (* ?x7638 l_0_6_53)))
 (let ((?x7556 (* l_0_6_5 l_0_6_5)))
 (let ((?x7634 (* 2.0 l_0_6_49)))
 (let ((?x7635 (* ?x7634 l_0_6_52)))
 (let ((?x7545 (* l_0_6_4 l_0_6_4)))
 (let ((?x5634 (* l_0_6_21 l_0_6_21)))
 (let ((?x3585 (* l_0_6_20 l_0_6_20)))
 (let ((?x5379 (* l_0_6_19 l_0_6_19)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x3733 (* ?x7461 l_0_6_22)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x3730 (* ?x7532 l_0_6_7)))
 (let ((?x7637 (- (+ (- (+ (+ (+ (- ?x3730 ?x3733) ?x5379) ?x3585) ?x5634) ?x7545) ?x7635) ?x7556)))
 (= (- (- (- (- (+ (+ ?x7637 ?x7639) ?x7642) ?x7563) ?x7646) ?x7649) ?x7652) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7651 (* 2.0 l_0_6_66)))
 (let ((?x7708 (* ?x7651 l_0_6_73)))
 (let ((?x7648 (* 2.0 l_0_6_65)))
 (let ((?x7706 (* ?x7648 l_0_6_72)))
 (let ((?x7645 (* 2.0 l_0_6_64)))
 (let ((?x7704 (* ?x7645 l_0_6_71)))
 (let ((?x7563 (* l_0_6_6 l_0_6_6)))
 (let ((?x7641 (* 2.0 l_0_6_51)))
 (let ((?x7701 (* ?x7641 l_0_6_58)))
 (let ((?x7638 (* 2.0 l_0_6_50)))
 (let ((?x7699 (* ?x7638 l_0_6_57)))
 (let ((?x7556 (* l_0_6_5 l_0_6_5)))
 (let ((?x7634 (* 2.0 l_0_6_49)))
 (let ((?x7696 (* ?x7634 l_0_6_56)))
 (let ((?x7545 (* l_0_6_4 l_0_6_4)))
 (let ((?x5634 (* l_0_6_21 l_0_6_21)))
 (let ((?x3585 (* l_0_6_20 l_0_6_20)))
 (let ((?x5379 (* l_0_6_19 l_0_6_19)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7681 (* ?x7461 l_0_6_26)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x7680 (* ?x7532 l_0_6_11)))
 (let ((?x7688 (+ (- (- (- (- ?x7680 ?x7681) ?x5379) ?x3585) ?x5634) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x7694 (+ (+ ?x7688 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x7705 (- (+ (+ (+ (+ (+ (+ ?x7694 ?x7545) ?x7696) ?x7556) ?x7699) ?x7701) ?x7563) ?x7704)))
 (= (- (- ?x7705 ?x7706) ?x7708) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7746 (* l_0_6_3 l_0_6_3)))
 (let ((?x7744 (* l_0_6_2 l_0_6_2)))
 (let ((?x7747 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x7744) ?x7746)))
 (= ?x7747 0.0)))))
(assert
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7764 (* ?x7763 l_0_6_5)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7761 (* ?x7760 l_0_6_4)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7758 (* ?x7757 l_0_6_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x7758) ?x7761) ?x7764) 0.0))))))))
(assert
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7787 (* ?x7763 l_0_6_8)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7785 (* ?x7760 l_0_6_7)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7778 (* ?x7757 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x7778) ?x7785) ?x7787) 0.0))))))))
(assert
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7805 (* ?x7757 l_0_6_27)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x7803 (* ?x7802 l_0_6_26)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7800 (* ?x7799 l_0_6_3)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x7798 (* ?x7797 l_0_6_2)))
 (= (- (- (+ ?x7798 ?x7800) ?x7803) ?x7805) 0.0))))))))))
(assert
 (let ((?x7563 (* l_0_6_6 l_0_6_6)))
 (let ((?x7556 (* l_0_6_5 l_0_6_5)))
 (let ((?x7545 (* l_0_6_4 l_0_6_4)))
 (let ((?x5634 (* l_0_6_21 l_0_6_21)))
 (let ((?x7827 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x5634) ?x7545)))
 (= (+ (+ ?x7827 ?x7556) ?x7563) 0.0)))))))
(assert
 (let ((?x7845 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7842 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7839 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7542 (* 2.0 l_0_6_21)))
 (let ((?x7836 (* ?x7542 l_0_6_24)))
 (let ((?x7539 (* 2.0 l_0_6_20)))
 (let ((?x7834 (* ?x7539 l_0_6_23)))
 (let ((?x7843 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x7834) ?x7836) ?x7839) ?x7842)))
 (= (+ ?x7843 ?x7845) 0.0))))))))))
(assert
 (let ((?x7542 (* 2.0 l_0_6_21)))
 (let ((?x7867 (* ?x7542 l_0_6_28)))
 (let ((?x7539 (* 2.0 l_0_6_20)))
 (let ((?x7865 (* ?x7539 l_0_6_27)))
 (let ((?x7536 (* 2.0 l_0_6_19)))
 (let ((?x7863 (* ?x7536 l_0_6_26)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7861 (* ?x7860 l_0_6_6)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7858 (* ?x7799 l_0_6_5)))
 (let ((?x7866 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x7858) ?x7861) ?x7863) ?x7865)))
 (let ((?x7868 (- ?x7866 ?x7867)))
 (= ?x7868 0.0))))))))))))))
(assert
 (let ((?x7900 (* l_0_6_9 l_0_6_9)))
 (let ((?x7898 (* l_0_6_8 l_0_6_8)))
 (let ((?x7896 (* l_0_6_7 l_0_6_7)))
 (let ((?x7894 (* l_0_6_25 l_0_6_25)))
 (let ((?x7892 (* l_0_6_24 l_0_6_24)))
 (let ((?x7890 (* l_0_6_23 l_0_6_23)))
 (let ((?x7893 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7890) ?x7892)))
 (= (+ (+ (+ (- ?x7893 ?x7894) ?x7896) ?x7898) ?x7900) 0.0)))))))))
(assert
 (let ((?x7919 (* 2.0 l_0_6_25)))
 (let ((?x7920 (* ?x7919 l_0_6_29)))
 (let ((?x7916 (* 2.0 l_0_6_24)))
 (let ((?x7917 (* ?x7916 l_0_6_28)))
 (let ((?x7913 (* 2.0 l_0_6_23)))
 (let ((?x7914 (* ?x7913 l_0_6_27)))
 (let ((?x7910 (* 2.0 l_0_6_22)))
 (let ((?x7911 (* ?x7910 l_0_6_26)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7908 (* ?x7860 l_0_6_9)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7906 (* ?x7799 l_0_6_8)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x5803 (* ?x7797 l_0_6_7)))
 (let ((?x7905 (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x5803)))
 (= (- (- (- (- (+ (+ ?x7905 ?x7906) ?x7908) ?x7911) ?x7914) ?x7917) ?x7920) 0.0)))))))))))))))))
(assert
 (let ((?x7692 (* l_0_6_36 l_0_6_36)))
 (let ((?x7689 (* l_0_6_35 l_0_6_35)))
 (let ((?x7686 (* l_0_6_34 l_0_6_34)))
 (let ((?x7972 (* l_0_6_30 l_0_6_30)))
 (let ((?x7970 (* l_0_6_29 l_0_6_29)))
 (let ((?x7968 (* l_0_6_28 l_0_6_28)))
 (let ((?x7966 (* l_0_6_27 l_0_6_27)))
 (let ((?x7964 (* l_0_6_26 l_0_6_26)))
 (let ((?x7962 (* l_0_6_15 l_0_6_15)))
 (let ((?x7960 (* l_0_6_14 l_0_6_14)))
 (let ((?x7958 (* l_0_6_13 l_0_6_13)))
 (let ((?x7961 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7958) ?x7960)))
 (let ((?x7973 (- (- (- (- (- (+ ?x7961 ?x7962) ?x7964) ?x7966) ?x7968) ?x7970) ?x7972)))
 (= (- (- (- ?x7973 ?x7686) ?x7689) ?x7692) 0.0)))))))))))))))
(assert
 (let ((?x8001 (* l_0_6_93 l_0_6_93)))
 (let ((?x7999 (* l_0_6_92 l_0_6_92)))
 (let ((?x7997 (* l_0_6_78 l_0_6_78)))
 (let ((?x7995 (* l_0_6_77 l_0_6_77)))
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x7993 (* ?x7431 l_0_6_62)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x7991 (* ?x7428 l_0_6_47)))
 (let ((?x7990 (- (* (* 4.0 l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_16) l_0_6_17))))
 (= (- (- (- (- (+ (- ?x7990 ?x7991) ?x7993) ?x7995) ?x7997) ?x7999) ?x8001) 0.0)))))))))))
(assert
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x7432 (* ?x7431 l_0_6_64)))
 (let ((?x7993 (* ?x7431 l_0_6_62)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x7429 (* ?x7428 l_0_6_49)))
 (let ((?x7991 (* ?x7428 l_0_6_47)))
 (let ((?x8023 (- (* (* 4.0 l_0_6_1) l_0_6_4) (* (* 4.0 l_0_6_16) l_0_6_19))))
 (let ((?x8030 (- (+ (- (- (+ ?x8023 ?x7991) ?x7429) ?x7993) ?x7432) (* (* 2.0 l_0_6_77) l_0_6_79))))
 (let ((?x8036 (- (- ?x8030 (* (* 2.0 l_0_6_78) l_0_6_80)) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- ?x8036 (* (* 2.0 l_0_6_93) l_0_6_95)) 0.0)))))))))))
(assert
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x8074 (* ?x7431 l_0_6_67)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x8072 (* ?x7428 l_0_6_52)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7534 (* ?x7461 l_0_6_17)))
 (let ((?x8068 (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_1) l_0_6_7))))
 (let ((?x8075 (+ (- (- (+ ?x8068 ?x7534) (* (* 4.0 l_0_6_16) l_0_6_22)) ?x8072) ?x8074)))
 (let ((?x8079 (- (- ?x8075 (* (* 2.0 l_0_6_77) l_0_6_82)) (* (* 2.0 l_0_6_78) l_0_6_83))))
 (let ((?x8083 (- (- ?x8079 (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x8083 0.0))))))))))))
(assert
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x8128 (* ?x7431 l_0_6_71)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x8126 (* ?x7428 l_0_6_56)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8124 (* ?x8123 l_0_6_32)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7534 (* ?x7461 l_0_6_17)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x7533 (* ?x7532 l_0_6_2)))
 (let ((?x8116 (- (+ (* (* 4.0 l_0_6_1) l_0_6_11) ?x7533) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x8122 (- (- (- ?x8116 (* (* 2.0 l_0_6_102) l_0_6_93)) ?x7534) (* (* 4.0 l_0_6_16) l_0_6_26))))
 (let ((?x8131 (- (+ (- (+ ?x8122 ?x8124) ?x8126) ?x8128) (* (* 2.0 l_0_6_77) l_0_6_86))))
 (= (- ?x8131 (* (* 2.0 l_0_6_78) l_0_6_87)) 0.0)))))))))))))))
(assert
 (let ((?x8175 (* l_0_6_63 l_0_6_63)))
 (let ((?x8173 (* l_0_6_62 l_0_6_62)))
 (let ((?x8171 (* l_0_6_48 l_0_6_48)))
 (let ((?x8169 (* l_0_6_47 l_0_6_47)))
 (let ((?x7746 (* l_0_6_3 l_0_6_3)))
 (let ((?x8167 (* 2.0 ?x7746)))
 (let ((?x7744 (* l_0_6_2 l_0_6_2)))
 (let ((?x8165 (* 2.0 ?x7744)))
 (let ((?x8164 (- (* (* (- 2.0) l_0_6_17) l_0_6_17) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (= (+ (+ (- (- (+ (+ ?x8164 ?x8165) ?x8167) ?x8169) ?x8171) ?x8173) ?x8175) 0.0)))))))))))
(assert
 (let ((?x8175 (* l_0_6_63 l_0_6_63)))
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x7570 (* ?x7569 l_0_6_65)))
 (let ((?x8173 (* l_0_6_62 l_0_6_62)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x7567 (* ?x7566 l_0_6_64)))
 (let ((?x8171 (* l_0_6_48 l_0_6_48)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x7552 (* ?x7551 l_0_6_50)))
 (let ((?x8169 (* l_0_6_47 l_0_6_47)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x7549 (* ?x7548 l_0_6_49)))
 (let ((?x8192 (- (* (* (- 4.0) l_0_6_17) l_0_6_19) (* (* 4.0 l_0_6_18) l_0_6_20))))
 (let ((?x8198 (+ (+ ?x8192 (* (* 4.0 l_0_6_2) l_0_6_4)) (* (* 4.0 l_0_6_3) l_0_6_5))))
 (let ((?x8205 (+ (- (+ (+ (- (+ (- ?x8198 ?x7549) ?x8169) ?x7552) ?x8171) ?x7567) ?x8173) ?x7570)))
 (= (- ?x8205 ?x8175) 0.0)))))))))))))))))
(assert
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x8232 (* ?x7569 l_0_6_68)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x8230 (* ?x7566 l_0_6_67)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x8228 (* ?x7551 l_0_6_53)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x8226 (* ?x7548 l_0_6_52)))
 (let ((?x7746 (* l_0_6_3 l_0_6_3)))
 (let ((?x7744 (* l_0_6_2 l_0_6_2)))
 (let ((?x7742 (* l_0_6_18 l_0_6_18)))
 (let ((?x5988 (- (+ (* (* (- 4.0) l_0_6_17) l_0_6_22) (* l_0_6_17 l_0_6_17)) (* (* 4.0 l_0_6_18) l_0_6_23))))
 (let ((?x8224 (+ (- (+ (+ ?x5988 ?x7742) (* (* 4.0 l_0_6_2) l_0_6_7)) ?x7744) (* (* 4.0 l_0_6_3) l_0_6_8))))
 (= (+ (+ (- (- (- ?x8224 ?x7746) ?x8226) ?x8228) ?x8230) ?x8232) 0.0)))))))))))))))
(assert
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x8265 (* ?x7569 l_0_6_72)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x8263 (* ?x7566 l_0_6_71)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x8261 (* ?x7551 l_0_6_57)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x8259 (* ?x7548 l_0_6_56)))
 (let ((?x7746 (* l_0_6_3 l_0_6_3)))
 (let ((?x7744 (* l_0_6_2 l_0_6_2)))
 (let ((?x7742 (* l_0_6_18 l_0_6_18)))
 (let ((?x7750 (* l_0_6_17 l_0_6_17)))
 (let ((?x8243 (+ (* (* 4.0 l_0_6_11) l_0_6_2) (* (* 4.0 l_0_6_12) l_0_6_3))))
 (let ((?x8249 (- (- (- ?x8243 (* (* 4.0 l_0_6_17) l_0_6_26)) ?x7750) (* (* 4.0 l_0_6_18) l_0_6_27))))
 (let ((?x8255 (+ (+ (+ (- ?x8249 ?x7742) ?x7744) ?x7746) (* 1.0 (* l_0_6_32 l_0_6_32)))))
 (let ((?x8264 (+ (- (- (+ ?x8255 (* 1.0 (* l_0_6_33 l_0_6_33))) ?x8259) ?x8261) ?x8263)))
 (= (+ ?x8264 ?x8265) 0.0))))))))))))))))))
(assert
 (let ((?x7651 (* 2.0 l_0_6_66)))
 (let ((?x7652 (* ?x7651 l_0_6_69)))
 (let ((?x7648 (* 2.0 l_0_6_65)))
 (let ((?x7649 (* ?x7648 l_0_6_68)))
 (let ((?x7645 (* 2.0 l_0_6_64)))
 (let ((?x7646 (* ?x7645 l_0_6_67)))
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x8232 (* ?x7569 l_0_6_68)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x8230 (* ?x7566 l_0_6_67)))
 (let ((?x7641 (* 2.0 l_0_6_51)))
 (let ((?x7642 (* ?x7641 l_0_6_54)))
 (let ((?x7638 (* 2.0 l_0_6_50)))
 (let ((?x7639 (* ?x7638 l_0_6_53)))
 (let ((?x7634 (* 2.0 l_0_6_49)))
 (let ((?x7635 (* ?x7634 l_0_6_52)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x8228 (* ?x7551 l_0_6_53)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x8226 (* ?x7548 l_0_6_52)))
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7764 (* ?x7763 l_0_6_5)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7761 (* ?x7760 l_0_6_4)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7758 (* ?x7757 l_0_6_20)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x1128 (* ?x7802 l_0_6_19)))
 (let ((?x8298 (- (- (- (+ ?x1128 ?x7758) (* (* 4.0 l_0_6_19) l_0_6_22)) ?x7761) (* (* 4.0 l_0_6_20) l_0_6_23))))
 (let ((?x8305 (+ (- (- ?x8298 (* (* 4.0 l_0_6_21) l_0_6_24)) ?x7764) (* (* 4.0 l_0_6_4) l_0_6_7))))
 (let ((?x8311 (+ (- (+ (+ ?x8305 ?x8226) ?x8228) ?x7635) (* (* 4.0 l_0_6_5) l_0_6_8))))
 (let ((?x8317 (- (+ (- (- ?x8311 ?x7639) ?x7642) (* (* 4.0 l_0_6_6) l_0_6_9)) ?x8230)))
 (= (+ (+ (+ (- ?x8317 ?x8232) ?x7646) ?x7649) ?x7652) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7651 (* 2.0 l_0_6_66)))
 (let ((?x7708 (* ?x7651 l_0_6_73)))
 (let ((?x7648 (* 2.0 l_0_6_65)))
 (let ((?x7706 (* ?x7648 l_0_6_72)))
 (let ((?x7645 (* 2.0 l_0_6_64)))
 (let ((?x7704 (* ?x7645 l_0_6_71)))
 (let ((?x7569 (* 2.0 l_0_6_63)))
 (let ((?x8265 (* ?x7569 l_0_6_72)))
 (let ((?x7566 (* 2.0 l_0_6_62)))
 (let ((?x8263 (* ?x7566 l_0_6_71)))
 (let ((?x7641 (* 2.0 l_0_6_51)))
 (let ((?x7701 (* ?x7641 l_0_6_58)))
 (let ((?x7638 (* 2.0 l_0_6_50)))
 (let ((?x7699 (* ?x7638 l_0_6_57)))
 (let ((?x7634 (* 2.0 l_0_6_49)))
 (let ((?x7696 (* ?x7634 l_0_6_56)))
 (let ((?x7551 (* 2.0 l_0_6_48)))
 (let ((?x8261 (* ?x7551 l_0_6_57)))
 (let ((?x7548 (* 2.0 l_0_6_47)))
 (let ((?x8259 (* ?x7548 l_0_6_56)))
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8362 (* ?x8361 l_0_6_35)))
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7764 (* ?x7763 l_0_6_5)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7761 (* ?x7760 l_0_6_4)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7758 (* ?x7757 l_0_6_20)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x1128 (* ?x7802 l_0_6_19)))
 (let ((?x4219 (+ (* (* 4.0 l_0_6_11) l_0_6_4) (* (* 4.0 l_0_6_12) l_0_6_5))))
 (let ((?x8351 (- (- (- (+ ?x4219 (* (* 4.0 l_0_6_13) l_0_6_6)) ?x1128) ?x7758) (* (* 4.0 l_0_6_19) l_0_6_26))))
 (let ((?x8356 (- (- (+ ?x8351 ?x7761) (* (* 4.0 l_0_6_20) l_0_6_27)) (* (* 4.0 l_0_6_21) l_0_6_28))))
 (let ((?x8364 (+ (+ (+ (+ ?x8356 ?x7764) (* (* 2.0 l_0_6_32) l_0_6_34)) ?x8362) ?x8259)))
 (let ((?x8371 (+ (- (- (- (- (- (+ ?x8364 ?x8261) ?x7696) ?x7699) ?x7701) ?x8263) ?x8265) ?x7704)))
 (= (+ (+ ?x8371 ?x7706) ?x7708) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8422 (* l_0_6_70 l_0_6_70)))
 (let ((?x8418 (* l_0_6_69 l_0_6_69)))
 (let ((?x8416 (* l_0_6_68 l_0_6_68)))
 (let ((?x8414 (* l_0_6_67 l_0_6_67)))
 (let ((?x8412 (* l_0_6_55 l_0_6_55)))
 (let ((?x8410 (* l_0_6_54 l_0_6_54)))
 (let ((?x8408 (* l_0_6_53 l_0_6_53)))
 (let ((?x8406 (* l_0_6_52 l_0_6_52)))
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7787 (* ?x7763 l_0_6_8)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7785 (* ?x7760 l_0_6_7)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7778 (* ?x7757 l_0_6_23)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x4327 (* ?x7802 l_0_6_22)))
 (let ((?x7887 (* l_0_6_10 l_0_6_10)))
 (let ((?x1498 (* 2.0 ?x7887)))
 (let ((?x8398 (- (- (+ (+ ?x1498 ?x4327) ?x7778) ?x7785) (* (* 2.0 l_0_6_22) l_0_6_22))))
 (let ((?x8402 (- (- ?x8398 (* (* 2.0 l_0_6_23) l_0_6_23)) (* (* 2.0 l_0_6_24) l_0_6_24))))
 (let ((?x8409 (- (- (- (- ?x8402 (* (* 2.0 l_0_6_25) l_0_6_25)) ?x7787) ?x8406) ?x8408)))
 (let ((?x8421 (+ (+ (+ (+ (- (- ?x8409 ?x8410) ?x8412) ?x8414) ?x8416) ?x8418) (* 2.0 (* l_0_6_7 l_0_6_7)))))
 (let ((?x8427 (+ (+ (+ ?x8421 ?x8422) (* 2.0 (* l_0_6_8 l_0_6_8))) (* 2.0 (* l_0_6_9 l_0_6_9)))))
 (= ?x8427 0.0)))))))))))))))))))))))))
(assert
 (let ((?x8487 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x8484 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x8481 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x8478 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x8475 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8472 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8469 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8466 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8463 (* ?x8361 l_0_6_38)))
 (let ((?x7763 (* 2.0 l_0_6_3)))
 (let ((?x7787 (* ?x7763 l_0_6_8)))
 (let ((?x7760 (* 2.0 l_0_6_2)))
 (let ((?x7785 (* ?x7760 l_0_6_7)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7805 (* ?x7757 l_0_6_27)))
 (let ((?x7778 (* ?x7757 l_0_6_23)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x7803 (* ?x7802 l_0_6_26)))
 (let ((?x4327 (* ?x7802 l_0_6_22)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7800 (* ?x7799 l_0_6_3)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x7798 (* ?x7797 l_0_6_2)))
 (let ((?x8437 (+ (- (* (* 4.0 l_0_6_10) l_0_6_14) ?x7798) (* (* 4.0 l_0_6_11) l_0_6_7))))
 (let ((?x8442 (+ (+ (- ?x8437 ?x7800) (* (* 4.0 l_0_6_12) l_0_6_8)) (* (* 4.0 l_0_6_13) l_0_6_9))))
 (let ((?x8450 (- (+ (+ (- (+ (- ?x8442 ?x4327) ?x7803) ?x7778) ?x7805) ?x7785) (* (* 4.0 l_0_6_22) l_0_6_26))))
 (let ((?x8456 (- (- ?x8450 (* (* 4.0 l_0_6_23) l_0_6_27)) (* (* 4.0 l_0_6_24) l_0_6_28))))
 (let ((?x8462 (+ (+ (- ?x8456 (* (* 4.0 l_0_6_25) l_0_6_29)) ?x7787) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (let ((?x8482 (+ (+ (- (- (- (- (+ ?x8462 ?x8463) ?x8466) ?x8469) ?x8472) ?x8475) ?x8478) ?x8481)))
 (= (+ (+ ?x8482 ?x8484) ?x8487) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8567 (* l_0_6_75 l_0_6_75)))
 (let ((?x8565 (* l_0_6_74 l_0_6_74)))
 (let ((?x8563 (* l_0_6_73 l_0_6_73)))
 (let ((?x8561 (* l_0_6_72 l_0_6_72)))
 (let ((?x8559 (* l_0_6_71 l_0_6_71)))
 (let ((?x8557 (* l_0_6_60 l_0_6_60)))
 (let ((?x8555 (* l_0_6_59 l_0_6_59)))
 (let ((?x8553 (* l_0_6_58 l_0_6_58)))
 (let ((?x8551 (* l_0_6_57 l_0_6_57)))
 (let ((?x8549 (* l_0_6_56 l_0_6_56)))
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8547 (* ?x8361 l_0_6_42)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8124 (* ?x8123 l_0_6_32)))
 (let ((?x7757 (* 2.0 l_0_6_18)))
 (let ((?x7805 (* ?x7757 l_0_6_27)))
 (let ((?x7802 (* 2.0 l_0_6_17)))
 (let ((?x7803 (* ?x7802 l_0_6_26)))
 (let ((?x7962 (* l_0_6_15 l_0_6_15)))
 (let ((?x8525 (* 2.0 ?x7962)))
 (let ((?x7960 (* l_0_6_14 l_0_6_14)))
 (let ((?x8523 (* 2.0 ?x7960)))
 (let ((?x7958 (* l_0_6_13 l_0_6_13)))
 (let ((?x8521 (* 2.0 ?x7958)))
 (let ((?x7956 (* l_0_6_12 l_0_6_12)))
 (let ((?x8519 (* 2.0 ?x7956)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7800 (* ?x7799 l_0_6_3)))
 (let ((?x7955 (* l_0_6_11 l_0_6_11)))
 (let ((?x8516 (* 2.0 ?x7955)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x7798 (* ?x7797 l_0_6_2)))
 (let ((?x8527 (- (+ (+ (+ (+ (+ (+ ?x7798 ?x8516) ?x7800) ?x8519) ?x8521) ?x8523) ?x8525) ?x7803)))
 (let ((?x8534 (- (- (- ?x8527 ?x7805) (* (* 2.0 l_0_6_26) l_0_6_26)) (* (* 2.0 l_0_6_27) l_0_6_27))))
 (let ((?x8540 (- (- ?x8534 (* (* 2.0 l_0_6_28) l_0_6_28)) (* (* 2.0 l_0_6_29) l_0_6_29))))
 (let ((?x8546 (+ (- (- ?x8540 (* (* 2.0 l_0_6_30) l_0_6_30)) ?x8124) (* (* 2.0 l_0_6_32) l_0_6_41))))
 (let ((?x8560 (+ (- (- (- (- (- (+ ?x8546 ?x8547) ?x8549) ?x8551) ?x8553) ?x8555) ?x8557) ?x8559)))
 (= (+ (+ (+ (+ ?x8560 ?x8561) ?x8563) ?x8565) ?x8567) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x8128 (* ?x7431 l_0_6_71)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x8126 (* ?x7428 l_0_6_56)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8600 (* ?x8123 l_0_6_34)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7612 (* ?x7461 l_0_6_19)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x5633 (* ?x7532 l_0_6_4)))
 (let ((?x8595 (- (- ?x5633 (* (* 2.0 l_0_6_101) l_0_6_94)) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x8602 (+ (+ (- (- ?x8595 (* (* 2.0 l_0_6_103) l_0_6_96)) ?x7612) ?x8600) ?x8126)))
 (let ((?x8609 (- (- (- ?x8602 ?x8128) (* (* 2.0 l_0_6_79) l_0_6_86)) (* (* 2.0 l_0_6_80) l_0_6_87))))
 (= (- ?x8609 (* (* 2.0 l_0_6_81) l_0_6_88)) 0.0)))))))))))))))
(assert
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8634 (* ?x8123 l_0_6_37)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7681 (* ?x7461 l_0_6_26)))
 (let ((?x3733 (* ?x7461 l_0_6_22)))
 (let ((?x7532 (* 2.0 l_0_6_1)))
 (let ((?x3730 (* ?x7532 l_0_6_7)))
 (let ((?x8625 (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) ?x3730) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x8629 (- (- ?x8625 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x8635 (+ (+ (- (- ?x8629 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x3733) ?x7681) ?x8634)))
 (let ((?x8641 (- (- ?x8635 (* (* 2.0 l_0_6_82) l_0_6_86)) (* (* 2.0 l_0_6_83) l_0_6_87))))
 (let ((?x8647 (- (- ?x8641 (* (* 2.0 l_0_6_84) l_0_6_88)) (* (* 2.0 l_0_6_85) l_0_6_89))))
 (= ?x8647 0.0))))))))))))))
(assert
 (let ((?x8679 (* l_0_6_90 l_0_6_90)))
 (let ((?x8677 (* l_0_6_89 l_0_6_89)))
 (let ((?x8675 (* l_0_6_88 l_0_6_88)))
 (let ((?x8673 (* l_0_6_87 l_0_6_87)))
 (let ((?x8671 (* l_0_6_86 l_0_6_86)))
 (let ((?x7492 (* l_0_6_31 l_0_6_31)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8668 (* ?x8123 l_0_6_41)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7681 (* ?x7461 l_0_6_26)))
 (let ((?x8665 (* l_0_6_105 l_0_6_105)))
 (let ((?x8663 (* l_0_6_104 l_0_6_104)))
 (let ((?x8661 (* l_0_6_103 l_0_6_103)))
 (let ((?x1990 (* l_0_6_102 l_0_6_102)))
 (let ((?x1984 (- (- (* (* 2.0 l_0_6_1) l_0_6_11) (* l_0_6_101 l_0_6_101)) ?x1990)))
 (let ((?x8672 (- (- (+ (- (- (- (- ?x1984 ?x8661) ?x8663) ?x8665) ?x7681) ?x8668) ?x7492) ?x8671)))
 (= (- (- (- (- ?x8672 ?x8673) ?x8675) ?x8677) ?x8679) 0.0))))))))))))))))))
(assert
 (let ((?x8487 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x8484 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x8481 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x8478 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x7845 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8475 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8472 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8469 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8466 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x7842 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7839 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8718 (* 2.0 l_0_6_36)))
 (let ((?x8719 (* ?x8718 l_0_6_39)))
 (let ((?x8715 (* 2.0 l_0_6_35)))
 (let ((?x8716 (* ?x8715 l_0_6_38)))
 (let ((?x7542 (* 2.0 l_0_6_21)))
 (let ((?x7867 (* ?x7542 l_0_6_28)))
 (let ((?x7836 (* ?x7542 l_0_6_24)))
 (let ((?x7539 (* 2.0 l_0_6_20)))
 (let ((?x7865 (* ?x7539 l_0_6_27)))
 (let ((?x7834 (* ?x7539 l_0_6_23)))
 (let ((?x7536 (* 2.0 l_0_6_19)))
 (let ((?x7863 (* ?x7536 l_0_6_26)))
 (let ((?x8705 (* ?x7536 l_0_6_22)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7861 (* ?x7860 l_0_6_6)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7858 (* ?x7799 l_0_6_5)))
 (let ((?x8707 (+ (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x7858) ?x7861) ?x8705) ?x7863)))
 (let ((?x8714 (+ (+ (- (+ (- ?x8707 ?x7834) ?x7865) ?x7836) ?x7867) (* (* 2.0 l_0_6_34) l_0_6_37))))
 (let ((?x8725 (+ (+ (+ (+ (+ (+ (+ ?x8714 ?x8716) ?x8719) ?x7839) ?x7842) ?x8466) ?x8469) ?x8472)))
 (= (- (- (- (- (+ (+ ?x8725 ?x8475) ?x7845) ?x8478) ?x8481) ?x8484) ?x8487) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8567 (* l_0_6_75 l_0_6_75)))
 (let ((?x8565 (* l_0_6_74 l_0_6_74)))
 (let ((?x8563 (* l_0_6_73 l_0_6_73)))
 (let ((?x8561 (* l_0_6_72 l_0_6_72)))
 (let ((?x8559 (* l_0_6_71 l_0_6_71)))
 (let ((?x8557 (* l_0_6_60 l_0_6_60)))
 (let ((?x8555 (* l_0_6_59 l_0_6_59)))
 (let ((?x8553 (* l_0_6_58 l_0_6_58)))
 (let ((?x8551 (* l_0_6_57 l_0_6_57)))
 (let ((?x8549 (* l_0_6_56 l_0_6_56)))
 (let ((?x8718 (* 2.0 l_0_6_36)))
 (let ((?x4987 (* ?x8718 l_0_6_43)))
 (let ((?x8715 (* 2.0 l_0_6_35)))
 (let ((?x6937 (* ?x8715 l_0_6_42)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8600 (* ?x8123 l_0_6_34)))
 (let ((?x7542 (* 2.0 l_0_6_21)))
 (let ((?x7867 (* ?x7542 l_0_6_28)))
 (let ((?x7539 (* 2.0 l_0_6_20)))
 (let ((?x7865 (* ?x7539 l_0_6_27)))
 (let ((?x7536 (* 2.0 l_0_6_19)))
 (let ((?x7863 (* ?x7536 l_0_6_26)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7861 (* ?x7860 l_0_6_6)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7858 (* ?x7799 l_0_6_5)))
 (let ((?x7866 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x7858) ?x7861) ?x7863) ?x7865)))
 (let ((?x7868 (- ?x7866 ?x7867)))
 (let ((?x4930 (+ (+ (+ (- ?x7868 ?x8600) (* (* 2.0 l_0_6_34) l_0_6_41)) ?x6937) ?x4987)))
 (let ((?x2162 (- (- (+ (+ (+ (+ (+ ?x4930 ?x8549) ?x8551) ?x8553) ?x8555) ?x8557) ?x8559) ?x8561)))
 (= (- (- (- ?x2162 ?x8563) ?x8565) ?x8567) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7900 (* l_0_6_9 l_0_6_9)))
 (let ((?x7898 (* l_0_6_8 l_0_6_8)))
 (let ((?x7896 (* l_0_6_7 l_0_6_7)))
 (let ((?x7894 (* l_0_6_25 l_0_6_25)))
 (let ((?x7919 (* 2.0 l_0_6_25)))
 (let ((?x7920 (* ?x7919 l_0_6_29)))
 (let ((?x7892 (* l_0_6_24 l_0_6_24)))
 (let ((?x7916 (* 2.0 l_0_6_24)))
 (let ((?x7917 (* ?x7916 l_0_6_28)))
 (let ((?x7890 (* l_0_6_23 l_0_6_23)))
 (let ((?x7913 (* 2.0 l_0_6_23)))
 (let ((?x7914 (* ?x7913 l_0_6_27)))
 (let ((?x7888 (* l_0_6_22 l_0_6_22)))
 (let ((?x7910 (* 2.0 l_0_6_22)))
 (let ((?x7911 (* ?x7910 l_0_6_26)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7908 (* ?x7860 l_0_6_9)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7906 (* ?x7799 l_0_6_8)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x5803 (* ?x7797 l_0_6_7)))
 (let ((?x8756 (- (+ (* (* (- 2.0) l_0_6_10) l_0_6_14) (* l_0_6_10 l_0_6_10)) ?x5803)))
 (let ((?x8763 (+ (- (+ (- (+ (- (- ?x8756 ?x7906) ?x7908) ?x7911) ?x7888) ?x7914) ?x7890) ?x7917)))
 (let ((?x8769 (+ (- (+ (- ?x8763 ?x7892) ?x7920) ?x7894) (* 1.0 (* l_0_6_37 l_0_6_37)))))
 (let ((?x8775 (+ (+ ?x8769 (* 1.0 (* l_0_6_38 l_0_6_38))) (* 1.0 (* l_0_6_39 l_0_6_39)))))
 (let ((?x8781 (+ (+ (+ (+ ?x8775 (* 1.0 (* l_0_6_40 l_0_6_40))) ?x7896) ?x7898) ?x7900)))
 (= ?x8781 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8807 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x8804 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x8801 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8634 (* ?x8123 l_0_6_37)))
 (let ((?x7972 (* l_0_6_30 l_0_6_30)))
 (let ((?x7970 (* l_0_6_29 l_0_6_29)))
 (let ((?x7968 (* l_0_6_28 l_0_6_28)))
 (let ((?x7966 (* l_0_6_27 l_0_6_27)))
 (let ((?x7964 (* l_0_6_26 l_0_6_26)))
 (let ((?x7919 (* 2.0 l_0_6_25)))
 (let ((?x7920 (* ?x7919 l_0_6_29)))
 (let ((?x7916 (* 2.0 l_0_6_24)))
 (let ((?x7917 (* ?x7916 l_0_6_28)))
 (let ((?x7913 (* 2.0 l_0_6_23)))
 (let ((?x7914 (* ?x7913 l_0_6_27)))
 (let ((?x7910 (* 2.0 l_0_6_22)))
 (let ((?x7911 (* ?x7910 l_0_6_26)))
 (let ((?x7962 (* l_0_6_15 l_0_6_15)))
 (let ((?x7960 (* l_0_6_14 l_0_6_14)))
 (let ((?x7958 (* l_0_6_13 l_0_6_13)))
 (let ((?x7860 (* 2.0 l_0_6_13)))
 (let ((?x7908 (* ?x7860 l_0_6_9)))
 (let ((?x7956 (* l_0_6_12 l_0_6_12)))
 (let ((?x7799 (* 2.0 l_0_6_12)))
 (let ((?x7906 (* ?x7799 l_0_6_8)))
 (let ((?x7955 (* l_0_6_11 l_0_6_11)))
 (let ((?x7797 (* 2.0 l_0_6_11)))
 (let ((?x5803 (* ?x7797 l_0_6_7)))
 (let ((?x7905 (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x5803)))
 (let ((?x8786 (- (- (- (+ (- (+ (- ?x7905 ?x7955) ?x7906) ?x7956) ?x7908) ?x7958) ?x7960) ?x7962)))
 (let ((?x8793 (+ (+ (+ (- (- (- (- ?x8786 ?x7911) ?x7914) ?x7917) ?x7920) ?x7964) ?x7966) ?x7968)))
 (let ((?x8799 (+ (- (+ (+ ?x8793 ?x7970) ?x7972) ?x8634) (* (* 2.0 l_0_6_37) l_0_6_41))))
 (= (+ (+ (+ ?x8799 ?x8801) ?x8804) ?x8807) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8123 (* 2.0 l_0_6_31)))
 (let ((?x8668 (* ?x8123 l_0_6_41)))
 (let ((?x7972 (* l_0_6_30 l_0_6_30)))
 (let ((?x7970 (* l_0_6_29 l_0_6_29)))
 (let ((?x7968 (* l_0_6_28 l_0_6_28)))
 (let ((?x7966 (* l_0_6_27 l_0_6_27)))
 (let ((?x7964 (* l_0_6_26 l_0_6_26)))
 (let ((?x7962 (* l_0_6_15 l_0_6_15)))
 (let ((?x7960 (* l_0_6_14 l_0_6_14)))
 (let ((?x7958 (* l_0_6_13 l_0_6_13)))
 (let ((?x7961 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7958) ?x7960)))
 (let ((?x7973 (- (- (- (- (- (+ ?x7961 ?x7962) ?x7964) ?x7966) ?x7968) ?x7970) ?x7972)))
 (let ((?x8845 (+ (+ (- ?x7973 ?x8668) (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x8851 (+ (+ ?x8845 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (= (+ ?x8851 (* 1.0 (* l_0_6_45 l_0_6_45))) 0.0))))))))))))))))
(assert
 (let ((?x7431 (* 2.0 l_0_6_61)))
 (let ((?x8074 (* ?x7431 l_0_6_67)))
 (let ((?x7428 (* 2.0 l_0_6_46)))
 (let ((?x8072 (* ?x7428 l_0_6_52)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x7612 (* ?x7461 l_0_6_19)))
 (let ((?x8871 (- (- (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x7612) ?x8072) ?x8074) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x8875 (- (- ?x8871 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x8881 (- (- ?x8875 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x8881 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))
(assert
 (let ((?x8909 (* l_0_6_99 l_0_6_99)))
 (let ((?x8907 (* l_0_6_98 l_0_6_98)))
 (let ((?x8905 (* l_0_6_97 l_0_6_97)))
 (let ((?x8903 (* l_0_6_85 l_0_6_85)))
 (let ((?x8901 (* l_0_6_84 l_0_6_84)))
 (let ((?x8899 (* l_0_6_83 l_0_6_83)))
 (let ((?x8897 (* l_0_6_82 l_0_6_82)))
 (let ((?x7461 (* 2.0 l_0_6_16)))
 (let ((?x3733 (* ?x7461 l_0_6_22)))
 (let ((?x8896 (+ (- (* (* (- 2.0) l_0_6_1) l_0_6_7) (* l_0_6_100 l_0_6_100)) ?x3733)))
 (let ((?x8910 (- (- (- (- (- (- (- ?x8896 ?x8897) ?x8899) ?x8901) ?x8903) ?x8905) ?x8907) ?x8909)))
 (= ?x8910 0.0)))))))))))))
(assert
 (let ((?x8422 (* l_0_6_70 l_0_6_70)))
 (let ((?x8418 (* l_0_6_69 l_0_6_69)))
 (let ((?x8416 (* l_0_6_68 l_0_6_68)))
 (let ((?x8414 (* l_0_6_67 l_0_6_67)))
 (let ((?x7845 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8412 (* l_0_6_55 l_0_6_55)))
 (let ((?x8410 (* l_0_6_54 l_0_6_54)))
 (let ((?x8408 (* l_0_6_53 l_0_6_53)))
 (let ((?x8406 (* l_0_6_52 l_0_6_52)))
 (let ((?x7842 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7839 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7542 (* 2.0 l_0_6_21)))
 (let ((?x7836 (* ?x7542 l_0_6_24)))
 (let ((?x7539 (* 2.0 l_0_6_20)))
 (let ((?x7834 (* ?x7539 l_0_6_23)))
 (let ((?x7536 (* 2.0 l_0_6_19)))
 (let ((?x8705 (* ?x7536 l_0_6_22)))
 (let ((?x8929 (+ (+ (+ (- (- (+ (+ ?x8705 ?x7834) ?x7836) ?x7839) ?x7842) ?x8406) ?x8408) ?x8410)))
 (= (- (- (- (- (- (+ ?x8929 ?x8412) ?x7845) ?x8414) ?x8416) ?x8418) ?x8422) 0.0))))))))))))))))))))
(assert
 (let ((?x7900 (* l_0_6_9 l_0_6_9)))
 (let ((?x7898 (* l_0_6_8 l_0_6_8)))
 (let ((?x7896 (* l_0_6_7 l_0_6_7)))
 (let ((?x7894 (* l_0_6_25 l_0_6_25)))
 (let ((?x7892 (* l_0_6_24 l_0_6_24)))
 (let ((?x7890 (* l_0_6_23 l_0_6_23)))
 (let ((?x2611 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7890) ?x7892)))
 (= (- (- (- (+ ?x2611 ?x7894) ?x7896) ?x7898) ?x7900) 0.0)))))))))
(assert
 (= (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) 0.0))
(assert
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8362 (* ?x8361 l_0_6_35)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_34) ?x8362) 0.0))))
(assert
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8463 (* ?x8361 l_0_6_38)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_37) ?x8463) 0.0))))
(assert
 (let ((?x8361 (* 2.0 l_0_6_33)))
 (let ((?x8547 (* ?x8361 l_0_6_42)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_41) ?x8547) 0.0))))
(assert
 (let ((?x8718 (* 2.0 l_0_6_36)))
 (let ((?x8719 (* ?x8718 l_0_6_39)))
 (let ((?x8715 (* 2.0 l_0_6_35)))
 (let ((?x8716 (* ?x8715 l_0_6_38)))
 (= (- (- (* (* (- 2.0) l_0_6_34) l_0_6_37) ?x8716) ?x8719) 0.0))))))
(assert
 (let ((?x8718 (* 2.0 l_0_6_36)))
 (let ((?x4987 (* ?x8718 l_0_6_43)))
 (let ((?x8715 (* 2.0 l_0_6_35)))
 (let ((?x6937 (* ?x8715 l_0_6_42)))
 (= (- (- (* (* (- 2.0) l_0_6_34) l_0_6_41) ?x6937) ?x4987) 0.0))))))
(assert
 (let ((?x8776 (* l_0_6_40 l_0_6_40)))
 (let ((?x8773 (* l_0_6_39 l_0_6_39)))
 (let ((?x5228 (- (- (- (* (- l_0_6_37) l_0_6_37) (* l_0_6_38 l_0_6_38)) ?x8773) ?x8776)))
 (= ?x5228 0.0)))))
(assert
 (let ((?x8807 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x8804 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x8801 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (= (- (- (- (* (* (- 2.0) l_0_6_37) l_0_6_41) ?x8801) ?x8804) ?x8807) 0.0)))))
(assert
 (let ((?x8852 (* l_0_6_45 l_0_6_45)))
 (let ((?x8849 (* l_0_6_44 l_0_6_44)))
 (let ((?x8846 (* l_0_6_43 l_0_6_43)))
 (let ((?x9017 (- (- (- (* (- l_0_6_41) l_0_6_41) (* l_0_6_42 l_0_6_42)) ?x8846) ?x8849)))
 (= (- ?x9017 ?x8852) 0.0))))))
(assert
 (let ((?x3012 (- (- (* l_0_6_46 l_0_6_46) (* l_0_6_61 l_0_6_61)) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (- ?x3012 (* (* 2.0 l_0_6_91) l_0_6_94)) 0.0)))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(check-sat)
(get-model)