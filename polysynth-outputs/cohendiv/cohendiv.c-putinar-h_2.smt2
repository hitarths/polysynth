(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_10_218 () Real)
(declare-fun l_0_10_197 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_222 () Real)
(declare-fun l_0_10_211 () Real)
(declare-fun l_0_10_221 () Real)
(declare-fun l_0_10_210 () Real)
(declare-fun l_0_10_220 () Real)
(declare-fun l_0_10_209 () Real)
(declare-fun l_0_10_219 () Real)
(declare-fun l_0_10_208 () Real)
(declare-fun l_0_10_207 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_223 () Real)
(declare-fun l_0_10_217 () Real)
(declare-fun l_0_10_216 () Real)
(declare-fun l_0_10_215 () Real)
(declare-fun l_0_10_214 () Real)
(declare-fun l_0_10_213 () Real)
(declare-fun l_0_10_212 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_10_200 () Real)
(declare-fun l_0_10_169 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_198 () Real)
(declare-fun l_0_10_203 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_194 () Real)
(declare-fun l_0_10_183 () Real)
(declare-fun l_0_10_193 () Real)
(declare-fun l_0_10_182 () Real)
(declare-fun l_0_10_192 () Real)
(declare-fun l_0_10_181 () Real)
(declare-fun l_0_10_191 () Real)
(declare-fun l_0_10_180 () Real)
(declare-fun l_0_10_190 () Real)
(declare-fun l_0_10_179 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_166 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_167 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_168 () Real)
(declare-fun l_0_10_199 () Real)
(declare-fun l_0_10_170 () Real)
(declare-fun l_0_10_201 () Real)
(declare-fun l_0_10_172 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_204 () Real)
(declare-fun l_0_10_175 () Real)
(declare-fun l_0_10_184 () Real)
(declare-fun l_0_10_171 () Real)
(declare-fun l_0_10_173 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_176 () Real)
(declare-fun l_0_10_185 () Real)
(declare-fun l_0_10_174 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_177 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_186 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_178 () Real)
(declare-fun l_0_10_187 () Real)
(declare-fun l_0_10_188 () Real)
(declare-fun l_0_10_189 () Real)
(declare-fun l_0_10_195 () Real)
(declare-fun l_0_10_196 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_202 () Real)
(declare-fun l_0_10_205 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_206 () Real)
(declare-fun l_0_10_224 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_231 () Real)
(declare-fun l_0_11_225 () Real)
(declare-fun l_0_11_203 () Real)
(declare-fun l_0_11_197 () Real)
(declare-fun l_0_11_246 () Real)
(declare-fun l_0_11_218 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_250 () Real)
(declare-fun l_0_11_239 () Real)
(declare-fun l_0_11_249 () Real)
(declare-fun l_0_11_238 () Real)
(declare-fun l_0_11_248 () Real)
(declare-fun l_0_11_237 () Real)
(declare-fun l_0_11_247 () Real)
(declare-fun l_0_11_236 () Real)
(declare-fun l_0_11_235 () Real)
(declare-fun l_0_11_222 () Real)
(declare-fun l_0_11_211 () Real)
(declare-fun l_0_11_221 () Real)
(declare-fun l_0_11_210 () Real)
(declare-fun l_0_11_220 () Real)
(declare-fun l_0_11_209 () Real)
(declare-fun l_0_11_219 () Real)
(declare-fun l_0_11_208 () Real)
(declare-fun l_0_11_207 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_251 () Real)
(declare-fun l_0_11_245 () Real)
(declare-fun l_0_11_244 () Real)
(declare-fun l_0_11_243 () Real)
(declare-fun l_0_11_242 () Real)
(declare-fun l_0_11_241 () Real)
(declare-fun l_0_11_240 () Real)
(declare-fun l_0_11_223 () Real)
(declare-fun l_0_11_217 () Real)
(declare-fun l_0_11_216 () Real)
(declare-fun l_0_11_215 () Real)
(declare-fun l_0_11_214 () Real)
(declare-fun l_0_11_213 () Real)
(declare-fun l_0_11_212 () Real)
(declare-fun l_0_11_228 () Real)
(declare-fun l_0_11_200 () Real)
(declare-fun l_0_11_169 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_226 () Real)
(declare-fun l_0_11_198 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_194 () Real)
(declare-fun l_0_11_183 () Real)
(declare-fun l_0_11_193 () Real)
(declare-fun l_0_11_182 () Real)
(declare-fun l_0_11_192 () Real)
(declare-fun l_0_11_181 () Real)
(declare-fun l_0_11_191 () Real)
(declare-fun l_0_11_180 () Real)
(declare-fun l_0_11_190 () Real)
(declare-fun l_0_11_179 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_166 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_167 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_168 () Real)
(declare-fun l_0_11_227 () Real)
(declare-fun l_0_11_199 () Real)
(declare-fun l_0_11_170 () Real)
(declare-fun l_0_11_229 () Real)
(declare-fun l_0_11_201 () Real)
(declare-fun l_0_11_172 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_232 () Real)
(declare-fun l_0_11_204 () Real)
(declare-fun l_0_11_175 () Real)
(declare-fun l_0_11_184 () Real)
(declare-fun l_0_11_171 () Real)
(declare-fun l_0_11_173 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_176 () Real)
(declare-fun l_0_11_185 () Real)
(declare-fun l_0_11_174 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_177 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_186 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_178 () Real)
(declare-fun l_0_11_187 () Real)
(declare-fun l_0_11_188 () Real)
(declare-fun l_0_11_189 () Real)
(declare-fun l_0_11_195 () Real)
(declare-fun l_0_11_196 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_230 () Real)
(declare-fun l_0_11_202 () Real)
(declare-fun l_0_11_233 () Real)
(declare-fun l_0_11_205 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_234 () Real)
(declare-fun l_0_11_206 () Real)
(declare-fun l_0_11_252 () Real)
(declare-fun l_0_11_224 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_256 () Real)
(declare-fun l_0_12_253 () Real)
(declare-fun l_0_12_228 () Real)
(declare-fun l_0_12_225 () Real)
(declare-fun l_0_12_200 () Real)
(declare-fun l_0_12_197 () Real)
(declare-fun l_0_12_169 () Real)
(declare-fun l_0_12_141 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_254 () Real)
(declare-fun l_0_12_226 () Real)
(declare-fun l_0_12_198 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_278 () Real)
(declare-fun l_0_12_267 () Real)
(declare-fun l_0_12_277 () Real)
(declare-fun l_0_12_266 () Real)
(declare-fun l_0_12_276 () Real)
(declare-fun l_0_12_265 () Real)
(declare-fun l_0_12_275 () Real)
(declare-fun l_0_12_264 () Real)
(declare-fun l_0_12_274 () Real)
(declare-fun l_0_12_263 () Real)
(declare-fun l_0_12_250 () Real)
(declare-fun l_0_12_239 () Real)
(declare-fun l_0_12_249 () Real)
(declare-fun l_0_12_238 () Real)
(declare-fun l_0_12_248 () Real)
(declare-fun l_0_12_237 () Real)
(declare-fun l_0_12_247 () Real)
(declare-fun l_0_12_236 () Real)
(declare-fun l_0_12_246 () Real)
(declare-fun l_0_12_235 () Real)
(declare-fun l_0_12_222 () Real)
(declare-fun l_0_12_211 () Real)
(declare-fun l_0_12_221 () Real)
(declare-fun l_0_12_210 () Real)
(declare-fun l_0_12_220 () Real)
(declare-fun l_0_12_209 () Real)
(declare-fun l_0_12_219 () Real)
(declare-fun l_0_12_208 () Real)
(declare-fun l_0_12_218 () Real)
(declare-fun l_0_12_207 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_194 () Real)
(declare-fun l_0_12_183 () Real)
(declare-fun l_0_12_193 () Real)
(declare-fun l_0_12_182 () Real)
(declare-fun l_0_12_192 () Real)
(declare-fun l_0_12_181 () Real)
(declare-fun l_0_12_191 () Real)
(declare-fun l_0_12_180 () Real)
(declare-fun l_0_12_190 () Real)
(declare-fun l_0_12_179 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_142 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_166 () Real)
(declare-fun l_0_12_155 () Real)
(declare-fun l_0_12_165 () Real)
(declare-fun l_0_12_154 () Real)
(declare-fun l_0_12_164 () Real)
(declare-fun l_0_12_153 () Real)
(declare-fun l_0_12_163 () Real)
(declare-fun l_0_12_152 () Real)
(declare-fun l_0_12_162 () Real)
(declare-fun l_0_12_151 () Real)
(declare-fun l_0_12_144 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_147 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_156 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_143 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_145 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_148 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_157 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_146 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_149 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_158 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_150 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_159 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_160 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_161 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_167 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_168 () Real)
(declare-fun l_0_12_255 () Real)
(declare-fun l_0_12_227 () Real)
(declare-fun l_0_12_199 () Real)
(declare-fun l_0_12_170 () Real)
(declare-fun l_0_12_257 () Real)
(declare-fun l_0_12_229 () Real)
(declare-fun l_0_12_201 () Real)
(declare-fun l_0_12_172 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_260 () Real)
(declare-fun l_0_12_259 () Real)
(declare-fun l_0_12_232 () Real)
(declare-fun l_0_12_231 () Real)
(declare-fun l_0_12_204 () Real)
(declare-fun l_0_12_203 () Real)
(declare-fun l_0_12_175 () Real)
(declare-fun l_0_12_269 () Real)
(declare-fun l_0_12_268 () Real)
(declare-fun l_0_12_241 () Real)
(declare-fun l_0_12_240 () Real)
(declare-fun l_0_12_213 () Real)
(declare-fun l_0_12_212 () Real)
(declare-fun l_0_12_184 () Real)
(declare-fun l_0_12_171 () Real)
(declare-fun l_0_12_173 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_176 () Real)
(declare-fun l_0_12_185 () Real)
(declare-fun l_0_12_174 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_177 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_186 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_178 () Real)
(declare-fun l_0_12_187 () Real)
(declare-fun l_0_12_188 () Real)
(declare-fun l_0_12_189 () Real)
(declare-fun l_0_12_195 () Real)
(declare-fun l_0_12_196 () Real)
(declare-fun l_0_12_279 () Real)
(declare-fun l_0_12_273 () Real)
(declare-fun l_0_12_272 () Real)
(declare-fun l_0_12_271 () Real)
(declare-fun l_0_12_270 () Real)
(declare-fun l_0_12_251 () Real)
(declare-fun l_0_12_245 () Real)
(declare-fun l_0_12_244 () Real)
(declare-fun l_0_12_243 () Real)
(declare-fun l_0_12_242 () Real)
(declare-fun l_0_12_223 () Real)
(declare-fun l_0_12_217 () Real)
(declare-fun l_0_12_216 () Real)
(declare-fun l_0_12_215 () Real)
(declare-fun l_0_12_214 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_258 () Real)
(declare-fun l_0_12_230 () Real)
(declare-fun l_0_12_202 () Real)
(declare-fun l_0_12_261 () Real)
(declare-fun l_0_12_233 () Real)
(declare-fun l_0_12_205 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_262 () Real)
(declare-fun l_0_12_234 () Real)
(declare-fun l_0_12_206 () Real)
(declare-fun l_0_12_280 () Real)
(declare-fun l_0_12_252 () Real)
(declare-fun l_0_12_224 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_222 () Real)
(declare-fun l_0_13_211 () Real)
(declare-fun l_0_13_221 () Real)
(declare-fun l_0_13_210 () Real)
(declare-fun l_0_13_220 () Real)
(declare-fun l_0_13_209 () Real)
(declare-fun l_0_13_219 () Real)
(declare-fun l_0_13_208 () Real)
(declare-fun l_0_13_218 () Real)
(declare-fun l_0_13_207 () Real)
(declare-fun l_0_13_141 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_197 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_13_198 () Real)
(declare-fun l_0_13_169 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_194 () Real)
(declare-fun l_0_13_183 () Real)
(declare-fun l_0_13_193 () Real)
(declare-fun l_0_13_182 () Real)
(declare-fun l_0_13_192 () Real)
(declare-fun l_0_13_181 () Real)
(declare-fun l_0_13_191 () Real)
(declare-fun l_0_13_180 () Real)
(declare-fun l_0_13_190 () Real)
(declare-fun l_0_13_179 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_142 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_166 () Real)
(declare-fun l_0_13_155 () Real)
(declare-fun l_0_13_165 () Real)
(declare-fun l_0_13_154 () Real)
(declare-fun l_0_13_164 () Real)
(declare-fun l_0_13_153 () Real)
(declare-fun l_0_13_163 () Real)
(declare-fun l_0_13_152 () Real)
(declare-fun l_0_13_162 () Real)
(declare-fun l_0_13_151 () Real)
(declare-fun l_0_13_144 () Real)
(declare-fun l_0_13_138 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_137 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_136 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_147 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_156 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_143 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_145 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_148 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_157 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_146 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_149 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_158 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_150 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_159 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_160 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_161 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_167 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_168 () Real)
(declare-fun l_0_13_199 () Real)
(declare-fun l_0_13_170 () Real)
(declare-fun l_0_13_201 () Real)
(declare-fun l_0_13_200 () Real)
(declare-fun l_0_13_172 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_204 () Real)
(declare-fun l_0_13_203 () Real)
(declare-fun l_0_13_175 () Real)
(declare-fun l_0_13_213 () Real)
(declare-fun l_0_13_212 () Real)
(declare-fun l_0_13_184 () Real)
(declare-fun l_0_13_171 () Real)
(declare-fun l_0_13_173 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_176 () Real)
(declare-fun l_0_13_185 () Real)
(declare-fun l_0_13_174 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_177 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_186 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_178 () Real)
(declare-fun l_0_13_187 () Real)
(declare-fun l_0_13_188 () Real)
(declare-fun l_0_13_189 () Real)
(declare-fun l_0_13_195 () Real)
(declare-fun l_0_13_196 () Real)
(declare-fun l_0_13_223 () Real)
(declare-fun l_0_13_217 () Real)
(declare-fun l_0_13_216 () Real)
(declare-fun l_0_13_215 () Real)
(declare-fun l_0_13_214 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_139 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_202 () Real)
(declare-fun l_0_13_205 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_140 () Real)
(declare-fun l_0_13_206 () Real)
(declare-fun l_0_13_224 () Real)
(declare-fun l_0_14_225 () Real)
(declare-fun l_0_14_197 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_226 () Real)
(declare-fun l_0_14_198 () Real)
(declare-fun l_0_14_169 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_250 () Real)
(declare-fun l_0_14_239 () Real)
(declare-fun l_0_14_249 () Real)
(declare-fun l_0_14_238 () Real)
(declare-fun l_0_14_248 () Real)
(declare-fun l_0_14_237 () Real)
(declare-fun l_0_14_247 () Real)
(declare-fun l_0_14_236 () Real)
(declare-fun l_0_14_246 () Real)
(declare-fun l_0_14_235 () Real)
(declare-fun l_0_14_222 () Real)
(declare-fun l_0_14_211 () Real)
(declare-fun l_0_14_221 () Real)
(declare-fun l_0_14_210 () Real)
(declare-fun l_0_14_220 () Real)
(declare-fun l_0_14_209 () Real)
(declare-fun l_0_14_219 () Real)
(declare-fun l_0_14_208 () Real)
(declare-fun l_0_14_218 () Real)
(declare-fun l_0_14_207 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_194 () Real)
(declare-fun l_0_14_183 () Real)
(declare-fun l_0_14_193 () Real)
(declare-fun l_0_14_182 () Real)
(declare-fun l_0_14_192 () Real)
(declare-fun l_0_14_181 () Real)
(declare-fun l_0_14_191 () Real)
(declare-fun l_0_14_180 () Real)
(declare-fun l_0_14_190 () Real)
(declare-fun l_0_14_179 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_166 () Real)
(declare-fun l_0_14_155 () Real)
(declare-fun l_0_14_165 () Real)
(declare-fun l_0_14_154 () Real)
(declare-fun l_0_14_164 () Real)
(declare-fun l_0_14_153 () Real)
(declare-fun l_0_14_163 () Real)
(declare-fun l_0_14_152 () Real)
(declare-fun l_0_14_162 () Real)
(declare-fun l_0_14_151 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_156 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_157 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_158 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_159 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_160 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_161 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_167 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_168 () Real)
(declare-fun l_0_14_227 () Real)
(declare-fun l_0_14_199 () Real)
(declare-fun l_0_14_170 () Real)
(declare-fun l_0_14_229 () Real)
(declare-fun l_0_14_228 () Real)
(declare-fun l_0_14_201 () Real)
(declare-fun l_0_14_200 () Real)
(declare-fun l_0_14_172 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_232 () Real)
(declare-fun l_0_14_231 () Real)
(declare-fun l_0_14_204 () Real)
(declare-fun l_0_14_203 () Real)
(declare-fun l_0_14_175 () Real)
(declare-fun l_0_14_241 () Real)
(declare-fun l_0_14_240 () Real)
(declare-fun l_0_14_213 () Real)
(declare-fun l_0_14_212 () Real)
(declare-fun l_0_14_184 () Real)
(declare-fun l_0_14_171 () Real)
(declare-fun l_0_14_173 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_176 () Real)
(declare-fun l_0_14_185 () Real)
(declare-fun l_0_14_174 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_177 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_186 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_178 () Real)
(declare-fun l_0_14_187 () Real)
(declare-fun l_0_14_188 () Real)
(declare-fun l_0_14_189 () Real)
(declare-fun l_0_14_195 () Real)
(declare-fun l_0_14_196 () Real)
(declare-fun l_0_14_251 () Real)
(declare-fun l_0_14_245 () Real)
(declare-fun l_0_14_244 () Real)
(declare-fun l_0_14_243 () Real)
(declare-fun l_0_14_242 () Real)
(declare-fun l_0_14_223 () Real)
(declare-fun l_0_14_217 () Real)
(declare-fun l_0_14_216 () Real)
(declare-fun l_0_14_215 () Real)
(declare-fun l_0_14_214 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_230 () Real)
(declare-fun l_0_14_202 () Real)
(declare-fun l_0_14_233 () Real)
(declare-fun l_0_14_205 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_14_234 () Real)
(declare-fun l_0_14_206 () Real)
(declare-fun l_0_14_252 () Real)
(declare-fun l_0_14_224 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_279 () Real)
(declare-fun l_0_15_273 () Real)
(declare-fun l_0_15_278 () Real)
(declare-fun l_0_15_272 () Real)
(declare-fun l_0_15_277 () Real)
(declare-fun l_0_15_271 () Real)
(declare-fun l_0_15_276 () Real)
(declare-fun l_0_15_270 () Real)
(declare-fun l_0_15_275 () Real)
(declare-fun l_0_15_269 () Real)
(declare-fun l_0_15_274 () Real)
(declare-fun l_0_15_268 () Real)
(declare-fun l_0_15_251 () Real)
(declare-fun l_0_15_245 () Real)
(declare-fun l_0_15_250 () Real)
(declare-fun l_0_15_244 () Real)
(declare-fun l_0_15_249 () Real)
(declare-fun l_0_15_243 () Real)
(declare-fun l_0_15_248 () Real)
(declare-fun l_0_15_242 () Real)
(declare-fun l_0_15_247 () Real)
(declare-fun l_0_15_241 () Real)
(declare-fun l_0_15_246 () Real)
(declare-fun l_0_15_240 () Real)
(declare-fun l_0_15_223 () Real)
(declare-fun l_0_15_217 () Real)
(declare-fun l_0_15_222 () Real)
(declare-fun l_0_15_216 () Real)
(declare-fun l_0_15_221 () Real)
(declare-fun l_0_15_215 () Real)
(declare-fun l_0_15_220 () Real)
(declare-fun l_0_15_214 () Real)
(declare-fun l_0_15_219 () Real)
(declare-fun l_0_15_213 () Real)
(declare-fun l_0_15_218 () Real)
(declare-fun l_0_15_212 () Real)
(declare-fun l_0_15_256 () Real)
(declare-fun l_0_15_253 () Real)
(declare-fun l_0_15_228 () Real)
(declare-fun l_0_15_225 () Real)
(declare-fun l_0_15_200 () Real)
(declare-fun l_0_15_197 () Real)
(declare-fun l_0_15_169 () Real)
(declare-fun l_0_15_141 () Real)
(declare-fun l_0_15_113 () Real)
(declare-fun l_0_15_259 () Real)
(declare-fun l_0_15_231 () Real)
(declare-fun l_0_15_203 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_267 () Real)
(declare-fun l_0_15_266 () Real)
(declare-fun l_0_15_265 () Real)
(declare-fun l_0_15_264 () Real)
(declare-fun l_0_15_263 () Real)
(declare-fun l_0_15_239 () Real)
(declare-fun l_0_15_238 () Real)
(declare-fun l_0_15_237 () Real)
(declare-fun l_0_15_236 () Real)
(declare-fun l_0_15_235 () Real)
(declare-fun l_0_15_211 () Real)
(declare-fun l_0_15_210 () Real)
(declare-fun l_0_15_209 () Real)
(declare-fun l_0_15_208 () Real)
(declare-fun l_0_15_207 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_194 () Real)
(declare-fun l_0_15_183 () Real)
(declare-fun l_0_15_193 () Real)
(declare-fun l_0_15_182 () Real)
(declare-fun l_0_15_192 () Real)
(declare-fun l_0_15_181 () Real)
(declare-fun l_0_15_191 () Real)
(declare-fun l_0_15_180 () Real)
(declare-fun l_0_15_190 () Real)
(declare-fun l_0_15_179 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_142 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_166 () Real)
(declare-fun l_0_15_155 () Real)
(declare-fun l_0_15_165 () Real)
(declare-fun l_0_15_154 () Real)
(declare-fun l_0_15_164 () Real)
(declare-fun l_0_15_153 () Real)
(declare-fun l_0_15_163 () Real)
(declare-fun l_0_15_152 () Real)
(declare-fun l_0_15_162 () Real)
(declare-fun l_0_15_151 () Real)
(declare-fun l_0_15_144 () Real)
(declare-fun l_0_15_138 () Real)
(declare-fun l_0_15_127 () Real)
(declare-fun l_0_15_137 () Real)
(declare-fun l_0_15_126 () Real)
(declare-fun l_0_15_136 () Real)
(declare-fun l_0_15_125 () Real)
(declare-fun l_0_15_135 () Real)
(declare-fun l_0_15_124 () Real)
(declare-fun l_0_15_134 () Real)
(declare-fun l_0_15_123 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_110 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_109 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_108 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_107 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_106 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_147 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_156 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_143 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_145 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_148 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_157 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_146 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_149 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_158 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_150 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_159 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_160 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_161 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_167 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_168 () Real)
(declare-fun l_0_15_254 () Real)
(declare-fun l_0_15_226 () Real)
(declare-fun l_0_15_198 () Real)
(declare-fun l_0_15_255 () Real)
(declare-fun l_0_15_227 () Real)
(declare-fun l_0_15_199 () Real)
(declare-fun l_0_15_170 () Real)
(declare-fun l_0_15_257 () Real)
(declare-fun l_0_15_229 () Real)
(declare-fun l_0_15_201 () Real)
(declare-fun l_0_15_172 () Real)
(declare-fun l_0_15_114 () Real)
(declare-fun l_0_15_260 () Real)
(declare-fun l_0_15_232 () Real)
(declare-fun l_0_15_204 () Real)
(declare-fun l_0_15_175 () Real)
(declare-fun l_0_15_184 () Real)
(declare-fun l_0_15_171 () Real)
(declare-fun l_0_15_173 () Real)
(declare-fun l_0_15_115 () Real)
(declare-fun l_0_15_176 () Real)
(declare-fun l_0_15_185 () Real)
(declare-fun l_0_15_174 () Real)
(declare-fun l_0_15_117 () Real)
(declare-fun l_0_15_116 () Real)
(declare-fun l_0_15_177 () Real)
(declare-fun l_0_15_120 () Real)
(declare-fun l_0_15_119 () Real)
(declare-fun l_0_15_186 () Real)
(declare-fun l_0_15_129 () Real)
(declare-fun l_0_15_128 () Real)
(declare-fun l_0_15_178 () Real)
(declare-fun l_0_15_187 () Real)
(declare-fun l_0_15_188 () Real)
(declare-fun l_0_15_189 () Real)
(declare-fun l_0_15_195 () Real)
(declare-fun l_0_15_196 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_139 () Real)
(declare-fun l_0_15_133 () Real)
(declare-fun l_0_15_132 () Real)
(declare-fun l_0_15_131 () Real)
(declare-fun l_0_15_130 () Real)
(declare-fun l_0_15_111 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_112 () Real)
(declare-fun l_0_15_258 () Real)
(declare-fun l_0_15_230 () Real)
(declare-fun l_0_15_202 () Real)
(declare-fun l_0_15_261 () Real)
(declare-fun l_0_15_233 () Real)
(declare-fun l_0_15_205 () Real)
(declare-fun l_0_15_118 () Real)
(declare-fun l_0_15_121 () Real)
(declare-fun l_0_15_122 () Real)
(declare-fun l_0_15_140 () Real)
(declare-fun l_0_15_262 () Real)
(declare-fun l_0_15_234 () Real)
(declare-fun l_0_15_206 () Real)
(declare-fun l_0_15_280 () Real)
(declare-fun l_0_15_252 () Real)
(declare-fun l_0_15_224 () Real)
(declare-fun l_0_16_85 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_287 () Real)
(declare-fun l_0_16_281 () Real)
(declare-fun l_0_16_259 () Real)
(declare-fun l_0_16_253 () Real)
(declare-fun l_0_16_231 () Real)
(declare-fun l_0_16_225 () Real)
(declare-fun l_0_16_203 () Real)
(declare-fun l_0_16_197 () Real)
(declare-fun l_0_16_307 () Real)
(declare-fun l_0_16_301 () Real)
(declare-fun l_0_16_306 () Real)
(declare-fun l_0_16_300 () Real)
(declare-fun l_0_16_305 () Real)
(declare-fun l_0_16_299 () Real)
(declare-fun l_0_16_304 () Real)
(declare-fun l_0_16_298 () Real)
(declare-fun l_0_16_303 () Real)
(declare-fun l_0_16_297 () Real)
(declare-fun l_0_16_302 () Real)
(declare-fun l_0_16_296 () Real)
(declare-fun l_0_16_279 () Real)
(declare-fun l_0_16_273 () Real)
(declare-fun l_0_16_278 () Real)
(declare-fun l_0_16_272 () Real)
(declare-fun l_0_16_277 () Real)
(declare-fun l_0_16_271 () Real)
(declare-fun l_0_16_276 () Real)
(declare-fun l_0_16_270 () Real)
(declare-fun l_0_16_275 () Real)
(declare-fun l_0_16_269 () Real)
(declare-fun l_0_16_274 () Real)
(declare-fun l_0_16_268 () Real)
(declare-fun l_0_16_251 () Real)
(declare-fun l_0_16_245 () Real)
(declare-fun l_0_16_250 () Real)
(declare-fun l_0_16_244 () Real)
(declare-fun l_0_16_249 () Real)
(declare-fun l_0_16_243 () Real)
(declare-fun l_0_16_248 () Real)
(declare-fun l_0_16_242 () Real)
(declare-fun l_0_16_247 () Real)
(declare-fun l_0_16_241 () Real)
(declare-fun l_0_16_246 () Real)
(declare-fun l_0_16_240 () Real)
(declare-fun l_0_16_223 () Real)
(declare-fun l_0_16_217 () Real)
(declare-fun l_0_16_222 () Real)
(declare-fun l_0_16_216 () Real)
(declare-fun l_0_16_221 () Real)
(declare-fun l_0_16_215 () Real)
(declare-fun l_0_16_220 () Real)
(declare-fun l_0_16_214 () Real)
(declare-fun l_0_16_219 () Real)
(declare-fun l_0_16_213 () Real)
(declare-fun l_0_16_218 () Real)
(declare-fun l_0_16_212 () Real)
(declare-fun l_0_16_284 () Real)
(declare-fun l_0_16_256 () Real)
(declare-fun l_0_16_228 () Real)
(declare-fun l_0_16_200 () Real)
(declare-fun l_0_16_169 () Real)
(declare-fun l_0_16_141 () Real)
(declare-fun l_0_16_113 () Real)
(declare-fun l_0_16_295 () Real)
(declare-fun l_0_16_294 () Real)
(declare-fun l_0_16_293 () Real)
(declare-fun l_0_16_292 () Real)
(declare-fun l_0_16_291 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_267 () Real)
(declare-fun l_0_16_266 () Real)
(declare-fun l_0_16_265 () Real)
(declare-fun l_0_16_264 () Real)
(declare-fun l_0_16_263 () Real)
(declare-fun l_0_16_239 () Real)
(declare-fun l_0_16_238 () Real)
(declare-fun l_0_16_237 () Real)
(declare-fun l_0_16_236 () Real)
(declare-fun l_0_16_235 () Real)
(declare-fun l_0_16_211 () Real)
(declare-fun l_0_16_210 () Real)
(declare-fun l_0_16_209 () Real)
(declare-fun l_0_16_208 () Real)
(declare-fun l_0_16_207 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_194 () Real)
(declare-fun l_0_16_183 () Real)
(declare-fun l_0_16_193 () Real)
(declare-fun l_0_16_182 () Real)
(declare-fun l_0_16_192 () Real)
(declare-fun l_0_16_181 () Real)
(declare-fun l_0_16_191 () Real)
(declare-fun l_0_16_180 () Real)
(declare-fun l_0_16_190 () Real)
(declare-fun l_0_16_179 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_142 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_82 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_81 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_80 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_79 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_78 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_166 () Real)
(declare-fun l_0_16_155 () Real)
(declare-fun l_0_16_165 () Real)
(declare-fun l_0_16_154 () Real)
(declare-fun l_0_16_164 () Real)
(declare-fun l_0_16_153 () Real)
(declare-fun l_0_16_163 () Real)
(declare-fun l_0_16_152 () Real)
(declare-fun l_0_16_162 () Real)
(declare-fun l_0_16_151 () Real)
(declare-fun l_0_16_144 () Real)
(declare-fun l_0_16_138 () Real)
(declare-fun l_0_16_127 () Real)
(declare-fun l_0_16_137 () Real)
(declare-fun l_0_16_126 () Real)
(declare-fun l_0_16_136 () Real)
(declare-fun l_0_16_125 () Real)
(declare-fun l_0_16_135 () Real)
(declare-fun l_0_16_124 () Real)
(declare-fun l_0_16_134 () Real)
(declare-fun l_0_16_123 () Real)
(declare-fun l_0_16_99 () Real)
(declare-fun l_0_16_110 () Real)
(declare-fun l_0_16_98 () Real)
(declare-fun l_0_16_109 () Real)
(declare-fun l_0_16_97 () Real)
(declare-fun l_0_16_108 () Real)
(declare-fun l_0_16_96 () Real)
(declare-fun l_0_16_107 () Real)
(declare-fun l_0_16_95 () Real)
(declare-fun l_0_16_106 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_147 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_156 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_143 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_145 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_148 () Real)
(declare-fun l_0_16_87 () Real)
(declare-fun l_0_16_86 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_157 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_146 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_149 () Real)
(declare-fun l_0_16_90 () Real)
(declare-fun l_0_16_89 () Real)
(declare-fun l_0_16_88 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_158 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_150 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_94 () Real)
(declare-fun l_0_16_93 () Real)
(declare-fun l_0_16_92 () Real)
(declare-fun l_0_16_91 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_159 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_160 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_76 () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_161 () Real)
(declare-fun l_0_16_104 () Real)
(declare-fun l_0_16_103 () Real)
(declare-fun l_0_16_102 () Real)
(declare-fun l_0_16_101 () Real)
(declare-fun l_0_16_100 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_167 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_168 () Real)
(declare-fun l_0_16_282 () Real)
(declare-fun l_0_16_254 () Real)
(declare-fun l_0_16_226 () Real)
(declare-fun l_0_16_198 () Real)
(declare-fun l_0_16_283 () Real)
(declare-fun l_0_16_255 () Real)
(declare-fun l_0_16_227 () Real)
(declare-fun l_0_16_199 () Real)
(declare-fun l_0_16_170 () Real)
(declare-fun l_0_16_285 () Real)
(declare-fun l_0_16_257 () Real)
(declare-fun l_0_16_229 () Real)
(declare-fun l_0_16_201 () Real)
(declare-fun l_0_16_172 () Real)
(declare-fun l_0_16_114 () Real)
(declare-fun l_0_16_288 () Real)
(declare-fun l_0_16_260 () Real)
(declare-fun l_0_16_232 () Real)
(declare-fun l_0_16_204 () Real)
(declare-fun l_0_16_175 () Real)
(declare-fun l_0_16_184 () Real)
(declare-fun l_0_16_171 () Real)
(declare-fun l_0_16_173 () Real)
(declare-fun l_0_16_115 () Real)
(declare-fun l_0_16_176 () Real)
(declare-fun l_0_16_185 () Real)
(declare-fun l_0_16_174 () Real)
(declare-fun l_0_16_117 () Real)
(declare-fun l_0_16_116 () Real)
(declare-fun l_0_16_177 () Real)
(declare-fun l_0_16_120 () Real)
(declare-fun l_0_16_119 () Real)
(declare-fun l_0_16_186 () Real)
(declare-fun l_0_16_129 () Real)
(declare-fun l_0_16_128 () Real)
(declare-fun l_0_16_178 () Real)
(declare-fun l_0_16_187 () Real)
(declare-fun l_0_16_188 () Real)
(declare-fun l_0_16_189 () Real)
(declare-fun l_0_16_195 () Real)
(declare-fun l_0_16_196 () Real)
(declare-fun l_0_16_83 () Real)
(declare-fun l_0_16_77 () Real)
(declare-fun l_0_16_139 () Real)
(declare-fun l_0_16_133 () Real)
(declare-fun l_0_16_132 () Real)
(declare-fun l_0_16_131 () Real)
(declare-fun l_0_16_130 () Real)
(declare-fun l_0_16_111 () Real)
(declare-fun l_0_16_105 () Real)
(declare-fun l_0_16_84 () Real)
(declare-fun l_0_16_112 () Real)
(declare-fun l_0_16_286 () Real)
(declare-fun l_0_16_258 () Real)
(declare-fun l_0_16_230 () Real)
(declare-fun l_0_16_202 () Real)
(declare-fun l_0_16_289 () Real)
(declare-fun l_0_16_261 () Real)
(declare-fun l_0_16_233 () Real)
(declare-fun l_0_16_205 () Real)
(declare-fun l_0_16_118 () Real)
(declare-fun l_0_16_121 () Real)
(declare-fun l_0_16_122 () Real)
(declare-fun l_0_16_140 () Real)
(declare-fun l_0_16_290 () Real)
(declare-fun l_0_16_262 () Real)
(declare-fun l_0_16_234 () Real)
(declare-fun l_0_16_206 () Real)
(declare-fun l_0_16_308 () Real)
(declare-fun l_0_16_280 () Real)
(declare-fun l_0_16_252 () Real)
(declare-fun l_0_16_224 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_312 () Real)
(declare-fun l_0_17_309 () Real)
(declare-fun l_0_17_284 () Real)
(declare-fun l_0_17_281 () Real)
(declare-fun l_0_17_256 () Real)
(declare-fun l_0_17_253 () Real)
(declare-fun l_0_17_228 () Real)
(declare-fun l_0_17_225 () Real)
(declare-fun l_0_17_200 () Real)
(declare-fun l_0_17_197 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_334 () Real)
(declare-fun l_0_17_323 () Real)
(declare-fun l_0_17_333 () Real)
(declare-fun l_0_17_322 () Real)
(declare-fun l_0_17_332 () Real)
(declare-fun l_0_17_321 () Real)
(declare-fun l_0_17_331 () Real)
(declare-fun l_0_17_320 () Real)
(declare-fun l_0_17_330 () Real)
(declare-fun l_0_17_319 () Real)
(declare-fun l_0_17_306 () Real)
(declare-fun l_0_17_295 () Real)
(declare-fun l_0_17_305 () Real)
(declare-fun l_0_17_294 () Real)
(declare-fun l_0_17_304 () Real)
(declare-fun l_0_17_293 () Real)
(declare-fun l_0_17_303 () Real)
(declare-fun l_0_17_292 () Real)
(declare-fun l_0_17_302 () Real)
(declare-fun l_0_17_291 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_278 () Real)
(declare-fun l_0_17_267 () Real)
(declare-fun l_0_17_277 () Real)
(declare-fun l_0_17_266 () Real)
(declare-fun l_0_17_276 () Real)
(declare-fun l_0_17_265 () Real)
(declare-fun l_0_17_275 () Real)
(declare-fun l_0_17_264 () Real)
(declare-fun l_0_17_274 () Real)
(declare-fun l_0_17_263 () Real)
(declare-fun l_0_17_250 () Real)
(declare-fun l_0_17_239 () Real)
(declare-fun l_0_17_249 () Real)
(declare-fun l_0_17_238 () Real)
(declare-fun l_0_17_248 () Real)
(declare-fun l_0_17_237 () Real)
(declare-fun l_0_17_247 () Real)
(declare-fun l_0_17_236 () Real)
(declare-fun l_0_17_246 () Real)
(declare-fun l_0_17_235 () Real)
(declare-fun l_0_17_222 () Real)
(declare-fun l_0_17_211 () Real)
(declare-fun l_0_17_221 () Real)
(declare-fun l_0_17_210 () Real)
(declare-fun l_0_17_220 () Real)
(declare-fun l_0_17_209 () Real)
(declare-fun l_0_17_219 () Real)
(declare-fun l_0_17_208 () Real)
(declare-fun l_0_17_218 () Real)
(declare-fun l_0_17_207 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_194 () Real)
(declare-fun l_0_17_183 () Real)
(declare-fun l_0_17_193 () Real)
(declare-fun l_0_17_182 () Real)
(declare-fun l_0_17_192 () Real)
(declare-fun l_0_17_181 () Real)
(declare-fun l_0_17_191 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_190 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_17_310 () Real)
(declare-fun l_0_17_282 () Real)
(declare-fun l_0_17_254 () Real)
(declare-fun l_0_17_226 () Real)
(declare-fun l_0_17_198 () Real)
(declare-fun l_0_17_311 () Real)
(declare-fun l_0_17_283 () Real)
(declare-fun l_0_17_255 () Real)
(declare-fun l_0_17_227 () Real)
(declare-fun l_0_17_199 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_313 () Real)
(declare-fun l_0_17_285 () Real)
(declare-fun l_0_17_257 () Real)
(declare-fun l_0_17_229 () Real)
(declare-fun l_0_17_201 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_316 () Real)
(declare-fun l_0_17_315 () Real)
(declare-fun l_0_17_288 () Real)
(declare-fun l_0_17_287 () Real)
(declare-fun l_0_17_260 () Real)
(declare-fun l_0_17_259 () Real)
(declare-fun l_0_17_232 () Real)
(declare-fun l_0_17_231 () Real)
(declare-fun l_0_17_204 () Real)
(declare-fun l_0_17_203 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_325 () Real)
(declare-fun l_0_17_324 () Real)
(declare-fun l_0_17_297 () Real)
(declare-fun l_0_17_296 () Real)
(declare-fun l_0_17_269 () Real)
(declare-fun l_0_17_268 () Real)
(declare-fun l_0_17_241 () Real)
(declare-fun l_0_17_240 () Real)
(declare-fun l_0_17_213 () Real)
(declare-fun l_0_17_212 () Real)
(declare-fun l_0_17_184 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_185 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_186 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_187 () Real)
(declare-fun l_0_17_188 () Real)
(declare-fun l_0_17_189 () Real)
(declare-fun l_0_17_195 () Real)
(declare-fun l_0_17_196 () Real)
(declare-fun l_0_17_335 () Real)
(declare-fun l_0_17_329 () Real)
(declare-fun l_0_17_328 () Real)
(declare-fun l_0_17_327 () Real)
(declare-fun l_0_17_326 () Real)
(declare-fun l_0_17_307 () Real)
(declare-fun l_0_17_301 () Real)
(declare-fun l_0_17_300 () Real)
(declare-fun l_0_17_299 () Real)
(declare-fun l_0_17_298 () Real)
(declare-fun l_0_17_279 () Real)
(declare-fun l_0_17_273 () Real)
(declare-fun l_0_17_272 () Real)
(declare-fun l_0_17_271 () Real)
(declare-fun l_0_17_270 () Real)
(declare-fun l_0_17_251 () Real)
(declare-fun l_0_17_245 () Real)
(declare-fun l_0_17_244 () Real)
(declare-fun l_0_17_243 () Real)
(declare-fun l_0_17_242 () Real)
(declare-fun l_0_17_223 () Real)
(declare-fun l_0_17_217 () Real)
(declare-fun l_0_17_216 () Real)
(declare-fun l_0_17_215 () Real)
(declare-fun l_0_17_214 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_314 () Real)
(declare-fun l_0_17_286 () Real)
(declare-fun l_0_17_258 () Real)
(declare-fun l_0_17_230 () Real)
(declare-fun l_0_17_202 () Real)
(declare-fun l_0_17_317 () Real)
(declare-fun l_0_17_289 () Real)
(declare-fun l_0_17_261 () Real)
(declare-fun l_0_17_233 () Real)
(declare-fun l_0_17_205 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_318 () Real)
(declare-fun l_0_17_290 () Real)
(declare-fun l_0_17_262 () Real)
(declare-fun l_0_17_234 () Real)
(declare-fun l_0_17_206 () Real)
(declare-fun l_0_17_336 () Real)
(declare-fun l_0_17_308 () Real)
(declare-fun l_0_17_280 () Real)
(declare-fun l_0_17_252 () Real)
(declare-fun l_0_17_224 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_340 () Real)
(declare-fun l_0_18_337 () Real)
(declare-fun l_0_18_312 () Real)
(declare-fun l_0_18_309 () Real)
(declare-fun l_0_18_284 () Real)
(declare-fun l_0_18_281 () Real)
(declare-fun l_0_18_256 () Real)
(declare-fun l_0_18_253 () Real)
(declare-fun l_0_18_228 () Real)
(declare-fun l_0_18_225 () Real)
(declare-fun l_0_18_200 () Real)
(declare-fun l_0_18_197 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_362 () Real)
(declare-fun l_0_18_351 () Real)
(declare-fun l_0_18_361 () Real)
(declare-fun l_0_18_350 () Real)
(declare-fun l_0_18_360 () Real)
(declare-fun l_0_18_349 () Real)
(declare-fun l_0_18_359 () Real)
(declare-fun l_0_18_348 () Real)
(declare-fun l_0_18_358 () Real)
(declare-fun l_0_18_347 () Real)
(declare-fun l_0_18_334 () Real)
(declare-fun l_0_18_323 () Real)
(declare-fun l_0_18_333 () Real)
(declare-fun l_0_18_322 () Real)
(declare-fun l_0_18_332 () Real)
(declare-fun l_0_18_321 () Real)
(declare-fun l_0_18_331 () Real)
(declare-fun l_0_18_320 () Real)
(declare-fun l_0_18_330 () Real)
(declare-fun l_0_18_319 () Real)
(declare-fun l_0_18_306 () Real)
(declare-fun l_0_18_295 () Real)
(declare-fun l_0_18_305 () Real)
(declare-fun l_0_18_294 () Real)
(declare-fun l_0_18_304 () Real)
(declare-fun l_0_18_293 () Real)
(declare-fun l_0_18_303 () Real)
(declare-fun l_0_18_292 () Real)
(declare-fun l_0_18_302 () Real)
(declare-fun l_0_18_291 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_278 () Real)
(declare-fun l_0_18_267 () Real)
(declare-fun l_0_18_277 () Real)
(declare-fun l_0_18_266 () Real)
(declare-fun l_0_18_276 () Real)
(declare-fun l_0_18_265 () Real)
(declare-fun l_0_18_275 () Real)
(declare-fun l_0_18_264 () Real)
(declare-fun l_0_18_274 () Real)
(declare-fun l_0_18_263 () Real)
(declare-fun l_0_18_250 () Real)
(declare-fun l_0_18_239 () Real)
(declare-fun l_0_18_249 () Real)
(declare-fun l_0_18_238 () Real)
(declare-fun l_0_18_248 () Real)
(declare-fun l_0_18_237 () Real)
(declare-fun l_0_18_247 () Real)
(declare-fun l_0_18_236 () Real)
(declare-fun l_0_18_246 () Real)
(declare-fun l_0_18_235 () Real)
(declare-fun l_0_18_222 () Real)
(declare-fun l_0_18_211 () Real)
(declare-fun l_0_18_221 () Real)
(declare-fun l_0_18_210 () Real)
(declare-fun l_0_18_220 () Real)
(declare-fun l_0_18_209 () Real)
(declare-fun l_0_18_219 () Real)
(declare-fun l_0_18_208 () Real)
(declare-fun l_0_18_218 () Real)
(declare-fun l_0_18_207 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_18_338 () Real)
(declare-fun l_0_18_310 () Real)
(declare-fun l_0_18_282 () Real)
(declare-fun l_0_18_254 () Real)
(declare-fun l_0_18_226 () Real)
(declare-fun l_0_18_198 () Real)
(declare-fun l_0_18_339 () Real)
(declare-fun l_0_18_311 () Real)
(declare-fun l_0_18_283 () Real)
(declare-fun l_0_18_255 () Real)
(declare-fun l_0_18_227 () Real)
(declare-fun l_0_18_199 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_341 () Real)
(declare-fun l_0_18_313 () Real)
(declare-fun l_0_18_285 () Real)
(declare-fun l_0_18_257 () Real)
(declare-fun l_0_18_229 () Real)
(declare-fun l_0_18_201 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_344 () Real)
(declare-fun l_0_18_343 () Real)
(declare-fun l_0_18_316 () Real)
(declare-fun l_0_18_315 () Real)
(declare-fun l_0_18_288 () Real)
(declare-fun l_0_18_287 () Real)
(declare-fun l_0_18_260 () Real)
(declare-fun l_0_18_259 () Real)
(declare-fun l_0_18_232 () Real)
(declare-fun l_0_18_231 () Real)
(declare-fun l_0_18_204 () Real)
(declare-fun l_0_18_203 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_353 () Real)
(declare-fun l_0_18_352 () Real)
(declare-fun l_0_18_325 () Real)
(declare-fun l_0_18_324 () Real)
(declare-fun l_0_18_297 () Real)
(declare-fun l_0_18_296 () Real)
(declare-fun l_0_18_269 () Real)
(declare-fun l_0_18_268 () Real)
(declare-fun l_0_18_241 () Real)
(declare-fun l_0_18_240 () Real)
(declare-fun l_0_18_213 () Real)
(declare-fun l_0_18_212 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_196 () Real)
(declare-fun l_0_18_363 () Real)
(declare-fun l_0_18_357 () Real)
(declare-fun l_0_18_356 () Real)
(declare-fun l_0_18_355 () Real)
(declare-fun l_0_18_354 () Real)
(declare-fun l_0_18_335 () Real)
(declare-fun l_0_18_329 () Real)
(declare-fun l_0_18_328 () Real)
(declare-fun l_0_18_327 () Real)
(declare-fun l_0_18_326 () Real)
(declare-fun l_0_18_307 () Real)
(declare-fun l_0_18_301 () Real)
(declare-fun l_0_18_300 () Real)
(declare-fun l_0_18_299 () Real)
(declare-fun l_0_18_298 () Real)
(declare-fun l_0_18_279 () Real)
(declare-fun l_0_18_273 () Real)
(declare-fun l_0_18_272 () Real)
(declare-fun l_0_18_271 () Real)
(declare-fun l_0_18_270 () Real)
(declare-fun l_0_18_251 () Real)
(declare-fun l_0_18_245 () Real)
(declare-fun l_0_18_244 () Real)
(declare-fun l_0_18_243 () Real)
(declare-fun l_0_18_242 () Real)
(declare-fun l_0_18_223 () Real)
(declare-fun l_0_18_217 () Real)
(declare-fun l_0_18_216 () Real)
(declare-fun l_0_18_215 () Real)
(declare-fun l_0_18_214 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_342 () Real)
(declare-fun l_0_18_314 () Real)
(declare-fun l_0_18_286 () Real)
(declare-fun l_0_18_258 () Real)
(declare-fun l_0_18_230 () Real)
(declare-fun l_0_18_202 () Real)
(declare-fun l_0_18_345 () Real)
(declare-fun l_0_18_317 () Real)
(declare-fun l_0_18_289 () Real)
(declare-fun l_0_18_261 () Real)
(declare-fun l_0_18_233 () Real)
(declare-fun l_0_18_205 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_346 () Real)
(declare-fun l_0_18_318 () Real)
(declare-fun l_0_18_290 () Real)
(declare-fun l_0_18_262 () Real)
(declare-fun l_0_18_234 () Real)
(declare-fun l_0_18_206 () Real)
(declare-fun l_0_18_364 () Real)
(declare-fun l_0_18_336 () Real)
(declare-fun l_0_18_308 () Real)
(declare-fun l_0_18_280 () Real)
(declare-fun l_0_18_252 () Real)
(declare-fun l_0_18_224 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- (* 1.0 l_0_0_2) l_0_0_3) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- (- (- (* 1.0 l_0_1_2) l_0_1_3) l_0_1_4) l_0_1_5) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (= (- 1.0 l_0_2_1) 0.0))
(assert
 (let ((?x3369 (- (- (- (- (* 1.0 l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6)))
 (= (- ?x3369 l_0_2_7) 0.0)))
(assert
 (= (- l_0_2_2) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (= (- 1.0 (* l_0_3_61 l_0_3_61)) 0.0))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3410 (* ?x3409 l_0_3_52)))
 (let ((?x3406 (* l_0_3_16 l_0_3_16)))
 (let ((?x3407 (+ (* (- l_0_3_1) l_0_3_1) ?x3406)))
 (let ((?x3417 (- (- (- ?x3407 ?x3410) (* (* 2.0 l_0_3_67) l_0_3_71)) (* (* 2.0 l_0_3_68) l_0_3_72))))
 (let ((?x3423 (- (- ?x3417 (* (* 2.0 l_0_3_69) l_0_3_73)) (* (* 2.0 l_0_3_70) l_0_3_74))))
 (= ?x3423 0.0))))))))
(assert
 (let ((?x3518 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3515 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3512 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x3509 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x3506 (* ?x3505 l_0_3_53)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x3503 (* ?x3502 l_0_3_52)))
 (let ((?x3488 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3485 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3482 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3479 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3476 (* ?x3475 l_0_3_17)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3473 (* ?x3472 l_0_3_9)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3470 (* ?x3469 l_0_3_8)))
 (let ((?x3466 (* 2.0 l_0_3_11)))
 (let ((?x3467 (* ?x3466 l_0_3_7)))
 (let ((?x3464 (* (* 2.0 l_0_3_10) l_0_3_14)))
 (let ((?x3461 (* (- 2.0) l_0_3_1)))
 (let ((?x3462 (* ?x3461 l_0_3_2)))
 (let ((?x3483 (+ (+ (+ (- (- (- (- ?x3462 ?x3464) ?x3467) ?x3470) ?x3473) ?x3476) ?x3479) ?x3482)))
 (let ((?x3495 (- (- (+ (+ ?x3483 ?x3485) ?x3488) (* (* 2.0 l_0_3_37) l_0_3_41)) (* (* 2.0 l_0_3_38) l_0_3_42))))
 (let ((?x3501 (- (- ?x3495 (* (* 2.0 l_0_3_39) l_0_3_43)) (* (* 2.0 l_0_3_40) l_0_3_44))))
 (= (+ (+ (+ (+ (- (- ?x3501 ?x3503) ?x3506) ?x3509) ?x3512) ?x3515) ?x3518) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3627 (* 2.0 l_0_3_51)))
 (let ((?x3628 (* ?x3627 l_0_3_54)))
 (let ((?x3624 (* 2.0 l_0_3_50)))
 (let ((?x3625 (* ?x3624 l_0_3_53)))
 (let ((?x3621 (* 2.0 l_0_3_49)))
 (let ((?x3622 (* ?x3621 l_0_3_52)))
 (let ((?x3488 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3485 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3482 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3479 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3615 (* ?x3475 l_0_3_19)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3473 (* ?x3472 l_0_3_9)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3470 (* ?x3469 l_0_3_8)))
 (let ((?x3466 (* 2.0 l_0_3_11)))
 (let ((?x3467 (* ?x3466 l_0_3_7)))
 (let ((?x3464 (* (* 2.0 l_0_3_10) l_0_3_14)))
 (let ((?x3602 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x3464) ?x3467) ?x3470) ?x3473)))
 (let ((?x3626 (- (- (- (- (- (- (+ ?x3602 ?x3615) ?x3479) ?x3482) ?x3485) ?x3488) ?x3622) ?x3625)))
 (= (- ?x3626 ?x3628) 0.0)))))))))))))))))))))))
(assert
 (let ((?x3676 (* l_0_3_55 l_0_3_55)))
 (let ((?x3674 (* l_0_3_54 l_0_3_54)))
 (let ((?x3672 (* l_0_3_53 l_0_3_53)))
 (let ((?x3670 (* l_0_3_52 l_0_3_52)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3668 (* ?x3475 l_0_3_22)))
 (let ((?x3669 (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x3668)))
 (= (- (- (- (- ?x3669 ?x3670) ?x3672) ?x3674) ?x3676) 0.0)))))))))
(assert
 (let ((?x3518 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3515 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3512 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x3509 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3701 (* ?x3475 l_0_3_26)))
 (let ((?x3702 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x3701)))
 (= (- (- (- (- ?x3702 ?x3509) ?x3512) ?x3515) ?x3518) 0.0)))))))))
(assert
 (let ((?x3738 (* l_0_3_3 l_0_3_3)))
 (let ((?x3736 (* l_0_3_2 l_0_3_2)))
 (let ((?x3734 (* l_0_3_18 l_0_3_18)))
 (let ((?x3733 (* l_0_3_17 l_0_3_17)))
 (let ((?x3735 (+ ?x3733 ?x3734)))
 (let ((?x3739 (- (- ?x3735 ?x3736) ?x3738)))
 (= ?x3739 0.0))))))))
(assert
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3757 (* ?x3756 l_0_3_5)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3754 (* ?x3753 l_0_3_4)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3751 (* ?x3750 l_0_3_20)))
 (let ((?x3748 (* 2.0 l_0_3_17)))
 (let ((?x3749 (* ?x3748 l_0_3_19)))
 (= (- (- (+ ?x3749 ?x3751) ?x3754) ?x3757) 0.0))))))))))
(assert
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3783 (* ?x3756 l_0_3_8)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3781 (* ?x3753 l_0_3_7)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3779 (* ?x3750 l_0_3_23)))
 (let ((?x3784 (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_22) ?x3779) ?x3781) ?x3783)))
 (= ?x3784 0.0)))))))))
(assert
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3750 l_0_3_27)))
 (let ((?x3748 (* 2.0 l_0_3_17)))
 (let ((?x3808 (* ?x3748 l_0_3_26)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3806 (* ?x3469 l_0_3_3)))
 (let ((?x3811 (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3806) ?x3808) ?x3810)))
 (= ?x3811 0.0)))))))))
(assert
 (let ((?x3837 (* l_0_3_6 l_0_3_6)))
 (let ((?x3835 (* l_0_3_5 l_0_3_5)))
 (let ((?x3833 (* l_0_3_4 l_0_3_4)))
 (let ((?x3831 (* l_0_3_21 l_0_3_21)))
 (let ((?x3834 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3831) ?x3833)))
 (= (- (- ?x3834 ?x3835) ?x3837) 0.0)))))))
(assert
 (let ((?x3866 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3863 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3860 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3857 (* ?x3856 l_0_3_24)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3854 (* ?x3853 l_0_3_23)))
 (let ((?x3851 (* 2.0 l_0_3_19)))
 (let ((?x3852 (* ?x3851 l_0_3_22)))
 (= (- (- (- (+ (+ ?x3852 ?x3854) ?x3857) ?x3860) ?x3863) ?x3866) 0.0)))))))))))
(assert
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3904 (* ?x3856 l_0_3_28)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3902 (* ?x3853 l_0_3_27)))
 (let ((?x3851 (* 2.0 l_0_3_19)))
 (let ((?x3900 (* ?x3851 l_0_3_26)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3898 (* ?x3472 l_0_3_6)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3896 (* ?x3469 l_0_3_5)))
 (let ((?x3903 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3896) ?x3898) ?x3900) ?x3902)))
 (= (+ ?x3903 ?x3904) 0.0)))))))))))))
(assert
 (let ((?x3944 (* l_0_3_9 l_0_3_9)))
 (let ((?x3942 (* l_0_3_8 l_0_3_8)))
 (let ((?x3940 (* l_0_3_7 l_0_3_7)))
 (let ((?x3938 (* l_0_3_25 l_0_3_25)))
 (let ((?x3936 (* l_0_3_24 l_0_3_24)))
 (let ((?x3934 (* l_0_3_23 l_0_3_23)))
 (let ((?x3937 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x3934) ?x3936)))
 (let ((?x3939 (+ ?x3937 ?x3938)))
 (= (- (- (- ?x3939 ?x3940) ?x3942) ?x3944) 0.0))))))))))
(assert
 (let ((?x3488 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x3485 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x3482 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x3479 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3473 (* ?x3472 l_0_3_9)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3470 (* ?x3469 l_0_3_8)))
 (let ((?x3466 (* 2.0 l_0_3_11)))
 (let ((?x3467 (* ?x3466 l_0_3_7)))
 (let ((?x3966 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x3467) ?x3470) ?x3473) ?x3479)))
 (= (+ (+ (+ ?x3966 ?x3482) ?x3485) ?x3488) 0.0)))))))))))))
(assert
 (let ((?x3997 (* l_0_3_30 l_0_3_30)))
 (let ((?x3995 (* l_0_3_29 l_0_3_29)))
 (let ((?x3993 (* l_0_3_28 l_0_3_28)))
 (let ((?x3991 (* l_0_3_27 l_0_3_27)))
 (let ((?x3989 (* l_0_3_26 l_0_3_26)))
 (let ((?x3987 (* l_0_3_15 l_0_3_15)))
 (let ((?x3985 (* l_0_3_14 l_0_3_14)))
 (let ((?x3983 (* l_0_3_13 l_0_3_13)))
 (let ((?x3986 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3983) ?x3985)))
 (let ((?x3998 (+ (+ (+ (+ (+ (- ?x3986 ?x3987) ?x3989) ?x3991) ?x3993) ?x3995) ?x3997)))
 (= ?x3998 0.0))))))))))))
(assert
 (let ((?x4024 (* l_0_3_46 l_0_3_46)))
 (let ((?x4015 (* l_0_3_31 l_0_3_31)))
 (let ((?x3406 (* l_0_3_16 l_0_3_16)))
 (let ((?x3407 (+ (* (- l_0_3_1) l_0_3_1) ?x3406)))
 (= (- (+ (- ?x3407 ?x4015) ?x4024) (* (* 2.0 l_0_3_61) l_0_3_62)) 0.0))))))
(assert
 (let ((?x4049 (* l_0_3_63 l_0_3_63)))
 (let ((?x4047 (* l_0_3_62 l_0_3_62)))
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4045 (* ?x3409 l_0_3_47)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3476 (* ?x3475 l_0_3_17)))
 (let ((?x3461 (* (- 2.0) l_0_3_1)))
 (let ((?x3462 (* ?x3461 l_0_3_2)))
 (let ((?x4048 (- (+ (- (+ ?x3462 ?x3476) (* (* 2.0 l_0_3_31) l_0_3_32)) ?x4045) ?x4047)))
 (= (- ?x4048 ?x4049) 0.0)))))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4079 (* ?x3409 l_0_3_49)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3615 (* ?x3475 l_0_3_19)))
 (let ((?x3476 (* ?x3475 l_0_3_17)))
 (let ((?x4071 (* 2.0 l_0_3_1)))
 (let ((?x4073 (* ?x4071 l_0_3_4)))
 (let ((?x4078 (- (+ (- (- (* ?x4071 l_0_3_2) ?x4073) ?x3476) ?x3615) (* (* 2.0 l_0_3_31) l_0_3_34))))
 (let ((?x4086 (- (- (+ ?x4078 ?x4079) (* (* 2.0 l_0_3_62) l_0_3_64)) (* (* 2.0 l_0_3_63) l_0_3_65))))
 (= ?x4086 0.0)))))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x3410 (* ?x3409 l_0_3_52)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3668 (* ?x3475 l_0_3_22)))
 (let ((?x3669 (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x3668)))
 (let ((?x4122 (- (+ (- ?x3669 (* (* 2.0 l_0_3_31) l_0_3_37)) ?x3410) (* (* 2.0 l_0_3_62) l_0_3_67))))
 (= (- ?x4122 (* (* 2.0 l_0_3_63) l_0_3_68)) 0.0))))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4045 (* ?x3409 l_0_3_47)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3701 (* ?x3475 l_0_3_26)))
 (let ((?x3702 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x3701)))
 (let ((?x4150 (+ (- (- ?x3702 (* (* 2.0 l_0_3_31) l_0_3_41)) ?x4045) (* ?x3409 l_0_3_56))))
 (let ((?x4154 (- (- ?x4150 (* (* 2.0 l_0_3_62) l_0_3_71)) (* (* 2.0 l_0_3_63) l_0_3_72))))
 (= ?x4154 0.0)))))))))
(assert
 (let ((?x4189 (* l_0_3_48 l_0_3_48)))
 (let ((?x4187 (* l_0_3_47 l_0_3_47)))
 (let ((?x4185 (* l_0_3_33 l_0_3_33)))
 (let ((?x4183 (* l_0_3_32 l_0_3_32)))
 (let ((?x3738 (* l_0_3_3 l_0_3_3)))
 (let ((?x3736 (* l_0_3_2 l_0_3_2)))
 (let ((?x3734 (* l_0_3_18 l_0_3_18)))
 (let ((?x3733 (* l_0_3_17 l_0_3_17)))
 (let ((?x3735 (+ ?x3733 ?x3734)))
 (let ((?x3739 (- (- ?x3735 ?x3736) ?x3738)))
 (= (+ (+ (- (- ?x3739 ?x4183) ?x4185) ?x4187) ?x4189) 0.0))))))))))))
(assert
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x4215 (* ?x3505 l_0_3_50)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x4213 (* ?x3502 l_0_3_49)))
 (let ((?x3738 (* l_0_3_3 l_0_3_3)))
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3757 (* ?x3756 l_0_3_5)))
 (let ((?x3736 (* l_0_3_2 l_0_3_2)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3754 (* ?x3753 l_0_3_4)))
 (let ((?x3734 (* l_0_3_18 l_0_3_18)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3751 (* ?x3750 l_0_3_20)))
 (let ((?x4201 (+ (- (* (* 2.0 l_0_3_17) l_0_3_19) (* l_0_3_17 l_0_3_17)) ?x3751)))
 (let ((?x4209 (- (+ (- (+ (- (- ?x4201 ?x3734) ?x3754) ?x3736) ?x3757) ?x3738) (* (* 2.0 l_0_3_32) l_0_3_34))))
 (= (+ (+ (- ?x4209 (* (* 2.0 l_0_3_33) l_0_3_35)) ?x4213) ?x4215) 0.0)))))))))))))))))
(assert
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x3506 (* ?x3505 l_0_3_53)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x3503 (* ?x3502 l_0_3_52)))
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3783 (* ?x3756 l_0_3_8)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3781 (* ?x3753 l_0_3_7)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3779 (* ?x3750 l_0_3_23)))
 (let ((?x3784 (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_22) ?x3779) ?x3781) ?x3783)))
 (let ((?x4254 (- (- ?x3784 (* (* 2.0 l_0_3_32) l_0_3_37)) (* (* 2.0 l_0_3_33) l_0_3_38))))
 (= (+ (+ ?x4254 ?x3503) ?x3506) 0.0))))))))))))))
(assert
 (let ((?x4189 (* l_0_3_48 l_0_3_48)))
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x4279 (* ?x3505 l_0_3_57)))
 (let ((?x4187 (* l_0_3_47 l_0_3_47)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x4276 (* ?x3502 l_0_3_56)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3750 l_0_3_27)))
 (let ((?x3748 (* 2.0 l_0_3_17)))
 (let ((?x3808 (* ?x3748 l_0_3_26)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3806 (* ?x3469 l_0_3_3)))
 (let ((?x3811 (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3806) ?x3808) ?x3810)))
 (let ((?x4275 (- (- ?x3811 (* (* 2.0 l_0_3_32) l_0_3_41)) (* (* 2.0 l_0_3_33) l_0_3_42))))
 (= (- (+ (- (+ ?x4275 ?x4276) ?x4187) ?x4279) ?x4189) 0.0))))))))))))))))
(assert
 (let ((?x3837 (* l_0_3_6 l_0_3_6)))
 (let ((?x4334 (* l_0_3_51 l_0_3_51)))
 (let ((?x4332 (* l_0_3_50 l_0_3_50)))
 (let ((?x3835 (* l_0_3_5 l_0_3_5)))
 (let ((?x4329 (* l_0_3_49 l_0_3_49)))
 (let ((?x3833 (* l_0_3_4 l_0_3_4)))
 (let ((?x4326 (* l_0_3_36 l_0_3_36)))
 (let ((?x4324 (* l_0_3_35 l_0_3_35)))
 (let ((?x4322 (* l_0_3_34 l_0_3_34)))
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3757 (* ?x3756 l_0_3_5)))
 (let ((?x3831 (* l_0_3_21 l_0_3_21)))
 (let ((?x3824 (* l_0_3_20 l_0_3_20)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3754 (* ?x3753 l_0_3_4)))
 (let ((?x3822 (* l_0_3_19 l_0_3_19)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3751 (* ?x3750 l_0_3_20)))
 (let ((?x4319 (+ (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x3751) ?x3822) ?x3754) ?x3824)))
 (let ((?x4330 (+ (- (- (- (- (+ (+ ?x4319 ?x3831) ?x3757) ?x4322) ?x4324) ?x4326) ?x3833) ?x4329)))
 (= (- (+ (+ (- ?x4330 ?x3835) ?x4332) ?x4334) ?x3837) 0.0))))))))))))))))))))))
(assert
 (let ((?x3866 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3627 (* 2.0 l_0_3_51)))
 (let ((?x3628 (* ?x3627 l_0_3_54)))
 (let ((?x3624 (* 2.0 l_0_3_50)))
 (let ((?x3625 (* ?x3624 l_0_3_53)))
 (let ((?x3863 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3621 (* 2.0 l_0_3_49)))
 (let ((?x3622 (* ?x3621 l_0_3_52)))
 (let ((?x3860 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3756 (* 2.0 l_0_3_3)))
 (let ((?x3783 (* ?x3756 l_0_3_8)))
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3857 (* ?x3856 l_0_3_24)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3854 (* ?x3853 l_0_3_23)))
 (let ((?x3753 (* 2.0 l_0_3_2)))
 (let ((?x3781 (* ?x3753 l_0_3_7)))
 (let ((?x3851 (* 2.0 l_0_3_19)))
 (let ((?x3852 (* ?x3851 l_0_3_22)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3779 (* ?x3750 l_0_3_23)))
 (let ((?x4371 (+ (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x3779) ?x3852) ?x3781) ?x3854)))
 (let ((?x4379 (- (- (+ (+ ?x4371 ?x3857) ?x3783) (* (* 2.0 l_0_3_34) l_0_3_37)) (* (* 2.0 l_0_3_35) l_0_3_38))))
 (let ((?x4385 (- (+ (- (- ?x4379 (* (* 2.0 l_0_3_36) l_0_3_39)) ?x3860) ?x3622) ?x3863)))
 (= (- (+ (+ ?x4385 ?x3625) ?x3628) ?x3866) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3627 (* 2.0 l_0_3_51)))
 (let ((?x4446 (* ?x3627 l_0_3_58)))
 (let ((?x3624 (* 2.0 l_0_3_50)))
 (let ((?x4444 (* ?x3624 l_0_3_57)))
 (let ((?x3621 (* 2.0 l_0_3_49)))
 (let ((?x4442 (* ?x3621 l_0_3_56)))
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x4215 (* ?x3505 l_0_3_50)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x4213 (* ?x3502 l_0_3_49)))
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3904 (* ?x3856 l_0_3_28)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3902 (* ?x3853 l_0_3_27)))
 (let ((?x3851 (* 2.0 l_0_3_19)))
 (let ((?x3900 (* ?x3851 l_0_3_26)))
 (let ((?x3750 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3750 l_0_3_27)))
 (let ((?x3748 (* 2.0 l_0_3_17)))
 (let ((?x3808 (* ?x3748 l_0_3_26)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3898 (* ?x3472 l_0_3_6)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3896 (* ?x3469 l_0_3_5)))
 (let ((?x3806 (* ?x3469 l_0_3_3)))
 (let ((?x3466 (* 2.0 l_0_3_11)))
 (let ((?x4424 (* ?x3466 l_0_3_4)))
 (let ((?x4430 (- (- (- (- (+ (- (* ?x3466 l_0_3_2) ?x4424) ?x3806) ?x3896) ?x3898) ?x3808) ?x3810)))
 (let ((?x4435 (- (+ (+ (+ ?x4430 ?x3900) ?x3902) ?x3904) (* (* 2.0 l_0_3_34) l_0_3_41))))
 (let ((?x4439 (- (- ?x4435 (* (* 2.0 l_0_3_35) l_0_3_42)) (* (* 2.0 l_0_3_36) l_0_3_43))))
 (= (+ (+ (+ (- (- ?x4439 ?x4213) ?x4215) ?x4442) ?x4444) ?x4446) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3944 (* l_0_3_9 l_0_3_9)))
 (let ((?x3942 (* l_0_3_8 l_0_3_8)))
 (let ((?x3940 (* l_0_3_7 l_0_3_7)))
 (let ((?x3676 (* l_0_3_55 l_0_3_55)))
 (let ((?x3674 (* l_0_3_54 l_0_3_54)))
 (let ((?x3672 (* l_0_3_53 l_0_3_53)))
 (let ((?x3670 (* l_0_3_52 l_0_3_52)))
 (let ((?x4507 (* l_0_3_40 l_0_3_40)))
 (let ((?x4505 (* l_0_3_39 l_0_3_39)))
 (let ((?x4503 (* l_0_3_38 l_0_3_38)))
 (let ((?x4501 (* l_0_3_37 l_0_3_37)))
 (let ((?x3938 (* l_0_3_25 l_0_3_25)))
 (let ((?x3936 (* l_0_3_24 l_0_3_24)))
 (let ((?x3934 (* l_0_3_23 l_0_3_23)))
 (let ((?x3937 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x3934) ?x3936)))
 (let ((?x3939 (+ ?x3937 ?x3938)))
 (let ((?x4511 (+ (+ (+ (- (- (- (- ?x3939 ?x4501) ?x4503) ?x4505) ?x4507) ?x3670) ?x3672) ?x3674)))
 (= (- (- (- (+ ?x4511 ?x3676) ?x3940) ?x3942) ?x3944) 0.0)))))))))))))))))))
(assert
 (let ((?x4557 (* l_0_3_60 l_0_3_60)))
 (let ((?x4555 (* l_0_3_59 l_0_3_59)))
 (let ((?x4553 (* l_0_3_58 l_0_3_58)))
 (let ((?x4551 (* l_0_3_57 l_0_3_57)))
 (let ((?x4549 (* l_0_3_56 l_0_3_56)))
 (let ((?x3505 (* 2.0 l_0_3_48)))
 (let ((?x4279 (* ?x3505 l_0_3_57)))
 (let ((?x3502 (* 2.0 l_0_3_47)))
 (let ((?x4276 (* ?x3502 l_0_3_56)))
 (let ((?x4545 (* l_0_3_45 l_0_3_45)))
 (let ((?x4543 (* l_0_3_44 l_0_3_44)))
 (let ((?x4541 (* l_0_3_43 l_0_3_43)))
 (let ((?x4539 (* l_0_3_42 l_0_3_42)))
 (let ((?x4537 (* l_0_3_41 l_0_3_41)))
 (let ((?x3997 (* l_0_3_30 l_0_3_30)))
 (let ((?x3995 (* l_0_3_29 l_0_3_29)))
 (let ((?x3993 (* l_0_3_28 l_0_3_28)))
 (let ((?x3991 (* l_0_3_27 l_0_3_27)))
 (let ((?x3989 (* l_0_3_26 l_0_3_26)))
 (let ((?x3987 (* l_0_3_15 l_0_3_15)))
 (let ((?x3985 (* l_0_3_14 l_0_3_14)))
 (let ((?x3983 (* l_0_3_13 l_0_3_13)))
 (let ((?x3986 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3983) ?x3985)))
 (let ((?x3998 (+ (+ (+ (+ (+ (- ?x3986 ?x3987) ?x3989) ?x3991) ?x3993) ?x3995) ?x3997)))
 (let ((?x4548 (- (- (- (- (- (- (- ?x3998 ?x4537) ?x4539) ?x4541) ?x4543) ?x4545) ?x4276) ?x4279)))
 (= (+ (+ (+ (+ (+ ?x4548 ?x4549) ?x4551) ?x4553) ?x4555) ?x4557) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4591 (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (= ?x4591 0.0)))
(assert
 (let ((?x4609 (* l_0_3_66 l_0_3_66)))
 (let ((?x4607 (* l_0_3_65 l_0_3_65)))
 (let ((?x4605 (* l_0_3_64 l_0_3_64)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3615 (* ?x3475 l_0_3_19)))
 (let ((?x4071 (* 2.0 l_0_3_1)))
 (let ((?x4073 (* ?x4071 l_0_3_4)))
 (= (- (- (- (- ?x4073 ?x3615) ?x4605) ?x4607) ?x4609) 0.0)))))))))
(assert
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3668 (* ?x3475 l_0_3_22)))
 (let ((?x4630 (- (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x3668) (* (* 2.0 l_0_3_64) l_0_3_67))))
 (let ((?x4636 (- (- ?x4630 (* (* 2.0 l_0_3_65) l_0_3_68)) (* (* 2.0 l_0_3_66) l_0_3_69))))
 (= ?x4636 0.0))))))
(assert
 (let ((?x3409 (* 2.0 l_0_3_46)))
 (let ((?x4079 (* ?x3409 l_0_3_49)))
 (let ((?x3475 (* 2.0 l_0_3_16)))
 (let ((?x3701 (* ?x3475 l_0_3_26)))
 (let ((?x4664 (- (- (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x3701) ?x4079) (* (* 2.0 l_0_3_64) l_0_3_71))))
 (let ((?x4668 (- (- ?x4664 (* (* 2.0 l_0_3_65) l_0_3_72)) (* (* 2.0 l_0_3_66) l_0_3_73))))
 (= ?x4668 0.0))))))))
(assert
 (let ((?x3837 (* l_0_3_6 l_0_3_6)))
 (let ((?x3835 (* l_0_3_5 l_0_3_5)))
 (let ((?x3833 (* l_0_3_4 l_0_3_4)))
 (let ((?x3831 (* l_0_3_21 l_0_3_21)))
 (let ((?x4700 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3831) ?x3833)))
 (= (+ (+ ?x4700 ?x3835) ?x3837) 0.0)))))))
(assert
 (let ((?x3866 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3863 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3860 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3857 (* ?x3856 l_0_3_24)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3854 (* ?x3853 l_0_3_23)))
 (let ((?x4713 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x3854) ?x3857) ?x3860) ?x3863)))
 (= (+ ?x4713 ?x3866) 0.0))))))))))
(assert
 (let ((?x4334 (* l_0_3_51 l_0_3_51)))
 (let ((?x4332 (* l_0_3_50 l_0_3_50)))
 (let ((?x4329 (* l_0_3_49 l_0_3_49)))
 (let ((?x3856 (* 2.0 l_0_3_21)))
 (let ((?x3904 (* ?x3856 l_0_3_28)))
 (let ((?x3853 (* 2.0 l_0_3_20)))
 (let ((?x3902 (* ?x3853 l_0_3_27)))
 (let ((?x3851 (* 2.0 l_0_3_19)))
 (let ((?x3900 (* ?x3851 l_0_3_26)))
 (let ((?x3472 (* 2.0 l_0_3_13)))
 (let ((?x3898 (* ?x3472 l_0_3_6)))
 (let ((?x3469 (* 2.0 l_0_3_12)))
 (let ((?x3896 (* ?x3469 l_0_3_5)))
 (let ((?x3466 (* 2.0 l_0_3_11)))
 (let ((?x4424 (* ?x3466 l_0_3_4)))
 (let ((?x4731 (- (- (- (- (- (+ (+ ?x4424 ?x3896) ?x3898) ?x3900) ?x3902) ?x3904) ?x4329) ?x4332)))
 (= (- ?x4731 ?x4334) 0.0))))))))))))))))))
(assert
 (let ((?x3944 (* l_0_3_9 l_0_3_9)))
 (let ((?x3942 (* l_0_3_8 l_0_3_8)))
 (let ((?x3940 (* l_0_3_7 l_0_3_7)))
 (let ((?x3938 (* l_0_3_25 l_0_3_25)))
 (let ((?x3936 (* l_0_3_24 l_0_3_24)))
 (let ((?x3934 (* l_0_3_23 l_0_3_23)))
 (let ((?x4752 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x3934) ?x3936)))
 (= (+ (+ (+ (- ?x4752 ?x3938) ?x3940) ?x3942) ?x3944) 0.0)))))))))
(assert
 (let ((?x3627 (* 2.0 l_0_3_51)))
 (let ((?x4446 (* ?x3627 l_0_3_58)))
 (let ((?x3624 (* 2.0 l_0_3_50)))
 (let ((?x4444 (* ?x3624 l_0_3_57)))
 (let ((?x3621 (* 2.0 l_0_3_49)))
 (let ((?x4442 (* ?x3621 l_0_3_56)))
 (let ((?x3997 (* l_0_3_30 l_0_3_30)))
 (let ((?x3995 (* l_0_3_29 l_0_3_29)))
 (let ((?x3993 (* l_0_3_28 l_0_3_28)))
 (let ((?x3991 (* l_0_3_27 l_0_3_27)))
 (let ((?x3989 (* l_0_3_26 l_0_3_26)))
 (let ((?x3987 (* l_0_3_15 l_0_3_15)))
 (let ((?x3985 (* l_0_3_14 l_0_3_14)))
 (let ((?x3983 (* l_0_3_13 l_0_3_13)))
 (let ((?x4772 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3983) ?x3985)))
 (let ((?x4779 (- (- (- (- (- (- (+ ?x4772 ?x3987) ?x3989) ?x3991) ?x3993) ?x3995) ?x3997) ?x4442)))
 (= (- (- ?x4779 ?x4444) ?x4446) 0.0))))))))))))))))))
(assert
 (= (- (* (- l_0_3_46) l_0_3_46) (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0))
(assert
 (let ((?x4831 (* l_0_3_75 l_0_3_75)))
 (let ((?x4829 (* l_0_3_74 l_0_3_74)))
 (let ((?x4827 (* l_0_3_73 l_0_3_73)))
 (let ((?x4825 (* l_0_3_72 l_0_3_72)))
 (let ((?x4826 (- (- (* (* (- 2.0) l_0_3_46) l_0_3_56) (* l_0_3_71 l_0_3_71)) ?x4825)))
 (= (- (- (- ?x4826 ?x4827) ?x4829) ?x4831) 0.0)))))))
(assert
 (let ((?x4557 (* l_0_3_60 l_0_3_60)))
 (let ((?x4555 (* l_0_3_59 l_0_3_59)))
 (let ((?x4553 (* l_0_3_58 l_0_3_58)))
 (let ((?x4854 (- (- (- (* (- l_0_3_56) l_0_3_56) (* l_0_3_57 l_0_3_57)) ?x4553) ?x4555)))
 (= (- ?x4854 ?x4557) 0.0))))))
(assert
 (= (* (* (- 2.0) l_0_3_61) l_0_3_67) 0.0))
(assert
 (let ((?x4878 (* l_0_3_70 l_0_3_70)))
 (let ((?x4876 (* l_0_3_69 l_0_3_69)))
 (let ((?x4879 (- (- (- (* (- l_0_3_67) l_0_3_67) (* l_0_3_68 l_0_3_68)) ?x4876) ?x4878)))
 (= ?x4879 0.0)))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (= (- (* l_0_4_46 l_0_4_46) (* (* 2.0 l_0_4_61) l_0_4_71)) 0.0))
(assert
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x4937 (* ?x4936 l_0_4_52)))
 (let ((?x4934 (* l_0_4_16 l_0_4_16)))
 (let ((?x4935 (+ (* (- l_0_4_1) l_0_4_1) ?x4934)))
 (let ((?x4944 (- (- (+ ?x4935 ?x4937) (* (* 2.0 l_0_4_67) l_0_4_71)) (* (* 2.0 l_0_4_68) l_0_4_72))))
 (let ((?x4950 (- (- ?x4944 (* (* 2.0 l_0_4_69) l_0_4_73)) (* (* 2.0 l_0_4_70) l_0_4_74))))
 (= ?x4950 0.0))))))))
(assert
 (let ((?x5040 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5037 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5034 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5031 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5028 (* ?x5027 l_0_4_53)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5025 (* ?x5024 l_0_4_52)))
 (let ((?x5010 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5007 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5004 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5001 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x4998 (* ?x4997 l_0_4_17)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x4995 (* ?x4994 l_0_4_9)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x4992 (* ?x4991 l_0_4_8)))
 (let ((?x4988 (* 2.0 l_0_4_11)))
 (let ((?x4989 (* ?x4988 l_0_4_7)))
 (let ((?x4986 (* (* 2.0 l_0_4_10) l_0_4_14)))
 (let ((?x4983 (* (- 2.0) l_0_4_1)))
 (let ((?x4984 (* ?x4983 l_0_4_2)))
 (let ((?x5005 (+ (+ (+ (- (- (- (- ?x4984 ?x4986) ?x4989) ?x4992) ?x4995) ?x4998) ?x5001) ?x5004)))
 (let ((?x5017 (- (- (+ (+ ?x5005 ?x5007) ?x5010) (* (* 2.0 l_0_4_37) l_0_4_41)) (* (* 2.0 l_0_4_38) l_0_4_42))))
 (let ((?x5023 (- (- ?x5017 (* (* 2.0 l_0_4_39) l_0_4_43)) (* (* 2.0 l_0_4_40) l_0_4_44))))
 (= (- (- (- (- (+ (+ ?x5023 ?x5025) ?x5028) ?x5031) ?x5034) ?x5037) ?x5040) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5160 (* 2.0 l_0_4_51)))
 (let ((?x5161 (* ?x5160 l_0_4_54)))
 (let ((?x5157 (* 2.0 l_0_4_50)))
 (let ((?x5158 (* ?x5157 l_0_4_53)))
 (let ((?x5154 (* 2.0 l_0_4_49)))
 (let ((?x5155 (* ?x5154 l_0_4_52)))
 (let ((?x5010 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5007 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5004 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5001 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5148 (* ?x4997 l_0_4_19)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x4995 (* ?x4994 l_0_4_9)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x4992 (* ?x4991 l_0_4_8)))
 (let ((?x4988 (* 2.0 l_0_4_11)))
 (let ((?x4989 (* ?x4988 l_0_4_7)))
 (let ((?x4986 (* (* 2.0 l_0_4_10) l_0_4_14)))
 (let ((?x5147 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x4986) ?x4989) ?x4992) ?x4995)))
 (let ((?x5159 (+ (+ (- (- (- (- (+ ?x5147 ?x5148) ?x5001) ?x5004) ?x5007) ?x5010) ?x5155) ?x5158)))
 (= (+ ?x5159 ?x5161) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5198 (* l_0_4_55 l_0_4_55)))
 (let ((?x5196 (* l_0_4_54 l_0_4_54)))
 (let ((?x5194 (* l_0_4_53 l_0_4_53)))
 (let ((?x5192 (* l_0_4_52 l_0_4_52)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5190 (* ?x4997 l_0_4_22)))
 (let ((?x5191 (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x5190)))
 (= (+ (+ (+ (+ ?x5191 ?x5192) ?x5194) ?x5196) ?x5198) 0.0)))))))))
(assert
 (let ((?x5040 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5037 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5034 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5031 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5208 (* ?x4997 l_0_4_26)))
 (let ((?x5209 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x5208)))
 (= (+ (+ (+ (+ ?x5209 ?x5031) ?x5034) ?x5037) ?x5040) 0.0)))))))))
(assert
 (let ((?x5226 (* l_0_4_3 l_0_4_3)))
 (let ((?x5224 (* l_0_4_2 l_0_4_2)))
 (let ((?x5222 (* l_0_4_18 l_0_4_18)))
 (let ((?x5221 (* l_0_4_17 l_0_4_17)))
 (let ((?x5223 (+ ?x5221 ?x5222)))
 (let ((?x5227 (- (- ?x5223 ?x5224) ?x5226)))
 (= ?x5227 0.0))))))))
(assert
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5245 (* ?x5244 l_0_4_5)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5242 (* ?x5241 l_0_4_4)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5239 (* ?x5238 l_0_4_20)))
 (let ((?x5236 (* 2.0 l_0_4_17)))
 (let ((?x5237 (* ?x5236 l_0_4_19)))
 (= (- (- (+ ?x5237 ?x5239) ?x5242) ?x5245) 0.0))))))))))
(assert
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5271 (* ?x5244 l_0_4_8)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5269 (* ?x5241 l_0_4_7)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5267 (* ?x5238 l_0_4_23)))
 (let ((?x5272 (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_22) ?x5267) ?x5269) ?x5271)))
 (= ?x5272 0.0)))))))))
(assert
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5298 (* ?x5238 l_0_4_27)))
 (let ((?x5236 (* 2.0 l_0_4_17)))
 (let ((?x5296 (* ?x5236 l_0_4_26)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x5294 (* ?x4991 l_0_4_3)))
 (let ((?x5299 (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x5294) ?x5296) ?x5298)))
 (= ?x5299 0.0)))))))))
(assert
 (let ((?x5325 (* l_0_4_6 l_0_4_6)))
 (let ((?x5323 (* l_0_4_5 l_0_4_5)))
 (let ((?x5321 (* l_0_4_4 l_0_4_4)))
 (let ((?x5319 (* l_0_4_21 l_0_4_21)))
 (let ((?x5322 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5319) ?x5321)))
 (= (- (- ?x5322 ?x5323) ?x5325) 0.0)))))))
(assert
 (let ((?x5354 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5351 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5348 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5345 (* ?x5344 l_0_4_24)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5342 (* ?x5341 l_0_4_23)))
 (let ((?x5339 (* 2.0 l_0_4_19)))
 (let ((?x5340 (* ?x5339 l_0_4_22)))
 (= (- (- (- (+ (+ ?x5340 ?x5342) ?x5345) ?x5348) ?x5351) ?x5354) 0.0)))))))))))
(assert
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5392 (* ?x5344 l_0_4_28)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5390 (* ?x5341 l_0_4_27)))
 (let ((?x5339 (* 2.0 l_0_4_19)))
 (let ((?x5388 (* ?x5339 l_0_4_26)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x5386 (* ?x4994 l_0_4_6)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x5384 (* ?x4991 l_0_4_5)))
 (let ((?x5391 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x5384) ?x5386) ?x5388) ?x5390)))
 (= (+ ?x5391 ?x5392) 0.0)))))))))))))
(assert
 (let ((?x5432 (* l_0_4_9 l_0_4_9)))
 (let ((?x5430 (* l_0_4_8 l_0_4_8)))
 (let ((?x5428 (* l_0_4_7 l_0_4_7)))
 (let ((?x5426 (* l_0_4_25 l_0_4_25)))
 (let ((?x5424 (* l_0_4_24 l_0_4_24)))
 (let ((?x5422 (* l_0_4_23 l_0_4_23)))
 (let ((?x5425 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x5422) ?x5424)))
 (let ((?x5427 (+ ?x5425 ?x5426)))
 (= (- (- (- ?x5427 ?x5428) ?x5430) ?x5432) 0.0))))))))))
(assert
 (let ((?x5010 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x5007 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x5004 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x5001 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x4995 (* ?x4994 l_0_4_9)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x4992 (* ?x4991 l_0_4_8)))
 (let ((?x4988 (* 2.0 l_0_4_11)))
 (let ((?x4989 (* ?x4988 l_0_4_7)))
 (let ((?x5454 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x4989) ?x4992) ?x4995) ?x5001)))
 (= (+ (+ (+ ?x5454 ?x5004) ?x5007) ?x5010) 0.0)))))))))))))
(assert
 (let ((?x5485 (* l_0_4_30 l_0_4_30)))
 (let ((?x5483 (* l_0_4_29 l_0_4_29)))
 (let ((?x5481 (* l_0_4_28 l_0_4_28)))
 (let ((?x5479 (* l_0_4_27 l_0_4_27)))
 (let ((?x5477 (* l_0_4_26 l_0_4_26)))
 (let ((?x5475 (* l_0_4_15 l_0_4_15)))
 (let ((?x5473 (* l_0_4_14 l_0_4_14)))
 (let ((?x5471 (* l_0_4_13 l_0_4_13)))
 (let ((?x5474 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5471) ?x5473)))
 (let ((?x5486 (+ (+ (+ (+ (+ (- ?x5474 ?x5475) ?x5477) ?x5479) ?x5481) ?x5483) ?x5485)))
 (= ?x5486 0.0))))))))))))
(assert
 (let ((?x4920 (* l_0_4_46 l_0_4_46)))
 (let ((?x5503 (* l_0_4_31 l_0_4_31)))
 (let ((?x4934 (* l_0_4_16 l_0_4_16)))
 (let ((?x4935 (+ (* (- l_0_4_1) l_0_4_1) ?x4934)))
 (= (- (- (- ?x4935 ?x5503) ?x4920) (* (* 2.0 l_0_4_61) l_0_4_62)) 0.0))))))
(assert
 (let ((?x5540 (* l_0_4_63 l_0_4_63)))
 (let ((?x5538 (* l_0_4_62 l_0_4_62)))
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x5536 (* ?x4936 l_0_4_47)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x4998 (* ?x4997 l_0_4_17)))
 (let ((?x4983 (* (- 2.0) l_0_4_1)))
 (let ((?x4984 (* ?x4983 l_0_4_2)))
 (let ((?x5539 (- (- (- (+ ?x4984 ?x4998) (* (* 2.0 l_0_4_31) l_0_4_32)) ?x5536) ?x5538)))
 (= (- ?x5539 ?x5540) 0.0)))))))))))
(assert
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x5572 (* ?x4936 l_0_4_49)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5148 (* ?x4997 l_0_4_19)))
 (let ((?x4998 (* ?x4997 l_0_4_17)))
 (let ((?x5564 (* 2.0 l_0_4_1)))
 (let ((?x5566 (* ?x5564 l_0_4_4)))
 (let ((?x5571 (- (+ (- (- (* ?x5564 l_0_4_2) ?x5566) ?x4998) ?x5148) (* (* 2.0 l_0_4_31) l_0_4_34))))
 (let ((?x5579 (- (- (- ?x5571 ?x5572) (* (* 2.0 l_0_4_62) l_0_4_64)) (* (* 2.0 l_0_4_63) l_0_4_65))))
 (= ?x5579 0.0)))))))))))
(assert
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x4937 (* ?x4936 l_0_4_52)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5190 (* ?x4997 l_0_4_22)))
 (let ((?x5191 (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x5190)))
 (let ((?x5618 (- (- (- ?x5191 (* (* 2.0 l_0_4_31) l_0_4_37)) ?x4937) (* (* 2.0 l_0_4_62) l_0_4_67))))
 (= (- ?x5618 (* (* 2.0 l_0_4_63) l_0_4_68)) 0.0))))))))
(assert
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x5652 (* ?x4936 l_0_4_56)))
 (let ((?x5536 (* ?x4936 l_0_4_47)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5208 (* ?x4997 l_0_4_26)))
 (let ((?x5209 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x5208)))
 (let ((?x5655 (- (- (+ (- ?x5209 (* (* 2.0 l_0_4_31) l_0_4_41)) ?x5536) ?x5652) (* (* 2.0 l_0_4_62) l_0_4_71))))
 (= (- ?x5655 (* (* 2.0 l_0_4_63) l_0_4_72)) 0.0)))))))))
(assert
 (let ((?x5695 (* l_0_4_48 l_0_4_48)))
 (let ((?x5693 (* l_0_4_47 l_0_4_47)))
 (let ((?x5691 (* l_0_4_33 l_0_4_33)))
 (let ((?x5689 (* l_0_4_32 l_0_4_32)))
 (let ((?x5226 (* l_0_4_3 l_0_4_3)))
 (let ((?x5224 (* l_0_4_2 l_0_4_2)))
 (let ((?x5222 (* l_0_4_18 l_0_4_18)))
 (let ((?x5221 (* l_0_4_17 l_0_4_17)))
 (let ((?x5223 (+ ?x5221 ?x5222)))
 (let ((?x5227 (- (- ?x5223 ?x5224) ?x5226)))
 (= (- (- (- (- ?x5227 ?x5689) ?x5691) ?x5693) ?x5695) 0.0))))))))))))
(assert
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5726 (* ?x5027 l_0_4_50)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5724 (* ?x5024 l_0_4_49)))
 (let ((?x5226 (* l_0_4_3 l_0_4_3)))
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5245 (* ?x5244 l_0_4_5)))
 (let ((?x5224 (* l_0_4_2 l_0_4_2)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5242 (* ?x5241 l_0_4_4)))
 (let ((?x5222 (* l_0_4_18 l_0_4_18)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5239 (* ?x5238 l_0_4_20)))
 (let ((?x5712 (+ (- (* (* 2.0 l_0_4_17) l_0_4_19) (* l_0_4_17 l_0_4_17)) ?x5239)))
 (let ((?x5720 (- (+ (- (+ (- (- ?x5712 ?x5222) ?x5242) ?x5224) ?x5245) ?x5226) (* (* 2.0 l_0_4_32) l_0_4_34))))
 (= (- (- (- ?x5720 (* (* 2.0 l_0_4_33) l_0_4_35)) ?x5724) ?x5726) 0.0)))))))))))))))))
(assert
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5028 (* ?x5027 l_0_4_53)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5025 (* ?x5024 l_0_4_52)))
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5271 (* ?x5244 l_0_4_8)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5269 (* ?x5241 l_0_4_7)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5267 (* ?x5238 l_0_4_23)))
 (let ((?x5272 (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_22) ?x5267) ?x5269) ?x5271)))
 (let ((?x5773 (- (- ?x5272 (* (* 2.0 l_0_4_32) l_0_4_37)) (* (* 2.0 l_0_4_33) l_0_4_38))))
 (= (- (- ?x5773 ?x5025) ?x5028) 0.0))))))))))))))
(assert
 (let ((?x5695 (* l_0_4_48 l_0_4_48)))
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5806 (* ?x5027 l_0_4_57)))
 (let ((?x5693 (* l_0_4_47 l_0_4_47)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5803 (* ?x5024 l_0_4_56)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5298 (* ?x5238 l_0_4_27)))
 (let ((?x5236 (* 2.0 l_0_4_17)))
 (let ((?x5296 (* ?x5236 l_0_4_26)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x5294 (* ?x4991 l_0_4_3)))
 (let ((?x5299 (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x5294) ?x5296) ?x5298)))
 (let ((?x5802 (- (- ?x5299 (* (* 2.0 l_0_4_32) l_0_4_41)) (* (* 2.0 l_0_4_33) l_0_4_42))))
 (= (+ (- (+ (- ?x5802 ?x5803) ?x5693) ?x5806) ?x5695) 0.0))))))))))))))))
(assert
 (let ((?x5325 (* l_0_4_6 l_0_4_6)))
 (let ((?x5860 (* l_0_4_51 l_0_4_51)))
 (let ((?x5858 (* l_0_4_50 l_0_4_50)))
 (let ((?x5323 (* l_0_4_5 l_0_4_5)))
 (let ((?x5855 (* l_0_4_49 l_0_4_49)))
 (let ((?x5321 (* l_0_4_4 l_0_4_4)))
 (let ((?x5852 (* l_0_4_36 l_0_4_36)))
 (let ((?x5850 (* l_0_4_35 l_0_4_35)))
 (let ((?x5848 (* l_0_4_34 l_0_4_34)))
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5245 (* ?x5244 l_0_4_5)))
 (let ((?x5319 (* l_0_4_21 l_0_4_21)))
 (let ((?x5312 (* l_0_4_20 l_0_4_20)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5242 (* ?x5241 l_0_4_4)))
 (let ((?x5310 (* l_0_4_19 l_0_4_19)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5239 (* ?x5238 l_0_4_20)))
 (let ((?x5845 (+ (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x5239) ?x5310) ?x5242) ?x5312)))
 (let ((?x5856 (- (- (- (- (- (+ (+ ?x5845 ?x5319) ?x5245) ?x5848) ?x5850) ?x5852) ?x5321) ?x5855)))
 (= (- (- (- (- ?x5856 ?x5323) ?x5858) ?x5860) ?x5325) 0.0))))))))))))))))))))))
(assert
 (let ((?x5354 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5160 (* 2.0 l_0_4_51)))
 (let ((?x5161 (* ?x5160 l_0_4_54)))
 (let ((?x5157 (* 2.0 l_0_4_50)))
 (let ((?x5158 (* ?x5157 l_0_4_53)))
 (let ((?x5351 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5154 (* 2.0 l_0_4_49)))
 (let ((?x5155 (* ?x5154 l_0_4_52)))
 (let ((?x5348 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5244 (* 2.0 l_0_4_3)))
 (let ((?x5271 (* ?x5244 l_0_4_8)))
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5345 (* ?x5344 l_0_4_24)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5342 (* ?x5341 l_0_4_23)))
 (let ((?x5241 (* 2.0 l_0_4_2)))
 (let ((?x5269 (* ?x5241 l_0_4_7)))
 (let ((?x5339 (* 2.0 l_0_4_19)))
 (let ((?x5340 (* ?x5339 l_0_4_22)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5267 (* ?x5238 l_0_4_23)))
 (let ((?x5901 (+ (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x5267) ?x5340) ?x5269) ?x5342)))
 (let ((?x5909 (- (- (+ (+ ?x5901 ?x5345) ?x5271) (* (* 2.0 l_0_4_34) l_0_4_37)) (* (* 2.0 l_0_4_35) l_0_4_38))))
 (let ((?x5915 (- (- (- (- ?x5909 (* (* 2.0 l_0_4_36) l_0_4_39)) ?x5348) ?x5155) ?x5351)))
 (= (- (- (- ?x5915 ?x5158) ?x5161) ?x5354) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5160 (* 2.0 l_0_4_51)))
 (let ((?x5988 (* ?x5160 l_0_4_58)))
 (let ((?x5157 (* 2.0 l_0_4_50)))
 (let ((?x5986 (* ?x5157 l_0_4_57)))
 (let ((?x5154 (* 2.0 l_0_4_49)))
 (let ((?x5984 (* ?x5154 l_0_4_56)))
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5726 (* ?x5027 l_0_4_50)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5724 (* ?x5024 l_0_4_49)))
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5392 (* ?x5344 l_0_4_28)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5390 (* ?x5341 l_0_4_27)))
 (let ((?x5339 (* 2.0 l_0_4_19)))
 (let ((?x5388 (* ?x5339 l_0_4_26)))
 (let ((?x5238 (* 2.0 l_0_4_18)))
 (let ((?x5298 (* ?x5238 l_0_4_27)))
 (let ((?x5236 (* 2.0 l_0_4_17)))
 (let ((?x5296 (* ?x5236 l_0_4_26)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x5386 (* ?x4994 l_0_4_6)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x5384 (* ?x4991 l_0_4_5)))
 (let ((?x5294 (* ?x4991 l_0_4_3)))
 (let ((?x4988 (* 2.0 l_0_4_11)))
 (let ((?x5966 (* ?x4988 l_0_4_4)))
 (let ((?x5972 (- (- (- (- (+ (- (* ?x4988 l_0_4_2) ?x5966) ?x5294) ?x5384) ?x5386) ?x5296) ?x5298)))
 (let ((?x5977 (- (+ (+ (+ ?x5972 ?x5388) ?x5390) ?x5392) (* (* 2.0 l_0_4_34) l_0_4_41))))
 (let ((?x5981 (- (- ?x5977 (* (* 2.0 l_0_4_35) l_0_4_42)) (* (* 2.0 l_0_4_36) l_0_4_43))))
 (= (- (- (- (+ (+ ?x5981 ?x5724) ?x5726) ?x5984) ?x5986) ?x5988) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5432 (* l_0_4_9 l_0_4_9)))
 (let ((?x5430 (* l_0_4_8 l_0_4_8)))
 (let ((?x5428 (* l_0_4_7 l_0_4_7)))
 (let ((?x5198 (* l_0_4_55 l_0_4_55)))
 (let ((?x5196 (* l_0_4_54 l_0_4_54)))
 (let ((?x5194 (* l_0_4_53 l_0_4_53)))
 (let ((?x5192 (* l_0_4_52 l_0_4_52)))
 (let ((?x6053 (* l_0_4_40 l_0_4_40)))
 (let ((?x6051 (* l_0_4_39 l_0_4_39)))
 (let ((?x6049 (* l_0_4_38 l_0_4_38)))
 (let ((?x6047 (* l_0_4_37 l_0_4_37)))
 (let ((?x5426 (* l_0_4_25 l_0_4_25)))
 (let ((?x5424 (* l_0_4_24 l_0_4_24)))
 (let ((?x5422 (* l_0_4_23 l_0_4_23)))
 (let ((?x5425 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x5422) ?x5424)))
 (let ((?x5427 (+ ?x5425 ?x5426)))
 (let ((?x6057 (- (- (- (- (- (- (- ?x5427 ?x6047) ?x6049) ?x6051) ?x6053) ?x5192) ?x5194) ?x5196)))
 (= (- (- (- (- ?x6057 ?x5198) ?x5428) ?x5430) ?x5432) 0.0)))))))))))))))))))
(assert
 (let ((?x6119 (* l_0_4_60 l_0_4_60)))
 (let ((?x6117 (* l_0_4_59 l_0_4_59)))
 (let ((?x6115 (* l_0_4_58 l_0_4_58)))
 (let ((?x6113 (* l_0_4_57 l_0_4_57)))
 (let ((?x6111 (* l_0_4_56 l_0_4_56)))
 (let ((?x5027 (* 2.0 l_0_4_48)))
 (let ((?x5806 (* ?x5027 l_0_4_57)))
 (let ((?x5024 (* 2.0 l_0_4_47)))
 (let ((?x5803 (* ?x5024 l_0_4_56)))
 (let ((?x6107 (* l_0_4_45 l_0_4_45)))
 (let ((?x6105 (* l_0_4_44 l_0_4_44)))
 (let ((?x6103 (* l_0_4_43 l_0_4_43)))
 (let ((?x6101 (* l_0_4_42 l_0_4_42)))
 (let ((?x6099 (* l_0_4_41 l_0_4_41)))
 (let ((?x5485 (* l_0_4_30 l_0_4_30)))
 (let ((?x5483 (* l_0_4_29 l_0_4_29)))
 (let ((?x5481 (* l_0_4_28 l_0_4_28)))
 (let ((?x5479 (* l_0_4_27 l_0_4_27)))
 (let ((?x5477 (* l_0_4_26 l_0_4_26)))
 (let ((?x5475 (* l_0_4_15 l_0_4_15)))
 (let ((?x5473 (* l_0_4_14 l_0_4_14)))
 (let ((?x5471 (* l_0_4_13 l_0_4_13)))
 (let ((?x5474 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5471) ?x5473)))
 (let ((?x5486 (+ (+ (+ (+ (+ (- ?x5474 ?x5475) ?x5477) ?x5479) ?x5481) ?x5483) ?x5485)))
 (let ((?x6110 (+ (+ (- (- (- (- (- ?x5486 ?x6099) ?x6101) ?x6103) ?x6105) ?x6107) ?x5803) ?x5806)))
 (= (- (- (- (- (- ?x6110 ?x6111) ?x6113) ?x6115) ?x6117) ?x6119) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6158 (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_16 l_0_4_16)) (* (* 2.0 l_0_4_61) l_0_4_64))))
 (= ?x6158 0.0)))
(assert
 (let ((?x6175 (* l_0_4_66 l_0_4_66)))
 (let ((?x6173 (* l_0_4_65 l_0_4_65)))
 (let ((?x6171 (* l_0_4_64 l_0_4_64)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5148 (* ?x4997 l_0_4_19)))
 (let ((?x5564 (* 2.0 l_0_4_1)))
 (let ((?x5566 (* ?x5564 l_0_4_4)))
 (= (- (- (- (- ?x5566 ?x5148) ?x6171) ?x6173) ?x6175) 0.0)))))))))
(assert
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5190 (* ?x4997 l_0_4_22)))
 (let ((?x6196 (- (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x5190) (* (* 2.0 l_0_4_64) l_0_4_67))))
 (let ((?x6202 (- (- ?x6196 (* (* 2.0 l_0_4_65) l_0_4_68)) (* (* 2.0 l_0_4_66) l_0_4_69))))
 (= ?x6202 0.0))))))
(assert
 (let ((?x4936 (* 2.0 l_0_4_46)))
 (let ((?x5572 (* ?x4936 l_0_4_49)))
 (let ((?x4997 (* 2.0 l_0_4_16)))
 (let ((?x5208 (* ?x4997 l_0_4_26)))
 (let ((?x6230 (- (+ (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x5208) ?x5572) (* (* 2.0 l_0_4_64) l_0_4_71))))
 (let ((?x6234 (- (- ?x6230 (* (* 2.0 l_0_4_65) l_0_4_72)) (* (* 2.0 l_0_4_66) l_0_4_73))))
 (= ?x6234 0.0))))))))
(assert
 (let ((?x5325 (* l_0_4_6 l_0_4_6)))
 (let ((?x5323 (* l_0_4_5 l_0_4_5)))
 (let ((?x5321 (* l_0_4_4 l_0_4_4)))
 (let ((?x5319 (* l_0_4_21 l_0_4_21)))
 (let ((?x6263 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5319) ?x5321)))
 (= (+ (+ ?x6263 ?x5323) ?x5325) 0.0)))))))
(assert
 (let ((?x5354 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5351 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5348 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5345 (* ?x5344 l_0_4_24)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5342 (* ?x5341 l_0_4_23)))
 (let ((?x6276 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x5342) ?x5345) ?x5348) ?x5351)))
 (= (+ ?x6276 ?x5354) 0.0))))))))))
(assert
 (let ((?x5860 (* l_0_4_51 l_0_4_51)))
 (let ((?x5858 (* l_0_4_50 l_0_4_50)))
 (let ((?x5855 (* l_0_4_49 l_0_4_49)))
 (let ((?x5344 (* 2.0 l_0_4_21)))
 (let ((?x5392 (* ?x5344 l_0_4_28)))
 (let ((?x5341 (* 2.0 l_0_4_20)))
 (let ((?x5390 (* ?x5341 l_0_4_27)))
 (let ((?x5339 (* 2.0 l_0_4_19)))
 (let ((?x5388 (* ?x5339 l_0_4_26)))
 (let ((?x4994 (* 2.0 l_0_4_13)))
 (let ((?x5386 (* ?x4994 l_0_4_6)))
 (let ((?x4991 (* 2.0 l_0_4_12)))
 (let ((?x5384 (* ?x4991 l_0_4_5)))
 (let ((?x4988 (* 2.0 l_0_4_11)))
 (let ((?x5966 (* ?x4988 l_0_4_4)))
 (let ((?x6291 (+ (+ (- (- (- (+ (+ ?x5966 ?x5384) ?x5386) ?x5388) ?x5390) ?x5392) ?x5855) ?x5858)))
 (= (+ ?x6291 ?x5860) 0.0))))))))))))))))))
(assert
 (let ((?x5432 (* l_0_4_9 l_0_4_9)))
 (let ((?x5430 (* l_0_4_8 l_0_4_8)))
 (let ((?x5428 (* l_0_4_7 l_0_4_7)))
 (let ((?x5426 (* l_0_4_25 l_0_4_25)))
 (let ((?x5424 (* l_0_4_24 l_0_4_24)))
 (let ((?x5422 (* l_0_4_23 l_0_4_23)))
 (let ((?x6307 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x5422) ?x5424)))
 (= (+ (+ (+ (- ?x6307 ?x5426) ?x5428) ?x5430) ?x5432) 0.0)))))))))
(assert
 (let ((?x5160 (* 2.0 l_0_4_51)))
 (let ((?x5988 (* ?x5160 l_0_4_58)))
 (let ((?x5157 (* 2.0 l_0_4_50)))
 (let ((?x5986 (* ?x5157 l_0_4_57)))
 (let ((?x5154 (* 2.0 l_0_4_49)))
 (let ((?x5984 (* ?x5154 l_0_4_56)))
 (let ((?x5485 (* l_0_4_30 l_0_4_30)))
 (let ((?x5483 (* l_0_4_29 l_0_4_29)))
 (let ((?x5481 (* l_0_4_28 l_0_4_28)))
 (let ((?x5479 (* l_0_4_27 l_0_4_27)))
 (let ((?x5477 (* l_0_4_26 l_0_4_26)))
 (let ((?x5475 (* l_0_4_15 l_0_4_15)))
 (let ((?x5473 (* l_0_4_14 l_0_4_14)))
 (let ((?x5471 (* l_0_4_13 l_0_4_13)))
 (let ((?x6323 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5471) ?x5473)))
 (let ((?x6330 (+ (- (- (- (- (- (+ ?x6323 ?x5475) ?x5477) ?x5479) ?x5481) ?x5483) ?x5485) ?x5984)))
 (= (+ (+ ?x6330 ?x5986) ?x5988) 0.0))))))))))))))))))
(assert
 (let ((?x6354 (* l_0_4_75 l_0_4_75)))
 (let ((?x6352 (* l_0_4_74 l_0_4_74)))
 (let ((?x6350 (* l_0_4_73 l_0_4_73)))
 (let ((?x6348 (* l_0_4_72 l_0_4_72)))
 (let ((?x6349 (- (- (* (* 2.0 l_0_4_46) l_0_4_56) (* l_0_4_71 l_0_4_71)) ?x6348)))
 (= (- (- (- ?x6349 ?x6350) ?x6352) ?x6354) 0.0)))))))
(assert
 (let ((?x6119 (* l_0_4_60 l_0_4_60)))
 (let ((?x6117 (* l_0_4_59 l_0_4_59)))
 (let ((?x6115 (* l_0_4_58 l_0_4_58)))
 (let ((?x6374 (+ (+ (+ (* l_0_4_56 l_0_4_56) (* l_0_4_57 l_0_4_57)) ?x6115) ?x6117)))
 (= (+ ?x6374 ?x6119) 0.0))))))
(assert
 (= (* (- l_0_4_61) l_0_4_61) 0.0))
(assert
 (= (* (* (- 2.0) l_0_4_61) l_0_4_67) 0.0))
(assert
 (let ((?x6396 (* l_0_4_70 l_0_4_70)))
 (let ((?x6394 (* l_0_4_69 l_0_4_69)))
 (let ((?x6397 (- (- (- (* (- l_0_4_67) l_0_4_67) (* l_0_4_68 l_0_4_68)) ?x6394) ?x6396)))
 (= ?x6397 0.0)))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (let ((?x6444 (- (- (* l_0_5_46 l_0_5_46) (* (* 2.0 l_0_5_61) l_0_5_71)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= ?x6444 0.0)))
(assert
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x6464 (* ?x6463 l_0_5_52)))
 (let ((?x6461 (* l_0_5_16 l_0_5_16)))
 (let ((?x6462 (+ (* (- l_0_5_1) l_0_5_1) ?x6461)))
 (let ((?x6471 (- (- (+ ?x6462 ?x6464) (* (* 2.0 l_0_5_67) l_0_5_71)) (* (* 2.0 l_0_5_68) l_0_5_72))))
 (let ((?x6477 (- (- ?x6471 (* (* 2.0 l_0_5_69) l_0_5_73)) (* (* 2.0 l_0_5_70) l_0_5_74))))
 (let ((?x6483 (- (- ?x6477 (* (* 2.0 l_0_5_82) l_0_5_86)) (* (* 2.0 l_0_5_83) l_0_5_87))))
 (let ((?x6489 (- (- ?x6483 (* (* 2.0 l_0_5_84) l_0_5_88)) (* (* 2.0 l_0_5_85) l_0_5_89))))
 (= ?x6489 0.0))))))))))
(assert
 (let ((?x6603 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6600 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6597 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6594 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x6591 (* ?x6590 l_0_5_53)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x6588 (* ?x6587 l_0_5_52)))
 (let ((?x6573 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6570 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6567 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6564 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6561 (* ?x6560 l_0_5_17)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6558 (* ?x6557 l_0_5_9)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6555 (* ?x6554 l_0_5_8)))
 (let ((?x6551 (* 2.0 l_0_5_11)))
 (let ((?x6552 (* ?x6551 l_0_5_7)))
 (let ((?x6549 (* (* 2.0 l_0_5_10) l_0_5_14)))
 (let ((?x6546 (* (- 2.0) l_0_5_1)))
 (let ((?x6547 (* ?x6546 l_0_5_2)))
 (let ((?x6568 (+ (+ (+ (- (- (- (- ?x6547 ?x6549) ?x6552) ?x6555) ?x6558) ?x6561) ?x6564) ?x6567)))
 (let ((?x6580 (- (- (+ (+ ?x6568 ?x6570) ?x6573) (* (* 2.0 l_0_5_37) l_0_5_41)) (* (* 2.0 l_0_5_38) l_0_5_42))))
 (let ((?x6586 (- (- ?x6580 (* (* 2.0 l_0_5_39) l_0_5_43)) (* (* 2.0 l_0_5_40) l_0_5_44))))
 (= (- (- (- (- (+ (+ ?x6586 ?x6588) ?x6591) ?x6594) ?x6597) ?x6600) ?x6603) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6723 (* 2.0 l_0_5_51)))
 (let ((?x6724 (* ?x6723 l_0_5_54)))
 (let ((?x6720 (* 2.0 l_0_5_50)))
 (let ((?x6721 (* ?x6720 l_0_5_53)))
 (let ((?x6717 (* 2.0 l_0_5_49)))
 (let ((?x6718 (* ?x6717 l_0_5_52)))
 (let ((?x6573 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6570 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6567 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6564 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6711 (* ?x6560 l_0_5_19)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6558 (* ?x6557 l_0_5_9)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6555 (* ?x6554 l_0_5_8)))
 (let ((?x6551 (* 2.0 l_0_5_11)))
 (let ((?x6552 (* ?x6551 l_0_5_7)))
 (let ((?x6549 (* (* 2.0 l_0_5_10) l_0_5_14)))
 (let ((?x6710 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x6549) ?x6552) ?x6555) ?x6558)))
 (let ((?x6722 (+ (+ (- (- (- (- (+ ?x6710 ?x6711) ?x6564) ?x6567) ?x6570) ?x6573) ?x6718) ?x6721)))
 (= (+ ?x6722 ?x6724) 0.0)))))))))))))))))))))))
(assert
 (let ((?x6761 (* l_0_5_55 l_0_5_55)))
 (let ((?x6759 (* l_0_5_54 l_0_5_54)))
 (let ((?x6757 (* l_0_5_53 l_0_5_53)))
 (let ((?x6755 (* l_0_5_52 l_0_5_52)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6753 (* ?x6560 l_0_5_22)))
 (let ((?x6754 (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x6753)))
 (= (+ (+ (+ (+ ?x6754 ?x6755) ?x6757) ?x6759) ?x6761) 0.0)))))))))
(assert
 (let ((?x6603 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6600 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6597 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6594 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6771 (* ?x6560 l_0_5_26)))
 (let ((?x6772 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x6771)))
 (= (+ (+ (+ (+ ?x6772 ?x6594) ?x6597) ?x6600) ?x6603) 0.0)))))))))
(assert
 (let ((?x6789 (* l_0_5_3 l_0_5_3)))
 (let ((?x6787 (* l_0_5_2 l_0_5_2)))
 (let ((?x6785 (* l_0_5_18 l_0_5_18)))
 (let ((?x6784 (* l_0_5_17 l_0_5_17)))
 (let ((?x6786 (+ ?x6784 ?x6785)))
 (let ((?x6790 (- (- ?x6786 ?x6787) ?x6789)))
 (= ?x6790 0.0))))))))
(assert
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6808 (* ?x6807 l_0_5_5)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6805 (* ?x6804 l_0_5_4)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6802 (* ?x6801 l_0_5_20)))
 (let ((?x6799 (* 2.0 l_0_5_17)))
 (let ((?x6800 (* ?x6799 l_0_5_19)))
 (= (- (- (+ ?x6800 ?x6802) ?x6805) ?x6808) 0.0))))))))))
(assert
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6834 (* ?x6807 l_0_5_8)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6832 (* ?x6804 l_0_5_7)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6830 (* ?x6801 l_0_5_23)))
 (let ((?x6835 (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_22) ?x6830) ?x6832) ?x6834)))
 (= ?x6835 0.0)))))))))
(assert
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6861 (* ?x6801 l_0_5_27)))
 (let ((?x6799 (* 2.0 l_0_5_17)))
 (let ((?x6859 (* ?x6799 l_0_5_26)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6857 (* ?x6554 l_0_5_3)))
 (let ((?x6862 (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x6857) ?x6859) ?x6861)))
 (= ?x6862 0.0)))))))))
(assert
 (let ((?x6888 (* l_0_5_6 l_0_5_6)))
 (let ((?x6886 (* l_0_5_5 l_0_5_5)))
 (let ((?x6884 (* l_0_5_4 l_0_5_4)))
 (let ((?x6882 (* l_0_5_21 l_0_5_21)))
 (let ((?x6885 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6882) ?x6884)))
 (= (- (- ?x6885 ?x6886) ?x6888) 0.0)))))))
(assert
 (let ((?x6917 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6914 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6911 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6908 (* ?x6907 l_0_5_24)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6905 (* ?x6904 l_0_5_23)))
 (let ((?x6902 (* 2.0 l_0_5_19)))
 (let ((?x6903 (* ?x6902 l_0_5_22)))
 (= (- (- (- (+ (+ ?x6903 ?x6905) ?x6908) ?x6911) ?x6914) ?x6917) 0.0)))))))))))
(assert
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6955 (* ?x6907 l_0_5_28)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6953 (* ?x6904 l_0_5_27)))
 (let ((?x6902 (* 2.0 l_0_5_19)))
 (let ((?x6951 (* ?x6902 l_0_5_26)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6949 (* ?x6557 l_0_5_6)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6947 (* ?x6554 l_0_5_5)))
 (let ((?x6954 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x6947) ?x6949) ?x6951) ?x6953)))
 (= (+ ?x6954 ?x6955) 0.0)))))))))))))
(assert
 (let ((?x6995 (* l_0_5_9 l_0_5_9)))
 (let ((?x6993 (* l_0_5_8 l_0_5_8)))
 (let ((?x6991 (* l_0_5_7 l_0_5_7)))
 (let ((?x6989 (* l_0_5_25 l_0_5_25)))
 (let ((?x6987 (* l_0_5_24 l_0_5_24)))
 (let ((?x6985 (* l_0_5_23 l_0_5_23)))
 (let ((?x6988 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6985) ?x6987)))
 (let ((?x6990 (+ ?x6988 ?x6989)))
 (= (- (- (- ?x6990 ?x6991) ?x6993) ?x6995) 0.0))))))))))
(assert
 (let ((?x6573 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6570 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6567 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6564 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6558 (* ?x6557 l_0_5_9)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6555 (* ?x6554 l_0_5_8)))
 (let ((?x6551 (* 2.0 l_0_5_11)))
 (let ((?x6552 (* ?x6551 l_0_5_7)))
 (let ((?x7017 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x6552) ?x6555) ?x6558) ?x6564)))
 (= (+ (+ (+ ?x7017 ?x6567) ?x6570) ?x6573) 0.0)))))))))))))
(assert
 (let ((?x7048 (* l_0_5_30 l_0_5_30)))
 (let ((?x7046 (* l_0_5_29 l_0_5_29)))
 (let ((?x7044 (* l_0_5_28 l_0_5_28)))
 (let ((?x7042 (* l_0_5_27 l_0_5_27)))
 (let ((?x7040 (* l_0_5_26 l_0_5_26)))
 (let ((?x7038 (* l_0_5_15 l_0_5_15)))
 (let ((?x7036 (* l_0_5_14 l_0_5_14)))
 (let ((?x7034 (* l_0_5_13 l_0_5_13)))
 (let ((?x7037 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x7034) ?x7036)))
 (let ((?x7049 (+ (+ (+ (+ (+ (- ?x7037 ?x7038) ?x7040) ?x7042) ?x7044) ?x7046) ?x7048)))
 (= ?x7049 0.0))))))))))))
(assert
 (let ((?x6438 (* l_0_5_46 l_0_5_46)))
 (let ((?x7066 (* l_0_5_31 l_0_5_31)))
 (let ((?x6461 (* l_0_5_16 l_0_5_16)))
 (let ((?x6462 (+ (* (- l_0_5_1) l_0_5_1) ?x6461)))
 (let ((?x7079 (- (- (- (- ?x6462 ?x7066) ?x6438) (* (* 2.0 l_0_5_61) l_0_5_62)) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= ?x7079 0.0)))))))
(assert
 (let ((?x7115 (* l_0_5_78 l_0_5_78)))
 (let ((?x7113 (* l_0_5_77 l_0_5_77)))
 (let ((?x7111 (* l_0_5_63 l_0_5_63)))
 (let ((?x7109 (* l_0_5_62 l_0_5_62)))
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x7107 (* ?x6463 l_0_5_47)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6561 (* ?x6560 l_0_5_17)))
 (let ((?x6546 (* (- 2.0) l_0_5_1)))
 (let ((?x6547 (* ?x6546 l_0_5_2)))
 (let ((?x7110 (- (- (- (+ ?x6547 ?x6561) (* (* 2.0 l_0_5_31) l_0_5_32)) ?x7107) ?x7109)))
 (= (- (- (- ?x7110 ?x7111) ?x7113) ?x7115) 0.0)))))))))))))
(assert
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x7153 (* ?x6463 l_0_5_49)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6711 (* ?x6560 l_0_5_19)))
 (let ((?x6561 (* ?x6560 l_0_5_17)))
 (let ((?x7145 (* 2.0 l_0_5_1)))
 (let ((?x7147 (* ?x7145 l_0_5_4)))
 (let ((?x7152 (- (+ (- (- (* ?x7145 l_0_5_2) ?x7147) ?x6561) ?x6711) (* (* 2.0 l_0_5_31) l_0_5_34))))
 (let ((?x7160 (- (- (- ?x7152 ?x7153) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 2.0 l_0_5_63) l_0_5_65))))
 (let ((?x7166 (- (- ?x7160 (* (* 2.0 l_0_5_77) l_0_5_79)) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (= ?x7166 0.0))))))))))))
(assert
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x6464 (* ?x6463 l_0_5_52)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6753 (* ?x6560 l_0_5_22)))
 (let ((?x6754 (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x6753)))
 (let ((?x7217 (- (- (- ?x6754 (* (* 2.0 l_0_5_31) l_0_5_37)) ?x6464) (* (* 2.0 l_0_5_62) l_0_5_67))))
 (let ((?x7221 (- (- ?x7217 (* (* 2.0 l_0_5_63) l_0_5_68)) (* (* 2.0 l_0_5_77) l_0_5_82))))
 (= (- ?x7221 (* (* 2.0 l_0_5_78) l_0_5_83)) 0.0)))))))))
(assert
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x7267 (* ?x6463 l_0_5_56)))
 (let ((?x7107 (* ?x6463 l_0_5_47)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6771 (* ?x6560 l_0_5_26)))
 (let ((?x6772 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x6771)))
 (let ((?x7270 (- (- (+ (- ?x6772 (* (* 2.0 l_0_5_31) l_0_5_41)) ?x7107) ?x7267) (* (* 2.0 l_0_5_62) l_0_5_71))))
 (let ((?x7274 (- (- ?x7270 (* (* 2.0 l_0_5_63) l_0_5_72)) (* (* 2.0 l_0_5_77) l_0_5_86))))
 (= (- ?x7274 (* (* 2.0 l_0_5_78) l_0_5_87)) 0.0))))))))))
(assert
 (let ((?x7326 (* l_0_5_48 l_0_5_48)))
 (let ((?x7324 (* l_0_5_47 l_0_5_47)))
 (let ((?x7322 (* l_0_5_33 l_0_5_33)))
 (let ((?x7320 (* l_0_5_32 l_0_5_32)))
 (let ((?x6789 (* l_0_5_3 l_0_5_3)))
 (let ((?x6787 (* l_0_5_2 l_0_5_2)))
 (let ((?x6785 (* l_0_5_18 l_0_5_18)))
 (let ((?x6784 (* l_0_5_17 l_0_5_17)))
 (let ((?x6786 (+ ?x6784 ?x6785)))
 (let ((?x6790 (- (- ?x6786 ?x6787) ?x6789)))
 (= (- (- (- (- ?x6790 ?x7320) ?x7322) ?x7324) ?x7326) 0.0))))))))))))
(assert
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x7357 (* ?x6590 l_0_5_50)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x7355 (* ?x6587 l_0_5_49)))
 (let ((?x6789 (* l_0_5_3 l_0_5_3)))
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6808 (* ?x6807 l_0_5_5)))
 (let ((?x6787 (* l_0_5_2 l_0_5_2)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6805 (* ?x6804 l_0_5_4)))
 (let ((?x6785 (* l_0_5_18 l_0_5_18)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6802 (* ?x6801 l_0_5_20)))
 (let ((?x7343 (+ (- (* (* 2.0 l_0_5_17) l_0_5_19) (* l_0_5_17 l_0_5_17)) ?x6802)))
 (let ((?x7351 (- (+ (- (+ (- (- ?x7343 ?x6785) ?x6805) ?x6787) ?x6808) ?x6789) (* (* 2.0 l_0_5_32) l_0_5_34))))
 (= (- (- (- ?x7351 (* (* 2.0 l_0_5_33) l_0_5_35)) ?x7355) ?x7357) 0.0)))))))))))))))))
(assert
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x6591 (* ?x6590 l_0_5_53)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x6588 (* ?x6587 l_0_5_52)))
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6834 (* ?x6807 l_0_5_8)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6832 (* ?x6804 l_0_5_7)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6830 (* ?x6801 l_0_5_23)))
 (let ((?x6835 (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_22) ?x6830) ?x6832) ?x6834)))
 (let ((?x7404 (- (- ?x6835 (* (* 2.0 l_0_5_32) l_0_5_37)) (* (* 2.0 l_0_5_33) l_0_5_38))))
 (= (- (- ?x7404 ?x6588) ?x6591) 0.0))))))))))))))
(assert
 (let ((?x7326 (* l_0_5_48 l_0_5_48)))
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x7437 (* ?x6590 l_0_5_57)))
 (let ((?x7324 (* l_0_5_47 l_0_5_47)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x7434 (* ?x6587 l_0_5_56)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6861 (* ?x6801 l_0_5_27)))
 (let ((?x6799 (* 2.0 l_0_5_17)))
 (let ((?x6859 (* ?x6799 l_0_5_26)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6857 (* ?x6554 l_0_5_3)))
 (let ((?x6862 (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x6857) ?x6859) ?x6861)))
 (let ((?x7433 (- (- ?x6862 (* (* 2.0 l_0_5_32) l_0_5_41)) (* (* 2.0 l_0_5_33) l_0_5_42))))
 (= (+ (- (+ (- ?x7433 ?x7434) ?x7324) ?x7437) ?x7326) 0.0))))))))))))))))
(assert
 (let ((?x6888 (* l_0_5_6 l_0_5_6)))
 (let ((?x7491 (* l_0_5_51 l_0_5_51)))
 (let ((?x7489 (* l_0_5_50 l_0_5_50)))
 (let ((?x6886 (* l_0_5_5 l_0_5_5)))
 (let ((?x7486 (* l_0_5_49 l_0_5_49)))
 (let ((?x6884 (* l_0_5_4 l_0_5_4)))
 (let ((?x7483 (* l_0_5_36 l_0_5_36)))
 (let ((?x7481 (* l_0_5_35 l_0_5_35)))
 (let ((?x7479 (* l_0_5_34 l_0_5_34)))
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6808 (* ?x6807 l_0_5_5)))
 (let ((?x6882 (* l_0_5_21 l_0_5_21)))
 (let ((?x6875 (* l_0_5_20 l_0_5_20)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6805 (* ?x6804 l_0_5_4)))
 (let ((?x6873 (* l_0_5_19 l_0_5_19)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6802 (* ?x6801 l_0_5_20)))
 (let ((?x7476 (+ (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x6802) ?x6873) ?x6805) ?x6875)))
 (let ((?x7487 (- (- (- (- (- (+ (+ ?x7476 ?x6882) ?x6808) ?x7479) ?x7481) ?x7483) ?x6884) ?x7486)))
 (= (- (- (- (- ?x7487 ?x6886) ?x7489) ?x7491) ?x6888) 0.0))))))))))))))))))))))
(assert
 (let ((?x6917 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6723 (* 2.0 l_0_5_51)))
 (let ((?x6724 (* ?x6723 l_0_5_54)))
 (let ((?x6720 (* 2.0 l_0_5_50)))
 (let ((?x6721 (* ?x6720 l_0_5_53)))
 (let ((?x6914 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6717 (* 2.0 l_0_5_49)))
 (let ((?x6718 (* ?x6717 l_0_5_52)))
 (let ((?x6911 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6807 (* 2.0 l_0_5_3)))
 (let ((?x6834 (* ?x6807 l_0_5_8)))
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6908 (* ?x6907 l_0_5_24)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6905 (* ?x6904 l_0_5_23)))
 (let ((?x6804 (* 2.0 l_0_5_2)))
 (let ((?x6832 (* ?x6804 l_0_5_7)))
 (let ((?x6902 (* 2.0 l_0_5_19)))
 (let ((?x6903 (* ?x6902 l_0_5_22)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6830 (* ?x6801 l_0_5_23)))
 (let ((?x7532 (+ (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6830) ?x6903) ?x6832) ?x6905)))
 (let ((?x7540 (- (- (+ (+ ?x7532 ?x6908) ?x6834) (* (* 2.0 l_0_5_34) l_0_5_37)) (* (* 2.0 l_0_5_35) l_0_5_38))))
 (let ((?x7546 (- (- (- (- ?x7540 (* (* 2.0 l_0_5_36) l_0_5_39)) ?x6911) ?x6718) ?x6914)))
 (= (- (- (- ?x7546 ?x6721) ?x6724) ?x6917) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6723 (* 2.0 l_0_5_51)))
 (let ((?x7619 (* ?x6723 l_0_5_58)))
 (let ((?x6720 (* 2.0 l_0_5_50)))
 (let ((?x7617 (* ?x6720 l_0_5_57)))
 (let ((?x6717 (* 2.0 l_0_5_49)))
 (let ((?x7615 (* ?x6717 l_0_5_56)))
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x7357 (* ?x6590 l_0_5_50)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x7355 (* ?x6587 l_0_5_49)))
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6955 (* ?x6907 l_0_5_28)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6953 (* ?x6904 l_0_5_27)))
 (let ((?x6902 (* 2.0 l_0_5_19)))
 (let ((?x6951 (* ?x6902 l_0_5_26)))
 (let ((?x6801 (* 2.0 l_0_5_18)))
 (let ((?x6861 (* ?x6801 l_0_5_27)))
 (let ((?x6799 (* 2.0 l_0_5_17)))
 (let ((?x6859 (* ?x6799 l_0_5_26)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6949 (* ?x6557 l_0_5_6)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6947 (* ?x6554 l_0_5_5)))
 (let ((?x6857 (* ?x6554 l_0_5_3)))
 (let ((?x6551 (* 2.0 l_0_5_11)))
 (let ((?x7597 (* ?x6551 l_0_5_4)))
 (let ((?x7603 (- (- (- (- (+ (- (* ?x6551 l_0_5_2) ?x7597) ?x6857) ?x6947) ?x6949) ?x6859) ?x6861)))
 (let ((?x7608 (- (+ (+ (+ ?x7603 ?x6951) ?x6953) ?x6955) (* (* 2.0 l_0_5_34) l_0_5_41))))
 (let ((?x7612 (- (- ?x7608 (* (* 2.0 l_0_5_35) l_0_5_42)) (* (* 2.0 l_0_5_36) l_0_5_43))))
 (= (- (- (- (+ (+ ?x7612 ?x7355) ?x7357) ?x7615) ?x7617) ?x7619) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6995 (* l_0_5_9 l_0_5_9)))
 (let ((?x6993 (* l_0_5_8 l_0_5_8)))
 (let ((?x6991 (* l_0_5_7 l_0_5_7)))
 (let ((?x6761 (* l_0_5_55 l_0_5_55)))
 (let ((?x6759 (* l_0_5_54 l_0_5_54)))
 (let ((?x6757 (* l_0_5_53 l_0_5_53)))
 (let ((?x6755 (* l_0_5_52 l_0_5_52)))
 (let ((?x7684 (* l_0_5_40 l_0_5_40)))
 (let ((?x7682 (* l_0_5_39 l_0_5_39)))
 (let ((?x7680 (* l_0_5_38 l_0_5_38)))
 (let ((?x7678 (* l_0_5_37 l_0_5_37)))
 (let ((?x6989 (* l_0_5_25 l_0_5_25)))
 (let ((?x6987 (* l_0_5_24 l_0_5_24)))
 (let ((?x6985 (* l_0_5_23 l_0_5_23)))
 (let ((?x6988 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6985) ?x6987)))
 (let ((?x6990 (+ ?x6988 ?x6989)))
 (let ((?x7688 (- (- (- (- (- (- (- ?x6990 ?x7678) ?x7680) ?x7682) ?x7684) ?x6755) ?x6757) ?x6759)))
 (= (- (- (- (- ?x7688 ?x6761) ?x6991) ?x6993) ?x6995) 0.0)))))))))))))))))))
(assert
 (let ((?x7750 (* l_0_5_60 l_0_5_60)))
 (let ((?x7748 (* l_0_5_59 l_0_5_59)))
 (let ((?x7746 (* l_0_5_58 l_0_5_58)))
 (let ((?x7744 (* l_0_5_57 l_0_5_57)))
 (let ((?x7742 (* l_0_5_56 l_0_5_56)))
 (let ((?x6590 (* 2.0 l_0_5_48)))
 (let ((?x7437 (* ?x6590 l_0_5_57)))
 (let ((?x6587 (* 2.0 l_0_5_47)))
 (let ((?x7434 (* ?x6587 l_0_5_56)))
 (let ((?x7738 (* l_0_5_45 l_0_5_45)))
 (let ((?x7736 (* l_0_5_44 l_0_5_44)))
 (let ((?x7734 (* l_0_5_43 l_0_5_43)))
 (let ((?x7732 (* l_0_5_42 l_0_5_42)))
 (let ((?x7730 (* l_0_5_41 l_0_5_41)))
 (let ((?x7048 (* l_0_5_30 l_0_5_30)))
 (let ((?x7046 (* l_0_5_29 l_0_5_29)))
 (let ((?x7044 (* l_0_5_28 l_0_5_28)))
 (let ((?x7042 (* l_0_5_27 l_0_5_27)))
 (let ((?x7040 (* l_0_5_26 l_0_5_26)))
 (let ((?x7038 (* l_0_5_15 l_0_5_15)))
 (let ((?x7036 (* l_0_5_14 l_0_5_14)))
 (let ((?x7034 (* l_0_5_13 l_0_5_13)))
 (let ((?x7037 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x7034) ?x7036)))
 (let ((?x7049 (+ (+ (+ (+ (+ (- ?x7037 ?x7038) ?x7040) ?x7042) ?x7044) ?x7046) ?x7048)))
 (let ((?x7741 (+ (+ (- (- (- (- (- ?x7049 ?x7730) ?x7732) ?x7734) ?x7736) ?x7738) ?x7434) ?x7437)))
 (= (- (- (- (- (- ?x7741 ?x7742) ?x7744) ?x7746) ?x7748) ?x7750) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7789 (- (- (* l_0_5_1 l_0_5_1) (* l_0_5_16 l_0_5_16)) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (= (- ?x7789 (* (* 2.0 l_0_5_76) l_0_5_79)) 0.0)))
(assert
 (let ((?x7820 (* l_0_5_81 l_0_5_81)))
 (let ((?x7818 (* l_0_5_80 l_0_5_80)))
 (let ((?x7816 (* l_0_5_79 l_0_5_79)))
 (let ((?x7814 (* l_0_5_66 l_0_5_66)))
 (let ((?x7812 (* l_0_5_65 l_0_5_65)))
 (let ((?x7810 (* l_0_5_64 l_0_5_64)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6711 (* ?x6560 l_0_5_19)))
 (let ((?x7145 (* 2.0 l_0_5_1)))
 (let ((?x7147 (* ?x7145 l_0_5_4)))
 (let ((?x7821 (- (- (- (- (- (- (- ?x7147 ?x6711) ?x7810) ?x7812) ?x7814) ?x7816) ?x7818) ?x7820)))
 (= ?x7821 0.0)))))))))))))
(assert
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6753 (* ?x6560 l_0_5_22)))
 (let ((?x7850 (- (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x6753) (* (* 2.0 l_0_5_64) l_0_5_67))))
 (let ((?x7856 (- (- ?x7850 (* (* 2.0 l_0_5_65) l_0_5_68)) (* (* 2.0 l_0_5_66) l_0_5_69))))
 (let ((?x7862 (- (- ?x7856 (* (* 2.0 l_0_5_79) l_0_5_82)) (* (* 2.0 l_0_5_80) l_0_5_83))))
 (= (- ?x7862 (* (* 2.0 l_0_5_81) l_0_5_84)) 0.0)))))))
(assert
 (let ((?x6463 (* 2.0 l_0_5_46)))
 (let ((?x7153 (* ?x6463 l_0_5_49)))
 (let ((?x6560 (* 2.0 l_0_5_16)))
 (let ((?x6771 (* ?x6560 l_0_5_26)))
 (let ((?x7911 (- (+ (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6771) ?x7153) (* (* 2.0 l_0_5_64) l_0_5_71))))
 (let ((?x7915 (- (- ?x7911 (* (* 2.0 l_0_5_65) l_0_5_72)) (* (* 2.0 l_0_5_66) l_0_5_73))))
 (let ((?x7919 (- (- ?x7915 (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x7919 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0)))))))))
(assert
 (let ((?x6888 (* l_0_5_6 l_0_5_6)))
 (let ((?x6886 (* l_0_5_5 l_0_5_5)))
 (let ((?x6884 (* l_0_5_4 l_0_5_4)))
 (let ((?x6882 (* l_0_5_21 l_0_5_21)))
 (let ((?x7968 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6882) ?x6884)))
 (= (+ (+ ?x7968 ?x6886) ?x6888) 0.0)))))))
(assert
 (let ((?x6917 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6914 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6911 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6908 (* ?x6907 l_0_5_24)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6905 (* ?x6904 l_0_5_23)))
 (let ((?x7981 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x6905) ?x6908) ?x6911) ?x6914)))
 (= (+ ?x7981 ?x6917) 0.0))))))))))
(assert
 (let ((?x7491 (* l_0_5_51 l_0_5_51)))
 (let ((?x7489 (* l_0_5_50 l_0_5_50)))
 (let ((?x7486 (* l_0_5_49 l_0_5_49)))
 (let ((?x6907 (* 2.0 l_0_5_21)))
 (let ((?x6955 (* ?x6907 l_0_5_28)))
 (let ((?x6904 (* 2.0 l_0_5_20)))
 (let ((?x6953 (* ?x6904 l_0_5_27)))
 (let ((?x6902 (* 2.0 l_0_5_19)))
 (let ((?x6951 (* ?x6902 l_0_5_26)))
 (let ((?x6557 (* 2.0 l_0_5_13)))
 (let ((?x6949 (* ?x6557 l_0_5_6)))
 (let ((?x6554 (* 2.0 l_0_5_12)))
 (let ((?x6947 (* ?x6554 l_0_5_5)))
 (let ((?x6551 (* 2.0 l_0_5_11)))
 (let ((?x7597 (* ?x6551 l_0_5_4)))
 (let ((?x7996 (+ (+ (- (- (- (+ (+ ?x7597 ?x6947) ?x6949) ?x6951) ?x6953) ?x6955) ?x7486) ?x7489)))
 (= (+ ?x7996 ?x7491) 0.0))))))))))))))))))
(assert
 (let ((?x6995 (* l_0_5_9 l_0_5_9)))
 (let ((?x6993 (* l_0_5_8 l_0_5_8)))
 (let ((?x6991 (* l_0_5_7 l_0_5_7)))
 (let ((?x6989 (* l_0_5_25 l_0_5_25)))
 (let ((?x6987 (* l_0_5_24 l_0_5_24)))
 (let ((?x6985 (* l_0_5_23 l_0_5_23)))
 (let ((?x8012 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6985) ?x6987)))
 (= (+ (+ (+ (- ?x8012 ?x6989) ?x6991) ?x6993) ?x6995) 0.0)))))))))
(assert
 (let ((?x6723 (* 2.0 l_0_5_51)))
 (let ((?x7619 (* ?x6723 l_0_5_58)))
 (let ((?x6720 (* 2.0 l_0_5_50)))
 (let ((?x7617 (* ?x6720 l_0_5_57)))
 (let ((?x6717 (* 2.0 l_0_5_49)))
 (let ((?x7615 (* ?x6717 l_0_5_56)))
 (let ((?x7048 (* l_0_5_30 l_0_5_30)))
 (let ((?x7046 (* l_0_5_29 l_0_5_29)))
 (let ((?x7044 (* l_0_5_28 l_0_5_28)))
 (let ((?x7042 (* l_0_5_27 l_0_5_27)))
 (let ((?x7040 (* l_0_5_26 l_0_5_26)))
 (let ((?x7038 (* l_0_5_15 l_0_5_15)))
 (let ((?x7036 (* l_0_5_14 l_0_5_14)))
 (let ((?x7034 (* l_0_5_13 l_0_5_13)))
 (let ((?x8028 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x7034) ?x7036)))
 (let ((?x8035 (+ (- (- (- (- (- (+ ?x8028 ?x7038) ?x7040) ?x7042) ?x7044) ?x7046) ?x7048) ?x7615)))
 (= (+ (+ ?x8035 ?x7617) ?x7619) 0.0))))))))))))))))))
(assert
 (let ((?x8069 (* l_0_5_90 l_0_5_90)))
 (let ((?x8067 (* l_0_5_89 l_0_5_89)))
 (let ((?x8065 (* l_0_5_88 l_0_5_88)))
 (let ((?x8063 (* l_0_5_87 l_0_5_87)))
 (let ((?x8061 (* l_0_5_86 l_0_5_86)))
 (let ((?x8059 (* l_0_5_75 l_0_5_75)))
 (let ((?x8057 (* l_0_5_74 l_0_5_74)))
 (let ((?x8055 (* l_0_5_73 l_0_5_73)))
 (let ((?x8053 (* l_0_5_72 l_0_5_72)))
 (let ((?x8054 (- (- (* (* 2.0 l_0_5_46) l_0_5_56) (* l_0_5_71 l_0_5_71)) ?x8053)))
 (let ((?x8068 (- (- (- (- (- (- (- ?x8054 ?x8055) ?x8057) ?x8059) ?x8061) ?x8063) ?x8065) ?x8067)))
 (= (- ?x8068 ?x8069) 0.0)))))))))))))
(assert
 (let ((?x7750 (* l_0_5_60 l_0_5_60)))
 (let ((?x7748 (* l_0_5_59 l_0_5_59)))
 (let ((?x7746 (* l_0_5_58 l_0_5_58)))
 (let ((?x8104 (+ (+ (+ (* l_0_5_56 l_0_5_56) (* l_0_5_57 l_0_5_57)) ?x7746) ?x7748)))
 (= (+ ?x8104 ?x7750) 0.0))))))
(assert
 (= (- (* (- l_0_5_61) l_0_5_61) (* l_0_5_76 l_0_5_76)) 0.0))
(assert
 (let ((?x8125 (- (* (* (- 2.0) l_0_5_61) l_0_5_67) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= ?x8125 0.0)))
(assert
 (let ((?x8152 (* l_0_5_85 l_0_5_85)))
 (let ((?x8150 (* l_0_5_84 l_0_5_84)))
 (let ((?x8148 (* l_0_5_83 l_0_5_83)))
 (let ((?x8146 (* l_0_5_82 l_0_5_82)))
 (let ((?x8144 (* l_0_5_70 l_0_5_70)))
 (let ((?x8142 (* l_0_5_69 l_0_5_69)))
 (let ((?x8145 (- (- (- (* (- l_0_5_67) l_0_5_67) (* l_0_5_68 l_0_5_68)) ?x8142) ?x8144)))
 (= (- (- (- (- ?x8145 ?x8146) ?x8148) ?x8150) ?x8152) 0.0)))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x8228 (* ?x8227 l_0_6_52)))
 (let ((?x8225 (* l_0_6_16 l_0_6_16)))
 (let ((?x8218 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_100) l_0_6_104)) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x8224 (- (- ?x8218 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x8235 (- (- (+ (+ ?x8224 ?x8225) ?x8228) (* (* 2.0 l_0_6_67) l_0_6_71)) (* (* 2.0 l_0_6_68) l_0_6_72))))
 (let ((?x8241 (- (- ?x8235 (* (* 2.0 l_0_6_69) l_0_6_73)) (* (* 2.0 l_0_6_70) l_0_6_74))))
 (let ((?x8247 (- (- ?x8241 (* (* 2.0 l_0_6_82) l_0_6_86)) (* (* 2.0 l_0_6_83) l_0_6_87))))
 (let ((?x8253 (- (- ?x8247 (* (* 2.0 l_0_6_84) l_0_6_88)) (* (* 2.0 l_0_6_85) l_0_6_89))))
 (= (+ ?x8253 1.0) 0.0)))))))))))
(assert
 (let ((?x8338 (* l_0_6_46 l_0_6_46)))
 (let ((?x8336 (* l_0_6_31 l_0_6_31)))
 (let ((?x8339 (- (- (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_16 l_0_6_16)) ?x8336) ?x8338)))
 (let ((?x8345 (- (- ?x8339 (* (* 2.0 l_0_6_61) l_0_6_62)) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x8345 (* (* 2.0 l_0_6_91) l_0_6_92)) 1.0) 0.0))))))
(assert
 (let ((?x8379 (- (- (* l_0_6_1 l_0_6_1) (* l_0_6_16 l_0_6_16)) (* (* 2.0 l_0_6_61) l_0_6_64))))
 (let ((?x8383 (- (- ?x8379 (* (* 2.0 l_0_6_76) l_0_6_79)) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= (- ?x8383 1.0) 0.0))))
(assert
 (let ((?x8469 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8466 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8463 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8460 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x8457 (* ?x8456 l_0_6_53)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x8454 (* ?x8453 l_0_6_52)))
 (let ((?x8439 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8436 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8433 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8430 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8427 (* ?x8426 l_0_6_17)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8424 (* ?x8423 l_0_6_9)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8421 (* ?x8420 l_0_6_8)))
 (let ((?x8417 (* 2.0 l_0_6_11)))
 (let ((?x8418 (* ?x8417 l_0_6_7)))
 (let ((?x8415 (* (* 2.0 l_0_6_10) l_0_6_14)))
 (let ((?x8412 (* (- 2.0) l_0_6_1)))
 (let ((?x8413 (* ?x8412 l_0_6_2)))
 (let ((?x8434 (+ (+ (+ (- (- (- (- ?x8413 ?x8415) ?x8418) ?x8421) ?x8424) ?x8427) ?x8430) ?x8433)))
 (let ((?x8446 (- (- (+ (+ ?x8434 ?x8436) ?x8439) (* (* 2.0 l_0_6_37) l_0_6_41)) (* (* 2.0 l_0_6_38) l_0_6_42))))
 (let ((?x8452 (- (- ?x8446 (* (* 2.0 l_0_6_39) l_0_6_43)) (* (* 2.0 l_0_6_40) l_0_6_44))))
 (= (- (- (- (- (+ (+ ?x8452 ?x8454) ?x8457) ?x8460) ?x8463) ?x8466) ?x8469) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8589 (* 2.0 l_0_6_51)))
 (let ((?x8590 (* ?x8589 l_0_6_54)))
 (let ((?x8586 (* 2.0 l_0_6_50)))
 (let ((?x8587 (* ?x8586 l_0_6_53)))
 (let ((?x8583 (* 2.0 l_0_6_49)))
 (let ((?x8584 (* ?x8583 l_0_6_52)))
 (let ((?x8439 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8436 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8433 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8430 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8577 (* ?x8426 l_0_6_19)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8424 (* ?x8423 l_0_6_9)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8421 (* ?x8420 l_0_6_8)))
 (let ((?x8417 (* 2.0 l_0_6_11)))
 (let ((?x8418 (* ?x8417 l_0_6_7)))
 (let ((?x8415 (* (* 2.0 l_0_6_10) l_0_6_14)))
 (let ((?x8576 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x8415) ?x8418) ?x8421) ?x8424)))
 (let ((?x8588 (+ (+ (- (- (- (- (+ ?x8576 ?x8577) ?x8430) ?x8433) ?x8436) ?x8439) ?x8584) ?x8587)))
 (= (+ ?x8588 ?x8590) 0.0)))))))))))))))))))))))
(assert
 (let ((?x8627 (* l_0_6_55 l_0_6_55)))
 (let ((?x8625 (* l_0_6_54 l_0_6_54)))
 (let ((?x8623 (* l_0_6_53 l_0_6_53)))
 (let ((?x8621 (* l_0_6_52 l_0_6_52)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8619 (* ?x8426 l_0_6_22)))
 (let ((?x8620 (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x8619)))
 (= (+ (+ (+ (+ ?x8620 ?x8621) ?x8623) ?x8625) ?x8627) 0.0)))))))))
(assert
 (let ((?x8469 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8466 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8463 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8460 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8637 (* ?x8426 l_0_6_26)))
 (let ((?x8412 (* (- 2.0) l_0_6_1)))
 (let ((?x8636 (* ?x8412 l_0_6_11)))
 (= (+ (+ (+ (+ (+ ?x8636 ?x8637) ?x8460) ?x8463) ?x8466) ?x8469) 0.0))))))))))
(assert
 (let ((?x8655 (* l_0_6_3 l_0_6_3)))
 (let ((?x8653 (* l_0_6_2 l_0_6_2)))
 (let ((?x8651 (* l_0_6_18 l_0_6_18)))
 (let ((?x8650 (* l_0_6_17 l_0_6_17)))
 (let ((?x8652 (+ ?x8650 ?x8651)))
 (let ((?x8656 (- (- ?x8652 ?x8653) ?x8655)))
 (= ?x8656 0.0))))))))
(assert
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8674 (* ?x8673 l_0_6_5)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8671 (* ?x8670 l_0_6_4)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8668 (* ?x8667 l_0_6_20)))
 (let ((?x8665 (* 2.0 l_0_6_17)))
 (let ((?x8666 (* ?x8665 l_0_6_19)))
 (= (- (- (+ ?x8666 ?x8668) ?x8671) ?x8674) 0.0))))))))))
(assert
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8700 (* ?x8673 l_0_6_8)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8698 (* ?x8670 l_0_6_7)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8696 (* ?x8667 l_0_6_23)))
 (let ((?x8701 (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_22) ?x8696) ?x8698) ?x8700)))
 (= ?x8701 0.0)))))))))
(assert
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8727 (* ?x8667 l_0_6_27)))
 (let ((?x8665 (* 2.0 l_0_6_17)))
 (let ((?x8725 (* ?x8665 l_0_6_26)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8723 (* ?x8420 l_0_6_3)))
 (let ((?x8728 (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x8723) ?x8725) ?x8727)))
 (= ?x8728 0.0)))))))))
(assert
 (let ((?x8754 (* l_0_6_6 l_0_6_6)))
 (let ((?x8752 (* l_0_6_5 l_0_6_5)))
 (let ((?x8750 (* l_0_6_4 l_0_6_4)))
 (let ((?x8748 (* l_0_6_21 l_0_6_21)))
 (let ((?x8751 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x8748) ?x8750)))
 (= (- (- ?x8751 ?x8752) ?x8754) 0.0)))))))
(assert
 (let ((?x8783 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8780 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x8777 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8774 (* ?x8773 l_0_6_24)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8771 (* ?x8770 l_0_6_23)))
 (let ((?x8768 (* 2.0 l_0_6_19)))
 (let ((?x8769 (* ?x8768 l_0_6_22)))
 (= (- (- (- (+ (+ ?x8769 ?x8771) ?x8774) ?x8777) ?x8780) ?x8783) 0.0)))))))))))
(assert
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8821 (* ?x8773 l_0_6_28)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8819 (* ?x8770 l_0_6_27)))
 (let ((?x8768 (* 2.0 l_0_6_19)))
 (let ((?x8817 (* ?x8768 l_0_6_26)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8815 (* ?x8423 l_0_6_6)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8813 (* ?x8420 l_0_6_5)))
 (let ((?x8820 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x8813) ?x8815) ?x8817) ?x8819)))
 (= (+ ?x8820 ?x8821) 0.0)))))))))))))
(assert
 (let ((?x8861 (* l_0_6_9 l_0_6_9)))
 (let ((?x8859 (* l_0_6_8 l_0_6_8)))
 (let ((?x8857 (* l_0_6_7 l_0_6_7)))
 (let ((?x8855 (* l_0_6_25 l_0_6_25)))
 (let ((?x8853 (* l_0_6_24 l_0_6_24)))
 (let ((?x8851 (* l_0_6_23 l_0_6_23)))
 (let ((?x8854 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8851) ?x8853)))
 (let ((?x8856 (+ ?x8854 ?x8855)))
 (= (- (- (- ?x8856 ?x8857) ?x8859) ?x8861) 0.0))))))))))
(assert
 (let ((?x8439 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x8436 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x8433 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x8430 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8424 (* ?x8423 l_0_6_9)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8421 (* ?x8420 l_0_6_8)))
 (let ((?x8417 (* 2.0 l_0_6_11)))
 (let ((?x8418 (* ?x8417 l_0_6_7)))
 (let ((?x8883 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x8418) ?x8421) ?x8424) ?x8430)))
 (= (+ (+ (+ ?x8883 ?x8433) ?x8436) ?x8439) 0.0)))))))))))))
(assert
 (let ((?x8914 (* l_0_6_30 l_0_6_30)))
 (let ((?x8912 (* l_0_6_29 l_0_6_29)))
 (let ((?x8910 (* l_0_6_28 l_0_6_28)))
 (let ((?x8908 (* l_0_6_27 l_0_6_27)))
 (let ((?x8906 (* l_0_6_26 l_0_6_26)))
 (let ((?x8904 (* l_0_6_15 l_0_6_15)))
 (let ((?x8902 (* l_0_6_14 l_0_6_14)))
 (let ((?x8900 (* l_0_6_13 l_0_6_13)))
 (let ((?x8903 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8900) ?x8902)))
 (let ((?x8915 (+ (+ (+ (+ (+ (- ?x8903 ?x8904) ?x8906) ?x8908) ?x8910) ?x8912) ?x8914)))
 (= ?x8915 0.0))))))))))))
(assert
 (let ((?x8955 (* l_0_6_93 l_0_6_93)))
 (let ((?x8953 (* l_0_6_92 l_0_6_92)))
 (let ((?x8951 (* l_0_6_78 l_0_6_78)))
 (let ((?x8949 (* l_0_6_77 l_0_6_77)))
 (let ((?x8947 (* l_0_6_63 l_0_6_63)))
 (let ((?x8945 (* l_0_6_62 l_0_6_62)))
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x8943 (* ?x8227 l_0_6_47)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8427 (* ?x8426 l_0_6_17)))
 (let ((?x8412 (* (- 2.0) l_0_6_1)))
 (let ((?x8413 (* ?x8412 l_0_6_2)))
 (let ((?x8946 (- (- (- (+ ?x8413 ?x8427) (* (* 2.0 l_0_6_31) l_0_6_32)) ?x8943) ?x8945)))
 (= (- (- (- (- (- ?x8946 ?x8947) ?x8949) ?x8951) ?x8953) ?x8955) 0.0)))))))))))))))
(assert
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x8999 (* ?x8227 l_0_6_49)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8577 (* ?x8426 l_0_6_19)))
 (let ((?x8427 (* ?x8426 l_0_6_17)))
 (let ((?x8991 (* 2.0 l_0_6_1)))
 (let ((?x8993 (* ?x8991 l_0_6_4)))
 (let ((?x8998 (- (+ (- (- (* ?x8991 l_0_6_2) ?x8993) ?x8427) ?x8577) (* (* 2.0 l_0_6_31) l_0_6_34))))
 (let ((?x9006 (- (- (- ?x8998 ?x8999) (* (* 2.0 l_0_6_62) l_0_6_64)) (* (* 2.0 l_0_6_63) l_0_6_65))))
 (let ((?x9012 (- (- ?x9006 (* (* 2.0 l_0_6_77) l_0_6_79)) (* (* 2.0 l_0_6_78) l_0_6_80))))
 (let ((?x9018 (- (- ?x9012 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x9018 0.0)))))))))))))
(assert
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x8228 (* ?x8227 l_0_6_52)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8619 (* ?x8426 l_0_6_22)))
 (let ((?x8620 (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x8619)))
 (let ((?x9081 (- (- (- ?x8620 (* (* 2.0 l_0_6_31) l_0_6_37)) ?x8228) (* (* 2.0 l_0_6_62) l_0_6_67))))
 (let ((?x9085 (- (- ?x9081 (* (* 2.0 l_0_6_63) l_0_6_68)) (* (* 2.0 l_0_6_77) l_0_6_82))))
 (let ((?x9089 (- (- ?x9085 (* (* 2.0 l_0_6_78) l_0_6_83)) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (- ?x9089 (* (* 2.0 l_0_6_93) l_0_6_98)) 0.0))))))))))
(assert
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x9152 (* ?x8227 l_0_6_56)))
 (let ((?x8943 (* ?x8227 l_0_6_47)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8637 (* ?x8426 l_0_6_26)))
 (let ((?x8412 (* (- 2.0) l_0_6_1)))
 (let ((?x8636 (* ?x8412 l_0_6_11)))
 (let ((?x9147 (- (- ?x8636 (* (* 2.0 l_0_6_101) l_0_6_92)) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x9153 (- (+ (- (+ ?x9147 ?x8637) (* (* 2.0 l_0_6_31) l_0_6_41)) ?x8943) ?x9152)))
 (let ((?x9157 (- (- ?x9153 (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (let ((?x9161 (- (- ?x9157 (* (* 2.0 l_0_6_77) l_0_6_86)) (* (* 2.0 l_0_6_78) l_0_6_87))))
 (= ?x9161 0.0)))))))))))))
(assert
 (let ((?x9223 (* l_0_6_48 l_0_6_48)))
 (let ((?x9221 (* l_0_6_47 l_0_6_47)))
 (let ((?x9219 (* l_0_6_33 l_0_6_33)))
 (let ((?x9217 (* l_0_6_32 l_0_6_32)))
 (let ((?x8655 (* l_0_6_3 l_0_6_3)))
 (let ((?x8653 (* l_0_6_2 l_0_6_2)))
 (let ((?x8651 (* l_0_6_18 l_0_6_18)))
 (let ((?x8650 (* l_0_6_17 l_0_6_17)))
 (let ((?x8652 (+ ?x8650 ?x8651)))
 (let ((?x8656 (- (- ?x8652 ?x8653) ?x8655)))
 (= (- (- (- (- ?x8656 ?x9217) ?x9219) ?x9221) ?x9223) 0.0))))))))))))
(assert
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x9254 (* ?x8456 l_0_6_50)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x9252 (* ?x8453 l_0_6_49)))
 (let ((?x8655 (* l_0_6_3 l_0_6_3)))
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8674 (* ?x8673 l_0_6_5)))
 (let ((?x8653 (* l_0_6_2 l_0_6_2)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8671 (* ?x8670 l_0_6_4)))
 (let ((?x8651 (* l_0_6_18 l_0_6_18)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8668 (* ?x8667 l_0_6_20)))
 (let ((?x9240 (+ (- (* (* 2.0 l_0_6_17) l_0_6_19) (* l_0_6_17 l_0_6_17)) ?x8668)))
 (let ((?x9248 (- (+ (- (+ (- (- ?x9240 ?x8651) ?x8671) ?x8653) ?x8674) ?x8655) (* (* 2.0 l_0_6_32) l_0_6_34))))
 (= (- (- (- ?x9248 (* (* 2.0 l_0_6_33) l_0_6_35)) ?x9252) ?x9254) 0.0)))))))))))))))))
(assert
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x8457 (* ?x8456 l_0_6_53)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x8454 (* ?x8453 l_0_6_52)))
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8700 (* ?x8673 l_0_6_8)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8698 (* ?x8670 l_0_6_7)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8696 (* ?x8667 l_0_6_23)))
 (let ((?x8701 (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_22) ?x8696) ?x8698) ?x8700)))
 (let ((?x9301 (- (- ?x8701 (* (* 2.0 l_0_6_32) l_0_6_37)) (* (* 2.0 l_0_6_33) l_0_6_38))))
 (= (- (- ?x9301 ?x8454) ?x8457) 0.0))))))))))))))
(assert
 (let ((?x9223 (* l_0_6_48 l_0_6_48)))
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x9334 (* ?x8456 l_0_6_57)))
 (let ((?x9221 (* l_0_6_47 l_0_6_47)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x9331 (* ?x8453 l_0_6_56)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8727 (* ?x8667 l_0_6_27)))
 (let ((?x8665 (* 2.0 l_0_6_17)))
 (let ((?x8725 (* ?x8665 l_0_6_26)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8723 (* ?x8420 l_0_6_3)))
 (let ((?x8728 (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x8723) ?x8725) ?x8727)))
 (let ((?x9330 (- (- ?x8728 (* (* 2.0 l_0_6_32) l_0_6_41)) (* (* 2.0 l_0_6_33) l_0_6_42))))
 (= (+ (- (+ (- ?x9330 ?x9331) ?x9221) ?x9334) ?x9223) 0.0))))))))))))))))
(assert
 (let ((?x8754 (* l_0_6_6 l_0_6_6)))
 (let ((?x9388 (* l_0_6_51 l_0_6_51)))
 (let ((?x9386 (* l_0_6_50 l_0_6_50)))
 (let ((?x8752 (* l_0_6_5 l_0_6_5)))
 (let ((?x9383 (* l_0_6_49 l_0_6_49)))
 (let ((?x8750 (* l_0_6_4 l_0_6_4)))
 (let ((?x9380 (* l_0_6_36 l_0_6_36)))
 (let ((?x9378 (* l_0_6_35 l_0_6_35)))
 (let ((?x9376 (* l_0_6_34 l_0_6_34)))
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8674 (* ?x8673 l_0_6_5)))
 (let ((?x8748 (* l_0_6_21 l_0_6_21)))
 (let ((?x8741 (* l_0_6_20 l_0_6_20)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8671 (* ?x8670 l_0_6_4)))
 (let ((?x8739 (* l_0_6_19 l_0_6_19)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8668 (* ?x8667 l_0_6_20)))
 (let ((?x9373 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x8668) ?x8739) ?x8671) ?x8741)))
 (let ((?x9384 (- (- (- (- (- (+ (+ ?x9373 ?x8748) ?x8674) ?x9376) ?x9378) ?x9380) ?x8750) ?x9383)))
 (= (- (- (- (- ?x9384 ?x8752) ?x9386) ?x9388) ?x8754) 0.0))))))))))))))))))))))
(assert
 (let ((?x8783 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8589 (* 2.0 l_0_6_51)))
 (let ((?x8590 (* ?x8589 l_0_6_54)))
 (let ((?x8586 (* 2.0 l_0_6_50)))
 (let ((?x8587 (* ?x8586 l_0_6_53)))
 (let ((?x8780 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x8583 (* 2.0 l_0_6_49)))
 (let ((?x8584 (* ?x8583 l_0_6_52)))
 (let ((?x8777 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8673 (* 2.0 l_0_6_3)))
 (let ((?x8700 (* ?x8673 l_0_6_8)))
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8774 (* ?x8773 l_0_6_24)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8771 (* ?x8770 l_0_6_23)))
 (let ((?x8670 (* 2.0 l_0_6_2)))
 (let ((?x8698 (* ?x8670 l_0_6_7)))
 (let ((?x8768 (* 2.0 l_0_6_19)))
 (let ((?x8769 (* ?x8768 l_0_6_22)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8696 (* ?x8667 l_0_6_23)))
 (let ((?x9429 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x8696) ?x8769) ?x8698) ?x8771)))
 (let ((?x9437 (- (- (+ (+ ?x9429 ?x8774) ?x8700) (* (* 2.0 l_0_6_34) l_0_6_37)) (* (* 2.0 l_0_6_35) l_0_6_38))))
 (let ((?x9443 (- (- (- (- ?x9437 (* (* 2.0 l_0_6_36) l_0_6_39)) ?x8777) ?x8584) ?x8780)))
 (= (- (- (- ?x9443 ?x8587) ?x8590) ?x8783) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8589 (* 2.0 l_0_6_51)))
 (let ((?x9516 (* ?x8589 l_0_6_58)))
 (let ((?x8586 (* 2.0 l_0_6_50)))
 (let ((?x9514 (* ?x8586 l_0_6_57)))
 (let ((?x8583 (* 2.0 l_0_6_49)))
 (let ((?x9512 (* ?x8583 l_0_6_56)))
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x9254 (* ?x8456 l_0_6_50)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x9252 (* ?x8453 l_0_6_49)))
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8821 (* ?x8773 l_0_6_28)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8819 (* ?x8770 l_0_6_27)))
 (let ((?x8768 (* 2.0 l_0_6_19)))
 (let ((?x8817 (* ?x8768 l_0_6_26)))
 (let ((?x8667 (* 2.0 l_0_6_18)))
 (let ((?x8727 (* ?x8667 l_0_6_27)))
 (let ((?x8665 (* 2.0 l_0_6_17)))
 (let ((?x8725 (* ?x8665 l_0_6_26)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8815 (* ?x8423 l_0_6_6)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8813 (* ?x8420 l_0_6_5)))
 (let ((?x8723 (* ?x8420 l_0_6_3)))
 (let ((?x8417 (* 2.0 l_0_6_11)))
 (let ((?x9494 (* ?x8417 l_0_6_4)))
 (let ((?x9500 (- (- (- (- (+ (- (* ?x8417 l_0_6_2) ?x9494) ?x8723) ?x8813) ?x8815) ?x8725) ?x8727)))
 (let ((?x9505 (- (+ (+ (+ ?x9500 ?x8817) ?x8819) ?x8821) (* (* 2.0 l_0_6_34) l_0_6_41))))
 (let ((?x9509 (- (- ?x9505 (* (* 2.0 l_0_6_35) l_0_6_42)) (* (* 2.0 l_0_6_36) l_0_6_43))))
 (= (- (- (- (+ (+ ?x9509 ?x9252) ?x9254) ?x9512) ?x9514) ?x9516) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8861 (* l_0_6_9 l_0_6_9)))
 (let ((?x8859 (* l_0_6_8 l_0_6_8)))
 (let ((?x8857 (* l_0_6_7 l_0_6_7)))
 (let ((?x8627 (* l_0_6_55 l_0_6_55)))
 (let ((?x8625 (* l_0_6_54 l_0_6_54)))
 (let ((?x8623 (* l_0_6_53 l_0_6_53)))
 (let ((?x8621 (* l_0_6_52 l_0_6_52)))
 (let ((?x9581 (* l_0_6_40 l_0_6_40)))
 (let ((?x9579 (* l_0_6_39 l_0_6_39)))
 (let ((?x9577 (* l_0_6_38 l_0_6_38)))
 (let ((?x9575 (* l_0_6_37 l_0_6_37)))
 (let ((?x8855 (* l_0_6_25 l_0_6_25)))
 (let ((?x8853 (* l_0_6_24 l_0_6_24)))
 (let ((?x8851 (* l_0_6_23 l_0_6_23)))
 (let ((?x8854 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8851) ?x8853)))
 (let ((?x8856 (+ ?x8854 ?x8855)))
 (let ((?x9585 (- (- (- (- (- (- (- ?x8856 ?x9575) ?x9577) ?x9579) ?x9581) ?x8621) ?x8623) ?x8625)))
 (= (- (- (- (- ?x9585 ?x8627) ?x8857) ?x8859) ?x8861) 0.0)))))))))))))))))))
(assert
 (let ((?x9647 (* l_0_6_60 l_0_6_60)))
 (let ((?x9645 (* l_0_6_59 l_0_6_59)))
 (let ((?x9643 (* l_0_6_58 l_0_6_58)))
 (let ((?x9641 (* l_0_6_57 l_0_6_57)))
 (let ((?x9639 (* l_0_6_56 l_0_6_56)))
 (let ((?x8456 (* 2.0 l_0_6_48)))
 (let ((?x9334 (* ?x8456 l_0_6_57)))
 (let ((?x8453 (* 2.0 l_0_6_47)))
 (let ((?x9331 (* ?x8453 l_0_6_56)))
 (let ((?x9635 (* l_0_6_45 l_0_6_45)))
 (let ((?x9633 (* l_0_6_44 l_0_6_44)))
 (let ((?x9631 (* l_0_6_43 l_0_6_43)))
 (let ((?x9629 (* l_0_6_42 l_0_6_42)))
 (let ((?x9627 (* l_0_6_41 l_0_6_41)))
 (let ((?x8914 (* l_0_6_30 l_0_6_30)))
 (let ((?x8912 (* l_0_6_29 l_0_6_29)))
 (let ((?x8910 (* l_0_6_28 l_0_6_28)))
 (let ((?x8908 (* l_0_6_27 l_0_6_27)))
 (let ((?x8906 (* l_0_6_26 l_0_6_26)))
 (let ((?x8904 (* l_0_6_15 l_0_6_15)))
 (let ((?x8902 (* l_0_6_14 l_0_6_14)))
 (let ((?x8900 (* l_0_6_13 l_0_6_13)))
 (let ((?x8903 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8900) ?x8902)))
 (let ((?x8915 (+ (+ (+ (+ (+ (- ?x8903 ?x8904) ?x8906) ?x8908) ?x8910) ?x8912) ?x8914)))
 (let ((?x9638 (+ (+ (- (- (- (- (- ?x8915 ?x9627) ?x9629) ?x9631) ?x9633) ?x9635) ?x9331) ?x9334)))
 (= (- (- (- (- (- ?x9638 ?x9639) ?x9641) ?x9643) ?x9645) ?x9647) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9701 (* l_0_6_96 l_0_6_96)))
 (let ((?x9699 (* l_0_6_95 l_0_6_95)))
 (let ((?x9697 (* l_0_6_94 l_0_6_94)))
 (let ((?x9695 (* l_0_6_81 l_0_6_81)))
 (let ((?x9693 (* l_0_6_80 l_0_6_80)))
 (let ((?x9691 (* l_0_6_79 l_0_6_79)))
 (let ((?x9689 (* l_0_6_66 l_0_6_66)))
 (let ((?x9687 (* l_0_6_65 l_0_6_65)))
 (let ((?x9685 (* l_0_6_64 l_0_6_64)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8577 (* ?x8426 l_0_6_19)))
 (let ((?x8991 (* 2.0 l_0_6_1)))
 (let ((?x8993 (* ?x8991 l_0_6_4)))
 (let ((?x9696 (- (- (- (- (- (- (- ?x8993 ?x8577) ?x9685) ?x9687) ?x9689) ?x9691) ?x9693) ?x9695)))
 (= (- (- (- ?x9696 ?x9697) ?x9699) ?x9701) 0.0))))))))))))))))
(assert
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8619 (* ?x8426 l_0_6_22)))
 (let ((?x9740 (- (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x8619) (* (* 2.0 l_0_6_64) l_0_6_67))))
 (let ((?x9746 (- (- ?x9740 (* (* 2.0 l_0_6_65) l_0_6_68)) (* (* 2.0 l_0_6_66) l_0_6_69))))
 (let ((?x9752 (- (- ?x9746 (* (* 2.0 l_0_6_79) l_0_6_82)) (* (* 2.0 l_0_6_80) l_0_6_83))))
 (let ((?x9758 (- (- ?x9752 (* (* 2.0 l_0_6_81) l_0_6_84)) (* (* 2.0 l_0_6_94) l_0_6_97))))
 (let ((?x9764 (- (- ?x9758 (* (* 2.0 l_0_6_95) l_0_6_98)) (* (* 2.0 l_0_6_96) l_0_6_99))))
 (= ?x9764 0.0)))))))))
(assert
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x8999 (* ?x8227 l_0_6_49)))
 (let ((?x8426 (* 2.0 l_0_6_16)))
 (let ((?x8637 (* ?x8426 l_0_6_26)))
 (let ((?x9826 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_94))))
 (let ((?x9830 (- (- ?x9826 (* (* 2.0 l_0_6_102) l_0_6_95)) (* (* 2.0 l_0_6_103) l_0_6_96))))
 (let ((?x9836 (- (- (+ (- ?x9830 ?x8637) ?x8999) (* (* 2.0 l_0_6_64) l_0_6_71)) (* (* 2.0 l_0_6_65) l_0_6_72))))
 (let ((?x9840 (- (- ?x9836 (* (* 2.0 l_0_6_66) l_0_6_73)) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x9844 (- (- ?x9840 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x9844 0.0)))))))))))
(assert
 (let ((?x8754 (* l_0_6_6 l_0_6_6)))
 (let ((?x8752 (* l_0_6_5 l_0_6_5)))
 (let ((?x8750 (* l_0_6_4 l_0_6_4)))
 (let ((?x8748 (* l_0_6_21 l_0_6_21)))
 (let ((?x9909 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x8748) ?x8750)))
 (= (+ (+ ?x9909 ?x8752) ?x8754) 0.0)))))))
(assert
 (let ((?x8783 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x8780 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x8777 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8774 (* ?x8773 l_0_6_24)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8771 (* ?x8770 l_0_6_23)))
 (let ((?x9922 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x8771) ?x8774) ?x8777) ?x8780)))
 (= (+ ?x9922 ?x8783) 0.0))))))))))
(assert
 (let ((?x9388 (* l_0_6_51 l_0_6_51)))
 (let ((?x9386 (* l_0_6_50 l_0_6_50)))
 (let ((?x9383 (* l_0_6_49 l_0_6_49)))
 (let ((?x8773 (* 2.0 l_0_6_21)))
 (let ((?x8821 (* ?x8773 l_0_6_28)))
 (let ((?x8770 (* 2.0 l_0_6_20)))
 (let ((?x8819 (* ?x8770 l_0_6_27)))
 (let ((?x8768 (* 2.0 l_0_6_19)))
 (let ((?x8817 (* ?x8768 l_0_6_26)))
 (let ((?x8423 (* 2.0 l_0_6_13)))
 (let ((?x8815 (* ?x8423 l_0_6_6)))
 (let ((?x8420 (* 2.0 l_0_6_12)))
 (let ((?x8813 (* ?x8420 l_0_6_5)))
 (let ((?x8417 (* 2.0 l_0_6_11)))
 (let ((?x9494 (* ?x8417 l_0_6_4)))
 (let ((?x9937 (+ (+ (- (- (- (+ (+ ?x9494 ?x8813) ?x8815) ?x8817) ?x8819) ?x8821) ?x9383) ?x9386)))
 (= (+ ?x9937 ?x9388) 0.0))))))))))))))))))
(assert
 (let ((?x8861 (* l_0_6_9 l_0_6_9)))
 (let ((?x8859 (* l_0_6_8 l_0_6_8)))
 (let ((?x8857 (* l_0_6_7 l_0_6_7)))
 (let ((?x8855 (* l_0_6_25 l_0_6_25)))
 (let ((?x8853 (* l_0_6_24 l_0_6_24)))
 (let ((?x8851 (* l_0_6_23 l_0_6_23)))
 (let ((?x9953 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8851) ?x8853)))
 (= (+ (+ (+ (- ?x9953 ?x8855) ?x8857) ?x8859) ?x8861) 0.0)))))))))
(assert
 (let ((?x8589 (* 2.0 l_0_6_51)))
 (let ((?x9516 (* ?x8589 l_0_6_58)))
 (let ((?x8586 (* 2.0 l_0_6_50)))
 (let ((?x9514 (* ?x8586 l_0_6_57)))
 (let ((?x8583 (* 2.0 l_0_6_49)))
 (let ((?x9512 (* ?x8583 l_0_6_56)))
 (let ((?x8914 (* l_0_6_30 l_0_6_30)))
 (let ((?x8912 (* l_0_6_29 l_0_6_29)))
 (let ((?x8910 (* l_0_6_28 l_0_6_28)))
 (let ((?x8908 (* l_0_6_27 l_0_6_27)))
 (let ((?x8906 (* l_0_6_26 l_0_6_26)))
 (let ((?x8904 (* l_0_6_15 l_0_6_15)))
 (let ((?x8902 (* l_0_6_14 l_0_6_14)))
 (let ((?x8900 (* l_0_6_13 l_0_6_13)))
 (let ((?x9969 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x8900) ?x8902)))
 (let ((?x9976 (+ (- (- (- (- (- (+ ?x9969 ?x8904) ?x8906) ?x8908) ?x8910) ?x8912) ?x8914) ?x9512)))
 (= (+ (+ ?x9976 ?x9514) ?x9516) 0.0))))))))))))))))))
(assert
 (let ((?x9996 (- (+ (* (* (- 2.0) l_0_6_101) l_0_6_91) (* l_0_6_46 l_0_6_46)) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (= (- ?x9996 (* (* 2.0 l_0_6_76) l_0_6_86)) 0.0)))
(assert
 (let ((?x10045 (* l_0_6_90 l_0_6_90)))
 (let ((?x10043 (* l_0_6_89 l_0_6_89)))
 (let ((?x10041 (* l_0_6_88 l_0_6_88)))
 (let ((?x10039 (* l_0_6_87 l_0_6_87)))
 (let ((?x10037 (* l_0_6_86 l_0_6_86)))
 (let ((?x10035 (* l_0_6_75 l_0_6_75)))
 (let ((?x10033 (* l_0_6_74 l_0_6_74)))
 (let ((?x10031 (* l_0_6_73 l_0_6_73)))
 (let ((?x10029 (* l_0_6_72 l_0_6_72)))
 (let ((?x10027 (* l_0_6_71 l_0_6_71)))
 (let ((?x8227 (* 2.0 l_0_6_46)))
 (let ((?x9152 (* ?x8227 l_0_6_56)))
 (let ((?x10024 (* l_0_6_105 l_0_6_105)))
 (let ((?x10022 (* l_0_6_104 l_0_6_104)))
 (let ((?x10020 (* l_0_6_103 l_0_6_103)))
 (let ((?x10021 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x10020)))
 (let ((?x10034 (- (- (- (- (+ (- (- ?x10021 ?x10022) ?x10024) ?x9152) ?x10027) ?x10029) ?x10031) ?x10033)))
 (= (- (- (- (- (- (- ?x10034 ?x10035) ?x10037) ?x10039) ?x10041) ?x10043) ?x10045) 0.0)))))))))))))))))))
(assert
 (let ((?x9647 (* l_0_6_60 l_0_6_60)))
 (let ((?x9645 (* l_0_6_59 l_0_6_59)))
 (let ((?x9643 (* l_0_6_58 l_0_6_58)))
 (let ((?x10097 (+ (+ (+ (* l_0_6_56 l_0_6_56) (* l_0_6_57 l_0_6_57)) ?x9643) ?x9645)))
 (= (+ ?x10097 ?x9647) 0.0))))))
(assert
 (let ((?x10106 (* l_0_6_91 l_0_6_91)))
 (= (- (- (* (- l_0_6_61) l_0_6_61) (* l_0_6_76 l_0_6_76)) ?x10106) 0.0)))
(assert
 (let ((?x10123 (- (* (* (- 2.0) l_0_6_61) l_0_6_67) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (- ?x10123 (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0)))
(assert
 (let ((?x10166 (* l_0_6_99 l_0_6_99)))
 (let ((?x10164 (* l_0_6_98 l_0_6_98)))
 (let ((?x10162 (* l_0_6_97 l_0_6_97)))
 (let ((?x10160 (* l_0_6_85 l_0_6_85)))
 (let ((?x10158 (* l_0_6_84 l_0_6_84)))
 (let ((?x10156 (* l_0_6_83 l_0_6_83)))
 (let ((?x10154 (* l_0_6_82 l_0_6_82)))
 (let ((?x10152 (* l_0_6_70 l_0_6_70)))
 (let ((?x10150 (* l_0_6_69 l_0_6_69)))
 (let ((?x10148 (* l_0_6_68 l_0_6_68)))
 (let ((?x10151 (- (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_67 l_0_6_67)) ?x10148) ?x10150)))
 (let ((?x10165 (- (- (- (- (- (- (- ?x10151 ?x10152) ?x10154) ?x10156) ?x10158) ?x10160) ?x10162) ?x10164)))
 (= (- ?x10165 ?x10166) 0.0))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x10246 (* l_0_7_16 l_0_7_16)))
 (let ((?x10247 (- (- (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_109)) ?x10246)))
 (let ((?x10253 (- (- ?x10247 (* (* 2.0 l_0_7_61) l_0_7_64)) (* (* 2.0 l_0_7_76) l_0_7_79))))
 (= (+ (- ?x10253 (* (* 2.0 l_0_7_91) l_0_7_94)) 1.0) 0.0)))))
(assert
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x10315 (* ?x10314 l_0_7_52)))
 (let ((?x10246 (* l_0_7_16 l_0_7_16)))
 (let ((?x10294 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_100) l_0_7_104)) (* (* 2.0 l_0_7_101) l_0_7_97))))
 (let ((?x10300 (- (- ?x10294 (* (* 2.0 l_0_7_102) l_0_7_98)) (* (* 2.0 l_0_7_103) l_0_7_99))))
 (let ((?x10306 (- (- ?x10300 (* (* 2.0 l_0_7_112) l_0_7_116)) (* (* 2.0 l_0_7_113) l_0_7_117))))
 (let ((?x10312 (- (- ?x10306 (* (* 2.0 l_0_7_114) l_0_7_118)) (* (* 2.0 l_0_7_115) l_0_7_119))))
 (let ((?x10322 (- (- (+ (+ ?x10312 ?x10246) ?x10315) (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x10328 (- (- ?x10322 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (let ((?x10334 (- (- ?x10328 (* (* 2.0 l_0_7_82) l_0_7_86)) (* (* 2.0 l_0_7_83) l_0_7_87))))
 (let ((?x10340 (- (- ?x10334 (* (* 2.0 l_0_7_84) l_0_7_88)) (* (* 2.0 l_0_7_85) l_0_7_89))))
 (= (- ?x10340 1.0) 0.0)))))))))))))
(assert
 (let ((?x10454 (* l_0_7_46 l_0_7_46)))
 (let ((?x10452 (* l_0_7_31 l_0_7_31)))
 (let ((?x10246 (* l_0_7_16 l_0_7_16)))
 (let ((?x10451 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_107)) ?x10246)))
 (let ((?x10459 (- (- (- (- ?x10451 ?x10452) ?x10454) (* (* 2.0 l_0_7_61) l_0_7_62)) (* (* 2.0 l_0_7_76) l_0_7_77))))
 (= (- (- ?x10459 (* (* 2.0 l_0_7_91) l_0_7_92)) 1.0) 0.0)))))))
(assert
 (let ((?x10556 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x10553 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x10550 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x10547 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x10544 (* ?x10543 l_0_7_53)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x10541 (* ?x10540 l_0_7_52)))
 (let ((?x10526 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10523 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10520 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10517 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10514 (* ?x10513 l_0_7_17)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10511 (* ?x10510 l_0_7_9)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10508 (* ?x10507 l_0_7_8)))
 (let ((?x10504 (* 2.0 l_0_7_11)))
 (let ((?x10505 (* ?x10504 l_0_7_7)))
 (let ((?x10502 (* (* 2.0 l_0_7_10) l_0_7_14)))
 (let ((?x10499 (* (- 2.0) l_0_7_1)))
 (let ((?x10500 (* ?x10499 l_0_7_2)))
 (let ((?x10521 (+ (+ (+ (- (- (- (- ?x10500 ?x10502) ?x10505) ?x10508) ?x10511) ?x10514) ?x10517) ?x10520)))
 (let ((?x10533 (- (- (+ (+ ?x10521 ?x10523) ?x10526) (* (* 2.0 l_0_7_37) l_0_7_41)) (* (* 2.0 l_0_7_38) l_0_7_42))))
 (let ((?x10539 (- (- ?x10533 (* (* 2.0 l_0_7_39) l_0_7_43)) (* (* 2.0 l_0_7_40) l_0_7_44))))
 (= (- (- (- (- (+ (+ ?x10539 ?x10541) ?x10544) ?x10547) ?x10550) ?x10553) ?x10556) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x10676 (* 2.0 l_0_7_51)))
 (let ((?x10677 (* ?x10676 l_0_7_54)))
 (let ((?x10673 (* 2.0 l_0_7_50)))
 (let ((?x10674 (* ?x10673 l_0_7_53)))
 (let ((?x10670 (* 2.0 l_0_7_49)))
 (let ((?x10671 (* ?x10670 l_0_7_52)))
 (let ((?x10526 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10523 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10520 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10517 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10664 (* ?x10513 l_0_7_19)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10511 (* ?x10510 l_0_7_9)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10508 (* ?x10507 l_0_7_8)))
 (let ((?x10504 (* 2.0 l_0_7_11)))
 (let ((?x10505 (* ?x10504 l_0_7_7)))
 (let ((?x10502 (* (* 2.0 l_0_7_10) l_0_7_14)))
 (let ((?x10663 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x10502) ?x10505) ?x10508) ?x10511)))
 (let ((?x10675 (+ (+ (- (- (- (- (+ ?x10663 ?x10664) ?x10517) ?x10520) ?x10523) ?x10526) ?x10671) ?x10674)))
 (= (+ ?x10675 ?x10677) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10714 (* l_0_7_55 l_0_7_55)))
 (let ((?x10712 (* l_0_7_54 l_0_7_54)))
 (let ((?x10710 (* l_0_7_53 l_0_7_53)))
 (let ((?x10708 (* l_0_7_52 l_0_7_52)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10706 (* ?x10513 l_0_7_22)))
 (let ((?x10499 (* (- 2.0) l_0_7_1)))
 (let ((?x10705 (* ?x10499 l_0_7_7)))
 (= (+ (+ (+ (+ (+ ?x10705 ?x10706) ?x10708) ?x10710) ?x10712) ?x10714) 0.0))))))))))
(assert
 (let ((?x10556 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x10553 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x10550 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x10547 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10724 (* ?x10513 l_0_7_26)))
 (let ((?x10499 (* (- 2.0) l_0_7_1)))
 (let ((?x10723 (* ?x10499 l_0_7_11)))
 (= (+ (+ (+ (+ (+ ?x10723 ?x10724) ?x10547) ?x10550) ?x10553) ?x10556) 0.0))))))))))
(assert
 (let ((?x10742 (* l_0_7_3 l_0_7_3)))
 (let ((?x10740 (* l_0_7_2 l_0_7_2)))
 (let ((?x10738 (* l_0_7_18 l_0_7_18)))
 (let ((?x10737 (* l_0_7_17 l_0_7_17)))
 (let ((?x10739 (+ ?x10737 ?x10738)))
 (let ((?x10743 (- (- ?x10739 ?x10740) ?x10742)))
 (= ?x10743 0.0))))))))
(assert
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10761 (* ?x10760 l_0_7_5)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10758 (* ?x10757 l_0_7_4)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10755 (* ?x10754 l_0_7_20)))
 (let ((?x10752 (* 2.0 l_0_7_17)))
 (let ((?x10753 (* ?x10752 l_0_7_19)))
 (= (- (- (+ ?x10753 ?x10755) ?x10758) ?x10761) 0.0))))))))))
(assert
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10787 (* ?x10760 l_0_7_8)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10785 (* ?x10757 l_0_7_7)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10783 (* ?x10754 l_0_7_23)))
 (let ((?x10788 (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_22) ?x10783) ?x10785) ?x10787)))
 (= ?x10788 0.0)))))))))
(assert
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10814 (* ?x10754 l_0_7_27)))
 (let ((?x10752 (* 2.0 l_0_7_17)))
 (let ((?x10812 (* ?x10752 l_0_7_26)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10810 (* ?x10507 l_0_7_3)))
 (let ((?x10815 (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x10810) ?x10812) ?x10814)))
 (= ?x10815 0.0)))))))))
(assert
 (let ((?x10841 (* l_0_7_6 l_0_7_6)))
 (let ((?x10839 (* l_0_7_5 l_0_7_5)))
 (let ((?x10837 (* l_0_7_4 l_0_7_4)))
 (let ((?x10835 (* l_0_7_21 l_0_7_21)))
 (let ((?x10838 (- (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x10835) ?x10837)))
 (= (- (- ?x10838 ?x10839) ?x10841) 0.0)))))))
(assert
 (let ((?x10870 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x10867 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x10864 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10861 (* ?x10860 l_0_7_24)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10858 (* ?x10857 l_0_7_23)))
 (let ((?x10855 (* 2.0 l_0_7_19)))
 (let ((?x10856 (* ?x10855 l_0_7_22)))
 (= (- (- (- (+ (+ ?x10856 ?x10858) ?x10861) ?x10864) ?x10867) ?x10870) 0.0)))))))))))
(assert
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10908 (* ?x10860 l_0_7_28)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10906 (* ?x10857 l_0_7_27)))
 (let ((?x10855 (* 2.0 l_0_7_19)))
 (let ((?x10904 (* ?x10855 l_0_7_26)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10902 (* ?x10510 l_0_7_6)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10900 (* ?x10507 l_0_7_5)))
 (let ((?x10907 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x10900) ?x10902) ?x10904) ?x10906)))
 (= (+ ?x10907 ?x10908) 0.0)))))))))))))
(assert
 (let ((?x10948 (* l_0_7_9 l_0_7_9)))
 (let ((?x10946 (* l_0_7_8 l_0_7_8)))
 (let ((?x10944 (* l_0_7_7 l_0_7_7)))
 (let ((?x10942 (* l_0_7_25 l_0_7_25)))
 (let ((?x10940 (* l_0_7_24 l_0_7_24)))
 (let ((?x10938 (* l_0_7_23 l_0_7_23)))
 (let ((?x10941 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x10938) ?x10940)))
 (let ((?x10943 (+ ?x10941 ?x10942)))
 (= (- (- (- ?x10943 ?x10944) ?x10946) ?x10948) 0.0))))))))))
(assert
 (let ((?x10526 (* (* 2.0 l_0_7_25) l_0_7_29)))
 (let ((?x10523 (* (* 2.0 l_0_7_24) l_0_7_28)))
 (let ((?x10520 (* (* 2.0 l_0_7_23) l_0_7_27)))
 (let ((?x10517 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10511 (* ?x10510 l_0_7_9)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10508 (* ?x10507 l_0_7_8)))
 (let ((?x10504 (* 2.0 l_0_7_11)))
 (let ((?x10505 (* ?x10504 l_0_7_7)))
 (let ((?x10970 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x10505) ?x10508) ?x10511) ?x10517)))
 (= (+ (+ (+ ?x10970 ?x10520) ?x10523) ?x10526) 0.0)))))))))))))
(assert
 (let ((?x11001 (* l_0_7_30 l_0_7_30)))
 (let ((?x10999 (* l_0_7_29 l_0_7_29)))
 (let ((?x10997 (* l_0_7_28 l_0_7_28)))
 (let ((?x10995 (* l_0_7_27 l_0_7_27)))
 (let ((?x10993 (* l_0_7_26 l_0_7_26)))
 (let ((?x10991 (* l_0_7_15 l_0_7_15)))
 (let ((?x10989 (* l_0_7_14 l_0_7_14)))
 (let ((?x10987 (* l_0_7_13 l_0_7_13)))
 (let ((?x10990 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10987) ?x10989)))
 (let ((?x11002 (+ (+ (+ (+ (+ (- ?x10990 ?x10991) ?x10993) ?x10995) ?x10997) ?x10999) ?x11001)))
 (= ?x11002 0.0))))))))))))
(assert
 (let ((?x11046 (* l_0_7_93 l_0_7_93)))
 (let ((?x11044 (* l_0_7_92 l_0_7_92)))
 (let ((?x11042 (* l_0_7_78 l_0_7_78)))
 (let ((?x11040 (* l_0_7_77 l_0_7_77)))
 (let ((?x11038 (* l_0_7_63 l_0_7_63)))
 (let ((?x11036 (* l_0_7_62 l_0_7_62)))
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x11034 (* ?x10314 l_0_7_47)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10514 (* ?x10513 l_0_7_17)))
 (let ((?x11028 (* l_0_7_108 l_0_7_108)))
 (let ((?x11029 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* l_0_7_107 l_0_7_107)) ?x11028)))
 (let ((?x11037 (- (- (- (+ ?x11029 ?x10514) (* (* 2.0 l_0_7_31) l_0_7_32)) ?x11034) ?x11036)))
 (= (- (- (- (- (- ?x11037 ?x11038) ?x11040) ?x11042) ?x11044) ?x11046) 0.0)))))))))))))))
(assert
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x11101 (* ?x10314 l_0_7_49)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10664 (* ?x10513 l_0_7_19)))
 (let ((?x10514 (* ?x10513 l_0_7_17)))
 (let ((?x11087 (* 2.0 l_0_7_1)))
 (let ((?x11089 (* ?x11087 l_0_7_4)))
 (let ((?x11093 (- (- (* ?x11087 l_0_7_2) ?x11089) (* (* 2.0 l_0_7_107) l_0_7_109))))
 (let ((?x11100 (- (+ (- (- ?x11093 (* (* 2.0 l_0_7_108) l_0_7_110)) ?x10514) ?x10664) (* (* 2.0 l_0_7_31) l_0_7_34))))
 (let ((?x11108 (- (- (- ?x11100 ?x11101) (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (let ((?x11114 (- (- ?x11108 (* (* 2.0 l_0_7_77) l_0_7_79)) (* (* 2.0 l_0_7_78) l_0_7_80))))
 (let ((?x11120 (- (- ?x11114 (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= ?x11120 0.0))))))))))))))
(assert
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x10315 (* ?x10314 l_0_7_52)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10706 (* ?x10513 l_0_7_22)))
 (let ((?x10499 (* (- 2.0) l_0_7_1)))
 (let ((?x10705 (* ?x10499 l_0_7_7)))
 (let ((?x11194 (- (- ?x10705 (* (* 2.0 l_0_7_107) l_0_7_112)) (* (* 2.0 l_0_7_108) l_0_7_113))))
 (let ((?x11200 (- (- (- (+ ?x11194 ?x10706) (* (* 2.0 l_0_7_31) l_0_7_37)) ?x10315) (* (* 2.0 l_0_7_62) l_0_7_67))))
 (let ((?x11204 (- (- ?x11200 (* (* 2.0 l_0_7_63) l_0_7_68)) (* (* 2.0 l_0_7_77) l_0_7_82))))
 (let ((?x11208 (- (- ?x11204 (* (* 2.0 l_0_7_78) l_0_7_83)) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x11208 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0))))))))))))
(assert
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x11286 (* ?x10314 l_0_7_56)))
 (let ((?x11034 (* ?x10314 l_0_7_47)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10724 (* ?x10513 l_0_7_26)))
 (let ((?x10499 (* (- 2.0) l_0_7_1)))
 (let ((?x10723 (* ?x10499 l_0_7_11)))
 (let ((?x11277 (- (- ?x10723 (* (* 2.0 l_0_7_101) l_0_7_92)) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x11281 (- (- ?x11277 (* (* 2.0 l_0_7_107) l_0_7_116)) (* (* 2.0 l_0_7_108) l_0_7_117))))
 (let ((?x11287 (- (+ (- (+ ?x11281 ?x10724) (* (* 2.0 l_0_7_31) l_0_7_41)) ?x11034) ?x11286)))
 (let ((?x11291 (- (- ?x11287 (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (let ((?x11295 (- (- ?x11291 (* (* 2.0 l_0_7_77) l_0_7_86)) (* (* 2.0 l_0_7_78) l_0_7_87))))
 (= ?x11295 0.0))))))))))))))
(assert
 (let ((?x11369 (* l_0_7_48 l_0_7_48)))
 (let ((?x11367 (* l_0_7_47 l_0_7_47)))
 (let ((?x11365 (* l_0_7_33 l_0_7_33)))
 (let ((?x11363 (* l_0_7_32 l_0_7_32)))
 (let ((?x10742 (* l_0_7_3 l_0_7_3)))
 (let ((?x10740 (* l_0_7_2 l_0_7_2)))
 (let ((?x10738 (* l_0_7_18 l_0_7_18)))
 (let ((?x10737 (* l_0_7_17 l_0_7_17)))
 (let ((?x10739 (+ ?x10737 ?x10738)))
 (let ((?x10743 (- (- ?x10739 ?x10740) ?x10742)))
 (= (- (- (- (- ?x10743 ?x11363) ?x11365) ?x11367) ?x11369) 0.0))))))))))))
(assert
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x11400 (* ?x10543 l_0_7_50)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x11398 (* ?x10540 l_0_7_49)))
 (let ((?x10742 (* l_0_7_3 l_0_7_3)))
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10761 (* ?x10760 l_0_7_5)))
 (let ((?x10740 (* l_0_7_2 l_0_7_2)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10758 (* ?x10757 l_0_7_4)))
 (let ((?x10738 (* l_0_7_18 l_0_7_18)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10755 (* ?x10754 l_0_7_20)))
 (let ((?x11386 (+ (- (* (* 2.0 l_0_7_17) l_0_7_19) (* l_0_7_17 l_0_7_17)) ?x10755)))
 (let ((?x11394 (- (+ (- (+ (- (- ?x11386 ?x10738) ?x10758) ?x10740) ?x10761) ?x10742) (* (* 2.0 l_0_7_32) l_0_7_34))))
 (= (- (- (- ?x11394 (* (* 2.0 l_0_7_33) l_0_7_35)) ?x11398) ?x11400) 0.0)))))))))))))))))
(assert
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x10544 (* ?x10543 l_0_7_53)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x10541 (* ?x10540 l_0_7_52)))
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10787 (* ?x10760 l_0_7_8)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10785 (* ?x10757 l_0_7_7)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10783 (* ?x10754 l_0_7_23)))
 (let ((?x10788 (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_22) ?x10783) ?x10785) ?x10787)))
 (let ((?x11447 (- (- ?x10788 (* (* 2.0 l_0_7_32) l_0_7_37)) (* (* 2.0 l_0_7_33) l_0_7_38))))
 (= (- (- ?x11447 ?x10541) ?x10544) 0.0))))))))))))))
(assert
 (let ((?x11369 (* l_0_7_48 l_0_7_48)))
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x11480 (* ?x10543 l_0_7_57)))
 (let ((?x11367 (* l_0_7_47 l_0_7_47)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x11477 (* ?x10540 l_0_7_56)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10814 (* ?x10754 l_0_7_27)))
 (let ((?x10752 (* 2.0 l_0_7_17)))
 (let ((?x10812 (* ?x10752 l_0_7_26)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10810 (* ?x10507 l_0_7_3)))
 (let ((?x10815 (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x10810) ?x10812) ?x10814)))
 (let ((?x11476 (- (- ?x10815 (* (* 2.0 l_0_7_32) l_0_7_41)) (* (* 2.0 l_0_7_33) l_0_7_42))))
 (= (+ (- (+ (- ?x11476 ?x11477) ?x11367) ?x11480) ?x11369) 0.0))))))))))))))))
(assert
 (let ((?x10841 (* l_0_7_6 l_0_7_6)))
 (let ((?x11534 (* l_0_7_51 l_0_7_51)))
 (let ((?x11532 (* l_0_7_50 l_0_7_50)))
 (let ((?x10839 (* l_0_7_5 l_0_7_5)))
 (let ((?x11529 (* l_0_7_49 l_0_7_49)))
 (let ((?x10837 (* l_0_7_4 l_0_7_4)))
 (let ((?x11526 (* l_0_7_36 l_0_7_36)))
 (let ((?x11524 (* l_0_7_35 l_0_7_35)))
 (let ((?x11522 (* l_0_7_34 l_0_7_34)))
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10761 (* ?x10760 l_0_7_5)))
 (let ((?x10835 (* l_0_7_21 l_0_7_21)))
 (let ((?x10828 (* l_0_7_20 l_0_7_20)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10758 (* ?x10757 l_0_7_4)))
 (let ((?x10826 (* l_0_7_19 l_0_7_19)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10755 (* ?x10754 l_0_7_20)))
 (let ((?x11519 (+ (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x10755) ?x10826) ?x10758) ?x10828)))
 (let ((?x11530 (- (- (- (- (- (+ (+ ?x11519 ?x10835) ?x10761) ?x11522) ?x11524) ?x11526) ?x10837) ?x11529)))
 (= (- (- (- (- ?x11530 ?x10839) ?x11532) ?x11534) ?x10841) 0.0))))))))))))))))))))))
(assert
 (let ((?x10870 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x10676 (* 2.0 l_0_7_51)))
 (let ((?x10677 (* ?x10676 l_0_7_54)))
 (let ((?x10673 (* 2.0 l_0_7_50)))
 (let ((?x10674 (* ?x10673 l_0_7_53)))
 (let ((?x10867 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x10670 (* 2.0 l_0_7_49)))
 (let ((?x10671 (* ?x10670 l_0_7_52)))
 (let ((?x10864 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x10760 (* 2.0 l_0_7_3)))
 (let ((?x10787 (* ?x10760 l_0_7_8)))
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10861 (* ?x10860 l_0_7_24)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10858 (* ?x10857 l_0_7_23)))
 (let ((?x10757 (* 2.0 l_0_7_2)))
 (let ((?x10785 (* ?x10757 l_0_7_7)))
 (let ((?x10855 (* 2.0 l_0_7_19)))
 (let ((?x10856 (* ?x10855 l_0_7_22)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10783 (* ?x10754 l_0_7_23)))
 (let ((?x11575 (+ (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x10783) ?x10856) ?x10785) ?x10858)))
 (let ((?x11583 (- (- (+ (+ ?x11575 ?x10861) ?x10787) (* (* 2.0 l_0_7_34) l_0_7_37)) (* (* 2.0 l_0_7_35) l_0_7_38))))
 (let ((?x11589 (- (- (- (- ?x11583 (* (* 2.0 l_0_7_36) l_0_7_39)) ?x10864) ?x10671) ?x10867)))
 (= (- (- (- ?x11589 ?x10674) ?x10677) ?x10870) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10676 (* 2.0 l_0_7_51)))
 (let ((?x11662 (* ?x10676 l_0_7_58)))
 (let ((?x10673 (* 2.0 l_0_7_50)))
 (let ((?x11660 (* ?x10673 l_0_7_57)))
 (let ((?x10670 (* 2.0 l_0_7_49)))
 (let ((?x11658 (* ?x10670 l_0_7_56)))
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x11400 (* ?x10543 l_0_7_50)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x11398 (* ?x10540 l_0_7_49)))
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10908 (* ?x10860 l_0_7_28)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10906 (* ?x10857 l_0_7_27)))
 (let ((?x10855 (* 2.0 l_0_7_19)))
 (let ((?x10904 (* ?x10855 l_0_7_26)))
 (let ((?x10754 (* 2.0 l_0_7_18)))
 (let ((?x10814 (* ?x10754 l_0_7_27)))
 (let ((?x10752 (* 2.0 l_0_7_17)))
 (let ((?x10812 (* ?x10752 l_0_7_26)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10902 (* ?x10510 l_0_7_6)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10900 (* ?x10507 l_0_7_5)))
 (let ((?x10810 (* ?x10507 l_0_7_3)))
 (let ((?x10504 (* 2.0 l_0_7_11)))
 (let ((?x11640 (* ?x10504 l_0_7_4)))
 (let ((?x11646 (- (- (- (- (+ (- (* ?x10504 l_0_7_2) ?x11640) ?x10810) ?x10900) ?x10902) ?x10812) ?x10814)))
 (let ((?x11651 (- (+ (+ (+ ?x11646 ?x10904) ?x10906) ?x10908) (* (* 2.0 l_0_7_34) l_0_7_41))))
 (let ((?x11655 (- (- ?x11651 (* (* 2.0 l_0_7_35) l_0_7_42)) (* (* 2.0 l_0_7_36) l_0_7_43))))
 (= (- (- (- (+ (+ ?x11655 ?x11398) ?x11400) ?x11658) ?x11660) ?x11662) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10948 (* l_0_7_9 l_0_7_9)))
 (let ((?x10946 (* l_0_7_8 l_0_7_8)))
 (let ((?x10944 (* l_0_7_7 l_0_7_7)))
 (let ((?x10714 (* l_0_7_55 l_0_7_55)))
 (let ((?x10712 (* l_0_7_54 l_0_7_54)))
 (let ((?x10710 (* l_0_7_53 l_0_7_53)))
 (let ((?x10708 (* l_0_7_52 l_0_7_52)))
 (let ((?x11727 (* l_0_7_40 l_0_7_40)))
 (let ((?x11725 (* l_0_7_39 l_0_7_39)))
 (let ((?x11723 (* l_0_7_38 l_0_7_38)))
 (let ((?x11721 (* l_0_7_37 l_0_7_37)))
 (let ((?x10942 (* l_0_7_25 l_0_7_25)))
 (let ((?x10940 (* l_0_7_24 l_0_7_24)))
 (let ((?x10938 (* l_0_7_23 l_0_7_23)))
 (let ((?x10941 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x10938) ?x10940)))
 (let ((?x10943 (+ ?x10941 ?x10942)))
 (let ((?x11731 (- (- (- (- (- (- (- ?x10943 ?x11721) ?x11723) ?x11725) ?x11727) ?x10708) ?x10710) ?x10712)))
 (= (- (- (- (- ?x11731 ?x10714) ?x10944) ?x10946) ?x10948) 0.0)))))))))))))))))))
(assert
 (let ((?x11793 (* l_0_7_60 l_0_7_60)))
 (let ((?x11791 (* l_0_7_59 l_0_7_59)))
 (let ((?x11789 (* l_0_7_58 l_0_7_58)))
 (let ((?x11787 (* l_0_7_57 l_0_7_57)))
 (let ((?x11785 (* l_0_7_56 l_0_7_56)))
 (let ((?x10543 (* 2.0 l_0_7_48)))
 (let ((?x11480 (* ?x10543 l_0_7_57)))
 (let ((?x10540 (* 2.0 l_0_7_47)))
 (let ((?x11477 (* ?x10540 l_0_7_56)))
 (let ((?x11781 (* l_0_7_45 l_0_7_45)))
 (let ((?x11779 (* l_0_7_44 l_0_7_44)))
 (let ((?x11777 (* l_0_7_43 l_0_7_43)))
 (let ((?x11775 (* l_0_7_42 l_0_7_42)))
 (let ((?x11773 (* l_0_7_41 l_0_7_41)))
 (let ((?x11001 (* l_0_7_30 l_0_7_30)))
 (let ((?x10999 (* l_0_7_29 l_0_7_29)))
 (let ((?x10997 (* l_0_7_28 l_0_7_28)))
 (let ((?x10995 (* l_0_7_27 l_0_7_27)))
 (let ((?x10993 (* l_0_7_26 l_0_7_26)))
 (let ((?x10991 (* l_0_7_15 l_0_7_15)))
 (let ((?x10989 (* l_0_7_14 l_0_7_14)))
 (let ((?x10987 (* l_0_7_13 l_0_7_13)))
 (let ((?x10990 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10987) ?x10989)))
 (let ((?x11002 (+ (+ (+ (+ (+ (- ?x10990 ?x10991) ?x10993) ?x10995) ?x10997) ?x10999) ?x11001)))
 (let ((?x11784 (+ (+ (- (- (- (- (- ?x11002 ?x11773) ?x11775) ?x11777) ?x11779) ?x11781) ?x11477) ?x11480)))
 (= (- (- (- (- (- ?x11784 ?x11785) ?x11787) ?x11789) ?x11791) ?x11793) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x11853 (* l_0_7_96 l_0_7_96)))
 (let ((?x11851 (* l_0_7_95 l_0_7_95)))
 (let ((?x11849 (* l_0_7_94 l_0_7_94)))
 (let ((?x11847 (* l_0_7_81 l_0_7_81)))
 (let ((?x11845 (* l_0_7_80 l_0_7_80)))
 (let ((?x11843 (* l_0_7_79 l_0_7_79)))
 (let ((?x11841 (* l_0_7_66 l_0_7_66)))
 (let ((?x11839 (* l_0_7_65 l_0_7_65)))
 (let ((?x11837 (* l_0_7_64 l_0_7_64)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10664 (* ?x10513 l_0_7_19)))
 (let ((?x11834 (* l_0_7_111 l_0_7_111)))
 (let ((?x11832 (* l_0_7_110 l_0_7_110)))
 (let ((?x11833 (- (- (* (* 2.0 l_0_7_1) l_0_7_4) (* l_0_7_109 l_0_7_109)) ?x11832)))
 (let ((?x11846 (- (- (- (- (- (- (- ?x11833 ?x11834) ?x10664) ?x11837) ?x11839) ?x11841) ?x11843) ?x11845)))
 (= (- (- (- (- ?x11846 ?x11847) ?x11849) ?x11851) ?x11853) 0.0)))))))))))))))))
(assert
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10706 (* ?x10513 l_0_7_22)))
 (let ((?x11899 (- (* (* 2.0 l_0_7_1) l_0_7_7) (* (* 2.0 l_0_7_109) l_0_7_112))))
 (let ((?x11905 (- (- ?x11899 (* (* 2.0 l_0_7_110) l_0_7_113)) (* (* 2.0 l_0_7_111) l_0_7_114))))
 (let ((?x11912 (- (- (- ?x11905 ?x10706) (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (let ((?x11918 (- (- ?x11912 (* (* 2.0 l_0_7_66) l_0_7_69)) (* (* 2.0 l_0_7_79) l_0_7_82))))
 (let ((?x11924 (- (- ?x11918 (* (* 2.0 l_0_7_80) l_0_7_83)) (* (* 2.0 l_0_7_81) l_0_7_84))))
 (let ((?x11930 (- (- ?x11924 (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x11930 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0))))))))))
(assert
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x11101 (* ?x10314 l_0_7_49)))
 (let ((?x10513 (* 2.0 l_0_7_16)))
 (let ((?x10724 (* ?x10513 l_0_7_26)))
 (let ((?x12013 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_101) l_0_7_94))))
 (let ((?x12017 (- (- ?x12013 (* (* 2.0 l_0_7_102) l_0_7_95)) (* (* 2.0 l_0_7_103) l_0_7_96))))
 (let ((?x12021 (- (- ?x12017 (* (* 2.0 l_0_7_109) l_0_7_116)) (* (* 2.0 l_0_7_110) l_0_7_117))))
 (let ((?x12027 (- (+ (- (- ?x12021 (* (* 2.0 l_0_7_111) l_0_7_118)) ?x10724) ?x11101) (* (* 2.0 l_0_7_64) l_0_7_71))))
 (let ((?x12031 (- (- ?x12027 (* (* 2.0 l_0_7_65) l_0_7_72)) (* (* 2.0 l_0_7_66) l_0_7_73))))
 (let ((?x12035 (- (- ?x12031 (* (* 2.0 l_0_7_79) l_0_7_86)) (* (* 2.0 l_0_7_80) l_0_7_87))))
 (= (- ?x12035 (* (* 2.0 l_0_7_81) l_0_7_88)) 0.0))))))))))))
(assert
 (let ((?x10841 (* l_0_7_6 l_0_7_6)))
 (let ((?x10839 (* l_0_7_5 l_0_7_5)))
 (let ((?x10837 (* l_0_7_4 l_0_7_4)))
 (let ((?x10835 (* l_0_7_21 l_0_7_21)))
 (let ((?x12120 (+ (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x10835) ?x10837)))
 (= (+ (+ ?x12120 ?x10839) ?x10841) 0.0)))))))
(assert
 (let ((?x10870 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x10867 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x10864 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10861 (* ?x10860 l_0_7_24)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10858 (* ?x10857 l_0_7_23)))
 (let ((?x12133 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x10858) ?x10861) ?x10864) ?x10867)))
 (= (+ ?x12133 ?x10870) 0.0))))))))))
(assert
 (let ((?x11534 (* l_0_7_51 l_0_7_51)))
 (let ((?x11532 (* l_0_7_50 l_0_7_50)))
 (let ((?x11529 (* l_0_7_49 l_0_7_49)))
 (let ((?x10860 (* 2.0 l_0_7_21)))
 (let ((?x10908 (* ?x10860 l_0_7_28)))
 (let ((?x10857 (* 2.0 l_0_7_20)))
 (let ((?x10906 (* ?x10857 l_0_7_27)))
 (let ((?x10855 (* 2.0 l_0_7_19)))
 (let ((?x10904 (* ?x10855 l_0_7_26)))
 (let ((?x10510 (* 2.0 l_0_7_13)))
 (let ((?x10902 (* ?x10510 l_0_7_6)))
 (let ((?x10507 (* 2.0 l_0_7_12)))
 (let ((?x10900 (* ?x10507 l_0_7_5)))
 (let ((?x10504 (* 2.0 l_0_7_11)))
 (let ((?x11640 (* ?x10504 l_0_7_4)))
 (let ((?x12148 (+ (+ (- (- (- (+ (+ ?x11640 ?x10900) ?x10902) ?x10904) ?x10906) ?x10908) ?x11529) ?x11532)))
 (= (+ ?x12148 ?x11534) 0.0))))))))))))))))))
(assert
 (let ((?x10948 (* l_0_7_9 l_0_7_9)))
 (let ((?x10946 (* l_0_7_8 l_0_7_8)))
 (let ((?x10944 (* l_0_7_7 l_0_7_7)))
 (let ((?x10942 (* l_0_7_25 l_0_7_25)))
 (let ((?x10940 (* l_0_7_24 l_0_7_24)))
 (let ((?x10938 (* l_0_7_23 l_0_7_23)))
 (let ((?x12164 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x10938) ?x10940)))
 (= (+ (+ (+ (- ?x12164 ?x10942) ?x10944) ?x10946) ?x10948) 0.0)))))))))
(assert
 (let ((?x10676 (* 2.0 l_0_7_51)))
 (let ((?x11662 (* ?x10676 l_0_7_58)))
 (let ((?x10673 (* 2.0 l_0_7_50)))
 (let ((?x11660 (* ?x10673 l_0_7_57)))
 (let ((?x10670 (* 2.0 l_0_7_49)))
 (let ((?x11658 (* ?x10670 l_0_7_56)))
 (let ((?x11001 (* l_0_7_30 l_0_7_30)))
 (let ((?x10999 (* l_0_7_29 l_0_7_29)))
 (let ((?x10997 (* l_0_7_28 l_0_7_28)))
 (let ((?x10995 (* l_0_7_27 l_0_7_27)))
 (let ((?x10993 (* l_0_7_26 l_0_7_26)))
 (let ((?x10991 (* l_0_7_15 l_0_7_15)))
 (let ((?x10989 (* l_0_7_14 l_0_7_14)))
 (let ((?x10987 (* l_0_7_13 l_0_7_13)))
 (let ((?x12180 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x10987) ?x10989)))
 (let ((?x12187 (+ (- (- (- (- (- (+ ?x12180 ?x10991) ?x10993) ?x10995) ?x10997) ?x10999) ?x11001) ?x11658)))
 (= (+ (+ ?x12187 ?x11660) ?x11662) 0.0))))))))))))))))))
(assert
 (let ((?x10454 (* l_0_7_46 l_0_7_46)))
 (let ((?x12206 (- (* (* (- 2.0) l_0_7_101) l_0_7_91) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (let ((?x12211 (- (- (+ ?x12206 ?x10454) (* (* 2.0 l_0_7_61) l_0_7_71)) (* (* 2.0 l_0_7_76) l_0_7_86))))
 (= ?x12211 0.0)))))
(assert
 (let ((?x12274 (* l_0_7_90 l_0_7_90)))
 (let ((?x12272 (* l_0_7_89 l_0_7_89)))
 (let ((?x12270 (* l_0_7_88 l_0_7_88)))
 (let ((?x12268 (* l_0_7_87 l_0_7_87)))
 (let ((?x12266 (* l_0_7_86 l_0_7_86)))
 (let ((?x12264 (* l_0_7_75 l_0_7_75)))
 (let ((?x12262 (* l_0_7_74 l_0_7_74)))
 (let ((?x12260 (* l_0_7_73 l_0_7_73)))
 (let ((?x12258 (* l_0_7_72 l_0_7_72)))
 (let ((?x12256 (* l_0_7_71 l_0_7_71)))
 (let ((?x10314 (* 2.0 l_0_7_46)))
 (let ((?x11286 (* ?x10314 l_0_7_56)))
 (let ((?x12253 (* l_0_7_120 l_0_7_120)))
 (let ((?x12251 (* l_0_7_119 l_0_7_119)))
 (let ((?x12249 (* l_0_7_118 l_0_7_118)))
 (let ((?x12247 (* l_0_7_117 l_0_7_117)))
 (let ((?x12245 (* l_0_7_116 l_0_7_116)))
 (let ((?x12243 (* l_0_7_105 l_0_7_105)))
 (let ((?x12241 (* l_0_7_104 l_0_7_104)))
 (let ((?x12239 (* l_0_7_103 l_0_7_103)))
 (let ((?x12240 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x12239)))
 (let ((?x12254 (- (- (- (- (- (- (- ?x12240 ?x12241) ?x12243) ?x12245) ?x12247) ?x12249) ?x12251) ?x12253)))
 (let ((?x12267 (- (- (- (- (- (- (+ ?x12254 ?x11286) ?x12256) ?x12258) ?x12260) ?x12262) ?x12264) ?x12266)))
 (= (- (- (- (- ?x12267 ?x12268) ?x12270) ?x12272) ?x12274) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11793 (* l_0_7_60 l_0_7_60)))
 (let ((?x11791 (* l_0_7_59 l_0_7_59)))
 (let ((?x11789 (* l_0_7_58 l_0_7_58)))
 (let ((?x12341 (+ (+ (+ (* l_0_7_56 l_0_7_56) (* l_0_7_57 l_0_7_57)) ?x11789) ?x11791)))
 (= (+ ?x12341 ?x11793) 0.0))))))
(assert
 (let ((?x12352 (* l_0_7_91 l_0_7_91)))
 (let ((?x12350 (* l_0_7_76 l_0_7_76)))
 (let ((?x12353 (- (- (- (* (- l_0_7_106) l_0_7_106) (* l_0_7_61 l_0_7_61)) ?x12350) ?x12352)))
 (= ?x12353 0.0)))))
(assert
 (let ((?x12372 (- (* (* (- 2.0) l_0_7_106) l_0_7_112) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (let ((?x12376 (- (- ?x12372 (* (* 2.0 l_0_7_76) l_0_7_82)) (* (* 2.0 l_0_7_91) l_0_7_97))))
 (= ?x12376 0.0))))
(assert
 (let ((?x12431 (* l_0_7_99 l_0_7_99)))
 (let ((?x12429 (* l_0_7_98 l_0_7_98)))
 (let ((?x12427 (* l_0_7_97 l_0_7_97)))
 (let ((?x12425 (* l_0_7_85 l_0_7_85)))
 (let ((?x12423 (* l_0_7_84 l_0_7_84)))
 (let ((?x12421 (* l_0_7_83 l_0_7_83)))
 (let ((?x12419 (* l_0_7_82 l_0_7_82)))
 (let ((?x12417 (* l_0_7_70 l_0_7_70)))
 (let ((?x12415 (* l_0_7_69 l_0_7_69)))
 (let ((?x12413 (* l_0_7_68 l_0_7_68)))
 (let ((?x12411 (* l_0_7_67 l_0_7_67)))
 (let ((?x12409 (* l_0_7_115 l_0_7_115)))
 (let ((?x12407 (* l_0_7_114 l_0_7_114)))
 (let ((?x12405 (* l_0_7_113 l_0_7_113)))
 (let ((?x12406 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_112 l_0_7_112)) ?x12405)))
 (let ((?x12420 (- (- (- (- (- (- (- ?x12406 ?x12407) ?x12409) ?x12411) ?x12413) ?x12415) ?x12417) ?x12419)))
 (= (- (- (- (- (- (- ?x12420 ?x12421) ?x12423) ?x12425) ?x12427) ?x12429) ?x12431) 0.0))))))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (let ((?x12536 (* l_0_8_46 l_0_8_46)))
 (let ((?x12534 (* l_0_8_31 l_0_8_31)))
 (let ((?x12532 (* l_0_8_16 l_0_8_16)))
 (let ((?x12531 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_107)) (* (* 2.0 l_0_8_121) l_0_8_122))))
 (let ((?x12540 (- (- (- (+ ?x12531 ?x12532) ?x12534) ?x12536) (* (* 2.0 l_0_8_61) l_0_8_62))))
 (let ((?x12546 (- (- ?x12540 (* (* 2.0 l_0_8_76) l_0_8_77)) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= (+ ?x12546 1.0) 0.0))))))))
(assert
 (let ((?x12598 (* l_0_8_91 l_0_8_91)))
 (let ((?x12596 (* l_0_8_76 l_0_8_76)))
 (let ((?x12594 (* l_0_8_61 l_0_8_61)))
 (let ((?x12595 (- (- (* (- l_0_8_106) l_0_8_106) (* l_0_8_121 l_0_8_121)) ?x12594)))
 (= (- (- ?x12595 ?x12596) ?x12598) 0.0))))))
(assert
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x12656 (* ?x12655 l_0_8_52)))
 (let ((?x12532 (* l_0_8_16 l_0_8_16)))
 (let ((?x12623 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_100) l_0_8_104)) (* (* 2.0 l_0_8_101) l_0_8_97))))
 (let ((?x12629 (- (- ?x12623 (* (* 2.0 l_0_8_102) l_0_8_98)) (* (* 2.0 l_0_8_103) l_0_8_99))))
 (let ((?x12635 (- (- ?x12629 (* (* 2.0 l_0_8_112) l_0_8_116)) (* (* 2.0 l_0_8_113) l_0_8_117))))
 (let ((?x12641 (- (- ?x12635 (* (* 2.0 l_0_8_114) l_0_8_118)) (* (* 2.0 l_0_8_115) l_0_8_119))))
 (let ((?x12647 (- (- ?x12641 (* (* 2.0 l_0_8_127) l_0_8_131)) (* (* 2.0 l_0_8_128) l_0_8_132))))
 (let ((?x12653 (- (- ?x12647 (* (* 2.0 l_0_8_129) l_0_8_133)) (* (* 2.0 l_0_8_130) l_0_8_134))))
 (let ((?x12663 (- (- (+ (+ ?x12653 ?x12532) ?x12656) (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x12669 (- (- ?x12663 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (let ((?x12675 (- (- ?x12669 (* (* 2.0 l_0_8_82) l_0_8_86)) (* (* 2.0 l_0_8_83) l_0_8_87))))
 (let ((?x12681 (- (- ?x12675 (* (* 2.0 l_0_8_84) l_0_8_88)) (* (* 2.0 l_0_8_85) l_0_8_89))))
 (= ?x12681 0.0)))))))))))))))
(assert
 (let ((?x12864 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x12861 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x12858 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x12855 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x12852 (* ?x12851 l_0_8_53)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x12849 (* ?x12848 l_0_8_52)))
 (let ((?x12834 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x12831 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x12828 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x12825 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x12822 (* ?x12821 l_0_8_17)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x12819 (* ?x12818 l_0_8_9)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x12816 (* ?x12815 l_0_8_8)))
 (let ((?x12812 (* 2.0 l_0_8_11)))
 (let ((?x12813 (* ?x12812 l_0_8_7)))
 (let ((?x12810 (* (* 2.0 l_0_8_10) l_0_8_14)))
 (let ((?x12807 (* (- 2.0) l_0_8_1)))
 (let ((?x12808 (* ?x12807 l_0_8_2)))
 (let ((?x12829 (+ (+ (+ (- (- (- (- ?x12808 ?x12810) ?x12813) ?x12816) ?x12819) ?x12822) ?x12825) ?x12828)))
 (let ((?x12841 (- (- (+ (+ ?x12829 ?x12831) ?x12834) (* (* 2.0 l_0_8_37) l_0_8_41)) (* (* 2.0 l_0_8_38) l_0_8_42))))
 (let ((?x12847 (- (- ?x12841 (* (* 2.0 l_0_8_39) l_0_8_43)) (* (* 2.0 l_0_8_40) l_0_8_44))))
 (= (- (- (- (- (+ (+ ?x12847 ?x12849) ?x12852) ?x12855) ?x12858) ?x12861) ?x12864) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x12984 (* 2.0 l_0_8_51)))
 (let ((?x12985 (* ?x12984 l_0_8_54)))
 (let ((?x12981 (* 2.0 l_0_8_50)))
 (let ((?x12982 (* ?x12981 l_0_8_53)))
 (let ((?x12978 (* 2.0 l_0_8_49)))
 (let ((?x12979 (* ?x12978 l_0_8_52)))
 (let ((?x12834 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x12831 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x12828 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x12825 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x12972 (* ?x12821 l_0_8_19)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x12819 (* ?x12818 l_0_8_9)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x12816 (* ?x12815 l_0_8_8)))
 (let ((?x12812 (* 2.0 l_0_8_11)))
 (let ((?x12813 (* ?x12812 l_0_8_7)))
 (let ((?x12810 (* (* 2.0 l_0_8_10) l_0_8_14)))
 (let ((?x12971 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x12810) ?x12813) ?x12816) ?x12819)))
 (let ((?x12983 (+ (+ (- (- (- (- (+ ?x12971 ?x12972) ?x12825) ?x12828) ?x12831) ?x12834) ?x12979) ?x12982)))
 (= (+ ?x12983 ?x12985) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13022 (* l_0_8_55 l_0_8_55)))
 (let ((?x13020 (* l_0_8_54 l_0_8_54)))
 (let ((?x13018 (* l_0_8_53 l_0_8_53)))
 (let ((?x13016 (* l_0_8_52 l_0_8_52)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13014 (* ?x12821 l_0_8_22)))
 (let ((?x12807 (* (- 2.0) l_0_8_1)))
 (let ((?x13013 (* ?x12807 l_0_8_7)))
 (= (+ (+ (+ (+ (+ ?x13013 ?x13014) ?x13016) ?x13018) ?x13020) ?x13022) 0.0))))))))))
(assert
 (let ((?x12864 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x12861 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x12858 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x12855 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13032 (* ?x12821 l_0_8_26)))
 (let ((?x12807 (* (- 2.0) l_0_8_1)))
 (let ((?x13031 (* ?x12807 l_0_8_11)))
 (= (+ (+ (+ (+ (+ ?x13031 ?x13032) ?x12855) ?x12858) ?x12861) ?x12864) 0.0))))))))))
(assert
 (let ((?x13050 (* l_0_8_3 l_0_8_3)))
 (let ((?x13048 (* l_0_8_2 l_0_8_2)))
 (let ((?x13046 (* l_0_8_18 l_0_8_18)))
 (let ((?x13045 (* l_0_8_17 l_0_8_17)))
 (let ((?x13047 (+ ?x13045 ?x13046)))
 (let ((?x13051 (- (- ?x13047 ?x13048) ?x13050)))
 (= ?x13051 0.0))))))))
(assert
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13069 (* ?x13068 l_0_8_5)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13066 (* ?x13065 l_0_8_4)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13063 (* ?x13062 l_0_8_20)))
 (let ((?x13060 (* 2.0 l_0_8_17)))
 (let ((?x13061 (* ?x13060 l_0_8_19)))
 (= (- (- (+ ?x13061 ?x13063) ?x13066) ?x13069) 0.0))))))))))
(assert
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13095 (* ?x13068 l_0_8_8)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13093 (* ?x13065 l_0_8_7)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13091 (* ?x13062 l_0_8_23)))
 (let ((?x13096 (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_22) ?x13091) ?x13093) ?x13095)))
 (= ?x13096 0.0)))))))))
(assert
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13122 (* ?x13062 l_0_8_27)))
 (let ((?x13060 (* 2.0 l_0_8_17)))
 (let ((?x13120 (* ?x13060 l_0_8_26)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x13118 (* ?x12815 l_0_8_3)))
 (let ((?x13123 (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x13118) ?x13120) ?x13122)))
 (= ?x13123 0.0)))))))))
(assert
 (let ((?x13149 (* l_0_8_6 l_0_8_6)))
 (let ((?x13147 (* l_0_8_5 l_0_8_5)))
 (let ((?x13145 (* l_0_8_4 l_0_8_4)))
 (let ((?x13143 (* l_0_8_21 l_0_8_21)))
 (let ((?x13146 (- (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x13143) ?x13145)))
 (= (- (- ?x13146 ?x13147) ?x13149) 0.0)))))))
(assert
 (let ((?x13178 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13175 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13172 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13169 (* ?x13168 l_0_8_24)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13166 (* ?x13165 l_0_8_23)))
 (let ((?x13163 (* 2.0 l_0_8_19)))
 (let ((?x13164 (* ?x13163 l_0_8_22)))
 (= (- (- (- (+ (+ ?x13164 ?x13166) ?x13169) ?x13172) ?x13175) ?x13178) 0.0)))))))))))
(assert
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13216 (* ?x13168 l_0_8_28)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13214 (* ?x13165 l_0_8_27)))
 (let ((?x13163 (* 2.0 l_0_8_19)))
 (let ((?x13212 (* ?x13163 l_0_8_26)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x13210 (* ?x12818 l_0_8_6)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x13208 (* ?x12815 l_0_8_5)))
 (let ((?x13215 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x13208) ?x13210) ?x13212) ?x13214)))
 (= (+ ?x13215 ?x13216) 0.0)))))))))))))
(assert
 (let ((?x13256 (* l_0_8_9 l_0_8_9)))
 (let ((?x13254 (* l_0_8_8 l_0_8_8)))
 (let ((?x13252 (* l_0_8_7 l_0_8_7)))
 (let ((?x13250 (* l_0_8_25 l_0_8_25)))
 (let ((?x13248 (* l_0_8_24 l_0_8_24)))
 (let ((?x13246 (* l_0_8_23 l_0_8_23)))
 (let ((?x13249 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x13246) ?x13248)))
 (let ((?x13251 (+ ?x13249 ?x13250)))
 (= (- (- (- ?x13251 ?x13252) ?x13254) ?x13256) 0.0))))))))))
(assert
 (let ((?x12834 (* (* 2.0 l_0_8_25) l_0_8_29)))
 (let ((?x12831 (* (* 2.0 l_0_8_24) l_0_8_28)))
 (let ((?x12828 (* (* 2.0 l_0_8_23) l_0_8_27)))
 (let ((?x12825 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x12819 (* ?x12818 l_0_8_9)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x12816 (* ?x12815 l_0_8_8)))
 (let ((?x12812 (* 2.0 l_0_8_11)))
 (let ((?x12813 (* ?x12812 l_0_8_7)))
 (let ((?x13278 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x12813) ?x12816) ?x12819) ?x12825)))
 (= (+ (+ (+ ?x13278 ?x12828) ?x12831) ?x12834) 0.0)))))))))))))
(assert
 (let ((?x13309 (* l_0_8_30 l_0_8_30)))
 (let ((?x13307 (* l_0_8_29 l_0_8_29)))
 (let ((?x13305 (* l_0_8_28 l_0_8_28)))
 (let ((?x13303 (* l_0_8_27 l_0_8_27)))
 (let ((?x13301 (* l_0_8_26 l_0_8_26)))
 (let ((?x13299 (* l_0_8_15 l_0_8_15)))
 (let ((?x13297 (* l_0_8_14 l_0_8_14)))
 (let ((?x13295 (* l_0_8_13 l_0_8_13)))
 (let ((?x13298 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13295) ?x13297)))
 (let ((?x13310 (+ (+ (+ (+ (+ (- ?x13298 ?x13299) ?x13301) ?x13303) ?x13305) ?x13307) ?x13309)))
 (= ?x13310 0.0))))))))))))
(assert
 (let ((?x13358 (* l_0_8_93 l_0_8_93)))
 (let ((?x13356 (* l_0_8_92 l_0_8_92)))
 (let ((?x13354 (* l_0_8_78 l_0_8_78)))
 (let ((?x13352 (* l_0_8_77 l_0_8_77)))
 (let ((?x13350 (* l_0_8_63 l_0_8_63)))
 (let ((?x13348 (* l_0_8_62 l_0_8_62)))
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x13346 (* ?x12655 l_0_8_47)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x12822 (* ?x12821 l_0_8_17)))
 (let ((?x13340 (* l_0_8_123 l_0_8_123)))
 (let ((?x13338 (* l_0_8_122 l_0_8_122)))
 (let ((?x13336 (* l_0_8_108 l_0_8_108)))
 (let ((?x13337 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* l_0_8_107 l_0_8_107)) ?x13336)))
 (let ((?x13345 (- (+ (- (- ?x13337 ?x13338) ?x13340) ?x12822) (* (* 2.0 l_0_8_31) l_0_8_32))))
 (let ((?x13359 (- (- (- (- (- (- (- ?x13345 ?x13346) ?x13348) ?x13350) ?x13352) ?x13354) ?x13356) ?x13358)))
 (= ?x13359 0.0))))))))))))))))))
(assert
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x13425 (* ?x12655 l_0_8_49)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x12972 (* ?x12821 l_0_8_19)))
 (let ((?x12822 (* ?x12821 l_0_8_17)))
 (let ((?x13405 (* 2.0 l_0_8_1)))
 (let ((?x13407 (* ?x13405 l_0_8_4)))
 (let ((?x13411 (- (- (* ?x13405 l_0_8_2) ?x13407) (* (* 2.0 l_0_8_107) l_0_8_109))))
 (let ((?x13417 (- (- ?x13411 (* (* 2.0 l_0_8_108) l_0_8_110)) (* (* 2.0 l_0_8_122) l_0_8_124))))
 (let ((?x13424 (- (+ (- (- ?x13417 (* (* 2.0 l_0_8_123) l_0_8_125)) ?x12822) ?x12972) (* (* 2.0 l_0_8_31) l_0_8_34))))
 (let ((?x13432 (- (- (- ?x13424 ?x13425) (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x13438 (- (- ?x13432 (* (* 2.0 l_0_8_77) l_0_8_79)) (* (* 2.0 l_0_8_78) l_0_8_80))))
 (let ((?x13444 (- (- ?x13438 (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= ?x13444 0.0)))))))))))))))
(assert
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x12656 (* ?x12655 l_0_8_52)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13014 (* ?x12821 l_0_8_22)))
 (let ((?x12807 (* (- 2.0) l_0_8_1)))
 (let ((?x13013 (* ?x12807 l_0_8_7)))
 (let ((?x13530 (- (- ?x13013 (* (* 2.0 l_0_8_107) l_0_8_112)) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x13534 (- (- ?x13530 (* (* 2.0 l_0_8_122) l_0_8_127)) (* (* 2.0 l_0_8_123) l_0_8_128))))
 (let ((?x13540 (- (- (- (+ ?x13534 ?x13014) (* (* 2.0 l_0_8_31) l_0_8_37)) ?x12656) (* (* 2.0 l_0_8_62) l_0_8_67))))
 (let ((?x13544 (- (- ?x13540 (* (* 2.0 l_0_8_63) l_0_8_68)) (* (* 2.0 l_0_8_77) l_0_8_82))))
 (let ((?x13548 (- (- ?x13544 (* (* 2.0 l_0_8_78) l_0_8_83)) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x13548 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0)))))))))))))
(assert
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x13643 (* ?x12655 l_0_8_56)))
 (let ((?x13346 (* ?x12655 l_0_8_47)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13032 (* ?x12821 l_0_8_26)))
 (let ((?x12807 (* (- 2.0) l_0_8_1)))
 (let ((?x13031 (* ?x12807 l_0_8_11)))
 (let ((?x13630 (- (- ?x13031 (* (* 2.0 l_0_8_101) l_0_8_92)) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x13634 (- (- ?x13630 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x13638 (- (- ?x13634 (* (* 2.0 l_0_8_122) l_0_8_131)) (* (* 2.0 l_0_8_123) l_0_8_132))))
 (let ((?x13644 (- (+ (- (+ ?x13638 ?x13032) (* (* 2.0 l_0_8_31) l_0_8_41)) ?x13346) ?x13643)))
 (let ((?x13648 (- (- ?x13644 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x13652 (- (- ?x13648 (* (* 2.0 l_0_8_77) l_0_8_86)) (* (* 2.0 l_0_8_78) l_0_8_87))))
 (= ?x13652 0.0)))))))))))))))
(assert
 (let ((?x13738 (* l_0_8_48 l_0_8_48)))
 (let ((?x13736 (* l_0_8_47 l_0_8_47)))
 (let ((?x13734 (* l_0_8_33 l_0_8_33)))
 (let ((?x13732 (* l_0_8_32 l_0_8_32)))
 (let ((?x13050 (* l_0_8_3 l_0_8_3)))
 (let ((?x13048 (* l_0_8_2 l_0_8_2)))
 (let ((?x13046 (* l_0_8_18 l_0_8_18)))
 (let ((?x13045 (* l_0_8_17 l_0_8_17)))
 (let ((?x13047 (+ ?x13045 ?x13046)))
 (let ((?x13051 (- (- ?x13047 ?x13048) ?x13050)))
 (= (- (- (- (- ?x13051 ?x13732) ?x13734) ?x13736) ?x13738) 0.0))))))))))))
(assert
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x13769 (* ?x12851 l_0_8_50)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x13767 (* ?x12848 l_0_8_49)))
 (let ((?x13050 (* l_0_8_3 l_0_8_3)))
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13069 (* ?x13068 l_0_8_5)))
 (let ((?x13048 (* l_0_8_2 l_0_8_2)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13066 (* ?x13065 l_0_8_4)))
 (let ((?x13046 (* l_0_8_18 l_0_8_18)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13063 (* ?x13062 l_0_8_20)))
 (let ((?x13755 (+ (- (* (* 2.0 l_0_8_17) l_0_8_19) (* l_0_8_17 l_0_8_17)) ?x13063)))
 (let ((?x13763 (- (+ (- (+ (- (- ?x13755 ?x13046) ?x13066) ?x13048) ?x13069) ?x13050) (* (* 2.0 l_0_8_32) l_0_8_34))))
 (= (- (- (- ?x13763 (* (* 2.0 l_0_8_33) l_0_8_35)) ?x13767) ?x13769) 0.0)))))))))))))))))
(assert
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x12852 (* ?x12851 l_0_8_53)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x12849 (* ?x12848 l_0_8_52)))
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13095 (* ?x13068 l_0_8_8)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13093 (* ?x13065 l_0_8_7)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13091 (* ?x13062 l_0_8_23)))
 (let ((?x13096 (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_22) ?x13091) ?x13093) ?x13095)))
 (let ((?x13816 (- (- ?x13096 (* (* 2.0 l_0_8_32) l_0_8_37)) (* (* 2.0 l_0_8_33) l_0_8_38))))
 (= (- (- ?x13816 ?x12849) ?x12852) 0.0))))))))))))))
(assert
 (let ((?x13738 (* l_0_8_48 l_0_8_48)))
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x13849 (* ?x12851 l_0_8_57)))
 (let ((?x13736 (* l_0_8_47 l_0_8_47)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x13846 (* ?x12848 l_0_8_56)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13122 (* ?x13062 l_0_8_27)))
 (let ((?x13060 (* 2.0 l_0_8_17)))
 (let ((?x13120 (* ?x13060 l_0_8_26)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x13118 (* ?x12815 l_0_8_3)))
 (let ((?x13123 (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x13118) ?x13120) ?x13122)))
 (let ((?x13845 (- (- ?x13123 (* (* 2.0 l_0_8_32) l_0_8_41)) (* (* 2.0 l_0_8_33) l_0_8_42))))
 (= (+ (- (+ (- ?x13845 ?x13846) ?x13736) ?x13849) ?x13738) 0.0))))))))))))))))
(assert
 (let ((?x13149 (* l_0_8_6 l_0_8_6)))
 (let ((?x13903 (* l_0_8_51 l_0_8_51)))
 (let ((?x13901 (* l_0_8_50 l_0_8_50)))
 (let ((?x13147 (* l_0_8_5 l_0_8_5)))
 (let ((?x13898 (* l_0_8_49 l_0_8_49)))
 (let ((?x13145 (* l_0_8_4 l_0_8_4)))
 (let ((?x13895 (* l_0_8_36 l_0_8_36)))
 (let ((?x13893 (* l_0_8_35 l_0_8_35)))
 (let ((?x13891 (* l_0_8_34 l_0_8_34)))
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13069 (* ?x13068 l_0_8_5)))
 (let ((?x13143 (* l_0_8_21 l_0_8_21)))
 (let ((?x13136 (* l_0_8_20 l_0_8_20)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13066 (* ?x13065 l_0_8_4)))
 (let ((?x13134 (* l_0_8_19 l_0_8_19)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13063 (* ?x13062 l_0_8_20)))
 (let ((?x13888 (+ (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x13063) ?x13134) ?x13066) ?x13136)))
 (let ((?x13899 (- (- (- (- (- (+ (+ ?x13888 ?x13143) ?x13069) ?x13891) ?x13893) ?x13895) ?x13145) ?x13898)))
 (= (- (- (- (- ?x13899 ?x13147) ?x13901) ?x13903) ?x13149) 0.0))))))))))))))))))))))
(assert
 (let ((?x13178 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x12984 (* 2.0 l_0_8_51)))
 (let ((?x12985 (* ?x12984 l_0_8_54)))
 (let ((?x12981 (* 2.0 l_0_8_50)))
 (let ((?x12982 (* ?x12981 l_0_8_53)))
 (let ((?x13175 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x12978 (* 2.0 l_0_8_49)))
 (let ((?x12979 (* ?x12978 l_0_8_52)))
 (let ((?x13172 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x13068 (* 2.0 l_0_8_3)))
 (let ((?x13095 (* ?x13068 l_0_8_8)))
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13169 (* ?x13168 l_0_8_24)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13166 (* ?x13165 l_0_8_23)))
 (let ((?x13065 (* 2.0 l_0_8_2)))
 (let ((?x13093 (* ?x13065 l_0_8_7)))
 (let ((?x13163 (* 2.0 l_0_8_19)))
 (let ((?x13164 (* ?x13163 l_0_8_22)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13091 (* ?x13062 l_0_8_23)))
 (let ((?x13944 (+ (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x13091) ?x13164) ?x13093) ?x13166)))
 (let ((?x13952 (- (- (+ (+ ?x13944 ?x13169) ?x13095) (* (* 2.0 l_0_8_34) l_0_8_37)) (* (* 2.0 l_0_8_35) l_0_8_38))))
 (let ((?x13958 (- (- (- (- ?x13952 (* (* 2.0 l_0_8_36) l_0_8_39)) ?x13172) ?x12979) ?x13175)))
 (= (- (- (- ?x13958 ?x12982) ?x12985) ?x13178) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12984 (* 2.0 l_0_8_51)))
 (let ((?x14031 (* ?x12984 l_0_8_58)))
 (let ((?x12981 (* 2.0 l_0_8_50)))
 (let ((?x14029 (* ?x12981 l_0_8_57)))
 (let ((?x12978 (* 2.0 l_0_8_49)))
 (let ((?x14027 (* ?x12978 l_0_8_56)))
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x13769 (* ?x12851 l_0_8_50)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x13767 (* ?x12848 l_0_8_49)))
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13216 (* ?x13168 l_0_8_28)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13214 (* ?x13165 l_0_8_27)))
 (let ((?x13163 (* 2.0 l_0_8_19)))
 (let ((?x13212 (* ?x13163 l_0_8_26)))
 (let ((?x13062 (* 2.0 l_0_8_18)))
 (let ((?x13122 (* ?x13062 l_0_8_27)))
 (let ((?x13060 (* 2.0 l_0_8_17)))
 (let ((?x13120 (* ?x13060 l_0_8_26)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x13210 (* ?x12818 l_0_8_6)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x13208 (* ?x12815 l_0_8_5)))
 (let ((?x13118 (* ?x12815 l_0_8_3)))
 (let ((?x12812 (* 2.0 l_0_8_11)))
 (let ((?x14009 (* ?x12812 l_0_8_4)))
 (let ((?x14015 (- (- (- (- (+ (- (* ?x12812 l_0_8_2) ?x14009) ?x13118) ?x13208) ?x13210) ?x13120) ?x13122)))
 (let ((?x14020 (- (+ (+ (+ ?x14015 ?x13212) ?x13214) ?x13216) (* (* 2.0 l_0_8_34) l_0_8_41))))
 (let ((?x14024 (- (- ?x14020 (* (* 2.0 l_0_8_35) l_0_8_42)) (* (* 2.0 l_0_8_36) l_0_8_43))))
 (= (- (- (- (+ (+ ?x14024 ?x13767) ?x13769) ?x14027) ?x14029) ?x14031) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x13256 (* l_0_8_9 l_0_8_9)))
 (let ((?x13254 (* l_0_8_8 l_0_8_8)))
 (let ((?x13252 (* l_0_8_7 l_0_8_7)))
 (let ((?x13022 (* l_0_8_55 l_0_8_55)))
 (let ((?x13020 (* l_0_8_54 l_0_8_54)))
 (let ((?x13018 (* l_0_8_53 l_0_8_53)))
 (let ((?x13016 (* l_0_8_52 l_0_8_52)))
 (let ((?x14096 (* l_0_8_40 l_0_8_40)))
 (let ((?x14094 (* l_0_8_39 l_0_8_39)))
 (let ((?x14092 (* l_0_8_38 l_0_8_38)))
 (let ((?x14090 (* l_0_8_37 l_0_8_37)))
 (let ((?x13250 (* l_0_8_25 l_0_8_25)))
 (let ((?x13248 (* l_0_8_24 l_0_8_24)))
 (let ((?x13246 (* l_0_8_23 l_0_8_23)))
 (let ((?x13249 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x13246) ?x13248)))
 (let ((?x13251 (+ ?x13249 ?x13250)))
 (let ((?x14100 (- (- (- (- (- (- (- ?x13251 ?x14090) ?x14092) ?x14094) ?x14096) ?x13016) ?x13018) ?x13020)))
 (= (- (- (- (- ?x14100 ?x13022) ?x13252) ?x13254) ?x13256) 0.0)))))))))))))))))))
(assert
 (let ((?x14162 (* l_0_8_60 l_0_8_60)))
 (let ((?x14160 (* l_0_8_59 l_0_8_59)))
 (let ((?x14158 (* l_0_8_58 l_0_8_58)))
 (let ((?x14156 (* l_0_8_57 l_0_8_57)))
 (let ((?x14154 (* l_0_8_56 l_0_8_56)))
 (let ((?x12851 (* 2.0 l_0_8_48)))
 (let ((?x13849 (* ?x12851 l_0_8_57)))
 (let ((?x12848 (* 2.0 l_0_8_47)))
 (let ((?x13846 (* ?x12848 l_0_8_56)))
 (let ((?x14150 (* l_0_8_45 l_0_8_45)))
 (let ((?x14148 (* l_0_8_44 l_0_8_44)))
 (let ((?x14146 (* l_0_8_43 l_0_8_43)))
 (let ((?x14144 (* l_0_8_42 l_0_8_42)))
 (let ((?x14142 (* l_0_8_41 l_0_8_41)))
 (let ((?x13309 (* l_0_8_30 l_0_8_30)))
 (let ((?x13307 (* l_0_8_29 l_0_8_29)))
 (let ((?x13305 (* l_0_8_28 l_0_8_28)))
 (let ((?x13303 (* l_0_8_27 l_0_8_27)))
 (let ((?x13301 (* l_0_8_26 l_0_8_26)))
 (let ((?x13299 (* l_0_8_15 l_0_8_15)))
 (let ((?x13297 (* l_0_8_14 l_0_8_14)))
 (let ((?x13295 (* l_0_8_13 l_0_8_13)))
 (let ((?x13298 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13295) ?x13297)))
 (let ((?x13310 (+ (+ (+ (+ (+ (- ?x13298 ?x13299) ?x13301) ?x13303) ?x13305) ?x13307) ?x13309)))
 (let ((?x14153 (+ (+ (- (- (- (- (- ?x13310 ?x14142) ?x14144) ?x14146) ?x14148) ?x14150) ?x13846) ?x13849)))
 (= (- (- (- (- (- ?x14153 ?x14154) ?x14156) ?x14158) ?x14160) ?x14162) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12532 (* l_0_8_16 l_0_8_16)))
 (let ((?x14202 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_109)) (* (* 2.0 l_0_8_121) l_0_8_124))))
 (let ((?x14207 (- (- (- ?x14202 ?x12532) (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* 2.0 l_0_8_76) l_0_8_79))))
 (= (- ?x14207 (* (* 2.0 l_0_8_91) l_0_8_94)) 0.0)))))
(assert
 (let ((?x14275 (* l_0_8_96 l_0_8_96)))
 (let ((?x14273 (* l_0_8_95 l_0_8_95)))
 (let ((?x14271 (* l_0_8_94 l_0_8_94)))
 (let ((?x14269 (* l_0_8_81 l_0_8_81)))
 (let ((?x14267 (* l_0_8_80 l_0_8_80)))
 (let ((?x14265 (* l_0_8_79 l_0_8_79)))
 (let ((?x14263 (* l_0_8_66 l_0_8_66)))
 (let ((?x14261 (* l_0_8_65 l_0_8_65)))
 (let ((?x14259 (* l_0_8_64 l_0_8_64)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x12972 (* ?x12821 l_0_8_19)))
 (let ((?x14256 (* l_0_8_126 l_0_8_126)))
 (let ((?x14254 (* l_0_8_125 l_0_8_125)))
 (let ((?x14252 (* l_0_8_124 l_0_8_124)))
 (let ((?x14250 (* l_0_8_111 l_0_8_111)))
 (let ((?x14248 (* l_0_8_110 l_0_8_110)))
 (let ((?x14249 (- (- (* (* 2.0 l_0_8_1) l_0_8_4) (* l_0_8_109 l_0_8_109)) ?x14248)))
 (let ((?x14262 (- (- (- (- (- (- (- ?x14249 ?x14250) ?x14252) ?x14254) ?x14256) ?x12972) ?x14259) ?x14261)))
 (let ((?x14276 (- (- (- (- (- (- (- ?x14262 ?x14263) ?x14265) ?x14267) ?x14269) ?x14271) ?x14273) ?x14275)))
 (= ?x14276 0.0)))))))))))))))))))))
(assert
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13014 (* ?x12821 l_0_8_22)))
 (let ((?x14330 (- (* (* 2.0 l_0_8_1) l_0_8_7) (* (* 2.0 l_0_8_109) l_0_8_112))))
 (let ((?x14336 (- (- ?x14330 (* (* 2.0 l_0_8_110) l_0_8_113)) (* (* 2.0 l_0_8_111) l_0_8_114))))
 (let ((?x14342 (- (- ?x14336 (* (* 2.0 l_0_8_124) l_0_8_127)) (* (* 2.0 l_0_8_125) l_0_8_128))))
 (let ((?x14349 (- (- (- ?x14342 (* (* 2.0 l_0_8_126) l_0_8_129)) ?x13014) (* (* 2.0 l_0_8_64) l_0_8_67))))
 (let ((?x14355 (- (- ?x14349 (* (* 2.0 l_0_8_65) l_0_8_68)) (* (* 2.0 l_0_8_66) l_0_8_69))))
 (let ((?x14361 (- (- ?x14355 (* (* 2.0 l_0_8_79) l_0_8_82)) (* (* 2.0 l_0_8_80) l_0_8_83))))
 (let ((?x14367 (- (- ?x14361 (* (* 2.0 l_0_8_81) l_0_8_84)) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x14373 (- (- ?x14367 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x14373 0.0))))))))))))
(assert
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x13425 (* ?x12655 l_0_8_49)))
 (let ((?x12821 (* 2.0 l_0_8_16)))
 (let ((?x13032 (* ?x12821 l_0_8_26)))
 (let ((?x14471 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_101) l_0_8_94))))
 (let ((?x14475 (- (- ?x14471 (* (* 2.0 l_0_8_102) l_0_8_95)) (* (* 2.0 l_0_8_103) l_0_8_96))))
 (let ((?x14479 (- (- ?x14475 (* (* 2.0 l_0_8_109) l_0_8_116)) (* (* 2.0 l_0_8_110) l_0_8_117))))
 (let ((?x14483 (- (- ?x14479 (* (* 2.0 l_0_8_111) l_0_8_118)) (* (* 2.0 l_0_8_124) l_0_8_131))))
 (let ((?x14487 (- (- ?x14483 (* (* 2.0 l_0_8_125) l_0_8_132)) (* (* 2.0 l_0_8_126) l_0_8_133))))
 (let ((?x14493 (- (- (+ (- ?x14487 ?x13032) ?x13425) (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (let ((?x14497 (- (- ?x14493 (* (* 2.0 l_0_8_66) l_0_8_73)) (* (* 2.0 l_0_8_79) l_0_8_86))))
 (let ((?x14501 (- (- ?x14497 (* (* 2.0 l_0_8_80) l_0_8_87)) (* (* 2.0 l_0_8_81) l_0_8_88))))
 (= ?x14501 0.0))))))))))))))
(assert
 (let ((?x13149 (* l_0_8_6 l_0_8_6)))
 (let ((?x13147 (* l_0_8_5 l_0_8_5)))
 (let ((?x13145 (* l_0_8_4 l_0_8_4)))
 (let ((?x13143 (* l_0_8_21 l_0_8_21)))
 (let ((?x14602 (+ (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x13143) ?x13145)))
 (= (+ (+ ?x14602 ?x13147) ?x13149) 0.0)))))))
(assert
 (let ((?x13178 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13175 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13172 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13169 (* ?x13168 l_0_8_24)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13166 (* ?x13165 l_0_8_23)))
 (let ((?x14615 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x13166) ?x13169) ?x13172) ?x13175)))
 (= (+ ?x14615 ?x13178) 0.0))))))))))
(assert
 (let ((?x13903 (* l_0_8_51 l_0_8_51)))
 (let ((?x13901 (* l_0_8_50 l_0_8_50)))
 (let ((?x13898 (* l_0_8_49 l_0_8_49)))
 (let ((?x13168 (* 2.0 l_0_8_21)))
 (let ((?x13216 (* ?x13168 l_0_8_28)))
 (let ((?x13165 (* 2.0 l_0_8_20)))
 (let ((?x13214 (* ?x13165 l_0_8_27)))
 (let ((?x13163 (* 2.0 l_0_8_19)))
 (let ((?x13212 (* ?x13163 l_0_8_26)))
 (let ((?x12818 (* 2.0 l_0_8_13)))
 (let ((?x13210 (* ?x12818 l_0_8_6)))
 (let ((?x12815 (* 2.0 l_0_8_12)))
 (let ((?x13208 (* ?x12815 l_0_8_5)))
 (let ((?x12812 (* 2.0 l_0_8_11)))
 (let ((?x14009 (* ?x12812 l_0_8_4)))
 (let ((?x14630 (+ (+ (- (- (- (+ (+ ?x14009 ?x13208) ?x13210) ?x13212) ?x13214) ?x13216) ?x13898) ?x13901)))
 (= (+ ?x14630 ?x13903) 0.0))))))))))))))))))
(assert
 (let ((?x13256 (* l_0_8_9 l_0_8_9)))
 (let ((?x13254 (* l_0_8_8 l_0_8_8)))
 (let ((?x13252 (* l_0_8_7 l_0_8_7)))
 (let ((?x13250 (* l_0_8_25 l_0_8_25)))
 (let ((?x13248 (* l_0_8_24 l_0_8_24)))
 (let ((?x13246 (* l_0_8_23 l_0_8_23)))
 (let ((?x14646 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x13246) ?x13248)))
 (= (+ (+ (+ (- ?x14646 ?x13250) ?x13252) ?x13254) ?x13256) 0.0)))))))))
(assert
 (let ((?x12984 (* 2.0 l_0_8_51)))
 (let ((?x14031 (* ?x12984 l_0_8_58)))
 (let ((?x12981 (* 2.0 l_0_8_50)))
 (let ((?x14029 (* ?x12981 l_0_8_57)))
 (let ((?x12978 (* 2.0 l_0_8_49)))
 (let ((?x14027 (* ?x12978 l_0_8_56)))
 (let ((?x13309 (* l_0_8_30 l_0_8_30)))
 (let ((?x13307 (* l_0_8_29 l_0_8_29)))
 (let ((?x13305 (* l_0_8_28 l_0_8_28)))
 (let ((?x13303 (* l_0_8_27 l_0_8_27)))
 (let ((?x13301 (* l_0_8_26 l_0_8_26)))
 (let ((?x13299 (* l_0_8_15 l_0_8_15)))
 (let ((?x13297 (* l_0_8_14 l_0_8_14)))
 (let ((?x13295 (* l_0_8_13 l_0_8_13)))
 (let ((?x14662 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13295) ?x13297)))
 (let ((?x14669 (+ (- (- (- (- (- (+ ?x14662 ?x13299) ?x13301) ?x13303) ?x13305) ?x13307) ?x13309) ?x14027)))
 (= (+ (+ ?x14669 ?x14029) ?x14031) 0.0))))))))))))))))))
(assert
 (let ((?x12536 (* l_0_8_46 l_0_8_46)))
 (let ((?x14688 (- (* (* (- 2.0) l_0_8_101) l_0_8_91) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x14693 (- (+ (- ?x14688 (* (* 2.0 l_0_8_121) l_0_8_131)) ?x12536) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= (- ?x14693 (* (* 2.0 l_0_8_76) l_0_8_86)) 0.0)))))
(assert
 (let ((?x14774 (* l_0_8_90 l_0_8_90)))
 (let ((?x14772 (* l_0_8_89 l_0_8_89)))
 (let ((?x14770 (* l_0_8_88 l_0_8_88)))
 (let ((?x14768 (* l_0_8_87 l_0_8_87)))
 (let ((?x14766 (* l_0_8_86 l_0_8_86)))
 (let ((?x14764 (* l_0_8_75 l_0_8_75)))
 (let ((?x14762 (* l_0_8_74 l_0_8_74)))
 (let ((?x14760 (* l_0_8_73 l_0_8_73)))
 (let ((?x14758 (* l_0_8_72 l_0_8_72)))
 (let ((?x14756 (* l_0_8_71 l_0_8_71)))
 (let ((?x12655 (* 2.0 l_0_8_46)))
 (let ((?x13643 (* ?x12655 l_0_8_56)))
 (let ((?x14753 (* l_0_8_135 l_0_8_135)))
 (let ((?x14751 (* l_0_8_134 l_0_8_134)))
 (let ((?x14749 (* l_0_8_133 l_0_8_133)))
 (let ((?x14747 (* l_0_8_132 l_0_8_132)))
 (let ((?x14745 (* l_0_8_131 l_0_8_131)))
 (let ((?x14743 (* l_0_8_120 l_0_8_120)))
 (let ((?x14741 (* l_0_8_119 l_0_8_119)))
 (let ((?x14739 (* l_0_8_118 l_0_8_118)))
 (let ((?x14737 (* l_0_8_117 l_0_8_117)))
 (let ((?x14735 (* l_0_8_116 l_0_8_116)))
 (let ((?x14733 (* l_0_8_105 l_0_8_105)))
 (let ((?x14731 (* l_0_8_104 l_0_8_104)))
 (let ((?x14729 (* l_0_8_103 l_0_8_103)))
 (let ((?x14730 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x14729)))
 (let ((?x14744 (- (- (- (- (- (- (- ?x14730 ?x14731) ?x14733) ?x14735) ?x14737) ?x14739) ?x14741) ?x14743)))
 (let ((?x14757 (- (+ (- (- (- (- (- ?x14744 ?x14745) ?x14747) ?x14749) ?x14751) ?x14753) ?x13643) ?x14756)))
 (let ((?x14771 (- (- (- (- (- (- (- ?x14757 ?x14758) ?x14760) ?x14762) ?x14764) ?x14766) ?x14768) ?x14770)))
 (= (- (- ?x14771 ?x14772) ?x14774) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x14162 (* l_0_8_60 l_0_8_60)))
 (let ((?x14160 (* l_0_8_59 l_0_8_59)))
 (let ((?x14158 (* l_0_8_58 l_0_8_58)))
 (let ((?x14856 (+ (+ (+ (* l_0_8_56 l_0_8_56) (* l_0_8_57 l_0_8_57)) ?x14158) ?x14160)))
 (= (+ ?x14856 ?x14162) 0.0))))))
(assert
 (let ((?x14864 (- (* (* (- 2.0) l_0_8_106) l_0_8_112) (* (* 2.0 l_0_8_121) l_0_8_127))))
 (let ((?x14868 (- (- ?x14864 (* (* 2.0 l_0_8_61) l_0_8_67)) (* (* 2.0 l_0_8_76) l_0_8_82))))
 (= (- ?x14868 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0))))
(assert
 (let ((?x14939 (* l_0_8_99 l_0_8_99)))
 (let ((?x14937 (* l_0_8_98 l_0_8_98)))
 (let ((?x14935 (* l_0_8_97 l_0_8_97)))
 (let ((?x14933 (* l_0_8_85 l_0_8_85)))
 (let ((?x14931 (* l_0_8_84 l_0_8_84)))
 (let ((?x14929 (* l_0_8_83 l_0_8_83)))
 (let ((?x14927 (* l_0_8_82 l_0_8_82)))
 (let ((?x14925 (* l_0_8_70 l_0_8_70)))
 (let ((?x14923 (* l_0_8_69 l_0_8_69)))
 (let ((?x14921 (* l_0_8_68 l_0_8_68)))
 (let ((?x14919 (* l_0_8_67 l_0_8_67)))
 (let ((?x14917 (* l_0_8_130 l_0_8_130)))
 (let ((?x14915 (* l_0_8_129 l_0_8_129)))
 (let ((?x14913 (* l_0_8_128 l_0_8_128)))
 (let ((?x14911 (* l_0_8_127 l_0_8_127)))
 (let ((?x14909 (* l_0_8_115 l_0_8_115)))
 (let ((?x14907 (* l_0_8_114 l_0_8_114)))
 (let ((?x14905 (* l_0_8_113 l_0_8_113)))
 (let ((?x14906 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x14905)))
 (let ((?x14920 (- (- (- (- (- (- (- ?x14906 ?x14907) ?x14909) ?x14911) ?x14913) ?x14915) ?x14917) ?x14919)))
 (let ((?x14934 (- (- (- (- (- (- (- ?x14920 ?x14921) ?x14923) ?x14925) ?x14927) ?x14929) ?x14931) ?x14933)))
 (= (- (- (- ?x14934 ?x14935) ?x14937) ?x14939) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_121 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_130 0.0))
(assert
 (>= l_0_8_135 0.0))
(assert
 (let ((?x15064 (* l_0_9_46 l_0_9_46)))
 (let ((?x15062 (* l_0_9_31 l_0_9_31)))
 (let ((?x15060 (* l_0_9_16 l_0_9_16)))
 (let ((?x15056 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_107)) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x15065 (- (- (+ (- ?x15056 (* (* 2.0 l_0_9_136) l_0_9_137)) ?x15060) ?x15062) ?x15064)))
 (let ((?x15071 (- (- ?x15065 (* (* 2.0 l_0_9_61) l_0_9_62)) (* (* 2.0 l_0_9_76) l_0_9_77))))
 (= (+ (- ?x15071 (* (* 2.0 l_0_9_91) l_0_9_92)) 1.0) 0.0))))))))
(assert
 (let ((?x15064 (* l_0_9_46 l_0_9_46)))
 (let ((?x15127 (- (* (* (- 2.0) l_0_9_101) l_0_9_91) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x15131 (- (- ?x15127 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_136) l_0_9_146))))
 (let ((?x15136 (- (- (+ ?x15131 ?x15064) (* (* 2.0 l_0_9_61) l_0_9_71)) (* (* 2.0 l_0_9_76) l_0_9_86))))
 (= (- ?x15136 1.0) 0.0))))))
(assert
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x15225 (* ?x15224 l_0_9_52)))
 (let ((?x15060 (* l_0_9_16 l_0_9_16)))
 (let ((?x15180 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_100) l_0_9_104)) (* (* 2.0 l_0_9_101) l_0_9_97))))
 (let ((?x15186 (- (- ?x15180 (* (* 2.0 l_0_9_102) l_0_9_98)) (* (* 2.0 l_0_9_103) l_0_9_99))))
 (let ((?x15192 (- (- ?x15186 (* (* 2.0 l_0_9_112) l_0_9_116)) (* (* 2.0 l_0_9_113) l_0_9_117))))
 (let ((?x15198 (- (- ?x15192 (* (* 2.0 l_0_9_114) l_0_9_118)) (* (* 2.0 l_0_9_115) l_0_9_119))))
 (let ((?x15204 (- (- ?x15198 (* (* 2.0 l_0_9_127) l_0_9_131)) (* (* 2.0 l_0_9_128) l_0_9_132))))
 (let ((?x15210 (- (- ?x15204 (* (* 2.0 l_0_9_129) l_0_9_133)) (* (* 2.0 l_0_9_130) l_0_9_134))))
 (let ((?x15216 (- (- ?x15210 (* (* 2.0 l_0_9_142) l_0_9_146)) (* (* 2.0 l_0_9_143) l_0_9_147))))
 (let ((?x15222 (- (- ?x15216 (* (* 2.0 l_0_9_144) l_0_9_148)) (* (* 2.0 l_0_9_145) l_0_9_149))))
 (let ((?x15232 (- (- (+ (+ ?x15222 ?x15060) ?x15225) (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x15238 (- (- ?x15232 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (let ((?x15244 (- (- ?x15238 (* (* 2.0 l_0_9_82) l_0_9_86)) (* (* 2.0 l_0_9_83) l_0_9_87))))
 (let ((?x15250 (- (- ?x15244 (* (* 2.0 l_0_9_84) l_0_9_88)) (* (* 2.0 l_0_9_85) l_0_9_89))))
 (= ?x15250 0.0)))))))))))))))))
(assert
 (let ((?x15457 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15454 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15451 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15448 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x15445 (* ?x15444 l_0_9_53)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x15442 (* ?x15441 l_0_9_52)))
 (let ((?x15427 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15424 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15421 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15418 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15415 (* ?x15414 l_0_9_17)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15412 (* ?x15411 l_0_9_9)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15409 (* ?x15408 l_0_9_8)))
 (let ((?x15405 (* 2.0 l_0_9_11)))
 (let ((?x15406 (* ?x15405 l_0_9_7)))
 (let ((?x15403 (* (* 2.0 l_0_9_10) l_0_9_14)))
 (let ((?x15400 (* (- 2.0) l_0_9_1)))
 (let ((?x15401 (* ?x15400 l_0_9_2)))
 (let ((?x15422 (+ (+ (+ (- (- (- (- ?x15401 ?x15403) ?x15406) ?x15409) ?x15412) ?x15415) ?x15418) ?x15421)))
 (let ((?x15434 (- (- (+ (+ ?x15422 ?x15424) ?x15427) (* (* 2.0 l_0_9_37) l_0_9_41)) (* (* 2.0 l_0_9_38) l_0_9_42))))
 (let ((?x15440 (- (- ?x15434 (* (* 2.0 l_0_9_39) l_0_9_43)) (* (* 2.0 l_0_9_40) l_0_9_44))))
 (= (- (- (- (- (+ (+ ?x15440 ?x15442) ?x15445) ?x15448) ?x15451) ?x15454) ?x15457) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15577 (* 2.0 l_0_9_51)))
 (let ((?x15578 (* ?x15577 l_0_9_54)))
 (let ((?x15574 (* 2.0 l_0_9_50)))
 (let ((?x15575 (* ?x15574 l_0_9_53)))
 (let ((?x15571 (* 2.0 l_0_9_49)))
 (let ((?x15572 (* ?x15571 l_0_9_52)))
 (let ((?x15427 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15424 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15421 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15418 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15565 (* ?x15414 l_0_9_19)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15412 (* ?x15411 l_0_9_9)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15409 (* ?x15408 l_0_9_8)))
 (let ((?x15405 (* 2.0 l_0_9_11)))
 (let ((?x15406 (* ?x15405 l_0_9_7)))
 (let ((?x15403 (* (* 2.0 l_0_9_10) l_0_9_14)))
 (let ((?x15564 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x15403) ?x15406) ?x15409) ?x15412)))
 (let ((?x15576 (+ (+ (- (- (- (- (+ ?x15564 ?x15565) ?x15418) ?x15421) ?x15424) ?x15427) ?x15572) ?x15575)))
 (= (+ ?x15576 ?x15578) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15615 (* l_0_9_55 l_0_9_55)))
 (let ((?x15613 (* l_0_9_54 l_0_9_54)))
 (let ((?x15611 (* l_0_9_53 l_0_9_53)))
 (let ((?x15609 (* l_0_9_52 l_0_9_52)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15607 (* ?x15414 l_0_9_22)))
 (let ((?x15400 (* (- 2.0) l_0_9_1)))
 (let ((?x15606 (* ?x15400 l_0_9_7)))
 (= (+ (+ (+ (+ (+ ?x15606 ?x15607) ?x15609) ?x15611) ?x15613) ?x15615) 0.0))))))))))
(assert
 (let ((?x15457 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15454 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15451 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15448 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15625 (* ?x15414 l_0_9_26)))
 (let ((?x15400 (* (- 2.0) l_0_9_1)))
 (let ((?x15624 (* ?x15400 l_0_9_11)))
 (= (+ (+ (+ (+ (+ ?x15624 ?x15625) ?x15448) ?x15451) ?x15454) ?x15457) 0.0))))))))))
(assert
 (let ((?x15643 (* l_0_9_3 l_0_9_3)))
 (let ((?x15641 (* l_0_9_2 l_0_9_2)))
 (let ((?x15639 (* l_0_9_18 l_0_9_18)))
 (let ((?x15638 (* l_0_9_17 l_0_9_17)))
 (let ((?x15640 (+ ?x15638 ?x15639)))
 (let ((?x15644 (- (- ?x15640 ?x15641) ?x15643)))
 (= ?x15644 0.0))))))))
(assert
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15662 (* ?x15661 l_0_9_5)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15659 (* ?x15658 l_0_9_4)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15656 (* ?x15655 l_0_9_20)))
 (let ((?x15653 (* 2.0 l_0_9_17)))
 (let ((?x15654 (* ?x15653 l_0_9_19)))
 (= (- (- (+ ?x15654 ?x15656) ?x15659) ?x15662) 0.0))))))))))
(assert
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15688 (* ?x15661 l_0_9_8)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15686 (* ?x15658 l_0_9_7)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15684 (* ?x15655 l_0_9_23)))
 (let ((?x15689 (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_22) ?x15684) ?x15686) ?x15688)))
 (= ?x15689 0.0)))))))))
(assert
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15715 (* ?x15655 l_0_9_27)))
 (let ((?x15653 (* 2.0 l_0_9_17)))
 (let ((?x15713 (* ?x15653 l_0_9_26)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15711 (* ?x15408 l_0_9_3)))
 (let ((?x15716 (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x15711) ?x15713) ?x15715)))
 (= ?x15716 0.0)))))))))
(assert
 (let ((?x15742 (* l_0_9_6 l_0_9_6)))
 (let ((?x15740 (* l_0_9_5 l_0_9_5)))
 (let ((?x15738 (* l_0_9_4 l_0_9_4)))
 (let ((?x15736 (* l_0_9_21 l_0_9_21)))
 (let ((?x15739 (- (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15736) ?x15738)))
 (= (- (- ?x15739 ?x15740) ?x15742) 0.0)))))))
(assert
 (let ((?x15771 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15768 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15765 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15762 (* ?x15761 l_0_9_24)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15759 (* ?x15758 l_0_9_23)))
 (let ((?x15756 (* 2.0 l_0_9_19)))
 (let ((?x15757 (* ?x15756 l_0_9_22)))
 (= (- (- (- (+ (+ ?x15757 ?x15759) ?x15762) ?x15765) ?x15768) ?x15771) 0.0)))))))))))
(assert
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15809 (* ?x15761 l_0_9_28)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15807 (* ?x15758 l_0_9_27)))
 (let ((?x15756 (* 2.0 l_0_9_19)))
 (let ((?x15805 (* ?x15756 l_0_9_26)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15803 (* ?x15411 l_0_9_6)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15801 (* ?x15408 l_0_9_5)))
 (let ((?x15808 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x15801) ?x15803) ?x15805) ?x15807)))
 (= (+ ?x15808 ?x15809) 0.0)))))))))))))
(assert
 (let ((?x15849 (* l_0_9_9 l_0_9_9)))
 (let ((?x15847 (* l_0_9_8 l_0_9_8)))
 (let ((?x15845 (* l_0_9_7 l_0_9_7)))
 (let ((?x15843 (* l_0_9_25 l_0_9_25)))
 (let ((?x15841 (* l_0_9_24 l_0_9_24)))
 (let ((?x15839 (* l_0_9_23 l_0_9_23)))
 (let ((?x15842 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x15839) ?x15841)))
 (let ((?x15844 (+ ?x15842 ?x15843)))
 (= (- (- (- ?x15844 ?x15845) ?x15847) ?x15849) 0.0))))))))))
(assert
 (let ((?x15427 (* (* 2.0 l_0_9_25) l_0_9_29)))
 (let ((?x15424 (* (* 2.0 l_0_9_24) l_0_9_28)))
 (let ((?x15421 (* (* 2.0 l_0_9_23) l_0_9_27)))
 (let ((?x15418 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15412 (* ?x15411 l_0_9_9)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15409 (* ?x15408 l_0_9_8)))
 (let ((?x15405 (* 2.0 l_0_9_11)))
 (let ((?x15406 (* ?x15405 l_0_9_7)))
 (let ((?x15871 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x15406) ?x15409) ?x15412) ?x15418)))
 (= (+ (+ (+ ?x15871 ?x15421) ?x15424) ?x15427) 0.0)))))))))))))
(assert
 (let ((?x15902 (* l_0_9_30 l_0_9_30)))
 (let ((?x15900 (* l_0_9_29 l_0_9_29)))
 (let ((?x15898 (* l_0_9_28 l_0_9_28)))
 (let ((?x15896 (* l_0_9_27 l_0_9_27)))
 (let ((?x15894 (* l_0_9_26 l_0_9_26)))
 (let ((?x15892 (* l_0_9_15 l_0_9_15)))
 (let ((?x15890 (* l_0_9_14 l_0_9_14)))
 (let ((?x15888 (* l_0_9_13 l_0_9_13)))
 (let ((?x15891 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15888) ?x15890)))
 (let ((?x15903 (+ (+ (+ (+ (+ (- ?x15891 ?x15892) ?x15894) ?x15896) ?x15898) ?x15900) ?x15902)))
 (= ?x15903 0.0))))))))))))
(assert
 (let ((?x15955 (* l_0_9_93 l_0_9_93)))
 (let ((?x15953 (* l_0_9_92 l_0_9_92)))
 (let ((?x15951 (* l_0_9_78 l_0_9_78)))
 (let ((?x15949 (* l_0_9_77 l_0_9_77)))
 (let ((?x15947 (* l_0_9_63 l_0_9_63)))
 (let ((?x15945 (* l_0_9_62 l_0_9_62)))
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x15943 (* ?x15224 l_0_9_47)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15415 (* ?x15414 l_0_9_17)))
 (let ((?x15937 (* l_0_9_138 l_0_9_138)))
 (let ((?x15935 (* l_0_9_137 l_0_9_137)))
 (let ((?x15933 (* l_0_9_123 l_0_9_123)))
 (let ((?x15931 (* l_0_9_122 l_0_9_122)))
 (let ((?x15929 (* l_0_9_108 l_0_9_108)))
 (let ((?x15930 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* l_0_9_107 l_0_9_107)) ?x15929)))
 (let ((?x15942 (- (+ (- (- (- (- ?x15930 ?x15931) ?x15933) ?x15935) ?x15937) ?x15415) (* (* 2.0 l_0_9_31) l_0_9_32))))
 (let ((?x15956 (- (- (- (- (- (- (- ?x15942 ?x15943) ?x15945) ?x15947) ?x15949) ?x15951) ?x15953) ?x15955)))
 (= ?x15956 0.0))))))))))))))))))))
(assert
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x16034 (* ?x15224 l_0_9_49)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15565 (* ?x15414 l_0_9_19)))
 (let ((?x15415 (* ?x15414 l_0_9_17)))
 (let ((?x16008 (* 2.0 l_0_9_1)))
 (let ((?x16010 (* ?x16008 l_0_9_4)))
 (let ((?x16014 (- (- (* ?x16008 l_0_9_2) ?x16010) (* (* 2.0 l_0_9_107) l_0_9_109))))
 (let ((?x16020 (- (- ?x16014 (* (* 2.0 l_0_9_108) l_0_9_110)) (* (* 2.0 l_0_9_122) l_0_9_124))))
 (let ((?x16026 (- (- ?x16020 (* (* 2.0 l_0_9_123) l_0_9_125)) (* (* 2.0 l_0_9_137) l_0_9_139))))
 (let ((?x16033 (- (+ (- (- ?x16026 (* (* 2.0 l_0_9_138) l_0_9_140)) ?x15415) ?x15565) (* (* 2.0 l_0_9_31) l_0_9_34))))
 (let ((?x16041 (- (- (- ?x16033 ?x16034) (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 2.0 l_0_9_63) l_0_9_65))))
 (let ((?x16047 (- (- ?x16041 (* (* 2.0 l_0_9_77) l_0_9_79)) (* (* 2.0 l_0_9_78) l_0_9_80))))
 (let ((?x16053 (- (- ?x16047 (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x16053 0.0))))))))))))))))
(assert
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x15225 (* ?x15224 l_0_9_52)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15607 (* ?x15414 l_0_9_22)))
 (let ((?x15400 (* (- 2.0) l_0_9_1)))
 (let ((?x15606 (* ?x15400 l_0_9_7)))
 (let ((?x16151 (- (- ?x15606 (* (* 2.0 l_0_9_107) l_0_9_112)) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x16155 (- (- ?x16151 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x16159 (- (- ?x16155 (* (* 2.0 l_0_9_137) l_0_9_142)) (* (* 2.0 l_0_9_138) l_0_9_143))))
 (let ((?x16165 (- (- (- (+ ?x16159 ?x15607) (* (* 2.0 l_0_9_31) l_0_9_37)) ?x15225) (* (* 2.0 l_0_9_62) l_0_9_67))))
 (let ((?x16169 (- (- ?x16165 (* (* 2.0 l_0_9_63) l_0_9_68)) (* (* 2.0 l_0_9_77) l_0_9_82))))
 (let ((?x16173 (- (- ?x16169 (* (* 2.0 l_0_9_78) l_0_9_83)) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x16173 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0))))))))))))))
(assert
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x16284 (* ?x15224 l_0_9_56)))
 (let ((?x15943 (* ?x15224 l_0_9_47)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15625 (* ?x15414 l_0_9_26)))
 (let ((?x15400 (* (- 2.0) l_0_9_1)))
 (let ((?x15624 (* ?x15400 l_0_9_11)))
 (let ((?x16267 (- (- ?x15624 (* (* 2.0 l_0_9_101) l_0_9_92)) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x16271 (- (- ?x16267 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x16275 (- (- ?x16271 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x16279 (- (- ?x16275 (* (* 2.0 l_0_9_137) l_0_9_146)) (* (* 2.0 l_0_9_138) l_0_9_147))))
 (let ((?x16285 (- (+ (- (+ ?x16279 ?x15625) (* (* 2.0 l_0_9_31) l_0_9_41)) ?x15943) ?x16284)))
 (let ((?x16289 (- (- ?x16285 (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (let ((?x16293 (- (- ?x16289 (* (* 2.0 l_0_9_77) l_0_9_86)) (* (* 2.0 l_0_9_78) l_0_9_87))))
 (= ?x16293 0.0))))))))))))))))
(assert
 (let ((?x16391 (* l_0_9_48 l_0_9_48)))
 (let ((?x16389 (* l_0_9_47 l_0_9_47)))
 (let ((?x16387 (* l_0_9_33 l_0_9_33)))
 (let ((?x16385 (* l_0_9_32 l_0_9_32)))
 (let ((?x15643 (* l_0_9_3 l_0_9_3)))
 (let ((?x15641 (* l_0_9_2 l_0_9_2)))
 (let ((?x15639 (* l_0_9_18 l_0_9_18)))
 (let ((?x15638 (* l_0_9_17 l_0_9_17)))
 (let ((?x15640 (+ ?x15638 ?x15639)))
 (let ((?x15644 (- (- ?x15640 ?x15641) ?x15643)))
 (= (- (- (- (- ?x15644 ?x16385) ?x16387) ?x16389) ?x16391) 0.0))))))))))))
(assert
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x16422 (* ?x15444 l_0_9_50)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x16420 (* ?x15441 l_0_9_49)))
 (let ((?x15643 (* l_0_9_3 l_0_9_3)))
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15662 (* ?x15661 l_0_9_5)))
 (let ((?x15641 (* l_0_9_2 l_0_9_2)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15659 (* ?x15658 l_0_9_4)))
 (let ((?x15639 (* l_0_9_18 l_0_9_18)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15656 (* ?x15655 l_0_9_20)))
 (let ((?x16408 (+ (- (* (* 2.0 l_0_9_17) l_0_9_19) (* l_0_9_17 l_0_9_17)) ?x15656)))
 (let ((?x16416 (- (+ (- (+ (- (- ?x16408 ?x15639) ?x15659) ?x15641) ?x15662) ?x15643) (* (* 2.0 l_0_9_32) l_0_9_34))))
 (= (- (- (- ?x16416 (* (* 2.0 l_0_9_33) l_0_9_35)) ?x16420) ?x16422) 0.0)))))))))))))))))
(assert
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x15445 (* ?x15444 l_0_9_53)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x15442 (* ?x15441 l_0_9_52)))
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15688 (* ?x15661 l_0_9_8)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15686 (* ?x15658 l_0_9_7)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15684 (* ?x15655 l_0_9_23)))
 (let ((?x15689 (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_22) ?x15684) ?x15686) ?x15688)))
 (let ((?x16469 (- (- ?x15689 (* (* 2.0 l_0_9_32) l_0_9_37)) (* (* 2.0 l_0_9_33) l_0_9_38))))
 (= (- (- ?x16469 ?x15442) ?x15445) 0.0))))))))))))))
(assert
 (let ((?x16391 (* l_0_9_48 l_0_9_48)))
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x16502 (* ?x15444 l_0_9_57)))
 (let ((?x16389 (* l_0_9_47 l_0_9_47)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x16499 (* ?x15441 l_0_9_56)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15715 (* ?x15655 l_0_9_27)))
 (let ((?x15653 (* 2.0 l_0_9_17)))
 (let ((?x15713 (* ?x15653 l_0_9_26)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15711 (* ?x15408 l_0_9_3)))
 (let ((?x15716 (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x15711) ?x15713) ?x15715)))
 (let ((?x16498 (- (- ?x15716 (* (* 2.0 l_0_9_32) l_0_9_41)) (* (* 2.0 l_0_9_33) l_0_9_42))))
 (= (+ (- (+ (- ?x16498 ?x16499) ?x16389) ?x16502) ?x16391) 0.0))))))))))))))))
(assert
 (let ((?x15742 (* l_0_9_6 l_0_9_6)))
 (let ((?x16556 (* l_0_9_51 l_0_9_51)))
 (let ((?x16554 (* l_0_9_50 l_0_9_50)))
 (let ((?x15740 (* l_0_9_5 l_0_9_5)))
 (let ((?x16551 (* l_0_9_49 l_0_9_49)))
 (let ((?x15738 (* l_0_9_4 l_0_9_4)))
 (let ((?x16548 (* l_0_9_36 l_0_9_36)))
 (let ((?x16546 (* l_0_9_35 l_0_9_35)))
 (let ((?x16544 (* l_0_9_34 l_0_9_34)))
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15662 (* ?x15661 l_0_9_5)))
 (let ((?x15736 (* l_0_9_21 l_0_9_21)))
 (let ((?x15729 (* l_0_9_20 l_0_9_20)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15659 (* ?x15658 l_0_9_4)))
 (let ((?x15727 (* l_0_9_19 l_0_9_19)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15656 (* ?x15655 l_0_9_20)))
 (let ((?x16541 (+ (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x15656) ?x15727) ?x15659) ?x15729)))
 (let ((?x16552 (- (- (- (- (- (+ (+ ?x16541 ?x15736) ?x15662) ?x16544) ?x16546) ?x16548) ?x15738) ?x16551)))
 (= (- (- (- (- ?x16552 ?x15740) ?x16554) ?x16556) ?x15742) 0.0))))))))))))))))))))))
(assert
 (let ((?x15771 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15577 (* 2.0 l_0_9_51)))
 (let ((?x15578 (* ?x15577 l_0_9_54)))
 (let ((?x15574 (* 2.0 l_0_9_50)))
 (let ((?x15575 (* ?x15574 l_0_9_53)))
 (let ((?x15768 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15571 (* 2.0 l_0_9_49)))
 (let ((?x15572 (* ?x15571 l_0_9_52)))
 (let ((?x15765 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15661 (* 2.0 l_0_9_3)))
 (let ((?x15688 (* ?x15661 l_0_9_8)))
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15762 (* ?x15761 l_0_9_24)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15759 (* ?x15758 l_0_9_23)))
 (let ((?x15658 (* 2.0 l_0_9_2)))
 (let ((?x15686 (* ?x15658 l_0_9_7)))
 (let ((?x15756 (* 2.0 l_0_9_19)))
 (let ((?x15757 (* ?x15756 l_0_9_22)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15684 (* ?x15655 l_0_9_23)))
 (let ((?x16597 (+ (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x15684) ?x15757) ?x15686) ?x15759)))
 (let ((?x16605 (- (- (+ (+ ?x16597 ?x15762) ?x15688) (* (* 2.0 l_0_9_34) l_0_9_37)) (* (* 2.0 l_0_9_35) l_0_9_38))))
 (let ((?x16611 (- (- (- (- ?x16605 (* (* 2.0 l_0_9_36) l_0_9_39)) ?x15765) ?x15572) ?x15768)))
 (= (- (- (- ?x16611 ?x15575) ?x15578) ?x15771) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15577 (* 2.0 l_0_9_51)))
 (let ((?x16684 (* ?x15577 l_0_9_58)))
 (let ((?x15574 (* 2.0 l_0_9_50)))
 (let ((?x16682 (* ?x15574 l_0_9_57)))
 (let ((?x15571 (* 2.0 l_0_9_49)))
 (let ((?x16680 (* ?x15571 l_0_9_56)))
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x16422 (* ?x15444 l_0_9_50)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x16420 (* ?x15441 l_0_9_49)))
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15809 (* ?x15761 l_0_9_28)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15807 (* ?x15758 l_0_9_27)))
 (let ((?x15756 (* 2.0 l_0_9_19)))
 (let ((?x15805 (* ?x15756 l_0_9_26)))
 (let ((?x15655 (* 2.0 l_0_9_18)))
 (let ((?x15715 (* ?x15655 l_0_9_27)))
 (let ((?x15653 (* 2.0 l_0_9_17)))
 (let ((?x15713 (* ?x15653 l_0_9_26)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15803 (* ?x15411 l_0_9_6)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15801 (* ?x15408 l_0_9_5)))
 (let ((?x15711 (* ?x15408 l_0_9_3)))
 (let ((?x15405 (* 2.0 l_0_9_11)))
 (let ((?x16662 (* ?x15405 l_0_9_4)))
 (let ((?x16668 (- (- (- (- (+ (- (* ?x15405 l_0_9_2) ?x16662) ?x15711) ?x15801) ?x15803) ?x15713) ?x15715)))
 (let ((?x16673 (- (+ (+ (+ ?x16668 ?x15805) ?x15807) ?x15809) (* (* 2.0 l_0_9_34) l_0_9_41))))
 (let ((?x16677 (- (- ?x16673 (* (* 2.0 l_0_9_35) l_0_9_42)) (* (* 2.0 l_0_9_36) l_0_9_43))))
 (= (- (- (- (+ (+ ?x16677 ?x16420) ?x16422) ?x16680) ?x16682) ?x16684) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15849 (* l_0_9_9 l_0_9_9)))
 (let ((?x15847 (* l_0_9_8 l_0_9_8)))
 (let ((?x15845 (* l_0_9_7 l_0_9_7)))
 (let ((?x15615 (* l_0_9_55 l_0_9_55)))
 (let ((?x15613 (* l_0_9_54 l_0_9_54)))
 (let ((?x15611 (* l_0_9_53 l_0_9_53)))
 (let ((?x15609 (* l_0_9_52 l_0_9_52)))
 (let ((?x16749 (* l_0_9_40 l_0_9_40)))
 (let ((?x16747 (* l_0_9_39 l_0_9_39)))
 (let ((?x16745 (* l_0_9_38 l_0_9_38)))
 (let ((?x16743 (* l_0_9_37 l_0_9_37)))
 (let ((?x15843 (* l_0_9_25 l_0_9_25)))
 (let ((?x15841 (* l_0_9_24 l_0_9_24)))
 (let ((?x15839 (* l_0_9_23 l_0_9_23)))
 (let ((?x15842 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x15839) ?x15841)))
 (let ((?x15844 (+ ?x15842 ?x15843)))
 (let ((?x16753 (- (- (- (- (- (- (- ?x15844 ?x16743) ?x16745) ?x16747) ?x16749) ?x15609) ?x15611) ?x15613)))
 (= (- (- (- (- ?x16753 ?x15615) ?x15845) ?x15847) ?x15849) 0.0)))))))))))))))))))
(assert
 (let ((?x16815 (* l_0_9_60 l_0_9_60)))
 (let ((?x16813 (* l_0_9_59 l_0_9_59)))
 (let ((?x16811 (* l_0_9_58 l_0_9_58)))
 (let ((?x16809 (* l_0_9_57 l_0_9_57)))
 (let ((?x16807 (* l_0_9_56 l_0_9_56)))
 (let ((?x15444 (* 2.0 l_0_9_48)))
 (let ((?x16502 (* ?x15444 l_0_9_57)))
 (let ((?x15441 (* 2.0 l_0_9_47)))
 (let ((?x16499 (* ?x15441 l_0_9_56)))
 (let ((?x16803 (* l_0_9_45 l_0_9_45)))
 (let ((?x16801 (* l_0_9_44 l_0_9_44)))
 (let ((?x16799 (* l_0_9_43 l_0_9_43)))
 (let ((?x16797 (* l_0_9_42 l_0_9_42)))
 (let ((?x16795 (* l_0_9_41 l_0_9_41)))
 (let ((?x15902 (* l_0_9_30 l_0_9_30)))
 (let ((?x15900 (* l_0_9_29 l_0_9_29)))
 (let ((?x15898 (* l_0_9_28 l_0_9_28)))
 (let ((?x15896 (* l_0_9_27 l_0_9_27)))
 (let ((?x15894 (* l_0_9_26 l_0_9_26)))
 (let ((?x15892 (* l_0_9_15 l_0_9_15)))
 (let ((?x15890 (* l_0_9_14 l_0_9_14)))
 (let ((?x15888 (* l_0_9_13 l_0_9_13)))
 (let ((?x15891 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15888) ?x15890)))
 (let ((?x15903 (+ (+ (+ (+ (+ (- ?x15891 ?x15892) ?x15894) ?x15896) ?x15898) ?x15900) ?x15902)))
 (let ((?x16806 (+ (+ (- (- (- (- (- ?x15903 ?x16795) ?x16797) ?x16799) ?x16801) ?x16803) ?x16499) ?x16502)))
 (= (- (- (- (- (- ?x16806 ?x16807) ?x16809) ?x16811) ?x16813) ?x16815) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15060 (* l_0_9_16 l_0_9_16)))
 (let ((?x16855 (- (- (* l_0_9_1 l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_109)) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x16860 (- (- (- ?x16855 (* (* 2.0 l_0_9_136) l_0_9_139)) ?x15060) (* (* 2.0 l_0_9_61) l_0_9_64))))
 (let ((?x16864 (- (- ?x16860 (* (* 2.0 l_0_9_76) l_0_9_79)) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= ?x16864 0.0))))))
(assert
 (let ((?x16942 (* l_0_9_96 l_0_9_96)))
 (let ((?x16940 (* l_0_9_95 l_0_9_95)))
 (let ((?x16938 (* l_0_9_94 l_0_9_94)))
 (let ((?x16936 (* l_0_9_81 l_0_9_81)))
 (let ((?x16934 (* l_0_9_80 l_0_9_80)))
 (let ((?x16932 (* l_0_9_79 l_0_9_79)))
 (let ((?x16930 (* l_0_9_66 l_0_9_66)))
 (let ((?x16928 (* l_0_9_65 l_0_9_65)))
 (let ((?x16926 (* l_0_9_64 l_0_9_64)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15565 (* ?x15414 l_0_9_19)))
 (let ((?x16923 (* l_0_9_141 l_0_9_141)))
 (let ((?x16921 (* l_0_9_140 l_0_9_140)))
 (let ((?x16919 (* l_0_9_139 l_0_9_139)))
 (let ((?x16917 (* l_0_9_126 l_0_9_126)))
 (let ((?x16915 (* l_0_9_125 l_0_9_125)))
 (let ((?x16913 (* l_0_9_124 l_0_9_124)))
 (let ((?x16911 (* l_0_9_111 l_0_9_111)))
 (let ((?x16909 (* l_0_9_110 l_0_9_110)))
 (let ((?x16910 (- (- (* (* 2.0 l_0_9_1) l_0_9_4) (* l_0_9_109 l_0_9_109)) ?x16909)))
 (let ((?x16924 (- (- (- (- (- (- (- ?x16910 ?x16911) ?x16913) ?x16915) ?x16917) ?x16919) ?x16921) ?x16923)))
 (let ((?x16937 (- (- (- (- (- (- (- ?x16924 ?x15565) ?x16926) ?x16928) ?x16930) ?x16932) ?x16934) ?x16936)))
 (= (- (- (- ?x16937 ?x16938) ?x16940) ?x16942) 0.0))))))))))))))))))))))))
(assert
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15607 (* ?x15414 l_0_9_22)))
 (let ((?x17006 (- (* (* 2.0 l_0_9_1) l_0_9_7) (* (* 2.0 l_0_9_109) l_0_9_112))))
 (let ((?x17012 (- (- ?x17006 (* (* 2.0 l_0_9_110) l_0_9_113)) (* (* 2.0 l_0_9_111) l_0_9_114))))
 (let ((?x17018 (- (- ?x17012 (* (* 2.0 l_0_9_124) l_0_9_127)) (* (* 2.0 l_0_9_125) l_0_9_128))))
 (let ((?x17024 (- (- ?x17018 (* (* 2.0 l_0_9_126) l_0_9_129)) (* (* 2.0 l_0_9_139) l_0_9_142))))
 (let ((?x17030 (- (- ?x17024 (* (* 2.0 l_0_9_140) l_0_9_143)) (* (* 2.0 l_0_9_141) l_0_9_144))))
 (let ((?x17037 (- (- (- ?x17030 ?x15607) (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x17043 (- (- ?x17037 (* (* 2.0 l_0_9_66) l_0_9_69)) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x17049 (- (- ?x17043 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x17055 (- (- ?x17049 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x17055 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))
(assert
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x16034 (* ?x15224 l_0_9_49)))
 (let ((?x15414 (* 2.0 l_0_9_16)))
 (let ((?x15625 (* ?x15414 l_0_9_26)))
 (let ((?x17174 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_101) l_0_9_94))))
 (let ((?x17178 (- (- ?x17174 (* (* 2.0 l_0_9_102) l_0_9_95)) (* (* 2.0 l_0_9_103) l_0_9_96))))
 (let ((?x17182 (- (- ?x17178 (* (* 2.0 l_0_9_109) l_0_9_116)) (* (* 2.0 l_0_9_110) l_0_9_117))))
 (let ((?x17186 (- (- ?x17182 (* (* 2.0 l_0_9_111) l_0_9_118)) (* (* 2.0 l_0_9_124) l_0_9_131))))
 (let ((?x17190 (- (- ?x17186 (* (* 2.0 l_0_9_125) l_0_9_132)) (* (* 2.0 l_0_9_126) l_0_9_133))))
 (let ((?x17194 (- (- ?x17190 (* (* 2.0 l_0_9_139) l_0_9_146)) (* (* 2.0 l_0_9_140) l_0_9_147))))
 (let ((?x17200 (- (+ (- (- ?x17194 (* (* 2.0 l_0_9_141) l_0_9_148)) ?x15625) ?x16034) (* (* 2.0 l_0_9_64) l_0_9_71))))
 (let ((?x17204 (- (- ?x17200 (* (* 2.0 l_0_9_65) l_0_9_72)) (* (* 2.0 l_0_9_66) l_0_9_73))))
 (let ((?x17208 (- (- ?x17204 (* (* 2.0 l_0_9_79) l_0_9_86)) (* (* 2.0 l_0_9_80) l_0_9_87))))
 (= (- ?x17208 (* (* 2.0 l_0_9_81) l_0_9_88)) 0.0)))))))))))))))
(assert
 (let ((?x15742 (* l_0_9_6 l_0_9_6)))
 (let ((?x15740 (* l_0_9_5 l_0_9_5)))
 (let ((?x15738 (* l_0_9_4 l_0_9_4)))
 (let ((?x15736 (* l_0_9_21 l_0_9_21)))
 (let ((?x17329 (+ (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15736) ?x15738)))
 (= (+ (+ ?x17329 ?x15740) ?x15742) 0.0)))))))
(assert
 (let ((?x15771 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15768 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15765 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15762 (* ?x15761 l_0_9_24)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15759 (* ?x15758 l_0_9_23)))
 (let ((?x17342 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x15759) ?x15762) ?x15765) ?x15768)))
 (= (+ ?x17342 ?x15771) 0.0))))))))))
(assert
 (let ((?x16556 (* l_0_9_51 l_0_9_51)))
 (let ((?x16554 (* l_0_9_50 l_0_9_50)))
 (let ((?x16551 (* l_0_9_49 l_0_9_49)))
 (let ((?x15761 (* 2.0 l_0_9_21)))
 (let ((?x15809 (* ?x15761 l_0_9_28)))
 (let ((?x15758 (* 2.0 l_0_9_20)))
 (let ((?x15807 (* ?x15758 l_0_9_27)))
 (let ((?x15756 (* 2.0 l_0_9_19)))
 (let ((?x15805 (* ?x15756 l_0_9_26)))
 (let ((?x15411 (* 2.0 l_0_9_13)))
 (let ((?x15803 (* ?x15411 l_0_9_6)))
 (let ((?x15408 (* 2.0 l_0_9_12)))
 (let ((?x15801 (* ?x15408 l_0_9_5)))
 (let ((?x15405 (* 2.0 l_0_9_11)))
 (let ((?x16662 (* ?x15405 l_0_9_4)))
 (let ((?x17357 (+ (+ (- (- (- (+ (+ ?x16662 ?x15801) ?x15803) ?x15805) ?x15807) ?x15809) ?x16551) ?x16554)))
 (= (+ ?x17357 ?x16556) 0.0))))))))))))))))))
(assert
 (let ((?x15849 (* l_0_9_9 l_0_9_9)))
 (let ((?x15847 (* l_0_9_8 l_0_9_8)))
 (let ((?x15845 (* l_0_9_7 l_0_9_7)))
 (let ((?x15843 (* l_0_9_25 l_0_9_25)))
 (let ((?x15841 (* l_0_9_24 l_0_9_24)))
 (let ((?x15839 (* l_0_9_23 l_0_9_23)))
 (let ((?x17373 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x15839) ?x15841)))
 (= (+ (+ (+ (- ?x17373 ?x15843) ?x15845) ?x15847) ?x15849) 0.0)))))))))
(assert
 (let ((?x15577 (* 2.0 l_0_9_51)))
 (let ((?x16684 (* ?x15577 l_0_9_58)))
 (let ((?x15574 (* 2.0 l_0_9_50)))
 (let ((?x16682 (* ?x15574 l_0_9_57)))
 (let ((?x15571 (* 2.0 l_0_9_49)))
 (let ((?x16680 (* ?x15571 l_0_9_56)))
 (let ((?x15902 (* l_0_9_30 l_0_9_30)))
 (let ((?x15900 (* l_0_9_29 l_0_9_29)))
 (let ((?x15898 (* l_0_9_28 l_0_9_28)))
 (let ((?x15896 (* l_0_9_27 l_0_9_27)))
 (let ((?x15894 (* l_0_9_26 l_0_9_26)))
 (let ((?x15892 (* l_0_9_15 l_0_9_15)))
 (let ((?x15890 (* l_0_9_14 l_0_9_14)))
 (let ((?x15888 (* l_0_9_13 l_0_9_13)))
 (let ((?x17389 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15888) ?x15890)))
 (let ((?x17396 (+ (- (- (- (- (- (+ ?x17389 ?x15892) ?x15894) ?x15896) ?x15898) ?x15900) ?x15902) ?x16680)))
 (= (+ (+ ?x17396 ?x16682) ?x16684) 0.0))))))))))))))))))
(assert
 (let ((?x17471 (* l_0_9_90 l_0_9_90)))
 (let ((?x17469 (* l_0_9_89 l_0_9_89)))
 (let ((?x17467 (* l_0_9_88 l_0_9_88)))
 (let ((?x17465 (* l_0_9_87 l_0_9_87)))
 (let ((?x17463 (* l_0_9_86 l_0_9_86)))
 (let ((?x17461 (* l_0_9_75 l_0_9_75)))
 (let ((?x17459 (* l_0_9_74 l_0_9_74)))
 (let ((?x17457 (* l_0_9_73 l_0_9_73)))
 (let ((?x17455 (* l_0_9_72 l_0_9_72)))
 (let ((?x17453 (* l_0_9_71 l_0_9_71)))
 (let ((?x15224 (* 2.0 l_0_9_46)))
 (let ((?x16284 (* ?x15224 l_0_9_56)))
 (let ((?x17450 (* l_0_9_150 l_0_9_150)))
 (let ((?x17448 (* l_0_9_149 l_0_9_149)))
 (let ((?x17446 (* l_0_9_148 l_0_9_148)))
 (let ((?x17444 (* l_0_9_147 l_0_9_147)))
 (let ((?x17442 (* l_0_9_146 l_0_9_146)))
 (let ((?x17440 (* l_0_9_135 l_0_9_135)))
 (let ((?x17438 (* l_0_9_134 l_0_9_134)))
 (let ((?x17436 (* l_0_9_133 l_0_9_133)))
 (let ((?x17434 (* l_0_9_132 l_0_9_132)))
 (let ((?x17432 (* l_0_9_131 l_0_9_131)))
 (let ((?x17430 (* l_0_9_120 l_0_9_120)))
 (let ((?x17428 (* l_0_9_119 l_0_9_119)))
 (let ((?x17426 (* l_0_9_118 l_0_9_118)))
 (let ((?x17424 (* l_0_9_117 l_0_9_117)))
 (let ((?x17422 (* l_0_9_116 l_0_9_116)))
 (let ((?x17420 (* l_0_9_105 l_0_9_105)))
 (let ((?x17418 (* l_0_9_104 l_0_9_104)))
 (let ((?x17416 (* l_0_9_103 l_0_9_103)))
 (let ((?x17417 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x17416)))
 (let ((?x17431 (- (- (- (- (- (- (- ?x17417 ?x17418) ?x17420) ?x17422) ?x17424) ?x17426) ?x17428) ?x17430)))
 (let ((?x17445 (- (- (- (- (- (- (- ?x17431 ?x17432) ?x17434) ?x17436) ?x17438) ?x17440) ?x17442) ?x17444)))
 (let ((?x17458 (- (- (- (+ (- (- (- ?x17445 ?x17446) ?x17448) ?x17450) ?x16284) ?x17453) ?x17455) ?x17457)))
 (let ((?x17472 (- (- (- (- (- (- (- ?x17458 ?x17459) ?x17461) ?x17463) ?x17465) ?x17467) ?x17469) ?x17471)))
 (= ?x17472 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16815 (* l_0_9_60 l_0_9_60)))
 (let ((?x16813 (* l_0_9_59 l_0_9_59)))
 (let ((?x16811 (* l_0_9_58 l_0_9_58)))
 (let ((?x17568 (+ (+ (+ (* l_0_9_56 l_0_9_56) (* l_0_9_57 l_0_9_57)) ?x16811) ?x16813)))
 (= (+ ?x17568 ?x16815) 0.0))))))
(assert
 (let ((?x17583 (* l_0_9_91 l_0_9_91)))
 (let ((?x17581 (* l_0_9_76 l_0_9_76)))
 (let ((?x17579 (* l_0_9_61 l_0_9_61)))
 (let ((?x17577 (* l_0_9_136 l_0_9_136)))
 (let ((?x17578 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_121 l_0_9_121)) ?x17577)))
 (= (- (- (- ?x17578 ?x17579) ?x17581) ?x17583) 0.0)))))))
(assert
 (let ((?x17609 (- (* (* (- 2.0) l_0_9_106) l_0_9_112) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x17613 (- (- ?x17609 (* (* 2.0 l_0_9_136) l_0_9_142)) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x17617 (- (- ?x17613 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= ?x17617 0.0)))))
(assert
 (let ((?x17700 (* l_0_9_99 l_0_9_99)))
 (let ((?x17698 (* l_0_9_98 l_0_9_98)))
 (let ((?x17696 (* l_0_9_97 l_0_9_97)))
 (let ((?x17694 (* l_0_9_85 l_0_9_85)))
 (let ((?x17692 (* l_0_9_84 l_0_9_84)))
 (let ((?x17690 (* l_0_9_83 l_0_9_83)))
 (let ((?x17688 (* l_0_9_82 l_0_9_82)))
 (let ((?x17686 (* l_0_9_70 l_0_9_70)))
 (let ((?x17684 (* l_0_9_69 l_0_9_69)))
 (let ((?x17682 (* l_0_9_68 l_0_9_68)))
 (let ((?x17680 (* l_0_9_67 l_0_9_67)))
 (let ((?x17678 (* l_0_9_145 l_0_9_145)))
 (let ((?x17676 (* l_0_9_144 l_0_9_144)))
 (let ((?x17674 (* l_0_9_143 l_0_9_143)))
 (let ((?x17672 (* l_0_9_142 l_0_9_142)))
 (let ((?x17670 (* l_0_9_130 l_0_9_130)))
 (let ((?x17668 (* l_0_9_129 l_0_9_129)))
 (let ((?x17666 (* l_0_9_128 l_0_9_128)))
 (let ((?x17664 (* l_0_9_127 l_0_9_127)))
 (let ((?x17662 (* l_0_9_115 l_0_9_115)))
 (let ((?x17660 (* l_0_9_114 l_0_9_114)))
 (let ((?x17658 (* l_0_9_113 l_0_9_113)))
 (let ((?x17659 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x17658)))
 (let ((?x17673 (- (- (- (- (- (- (- ?x17659 ?x17660) ?x17662) ?x17664) ?x17666) ?x17668) ?x17670) ?x17672)))
 (let ((?x17687 (- (- (- (- (- (- (- ?x17673 ?x17674) ?x17676) ?x17678) ?x17680) ?x17682) ?x17684) ?x17686)))
 (let ((?x17701 (- (- (- (- (- (- (- ?x17687 ?x17688) ?x17690) ?x17692) ?x17694) ?x17696) ?x17698) ?x17700)))
 (= ?x17701 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_138 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (= (- _a_2_ (* (* 2.0 l_0_10_197) l_0_10_218)) 0.0))
(assert
 (let ((?x17857 (* l_0_10_29 l_0_10_29)))
 (let ((?x17844 (- (+ (- _a_3_ (* l_0_10_1 l_0_10_1)) (* l_0_10_141 l_0_10_141)) (* (* 2.0 l_0_10_207) l_0_10_218))))
 (let ((?x17850 (- (- ?x17844 (* (* 2.0 l_0_10_208) l_0_10_219)) (* (* 2.0 l_0_10_209) l_0_10_220))))
 (let ((?x17856 (- (- ?x17850 (* (* 2.0 l_0_10_210) l_0_10_221)) (* (* 2.0 l_0_10_211) l_0_10_222))))
 (= (+ ?x17856 ?x17857) 0.0))))))
(assert
 (let ((?x17915 (* l_0_10_85 l_0_10_85)))
 (let ((?x17913 (* l_0_10_57 l_0_10_57)))
 (let ((?x17900 (- (- _a_4_ (* (* 2.0 l_0_10_212) l_0_10_218)) (* (* 2.0 l_0_10_213) l_0_10_219))))
 (let ((?x17906 (- (- ?x17900 (* (* 2.0 l_0_10_214) l_0_10_220)) (* (* 2.0 l_0_10_215) l_0_10_221))))
 (let ((?x17912 (- (- ?x17906 (* (* 2.0 l_0_10_216) l_0_10_222)) (* (* 2.0 l_0_10_217) l_0_10_223))))
 (= (+ (- ?x17912 ?x17913) ?x17915) 0.0)))))))
(assert
 (let ((?x17915 (* l_0_10_85 l_0_10_85)))
 (let ((?x17913 (* l_0_10_57 l_0_10_57)))
 (let ((?x17962 (* l_0_10_169 l_0_10_169)))
 (let ((?x17963 (+ (- (* (- l_0_10_113) l_0_10_113) (* l_0_10_141 l_0_10_141)) ?x17962)))
 (let ((?x17968 (+ (+ (- (- ?x17963 (* (* 2.0 l_0_10_197) l_0_10_200)) ?x17913) ?x17915) 1.0)))
 (= ?x17968 0.0)))))))
(assert
 (let ((?x17857 (* l_0_10_29 l_0_10_29)))
 (let ((?x17993 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_169) l_0_10_169)) (* (* 2.0 l_0_10_197) l_0_10_198))))
 (= (- (- ?x17993 ?x17857) 1.0) 0.0))))
(assert
 (let ((?x17915 (* l_0_10_85 l_0_10_85)))
 (let ((?x17913 (* l_0_10_57 l_0_10_57)))
 (= (- (- (+ (* (* (- 2.0) l_0_10_197) l_0_10_203) ?x17913) ?x17915) 1.0) 0.0))))
(assert
 (let ((?x18079 (* 2.0 l_0_10_43)))
 (let ((?x18080 (* ?x18079 l_0_10_54)))
 (let ((?x18076 (* 2.0 l_0_10_42)))
 (let ((?x18077 (* ?x18076 l_0_10_53)))
 (let ((?x18073 (* 2.0 l_0_10_41)))
 (let ((?x18074 (* ?x18073 l_0_10_52)))
 (let ((?x18070 (* 2.0 l_0_10_40)))
 (let ((?x18071 (* ?x18070 l_0_10_51)))
 (let ((?x18067 (* 2.0 l_0_10_39)))
 (let ((?x18068 (* ?x18067 l_0_10_50)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18065 (* ?x18064 l_0_10_30)))
 (let ((?x18045 (* 2.0 l_0_10_15)))
 (let ((?x18046 (* ?x18045 l_0_10_26)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18043 (* ?x18042 l_0_10_142)))
 (let ((?x18039 (* 2.0 l_0_10_14)))
 (let ((?x18040 (* ?x18039 l_0_10_25)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x18037 (* ?x18036 l_0_10_24)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18034 (* ?x18033 l_0_10_23)))
 (let ((?x18032 (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_11) l_0_10_22))))
 (let ((?x18051 (- (+ (+ (+ (+ (+ ?x18032 ?x18034) ?x18037) ?x18040) ?x18043) ?x18046) (* (* 4.0 l_0_10_179) l_0_10_190))))
 (let ((?x18057 (- (- ?x18051 (* (* 4.0 l_0_10_180) l_0_10_191)) (* (* 4.0 l_0_10_181) l_0_10_192))))
 (let ((?x18063 (- (- ?x18057 (* (* 4.0 l_0_10_182) l_0_10_193)) (* (* 4.0 l_0_10_183) l_0_10_194))))
 (= (- (- (- (- (- (+ ?x18063 ?x18065) ?x18068) ?x18071) ?x18074) ?x18077) ?x18080) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x18250 (* ?x18249 l_0_10_82)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x18247 (* ?x18246 l_0_10_81)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x18244 (* ?x18243 l_0_10_80)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x18241 (* ?x18240 l_0_10_79)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x18238 (* ?x18237 l_0_10_78)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18235 (* ?x18064 l_0_10_32)))
 (let ((?x18217 (* 2.0 l_0_10_155)))
 (let ((?x18218 (* ?x18217 l_0_10_166)))
 (let ((?x18214 (* 2.0 l_0_10_154)))
 (let ((?x18215 (* ?x18214 l_0_10_165)))
 (let ((?x18211 (* 2.0 l_0_10_153)))
 (let ((?x18212 (* ?x18211 l_0_10_164)))
 (let ((?x18208 (* 2.0 l_0_10_152)))
 (let ((?x18209 (* ?x18208 l_0_10_163)))
 (let ((?x18205 (* 2.0 l_0_10_151)))
 (let ((?x18206 (* ?x18205 l_0_10_162)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18203 (* ?x18042 l_0_10_144)))
 (let ((?x18186 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x18183 (* ?x18182 l_0_10_98)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x18180 (* ?x18179 l_0_10_97)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x18177 (* ?x18176 l_0_10_96)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x18174 (* ?x18173 l_0_10_95)))
 (let ((?x18184 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x18174) ?x18177) ?x18180) ?x18183)))
 (let ((?x18193 (- (- (+ ?x18184 ?x18186) (* (* 2.0 l_0_10_123) l_0_10_134)) (* (* 2.0 l_0_10_124) l_0_10_135))))
 (let ((?x18199 (- (- ?x18193 (* (* 2.0 l_0_10_125) l_0_10_136)) (* (* 2.0 l_0_10_126) l_0_10_137))))
 (let ((?x18210 (- (- (+ (- ?x18199 (* (* 2.0 l_0_10_127) l_0_10_138)) ?x18203) ?x18206) ?x18209)))
 (let ((?x18222 (+ (- (- (- ?x18210 ?x18212) ?x18215) ?x18218) (* (* 2.0 l_0_10_179) l_0_10_190))))
 (let ((?x18228 (+ (+ ?x18222 (* (* 2.0 l_0_10_180) l_0_10_191)) (* (* 2.0 l_0_10_181) l_0_10_192))))
 (let ((?x18234 (+ (+ ?x18228 (* (* 2.0 l_0_10_182) l_0_10_193)) (* (* 2.0 l_0_10_183) l_0_10_194))))
 (= (- (- (- (- (- (+ ?x18234 ?x18235) ?x18238) ?x18241) ?x18244) ?x18247) ?x18250) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x18250 (* ?x18249 l_0_10_82)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x18247 (* ?x18246 l_0_10_81)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x18244 (* ?x18243 l_0_10_80)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x18241 (* ?x18240 l_0_10_79)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x18238 (* ?x18237 l_0_10_78)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18376 (* ?x18064 l_0_10_35)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18374 (* ?x18042 l_0_10_147)))
 (let ((?x18186 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x18183 (* ?x18182 l_0_10_98)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x18180 (* ?x18179 l_0_10_97)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x18177 (* ?x18176 l_0_10_96)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x18174 (* ?x18173 l_0_10_95)))
 (let ((?x18372 (- (- (- (- (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x18174) ?x18177) ?x18180) ?x18183)))
 (let ((?x18381 (+ (+ (+ (+ (+ (+ (- ?x18372 ?x18186) ?x18374) ?x18376) ?x18238) ?x18241) ?x18244) ?x18247)))
 (= (+ ?x18381 ?x18250) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18416 (* ?x18064 l_0_10_39)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18409 (* ?x18042 l_0_10_151)))
 (= (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x18409) ?x18416) 0.0))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x18436 (* ?x18435 l_0_10_95)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x18433 (* ?x18432 l_0_10_67)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18425 (* ?x18064 l_0_10_44)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18422 (* ?x18042 l_0_10_156)))
 (let ((?x18437 (+ (- (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_16) ?x18422) ?x18425) ?x18433) ?x18436)))
 (= ?x18437 0.0)))))))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18462 (* ?x18064 l_0_10_50)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18454 (* ?x18042 l_0_10_162)))
 (= (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) ?x18454) ?x18462) 0.0))))))
(assert
 (let ((?x18482 (* l_0_10_31 l_0_10_31)))
 (let ((?x18480 (* l_0_10_30 l_0_10_30)))
 (let ((?x18478 (* l_0_10_3 l_0_10_3)))
 (let ((?x18471 (* l_0_10_2 l_0_10_2)))
 (let ((?x18477 (- (+ (* l_0_10_142 l_0_10_142) (* l_0_10_143 l_0_10_143)) ?x18471)))
 (= (+ (+ (- ?x18477 ?x18478) ?x18480) ?x18482) 0.0)))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18508 (* ?x18507 l_0_10_33)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18505 (* ?x18504 l_0_10_32)))
 (let ((?x18501 (* 2.0 l_0_10_3)))
 (let ((?x18502 (* ?x18501 l_0_10_5)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18499 (* ?x18498 l_0_10_4)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18496 (* ?x18495 l_0_10_145)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18494 (* ?x18493 l_0_10_144)))
 (= (+ (+ (- (- (+ ?x18494 ?x18496) ?x18499) ?x18502) ?x18505) ?x18508) 0.0))))))))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18543 (* ?x18507 l_0_10_36)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18541 (* ?x18504 l_0_10_35)))
 (let ((?x18501 (* 2.0 l_0_10_3)))
 (let ((?x18539 (* ?x18501 l_0_10_8)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18537 (* ?x18498 l_0_10_7)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18535 (* ?x18495 l_0_10_148)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18534 (* ?x18493 l_0_10_147)))
 (= (+ (+ (- (- (+ ?x18534 ?x18535) ?x18537) ?x18539) ?x18541) ?x18543) 0.0))))))))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18579 (* ?x18507 l_0_10_40)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18577 (* ?x18504 l_0_10_39)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18575 (* ?x18495 l_0_10_152)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18573 (* ?x18493 l_0_10_151)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18571 (* ?x18033 l_0_10_3)))
 (let ((?x18578 (+ (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x18571) ?x18573) ?x18575) ?x18577)))
 (= (+ ?x18578 ?x18579) 0.0)))))))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x18624 (* ?x18623 l_0_10_96)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x18621 (* ?x18620 l_0_10_95)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x18618 (* ?x18617 l_0_10_68)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x18615 (* ?x18614 l_0_10_67)))
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18612 (* ?x18507 l_0_10_45)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18610 (* ?x18504 l_0_10_44)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x18608 (* ?x18607 l_0_10_3)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x18598 (* ?x18597 l_0_10_2)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18593 (* ?x18495 l_0_10_157)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18591 (* ?x18493 l_0_10_156)))
 (let ((?x18619 (- (- (+ (+ (- (- (+ ?x18591 ?x18593) ?x18598) ?x18608) ?x18610) ?x18612) ?x18615) ?x18618)))
 (= (+ (+ ?x18619 ?x18621) ?x18624) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18677 (* ?x18507 l_0_10_51)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18675 (* ?x18504 l_0_10_50)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x18673 (* ?x18672 l_0_10_3)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18670 (* ?x18498 l_0_10_22)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18668 (* ?x18495 l_0_10_163)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18667 (* ?x18493 l_0_10_162)))
 (= (+ (+ (- (- (+ ?x18667 ?x18668) ?x18670) ?x18673) ?x18675) ?x18677) 0.0))))))))))))))
(assert
 (let ((?x18718 (* l_0_10_6 l_0_10_6)))
 (let ((?x18716 (* l_0_10_5 l_0_10_5)))
 (let ((?x18714 (* l_0_10_4 l_0_10_4)))
 (let ((?x18712 (* l_0_10_34 l_0_10_34)))
 (let ((?x18710 (* l_0_10_33 l_0_10_33)))
 (let ((?x18708 (* l_0_10_32 l_0_10_32)))
 (let ((?x18706 (* l_0_10_146 l_0_10_146)))
 (let ((?x18707 (+ (+ (* l_0_10_144 l_0_10_144) (* l_0_10_145 l_0_10_145)) ?x18706)))
 (= (- (- (- (+ (+ (+ ?x18707 ?x18708) ?x18710) ?x18712) ?x18714) ?x18716) ?x18718) 0.0))))))))))
(assert
 (let ((?x18756 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18753 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18750 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18747 (* ?x18746 l_0_10_37)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18744 (* ?x18743 l_0_10_36)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18741 (* ?x18740 l_0_10_35)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18738 (* ?x18737 l_0_10_149)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18735 (* ?x18734 l_0_10_148)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18733 (* ?x18732 l_0_10_147)))
 (let ((?x18754 (- (- (+ (+ (+ (+ (+ ?x18733 ?x18735) ?x18738) ?x18741) ?x18744) ?x18747) ?x18750) ?x18753)))
 (= (- ?x18754 ?x18756) 0.0))))))))))))))))))
(assert
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18806 (* ?x18746 l_0_10_41)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18804 (* ?x18743 l_0_10_40)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18802 (* ?x18740 l_0_10_39)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18800 (* ?x18737 l_0_10_153)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18798 (* ?x18734 l_0_10_152)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18796 (* ?x18732 l_0_10_151)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x18794 (* ?x18036 l_0_10_6)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18792 (* ?x18033 l_0_10_5)))
 (let ((?x18799 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x18792) ?x18794) ?x18796) ?x18798)))
 (= (+ (+ (+ (+ ?x18799 ?x18800) ?x18802) ?x18804) ?x18806) 0.0)))))))))))))))))))
(assert
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x18872 (* ?x18871 l_0_10_97)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x18869 (* ?x18868 l_0_10_96)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x18866 (* ?x18865 l_0_10_95)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x18863 (* ?x18862 l_0_10_69)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x18860 (* ?x18859 l_0_10_68)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x18857 (* ?x18856 l_0_10_67)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18854 (* ?x18746 l_0_10_46)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18852 (* ?x18743 l_0_10_45)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18850 (* ?x18740 l_0_10_44)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x18848 (* ?x18847 l_0_10_6)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x18845 (* ?x18607 l_0_10_5)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x18834 (* ?x18597 l_0_10_4)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18830 (* ?x18737 l_0_10_158)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18826 (* ?x18734 l_0_10_157)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18824 (* ?x18732 l_0_10_156)))
 (let ((?x18853 (+ (+ (- (- (- (+ (+ ?x18824 ?x18826) ?x18830) ?x18834) ?x18845) ?x18848) ?x18850) ?x18852)))
 (let ((?x18873 (+ (+ (+ (- (- (- (+ ?x18853 ?x18854) ?x18857) ?x18860) ?x18863) ?x18866) ?x18869) ?x18872)))
 (= ?x18873 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18950 (* ?x18746 l_0_10_52)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18948 (* ?x18743 l_0_10_51)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18946 (* ?x18740 l_0_10_50)))
 (let ((?x18943 (* 2.0 l_0_10_24)))
 (let ((?x18944 (* ?x18943 l_0_10_6)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x18941 (* ?x18672 l_0_10_5)))
 (let ((?x18938 (* 2.0 l_0_10_22)))
 (let ((?x18939 (* ?x18938 l_0_10_4)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18936 (* ?x18737 l_0_10_164)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18934 (* ?x18734 l_0_10_163)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18933 (* ?x18732 l_0_10_162)))
 (let ((?x18949 (+ (+ (- (- (- (+ (+ ?x18933 ?x18934) ?x18936) ?x18939) ?x18941) ?x18944) ?x18946) ?x18948)))
 (= (+ ?x18949 ?x18950) 0.0)))))))))))))))))))))
(assert
 (let ((?x19008 (* l_0_10_9 l_0_10_9)))
 (let ((?x19006 (* l_0_10_8 l_0_10_8)))
 (let ((?x19004 (* l_0_10_7 l_0_10_7)))
 (let ((?x19002 (* l_0_10_38 l_0_10_38)))
 (let ((?x19000 (* l_0_10_37 l_0_10_37)))
 (let ((?x18998 (* l_0_10_36 l_0_10_36)))
 (let ((?x18996 (* l_0_10_35 l_0_10_35)))
 (let ((?x18994 (* l_0_10_150 l_0_10_150)))
 (let ((?x18992 (* l_0_10_149 l_0_10_149)))
 (let ((?x18990 (* l_0_10_148 l_0_10_148)))
 (let ((?x18991 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_147 l_0_10_147)) ?x18990)))
 (let ((?x19005 (- (+ (+ (+ (+ (+ (+ ?x18991 ?x18992) ?x18994) ?x18996) ?x18998) ?x19000) ?x19002) ?x19004)))
 (= (- (- ?x19005 ?x19006) ?x19008) 0.0))))))))))))))
(assert
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19055 (* ?x19054 l_0_10_42)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19052 (* ?x19051 l_0_10_41)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19049 (* ?x19048 l_0_10_40)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19046 (* ?x19045 l_0_10_39)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19043 (* ?x19042 l_0_10_154)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19040 (* ?x19039 l_0_10_153)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19037 (* ?x19036 l_0_10_152)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19034 (* ?x19033 l_0_10_151)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x19031 (* ?x18036 l_0_10_9)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x19029 (* ?x18033 l_0_10_8)))
 (let ((?x18030 (* 2.0 l_0_10_11)))
 (let ((?x19027 (* ?x18030 l_0_10_7)))
 (let ((?x19035 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x19027) ?x19029) ?x19031) ?x19034)))
 (let ((?x19056 (+ (+ (+ (+ (+ (+ (+ ?x19035 ?x19037) ?x19040) ?x19043) ?x19046) ?x19049) ?x19052) ?x19055)))
 (= ?x19056 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19142 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x19139 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x19136 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x19133 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x19130 (* ?x19129 l_0_10_70)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x19127 (* ?x19126 l_0_10_69)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x19124 (* ?x19123 l_0_10_68)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x19121 (* ?x19120 l_0_10_67)))
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19118 (* ?x19054 l_0_10_47)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19116 (* ?x19051 l_0_10_46)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19114 (* ?x19048 l_0_10_45)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19112 (* ?x19045 l_0_10_44)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x19110 (* ?x18847 l_0_10_9)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x19108 (* ?x18607 l_0_10_8)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x19106 (* ?x18597 l_0_10_7)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19093 (* ?x19042 l_0_10_159)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19089 (* ?x19039 l_0_10_158)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19085 (* ?x19036 l_0_10_157)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19081 (* ?x19033 l_0_10_156)))
 (let ((?x19094 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x19081) ?x19085) ?x19089) ?x19093)))
 (let ((?x19119 (+ (+ (+ (+ (- (- (- ?x19094 ?x19106) ?x19108) ?x19110) ?x19112) ?x19114) ?x19116) ?x19118)))
 (let ((?x19140 (+ (+ (+ (- (- (- (- ?x19119 ?x19121) ?x19124) ?x19127) ?x19130) ?x19133) ?x19136) ?x19139)))
 (= (+ ?x19140 ?x19142) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19247 (* ?x19054 l_0_10_53)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19245 (* ?x19051 l_0_10_52)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19243 (* ?x19048 l_0_10_51)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19241 (* ?x19045 l_0_10_50)))
 (let ((?x18943 (* 2.0 l_0_10_24)))
 (let ((?x19239 (* ?x18943 l_0_10_9)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x19237 (* ?x18672 l_0_10_8)))
 (let ((?x18938 (* 2.0 l_0_10_22)))
 (let ((?x19235 (* ?x18938 l_0_10_7)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19233 (* ?x19042 l_0_10_165)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19231 (* ?x19039 l_0_10_164)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19214 (* ?x19036 l_0_10_163)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19210 (* ?x19033 l_0_10_162)))
 (let ((?x19234 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_10) l_0_10_25) ?x19210) ?x19214) ?x19231) ?x19233)))
 (let ((?x19248 (+ (+ (+ (+ (- (- (- ?x19234 ?x19235) ?x19237) ?x19239) ?x19241) ?x19243) ?x19245) ?x19247)))
 (= ?x19248 0.0))))))))))))))))))))))))))
(assert
 (let ((?x19322 (* l_0_10_43 l_0_10_43)))
 (let ((?x19320 (* l_0_10_42 l_0_10_42)))
 (let ((?x19318 (* l_0_10_41 l_0_10_41)))
 (let ((?x19316 (* l_0_10_40 l_0_10_40)))
 (let ((?x19314 (* l_0_10_39 l_0_10_39)))
 (let ((?x19312 (* l_0_10_155 l_0_10_155)))
 (let ((?x19310 (* l_0_10_154 l_0_10_154)))
 (let ((?x19308 (* l_0_10_153 l_0_10_153)))
 (let ((?x19306 (* l_0_10_152 l_0_10_152)))
 (let ((?x19304 (* l_0_10_151 l_0_10_151)))
 (let ((?x19302 (* l_0_10_15 l_0_10_15)))
 (let ((?x19300 (* l_0_10_14 l_0_10_14)))
 (let ((?x19287 (* l_0_10_13 l_0_10_13)))
 (let ((?x19299 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x19287)))
 (let ((?x19313 (+ (+ (+ (+ (+ (- (- ?x19299 ?x19300) ?x19302) ?x19304) ?x19306) ?x19308) ?x19310) ?x19312)))
 (= (+ (+ (+ (+ (+ ?x19313 ?x19314) ?x19316) ?x19318) ?x19320) ?x19322) 0.0)))))))))))))))))
(assert
 (let ((?x19399 (* l_0_10_99 l_0_10_99)))
 (let ((?x19397 (* l_0_10_98 l_0_10_98)))
 (let ((?x19395 (* l_0_10_97 l_0_10_97)))
 (let ((?x19393 (* l_0_10_96 l_0_10_96)))
 (let ((?x19391 (* l_0_10_95 l_0_10_95)))
 (let ((?x19389 (* l_0_10_71 l_0_10_71)))
 (let ((?x19387 (* l_0_10_70 l_0_10_70)))
 (let ((?x19385 (* l_0_10_69 l_0_10_69)))
 (let ((?x19383 (* l_0_10_68 l_0_10_68)))
 (let ((?x19381 (* l_0_10_67 l_0_10_67)))
 (let ((?x18079 (* 2.0 l_0_10_43)))
 (let ((?x19379 (* ?x18079 l_0_10_48)))
 (let ((?x18076 (* 2.0 l_0_10_42)))
 (let ((?x19377 (* ?x18076 l_0_10_47)))
 (let ((?x18073 (* 2.0 l_0_10_41)))
 (let ((?x19375 (* ?x18073 l_0_10_46)))
 (let ((?x18070 (* 2.0 l_0_10_40)))
 (let ((?x19373 (* ?x18070 l_0_10_45)))
 (let ((?x18067 (* 2.0 l_0_10_39)))
 (let ((?x19371 (* ?x18067 l_0_10_44)))
 (let ((?x18217 (* 2.0 l_0_10_155)))
 (let ((?x19369 (* ?x18217 l_0_10_160)))
 (let ((?x18214 (* 2.0 l_0_10_154)))
 (let ((?x19367 (* ?x18214 l_0_10_159)))
 (let ((?x18211 (* 2.0 l_0_10_153)))
 (let ((?x19365 (* ?x18211 l_0_10_158)))
 (let ((?x18208 (* 2.0 l_0_10_152)))
 (let ((?x19363 (* ?x18208 l_0_10_157)))
 (let ((?x18205 (* 2.0 l_0_10_151)))
 (let ((?x19361 (* ?x18205 l_0_10_156)))
 (let ((?x18045 (* 2.0 l_0_10_15)))
 (let ((?x19359 (* ?x18045 l_0_10_20)))
 (let ((?x18039 (* 2.0 l_0_10_14)))
 (let ((?x19357 (* ?x18039 l_0_10_19)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x19355 (* ?x18036 l_0_10_18)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x19353 (* ?x18033 l_0_10_17)))
 (let ((?x19360 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_16) ?x19353) ?x19355) ?x19357) ?x19359)))
 (let ((?x19374 (+ (+ (+ (+ (+ (+ (+ ?x19360 ?x19361) ?x19363) ?x19365) ?x19367) ?x19369) ?x19371) ?x19373)))
 (let ((?x19388 (- (- (- (- (+ (+ (+ ?x19374 ?x19375) ?x19377) ?x19379) ?x19381) ?x19383) ?x19385) ?x19387)))
 (= (+ (+ (+ (+ (+ (- ?x19388 ?x19389) ?x19391) ?x19393) ?x19395) ?x19397) ?x19399) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18079 (* 2.0 l_0_10_43)))
 (let ((?x18080 (* ?x18079 l_0_10_54)))
 (let ((?x18076 (* 2.0 l_0_10_42)))
 (let ((?x18077 (* ?x18076 l_0_10_53)))
 (let ((?x18073 (* 2.0 l_0_10_41)))
 (let ((?x18074 (* ?x18073 l_0_10_52)))
 (let ((?x18070 (* 2.0 l_0_10_40)))
 (let ((?x18071 (* ?x18070 l_0_10_51)))
 (let ((?x18067 (* 2.0 l_0_10_39)))
 (let ((?x18068 (* ?x18067 l_0_10_50)))
 (let ((?x18217 (* 2.0 l_0_10_155)))
 (let ((?x18218 (* ?x18217 l_0_10_166)))
 (let ((?x18214 (* 2.0 l_0_10_154)))
 (let ((?x18215 (* ?x18214 l_0_10_165)))
 (let ((?x18211 (* 2.0 l_0_10_153)))
 (let ((?x18212 (* ?x18211 l_0_10_164)))
 (let ((?x18208 (* 2.0 l_0_10_152)))
 (let ((?x18209 (* ?x18208 l_0_10_163)))
 (let ((?x18205 (* 2.0 l_0_10_151)))
 (let ((?x18206 (* ?x18205 l_0_10_162)))
 (let ((?x18045 (* 2.0 l_0_10_15)))
 (let ((?x18046 (* ?x18045 l_0_10_26)))
 (let ((?x18039 (* 2.0 l_0_10_14)))
 (let ((?x18040 (* ?x18039 l_0_10_25)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x18037 (* ?x18036 l_0_10_24)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18034 (* ?x18033 l_0_10_23)))
 (let ((?x19486 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_22) ?x18034) ?x18037) ?x18040) ?x18046)))
 (let ((?x19493 (+ (+ (+ (+ (+ (+ (+ ?x19486 ?x18206) ?x18209) ?x18212) ?x18215) ?x18218) ?x18068) ?x18071)))
 (= (+ (+ (+ ?x19493 ?x18074) ?x18077) ?x18080) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x19570 (* ?x18249 l_0_10_76)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x19568 (* ?x18246 l_0_10_75)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x19566 (* ?x18243 l_0_10_74)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x19564 (* ?x18240 l_0_10_73)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x19562 (* ?x18237 l_0_10_72)))
 (let ((?x19560 (* l_0_10_49 l_0_10_49)))
 (let ((?x19558 (* l_0_10_48 l_0_10_48)))
 (let ((?x19556 (* l_0_10_47 l_0_10_47)))
 (let ((?x19554 (* l_0_10_46 l_0_10_46)))
 (let ((?x19552 (* l_0_10_45 l_0_10_45)))
 (let ((?x19550 (* l_0_10_44 l_0_10_44)))
 (let ((?x19548 (* l_0_10_21 l_0_10_21)))
 (let ((?x19546 (* l_0_10_20 l_0_10_20)))
 (let ((?x19544 (* l_0_10_19 l_0_10_19)))
 (let ((?x19542 (* l_0_10_18 l_0_10_18)))
 (let ((?x19540 (* l_0_10_17 l_0_10_17)))
 (let ((?x19538 (* l_0_10_161 l_0_10_161)))
 (let ((?x19536 (* l_0_10_160 l_0_10_160)))
 (let ((?x19534 (* l_0_10_16 l_0_10_16)))
 (let ((?x19532 (* l_0_10_159 l_0_10_159)))
 (let ((?x19530 (* l_0_10_158 l_0_10_158)))
 (let ((?x19528 (* l_0_10_157 l_0_10_157)))
 (let ((?x19526 (* l_0_10_156 l_0_10_156)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x19524 (* ?x19523 l_0_10_99)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x19521 (* ?x19520 l_0_10_98)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x19518 (* ?x19517 l_0_10_97)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x19515 (* ?x19514 l_0_10_96)))
 (let ((?x19525 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_95) ?x19515) ?x19518) ?x19521) ?x19524)))
 (let ((?x19539 (+ (+ (- (+ (+ (+ (+ ?x19525 ?x19526) ?x19528) ?x19530) ?x19532) ?x19534) ?x19536) ?x19538)))
 (let ((?x19553 (+ (+ (- (- (- (- (- ?x19539 ?x19540) ?x19542) ?x19544) ?x19546) ?x19548) ?x19550) ?x19552)))
 (let ((?x19567 (- (- (- (+ (+ (+ (+ ?x19553 ?x19554) ?x19556) ?x19558) ?x19560) ?x19562) ?x19564) ?x19566)))
 (= (- (- ?x19567 ?x19568) ?x19570) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x18250 (* ?x18249 l_0_10_82)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x18247 (* ?x18246 l_0_10_81)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x18244 (* ?x18243 l_0_10_80)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x18241 (* ?x18240 l_0_10_79)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x18238 (* ?x18237 l_0_10_78)))
 (let ((?x19688 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x19685 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x19682 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x19679 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x19676 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x19673 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x19670 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x19667 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x19664 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x19661 (* ?x18847 l_0_10_24)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x19659 (* ?x18607 l_0_10_23)))
 (let ((?x19657 (* (* 2.0 l_0_10_161) l_0_10_167)))
 (let ((?x19654 (* (* 2.0 l_0_10_160) l_0_10_166)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x19651 (* ?x18597 l_0_10_22)))
 (let ((?x19649 (* (* 2.0 l_0_10_159) l_0_10_165)))
 (let ((?x19646 (* (* 2.0 l_0_10_158) l_0_10_164)))
 (let ((?x19643 (* (* 2.0 l_0_10_157) l_0_10_163)))
 (let ((?x19640 (* (* 2.0 l_0_10_156) l_0_10_162)))
 (let ((?x18186 (* (* 2.0 l_0_10_110) l_0_10_99)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x18183 (* ?x18182 l_0_10_98)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x18180 (* ?x18179 l_0_10_97)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x18177 (* ?x18176 l_0_10_96)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x18174 (* ?x18173 l_0_10_95)))
 (let ((?x19647 (+ (+ (+ (+ (+ (+ (+ ?x18174 ?x18177) ?x18180) ?x18183) ?x18186) ?x19640) ?x19643) ?x19646)))
 (let ((?x19665 (- (- (- (+ (+ (- (+ ?x19647 ?x19649) ?x19651) ?x19654) ?x19657) ?x19659) ?x19661) ?x19664)))
 (let ((?x19686 (+ (+ (+ (+ (+ (- (- ?x19665 ?x19667) ?x19670) ?x19673) ?x19676) ?x19679) ?x19682) ?x19685)))
 (= (- (- (- (- (- (+ ?x19686 ?x19688) ?x18238) ?x18241) ?x18244) ?x18247) ?x18250) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19809 (* l_0_10_56 l_0_10_56)))
 (let ((?x19807 (* l_0_10_55 l_0_10_55)))
 (let ((?x19805 (* l_0_10_54 l_0_10_54)))
 (let ((?x19803 (* l_0_10_53 l_0_10_53)))
 (let ((?x19801 (* l_0_10_52 l_0_10_52)))
 (let ((?x19799 (* l_0_10_51 l_0_10_51)))
 (let ((?x19797 (* l_0_10_50 l_0_10_50)))
 (let ((?x19795 (* l_0_10_28 l_0_10_28)))
 (let ((?x19793 (* l_0_10_27 l_0_10_27)))
 (let ((?x19791 (* l_0_10_26 l_0_10_26)))
 (let ((?x19789 (* l_0_10_25 l_0_10_25)))
 (let ((?x19787 (* l_0_10_24 l_0_10_24)))
 (let ((?x19785 (* l_0_10_23 l_0_10_23)))
 (let ((?x19783 (* l_0_10_22 l_0_10_22)))
 (let ((?x19781 (* l_0_10_168 l_0_10_168)))
 (let ((?x19779 (* l_0_10_167 l_0_10_167)))
 (let ((?x19777 (* l_0_10_166 l_0_10_166)))
 (let ((?x19775 (* l_0_10_165 l_0_10_165)))
 (let ((?x19773 (* l_0_10_164 l_0_10_164)))
 (let ((?x19774 (+ (+ (* l_0_10_162 l_0_10_162) (* l_0_10_163 l_0_10_163)) ?x19773)))
 (let ((?x19788 (- (- (- (+ (+ (+ (+ ?x19774 ?x19775) ?x19777) ?x19779) ?x19781) ?x19783) ?x19785) ?x19787)))
 (let ((?x19802 (+ (+ (+ (- (- (- (- ?x19788 ?x19789) ?x19791) ?x19793) ?x19795) ?x19797) ?x19799) ?x19801)))
 (= (+ (+ (+ (+ ?x19802 ?x19803) ?x19805) ?x19807) ?x19809) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18065 (* ?x18064 l_0_10_30)))
 (let ((?x19843 (* l_0_10_199 l_0_10_199)))
 (let ((?x19841 (* l_0_10_198 l_0_10_198)))
 (let ((?x19840 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 4.0 l_0_10_169) l_0_10_170))))
 (= (- (- (- ?x19840 ?x19841) ?x19843) ?x18065) 0.0)))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x19881 (* ?x18435 l_0_10_86)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x19879 (* ?x18432 l_0_10_58)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18235 (* ?x18064 l_0_10_32)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18043 (* ?x18042 l_0_10_142)))
 (let ((?x19866 (- (* (* 2.0 l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_113) l_0_10_114))))
 (let ((?x19871 (- (+ (- ?x19866 ?x18043) (* (* 2.0 l_0_10_169) l_0_10_170)) (* (* 4.0 l_0_10_169) l_0_10_172))))
 (let ((?x19877 (- (- ?x19871 (* (* 2.0 l_0_10_198) l_0_10_200)) (* (* 2.0 l_0_10_199) l_0_10_201))))
 (= (+ (- (- ?x19877 ?x18235) ?x19879) ?x19881) 0.0)))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x19881 (* ?x18435 l_0_10_86)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x19879 (* ?x18432 l_0_10_58)))
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18376 (* ?x18064 l_0_10_35)))
 (let ((?x19931 (- (* (* 2.0 l_0_10_1) l_0_10_7) (* (* 4.0 l_0_10_169) l_0_10_175))))
 (let ((?x19935 (- (- ?x19931 (* (* 2.0 l_0_10_198) l_0_10_203)) (* (* 2.0 l_0_10_199) l_0_10_204))))
 (= (- (+ (- ?x19935 ?x18376) ?x19879) ?x19881) 0.0))))))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18416 (* ?x18064 l_0_10_39)))
 (let ((?x19970 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 4.0 l_0_10_169) l_0_10_179))))
 (let ((?x19974 (- (- ?x19970 (* (* 2.0 l_0_10_198) l_0_10_207)) (* (* 2.0 l_0_10_199) l_0_10_208))))
 (= (- ?x19974 ?x18416) 0.0))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18425 (* ?x18064 l_0_10_44)))
 (let ((?x20002 (- (* (* 2.0 l_0_10_1) l_0_10_16) (* (* 4.0 l_0_10_169) l_0_10_184))))
 (let ((?x20006 (- (- ?x20002 (* (* 2.0 l_0_10_198) l_0_10_212)) (* (* 2.0 l_0_10_199) l_0_10_213))))
 (= (- ?x20006 ?x18425) 0.0))))))
(assert
 (let ((?x18064 (* 2.0 l_0_10_29)))
 (let ((?x18462 (* ?x18064 l_0_10_50)))
 (let ((?x20033 (- (* (* 2.0 l_0_10_1) l_0_10_22) (* (* 4.0 l_0_10_169) l_0_10_190))))
 (let ((?x20037 (- (- ?x20033 (* (* 2.0 l_0_10_198) l_0_10_218)) (* (* 2.0 l_0_10_199) l_0_10_219))))
 (= (- ?x20037 ?x18462) 0.0))))))
(assert
 (let ((?x18482 (* l_0_10_31 l_0_10_31)))
 (let ((?x18480 (* l_0_10_30 l_0_10_30)))
 (let ((?x18478 (* l_0_10_3 l_0_10_3)))
 (let ((?x18471 (* l_0_10_2 l_0_10_2)))
 (let ((?x20067 (- (* (* (- 2.0) l_0_10_170) l_0_10_170) (* (* 2.0 l_0_10_171) l_0_10_171))))
 (= (- (- (+ (+ ?x20067 ?x18471) ?x18478) ?x18480) ?x18482) 0.0)))))))
(assert
 (let ((?x20113 (* l_0_10_87 l_0_10_87)))
 (let ((?x20111 (* l_0_10_86 l_0_10_86)))
 (let ((?x20109 (* l_0_10_59 l_0_10_59)))
 (let ((?x20107 (* l_0_10_58 l_0_10_58)))
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18508 (* ?x18507 l_0_10_33)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18505 (* ?x18504 l_0_10_32)))
 (let ((?x18501 (* 2.0 l_0_10_3)))
 (let ((?x18502 (* ?x18501 l_0_10_5)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18499 (* ?x18498 l_0_10_4)))
 (let ((?x20075 (* l_0_10_171 l_0_10_171)))
 (let ((?x20073 (* l_0_10_170 l_0_10_170)))
 (let ((?x18468 (* l_0_10_143 l_0_10_143)))
 (let ((?x18466 (* l_0_10_142 l_0_10_142)))
 (let ((?x20093 (- (- (* (- l_0_10_114) l_0_10_114) (* l_0_10_115 l_0_10_115)) ?x18466)))
 (let ((?x20101 (- (+ (- (- ?x20093 ?x18468) (* (* 4.0 l_0_10_170) l_0_10_172)) ?x20073) (* (* 4.0 l_0_10_171) l_0_10_173))))
 (let ((?x20110 (- (- (- (- (+ (+ (+ ?x20101 ?x20075) ?x18499) ?x18502) ?x18505) ?x18508) ?x20107) ?x20109)))
 (= (+ (+ ?x20110 ?x20111) ?x20113) 0.0)))))))))))))))))))))
(assert
 (let ((?x20113 (* l_0_10_87 l_0_10_87)))
 (let ((?x20111 (* l_0_10_86 l_0_10_86)))
 (let ((?x20109 (* l_0_10_59 l_0_10_59)))
 (let ((?x20107 (* l_0_10_58 l_0_10_58)))
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18543 (* ?x18507 l_0_10_36)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18541 (* ?x18504 l_0_10_35)))
 (let ((?x18501 (* 2.0 l_0_10_3)))
 (let ((?x18539 (* ?x18501 l_0_10_8)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18537 (* ?x18498 l_0_10_7)))
 (let ((?x20165 (- (* (* (- 4.0) l_0_10_170) l_0_10_175) (* (* 4.0 l_0_10_171) l_0_10_176))))
 (let ((?x20172 (- (+ (+ (- (- (+ (+ ?x20165 ?x18537) ?x18539) ?x18541) ?x18543) ?x20107) ?x20109) ?x20111)))
 (= (- ?x20172 ?x20113) 0.0))))))))))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18579 (* ?x18507 l_0_10_40)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18577 (* ?x18504 l_0_10_39)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18571 (* ?x18033 l_0_10_3)))
 (let ((?x20201 (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x18571) (* (* 4.0 l_0_10_170) l_0_10_179))))
 (= (- (- (- ?x20201 (* (* 4.0 l_0_10_171) l_0_10_180)) ?x18577) ?x18579) 0.0)))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18612 (* ?x18507 l_0_10_45)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18610 (* ?x18504 l_0_10_44)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x18608 (* ?x18607 l_0_10_3)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x18598 (* ?x18597 l_0_10_2)))
 (let ((?x20233 (- (- (+ ?x18598 ?x18608) (* (* 4.0 l_0_10_170) l_0_10_184)) (* (* 4.0 l_0_10_171) l_0_10_185))))
 (= (- (- ?x20233 ?x18610) ?x18612) 0.0)))))))))))
(assert
 (let ((?x18507 (* 2.0 l_0_10_31)))
 (let ((?x18677 (* ?x18507 l_0_10_51)))
 (let ((?x18504 (* 2.0 l_0_10_30)))
 (let ((?x18675 (* ?x18504 l_0_10_50)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x18673 (* ?x18672 l_0_10_3)))
 (let ((?x18498 (* 2.0 l_0_10_2)))
 (let ((?x18670 (* ?x18498 l_0_10_22)))
 (let ((?x20261 (- (* (* (- 4.0) l_0_10_170) l_0_10_190) (* (* 4.0 l_0_10_171) l_0_10_191))))
 (= (- (- (+ (+ ?x20261 ?x18670) ?x18673) ?x18675) ?x18677) 0.0)))))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x20318 (* ?x18623 l_0_10_89)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x20316 (* ?x18620 l_0_10_88)))
 (let ((?x18718 (* l_0_10_6 l_0_10_6)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20313 (* ?x18617 l_0_10_61)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20311 (* ?x18614 l_0_10_60)))
 (let ((?x18716 (* l_0_10_5 l_0_10_5)))
 (let ((?x18714 (* l_0_10_4 l_0_10_4)))
 (let ((?x18712 (* l_0_10_34 l_0_10_34)))
 (let ((?x18710 (* l_0_10_33 l_0_10_33)))
 (let ((?x18708 (* l_0_10_32 l_0_10_32)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18496 (* ?x18495 l_0_10_145)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18494 (* ?x18493 l_0_10_144)))
 (let ((?x20289 (- (* (* (- 2.0) l_0_10_114) l_0_10_116) (* (* 2.0 l_0_10_115) l_0_10_117))))
 (let ((?x20296 (+ (+ (- (- ?x20289 ?x18494) ?x18496) (* (* 2.0 l_0_10_170) l_0_10_172)) (* (* 2.0 l_0_10_171) l_0_10_173))))
 (let ((?x20302 (- (- ?x20296 (* (* 2.0 l_0_10_172) l_0_10_172)) (* (* 2.0 l_0_10_173) l_0_10_173))))
 (let ((?x20308 (- (- (- (- ?x20302 (* (* 2.0 l_0_10_174) l_0_10_174)) ?x18708) ?x18710) ?x18712)))
 (let ((?x20319 (+ (+ (+ (- (- (+ (+ ?x20308 ?x18714) ?x18716) ?x20311) ?x20313) ?x18718) ?x20316) ?x20318)))
 (= ?x20319 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x20423 (* ?x18623 l_0_10_92)))
 (let ((?x20318 (* ?x18623 l_0_10_89)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x20420 (* ?x18620 l_0_10_91)))
 (let ((?x20316 (* ?x18620 l_0_10_88)))
 (let ((?x18756 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20416 (* ?x18617 l_0_10_64)))
 (let ((?x20313 (* ?x18617 l_0_10_61)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20413 (* ?x18614 l_0_10_63)))
 (let ((?x20311 (* ?x18614 l_0_10_60)))
 (let ((?x18753 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18750 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18747 (* ?x18746 l_0_10_37)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18744 (* ?x18743 l_0_10_36)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18741 (* ?x18740 l_0_10_35)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18535 (* ?x18495 l_0_10_148)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18534 (* ?x18493 l_0_10_147)))
 (let ((?x20384 (- (* (* (- 2.0) l_0_10_114) l_0_10_119) (* (* 2.0 l_0_10_115) l_0_10_120))))
 (let ((?x20397 (+ (+ (- (- ?x20384 ?x18534) ?x18535) (* (* 2.0 l_0_10_170) l_0_10_175)) (* (* 2.0 l_0_10_171) l_0_10_176))))
 (let ((?x20403 (- (- ?x20397 (* (* 4.0 l_0_10_172) l_0_10_175)) (* (* 4.0 l_0_10_173) l_0_10_176))))
 (let ((?x20409 (- (- (- (- ?x20403 (* (* 4.0 l_0_10_174) l_0_10_177)) ?x18741) ?x18744) ?x18747)))
 (let ((?x20418 (+ (- (+ (- (+ (+ (+ ?x20409 ?x18750) ?x18753) ?x20311) ?x20413) ?x20313) ?x20416) ?x18756)))
 (= (+ (- (+ (- ?x20418 ?x20316) ?x20420) ?x20318) ?x20423) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x18624 (* ?x18623 l_0_10_96)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x18621 (* ?x18620 l_0_10_95)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x18618 (* ?x18617 l_0_10_68)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x18615 (* ?x18614 l_0_10_67)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18806 (* ?x18746 l_0_10_41)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18804 (* ?x18743 l_0_10_40)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18802 (* ?x18740 l_0_10_39)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18575 (* ?x18495 l_0_10_152)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18573 (* ?x18493 l_0_10_151)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x18794 (* ?x18036 l_0_10_6)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x18792 (* ?x18033 l_0_10_5)))
 (let ((?x20512 (- (* (* 2.0 l_0_10_11) l_0_10_4) (* (* 2.0 l_0_10_114) l_0_10_123))))
 (let ((?x20517 (- (+ (+ (- ?x20512 (* (* 2.0 l_0_10_115) l_0_10_124)) ?x18792) ?x18794) ?x18573)))
 (let ((?x20522 (+ (+ (- ?x20517 ?x18575) (* (* 2.0 l_0_10_170) l_0_10_179)) (* (* 2.0 l_0_10_171) l_0_10_180))))
 (let ((?x20526 (- (- ?x20522 (* (* 4.0 l_0_10_172) l_0_10_179)) (* (* 4.0 l_0_10_173) l_0_10_180))))
 (let ((?x20531 (- (- (- (- ?x20526 (* (* 4.0 l_0_10_174) l_0_10_181)) ?x18802) ?x18804) ?x18806)))
 (= (+ (+ (- (- ?x20531 ?x18615) ?x18618) ?x18621) ?x18624) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20628 (* ?x18617 l_0_10_73)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20626 (* ?x18614 l_0_10_72)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18854 (* ?x18746 l_0_10_46)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18852 (* ?x18743 l_0_10_45)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18850 (* ?x18740 l_0_10_44)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x18848 (* ?x18847 l_0_10_6)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x18845 (* ?x18607 l_0_10_5)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x18834 (* ?x18597 l_0_10_4)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18593 (* ?x18495 l_0_10_157)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18591 (* ?x18493 l_0_10_156)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x20602 (* ?x19514 l_0_10_87)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x20595 (* ?x19510 l_0_10_86)))
 (let ((?x20603 (+ ?x20595 ?x20602)))
 (let ((?x20607 (- (- ?x20603 (* (* 2.0 l_0_10_114) l_0_10_128)) (* (* 2.0 l_0_10_115) l_0_10_129))))
 (let ((?x20613 (+ (+ (+ (- (- ?x20607 ?x18591) ?x18593) ?x18834) ?x18845) (* (* 2.0 l_0_10_170) l_0_10_184))))
 (let ((?x20617 (- (+ ?x20613 (* (* 2.0 l_0_10_171) l_0_10_185)) (* (* 4.0 l_0_10_172) l_0_10_184))))
 (let ((?x20621 (- (- ?x20617 (* (* 4.0 l_0_10_173) l_0_10_185)) (* (* 4.0 l_0_10_174) l_0_10_186))))
 (= (- (- (- (- (- (+ ?x20621 ?x18848) ?x18850) ?x18852) ?x18854) ?x20626) ?x20628) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20735 (* ?x18617 l_0_10_79)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20733 (* ?x18614 l_0_10_78)))
 (let ((?x18746 (* 2.0 l_0_10_34)))
 (let ((?x18950 (* ?x18746 l_0_10_52)))
 (let ((?x18743 (* 2.0 l_0_10_33)))
 (let ((?x18948 (* ?x18743 l_0_10_51)))
 (let ((?x18740 (* 2.0 l_0_10_32)))
 (let ((?x18946 (* ?x18740 l_0_10_50)))
 (let ((?x18943 (* 2.0 l_0_10_24)))
 (let ((?x18944 (* ?x18943 l_0_10_6)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x18941 (* ?x18672 l_0_10_5)))
 (let ((?x18938 (* 2.0 l_0_10_22)))
 (let ((?x18939 (* ?x18938 l_0_10_4)))
 (let ((?x18495 (* 2.0 l_0_10_143)))
 (let ((?x18668 (* ?x18495 l_0_10_163)))
 (let ((?x18493 (* 2.0 l_0_10_142)))
 (let ((?x18667 (* ?x18493 l_0_10_162)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x20709 (* ?x18176 l_0_10_87)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x20708 (* ?x18173 l_0_10_86)))
 (let ((?x20710 (+ ?x20708 ?x20709)))
 (let ((?x20714 (- (- ?x20710 (* (* 2.0 l_0_10_114) l_0_10_134)) (* (* 2.0 l_0_10_115) l_0_10_135))))
 (let ((?x20720 (+ (+ (- (- ?x20714 ?x18667) ?x18668) (* (* 2.0 l_0_10_170) l_0_10_190)) (* (* 2.0 l_0_10_171) l_0_10_191))))
 (let ((?x20724 (- (- ?x20720 (* (* 4.0 l_0_10_172) l_0_10_190)) (* (* 4.0 l_0_10_173) l_0_10_191))))
 (let ((?x20729 (+ (+ (+ (- ?x20724 (* (* 4.0 l_0_10_174) l_0_10_192)) ?x18939) ?x18941) ?x18944)))
 (= (- (- (- (- (- ?x20729 ?x18946) ?x18948) ?x18950) ?x20733) ?x20735) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x19008 (* l_0_10_9 l_0_10_9)))
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x20423 (* ?x18623 l_0_10_92)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x20420 (* ?x18620 l_0_10_91)))
 (let ((?x19006 (* l_0_10_8 l_0_10_8)))
 (let ((?x19004 (* l_0_10_7 l_0_10_7)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20416 (* ?x18617 l_0_10_64)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20413 (* ?x18614 l_0_10_63)))
 (let ((?x19002 (* l_0_10_38 l_0_10_38)))
 (let ((?x19000 (* l_0_10_37 l_0_10_37)))
 (let ((?x18998 (* l_0_10_36 l_0_10_36)))
 (let ((?x18996 (* l_0_10_35 l_0_10_35)))
 (let ((?x19012 (* l_0_10_10 l_0_10_10)))
 (let ((?x20820 (- (- ?x19012 (* (* 2.0 l_0_10_175) l_0_10_175)) (* (* 2.0 l_0_10_176) l_0_10_176))))
 (let ((?x20826 (- (- ?x20820 (* (* 2.0 l_0_10_177) l_0_10_177)) (* (* 2.0 l_0_10_178) l_0_10_178))))
 (let ((?x20833 (+ (+ (+ (- (- (- (- ?x20826 ?x18996) ?x18998) ?x19000) ?x19002) ?x20413) ?x20416) ?x19004)))
 (= (+ (- (- (+ ?x20833 ?x19006) ?x20420) ?x20423) ?x19008) 0.0)))))))))))))))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x18624 (* ?x18623 l_0_10_96)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x18621 (* ?x18620 l_0_10_95)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x18618 (* ?x18617 l_0_10_68)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x18615 (* ?x18614 l_0_10_67)))
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19055 (* ?x19054 l_0_10_42)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19052 (* ?x19051 l_0_10_41)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19049 (* ?x19048 l_0_10_40)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19046 (* ?x19045 l_0_10_39)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x19031 (* ?x18036 l_0_10_9)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x19029 (* ?x18033 l_0_10_8)))
 (let ((?x18030 (* 2.0 l_0_10_11)))
 (let ((?x19027 (* ?x18030 l_0_10_7)))
 (let ((?x20892 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x19027) ?x19029) ?x19031) (* (* 4.0 l_0_10_175) l_0_10_179))))
 (let ((?x20898 (- (- ?x20892 (* (* 4.0 l_0_10_176) l_0_10_180)) (* (* 4.0 l_0_10_177) l_0_10_181))))
 (let ((?x20904 (- (- (- (- ?x20898 (* (* 4.0 l_0_10_178) l_0_10_182)) ?x19046) ?x19049) ?x19052)))
 (= (- (- (+ (+ (- ?x20904 ?x19055) ?x18615) ?x18618) ?x18621) ?x18624) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20628 (* ?x18617 l_0_10_73)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20626 (* ?x18614 l_0_10_72)))
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19118 (* ?x19054 l_0_10_47)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19116 (* ?x19051 l_0_10_46)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19114 (* ?x19048 l_0_10_45)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19112 (* ?x19045 l_0_10_44)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x19110 (* ?x18847 l_0_10_9)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x19108 (* ?x18607 l_0_10_8)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x19106 (* ?x18597 l_0_10_7)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x20602 (* ?x19514 l_0_10_87)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x20595 (* ?x19510 l_0_10_86)))
 (let ((?x20950 (+ (+ (- (- (* (* 2.0 l_0_10_10) l_0_10_19) ?x20595) ?x20602) ?x19106) ?x19108)))
 (let ((?x20954 (- (- ?x20950 (* (* 4.0 l_0_10_175) l_0_10_184)) (* (* 4.0 l_0_10_176) l_0_10_185))))
 (let ((?x20958 (- (- ?x20954 (* (* 4.0 l_0_10_177) l_0_10_186)) (* (* 4.0 l_0_10_178) l_0_10_187))))
 (let ((?x20965 (+ (+ (- (- (- (- (+ ?x20958 ?x19110) ?x19112) ?x19114) ?x19116) ?x19118) ?x20626) ?x20628)))
 (= ?x20965 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20735 (* ?x18617 l_0_10_79)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20733 (* ?x18614 l_0_10_78)))
 (let ((?x19054 (* 2.0 l_0_10_38)))
 (let ((?x19247 (* ?x19054 l_0_10_53)))
 (let ((?x19051 (* 2.0 l_0_10_37)))
 (let ((?x19245 (* ?x19051 l_0_10_52)))
 (let ((?x19048 (* 2.0 l_0_10_36)))
 (let ((?x19243 (* ?x19048 l_0_10_51)))
 (let ((?x19045 (* 2.0 l_0_10_35)))
 (let ((?x19241 (* ?x19045 l_0_10_50)))
 (let ((?x18943 (* 2.0 l_0_10_24)))
 (let ((?x19239 (* ?x18943 l_0_10_9)))
 (let ((?x18672 (* 2.0 l_0_10_23)))
 (let ((?x19237 (* ?x18672 l_0_10_8)))
 (let ((?x18938 (* 2.0 l_0_10_22)))
 (let ((?x19235 (* ?x18938 l_0_10_7)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x20709 (* ?x18176 l_0_10_87)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x20708 (* ?x18173 l_0_10_86)))
 (let ((?x20973 (- (- (- (* (* 2.0 l_0_10_10) l_0_10_25) ?x20708) ?x20709) (* (* 4.0 l_0_10_175) l_0_10_190))))
 (let ((?x20977 (- (- ?x20973 (* (* 4.0 l_0_10_176) l_0_10_191)) (* (* 4.0 l_0_10_177) l_0_10_192))))
 (let ((?x20982 (+ (+ (+ (- ?x20977 (* (* 4.0 l_0_10_178) l_0_10_193)) ?x19235) ?x19237) ?x19239)))
 (= (+ (+ (- (- (- (- ?x20982 ?x19241) ?x19243) ?x19245) ?x19247) ?x20733) ?x20735) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x19322 (* l_0_10_43 l_0_10_43)))
 (let ((?x19320 (* l_0_10_42 l_0_10_42)))
 (let ((?x19318 (* l_0_10_41 l_0_10_41)))
 (let ((?x19316 (* l_0_10_40 l_0_10_40)))
 (let ((?x19314 (* l_0_10_39 l_0_10_39)))
 (let ((?x19302 (* l_0_10_15 l_0_10_15)))
 (let ((?x19300 (* l_0_10_14 l_0_10_14)))
 (let ((?x19287 (* l_0_10_13 l_0_10_13)))
 (let ((?x3692 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x19287) ?x19300)))
 (let ((?x3663 (- (- (+ ?x3692 ?x19302) (* (* 2.0 l_0_10_179) l_0_10_179)) (* (* 2.0 l_0_10_180) l_0_10_180))))
 (let ((?x21004 (- (- ?x3663 (* (* 2.0 l_0_10_181) l_0_10_181)) (* (* 2.0 l_0_10_182) l_0_10_182))))
 (let ((?x21009 (- (- (- (- ?x21004 (* (* 2.0 l_0_10_183) l_0_10_183)) ?x19314) ?x19316) ?x19318)))
 (= (- (- ?x21009 ?x19320) ?x19322) 0.0))))))))))))))
(assert
 (let ((?x18079 (* 2.0 l_0_10_43)))
 (let ((?x19379 (* ?x18079 l_0_10_48)))
 (let ((?x18076 (* 2.0 l_0_10_42)))
 (let ((?x19377 (* ?x18076 l_0_10_47)))
 (let ((?x18073 (* 2.0 l_0_10_41)))
 (let ((?x19375 (* ?x18073 l_0_10_46)))
 (let ((?x18070 (* 2.0 l_0_10_40)))
 (let ((?x19373 (* ?x18070 l_0_10_45)))
 (let ((?x18067 (* 2.0 l_0_10_39)))
 (let ((?x19371 (* ?x18067 l_0_10_44)))
 (let ((?x18045 (* 2.0 l_0_10_15)))
 (let ((?x19359 (* ?x18045 l_0_10_20)))
 (let ((?x18039 (* 2.0 l_0_10_14)))
 (let ((?x19357 (* ?x18039 l_0_10_19)))
 (let ((?x18036 (* 2.0 l_0_10_13)))
 (let ((?x19355 (* ?x18036 l_0_10_18)))
 (let ((?x18033 (* 2.0 l_0_10_12)))
 (let ((?x19353 (* ?x18033 l_0_10_17)))
 (let ((?x3842 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x19353) ?x19355) ?x19357) ?x19359)))
 (let ((?x21031 (- (- ?x3842 (* (* 4.0 l_0_10_179) l_0_10_184)) (* (* 4.0 l_0_10_180) l_0_10_185))))
 (let ((?x21035 (- (- ?x21031 (* (* 4.0 l_0_10_181) l_0_10_186)) (* (* 4.0 l_0_10_182) l_0_10_187))))
 (let ((?x21040 (- (- (- (- ?x21035 (* (* 4.0 l_0_10_183) l_0_10_188)) ?x19371) ?x19373) ?x19375)))
 (= (- (- ?x21040 ?x19377) ?x19379) 0.0))))))))))))))))))))))))
(assert
 (let ((?x19560 (* l_0_10_49 l_0_10_49)))
 (let ((?x19558 (* l_0_10_48 l_0_10_48)))
 (let ((?x19556 (* l_0_10_47 l_0_10_47)))
 (let ((?x19554 (* l_0_10_46 l_0_10_46)))
 (let ((?x19552 (* l_0_10_45 l_0_10_45)))
 (let ((?x19550 (* l_0_10_44 l_0_10_44)))
 (let ((?x19548 (* l_0_10_21 l_0_10_21)))
 (let ((?x19546 (* l_0_10_20 l_0_10_20)))
 (let ((?x19544 (* l_0_10_19 l_0_10_19)))
 (let ((?x19542 (* l_0_10_18 l_0_10_18)))
 (let ((?x4097 (- (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x19542) (* (* 2.0 l_0_10_184) l_0_10_184))))
 (let ((?x4067 (- (- ?x4097 (* (* 2.0 l_0_10_185) l_0_10_185)) (* (* 2.0 l_0_10_186) l_0_10_186))))
 (let ((?x21051 (- (- ?x4067 (* (* 2.0 l_0_10_187) l_0_10_187)) (* (* 2.0 l_0_10_188) l_0_10_188))))
 (let ((?x21057 (+ (+ (+ (- ?x21051 (* (* 2.0 l_0_10_189) l_0_10_189)) ?x19544) ?x19546) ?x19548)))
 (= (- (- (- (- (- (- ?x21057 ?x19550) ?x19552) ?x19554) ?x19556) ?x19558) ?x19560) 0.0))))))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x19881 (* ?x18435 l_0_10_86)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x19879 (* ?x18432 l_0_10_58)))
 (let ((?x19688 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x19685 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x19682 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x19679 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x19676 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x19673 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x19670 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x19667 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x19664 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x18847 (* 2.0 l_0_10_18)))
 (let ((?x19661 (* ?x18847 l_0_10_24)))
 (let ((?x18607 (* 2.0 l_0_10_17)))
 (let ((?x19659 (* ?x18607 l_0_10_23)))
 (let ((?x18597 (* 2.0 l_0_10_16)))
 (let ((?x19651 (* ?x18597 l_0_10_22)))
 (let ((?x4177 (- (- (+ (+ ?x19651 ?x19659) ?x19661) (* (* 4.0 l_0_10_184) l_0_10_190)) (* (* 4.0 l_0_10_185) l_0_10_191))))
 (let ((?x21083 (- (- ?x4177 (* (* 4.0 l_0_10_186) l_0_10_192)) (* (* 4.0 l_0_10_187) l_0_10_193))))
 (let ((?x21089 (- (- ?x21083 (* (* 4.0 l_0_10_188) l_0_10_194)) (* (* 4.0 l_0_10_189) l_0_10_195))))
 (let ((?x21096 (- (- (- (- (+ (+ (+ ?x21089 ?x19664) ?x19667) ?x19670) ?x19673) ?x19676) ?x19679) ?x19682)))
 (= (+ (- (- (- ?x21096 ?x19685) ?x19688) ?x19879) ?x19881) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x19809 (* l_0_10_56 l_0_10_56)))
 (let ((?x19807 (* l_0_10_55 l_0_10_55)))
 (let ((?x19805 (* l_0_10_54 l_0_10_54)))
 (let ((?x19803 (* l_0_10_53 l_0_10_53)))
 (let ((?x19801 (* l_0_10_52 l_0_10_52)))
 (let ((?x19799 (* l_0_10_51 l_0_10_51)))
 (let ((?x19797 (* l_0_10_50 l_0_10_50)))
 (let ((?x19795 (* l_0_10_28 l_0_10_28)))
 (let ((?x19793 (* l_0_10_27 l_0_10_27)))
 (let ((?x19791 (* l_0_10_26 l_0_10_26)))
 (let ((?x19789 (* l_0_10_25 l_0_10_25)))
 (let ((?x19787 (* l_0_10_24 l_0_10_24)))
 (let ((?x19785 (* l_0_10_23 l_0_10_23)))
 (let ((?x19783 (* l_0_10_22 l_0_10_22)))
 (let ((?x4350 (- (* (* (- 2.0) l_0_10_190) l_0_10_190) (* (* 2.0 l_0_10_191) l_0_10_191))))
 (let ((?x4306 (- (- ?x4350 (* (* 2.0 l_0_10_192) l_0_10_192)) (* (* 2.0 l_0_10_193) l_0_10_193))))
 (let ((?x21123 (- (- ?x4306 (* (* 2.0 l_0_10_194) l_0_10_194)) (* (* 2.0 l_0_10_195) l_0_10_195))))
 (let ((?x21129 (+ (+ (+ (- ?x21123 (* (* 2.0 l_0_10_196) l_0_10_196)) ?x19783) ?x19785) ?x19787)))
 (let ((?x21136 (- (- (- (+ (+ (+ (+ ?x21129 ?x19789) ?x19791) ?x19793) ?x19795) ?x19797) ?x19799) ?x19801)))
 (= (- (- (- (- ?x21136 ?x19803) ?x19805) ?x19807) ?x19809) 0.0)))))))))))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x21228 (* ?x18435 l_0_10_88)))
 (let ((?x21226 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21223 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21220 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21217 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21214 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21211 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21208 (* ?x18432 l_0_10_60)))
 (let ((?x19657 (* (* 2.0 l_0_10_161) l_0_10_167)))
 (let ((?x19654 (* (* 2.0 l_0_10_160) l_0_10_166)))
 (let ((?x19649 (* (* 2.0 l_0_10_159) l_0_10_165)))
 (let ((?x19646 (* (* 2.0 l_0_10_158) l_0_10_164)))
 (let ((?x19643 (* (* 2.0 l_0_10_157) l_0_10_163)))
 (let ((?x19640 (* (* 2.0 l_0_10_156) l_0_10_162)))
 (let ((?x21170 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x21167 (* ?x19523 l_0_10_110)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21165 (* ?x19520 l_0_10_109)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21163 (* ?x19517 l_0_10_108)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x4455 (* ?x19514 l_0_10_107)))
 (let ((?x21168 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_106) ?x4455) ?x21163) ?x21165) ?x21167)))
 (let ((?x21171 (+ ?x21168 ?x21170)))
 (let ((?x21177 (- (- ?x21171 (* (* 2.0 l_0_10_128) l_0_10_134)) (* (* 2.0 l_0_10_129) l_0_10_135))))
 (let ((?x21183 (- (- ?x21177 (* (* 2.0 l_0_10_130) l_0_10_136)) (* (* 2.0 l_0_10_131) l_0_10_137))))
 (let ((?x21189 (- (- ?x21183 (* (* 2.0 l_0_10_132) l_0_10_138)) (* (* 2.0 l_0_10_133) l_0_10_139))))
 (let ((?x21197 (+ (- (- (- (- (- (- ?x21189 ?x19640) ?x19643) ?x19646) ?x19649) ?x19654) ?x19657) (* (* 2.0 l_0_10_184) l_0_10_190))))
 (let ((?x21201 (+ (+ ?x21197 (* (* 2.0 l_0_10_185) l_0_10_191)) (* (* 2.0 l_0_10_186) l_0_10_192))))
 (let ((?x21205 (+ (+ ?x21201 (* (* 2.0 l_0_10_187) l_0_10_193)) (* (* 2.0 l_0_10_188) l_0_10_194))))
 (let ((?x21215 (- (- (- (+ ?x21205 (* (* 2.0 l_0_10_189) l_0_10_195)) ?x21208) ?x21211) ?x21214)))
 (= (+ (- (- (- (- ?x21215 ?x21217) ?x21220) ?x21223) ?x21226) ?x21228) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x21310 (* ?x18435 l_0_10_91)))
 (let ((?x21226 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21223 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21220 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21217 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21214 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21211 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21302 (* ?x18432 l_0_10_63)))
 (let ((?x21170 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x21167 (* ?x19523 l_0_10_110)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21165 (* ?x19520 l_0_10_109)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21163 (* ?x19517 l_0_10_108)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x4455 (* ?x19514 l_0_10_107)))
 (let ((?x21300 (- (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_106) ?x4455) ?x21163) ?x21165) ?x21167)))
 (let ((?x21308 (+ (+ (+ (+ (+ (- (- ?x21300 ?x21170) ?x21302) ?x21211) ?x21214) ?x21217) ?x21220) ?x21223)))
 (= (+ (+ ?x21308 ?x21226) ?x21310) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x4723 (* ?x18432 l_0_10_72)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x4719 (* ?x19510 l_0_10_85)))
 (= (- ?x4719 ?x4723) 0.0))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21324 (* ?x18432 l_0_10_78)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x21323 (* ?x18173 l_0_10_85)))
 (= (- ?x21323 ?x21324) 0.0))))))
(assert
 (let ((?x20113 (* l_0_10_87 l_0_10_87)))
 (let ((?x20111 (* l_0_10_86 l_0_10_86)))
 (let ((?x21336 (+ (- (* (- l_0_10_58) l_0_10_58) (* l_0_10_59 l_0_10_59)) ?x20111)))
 (= (+ ?x21336 ?x20113) 0.0)))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x20318 (* ?x18623 l_0_10_89)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x20316 (* ?x18620 l_0_10_88)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20313 (* ?x18617 l_0_10_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_58) l_0_10_60) ?x20313) ?x20316) ?x20318) 0.0))))))))
(assert
 (let ((?x18623 (* 2.0 l_0_10_87)))
 (let ((?x20423 (* ?x18623 l_0_10_92)))
 (let ((?x18620 (* 2.0 l_0_10_86)))
 (let ((?x20420 (* ?x18620 l_0_10_91)))
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20416 (* ?x18617 l_0_10_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_58) l_0_10_63) ?x20416) ?x20420) ?x20423) 0.0))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20628 (* ?x18617 l_0_10_73)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20626 (* ?x18614 l_0_10_72)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x20602 (* ?x19514 l_0_10_87)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x20595 (* ?x19510 l_0_10_86)))
 (let ((?x20603 (+ ?x20595 ?x20602)))
 (= (- (- ?x20603 ?x20626) ?x20628) 0.0)))))))))))
(assert
 (let ((?x18617 (* 2.0 l_0_10_59)))
 (let ((?x20735 (* ?x18617 l_0_10_79)))
 (let ((?x18614 (* 2.0 l_0_10_58)))
 (let ((?x20733 (* ?x18614 l_0_10_78)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x20709 (* ?x18176 l_0_10_87)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x20708 (* ?x18173 l_0_10_86)))
 (let ((?x20710 (+ ?x20708 ?x20709)))
 (= (- (- ?x20710 ?x20733) ?x20735) 0.0)))))))))))
(assert
 (let ((?x21385 (* l_0_10_90 l_0_10_90)))
 (let ((?x21383 (* l_0_10_89 l_0_10_89)))
 (let ((?x21381 (* l_0_10_88 l_0_10_88)))
 (let ((?x21379 (* l_0_10_62 l_0_10_62)))
 (let ((?x21380 (- (- (* (- l_0_10_60) l_0_10_60) (* l_0_10_61 l_0_10_61)) ?x21379)))
 (= (+ (+ (+ ?x21380 ?x21381) ?x21383) ?x21385) 0.0)))))))
(assert
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x21412 (* ?x18871 l_0_10_93)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x21410 (* ?x18868 l_0_10_92)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x21408 (* ?x18865 l_0_10_91)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21406 (* ?x18862 l_0_10_65)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21404 (* ?x18859 l_0_10_64)))
 (let ((?x21411 (+ (+ (- (- (* (* (- 2.0) l_0_10_60) l_0_10_63) ?x21404) ?x21406) ?x21408) ?x21410)))
 (= (+ ?x21411 ?x21412) 0.0)))))))))))))
(assert
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21442 (* ?x18862 l_0_10_74)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21440 (* ?x18859 l_0_10_73)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21438 (* ?x18856 l_0_10_72)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21430 (* ?x19517 l_0_10_90)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x4747 (* ?x19514 l_0_10_89)))
 (let ((?x21437 (+ (+ (* (* 2.0 l_0_10_100) l_0_10_88) ?x4747) ?x21430)))
 (= (- (- (- ?x21437 ?x21438) ?x21440) ?x21442) 0.0)))))))))))))
(assert
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21470 (* ?x18862 l_0_10_80)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21468 (* ?x18859 l_0_10_79)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21466 (* ?x18856 l_0_10_78)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x21464 (* ?x18179 l_0_10_90)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x21462 (* ?x18176 l_0_10_89)))
 (let ((?x21465 (+ (+ (* (* 2.0 l_0_10_106) l_0_10_88) ?x21462) ?x21464)))
 (= (- (- (- ?x21465 ?x21466) ?x21468) ?x21470) 0.0)))))))))))))
(assert
 (let ((?x21511 (* l_0_10_94 l_0_10_94)))
 (let ((?x21509 (* l_0_10_93 l_0_10_93)))
 (let ((?x21507 (* l_0_10_92 l_0_10_92)))
 (let ((?x21505 (* l_0_10_91 l_0_10_91)))
 (let ((?x21503 (* l_0_10_66 l_0_10_66)))
 (let ((?x21501 (* l_0_10_65 l_0_10_65)))
 (let ((?x21502 (- (- (* (- l_0_10_63) l_0_10_63) (* l_0_10_64 l_0_10_64)) ?x21501)))
 (= (+ (+ (+ (+ (- ?x21502 ?x21503) ?x21505) ?x21507) ?x21509) ?x21511) 0.0)))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21542 (* ?x19129 l_0_10_75)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21540 (* ?x19126 l_0_10_74)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21538 (* ?x19123 l_0_10_73)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21536 (* ?x19120 l_0_10_72)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21534 (* ?x19520 l_0_10_94)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21532 (* ?x19517 l_0_10_93)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x21530 (* ?x19514 l_0_10_92)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x21523 (* ?x19510 l_0_10_91)))
 (let ((?x21543 (- (- (- (- (+ (+ (+ ?x21523 ?x21530) ?x21532) ?x21534) ?x21536) ?x21538) ?x21540) ?x21542)))
 (= ?x21543 0.0)))))))))))))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21582 (* ?x19129 l_0_10_81)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21580 (* ?x19126 l_0_10_80)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21578 (* ?x19123 l_0_10_79)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21576 (* ?x19120 l_0_10_78)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x21574 (* ?x18182 l_0_10_94)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x21572 (* ?x18179 l_0_10_93)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x21570 (* ?x18176 l_0_10_92)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x21569 (* ?x18173 l_0_10_91)))
 (let ((?x21583 (- (- (- (- (+ (+ (+ ?x21569 ?x21570) ?x21572) ?x21574) ?x21576) ?x21578) ?x21580) ?x21582)))
 (= ?x21583 0.0)))))))))))))))))))
(assert
 (let ((?x21633 (* l_0_10_77 l_0_10_77)))
 (let ((?x21631 (* l_0_10_76 l_0_10_76)))
 (let ((?x21629 (* l_0_10_75 l_0_10_75)))
 (let ((?x21627 (* l_0_10_74 l_0_10_74)))
 (let ((?x21625 (* l_0_10_73 l_0_10_73)))
 (let ((?x21623 (* l_0_10_72 l_0_10_72)))
 (let ((?x21621 (* l_0_10_105 l_0_10_105)))
 (let ((?x21619 (* l_0_10_104 l_0_10_104)))
 (let ((?x21617 (* l_0_10_103 l_0_10_103)))
 (let ((?x21615 (* l_0_10_102 l_0_10_102)))
 (let ((?x21616 (+ (+ (* l_0_10_100 l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x21615)))
 (let ((?x21622 (+ (+ (+ ?x21616 ?x21617) ?x21619) ?x21621)))
 (= (- (- (- (- (- (- ?x21622 ?x21623) ?x21625) ?x21627) ?x21629) ?x21631) ?x21633) 0.0))))))))))))))
(assert
 (let ((?x21226 (* (* 2.0 l_0_10_77) l_0_10_83)))
 (let ((?x21223 (* (* 2.0 l_0_10_76) l_0_10_82)))
 (let ((?x21220 (* (* 2.0 l_0_10_75) l_0_10_81)))
 (let ((?x21217 (* (* 2.0 l_0_10_74) l_0_10_80)))
 (let ((?x21214 (* (* 2.0 l_0_10_73) l_0_10_79)))
 (let ((?x21211 (* (* 2.0 l_0_10_72) l_0_10_78)))
 (let ((?x21170 (* (* 2.0 l_0_10_105) l_0_10_111)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x21167 (* ?x19523 l_0_10_110)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21165 (* ?x19520 l_0_10_109)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21163 (* ?x19517 l_0_10_108)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x4455 (* ?x19514 l_0_10_107)))
 (let ((?x21168 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_106) ?x4455) ?x21163) ?x21165) ?x21167)))
 (let ((?x21171 (+ ?x21168 ?x21170)))
 (= (- (- (- (- (- (- ?x21171 ?x21211) ?x21214) ?x21217) ?x21220) ?x21223) ?x21226) 0.0)))))))))))))))))))
(assert
 (let ((?x21692 (* l_0_10_84 l_0_10_84)))
 (let ((?x21690 (* l_0_10_83 l_0_10_83)))
 (let ((?x21688 (* l_0_10_82 l_0_10_82)))
 (let ((?x21686 (* l_0_10_81 l_0_10_81)))
 (let ((?x21684 (* l_0_10_80 l_0_10_80)))
 (let ((?x21682 (* l_0_10_79 l_0_10_79)))
 (let ((?x21680 (* l_0_10_78 l_0_10_78)))
 (let ((?x21678 (* l_0_10_112 l_0_10_112)))
 (let ((?x21676 (* l_0_10_111 l_0_10_111)))
 (let ((?x21674 (* l_0_10_110 l_0_10_110)))
 (let ((?x21672 (* l_0_10_109 l_0_10_109)))
 (let ((?x21670 (* l_0_10_108 l_0_10_108)))
 (let ((?x21671 (+ (+ (* l_0_10_106 l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21670)))
 (let ((?x21679 (+ (+ (+ (+ ?x21671 ?x21672) ?x21674) ?x21676) ?x21678)))
 (let ((?x21693 (- (- (- (- (- (- (- ?x21679 ?x21680) ?x21682) ?x21684) ?x21686) ?x21688) ?x21690) ?x21692)))
 (= ?x21693 0.0)))))))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x21228 (* ?x18435 l_0_10_88)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21208 (* ?x18432 l_0_10_60)))
 (let ((?x21709 (* l_0_10_202 l_0_10_202)))
 (let ((?x21707 (* l_0_10_201 l_0_10_201)))
 (let ((?x21705 (* l_0_10_200 l_0_10_200)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18203 (* ?x18042 l_0_10_144)))
 (let ((?x21704 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_116) ?x18203) (* (* 2.0 l_0_10_169) l_0_10_172))))
 (= (+ (- (- (- (- ?x21704 ?x21705) ?x21707) ?x21709) ?x21208) ?x21228) 0.0))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x21310 (* ?x18435 l_0_10_91)))
 (let ((?x21228 (* ?x18435 l_0_10_88)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21302 (* ?x18432 l_0_10_63)))
 (let ((?x21208 (* ?x18432 l_0_10_60)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18374 (* ?x18042 l_0_10_147)))
 (let ((?x21729 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_119) ?x18374) (* (* 2.0 l_0_10_169) l_0_10_175))))
 (let ((?x21735 (- (- ?x21729 (* (* 2.0 l_0_10_200) l_0_10_203)) (* (* 2.0 l_0_10_201) l_0_10_204))))
 (let ((?x21741 (- (- (+ (- ?x21735 (* (* 2.0 l_0_10_202) l_0_10_205)) ?x21208) ?x21302) ?x21228)))
 (= (+ ?x21741 ?x21310) 0.0)))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x18436 (* ?x18435 l_0_10_95)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x18433 (* ?x18432 l_0_10_67)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18409 (* ?x18042 l_0_10_151)))
 (let ((?x21763 (+ (- (* (* (- 2.0) l_0_10_113) l_0_10_123) ?x18409) (* (* 2.0 l_0_10_169) l_0_10_179))))
 (let ((?x21767 (- (- ?x21763 (* (* 2.0 l_0_10_200) l_0_10_207)) (* (* 2.0 l_0_10_201) l_0_10_208))))
 (= (+ (- (- ?x21767 (* (* 2.0 l_0_10_202) l_0_10_209)) ?x18433) ?x18436) 0.0))))))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x4723 (* ?x18432 l_0_10_72)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18422 (* ?x18042 l_0_10_156)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x4719 (* ?x19510 l_0_10_85)))
 (let ((?x5126 (+ (- (- ?x4719 (* (* 2.0 l_0_10_113) l_0_10_128)) ?x18422) (* (* 2.0 l_0_10_169) l_0_10_184))))
 (let ((?x21790 (- (- ?x5126 (* (* 2.0 l_0_10_200) l_0_10_212)) (* (* 2.0 l_0_10_201) l_0_10_213))))
 (= (- (- ?x21790 (* (* 2.0 l_0_10_202) l_0_10_214)) ?x4723) 0.0))))))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21324 (* ?x18432 l_0_10_78)))
 (let ((?x18042 (* 2.0 l_0_10_141)))
 (let ((?x18454 (* ?x18042 l_0_10_162)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x21323 (* ?x18173 l_0_10_85)))
 (let ((?x21819 (+ (- (- ?x21323 (* (* 2.0 l_0_10_113) l_0_10_134)) ?x18454) (* (* 2.0 l_0_10_169) l_0_10_190))))
 (let ((?x21823 (- (- ?x21819 (* (* 2.0 l_0_10_200) l_0_10_218)) (* (* 2.0 l_0_10_201) l_0_10_219))))
 (= (- (- ?x21823 (* (* 2.0 l_0_10_202) l_0_10_220)) ?x21324) 0.0))))))))))
(assert
 (let ((?x21385 (* l_0_10_90 l_0_10_90)))
 (let ((?x21383 (* l_0_10_89 l_0_10_89)))
 (let ((?x21381 (* l_0_10_88 l_0_10_88)))
 (let ((?x21379 (* l_0_10_62 l_0_10_62)))
 (let ((?x21377 (* l_0_10_61 l_0_10_61)))
 (let ((?x21389 (* l_0_10_60 l_0_10_60)))
 (let ((?x20352 (* l_0_10_174 l_0_10_174)))
 (let ((?x20346 (* l_0_10_173 l_0_10_173)))
 (let ((?x20340 (* l_0_10_172 l_0_10_172)))
 (let ((?x18706 (* l_0_10_146 l_0_10_146)))
 (let ((?x18704 (* l_0_10_145 l_0_10_145)))
 (let ((?x18703 (* l_0_10_144 l_0_10_144)))
 (let ((?x21852 (* l_0_10_118 l_0_10_118)))
 (let ((?x21853 (- (- (* (- l_0_10_116) l_0_10_116) (* l_0_10_117 l_0_10_117)) ?x21852)))
 (let ((?x21860 (- (+ (+ (+ (- (- (- ?x21853 ?x18703) ?x18704) ?x18706) ?x20340) ?x20346) ?x20352) ?x21389)))
 (= (+ (+ (+ (- (- ?x21860 ?x21377) ?x21379) ?x21381) ?x21383) ?x21385) 0.0)))))))))))))))))
(assert
 (let ((?x21385 (* l_0_10_90 l_0_10_90)))
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x21412 (* ?x18871 l_0_10_93)))
 (let ((?x21383 (* l_0_10_89 l_0_10_89)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x21410 (* ?x18868 l_0_10_92)))
 (let ((?x21381 (* l_0_10_88 l_0_10_88)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x21408 (* ?x18865 l_0_10_91)))
 (let ((?x21379 (* l_0_10_62 l_0_10_62)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21406 (* ?x18862 l_0_10_65)))
 (let ((?x21377 (* l_0_10_61 l_0_10_61)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21404 (* ?x18859 l_0_10_64)))
 (let ((?x21389 (* l_0_10_60 l_0_10_60)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21895 (* ?x18856 l_0_10_63)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18738 (* ?x18737 l_0_10_149)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18735 (* ?x18734 l_0_10_148)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18733 (* ?x18732 l_0_10_147)))
 (let ((?x21882 (- (* (* (- 2.0) l_0_10_116) l_0_10_119) (* (* 2.0 l_0_10_117) l_0_10_120))))
 (let ((?x21888 (- (- (- (- ?x21882 (* (* 2.0 l_0_10_118) l_0_10_121)) ?x18733) ?x18735) ?x18738)))
 (let ((?x21892 (+ (+ ?x21888 (* (* 2.0 l_0_10_172) l_0_10_175)) (* (* 2.0 l_0_10_173) l_0_10_176))))
 (let ((?x21898 (- (+ (- (+ ?x21892 (* (* 2.0 l_0_10_174) l_0_10_177)) ?x21895) ?x21389) ?x21404)))
 (let ((?x21905 (- (+ (- (+ (+ (- (+ ?x21898 ?x21377) ?x21406) ?x21379) ?x21408) ?x21381) ?x21410) ?x21383)))
 (= (- (+ ?x21905 ?x21412) ?x21385) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x18872 (* ?x18871 l_0_10_97)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x18869 (* ?x18868 l_0_10_96)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x18866 (* ?x18865 l_0_10_95)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x18863 (* ?x18862 l_0_10_69)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x18860 (* ?x18859 l_0_10_68)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x18857 (* ?x18856 l_0_10_67)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18800 (* ?x18737 l_0_10_153)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18798 (* ?x18734 l_0_10_152)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18796 (* ?x18732 l_0_10_151)))
 (let ((?x21933 (- (* (* (- 2.0) l_0_10_116) l_0_10_123) (* (* 2.0 l_0_10_117) l_0_10_124))))
 (let ((?x21938 (- (- (- (- ?x21933 (* (* 2.0 l_0_10_118) l_0_10_125)) ?x18796) ?x18798) ?x18800)))
 (let ((?x21942 (+ (+ ?x21938 (* (* 2.0 l_0_10_172) l_0_10_179)) (* (* 2.0 l_0_10_173) l_0_10_180))))
 (let ((?x21947 (- (- (- (+ ?x21942 (* (* 2.0 l_0_10_174) l_0_10_181)) ?x18857) ?x18860) ?x18863)))
 (= (+ (+ (+ ?x21947 ?x18866) ?x18869) ?x18872) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21442 (* ?x18862 l_0_10_74)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21440 (* ?x18859 l_0_10_73)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21438 (* ?x18856 l_0_10_72)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18830 (* ?x18737 l_0_10_158)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18826 (* ?x18734 l_0_10_157)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18824 (* ?x18732 l_0_10_156)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21430 (* ?x19517 l_0_10_90)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x4747 (* ?x19514 l_0_10_89)))
 (let ((?x21437 (+ (+ (* (* 2.0 l_0_10_100) l_0_10_88) ?x4747) ?x21430)))
 (let ((?x21969 (- (- ?x21437 (* (* 2.0 l_0_10_116) l_0_10_128)) (* (* 2.0 l_0_10_117) l_0_10_129))))
 (let ((?x21974 (- (- (- (- ?x21969 (* (* 2.0 l_0_10_118) l_0_10_130)) ?x18824) ?x18826) ?x18830)))
 (let ((?x21978 (+ (+ ?x21974 (* (* 2.0 l_0_10_172) l_0_10_184)) (* (* 2.0 l_0_10_173) l_0_10_185))))
 (let ((?x21983 (- (- (- (+ ?x21978 (* (* 2.0 l_0_10_174) l_0_10_186)) ?x21438) ?x21440) ?x21442)))
 (= ?x21983 0.0)))))))))))))))))))))))
(assert
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21470 (* ?x18862 l_0_10_80)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21468 (* ?x18859 l_0_10_79)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21466 (* ?x18856 l_0_10_78)))
 (let ((?x18737 (* 2.0 l_0_10_146)))
 (let ((?x18936 (* ?x18737 l_0_10_164)))
 (let ((?x18734 (* 2.0 l_0_10_145)))
 (let ((?x18934 (* ?x18734 l_0_10_163)))
 (let ((?x18732 (* 2.0 l_0_10_144)))
 (let ((?x18933 (* ?x18732 l_0_10_162)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x21464 (* ?x18179 l_0_10_90)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x21462 (* ?x18176 l_0_10_89)))
 (let ((?x21465 (+ (+ (* (* 2.0 l_0_10_106) l_0_10_88) ?x21462) ?x21464)))
 (let ((?x22000 (- (- ?x21465 (* (* 2.0 l_0_10_116) l_0_10_134)) (* (* 2.0 l_0_10_117) l_0_10_135))))
 (let ((?x22005 (- (- (- (- ?x22000 (* (* 2.0 l_0_10_118) l_0_10_136)) ?x18933) ?x18934) ?x18936)))
 (let ((?x22009 (+ (+ ?x22005 (* (* 2.0 l_0_10_172) l_0_10_190)) (* (* 2.0 l_0_10_173) l_0_10_191))))
 (let ((?x22014 (- (- (- (+ ?x22009 (* (* 2.0 l_0_10_174) l_0_10_192)) ?x21466) ?x21468) ?x21470)))
 (= ?x22014 0.0)))))))))))))))))))))))
(assert
 (let ((?x21511 (* l_0_10_94 l_0_10_94)))
 (let ((?x21509 (* l_0_10_93 l_0_10_93)))
 (let ((?x21507 (* l_0_10_92 l_0_10_92)))
 (let ((?x21505 (* l_0_10_91 l_0_10_91)))
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x21412 (* ?x18871 l_0_10_93)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x21410 (* ?x18868 l_0_10_92)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x21408 (* ?x18865 l_0_10_91)))
 (let ((?x21503 (* l_0_10_66 l_0_10_66)))
 (let ((?x21501 (* l_0_10_65 l_0_10_65)))
 (let ((?x21499 (* l_0_10_64 l_0_10_64)))
 (let ((?x4791 (* l_0_10_63 l_0_10_63)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21406 (* ?x18862 l_0_10_65)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21404 (* ?x18859 l_0_10_64)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21895 (* ?x18856 l_0_10_63)))
 (let ((?x20857 (* l_0_10_178 l_0_10_178)))
 (let ((?x20851 (* l_0_10_177 l_0_10_177)))
 (let ((?x20845 (* l_0_10_176 l_0_10_176)))
 (let ((?x20839 (* l_0_10_175 l_0_10_175)))
 (let ((?x18994 (* l_0_10_150 l_0_10_150)))
 (let ((?x18992 (* l_0_10_149 l_0_10_149)))
 (let ((?x18990 (* l_0_10_148 l_0_10_148)))
 (let ((?x18988 (* l_0_10_147 l_0_10_147)))
 (let ((?x22031 (* l_0_10_122 l_0_10_122)))
 (let ((?x22029 (* l_0_10_121 l_0_10_121)))
 (let ((?x22030 (- (- (* (- l_0_10_119) l_0_10_119) (* l_0_10_120 l_0_10_120)) ?x22029)))
 (let ((?x22038 (+ (+ (- (- (- (- (- ?x22030 ?x22031) ?x18988) ?x18990) ?x18992) ?x18994) ?x20839) ?x20845)))
 (let ((?x22045 (- (- (+ (+ (+ (+ (+ ?x22038 ?x20851) ?x20857) ?x21895) ?x21404) ?x21406) ?x4791) ?x21499)))
 (let ((?x22052 (+ (+ (- (- (- (- (- ?x22045 ?x21501) ?x21503) ?x21408) ?x21410) ?x21412) ?x21505) ?x21507)))
 (= (+ (+ ?x22052 ?x21509) ?x21511) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19142 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x19139 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x19136 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x19133 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x18871 (* 2.0 l_0_10_90)))
 (let ((?x18872 (* ?x18871 l_0_10_97)))
 (let ((?x18868 (* 2.0 l_0_10_89)))
 (let ((?x18869 (* ?x18868 l_0_10_96)))
 (let ((?x18865 (* 2.0 l_0_10_88)))
 (let ((?x18866 (* ?x18865 l_0_10_95)))
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x19130 (* ?x19129 l_0_10_70)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x19127 (* ?x19126 l_0_10_69)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x19124 (* ?x19123 l_0_10_68)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x19121 (* ?x19120 l_0_10_67)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x18863 (* ?x18862 l_0_10_69)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x18860 (* ?x18859 l_0_10_68)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x18857 (* ?x18856 l_0_10_67)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19043 (* ?x19042 l_0_10_154)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19040 (* ?x19039 l_0_10_153)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19037 (* ?x19036 l_0_10_152)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19034 (* ?x19033 l_0_10_151)))
 (let ((?x5891 (- (* (* (- 2.0) l_0_10_119) l_0_10_123) (* (* 2.0 l_0_10_120) l_0_10_124))))
 (let ((?x22069 (- (- ?x5891 (* (* 2.0 l_0_10_121) l_0_10_125)) (* (* 2.0 l_0_10_122) l_0_10_126))))
 (let ((?x22075 (+ (- (- (- (- ?x22069 ?x19034) ?x19037) ?x19040) ?x19043) (* (* 2.0 l_0_10_175) l_0_10_179))))
 (let ((?x22079 (+ (+ ?x22075 (* (* 2.0 l_0_10_176) l_0_10_180)) (* (* 2.0 l_0_10_177) l_0_10_181))))
 (let ((?x22084 (+ (+ (+ (+ ?x22079 (* (* 2.0 l_0_10_178) l_0_10_182)) ?x18857) ?x18860) ?x18863)))
 (let ((?x22091 (- (- (- (- (- (- (- ?x22084 ?x19121) ?x19124) ?x19127) ?x19130) ?x18866) ?x18869) ?x18872)))
 (= (+ (+ (+ (+ ?x22091 ?x19133) ?x19136) ?x19139) ?x19142) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21542 (* ?x19129 l_0_10_75)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21540 (* ?x19126 l_0_10_74)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21538 (* ?x19123 l_0_10_73)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21536 (* ?x19120 l_0_10_72)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21442 (* ?x18862 l_0_10_74)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21440 (* ?x18859 l_0_10_73)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21438 (* ?x18856 l_0_10_72)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19093 (* ?x19042 l_0_10_159)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19089 (* ?x19039 l_0_10_158)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19085 (* ?x19036 l_0_10_157)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19081 (* ?x19033 l_0_10_156)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21534 (* ?x19520 l_0_10_94)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21532 (* ?x19517 l_0_10_93)))
 (let ((?x21430 (* ?x19517 l_0_10_90)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x21530 (* ?x19514 l_0_10_92)))
 (let ((?x4747 (* ?x19514 l_0_10_89)))
 (let ((?x19510 (* 2.0 l_0_10_100)))
 (let ((?x21523 (* ?x19510 l_0_10_91)))
 (let ((?x22123 (- (+ (- (+ (* (* (- 2.0) l_0_10_100) l_0_10_88) ?x21523) ?x4747) ?x21530) ?x21430)))
 (let ((?x22130 (- (- (+ (+ ?x22123 ?x21532) ?x21534) (* (* 2.0 l_0_10_119) l_0_10_128)) (* (* 2.0 l_0_10_120) l_0_10_129))))
 (let ((?x22134 (- (- ?x22130 (* (* 2.0 l_0_10_121) l_0_10_130)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x22140 (+ (- (- (- (- ?x22134 ?x19081) ?x19085) ?x19089) ?x19093) (* (* 2.0 l_0_10_175) l_0_10_184))))
 (let ((?x22144 (+ (+ ?x22140 (* (* 2.0 l_0_10_176) l_0_10_185)) (* (* 2.0 l_0_10_177) l_0_10_186))))
 (let ((?x22149 (+ (+ (+ (+ ?x22144 (* (* 2.0 l_0_10_178) l_0_10_187)) ?x21438) ?x21440) ?x21442)))
 (= (- (- (- (- ?x22149 ?x21536) ?x21538) ?x21540) ?x21542) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21582 (* ?x19129 l_0_10_81)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21580 (* ?x19126 l_0_10_80)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21578 (* ?x19123 l_0_10_79)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21576 (* ?x19120 l_0_10_78)))
 (let ((?x18862 (* 2.0 l_0_10_62)))
 (let ((?x21470 (* ?x18862 l_0_10_80)))
 (let ((?x18859 (* 2.0 l_0_10_61)))
 (let ((?x21468 (* ?x18859 l_0_10_79)))
 (let ((?x18856 (* 2.0 l_0_10_60)))
 (let ((?x21466 (* ?x18856 l_0_10_78)))
 (let ((?x19042 (* 2.0 l_0_10_150)))
 (let ((?x19233 (* ?x19042 l_0_10_165)))
 (let ((?x19039 (* 2.0 l_0_10_149)))
 (let ((?x19231 (* ?x19039 l_0_10_164)))
 (let ((?x19036 (* 2.0 l_0_10_148)))
 (let ((?x19214 (* ?x19036 l_0_10_163)))
 (let ((?x19033 (* 2.0 l_0_10_147)))
 (let ((?x19210 (* ?x19033 l_0_10_162)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x21574 (* ?x18182 l_0_10_94)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x21572 (* ?x18179 l_0_10_93)))
 (let ((?x21464 (* ?x18179 l_0_10_90)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x21570 (* ?x18176 l_0_10_92)))
 (let ((?x21462 (* ?x18176 l_0_10_89)))
 (let ((?x18173 (* 2.0 l_0_10_106)))
 (let ((?x21569 (* ?x18173 l_0_10_91)))
 (let ((?x22172 (- (+ (- (+ (* (* (- 2.0) l_0_10_106) l_0_10_88) ?x21569) ?x21462) ?x21570) ?x21464)))
 (let ((?x22178 (- (- (+ (+ ?x22172 ?x21572) ?x21574) (* (* 2.0 l_0_10_119) l_0_10_134)) (* (* 2.0 l_0_10_120) l_0_10_135))))
 (let ((?x22182 (- (- ?x22178 (* (* 2.0 l_0_10_121) l_0_10_136)) (* (* 2.0 l_0_10_122) l_0_10_137))))
 (let ((?x22188 (+ (- (- (- (- ?x22182 ?x19210) ?x19214) ?x19231) ?x19233) (* (* 2.0 l_0_10_175) l_0_10_190))))
 (let ((?x22192 (+ (+ ?x22188 (* (* 2.0 l_0_10_176) l_0_10_191)) (* (* 2.0 l_0_10_177) l_0_10_192))))
 (let ((?x22197 (+ (+ (+ (+ ?x22192 (* (* 2.0 l_0_10_178) l_0_10_193)) ?x21466) ?x21468) ?x21470)))
 (= (- (- (- (- ?x22197 ?x21576) ?x21578) ?x21580) ?x21582) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19399 (* l_0_10_99 l_0_10_99)))
 (let ((?x19397 (* l_0_10_98 l_0_10_98)))
 (let ((?x19395 (* l_0_10_97 l_0_10_97)))
 (let ((?x19393 (* l_0_10_96 l_0_10_96)))
 (let ((?x19391 (* l_0_10_95 l_0_10_95)))
 (let ((?x19389 (* l_0_10_71 l_0_10_71)))
 (let ((?x19387 (* l_0_10_70 l_0_10_70)))
 (let ((?x19385 (* l_0_10_69 l_0_10_69)))
 (let ((?x19383 (* l_0_10_68 l_0_10_68)))
 (let ((?x19381 (* l_0_10_67 l_0_10_67)))
 (let ((?x3774 (* l_0_10_183 l_0_10_183)))
 (let ((?x3764 (* l_0_10_182 l_0_10_182)))
 (let ((?x3723 (* l_0_10_181 l_0_10_181)))
 (let ((?x21015 (* l_0_10_180 l_0_10_180)))
 (let ((?x3716 (* l_0_10_179 l_0_10_179)))
 (let ((?x19312 (* l_0_10_155 l_0_10_155)))
 (let ((?x19310 (* l_0_10_154 l_0_10_154)))
 (let ((?x19308 (* l_0_10_153 l_0_10_153)))
 (let ((?x19306 (* l_0_10_152 l_0_10_152)))
 (let ((?x19304 (* l_0_10_151 l_0_10_151)))
 (let ((?x22207 (* l_0_10_127 l_0_10_127)))
 (let ((?x6152 (* l_0_10_126 l_0_10_126)))
 (let ((?x6153 (* l_0_10_125 l_0_10_125)))
 (let ((?x6150 (- (- (* (- l_0_10_123) l_0_10_123) (* l_0_10_124 l_0_10_124)) ?x6153)))
 (let ((?x22213 (- (- (- (- (- (- (- ?x6150 ?x6152) ?x22207) ?x19304) ?x19306) ?x19308) ?x19310) ?x19312)))
 (let ((?x22220 (- (- (+ (+ (+ (+ (+ ?x22213 ?x3716) ?x21015) ?x3723) ?x3764) ?x3774) ?x19381) ?x19383)))
 (let ((?x22227 (+ (+ (+ (+ (- (- (- ?x22220 ?x19385) ?x19387) ?x19389) ?x19391) ?x19393) ?x19395) ?x19397)))
 (= (+ ?x22227 ?x19399) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x19570 (* ?x18249 l_0_10_76)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x19568 (* ?x18246 l_0_10_75)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x19566 (* ?x18243 l_0_10_74)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x19564 (* ?x18240 l_0_10_73)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x19562 (* ?x18237 l_0_10_72)))
 (let ((?x18217 (* 2.0 l_0_10_155)))
 (let ((?x19369 (* ?x18217 l_0_10_160)))
 (let ((?x18214 (* 2.0 l_0_10_154)))
 (let ((?x19367 (* ?x18214 l_0_10_159)))
 (let ((?x18211 (* 2.0 l_0_10_153)))
 (let ((?x19365 (* ?x18211 l_0_10_158)))
 (let ((?x18208 (* 2.0 l_0_10_152)))
 (let ((?x19363 (* ?x18208 l_0_10_157)))
 (let ((?x18205 (* 2.0 l_0_10_151)))
 (let ((?x19361 (* ?x18205 l_0_10_156)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x19524 (* ?x19523 l_0_10_99)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x19521 (* ?x19520 l_0_10_98)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x19518 (* ?x19517 l_0_10_97)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x19515 (* ?x19514 l_0_10_96)))
 (let ((?x19525 (+ (+ (+ (+ (* (* 2.0 l_0_10_100) l_0_10_95) ?x19515) ?x19518) ?x19521) ?x19524)))
 (let ((?x6283 (- (- ?x19525 (* (* 2.0 l_0_10_123) l_0_10_128)) (* (* 2.0 l_0_10_124) l_0_10_129))))
 (let ((?x22240 (- (- ?x6283 (* (* 2.0 l_0_10_125) l_0_10_130)) (* (* 2.0 l_0_10_126) l_0_10_131))))
 (let ((?x22245 (- (- (- (- ?x22240 (* (* 2.0 l_0_10_127) l_0_10_132)) ?x19361) ?x19363) ?x19365)))
 (let ((?x22251 (+ (+ (- (- ?x22245 ?x19367) ?x19369) (* (* 2.0 l_0_10_179) l_0_10_184)) (* (* 2.0 l_0_10_180) l_0_10_185))))
 (let ((?x22255 (+ (+ ?x22251 (* (* 2.0 l_0_10_181) l_0_10_186)) (* (* 2.0 l_0_10_182) l_0_10_187))))
 (let ((?x22260 (- (- (- (+ ?x22255 (* (* 2.0 l_0_10_183) l_0_10_188)) ?x19562) ?x19564) ?x19566)))
 (= (- (- ?x22260 ?x19568) ?x19570) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21633 (* l_0_10_77 l_0_10_77)))
 (let ((?x21631 (* l_0_10_76 l_0_10_76)))
 (let ((?x21629 (* l_0_10_75 l_0_10_75)))
 (let ((?x21627 (* l_0_10_74 l_0_10_74)))
 (let ((?x21625 (* l_0_10_73 l_0_10_73)))
 (let ((?x21623 (* l_0_10_72 l_0_10_72)))
 (let ((?x3709 (* l_0_10_189 l_0_10_189)))
 (let ((?x4167 (* l_0_10_188 l_0_10_188)))
 (let ((?x21073 (* l_0_10_187 l_0_10_187)))
 (let ((?x3712 (* l_0_10_186 l_0_10_186)))
 (let ((?x4140 (* l_0_10_185 l_0_10_185)))
 (let ((?x4134 (* l_0_10_184 l_0_10_184)))
 (let ((?x19538 (* l_0_10_161 l_0_10_161)))
 (let ((?x19536 (* l_0_10_160 l_0_10_160)))
 (let ((?x19532 (* l_0_10_159 l_0_10_159)))
 (let ((?x19530 (* l_0_10_158 l_0_10_158)))
 (let ((?x19528 (* l_0_10_157 l_0_10_157)))
 (let ((?x19526 (* l_0_10_156 l_0_10_156)))
 (let ((?x22303 (* l_0_10_133 l_0_10_133)))
 (let ((?x22301 (* l_0_10_132 l_0_10_132)))
 (let ((?x22299 (* l_0_10_131 l_0_10_131)))
 (let ((?x22297 (* l_0_10_130 l_0_10_130)))
 (let ((?x22295 (* l_0_10_129 l_0_10_129)))
 (let ((?x22293 (* l_0_10_128 l_0_10_128)))
 (let ((?x21621 (* l_0_10_105 l_0_10_105)))
 (let ((?x21619 (* l_0_10_104 l_0_10_104)))
 (let ((?x21617 (* l_0_10_103 l_0_10_103)))
 (let ((?x21615 (* l_0_10_102 l_0_10_102)))
 (let ((?x21616 (+ (+ (* l_0_10_100 l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x21615)))
 (let ((?x21622 (+ (+ (+ ?x21616 ?x21617) ?x21619) ?x21621)))
 (let ((?x22305 (- (- (- (- (- (- (- ?x21622 ?x22293) ?x22295) ?x22297) ?x22299) ?x22301) ?x22303) ?x19526)))
 (let ((?x22312 (+ (+ (- (- (- (- (- ?x22305 ?x19528) ?x19530) ?x19532) ?x19536) ?x19538) ?x4134) ?x4140)))
 (let ((?x22319 (- (- (- (+ (+ (+ (+ ?x22312 ?x3712) ?x21073) ?x4167) ?x3709) ?x21623) ?x21625) ?x21627)))
 (= (- (- (- ?x22319 ?x21629) ?x21631) ?x21633) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21692 (* l_0_10_84 l_0_10_84)))
 (let ((?x21690 (* l_0_10_83 l_0_10_83)))
 (let ((?x21688 (* l_0_10_82 l_0_10_82)))
 (let ((?x21686 (* l_0_10_81 l_0_10_81)))
 (let ((?x21684 (* l_0_10_80 l_0_10_80)))
 (let ((?x21682 (* l_0_10_79 l_0_10_79)))
 (let ((?x21680 (* l_0_10_78 l_0_10_78)))
 (let ((?x3911 (* l_0_10_196 l_0_10_196)))
 (let ((?x4451 (* l_0_10_195 l_0_10_195)))
 (let ((?x4419 (* l_0_10_194 l_0_10_194)))
 (let ((?x4418 (* l_0_10_193 l_0_10_193)))
 (let ((?x21150 (* l_0_10_192 l_0_10_192)))
 (let ((?x21144 (* l_0_10_191 l_0_10_191)))
 (let ((?x21142 (* l_0_10_190 l_0_10_190)))
 (let ((?x19781 (* l_0_10_168 l_0_10_168)))
 (let ((?x19779 (* l_0_10_167 l_0_10_167)))
 (let ((?x19777 (* l_0_10_166 l_0_10_166)))
 (let ((?x19775 (* l_0_10_165 l_0_10_165)))
 (let ((?x19773 (* l_0_10_164 l_0_10_164)))
 (let ((?x19771 (* l_0_10_163 l_0_10_163)))
 (let ((?x19770 (* l_0_10_162 l_0_10_162)))
 (let ((?x22329 (* l_0_10_140 l_0_10_140)))
 (let ((?x22327 (* l_0_10_139 l_0_10_139)))
 (let ((?x22325 (* l_0_10_138 l_0_10_138)))
 (let ((?x6406 (* l_0_10_137 l_0_10_137)))
 (let ((?x6542 (* l_0_10_136 l_0_10_136)))
 (let ((?x6540 (* l_0_10_135 l_0_10_135)))
 (let ((?x6629 (* l_0_10_134 l_0_10_134)))
 (let ((?x21678 (* l_0_10_112 l_0_10_112)))
 (let ((?x21676 (* l_0_10_111 l_0_10_111)))
 (let ((?x21674 (* l_0_10_110 l_0_10_110)))
 (let ((?x21672 (* l_0_10_109 l_0_10_109)))
 (let ((?x21670 (* l_0_10_108 l_0_10_108)))
 (let ((?x21671 (+ (+ (* l_0_10_106 l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21670)))
 (let ((?x21679 (+ (+ (+ (+ ?x21671 ?x21672) ?x21674) ?x21676) ?x21678)))
 (let ((?x22330 (- (- (- (- (- (- (- ?x21679 ?x6629) ?x6540) ?x6542) ?x6406) ?x22325) ?x22327) ?x22329)))
 (let ((?x22337 (- (- (- (- (- (- (- ?x22330 ?x19770) ?x19771) ?x19773) ?x19775) ?x19777) ?x19779) ?x19781)))
 (let ((?x22344 (+ (+ (+ (+ (+ (+ (+ ?x22337 ?x21142) ?x21144) ?x21150) ?x4418) ?x4419) ?x4451) ?x3911)))
 (let ((?x22351 (- (- (- (- (- (- (- ?x22344 ?x21680) ?x21682) ?x21684) ?x21686) ?x21688) ?x21690) ?x21692)))
 (= ?x22351 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x21310 (* ?x18435 l_0_10_91)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21302 (* ?x18432 l_0_10_63)))
 (let ((?x22362 (* l_0_10_206 l_0_10_206)))
 (let ((?x22360 (* l_0_10_205 l_0_10_205)))
 (let ((?x22361 (- (- (* (- l_0_10_203) l_0_10_203) (* l_0_10_204 l_0_10_204)) ?x22360)))
 (= (- (+ (- ?x22361 ?x22362) ?x21302) ?x21310) 0.0)))))))))
(assert
 (let ((?x18435 (* 2.0 l_0_10_85)))
 (let ((?x18436 (* ?x18435 l_0_10_95)))
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x18433 (* ?x18432 l_0_10_67)))
 (let ((?x22384 (- (* (* (- 2.0) l_0_10_203) l_0_10_207) (* (* 2.0 l_0_10_204) l_0_10_208))))
 (let ((?x22390 (- (- ?x22384 (* (* 2.0 l_0_10_205) l_0_10_209)) (* (* 2.0 l_0_10_206) l_0_10_210))))
 (= (- (+ ?x22390 ?x18433) ?x18436) 0.0))))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x4723 (* ?x18432 l_0_10_72)))
 (let ((?x22413 (- (* (* (- 2.0) l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_203) l_0_10_212))))
 (let ((?x22417 (- (- ?x22413 (* (* 2.0 l_0_10_204) l_0_10_213)) (* (* 2.0 l_0_10_205) l_0_10_214))))
 (= (+ (- ?x22417 (* (* 2.0 l_0_10_206) l_0_10_215)) ?x4723) 0.0))))))
(assert
 (let ((?x18432 (* 2.0 l_0_10_57)))
 (let ((?x21324 (* ?x18432 l_0_10_78)))
 (let ((?x22435 (- (* (* (- 2.0) l_0_10_106) l_0_10_85) (* (* 2.0 l_0_10_203) l_0_10_218))))
 (let ((?x22439 (- (- ?x22435 (* (* 2.0 l_0_10_204) l_0_10_219)) (* (* 2.0 l_0_10_205) l_0_10_220))))
 (= (+ (- ?x22439 (* (* 2.0 l_0_10_206) l_0_10_221)) ?x21324) 0.0))))))
(assert
 (let ((?x21511 (* l_0_10_94 l_0_10_94)))
 (let ((?x21509 (* l_0_10_93 l_0_10_93)))
 (let ((?x21507 (* l_0_10_92 l_0_10_92)))
 (let ((?x21505 (* l_0_10_91 l_0_10_91)))
 (let ((?x21503 (* l_0_10_66 l_0_10_66)))
 (let ((?x21501 (* l_0_10_65 l_0_10_65)))
 (let ((?x22458 (+ (+ (+ (* l_0_10_63 l_0_10_63) (* l_0_10_64 l_0_10_64)) ?x21501) ?x21503)))
 (= (- (- (- (- ?x22458 ?x21505) ?x21507) ?x21509) ?x21511) 0.0)))))))))
(assert
 (let ((?x19142 (* (* 2.0 l_0_10_94) l_0_10_98)))
 (let ((?x19139 (* (* 2.0 l_0_10_93) l_0_10_97)))
 (let ((?x19136 (* (* 2.0 l_0_10_92) l_0_10_96)))
 (let ((?x19133 (* (* 2.0 l_0_10_91) l_0_10_95)))
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x19130 (* ?x19129 l_0_10_70)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x19127 (* ?x19126 l_0_10_69)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x19124 (* ?x19123 l_0_10_68)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x19121 (* ?x19120 l_0_10_67)))
 (let ((?x22475 (- (- (- (- (+ (+ (+ ?x19121 ?x19124) ?x19127) ?x19130) ?x19133) ?x19136) ?x19139) ?x19142)))
 (= ?x22475 0.0)))))))))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21542 (* ?x19129 l_0_10_75)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21540 (* ?x19126 l_0_10_74)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21538 (* ?x19123 l_0_10_73)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21536 (* ?x19120 l_0_10_72)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x21534 (* ?x19520 l_0_10_94)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x21532 (* ?x19517 l_0_10_93)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x21530 (* ?x19514 l_0_10_92)))
 (let ((?x22489 (+ (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_91) ?x21530) ?x21532) ?x21534) ?x21536)))
 (= (+ (+ (+ ?x22489 ?x21538) ?x21540) ?x21542) 0.0)))))))))))))))))
(assert
 (let ((?x19129 (* 2.0 l_0_10_66)))
 (let ((?x21582 (* ?x19129 l_0_10_81)))
 (let ((?x19126 (* 2.0 l_0_10_65)))
 (let ((?x21580 (* ?x19126 l_0_10_80)))
 (let ((?x19123 (* 2.0 l_0_10_64)))
 (let ((?x21578 (* ?x19123 l_0_10_79)))
 (let ((?x19120 (* 2.0 l_0_10_63)))
 (let ((?x21576 (* ?x19120 l_0_10_78)))
 (let ((?x18182 (* 2.0 l_0_10_109)))
 (let ((?x21574 (* ?x18182 l_0_10_94)))
 (let ((?x18179 (* 2.0 l_0_10_108)))
 (let ((?x21572 (* ?x18179 l_0_10_93)))
 (let ((?x18176 (* 2.0 l_0_10_107)))
 (let ((?x21570 (* ?x18176 l_0_10_92)))
 (let ((?x7123 (+ (- (- (- (* (* (- 2.0) l_0_10_106) l_0_10_91) ?x21570) ?x21572) ?x21574) ?x21576)))
 (= (+ (+ (+ ?x7123 ?x21578) ?x21580) ?x21582) 0.0)))))))))))))))))
(assert
 (let ((?x19399 (* l_0_10_99 l_0_10_99)))
 (let ((?x19397 (* l_0_10_98 l_0_10_98)))
 (let ((?x19395 (* l_0_10_97 l_0_10_97)))
 (let ((?x19393 (* l_0_10_96 l_0_10_96)))
 (let ((?x19391 (* l_0_10_95 l_0_10_95)))
 (let ((?x19389 (* l_0_10_71 l_0_10_71)))
 (let ((?x19387 (* l_0_10_70 l_0_10_70)))
 (let ((?x19385 (* l_0_10_69 l_0_10_69)))
 (let ((?x7179 (+ (+ (+ (* l_0_10_67 l_0_10_67) (* l_0_10_68 l_0_10_68)) ?x19385) ?x19387)))
 (= (- (- (- (- (- (+ ?x7179 ?x19389) ?x19391) ?x19393) ?x19395) ?x19397) ?x19399) 0.0)))))))))))
(assert
 (let ((?x18249 (* 2.0 l_0_10_71)))
 (let ((?x19570 (* ?x18249 l_0_10_76)))
 (let ((?x18246 (* 2.0 l_0_10_70)))
 (let ((?x19568 (* ?x18246 l_0_10_75)))
 (let ((?x18243 (* 2.0 l_0_10_69)))
 (let ((?x19566 (* ?x18243 l_0_10_74)))
 (let ((?x18240 (* 2.0 l_0_10_68)))
 (let ((?x19564 (* ?x18240 l_0_10_73)))
 (let ((?x18237 (* 2.0 l_0_10_67)))
 (let ((?x19562 (* ?x18237 l_0_10_72)))
 (let ((?x19523 (* 2.0 l_0_10_104)))
 (let ((?x19524 (* ?x19523 l_0_10_99)))
 (let ((?x19520 (* 2.0 l_0_10_103)))
 (let ((?x19521 (* ?x19520 l_0_10_98)))
 (let ((?x19517 (* 2.0 l_0_10_102)))
 (let ((?x19518 (* ?x19517 l_0_10_97)))
 (let ((?x19514 (* 2.0 l_0_10_101)))
 (let ((?x19515 (* ?x19514 l_0_10_96)))
 (let ((?x22528 (- (- (- (- (* (* (- 2.0) l_0_10_100) l_0_10_95) ?x19515) ?x19518) ?x19521) ?x19524)))
 (= (+ (+ (+ (+ (+ ?x22528 ?x19562) ?x19564) ?x19566) ?x19568) ?x19570) 0.0)))))))))))))))))))))
(assert
 (let ((?x21633 (* l_0_10_77 l_0_10_77)))
 (let ((?x21631 (* l_0_10_76 l_0_10_76)))
 (let ((?x21629 (* l_0_10_75 l_0_10_75)))
 (let ((?x21627 (* l_0_10_74 l_0_10_74)))
 (let ((?x21625 (* l_0_10_73 l_0_10_73)))
 (let ((?x21623 (* l_0_10_72 l_0_10_72)))
 (let ((?x21621 (* l_0_10_105 l_0_10_105)))
 (let ((?x21619 (* l_0_10_104 l_0_10_104)))
 (let ((?x21617 (* l_0_10_103 l_0_10_103)))
 (let ((?x21615 (* l_0_10_102 l_0_10_102)))
 (let ((?x7197 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x21615)))
 (let ((?x22545 (+ (+ (+ (+ (- (- (- ?x7197 ?x21617) ?x21619) ?x21621) ?x21623) ?x21625) ?x21627) ?x21629)))
 (= (+ (+ ?x22545 ?x21631) ?x21633) 0.0))))))))))))))
(assert
 (let ((?x21692 (* l_0_10_84 l_0_10_84)))
 (let ((?x21690 (* l_0_10_83 l_0_10_83)))
 (let ((?x21688 (* l_0_10_82 l_0_10_82)))
 (let ((?x21686 (* l_0_10_81 l_0_10_81)))
 (let ((?x21684 (* l_0_10_80 l_0_10_80)))
 (let ((?x21682 (* l_0_10_79 l_0_10_79)))
 (let ((?x21680 (* l_0_10_78 l_0_10_78)))
 (let ((?x21678 (* l_0_10_112 l_0_10_112)))
 (let ((?x21676 (* l_0_10_111 l_0_10_111)))
 (let ((?x21674 (* l_0_10_110 l_0_10_110)))
 (let ((?x21672 (* l_0_10_109 l_0_10_109)))
 (let ((?x21670 (* l_0_10_108 l_0_10_108)))
 (let ((?x22568 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x21670)))
 (let ((?x22575 (+ (+ (+ (- (- (- (- ?x22568 ?x21672) ?x21674) ?x21676) ?x21678) ?x21680) ?x21682) ?x21684)))
 (= (+ (+ (+ (+ ?x22575 ?x21686) ?x21688) ?x21690) ?x21692) 0.0))))))))))))))))
(assert
 (= (* (- l_0_10_197) l_0_10_197) 0.0))
(assert
 (= (* (* (- 2.0) l_0_10_197) l_0_10_207) 0.0))
(assert
 (= (* (* (- 2.0) l_0_10_197) l_0_10_212) 0.0))
(assert
 (let ((?x22622 (* l_0_10_211 l_0_10_211)))
 (let ((?x22620 (* l_0_10_210 l_0_10_210)))
 (let ((?x22618 (* l_0_10_209 l_0_10_209)))
 (let ((?x22619 (- (- (* (- l_0_10_207) l_0_10_207) (* l_0_10_208 l_0_10_208)) ?x22618)))
 (= (- (- ?x22619 ?x22620) ?x22622) 0.0))))))
(assert
 (let ((?x22645 (- (* (* (- 2.0) l_0_10_207) l_0_10_212) (* (* 2.0 l_0_10_208) l_0_10_213))))
 (let ((?x22649 (- (- ?x22645 (* (* 2.0 l_0_10_209) l_0_10_214)) (* (* 2.0 l_0_10_210) l_0_10_215))))
 (= (- ?x22649 (* (* 2.0 l_0_10_211) l_0_10_216)) 0.0))))
(assert
 (let ((?x22683 (* l_0_10_217 l_0_10_217)))
 (let ((?x22681 (* l_0_10_216 l_0_10_216)))
 (let ((?x22679 (* l_0_10_215 l_0_10_215)))
 (let ((?x22677 (* l_0_10_214 l_0_10_214)))
 (let ((?x22678 (- (- (* (- l_0_10_212) l_0_10_212) (* l_0_10_213 l_0_10_213)) ?x22677)))
 (= (- (- (- ?x22678 ?x22679) ?x22681) ?x22683) 0.0)))))))
(assert
 (let ((?x22711 (* l_0_10_224 l_0_10_224)))
 (let ((?x22709 (* l_0_10_223 l_0_10_223)))
 (let ((?x22707 (* l_0_10_222 l_0_10_222)))
 (let ((?x22705 (* l_0_10_221 l_0_10_221)))
 (let ((?x22703 (* l_0_10_220 l_0_10_220)))
 (let ((?x22704 (- (- (* (- l_0_10_218) l_0_10_218) (* l_0_10_219 l_0_10_219)) ?x22703)))
 (= (- (- (- (- ?x22704 ?x22705) ?x22707) ?x22709) ?x22711) 0.0))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_29 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_34 0.0))
(assert
 (>= l_0_10_38 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_49 0.0))
(assert
 (>= l_0_10_56 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_59 0.0))
(assert
 (>= l_0_10_62 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_71 0.0))
(assert
 (>= l_0_10_77 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_112 0.0))
(assert
 (>= l_0_10_113 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_122 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_133 0.0))
(assert
 (>= l_0_10_140 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_143 0.0))
(assert
 (>= l_0_10_146 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_155 0.0))
(assert
 (>= l_0_10_161 0.0))
(assert
 (>= l_0_10_168 0.0))
(assert
 (>= l_0_10_169 0.0))
(assert
 (>= l_0_10_171 0.0))
(assert
 (>= l_0_10_174 0.0))
(assert
 (>= l_0_10_178 0.0))
(assert
 (>= l_0_10_183 0.0))
(assert
 (>= l_0_10_189 0.0))
(assert
 (>= l_0_10_196 0.0))
(assert
 (>= l_0_10_197 0.0))
(assert
 (>= l_0_10_199 0.0))
(assert
 (>= l_0_10_202 0.0))
(assert
 (>= l_0_10_206 0.0))
(assert
 (>= l_0_10_211 0.0))
(assert
 (>= l_0_10_217 0.0))
(assert
 (>= l_0_10_224 0.0))
(assert
 (let ((?x22782 (* l_0_11_85 l_0_11_85)))
 (let ((?x22780 (* l_0_11_57 l_0_11_57)))
 (let ((?x22779 (- (* (* (- 2.0) l_0_11_197) l_0_11_203) (* (* 2.0 l_0_11_225) l_0_11_231))))
 (= (+ (- (+ ?x22779 ?x22780) ?x22782) 1.0) 0.0)))))
(assert
 (let ((?x22801 (- (- (- _a_2_) (* (* 2.0 l_0_11_197) l_0_11_218)) (* (* 2.0 l_0_11_225) l_0_11_246))))
 (= ?x22801 0.0)))
(assert
 (let ((?x22847 (* l_0_11_29 l_0_11_29)))
 (let ((?x22815 (* l_0_11_141 l_0_11_141)))
 (let ((?x22819 (- (+ (- (- _a_3_) (* l_0_11_1 l_0_11_1)) ?x22815) (* (* 2.0 l_0_11_207) l_0_11_218))))
 (let ((?x22825 (- (- ?x22819 (* (* 2.0 l_0_11_208) l_0_11_219)) (* (* 2.0 l_0_11_209) l_0_11_220))))
 (let ((?x22831 (- (- ?x22825 (* (* 2.0 l_0_11_210) l_0_11_221)) (* (* 2.0 l_0_11_211) l_0_11_222))))
 (let ((?x22837 (- (- ?x22831 (* (* 2.0 l_0_11_235) l_0_11_246)) (* (* 2.0 l_0_11_236) l_0_11_247))))
 (let ((?x22843 (- (- ?x22837 (* (* 2.0 l_0_11_237) l_0_11_248)) (* (* 2.0 l_0_11_238) l_0_11_249))))
 (= (+ (- ?x22843 (* (* 2.0 l_0_11_239) l_0_11_250)) ?x22847) 0.0)))))))))
(assert
 (let ((?x22782 (* l_0_11_85 l_0_11_85)))
 (let ((?x22780 (* l_0_11_57 l_0_11_57)))
 (let ((?x22876 (- (- (- _a_4_) (* (* 2.0 l_0_11_212) l_0_11_218)) (* (* 2.0 l_0_11_213) l_0_11_219))))
 (let ((?x22882 (- (- ?x22876 (* (* 2.0 l_0_11_214) l_0_11_220)) (* (* 2.0 l_0_11_215) l_0_11_221))))
 (let ((?x22888 (- (- ?x22882 (* (* 2.0 l_0_11_216) l_0_11_222)) (* (* 2.0 l_0_11_217) l_0_11_223))))
 (let ((?x22894 (- (- ?x22888 (* (* 2.0 l_0_11_240) l_0_11_246)) (* (* 2.0 l_0_11_241) l_0_11_247))))
 (let ((?x22900 (- (- ?x22894 (* (* 2.0 l_0_11_242) l_0_11_248)) (* (* 2.0 l_0_11_243) l_0_11_249))))
 (let ((?x22906 (- (- ?x22900 (* (* 2.0 l_0_11_244) l_0_11_250)) (* (* 2.0 l_0_11_245) l_0_11_251))))
 (= (+ (- ?x22906 ?x22780) ?x22782) 0.0))))))))))
(assert
 (let ((?x22782 (* l_0_11_85 l_0_11_85)))
 (let ((?x22780 (* l_0_11_57 l_0_11_57)))
 (let ((?x22948 (* l_0_11_169 l_0_11_169)))
 (let ((?x22949 (+ (- (* (- l_0_11_113) l_0_11_113) (* l_0_11_141 l_0_11_141)) ?x22948)))
 (let ((?x22953 (- (- ?x22949 (* (* 2.0 l_0_11_197) l_0_11_200)) (* (* 2.0 l_0_11_225) l_0_11_228))))
 (= (- (+ (- ?x22953 ?x22780) ?x22782) 1.0) 0.0)))))))
(assert
 (let ((?x22847 (* l_0_11_29 l_0_11_29)))
 (let ((?x22973 (- (- (* l_0_11_1 l_0_11_1) (* (* 2.0 l_0_11_169) l_0_11_169)) (* (* 2.0 l_0_11_197) l_0_11_198))))
 (= (+ (- (- ?x22973 (* (* 2.0 l_0_11_225) l_0_11_226)) ?x22847) 1.0) 0.0))))
(assert
 (let ((?x23041 (* 2.0 l_0_11_43)))
 (let ((?x23042 (* ?x23041 l_0_11_54)))
 (let ((?x23038 (* 2.0 l_0_11_42)))
 (let ((?x23039 (* ?x23038 l_0_11_53)))
 (let ((?x23035 (* 2.0 l_0_11_41)))
 (let ((?x23036 (* ?x23035 l_0_11_52)))
 (let ((?x23032 (* 2.0 l_0_11_40)))
 (let ((?x23033 (* ?x23032 l_0_11_51)))
 (let ((?x23029 (* 2.0 l_0_11_39)))
 (let ((?x23030 (* ?x23029 l_0_11_50)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23027 (* ?x23026 l_0_11_30)))
 (let ((?x23008 (* 2.0 l_0_11_15)))
 (let ((?x23009 (* ?x23008 l_0_11_26)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23006 (* ?x23005 l_0_11_142)))
 (let ((?x23002 (* 2.0 l_0_11_14)))
 (let ((?x23003 (* ?x23002 l_0_11_25)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23000 (* ?x22999 l_0_11_24)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x22997 (* ?x22996 l_0_11_23)))
 (let ((?x22995 (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_11) l_0_11_22))))
 (let ((?x23013 (- (+ (+ (+ (+ (+ ?x22995 ?x22997) ?x23000) ?x23003) ?x23006) ?x23009) (* (* 4.0 l_0_11_179) l_0_11_190))))
 (let ((?x23019 (- (- ?x23013 (* (* 4.0 l_0_11_180) l_0_11_191)) (* (* 4.0 l_0_11_181) l_0_11_192))))
 (let ((?x23025 (- (- ?x23019 (* (* 4.0 l_0_11_182) l_0_11_193)) (* (* 4.0 l_0_11_183) l_0_11_194))))
 (= (- (- (- (- (- (+ ?x23025 ?x23027) ?x23030) ?x23033) ?x23036) ?x23039) ?x23042) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x23174 (* ?x23173 l_0_11_82)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x23171 (* ?x23170 l_0_11_81)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x23168 (* ?x23167 l_0_11_80)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x23165 (* ?x23164 l_0_11_79)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x23162 (* ?x23161 l_0_11_78)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23159 (* ?x23026 l_0_11_32)))
 (let ((?x23141 (* 2.0 l_0_11_155)))
 (let ((?x23142 (* ?x23141 l_0_11_166)))
 (let ((?x23138 (* 2.0 l_0_11_154)))
 (let ((?x23139 (* ?x23138 l_0_11_165)))
 (let ((?x23135 (* 2.0 l_0_11_153)))
 (let ((?x23136 (* ?x23135 l_0_11_164)))
 (let ((?x23132 (* 2.0 l_0_11_152)))
 (let ((?x23133 (* ?x23132 l_0_11_163)))
 (let ((?x23129 (* 2.0 l_0_11_151)))
 (let ((?x23130 (* ?x23129 l_0_11_162)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23127 (* ?x23005 l_0_11_144)))
 (let ((?x23110 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x23107 (* ?x23106 l_0_11_98)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x23104 (* ?x23103 l_0_11_97)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x23101 (* ?x23100 l_0_11_96)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x23098 (* ?x23097 l_0_11_95)))
 (let ((?x23108 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x23098) ?x23101) ?x23104) ?x23107)))
 (let ((?x23117 (- (- (+ ?x23108 ?x23110) (* (* 2.0 l_0_11_123) l_0_11_134)) (* (* 2.0 l_0_11_124) l_0_11_135))))
 (let ((?x23123 (- (- ?x23117 (* (* 2.0 l_0_11_125) l_0_11_136)) (* (* 2.0 l_0_11_126) l_0_11_137))))
 (let ((?x23134 (- (- (+ (- ?x23123 (* (* 2.0 l_0_11_127) l_0_11_138)) ?x23127) ?x23130) ?x23133)))
 (let ((?x23146 (+ (- (- (- ?x23134 ?x23136) ?x23139) ?x23142) (* (* 2.0 l_0_11_179) l_0_11_190))))
 (let ((?x23152 (+ (+ ?x23146 (* (* 2.0 l_0_11_180) l_0_11_191)) (* (* 2.0 l_0_11_181) l_0_11_192))))
 (let ((?x23158 (+ (+ ?x23152 (* (* 2.0 l_0_11_182) l_0_11_193)) (* (* 2.0 l_0_11_183) l_0_11_194))))
 (= (- (- (- (- (- (+ ?x23158 ?x23159) ?x23162) ?x23165) ?x23168) ?x23171) ?x23174) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x23174 (* ?x23173 l_0_11_82)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x23171 (* ?x23170 l_0_11_81)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x23168 (* ?x23167 l_0_11_80)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x23165 (* ?x23164 l_0_11_79)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x23162 (* ?x23161 l_0_11_78)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23251 (* ?x23026 l_0_11_35)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23249 (* ?x23005 l_0_11_147)))
 (let ((?x23110 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x23107 (* ?x23106 l_0_11_98)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x23104 (* ?x23103 l_0_11_97)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x23101 (* ?x23100 l_0_11_96)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x23098 (* ?x23097 l_0_11_95)))
 (let ((?x23247 (- (- (- (- (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x23098) ?x23101) ?x23104) ?x23107)))
 (let ((?x23256 (+ (+ (+ (+ (+ (+ (- ?x23247 ?x23110) ?x23249) ?x23251) ?x23162) ?x23165) ?x23168) ?x23171)))
 (= (+ ?x23256 ?x23174) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x7715 (* ?x23026 l_0_11_39)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x7777 (* ?x23005 l_0_11_151)))
 (= (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x7777) ?x7715) 0.0))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x23278 (* ?x23277 l_0_11_95)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x23275 (* ?x23274 l_0_11_67)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23267 (* ?x23026 l_0_11_44)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23266 (* ?x23005 l_0_11_156)))
 (let ((?x23279 (+ (- (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_16) ?x23266) ?x23267) ?x23275) ?x23278)))
 (= ?x23279 0.0)))))))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x7779 (* ?x23026 l_0_11_50)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x7773 (* ?x23005 l_0_11_162)))
 (= (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) ?x7773) ?x7779) 0.0))))))
(assert
 (let ((?x23308 (* l_0_11_31 l_0_11_31)))
 (let ((?x23306 (* l_0_11_30 l_0_11_30)))
 (let ((?x23304 (* l_0_11_3 l_0_11_3)))
 (let ((?x23297 (* l_0_11_2 l_0_11_2)))
 (let ((?x23303 (- (+ (* l_0_11_142 l_0_11_142) (* l_0_11_143 l_0_11_143)) ?x23297)))
 (= (+ (+ (- ?x23303 ?x23304) ?x23306) ?x23308) 0.0)))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23333 (* ?x23332 l_0_11_33)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23330 (* ?x23329 l_0_11_32)))
 (let ((?x23326 (* 2.0 l_0_11_3)))
 (let ((?x23327 (* ?x23326 l_0_11_5)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23324 (* ?x23323 l_0_11_4)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23321 (* ?x23320 l_0_11_145)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23319 (* ?x23318 l_0_11_144)))
 (= (+ (+ (- (- (+ ?x23319 ?x23321) ?x23324) ?x23327) ?x23330) ?x23333) 0.0))))))))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23361 (* ?x23332 l_0_11_36)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23359 (* ?x23329 l_0_11_35)))
 (let ((?x23326 (* 2.0 l_0_11_3)))
 (let ((?x23357 (* ?x23326 l_0_11_8)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23355 (* ?x23323 l_0_11_7)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x7806 (* ?x23320 l_0_11_148)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x7803 (* ?x23318 l_0_11_147)))
 (= (+ (+ (- (- (+ ?x7803 ?x7806) ?x23355) ?x23357) ?x23359) ?x23361) 0.0))))))))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23387 (* ?x23332 l_0_11_40)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23385 (* ?x23329 l_0_11_39)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23383 (* ?x23320 l_0_11_152)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23381 (* ?x23318 l_0_11_151)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x7834 (* ?x22996 l_0_11_3)))
 (let ((?x23386 (+ (+ (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x7834) ?x23381) ?x23383) ?x23385)))
 (= (+ ?x23386 ?x23387) 0.0)))))))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x23429 (* ?x23428 l_0_11_96)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x23426 (* ?x23425 l_0_11_95)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x23423 (* ?x23422 l_0_11_68)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x23420 (* ?x23419 l_0_11_67)))
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23417 (* ?x23332 l_0_11_45)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23415 (* ?x23329 l_0_11_44)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23413 (* ?x23412 l_0_11_3)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23410 (* ?x23409 l_0_11_2)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23407 (* ?x23320 l_0_11_157)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23406 (* ?x23318 l_0_11_156)))
 (let ((?x23424 (- (- (+ (+ (- (- (+ ?x23406 ?x23407) ?x23410) ?x23413) ?x23415) ?x23417) ?x23420) ?x23423)))
 (= (+ (+ ?x23424 ?x23426) ?x23429) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23476 (* ?x23332 l_0_11_51)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23474 (* ?x23329 l_0_11_50)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23472 (* ?x23471 l_0_11_3)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23469 (* ?x23323 l_0_11_22)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23467 (* ?x23320 l_0_11_163)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23466 (* ?x23318 l_0_11_162)))
 (= (+ (+ (- (- (+ ?x23466 ?x23467) ?x23469) ?x23472) ?x23474) ?x23476) 0.0))))))))))))))
(assert
 (let ((?x23511 (* l_0_11_6 l_0_11_6)))
 (let ((?x23509 (* l_0_11_5 l_0_11_5)))
 (let ((?x23507 (* l_0_11_4 l_0_11_4)))
 (let ((?x23505 (* l_0_11_34 l_0_11_34)))
 (let ((?x23503 (* l_0_11_33 l_0_11_33)))
 (let ((?x23501 (* l_0_11_32 l_0_11_32)))
 (let ((?x23499 (* l_0_11_146 l_0_11_146)))
 (let ((?x23500 (+ (+ (* l_0_11_144 l_0_11_144) (* l_0_11_145 l_0_11_145)) ?x23499)))
 (= (- (- (- (+ (+ (+ ?x23500 ?x23501) ?x23503) ?x23505) ?x23507) ?x23509) ?x23511) 0.0))))))))))
(assert
 (let ((?x23545 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23542 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23539 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23536 (* ?x23535 l_0_11_37)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23533 (* ?x23532 l_0_11_36)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23530 (* ?x23529 l_0_11_35)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23527 (* ?x23526 l_0_11_149)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23524 (* ?x23523 l_0_11_148)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23522 (* ?x23521 l_0_11_147)))
 (let ((?x23543 (- (- (+ (+ (+ (+ (+ ?x23522 ?x23524) ?x23527) ?x23530) ?x23533) ?x23536) ?x23539) ?x23542)))
 (= (- ?x23543 ?x23545) 0.0))))))))))))))))))
(assert
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23591 (* ?x23535 l_0_11_41)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23589 (* ?x23532 l_0_11_40)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23587 (* ?x23529 l_0_11_39)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23585 (* ?x23526 l_0_11_153)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23583 (* ?x23523 l_0_11_152)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23581 (* ?x23521 l_0_11_151)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23579 (* ?x22999 l_0_11_6)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x23577 (* ?x22996 l_0_11_5)))
 (let ((?x23584 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x23577) ?x23579) ?x23581) ?x23583)))
 (= (+ (+ (+ (+ ?x23584 ?x23585) ?x23587) ?x23589) ?x23591) 0.0)))))))))))))))))))
(assert
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x23648 (* ?x23647 l_0_11_97)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x23645 (* ?x23644 l_0_11_96)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x23642 (* ?x23641 l_0_11_95)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x23639 (* ?x23638 l_0_11_69)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x23636 (* ?x23635 l_0_11_68)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x23633 (* ?x23632 l_0_11_67)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23630 (* ?x23535 l_0_11_46)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23628 (* ?x23532 l_0_11_45)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23626 (* ?x23529 l_0_11_44)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x23624 (* ?x23623 l_0_11_6)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23621 (* ?x23412 l_0_11_5)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23619 (* ?x23409 l_0_11_4)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23617 (* ?x23526 l_0_11_158)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23615 (* ?x23523 l_0_11_157)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23614 (* ?x23521 l_0_11_156)))
 (let ((?x23629 (+ (+ (- (- (- (+ (+ ?x23614 ?x23615) ?x23617) ?x23619) ?x23621) ?x23624) ?x23626) ?x23628)))
 (let ((?x23649 (+ (+ (+ (- (- (- (+ ?x23629 ?x23630) ?x23633) ?x23636) ?x23639) ?x23642) ?x23645) ?x23648)))
 (= ?x23649 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23715 (* ?x23535 l_0_11_52)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23713 (* ?x23532 l_0_11_51)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23711 (* ?x23529 l_0_11_50)))
 (let ((?x23708 (* 2.0 l_0_11_24)))
 (let ((?x23709 (* ?x23708 l_0_11_6)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23706 (* ?x23471 l_0_11_5)))
 (let ((?x23703 (* 2.0 l_0_11_22)))
 (let ((?x23704 (* ?x23703 l_0_11_4)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23690 (* ?x23526 l_0_11_164)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x7960 (* ?x23523 l_0_11_163)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x7958 (* ?x23521 l_0_11_162)))
 (let ((?x23714 (+ (+ (- (- (- (+ (+ ?x7958 ?x7960) ?x23690) ?x23704) ?x23706) ?x23709) ?x23711) ?x23713)))
 (= (+ ?x23714 ?x23715) 0.0)))))))))))))))))))))
(assert
 (let ((?x23768 (* l_0_11_9 l_0_11_9)))
 (let ((?x23766 (* l_0_11_8 l_0_11_8)))
 (let ((?x23764 (* l_0_11_7 l_0_11_7)))
 (let ((?x23762 (* l_0_11_38 l_0_11_38)))
 (let ((?x23760 (* l_0_11_37 l_0_11_37)))
 (let ((?x23758 (* l_0_11_36 l_0_11_36)))
 (let ((?x23756 (* l_0_11_35 l_0_11_35)))
 (let ((?x23754 (* l_0_11_150 l_0_11_150)))
 (let ((?x23752 (* l_0_11_149 l_0_11_149)))
 (let ((?x23750 (* l_0_11_148 l_0_11_148)))
 (let ((?x23751 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_147 l_0_11_147)) ?x23750)))
 (let ((?x23765 (- (+ (+ (+ (+ (+ (+ ?x23751 ?x23752) ?x23754) ?x23756) ?x23758) ?x23760) ?x23762) ?x23764)))
 (= (- (- ?x23765 ?x23766) ?x23768) 0.0))))))))))))))
(assert
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23812 (* ?x23811 l_0_11_42)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23809 (* ?x23808 l_0_11_41)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23806 (* ?x23805 l_0_11_40)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23803 (* ?x23802 l_0_11_39)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23800 (* ?x23799 l_0_11_154)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23797 (* ?x23796 l_0_11_153)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23794 (* ?x23793 l_0_11_152)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23791 (* ?x23790 l_0_11_151)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23788 (* ?x22999 l_0_11_9)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x23786 (* ?x22996 l_0_11_8)))
 (let ((?x22993 (* 2.0 l_0_11_11)))
 (let ((?x23784 (* ?x22993 l_0_11_7)))
 (let ((?x23792 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x23784) ?x23786) ?x23788) ?x23791)))
 (let ((?x23813 (+ (+ (+ (+ (+ (+ (+ ?x23792 ?x23794) ?x23797) ?x23800) ?x23803) ?x23806) ?x23809) ?x23812)))
 (= ?x23813 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23892 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23889 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23886 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23883 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x23880 (* ?x23879 l_0_11_70)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x23877 (* ?x23876 l_0_11_69)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x23874 (* ?x23873 l_0_11_68)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x23871 (* ?x23870 l_0_11_67)))
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23868 (* ?x23811 l_0_11_47)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23866 (* ?x23808 l_0_11_46)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23864 (* ?x23805 l_0_11_45)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23862 (* ?x23802 l_0_11_44)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x23860 (* ?x23623 l_0_11_9)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23858 (* ?x23412 l_0_11_8)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23856 (* ?x23409 l_0_11_7)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23843 (* ?x23799 l_0_11_159)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23839 (* ?x23796 l_0_11_158)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23835 (* ?x23793 l_0_11_157)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23831 (* ?x23790 l_0_11_156)))
 (let ((?x23844 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x23831) ?x23835) ?x23839) ?x23843)))
 (let ((?x23869 (+ (+ (+ (+ (- (- (- ?x23844 ?x23856) ?x23858) ?x23860) ?x23862) ?x23864) ?x23866) ?x23868)))
 (let ((?x23890 (+ (+ (+ (- (- (- (- ?x23869 ?x23871) ?x23874) ?x23877) ?x23880) ?x23883) ?x23886) ?x23889)))
 (= (+ ?x23890 ?x23892) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23966 (* ?x23811 l_0_11_53)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23964 (* ?x23808 l_0_11_52)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23962 (* ?x23805 l_0_11_51)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23960 (* ?x23802 l_0_11_50)))
 (let ((?x23708 (* 2.0 l_0_11_24)))
 (let ((?x23958 (* ?x23708 l_0_11_9)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23956 (* ?x23471 l_0_11_8)))
 (let ((?x23703 (* 2.0 l_0_11_22)))
 (let ((?x23954 (* ?x23703 l_0_11_7)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23952 (* ?x23799 l_0_11_165)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23950 (* ?x23796 l_0_11_164)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23948 (* ?x23793 l_0_11_163)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23946 (* ?x23790 l_0_11_162)))
 (let ((?x23953 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_10) l_0_11_25) ?x23946) ?x23948) ?x23950) ?x23952)))
 (let ((?x23967 (+ (+ (+ (+ (- (- (- ?x23953 ?x23954) ?x23956) ?x23958) ?x23960) ?x23962) ?x23964) ?x23966)))
 (= ?x23967 0.0))))))))))))))))))))))))))
(assert
 (let ((?x24033 (* l_0_11_43 l_0_11_43)))
 (let ((?x24031 (* l_0_11_42 l_0_11_42)))
 (let ((?x24029 (* l_0_11_41 l_0_11_41)))
 (let ((?x24027 (* l_0_11_40 l_0_11_40)))
 (let ((?x24025 (* l_0_11_39 l_0_11_39)))
 (let ((?x24023 (* l_0_11_155 l_0_11_155)))
 (let ((?x24021 (* l_0_11_154 l_0_11_154)))
 (let ((?x24019 (* l_0_11_153 l_0_11_153)))
 (let ((?x24017 (* l_0_11_152 l_0_11_152)))
 (let ((?x24015 (* l_0_11_151 l_0_11_151)))
 (let ((?x24013 (* l_0_11_15 l_0_11_15)))
 (let ((?x24011 (* l_0_11_14 l_0_11_14)))
 (let ((?x23998 (* l_0_11_13 l_0_11_13)))
 (let ((?x24010 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x23998)))
 (let ((?x24024 (+ (+ (+ (+ (+ (- (- ?x24010 ?x24011) ?x24013) ?x24015) ?x24017) ?x24019) ?x24021) ?x24023)))
 (= (+ (+ (+ (+ (+ ?x24024 ?x24025) ?x24027) ?x24029) ?x24031) ?x24033) 0.0)))))))))))))))))
(assert
 (let ((?x24106 (* l_0_11_99 l_0_11_99)))
 (let ((?x24104 (* l_0_11_98 l_0_11_98)))
 (let ((?x24102 (* l_0_11_97 l_0_11_97)))
 (let ((?x24100 (* l_0_11_96 l_0_11_96)))
 (let ((?x24098 (* l_0_11_95 l_0_11_95)))
 (let ((?x24096 (* l_0_11_71 l_0_11_71)))
 (let ((?x24094 (* l_0_11_70 l_0_11_70)))
 (let ((?x24092 (* l_0_11_69 l_0_11_69)))
 (let ((?x24090 (* l_0_11_68 l_0_11_68)))
 (let ((?x24088 (* l_0_11_67 l_0_11_67)))
 (let ((?x23041 (* 2.0 l_0_11_43)))
 (let ((?x24086 (* ?x23041 l_0_11_48)))
 (let ((?x23038 (* 2.0 l_0_11_42)))
 (let ((?x24084 (* ?x23038 l_0_11_47)))
 (let ((?x23035 (* 2.0 l_0_11_41)))
 (let ((?x24082 (* ?x23035 l_0_11_46)))
 (let ((?x23032 (* 2.0 l_0_11_40)))
 (let ((?x24080 (* ?x23032 l_0_11_45)))
 (let ((?x23029 (* 2.0 l_0_11_39)))
 (let ((?x24078 (* ?x23029 l_0_11_44)))
 (let ((?x23141 (* 2.0 l_0_11_155)))
 (let ((?x24076 (* ?x23141 l_0_11_160)))
 (let ((?x23138 (* 2.0 l_0_11_154)))
 (let ((?x24074 (* ?x23138 l_0_11_159)))
 (let ((?x23135 (* 2.0 l_0_11_153)))
 (let ((?x24072 (* ?x23135 l_0_11_158)))
 (let ((?x23132 (* 2.0 l_0_11_152)))
 (let ((?x24070 (* ?x23132 l_0_11_157)))
 (let ((?x23129 (* 2.0 l_0_11_151)))
 (let ((?x24068 (* ?x23129 l_0_11_156)))
 (let ((?x23008 (* 2.0 l_0_11_15)))
 (let ((?x24066 (* ?x23008 l_0_11_20)))
 (let ((?x23002 (* 2.0 l_0_11_14)))
 (let ((?x24064 (* ?x23002 l_0_11_19)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x24062 (* ?x22999 l_0_11_18)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x24060 (* ?x22996 l_0_11_17)))
 (let ((?x24067 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_16) ?x24060) ?x24062) ?x24064) ?x24066)))
 (let ((?x24081 (+ (+ (+ (+ (+ (+ (+ ?x24067 ?x24068) ?x24070) ?x24072) ?x24074) ?x24076) ?x24078) ?x24080)))
 (let ((?x24095 (- (- (- (- (+ (+ (+ ?x24081 ?x24082) ?x24084) ?x24086) ?x24088) ?x24090) ?x24092) ?x24094)))
 (= (+ (+ (+ (+ (+ (- ?x24095 ?x24096) ?x24098) ?x24100) ?x24102) ?x24104) ?x24106) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23041 (* 2.0 l_0_11_43)))
 (let ((?x23042 (* ?x23041 l_0_11_54)))
 (let ((?x23038 (* 2.0 l_0_11_42)))
 (let ((?x23039 (* ?x23038 l_0_11_53)))
 (let ((?x23035 (* 2.0 l_0_11_41)))
 (let ((?x23036 (* ?x23035 l_0_11_52)))
 (let ((?x23032 (* 2.0 l_0_11_40)))
 (let ((?x23033 (* ?x23032 l_0_11_51)))
 (let ((?x23029 (* 2.0 l_0_11_39)))
 (let ((?x23030 (* ?x23029 l_0_11_50)))
 (let ((?x23141 (* 2.0 l_0_11_155)))
 (let ((?x23142 (* ?x23141 l_0_11_166)))
 (let ((?x23138 (* 2.0 l_0_11_154)))
 (let ((?x23139 (* ?x23138 l_0_11_165)))
 (let ((?x23135 (* 2.0 l_0_11_153)))
 (let ((?x23136 (* ?x23135 l_0_11_164)))
 (let ((?x23132 (* 2.0 l_0_11_152)))
 (let ((?x23133 (* ?x23132 l_0_11_163)))
 (let ((?x23129 (* 2.0 l_0_11_151)))
 (let ((?x23130 (* ?x23129 l_0_11_162)))
 (let ((?x23008 (* 2.0 l_0_11_15)))
 (let ((?x23009 (* ?x23008 l_0_11_26)))
 (let ((?x23002 (* 2.0 l_0_11_14)))
 (let ((?x23003 (* ?x23002 l_0_11_25)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23000 (* ?x22999 l_0_11_24)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x22997 (* ?x22996 l_0_11_23)))
 (let ((?x24149 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_22) ?x22997) ?x23000) ?x23003) ?x23009)))
 (let ((?x24156 (+ (+ (+ (+ (+ (+ (+ ?x24149 ?x23130) ?x23133) ?x23136) ?x23139) ?x23142) ?x23030) ?x23033)))
 (= (+ (+ (+ ?x24156 ?x23036) ?x23039) ?x23042) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x24216 (* ?x23173 l_0_11_76)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x24214 (* ?x23170 l_0_11_75)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x24212 (* ?x23167 l_0_11_74)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x24210 (* ?x23164 l_0_11_73)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x24208 (* ?x23161 l_0_11_72)))
 (let ((?x24206 (* l_0_11_49 l_0_11_49)))
 (let ((?x24204 (* l_0_11_48 l_0_11_48)))
 (let ((?x24202 (* l_0_11_47 l_0_11_47)))
 (let ((?x24200 (* l_0_11_46 l_0_11_46)))
 (let ((?x24198 (* l_0_11_45 l_0_11_45)))
 (let ((?x24196 (* l_0_11_44 l_0_11_44)))
 (let ((?x24194 (* l_0_11_21 l_0_11_21)))
 (let ((?x24192 (* l_0_11_20 l_0_11_20)))
 (let ((?x24190 (* l_0_11_19 l_0_11_19)))
 (let ((?x24188 (* l_0_11_18 l_0_11_18)))
 (let ((?x24186 (* l_0_11_17 l_0_11_17)))
 (let ((?x24184 (* l_0_11_161 l_0_11_161)))
 (let ((?x24182 (* l_0_11_160 l_0_11_160)))
 (let ((?x24180 (* l_0_11_16 l_0_11_16)))
 (let ((?x24178 (* l_0_11_159 l_0_11_159)))
 (let ((?x24176 (* l_0_11_158 l_0_11_158)))
 (let ((?x24174 (* l_0_11_157 l_0_11_157)))
 (let ((?x24172 (* l_0_11_156 l_0_11_156)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x24170 (* ?x24169 l_0_11_99)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x24167 (* ?x24166 l_0_11_98)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x24164 (* ?x24163 l_0_11_97)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x8279 (* ?x8289 l_0_11_96)))
 (let ((?x24171 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_95) ?x8279) ?x24164) ?x24167) ?x24170)))
 (let ((?x24185 (+ (+ (- (+ (+ (+ (+ ?x24171 ?x24172) ?x24174) ?x24176) ?x24178) ?x24180) ?x24182) ?x24184)))
 (let ((?x24199 (+ (+ (- (- (- (- (- ?x24185 ?x24186) ?x24188) ?x24190) ?x24192) ?x24194) ?x24196) ?x24198)))
 (let ((?x24213 (- (- (- (+ (+ (+ (+ ?x24199 ?x24200) ?x24202) ?x24204) ?x24206) ?x24208) ?x24210) ?x24212)))
 (= (- (- ?x24213 ?x24214) ?x24216) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x23174 (* ?x23173 l_0_11_82)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x23171 (* ?x23170 l_0_11_81)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x23168 (* ?x23167 l_0_11_80)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x23165 (* ?x23164 l_0_11_79)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x23162 (* ?x23161 l_0_11_78)))
 (let ((?x24315 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24312 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24309 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24306 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24303 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24300 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24297 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24294 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24291 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x24288 (* ?x23623 l_0_11_24)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x24286 (* ?x23412 l_0_11_23)))
 (let ((?x24284 (* (* 2.0 l_0_11_161) l_0_11_167)))
 (let ((?x24281 (* (* 2.0 l_0_11_160) l_0_11_166)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x24278 (* ?x23409 l_0_11_22)))
 (let ((?x24276 (* (* 2.0 l_0_11_159) l_0_11_165)))
 (let ((?x24273 (* (* 2.0 l_0_11_158) l_0_11_164)))
 (let ((?x24270 (* (* 2.0 l_0_11_157) l_0_11_163)))
 (let ((?x24267 (* (* 2.0 l_0_11_156) l_0_11_162)))
 (let ((?x23110 (* (* 2.0 l_0_11_110) l_0_11_99)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x23107 (* ?x23106 l_0_11_98)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x23104 (* ?x23103 l_0_11_97)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x23101 (* ?x23100 l_0_11_96)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x23098 (* ?x23097 l_0_11_95)))
 (let ((?x24274 (+ (+ (+ (+ (+ (+ (+ ?x23098 ?x23101) ?x23104) ?x23107) ?x23110) ?x24267) ?x24270) ?x24273)))
 (let ((?x24292 (- (- (- (+ (+ (- (+ ?x24274 ?x24276) ?x24278) ?x24281) ?x24284) ?x24286) ?x24288) ?x24291)))
 (let ((?x24313 (+ (+ (+ (+ (+ (- (- ?x24292 ?x24294) ?x24297) ?x24300) ?x24303) ?x24306) ?x24309) ?x24312)))
 (= (- (- (- (- (- (+ ?x24313 ?x24315) ?x23162) ?x23165) ?x23168) ?x23171) ?x23174) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24429 (* l_0_11_56 l_0_11_56)))
 (let ((?x24427 (* l_0_11_55 l_0_11_55)))
 (let ((?x24425 (* l_0_11_54 l_0_11_54)))
 (let ((?x24423 (* l_0_11_53 l_0_11_53)))
 (let ((?x24421 (* l_0_11_52 l_0_11_52)))
 (let ((?x24419 (* l_0_11_51 l_0_11_51)))
 (let ((?x24417 (* l_0_11_50 l_0_11_50)))
 (let ((?x24415 (* l_0_11_28 l_0_11_28)))
 (let ((?x24413 (* l_0_11_27 l_0_11_27)))
 (let ((?x24411 (* l_0_11_26 l_0_11_26)))
 (let ((?x24409 (* l_0_11_25 l_0_11_25)))
 (let ((?x24407 (* l_0_11_24 l_0_11_24)))
 (let ((?x24405 (* l_0_11_23 l_0_11_23)))
 (let ((?x24403 (* l_0_11_22 l_0_11_22)))
 (let ((?x24401 (* l_0_11_168 l_0_11_168)))
 (let ((?x24399 (* l_0_11_167 l_0_11_167)))
 (let ((?x24397 (* l_0_11_166 l_0_11_166)))
 (let ((?x24395 (* l_0_11_165 l_0_11_165)))
 (let ((?x24393 (* l_0_11_164 l_0_11_164)))
 (let ((?x24394 (+ (+ (* l_0_11_162 l_0_11_162) (* l_0_11_163 l_0_11_163)) ?x24393)))
 (let ((?x24408 (- (- (- (+ (+ (+ (+ ?x24394 ?x24395) ?x24397) ?x24399) ?x24401) ?x24403) ?x24405) ?x24407)))
 (let ((?x24422 (+ (+ (+ (- (- (- (- ?x24408 ?x24409) ?x24411) ?x24413) ?x24415) ?x24417) ?x24419) ?x24421)))
 (= (+ (+ (+ (+ ?x24422 ?x24423) ?x24425) ?x24427) ?x24429) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23027 (* ?x23026 l_0_11_30)))
 (let ((?x24456 (* l_0_11_227 l_0_11_227)))
 (let ((?x24454 (* l_0_11_226 l_0_11_226)))
 (let ((?x24452 (* l_0_11_199 l_0_11_199)))
 (let ((?x24450 (* l_0_11_198 l_0_11_198)))
 (let ((?x24449 (- (* (* 2.0 l_0_11_1) l_0_11_2) (* (* 4.0 l_0_11_169) l_0_11_170))))
 (= (- (- (- (- (- ?x24449 ?x24450) ?x24452) ?x24454) ?x24456) ?x23027) 0.0)))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x24494 (* ?x23277 l_0_11_86)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x24492 (* ?x23274 l_0_11_58)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23159 (* ?x23026 l_0_11_32)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23006 (* ?x23005 l_0_11_142)))
 (let ((?x24473 (- (* (* 2.0 l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_113) l_0_11_114))))
 (let ((?x24478 (- (+ (- ?x24473 ?x23006) (* (* 2.0 l_0_11_169) l_0_11_170)) (* (* 4.0 l_0_11_169) l_0_11_172))))
 (let ((?x24484 (- (- ?x24478 (* (* 2.0 l_0_11_198) l_0_11_200)) (* (* 2.0 l_0_11_199) l_0_11_201))))
 (let ((?x24490 (- (- ?x24484 (* (* 2.0 l_0_11_226) l_0_11_228)) (* (* 2.0 l_0_11_227) l_0_11_229))))
 (= (+ (- (- ?x24490 ?x23159) ?x24492) ?x24494) 0.0))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x24494 (* ?x23277 l_0_11_86)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x24492 (* ?x23274 l_0_11_58)))
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23251 (* ?x23026 l_0_11_35)))
 (let ((?x24520 (- (* (* 2.0 l_0_11_1) l_0_11_7) (* (* 4.0 l_0_11_169) l_0_11_175))))
 (let ((?x24524 (- (- ?x24520 (* (* 2.0 l_0_11_198) l_0_11_203)) (* (* 2.0 l_0_11_199) l_0_11_204))))
 (let ((?x24528 (- (- ?x24524 (* (* 2.0 l_0_11_226) l_0_11_231)) (* (* 2.0 l_0_11_227) l_0_11_232))))
 (= (- (+ (- ?x24528 ?x23251) ?x24492) ?x24494) 0.0)))))))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x7715 (* ?x23026 l_0_11_39)))
 (let ((?x24551 (- (* (* 2.0 l_0_11_1) l_0_11_11) (* (* 4.0 l_0_11_169) l_0_11_179))))
 (let ((?x24555 (- (- ?x24551 (* (* 2.0 l_0_11_198) l_0_11_207)) (* (* 2.0 l_0_11_199) l_0_11_208))))
 (let ((?x24559 (- (- ?x24555 (* (* 2.0 l_0_11_226) l_0_11_235)) (* (* 2.0 l_0_11_227) l_0_11_236))))
 (= (- ?x24559 ?x7715) 0.0)))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x23267 (* ?x23026 l_0_11_44)))
 (let ((?x24583 (- (* (* 2.0 l_0_11_1) l_0_11_16) (* (* 4.0 l_0_11_169) l_0_11_184))))
 (let ((?x24587 (- (- ?x24583 (* (* 2.0 l_0_11_198) l_0_11_212)) (* (* 2.0 l_0_11_199) l_0_11_213))))
 (let ((?x24591 (- (- ?x24587 (* (* 2.0 l_0_11_226) l_0_11_240)) (* (* 2.0 l_0_11_227) l_0_11_241))))
 (= (- ?x24591 ?x23267) 0.0)))))))
(assert
 (let ((?x23026 (* 2.0 l_0_11_29)))
 (let ((?x7779 (* ?x23026 l_0_11_50)))
 (let ((?x9037 (- (* (* 2.0 l_0_11_1) l_0_11_22) (* (* 4.0 l_0_11_169) l_0_11_190))))
 (let ((?x24605 (- (- ?x9037 (* (* 2.0 l_0_11_198) l_0_11_218)) (* (* 2.0 l_0_11_199) l_0_11_219))))
 (let ((?x24609 (- (- ?x24605 (* (* 2.0 l_0_11_226) l_0_11_246)) (* (* 2.0 l_0_11_227) l_0_11_247))))
 (= (- ?x24609 ?x7779) 0.0)))))))
(assert
 (let ((?x23308 (* l_0_11_31 l_0_11_31)))
 (let ((?x23306 (* l_0_11_30 l_0_11_30)))
 (let ((?x23304 (* l_0_11_3 l_0_11_3)))
 (let ((?x23297 (* l_0_11_2 l_0_11_2)))
 (let ((?x24632 (- (* (* (- 2.0) l_0_11_170) l_0_11_170) (* (* 2.0 l_0_11_171) l_0_11_171))))
 (= (- (- (+ (+ ?x24632 ?x23297) ?x23304) ?x23306) ?x23308) 0.0)))))))
(assert
 (let ((?x24669 (* l_0_11_87 l_0_11_87)))
 (let ((?x24667 (* l_0_11_86 l_0_11_86)))
 (let ((?x24665 (* l_0_11_59 l_0_11_59)))
 (let ((?x24663 (* l_0_11_58 l_0_11_58)))
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23333 (* ?x23332 l_0_11_33)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23330 (* ?x23329 l_0_11_32)))
 (let ((?x23326 (* 2.0 l_0_11_3)))
 (let ((?x23327 (* ?x23326 l_0_11_5)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23324 (* ?x23323 l_0_11_4)))
 (let ((?x24640 (* l_0_11_171 l_0_11_171)))
 (let ((?x24638 (* l_0_11_170 l_0_11_170)))
 (let ((?x23294 (* l_0_11_143 l_0_11_143)))
 (let ((?x7783 (* l_0_11_142 l_0_11_142)))
 (let ((?x24649 (- (- (* (- l_0_11_114) l_0_11_114) (* l_0_11_115 l_0_11_115)) ?x7783)))
 (let ((?x24657 (- (+ (- (- ?x24649 ?x23294) (* (* 4.0 l_0_11_170) l_0_11_172)) ?x24638) (* (* 4.0 l_0_11_171) l_0_11_173))))
 (let ((?x24666 (- (- (- (- (+ (+ (+ ?x24657 ?x24640) ?x23324) ?x23327) ?x23330) ?x23333) ?x24663) ?x24665)))
 (= (+ (+ ?x24666 ?x24667) ?x24669) 0.0)))))))))))))))))))))
(assert
 (let ((?x24669 (* l_0_11_87 l_0_11_87)))
 (let ((?x24667 (* l_0_11_86 l_0_11_86)))
 (let ((?x24665 (* l_0_11_59 l_0_11_59)))
 (let ((?x24663 (* l_0_11_58 l_0_11_58)))
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23361 (* ?x23332 l_0_11_36)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23359 (* ?x23329 l_0_11_35)))
 (let ((?x23326 (* 2.0 l_0_11_3)))
 (let ((?x23357 (* ?x23326 l_0_11_8)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23355 (* ?x23323 l_0_11_7)))
 (let ((?x24690 (- (* (* (- 4.0) l_0_11_170) l_0_11_175) (* (* 4.0 l_0_11_171) l_0_11_176))))
 (let ((?x24697 (- (+ (+ (- (- (+ (+ ?x24690 ?x23355) ?x23357) ?x23359) ?x23361) ?x24663) ?x24665) ?x24667)))
 (= (- ?x24697 ?x24669) 0.0))))))))))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23387 (* ?x23332 l_0_11_40)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23385 (* ?x23329 l_0_11_39)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x7834 (* ?x22996 l_0_11_3)))
 (let ((?x9199 (- (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x7834) (* (* 4.0 l_0_11_170) l_0_11_179))))
 (= (- (- (- ?x9199 (* (* 4.0 l_0_11_171) l_0_11_180)) ?x23385) ?x23387) 0.0)))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23417 (* ?x23332 l_0_11_45)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23415 (* ?x23329 l_0_11_44)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23413 (* ?x23412 l_0_11_3)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23410 (* ?x23409 l_0_11_2)))
 (let ((?x24717 (- (- (+ ?x23410 ?x23413) (* (* 4.0 l_0_11_170) l_0_11_184)) (* (* 4.0 l_0_11_171) l_0_11_185))))
 (= (- (- ?x24717 ?x23415) ?x23417) 0.0)))))))))))
(assert
 (let ((?x23332 (* 2.0 l_0_11_31)))
 (let ((?x23476 (* ?x23332 l_0_11_51)))
 (let ((?x23329 (* 2.0 l_0_11_30)))
 (let ((?x23474 (* ?x23329 l_0_11_50)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23472 (* ?x23471 l_0_11_3)))
 (let ((?x23323 (* 2.0 l_0_11_2)))
 (let ((?x23469 (* ?x23323 l_0_11_22)))
 (let ((?x9290 (- (* (* (- 4.0) l_0_11_170) l_0_11_190) (* (* 4.0 l_0_11_171) l_0_11_191))))
 (= (- (- (+ (+ ?x9290 ?x23469) ?x23472) ?x23474) ?x23476) 0.0)))))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x24770 (* ?x23428 l_0_11_89)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x24768 (* ?x23425 l_0_11_88)))
 (let ((?x23511 (* l_0_11_6 l_0_11_6)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24765 (* ?x23422 l_0_11_61)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24763 (* ?x23419 l_0_11_60)))
 (let ((?x23509 (* l_0_11_5 l_0_11_5)))
 (let ((?x23507 (* l_0_11_4 l_0_11_4)))
 (let ((?x23505 (* l_0_11_34 l_0_11_34)))
 (let ((?x23503 (* l_0_11_33 l_0_11_33)))
 (let ((?x23501 (* l_0_11_32 l_0_11_32)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23321 (* ?x23320 l_0_11_145)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23319 (* ?x23318 l_0_11_144)))
 (let ((?x9321 (- (* (* (- 2.0) l_0_11_114) l_0_11_116) (* (* 2.0 l_0_11_115) l_0_11_117))))
 (let ((?x24748 (+ (+ (- (- ?x9321 ?x23319) ?x23321) (* (* 2.0 l_0_11_170) l_0_11_172)) (* (* 2.0 l_0_11_171) l_0_11_173))))
 (let ((?x24754 (- (- ?x24748 (* (* 2.0 l_0_11_172) l_0_11_172)) (* (* 2.0 l_0_11_173) l_0_11_173))))
 (let ((?x24760 (- (- (- (- ?x24754 (* (* 2.0 l_0_11_174) l_0_11_174)) ?x23501) ?x23503) ?x23505)))
 (let ((?x24771 (+ (+ (+ (- (- (+ (+ ?x24760 ?x23507) ?x23509) ?x24763) ?x24765) ?x23511) ?x24768) ?x24770)))
 (= ?x24771 0.0)))))))))))))))))))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x24826 (* ?x23428 l_0_11_92)))
 (let ((?x24770 (* ?x23428 l_0_11_89)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x24823 (* ?x23425 l_0_11_91)))
 (let ((?x24768 (* ?x23425 l_0_11_88)))
 (let ((?x23545 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24819 (* ?x23422 l_0_11_64)))
 (let ((?x24765 (* ?x23422 l_0_11_61)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24816 (* ?x23419 l_0_11_63)))
 (let ((?x24763 (* ?x23419 l_0_11_60)))
 (let ((?x23542 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23539 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23536 (* ?x23535 l_0_11_37)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23533 (* ?x23532 l_0_11_36)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23530 (* ?x23529 l_0_11_35)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x7806 (* ?x23320 l_0_11_148)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x7803 (* ?x23318 l_0_11_147)))
 (let ((?x24794 (- (* (* (- 2.0) l_0_11_114) l_0_11_119) (* (* 2.0 l_0_11_115) l_0_11_120))))
 (let ((?x24800 (+ (+ (- (- ?x24794 ?x7803) ?x7806) (* (* 2.0 l_0_11_170) l_0_11_175)) (* (* 2.0 l_0_11_171) l_0_11_176))))
 (let ((?x24806 (- (- ?x24800 (* (* 4.0 l_0_11_172) l_0_11_175)) (* (* 4.0 l_0_11_173) l_0_11_176))))
 (let ((?x24812 (- (- (- (- ?x24806 (* (* 4.0 l_0_11_174) l_0_11_177)) ?x23530) ?x23533) ?x23536)))
 (let ((?x24821 (+ (- (+ (- (+ (+ (+ ?x24812 ?x23539) ?x23542) ?x24763) ?x24816) ?x24765) ?x24819) ?x23545)))
 (= (+ (- (+ (- ?x24821 ?x24768) ?x24823) ?x24770) ?x24826) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x23429 (* ?x23428 l_0_11_96)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x23426 (* ?x23425 l_0_11_95)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x23423 (* ?x23422 l_0_11_68)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x23420 (* ?x23419 l_0_11_67)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23591 (* ?x23535 l_0_11_41)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23589 (* ?x23532 l_0_11_40)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23587 (* ?x23529 l_0_11_39)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23383 (* ?x23320 l_0_11_152)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23381 (* ?x23318 l_0_11_151)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23579 (* ?x22999 l_0_11_6)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x23577 (* ?x22996 l_0_11_5)))
 (let ((?x24856 (- (* (* 2.0 l_0_11_11) l_0_11_4) (* (* 2.0 l_0_11_114) l_0_11_123))))
 (let ((?x24861 (- (+ (+ (- ?x24856 (* (* 2.0 l_0_11_115) l_0_11_124)) ?x23577) ?x23579) ?x23381)))
 (let ((?x24866 (+ (+ (- ?x24861 ?x23383) (* (* 2.0 l_0_11_170) l_0_11_179)) (* (* 2.0 l_0_11_171) l_0_11_180))))
 (let ((?x24870 (- (- ?x24866 (* (* 4.0 l_0_11_172) l_0_11_179)) (* (* 4.0 l_0_11_173) l_0_11_180))))
 (let ((?x24875 (- (- (- (- ?x24870 (* (* 4.0 l_0_11_174) l_0_11_181)) ?x23587) ?x23589) ?x23591)))
 (= (+ (+ (- (- ?x24875 ?x23420) ?x23423) ?x23426) ?x23429) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24930 (* ?x23422 l_0_11_73)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24928 (* ?x23419 l_0_11_72)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23630 (* ?x23535 l_0_11_46)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23628 (* ?x23532 l_0_11_45)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23626 (* ?x23529 l_0_11_44)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x23624 (* ?x23623 l_0_11_6)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23621 (* ?x23412 l_0_11_5)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23619 (* ?x23409 l_0_11_4)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23407 (* ?x23320 l_0_11_157)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23406 (* ?x23318 l_0_11_156)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x24904 (* ?x8289 l_0_11_87)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x9611 (* ?x8301 l_0_11_86)))
 (let ((?x24905 (+ ?x9611 ?x24904)))
 (let ((?x24909 (- (- ?x24905 (* (* 2.0 l_0_11_114) l_0_11_128)) (* (* 2.0 l_0_11_115) l_0_11_129))))
 (let ((?x24915 (+ (+ (+ (- (- ?x24909 ?x23406) ?x23407) ?x23619) ?x23621) (* (* 2.0 l_0_11_170) l_0_11_184))))
 (let ((?x24919 (- (+ ?x24915 (* (* 2.0 l_0_11_171) l_0_11_185)) (* (* 4.0 l_0_11_172) l_0_11_184))))
 (let ((?x24923 (- (- ?x24919 (* (* 4.0 l_0_11_173) l_0_11_185)) (* (* 4.0 l_0_11_174) l_0_11_186))))
 (= (- (- (- (- (- (+ ?x24923 ?x23624) ?x23626) ?x23628) ?x23630) ?x24928) ?x24930) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24962 (* ?x23422 l_0_11_79)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24960 (* ?x23419 l_0_11_78)))
 (let ((?x23535 (* 2.0 l_0_11_34)))
 (let ((?x23715 (* ?x23535 l_0_11_52)))
 (let ((?x23532 (* 2.0 l_0_11_33)))
 (let ((?x23713 (* ?x23532 l_0_11_51)))
 (let ((?x23529 (* 2.0 l_0_11_32)))
 (let ((?x23711 (* ?x23529 l_0_11_50)))
 (let ((?x23708 (* 2.0 l_0_11_24)))
 (let ((?x23709 (* ?x23708 l_0_11_6)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23706 (* ?x23471 l_0_11_5)))
 (let ((?x23703 (* 2.0 l_0_11_22)))
 (let ((?x23704 (* ?x23703 l_0_11_4)))
 (let ((?x23320 (* 2.0 l_0_11_143)))
 (let ((?x23467 (* ?x23320 l_0_11_163)))
 (let ((?x23318 (* 2.0 l_0_11_142)))
 (let ((?x23466 (* ?x23318 l_0_11_162)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x9667 (* ?x23100 l_0_11_87)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x9730 (* ?x23097 l_0_11_86)))
 (let ((?x9670 (+ ?x9730 ?x9667)))
 (let ((?x9681 (- (- ?x9670 (* (* 2.0 l_0_11_114) l_0_11_134)) (* (* 2.0 l_0_11_115) l_0_11_135))))
 (let ((?x24947 (+ (+ (- (- ?x9681 ?x23466) ?x23467) (* (* 2.0 l_0_11_170) l_0_11_190)) (* (* 2.0 l_0_11_171) l_0_11_191))))
 (let ((?x24951 (- (- ?x24947 (* (* 4.0 l_0_11_172) l_0_11_190)) (* (* 4.0 l_0_11_173) l_0_11_191))))
 (let ((?x24956 (+ (+ (+ (- ?x24951 (* (* 4.0 l_0_11_174) l_0_11_192)) ?x23704) ?x23706) ?x23709)))
 (= (- (- (- (- (- ?x24956 ?x23711) ?x23713) ?x23715) ?x24960) ?x24962) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x23768 (* l_0_11_9 l_0_11_9)))
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x24826 (* ?x23428 l_0_11_92)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x24823 (* ?x23425 l_0_11_91)))
 (let ((?x23766 (* l_0_11_8 l_0_11_8)))
 (let ((?x23764 (* l_0_11_7 l_0_11_7)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24819 (* ?x23422 l_0_11_64)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24816 (* ?x23419 l_0_11_63)))
 (let ((?x23762 (* l_0_11_38 l_0_11_38)))
 (let ((?x23760 (* l_0_11_37 l_0_11_37)))
 (let ((?x23758 (* l_0_11_36 l_0_11_36)))
 (let ((?x23756 (* l_0_11_35 l_0_11_35)))
 (let ((?x23772 (* l_0_11_10 l_0_11_10)))
 (let ((?x24995 (- (- ?x23772 (* (* 2.0 l_0_11_175) l_0_11_175)) (* (* 2.0 l_0_11_176) l_0_11_176))))
 (let ((?x25001 (- (- ?x24995 (* (* 2.0 l_0_11_177) l_0_11_177)) (* (* 2.0 l_0_11_178) l_0_11_178))))
 (let ((?x25008 (+ (+ (+ (- (- (- (- ?x25001 ?x23756) ?x23758) ?x23760) ?x23762) ?x24816) ?x24819) ?x23764)))
 (= (+ (- (- (+ ?x25008 ?x23766) ?x24823) ?x24826) ?x23768) 0.0)))))))))))))))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x23429 (* ?x23428 l_0_11_96)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x23426 (* ?x23425 l_0_11_95)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x23423 (* ?x23422 l_0_11_68)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x23420 (* ?x23419 l_0_11_67)))
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23812 (* ?x23811 l_0_11_42)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23809 (* ?x23808 l_0_11_41)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23806 (* ?x23805 l_0_11_40)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23803 (* ?x23802 l_0_11_39)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x23788 (* ?x22999 l_0_11_9)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x23786 (* ?x22996 l_0_11_8)))
 (let ((?x22993 (* 2.0 l_0_11_11)))
 (let ((?x23784 (* ?x22993 l_0_11_7)))
 (let ((?x25033 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23784) ?x23786) ?x23788) (* (* 4.0 l_0_11_175) l_0_11_179))))
 (let ((?x25039 (- (- ?x25033 (* (* 4.0 l_0_11_176) l_0_11_180)) (* (* 4.0 l_0_11_177) l_0_11_181))))
 (let ((?x25045 (- (- (- (- ?x25039 (* (* 4.0 l_0_11_178) l_0_11_182)) ?x23803) ?x23806) ?x23809)))
 (= (- (- (+ (+ (- ?x25045 ?x23812) ?x23420) ?x23423) ?x23426) ?x23429) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24930 (* ?x23422 l_0_11_73)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24928 (* ?x23419 l_0_11_72)))
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23868 (* ?x23811 l_0_11_47)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23866 (* ?x23808 l_0_11_46)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23864 (* ?x23805 l_0_11_45)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23862 (* ?x23802 l_0_11_44)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x23860 (* ?x23623 l_0_11_9)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x23858 (* ?x23412 l_0_11_8)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x23856 (* ?x23409 l_0_11_7)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x24904 (* ?x8289 l_0_11_87)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x9611 (* ?x8301 l_0_11_86)))
 (let ((?x25079 (+ (+ (- (- (* (* 2.0 l_0_11_10) l_0_11_19) ?x9611) ?x24904) ?x23856) ?x23858)))
 (let ((?x25083 (- (- ?x25079 (* (* 4.0 l_0_11_175) l_0_11_184)) (* (* 4.0 l_0_11_176) l_0_11_185))))
 (let ((?x25087 (- (- ?x25083 (* (* 4.0 l_0_11_177) l_0_11_186)) (* (* 4.0 l_0_11_178) l_0_11_187))))
 (let ((?x25094 (+ (+ (- (- (- (- (+ ?x25087 ?x23860) ?x23862) ?x23864) ?x23866) ?x23868) ?x24928) ?x24930)))
 (= ?x25094 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24962 (* ?x23422 l_0_11_79)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24960 (* ?x23419 l_0_11_78)))
 (let ((?x23811 (* 2.0 l_0_11_38)))
 (let ((?x23966 (* ?x23811 l_0_11_53)))
 (let ((?x23808 (* 2.0 l_0_11_37)))
 (let ((?x23964 (* ?x23808 l_0_11_52)))
 (let ((?x23805 (* 2.0 l_0_11_36)))
 (let ((?x23962 (* ?x23805 l_0_11_51)))
 (let ((?x23802 (* 2.0 l_0_11_35)))
 (let ((?x23960 (* ?x23802 l_0_11_50)))
 (let ((?x23708 (* 2.0 l_0_11_24)))
 (let ((?x23958 (* ?x23708 l_0_11_9)))
 (let ((?x23471 (* 2.0 l_0_11_23)))
 (let ((?x23956 (* ?x23471 l_0_11_8)))
 (let ((?x23703 (* 2.0 l_0_11_22)))
 (let ((?x23954 (* ?x23703 l_0_11_7)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x9667 (* ?x23100 l_0_11_87)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x9730 (* ?x23097 l_0_11_86)))
 (let ((?x25110 (- (- (- (* (* 2.0 l_0_11_10) l_0_11_25) ?x9730) ?x9667) (* (* 4.0 l_0_11_175) l_0_11_190))))
 (let ((?x25114 (- (- ?x25110 (* (* 4.0 l_0_11_176) l_0_11_191)) (* (* 4.0 l_0_11_177) l_0_11_192))))
 (let ((?x25119 (+ (+ (+ (- ?x25114 (* (* 4.0 l_0_11_178) l_0_11_193)) ?x23954) ?x23956) ?x23958)))
 (= (+ (+ (- (- (- (- ?x25119 ?x23960) ?x23962) ?x23964) ?x23966) ?x24960) ?x24962) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x24033 (* l_0_11_43 l_0_11_43)))
 (let ((?x24031 (* l_0_11_42 l_0_11_42)))
 (let ((?x24029 (* l_0_11_41 l_0_11_41)))
 (let ((?x24027 (* l_0_11_40 l_0_11_40)))
 (let ((?x24025 (* l_0_11_39 l_0_11_39)))
 (let ((?x24013 (* l_0_11_15 l_0_11_15)))
 (let ((?x24011 (* l_0_11_14 l_0_11_14)))
 (let ((?x23998 (* l_0_11_13 l_0_11_13)))
 (let ((?x10266 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x23998) ?x24011)))
 (let ((?x10187 (- (- (+ ?x10266 ?x24013) (* (* 2.0 l_0_11_179) l_0_11_179)) (* (* 2.0 l_0_11_180) l_0_11_180))))
 (let ((?x10199 (- (- ?x10187 (* (* 2.0 l_0_11_181) l_0_11_181)) (* (* 2.0 l_0_11_182) l_0_11_182))))
 (let ((?x10203 (- (- (- (- ?x10199 (* (* 2.0 l_0_11_183) l_0_11_183)) ?x24025) ?x24027) ?x24029)))
 (= (- (- ?x10203 ?x24031) ?x24033) 0.0))))))))))))))
(assert
 (let ((?x23041 (* 2.0 l_0_11_43)))
 (let ((?x24086 (* ?x23041 l_0_11_48)))
 (let ((?x23038 (* 2.0 l_0_11_42)))
 (let ((?x24084 (* ?x23038 l_0_11_47)))
 (let ((?x23035 (* 2.0 l_0_11_41)))
 (let ((?x24082 (* ?x23035 l_0_11_46)))
 (let ((?x23032 (* 2.0 l_0_11_40)))
 (let ((?x24080 (* ?x23032 l_0_11_45)))
 (let ((?x23029 (* 2.0 l_0_11_39)))
 (let ((?x24078 (* ?x23029 l_0_11_44)))
 (let ((?x23008 (* 2.0 l_0_11_15)))
 (let ((?x24066 (* ?x23008 l_0_11_20)))
 (let ((?x23002 (* 2.0 l_0_11_14)))
 (let ((?x24064 (* ?x23002 l_0_11_19)))
 (let ((?x22999 (* 2.0 l_0_11_13)))
 (let ((?x24062 (* ?x22999 l_0_11_18)))
 (let ((?x22996 (* 2.0 l_0_11_12)))
 (let ((?x24060 (* ?x22996 l_0_11_17)))
 (let ((?x10378 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x24060) ?x24062) ?x24064) ?x24066)))
 (let ((?x25150 (- (- ?x10378 (* (* 4.0 l_0_11_179) l_0_11_184)) (* (* 4.0 l_0_11_180) l_0_11_185))))
 (let ((?x25154 (- (- ?x25150 (* (* 4.0 l_0_11_181) l_0_11_186)) (* (* 4.0 l_0_11_182) l_0_11_187))))
 (let ((?x25159 (- (- (- (- ?x25154 (* (* 4.0 l_0_11_183) l_0_11_188)) ?x24078) ?x24080) ?x24082)))
 (= (- (- ?x25159 ?x24084) ?x24086) 0.0))))))))))))))))))))))))
(assert
 (let ((?x24206 (* l_0_11_49 l_0_11_49)))
 (let ((?x24204 (* l_0_11_48 l_0_11_48)))
 (let ((?x24202 (* l_0_11_47 l_0_11_47)))
 (let ((?x24200 (* l_0_11_46 l_0_11_46)))
 (let ((?x24198 (* l_0_11_45 l_0_11_45)))
 (let ((?x24196 (* l_0_11_44 l_0_11_44)))
 (let ((?x24194 (* l_0_11_21 l_0_11_21)))
 (let ((?x24192 (* l_0_11_20 l_0_11_20)))
 (let ((?x24190 (* l_0_11_19 l_0_11_19)))
 (let ((?x24188 (* l_0_11_18 l_0_11_18)))
 (let ((?x10468 (- (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x24188) (* (* 2.0 l_0_11_184) l_0_11_184))))
 (let ((?x10495 (- (- ?x10468 (* (* 2.0 l_0_11_185) l_0_11_185)) (* (* 2.0 l_0_11_186) l_0_11_186))))
 (let ((?x10385 (- (- ?x10495 (* (* 2.0 l_0_11_187) l_0_11_187)) (* (* 2.0 l_0_11_188) l_0_11_188))))
 (let ((?x10424 (+ (+ (+ (- ?x10385 (* (* 2.0 l_0_11_189) l_0_11_189)) ?x24190) ?x24192) ?x24194)))
 (= (- (- (- (- (- (- ?x10424 ?x24196) ?x24198) ?x24200) ?x24202) ?x24204) ?x24206) 0.0))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x24494 (* ?x23277 l_0_11_86)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x24492 (* ?x23274 l_0_11_58)))
 (let ((?x24315 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24312 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24309 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24306 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24303 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24300 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24297 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24294 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24291 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23623 (* 2.0 l_0_11_18)))
 (let ((?x24288 (* ?x23623 l_0_11_24)))
 (let ((?x23412 (* 2.0 l_0_11_17)))
 (let ((?x24286 (* ?x23412 l_0_11_23)))
 (let ((?x23409 (* 2.0 l_0_11_16)))
 (let ((?x24278 (* ?x23409 l_0_11_22)))
 (let ((?x10641 (- (- (+ (+ ?x24278 ?x24286) ?x24288) (* (* 4.0 l_0_11_184) l_0_11_190)) (* (* 4.0 l_0_11_185) l_0_11_191))))
 (let ((?x10633 (- (- ?x10641 (* (* 4.0 l_0_11_186) l_0_11_192)) (* (* 4.0 l_0_11_187) l_0_11_193))))
 (let ((?x25192 (- (- ?x10633 (* (* 4.0 l_0_11_188) l_0_11_194)) (* (* 4.0 l_0_11_189) l_0_11_195))))
 (let ((?x25199 (- (- (- (- (+ (+ (+ ?x25192 ?x24291) ?x24294) ?x24297) ?x24300) ?x24303) ?x24306) ?x24309)))
 (= (+ (- (- (- ?x25199 ?x24312) ?x24315) ?x24492) ?x24494) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x24429 (* l_0_11_56 l_0_11_56)))
 (let ((?x24427 (* l_0_11_55 l_0_11_55)))
 (let ((?x24425 (* l_0_11_54 l_0_11_54)))
 (let ((?x24423 (* l_0_11_53 l_0_11_53)))
 (let ((?x24421 (* l_0_11_52 l_0_11_52)))
 (let ((?x24419 (* l_0_11_51 l_0_11_51)))
 (let ((?x24417 (* l_0_11_50 l_0_11_50)))
 (let ((?x24415 (* l_0_11_28 l_0_11_28)))
 (let ((?x24413 (* l_0_11_27 l_0_11_27)))
 (let ((?x24411 (* l_0_11_26 l_0_11_26)))
 (let ((?x24409 (* l_0_11_25 l_0_11_25)))
 (let ((?x24407 (* l_0_11_24 l_0_11_24)))
 (let ((?x24405 (* l_0_11_23 l_0_11_23)))
 (let ((?x24403 (* l_0_11_22 l_0_11_22)))
 (let ((?x10922 (- (* (* (- 2.0) l_0_11_190) l_0_11_190) (* (* 2.0 l_0_11_191) l_0_11_191))))
 (let ((?x25233 (- (- ?x10922 (* (* 2.0 l_0_11_192) l_0_11_192)) (* (* 2.0 l_0_11_193) l_0_11_193))))
 (let ((?x25239 (- (- ?x25233 (* (* 2.0 l_0_11_194) l_0_11_194)) (* (* 2.0 l_0_11_195) l_0_11_195))))
 (let ((?x25245 (+ (+ (+ (- ?x25239 (* (* 2.0 l_0_11_196) l_0_11_196)) ?x24403) ?x24405) ?x24407)))
 (let ((?x25252 (- (- (- (+ (+ (+ (+ ?x25245 ?x24409) ?x24411) ?x24413) ?x24415) ?x24417) ?x24419) ?x24421)))
 (= (- (- (- (- ?x25252 ?x24423) ?x24425) ?x24427) ?x24429) 0.0)))))))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x25335 (* ?x23277 l_0_11_88)))
 (let ((?x25333 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25330 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25327 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25324 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25321 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25318 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25315 (* ?x23274 l_0_11_60)))
 (let ((?x24284 (* (* 2.0 l_0_11_161) l_0_11_167)))
 (let ((?x24281 (* (* 2.0 l_0_11_160) l_0_11_166)))
 (let ((?x24276 (* (* 2.0 l_0_11_159) l_0_11_165)))
 (let ((?x24273 (* (* 2.0 l_0_11_158) l_0_11_164)))
 (let ((?x24270 (* (* 2.0 l_0_11_157) l_0_11_163)))
 (let ((?x24267 (* (* 2.0 l_0_11_156) l_0_11_162)))
 (let ((?x25277 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x25274 (* ?x24169 l_0_11_110)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25272 (* ?x24166 l_0_11_109)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x11129 (* ?x24163 l_0_11_108)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x11135 (* ?x8289 l_0_11_107)))
 (let ((?x25275 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_106) ?x11135) ?x11129) ?x25272) ?x25274)))
 (let ((?x25278 (+ ?x25275 ?x25277)))
 (let ((?x25284 (- (- ?x25278 (* (* 2.0 l_0_11_128) l_0_11_134)) (* (* 2.0 l_0_11_129) l_0_11_135))))
 (let ((?x25290 (- (- ?x25284 (* (* 2.0 l_0_11_130) l_0_11_136)) (* (* 2.0 l_0_11_131) l_0_11_137))))
 (let ((?x25296 (- (- ?x25290 (* (* 2.0 l_0_11_132) l_0_11_138)) (* (* 2.0 l_0_11_133) l_0_11_139))))
 (let ((?x25304 (+ (- (- (- (- (- (- ?x25296 ?x24267) ?x24270) ?x24273) ?x24276) ?x24281) ?x24284) (* (* 2.0 l_0_11_184) l_0_11_190))))
 (let ((?x25308 (+ (+ ?x25304 (* (* 2.0 l_0_11_185) l_0_11_191)) (* (* 2.0 l_0_11_186) l_0_11_192))))
 (let ((?x25312 (+ (+ ?x25308 (* (* 2.0 l_0_11_187) l_0_11_193)) (* (* 2.0 l_0_11_188) l_0_11_194))))
 (let ((?x25322 (- (- (- (+ ?x25312 (* (* 2.0 l_0_11_189) l_0_11_195)) ?x25315) ?x25318) ?x25321)))
 (= (+ (- (- (- (- ?x25322 ?x25324) ?x25327) ?x25330) ?x25333) ?x25335) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x25393 (* ?x23277 l_0_11_91)))
 (let ((?x25333 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25330 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25327 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25324 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25321 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25318 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25385 (* ?x23274 l_0_11_63)))
 (let ((?x25277 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x25274 (* ?x24169 l_0_11_110)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25272 (* ?x24166 l_0_11_109)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x11129 (* ?x24163 l_0_11_108)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x11135 (* ?x8289 l_0_11_107)))
 (let ((?x25383 (- (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_106) ?x11135) ?x11129) ?x25272) ?x25274)))
 (let ((?x25391 (+ (+ (+ (+ (+ (- (- ?x25383 ?x25277) ?x25385) ?x25318) ?x25321) ?x25324) ?x25327) ?x25330)))
 (= (+ (+ ?x25391 ?x25333) ?x25393) 0.0)))))))))))))))))))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x11425 (* ?x23274 l_0_11_72)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x11424 (* ?x8301 l_0_11_85)))
 (= (- ?x11424 ?x11425) 0.0))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25401 (* ?x23274 l_0_11_78)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x25400 (* ?x23097 l_0_11_85)))
 (= (- ?x25400 ?x25401) 0.0))))))
(assert
 (let ((?x24669 (* l_0_11_87 l_0_11_87)))
 (let ((?x24667 (* l_0_11_86 l_0_11_86)))
 (let ((?x25416 (+ (- (* (- l_0_11_58) l_0_11_58) (* l_0_11_59 l_0_11_59)) ?x24667)))
 (= (+ ?x25416 ?x24669) 0.0)))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x24770 (* ?x23428 l_0_11_89)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x24768 (* ?x23425 l_0_11_88)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24765 (* ?x23422 l_0_11_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_58) l_0_11_60) ?x24765) ?x24768) ?x24770) 0.0))))))))
(assert
 (let ((?x23428 (* 2.0 l_0_11_87)))
 (let ((?x24826 (* ?x23428 l_0_11_92)))
 (let ((?x23425 (* 2.0 l_0_11_86)))
 (let ((?x24823 (* ?x23425 l_0_11_91)))
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24819 (* ?x23422 l_0_11_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_58) l_0_11_63) ?x24819) ?x24823) ?x24826) 0.0))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24930 (* ?x23422 l_0_11_73)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24928 (* ?x23419 l_0_11_72)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x24904 (* ?x8289 l_0_11_87)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x9611 (* ?x8301 l_0_11_86)))
 (let ((?x24905 (+ ?x9611 ?x24904)))
 (= (- (- ?x24905 ?x24928) ?x24930) 0.0)))))))))))
(assert
 (let ((?x23422 (* 2.0 l_0_11_59)))
 (let ((?x24962 (* ?x23422 l_0_11_79)))
 (let ((?x23419 (* 2.0 l_0_11_58)))
 (let ((?x24960 (* ?x23419 l_0_11_78)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x9667 (* ?x23100 l_0_11_87)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x9730 (* ?x23097 l_0_11_86)))
 (let ((?x9670 (+ ?x9730 ?x9667)))
 (= (- (- ?x9670 ?x24960) ?x24962) 0.0)))))))))))
(assert
 (let ((?x25459 (* l_0_11_90 l_0_11_90)))
 (let ((?x25457 (* l_0_11_89 l_0_11_89)))
 (let ((?x25455 (* l_0_11_88 l_0_11_88)))
 (let ((?x25453 (* l_0_11_62 l_0_11_62)))
 (let ((?x25454 (- (- (* (- l_0_11_60) l_0_11_60) (* l_0_11_61 l_0_11_61)) ?x25453)))
 (= (+ (+ (+ ?x25454 ?x25455) ?x25457) ?x25459) 0.0)))))))
(assert
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x25486 (* ?x23647 l_0_11_93)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x25484 (* ?x23644 l_0_11_92)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x25482 (* ?x23641 l_0_11_91)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25480 (* ?x23638 l_0_11_65)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25478 (* ?x23635 l_0_11_64)))
 (let ((?x25485 (+ (+ (- (- (* (* (- 2.0) l_0_11_60) l_0_11_63) ?x25478) ?x25480) ?x25482) ?x25484)))
 (= (+ ?x25485 ?x25486) 0.0)))))))))))))
(assert
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25516 (* ?x23638 l_0_11_74)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25514 (* ?x23635 l_0_11_73)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25512 (* ?x23632 l_0_11_72)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x25504 (* ?x24163 l_0_11_90)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x25501 (* ?x8289 l_0_11_89)))
 (let ((?x25511 (+ (+ (* (* 2.0 l_0_11_100) l_0_11_88) ?x25501) ?x25504)))
 (= (- (- (- ?x25511 ?x25512) ?x25514) ?x25516) 0.0)))))))))))))
(assert
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25549 (* ?x23638 l_0_11_80)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25547 (* ?x23635 l_0_11_79)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25545 (* ?x23632 l_0_11_78)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x25543 (* ?x23103 l_0_11_90)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x25541 (* ?x23100 l_0_11_89)))
 (let ((?x25544 (+ (+ (* (* 2.0 l_0_11_106) l_0_11_88) ?x25541) ?x25543)))
 (= (- (- (- ?x25544 ?x25545) ?x25547) ?x25549) 0.0)))))))))))))
(assert
 (let ((?x25582 (* l_0_11_94 l_0_11_94)))
 (let ((?x25580 (* l_0_11_93 l_0_11_93)))
 (let ((?x25578 (* l_0_11_92 l_0_11_92)))
 (let ((?x25576 (* l_0_11_91 l_0_11_91)))
 (let ((?x25574 (* l_0_11_66 l_0_11_66)))
 (let ((?x25572 (* l_0_11_65 l_0_11_65)))
 (let ((?x25573 (- (- (* (- l_0_11_63) l_0_11_63) (* l_0_11_64 l_0_11_64)) ?x25572)))
 (= (+ (+ (+ (+ (- ?x25573 ?x25574) ?x25576) ?x25578) ?x25580) ?x25582) 0.0)))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25610 (* ?x23879 l_0_11_75)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25608 (* ?x23876 l_0_11_74)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25606 (* ?x23873 l_0_11_73)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25604 (* ?x23870 l_0_11_72)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25602 (* ?x24166 l_0_11_94)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x25600 (* ?x24163 l_0_11_93)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x25598 (* ?x8289 l_0_11_92)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x25591 (* ?x8301 l_0_11_91)))
 (let ((?x25611 (- (- (- (- (+ (+ (+ ?x25591 ?x25598) ?x25600) ?x25602) ?x25604) ?x25606) ?x25608) ?x25610)))
 (= ?x25611 0.0)))))))))))))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25646 (* ?x23879 l_0_11_81)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25644 (* ?x23876 l_0_11_80)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25642 (* ?x23873 l_0_11_79)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25640 (* ?x23870 l_0_11_78)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x25638 (* ?x23106 l_0_11_94)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x25636 (* ?x23103 l_0_11_93)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x25634 (* ?x23100 l_0_11_92)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x25633 (* ?x23097 l_0_11_91)))
 (let ((?x25647 (- (- (- (- (+ (+ (+ ?x25633 ?x25634) ?x25636) ?x25638) ?x25640) ?x25642) ?x25644) ?x25646)))
 (= ?x25647 0.0)))))))))))))))))))
(assert
 (let ((?x25697 (* l_0_11_77 l_0_11_77)))
 (let ((?x25695 (* l_0_11_76 l_0_11_76)))
 (let ((?x25693 (* l_0_11_75 l_0_11_75)))
 (let ((?x25691 (* l_0_11_74 l_0_11_74)))
 (let ((?x25689 (* l_0_11_73 l_0_11_73)))
 (let ((?x25687 (* l_0_11_72 l_0_11_72)))
 (let ((?x25685 (* l_0_11_105 l_0_11_105)))
 (let ((?x25683 (* l_0_11_104 l_0_11_104)))
 (let ((?x25681 (* l_0_11_103 l_0_11_103)))
 (let ((?x25679 (* l_0_11_102 l_0_11_102)))
 (let ((?x25680 (+ (+ (* l_0_11_100 l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25679)))
 (let ((?x25686 (+ (+ (+ ?x25680 ?x25681) ?x25683) ?x25685)))
 (= (- (- (- (- (- (- ?x25686 ?x25687) ?x25689) ?x25691) ?x25693) ?x25695) ?x25697) 0.0))))))))))))))
(assert
 (let ((?x25333 (* (* 2.0 l_0_11_77) l_0_11_83)))
 (let ((?x25330 (* (* 2.0 l_0_11_76) l_0_11_82)))
 (let ((?x25327 (* (* 2.0 l_0_11_75) l_0_11_81)))
 (let ((?x25324 (* (* 2.0 l_0_11_74) l_0_11_80)))
 (let ((?x25321 (* (* 2.0 l_0_11_73) l_0_11_79)))
 (let ((?x25318 (* (* 2.0 l_0_11_72) l_0_11_78)))
 (let ((?x25277 (* (* 2.0 l_0_11_105) l_0_11_111)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x25274 (* ?x24169 l_0_11_110)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25272 (* ?x24166 l_0_11_109)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x11129 (* ?x24163 l_0_11_108)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x11135 (* ?x8289 l_0_11_107)))
 (let ((?x25275 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_106) ?x11135) ?x11129) ?x25272) ?x25274)))
 (let ((?x25278 (+ ?x25275 ?x25277)))
 (= (- (- (- (- (- (- ?x25278 ?x25318) ?x25321) ?x25324) ?x25327) ?x25330) ?x25333) 0.0)))))))))))))))))))
(assert
 (let ((?x25756 (* l_0_11_84 l_0_11_84)))
 (let ((?x25754 (* l_0_11_83 l_0_11_83)))
 (let ((?x25752 (* l_0_11_82 l_0_11_82)))
 (let ((?x25750 (* l_0_11_81 l_0_11_81)))
 (let ((?x25748 (* l_0_11_80 l_0_11_80)))
 (let ((?x25746 (* l_0_11_79 l_0_11_79)))
 (let ((?x25744 (* l_0_11_78 l_0_11_78)))
 (let ((?x25742 (* l_0_11_112 l_0_11_112)))
 (let ((?x25740 (* l_0_11_111 l_0_11_111)))
 (let ((?x25738 (* l_0_11_110 l_0_11_110)))
 (let ((?x25736 (* l_0_11_109 l_0_11_109)))
 (let ((?x25734 (* l_0_11_108 l_0_11_108)))
 (let ((?x25735 (+ (+ (* l_0_11_106 l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25734)))
 (let ((?x25743 (+ (+ (+ (+ ?x25735 ?x25736) ?x25738) ?x25740) ?x25742)))
 (let ((?x25757 (- (- (- (- (- (- (- ?x25743 ?x25744) ?x25746) ?x25748) ?x25750) ?x25752) ?x25754) ?x25756)))
 (= ?x25757 0.0)))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x25335 (* ?x23277 l_0_11_88)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25315 (* ?x23274 l_0_11_60)))
 (let ((?x25788 (* l_0_11_230 l_0_11_230)))
 (let ((?x25786 (* l_0_11_229 l_0_11_229)))
 (let ((?x25784 (* l_0_11_228 l_0_11_228)))
 (let ((?x25782 (* l_0_11_202 l_0_11_202)))
 (let ((?x25780 (* l_0_11_201 l_0_11_201)))
 (let ((?x25778 (* l_0_11_200 l_0_11_200)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23127 (* ?x23005 l_0_11_144)))
 (let ((?x25777 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_116) ?x23127) (* (* 2.0 l_0_11_169) l_0_11_172))))
 (let ((?x25790 (- (- (- (- (- (- (- ?x25777 ?x25778) ?x25780) ?x25782) ?x25784) ?x25786) ?x25788) ?x25315)))
 (= (+ ?x25790 ?x25335) 0.0))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x25393 (* ?x23277 l_0_11_91)))
 (let ((?x25335 (* ?x23277 l_0_11_88)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25385 (* ?x23274 l_0_11_63)))
 (let ((?x25315 (* ?x23274 l_0_11_60)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23249 (* ?x23005 l_0_11_147)))
 (let ((?x25807 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_119) ?x23249) (* (* 2.0 l_0_11_169) l_0_11_175))))
 (let ((?x25813 (- (- ?x25807 (* (* 2.0 l_0_11_200) l_0_11_203)) (* (* 2.0 l_0_11_201) l_0_11_204))))
 (let ((?x25819 (- (- ?x25813 (* (* 2.0 l_0_11_202) l_0_11_205)) (* (* 2.0 l_0_11_228) l_0_11_231))))
 (let ((?x25825 (- (- ?x25819 (* (* 2.0 l_0_11_229) l_0_11_232)) (* (* 2.0 l_0_11_230) l_0_11_233))))
 (= (+ (- (- (+ ?x25825 ?x25315) ?x25385) ?x25335) ?x25393) 0.0))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x23278 (* ?x23277 l_0_11_95)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x23275 (* ?x23274 l_0_11_67)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x7777 (* ?x23005 l_0_11_151)))
 (let ((?x25861 (+ (- (* (* (- 2.0) l_0_11_113) l_0_11_123) ?x7777) (* (* 2.0 l_0_11_169) l_0_11_179))))
 (let ((?x25865 (- (- ?x25861 (* (* 2.0 l_0_11_200) l_0_11_207)) (* (* 2.0 l_0_11_201) l_0_11_208))))
 (let ((?x25869 (- (- ?x25865 (* (* 2.0 l_0_11_202) l_0_11_209)) (* (* 2.0 l_0_11_228) l_0_11_235))))
 (let ((?x25873 (- (- ?x25869 (* (* 2.0 l_0_11_229) l_0_11_236)) (* (* 2.0 l_0_11_230) l_0_11_237))))
 (= (+ (- ?x25873 ?x23275) ?x23278) 0.0))))))))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x11425 (* ?x23274 l_0_11_72)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x23266 (* ?x23005 l_0_11_156)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x11424 (* ?x8301 l_0_11_85)))
 (let ((?x11764 (+ (- (- ?x11424 (* (* 2.0 l_0_11_113) l_0_11_128)) ?x23266) (* (* 2.0 l_0_11_169) l_0_11_184))))
 (let ((?x25899 (- (- ?x11764 (* (* 2.0 l_0_11_200) l_0_11_212)) (* (* 2.0 l_0_11_201) l_0_11_213))))
 (let ((?x25903 (- (- ?x25899 (* (* 2.0 l_0_11_202) l_0_11_214)) (* (* 2.0 l_0_11_228) l_0_11_240))))
 (let ((?x25907 (- (- ?x25903 (* (* 2.0 l_0_11_229) l_0_11_241)) (* (* 2.0 l_0_11_230) l_0_11_242))))
 (= (- ?x25907 ?x11425) 0.0))))))))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25401 (* ?x23274 l_0_11_78)))
 (let ((?x23005 (* 2.0 l_0_11_141)))
 (let ((?x7773 (* ?x23005 l_0_11_162)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x25400 (* ?x23097 l_0_11_85)))
 (let ((?x25929 (+ (- (- ?x25400 (* (* 2.0 l_0_11_113) l_0_11_134)) ?x7773) (* (* 2.0 l_0_11_169) l_0_11_190))))
 (let ((?x25933 (- (- ?x25929 (* (* 2.0 l_0_11_200) l_0_11_218)) (* (* 2.0 l_0_11_201) l_0_11_219))))
 (let ((?x25937 (- (- ?x25933 (* (* 2.0 l_0_11_202) l_0_11_220)) (* (* 2.0 l_0_11_228) l_0_11_246))))
 (let ((?x25941 (- (- ?x25937 (* (* 2.0 l_0_11_229) l_0_11_247)) (* (* 2.0 l_0_11_230) l_0_11_248))))
 (= (- ?x25941 ?x25401) 0.0))))))))))))
(assert
 (let ((?x25459 (* l_0_11_90 l_0_11_90)))
 (let ((?x25457 (* l_0_11_89 l_0_11_89)))
 (let ((?x25455 (* l_0_11_88 l_0_11_88)))
 (let ((?x25453 (* l_0_11_62 l_0_11_62)))
 (let ((?x25451 (* l_0_11_61 l_0_11_61)))
 (let ((?x25463 (* l_0_11_60 l_0_11_60)))
 (let ((?x24786 (* l_0_11_174 l_0_11_174)))
 (let ((?x9345 (* l_0_11_173 l_0_11_173)))
 (let ((?x9356 (* l_0_11_172 l_0_11_172)))
 (let ((?x23499 (* l_0_11_146 l_0_11_146)))
 (let ((?x23491 (* l_0_11_145 l_0_11_145)))
 (let ((?x7884 (* l_0_11_144 l_0_11_144)))
 (let ((?x25970 (* l_0_11_118 l_0_11_118)))
 (let ((?x25971 (- (- (* (- l_0_11_116) l_0_11_116) (* l_0_11_117 l_0_11_117)) ?x25970)))
 (let ((?x25978 (- (+ (+ (+ (- (- (- ?x25971 ?x7884) ?x23491) ?x23499) ?x9356) ?x9345) ?x24786) ?x25463)))
 (= (+ (+ (+ (- (- ?x25978 ?x25451) ?x25453) ?x25455) ?x25457) ?x25459) 0.0)))))))))))))))))
(assert
 (let ((?x25459 (* l_0_11_90 l_0_11_90)))
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x25486 (* ?x23647 l_0_11_93)))
 (let ((?x25457 (* l_0_11_89 l_0_11_89)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x25484 (* ?x23644 l_0_11_92)))
 (let ((?x25455 (* l_0_11_88 l_0_11_88)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x25482 (* ?x23641 l_0_11_91)))
 (let ((?x25453 (* l_0_11_62 l_0_11_62)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25480 (* ?x23638 l_0_11_65)))
 (let ((?x25451 (* l_0_11_61 l_0_11_61)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25478 (* ?x23635 l_0_11_64)))
 (let ((?x25463 (* l_0_11_60 l_0_11_60)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x26008 (* ?x23632 l_0_11_63)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23527 (* ?x23526 l_0_11_149)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23524 (* ?x23523 l_0_11_148)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23522 (* ?x23521 l_0_11_147)))
 (let ((?x25995 (- (* (* (- 2.0) l_0_11_116) l_0_11_119) (* (* 2.0 l_0_11_117) l_0_11_120))))
 (let ((?x26001 (- (- (- (- ?x25995 (* (* 2.0 l_0_11_118) l_0_11_121)) ?x23522) ?x23524) ?x23527)))
 (let ((?x26005 (+ (+ ?x26001 (* (* 2.0 l_0_11_172) l_0_11_175)) (* (* 2.0 l_0_11_173) l_0_11_176))))
 (let ((?x26011 (- (+ (- (+ ?x26005 (* (* 2.0 l_0_11_174) l_0_11_177)) ?x26008) ?x25463) ?x25478)))
 (let ((?x26018 (- (+ (- (+ (+ (- (+ ?x26011 ?x25451) ?x25480) ?x25453) ?x25482) ?x25455) ?x25484) ?x25457)))
 (= (- (+ ?x26018 ?x25486) ?x25459) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x23648 (* ?x23647 l_0_11_97)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x23645 (* ?x23644 l_0_11_96)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x23642 (* ?x23641 l_0_11_95)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x23639 (* ?x23638 l_0_11_69)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x23636 (* ?x23635 l_0_11_68)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x23633 (* ?x23632 l_0_11_67)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23585 (* ?x23526 l_0_11_153)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23583 (* ?x23523 l_0_11_152)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23581 (* ?x23521 l_0_11_151)))
 (let ((?x26046 (- (* (* (- 2.0) l_0_11_116) l_0_11_123) (* (* 2.0 l_0_11_117) l_0_11_124))))
 (let ((?x26051 (- (- (- (- ?x26046 (* (* 2.0 l_0_11_118) l_0_11_125)) ?x23581) ?x23583) ?x23585)))
 (let ((?x26055 (+ (+ ?x26051 (* (* 2.0 l_0_11_172) l_0_11_179)) (* (* 2.0 l_0_11_173) l_0_11_180))))
 (let ((?x26060 (- (- (- (+ ?x26055 (* (* 2.0 l_0_11_174) l_0_11_181)) ?x23633) ?x23636) ?x23639)))
 (= (+ (+ (+ ?x26060 ?x23642) ?x23645) ?x23648) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25516 (* ?x23638 l_0_11_74)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25514 (* ?x23635 l_0_11_73)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25512 (* ?x23632 l_0_11_72)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23617 (* ?x23526 l_0_11_158)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x23615 (* ?x23523 l_0_11_157)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x23614 (* ?x23521 l_0_11_156)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x25504 (* ?x24163 l_0_11_90)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x25501 (* ?x8289 l_0_11_89)))
 (let ((?x25511 (+ (+ (* (* 2.0 l_0_11_100) l_0_11_88) ?x25501) ?x25504)))
 (let ((?x26086 (- (- ?x25511 (* (* 2.0 l_0_11_116) l_0_11_128)) (* (* 2.0 l_0_11_117) l_0_11_129))))
 (let ((?x26091 (- (- (- (- ?x26086 (* (* 2.0 l_0_11_118) l_0_11_130)) ?x23614) ?x23615) ?x23617)))
 (let ((?x26095 (+ (+ ?x26091 (* (* 2.0 l_0_11_172) l_0_11_184)) (* (* 2.0 l_0_11_173) l_0_11_185))))
 (let ((?x26100 (- (- (- (+ ?x26095 (* (* 2.0 l_0_11_174) l_0_11_186)) ?x25512) ?x25514) ?x25516)))
 (= ?x26100 0.0)))))))))))))))))))))))
(assert
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25549 (* ?x23638 l_0_11_80)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25547 (* ?x23635 l_0_11_79)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25545 (* ?x23632 l_0_11_78)))
 (let ((?x23526 (* 2.0 l_0_11_146)))
 (let ((?x23690 (* ?x23526 l_0_11_164)))
 (let ((?x23523 (* 2.0 l_0_11_145)))
 (let ((?x7960 (* ?x23523 l_0_11_163)))
 (let ((?x23521 (* 2.0 l_0_11_144)))
 (let ((?x7958 (* ?x23521 l_0_11_162)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x25543 (* ?x23103 l_0_11_90)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x25541 (* ?x23100 l_0_11_89)))
 (let ((?x25544 (+ (+ (* (* 2.0 l_0_11_106) l_0_11_88) ?x25541) ?x25543)))
 (let ((?x26117 (- (- ?x25544 (* (* 2.0 l_0_11_116) l_0_11_134)) (* (* 2.0 l_0_11_117) l_0_11_135))))
 (let ((?x26122 (- (- (- (- ?x26117 (* (* 2.0 l_0_11_118) l_0_11_136)) ?x7958) ?x7960) ?x23690)))
 (let ((?x26126 (+ (+ ?x26122 (* (* 2.0 l_0_11_172) l_0_11_190)) (* (* 2.0 l_0_11_173) l_0_11_191))))
 (let ((?x26131 (- (- (- (+ ?x26126 (* (* 2.0 l_0_11_174) l_0_11_192)) ?x25545) ?x25547) ?x25549)))
 (= ?x26131 0.0)))))))))))))))))))))))
(assert
 (let ((?x25582 (* l_0_11_94 l_0_11_94)))
 (let ((?x25580 (* l_0_11_93 l_0_11_93)))
 (let ((?x25578 (* l_0_11_92 l_0_11_92)))
 (let ((?x25576 (* l_0_11_91 l_0_11_91)))
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x25486 (* ?x23647 l_0_11_93)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x25484 (* ?x23644 l_0_11_92)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x25482 (* ?x23641 l_0_11_91)))
 (let ((?x25574 (* l_0_11_66 l_0_11_66)))
 (let ((?x25572 (* l_0_11_65 l_0_11_65)))
 (let ((?x25570 (* l_0_11_64 l_0_11_64)))
 (let ((?x25586 (* l_0_11_63 l_0_11_63)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25480 (* ?x23638 l_0_11_65)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25478 (* ?x23635 l_0_11_64)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x26008 (* ?x23632 l_0_11_63)))
 (let ((?x9869 (* l_0_11_178 l_0_11_178)))
 (let ((?x9863 (* l_0_11_177 l_0_11_177)))
 (let ((?x25016 (* l_0_11_176 l_0_11_176)))
 (let ((?x9857 (* l_0_11_175 l_0_11_175)))
 (let ((?x23754 (* l_0_11_150 l_0_11_150)))
 (let ((?x23752 (* l_0_11_149 l_0_11_149)))
 (let ((?x23750 (* l_0_11_148 l_0_11_148)))
 (let ((?x23740 (* l_0_11_147 l_0_11_147)))
 (let ((?x26155 (* l_0_11_122 l_0_11_122)))
 (let ((?x26153 (* l_0_11_121 l_0_11_121)))
 (let ((?x26154 (- (- (* (- l_0_11_119) l_0_11_119) (* l_0_11_120 l_0_11_120)) ?x26153)))
 (let ((?x26162 (+ (+ (- (- (- (- (- ?x26154 ?x26155) ?x23740) ?x23750) ?x23752) ?x23754) ?x9857) ?x25016)))
 (let ((?x26169 (- (- (+ (+ (+ (+ (+ ?x26162 ?x9863) ?x9869) ?x26008) ?x25478) ?x25480) ?x25586) ?x25570)))
 (let ((?x26176 (+ (+ (- (- (- (- (- ?x26169 ?x25572) ?x25574) ?x25482) ?x25484) ?x25486) ?x25576) ?x25578)))
 (= (+ (+ ?x26176 ?x25580) ?x25582) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23892 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23889 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23886 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23883 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23647 (* 2.0 l_0_11_90)))
 (let ((?x23648 (* ?x23647 l_0_11_97)))
 (let ((?x23644 (* 2.0 l_0_11_89)))
 (let ((?x23645 (* ?x23644 l_0_11_96)))
 (let ((?x23641 (* 2.0 l_0_11_88)))
 (let ((?x23642 (* ?x23641 l_0_11_95)))
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x23880 (* ?x23879 l_0_11_70)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x23877 (* ?x23876 l_0_11_69)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x23874 (* ?x23873 l_0_11_68)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x23871 (* ?x23870 l_0_11_67)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x23639 (* ?x23638 l_0_11_69)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x23636 (* ?x23635 l_0_11_68)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x23633 (* ?x23632 l_0_11_67)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23800 (* ?x23799 l_0_11_154)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23797 (* ?x23796 l_0_11_153)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23794 (* ?x23793 l_0_11_152)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23791 (* ?x23790 l_0_11_151)))
 (let ((?x12321 (- (* (* (- 2.0) l_0_11_119) l_0_11_123) (* (* 2.0 l_0_11_120) l_0_11_124))))
 (let ((?x26190 (- (- ?x12321 (* (* 2.0 l_0_11_121) l_0_11_125)) (* (* 2.0 l_0_11_122) l_0_11_126))))
 (let ((?x26196 (+ (- (- (- (- ?x26190 ?x23791) ?x23794) ?x23797) ?x23800) (* (* 2.0 l_0_11_175) l_0_11_179))))
 (let ((?x26200 (+ (+ ?x26196 (* (* 2.0 l_0_11_176) l_0_11_180)) (* (* 2.0 l_0_11_177) l_0_11_181))))
 (let ((?x26205 (+ (+ (+ (+ ?x26200 (* (* 2.0 l_0_11_178) l_0_11_182)) ?x23633) ?x23636) ?x23639)))
 (let ((?x26212 (- (- (- (- (- (- (- ?x26205 ?x23871) ?x23874) ?x23877) ?x23880) ?x23642) ?x23645) ?x23648)))
 (= (+ (+ (+ (+ ?x26212 ?x23883) ?x23886) ?x23889) ?x23892) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25610 (* ?x23879 l_0_11_75)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25608 (* ?x23876 l_0_11_74)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25606 (* ?x23873 l_0_11_73)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25604 (* ?x23870 l_0_11_72)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25516 (* ?x23638 l_0_11_74)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25514 (* ?x23635 l_0_11_73)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25512 (* ?x23632 l_0_11_72)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23843 (* ?x23799 l_0_11_159)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23839 (* ?x23796 l_0_11_158)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23835 (* ?x23793 l_0_11_157)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23831 (* ?x23790 l_0_11_156)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25602 (* ?x24166 l_0_11_94)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x25600 (* ?x24163 l_0_11_93)))
 (let ((?x25504 (* ?x24163 l_0_11_90)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x25598 (* ?x8289 l_0_11_92)))
 (let ((?x25501 (* ?x8289 l_0_11_89)))
 (let ((?x8301 (* 2.0 l_0_11_100)))
 (let ((?x25591 (* ?x8301 l_0_11_91)))
 (let ((?x12455 (- (+ (- (+ (* (* (- 2.0) l_0_11_100) l_0_11_88) ?x25591) ?x25501) ?x25598) ?x25504)))
 (let ((?x12476 (- (- (+ (+ ?x12455 ?x25600) ?x25602) (* (* 2.0 l_0_11_119) l_0_11_128)) (* (* 2.0 l_0_11_120) l_0_11_129))))
 (let ((?x12478 (- (- ?x12476 (* (* 2.0 l_0_11_121) l_0_11_130)) (* (* 2.0 l_0_11_122) l_0_11_131))))
 (let ((?x12471 (+ (- (- (- (- ?x12478 ?x23831) ?x23835) ?x23839) ?x23843) (* (* 2.0 l_0_11_175) l_0_11_184))))
 (let ((?x12394 (+ (+ ?x12471 (* (* 2.0 l_0_11_176) l_0_11_185)) (* (* 2.0 l_0_11_177) l_0_11_186))))
 (let ((?x12360 (+ (+ (+ (+ ?x12394 (* (* 2.0 l_0_11_178) l_0_11_187)) ?x25512) ?x25514) ?x25516)))
 (= (- (- (- (- ?x12360 ?x25604) ?x25606) ?x25608) ?x25610) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25646 (* ?x23879 l_0_11_81)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25644 (* ?x23876 l_0_11_80)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25642 (* ?x23873 l_0_11_79)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25640 (* ?x23870 l_0_11_78)))
 (let ((?x23638 (* 2.0 l_0_11_62)))
 (let ((?x25549 (* ?x23638 l_0_11_80)))
 (let ((?x23635 (* 2.0 l_0_11_61)))
 (let ((?x25547 (* ?x23635 l_0_11_79)))
 (let ((?x23632 (* 2.0 l_0_11_60)))
 (let ((?x25545 (* ?x23632 l_0_11_78)))
 (let ((?x23799 (* 2.0 l_0_11_150)))
 (let ((?x23952 (* ?x23799 l_0_11_165)))
 (let ((?x23796 (* 2.0 l_0_11_149)))
 (let ((?x23950 (* ?x23796 l_0_11_164)))
 (let ((?x23793 (* 2.0 l_0_11_148)))
 (let ((?x23948 (* ?x23793 l_0_11_163)))
 (let ((?x23790 (* 2.0 l_0_11_147)))
 (let ((?x23946 (* ?x23790 l_0_11_162)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x25638 (* ?x23106 l_0_11_94)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x25636 (* ?x23103 l_0_11_93)))
 (let ((?x25543 (* ?x23103 l_0_11_90)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x25634 (* ?x23100 l_0_11_92)))
 (let ((?x25541 (* ?x23100 l_0_11_89)))
 (let ((?x23097 (* 2.0 l_0_11_106)))
 (let ((?x25633 (* ?x23097 l_0_11_91)))
 (let ((?x26251 (- (+ (- (+ (* (* (- 2.0) l_0_11_106) l_0_11_88) ?x25633) ?x25541) ?x25634) ?x25543)))
 (let ((?x26257 (- (- (+ (+ ?x26251 ?x25636) ?x25638) (* (* 2.0 l_0_11_119) l_0_11_134)) (* (* 2.0 l_0_11_120) l_0_11_135))))
 (let ((?x26261 (- (- ?x26257 (* (* 2.0 l_0_11_121) l_0_11_136)) (* (* 2.0 l_0_11_122) l_0_11_137))))
 (let ((?x26267 (+ (- (- (- (- ?x26261 ?x23946) ?x23948) ?x23950) ?x23952) (* (* 2.0 l_0_11_175) l_0_11_190))))
 (let ((?x26271 (+ (+ ?x26267 (* (* 2.0 l_0_11_176) l_0_11_191)) (* (* 2.0 l_0_11_177) l_0_11_192))))
 (let ((?x26276 (+ (+ (+ (+ ?x26271 (* (* 2.0 l_0_11_178) l_0_11_193)) ?x25545) ?x25547) ?x25549)))
 (= (- (- (- (- ?x26276 ?x25640) ?x25642) ?x25644) ?x25646) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24106 (* l_0_11_99 l_0_11_99)))
 (let ((?x24104 (* l_0_11_98 l_0_11_98)))
 (let ((?x24102 (* l_0_11_97 l_0_11_97)))
 (let ((?x24100 (* l_0_11_96 l_0_11_96)))
 (let ((?x24098 (* l_0_11_95 l_0_11_95)))
 (let ((?x24096 (* l_0_11_71 l_0_11_71)))
 (let ((?x24094 (* l_0_11_70 l_0_11_70)))
 (let ((?x24092 (* l_0_11_69 l_0_11_69)))
 (let ((?x24090 (* l_0_11_68 l_0_11_68)))
 (let ((?x24088 (* l_0_11_67 l_0_11_67)))
 (let ((?x10365 (* l_0_11_183 l_0_11_183)))
 (let ((?x10356 (* l_0_11_182 l_0_11_182)))
 (let ((?x10350 (* l_0_11_181 l_0_11_181)))
 (let ((?x10281 (* l_0_11_180 l_0_11_180)))
 (let ((?x10275 (* l_0_11_179 l_0_11_179)))
 (let ((?x24023 (* l_0_11_155 l_0_11_155)))
 (let ((?x24021 (* l_0_11_154 l_0_11_154)))
 (let ((?x24019 (* l_0_11_153 l_0_11_153)))
 (let ((?x24017 (* l_0_11_152 l_0_11_152)))
 (let ((?x24015 (* l_0_11_151 l_0_11_151)))
 (let ((?x26299 (* l_0_11_127 l_0_11_127)))
 (let ((?x12752 (* l_0_11_126 l_0_11_126)))
 (let ((?x12750 (* l_0_11_125 l_0_11_125)))
 (let ((?x12751 (- (- (* (- l_0_11_123) l_0_11_123) (* l_0_11_124 l_0_11_124)) ?x12750)))
 (let ((?x26305 (- (- (- (- (- (- (- ?x12751 ?x12752) ?x26299) ?x24015) ?x24017) ?x24019) ?x24021) ?x24023)))
 (let ((?x26312 (- (- (+ (+ (+ (+ (+ ?x26305 ?x10275) ?x10281) ?x10350) ?x10356) ?x10365) ?x24088) ?x24090)))
 (let ((?x26319 (+ (+ (+ (+ (- (- (- ?x26312 ?x24092) ?x24094) ?x24096) ?x24098) ?x24100) ?x24102) ?x24104)))
 (= (+ ?x26319 ?x24106) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x24216 (* ?x23173 l_0_11_76)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x24214 (* ?x23170 l_0_11_75)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x24212 (* ?x23167 l_0_11_74)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x24210 (* ?x23164 l_0_11_73)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x24208 (* ?x23161 l_0_11_72)))
 (let ((?x23141 (* 2.0 l_0_11_155)))
 (let ((?x24076 (* ?x23141 l_0_11_160)))
 (let ((?x23138 (* 2.0 l_0_11_154)))
 (let ((?x24074 (* ?x23138 l_0_11_159)))
 (let ((?x23135 (* 2.0 l_0_11_153)))
 (let ((?x24072 (* ?x23135 l_0_11_158)))
 (let ((?x23132 (* 2.0 l_0_11_152)))
 (let ((?x24070 (* ?x23132 l_0_11_157)))
 (let ((?x23129 (* 2.0 l_0_11_151)))
 (let ((?x24068 (* ?x23129 l_0_11_156)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x24170 (* ?x24169 l_0_11_99)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x24167 (* ?x24166 l_0_11_98)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x24164 (* ?x24163 l_0_11_97)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x8279 (* ?x8289 l_0_11_96)))
 (let ((?x24171 (+ (+ (+ (+ (* (* 2.0 l_0_11_100) l_0_11_95) ?x8279) ?x24164) ?x24167) ?x24170)))
 (let ((?x12943 (- (- ?x24171 (* (* 2.0 l_0_11_123) l_0_11_128)) (* (* 2.0 l_0_11_124) l_0_11_129))))
 (let ((?x12950 (- (- ?x12943 (* (* 2.0 l_0_11_125) l_0_11_130)) (* (* 2.0 l_0_11_126) l_0_11_131))))
 (let ((?x12942 (- (- (- (- ?x12950 (* (* 2.0 l_0_11_127) l_0_11_132)) ?x24068) ?x24070) ?x24072)))
 (let ((?x26331 (+ (+ (- (- ?x12942 ?x24074) ?x24076) (* (* 2.0 l_0_11_179) l_0_11_184)) (* (* 2.0 l_0_11_180) l_0_11_185))))
 (let ((?x26335 (+ (+ ?x26331 (* (* 2.0 l_0_11_181) l_0_11_186)) (* (* 2.0 l_0_11_182) l_0_11_187))))
 (let ((?x26340 (- (- (- (+ ?x26335 (* (* 2.0 l_0_11_183) l_0_11_188)) ?x24208) ?x24210) ?x24212)))
 (= (- (- ?x26340 ?x24214) ?x24216) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25697 (* l_0_11_77 l_0_11_77)))
 (let ((?x25695 (* l_0_11_76 l_0_11_76)))
 (let ((?x25693 (* l_0_11_75 l_0_11_75)))
 (let ((?x25691 (* l_0_11_74 l_0_11_74)))
 (let ((?x25689 (* l_0_11_73 l_0_11_73)))
 (let ((?x25687 (* l_0_11_72 l_0_11_72)))
 (let ((?x10627 (* l_0_11_189 l_0_11_189)))
 (let ((?x10619 (* l_0_11_188 l_0_11_188)))
 (let ((?x10607 (* l_0_11_187 l_0_11_187)))
 (let ((?x10601 (* l_0_11_186 l_0_11_186)))
 (let ((?x10595 (* l_0_11_185 l_0_11_185)))
 (let ((?x10578 (* l_0_11_184 l_0_11_184)))
 (let ((?x24184 (* l_0_11_161 l_0_11_161)))
 (let ((?x24182 (* l_0_11_160 l_0_11_160)))
 (let ((?x24178 (* l_0_11_159 l_0_11_159)))
 (let ((?x24176 (* l_0_11_158 l_0_11_158)))
 (let ((?x24174 (* l_0_11_157 l_0_11_157)))
 (let ((?x24172 (* l_0_11_156 l_0_11_156)))
 (let ((?x26383 (* l_0_11_133 l_0_11_133)))
 (let ((?x26381 (* l_0_11_132 l_0_11_132)))
 (let ((?x26379 (* l_0_11_131 l_0_11_131)))
 (let ((?x26377 (* l_0_11_130 l_0_11_130)))
 (let ((?x26375 (* l_0_11_129 l_0_11_129)))
 (let ((?x26373 (* l_0_11_128 l_0_11_128)))
 (let ((?x25685 (* l_0_11_105 l_0_11_105)))
 (let ((?x25683 (* l_0_11_104 l_0_11_104)))
 (let ((?x25681 (* l_0_11_103 l_0_11_103)))
 (let ((?x25679 (* l_0_11_102 l_0_11_102)))
 (let ((?x25680 (+ (+ (* l_0_11_100 l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25679)))
 (let ((?x25686 (+ (+ (+ ?x25680 ?x25681) ?x25683) ?x25685)))
 (let ((?x26385 (- (- (- (- (- (- (- ?x25686 ?x26373) ?x26375) ?x26377) ?x26379) ?x26381) ?x26383) ?x24172)))
 (let ((?x26392 (+ (+ (- (- (- (- (- ?x26385 ?x24174) ?x24176) ?x24178) ?x24182) ?x24184) ?x10578) ?x10595)))
 (let ((?x26399 (- (- (- (+ (+ (+ (+ ?x26392 ?x10601) ?x10607) ?x10619) ?x10627) ?x25687) ?x25689) ?x25691)))
 (= (- (- (- ?x26399 ?x25693) ?x25695) ?x25697) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25756 (* l_0_11_84 l_0_11_84)))
 (let ((?x25754 (* l_0_11_83 l_0_11_83)))
 (let ((?x25752 (* l_0_11_82 l_0_11_82)))
 (let ((?x25750 (* l_0_11_81 l_0_11_81)))
 (let ((?x25748 (* l_0_11_80 l_0_11_80)))
 (let ((?x25746 (* l_0_11_79 l_0_11_79)))
 (let ((?x25744 (* l_0_11_78 l_0_11_78)))
 (let ((?x11082 (* l_0_11_196 l_0_11_196)))
 (let ((?x11070 (* l_0_11_195 l_0_11_195)))
 (let ((?x11080 (* l_0_11_194 l_0_11_194)))
 (let ((?x11074 (* l_0_11_193 l_0_11_193)))
 (let ((?x11068 (* l_0_11_192 l_0_11_192)))
 (let ((?x25260 (* l_0_11_191 l_0_11_191)))
 (let ((?x25258 (* l_0_11_190 l_0_11_190)))
 (let ((?x24401 (* l_0_11_168 l_0_11_168)))
 (let ((?x24399 (* l_0_11_167 l_0_11_167)))
 (let ((?x24397 (* l_0_11_166 l_0_11_166)))
 (let ((?x24395 (* l_0_11_165 l_0_11_165)))
 (let ((?x24393 (* l_0_11_164 l_0_11_164)))
 (let ((?x24391 (* l_0_11_163 l_0_11_163)))
 (let ((?x24390 (* l_0_11_162 l_0_11_162)))
 (let ((?x13400 (* l_0_11_140 l_0_11_140)))
 (let ((?x13394 (* l_0_11_139 l_0_11_139)))
 (let ((?x13388 (* l_0_11_138 l_0_11_138)))
 (let ((?x13458 (* l_0_11_137 l_0_11_137)))
 (let ((?x13464 (* l_0_11_136 l_0_11_136)))
 (let ((?x13470 (* l_0_11_135 l_0_11_135)))
 (let ((?x13474 (* l_0_11_134 l_0_11_134)))
 (let ((?x25742 (* l_0_11_112 l_0_11_112)))
 (let ((?x25740 (* l_0_11_111 l_0_11_111)))
 (let ((?x25738 (* l_0_11_110 l_0_11_110)))
 (let ((?x25736 (* l_0_11_109 l_0_11_109)))
 (let ((?x25734 (* l_0_11_108 l_0_11_108)))
 (let ((?x25735 (+ (+ (* l_0_11_106 l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25734)))
 (let ((?x25743 (+ (+ (+ (+ ?x25735 ?x25736) ?x25738) ?x25740) ?x25742)))
 (let ((?x13377 (- (- (- (- (- (- (- ?x25743 ?x13474) ?x13470) ?x13464) ?x13458) ?x13388) ?x13394) ?x13400)))
 (let ((?x13389 (- (- (- (- (- (- (- ?x13377 ?x24390) ?x24391) ?x24393) ?x24395) ?x24397) ?x24399) ?x24401)))
 (let ((?x26411 (+ (+ (+ (+ (+ (+ (+ ?x13389 ?x25258) ?x25260) ?x11068) ?x11074) ?x11080) ?x11070) ?x11082)))
 (let ((?x26418 (- (- (- (- (- (- (- ?x26411 ?x25744) ?x25746) ?x25748) ?x25750) ?x25752) ?x25754) ?x25756)))
 (= ?x26418 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x25393 (* ?x23277 l_0_11_91)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25385 (* ?x23274 l_0_11_63)))
 (let ((?x26437 (* l_0_11_234 l_0_11_234)))
 (let ((?x26435 (* l_0_11_233 l_0_11_233)))
 (let ((?x26433 (* l_0_11_232 l_0_11_232)))
 (let ((?x26431 (* l_0_11_231 l_0_11_231)))
 (let ((?x26429 (* l_0_11_206 l_0_11_206)))
 (let ((?x13572 (* l_0_11_205 l_0_11_205)))
 (let ((?x13573 (- (- (* (- l_0_11_203) l_0_11_203) (* l_0_11_204 l_0_11_204)) ?x13572)))
 (let ((?x26440 (- (+ (- (- (- (- (- ?x13573 ?x26429) ?x26431) ?x26433) ?x26435) ?x26437) ?x25385) ?x25393)))
 (= ?x26440 0.0))))))))))))))
(assert
 (let ((?x23277 (* 2.0 l_0_11_85)))
 (let ((?x23278 (* ?x23277 l_0_11_95)))
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x23275 (* ?x23274 l_0_11_67)))
 (let ((?x26466 (- (* (* (- 2.0) l_0_11_203) l_0_11_207) (* (* 2.0 l_0_11_204) l_0_11_208))))
 (let ((?x26472 (- (- ?x26466 (* (* 2.0 l_0_11_205) l_0_11_209)) (* (* 2.0 l_0_11_206) l_0_11_210))))
 (let ((?x26478 (- (- ?x26472 (* (* 2.0 l_0_11_231) l_0_11_235)) (* (* 2.0 l_0_11_232) l_0_11_236))))
 (let ((?x26484 (- (- ?x26478 (* (* 2.0 l_0_11_233) l_0_11_237)) (* (* 2.0 l_0_11_234) l_0_11_238))))
 (= (- (+ ?x26484 ?x23275) ?x23278) 0.0))))))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x11425 (* ?x23274 l_0_11_72)))
 (let ((?x26508 (- (* (* (- 2.0) l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_203) l_0_11_212))))
 (let ((?x26512 (- (- ?x26508 (* (* 2.0 l_0_11_204) l_0_11_213)) (* (* 2.0 l_0_11_205) l_0_11_214))))
 (let ((?x26516 (- (- ?x26512 (* (* 2.0 l_0_11_206) l_0_11_215)) (* (* 2.0 l_0_11_231) l_0_11_240))))
 (let ((?x26520 (- (- ?x26516 (* (* 2.0 l_0_11_232) l_0_11_241)) (* (* 2.0 l_0_11_233) l_0_11_242))))
 (= (+ (- ?x26520 (* (* 2.0 l_0_11_234) l_0_11_243)) ?x11425) 0.0))))))))
(assert
 (let ((?x23274 (* 2.0 l_0_11_57)))
 (let ((?x25401 (* ?x23274 l_0_11_78)))
 (let ((?x13727 (- (* (* (- 2.0) l_0_11_106) l_0_11_85) (* (* 2.0 l_0_11_203) l_0_11_218))))
 (let ((?x26538 (- (- ?x13727 (* (* 2.0 l_0_11_204) l_0_11_219)) (* (* 2.0 l_0_11_205) l_0_11_220))))
 (let ((?x26542 (- (- ?x26538 (* (* 2.0 l_0_11_206) l_0_11_221)) (* (* 2.0 l_0_11_231) l_0_11_246))))
 (let ((?x26546 (- (- ?x26542 (* (* 2.0 l_0_11_232) l_0_11_247)) (* (* 2.0 l_0_11_233) l_0_11_248))))
 (= (+ (- ?x26546 (* (* 2.0 l_0_11_234) l_0_11_249)) ?x25401) 0.0))))))))
(assert
 (let ((?x25582 (* l_0_11_94 l_0_11_94)))
 (let ((?x25580 (* l_0_11_93 l_0_11_93)))
 (let ((?x25578 (* l_0_11_92 l_0_11_92)))
 (let ((?x25576 (* l_0_11_91 l_0_11_91)))
 (let ((?x25574 (* l_0_11_66 l_0_11_66)))
 (let ((?x25572 (* l_0_11_65 l_0_11_65)))
 (let ((?x26574 (+ (+ (+ (* l_0_11_63 l_0_11_63) (* l_0_11_64 l_0_11_64)) ?x25572) ?x25574)))
 (= (- (- (- (- ?x26574 ?x25576) ?x25578) ?x25580) ?x25582) 0.0)))))))))
(assert
 (let ((?x23892 (* (* 2.0 l_0_11_94) l_0_11_98)))
 (let ((?x23889 (* (* 2.0 l_0_11_93) l_0_11_97)))
 (let ((?x23886 (* (* 2.0 l_0_11_92) l_0_11_96)))
 (let ((?x23883 (* (* 2.0 l_0_11_91) l_0_11_95)))
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x23880 (* ?x23879 l_0_11_70)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x23877 (* ?x23876 l_0_11_69)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x23874 (* ?x23873 l_0_11_68)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x23871 (* ?x23870 l_0_11_67)))
 (let ((?x26591 (- (- (- (- (+ (+ (+ ?x23871 ?x23874) ?x23877) ?x23880) ?x23883) ?x23886) ?x23889) ?x23892)))
 (= ?x26591 0.0)))))))))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25610 (* ?x23879 l_0_11_75)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25608 (* ?x23876 l_0_11_74)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25606 (* ?x23873 l_0_11_73)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25604 (* ?x23870 l_0_11_72)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x25602 (* ?x24166 l_0_11_94)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x25600 (* ?x24163 l_0_11_93)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x25598 (* ?x8289 l_0_11_92)))
 (let ((?x26612 (+ (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_91) ?x25598) ?x25600) ?x25602) ?x25604)))
 (= (+ (+ (+ ?x26612 ?x25606) ?x25608) ?x25610) 0.0)))))))))))))))))
(assert
 (let ((?x23879 (* 2.0 l_0_11_66)))
 (let ((?x25646 (* ?x23879 l_0_11_81)))
 (let ((?x23876 (* 2.0 l_0_11_65)))
 (let ((?x25644 (* ?x23876 l_0_11_80)))
 (let ((?x23873 (* 2.0 l_0_11_64)))
 (let ((?x25642 (* ?x23873 l_0_11_79)))
 (let ((?x23870 (* 2.0 l_0_11_63)))
 (let ((?x25640 (* ?x23870 l_0_11_78)))
 (let ((?x23106 (* 2.0 l_0_11_109)))
 (let ((?x25638 (* ?x23106 l_0_11_94)))
 (let ((?x23103 (* 2.0 l_0_11_108)))
 (let ((?x25636 (* ?x23103 l_0_11_93)))
 (let ((?x23100 (* 2.0 l_0_11_107)))
 (let ((?x25634 (* ?x23100 l_0_11_92)))
 (let ((?x26621 (+ (- (- (- (* (* (- 2.0) l_0_11_106) l_0_11_91) ?x25634) ?x25636) ?x25638) ?x25640)))
 (= (+ (+ (+ ?x26621 ?x25642) ?x25644) ?x25646) 0.0)))))))))))))))))
(assert
 (let ((?x24106 (* l_0_11_99 l_0_11_99)))
 (let ((?x24104 (* l_0_11_98 l_0_11_98)))
 (let ((?x24102 (* l_0_11_97 l_0_11_97)))
 (let ((?x24100 (* l_0_11_96 l_0_11_96)))
 (let ((?x24098 (* l_0_11_95 l_0_11_95)))
 (let ((?x24096 (* l_0_11_71 l_0_11_71)))
 (let ((?x24094 (* l_0_11_70 l_0_11_70)))
 (let ((?x24092 (* l_0_11_69 l_0_11_69)))
 (let ((?x26634 (+ (+ (+ (* l_0_11_67 l_0_11_67) (* l_0_11_68 l_0_11_68)) ?x24092) ?x24094)))
 (= (- (- (- (- (- (+ ?x26634 ?x24096) ?x24098) ?x24100) ?x24102) ?x24104) ?x24106) 0.0)))))))))))
(assert
 (let ((?x23173 (* 2.0 l_0_11_71)))
 (let ((?x24216 (* ?x23173 l_0_11_76)))
 (let ((?x23170 (* 2.0 l_0_11_70)))
 (let ((?x24214 (* ?x23170 l_0_11_75)))
 (let ((?x23167 (* 2.0 l_0_11_69)))
 (let ((?x24212 (* ?x23167 l_0_11_74)))
 (let ((?x23164 (* 2.0 l_0_11_68)))
 (let ((?x24210 (* ?x23164 l_0_11_73)))
 (let ((?x23161 (* 2.0 l_0_11_67)))
 (let ((?x24208 (* ?x23161 l_0_11_72)))
 (let ((?x24169 (* 2.0 l_0_11_104)))
 (let ((?x24170 (* ?x24169 l_0_11_99)))
 (let ((?x24166 (* 2.0 l_0_11_103)))
 (let ((?x24167 (* ?x24166 l_0_11_98)))
 (let ((?x24163 (* 2.0 l_0_11_102)))
 (let ((?x24164 (* ?x24163 l_0_11_97)))
 (let ((?x8289 (* 2.0 l_0_11_101)))
 (let ((?x8279 (* ?x8289 l_0_11_96)))
 (let ((?x26658 (- (- (- (- (* (* (- 2.0) l_0_11_100) l_0_11_95) ?x8279) ?x24164) ?x24167) ?x24170)))
 (= (+ (+ (+ (+ (+ ?x26658 ?x24208) ?x24210) ?x24212) ?x24214) ?x24216) 0.0)))))))))))))))))))))
(assert
 (let ((?x25697 (* l_0_11_77 l_0_11_77)))
 (let ((?x25695 (* l_0_11_76 l_0_11_76)))
 (let ((?x25693 (* l_0_11_75 l_0_11_75)))
 (let ((?x25691 (* l_0_11_74 l_0_11_74)))
 (let ((?x25689 (* l_0_11_73 l_0_11_73)))
 (let ((?x25687 (* l_0_11_72 l_0_11_72)))
 (let ((?x25685 (* l_0_11_105 l_0_11_105)))
 (let ((?x25683 (* l_0_11_104 l_0_11_104)))
 (let ((?x25681 (* l_0_11_103 l_0_11_103)))
 (let ((?x25679 (* l_0_11_102 l_0_11_102)))
 (let ((?x13874 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25679)))
 (let ((?x26668 (+ (+ (+ (+ (- (- (- ?x13874 ?x25681) ?x25683) ?x25685) ?x25687) ?x25689) ?x25691) ?x25693)))
 (= (+ (+ ?x26668 ?x25695) ?x25697) 0.0))))))))))))))
(assert
 (let ((?x25756 (* l_0_11_84 l_0_11_84)))
 (let ((?x25754 (* l_0_11_83 l_0_11_83)))
 (let ((?x25752 (* l_0_11_82 l_0_11_82)))
 (let ((?x25750 (* l_0_11_81 l_0_11_81)))
 (let ((?x25748 (* l_0_11_80 l_0_11_80)))
 (let ((?x25746 (* l_0_11_79 l_0_11_79)))
 (let ((?x25744 (* l_0_11_78 l_0_11_78)))
 (let ((?x25742 (* l_0_11_112 l_0_11_112)))
 (let ((?x25740 (* l_0_11_111 l_0_11_111)))
 (let ((?x25738 (* l_0_11_110 l_0_11_110)))
 (let ((?x25736 (* l_0_11_109 l_0_11_109)))
 (let ((?x25734 (* l_0_11_108 l_0_11_108)))
 (let ((?x26691 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25734)))
 (let ((?x26698 (+ (+ (+ (- (- (- (- ?x26691 ?x25736) ?x25738) ?x25740) ?x25742) ?x25744) ?x25746) ?x25748)))
 (= (+ (+ (+ (+ ?x26698 ?x25750) ?x25752) ?x25754) ?x25756) 0.0))))))))))))))))
(assert
 (= (- (* (- l_0_11_197) l_0_11_197) (* l_0_11_225 l_0_11_225)) 0.0))
(assert
 (let ((?x26738 (- (* (* (- 2.0) l_0_11_197) l_0_11_207) (* (* 2.0 l_0_11_225) l_0_11_235))))
 (= ?x26738 0.0)))
(assert
 (let ((?x26753 (- (* (* (- 2.0) l_0_11_197) l_0_11_212) (* (* 2.0 l_0_11_225) l_0_11_240))))
 (= ?x26753 0.0)))
(assert
 (let ((?x26784 (* l_0_11_239 l_0_11_239)))
 (let ((?x26782 (* l_0_11_238 l_0_11_238)))
 (let ((?x26780 (* l_0_11_237 l_0_11_237)))
 (let ((?x26778 (* l_0_11_236 l_0_11_236)))
 (let ((?x26776 (* l_0_11_235 l_0_11_235)))
 (let ((?x26774 (* l_0_11_211 l_0_11_211)))
 (let ((?x26772 (* l_0_11_210 l_0_11_210)))
 (let ((?x26770 (* l_0_11_209 l_0_11_209)))
 (let ((?x26771 (- (- (* (- l_0_11_207) l_0_11_207) (* l_0_11_208 l_0_11_208)) ?x26770)))
 (let ((?x26785 (- (- (- (- (- (- (- ?x26771 ?x26772) ?x26774) ?x26776) ?x26778) ?x26780) ?x26782) ?x26784)))
 (= ?x26785 0.0))))))))))))
(assert
 (let ((?x26805 (- (* (* (- 2.0) l_0_11_207) l_0_11_212) (* (* 2.0 l_0_11_208) l_0_11_213))))
 (let ((?x26809 (- (- ?x26805 (* (* 2.0 l_0_11_209) l_0_11_214)) (* (* 2.0 l_0_11_210) l_0_11_215))))
 (let ((?x26813 (- (- ?x26809 (* (* 2.0 l_0_11_211) l_0_11_216)) (* (* 2.0 l_0_11_235) l_0_11_240))))
 (let ((?x26817 (- (- ?x26813 (* (* 2.0 l_0_11_236) l_0_11_241)) (* (* 2.0 l_0_11_237) l_0_11_242))))
 (let ((?x26821 (- (- ?x26817 (* (* 2.0 l_0_11_238) l_0_11_243)) (* (* 2.0 l_0_11_239) l_0_11_244))))
 (= ?x26821 0.0)))))))
(assert
 (let ((?x26867 (* l_0_11_245 l_0_11_245)))
 (let ((?x26865 (* l_0_11_244 l_0_11_244)))
 (let ((?x26863 (* l_0_11_243 l_0_11_243)))
 (let ((?x26861 (* l_0_11_242 l_0_11_242)))
 (let ((?x26859 (* l_0_11_241 l_0_11_241)))
 (let ((?x26857 (* l_0_11_240 l_0_11_240)))
 (let ((?x26855 (* l_0_11_217 l_0_11_217)))
 (let ((?x26853 (* l_0_11_216 l_0_11_216)))
 (let ((?x26851 (* l_0_11_215 l_0_11_215)))
 (let ((?x14001 (* l_0_11_214 l_0_11_214)))
 (let ((?x26850 (- (- (* (- l_0_11_212) l_0_11_212) (* l_0_11_213 l_0_11_213)) ?x14001)))
 (let ((?x26864 (- (- (- (- (- (- (- ?x26850 ?x26851) ?x26853) ?x26855) ?x26857) ?x26859) ?x26861) ?x26863)))
 (= (- (- ?x26864 ?x26865) ?x26867) 0.0))))))))))))))
(assert
 (let ((?x26912 (* l_0_11_252 l_0_11_252)))
 (let ((?x26910 (* l_0_11_251 l_0_11_251)))
 (let ((?x26908 (* l_0_11_250 l_0_11_250)))
 (let ((?x26906 (* l_0_11_249 l_0_11_249)))
 (let ((?x26904 (* l_0_11_248 l_0_11_248)))
 (let ((?x26902 (* l_0_11_247 l_0_11_247)))
 (let ((?x26900 (* l_0_11_246 l_0_11_246)))
 (let ((?x26898 (* l_0_11_224 l_0_11_224)))
 (let ((?x26896 (* l_0_11_223 l_0_11_223)))
 (let ((?x26894 (* l_0_11_222 l_0_11_222)))
 (let ((?x26892 (* l_0_11_221 l_0_11_221)))
 (let ((?x26890 (* l_0_11_220 l_0_11_220)))
 (let ((?x26891 (- (- (* (- l_0_11_218) l_0_11_218) (* l_0_11_219 l_0_11_219)) ?x26890)))
 (let ((?x26905 (- (- (- (- (- (- (- ?x26891 ?x26892) ?x26894) ?x26896) ?x26898) ?x26900) ?x26902) ?x26904)))
 (= (- (- (- (- ?x26905 ?x26906) ?x26908) ?x26910) ?x26912) 0.0))))))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_29 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_34 0.0))
(assert
 (>= l_0_11_38 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_49 0.0))
(assert
 (>= l_0_11_56 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_59 0.0))
(assert
 (>= l_0_11_62 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_71 0.0))
(assert
 (>= l_0_11_77 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_112 0.0))
(assert
 (>= l_0_11_113 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_118 0.0))
(assert
 (>= l_0_11_122 0.0))
(assert
 (>= l_0_11_127 0.0))
(assert
 (>= l_0_11_133 0.0))
(assert
 (>= l_0_11_140 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_143 0.0))
(assert
 (>= l_0_11_146 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_155 0.0))
(assert
 (>= l_0_11_161 0.0))
(assert
 (>= l_0_11_168 0.0))
(assert
 (>= l_0_11_169 0.0))
(assert
 (>= l_0_11_171 0.0))
(assert
 (>= l_0_11_174 0.0))
(assert
 (>= l_0_11_178 0.0))
(assert
 (>= l_0_11_183 0.0))
(assert
 (>= l_0_11_189 0.0))
(assert
 (>= l_0_11_196 0.0))
(assert
 (>= l_0_11_197 0.0))
(assert
 (>= l_0_11_199 0.0))
(assert
 (>= l_0_11_202 0.0))
(assert
 (>= l_0_11_206 0.0))
(assert
 (>= l_0_11_211 0.0))
(assert
 (>= l_0_11_217 0.0))
(assert
 (>= l_0_11_224 0.0))
(assert
 (>= l_0_11_225 0.0))
(assert
 (>= l_0_11_227 0.0))
(assert
 (>= l_0_11_230 0.0))
(assert
 (>= l_0_11_234 0.0))
(assert
 (>= l_0_11_239 0.0))
(assert
 (>= l_0_11_245 0.0))
(assert
 (>= l_0_11_252 0.0))
(assert
 (let ((?x27019 (* l_0_12_85 l_0_12_85)))
 (let ((?x27017 (* l_0_12_57 l_0_12_57)))
 (let ((?x27006 (* l_0_12_169 l_0_12_169)))
 (let ((?x27007 (+ (- (* (- l_0_12_113) l_0_12_113) (* l_0_12_141 l_0_12_141)) ?x27006)))
 (let ((?x27013 (- (- ?x27007 (* (* 2.0 l_0_12_197) l_0_12_200)) (* (* 2.0 l_0_12_225) l_0_12_228))))
 (let ((?x27021 (+ (+ (- (- ?x27013 (* (* 2.0 l_0_12_253) l_0_12_256)) ?x27017) ?x27019) 1.0)))
 (= ?x27021 0.0))))))))
(assert
 (let ((?x27052 (* l_0_12_29 l_0_12_29)))
 (let ((?x27047 (- (- (* l_0_12_1 l_0_12_1) (* (* 2.0 l_0_12_169) l_0_12_169)) (* (* 2.0 l_0_12_197) l_0_12_198))))
 (let ((?x27051 (- (- ?x27047 (* (* 2.0 l_0_12_225) l_0_12_226)) (* (* 2.0 l_0_12_253) l_0_12_254))))
 (= (- (- ?x27051 ?x27052) 1.0) 0.0)))))
(assert
 (let ((?x14115 (* l_0_12_253 l_0_12_253)))
 (let ((?x14135 (- (- (* (- l_0_12_197) l_0_12_197) (* l_0_12_225 l_0_12_225)) ?x14115)))
 (= ?x14135 0.0))))
(assert
 (let ((?x27052 (* l_0_12_29 l_0_12_29)))
 (let ((?x27076 (- (+ (* (- l_0_12_1) l_0_12_1) (* l_0_12_141 l_0_12_141)) (* (* 2.0 l_0_12_207) l_0_12_218))))
 (let ((?x27082 (- (- ?x27076 (* (* 2.0 l_0_12_208) l_0_12_219)) (* (* 2.0 l_0_12_209) l_0_12_220))))
 (let ((?x27088 (- (- ?x27082 (* (* 2.0 l_0_12_210) l_0_12_221)) (* (* 2.0 l_0_12_211) l_0_12_222))))
 (let ((?x27094 (- (- ?x27088 (* (* 2.0 l_0_12_235) l_0_12_246)) (* (* 2.0 l_0_12_236) l_0_12_247))))
 (let ((?x27100 (- (- ?x27094 (* (* 2.0 l_0_12_237) l_0_12_248)) (* (* 2.0 l_0_12_238) l_0_12_249))))
 (let ((?x27106 (- (- ?x27100 (* (* 2.0 l_0_12_239) l_0_12_250)) (* (* 2.0 l_0_12_263) l_0_12_274))))
 (let ((?x27112 (- (- ?x27106 (* (* 2.0 l_0_12_264) l_0_12_275)) (* (* 2.0 l_0_12_265) l_0_12_276))))
 (let ((?x27118 (- (- ?x27112 (* (* 2.0 l_0_12_266) l_0_12_277)) (* (* 2.0 l_0_12_267) l_0_12_278))))
 (= (+ ?x27118 ?x27052) 0.0)))))))))))
(assert
 (let ((?x27196 (* 2.0 l_0_12_43)))
 (let ((?x27197 (* ?x27196 l_0_12_54)))
 (let ((?x27193 (* 2.0 l_0_12_42)))
 (let ((?x27194 (* ?x27193 l_0_12_53)))
 (let ((?x27190 (* 2.0 l_0_12_41)))
 (let ((?x27191 (* ?x27190 l_0_12_52)))
 (let ((?x27187 (* 2.0 l_0_12_40)))
 (let ((?x27188 (* ?x27187 l_0_12_51)))
 (let ((?x27184 (* 2.0 l_0_12_39)))
 (let ((?x27185 (* ?x27184 l_0_12_50)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27182 (* ?x27181 l_0_12_30)))
 (let ((?x27163 (* 2.0 l_0_12_15)))
 (let ((?x27164 (* ?x27163 l_0_12_26)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27161 (* ?x27160 l_0_12_142)))
 (let ((?x27157 (* 2.0 l_0_12_14)))
 (let ((?x27158 (* ?x27157 l_0_12_25)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27155 (* ?x27154 l_0_12_24)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27152 (* ?x27151 l_0_12_23)))
 (let ((?x27150 (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_11) l_0_12_22))))
 (let ((?x27168 (- (+ (+ (+ (+ (+ ?x27150 ?x27152) ?x27155) ?x27158) ?x27161) ?x27164) (* (* 4.0 l_0_12_179) l_0_12_190))))
 (let ((?x27174 (- (- ?x27168 (* (* 4.0 l_0_12_180) l_0_12_191)) (* (* 4.0 l_0_12_181) l_0_12_192))))
 (let ((?x27180 (- (- ?x27174 (* (* 4.0 l_0_12_182) l_0_12_193)) (* (* 4.0 l_0_12_183) l_0_12_194))))
 (= (- (- (- (- (- (+ ?x27180 ?x27182) ?x27185) ?x27188) ?x27191) ?x27194) ?x27197) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x27328 (* ?x27327 l_0_12_82)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x27325 (* ?x27324 l_0_12_81)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x27322 (* ?x27321 l_0_12_80)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x27319 (* ?x27318 l_0_12_79)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x27316 (* ?x27315 l_0_12_78)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27313 (* ?x27181 l_0_12_32)))
 (let ((?x27295 (* 2.0 l_0_12_155)))
 (let ((?x27296 (* ?x27295 l_0_12_166)))
 (let ((?x27292 (* 2.0 l_0_12_154)))
 (let ((?x27293 (* ?x27292 l_0_12_165)))
 (let ((?x27289 (* 2.0 l_0_12_153)))
 (let ((?x27290 (* ?x27289 l_0_12_164)))
 (let ((?x27286 (* 2.0 l_0_12_152)))
 (let ((?x27287 (* ?x27286 l_0_12_163)))
 (let ((?x27283 (* 2.0 l_0_12_151)))
 (let ((?x27284 (* ?x27283 l_0_12_162)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27281 (* ?x27160 l_0_12_144)))
 (let ((?x27264 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x27261 (* ?x27260 l_0_12_98)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x27258 (* ?x27257 l_0_12_97)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x27255 (* ?x27254 l_0_12_96)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x27252 (* ?x27251 l_0_12_95)))
 (let ((?x27262 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x27252) ?x27255) ?x27258) ?x27261)))
 (let ((?x27271 (- (- (+ ?x27262 ?x27264) (* (* 2.0 l_0_12_123) l_0_12_134)) (* (* 2.0 l_0_12_124) l_0_12_135))))
 (let ((?x27277 (- (- ?x27271 (* (* 2.0 l_0_12_125) l_0_12_136)) (* (* 2.0 l_0_12_126) l_0_12_137))))
 (let ((?x27288 (- (- (+ (- ?x27277 (* (* 2.0 l_0_12_127) l_0_12_138)) ?x27281) ?x27284) ?x27287)))
 (let ((?x27300 (+ (- (- (- ?x27288 ?x27290) ?x27293) ?x27296) (* (* 2.0 l_0_12_179) l_0_12_190))))
 (let ((?x27306 (+ (+ ?x27300 (* (* 2.0 l_0_12_180) l_0_12_191)) (* (* 2.0 l_0_12_181) l_0_12_192))))
 (let ((?x27312 (+ (+ ?x27306 (* (* 2.0 l_0_12_182) l_0_12_193)) (* (* 2.0 l_0_12_183) l_0_12_194))))
 (= (- (- (- (- (- (+ ?x27312 ?x27313) ?x27316) ?x27319) ?x27322) ?x27325) ?x27328) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x27328 (* ?x27327 l_0_12_82)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x27325 (* ?x27324 l_0_12_81)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x27322 (* ?x27321 l_0_12_80)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x27319 (* ?x27318 l_0_12_79)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x27316 (* ?x27315 l_0_12_78)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27403 (* ?x27181 l_0_12_35)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27401 (* ?x27160 l_0_12_147)))
 (let ((?x27264 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x27261 (* ?x27260 l_0_12_98)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x27258 (* ?x27257 l_0_12_97)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x27255 (* ?x27254 l_0_12_96)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x27252 (* ?x27251 l_0_12_95)))
 (let ((?x27399 (- (- (- (- (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x27252) ?x27255) ?x27258) ?x27261)))
 (let ((?x27408 (+ (+ (+ (+ (+ (+ (- ?x27399 ?x27264) ?x27401) ?x27403) ?x27316) ?x27319) ?x27322) ?x27325)))
 (= (+ ?x27408 ?x27328) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27418 (* ?x27181 l_0_12_39)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x14576 (* ?x27160 l_0_12_151)))
 (= (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x14576) ?x27418) 0.0))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x27438 (* ?x27437 l_0_12_95)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x27435 (* ?x27434 l_0_12_67)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27427 (* ?x27181 l_0_12_44)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27424 (* ?x27160 l_0_12_156)))
 (let ((?x27439 (+ (- (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_16) ?x27424) ?x27427) ?x27435) ?x27438)))
 (= ?x27439 0.0)))))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27464 (* ?x27181 l_0_12_50)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27456 (* ?x27160 l_0_12_162)))
 (= (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) ?x27456) ?x27464) 0.0))))))
(assert
 (let ((?x27484 (* l_0_12_31 l_0_12_31)))
 (let ((?x27482 (* l_0_12_30 l_0_12_30)))
 (let ((?x27480 (* l_0_12_3 l_0_12_3)))
 (let ((?x27473 (* l_0_12_2 l_0_12_2)))
 (let ((?x27479 (- (+ (* l_0_12_142 l_0_12_142) (* l_0_12_143 l_0_12_143)) ?x27473)))
 (= (+ (+ (- ?x27479 ?x27480) ?x27482) ?x27484) 0.0)))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27506 (* ?x27505 l_0_12_33)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27503 (* ?x27502 l_0_12_32)))
 (let ((?x27499 (* 2.0 l_0_12_3)))
 (let ((?x27500 (* ?x27499 l_0_12_5)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27497 (* ?x27496 l_0_12_4)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27494 (* ?x27493 l_0_12_145)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27492 (* ?x27491 l_0_12_144)))
 (= (+ (+ (- (- (+ ?x27492 ?x27494) ?x27497) ?x27500) ?x27503) ?x27506) 0.0))))))))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27539 (* ?x27505 l_0_12_36)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27537 (* ?x27502 l_0_12_35)))
 (let ((?x27499 (* 2.0 l_0_12_3)))
 (let ((?x27535 (* ?x27499 l_0_12_8)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27533 (* ?x27496 l_0_12_7)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27525 (* ?x27493 l_0_12_148)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27523 (* ?x27491 l_0_12_147)))
 (= (+ (+ (- (- (+ ?x27523 ?x27525) ?x27533) ?x27535) ?x27537) ?x27539) 0.0))))))))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27566 (* ?x27505 l_0_12_40)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27564 (* ?x27502 l_0_12_39)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27562 (* ?x27493 l_0_12_152)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27560 (* ?x27491 l_0_12_151)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27558 (* ?x27151 l_0_12_3)))
 (let ((?x27565 (+ (+ (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x27558) ?x27560) ?x27562) ?x27564)))
 (= (+ ?x27565 ?x27566) 0.0)))))))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x27607 (* ?x27606 l_0_12_96)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x27604 (* ?x27603 l_0_12_95)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x27601 (* ?x27600 l_0_12_68)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x27598 (* ?x27597 l_0_12_67)))
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27595 (* ?x27505 l_0_12_45)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27593 (* ?x27502 l_0_12_44)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x27591 (* ?x27590 l_0_12_3)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x27581 (* ?x27580 l_0_12_2)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27576 (* ?x27493 l_0_12_157)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27574 (* ?x27491 l_0_12_156)))
 (let ((?x27602 (- (- (+ (+ (- (- (+ ?x27574 ?x27576) ?x27581) ?x27591) ?x27593) ?x27595) ?x27598) ?x27601)))
 (= (+ (+ ?x27602 ?x27604) ?x27607) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27651 (* ?x27505 l_0_12_51)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27649 (* ?x27502 l_0_12_50)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x27647 (* ?x27646 l_0_12_3)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27644 (* ?x27496 l_0_12_22)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27642 (* ?x27493 l_0_12_163)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27641 (* ?x27491 l_0_12_162)))
 (= (+ (+ (- (- (+ ?x27641 ?x27642) ?x27644) ?x27647) ?x27649) ?x27651) 0.0))))))))))))))
(assert
 (let ((?x27691 (* l_0_12_6 l_0_12_6)))
 (let ((?x27689 (* l_0_12_5 l_0_12_5)))
 (let ((?x27687 (* l_0_12_4 l_0_12_4)))
 (let ((?x27685 (* l_0_12_34 l_0_12_34)))
 (let ((?x27683 (* l_0_12_33 l_0_12_33)))
 (let ((?x27681 (* l_0_12_32 l_0_12_32)))
 (let ((?x27679 (* l_0_12_146 l_0_12_146)))
 (let ((?x27680 (+ (+ (* l_0_12_144 l_0_12_144) (* l_0_12_145 l_0_12_145)) ?x27679)))
 (= (- (- (- (+ (+ (+ ?x27680 ?x27681) ?x27683) ?x27685) ?x27687) ?x27689) ?x27691) 0.0))))))))))
(assert
 (let ((?x27725 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x27722 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x27719 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27716 (* ?x27715 l_0_12_37)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27713 (* ?x27712 l_0_12_36)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27710 (* ?x27709 l_0_12_35)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27707 (* ?x27706 l_0_12_149)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x27704 (* ?x27703 l_0_12_148)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27702 (* ?x27701 l_0_12_147)))
 (let ((?x27723 (- (- (+ (+ (+ (+ (+ ?x27702 ?x27704) ?x27707) ?x27710) ?x27713) ?x27716) ?x27719) ?x27722)))
 (= (- ?x27723 ?x27725) 0.0))))))))))))))))))
(assert
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27773 (* ?x27715 l_0_12_41)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27771 (* ?x27712 l_0_12_40)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27769 (* ?x27709 l_0_12_39)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27767 (* ?x27706 l_0_12_153)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x27765 (* ?x27703 l_0_12_152)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27763 (* ?x27701 l_0_12_151)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27761 (* ?x27154 l_0_12_6)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27759 (* ?x27151 l_0_12_5)))
 (let ((?x27766 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x27759) ?x27761) ?x27763) ?x27765)))
 (= (+ (+ (+ (+ ?x27766 ?x27767) ?x27769) ?x27771) ?x27773) 0.0)))))))))))))))))))
(assert
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x27832 (* ?x27831 l_0_12_97)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x27829 (* ?x27828 l_0_12_96)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x27826 (* ?x27825 l_0_12_95)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x27823 (* ?x27822 l_0_12_69)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x27820 (* ?x27819 l_0_12_68)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x27817 (* ?x27816 l_0_12_67)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27814 (* ?x27715 l_0_12_46)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27812 (* ?x27712 l_0_12_45)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27810 (* ?x27709 l_0_12_44)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x27808 (* ?x27807 l_0_12_6)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x27805 (* ?x27590 l_0_12_5)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x27794 (* ?x27580 l_0_12_4)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27789 (* ?x27706 l_0_12_158)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x14701 (* ?x27703 l_0_12_157)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27787 (* ?x27701 l_0_12_156)))
 (let ((?x27813 (+ (+ (- (- (- (+ (+ ?x27787 ?x14701) ?x27789) ?x27794) ?x27805) ?x27808) ?x27810) ?x27812)))
 (let ((?x27833 (+ (+ (+ (- (- (- (+ ?x27813 ?x27814) ?x27817) ?x27820) ?x27823) ?x27826) ?x27829) ?x27832)))
 (= ?x27833 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27895 (* ?x27715 l_0_12_52)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27893 (* ?x27712 l_0_12_51)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27891 (* ?x27709 l_0_12_50)))
 (let ((?x27888 (* 2.0 l_0_12_24)))
 (let ((?x27889 (* ?x27888 l_0_12_6)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x27886 (* ?x27646 l_0_12_5)))
 (let ((?x27883 (* 2.0 l_0_12_22)))
 (let ((?x27884 (* ?x27883 l_0_12_4)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27870 (* ?x27706 l_0_12_164)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x14790 (* ?x27703 l_0_12_163)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27867 (* ?x27701 l_0_12_162)))
 (let ((?x27894 (+ (+ (- (- (- (+ (+ ?x27867 ?x14790) ?x27870) ?x27884) ?x27886) ?x27889) ?x27891) ?x27893)))
 (= (+ ?x27894 ?x27895) 0.0)))))))))))))))))))))
(assert
 (let ((?x27944 (* l_0_12_9 l_0_12_9)))
 (let ((?x27942 (* l_0_12_8 l_0_12_8)))
 (let ((?x27940 (* l_0_12_7 l_0_12_7)))
 (let ((?x27938 (* l_0_12_38 l_0_12_38)))
 (let ((?x27936 (* l_0_12_37 l_0_12_37)))
 (let ((?x27934 (* l_0_12_36 l_0_12_36)))
 (let ((?x27932 (* l_0_12_35 l_0_12_35)))
 (let ((?x27930 (* l_0_12_150 l_0_12_150)))
 (let ((?x27928 (* l_0_12_149 l_0_12_149)))
 (let ((?x27926 (* l_0_12_148 l_0_12_148)))
 (let ((?x27927 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_147 l_0_12_147)) ?x27926)))
 (let ((?x27941 (- (+ (+ (+ (+ (+ (+ ?x27927 ?x27928) ?x27930) ?x27932) ?x27934) ?x27936) ?x27938) ?x27940)))
 (= (- (- ?x27941 ?x27942) ?x27944) 0.0))))))))))))))
(assert
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x27985 (* ?x27984 l_0_12_42)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x27982 (* ?x27981 l_0_12_41)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x27979 (* ?x27978 l_0_12_40)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x27976 (* ?x27975 l_0_12_39)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x27973 (* ?x27972 l_0_12_154)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x27970 (* ?x27969 l_0_12_153)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x27967 (* ?x27966 l_0_12_152)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x27964 (* ?x27963 l_0_12_151)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27961 (* ?x27154 l_0_12_9)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27959 (* ?x27151 l_0_12_8)))
 (let ((?x27148 (* 2.0 l_0_12_11)))
 (let ((?x27957 (* ?x27148 l_0_12_7)))
 (let ((?x27965 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x27957) ?x27959) ?x27961) ?x27964)))
 (let ((?x27986 (+ (+ (+ (+ (+ (+ (+ ?x27965 ?x27967) ?x27970) ?x27973) ?x27976) ?x27979) ?x27982) ?x27985)))
 (= ?x27986 0.0))))))))))))))))))))))))))
(assert
 (let ((?x28061 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x28058 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x28055 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x28052 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x28049 (* ?x28048 l_0_12_70)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x28046 (* ?x28045 l_0_12_69)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x28043 (* ?x28042 l_0_12_68)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x28040 (* ?x28039 l_0_12_67)))
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x28037 (* ?x27984 l_0_12_47)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x28035 (* ?x27981 l_0_12_46)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x28033 (* ?x27978 l_0_12_45)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x28031 (* ?x27975 l_0_12_44)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x28029 (* ?x27807 l_0_12_9)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x28027 (* ?x27590 l_0_12_8)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x28025 (* ?x27580 l_0_12_7)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x28012 (* ?x27972 l_0_12_159)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x28008 (* ?x27969 l_0_12_158)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x28004 (* ?x27966 l_0_12_157)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x28000 (* ?x27963 l_0_12_156)))
 (let ((?x28013 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x28000) ?x28004) ?x28008) ?x28012)))
 (let ((?x28038 (+ (+ (+ (+ (- (- (- ?x28013 ?x28025) ?x28027) ?x28029) ?x28031) ?x28033) ?x28035) ?x28037)))
 (let ((?x28059 (+ (+ (+ (- (- (- (- ?x28038 ?x28040) ?x28043) ?x28046) ?x28049) ?x28052) ?x28055) ?x28058)))
 (= (+ ?x28059 ?x28061) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x28135 (* ?x27984 l_0_12_53)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x28133 (* ?x27981 l_0_12_52)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x28131 (* ?x27978 l_0_12_51)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x28129 (* ?x27975 l_0_12_50)))
 (let ((?x27888 (* 2.0 l_0_12_24)))
 (let ((?x28127 (* ?x27888 l_0_12_9)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x28125 (* ?x27646 l_0_12_8)))
 (let ((?x27883 (* 2.0 l_0_12_22)))
 (let ((?x28123 (* ?x27883 l_0_12_7)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x28121 (* ?x27972 l_0_12_165)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x28119 (* ?x27969 l_0_12_164)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x14878 (* ?x27966 l_0_12_163)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x14894 (* ?x27963 l_0_12_162)))
 (let ((?x28122 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_10) l_0_12_25) ?x14894) ?x14878) ?x28119) ?x28121)))
 (let ((?x28136 (+ (+ (+ (+ (- (- (- ?x28122 ?x28123) ?x28125) ?x28127) ?x28129) ?x28131) ?x28133) ?x28135)))
 (= ?x28136 0.0))))))))))))))))))))))))))
(assert
 (let ((?x28202 (* l_0_12_43 l_0_12_43)))
 (let ((?x28200 (* l_0_12_42 l_0_12_42)))
 (let ((?x28198 (* l_0_12_41 l_0_12_41)))
 (let ((?x28196 (* l_0_12_40 l_0_12_40)))
 (let ((?x28194 (* l_0_12_39 l_0_12_39)))
 (let ((?x28192 (* l_0_12_155 l_0_12_155)))
 (let ((?x28190 (* l_0_12_154 l_0_12_154)))
 (let ((?x28188 (* l_0_12_153 l_0_12_153)))
 (let ((?x28186 (* l_0_12_152 l_0_12_152)))
 (let ((?x28184 (* l_0_12_151 l_0_12_151)))
 (let ((?x28182 (* l_0_12_15 l_0_12_15)))
 (let ((?x28180 (* l_0_12_14 l_0_12_14)))
 (let ((?x28167 (* l_0_12_13 l_0_12_13)))
 (let ((?x28179 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x28167)))
 (let ((?x28193 (+ (+ (+ (+ (+ (- (- ?x28179 ?x28180) ?x28182) ?x28184) ?x28186) ?x28188) ?x28190) ?x28192)))
 (= (+ (+ (+ (+ (+ ?x28193 ?x28194) ?x28196) ?x28198) ?x28200) ?x28202) 0.0)))))))))))))))))
(assert
 (let ((?x28275 (* l_0_12_99 l_0_12_99)))
 (let ((?x28273 (* l_0_12_98 l_0_12_98)))
 (let ((?x28271 (* l_0_12_97 l_0_12_97)))
 (let ((?x28269 (* l_0_12_96 l_0_12_96)))
 (let ((?x28267 (* l_0_12_95 l_0_12_95)))
 (let ((?x28265 (* l_0_12_71 l_0_12_71)))
 (let ((?x28263 (* l_0_12_70 l_0_12_70)))
 (let ((?x28261 (* l_0_12_69 l_0_12_69)))
 (let ((?x28259 (* l_0_12_68 l_0_12_68)))
 (let ((?x28257 (* l_0_12_67 l_0_12_67)))
 (let ((?x27196 (* 2.0 l_0_12_43)))
 (let ((?x28255 (* ?x27196 l_0_12_48)))
 (let ((?x27193 (* 2.0 l_0_12_42)))
 (let ((?x28253 (* ?x27193 l_0_12_47)))
 (let ((?x27190 (* 2.0 l_0_12_41)))
 (let ((?x28251 (* ?x27190 l_0_12_46)))
 (let ((?x27187 (* 2.0 l_0_12_40)))
 (let ((?x28249 (* ?x27187 l_0_12_45)))
 (let ((?x27184 (* 2.0 l_0_12_39)))
 (let ((?x28247 (* ?x27184 l_0_12_44)))
 (let ((?x27295 (* 2.0 l_0_12_155)))
 (let ((?x28245 (* ?x27295 l_0_12_160)))
 (let ((?x27292 (* 2.0 l_0_12_154)))
 (let ((?x28243 (* ?x27292 l_0_12_159)))
 (let ((?x27289 (* 2.0 l_0_12_153)))
 (let ((?x28241 (* ?x27289 l_0_12_158)))
 (let ((?x27286 (* 2.0 l_0_12_152)))
 (let ((?x28239 (* ?x27286 l_0_12_157)))
 (let ((?x27283 (* 2.0 l_0_12_151)))
 (let ((?x28237 (* ?x27283 l_0_12_156)))
 (let ((?x27163 (* 2.0 l_0_12_15)))
 (let ((?x28235 (* ?x27163 l_0_12_20)))
 (let ((?x27157 (* 2.0 l_0_12_14)))
 (let ((?x28233 (* ?x27157 l_0_12_19)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x28231 (* ?x27154 l_0_12_18)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x28229 (* ?x27151 l_0_12_17)))
 (let ((?x28236 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_16) ?x28229) ?x28231) ?x28233) ?x28235)))
 (let ((?x28250 (+ (+ (+ (+ (+ (+ (+ ?x28236 ?x28237) ?x28239) ?x28241) ?x28243) ?x28245) ?x28247) ?x28249)))
 (let ((?x28264 (- (- (- (- (+ (+ (+ ?x28250 ?x28251) ?x28253) ?x28255) ?x28257) ?x28259) ?x28261) ?x28263)))
 (= (+ (+ (+ (+ (+ (- ?x28264 ?x28265) ?x28267) ?x28269) ?x28271) ?x28273) ?x28275) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27196 (* 2.0 l_0_12_43)))
 (let ((?x27197 (* ?x27196 l_0_12_54)))
 (let ((?x27193 (* 2.0 l_0_12_42)))
 (let ((?x27194 (* ?x27193 l_0_12_53)))
 (let ((?x27190 (* 2.0 l_0_12_41)))
 (let ((?x27191 (* ?x27190 l_0_12_52)))
 (let ((?x27187 (* 2.0 l_0_12_40)))
 (let ((?x27188 (* ?x27187 l_0_12_51)))
 (let ((?x27184 (* 2.0 l_0_12_39)))
 (let ((?x27185 (* ?x27184 l_0_12_50)))
 (let ((?x27295 (* 2.0 l_0_12_155)))
 (let ((?x27296 (* ?x27295 l_0_12_166)))
 (let ((?x27292 (* 2.0 l_0_12_154)))
 (let ((?x27293 (* ?x27292 l_0_12_165)))
 (let ((?x27289 (* 2.0 l_0_12_153)))
 (let ((?x27290 (* ?x27289 l_0_12_164)))
 (let ((?x27286 (* 2.0 l_0_12_152)))
 (let ((?x27287 (* ?x27286 l_0_12_163)))
 (let ((?x27283 (* 2.0 l_0_12_151)))
 (let ((?x27284 (* ?x27283 l_0_12_162)))
 (let ((?x27163 (* 2.0 l_0_12_15)))
 (let ((?x27164 (* ?x27163 l_0_12_26)))
 (let ((?x27157 (* 2.0 l_0_12_14)))
 (let ((?x27158 (* ?x27157 l_0_12_25)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27155 (* ?x27154 l_0_12_24)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27152 (* ?x27151 l_0_12_23)))
 (let ((?x14993 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_22) ?x27152) ?x27155) ?x27158) ?x27164)))
 (let ((?x28296 (+ (+ (+ (+ (+ (+ (+ ?x14993 ?x27284) ?x27287) ?x27290) ?x27293) ?x27296) ?x27185) ?x27188)))
 (= (+ (+ (+ ?x28296 ?x27191) ?x27194) ?x27197) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x28354 (* ?x27327 l_0_12_76)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x28352 (* ?x27324 l_0_12_75)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x28350 (* ?x27321 l_0_12_74)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x28348 (* ?x27318 l_0_12_73)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x28346 (* ?x27315 l_0_12_72)))
 (let ((?x28344 (* l_0_12_49 l_0_12_49)))
 (let ((?x28342 (* l_0_12_48 l_0_12_48)))
 (let ((?x28340 (* l_0_12_47 l_0_12_47)))
 (let ((?x28338 (* l_0_12_46 l_0_12_46)))
 (let ((?x28336 (* l_0_12_45 l_0_12_45)))
 (let ((?x28334 (* l_0_12_44 l_0_12_44)))
 (let ((?x28332 (* l_0_12_21 l_0_12_21)))
 (let ((?x28330 (* l_0_12_20 l_0_12_20)))
 (let ((?x28328 (* l_0_12_19 l_0_12_19)))
 (let ((?x28326 (* l_0_12_18 l_0_12_18)))
 (let ((?x28324 (* l_0_12_17 l_0_12_17)))
 (let ((?x28322 (* l_0_12_161 l_0_12_161)))
 (let ((?x28320 (* l_0_12_160 l_0_12_160)))
 (let ((?x28318 (* l_0_12_16 l_0_12_16)))
 (let ((?x28316 (* l_0_12_159 l_0_12_159)))
 (let ((?x28314 (* l_0_12_158 l_0_12_158)))
 (let ((?x28312 (* l_0_12_157 l_0_12_157)))
 (let ((?x28310 (* l_0_12_156 l_0_12_156)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x28308 (* ?x28307 l_0_12_99)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x28305 (* ?x28304 l_0_12_98)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x28302 (* ?x15108 l_0_12_97)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x15120 (* ?x15119 l_0_12_96)))
 (let ((?x28309 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_95) ?x15120) ?x28302) ?x28305) ?x28308)))
 (let ((?x28323 (+ (+ (- (+ (+ (+ (+ ?x28309 ?x28310) ?x28312) ?x28314) ?x28316) ?x28318) ?x28320) ?x28322)))
 (let ((?x28337 (+ (+ (- (- (- (- (- ?x28323 ?x28324) ?x28326) ?x28328) ?x28330) ?x28332) ?x28334) ?x28336)))
 (let ((?x28351 (- (- (- (+ (+ (+ (+ ?x28337 ?x28338) ?x28340) ?x28342) ?x28344) ?x28346) ?x28348) ?x28350)))
 (= (- (- ?x28351 ?x28352) ?x28354) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x27328 (* ?x27327 l_0_12_82)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x27325 (* ?x27324 l_0_12_81)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x27322 (* ?x27321 l_0_12_80)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x27319 (* ?x27318 l_0_12_79)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x27316 (* ?x27315 l_0_12_78)))
 (let ((?x28460 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x28457 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x28454 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x28451 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x28448 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x28445 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x28442 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x28439 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x28436 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x28433 (* ?x27807 l_0_12_24)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x28431 (* ?x27590 l_0_12_23)))
 (let ((?x28429 (* (* 2.0 l_0_12_161) l_0_12_167)))
 (let ((?x28426 (* (* 2.0 l_0_12_160) l_0_12_166)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x28423 (* ?x27580 l_0_12_22)))
 (let ((?x28421 (* (* 2.0 l_0_12_159) l_0_12_165)))
 (let ((?x28418 (* (* 2.0 l_0_12_158) l_0_12_164)))
 (let ((?x28415 (* (* 2.0 l_0_12_157) l_0_12_163)))
 (let ((?x28412 (* (* 2.0 l_0_12_156) l_0_12_162)))
 (let ((?x27264 (* (* 2.0 l_0_12_110) l_0_12_99)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x27261 (* ?x27260 l_0_12_98)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x27258 (* ?x27257 l_0_12_97)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x27255 (* ?x27254 l_0_12_96)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x27252 (* ?x27251 l_0_12_95)))
 (let ((?x28419 (+ (+ (+ (+ (+ (+ (+ ?x27252 ?x27255) ?x27258) ?x27261) ?x27264) ?x28412) ?x28415) ?x28418)))
 (let ((?x28437 (- (- (- (+ (+ (- (+ ?x28419 ?x28421) ?x28423) ?x28426) ?x28429) ?x28431) ?x28433) ?x28436)))
 (let ((?x28458 (+ (+ (+ (+ (+ (- (- ?x28437 ?x28439) ?x28442) ?x28445) ?x28448) ?x28451) ?x28454) ?x28457)))
 (= (- (- (- (- (- (+ ?x28458 ?x28460) ?x27316) ?x27319) ?x27322) ?x27325) ?x27328) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28574 (* l_0_12_56 l_0_12_56)))
 (let ((?x28572 (* l_0_12_55 l_0_12_55)))
 (let ((?x28570 (* l_0_12_54 l_0_12_54)))
 (let ((?x28568 (* l_0_12_53 l_0_12_53)))
 (let ((?x28566 (* l_0_12_52 l_0_12_52)))
 (let ((?x28564 (* l_0_12_51 l_0_12_51)))
 (let ((?x28562 (* l_0_12_50 l_0_12_50)))
 (let ((?x28560 (* l_0_12_28 l_0_12_28)))
 (let ((?x28558 (* l_0_12_27 l_0_12_27)))
 (let ((?x28556 (* l_0_12_26 l_0_12_26)))
 (let ((?x28554 (* l_0_12_25 l_0_12_25)))
 (let ((?x28552 (* l_0_12_24 l_0_12_24)))
 (let ((?x28550 (* l_0_12_23 l_0_12_23)))
 (let ((?x28548 (* l_0_12_22 l_0_12_22)))
 (let ((?x28546 (* l_0_12_168 l_0_12_168)))
 (let ((?x28544 (* l_0_12_167 l_0_12_167)))
 (let ((?x28542 (* l_0_12_166 l_0_12_166)))
 (let ((?x28540 (* l_0_12_165 l_0_12_165)))
 (let ((?x28538 (* l_0_12_164 l_0_12_164)))
 (let ((?x28539 (+ (+ (* l_0_12_162 l_0_12_162) (* l_0_12_163 l_0_12_163)) ?x28538)))
 (let ((?x28553 (- (- (- (+ (+ (+ (+ ?x28539 ?x28540) ?x28542) ?x28544) ?x28546) ?x28548) ?x28550) ?x28552)))
 (let ((?x28567 (+ (+ (+ (- (- (- (- ?x28553 ?x28554) ?x28556) ?x28558) ?x28560) ?x28562) ?x28564) ?x28566)))
 (= (+ (+ (+ (+ ?x28567 ?x28568) ?x28570) ?x28572) ?x28574) 0.0))))))))))))))))))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27182 (* ?x27181 l_0_12_30)))
 (let ((?x28600 (* l_0_12_255 l_0_12_255)))
 (let ((?x28598 (* l_0_12_254 l_0_12_254)))
 (let ((?x28596 (* l_0_12_227 l_0_12_227)))
 (let ((?x28594 (* l_0_12_226 l_0_12_226)))
 (let ((?x28592 (* l_0_12_199 l_0_12_199)))
 (let ((?x28590 (* l_0_12_198 l_0_12_198)))
 (let ((?x28589 (- (* (* 2.0 l_0_12_1) l_0_12_2) (* (* 4.0 l_0_12_169) l_0_12_170))))
 (let ((?x28602 (- (- (- (- (- (- (- ?x28589 ?x28590) ?x28592) ?x28594) ?x28596) ?x28598) ?x28600) ?x27182)))
 (= ?x28602 0.0))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x28642 (* ?x27437 l_0_12_86)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x28640 (* ?x27434 l_0_12_58)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27313 (* ?x27181 l_0_12_32)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27161 (* ?x27160 l_0_12_142)))
 (let ((?x15345 (- (* (* 2.0 l_0_12_1) l_0_12_4) (* (* 2.0 l_0_12_113) l_0_12_114))))
 (let ((?x28620 (- (+ (- ?x15345 ?x27161) (* (* 2.0 l_0_12_169) l_0_12_170)) (* (* 4.0 l_0_12_169) l_0_12_172))))
 (let ((?x28626 (- (- ?x28620 (* (* 2.0 l_0_12_198) l_0_12_200)) (* (* 2.0 l_0_12_199) l_0_12_201))))
 (let ((?x28632 (- (- ?x28626 (* (* 2.0 l_0_12_226) l_0_12_228)) (* (* 2.0 l_0_12_227) l_0_12_229))))
 (let ((?x28638 (- (- ?x28632 (* (* 2.0 l_0_12_254) l_0_12_256)) (* (* 2.0 l_0_12_255) l_0_12_257))))
 (= (+ (- (- ?x28638 ?x27313) ?x28640) ?x28642) 0.0)))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x28642 (* ?x27437 l_0_12_86)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x28640 (* ?x27434 l_0_12_58)))
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27403 (* ?x27181 l_0_12_35)))
 (let ((?x28670 (- (* (* 2.0 l_0_12_1) l_0_12_7) (* (* 4.0 l_0_12_169) l_0_12_175))))
 (let ((?x28674 (- (- ?x28670 (* (* 2.0 l_0_12_198) l_0_12_203)) (* (* 2.0 l_0_12_199) l_0_12_204))))
 (let ((?x28678 (- (- ?x28674 (* (* 2.0 l_0_12_226) l_0_12_231)) (* (* 2.0 l_0_12_227) l_0_12_232))))
 (let ((?x28682 (- (- ?x28678 (* (* 2.0 l_0_12_254) l_0_12_259)) (* (* 2.0 l_0_12_255) l_0_12_260))))
 (= (- (+ (- ?x28682 ?x27403) ?x28640) ?x28642) 0.0))))))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27418 (* ?x27181 l_0_12_39)))
 (let ((?x28705 (- (* (* 2.0 l_0_12_1) l_0_12_11) (* (* 4.0 l_0_12_169) l_0_12_179))))
 (let ((?x28709 (- (- ?x28705 (* (* 2.0 l_0_12_198) l_0_12_207)) (* (* 2.0 l_0_12_199) l_0_12_208))))
 (let ((?x28713 (- (- ?x28709 (* (* 2.0 l_0_12_226) l_0_12_235)) (* (* 2.0 l_0_12_227) l_0_12_236))))
 (let ((?x28717 (- (- ?x28713 (* (* 2.0 l_0_12_254) l_0_12_263)) (* (* 2.0 l_0_12_255) l_0_12_264))))
 (= (- ?x28717 ?x27418) 0.0))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27427 (* ?x27181 l_0_12_44)))
 (let ((?x28754 (- (* (* 2.0 l_0_12_1) l_0_12_16) (* (* 4.0 l_0_12_169) l_0_12_184))))
 (let ((?x28758 (- (- ?x28754 (* (* 2.0 l_0_12_198) l_0_12_212)) (* (* 2.0 l_0_12_199) l_0_12_213))))
 (let ((?x28762 (- (- ?x28758 (* (* 2.0 l_0_12_226) l_0_12_240)) (* (* 2.0 l_0_12_227) l_0_12_241))))
 (let ((?x28766 (- (- ?x28762 (* (* 2.0 l_0_12_254) l_0_12_268)) (* (* 2.0 l_0_12_255) l_0_12_269))))
 (= (- ?x28766 ?x27427) 0.0))))))))
(assert
 (let ((?x27181 (* 2.0 l_0_12_29)))
 (let ((?x27464 (* ?x27181 l_0_12_50)))
 (let ((?x15973 (- (* (* 2.0 l_0_12_1) l_0_12_22) (* (* 4.0 l_0_12_169) l_0_12_190))))
 (let ((?x28792 (- (- ?x15973 (* (* 2.0 l_0_12_198) l_0_12_218)) (* (* 2.0 l_0_12_199) l_0_12_219))))
 (let ((?x28796 (- (- ?x28792 (* (* 2.0 l_0_12_226) l_0_12_246)) (* (* 2.0 l_0_12_227) l_0_12_247))))
 (let ((?x28800 (- (- ?x28796 (* (* 2.0 l_0_12_254) l_0_12_274)) (* (* 2.0 l_0_12_255) l_0_12_275))))
 (= (- ?x28800 ?x27464) 0.0))))))))
(assert
 (let ((?x27484 (* l_0_12_31 l_0_12_31)))
 (let ((?x27482 (* l_0_12_30 l_0_12_30)))
 (let ((?x27480 (* l_0_12_3 l_0_12_3)))
 (let ((?x27473 (* l_0_12_2 l_0_12_2)))
 (let ((?x16001 (- (* (* (- 2.0) l_0_12_170) l_0_12_170) (* (* 2.0 l_0_12_171) l_0_12_171))))
 (= (- (- (+ (+ ?x16001 ?x27473) ?x27480) ?x27482) ?x27484) 0.0)))))))
(assert
 (let ((?x28852 (* l_0_12_87 l_0_12_87)))
 (let ((?x28850 (* l_0_12_86 l_0_12_86)))
 (let ((?x28848 (* l_0_12_59 l_0_12_59)))
 (let ((?x28846 (* l_0_12_58 l_0_12_58)))
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27506 (* ?x27505 l_0_12_33)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27503 (* ?x27502 l_0_12_32)))
 (let ((?x27499 (* 2.0 l_0_12_3)))
 (let ((?x27500 (* ?x27499 l_0_12_5)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27497 (* ?x27496 l_0_12_4)))
 (let ((?x28822 (* l_0_12_171 l_0_12_171)))
 (let ((?x28820 (* l_0_12_170 l_0_12_170)))
 (let ((?x27470 (* l_0_12_143 l_0_12_143)))
 (let ((?x27468 (* l_0_12_142 l_0_12_142)))
 (let ((?x28832 (- (- (* (- l_0_12_114) l_0_12_114) (* l_0_12_115 l_0_12_115)) ?x27468)))
 (let ((?x28840 (- (+ (- (- ?x28832 ?x27470) (* (* 4.0 l_0_12_170) l_0_12_172)) ?x28820) (* (* 4.0 l_0_12_171) l_0_12_173))))
 (let ((?x28849 (- (- (- (- (+ (+ (+ ?x28840 ?x28822) ?x27497) ?x27500) ?x27503) ?x27506) ?x28846) ?x28848)))
 (= (+ (+ ?x28849 ?x28850) ?x28852) 0.0)))))))))))))))))))))
(assert
 (let ((?x28852 (* l_0_12_87 l_0_12_87)))
 (let ((?x28850 (* l_0_12_86 l_0_12_86)))
 (let ((?x28848 (* l_0_12_59 l_0_12_59)))
 (let ((?x28846 (* l_0_12_58 l_0_12_58)))
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27539 (* ?x27505 l_0_12_36)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27537 (* ?x27502 l_0_12_35)))
 (let ((?x27499 (* 2.0 l_0_12_3)))
 (let ((?x27535 (* ?x27499 l_0_12_8)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27533 (* ?x27496 l_0_12_7)))
 (let ((?x28872 (- (* (* (- 4.0) l_0_12_170) l_0_12_175) (* (* 4.0 l_0_12_171) l_0_12_176))))
 (let ((?x28879 (- (+ (+ (- (- (+ (+ ?x28872 ?x27533) ?x27535) ?x27537) ?x27539) ?x28846) ?x28848) ?x28850)))
 (= (- ?x28879 ?x28852) 0.0))))))))))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27566 (* ?x27505 l_0_12_40)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27564 (* ?x27502 l_0_12_39)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27558 (* ?x27151 l_0_12_3)))
 (let ((?x28890 (- (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x27558) (* (* 4.0 l_0_12_170) l_0_12_179))))
 (= (- (- (- ?x28890 (* (* 4.0 l_0_12_171) l_0_12_180)) ?x27564) ?x27566) 0.0)))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27595 (* ?x27505 l_0_12_45)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27593 (* ?x27502 l_0_12_44)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x27591 (* ?x27590 l_0_12_3)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x27581 (* ?x27580 l_0_12_2)))
 (let ((?x28909 (- (- (+ ?x27581 ?x27591) (* (* 4.0 l_0_12_170) l_0_12_184)) (* (* 4.0 l_0_12_171) l_0_12_185))))
 (= (- (- ?x28909 ?x27593) ?x27595) 0.0)))))))))))
(assert
 (let ((?x27505 (* 2.0 l_0_12_31)))
 (let ((?x27651 (* ?x27505 l_0_12_51)))
 (let ((?x27502 (* 2.0 l_0_12_30)))
 (let ((?x27649 (* ?x27502 l_0_12_50)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x27647 (* ?x27646 l_0_12_3)))
 (let ((?x27496 (* 2.0 l_0_12_2)))
 (let ((?x27644 (* ?x27496 l_0_12_22)))
 (let ((?x28926 (- (* (* (- 4.0) l_0_12_170) l_0_12_190) (* (* 4.0 l_0_12_171) l_0_12_191))))
 (= (- (- (+ (+ ?x28926 ?x27644) ?x27647) ?x27649) ?x27651) 0.0)))))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x28961 (* ?x27606 l_0_12_89)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x28959 (* ?x27603 l_0_12_88)))
 (let ((?x27691 (* l_0_12_6 l_0_12_6)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x28956 (* ?x27600 l_0_12_61)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x28954 (* ?x27597 l_0_12_60)))
 (let ((?x27689 (* l_0_12_5 l_0_12_5)))
 (let ((?x27687 (* l_0_12_4 l_0_12_4)))
 (let ((?x27685 (* l_0_12_34 l_0_12_34)))
 (let ((?x27683 (* l_0_12_33 l_0_12_33)))
 (let ((?x27681 (* l_0_12_32 l_0_12_32)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27494 (* ?x27493 l_0_12_145)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27492 (* ?x27491 l_0_12_144)))
 (let ((?x16246 (- (* (* (- 2.0) l_0_12_114) l_0_12_116) (* (* 2.0 l_0_12_115) l_0_12_117))))
 (let ((?x28939 (+ (+ (- (- ?x16246 ?x27492) ?x27494) (* (* 2.0 l_0_12_170) l_0_12_172)) (* (* 2.0 l_0_12_171) l_0_12_173))))
 (let ((?x28945 (- (- ?x28939 (* (* 2.0 l_0_12_172) l_0_12_172)) (* (* 2.0 l_0_12_173) l_0_12_173))))
 (let ((?x28951 (- (- (- (- ?x28945 (* (* 2.0 l_0_12_174) l_0_12_174)) ?x27681) ?x27683) ?x27685)))
 (let ((?x28962 (+ (+ (+ (- (- (+ (+ ?x28951 ?x27687) ?x27689) ?x28954) ?x28956) ?x27691) ?x28959) ?x28961)))
 (= ?x28962 0.0)))))))))))))))))))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x29021 (* ?x27606 l_0_12_92)))
 (let ((?x28961 (* ?x27606 l_0_12_89)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x29018 (* ?x27603 l_0_12_91)))
 (let ((?x28959 (* ?x27603 l_0_12_88)))
 (let ((?x27725 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29014 (* ?x27600 l_0_12_64)))
 (let ((?x28956 (* ?x27600 l_0_12_61)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29011 (* ?x27597 l_0_12_63)))
 (let ((?x28954 (* ?x27597 l_0_12_60)))
 (let ((?x27722 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x27719 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27716 (* ?x27715 l_0_12_37)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27713 (* ?x27712 l_0_12_36)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27710 (* ?x27709 l_0_12_35)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27525 (* ?x27493 l_0_12_148)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27523 (* ?x27491 l_0_12_147)))
 (let ((?x28989 (- (* (* (- 2.0) l_0_12_114) l_0_12_119) (* (* 2.0 l_0_12_115) l_0_12_120))))
 (let ((?x28995 (+ (+ (- (- ?x28989 ?x27523) ?x27525) (* (* 2.0 l_0_12_170) l_0_12_175)) (* (* 2.0 l_0_12_171) l_0_12_176))))
 (let ((?x29001 (- (- ?x28995 (* (* 4.0 l_0_12_172) l_0_12_175)) (* (* 4.0 l_0_12_173) l_0_12_176))))
 (let ((?x29007 (- (- (- (- ?x29001 (* (* 4.0 l_0_12_174) l_0_12_177)) ?x27710) ?x27713) ?x27716)))
 (let ((?x29016 (+ (- (+ (- (+ (+ (+ ?x29007 ?x27719) ?x27722) ?x28954) ?x29011) ?x28956) ?x29014) ?x27725)))
 (= (+ (- (+ (- ?x29016 ?x28959) ?x29018) ?x28961) ?x29021) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x27607 (* ?x27606 l_0_12_96)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x27604 (* ?x27603 l_0_12_95)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x27601 (* ?x27600 l_0_12_68)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x27598 (* ?x27597 l_0_12_67)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27773 (* ?x27715 l_0_12_41)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27771 (* ?x27712 l_0_12_40)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27769 (* ?x27709 l_0_12_39)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27562 (* ?x27493 l_0_12_152)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27560 (* ?x27491 l_0_12_151)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27761 (* ?x27154 l_0_12_6)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27759 (* ?x27151 l_0_12_5)))
 (let ((?x29043 (- (* (* 2.0 l_0_12_11) l_0_12_4) (* (* 2.0 l_0_12_114) l_0_12_123))))
 (let ((?x29048 (- (+ (+ (- ?x29043 (* (* 2.0 l_0_12_115) l_0_12_124)) ?x27759) ?x27761) ?x27560)))
 (let ((?x29053 (+ (+ (- ?x29048 ?x27562) (* (* 2.0 l_0_12_170) l_0_12_179)) (* (* 2.0 l_0_12_171) l_0_12_180))))
 (let ((?x29057 (- (- ?x29053 (* (* 4.0 l_0_12_172) l_0_12_179)) (* (* 4.0 l_0_12_173) l_0_12_180))))
 (let ((?x29062 (- (- (- (- ?x29057 (* (* 4.0 l_0_12_174) l_0_12_181)) ?x27769) ?x27771) ?x27773)))
 (= (+ (+ (- (- ?x29062 ?x27598) ?x27601) ?x27604) ?x27607) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29106 (* ?x27600 l_0_12_73)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29104 (* ?x27597 l_0_12_72)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27814 (* ?x27715 l_0_12_46)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27812 (* ?x27712 l_0_12_45)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27810 (* ?x27709 l_0_12_44)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x27808 (* ?x27807 l_0_12_6)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x27805 (* ?x27590 l_0_12_5)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x27794 (* ?x27580 l_0_12_4)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27576 (* ?x27493 l_0_12_157)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27574 (* ?x27491 l_0_12_156)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x16577 (* ?x15119 l_0_12_87)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x16616 (* ?x15144 l_0_12_86)))
 (let ((?x16578 (+ ?x16616 ?x16577)))
 (let ((?x29085 (- (- ?x16578 (* (* 2.0 l_0_12_114) l_0_12_128)) (* (* 2.0 l_0_12_115) l_0_12_129))))
 (let ((?x29091 (+ (+ (+ (- (- ?x29085 ?x27574) ?x27576) ?x27794) ?x27805) (* (* 2.0 l_0_12_170) l_0_12_184))))
 (let ((?x29095 (- (+ ?x29091 (* (* 2.0 l_0_12_171) l_0_12_185)) (* (* 4.0 l_0_12_172) l_0_12_184))))
 (let ((?x29099 (- (- ?x29095 (* (* 4.0 l_0_12_173) l_0_12_185)) (* (* 4.0 l_0_12_174) l_0_12_186))))
 (= (- (- (- (- (- (+ ?x29099 ?x27808) ?x27810) ?x27812) ?x27814) ?x29104) ?x29106) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29158 (* ?x27600 l_0_12_79)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29156 (* ?x27597 l_0_12_78)))
 (let ((?x27715 (* 2.0 l_0_12_34)))
 (let ((?x27895 (* ?x27715 l_0_12_52)))
 (let ((?x27712 (* 2.0 l_0_12_33)))
 (let ((?x27893 (* ?x27712 l_0_12_51)))
 (let ((?x27709 (* 2.0 l_0_12_32)))
 (let ((?x27891 (* ?x27709 l_0_12_50)))
 (let ((?x27888 (* 2.0 l_0_12_24)))
 (let ((?x27889 (* ?x27888 l_0_12_6)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x27886 (* ?x27646 l_0_12_5)))
 (let ((?x27883 (* 2.0 l_0_12_22)))
 (let ((?x27884 (* ?x27883 l_0_12_4)))
 (let ((?x27493 (* 2.0 l_0_12_143)))
 (let ((?x27642 (* ?x27493 l_0_12_163)))
 (let ((?x27491 (* 2.0 l_0_12_142)))
 (let ((?x27641 (* ?x27491 l_0_12_162)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x16653 (* ?x27254 l_0_12_87)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x16696 (* ?x27251 l_0_12_86)))
 (let ((?x15795 (+ ?x16696 ?x16653)))
 (let ((?x29137 (- (- ?x15795 (* (* 2.0 l_0_12_114) l_0_12_134)) (* (* 2.0 l_0_12_115) l_0_12_135))))
 (let ((?x29143 (+ (+ (- (- ?x29137 ?x27641) ?x27642) (* (* 2.0 l_0_12_170) l_0_12_190)) (* (* 2.0 l_0_12_171) l_0_12_191))))
 (let ((?x29147 (- (- ?x29143 (* (* 4.0 l_0_12_172) l_0_12_190)) (* (* 4.0 l_0_12_173) l_0_12_191))))
 (let ((?x29152 (+ (+ (+ (- ?x29147 (* (* 4.0 l_0_12_174) l_0_12_192)) ?x27884) ?x27886) ?x27889)))
 (= (- (- (- (- (- ?x29152 ?x27891) ?x27893) ?x27895) ?x29156) ?x29158) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x27944 (* l_0_12_9 l_0_12_9)))
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x29021 (* ?x27606 l_0_12_92)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x29018 (* ?x27603 l_0_12_91)))
 (let ((?x27942 (* l_0_12_8 l_0_12_8)))
 (let ((?x27940 (* l_0_12_7 l_0_12_7)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29014 (* ?x27600 l_0_12_64)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29011 (* ?x27597 l_0_12_63)))
 (let ((?x27938 (* l_0_12_38 l_0_12_38)))
 (let ((?x27936 (* l_0_12_37 l_0_12_37)))
 (let ((?x27934 (* l_0_12_36 l_0_12_36)))
 (let ((?x27932 (* l_0_12_35 l_0_12_35)))
 (let ((?x27948 (* l_0_12_10 l_0_12_10)))
 (let ((?x29195 (- (- ?x27948 (* (* 2.0 l_0_12_175) l_0_12_175)) (* (* 2.0 l_0_12_176) l_0_12_176))))
 (let ((?x29201 (- (- ?x29195 (* (* 2.0 l_0_12_177) l_0_12_177)) (* (* 2.0 l_0_12_178) l_0_12_178))))
 (let ((?x29208 (+ (+ (+ (- (- (- (- ?x29201 ?x27932) ?x27934) ?x27936) ?x27938) ?x29011) ?x29014) ?x27940)))
 (= (+ (- (- (+ ?x29208 ?x27942) ?x29018) ?x29021) ?x27944) 0.0)))))))))))))))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x27607 (* ?x27606 l_0_12_96)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x27604 (* ?x27603 l_0_12_95)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x27601 (* ?x27600 l_0_12_68)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x27598 (* ?x27597 l_0_12_67)))
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x27985 (* ?x27984 l_0_12_42)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x27982 (* ?x27981 l_0_12_41)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x27979 (* ?x27978 l_0_12_40)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x27976 (* ?x27975 l_0_12_39)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x27961 (* ?x27154 l_0_12_9)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x27959 (* ?x27151 l_0_12_8)))
 (let ((?x27148 (* 2.0 l_0_12_11)))
 (let ((?x27957 (* ?x27148 l_0_12_7)))
 (let ((?x16847 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x27957) ?x27959) ?x27961) (* (* 4.0 l_0_12_175) l_0_12_179))))
 (let ((?x16823 (- (- ?x16847 (* (* 4.0 l_0_12_176) l_0_12_180)) (* (* 4.0 l_0_12_177) l_0_12_181))))
 (let ((?x29224 (- (- (- (- ?x16823 (* (* 4.0 l_0_12_178) l_0_12_182)) ?x27976) ?x27979) ?x27982)))
 (= (- (- (+ (+ (- ?x29224 ?x27985) ?x27598) ?x27601) ?x27604) ?x27607) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29106 (* ?x27600 l_0_12_73)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29104 (* ?x27597 l_0_12_72)))
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x28037 (* ?x27984 l_0_12_47)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x28035 (* ?x27981 l_0_12_46)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x28033 (* ?x27978 l_0_12_45)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x28031 (* ?x27975 l_0_12_44)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x28029 (* ?x27807 l_0_12_9)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x28027 (* ?x27590 l_0_12_8)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x28025 (* ?x27580 l_0_12_7)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x16577 (* ?x15119 l_0_12_87)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x16616 (* ?x15144 l_0_12_86)))
 (let ((?x29241 (+ (+ (- (- (* (* 2.0 l_0_12_10) l_0_12_19) ?x16616) ?x16577) ?x28025) ?x28027)))
 (let ((?x29245 (- (- ?x29241 (* (* 4.0 l_0_12_175) l_0_12_184)) (* (* 4.0 l_0_12_176) l_0_12_185))))
 (let ((?x29249 (- (- ?x29245 (* (* 4.0 l_0_12_177) l_0_12_186)) (* (* 4.0 l_0_12_178) l_0_12_187))))
 (let ((?x29256 (+ (+ (- (- (- (- (+ ?x29249 ?x28029) ?x28031) ?x28033) ?x28035) ?x28037) ?x29104) ?x29106)))
 (= ?x29256 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29158 (* ?x27600 l_0_12_79)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29156 (* ?x27597 l_0_12_78)))
 (let ((?x27984 (* 2.0 l_0_12_38)))
 (let ((?x28135 (* ?x27984 l_0_12_53)))
 (let ((?x27981 (* 2.0 l_0_12_37)))
 (let ((?x28133 (* ?x27981 l_0_12_52)))
 (let ((?x27978 (* 2.0 l_0_12_36)))
 (let ((?x28131 (* ?x27978 l_0_12_51)))
 (let ((?x27975 (* 2.0 l_0_12_35)))
 (let ((?x28129 (* ?x27975 l_0_12_50)))
 (let ((?x27888 (* 2.0 l_0_12_24)))
 (let ((?x28127 (* ?x27888 l_0_12_9)))
 (let ((?x27646 (* 2.0 l_0_12_23)))
 (let ((?x28125 (* ?x27646 l_0_12_8)))
 (let ((?x27883 (* 2.0 l_0_12_22)))
 (let ((?x28123 (* ?x27883 l_0_12_7)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x16653 (* ?x27254 l_0_12_87)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x16696 (* ?x27251 l_0_12_86)))
 (let ((?x17105 (- (- (- (* (* 2.0 l_0_12_10) l_0_12_25) ?x16696) ?x16653) (* (* 4.0 l_0_12_175) l_0_12_190))))
 (let ((?x17080 (- (- ?x17105 (* (* 4.0 l_0_12_176) l_0_12_191)) (* (* 4.0 l_0_12_177) l_0_12_192))))
 (let ((?x29269 (+ (+ (+ (- ?x17080 (* (* 4.0 l_0_12_178) l_0_12_193)) ?x28123) ?x28125) ?x28127)))
 (= (+ (+ (- (- (- (- ?x29269 ?x28129) ?x28131) ?x28133) ?x28135) ?x29156) ?x29158) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x28202 (* l_0_12_43 l_0_12_43)))
 (let ((?x28200 (* l_0_12_42 l_0_12_42)))
 (let ((?x28198 (* l_0_12_41 l_0_12_41)))
 (let ((?x28196 (* l_0_12_40 l_0_12_40)))
 (let ((?x28194 (* l_0_12_39 l_0_12_39)))
 (let ((?x28182 (* l_0_12_15 l_0_12_15)))
 (let ((?x28180 (* l_0_12_14 l_0_12_14)))
 (let ((?x28167 (* l_0_12_13 l_0_12_13)))
 (let ((?x17214 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x28167) ?x28180)))
 (let ((?x17144 (- (- (+ ?x17214 ?x28182) (* (* 2.0 l_0_12_179) l_0_12_179)) (* (* 2.0 l_0_12_180) l_0_12_180))))
 (let ((?x29296 (- (- ?x17144 (* (* 2.0 l_0_12_181) l_0_12_181)) (* (* 2.0 l_0_12_182) l_0_12_182))))
 (let ((?x29301 (- (- (- (- ?x29296 (* (* 2.0 l_0_12_183) l_0_12_183)) ?x28194) ?x28196) ?x28198)))
 (= (- (- ?x29301 ?x28200) ?x28202) 0.0))))))))))))))
(assert
 (let ((?x27196 (* 2.0 l_0_12_43)))
 (let ((?x28255 (* ?x27196 l_0_12_48)))
 (let ((?x27193 (* 2.0 l_0_12_42)))
 (let ((?x28253 (* ?x27193 l_0_12_47)))
 (let ((?x27190 (* 2.0 l_0_12_41)))
 (let ((?x28251 (* ?x27190 l_0_12_46)))
 (let ((?x27187 (* 2.0 l_0_12_40)))
 (let ((?x28249 (* ?x27187 l_0_12_45)))
 (let ((?x27184 (* 2.0 l_0_12_39)))
 (let ((?x28247 (* ?x27184 l_0_12_44)))
 (let ((?x27163 (* 2.0 l_0_12_15)))
 (let ((?x28235 (* ?x27163 l_0_12_20)))
 (let ((?x27157 (* 2.0 l_0_12_14)))
 (let ((?x28233 (* ?x27157 l_0_12_19)))
 (let ((?x27154 (* 2.0 l_0_12_13)))
 (let ((?x28231 (* ?x27154 l_0_12_18)))
 (let ((?x27151 (* 2.0 l_0_12_12)))
 (let ((?x28229 (* ?x27151 l_0_12_17)))
 (let ((?x29316 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x28229) ?x28231) ?x28233) ?x28235)))
 (let ((?x29320 (- (- ?x29316 (* (* 4.0 l_0_12_179) l_0_12_184)) (* (* 4.0 l_0_12_180) l_0_12_185))))
 (let ((?x29324 (- (- ?x29320 (* (* 4.0 l_0_12_181) l_0_12_186)) (* (* 4.0 l_0_12_182) l_0_12_187))))
 (let ((?x29329 (- (- (- (- ?x29324 (* (* 4.0 l_0_12_183) l_0_12_188)) ?x28247) ?x28249) ?x28251)))
 (= (- (- ?x29329 ?x28253) ?x28255) 0.0))))))))))))))))))))))))
(assert
 (let ((?x28344 (* l_0_12_49 l_0_12_49)))
 (let ((?x28342 (* l_0_12_48 l_0_12_48)))
 (let ((?x28340 (* l_0_12_47 l_0_12_47)))
 (let ((?x28338 (* l_0_12_46 l_0_12_46)))
 (let ((?x28336 (* l_0_12_45 l_0_12_45)))
 (let ((?x28334 (* l_0_12_44 l_0_12_44)))
 (let ((?x28332 (* l_0_12_21 l_0_12_21)))
 (let ((?x28330 (* l_0_12_20 l_0_12_20)))
 (let ((?x28328 (* l_0_12_19 l_0_12_19)))
 (let ((?x28326 (* l_0_12_18 l_0_12_18)))
 (let ((?x29347 (- (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x28326) (* (* 2.0 l_0_12_184) l_0_12_184))))
 (let ((?x29353 (- (- ?x29347 (* (* 2.0 l_0_12_185) l_0_12_185)) (* (* 2.0 l_0_12_186) l_0_12_186))))
 (let ((?x29359 (- (- ?x29353 (* (* 2.0 l_0_12_187) l_0_12_187)) (* (* 2.0 l_0_12_188) l_0_12_188))))
 (let ((?x29365 (+ (+ (+ (- ?x29359 (* (* 2.0 l_0_12_189) l_0_12_189)) ?x28328) ?x28330) ?x28332)))
 (= (- (- (- (- (- (- ?x29365 ?x28334) ?x28336) ?x28338) ?x28340) ?x28342) ?x28344) 0.0))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x28642 (* ?x27437 l_0_12_86)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x28640 (* ?x27434 l_0_12_58)))
 (let ((?x28460 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x28457 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x28454 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x28451 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x28448 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x28445 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x28442 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x28439 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x28436 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x27807 (* 2.0 l_0_12_18)))
 (let ((?x28433 (* ?x27807 l_0_12_24)))
 (let ((?x27590 (* 2.0 l_0_12_17)))
 (let ((?x28431 (* ?x27590 l_0_12_23)))
 (let ((?x27580 (* 2.0 l_0_12_16)))
 (let ((?x28423 (* ?x27580 l_0_12_22)))
 (let ((?x29396 (- (- (+ (+ ?x28423 ?x28431) ?x28433) (* (* 4.0 l_0_12_184) l_0_12_190)) (* (* 4.0 l_0_12_185) l_0_12_191))))
 (let ((?x29402 (- (- ?x29396 (* (* 4.0 l_0_12_186) l_0_12_192)) (* (* 4.0 l_0_12_187) l_0_12_193))))
 (let ((?x29408 (- (- ?x29402 (* (* 4.0 l_0_12_188) l_0_12_194)) (* (* 4.0 l_0_12_189) l_0_12_195))))
 (let ((?x29415 (- (- (- (- (+ (+ (+ ?x29408 ?x28436) ?x28439) ?x28442) ?x28445) ?x28448) ?x28451) ?x28454)))
 (= (+ (- (- (- ?x29415 ?x28457) ?x28460) ?x28640) ?x28642) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x28574 (* l_0_12_56 l_0_12_56)))
 (let ((?x28572 (* l_0_12_55 l_0_12_55)))
 (let ((?x28570 (* l_0_12_54 l_0_12_54)))
 (let ((?x28568 (* l_0_12_53 l_0_12_53)))
 (let ((?x28566 (* l_0_12_52 l_0_12_52)))
 (let ((?x28564 (* l_0_12_51 l_0_12_51)))
 (let ((?x28562 (* l_0_12_50 l_0_12_50)))
 (let ((?x28560 (* l_0_12_28 l_0_12_28)))
 (let ((?x28558 (* l_0_12_27 l_0_12_27)))
 (let ((?x28556 (* l_0_12_26 l_0_12_26)))
 (let ((?x28554 (* l_0_12_25 l_0_12_25)))
 (let ((?x28552 (* l_0_12_24 l_0_12_24)))
 (let ((?x28550 (* l_0_12_23 l_0_12_23)))
 (let ((?x28548 (* l_0_12_22 l_0_12_22)))
 (let ((?x17536 (- (* (* (- 2.0) l_0_12_190) l_0_12_190) (* (* 2.0 l_0_12_191) l_0_12_191))))
 (let ((?x29436 (- (- ?x17536 (* (* 2.0 l_0_12_192) l_0_12_192)) (* (* 2.0 l_0_12_193) l_0_12_193))))
 (let ((?x29442 (- (- ?x29436 (* (* 2.0 l_0_12_194) l_0_12_194)) (* (* 2.0 l_0_12_195) l_0_12_195))))
 (let ((?x29448 (+ (+ (+ (- ?x29442 (* (* 2.0 l_0_12_196) l_0_12_196)) ?x28548) ?x28550) ?x28552)))
 (let ((?x29455 (- (- (- (+ (+ (+ (+ ?x29448 ?x28554) ?x28556) ?x28558) ?x28560) ?x28562) ?x28564) ?x28566)))
 (= (- (- (- (- ?x29455 ?x28568) ?x28570) ?x28572) ?x28574) 0.0)))))))))))))))))))))
(assert
 (let ((?x27019 (* l_0_12_85 l_0_12_85)))
 (let ((?x27017 (* l_0_12_57 l_0_12_57)))
 (let ((?x17631 (- (* (* (- 2.0) l_0_12_212) l_0_12_218) (* (* 2.0 l_0_12_213) l_0_12_219))))
 (let ((?x17647 (- (- ?x17631 (* (* 2.0 l_0_12_214) l_0_12_220)) (* (* 2.0 l_0_12_215) l_0_12_221))))
 (let ((?x29482 (- (- ?x17647 (* (* 2.0 l_0_12_216) l_0_12_222)) (* (* 2.0 l_0_12_217) l_0_12_223))))
 (let ((?x29488 (- (- ?x29482 (* (* 2.0 l_0_12_240) l_0_12_246)) (* (* 2.0 l_0_12_241) l_0_12_247))))
 (let ((?x29494 (- (- ?x29488 (* (* 2.0 l_0_12_242) l_0_12_248)) (* (* 2.0 l_0_12_243) l_0_12_249))))
 (let ((?x29500 (- (- ?x29494 (* (* 2.0 l_0_12_244) l_0_12_250)) (* (* 2.0 l_0_12_245) l_0_12_251))))
 (let ((?x29506 (- (- ?x29500 (* (* 2.0 l_0_12_268) l_0_12_274)) (* (* 2.0 l_0_12_269) l_0_12_275))))
 (let ((?x29512 (- (- ?x29506 (* (* 2.0 l_0_12_270) l_0_12_276)) (* (* 2.0 l_0_12_271) l_0_12_277))))
 (let ((?x29518 (- (- ?x29512 (* (* 2.0 l_0_12_272) l_0_12_278)) (* (* 2.0 l_0_12_273) l_0_12_279))))
 (= (+ (- ?x29518 ?x27017) ?x27019) 0.0)))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x29599 (* ?x27437 l_0_12_88)))
 (let ((?x29597 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x29594 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x29591 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x29588 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x29585 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x29582 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x29579 (* ?x27434 l_0_12_60)))
 (let ((?x28429 (* (* 2.0 l_0_12_161) l_0_12_167)))
 (let ((?x28426 (* (* 2.0 l_0_12_160) l_0_12_166)))
 (let ((?x28421 (* (* 2.0 l_0_12_159) l_0_12_165)))
 (let ((?x28418 (* (* 2.0 l_0_12_158) l_0_12_164)))
 (let ((?x28415 (* (* 2.0 l_0_12_157) l_0_12_163)))
 (let ((?x28412 (* (* 2.0 l_0_12_156) l_0_12_162)))
 (let ((?x29541 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x29538 (* ?x28307 l_0_12_110)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x17773 (* ?x28304 l_0_12_109)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x17774 (* ?x15108 l_0_12_108)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x17953 (* ?x15119 l_0_12_107)))
 (let ((?x29539 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_106) ?x17953) ?x17774) ?x17773) ?x29538)))
 (let ((?x29542 (+ ?x29539 ?x29541)))
 (let ((?x29548 (- (- ?x29542 (* (* 2.0 l_0_12_128) l_0_12_134)) (* (* 2.0 l_0_12_129) l_0_12_135))))
 (let ((?x29554 (- (- ?x29548 (* (* 2.0 l_0_12_130) l_0_12_136)) (* (* 2.0 l_0_12_131) l_0_12_137))))
 (let ((?x29560 (- (- ?x29554 (* (* 2.0 l_0_12_132) l_0_12_138)) (* (* 2.0 l_0_12_133) l_0_12_139))))
 (let ((?x29568 (+ (- (- (- (- (- (- ?x29560 ?x28412) ?x28415) ?x28418) ?x28421) ?x28426) ?x28429) (* (* 2.0 l_0_12_184) l_0_12_190))))
 (let ((?x29572 (+ (+ ?x29568 (* (* 2.0 l_0_12_185) l_0_12_191)) (* (* 2.0 l_0_12_186) l_0_12_192))))
 (let ((?x29576 (+ (+ ?x29572 (* (* 2.0 l_0_12_187) l_0_12_193)) (* (* 2.0 l_0_12_188) l_0_12_194))))
 (let ((?x29586 (- (- (- (+ ?x29576 (* (* 2.0 l_0_12_189) l_0_12_195)) ?x29579) ?x29582) ?x29585)))
 (= (+ (- (- (- (- ?x29586 ?x29588) ?x29591) ?x29594) ?x29597) ?x29599) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x29648 (* ?x27437 l_0_12_91)))
 (let ((?x29597 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x29594 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x29591 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x29588 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x29585 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x29582 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x29640 (* ?x27434 l_0_12_63)))
 (let ((?x29541 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x29538 (* ?x28307 l_0_12_110)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x17773 (* ?x28304 l_0_12_109)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x17774 (* ?x15108 l_0_12_108)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x17953 (* ?x15119 l_0_12_107)))
 (let ((?x29638 (- (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_106) ?x17953) ?x17774) ?x17773) ?x29538)))
 (let ((?x29646 (+ (+ (+ (+ (+ (- (- ?x29638 ?x29541) ?x29640) ?x29582) ?x29585) ?x29588) ?x29591) ?x29594)))
 (= (+ (+ ?x29646 ?x29597) ?x29648) 0.0)))))))))))))))))))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18395 (* ?x27434 l_0_12_72)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x18394 (* ?x15144 l_0_12_85)))
 (= (- ?x18394 ?x18395) 0.0))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18399 (* ?x27434 l_0_12_78)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x18398 (* ?x27251 l_0_12_85)))
 (= (- ?x18398 ?x18399) 0.0))))))
(assert
 (let ((?x28852 (* l_0_12_87 l_0_12_87)))
 (let ((?x28850 (* l_0_12_86 l_0_12_86)))
 (let ((?x29683 (+ (- (* (- l_0_12_58) l_0_12_58) (* l_0_12_59 l_0_12_59)) ?x28850)))
 (= (+ ?x29683 ?x28852) 0.0)))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x28961 (* ?x27606 l_0_12_89)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x28959 (* ?x27603 l_0_12_88)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x28956 (* ?x27600 l_0_12_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_58) l_0_12_60) ?x28956) ?x28959) ?x28961) 0.0))))))))
(assert
 (let ((?x27606 (* 2.0 l_0_12_87)))
 (let ((?x29021 (* ?x27606 l_0_12_92)))
 (let ((?x27603 (* 2.0 l_0_12_86)))
 (let ((?x29018 (* ?x27603 l_0_12_91)))
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29014 (* ?x27600 l_0_12_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_58) l_0_12_63) ?x29014) ?x29018) ?x29021) 0.0))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29106 (* ?x27600 l_0_12_73)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29104 (* ?x27597 l_0_12_72)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x16577 (* ?x15119 l_0_12_87)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x16616 (* ?x15144 l_0_12_86)))
 (let ((?x16578 (+ ?x16616 ?x16577)))
 (= (- (- ?x16578 ?x29104) ?x29106) 0.0)))))))))))
(assert
 (let ((?x27600 (* 2.0 l_0_12_59)))
 (let ((?x29158 (* ?x27600 l_0_12_79)))
 (let ((?x27597 (* 2.0 l_0_12_58)))
 (let ((?x29156 (* ?x27597 l_0_12_78)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x16653 (* ?x27254 l_0_12_87)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x16696 (* ?x27251 l_0_12_86)))
 (let ((?x15795 (+ ?x16696 ?x16653)))
 (= (- (- ?x15795 ?x29156) ?x29158) 0.0)))))))))))
(assert
 (let ((?x29722 (* l_0_12_90 l_0_12_90)))
 (let ((?x29720 (* l_0_12_89 l_0_12_89)))
 (let ((?x29718 (* l_0_12_88 l_0_12_88)))
 (let ((?x29716 (* l_0_12_62 l_0_12_62)))
 (let ((?x29717 (- (- (* (- l_0_12_60) l_0_12_60) (* l_0_12_61 l_0_12_61)) ?x29716)))
 (= (+ (+ (+ ?x29717 ?x29718) ?x29720) ?x29722) 0.0)))))))
(assert
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x29749 (* ?x27831 l_0_12_93)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x29747 (* ?x27828 l_0_12_92)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x29745 (* ?x27825 l_0_12_91)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29743 (* ?x27822 l_0_12_65)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29741 (* ?x27819 l_0_12_64)))
 (let ((?x29748 (+ (+ (- (- (* (* (- 2.0) l_0_12_60) l_0_12_63) ?x29741) ?x29743) ?x29745) ?x29747)))
 (= (+ ?x29748 ?x29749) 0.0)))))))))))))
(assert
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29773 (* ?x27822 l_0_12_74)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29771 (* ?x27819 l_0_12_73)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29769 (* ?x27816 l_0_12_72)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x18524 (* ?x15108 l_0_12_90)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x18521 (* ?x15119 l_0_12_89)))
 (let ((?x29768 (+ (+ (* (* 2.0 l_0_12_100) l_0_12_88) ?x18521) ?x18524)))
 (= (- (- (- ?x29768 ?x29769) ?x29771) ?x29773) 0.0)))))))))))))
(assert
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29803 (* ?x27822 l_0_12_80)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29801 (* ?x27819 l_0_12_79)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29799 (* ?x27816 l_0_12_78)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x29797 (* ?x27257 l_0_12_90)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x29795 (* ?x27254 l_0_12_89)))
 (let ((?x29798 (+ (+ (* (* 2.0 l_0_12_106) l_0_12_88) ?x29795) ?x29797)))
 (= (- (- (- ?x29798 ?x29799) ?x29801) ?x29803) 0.0)))))))))))))
(assert
 (let ((?x29841 (* l_0_12_94 l_0_12_94)))
 (let ((?x29839 (* l_0_12_93 l_0_12_93)))
 (let ((?x29837 (* l_0_12_92 l_0_12_92)))
 (let ((?x29835 (* l_0_12_91 l_0_12_91)))
 (let ((?x29833 (* l_0_12_66 l_0_12_66)))
 (let ((?x29831 (* l_0_12_65 l_0_12_65)))
 (let ((?x29832 (- (- (* (- l_0_12_63) l_0_12_63) (* l_0_12_64 l_0_12_64)) ?x29831)))
 (= (+ (+ (+ (+ (- ?x29832 ?x29833) ?x29835) ?x29837) ?x29839) ?x29841) 0.0)))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29868 (* ?x28048 l_0_12_75)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29866 (* ?x28045 l_0_12_74)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29864 (* ?x28042 l_0_12_73)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29862 (* ?x28039 l_0_12_72)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x29860 (* ?x28304 l_0_12_94)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x29858 (* ?x15108 l_0_12_93)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x29856 (* ?x15119 l_0_12_92)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x18684 (* ?x15144 l_0_12_91)))
 (let ((?x29869 (- (- (- (- (+ (+ (+ ?x18684 ?x29856) ?x29858) ?x29860) ?x29862) ?x29864) ?x29866) ?x29868)))
 (= ?x29869 0.0)))))))))))))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29907 (* ?x28048 l_0_12_81)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29905 (* ?x28045 l_0_12_80)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29903 (* ?x28042 l_0_12_79)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29901 (* ?x28039 l_0_12_78)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x29899 (* ?x27260 l_0_12_94)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x29897 (* ?x27257 l_0_12_93)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x29895 (* ?x27254 l_0_12_92)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x29894 (* ?x27251 l_0_12_91)))
 (let ((?x29908 (- (- (- (- (+ (+ (+ ?x29894 ?x29895) ?x29897) ?x29899) ?x29901) ?x29903) ?x29905) ?x29907)))
 (= ?x29908 0.0)))))))))))))))))))
(assert
 (let ((?x29958 (* l_0_12_77 l_0_12_77)))
 (let ((?x29956 (* l_0_12_76 l_0_12_76)))
 (let ((?x29954 (* l_0_12_75 l_0_12_75)))
 (let ((?x29952 (* l_0_12_74 l_0_12_74)))
 (let ((?x29950 (* l_0_12_73 l_0_12_73)))
 (let ((?x29948 (* l_0_12_72 l_0_12_72)))
 (let ((?x29946 (* l_0_12_105 l_0_12_105)))
 (let ((?x29944 (* l_0_12_104 l_0_12_104)))
 (let ((?x29942 (* l_0_12_103 l_0_12_103)))
 (let ((?x29940 (* l_0_12_102 l_0_12_102)))
 (let ((?x29941 (+ (+ (* l_0_12_100 l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x29940)))
 (let ((?x29947 (+ (+ (+ ?x29941 ?x29942) ?x29944) ?x29946)))
 (= (- (- (- (- (- (- ?x29947 ?x29948) ?x29950) ?x29952) ?x29954) ?x29956) ?x29958) 0.0))))))))))))))
(assert
 (let ((?x29597 (* (* 2.0 l_0_12_77) l_0_12_83)))
 (let ((?x29594 (* (* 2.0 l_0_12_76) l_0_12_82)))
 (let ((?x29591 (* (* 2.0 l_0_12_75) l_0_12_81)))
 (let ((?x29588 (* (* 2.0 l_0_12_74) l_0_12_80)))
 (let ((?x29585 (* (* 2.0 l_0_12_73) l_0_12_79)))
 (let ((?x29582 (* (* 2.0 l_0_12_72) l_0_12_78)))
 (let ((?x29541 (* (* 2.0 l_0_12_105) l_0_12_111)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x29538 (* ?x28307 l_0_12_110)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x17773 (* ?x28304 l_0_12_109)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x17774 (* ?x15108 l_0_12_108)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x17953 (* ?x15119 l_0_12_107)))
 (let ((?x29539 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_106) ?x17953) ?x17774) ?x17773) ?x29538)))
 (let ((?x29542 (+ ?x29539 ?x29541)))
 (= (- (- (- (- (- (- ?x29542 ?x29582) ?x29585) ?x29588) ?x29591) ?x29594) ?x29597) 0.0)))))))))))))))))))
(assert
 (let ((?x30015 (* l_0_12_84 l_0_12_84)))
 (let ((?x30013 (* l_0_12_83 l_0_12_83)))
 (let ((?x30011 (* l_0_12_82 l_0_12_82)))
 (let ((?x30009 (* l_0_12_81 l_0_12_81)))
 (let ((?x30007 (* l_0_12_80 l_0_12_80)))
 (let ((?x30005 (* l_0_12_79 l_0_12_79)))
 (let ((?x30003 (* l_0_12_78 l_0_12_78)))
 (let ((?x30001 (* l_0_12_112 l_0_12_112)))
 (let ((?x29999 (* l_0_12_111 l_0_12_111)))
 (let ((?x29997 (* l_0_12_110 l_0_12_110)))
 (let ((?x29995 (* l_0_12_109 l_0_12_109)))
 (let ((?x29993 (* l_0_12_108 l_0_12_108)))
 (let ((?x29994 (+ (+ (* l_0_12_106 l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x29993)))
 (let ((?x30002 (+ (+ (+ (+ ?x29994 ?x29995) ?x29997) ?x29999) ?x30001)))
 (let ((?x30016 (- (- (- (- (- (- (- ?x30002 ?x30003) ?x30005) ?x30007) ?x30009) ?x30011) ?x30013) ?x30015)))
 (= ?x30016 0.0)))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x29599 (* ?x27437 l_0_12_88)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x29579 (* ?x27434 l_0_12_60)))
 (let ((?x30053 (* l_0_12_258 l_0_12_258)))
 (let ((?x30051 (* l_0_12_257 l_0_12_257)))
 (let ((?x30049 (* l_0_12_256 l_0_12_256)))
 (let ((?x30047 (* l_0_12_230 l_0_12_230)))
 (let ((?x30045 (* l_0_12_229 l_0_12_229)))
 (let ((?x30043 (* l_0_12_228 l_0_12_228)))
 (let ((?x30041 (* l_0_12_202 l_0_12_202)))
 (let ((?x30039 (* l_0_12_201 l_0_12_201)))
 (let ((?x30037 (* l_0_12_200 l_0_12_200)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27281 (* ?x27160 l_0_12_144)))
 (let ((?x30036 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_116) ?x27281) (* (* 2.0 l_0_12_169) l_0_12_172))))
 (let ((?x30050 (- (- (- (- (- (- (- ?x30036 ?x30037) ?x30039) ?x30041) ?x30043) ?x30045) ?x30047) ?x30049)))
 (= (+ (- (- (- ?x30050 ?x30051) ?x30053) ?x29579) ?x29599) 0.0)))))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x29648 (* ?x27437 l_0_12_91)))
 (let ((?x29599 (* ?x27437 l_0_12_88)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x29640 (* ?x27434 l_0_12_63)))
 (let ((?x29579 (* ?x27434 l_0_12_60)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27401 (* ?x27160 l_0_12_147)))
 (let ((?x30076 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_119) ?x27401) (* (* 2.0 l_0_12_169) l_0_12_175))))
 (let ((?x30082 (- (- ?x30076 (* (* 2.0 l_0_12_200) l_0_12_203)) (* (* 2.0 l_0_12_201) l_0_12_204))))
 (let ((?x30088 (- (- ?x30082 (* (* 2.0 l_0_12_202) l_0_12_205)) (* (* 2.0 l_0_12_228) l_0_12_231))))
 (let ((?x30094 (- (- ?x30088 (* (* 2.0 l_0_12_229) l_0_12_232)) (* (* 2.0 l_0_12_230) l_0_12_233))))
 (let ((?x30100 (- (- ?x30094 (* (* 2.0 l_0_12_256) l_0_12_259)) (* (* 2.0 l_0_12_257) l_0_12_260))))
 (let ((?x30106 (- (- (+ (- ?x30100 (* (* 2.0 l_0_12_258) l_0_12_261)) ?x29579) ?x29640) ?x29599)))
 (= (+ ?x30106 ?x29648) 0.0))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x27438 (* ?x27437 l_0_12_95)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x27435 (* ?x27434 l_0_12_67)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x14576 (* ?x27160 l_0_12_151)))
 (let ((?x30145 (+ (- (* (* (- 2.0) l_0_12_113) l_0_12_123) ?x14576) (* (* 2.0 l_0_12_169) l_0_12_179))))
 (let ((?x30149 (- (- ?x30145 (* (* 2.0 l_0_12_200) l_0_12_207)) (* (* 2.0 l_0_12_201) l_0_12_208))))
 (let ((?x30153 (- (- ?x30149 (* (* 2.0 l_0_12_202) l_0_12_209)) (* (* 2.0 l_0_12_228) l_0_12_235))))
 (let ((?x30157 (- (- ?x30153 (* (* 2.0 l_0_12_229) l_0_12_236)) (* (* 2.0 l_0_12_230) l_0_12_237))))
 (let ((?x30161 (- (- ?x30157 (* (* 2.0 l_0_12_256) l_0_12_263)) (* (* 2.0 l_0_12_257) l_0_12_264))))
 (= (+ (- (- ?x30161 (* (* 2.0 l_0_12_258) l_0_12_265)) ?x27435) ?x27438) 0.0)))))))))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18395 (* ?x27434 l_0_12_72)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27424 (* ?x27160 l_0_12_156)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x18394 (* ?x15144 l_0_12_85)))
 (let ((?x30196 (+ (- (- ?x18394 (* (* 2.0 l_0_12_113) l_0_12_128)) ?x27424) (* (* 2.0 l_0_12_169) l_0_12_184))))
 (let ((?x30200 (- (- ?x30196 (* (* 2.0 l_0_12_200) l_0_12_212)) (* (* 2.0 l_0_12_201) l_0_12_213))))
 (let ((?x30204 (- (- ?x30200 (* (* 2.0 l_0_12_202) l_0_12_214)) (* (* 2.0 l_0_12_228) l_0_12_240))))
 (let ((?x30208 (- (- ?x30204 (* (* 2.0 l_0_12_229) l_0_12_241)) (* (* 2.0 l_0_12_230) l_0_12_242))))
 (let ((?x30212 (- (- ?x30208 (* (* 2.0 l_0_12_256) l_0_12_268)) (* (* 2.0 l_0_12_257) l_0_12_269))))
 (= (- (- ?x30212 (* (* 2.0 l_0_12_258) l_0_12_270)) ?x18395) 0.0)))))))))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18399 (* ?x27434 l_0_12_78)))
 (let ((?x27160 (* 2.0 l_0_12_141)))
 (let ((?x27456 (* ?x27160 l_0_12_162)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x18398 (* ?x27251 l_0_12_85)))
 (let ((?x30257 (+ (- (- ?x18398 (* (* 2.0 l_0_12_113) l_0_12_134)) ?x27456) (* (* 2.0 l_0_12_169) l_0_12_190))))
 (let ((?x30261 (- (- ?x30257 (* (* 2.0 l_0_12_200) l_0_12_218)) (* (* 2.0 l_0_12_201) l_0_12_219))))
 (let ((?x30265 (- (- ?x30261 (* (* 2.0 l_0_12_202) l_0_12_220)) (* (* 2.0 l_0_12_228) l_0_12_246))))
 (let ((?x30269 (- (- ?x30265 (* (* 2.0 l_0_12_229) l_0_12_247)) (* (* 2.0 l_0_12_230) l_0_12_248))))
 (let ((?x30273 (- (- ?x30269 (* (* 2.0 l_0_12_256) l_0_12_274)) (* (* 2.0 l_0_12_257) l_0_12_275))))
 (= (- (- ?x30273 (* (* 2.0 l_0_12_258) l_0_12_276)) ?x18399) 0.0)))))))))))))
(assert
 (let ((?x29722 (* l_0_12_90 l_0_12_90)))
 (let ((?x29720 (* l_0_12_89 l_0_12_89)))
 (let ((?x29718 (* l_0_12_88 l_0_12_88)))
 (let ((?x29716 (* l_0_12_62 l_0_12_62)))
 (let ((?x29714 (* l_0_12_61 l_0_12_61)))
 (let ((?x29726 (* l_0_12_60 l_0_12_60)))
 (let ((?x16324 (* l_0_12_174 l_0_12_174)))
 (let ((?x16318 (* l_0_12_173 l_0_12_173)))
 (let ((?x16303 (* l_0_12_172 l_0_12_172)))
 (let ((?x27679 (* l_0_12_146 l_0_12_146)))
 (let ((?x27677 (* l_0_12_145 l_0_12_145)))
 (let ((?x27676 (* l_0_12_144 l_0_12_144)))
 (let ((?x30307 (* l_0_12_118 l_0_12_118)))
 (let ((?x30308 (- (- (* (- l_0_12_116) l_0_12_116) (* l_0_12_117 l_0_12_117)) ?x30307)))
 (let ((?x30315 (- (+ (+ (+ (- (- (- ?x30308 ?x27676) ?x27677) ?x27679) ?x16303) ?x16318) ?x16324) ?x29726)))
 (= (+ (+ (+ (- (- ?x30315 ?x29714) ?x29716) ?x29718) ?x29720) ?x29722) 0.0)))))))))))))))))
(assert
 (let ((?x29722 (* l_0_12_90 l_0_12_90)))
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x29749 (* ?x27831 l_0_12_93)))
 (let ((?x29720 (* l_0_12_89 l_0_12_89)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x29747 (* ?x27828 l_0_12_92)))
 (let ((?x29718 (* l_0_12_88 l_0_12_88)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x29745 (* ?x27825 l_0_12_91)))
 (let ((?x29716 (* l_0_12_62 l_0_12_62)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29743 (* ?x27822 l_0_12_65)))
 (let ((?x29714 (* l_0_12_61 l_0_12_61)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29741 (* ?x27819 l_0_12_64)))
 (let ((?x29726 (* l_0_12_60 l_0_12_60)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x30341 (* ?x27816 l_0_12_63)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27707 (* ?x27706 l_0_12_149)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x27704 (* ?x27703 l_0_12_148)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27702 (* ?x27701 l_0_12_147)))
 (let ((?x19900 (- (* (* (- 2.0) l_0_12_116) l_0_12_119) (* (* 2.0 l_0_12_117) l_0_12_120))))
 (let ((?x19915 (- (- (- (- ?x19900 (* (* 2.0 l_0_12_118) l_0_12_121)) ?x27702) ?x27704) ?x27707)))
 (let ((?x30338 (+ (+ ?x19915 (* (* 2.0 l_0_12_172) l_0_12_175)) (* (* 2.0 l_0_12_173) l_0_12_176))))
 (let ((?x30344 (- (+ (- (+ ?x30338 (* (* 2.0 l_0_12_174) l_0_12_177)) ?x30341) ?x29726) ?x29741)))
 (let ((?x30351 (- (+ (- (+ (+ (- (+ ?x30344 ?x29714) ?x29743) ?x29716) ?x29745) ?x29718) ?x29747) ?x29720)))
 (= (- (+ ?x30351 ?x29749) ?x29722) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x27832 (* ?x27831 l_0_12_97)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x27829 (* ?x27828 l_0_12_96)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x27826 (* ?x27825 l_0_12_95)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x27823 (* ?x27822 l_0_12_69)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x27820 (* ?x27819 l_0_12_68)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x27817 (* ?x27816 l_0_12_67)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27767 (* ?x27706 l_0_12_153)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x27765 (* ?x27703 l_0_12_152)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27763 (* ?x27701 l_0_12_151)))
 (let ((?x19997 (- (* (* (- 2.0) l_0_12_116) l_0_12_123) (* (* 2.0 l_0_12_117) l_0_12_124))))
 (let ((?x30380 (- (- (- (- ?x19997 (* (* 2.0 l_0_12_118) l_0_12_125)) ?x27763) ?x27765) ?x27767)))
 (let ((?x30384 (+ (+ ?x30380 (* (* 2.0 l_0_12_172) l_0_12_179)) (* (* 2.0 l_0_12_173) l_0_12_180))))
 (let ((?x30389 (- (- (- (+ ?x30384 (* (* 2.0 l_0_12_174) l_0_12_181)) ?x27817) ?x27820) ?x27823)))
 (= (+ (+ (+ ?x30389 ?x27826) ?x27829) ?x27832) 0.0))))))))))))))))))))))))
(assert
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29773 (* ?x27822 l_0_12_74)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29771 (* ?x27819 l_0_12_73)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29769 (* ?x27816 l_0_12_72)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27789 (* ?x27706 l_0_12_158)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x14701 (* ?x27703 l_0_12_157)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27787 (* ?x27701 l_0_12_156)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x18524 (* ?x15108 l_0_12_90)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x18521 (* ?x15119 l_0_12_89)))
 (let ((?x29768 (+ (+ (* (* 2.0 l_0_12_100) l_0_12_88) ?x18521) ?x18524)))
 (let ((?x30417 (- (- ?x29768 (* (* 2.0 l_0_12_116) l_0_12_128)) (* (* 2.0 l_0_12_117) l_0_12_129))))
 (let ((?x30422 (- (- (- (- ?x30417 (* (* 2.0 l_0_12_118) l_0_12_130)) ?x27787) ?x14701) ?x27789)))
 (let ((?x30426 (+ (+ ?x30422 (* (* 2.0 l_0_12_172) l_0_12_184)) (* (* 2.0 l_0_12_173) l_0_12_185))))
 (let ((?x30431 (- (- (- (+ ?x30426 (* (* 2.0 l_0_12_174) l_0_12_186)) ?x29769) ?x29771) ?x29773)))
 (= ?x30431 0.0)))))))))))))))))))))))
(assert
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29803 (* ?x27822 l_0_12_80)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29801 (* ?x27819 l_0_12_79)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29799 (* ?x27816 l_0_12_78)))
 (let ((?x27706 (* 2.0 l_0_12_146)))
 (let ((?x27870 (* ?x27706 l_0_12_164)))
 (let ((?x27703 (* 2.0 l_0_12_145)))
 (let ((?x14790 (* ?x27703 l_0_12_163)))
 (let ((?x27701 (* 2.0 l_0_12_144)))
 (let ((?x27867 (* ?x27701 l_0_12_162)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x29797 (* ?x27257 l_0_12_90)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x29795 (* ?x27254 l_0_12_89)))
 (let ((?x29798 (+ (+ (* (* 2.0 l_0_12_106) l_0_12_88) ?x29795) ?x29797)))
 (let ((?x30445 (- (- ?x29798 (* (* 2.0 l_0_12_116) l_0_12_134)) (* (* 2.0 l_0_12_117) l_0_12_135))))
 (let ((?x30450 (- (- (- (- ?x30445 (* (* 2.0 l_0_12_118) l_0_12_136)) ?x27867) ?x14790) ?x27870)))
 (let ((?x30454 (+ (+ ?x30450 (* (* 2.0 l_0_12_172) l_0_12_190)) (* (* 2.0 l_0_12_173) l_0_12_191))))
 (let ((?x30459 (- (- (- (+ ?x30454 (* (* 2.0 l_0_12_174) l_0_12_192)) ?x29799) ?x29801) ?x29803)))
 (= ?x30459 0.0)))))))))))))))))))))))
(assert
 (let ((?x29841 (* l_0_12_94 l_0_12_94)))
 (let ((?x29839 (* l_0_12_93 l_0_12_93)))
 (let ((?x29837 (* l_0_12_92 l_0_12_92)))
 (let ((?x29835 (* l_0_12_91 l_0_12_91)))
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x29749 (* ?x27831 l_0_12_93)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x29747 (* ?x27828 l_0_12_92)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x29745 (* ?x27825 l_0_12_91)))
 (let ((?x29833 (* l_0_12_66 l_0_12_66)))
 (let ((?x29831 (* l_0_12_65 l_0_12_65)))
 (let ((?x29829 (* l_0_12_64 l_0_12_64)))
 (let ((?x18660 (* l_0_12_63 l_0_12_63)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29743 (* ?x27822 l_0_12_65)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29741 (* ?x27819 l_0_12_64)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x30341 (* ?x27816 l_0_12_63)))
 (let ((?x16820 (* l_0_12_178 l_0_12_178)))
 (let ((?x16771 (* l_0_12_177 l_0_12_177)))
 (let ((?x29218 (* l_0_12_176 l_0_12_176)))
 (let ((?x16782 (* l_0_12_175 l_0_12_175)))
 (let ((?x27930 (* l_0_12_150 l_0_12_150)))
 (let ((?x27928 (* l_0_12_149 l_0_12_149)))
 (let ((?x27926 (* l_0_12_148 l_0_12_148)))
 (let ((?x27916 (* l_0_12_147 l_0_12_147)))
 (let ((?x20152 (* l_0_12_122 l_0_12_122)))
 (let ((?x20139 (* l_0_12_121 l_0_12_121)))
 (let ((?x20155 (- (- (* (- l_0_12_119) l_0_12_119) (* l_0_12_120 l_0_12_120)) ?x20139)))
 (let ((?x30471 (+ (+ (- (- (- (- (- ?x20155 ?x20152) ?x27916) ?x27926) ?x27928) ?x27930) ?x16782) ?x29218)))
 (let ((?x30478 (- (- (+ (+ (+ (+ (+ ?x30471 ?x16771) ?x16820) ?x30341) ?x29741) ?x29743) ?x18660) ?x29829)))
 (let ((?x30485 (+ (+ (- (- (- (- (- ?x30478 ?x29831) ?x29833) ?x29745) ?x29747) ?x29749) ?x29835) ?x29837)))
 (= (+ (+ ?x30485 ?x29839) ?x29841) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28061 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x28058 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x28055 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x28052 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x27831 (* 2.0 l_0_12_90)))
 (let ((?x27832 (* ?x27831 l_0_12_97)))
 (let ((?x27828 (* 2.0 l_0_12_89)))
 (let ((?x27829 (* ?x27828 l_0_12_96)))
 (let ((?x27825 (* 2.0 l_0_12_88)))
 (let ((?x27826 (* ?x27825 l_0_12_95)))
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x28049 (* ?x28048 l_0_12_70)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x28046 (* ?x28045 l_0_12_69)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x28043 (* ?x28042 l_0_12_68)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x28040 (* ?x28039 l_0_12_67)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x27823 (* ?x27822 l_0_12_69)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x27820 (* ?x27819 l_0_12_68)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x27817 (* ?x27816 l_0_12_67)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x27973 (* ?x27972 l_0_12_154)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x27970 (* ?x27969 l_0_12_153)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x27967 (* ?x27966 l_0_12_152)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x27964 (* ?x27963 l_0_12_151)))
 (let ((?x30508 (- (* (* (- 2.0) l_0_12_119) l_0_12_123) (* (* 2.0 l_0_12_120) l_0_12_124))))
 (let ((?x30514 (- (- ?x30508 (* (* 2.0 l_0_12_121) l_0_12_125)) (* (* 2.0 l_0_12_122) l_0_12_126))))
 (let ((?x30520 (+ (- (- (- (- ?x30514 ?x27964) ?x27967) ?x27970) ?x27973) (* (* 2.0 l_0_12_175) l_0_12_179))))
 (let ((?x30524 (+ (+ ?x30520 (* (* 2.0 l_0_12_176) l_0_12_180)) (* (* 2.0 l_0_12_177) l_0_12_181))))
 (let ((?x30529 (+ (+ (+ (+ ?x30524 (* (* 2.0 l_0_12_178) l_0_12_182)) ?x27817) ?x27820) ?x27823)))
 (let ((?x30536 (- (- (- (- (- (- (- ?x30529 ?x28040) ?x28043) ?x28046) ?x28049) ?x27826) ?x27829) ?x27832)))
 (= (+ (+ (+ (+ ?x30536 ?x28052) ?x28055) ?x28058) ?x28061) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29868 (* ?x28048 l_0_12_75)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29866 (* ?x28045 l_0_12_74)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29864 (* ?x28042 l_0_12_73)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29862 (* ?x28039 l_0_12_72)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29773 (* ?x27822 l_0_12_74)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29771 (* ?x27819 l_0_12_73)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29769 (* ?x27816 l_0_12_72)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x28012 (* ?x27972 l_0_12_159)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x28008 (* ?x27969 l_0_12_158)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x28004 (* ?x27966 l_0_12_157)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x28000 (* ?x27963 l_0_12_156)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x29860 (* ?x28304 l_0_12_94)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x29858 (* ?x15108 l_0_12_93)))
 (let ((?x18524 (* ?x15108 l_0_12_90)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x29856 (* ?x15119 l_0_12_92)))
 (let ((?x18521 (* ?x15119 l_0_12_89)))
 (let ((?x15144 (* 2.0 l_0_12_100)))
 (let ((?x18684 (* ?x15144 l_0_12_91)))
 (let ((?x20356 (- (+ (- (+ (* (* (- 2.0) l_0_12_100) l_0_12_88) ?x18684) ?x18521) ?x29856) ?x18524)))
 (let ((?x30559 (- (- (+ (+ ?x20356 ?x29858) ?x29860) (* (* 2.0 l_0_12_119) l_0_12_128)) (* (* 2.0 l_0_12_120) l_0_12_129))))
 (let ((?x30563 (- (- ?x30559 (* (* 2.0 l_0_12_121) l_0_12_130)) (* (* 2.0 l_0_12_122) l_0_12_131))))
 (let ((?x30569 (+ (- (- (- (- ?x30563 ?x28000) ?x28004) ?x28008) ?x28012) (* (* 2.0 l_0_12_175) l_0_12_184))))
 (let ((?x30573 (+ (+ ?x30569 (* (* 2.0 l_0_12_176) l_0_12_185)) (* (* 2.0 l_0_12_177) l_0_12_186))))
 (let ((?x30578 (+ (+ (+ (+ ?x30573 (* (* 2.0 l_0_12_178) l_0_12_187)) ?x29769) ?x29771) ?x29773)))
 (= (- (- (- (- ?x30578 ?x29862) ?x29864) ?x29866) ?x29868) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29907 (* ?x28048 l_0_12_81)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29905 (* ?x28045 l_0_12_80)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29903 (* ?x28042 l_0_12_79)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29901 (* ?x28039 l_0_12_78)))
 (let ((?x27822 (* 2.0 l_0_12_62)))
 (let ((?x29803 (* ?x27822 l_0_12_80)))
 (let ((?x27819 (* 2.0 l_0_12_61)))
 (let ((?x29801 (* ?x27819 l_0_12_79)))
 (let ((?x27816 (* 2.0 l_0_12_60)))
 (let ((?x29799 (* ?x27816 l_0_12_78)))
 (let ((?x27972 (* 2.0 l_0_12_150)))
 (let ((?x28121 (* ?x27972 l_0_12_165)))
 (let ((?x27969 (* 2.0 l_0_12_149)))
 (let ((?x28119 (* ?x27969 l_0_12_164)))
 (let ((?x27966 (* 2.0 l_0_12_148)))
 (let ((?x14878 (* ?x27966 l_0_12_163)))
 (let ((?x27963 (* 2.0 l_0_12_147)))
 (let ((?x14894 (* ?x27963 l_0_12_162)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x29899 (* ?x27260 l_0_12_94)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x29897 (* ?x27257 l_0_12_93)))
 (let ((?x29797 (* ?x27257 l_0_12_90)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x29895 (* ?x27254 l_0_12_92)))
 (let ((?x29795 (* ?x27254 l_0_12_89)))
 (let ((?x27251 (* 2.0 l_0_12_106)))
 (let ((?x29894 (* ?x27251 l_0_12_91)))
 (let ((?x20479 (- (+ (- (+ (* (* (- 2.0) l_0_12_106) l_0_12_88) ?x29894) ?x29795) ?x29895) ?x29797)))
 (let ((?x30604 (- (- (+ (+ ?x20479 ?x29897) ?x29899) (* (* 2.0 l_0_12_119) l_0_12_134)) (* (* 2.0 l_0_12_120) l_0_12_135))))
 (let ((?x30608 (- (- ?x30604 (* (* 2.0 l_0_12_121) l_0_12_136)) (* (* 2.0 l_0_12_122) l_0_12_137))))
 (let ((?x30614 (+ (- (- (- (- ?x30608 ?x14894) ?x14878) ?x28119) ?x28121) (* (* 2.0 l_0_12_175) l_0_12_190))))
 (let ((?x30618 (+ (+ ?x30614 (* (* 2.0 l_0_12_176) l_0_12_191)) (* (* 2.0 l_0_12_177) l_0_12_192))))
 (let ((?x30623 (+ (+ (+ (+ ?x30618 (* (* 2.0 l_0_12_178) l_0_12_193)) ?x29799) ?x29801) ?x29803)))
 (= (- (- (- (- ?x30623 ?x29901) ?x29903) ?x29905) ?x29907) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x28275 (* l_0_12_99 l_0_12_99)))
 (let ((?x28273 (* l_0_12_98 l_0_12_98)))
 (let ((?x28271 (* l_0_12_97 l_0_12_97)))
 (let ((?x28269 (* l_0_12_96 l_0_12_96)))
 (let ((?x28267 (* l_0_12_95 l_0_12_95)))
 (let ((?x28265 (* l_0_12_71 l_0_12_71)))
 (let ((?x28263 (* l_0_12_70 l_0_12_70)))
 (let ((?x28261 (* l_0_12_69 l_0_12_69)))
 (let ((?x28259 (* l_0_12_68 l_0_12_68)))
 (let ((?x28257 (* l_0_12_67 l_0_12_67)))
 (let ((?x17247 (* l_0_12_183 l_0_12_183)))
 (let ((?x17241 (* l_0_12_182 l_0_12_182)))
 (let ((?x17235 (* l_0_12_181 l_0_12_181)))
 (let ((?x17229 (* l_0_12_180 l_0_12_180)))
 (let ((?x17225 (* l_0_12_179 l_0_12_179)))
 (let ((?x28192 (* l_0_12_155 l_0_12_155)))
 (let ((?x28190 (* l_0_12_154 l_0_12_154)))
 (let ((?x28188 (* l_0_12_153 l_0_12_153)))
 (let ((?x28186 (* l_0_12_152 l_0_12_152)))
 (let ((?x28184 (* l_0_12_151 l_0_12_151)))
 (let ((?x30648 (* l_0_12_127 l_0_12_127)))
 (let ((?x30646 (* l_0_12_126 l_0_12_126)))
 (let ((?x20589 (* l_0_12_125 l_0_12_125)))
 (let ((?x30645 (- (- (* (- l_0_12_123) l_0_12_123) (* l_0_12_124 l_0_12_124)) ?x20589)))
 (let ((?x30654 (- (- (- (- (- (- (- ?x30645 ?x30646) ?x30648) ?x28184) ?x28186) ?x28188) ?x28190) ?x28192)))
 (let ((?x30661 (- (- (+ (+ (+ (+ (+ ?x30654 ?x17225) ?x17229) ?x17235) ?x17241) ?x17247) ?x28257) ?x28259)))
 (let ((?x30668 (+ (+ (+ (+ (- (- (- ?x30661 ?x28261) ?x28263) ?x28265) ?x28267) ?x28269) ?x28271) ?x28273)))
 (= (+ ?x30668 ?x28275) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x28354 (* ?x27327 l_0_12_76)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x28352 (* ?x27324 l_0_12_75)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x28350 (* ?x27321 l_0_12_74)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x28348 (* ?x27318 l_0_12_73)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x28346 (* ?x27315 l_0_12_72)))
 (let ((?x27295 (* 2.0 l_0_12_155)))
 (let ((?x28245 (* ?x27295 l_0_12_160)))
 (let ((?x27292 (* 2.0 l_0_12_154)))
 (let ((?x28243 (* ?x27292 l_0_12_159)))
 (let ((?x27289 (* 2.0 l_0_12_153)))
 (let ((?x28241 (* ?x27289 l_0_12_158)))
 (let ((?x27286 (* 2.0 l_0_12_152)))
 (let ((?x28239 (* ?x27286 l_0_12_157)))
 (let ((?x27283 (* 2.0 l_0_12_151)))
 (let ((?x28237 (* ?x27283 l_0_12_156)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x28308 (* ?x28307 l_0_12_99)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x28305 (* ?x28304 l_0_12_98)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x28302 (* ?x15108 l_0_12_97)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x15120 (* ?x15119 l_0_12_96)))
 (let ((?x28309 (+ (+ (+ (+ (* (* 2.0 l_0_12_100) l_0_12_95) ?x15120) ?x28302) ?x28305) ?x28308)))
 (let ((?x18883 (- (- ?x28309 (* (* 2.0 l_0_12_123) l_0_12_128)) (* (* 2.0 l_0_12_124) l_0_12_129))))
 (let ((?x20684 (- (- ?x18883 (* (* 2.0 l_0_12_125) l_0_12_130)) (* (* 2.0 l_0_12_126) l_0_12_131))))
 (let ((?x20646 (- (- (- (- ?x20684 (* (* 2.0 l_0_12_127) l_0_12_132)) ?x28237) ?x28239) ?x28241)))
 (let ((?x20699 (+ (+ (- (- ?x20646 ?x28243) ?x28245) (* (* 2.0 l_0_12_179) l_0_12_184)) (* (* 2.0 l_0_12_180) l_0_12_185))))
 (let ((?x30684 (+ (+ ?x20699 (* (* 2.0 l_0_12_181) l_0_12_186)) (* (* 2.0 l_0_12_182) l_0_12_187))))
 (let ((?x30689 (- (- (- (+ ?x30684 (* (* 2.0 l_0_12_183) l_0_12_188)) ?x28346) ?x28348) ?x28350)))
 (= (- (- ?x30689 ?x28352) ?x28354) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29958 (* l_0_12_77 l_0_12_77)))
 (let ((?x29956 (* l_0_12_76 l_0_12_76)))
 (let ((?x29954 (* l_0_12_75 l_0_12_75)))
 (let ((?x29952 (* l_0_12_74 l_0_12_74)))
 (let ((?x29950 (* l_0_12_73 l_0_12_73)))
 (let ((?x29948 (* l_0_12_72 l_0_12_72)))
 (let ((?x17384 (* l_0_12_189 l_0_12_189)))
 (let ((?x17382 (* l_0_12_188 l_0_12_188)))
 (let ((?x29385 (* l_0_12_187 l_0_12_187)))
 (let ((?x17368 (* l_0_12_186 l_0_12_186)))
 (let ((?x29377 (* l_0_12_185 l_0_12_185)))
 (let ((?x17364 (* l_0_12_184 l_0_12_184)))
 (let ((?x28322 (* l_0_12_161 l_0_12_161)))
 (let ((?x28320 (* l_0_12_160 l_0_12_160)))
 (let ((?x28316 (* l_0_12_159 l_0_12_159)))
 (let ((?x28314 (* l_0_12_158 l_0_12_158)))
 (let ((?x28312 (* l_0_12_157 l_0_12_157)))
 (let ((?x28310 (* l_0_12_156 l_0_12_156)))
 (let ((?x30719 (* l_0_12_133 l_0_12_133)))
 (let ((?x30717 (* l_0_12_132 l_0_12_132)))
 (let ((?x30715 (* l_0_12_131 l_0_12_131)))
 (let ((?x30713 (* l_0_12_130 l_0_12_130)))
 (let ((?x30711 (* l_0_12_129 l_0_12_129)))
 (let ((?x30709 (* l_0_12_128 l_0_12_128)))
 (let ((?x29946 (* l_0_12_105 l_0_12_105)))
 (let ((?x29944 (* l_0_12_104 l_0_12_104)))
 (let ((?x29942 (* l_0_12_103 l_0_12_103)))
 (let ((?x29940 (* l_0_12_102 l_0_12_102)))
 (let ((?x29941 (+ (+ (* l_0_12_100 l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x29940)))
 (let ((?x29947 (+ (+ (+ ?x29941 ?x29942) ?x29944) ?x29946)))
 (let ((?x30721 (- (- (- (- (- (- (- ?x29947 ?x30709) ?x30711) ?x30713) ?x30715) ?x30717) ?x30719) ?x28310)))
 (let ((?x30728 (+ (+ (- (- (- (- (- ?x30721 ?x28312) ?x28314) ?x28316) ?x28320) ?x28322) ?x17364) ?x29377)))
 (let ((?x30735 (- (- (- (+ (+ (+ (+ ?x30728 ?x17368) ?x29385) ?x17382) ?x17384) ?x29948) ?x29950) ?x29952)))
 (= (- (- (- ?x30735 ?x29954) ?x29956) ?x29958) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30015 (* l_0_12_84 l_0_12_84)))
 (let ((?x30013 (* l_0_12_83 l_0_12_83)))
 (let ((?x30011 (* l_0_12_82 l_0_12_82)))
 (let ((?x30009 (* l_0_12_81 l_0_12_81)))
 (let ((?x30007 (* l_0_12_80 l_0_12_80)))
 (let ((?x30005 (* l_0_12_79 l_0_12_79)))
 (let ((?x30003 (* l_0_12_78 l_0_12_78)))
 (let ((?x17641 (* l_0_12_196 l_0_12_196)))
 (let ((?x17635 (* l_0_12_195 l_0_12_195)))
 (let ((?x17629 (* l_0_12_194 l_0_12_194)))
 (let ((?x17624 (* l_0_12_193 l_0_12_193)))
 (let ((?x17592 (* l_0_12_192 l_0_12_192)))
 (let ((?x29463 (* l_0_12_191 l_0_12_191)))
 (let ((?x29461 (* l_0_12_190 l_0_12_190)))
 (let ((?x28546 (* l_0_12_168 l_0_12_168)))
 (let ((?x28544 (* l_0_12_167 l_0_12_167)))
 (let ((?x28542 (* l_0_12_166 l_0_12_166)))
 (let ((?x28540 (* l_0_12_165 l_0_12_165)))
 (let ((?x28538 (* l_0_12_164 l_0_12_164)))
 (let ((?x28536 (* l_0_12_163 l_0_12_163)))
 (let ((?x28535 (* l_0_12_162 l_0_12_162)))
 (let ((?x20914 (* l_0_12_140 l_0_12_140)))
 (let ((?x20920 (* l_0_12_139 l_0_12_139)))
 (let ((?x20926 (* l_0_12_138 l_0_12_138)))
 (let ((?x3321 (* l_0_12_137 l_0_12_137)))
 (let ((?x3335 (* l_0_12_136 l_0_12_136)))
 (let ((?x3350 (* l_0_12_135 l_0_12_135)))
 (let ((?x20946 (* l_0_12_134 l_0_12_134)))
 (let ((?x30001 (* l_0_12_112 l_0_12_112)))
 (let ((?x29999 (* l_0_12_111 l_0_12_111)))
 (let ((?x29997 (* l_0_12_110 l_0_12_110)))
 (let ((?x29995 (* l_0_12_109 l_0_12_109)))
 (let ((?x29993 (* l_0_12_108 l_0_12_108)))
 (let ((?x29994 (+ (+ (* l_0_12_106 l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x29993)))
 (let ((?x30002 (+ (+ (+ (+ ?x29994 ?x29995) ?x29997) ?x29999) ?x30001)))
 (let ((?x20915 (- (- (- (- (- (- (- ?x30002 ?x20946) ?x3350) ?x3335) ?x3321) ?x20926) ?x20920) ?x20914)))
 (let ((?x30745 (- (- (- (- (- (- (- ?x20915 ?x28535) ?x28536) ?x28538) ?x28540) ?x28542) ?x28544) ?x28546)))
 (let ((?x30752 (+ (+ (+ (+ (+ (+ (+ ?x30745 ?x29461) ?x29463) ?x17592) ?x17624) ?x17629) ?x17635) ?x17641)))
 (let ((?x30759 (- (- (- (- (- (- (- ?x30752 ?x30003) ?x30005) ?x30007) ?x30009) ?x30011) ?x30013) ?x30015)))
 (= ?x30759 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27019 (* l_0_12_85 l_0_12_85)))
 (let ((?x27017 (* l_0_12_57 l_0_12_57)))
 (let ((?x30787 (- (* (* (- 2.0) l_0_12_197) l_0_12_203) (* (* 2.0 l_0_12_225) l_0_12_231))))
 (= (- (+ (- ?x30787 (* (* 2.0 l_0_12_253) l_0_12_259)) ?x27017) ?x27019) 0.0)))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x29648 (* ?x27437 l_0_12_91)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x29640 (* ?x27434 l_0_12_63)))
 (let ((?x30829 (* l_0_12_262 l_0_12_262)))
 (let ((?x30827 (* l_0_12_261 l_0_12_261)))
 (let ((?x30825 (* l_0_12_260 l_0_12_260)))
 (let ((?x30823 (* l_0_12_259 l_0_12_259)))
 (let ((?x30821 (* l_0_12_234 l_0_12_234)))
 (let ((?x30819 (* l_0_12_233 l_0_12_233)))
 (let ((?x30817 (* l_0_12_232 l_0_12_232)))
 (let ((?x30815 (* l_0_12_231 l_0_12_231)))
 (let ((?x30813 (* l_0_12_206 l_0_12_206)))
 (let ((?x30811 (* l_0_12_205 l_0_12_205)))
 (let ((?x30812 (- (- (* (- l_0_12_203) l_0_12_203) (* l_0_12_204 l_0_12_204)) ?x30811)))
 (let ((?x30826 (- (- (- (- (- (- (- ?x30812 ?x30813) ?x30815) ?x30817) ?x30819) ?x30821) ?x30823) ?x30825)))
 (= (- (+ (- (- ?x30826 ?x30827) ?x30829) ?x29640) ?x29648) 0.0))))))))))))))))))
(assert
 (let ((?x27437 (* 2.0 l_0_12_85)))
 (let ((?x27438 (* ?x27437 l_0_12_95)))
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x27435 (* ?x27434 l_0_12_67)))
 (let ((?x30862 (- (* (* (- 2.0) l_0_12_203) l_0_12_207) (* (* 2.0 l_0_12_204) l_0_12_208))))
 (let ((?x30868 (- (- ?x30862 (* (* 2.0 l_0_12_205) l_0_12_209)) (* (* 2.0 l_0_12_206) l_0_12_210))))
 (let ((?x30874 (- (- ?x30868 (* (* 2.0 l_0_12_231) l_0_12_235)) (* (* 2.0 l_0_12_232) l_0_12_236))))
 (let ((?x30880 (- (- ?x30874 (* (* 2.0 l_0_12_233) l_0_12_237)) (* (* 2.0 l_0_12_234) l_0_12_238))))
 (let ((?x30886 (- (- ?x30880 (* (* 2.0 l_0_12_259) l_0_12_263)) (* (* 2.0 l_0_12_260) l_0_12_264))))
 (let ((?x30892 (- (- ?x30886 (* (* 2.0 l_0_12_261) l_0_12_265)) (* (* 2.0 l_0_12_262) l_0_12_266))))
 (= (- (+ ?x30892 ?x27435) ?x27438) 0.0))))))))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18395 (* ?x27434 l_0_12_72)))
 (let ((?x30943 (- (* (* (- 2.0) l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_203) l_0_12_212))))
 (let ((?x30947 (- (- ?x30943 (* (* 2.0 l_0_12_204) l_0_12_213)) (* (* 2.0 l_0_12_205) l_0_12_214))))
 (let ((?x30951 (- (- ?x30947 (* (* 2.0 l_0_12_206) l_0_12_215)) (* (* 2.0 l_0_12_231) l_0_12_240))))
 (let ((?x30955 (- (- ?x30951 (* (* 2.0 l_0_12_232) l_0_12_241)) (* (* 2.0 l_0_12_233) l_0_12_242))))
 (let ((?x30959 (- (- ?x30955 (* (* 2.0 l_0_12_234) l_0_12_243)) (* (* 2.0 l_0_12_259) l_0_12_268))))
 (let ((?x30963 (- (- ?x30959 (* (* 2.0 l_0_12_260) l_0_12_269)) (* (* 2.0 l_0_12_261) l_0_12_270))))
 (= (+ (- ?x30963 (* (* 2.0 l_0_12_262) l_0_12_271)) ?x18395) 0.0))))))))))
(assert
 (let ((?x27434 (* 2.0 l_0_12_57)))
 (let ((?x18399 (* ?x27434 l_0_12_78)))
 (let ((?x4113 (- (* (* (- 2.0) l_0_12_106) l_0_12_85) (* (* 2.0 l_0_12_203) l_0_12_218))))
 (let ((?x31003 (- (- ?x4113 (* (* 2.0 l_0_12_204) l_0_12_219)) (* (* 2.0 l_0_12_205) l_0_12_220))))
 (let ((?x31007 (- (- ?x31003 (* (* 2.0 l_0_12_206) l_0_12_221)) (* (* 2.0 l_0_12_231) l_0_12_246))))
 (let ((?x31011 (- (- ?x31007 (* (* 2.0 l_0_12_232) l_0_12_247)) (* (* 2.0 l_0_12_233) l_0_12_248))))
 (let ((?x31015 (- (- ?x31011 (* (* 2.0 l_0_12_234) l_0_12_249)) (* (* 2.0 l_0_12_259) l_0_12_274))))
 (let ((?x31019 (- (- ?x31015 (* (* 2.0 l_0_12_260) l_0_12_275)) (* (* 2.0 l_0_12_261) l_0_12_276))))
 (= (+ (- ?x31019 (* (* 2.0 l_0_12_262) l_0_12_277)) ?x18399) 0.0))))))))))
(assert
 (let ((?x29841 (* l_0_12_94 l_0_12_94)))
 (let ((?x29839 (* l_0_12_93 l_0_12_93)))
 (let ((?x29837 (* l_0_12_92 l_0_12_92)))
 (let ((?x29835 (* l_0_12_91 l_0_12_91)))
 (let ((?x29833 (* l_0_12_66 l_0_12_66)))
 (let ((?x29831 (* l_0_12_65 l_0_12_65)))
 (let ((?x31059 (+ (+ (+ (* l_0_12_63 l_0_12_63) (* l_0_12_64 l_0_12_64)) ?x29831) ?x29833)))
 (= (- (- (- (- ?x31059 ?x29835) ?x29837) ?x29839) ?x29841) 0.0)))))))))
(assert
 (let ((?x28061 (* (* 2.0 l_0_12_94) l_0_12_98)))
 (let ((?x28058 (* (* 2.0 l_0_12_93) l_0_12_97)))
 (let ((?x28055 (* (* 2.0 l_0_12_92) l_0_12_96)))
 (let ((?x28052 (* (* 2.0 l_0_12_91) l_0_12_95)))
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x28049 (* ?x28048 l_0_12_70)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x28046 (* ?x28045 l_0_12_69)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x28043 (* ?x28042 l_0_12_68)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x28040 (* ?x28039 l_0_12_67)))
 (let ((?x31079 (- (- (- (- (+ (+ (+ ?x28040 ?x28043) ?x28046) ?x28049) ?x28052) ?x28055) ?x28058) ?x28061)))
 (= ?x31079 0.0)))))))))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29868 (* ?x28048 l_0_12_75)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29866 (* ?x28045 l_0_12_74)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29864 (* ?x28042 l_0_12_73)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29862 (* ?x28039 l_0_12_72)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x29860 (* ?x28304 l_0_12_94)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x29858 (* ?x15108 l_0_12_93)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x29856 (* ?x15119 l_0_12_92)))
 (let ((?x31093 (+ (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_91) ?x29856) ?x29858) ?x29860) ?x29862)))
 (= (+ (+ (+ ?x31093 ?x29864) ?x29866) ?x29868) 0.0)))))))))))))))))
(assert
 (let ((?x28048 (* 2.0 l_0_12_66)))
 (let ((?x29907 (* ?x28048 l_0_12_81)))
 (let ((?x28045 (* 2.0 l_0_12_65)))
 (let ((?x29905 (* ?x28045 l_0_12_80)))
 (let ((?x28042 (* 2.0 l_0_12_64)))
 (let ((?x29903 (* ?x28042 l_0_12_79)))
 (let ((?x28039 (* 2.0 l_0_12_63)))
 (let ((?x29901 (* ?x28039 l_0_12_78)))
 (let ((?x27260 (* 2.0 l_0_12_109)))
 (let ((?x29899 (* ?x27260 l_0_12_94)))
 (let ((?x27257 (* 2.0 l_0_12_108)))
 (let ((?x29897 (* ?x27257 l_0_12_93)))
 (let ((?x27254 (* 2.0 l_0_12_107)))
 (let ((?x29895 (* ?x27254 l_0_12_92)))
 (let ((?x31104 (+ (- (- (- (* (* (- 2.0) l_0_12_106) l_0_12_91) ?x29895) ?x29897) ?x29899) ?x29901)))
 (= (+ (+ (+ ?x31104 ?x29903) ?x29905) ?x29907) 0.0)))))))))))))))))
(assert
 (let ((?x28275 (* l_0_12_99 l_0_12_99)))
 (let ((?x28273 (* l_0_12_98 l_0_12_98)))
 (let ((?x28271 (* l_0_12_97 l_0_12_97)))
 (let ((?x28269 (* l_0_12_96 l_0_12_96)))
 (let ((?x28267 (* l_0_12_95 l_0_12_95)))
 (let ((?x28265 (* l_0_12_71 l_0_12_71)))
 (let ((?x28263 (* l_0_12_70 l_0_12_70)))
 (let ((?x28261 (* l_0_12_69 l_0_12_69)))
 (let ((?x31120 (+ (+ (+ (* l_0_12_67 l_0_12_67) (* l_0_12_68 l_0_12_68)) ?x28261) ?x28263)))
 (= (- (- (- (- (- (+ ?x31120 ?x28265) ?x28267) ?x28269) ?x28271) ?x28273) ?x28275) 0.0)))))))))))
(assert
 (let ((?x27327 (* 2.0 l_0_12_71)))
 (let ((?x28354 (* ?x27327 l_0_12_76)))
 (let ((?x27324 (* 2.0 l_0_12_70)))
 (let ((?x28352 (* ?x27324 l_0_12_75)))
 (let ((?x27321 (* 2.0 l_0_12_69)))
 (let ((?x28350 (* ?x27321 l_0_12_74)))
 (let ((?x27318 (* 2.0 l_0_12_68)))
 (let ((?x28348 (* ?x27318 l_0_12_73)))
 (let ((?x27315 (* 2.0 l_0_12_67)))
 (let ((?x28346 (* ?x27315 l_0_12_72)))
 (let ((?x28307 (* 2.0 l_0_12_104)))
 (let ((?x28308 (* ?x28307 l_0_12_99)))
 (let ((?x28304 (* 2.0 l_0_12_103)))
 (let ((?x28305 (* ?x28304 l_0_12_98)))
 (let ((?x15108 (* 2.0 l_0_12_102)))
 (let ((?x28302 (* ?x15108 l_0_12_97)))
 (let ((?x15119 (* 2.0 l_0_12_101)))
 (let ((?x15120 (* ?x15119 l_0_12_96)))
 (let ((?x31149 (- (- (- (- (* (* (- 2.0) l_0_12_100) l_0_12_95) ?x15120) ?x28302) ?x28305) ?x28308)))
 (= (+ (+ (+ (+ (+ ?x31149 ?x28346) ?x28348) ?x28350) ?x28352) ?x28354) 0.0)))))))))))))))))))))
(assert
 (let ((?x29958 (* l_0_12_77 l_0_12_77)))
 (let ((?x29956 (* l_0_12_76 l_0_12_76)))
 (let ((?x29954 (* l_0_12_75 l_0_12_75)))
 (let ((?x29952 (* l_0_12_74 l_0_12_74)))
 (let ((?x29950 (* l_0_12_73 l_0_12_73)))
 (let ((?x29948 (* l_0_12_72 l_0_12_72)))
 (let ((?x29946 (* l_0_12_105 l_0_12_105)))
 (let ((?x29944 (* l_0_12_104 l_0_12_104)))
 (let ((?x29942 (* l_0_12_103 l_0_12_103)))
 (let ((?x29940 (* l_0_12_102 l_0_12_102)))
 (let ((?x31164 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x29940)))
 (let ((?x31171 (+ (+ (+ (+ (- (- (- ?x31164 ?x29942) ?x29944) ?x29946) ?x29948) ?x29950) ?x29952) ?x29954)))
 (= (+ (+ ?x31171 ?x29956) ?x29958) 0.0))))))))))))))
(assert
 (let ((?x30015 (* l_0_12_84 l_0_12_84)))
 (let ((?x30013 (* l_0_12_83 l_0_12_83)))
 (let ((?x30011 (* l_0_12_82 l_0_12_82)))
 (let ((?x30009 (* l_0_12_81 l_0_12_81)))
 (let ((?x30007 (* l_0_12_80 l_0_12_80)))
 (let ((?x30005 (* l_0_12_79 l_0_12_79)))
 (let ((?x30003 (* l_0_12_78 l_0_12_78)))
 (let ((?x30001 (* l_0_12_112 l_0_12_112)))
 (let ((?x29999 (* l_0_12_111 l_0_12_111)))
 (let ((?x29997 (* l_0_12_110 l_0_12_110)))
 (let ((?x29995 (* l_0_12_109 l_0_12_109)))
 (let ((?x29993 (* l_0_12_108 l_0_12_108)))
 (let ((?x31194 (- (- (* (- l_0_12_106) l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x29993)))
 (let ((?x31201 (+ (+ (+ (- (- (- (- ?x31194 ?x29995) ?x29997) ?x29999) ?x30001) ?x30003) ?x30005) ?x30007)))
 (= (+ (+ (+ (+ ?x31201 ?x30009) ?x30011) ?x30013) ?x30015) 0.0))))))))))))))))
(assert
 (let ((?x31218 (- (* (* (- 2.0) l_0_12_197) l_0_12_207) (* (* 2.0 l_0_12_225) l_0_12_235))))
 (= (- ?x31218 (* (* 2.0 l_0_12_253) l_0_12_263)) 0.0)))
(assert
 (let ((?x31241 (- (* (* (- 2.0) l_0_12_197) l_0_12_212) (* (* 2.0 l_0_12_225) l_0_12_240))))
 (= (- ?x31241 (* (* 2.0 l_0_12_253) l_0_12_268)) 0.0)))
(assert
 (let ((?x31261 (- (* (* (- 2.0) l_0_12_197) l_0_12_218) (* (* 2.0 l_0_12_225) l_0_12_246))))
 (= (- ?x31261 (* (* 2.0 l_0_12_253) l_0_12_274)) 0.0)))
(assert
 (let ((?x31283 (* l_0_12_267 l_0_12_267)))
 (let ((?x31281 (* l_0_12_266 l_0_12_266)))
 (let ((?x31279 (* l_0_12_265 l_0_12_265)))
 (let ((?x31277 (* l_0_12_264 l_0_12_264)))
 (let ((?x31275 (* l_0_12_263 l_0_12_263)))
 (let ((?x4404 (* l_0_12_239 l_0_12_239)))
 (let ((?x4403 (* l_0_12_238 l_0_12_238)))
 (let ((?x4285 (* l_0_12_237 l_0_12_237)))
 (let ((?x4401 (* l_0_12_236 l_0_12_236)))
 (let ((?x4394 (* l_0_12_235 l_0_12_235)))
 (let ((?x4346 (* l_0_12_211 l_0_12_211)))
 (let ((?x19741 (* l_0_12_210 l_0_12_210)))
 (let ((?x19729 (* l_0_12_209 l_0_12_209)))
 (let ((?x19735 (- (- (* (- l_0_12_207) l_0_12_207) (* l_0_12_208 l_0_12_208)) ?x19729)))
 (let ((?x31274 (- (- (- (- (- (- (- ?x19735 ?x19741) ?x4346) ?x4394) ?x4401) ?x4285) ?x4403) ?x4404)))
 (= (- (- (- (- (- ?x31274 ?x31275) ?x31277) ?x31279) ?x31281) ?x31283) 0.0)))))))))))))))))
(assert
 (let ((?x31316 (- (* (* (- 2.0) l_0_12_207) l_0_12_212) (* (* 2.0 l_0_12_208) l_0_12_213))))
 (let ((?x31320 (- (- ?x31316 (* (* 2.0 l_0_12_209) l_0_12_214)) (* (* 2.0 l_0_12_210) l_0_12_215))))
 (let ((?x31324 (- (- ?x31320 (* (* 2.0 l_0_12_211) l_0_12_216)) (* (* 2.0 l_0_12_235) l_0_12_240))))
 (let ((?x31328 (- (- ?x31324 (* (* 2.0 l_0_12_236) l_0_12_241)) (* (* 2.0 l_0_12_237) l_0_12_242))))
 (let ((?x31332 (- (- ?x31328 (* (* 2.0 l_0_12_238) l_0_12_243)) (* (* 2.0 l_0_12_239) l_0_12_244))))
 (let ((?x31336 (- (- ?x31332 (* (* 2.0 l_0_12_263) l_0_12_268)) (* (* 2.0 l_0_12_264) l_0_12_269))))
 (let ((?x31340 (- (- ?x31336 (* (* 2.0 l_0_12_265) l_0_12_270)) (* (* 2.0 l_0_12_266) l_0_12_271))))
 (= (- ?x31340 (* (* 2.0 l_0_12_267) l_0_12_272)) 0.0)))))))))
(assert
 (let ((?x31406 (* l_0_12_273 l_0_12_273)))
 (let ((?x31404 (* l_0_12_272 l_0_12_272)))
 (let ((?x31402 (* l_0_12_271 l_0_12_271)))
 (let ((?x31400 (* l_0_12_270 l_0_12_270)))
 (let ((?x31398 (* l_0_12_269 l_0_12_269)))
 (let ((?x31396 (* l_0_12_268 l_0_12_268)))
 (let ((?x31394 (* l_0_12_245 l_0_12_245)))
 (let ((?x31392 (* l_0_12_244 l_0_12_244)))
 (let ((?x31390 (* l_0_12_243 l_0_12_243)))
 (let ((?x31388 (* l_0_12_242 l_0_12_242)))
 (let ((?x31386 (* l_0_12_241 l_0_12_241)))
 (let ((?x31384 (* l_0_12_240 l_0_12_240)))
 (let ((?x31382 (* l_0_12_217 l_0_12_217)))
 (let ((?x31380 (* l_0_12_216 l_0_12_216)))
 (let ((?x31378 (* l_0_12_215 l_0_12_215)))
 (let ((?x31376 (* l_0_12_214 l_0_12_214)))
 (let ((?x31377 (- (- (* (- l_0_12_212) l_0_12_212) (* l_0_12_213 l_0_12_213)) ?x31376)))
 (let ((?x31391 (- (- (- (- (- (- (- ?x31377 ?x31378) ?x31380) ?x31382) ?x31384) ?x31386) ?x31388) ?x31390)))
 (let ((?x31405 (- (- (- (- (- (- (- ?x31391 ?x31392) ?x31394) ?x31396) ?x31398) ?x31400) ?x31402) ?x31404)))
 (= (- ?x31405 ?x31406) 0.0)))))))))))))))))))))
(assert
 (let ((?x31467 (* l_0_12_280 l_0_12_280)))
 (let ((?x31465 (* l_0_12_279 l_0_12_279)))
 (let ((?x31463 (* l_0_12_278 l_0_12_278)))
 (let ((?x31461 (* l_0_12_277 l_0_12_277)))
 (let ((?x31459 (* l_0_12_276 l_0_12_276)))
 (let ((?x31457 (* l_0_12_275 l_0_12_275)))
 (let ((?x31455 (* l_0_12_274 l_0_12_274)))
 (let ((?x31453 (* l_0_12_252 l_0_12_252)))
 (let ((?x31451 (* l_0_12_251 l_0_12_251)))
 (let ((?x31449 (* l_0_12_250 l_0_12_250)))
 (let ((?x31447 (* l_0_12_249 l_0_12_249)))
 (let ((?x31445 (* l_0_12_248 l_0_12_248)))
 (let ((?x31443 (* l_0_12_247 l_0_12_247)))
 (let ((?x31441 (* l_0_12_246 l_0_12_246)))
 (let ((?x31439 (* l_0_12_224 l_0_12_224)))
 (let ((?x31437 (* l_0_12_223 l_0_12_223)))
 (let ((?x31435 (* l_0_12_222 l_0_12_222)))
 (let ((?x21275 (* l_0_12_221 l_0_12_221)))
 (let ((?x21258 (* l_0_12_220 l_0_12_220)))
 (let ((?x21278 (- (- (* (- l_0_12_218) l_0_12_218) (* l_0_12_219 l_0_12_219)) ?x21258)))
 (let ((?x31446 (- (- (- (- (- (- (- ?x21278 ?x21275) ?x31435) ?x31437) ?x31439) ?x31441) ?x31443) ?x31445)))
 (let ((?x31460 (- (- (- (- (- (- (- ?x31446 ?x31447) ?x31449) ?x31451) ?x31453) ?x31455) ?x31457) ?x31459)))
 (= (- (- (- (- ?x31460 ?x31461) ?x31463) ?x31465) ?x31467) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_29 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_34 0.0))
(assert
 (>= l_0_12_38 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_49 0.0))
(assert
 (>= l_0_12_56 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_59 0.0))
(assert
 (>= l_0_12_62 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_71 0.0))
(assert
 (>= l_0_12_77 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_112 0.0))
(assert
 (>= l_0_12_113 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_122 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_133 0.0))
(assert
 (>= l_0_12_140 0.0))
(assert
 (>= l_0_12_141 0.0))
(assert
 (>= l_0_12_143 0.0))
(assert
 (>= l_0_12_146 0.0))
(assert
 (>= l_0_12_150 0.0))
(assert
 (>= l_0_12_155 0.0))
(assert
 (>= l_0_12_161 0.0))
(assert
 (>= l_0_12_168 0.0))
(assert
 (>= l_0_12_169 0.0))
(assert
 (>= l_0_12_171 0.0))
(assert
 (>= l_0_12_174 0.0))
(assert
 (>= l_0_12_178 0.0))
(assert
 (>= l_0_12_183 0.0))
(assert
 (>= l_0_12_189 0.0))
(assert
 (>= l_0_12_196 0.0))
(assert
 (>= l_0_12_197 0.0))
(assert
 (>= l_0_12_199 0.0))
(assert
 (>= l_0_12_202 0.0))
(assert
 (>= l_0_12_206 0.0))
(assert
 (>= l_0_12_211 0.0))
(assert
 (>= l_0_12_217 0.0))
(assert
 (>= l_0_12_224 0.0))
(assert
 (>= l_0_12_225 0.0))
(assert
 (>= l_0_12_227 0.0))
(assert
 (>= l_0_12_230 0.0))
(assert
 (>= l_0_12_234 0.0))
(assert
 (>= l_0_12_239 0.0))
(assert
 (>= l_0_12_245 0.0))
(assert
 (>= l_0_12_252 0.0))
(assert
 (>= l_0_12_253 0.0))
(assert
 (>= l_0_12_255 0.0))
(assert
 (>= l_0_12_258 0.0))
(assert
 (>= l_0_12_262 0.0))
(assert
 (>= l_0_12_267 0.0))
(assert
 (>= l_0_12_273 0.0))
(assert
 (>= l_0_12_280 0.0))
(assert
 (let ((?x31586 (* l_0_13_29 l_0_13_29)))
 (let ((?x31573 (- (+ (* (- l_0_13_1) l_0_13_1) (* l_0_13_141 l_0_13_141)) (* (* 2.0 l_0_13_207) l_0_13_218))))
 (let ((?x31579 (- (- ?x31573 (* (* 2.0 l_0_13_208) l_0_13_219)) (* (* 2.0 l_0_13_209) l_0_13_220))))
 (let ((?x31585 (- (- ?x31579 (* (* 2.0 l_0_13_210) l_0_13_221)) (* (* 2.0 l_0_13_211) l_0_13_222))))
 (= (+ (+ ?x31585 ?x31586) 2.0) 0.0))))))
(assert
 (= (- (- _a_0_) (* l_0_13_197 l_0_13_197)) 0.0))
(assert
 (let ((?x31586 (* l_0_13_29 l_0_13_29)))
 (let ((?x31624 (+ (+ (- _a_1_) (* l_0_13_1 l_0_13_1)) (* 2.0 (* l_0_13_169 l_0_13_169)))))
 (= (- (- ?x31624 (* (* 2.0 l_0_13_197) l_0_13_198)) ?x31586) 0.0))))
(assert
 (let ((?x31683 (* 2.0 l_0_13_43)))
 (let ((?x31684 (* ?x31683 l_0_13_54)))
 (let ((?x31680 (* 2.0 l_0_13_42)))
 (let ((?x31681 (* ?x31680 l_0_13_53)))
 (let ((?x31677 (* 2.0 l_0_13_41)))
 (let ((?x31678 (* ?x31677 l_0_13_52)))
 (let ((?x31674 (* 2.0 l_0_13_40)))
 (let ((?x31675 (* ?x31674 l_0_13_51)))
 (let ((?x31671 (* 2.0 l_0_13_39)))
 (let ((?x31672 (* ?x31671 l_0_13_50)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31669 (* ?x31668 l_0_13_30)))
 (let ((?x31650 (* 2.0 l_0_13_15)))
 (let ((?x31651 (* ?x31650 l_0_13_26)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31648 (* ?x31647 l_0_13_142)))
 (let ((?x31644 (* 2.0 l_0_13_14)))
 (let ((?x31645 (* ?x31644 l_0_13_25)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x31642 (* ?x31641 l_0_13_24)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x31639 (* ?x31638 l_0_13_23)))
 (let ((?x31637 (+ (* (* (- 2.0) l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_11) l_0_13_22))))
 (let ((?x31655 (+ (+ (+ (+ (+ (+ ?x31637 ?x31639) ?x31642) ?x31645) ?x31648) ?x31651) (* (* 4.0 l_0_13_179) l_0_13_190))))
 (let ((?x31661 (+ (+ ?x31655 (* (* 4.0 l_0_13_180) l_0_13_191)) (* (* 4.0 l_0_13_181) l_0_13_192))))
 (let ((?x31667 (+ (+ ?x31661 (* (* 4.0 l_0_13_182) l_0_13_193)) (* (* 4.0 l_0_13_183) l_0_13_194))))
 (= (- (- (- (- (- (+ ?x31667 ?x31669) ?x31672) ?x31675) ?x31678) ?x31681) ?x31684) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x31824 (* ?x31823 l_0_13_82)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x31821 (* ?x31820 l_0_13_81)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x31818 (* ?x31817 l_0_13_80)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x31815 (* ?x31814 l_0_13_79)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x31812 (* ?x31811 l_0_13_78)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31809 (* ?x31668 l_0_13_32)))
 (let ((?x31791 (* 2.0 l_0_13_155)))
 (let ((?x31792 (* ?x31791 l_0_13_166)))
 (let ((?x31788 (* 2.0 l_0_13_154)))
 (let ((?x31789 (* ?x31788 l_0_13_165)))
 (let ((?x31785 (* 2.0 l_0_13_153)))
 (let ((?x31786 (* ?x31785 l_0_13_164)))
 (let ((?x31782 (* 2.0 l_0_13_152)))
 (let ((?x31783 (* ?x31782 l_0_13_163)))
 (let ((?x31779 (* 2.0 l_0_13_151)))
 (let ((?x31780 (* ?x31779 l_0_13_162)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31777 (* ?x31647 l_0_13_144)))
 (let ((?x31760 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x31757 (* ?x31756 l_0_13_98)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x31754 (* ?x31753 l_0_13_97)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x31751 (* ?x31750 l_0_13_96)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x31748 (* ?x31747 l_0_13_95)))
 (let ((?x31758 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x31748) ?x31751) ?x31754) ?x31757)))
 (let ((?x31767 (- (- (+ ?x31758 ?x31760) (* (* 2.0 l_0_13_123) l_0_13_134)) (* (* 2.0 l_0_13_124) l_0_13_135))))
 (let ((?x31773 (- (- ?x31767 (* (* 2.0 l_0_13_125) l_0_13_136)) (* (* 2.0 l_0_13_126) l_0_13_137))))
 (let ((?x31784 (- (- (+ (- ?x31773 (* (* 2.0 l_0_13_127) l_0_13_138)) ?x31777) ?x31780) ?x31783)))
 (let ((?x31796 (- (- (- (- ?x31784 ?x31786) ?x31789) ?x31792) (* (* 2.0 l_0_13_179) l_0_13_190))))
 (let ((?x31802 (- (- ?x31796 (* (* 2.0 l_0_13_180) l_0_13_191)) (* (* 2.0 l_0_13_181) l_0_13_192))))
 (let ((?x31808 (- (- ?x31802 (* (* 2.0 l_0_13_182) l_0_13_193)) (* (* 2.0 l_0_13_183) l_0_13_194))))
 (= (- (- (- (- (- (+ ?x31808 ?x31809) ?x31812) ?x31815) ?x31818) ?x31821) ?x31824) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x31824 (* ?x31823 l_0_13_82)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x31821 (* ?x31820 l_0_13_81)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x31818 (* ?x31817 l_0_13_80)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x31815 (* ?x31814 l_0_13_79)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x31812 (* ?x31811 l_0_13_78)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31889 (* ?x31668 l_0_13_35)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31887 (* ?x31647 l_0_13_147)))
 (let ((?x31760 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x31757 (* ?x31756 l_0_13_98)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x31754 (* ?x31753 l_0_13_97)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x31751 (* ?x31750 l_0_13_96)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x31748 (* ?x31747 l_0_13_95)))
 (let ((?x31885 (- (- (- (- (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x31748) ?x31751) ?x31754) ?x31757)))
 (let ((?x31894 (+ (+ (+ (+ (+ (+ (- ?x31885 ?x31760) ?x31887) ?x31889) ?x31812) ?x31815) ?x31818) ?x31821)))
 (= (+ ?x31894 ?x31824) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x18448 (* ?x31668 l_0_13_39)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x5175 (* ?x31647 l_0_13_151)))
 (= (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) ?x5175) ?x18448) 0.0))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x31916 (* ?x31915 l_0_13_95)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x31913 (* ?x31912 l_0_13_67)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31905 (* ?x31668 l_0_13_44)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31902 (* ?x31647 l_0_13_156)))
 (let ((?x31917 (+ (- (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_16) ?x31902) ?x31905) ?x31913) ?x31916)))
 (= ?x31917 0.0)))))))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31936 (* ?x31668 l_0_13_50)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31934 (* ?x31647 l_0_13_162)))
 (= (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_22) ?x31934) ?x31936) 0.0))))))
(assert
 (let ((?x31956 (* l_0_13_31 l_0_13_31)))
 (let ((?x31954 (* l_0_13_30 l_0_13_30)))
 (let ((?x31952 (* l_0_13_3 l_0_13_3)))
 (let ((?x31945 (* l_0_13_2 l_0_13_2)))
 (let ((?x31951 (- (+ (* l_0_13_142 l_0_13_142) (* l_0_13_143 l_0_13_143)) ?x31945)))
 (= (+ (+ (- ?x31951 ?x31952) ?x31954) ?x31956) 0.0)))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x31979 (* ?x31978 l_0_13_33)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x31976 (* ?x31975 l_0_13_32)))
 (let ((?x31972 (* 2.0 l_0_13_3)))
 (let ((?x31973 (* ?x31972 l_0_13_5)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x31970 (* ?x31969 l_0_13_4)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x31967 (* ?x31966 l_0_13_145)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x31965 (* ?x31964 l_0_13_144)))
 (= (+ (+ (- (- (+ ?x31965 ?x31967) ?x31970) ?x31973) ?x31976) ?x31979) 0.0))))))))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32001 (* ?x31978 l_0_13_36)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x31999 (* ?x31975 l_0_13_35)))
 (let ((?x31972 (* 2.0 l_0_13_3)))
 (let ((?x31997 (* ?x31972 l_0_13_8)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x31995 (* ?x31969 l_0_13_7)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x21316 (* ?x31966 l_0_13_148)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x5252 (* ?x31964 l_0_13_147)))
 (= (+ (+ (- (- (+ ?x5252 ?x21316) ?x31995) ?x31997) ?x31999) ?x32001) 0.0))))))))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32028 (* ?x31978 l_0_13_40)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32026 (* ?x31975 l_0_13_39)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32024 (* ?x31966 l_0_13_152)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32022 (* ?x31964 l_0_13_151)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32020 (* ?x31638 l_0_13_3)))
 (let ((?x32027 (+ (+ (+ (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x32020) ?x32022) ?x32024) ?x32026)))
 (= (+ ?x32027 ?x32028) 0.0)))))))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x32069 (* ?x32068 l_0_13_96)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x32066 (* ?x32065 l_0_13_95)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x32063 (* ?x32062 l_0_13_68)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x32060 (* ?x32059 l_0_13_67)))
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32057 (* ?x31978 l_0_13_45)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32055 (* ?x31975 l_0_13_44)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32053 (* ?x32052 l_0_13_3)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32050 (* ?x32049 l_0_13_2)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32047 (* ?x31966 l_0_13_157)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32046 (* ?x31964 l_0_13_156)))
 (let ((?x32064 (- (- (+ (+ (- (- (+ ?x32046 ?x32047) ?x32050) ?x32053) ?x32055) ?x32057) ?x32060) ?x32063)))
 (= (+ (+ ?x32064 ?x32066) ?x32069) 0.0)))))))))))))))))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32108 (* ?x31978 l_0_13_51)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32106 (* ?x31975 l_0_13_50)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32104 (* ?x32103 l_0_13_3)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x32101 (* ?x31969 l_0_13_22)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32099 (* ?x31966 l_0_13_163)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32098 (* ?x31964 l_0_13_162)))
 (= (+ (+ (- (- (+ ?x32098 ?x32099) ?x32101) ?x32104) ?x32106) ?x32108) 0.0))))))))))))))
(assert
 (let ((?x32147 (* l_0_13_6 l_0_13_6)))
 (let ((?x32145 (* l_0_13_5 l_0_13_5)))
 (let ((?x32143 (* l_0_13_4 l_0_13_4)))
 (let ((?x32141 (* l_0_13_34 l_0_13_34)))
 (let ((?x32139 (* l_0_13_33 l_0_13_33)))
 (let ((?x32137 (* l_0_13_32 l_0_13_32)))
 (let ((?x32135 (* l_0_13_146 l_0_13_146)))
 (let ((?x32136 (+ (+ (* l_0_13_144 l_0_13_144) (* l_0_13_145 l_0_13_145)) ?x32135)))
 (= (- (- (- (+ (+ (+ ?x32136 ?x32137) ?x32139) ?x32141) ?x32143) ?x32145) ?x32147) 0.0))))))))))
(assert
 (let ((?x32180 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x32177 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x32174 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32171 (* ?x32170 l_0_13_37)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32168 (* ?x32167 l_0_13_36)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32165 (* ?x32164 l_0_13_35)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32162 (* ?x32161 l_0_13_149)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32159 (* ?x32158 l_0_13_148)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32157 (* ?x32156 l_0_13_147)))
 (let ((?x32178 (- (- (+ (+ (+ (+ (+ ?x32157 ?x32159) ?x32162) ?x32165) ?x32168) ?x32171) ?x32174) ?x32177)))
 (= (- ?x32178 ?x32180) 0.0))))))))))))))))))
(assert
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32223 (* ?x32170 l_0_13_41)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32221 (* ?x32167 l_0_13_40)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32219 (* ?x32164 l_0_13_39)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32217 (* ?x32161 l_0_13_153)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32215 (* ?x32158 l_0_13_152)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32213 (* ?x32156 l_0_13_151)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32211 (* ?x31641 l_0_13_6)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32209 (* ?x31638 l_0_13_5)))
 (let ((?x32216 (+ (+ (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x32209) ?x32211) ?x32213) ?x32215)))
 (= (+ (+ (+ (+ ?x32216 ?x32217) ?x32219) ?x32221) ?x32223) 0.0)))))))))))))))))))
(assert
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x32282 (* ?x32281 l_0_13_97)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x32279 (* ?x32278 l_0_13_96)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x32276 (* ?x32275 l_0_13_95)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x32273 (* ?x32272 l_0_13_69)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x32270 (* ?x32269 l_0_13_68)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x32267 (* ?x32266 l_0_13_67)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32264 (* ?x32170 l_0_13_46)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32262 (* ?x32167 l_0_13_45)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32260 (* ?x32164 l_0_13_44)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32258 (* ?x32257 l_0_13_6)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32255 (* ?x32052 l_0_13_5)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32253 (* ?x32049 l_0_13_4)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32251 (* ?x32161 l_0_13_158)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32249 (* ?x32158 l_0_13_157)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32248 (* ?x32156 l_0_13_156)))
 (let ((?x32263 (+ (+ (- (- (- (+ (+ ?x32248 ?x32249) ?x32251) ?x32253) ?x32255) ?x32258) ?x32260) ?x32262)))
 (let ((?x32283 (+ (+ (+ (- (- (- (+ ?x32263 ?x32264) ?x32267) ?x32270) ?x32273) ?x32276) ?x32279) ?x32282)))
 (= ?x32283 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32329 (* ?x32170 l_0_13_52)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32327 (* ?x32167 l_0_13_51)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32325 (* ?x32164 l_0_13_50)))
 (let ((?x32322 (* 2.0 l_0_13_24)))
 (let ((?x32323 (* ?x32322 l_0_13_6)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32320 (* ?x32103 l_0_13_5)))
 (let ((?x32317 (* 2.0 l_0_13_22)))
 (let ((?x32318 (* ?x32317 l_0_13_4)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x21924 (* ?x32161 l_0_13_164)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x5604 (* ?x32158 l_0_13_163)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x21416 (* ?x32156 l_0_13_162)))
 (let ((?x32328 (+ (+ (- (- (- (+ (+ ?x21416 ?x5604) ?x21924) ?x32318) ?x32320) ?x32323) ?x32325) ?x32327)))
 (= (+ ?x32328 ?x32329) 0.0)))))))))))))))))))))
(assert
 (let ((?x32381 (* l_0_13_9 l_0_13_9)))
 (let ((?x32379 (* l_0_13_8 l_0_13_8)))
 (let ((?x32377 (* l_0_13_7 l_0_13_7)))
 (let ((?x32375 (* l_0_13_38 l_0_13_38)))
 (let ((?x32373 (* l_0_13_37 l_0_13_37)))
 (let ((?x32371 (* l_0_13_36 l_0_13_36)))
 (let ((?x32369 (* l_0_13_35 l_0_13_35)))
 (let ((?x32367 (* l_0_13_150 l_0_13_150)))
 (let ((?x32365 (* l_0_13_149 l_0_13_149)))
 (let ((?x32363 (* l_0_13_148 l_0_13_148)))
 (let ((?x32364 (+ (+ (* (- l_0_13_10) l_0_13_10) (* l_0_13_147 l_0_13_147)) ?x32363)))
 (let ((?x32378 (- (+ (+ (+ (+ (+ (+ ?x32364 ?x32365) ?x32367) ?x32369) ?x32371) ?x32373) ?x32375) ?x32377)))
 (= (- (- ?x32378 ?x32379) ?x32381) 0.0))))))))))))))
(assert
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32425 (* ?x32424 l_0_13_42)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32422 (* ?x32421 l_0_13_41)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32419 (* ?x32418 l_0_13_40)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32416 (* ?x32415 l_0_13_39)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32413 (* ?x32412 l_0_13_154)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32410 (* ?x32409 l_0_13_153)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x32407 (* ?x32406 l_0_13_152)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x32404 (* ?x32403 l_0_13_151)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32401 (* ?x31641 l_0_13_9)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32399 (* ?x31638 l_0_13_8)))
 (let ((?x4787 (* 2.0 l_0_13_11)))
 (let ((?x32397 (* ?x4787 l_0_13_7)))
 (let ((?x32405 (+ (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x32397) ?x32399) ?x32401) ?x32404)))
 (let ((?x32426 (+ (+ (+ (+ (+ (+ (+ ?x32405 ?x32407) ?x32410) ?x32413) ?x32416) ?x32419) ?x32422) ?x32425)))
 (= ?x32426 0.0))))))))))))))))))))))))))
(assert
 (let ((?x32492 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32489 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32486 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32483 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x32480 (* ?x32479 l_0_13_70)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x32477 (* ?x32476 l_0_13_69)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x32474 (* ?x32473 l_0_13_68)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x32471 (* ?x32470 l_0_13_67)))
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32468 (* ?x32424 l_0_13_47)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32466 (* ?x32421 l_0_13_46)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32464 (* ?x32418 l_0_13_45)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32462 (* ?x32415 l_0_13_44)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32460 (* ?x32257 l_0_13_9)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32458 (* ?x32052 l_0_13_8)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32456 (* ?x32049 l_0_13_7)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32443 (* ?x32412 l_0_13_159)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32439 (* ?x32409 l_0_13_158)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x18921 (* ?x32406 l_0_13_157)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x5665 (* ?x32403 l_0_13_156)))
 (let ((?x32444 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_10) l_0_13_19) ?x5665) ?x18921) ?x32439) ?x32443)))
 (let ((?x32469 (+ (+ (+ (+ (- (- (- ?x32444 ?x32456) ?x32458) ?x32460) ?x32462) ?x32464) ?x32466) ?x32468)))
 (let ((?x32490 (+ (+ (+ (- (- (- (- ?x32469 ?x32471) ?x32474) ?x32477) ?x32480) ?x32483) ?x32486) ?x32489)))
 (= (+ ?x32490 ?x32492) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32558 (* ?x32424 l_0_13_53)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32556 (* ?x32421 l_0_13_52)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32554 (* ?x32418 l_0_13_51)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32552 (* ?x32415 l_0_13_50)))
 (let ((?x32322 (* 2.0 l_0_13_24)))
 (let ((?x32550 (* ?x32322 l_0_13_9)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32548 (* ?x32103 l_0_13_8)))
 (let ((?x32317 (* 2.0 l_0_13_22)))
 (let ((?x32546 (* ?x32317 l_0_13_7)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32544 (* ?x32412 l_0_13_165)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32542 (* ?x32409 l_0_13_164)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x5255 (* ?x32406 l_0_13_163)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x5705 (* ?x32403 l_0_13_162)))
 (let ((?x32545 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_10) l_0_13_25) ?x5705) ?x5255) ?x32542) ?x32544)))
 (let ((?x32559 (+ (+ (+ (+ (- (- (- ?x32545 ?x32546) ?x32548) ?x32550) ?x32552) ?x32554) ?x32556) ?x32558)))
 (= ?x32559 0.0))))))))))))))))))))))))))
(assert
 (let ((?x32625 (* l_0_13_43 l_0_13_43)))
 (let ((?x32623 (* l_0_13_42 l_0_13_42)))
 (let ((?x32621 (* l_0_13_41 l_0_13_41)))
 (let ((?x32619 (* l_0_13_40 l_0_13_40)))
 (let ((?x32617 (* l_0_13_39 l_0_13_39)))
 (let ((?x32615 (* l_0_13_155 l_0_13_155)))
 (let ((?x32613 (* l_0_13_154 l_0_13_154)))
 (let ((?x32611 (* l_0_13_153 l_0_13_153)))
 (let ((?x32609 (* l_0_13_152 l_0_13_152)))
 (let ((?x32607 (* l_0_13_151 l_0_13_151)))
 (let ((?x32605 (* l_0_13_15 l_0_13_15)))
 (let ((?x32603 (* l_0_13_14 l_0_13_14)))
 (let ((?x32601 (* l_0_13_13 l_0_13_13)))
 (let ((?x32602 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x32601)))
 (let ((?x32616 (+ (+ (+ (+ (+ (- (- ?x32602 ?x32603) ?x32605) ?x32607) ?x32609) ?x32611) ?x32613) ?x32615)))
 (= (+ (+ (+ (+ (+ ?x32616 ?x32617) ?x32619) ?x32621) ?x32623) ?x32625) 0.0)))))))))))))))))
(assert
 (let ((?x32699 (* l_0_13_99 l_0_13_99)))
 (let ((?x32697 (* l_0_13_98 l_0_13_98)))
 (let ((?x32695 (* l_0_13_97 l_0_13_97)))
 (let ((?x32693 (* l_0_13_96 l_0_13_96)))
 (let ((?x32691 (* l_0_13_95 l_0_13_95)))
 (let ((?x32689 (* l_0_13_71 l_0_13_71)))
 (let ((?x32687 (* l_0_13_70 l_0_13_70)))
 (let ((?x32685 (* l_0_13_69 l_0_13_69)))
 (let ((?x32683 (* l_0_13_68 l_0_13_68)))
 (let ((?x32681 (* l_0_13_67 l_0_13_67)))
 (let ((?x31683 (* 2.0 l_0_13_43)))
 (let ((?x32679 (* ?x31683 l_0_13_48)))
 (let ((?x31680 (* 2.0 l_0_13_42)))
 (let ((?x32677 (* ?x31680 l_0_13_47)))
 (let ((?x31677 (* 2.0 l_0_13_41)))
 (let ((?x32675 (* ?x31677 l_0_13_46)))
 (let ((?x31674 (* 2.0 l_0_13_40)))
 (let ((?x32673 (* ?x31674 l_0_13_45)))
 (let ((?x31671 (* 2.0 l_0_13_39)))
 (let ((?x32671 (* ?x31671 l_0_13_44)))
 (let ((?x31791 (* 2.0 l_0_13_155)))
 (let ((?x32669 (* ?x31791 l_0_13_160)))
 (let ((?x31788 (* 2.0 l_0_13_154)))
 (let ((?x32667 (* ?x31788 l_0_13_159)))
 (let ((?x31785 (* 2.0 l_0_13_153)))
 (let ((?x32665 (* ?x31785 l_0_13_158)))
 (let ((?x31782 (* 2.0 l_0_13_152)))
 (let ((?x32663 (* ?x31782 l_0_13_157)))
 (let ((?x31779 (* 2.0 l_0_13_151)))
 (let ((?x32661 (* ?x31779 l_0_13_156)))
 (let ((?x31650 (* 2.0 l_0_13_15)))
 (let ((?x32659 (* ?x31650 l_0_13_20)))
 (let ((?x31644 (* 2.0 l_0_13_14)))
 (let ((?x32657 (* ?x31644 l_0_13_19)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32655 (* ?x31641 l_0_13_18)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32653 (* ?x31638 l_0_13_17)))
 (let ((?x32660 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_16) ?x32653) ?x32655) ?x32657) ?x32659)))
 (let ((?x32674 (+ (+ (+ (+ (+ (+ (+ ?x32660 ?x32661) ?x32663) ?x32665) ?x32667) ?x32669) ?x32671) ?x32673)))
 (let ((?x32688 (- (- (- (- (+ (+ (+ ?x32674 ?x32675) ?x32677) ?x32679) ?x32681) ?x32683) ?x32685) ?x32687)))
 (= (+ (+ (+ (+ (+ (- ?x32688 ?x32689) ?x32691) ?x32693) ?x32695) ?x32697) ?x32699) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31683 (* 2.0 l_0_13_43)))
 (let ((?x31684 (* ?x31683 l_0_13_54)))
 (let ((?x31680 (* 2.0 l_0_13_42)))
 (let ((?x31681 (* ?x31680 l_0_13_53)))
 (let ((?x31677 (* 2.0 l_0_13_41)))
 (let ((?x31678 (* ?x31677 l_0_13_52)))
 (let ((?x31674 (* 2.0 l_0_13_40)))
 (let ((?x31675 (* ?x31674 l_0_13_51)))
 (let ((?x31671 (* 2.0 l_0_13_39)))
 (let ((?x31672 (* ?x31671 l_0_13_50)))
 (let ((?x31791 (* 2.0 l_0_13_155)))
 (let ((?x31792 (* ?x31791 l_0_13_166)))
 (let ((?x31788 (* 2.0 l_0_13_154)))
 (let ((?x31789 (* ?x31788 l_0_13_165)))
 (let ((?x31785 (* 2.0 l_0_13_153)))
 (let ((?x31786 (* ?x31785 l_0_13_164)))
 (let ((?x31782 (* 2.0 l_0_13_152)))
 (let ((?x31783 (* ?x31782 l_0_13_163)))
 (let ((?x31779 (* 2.0 l_0_13_151)))
 (let ((?x31780 (* ?x31779 l_0_13_162)))
 (let ((?x31650 (* 2.0 l_0_13_15)))
 (let ((?x31651 (* ?x31650 l_0_13_26)))
 (let ((?x31644 (* 2.0 l_0_13_14)))
 (let ((?x31645 (* ?x31644 l_0_13_25)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x31642 (* ?x31641 l_0_13_24)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x31639 (* ?x31638 l_0_13_23)))
 (let ((?x32745 (- (- (- (- (* (* (- 2.0) l_0_13_11) l_0_13_22) ?x31639) ?x31642) ?x31645) ?x31651)))
 (let ((?x32752 (+ (+ (+ (+ (+ (+ (+ ?x32745 ?x31780) ?x31783) ?x31786) ?x31789) ?x31792) ?x31672) ?x31675)))
 (= (+ (+ (+ ?x32752 ?x31678) ?x31681) ?x31684) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x32816 (* ?x31823 l_0_13_76)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x32814 (* ?x31820 l_0_13_75)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x32812 (* ?x31817 l_0_13_74)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x32810 (* ?x31814 l_0_13_73)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x32808 (* ?x31811 l_0_13_72)))
 (let ((?x32806 (* l_0_13_49 l_0_13_49)))
 (let ((?x32804 (* l_0_13_48 l_0_13_48)))
 (let ((?x32802 (* l_0_13_47 l_0_13_47)))
 (let ((?x32800 (* l_0_13_46 l_0_13_46)))
 (let ((?x32798 (* l_0_13_45 l_0_13_45)))
 (let ((?x32796 (* l_0_13_44 l_0_13_44)))
 (let ((?x32794 (* l_0_13_21 l_0_13_21)))
 (let ((?x32792 (* l_0_13_20 l_0_13_20)))
 (let ((?x32790 (* l_0_13_19 l_0_13_19)))
 (let ((?x32788 (* l_0_13_18 l_0_13_18)))
 (let ((?x32786 (* l_0_13_17 l_0_13_17)))
 (let ((?x32784 (* l_0_13_161 l_0_13_161)))
 (let ((?x32782 (* l_0_13_160 l_0_13_160)))
 (let ((?x32780 (* l_0_13_16 l_0_13_16)))
 (let ((?x32778 (* l_0_13_159 l_0_13_159)))
 (let ((?x32776 (* l_0_13_158 l_0_13_158)))
 (let ((?x32774 (* l_0_13_157 l_0_13_157)))
 (let ((?x32772 (* l_0_13_156 l_0_13_156)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x32770 (* ?x32769 l_0_13_99)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x32767 (* ?x32766 l_0_13_98)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x32764 (* ?x32763 l_0_13_97)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x32761 (* ?x32760 l_0_13_96)))
 (let ((?x32771 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_95) ?x32761) ?x32764) ?x32767) ?x32770)))
 (let ((?x32785 (+ (+ (- (+ (+ (+ (+ ?x32771 ?x32772) ?x32774) ?x32776) ?x32778) ?x32780) ?x32782) ?x32784)))
 (let ((?x32799 (+ (+ (- (- (- (- (- ?x32785 ?x32786) ?x32788) ?x32790) ?x32792) ?x32794) ?x32796) ?x32798)))
 (let ((?x32813 (- (- (- (+ (+ (+ (+ ?x32799 ?x32800) ?x32802) ?x32804) ?x32806) ?x32808) ?x32810) ?x32812)))
 (= (- (- ?x32813 ?x32814) ?x32816) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x31824 (* ?x31823 l_0_13_82)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x31821 (* ?x31820 l_0_13_81)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x31818 (* ?x31817 l_0_13_80)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x31815 (* ?x31814 l_0_13_79)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x31812 (* ?x31811 l_0_13_78)))
 (let ((?x32929 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x32926 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x32923 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x32920 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x32917 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x32914 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x32911 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x32908 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x32905 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32902 (* ?x32257 l_0_13_24)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32900 (* ?x32052 l_0_13_23)))
 (let ((?x32898 (* (* 2.0 l_0_13_161) l_0_13_167)))
 (let ((?x32895 (* (* 2.0 l_0_13_160) l_0_13_166)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32892 (* ?x32049 l_0_13_22)))
 (let ((?x32890 (* (* 2.0 l_0_13_159) l_0_13_165)))
 (let ((?x32887 (* (* 2.0 l_0_13_158) l_0_13_164)))
 (let ((?x32884 (* (* 2.0 l_0_13_157) l_0_13_163)))
 (let ((?x32881 (* (* 2.0 l_0_13_156) l_0_13_162)))
 (let ((?x31760 (* (* 2.0 l_0_13_110) l_0_13_99)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x31757 (* ?x31756 l_0_13_98)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x31754 (* ?x31753 l_0_13_97)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x31751 (* ?x31750 l_0_13_96)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x31748 (* ?x31747 l_0_13_95)))
 (let ((?x32888 (+ (+ (+ (+ (+ (+ (+ ?x31748 ?x31751) ?x31754) ?x31757) ?x31760) ?x32881) ?x32884) ?x32887)))
 (let ((?x32906 (- (- (- (+ (+ (- (+ ?x32888 ?x32890) ?x32892) ?x32895) ?x32898) ?x32900) ?x32902) ?x32905)))
 (let ((?x32927 (+ (+ (+ (+ (+ (- (- ?x32906 ?x32908) ?x32911) ?x32914) ?x32917) ?x32920) ?x32923) ?x32926)))
 (= (- (- (- (- (- (+ ?x32927 ?x32929) ?x31812) ?x31815) ?x31818) ?x31821) ?x31824) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33044 (* l_0_13_56 l_0_13_56)))
 (let ((?x33042 (* l_0_13_55 l_0_13_55)))
 (let ((?x33040 (* l_0_13_54 l_0_13_54)))
 (let ((?x33038 (* l_0_13_53 l_0_13_53)))
 (let ((?x33036 (* l_0_13_52 l_0_13_52)))
 (let ((?x33034 (* l_0_13_51 l_0_13_51)))
 (let ((?x33032 (* l_0_13_50 l_0_13_50)))
 (let ((?x33030 (* l_0_13_28 l_0_13_28)))
 (let ((?x33028 (* l_0_13_27 l_0_13_27)))
 (let ((?x33026 (* l_0_13_26 l_0_13_26)))
 (let ((?x33024 (* l_0_13_25 l_0_13_25)))
 (let ((?x33022 (* l_0_13_24 l_0_13_24)))
 (let ((?x33020 (* l_0_13_23 l_0_13_23)))
 (let ((?x33018 (* l_0_13_22 l_0_13_22)))
 (let ((?x33016 (* l_0_13_168 l_0_13_168)))
 (let ((?x33014 (* l_0_13_167 l_0_13_167)))
 (let ((?x33012 (* l_0_13_166 l_0_13_166)))
 (let ((?x33010 (* l_0_13_165 l_0_13_165)))
 (let ((?x33008 (* l_0_13_164 l_0_13_164)))
 (let ((?x33009 (+ (+ (* l_0_13_162 l_0_13_162) (* l_0_13_163 l_0_13_163)) ?x33008)))
 (let ((?x33023 (- (- (- (+ (+ (+ (+ ?x33009 ?x33010) ?x33012) ?x33014) ?x33016) ?x33018) ?x33020) ?x33022)))
 (let ((?x33037 (+ (+ (+ (- (- (- (- ?x33023 ?x33024) ?x33026) ?x33028) ?x33030) ?x33032) ?x33034) ?x33036)))
 (= (+ (+ (+ (+ ?x33037 ?x33038) ?x33040) ?x33042) ?x33044) 0.0))))))))))))))))))))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31669 (* ?x31668 l_0_13_30)))
 (let ((?x33069 (* l_0_13_199 l_0_13_199)))
 (let ((?x33067 (* l_0_13_198 l_0_13_198)))
 (let ((?x33066 (+ (* (* 2.0 l_0_13_1) l_0_13_2) (* (* 4.0 l_0_13_169) l_0_13_170))))
 (= (- (- (- ?x33066 ?x33067) ?x33069) ?x31669) 0.0)))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33088 (* ?x31915 l_0_13_86)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33086 (* ?x31912 l_0_13_58)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31809 (* ?x31668 l_0_13_32)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31648 (* ?x31647 l_0_13_142)))
 (let ((?x5953 (- (* (* 2.0 l_0_13_1) l_0_13_4) (* (* 2.0 l_0_13_113) l_0_13_114))))
 (let ((?x5996 (+ (- (- ?x5953 ?x31648) (* (* 2.0 l_0_13_169) l_0_13_170)) (* (* 4.0 l_0_13_169) l_0_13_172))))
 (let ((?x33084 (- (- ?x5996 (* (* 2.0 l_0_13_198) l_0_13_200)) (* (* 2.0 l_0_13_199) l_0_13_201))))
 (= (+ (- (- ?x33084 ?x31809) ?x33086) ?x33088) 0.0)))))))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33088 (* ?x31915 l_0_13_86)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33086 (* ?x31912 l_0_13_58)))
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31889 (* ?x31668 l_0_13_35)))
 (let ((?x33103 (+ (* (* 2.0 l_0_13_1) l_0_13_7) (* (* 4.0 l_0_13_169) l_0_13_175))))
 (let ((?x33107 (- (- ?x33103 (* (* 2.0 l_0_13_198) l_0_13_203)) (* (* 2.0 l_0_13_199) l_0_13_204))))
 (= (- (+ (- ?x33107 ?x31889) ?x33086) ?x33088) 0.0))))))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x18448 (* ?x31668 l_0_13_39)))
 (let ((?x6082 (+ (* (* 2.0 l_0_13_1) l_0_13_11) (* (* 4.0 l_0_13_169) l_0_13_179))))
 (let ((?x33130 (- (- ?x6082 (* (* 2.0 l_0_13_198) l_0_13_207)) (* (* 2.0 l_0_13_199) l_0_13_208))))
 (= (- ?x33130 ?x18448) 0.0))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31905 (* ?x31668 l_0_13_44)))
 (let ((?x22205 (+ (* (* 2.0 l_0_13_1) l_0_13_16) (* (* 4.0 l_0_13_169) l_0_13_184))))
 (let ((?x33149 (- (- ?x22205 (* (* 2.0 l_0_13_198) l_0_13_212)) (* (* 2.0 l_0_13_199) l_0_13_213))))
 (= (- ?x33149 ?x31905) 0.0))))))
(assert
 (let ((?x31668 (* 2.0 l_0_13_29)))
 (let ((?x31936 (* ?x31668 l_0_13_50)))
 (let ((?x6092 (+ (* (* 2.0 l_0_13_1) l_0_13_22) (* (* 4.0 l_0_13_169) l_0_13_190))))
 (let ((?x33167 (- (- ?x6092 (* (* 2.0 l_0_13_198) l_0_13_218)) (* (* 2.0 l_0_13_199) l_0_13_219))))
 (= (- ?x33167 ?x31936) 0.0))))))
(assert
 (let ((?x31956 (* l_0_13_31 l_0_13_31)))
 (let ((?x31954 (* l_0_13_30 l_0_13_30)))
 (let ((?x31952 (* l_0_13_3 l_0_13_3)))
 (let ((?x31945 (* l_0_13_2 l_0_13_2)))
 (let ((?x33184 (* l_0_13_171 l_0_13_171)))
 (let ((?x33185 (* 2.0 ?x33184)))
 (let ((?x6123 (* l_0_13_170 l_0_13_170)))
 (let ((?x6126 (* 2.0 ?x6123)))
 (= (- (- (+ (+ (+ ?x6126 ?x33185) ?x31945) ?x31952) ?x31954) ?x31956) 0.0))))))))))
(assert
 (let ((?x33216 (* l_0_13_87 l_0_13_87)))
 (let ((?x33214 (* l_0_13_86 l_0_13_86)))
 (let ((?x33212 (* l_0_13_59 l_0_13_59)))
 (let ((?x33210 (* l_0_13_58 l_0_13_58)))
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x31979 (* ?x31978 l_0_13_33)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x31976 (* ?x31975 l_0_13_32)))
 (let ((?x31972 (* 2.0 l_0_13_3)))
 (let ((?x31973 (* ?x31972 l_0_13_5)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x31970 (* ?x31969 l_0_13_4)))
 (let ((?x33184 (* l_0_13_171 l_0_13_171)))
 (let ((?x6123 (* l_0_13_170 l_0_13_170)))
 (let ((?x31942 (* l_0_13_143 l_0_13_143)))
 (let ((?x31940 (* l_0_13_142 l_0_13_142)))
 (let ((?x33196 (- (- (* (- l_0_13_114) l_0_13_114) (* l_0_13_115 l_0_13_115)) ?x31940)))
 (let ((?x33204 (+ (- (+ (- ?x33196 ?x31942) (* (* 4.0 l_0_13_170) l_0_13_172)) ?x6123) (* (* 4.0 l_0_13_171) l_0_13_173))))
 (let ((?x33213 (- (- (- (- (+ (+ (- ?x33204 ?x33184) ?x31970) ?x31973) ?x31976) ?x31979) ?x33210) ?x33212)))
 (= (+ (+ ?x33213 ?x33214) ?x33216) 0.0)))))))))))))))))))))
(assert
 (let ((?x33216 (* l_0_13_87 l_0_13_87)))
 (let ((?x33214 (* l_0_13_86 l_0_13_86)))
 (let ((?x33212 (* l_0_13_59 l_0_13_59)))
 (let ((?x33210 (* l_0_13_58 l_0_13_58)))
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32001 (* ?x31978 l_0_13_36)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x31999 (* ?x31975 l_0_13_35)))
 (let ((?x31972 (* 2.0 l_0_13_3)))
 (let ((?x31997 (* ?x31972 l_0_13_8)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x31995 (* ?x31969 l_0_13_7)))
 (let ((?x33241 (+ (* (* 4.0 l_0_13_170) l_0_13_175) (* (* 4.0 l_0_13_171) l_0_13_176))))
 (let ((?x33248 (- (+ (+ (- (- (+ (+ ?x33241 ?x31995) ?x31997) ?x31999) ?x32001) ?x33210) ?x33212) ?x33214)))
 (= (- ?x33248 ?x33216) 0.0))))))))))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32028 (* ?x31978 l_0_13_40)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32026 (* ?x31975 l_0_13_39)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32020 (* ?x31638 l_0_13_3)))
 (let ((?x33263 (+ (+ (* (* 2.0 l_0_13_11) l_0_13_2) ?x32020) (* (* 4.0 l_0_13_170) l_0_13_179))))
 (= (- (- (+ ?x33263 (* (* 4.0 l_0_13_171) l_0_13_180)) ?x32026) ?x32028) 0.0)))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32057 (* ?x31978 l_0_13_45)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32055 (* ?x31975 l_0_13_44)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32053 (* ?x32052 l_0_13_3)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32050 (* ?x32049 l_0_13_2)))
 (let ((?x33282 (+ (+ (+ ?x32050 ?x32053) (* (* 4.0 l_0_13_170) l_0_13_184)) (* (* 4.0 l_0_13_171) l_0_13_185))))
 (= (- (- ?x33282 ?x32055) ?x32057) 0.0)))))))))))
(assert
 (let ((?x31978 (* 2.0 l_0_13_31)))
 (let ((?x32108 (* ?x31978 l_0_13_51)))
 (let ((?x31975 (* 2.0 l_0_13_30)))
 (let ((?x32106 (* ?x31975 l_0_13_50)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32104 (* ?x32103 l_0_13_3)))
 (let ((?x31969 (* 2.0 l_0_13_2)))
 (let ((?x32101 (* ?x31969 l_0_13_22)))
 (let ((?x33298 (+ (* (* 4.0 l_0_13_170) l_0_13_190) (* (* 4.0 l_0_13_171) l_0_13_191))))
 (= (- (- (+ (+ ?x33298 ?x32101) ?x32104) ?x32106) ?x32108) 0.0)))))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x33344 (* ?x32068 l_0_13_89)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x33342 (* ?x32065 l_0_13_88)))
 (let ((?x32147 (* l_0_13_6 l_0_13_6)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33339 (* ?x32062 l_0_13_61)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33337 (* ?x32059 l_0_13_60)))
 (let ((?x32145 (* l_0_13_5 l_0_13_5)))
 (let ((?x32143 (* l_0_13_4 l_0_13_4)))
 (let ((?x32141 (* l_0_13_34 l_0_13_34)))
 (let ((?x32139 (* l_0_13_33 l_0_13_33)))
 (let ((?x32137 (* l_0_13_32 l_0_13_32)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x31967 (* ?x31966 l_0_13_145)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x31965 (* ?x31964 l_0_13_144)))
 (let ((?x33314 (- (* (* (- 2.0) l_0_13_114) l_0_13_116) (* (* 2.0 l_0_13_115) l_0_13_117))))
 (let ((?x33322 (- (- (- (- ?x33314 ?x31965) ?x31967) (* (* 2.0 l_0_13_170) l_0_13_172)) (* (* 2.0 l_0_13_171) l_0_13_173))))
 (let ((?x33328 (+ (+ ?x33322 (* 2.0 (* l_0_13_172 l_0_13_172))) (* 2.0 (* l_0_13_173 l_0_13_173)))))
 (let ((?x33334 (- (- (- (+ ?x33328 (* 2.0 (* l_0_13_174 l_0_13_174))) ?x32137) ?x32139) ?x32141)))
 (let ((?x33345 (+ (+ (+ (- (- (+ (+ ?x33334 ?x32143) ?x32145) ?x33337) ?x33339) ?x32147) ?x33342) ?x33344)))
 (= ?x33345 0.0)))))))))))))))))))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x33399 (* ?x32068 l_0_13_92)))
 (let ((?x33344 (* ?x32068 l_0_13_89)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x33396 (* ?x32065 l_0_13_91)))
 (let ((?x33342 (* ?x32065 l_0_13_88)))
 (let ((?x32180 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33392 (* ?x32062 l_0_13_64)))
 (let ((?x33339 (* ?x32062 l_0_13_61)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33389 (* ?x32059 l_0_13_63)))
 (let ((?x33337 (* ?x32059 l_0_13_60)))
 (let ((?x32177 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x32174 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32171 (* ?x32170 l_0_13_37)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32168 (* ?x32167 l_0_13_36)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32165 (* ?x32164 l_0_13_35)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x21316 (* ?x31966 l_0_13_148)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x5252 (* ?x31964 l_0_13_147)))
 (let ((?x22291 (- (* (* (- 2.0) l_0_13_114) l_0_13_119) (* (* 2.0 l_0_13_115) l_0_13_120))))
 (let ((?x33373 (- (- (- (- ?x22291 ?x5252) ?x21316) (* (* 2.0 l_0_13_170) l_0_13_175)) (* (* 2.0 l_0_13_171) l_0_13_176))))
 (let ((?x33379 (+ (+ ?x33373 (* (* 4.0 l_0_13_172) l_0_13_175)) (* (* 4.0 l_0_13_173) l_0_13_176))))
 (let ((?x33385 (- (- (- (+ ?x33379 (* (* 4.0 l_0_13_174) l_0_13_177)) ?x32165) ?x32168) ?x32171)))
 (let ((?x33394 (+ (- (+ (- (+ (+ (+ ?x33385 ?x32174) ?x32177) ?x33337) ?x33389) ?x33339) ?x33392) ?x32180)))
 (= (+ (- (+ (- ?x33394 ?x33342) ?x33396) ?x33344) ?x33399) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x32069 (* ?x32068 l_0_13_96)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x32066 (* ?x32065 l_0_13_95)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x32063 (* ?x32062 l_0_13_68)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x32060 (* ?x32059 l_0_13_67)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32223 (* ?x32170 l_0_13_41)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32221 (* ?x32167 l_0_13_40)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32219 (* ?x32164 l_0_13_39)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32024 (* ?x31966 l_0_13_152)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32022 (* ?x31964 l_0_13_151)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32211 (* ?x31641 l_0_13_6)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32209 (* ?x31638 l_0_13_5)))
 (let ((?x33442 (- (* (* 2.0 l_0_13_11) l_0_13_4) (* (* 2.0 l_0_13_114) l_0_13_123))))
 (let ((?x33447 (- (+ (+ (- ?x33442 (* (* 2.0 l_0_13_115) l_0_13_124)) ?x32209) ?x32211) ?x32022)))
 (let ((?x33452 (- (- (- ?x33447 ?x32024) (* (* 2.0 l_0_13_170) l_0_13_179)) (* (* 2.0 l_0_13_171) l_0_13_180))))
 (let ((?x33456 (+ (+ ?x33452 (* (* 4.0 l_0_13_172) l_0_13_179)) (* (* 4.0 l_0_13_173) l_0_13_180))))
 (let ((?x33461 (- (- (- (+ ?x33456 (* (* 4.0 l_0_13_174) l_0_13_181)) ?x32219) ?x32221) ?x32223)))
 (= (+ (+ (- (- ?x33461 ?x32060) ?x32063) ?x32066) ?x32069) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33519 (* ?x32062 l_0_13_73)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33517 (* ?x32059 l_0_13_72)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32264 (* ?x32170 l_0_13_46)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32262 (* ?x32167 l_0_13_45)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32260 (* ?x32164 l_0_13_44)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32258 (* ?x32257 l_0_13_6)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32255 (* ?x32052 l_0_13_5)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32253 (* ?x32049 l_0_13_4)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32047 (* ?x31966 l_0_13_157)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32046 (* ?x31964 l_0_13_156)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x33493 (* ?x32760 l_0_13_87)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x6695 (* ?x22066 l_0_13_86)))
 (let ((?x33494 (+ ?x6695 ?x33493)))
 (let ((?x33498 (- (- ?x33494 (* (* 2.0 l_0_13_114) l_0_13_128)) (* (* 2.0 l_0_13_115) l_0_13_129))))
 (let ((?x33504 (- (+ (+ (- (- ?x33498 ?x32046) ?x32047) ?x32253) ?x32255) (* (* 2.0 l_0_13_170) l_0_13_184))))
 (let ((?x33508 (+ (- ?x33504 (* (* 2.0 l_0_13_171) l_0_13_185)) (* (* 4.0 l_0_13_172) l_0_13_184))))
 (let ((?x33512 (+ (+ ?x33508 (* (* 4.0 l_0_13_173) l_0_13_185)) (* (* 4.0 l_0_13_174) l_0_13_186))))
 (= (- (- (- (- (- (+ ?x33512 ?x32258) ?x32260) ?x32262) ?x32264) ?x33517) ?x33519) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33573 (* ?x32062 l_0_13_79)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33571 (* ?x32059 l_0_13_78)))
 (let ((?x32170 (* 2.0 l_0_13_34)))
 (let ((?x32329 (* ?x32170 l_0_13_52)))
 (let ((?x32167 (* 2.0 l_0_13_33)))
 (let ((?x32327 (* ?x32167 l_0_13_51)))
 (let ((?x32164 (* 2.0 l_0_13_32)))
 (let ((?x32325 (* ?x32164 l_0_13_50)))
 (let ((?x32322 (* 2.0 l_0_13_24)))
 (let ((?x32323 (* ?x32322 l_0_13_6)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32320 (* ?x32103 l_0_13_5)))
 (let ((?x32317 (* 2.0 l_0_13_22)))
 (let ((?x32318 (* ?x32317 l_0_13_4)))
 (let ((?x31966 (* 2.0 l_0_13_143)))
 (let ((?x32099 (* ?x31966 l_0_13_163)))
 (let ((?x31964 (* 2.0 l_0_13_142)))
 (let ((?x32098 (* ?x31964 l_0_13_162)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x33547 (* ?x31750 l_0_13_87)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x33546 (* ?x31747 l_0_13_86)))
 (let ((?x33548 (+ ?x33546 ?x33547)))
 (let ((?x33552 (- (- ?x33548 (* (* 2.0 l_0_13_114) l_0_13_134)) (* (* 2.0 l_0_13_115) l_0_13_135))))
 (let ((?x33558 (- (- (- (- ?x33552 ?x32098) ?x32099) (* (* 2.0 l_0_13_170) l_0_13_190)) (* (* 2.0 l_0_13_171) l_0_13_191))))
 (let ((?x33562 (+ (+ ?x33558 (* (* 4.0 l_0_13_172) l_0_13_190)) (* (* 4.0 l_0_13_173) l_0_13_191))))
 (let ((?x33567 (+ (+ (+ (+ ?x33562 (* (* 4.0 l_0_13_174) l_0_13_192)) ?x32318) ?x32320) ?x32323)))
 (= (- (- (- (- (- ?x33567 ?x32325) ?x32327) ?x32329) ?x33571) ?x33573) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x32381 (* l_0_13_9 l_0_13_9)))
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x33399 (* ?x32068 l_0_13_92)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x33396 (* ?x32065 l_0_13_91)))
 (let ((?x32379 (* l_0_13_8 l_0_13_8)))
 (let ((?x32377 (* l_0_13_7 l_0_13_7)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33392 (* ?x32062 l_0_13_64)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33389 (* ?x32059 l_0_13_63)))
 (let ((?x32375 (* l_0_13_38 l_0_13_38)))
 (let ((?x32373 (* l_0_13_37 l_0_13_37)))
 (let ((?x32371 (* l_0_13_36 l_0_13_36)))
 (let ((?x32369 (* l_0_13_35 l_0_13_35)))
 (let ((?x33615 (* l_0_13_178 l_0_13_178)))
 (let ((?x33616 (* 2.0 ?x33615)))
 (let ((?x33612 (* l_0_13_177 l_0_13_177)))
 (let ((?x33613 (* 2.0 ?x33612)))
 (let ((?x33609 (* l_0_13_176 l_0_13_176)))
 (let ((?x33610 (* 2.0 ?x33609)))
 (let ((?x33606 (* l_0_13_175 l_0_13_175)))
 (let ((?x33607 (* 2.0 ?x33606)))
 (let ((?x32385 (* l_0_13_10 l_0_13_10)))
 (let ((?x33620 (- (- (- (+ (+ (+ (+ ?x32385 ?x33607) ?x33610) ?x33613) ?x33616) ?x32369) ?x32371) ?x32373)))
 (let ((?x33627 (- (- (+ (+ (+ (+ (- ?x33620 ?x32375) ?x33389) ?x33392) ?x32377) ?x32379) ?x33396) ?x33399)))
 (= (+ ?x33627 ?x32381) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x32069 (* ?x32068 l_0_13_96)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x32066 (* ?x32065 l_0_13_95)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x32063 (* ?x32062 l_0_13_68)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x32060 (* ?x32059 l_0_13_67)))
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32425 (* ?x32424 l_0_13_42)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32422 (* ?x32421 l_0_13_41)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32419 (* ?x32418 l_0_13_40)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32416 (* ?x32415 l_0_13_39)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32401 (* ?x31641 l_0_13_9)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32399 (* ?x31638 l_0_13_8)))
 (let ((?x4787 (* 2.0 l_0_13_11)))
 (let ((?x32397 (* ?x4787 l_0_13_7)))
 (let ((?x33639 (+ (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_14) ?x32397) ?x32399) ?x32401) (* (* 4.0 l_0_13_175) l_0_13_179))))
 (let ((?x33645 (+ (+ ?x33639 (* (* 4.0 l_0_13_176) l_0_13_180)) (* (* 4.0 l_0_13_177) l_0_13_181))))
 (let ((?x33651 (- (- (- (+ ?x33645 (* (* 4.0 l_0_13_178) l_0_13_182)) ?x32416) ?x32419) ?x32422)))
 (= (- (- (+ (+ (- ?x33651 ?x32425) ?x32060) ?x32063) ?x32066) ?x32069) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33519 (* ?x32062 l_0_13_73)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33517 (* ?x32059 l_0_13_72)))
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32468 (* ?x32424 l_0_13_47)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32466 (* ?x32421 l_0_13_46)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32464 (* ?x32418 l_0_13_45)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32462 (* ?x32415 l_0_13_44)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32460 (* ?x32257 l_0_13_9)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32458 (* ?x32052 l_0_13_8)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32456 (* ?x32049 l_0_13_7)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x33493 (* ?x32760 l_0_13_87)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x6695 (* ?x22066 l_0_13_86)))
 (let ((?x33677 (+ (+ (- (- (* (* 2.0 l_0_13_10) l_0_13_19) ?x6695) ?x33493) ?x32456) ?x32458)))
 (let ((?x33681 (+ (+ ?x33677 (* (* 4.0 l_0_13_175) l_0_13_184)) (* (* 4.0 l_0_13_176) l_0_13_185))))
 (let ((?x33685 (+ (+ ?x33681 (* (* 4.0 l_0_13_177) l_0_13_186)) (* (* 4.0 l_0_13_178) l_0_13_187))))
 (let ((?x33692 (+ (+ (- (- (- (- (+ ?x33685 ?x32460) ?x32462) ?x32464) ?x32466) ?x32468) ?x33517) ?x33519)))
 (= ?x33692 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33573 (* ?x32062 l_0_13_79)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33571 (* ?x32059 l_0_13_78)))
 (let ((?x32424 (* 2.0 l_0_13_38)))
 (let ((?x32558 (* ?x32424 l_0_13_53)))
 (let ((?x32421 (* 2.0 l_0_13_37)))
 (let ((?x32556 (* ?x32421 l_0_13_52)))
 (let ((?x32418 (* 2.0 l_0_13_36)))
 (let ((?x32554 (* ?x32418 l_0_13_51)))
 (let ((?x32415 (* 2.0 l_0_13_35)))
 (let ((?x32552 (* ?x32415 l_0_13_50)))
 (let ((?x32322 (* 2.0 l_0_13_24)))
 (let ((?x32550 (* ?x32322 l_0_13_9)))
 (let ((?x32103 (* 2.0 l_0_13_23)))
 (let ((?x32548 (* ?x32103 l_0_13_8)))
 (let ((?x32317 (* 2.0 l_0_13_22)))
 (let ((?x32546 (* ?x32317 l_0_13_7)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x33547 (* ?x31750 l_0_13_87)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x33546 (* ?x31747 l_0_13_86)))
 (let ((?x22639 (+ (- (- (* (* 2.0 l_0_13_10) l_0_13_25) ?x33546) ?x33547) (* (* 4.0 l_0_13_175) l_0_13_190))))
 (let ((?x22597 (+ (+ ?x22639 (* (* 4.0 l_0_13_176) l_0_13_191)) (* (* 4.0 l_0_13_177) l_0_13_192))))
 (let ((?x22586 (+ (+ (+ (+ ?x22597 (* (* 4.0 l_0_13_178) l_0_13_193)) ?x32546) ?x32548) ?x32550)))
 (= (+ (+ (- (- (- (- ?x22586 ?x32552) ?x32554) ?x32556) ?x32558) ?x33571) ?x33573) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32625 (* l_0_13_43 l_0_13_43)))
 (let ((?x32623 (* l_0_13_42 l_0_13_42)))
 (let ((?x32621 (* l_0_13_41 l_0_13_41)))
 (let ((?x32619 (* l_0_13_40 l_0_13_40)))
 (let ((?x32617 (* l_0_13_39 l_0_13_39)))
 (let ((?x33708 (* l_0_13_183 l_0_13_183)))
 (let ((?x33709 (* 2.0 ?x33708)))
 (let ((?x33705 (* l_0_13_182 l_0_13_182)))
 (let ((?x33706 (* 2.0 ?x33705)))
 (let ((?x7247 (* l_0_13_181 l_0_13_181)))
 (let ((?x7251 (* 2.0 ?x7247)))
 (let ((?x22694 (* l_0_13_180 l_0_13_180)))
 (let ((?x7250 (* 2.0 ?x22694)))
 (let ((?x22718 (* l_0_13_179 l_0_13_179)))
 (let ((?x7278 (* 2.0 ?x22718)))
 (let ((?x32605 (* l_0_13_15 l_0_13_15)))
 (let ((?x32603 (* l_0_13_14 l_0_13_14)))
 (let ((?x32601 (* l_0_13_13 l_0_13_13)))
 (let ((?x22719 (+ (+ (+ (* l_0_13_11 l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x32601) ?x32603)))
 (let ((?x33711 (- (+ (+ (+ (+ (+ (+ ?x22719 ?x32605) ?x7278) ?x7250) ?x7251) ?x33706) ?x33709) ?x32617)))
 (= (- (- (- (- ?x33711 ?x32619) ?x32621) ?x32623) ?x32625) 0.0))))))))))))))))))))))
(assert
 (let ((?x31683 (* 2.0 l_0_13_43)))
 (let ((?x32679 (* ?x31683 l_0_13_48)))
 (let ((?x31680 (* 2.0 l_0_13_42)))
 (let ((?x32677 (* ?x31680 l_0_13_47)))
 (let ((?x31677 (* 2.0 l_0_13_41)))
 (let ((?x32675 (* ?x31677 l_0_13_46)))
 (let ((?x31674 (* 2.0 l_0_13_40)))
 (let ((?x32673 (* ?x31674 l_0_13_45)))
 (let ((?x31671 (* 2.0 l_0_13_39)))
 (let ((?x32671 (* ?x31671 l_0_13_44)))
 (let ((?x31650 (* 2.0 l_0_13_15)))
 (let ((?x32659 (* ?x31650 l_0_13_20)))
 (let ((?x31644 (* 2.0 l_0_13_14)))
 (let ((?x32657 (* ?x31644 l_0_13_19)))
 (let ((?x31641 (* 2.0 l_0_13_13)))
 (let ((?x32655 (* ?x31641 l_0_13_18)))
 (let ((?x31638 (* 2.0 l_0_13_12)))
 (let ((?x32653 (* ?x31638 l_0_13_17)))
 (let ((?x22857 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_16) ?x32653) ?x32655) ?x32657) ?x32659)))
 (let ((?x7301 (+ (+ ?x22857 (* (* 4.0 l_0_13_179) l_0_13_184)) (* (* 4.0 l_0_13_180) l_0_13_185))))
 (let ((?x33718 (+ (+ ?x7301 (* (* 4.0 l_0_13_181) l_0_13_186)) (* (* 4.0 l_0_13_182) l_0_13_187))))
 (let ((?x33723 (- (- (- (+ ?x33718 (* (* 4.0 l_0_13_183) l_0_13_188)) ?x32671) ?x32673) ?x32675)))
 (= (- (- ?x33723 ?x32677) ?x32679) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32806 (* l_0_13_49 l_0_13_49)))
 (let ((?x32804 (* l_0_13_48 l_0_13_48)))
 (let ((?x32802 (* l_0_13_47 l_0_13_47)))
 (let ((?x32800 (* l_0_13_46 l_0_13_46)))
 (let ((?x32798 (* l_0_13_45 l_0_13_45)))
 (let ((?x32796 (* l_0_13_44 l_0_13_44)))
 (let ((?x32794 (* l_0_13_21 l_0_13_21)))
 (let ((?x32792 (* l_0_13_20 l_0_13_20)))
 (let ((?x32790 (* l_0_13_19 l_0_13_19)))
 (let ((?x33737 (* l_0_13_189 l_0_13_189)))
 (let ((?x33738 (* 2.0 ?x33737)))
 (let ((?x33734 (* l_0_13_188 l_0_13_188)))
 (let ((?x33735 (* 2.0 ?x33734)))
 (let ((?x22873 (* l_0_13_187 l_0_13_187)))
 (let ((?x22869 (* 2.0 ?x22873)))
 (let ((?x7360 (* l_0_13_186 l_0_13_186)))
 (let ((?x7384 (* 2.0 ?x7360)))
 (let ((?x22874 (* l_0_13_185 l_0_13_185)))
 (let ((?x22858 (* 2.0 ?x22874)))
 (let ((?x7366 (* l_0_13_184 l_0_13_184)))
 (let ((?x22868 (* 2.0 ?x7366)))
 (let ((?x32788 (* l_0_13_18 l_0_13_18)))
 (let ((?x22871 (+ (+ (+ (* l_0_13_16 l_0_13_16) (* l_0_13_17 l_0_13_17)) ?x32788) ?x22868)))
 (let ((?x33741 (+ (+ (+ (+ (+ (+ (+ ?x22871 ?x22858) ?x7384) ?x22869) ?x33735) ?x33738) ?x32790) ?x32792)))
 (let ((?x33748 (- (- (- (- (- (- (+ ?x33741 ?x32794) ?x32796) ?x32798) ?x32800) ?x32802) ?x32804) ?x32806)))
 (= ?x33748 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33088 (* ?x31915 l_0_13_86)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33086 (* ?x31912 l_0_13_58)))
 (let ((?x32929 (* (* 2.0 l_0_13_49) l_0_13_55)))
 (let ((?x32926 (* (* 2.0 l_0_13_48) l_0_13_54)))
 (let ((?x32923 (* (* 2.0 l_0_13_47) l_0_13_53)))
 (let ((?x32920 (* (* 2.0 l_0_13_46) l_0_13_52)))
 (let ((?x32917 (* (* 2.0 l_0_13_45) l_0_13_51)))
 (let ((?x32914 (* (* 2.0 l_0_13_44) l_0_13_50)))
 (let ((?x32911 (* (* 2.0 l_0_13_21) l_0_13_27)))
 (let ((?x32908 (* (* 2.0 l_0_13_20) l_0_13_26)))
 (let ((?x32905 (* (* 2.0 l_0_13_19) l_0_13_25)))
 (let ((?x32257 (* 2.0 l_0_13_18)))
 (let ((?x32902 (* ?x32257 l_0_13_24)))
 (let ((?x32052 (* 2.0 l_0_13_17)))
 (let ((?x32900 (* ?x32052 l_0_13_23)))
 (let ((?x32049 (* 2.0 l_0_13_16)))
 (let ((?x32892 (* ?x32049 l_0_13_22)))
 (let ((?x33750 (+ (+ (+ (+ ?x32892 ?x32900) ?x32902) (* (* 4.0 l_0_13_184) l_0_13_190)) (* (* 4.0 l_0_13_185) l_0_13_191))))
 (let ((?x33756 (+ (+ ?x33750 (* (* 4.0 l_0_13_186) l_0_13_192)) (* (* 4.0 l_0_13_187) l_0_13_193))))
 (let ((?x33762 (+ (+ ?x33756 (* (* 4.0 l_0_13_188) l_0_13_194)) (* (* 4.0 l_0_13_189) l_0_13_195))))
 (let ((?x33769 (- (- (- (- (+ (+ (+ ?x33762 ?x32905) ?x32908) ?x32911) ?x32914) ?x32917) ?x32920) ?x32923)))
 (= (+ (- (- (- ?x33769 ?x32926) ?x32929) ?x33086) ?x33088) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x33044 (* l_0_13_56 l_0_13_56)))
 (let ((?x33042 (* l_0_13_55 l_0_13_55)))
 (let ((?x33040 (* l_0_13_54 l_0_13_54)))
 (let ((?x33038 (* l_0_13_53 l_0_13_53)))
 (let ((?x33036 (* l_0_13_52 l_0_13_52)))
 (let ((?x33034 (* l_0_13_51 l_0_13_51)))
 (let ((?x33032 (* l_0_13_50 l_0_13_50)))
 (let ((?x33030 (* l_0_13_28 l_0_13_28)))
 (let ((?x33028 (* l_0_13_27 l_0_13_27)))
 (let ((?x33026 (* l_0_13_26 l_0_13_26)))
 (let ((?x33024 (* l_0_13_25 l_0_13_25)))
 (let ((?x33022 (* l_0_13_24 l_0_13_24)))
 (let ((?x33020 (* l_0_13_23 l_0_13_23)))
 (let ((?x33018 (* l_0_13_22 l_0_13_22)))
 (let ((?x7507 (* l_0_13_196 l_0_13_196)))
 (let ((?x7504 (* 2.0 ?x7507)))
 (let ((?x7410 (* l_0_13_195 l_0_13_195)))
 (let ((?x7413 (* 2.0 ?x7410)))
 (let ((?x22939 (* l_0_13_194 l_0_13_194)))
 (let ((?x7501 (* 2.0 ?x22939)))
 (let ((?x22934 (* l_0_13_193 l_0_13_193)))
 (let ((?x7465 (* 2.0 ?x22934)))
 (let ((?x22966 (* l_0_13_192 l_0_13_192)))
 (let ((?x22967 (* 2.0 ?x22966)))
 (let ((?x7505 (* l_0_13_191 l_0_13_191)))
 (let ((?x7499 (* 2.0 ?x7505)))
 (let ((?x7510 (* l_0_13_190 l_0_13_190)))
 (let ((?x7515 (* 2.0 ?x7510)))
 (let ((?x7496 (+ (+ (+ (+ (+ (+ (+ ?x7515 ?x7499) ?x22967) ?x7465) ?x7501) ?x7413) ?x7504) ?x33018)))
 (let ((?x33789 (- (+ (+ (+ (+ (+ (+ ?x7496 ?x33020) ?x33022) ?x33024) ?x33026) ?x33028) ?x33030) ?x33032)))
 (= (- (- (- (- (- (- ?x33789 ?x33034) ?x33036) ?x33038) ?x33040) ?x33042) ?x33044) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x33814 (* l_0_13_85 l_0_13_85)))
 (let ((?x33812 (* l_0_13_57 l_0_13_57)))
 (let ((?x33799 (- (* (* (- 2.0) l_0_13_212) l_0_13_218) (* (* 2.0 l_0_13_213) l_0_13_219))))
 (let ((?x33805 (- (- ?x33799 (* (* 2.0 l_0_13_214) l_0_13_220)) (* (* 2.0 l_0_13_215) l_0_13_221))))
 (let ((?x33811 (- (- ?x33805 (* (* 2.0 l_0_13_216) l_0_13_222)) (* (* 2.0 l_0_13_217) l_0_13_223))))
 (= (+ (- ?x33811 ?x33812) ?x33814) 0.0)))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33899 (* ?x31915 l_0_13_88)))
 (let ((?x33897 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x33894 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x33891 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x33888 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x33885 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x33882 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33879 (* ?x31912 l_0_13_60)))
 (let ((?x32898 (* (* 2.0 l_0_13_161) l_0_13_167)))
 (let ((?x32895 (* (* 2.0 l_0_13_160) l_0_13_166)))
 (let ((?x32890 (* (* 2.0 l_0_13_159) l_0_13_165)))
 (let ((?x32887 (* (* 2.0 l_0_13_158) l_0_13_164)))
 (let ((?x32884 (* (* 2.0 l_0_13_157) l_0_13_163)))
 (let ((?x32881 (* (* 2.0 l_0_13_156) l_0_13_162)))
 (let ((?x7623 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x7627 (* ?x32769 l_0_13_110)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x23082 (* ?x32766 l_0_13_109)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x23048 (* ?x32763 l_0_13_108)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x7624 (* ?x32760 l_0_13_107)))
 (let ((?x7622 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_106) ?x7624) ?x23048) ?x23082) ?x7627)))
 (let ((?x33836 (+ ?x7622 ?x7623)))
 (let ((?x33842 (- (- ?x33836 (* (* 2.0 l_0_13_128) l_0_13_134)) (* (* 2.0 l_0_13_129) l_0_13_135))))
 (let ((?x33848 (- (- ?x33842 (* (* 2.0 l_0_13_130) l_0_13_136)) (* (* 2.0 l_0_13_131) l_0_13_137))))
 (let ((?x33854 (- (- ?x33848 (* (* 2.0 l_0_13_132) l_0_13_138)) (* (* 2.0 l_0_13_133) l_0_13_139))))
 (let ((?x33863 (- (- (- (- (- (- (- ?x33854 ?x32881) ?x32884) ?x32887) ?x32890) ?x32895) ?x32898) (* (* 2.0 l_0_13_184) l_0_13_190))))
 (let ((?x33869 (- (- ?x33863 (* (* 2.0 l_0_13_185) l_0_13_191)) (* (* 2.0 l_0_13_186) l_0_13_192))))
 (let ((?x33875 (- (- ?x33869 (* (* 2.0 l_0_13_187) l_0_13_193)) (* (* 2.0 l_0_13_188) l_0_13_194))))
 (let ((?x33886 (- (- (- (- ?x33875 (* (* 2.0 l_0_13_189) l_0_13_195)) ?x33879) ?x33882) ?x33885)))
 (= (+ (- (- (- (- ?x33886 ?x33888) ?x33891) ?x33894) ?x33897) ?x33899) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33967 (* ?x31915 l_0_13_91)))
 (let ((?x33897 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x33894 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x33891 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x33888 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x33885 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x33882 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33959 (* ?x31912 l_0_13_63)))
 (let ((?x7623 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x7627 (* ?x32769 l_0_13_110)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x23082 (* ?x32766 l_0_13_109)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x23048 (* ?x32763 l_0_13_108)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x7624 (* ?x32760 l_0_13_107)))
 (let ((?x33957 (- (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_106) ?x7624) ?x23048) ?x23082) ?x7627)))
 (let ((?x33965 (+ (+ (+ (+ (+ (- (- ?x33957 ?x7623) ?x33959) ?x33882) ?x33885) ?x33888) ?x33891) ?x33894)))
 (= (+ (+ ?x33965 ?x33897) ?x33967) 0.0)))))))))))))))))))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x7942 (* ?x31912 l_0_13_72)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x7941 (* ?x22066 l_0_13_85)))
 (= (- ?x7941 ?x7942) 0.0))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33970 (* ?x31912 l_0_13_78)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x7948 (* ?x31747 l_0_13_85)))
 (= (- ?x7948 ?x33970) 0.0))))))
(assert
 (let ((?x33216 (* l_0_13_87 l_0_13_87)))
 (let ((?x33214 (* l_0_13_86 l_0_13_86)))
 (let ((?x33983 (+ (- (* (- l_0_13_58) l_0_13_58) (* l_0_13_59 l_0_13_59)) ?x33214)))
 (= (+ ?x33983 ?x33216) 0.0)))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x33344 (* ?x32068 l_0_13_89)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x33342 (* ?x32065 l_0_13_88)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33339 (* ?x32062 l_0_13_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_58) l_0_13_60) ?x33339) ?x33342) ?x33344) 0.0))))))))
(assert
 (let ((?x32068 (* 2.0 l_0_13_87)))
 (let ((?x33399 (* ?x32068 l_0_13_92)))
 (let ((?x32065 (* 2.0 l_0_13_86)))
 (let ((?x33396 (* ?x32065 l_0_13_91)))
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33392 (* ?x32062 l_0_13_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_58) l_0_13_63) ?x33392) ?x33396) ?x33399) 0.0))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33519 (* ?x32062 l_0_13_73)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33517 (* ?x32059 l_0_13_72)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x33493 (* ?x32760 l_0_13_87)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x6695 (* ?x22066 l_0_13_86)))
 (let ((?x33494 (+ ?x6695 ?x33493)))
 (= (- (- ?x33494 ?x33517) ?x33519) 0.0)))))))))))
(assert
 (let ((?x32062 (* 2.0 l_0_13_59)))
 (let ((?x33573 (* ?x32062 l_0_13_79)))
 (let ((?x32059 (* 2.0 l_0_13_58)))
 (let ((?x33571 (* ?x32059 l_0_13_78)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x33547 (* ?x31750 l_0_13_87)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x33546 (* ?x31747 l_0_13_86)))
 (let ((?x33548 (+ ?x33546 ?x33547)))
 (= (- (- ?x33548 ?x33571) ?x33573) 0.0)))))))))))
(assert
 (let ((?x34034 (* l_0_13_90 l_0_13_90)))
 (let ((?x34032 (* l_0_13_89 l_0_13_89)))
 (let ((?x34030 (* l_0_13_88 l_0_13_88)))
 (let ((?x34028 (* l_0_13_62 l_0_13_62)))
 (let ((?x34029 (- (- (* (- l_0_13_60) l_0_13_60) (* l_0_13_61 l_0_13_61)) ?x34028)))
 (= (+ (+ (+ ?x34029 ?x34030) ?x34032) ?x34034) 0.0)))))))
(assert
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x34061 (* ?x32281 l_0_13_93)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x34059 (* ?x32278 l_0_13_92)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x34057 (* ?x32275 l_0_13_91)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34055 (* ?x32272 l_0_13_65)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34053 (* ?x32269 l_0_13_64)))
 (let ((?x34060 (+ (+ (- (- (* (* (- 2.0) l_0_13_60) l_0_13_63) ?x34053) ?x34055) ?x34057) ?x34059)))
 (= (+ ?x34060 ?x34061) 0.0)))))))))))))
(assert
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34084 (* ?x32272 l_0_13_74)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34082 (* ?x32269 l_0_13_73)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34080 (* ?x32266 l_0_13_72)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x34072 (* ?x32763 l_0_13_90)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x23731 (* ?x32760 l_0_13_89)))
 (let ((?x34079 (+ (+ (* (* 2.0 l_0_13_100) l_0_13_88) ?x23731) ?x34072)))
 (= (- (- (- ?x34079 ?x34080) ?x34082) ?x34084) 0.0)))))))))))))
(assert
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34112 (* ?x32272 l_0_13_80)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34110 (* ?x32269 l_0_13_79)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34108 (* ?x32266 l_0_13_78)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x34106 (* ?x31753 l_0_13_90)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x34104 (* ?x31750 l_0_13_89)))
 (let ((?x34107 (+ (+ (* (* 2.0 l_0_13_106) l_0_13_88) ?x34104) ?x34106)))
 (= (- (- (- ?x34107 ?x34108) ?x34110) ?x34112) 0.0)))))))))))))
(assert
 (let ((?x34146 (* l_0_13_94 l_0_13_94)))
 (let ((?x34144 (* l_0_13_93 l_0_13_93)))
 (let ((?x34142 (* l_0_13_92 l_0_13_92)))
 (let ((?x34140 (* l_0_13_91 l_0_13_91)))
 (let ((?x34138 (* l_0_13_66 l_0_13_66)))
 (let ((?x34136 (* l_0_13_65 l_0_13_65)))
 (let ((?x34137 (- (- (* (- l_0_13_63) l_0_13_63) (* l_0_13_64 l_0_13_64)) ?x34136)))
 (= (+ (+ (+ (+ (- ?x34137 ?x34138) ?x34140) ?x34142) ?x34144) ?x34146) 0.0)))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34176 (* ?x32479 l_0_13_75)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34174 (* ?x32476 l_0_13_74)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34172 (* ?x32473 l_0_13_73)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34170 (* ?x32470 l_0_13_72)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x34168 (* ?x32766 l_0_13_94)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x34166 (* ?x32763 l_0_13_93)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x34164 (* ?x32760 l_0_13_92)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x34157 (* ?x22066 l_0_13_91)))
 (let ((?x34177 (- (- (- (- (+ (+ (+ ?x34157 ?x34164) ?x34166) ?x34168) ?x34170) ?x34172) ?x34174) ?x34176)))
 (= ?x34177 0.0)))))))))))))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34212 (* ?x32479 l_0_13_81)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34210 (* ?x32476 l_0_13_80)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34208 (* ?x32473 l_0_13_79)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34206 (* ?x32470 l_0_13_78)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x34204 (* ?x31756 l_0_13_94)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x34202 (* ?x31753 l_0_13_93)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x34200 (* ?x31750 l_0_13_92)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x34199 (* ?x31747 l_0_13_91)))
 (let ((?x34213 (- (- (- (- (+ (+ (+ ?x34199 ?x34200) ?x34202) ?x34204) ?x34206) ?x34208) ?x34210) ?x34212)))
 (= ?x34213 0.0)))))))))))))))))))
(assert
 (let ((?x34262 (* l_0_13_77 l_0_13_77)))
 (let ((?x34260 (* l_0_13_76 l_0_13_76)))
 (let ((?x34258 (* l_0_13_75 l_0_13_75)))
 (let ((?x34256 (* l_0_13_74 l_0_13_74)))
 (let ((?x34254 (* l_0_13_73 l_0_13_73)))
 (let ((?x34252 (* l_0_13_72 l_0_13_72)))
 (let ((?x34250 (* l_0_13_105 l_0_13_105)))
 (let ((?x34248 (* l_0_13_104 l_0_13_104)))
 (let ((?x34246 (* l_0_13_103 l_0_13_103)))
 (let ((?x34244 (* l_0_13_102 l_0_13_102)))
 (let ((?x34245 (+ (+ (* l_0_13_100 l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x34244)))
 (let ((?x34251 (+ (+ (+ ?x34245 ?x34246) ?x34248) ?x34250)))
 (= (- (- (- (- (- (- ?x34251 ?x34252) ?x34254) ?x34256) ?x34258) ?x34260) ?x34262) 0.0))))))))))))))
(assert
 (let ((?x33897 (* (* 2.0 l_0_13_77) l_0_13_83)))
 (let ((?x33894 (* (* 2.0 l_0_13_76) l_0_13_82)))
 (let ((?x33891 (* (* 2.0 l_0_13_75) l_0_13_81)))
 (let ((?x33888 (* (* 2.0 l_0_13_74) l_0_13_80)))
 (let ((?x33885 (* (* 2.0 l_0_13_73) l_0_13_79)))
 (let ((?x33882 (* (* 2.0 l_0_13_72) l_0_13_78)))
 (let ((?x7623 (* (* 2.0 l_0_13_105) l_0_13_111)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x7627 (* ?x32769 l_0_13_110)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x23082 (* ?x32766 l_0_13_109)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x23048 (* ?x32763 l_0_13_108)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x7624 (* ?x32760 l_0_13_107)))
 (let ((?x7622 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_106) ?x7624) ?x23048) ?x23082) ?x7627)))
 (let ((?x33836 (+ ?x7622 ?x7623)))
 (= (- (- (- (- (- (- ?x33836 ?x33882) ?x33885) ?x33888) ?x33891) ?x33894) ?x33897) 0.0)))))))))))))))))))
(assert
 (let ((?x34318 (* l_0_13_84 l_0_13_84)))
 (let ((?x34316 (* l_0_13_83 l_0_13_83)))
 (let ((?x34314 (* l_0_13_82 l_0_13_82)))
 (let ((?x34312 (* l_0_13_81 l_0_13_81)))
 (let ((?x34310 (* l_0_13_80 l_0_13_80)))
 (let ((?x34308 (* l_0_13_79 l_0_13_79)))
 (let ((?x34306 (* l_0_13_78 l_0_13_78)))
 (let ((?x34304 (* l_0_13_112 l_0_13_112)))
 (let ((?x34302 (* l_0_13_111 l_0_13_111)))
 (let ((?x34300 (* l_0_13_110 l_0_13_110)))
 (let ((?x34298 (* l_0_13_109 l_0_13_109)))
 (let ((?x34296 (* l_0_13_108 l_0_13_108)))
 (let ((?x34297 (+ (+ (* l_0_13_106 l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34296)))
 (let ((?x34305 (+ (+ (+ (+ ?x34297 ?x34298) ?x34300) ?x34302) ?x34304)))
 (let ((?x34319 (- (- (- (- (- (- (- ?x34305 ?x34306) ?x34308) ?x34310) ?x34312) ?x34314) ?x34316) ?x34318)))
 (= ?x34319 0.0)))))))))))))))))
(assert
 (let ((?x33814 (* l_0_13_85 l_0_13_85)))
 (let ((?x33812 (* l_0_13_57 l_0_13_57)))
 (let ((?x31622 (* l_0_13_169 l_0_13_169)))
 (let ((?x34334 (- (- (* (- l_0_13_113) l_0_13_113) (* l_0_13_141 l_0_13_141)) ?x31622)))
 (= (+ (- (- ?x34334 (* (* 2.0 l_0_13_197) l_0_13_200)) ?x33812) ?x33814) 0.0))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33899 (* ?x31915 l_0_13_88)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33879 (* ?x31912 l_0_13_60)))
 (let ((?x34349 (* l_0_13_202 l_0_13_202)))
 (let ((?x34347 (* l_0_13_201 l_0_13_201)))
 (let ((?x34345 (* l_0_13_200 l_0_13_200)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31777 (* ?x31647 l_0_13_144)))
 (let ((?x34344 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_116) ?x31777) (* (* 2.0 l_0_13_169) l_0_13_172))))
 (= (+ (- (- (- (- ?x34344 ?x34345) ?x34347) ?x34349) ?x33879) ?x33899) 0.0))))))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33967 (* ?x31915 l_0_13_91)))
 (let ((?x33899 (* ?x31915 l_0_13_88)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33959 (* ?x31912 l_0_13_63)))
 (let ((?x33879 (* ?x31912 l_0_13_60)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31887 (* ?x31647 l_0_13_147)))
 (let ((?x34370 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_119) ?x31887) (* (* 2.0 l_0_13_169) l_0_13_175))))
 (let ((?x34376 (- (- ?x34370 (* (* 2.0 l_0_13_200) l_0_13_203)) (* (* 2.0 l_0_13_201) l_0_13_204))))
 (let ((?x34382 (- (- (+ (- ?x34376 (* (* 2.0 l_0_13_202) l_0_13_205)) ?x33879) ?x33959) ?x33899)))
 (= (+ ?x34382 ?x33967) 0.0)))))))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x31916 (* ?x31915 l_0_13_95)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x31913 (* ?x31912 l_0_13_67)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x5175 (* ?x31647 l_0_13_151)))
 (let ((?x34404 (- (- (* (* (- 2.0) l_0_13_113) l_0_13_123) ?x5175) (* (* 2.0 l_0_13_169) l_0_13_179))))
 (let ((?x34408 (- (- ?x34404 (* (* 2.0 l_0_13_200) l_0_13_207)) (* (* 2.0 l_0_13_201) l_0_13_208))))
 (= (+ (- (- ?x34408 (* (* 2.0 l_0_13_202) l_0_13_209)) ?x31913) ?x31916) 0.0))))))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x7942 (* ?x31912 l_0_13_72)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31902 (* ?x31647 l_0_13_156)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x7941 (* ?x22066 l_0_13_85)))
 (let ((?x34427 (- (- (- ?x7941 (* (* 2.0 l_0_13_113) l_0_13_128)) ?x31902) (* (* 2.0 l_0_13_169) l_0_13_184))))
 (let ((?x34431 (- (- ?x34427 (* (* 2.0 l_0_13_200) l_0_13_212)) (* (* 2.0 l_0_13_201) l_0_13_213))))
 (= (- (- ?x34431 (* (* 2.0 l_0_13_202) l_0_13_214)) ?x7942) 0.0))))))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33970 (* ?x31912 l_0_13_78)))
 (let ((?x31647 (* 2.0 l_0_13_141)))
 (let ((?x31934 (* ?x31647 l_0_13_162)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x7948 (* ?x31747 l_0_13_85)))
 (let ((?x34442 (- (- (- ?x7948 (* (* 2.0 l_0_13_113) l_0_13_134)) ?x31934) (* (* 2.0 l_0_13_169) l_0_13_190))))
 (let ((?x34446 (- (- ?x34442 (* (* 2.0 l_0_13_200) l_0_13_218)) (* (* 2.0 l_0_13_201) l_0_13_219))))
 (= (- (- ?x34446 (* (* 2.0 l_0_13_202) l_0_13_220)) ?x33970) 0.0))))))))))
(assert
 (let ((?x34034 (* l_0_13_90 l_0_13_90)))
 (let ((?x34032 (* l_0_13_89 l_0_13_89)))
 (let ((?x34030 (* l_0_13_88 l_0_13_88)))
 (let ((?x34028 (* l_0_13_62 l_0_13_62)))
 (let ((?x34026 (* l_0_13_61 l_0_13_61)))
 (let ((?x34038 (* l_0_13_60 l_0_13_60)))
 (let ((?x33329 (* l_0_13_174 l_0_13_174)))
 (let ((?x33326 (* l_0_13_173 l_0_13_173)))
 (let ((?x33323 (* l_0_13_172 l_0_13_172)))
 (let ((?x32135 (* l_0_13_146 l_0_13_146)))
 (let ((?x32127 (* l_0_13_145 l_0_13_145)))
 (let ((?x32125 (* l_0_13_144 l_0_13_144)))
 (let ((?x34466 (* l_0_13_118 l_0_13_118)))
 (let ((?x34467 (- (- (* (- l_0_13_116) l_0_13_116) (* l_0_13_117 l_0_13_117)) ?x34466)))
 (let ((?x34474 (- (- (- (- (- (- (- ?x34467 ?x32125) ?x32127) ?x32135) ?x33323) ?x33326) ?x33329) ?x34038)))
 (= (+ (+ (+ (- (- ?x34474 ?x34026) ?x34028) ?x34030) ?x34032) ?x34034) 0.0)))))))))))))))))
(assert
 (let ((?x34034 (* l_0_13_90 l_0_13_90)))
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x34061 (* ?x32281 l_0_13_93)))
 (let ((?x34032 (* l_0_13_89 l_0_13_89)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x34059 (* ?x32278 l_0_13_92)))
 (let ((?x34030 (* l_0_13_88 l_0_13_88)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x34057 (* ?x32275 l_0_13_91)))
 (let ((?x34028 (* l_0_13_62 l_0_13_62)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34055 (* ?x32272 l_0_13_65)))
 (let ((?x34026 (* l_0_13_61 l_0_13_61)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34053 (* ?x32269 l_0_13_64)))
 (let ((?x34038 (* l_0_13_60 l_0_13_60)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34498 (* ?x32266 l_0_13_63)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32162 (* ?x32161 l_0_13_149)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32159 (* ?x32158 l_0_13_148)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32157 (* ?x32156 l_0_13_147)))
 (let ((?x24541 (- (* (* (- 2.0) l_0_13_116) l_0_13_119) (* (* 2.0 l_0_13_117) l_0_13_120))))
 (let ((?x24509 (- (- (- (- ?x24541 (* (* 2.0 l_0_13_118) l_0_13_121)) ?x32157) ?x32159) ?x32162)))
 (let ((?x34494 (- (- ?x24509 (* (* 2.0 l_0_13_172) l_0_13_175)) (* (* 2.0 l_0_13_173) l_0_13_176))))
 (let ((?x34501 (- (+ (- (- ?x34494 (* (* 2.0 l_0_13_174) l_0_13_177)) ?x34498) ?x34038) ?x34053)))
 (let ((?x34508 (- (+ (- (+ (+ (- (+ ?x34501 ?x34026) ?x34055) ?x34028) ?x34057) ?x34030) ?x34059) ?x34032)))
 (= (- (+ ?x34508 ?x34061) ?x34034) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x32282 (* ?x32281 l_0_13_97)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x32279 (* ?x32278 l_0_13_96)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x32276 (* ?x32275 l_0_13_95)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x32273 (* ?x32272 l_0_13_69)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x32270 (* ?x32269 l_0_13_68)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x32267 (* ?x32266 l_0_13_67)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32217 (* ?x32161 l_0_13_153)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32215 (* ?x32158 l_0_13_152)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32213 (* ?x32156 l_0_13_151)))
 (let ((?x34533 (- (* (* (- 2.0) l_0_13_116) l_0_13_123) (* (* 2.0 l_0_13_117) l_0_13_124))))
 (let ((?x34538 (- (- (- (- ?x34533 (* (* 2.0 l_0_13_118) l_0_13_125)) ?x32213) ?x32215) ?x32217)))
 (let ((?x34542 (- (- ?x34538 (* (* 2.0 l_0_13_172) l_0_13_179)) (* (* 2.0 l_0_13_173) l_0_13_180))))
 (let ((?x34547 (- (- (- (- ?x34542 (* (* 2.0 l_0_13_174) l_0_13_181)) ?x32267) ?x32270) ?x32273)))
 (= (+ (+ (+ ?x34547 ?x32276) ?x32279) ?x32282) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34084 (* ?x32272 l_0_13_74)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34082 (* ?x32269 l_0_13_73)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34080 (* ?x32266 l_0_13_72)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x32251 (* ?x32161 l_0_13_158)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x32249 (* ?x32158 l_0_13_157)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x32248 (* ?x32156 l_0_13_156)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x34072 (* ?x32763 l_0_13_90)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x23731 (* ?x32760 l_0_13_89)))
 (let ((?x34079 (+ (+ (* (* 2.0 l_0_13_100) l_0_13_88) ?x23731) ?x34072)))
 (let ((?x24599 (- (- ?x34079 (* (* 2.0 l_0_13_116) l_0_13_128)) (* (* 2.0 l_0_13_117) l_0_13_129))))
 (let ((?x34561 (- (- (- (- ?x24599 (* (* 2.0 l_0_13_118) l_0_13_130)) ?x32248) ?x32249) ?x32251)))
 (let ((?x34565 (- (- ?x34561 (* (* 2.0 l_0_13_172) l_0_13_184)) (* (* 2.0 l_0_13_173) l_0_13_185))))
 (let ((?x34570 (- (- (- (- ?x34565 (* (* 2.0 l_0_13_174) l_0_13_186)) ?x34080) ?x34082) ?x34084)))
 (= ?x34570 0.0)))))))))))))))))))))))
(assert
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34112 (* ?x32272 l_0_13_80)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34110 (* ?x32269 l_0_13_79)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34108 (* ?x32266 l_0_13_78)))
 (let ((?x32161 (* 2.0 l_0_13_146)))
 (let ((?x21924 (* ?x32161 l_0_13_164)))
 (let ((?x32158 (* 2.0 l_0_13_145)))
 (let ((?x5604 (* ?x32158 l_0_13_163)))
 (let ((?x32156 (* 2.0 l_0_13_144)))
 (let ((?x21416 (* ?x32156 l_0_13_162)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x34106 (* ?x31753 l_0_13_90)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x34104 (* ?x31750 l_0_13_89)))
 (let ((?x34107 (+ (+ (* (* 2.0 l_0_13_106) l_0_13_88) ?x34104) ?x34106)))
 (let ((?x24685 (- (- ?x34107 (* (* 2.0 l_0_13_116) l_0_13_134)) (* (* 2.0 l_0_13_117) l_0_13_135))))
 (let ((?x34588 (- (- (- (- ?x24685 (* (* 2.0 l_0_13_118) l_0_13_136)) ?x21416) ?x5604) ?x21924)))
 (let ((?x34592 (- (- ?x34588 (* (* 2.0 l_0_13_172) l_0_13_190)) (* (* 2.0 l_0_13_173) l_0_13_191))))
 (let ((?x34597 (- (- (- (- ?x34592 (* (* 2.0 l_0_13_174) l_0_13_192)) ?x34108) ?x34110) ?x34112)))
 (= ?x34597 0.0)))))))))))))))))))))))
(assert
 (let ((?x34146 (* l_0_13_94 l_0_13_94)))
 (let ((?x34144 (* l_0_13_93 l_0_13_93)))
 (let ((?x34142 (* l_0_13_92 l_0_13_92)))
 (let ((?x34140 (* l_0_13_91 l_0_13_91)))
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x34061 (* ?x32281 l_0_13_93)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x34059 (* ?x32278 l_0_13_92)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x34057 (* ?x32275 l_0_13_91)))
 (let ((?x34138 (* l_0_13_66 l_0_13_66)))
 (let ((?x34136 (* l_0_13_65 l_0_13_65)))
 (let ((?x34134 (* l_0_13_64 l_0_13_64)))
 (let ((?x23901 (* l_0_13_63 l_0_13_63)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34055 (* ?x32272 l_0_13_65)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34053 (* ?x32269 l_0_13_64)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34498 (* ?x32266 l_0_13_63)))
 (let ((?x33615 (* l_0_13_178 l_0_13_178)))
 (let ((?x33612 (* l_0_13_177 l_0_13_177)))
 (let ((?x33609 (* l_0_13_176 l_0_13_176)))
 (let ((?x33606 (* l_0_13_175 l_0_13_175)))
 (let ((?x32367 (* l_0_13_150 l_0_13_150)))
 (let ((?x32365 (* l_0_13_149 l_0_13_149)))
 (let ((?x32363 (* l_0_13_148 l_0_13_148)))
 (let ((?x32361 (* l_0_13_147 l_0_13_147)))
 (let ((?x9261 (* l_0_13_122 l_0_13_122)))
 (let ((?x9284 (* l_0_13_121 l_0_13_121)))
 (let ((?x9257 (- (- (* (- l_0_13_119) l_0_13_119) (* l_0_13_120 l_0_13_120)) ?x9284)))
 (let ((?x34618 (- (- (- (- (- (- (- ?x9257 ?x9261) ?x32361) ?x32363) ?x32365) ?x32367) ?x33606) ?x33609)))
 (let ((?x34625 (- (- (+ (+ (+ (- (- ?x34618 ?x33612) ?x33615) ?x34498) ?x34053) ?x34055) ?x23901) ?x34134)))
 (let ((?x34632 (+ (+ (- (- (- (- (- ?x34625 ?x34136) ?x34138) ?x34057) ?x34059) ?x34061) ?x34140) ?x34142)))
 (= (+ (+ ?x34632 ?x34144) ?x34146) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32492 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32489 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32486 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32483 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x32281 (* 2.0 l_0_13_90)))
 (let ((?x32282 (* ?x32281 l_0_13_97)))
 (let ((?x32278 (* 2.0 l_0_13_89)))
 (let ((?x32279 (* ?x32278 l_0_13_96)))
 (let ((?x32275 (* 2.0 l_0_13_88)))
 (let ((?x32276 (* ?x32275 l_0_13_95)))
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x32480 (* ?x32479 l_0_13_70)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x32477 (* ?x32476 l_0_13_69)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x32474 (* ?x32473 l_0_13_68)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x32471 (* ?x32470 l_0_13_67)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x32273 (* ?x32272 l_0_13_69)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x32270 (* ?x32269 l_0_13_68)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x32267 (* ?x32266 l_0_13_67)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32413 (* ?x32412 l_0_13_154)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32410 (* ?x32409 l_0_13_153)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x32407 (* ?x32406 l_0_13_152)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x32404 (* ?x32403 l_0_13_151)))
 (let ((?x24783 (- (* (* (- 2.0) l_0_13_119) l_0_13_123) (* (* 2.0 l_0_13_120) l_0_13_124))))
 (let ((?x34649 (- (- ?x24783 (* (* 2.0 l_0_13_121) l_0_13_125)) (* (* 2.0 l_0_13_122) l_0_13_126))))
 (let ((?x34656 (- (- (- (- (- ?x34649 ?x32404) ?x32407) ?x32410) ?x32413) (* (* 2.0 l_0_13_175) l_0_13_179))))
 (let ((?x34662 (- (- ?x34656 (* (* 2.0 l_0_13_176) l_0_13_180)) (* (* 2.0 l_0_13_177) l_0_13_181))))
 (let ((?x34668 (+ (+ (+ (- ?x34662 (* (* 2.0 l_0_13_178) l_0_13_182)) ?x32267) ?x32270) ?x32273)))
 (let ((?x34675 (- (- (- (- (- (- (- ?x34668 ?x32471) ?x32474) ?x32477) ?x32480) ?x32276) ?x32279) ?x32282)))
 (= (+ (+ (+ (+ ?x34675 ?x32483) ?x32486) ?x32489) ?x32492) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34176 (* ?x32479 l_0_13_75)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34174 (* ?x32476 l_0_13_74)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34172 (* ?x32473 l_0_13_73)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34170 (* ?x32470 l_0_13_72)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34084 (* ?x32272 l_0_13_74)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34082 (* ?x32269 l_0_13_73)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34080 (* ?x32266 l_0_13_72)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32443 (* ?x32412 l_0_13_159)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32439 (* ?x32409 l_0_13_158)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x18921 (* ?x32406 l_0_13_157)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x5665 (* ?x32403 l_0_13_156)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x34168 (* ?x32766 l_0_13_94)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x34166 (* ?x32763 l_0_13_93)))
 (let ((?x34072 (* ?x32763 l_0_13_90)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x34164 (* ?x32760 l_0_13_92)))
 (let ((?x23731 (* ?x32760 l_0_13_89)))
 (let ((?x22066 (* 2.0 l_0_13_100)))
 (let ((?x34157 (* ?x22066 l_0_13_91)))
 (let ((?x34701 (- (+ (- (+ (* (* (- 2.0) l_0_13_100) l_0_13_88) ?x34157) ?x23731) ?x34164) ?x34072)))
 (let ((?x34708 (- (- (+ (+ ?x34701 ?x34166) ?x34168) (* (* 2.0 l_0_13_119) l_0_13_128)) (* (* 2.0 l_0_13_120) l_0_13_129))))
 (let ((?x34712 (- (- ?x34708 (* (* 2.0 l_0_13_121) l_0_13_130)) (* (* 2.0 l_0_13_122) l_0_13_131))))
 (let ((?x34718 (- (- (- (- (- ?x34712 ?x5665) ?x18921) ?x32439) ?x32443) (* (* 2.0 l_0_13_175) l_0_13_184))))
 (let ((?x34722 (- (- ?x34718 (* (* 2.0 l_0_13_176) l_0_13_185)) (* (* 2.0 l_0_13_177) l_0_13_186))))
 (let ((?x34727 (+ (+ (+ (- ?x34722 (* (* 2.0 l_0_13_178) l_0_13_187)) ?x34080) ?x34082) ?x34084)))
 (= (- (- (- (- ?x34727 ?x34170) ?x34172) ?x34174) ?x34176) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34212 (* ?x32479 l_0_13_81)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34210 (* ?x32476 l_0_13_80)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34208 (* ?x32473 l_0_13_79)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34206 (* ?x32470 l_0_13_78)))
 (let ((?x32272 (* 2.0 l_0_13_62)))
 (let ((?x34112 (* ?x32272 l_0_13_80)))
 (let ((?x32269 (* 2.0 l_0_13_61)))
 (let ((?x34110 (* ?x32269 l_0_13_79)))
 (let ((?x32266 (* 2.0 l_0_13_60)))
 (let ((?x34108 (* ?x32266 l_0_13_78)))
 (let ((?x32412 (* 2.0 l_0_13_150)))
 (let ((?x32544 (* ?x32412 l_0_13_165)))
 (let ((?x32409 (* 2.0 l_0_13_149)))
 (let ((?x32542 (* ?x32409 l_0_13_164)))
 (let ((?x32406 (* 2.0 l_0_13_148)))
 (let ((?x5255 (* ?x32406 l_0_13_163)))
 (let ((?x32403 (* 2.0 l_0_13_147)))
 (let ((?x5705 (* ?x32403 l_0_13_162)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x34204 (* ?x31756 l_0_13_94)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x34202 (* ?x31753 l_0_13_93)))
 (let ((?x34106 (* ?x31753 l_0_13_90)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x34200 (* ?x31750 l_0_13_92)))
 (let ((?x34104 (* ?x31750 l_0_13_89)))
 (let ((?x31747 (* 2.0 l_0_13_106)))
 (let ((?x34199 (* ?x31747 l_0_13_91)))
 (let ((?x23603 (- (+ (- (+ (* (* (- 2.0) l_0_13_106) l_0_13_88) ?x34199) ?x34104) ?x34200) ?x34106)))
 (let ((?x9610 (- (- (+ (+ ?x23603 ?x34202) ?x34204) (* (* 2.0 l_0_13_119) l_0_13_134)) (* (* 2.0 l_0_13_120) l_0_13_135))))
 (let ((?x34744 (- (- ?x9610 (* (* 2.0 l_0_13_121) l_0_13_136)) (* (* 2.0 l_0_13_122) l_0_13_137))))
 (let ((?x34750 (- (- (- (- (- ?x34744 ?x5705) ?x5255) ?x32542) ?x32544) (* (* 2.0 l_0_13_175) l_0_13_190))))
 (let ((?x34754 (- (- ?x34750 (* (* 2.0 l_0_13_176) l_0_13_191)) (* (* 2.0 l_0_13_177) l_0_13_192))))
 (let ((?x34759 (+ (+ (+ (- ?x34754 (* (* 2.0 l_0_13_178) l_0_13_193)) ?x34108) ?x34110) ?x34112)))
 (= (- (- (- (- ?x34759 ?x34206) ?x34208) ?x34210) ?x34212) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32699 (* l_0_13_99 l_0_13_99)))
 (let ((?x32697 (* l_0_13_98 l_0_13_98)))
 (let ((?x32695 (* l_0_13_97 l_0_13_97)))
 (let ((?x32693 (* l_0_13_96 l_0_13_96)))
 (let ((?x32691 (* l_0_13_95 l_0_13_95)))
 (let ((?x32689 (* l_0_13_71 l_0_13_71)))
 (let ((?x32687 (* l_0_13_70 l_0_13_70)))
 (let ((?x32685 (* l_0_13_69 l_0_13_69)))
 (let ((?x32683 (* l_0_13_68 l_0_13_68)))
 (let ((?x32681 (* l_0_13_67 l_0_13_67)))
 (let ((?x33708 (* l_0_13_183 l_0_13_183)))
 (let ((?x33705 (* l_0_13_182 l_0_13_182)))
 (let ((?x7247 (* l_0_13_181 l_0_13_181)))
 (let ((?x22694 (* l_0_13_180 l_0_13_180)))
 (let ((?x22718 (* l_0_13_179 l_0_13_179)))
 (let ((?x32615 (* l_0_13_155 l_0_13_155)))
 (let ((?x32613 (* l_0_13_154 l_0_13_154)))
 (let ((?x32611 (* l_0_13_153 l_0_13_153)))
 (let ((?x32609 (* l_0_13_152 l_0_13_152)))
 (let ((?x32607 (* l_0_13_151 l_0_13_151)))
 (let ((?x34797 (* l_0_13_127 l_0_13_127)))
 (let ((?x34795 (* l_0_13_126 l_0_13_126)))
 (let ((?x34793 (* l_0_13_125 l_0_13_125)))
 (let ((?x34794 (- (- (* (- l_0_13_123) l_0_13_123) (* l_0_13_124 l_0_13_124)) ?x34793)))
 (let ((?x34803 (- (- (- (- (- (- (- ?x34794 ?x34795) ?x34797) ?x32607) ?x32609) ?x32611) ?x32613) ?x32615)))
 (let ((?x34810 (- (- (- (- (- (- (- ?x34803 ?x22718) ?x22694) ?x7247) ?x33705) ?x33708) ?x32681) ?x32683)))
 (let ((?x34817 (+ (+ (+ (+ (- (- (- ?x34810 ?x32685) ?x32687) ?x32689) ?x32691) ?x32693) ?x32695) ?x32697)))
 (= (+ ?x34817 ?x32699) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x32816 (* ?x31823 l_0_13_76)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x32814 (* ?x31820 l_0_13_75)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x32812 (* ?x31817 l_0_13_74)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x32810 (* ?x31814 l_0_13_73)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x32808 (* ?x31811 l_0_13_72)))
 (let ((?x31791 (* 2.0 l_0_13_155)))
 (let ((?x32669 (* ?x31791 l_0_13_160)))
 (let ((?x31788 (* 2.0 l_0_13_154)))
 (let ((?x32667 (* ?x31788 l_0_13_159)))
 (let ((?x31785 (* 2.0 l_0_13_153)))
 (let ((?x32665 (* ?x31785 l_0_13_158)))
 (let ((?x31782 (* 2.0 l_0_13_152)))
 (let ((?x32663 (* ?x31782 l_0_13_157)))
 (let ((?x31779 (* 2.0 l_0_13_151)))
 (let ((?x32661 (* ?x31779 l_0_13_156)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x32770 (* ?x32769 l_0_13_99)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x32767 (* ?x32766 l_0_13_98)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x32764 (* ?x32763 l_0_13_97)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x32761 (* ?x32760 l_0_13_96)))
 (let ((?x32771 (+ (+ (+ (+ (* (* 2.0 l_0_13_100) l_0_13_95) ?x32761) ?x32764) ?x32767) ?x32770)))
 (let ((?x9930 (- (- ?x32771 (* (* 2.0 l_0_13_123) l_0_13_128)) (* (* 2.0 l_0_13_124) l_0_13_129))))
 (let ((?x25073 (- (- ?x9930 (* (* 2.0 l_0_13_125) l_0_13_130)) (* (* 2.0 l_0_13_126) l_0_13_131))))
 (let ((?x25069 (- (- (- (- ?x25073 (* (* 2.0 l_0_13_127) l_0_13_132)) ?x32661) ?x32663) ?x32665)))
 (let ((?x34837 (- (- (- (- ?x25069 ?x32667) ?x32669) (* (* 2.0 l_0_13_179) l_0_13_184)) (* (* 2.0 l_0_13_180) l_0_13_185))))
 (let ((?x34841 (- (- ?x34837 (* (* 2.0 l_0_13_181) l_0_13_186)) (* (* 2.0 l_0_13_182) l_0_13_187))))
 (let ((?x34846 (- (- (- (- ?x34841 (* (* 2.0 l_0_13_183) l_0_13_188)) ?x32808) ?x32810) ?x32812)))
 (= (- (- ?x34846 ?x32814) ?x32816) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34262 (* l_0_13_77 l_0_13_77)))
 (let ((?x34260 (* l_0_13_76 l_0_13_76)))
 (let ((?x34258 (* l_0_13_75 l_0_13_75)))
 (let ((?x34256 (* l_0_13_74 l_0_13_74)))
 (let ((?x34254 (* l_0_13_73 l_0_13_73)))
 (let ((?x34252 (* l_0_13_72 l_0_13_72)))
 (let ((?x33737 (* l_0_13_189 l_0_13_189)))
 (let ((?x33734 (* l_0_13_188 l_0_13_188)))
 (let ((?x22873 (* l_0_13_187 l_0_13_187)))
 (let ((?x7360 (* l_0_13_186 l_0_13_186)))
 (let ((?x22874 (* l_0_13_185 l_0_13_185)))
 (let ((?x7366 (* l_0_13_184 l_0_13_184)))
 (let ((?x32784 (* l_0_13_161 l_0_13_161)))
 (let ((?x32782 (* l_0_13_160 l_0_13_160)))
 (let ((?x32778 (* l_0_13_159 l_0_13_159)))
 (let ((?x32776 (* l_0_13_158 l_0_13_158)))
 (let ((?x32774 (* l_0_13_157 l_0_13_157)))
 (let ((?x32772 (* l_0_13_156 l_0_13_156)))
 (let ((?x34875 (* l_0_13_133 l_0_13_133)))
 (let ((?x34873 (* l_0_13_132 l_0_13_132)))
 (let ((?x34871 (* l_0_13_131 l_0_13_131)))
 (let ((?x34869 (* l_0_13_130 l_0_13_130)))
 (let ((?x34867 (* l_0_13_129 l_0_13_129)))
 (let ((?x34865 (* l_0_13_128 l_0_13_128)))
 (let ((?x34250 (* l_0_13_105 l_0_13_105)))
 (let ((?x34248 (* l_0_13_104 l_0_13_104)))
 (let ((?x34246 (* l_0_13_103 l_0_13_103)))
 (let ((?x34244 (* l_0_13_102 l_0_13_102)))
 (let ((?x34245 (+ (+ (* l_0_13_100 l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x34244)))
 (let ((?x34251 (+ (+ (+ ?x34245 ?x34246) ?x34248) ?x34250)))
 (let ((?x34877 (- (- (- (- (- (- (- ?x34251 ?x34865) ?x34867) ?x34869) ?x34871) ?x34873) ?x34875) ?x32772)))
 (let ((?x34884 (- (- (- (- (- (- (- ?x34877 ?x32774) ?x32776) ?x32778) ?x32782) ?x32784) ?x7366) ?x22874)))
 (let ((?x34891 (- (- (- (- (- (- (- ?x34884 ?x7360) ?x22873) ?x33734) ?x33737) ?x34252) ?x34254) ?x34256)))
 (= (- (- (- ?x34891 ?x34258) ?x34260) ?x34262) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x34318 (* l_0_13_84 l_0_13_84)))
 (let ((?x34316 (* l_0_13_83 l_0_13_83)))
 (let ((?x34314 (* l_0_13_82 l_0_13_82)))
 (let ((?x34312 (* l_0_13_81 l_0_13_81)))
 (let ((?x34310 (* l_0_13_80 l_0_13_80)))
 (let ((?x34308 (* l_0_13_79 l_0_13_79)))
 (let ((?x34306 (* l_0_13_78 l_0_13_78)))
 (let ((?x7507 (* l_0_13_196 l_0_13_196)))
 (let ((?x7410 (* l_0_13_195 l_0_13_195)))
 (let ((?x22939 (* l_0_13_194 l_0_13_194)))
 (let ((?x22934 (* l_0_13_193 l_0_13_193)))
 (let ((?x22966 (* l_0_13_192 l_0_13_192)))
 (let ((?x7505 (* l_0_13_191 l_0_13_191)))
 (let ((?x7510 (* l_0_13_190 l_0_13_190)))
 (let ((?x33016 (* l_0_13_168 l_0_13_168)))
 (let ((?x33014 (* l_0_13_167 l_0_13_167)))
 (let ((?x33012 (* l_0_13_166 l_0_13_166)))
 (let ((?x33010 (* l_0_13_165 l_0_13_165)))
 (let ((?x33008 (* l_0_13_164 l_0_13_164)))
 (let ((?x33006 (* l_0_13_163 l_0_13_163)))
 (let ((?x33005 (* l_0_13_162 l_0_13_162)))
 (let ((?x34908 (* l_0_13_140 l_0_13_140)))
 (let ((?x34906 (* l_0_13_139 l_0_13_139)))
 (let ((?x34904 (* l_0_13_138 l_0_13_138)))
 (let ((?x34902 (* l_0_13_137 l_0_13_137)))
 (let ((?x34900 (* l_0_13_136 l_0_13_136)))
 (let ((?x34898 (* l_0_13_135 l_0_13_135)))
 (let ((?x25170 (* l_0_13_134 l_0_13_134)))
 (let ((?x34304 (* l_0_13_112 l_0_13_112)))
 (let ((?x34302 (* l_0_13_111 l_0_13_111)))
 (let ((?x34300 (* l_0_13_110 l_0_13_110)))
 (let ((?x34298 (* l_0_13_109 l_0_13_109)))
 (let ((?x34296 (* l_0_13_108 l_0_13_108)))
 (let ((?x34297 (+ (+ (* l_0_13_106 l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34296)))
 (let ((?x34305 (+ (+ (+ (+ ?x34297 ?x34298) ?x34300) ?x34302) ?x34304)))
 (let ((?x34909 (- (- (- (- (- (- (- ?x34305 ?x25170) ?x34898) ?x34900) ?x34902) ?x34904) ?x34906) ?x34908)))
 (let ((?x34916 (- (- (- (- (- (- (- ?x34909 ?x33005) ?x33006) ?x33008) ?x33010) ?x33012) ?x33014) ?x33016)))
 (let ((?x34923 (- (- (- (- (- (- (- ?x34916 ?x7510) ?x7505) ?x22966) ?x22934) ?x22939) ?x7410) ?x7507)))
 (let ((?x34930 (- (- (- (- (- (- (- ?x34923 ?x34306) ?x34308) ?x34310) ?x34312) ?x34314) ?x34316) ?x34318)))
 (= ?x34930 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33814 (* l_0_13_85 l_0_13_85)))
 (let ((?x33812 (* l_0_13_57 l_0_13_57)))
 (= (- (+ (* (* (- 2.0) l_0_13_197) l_0_13_203) ?x33812) ?x33814) 0.0))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x33967 (* ?x31915 l_0_13_91)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33959 (* ?x31912 l_0_13_63)))
 (let ((?x34958 (* l_0_13_206 l_0_13_206)))
 (let ((?x34956 (* l_0_13_205 l_0_13_205)))
 (let ((?x34957 (- (- (* (- l_0_13_203) l_0_13_203) (* l_0_13_204 l_0_13_204)) ?x34956)))
 (= (- (+ (- ?x34957 ?x34958) ?x33959) ?x33967) 0.0)))))))))
(assert
 (let ((?x31915 (* 2.0 l_0_13_85)))
 (let ((?x31916 (* ?x31915 l_0_13_95)))
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x31913 (* ?x31912 l_0_13_67)))
 (let ((?x34980 (- (* (* (- 2.0) l_0_13_203) l_0_13_207) (* (* 2.0 l_0_13_204) l_0_13_208))))
 (let ((?x34986 (- (- ?x34980 (* (* 2.0 l_0_13_205) l_0_13_209)) (* (* 2.0 l_0_13_206) l_0_13_210))))
 (= (- (+ ?x34986 ?x31913) ?x31916) 0.0))))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x7942 (* ?x31912 l_0_13_72)))
 (let ((?x35012 (- (* (* (- 2.0) l_0_13_100) l_0_13_85) (* (* 2.0 l_0_13_203) l_0_13_212))))
 (let ((?x35016 (- (- ?x35012 (* (* 2.0 l_0_13_204) l_0_13_213)) (* (* 2.0 l_0_13_205) l_0_13_214))))
 (= (+ (- ?x35016 (* (* 2.0 l_0_13_206) l_0_13_215)) ?x7942) 0.0))))))
(assert
 (let ((?x31912 (* 2.0 l_0_13_57)))
 (let ((?x33970 (* ?x31912 l_0_13_78)))
 (let ((?x35027 (- (* (* (- 2.0) l_0_13_106) l_0_13_85) (* (* 2.0 l_0_13_203) l_0_13_218))))
 (let ((?x35031 (- (- ?x35027 (* (* 2.0 l_0_13_204) l_0_13_219)) (* (* 2.0 l_0_13_205) l_0_13_220))))
 (= (+ (- ?x35031 (* (* 2.0 l_0_13_206) l_0_13_221)) ?x33970) 0.0))))))
(assert
 (let ((?x34146 (* l_0_13_94 l_0_13_94)))
 (let ((?x34144 (* l_0_13_93 l_0_13_93)))
 (let ((?x34142 (* l_0_13_92 l_0_13_92)))
 (let ((?x34140 (* l_0_13_91 l_0_13_91)))
 (let ((?x34138 (* l_0_13_66 l_0_13_66)))
 (let ((?x34136 (* l_0_13_65 l_0_13_65)))
 (let ((?x35058 (+ (+ (+ (* l_0_13_63 l_0_13_63) (* l_0_13_64 l_0_13_64)) ?x34136) ?x34138)))
 (= (- (- (- (- ?x35058 ?x34140) ?x34142) ?x34144) ?x34146) 0.0)))))))))
(assert
 (let ((?x32492 (* (* 2.0 l_0_13_94) l_0_13_98)))
 (let ((?x32489 (* (* 2.0 l_0_13_93) l_0_13_97)))
 (let ((?x32486 (* (* 2.0 l_0_13_92) l_0_13_96)))
 (let ((?x32483 (* (* 2.0 l_0_13_91) l_0_13_95)))
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x32480 (* ?x32479 l_0_13_70)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x32477 (* ?x32476 l_0_13_69)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x32474 (* ?x32473 l_0_13_68)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x32471 (* ?x32470 l_0_13_67)))
 (let ((?x35076 (- (- (- (- (+ (+ (+ ?x32471 ?x32474) ?x32477) ?x32480) ?x32483) ?x32486) ?x32489) ?x32492)))
 (= ?x35076 0.0)))))))))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34176 (* ?x32479 l_0_13_75)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34174 (* ?x32476 l_0_13_74)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34172 (* ?x32473 l_0_13_73)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34170 (* ?x32470 l_0_13_72)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x34168 (* ?x32766 l_0_13_94)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x34166 (* ?x32763 l_0_13_93)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x34164 (* ?x32760 l_0_13_92)))
 (let ((?x35093 (+ (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_91) ?x34164) ?x34166) ?x34168) ?x34170)))
 (= (+ (+ (+ ?x35093 ?x34172) ?x34174) ?x34176) 0.0)))))))))))))))))
(assert
 (let ((?x32479 (* 2.0 l_0_13_66)))
 (let ((?x34212 (* ?x32479 l_0_13_81)))
 (let ((?x32476 (* 2.0 l_0_13_65)))
 (let ((?x34210 (* ?x32476 l_0_13_80)))
 (let ((?x32473 (* 2.0 l_0_13_64)))
 (let ((?x34208 (* ?x32473 l_0_13_79)))
 (let ((?x32470 (* 2.0 l_0_13_63)))
 (let ((?x34206 (* ?x32470 l_0_13_78)))
 (let ((?x31756 (* 2.0 l_0_13_109)))
 (let ((?x34204 (* ?x31756 l_0_13_94)))
 (let ((?x31753 (* 2.0 l_0_13_108)))
 (let ((?x34202 (* ?x31753 l_0_13_93)))
 (let ((?x31750 (* 2.0 l_0_13_107)))
 (let ((?x34200 (* ?x31750 l_0_13_92)))
 (let ((?x11141 (+ (- (- (- (* (* (- 2.0) l_0_13_106) l_0_13_91) ?x34200) ?x34202) ?x34204) ?x34206)))
 (= (+ (+ (+ ?x11141 ?x34208) ?x34210) ?x34212) 0.0)))))))))))))))))
(assert
 (let ((?x32699 (* l_0_13_99 l_0_13_99)))
 (let ((?x32697 (* l_0_13_98 l_0_13_98)))
 (let ((?x32695 (* l_0_13_97 l_0_13_97)))
 (let ((?x32693 (* l_0_13_96 l_0_13_96)))
 (let ((?x32691 (* l_0_13_95 l_0_13_95)))
 (let ((?x32689 (* l_0_13_71 l_0_13_71)))
 (let ((?x32687 (* l_0_13_70 l_0_13_70)))
 (let ((?x32685 (* l_0_13_69 l_0_13_69)))
 (let ((?x35103 (+ (+ (+ (* l_0_13_67 l_0_13_67) (* l_0_13_68 l_0_13_68)) ?x32685) ?x32687)))
 (= (- (- (- (- (- (+ ?x35103 ?x32689) ?x32691) ?x32693) ?x32695) ?x32697) ?x32699) 0.0)))))))))))
(assert
 (let ((?x31823 (* 2.0 l_0_13_71)))
 (let ((?x32816 (* ?x31823 l_0_13_76)))
 (let ((?x31820 (* 2.0 l_0_13_70)))
 (let ((?x32814 (* ?x31820 l_0_13_75)))
 (let ((?x31817 (* 2.0 l_0_13_69)))
 (let ((?x32812 (* ?x31817 l_0_13_74)))
 (let ((?x31814 (* 2.0 l_0_13_68)))
 (let ((?x32810 (* ?x31814 l_0_13_73)))
 (let ((?x31811 (* 2.0 l_0_13_67)))
 (let ((?x32808 (* ?x31811 l_0_13_72)))
 (let ((?x32769 (* 2.0 l_0_13_104)))
 (let ((?x32770 (* ?x32769 l_0_13_99)))
 (let ((?x32766 (* 2.0 l_0_13_103)))
 (let ((?x32767 (* ?x32766 l_0_13_98)))
 (let ((?x32763 (* 2.0 l_0_13_102)))
 (let ((?x32764 (* ?x32763 l_0_13_97)))
 (let ((?x32760 (* 2.0 l_0_13_101)))
 (let ((?x32761 (* ?x32760 l_0_13_96)))
 (let ((?x35127 (- (- (- (- (* (* (- 2.0) l_0_13_100) l_0_13_95) ?x32761) ?x32764) ?x32767) ?x32770)))
 (= (+ (+ (+ (+ (+ ?x35127 ?x32808) ?x32810) ?x32812) ?x32814) ?x32816) 0.0)))))))))))))))))))))
(assert
 (let ((?x34262 (* l_0_13_77 l_0_13_77)))
 (let ((?x34260 (* l_0_13_76 l_0_13_76)))
 (let ((?x34258 (* l_0_13_75 l_0_13_75)))
 (let ((?x34256 (* l_0_13_74 l_0_13_74)))
 (let ((?x34254 (* l_0_13_73 l_0_13_73)))
 (let ((?x34252 (* l_0_13_72 l_0_13_72)))
 (let ((?x34250 (* l_0_13_105 l_0_13_105)))
 (let ((?x34248 (* l_0_13_104 l_0_13_104)))
 (let ((?x34246 (* l_0_13_103 l_0_13_103)))
 (let ((?x34244 (* l_0_13_102 l_0_13_102)))
 (let ((?x11187 (- (- (* (- l_0_13_100) l_0_13_100) (* l_0_13_101 l_0_13_101)) ?x34244)))
 (let ((?x35138 (+ (+ (+ (+ (- (- (- ?x11187 ?x34246) ?x34248) ?x34250) ?x34252) ?x34254) ?x34256) ?x34258)))
 (= (+ (+ ?x35138 ?x34260) ?x34262) 0.0))))))))))))))
(assert
 (let ((?x34318 (* l_0_13_84 l_0_13_84)))
 (let ((?x34316 (* l_0_13_83 l_0_13_83)))
 (let ((?x34314 (* l_0_13_82 l_0_13_82)))
 (let ((?x34312 (* l_0_13_81 l_0_13_81)))
 (let ((?x34310 (* l_0_13_80 l_0_13_80)))
 (let ((?x34308 (* l_0_13_79 l_0_13_79)))
 (let ((?x34306 (* l_0_13_78 l_0_13_78)))
 (let ((?x34304 (* l_0_13_112 l_0_13_112)))
 (let ((?x34302 (* l_0_13_111 l_0_13_111)))
 (let ((?x34300 (* l_0_13_110 l_0_13_110)))
 (let ((?x34298 (* l_0_13_109 l_0_13_109)))
 (let ((?x34296 (* l_0_13_108 l_0_13_108)))
 (let ((?x35151 (- (- (* (- l_0_13_106) l_0_13_106) (* l_0_13_107 l_0_13_107)) ?x34296)))
 (let ((?x35158 (+ (+ (+ (- (- (- (- ?x35151 ?x34298) ?x34300) ?x34302) ?x34304) ?x34306) ?x34308) ?x34310)))
 (= (+ (+ (+ (+ ?x35158 ?x34312) ?x34314) ?x34316) ?x34318) 0.0))))))))))))))))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_207) 0.0))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_212) 0.0))
(assert
 (= (* (* (- 2.0) l_0_13_197) l_0_13_218) 0.0))
(assert
 (let ((?x35192 (* l_0_13_211 l_0_13_211)))
 (let ((?x35190 (* l_0_13_210 l_0_13_210)))
 (let ((?x35188 (* l_0_13_209 l_0_13_209)))
 (let ((?x35189 (- (- (* (- l_0_13_207) l_0_13_207) (* l_0_13_208 l_0_13_208)) ?x35188)))
 (= (- (- ?x35189 ?x35190) ?x35192) 0.0))))))
(assert
 (let ((?x35215 (- (* (* (- 2.0) l_0_13_207) l_0_13_212) (* (* 2.0 l_0_13_208) l_0_13_213))))
 (let ((?x35219 (- (- ?x35215 (* (* 2.0 l_0_13_209) l_0_13_214)) (* (* 2.0 l_0_13_210) l_0_13_215))))
 (= (- ?x35219 (* (* 2.0 l_0_13_211) l_0_13_216)) 0.0))))
(assert
 (let ((?x35245 (* l_0_13_217 l_0_13_217)))
 (let ((?x35243 (* l_0_13_216 l_0_13_216)))
 (let ((?x35241 (* l_0_13_215 l_0_13_215)))
 (let ((?x35239 (* l_0_13_214 l_0_13_214)))
 (let ((?x35240 (- (- (* (- l_0_13_212) l_0_13_212) (* l_0_13_213 l_0_13_213)) ?x35239)))
 (= (- (- (- ?x35240 ?x35241) ?x35243) ?x35245) 0.0)))))))
(assert
 (let ((?x35276 (* l_0_13_224 l_0_13_224)))
 (let ((?x35274 (* l_0_13_223 l_0_13_223)))
 (let ((?x35272 (* l_0_13_222 l_0_13_222)))
 (let ((?x35270 (* l_0_13_221 l_0_13_221)))
 (let ((?x35268 (* l_0_13_220 l_0_13_220)))
 (let ((?x35269 (- (- (* (- l_0_13_218) l_0_13_218) (* l_0_13_219 l_0_13_219)) ?x35268)))
 (= (- (- (- (- ?x35269 ?x35270) ?x35272) ?x35274) ?x35276) 0.0))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_28 0.0))
(assert
 (>= l_0_13_29 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_34 0.0))
(assert
 (>= l_0_13_38 0.0))
(assert
 (>= l_0_13_43 0.0))
(assert
 (>= l_0_13_49 0.0))
(assert
 (>= l_0_13_56 0.0))
(assert
 (>= l_0_13_57 0.0))
(assert
 (>= l_0_13_59 0.0))
(assert
 (>= l_0_13_62 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_71 0.0))
(assert
 (>= l_0_13_77 0.0))
(assert
 (>= l_0_13_84 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_87 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_94 0.0))
(assert
 (>= l_0_13_99 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_112 0.0))
(assert
 (>= l_0_13_113 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_118 0.0))
(assert
 (>= l_0_13_122 0.0))
(assert
 (>= l_0_13_127 0.0))
(assert
 (>= l_0_13_133 0.0))
(assert
 (>= l_0_13_140 0.0))
(assert
 (>= l_0_13_141 0.0))
(assert
 (>= l_0_13_143 0.0))
(assert
 (>= l_0_13_146 0.0))
(assert
 (>= l_0_13_150 0.0))
(assert
 (>= l_0_13_155 0.0))
(assert
 (>= l_0_13_161 0.0))
(assert
 (>= l_0_13_168 0.0))
(assert
 (>= l_0_13_169 0.0))
(assert
 (>= l_0_13_171 0.0))
(assert
 (>= l_0_13_174 0.0))
(assert
 (>= l_0_13_178 0.0))
(assert
 (>= l_0_13_183 0.0))
(assert
 (>= l_0_13_189 0.0))
(assert
 (>= l_0_13_196 0.0))
(assert
 (>= l_0_13_197 0.0))
(assert
 (>= l_0_13_199 0.0))
(assert
 (>= l_0_13_202 0.0))
(assert
 (>= l_0_13_206 0.0))
(assert
 (>= l_0_13_211 0.0))
(assert
 (>= l_0_13_217 0.0))
(assert
 (>= l_0_13_224 0.0))
(assert
 (let ((?x35352 (* l_0_14_225 l_0_14_225)))
 (= (- (- _a_0_ (* l_0_14_197 l_0_14_197)) ?x35352) 0.0)))
(assert
 (let ((?x35372 (* l_0_14_29 l_0_14_29)))
 (let ((?x35363 (* l_0_14_169 l_0_14_169)))
 (let ((?x35364 (* 2.0 ?x35363)))
 (let ((?x35368 (- (+ (+ _a_1_ (* l_0_14_1 l_0_14_1)) ?x35364) (* (* 2.0 l_0_14_197) l_0_14_198))))
 (= (- (- ?x35368 (* (* 2.0 l_0_14_225) l_0_14_226)) ?x35372) 0.0))))))
(assert
 (let ((?x35372 (* l_0_14_29 l_0_14_29)))
 (let ((?x35390 (- (+ (* (- l_0_14_1) l_0_14_1) (* l_0_14_141 l_0_14_141)) (* (* 2.0 l_0_14_207) l_0_14_218))))
 (let ((?x35396 (- (- ?x35390 (* (* 2.0 l_0_14_208) l_0_14_219)) (* (* 2.0 l_0_14_209) l_0_14_220))))
 (let ((?x35402 (- (- ?x35396 (* (* 2.0 l_0_14_210) l_0_14_221)) (* (* 2.0 l_0_14_211) l_0_14_222))))
 (let ((?x35408 (- (- ?x35402 (* (* 2.0 l_0_14_235) l_0_14_246)) (* (* 2.0 l_0_14_236) l_0_14_247))))
 (let ((?x35414 (- (- ?x35408 (* (* 2.0 l_0_14_237) l_0_14_248)) (* (* 2.0 l_0_14_238) l_0_14_249))))
 (= (- (+ (- ?x35414 (* (* 2.0 l_0_14_239) l_0_14_250)) ?x35372) 2.0) 0.0))))))))
(assert
 (let ((?x35496 (* 2.0 l_0_14_43)))
 (let ((?x35497 (* ?x35496 l_0_14_54)))
 (let ((?x35493 (* 2.0 l_0_14_42)))
 (let ((?x35494 (* ?x35493 l_0_14_53)))
 (let ((?x35490 (* 2.0 l_0_14_41)))
 (let ((?x35491 (* ?x35490 l_0_14_52)))
 (let ((?x35487 (* 2.0 l_0_14_40)))
 (let ((?x35488 (* ?x35487 l_0_14_51)))
 (let ((?x35484 (* 2.0 l_0_14_39)))
 (let ((?x35485 (* ?x35484 l_0_14_50)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35482 (* ?x35481 l_0_14_30)))
 (let ((?x35463 (* 2.0 l_0_14_15)))
 (let ((?x35464 (* ?x35463 l_0_14_26)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35461 (* ?x35460 l_0_14_142)))
 (let ((?x35457 (* 2.0 l_0_14_14)))
 (let ((?x35458 (* ?x35457 l_0_14_25)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x35455 (* ?x35454 l_0_14_24)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x35452 (* ?x35451 l_0_14_23)))
 (let ((?x35450 (+ (* (* (- 2.0) l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_11) l_0_14_22))))
 (let ((?x35468 (+ (+ (+ (+ (+ (+ ?x35450 ?x35452) ?x35455) ?x35458) ?x35461) ?x35464) (* (* 4.0 l_0_14_179) l_0_14_190))))
 (let ((?x35474 (+ (+ ?x35468 (* (* 4.0 l_0_14_180) l_0_14_191)) (* (* 4.0 l_0_14_181) l_0_14_192))))
 (let ((?x35480 (+ (+ ?x35474 (* (* 4.0 l_0_14_182) l_0_14_193)) (* (* 4.0 l_0_14_183) l_0_14_194))))
 (= (- (- (- (- (- (+ ?x35480 ?x35482) ?x35485) ?x35488) ?x35491) ?x35494) ?x35497) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x35635 (* ?x35634 l_0_14_82)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x35632 (* ?x35631 l_0_14_81)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x35629 (* ?x35628 l_0_14_80)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x35626 (* ?x35625 l_0_14_79)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x35623 (* ?x35622 l_0_14_78)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35620 (* ?x35481 l_0_14_32)))
 (let ((?x35602 (* 2.0 l_0_14_155)))
 (let ((?x35603 (* ?x35602 l_0_14_166)))
 (let ((?x35599 (* 2.0 l_0_14_154)))
 (let ((?x35600 (* ?x35599 l_0_14_165)))
 (let ((?x35596 (* 2.0 l_0_14_153)))
 (let ((?x35597 (* ?x35596 l_0_14_164)))
 (let ((?x35593 (* 2.0 l_0_14_152)))
 (let ((?x35594 (* ?x35593 l_0_14_163)))
 (let ((?x35590 (* 2.0 l_0_14_151)))
 (let ((?x35591 (* ?x35590 l_0_14_162)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35588 (* ?x35460 l_0_14_144)))
 (let ((?x35571 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x35568 (* ?x35567 l_0_14_98)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x35565 (* ?x35564 l_0_14_97)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x35562 (* ?x35561 l_0_14_96)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x35559 (* ?x35558 l_0_14_95)))
 (let ((?x35569 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x35559) ?x35562) ?x35565) ?x35568)))
 (let ((?x35578 (- (- (+ ?x35569 ?x35571) (* (* 2.0 l_0_14_123) l_0_14_134)) (* (* 2.0 l_0_14_124) l_0_14_135))))
 (let ((?x35584 (- (- ?x35578 (* (* 2.0 l_0_14_125) l_0_14_136)) (* (* 2.0 l_0_14_126) l_0_14_137))))
 (let ((?x35595 (- (- (+ (- ?x35584 (* (* 2.0 l_0_14_127) l_0_14_138)) ?x35588) ?x35591) ?x35594)))
 (let ((?x35607 (- (- (- (- ?x35595 ?x35597) ?x35600) ?x35603) (* (* 2.0 l_0_14_179) l_0_14_190))))
 (let ((?x35613 (- (- ?x35607 (* (* 2.0 l_0_14_180) l_0_14_191)) (* (* 2.0 l_0_14_181) l_0_14_192))))
 (let ((?x35619 (- (- ?x35613 (* (* 2.0 l_0_14_182) l_0_14_193)) (* (* 2.0 l_0_14_183) l_0_14_194))))
 (= (- (- (- (- (- (+ ?x35619 ?x35620) ?x35623) ?x35626) ?x35629) ?x35632) ?x35635) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x35635 (* ?x35634 l_0_14_82)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x35632 (* ?x35631 l_0_14_81)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x35629 (* ?x35628 l_0_14_80)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x35626 (* ?x35625 l_0_14_79)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x35623 (* ?x35622 l_0_14_78)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35716 (* ?x35481 l_0_14_35)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35714 (* ?x35460 l_0_14_147)))
 (let ((?x35571 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x35568 (* ?x35567 l_0_14_98)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x35565 (* ?x35564 l_0_14_97)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x35562 (* ?x35561 l_0_14_96)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x35559 (* ?x35558 l_0_14_95)))
 (let ((?x35712 (- (- (- (- (* (* (- 2.0) l_0_14_1) l_0_14_7) ?x35559) ?x35562) ?x35565) ?x35568)))
 (let ((?x35721 (+ (+ (+ (+ (+ (+ (- ?x35712 ?x35571) ?x35714) ?x35716) ?x35623) ?x35626) ?x35629) ?x35632)))
 (= (+ ?x35721 ?x35635) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x11620 (* ?x35481 l_0_14_39)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x25804 (* ?x35460 l_0_14_151)))
 (= (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) ?x25804) ?x11620) 0.0))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x35736 (* ?x35735 l_0_14_95)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x35733 (* ?x35732 l_0_14_67)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35730 (* ?x35481 l_0_14_44)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35728 (* ?x35460 l_0_14_156)))
 (let ((?x35737 (+ (- (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_16) ?x35728) ?x35730) ?x35733) ?x35736)))
 (= ?x35737 0.0)))))))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35756 (* ?x35481 l_0_14_50)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35754 (* ?x35460 l_0_14_162)))
 (= (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_22) ?x35754) ?x35756) 0.0))))))
(assert
 (let ((?x35776 (* l_0_14_31 l_0_14_31)))
 (let ((?x35774 (* l_0_14_30 l_0_14_30)))
 (let ((?x35772 (* l_0_14_3 l_0_14_3)))
 (let ((?x35765 (* l_0_14_2 l_0_14_2)))
 (let ((?x35771 (- (+ (* l_0_14_142 l_0_14_142) (* l_0_14_143 l_0_14_143)) ?x35765)))
 (= (+ (+ (- ?x35771 ?x35772) ?x35774) ?x35776) 0.0)))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35799 (* ?x35798 l_0_14_33)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35796 (* ?x35795 l_0_14_32)))
 (let ((?x35792 (* 2.0 l_0_14_3)))
 (let ((?x35793 (* ?x35792 l_0_14_5)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35790 (* ?x35789 l_0_14_4)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35787 (* ?x35786 l_0_14_145)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35785 (* ?x11686 l_0_14_144)))
 (= (+ (+ (- (- (+ ?x35785 ?x35787) ?x35790) ?x35793) ?x35796) ?x35799) 0.0))))))))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35831 (* ?x35798 l_0_14_36)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35829 (* ?x35795 l_0_14_35)))
 (let ((?x35792 (* 2.0 l_0_14_3)))
 (let ((?x35827 (* ?x35792 l_0_14_8)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35825 (* ?x35789 l_0_14_7)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35823 (* ?x35786 l_0_14_148)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35822 (* ?x11686 l_0_14_147)))
 (= (+ (+ (- (- (+ ?x35822 ?x35823) ?x35825) ?x35827) ?x35829) ?x35831) 0.0))))))))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35846 (* ?x35798 l_0_14_40)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35844 (* ?x35795 l_0_14_39)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35842 (* ?x35786 l_0_14_152)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35840 (* ?x11686 l_0_14_151)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x25840 (* ?x35451 l_0_14_3)))
 (let ((?x35845 (+ (+ (+ (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x25840) ?x35840) ?x35842) ?x35844)))
 (= (+ ?x35845 ?x35846) 0.0)))))))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x35888 (* ?x35887 l_0_14_96)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x35885 (* ?x35884 l_0_14_95)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x35882 (* ?x35881 l_0_14_68)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x35879 (* ?x35878 l_0_14_67)))
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35876 (* ?x35798 l_0_14_45)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35874 (* ?x35795 l_0_14_44)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x35872 (* ?x35871 l_0_14_3)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x35862 (* ?x35861 l_0_14_2)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35857 (* ?x35786 l_0_14_157)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35855 (* ?x11686 l_0_14_156)))
 (let ((?x35883 (- (- (+ (+ (- (- (+ ?x35855 ?x35857) ?x35862) ?x35872) ?x35874) ?x35876) ?x35879) ?x35882)))
 (= (+ (+ ?x35883 ?x35885) ?x35888) 0.0)))))))))))))))))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35936 (* ?x35798 l_0_14_51)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35934 (* ?x35795 l_0_14_50)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x35932 (* ?x35931 l_0_14_3)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35929 (* ?x35789 l_0_14_22)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35919 (* ?x35786 l_0_14_163)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x25890 (* ?x11686 l_0_14_162)))
 (= (+ (+ (- (- (+ ?x25890 ?x35919) ?x35929) ?x35932) ?x35934) ?x35936) 0.0))))))))))))))
(assert
 (let ((?x35974 (* l_0_14_6 l_0_14_6)))
 (let ((?x35972 (* l_0_14_5 l_0_14_5)))
 (let ((?x35970 (* l_0_14_4 l_0_14_4)))
 (let ((?x35968 (* l_0_14_34 l_0_14_34)))
 (let ((?x35966 (* l_0_14_33 l_0_14_33)))
 (let ((?x35964 (* l_0_14_32 l_0_14_32)))
 (let ((?x35962 (* l_0_14_146 l_0_14_146)))
 (let ((?x35963 (+ (+ (* l_0_14_144 l_0_14_144) (* l_0_14_145 l_0_14_145)) ?x35962)))
 (= (- (- (- (+ (+ (+ ?x35963 ?x35964) ?x35966) ?x35968) ?x35970) ?x35972) ?x35974) 0.0))))))))))
(assert
 (let ((?x35997 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x35994 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x35991 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x35988 (* ?x35987 l_0_14_37)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x35985 (* ?x35984 l_0_14_36)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x11762 (* ?x23290 l_0_14_35)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x11763 (* ?x25886 l_0_14_149)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x11710 (* ?x25897 l_0_14_148)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x11754 (* ?x25891 l_0_14_147)))
 (let ((?x35995 (- (- (+ (+ (+ (+ (+ ?x11754 ?x11710) ?x11763) ?x11762) ?x35985) ?x35988) ?x35991) ?x35994)))
 (= (- ?x35995 ?x35997) 0.0))))))))))))))))))
(assert
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36041 (* ?x35987 l_0_14_41)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36039 (* ?x35984 l_0_14_40)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36037 (* ?x23290 l_0_14_39)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36035 (* ?x25886 l_0_14_153)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x36033 (* ?x25897 l_0_14_152)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x36031 (* ?x25891 l_0_14_151)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36029 (* ?x35454 l_0_14_6)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x11804 (* ?x35451 l_0_14_5)))
 (let ((?x36034 (+ (+ (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x11804) ?x36029) ?x36031) ?x36033)))
 (= (+ (+ (+ (+ ?x36034 ?x36035) ?x36037) ?x36039) ?x36041) 0.0)))))))))))))))))))
(assert
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x36095 (* ?x36094 l_0_14_97)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x36092 (* ?x36091 l_0_14_96)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x36089 (* ?x36088 l_0_14_95)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x36086 (* ?x36085 l_0_14_69)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x36083 (* ?x36082 l_0_14_68)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x36080 (* ?x36079 l_0_14_67)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36077 (* ?x35987 l_0_14_46)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36075 (* ?x35984 l_0_14_45)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36073 (* ?x23290 l_0_14_44)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36071 (* ?x36070 l_0_14_6)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36068 (* ?x35871 l_0_14_5)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36056 (* ?x35861 l_0_14_4)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36057 (* ?x25886 l_0_14_158)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x25925 (* ?x25897 l_0_14_157)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x11814 (* ?x25891 l_0_14_156)))
 (let ((?x36076 (+ (+ (- (- (- (+ (+ ?x11814 ?x25925) ?x36057) ?x36056) ?x36068) ?x36071) ?x36073) ?x36075)))
 (let ((?x36096 (+ (+ (+ (- (- (- (+ ?x36076 ?x36077) ?x36080) ?x36083) ?x36086) ?x36089) ?x36092) ?x36095)))
 (= ?x36096 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36151 (* ?x35987 l_0_14_52)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36149 (* ?x35984 l_0_14_51)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36147 (* ?x23290 l_0_14_50)))
 (let ((?x36144 (* 2.0 l_0_14_24)))
 (let ((?x36145 (* ?x36144 l_0_14_6)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x36142 (* ?x35931 l_0_14_5)))
 (let ((?x36139 (* 2.0 l_0_14_22)))
 (let ((?x36140 (* ?x36139 l_0_14_4)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36137 (* ?x25886 l_0_14_164)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x36135 (* ?x25897 l_0_14_163)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x36134 (* ?x25891 l_0_14_162)))
 (let ((?x36150 (+ (+ (- (- (- (+ (+ ?x36134 ?x36135) ?x36137) ?x36140) ?x36142) ?x36145) ?x36147) ?x36149)))
 (= (+ ?x36150 ?x36151) 0.0)))))))))))))))))))))
(assert
 (let ((?x36202 (* l_0_14_9 l_0_14_9)))
 (let ((?x36200 (* l_0_14_8 l_0_14_8)))
 (let ((?x36198 (* l_0_14_7 l_0_14_7)))
 (let ((?x36196 (* l_0_14_38 l_0_14_38)))
 (let ((?x36194 (* l_0_14_37 l_0_14_37)))
 (let ((?x36192 (* l_0_14_36 l_0_14_36)))
 (let ((?x36190 (* l_0_14_35 l_0_14_35)))
 (let ((?x36188 (* l_0_14_150 l_0_14_150)))
 (let ((?x36186 (* l_0_14_149 l_0_14_149)))
 (let ((?x36184 (* l_0_14_148 l_0_14_148)))
 (let ((?x36185 (+ (+ (* (- l_0_14_10) l_0_14_10) (* l_0_14_147 l_0_14_147)) ?x36184)))
 (let ((?x36199 (- (+ (+ (+ (+ (+ (+ ?x36185 ?x36186) ?x36188) ?x36190) ?x36192) ?x36194) ?x36196) ?x36198)))
 (= (- (- ?x36199 ?x36200) ?x36202) 0.0))))))))))))))
(assert
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36252 (* ?x36251 l_0_14_42)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36249 (* ?x36248 l_0_14_41)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36246 (* ?x36245 l_0_14_40)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36243 (* ?x36242 l_0_14_39)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36240 (* ?x36239 l_0_14_154)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36237 (* ?x36236 l_0_14_153)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36234 (* ?x36233 l_0_14_152)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x36231 (* ?x36230 l_0_14_151)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36228 (* ?x35454 l_0_14_9)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x36226 (* ?x35451 l_0_14_8)))
 (let ((?x35448 (* 2.0 l_0_14_11)))
 (let ((?x36224 (* ?x35448 l_0_14_7)))
 (let ((?x36232 (+ (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x36224) ?x36226) ?x36228) ?x36231)))
 (let ((?x36253 (+ (+ (+ (+ (+ (+ (+ ?x36232 ?x36234) ?x36237) ?x36240) ?x36243) ?x36246) ?x36249) ?x36252)))
 (= ?x36253 0.0))))))))))))))))))))))))))
(assert
 (let ((?x36319 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x36316 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x36313 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x36310 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x36307 (* ?x36306 l_0_14_70)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x36304 (* ?x36303 l_0_14_69)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x36301 (* ?x36300 l_0_14_68)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x36298 (* ?x36297 l_0_14_67)))
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36295 (* ?x36251 l_0_14_47)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36293 (* ?x36248 l_0_14_46)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36291 (* ?x36245 l_0_14_45)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36289 (* ?x36242 l_0_14_44)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36287 (* ?x36070 l_0_14_9)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36285 (* ?x35871 l_0_14_8)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36283 (* ?x35861 l_0_14_7)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36281 (* ?x36239 l_0_14_159)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36279 (* ?x36236 l_0_14_158)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36277 (* ?x36233 l_0_14_157)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x36275 (* ?x36230 l_0_14_156)))
 (let ((?x36282 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_10) l_0_14_19) ?x36275) ?x36277) ?x36279) ?x36281)))
 (let ((?x36296 (+ (+ (+ (+ (- (- (- ?x36282 ?x36283) ?x36285) ?x36287) ?x36289) ?x36291) ?x36293) ?x36295)))
 (let ((?x36317 (+ (+ (+ (- (- (- (- ?x36296 ?x36298) ?x36301) ?x36304) ?x36307) ?x36310) ?x36313) ?x36316)))
 (= (+ ?x36317 ?x36319) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36387 (* ?x36251 l_0_14_53)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36385 (* ?x36248 l_0_14_52)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36383 (* ?x36245 l_0_14_51)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36381 (* ?x36242 l_0_14_50)))
 (let ((?x36144 (* 2.0 l_0_14_24)))
 (let ((?x36379 (* ?x36144 l_0_14_9)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x36377 (* ?x35931 l_0_14_8)))
 (let ((?x36139 (* 2.0 l_0_14_22)))
 (let ((?x36375 (* ?x36139 l_0_14_7)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36373 (* ?x36239 l_0_14_165)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36371 (* ?x36236 l_0_14_164)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36354 (* ?x36233 l_0_14_163)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x11997 (* ?x36230 l_0_14_162)))
 (let ((?x36374 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_10) l_0_14_25) ?x11997) ?x36354) ?x36371) ?x36373)))
 (let ((?x36388 (+ (+ (+ (+ (- (- (- ?x36374 ?x36375) ?x36377) ?x36379) ?x36381) ?x36383) ?x36385) ?x36387)))
 (= ?x36388 0.0))))))))))))))))))))))))))
(assert
 (let ((?x36458 (* l_0_14_43 l_0_14_43)))
 (let ((?x36456 (* l_0_14_42 l_0_14_42)))
 (let ((?x36454 (* l_0_14_41 l_0_14_41)))
 (let ((?x36452 (* l_0_14_40 l_0_14_40)))
 (let ((?x36450 (* l_0_14_39 l_0_14_39)))
 (let ((?x36448 (* l_0_14_155 l_0_14_155)))
 (let ((?x36446 (* l_0_14_154 l_0_14_154)))
 (let ((?x36444 (* l_0_14_153 l_0_14_153)))
 (let ((?x36442 (* l_0_14_152 l_0_14_152)))
 (let ((?x36440 (* l_0_14_151 l_0_14_151)))
 (let ((?x36438 (* l_0_14_15 l_0_14_15)))
 (let ((?x36436 (* l_0_14_14 l_0_14_14)))
 (let ((?x36423 (* l_0_14_13 l_0_14_13)))
 (let ((?x36435 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x36423)))
 (let ((?x36449 (+ (+ (+ (+ (+ (- (- ?x36435 ?x36436) ?x36438) ?x36440) ?x36442) ?x36444) ?x36446) ?x36448)))
 (= (+ (+ (+ (+ (+ ?x36449 ?x36450) ?x36452) ?x36454) ?x36456) ?x36458) 0.0)))))))))))))))))
(assert
 (let ((?x36526 (* l_0_14_99 l_0_14_99)))
 (let ((?x36524 (* l_0_14_98 l_0_14_98)))
 (let ((?x36522 (* l_0_14_97 l_0_14_97)))
 (let ((?x36520 (* l_0_14_96 l_0_14_96)))
 (let ((?x36518 (* l_0_14_95 l_0_14_95)))
 (let ((?x36516 (* l_0_14_71 l_0_14_71)))
 (let ((?x36514 (* l_0_14_70 l_0_14_70)))
 (let ((?x36512 (* l_0_14_69 l_0_14_69)))
 (let ((?x36510 (* l_0_14_68 l_0_14_68)))
 (let ((?x36508 (* l_0_14_67 l_0_14_67)))
 (let ((?x35496 (* 2.0 l_0_14_43)))
 (let ((?x36506 (* ?x35496 l_0_14_48)))
 (let ((?x35493 (* 2.0 l_0_14_42)))
 (let ((?x36504 (* ?x35493 l_0_14_47)))
 (let ((?x35490 (* 2.0 l_0_14_41)))
 (let ((?x36502 (* ?x35490 l_0_14_46)))
 (let ((?x35487 (* 2.0 l_0_14_40)))
 (let ((?x36500 (* ?x35487 l_0_14_45)))
 (let ((?x35484 (* 2.0 l_0_14_39)))
 (let ((?x36498 (* ?x35484 l_0_14_44)))
 (let ((?x35602 (* 2.0 l_0_14_155)))
 (let ((?x36496 (* ?x35602 l_0_14_160)))
 (let ((?x35599 (* 2.0 l_0_14_154)))
 (let ((?x36494 (* ?x35599 l_0_14_159)))
 (let ((?x35596 (* 2.0 l_0_14_153)))
 (let ((?x36492 (* ?x35596 l_0_14_158)))
 (let ((?x35593 (* 2.0 l_0_14_152)))
 (let ((?x36490 (* ?x35593 l_0_14_157)))
 (let ((?x35590 (* 2.0 l_0_14_151)))
 (let ((?x36488 (* ?x35590 l_0_14_156)))
 (let ((?x35463 (* 2.0 l_0_14_15)))
 (let ((?x36486 (* ?x35463 l_0_14_20)))
 (let ((?x35457 (* 2.0 l_0_14_14)))
 (let ((?x36484 (* ?x35457 l_0_14_19)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36482 (* ?x35454 l_0_14_18)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x36480 (* ?x35451 l_0_14_17)))
 (let ((?x36487 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_16) ?x36480) ?x36482) ?x36484) ?x36486)))
 (let ((?x36501 (+ (+ (+ (+ (+ (+ (+ ?x36487 ?x36488) ?x36490) ?x36492) ?x36494) ?x36496) ?x36498) ?x36500)))
 (let ((?x36515 (- (- (- (- (+ (+ (+ ?x36501 ?x36502) ?x36504) ?x36506) ?x36508) ?x36510) ?x36512) ?x36514)))
 (= (+ (+ (+ (+ (+ (- ?x36515 ?x36516) ?x36518) ?x36520) ?x36522) ?x36524) ?x36526) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35496 (* 2.0 l_0_14_43)))
 (let ((?x35497 (* ?x35496 l_0_14_54)))
 (let ((?x35493 (* 2.0 l_0_14_42)))
 (let ((?x35494 (* ?x35493 l_0_14_53)))
 (let ((?x35490 (* 2.0 l_0_14_41)))
 (let ((?x35491 (* ?x35490 l_0_14_52)))
 (let ((?x35487 (* 2.0 l_0_14_40)))
 (let ((?x35488 (* ?x35487 l_0_14_51)))
 (let ((?x35484 (* 2.0 l_0_14_39)))
 (let ((?x35485 (* ?x35484 l_0_14_50)))
 (let ((?x35602 (* 2.0 l_0_14_155)))
 (let ((?x35603 (* ?x35602 l_0_14_166)))
 (let ((?x35599 (* 2.0 l_0_14_154)))
 (let ((?x35600 (* ?x35599 l_0_14_165)))
 (let ((?x35596 (* 2.0 l_0_14_153)))
 (let ((?x35597 (* ?x35596 l_0_14_164)))
 (let ((?x35593 (* 2.0 l_0_14_152)))
 (let ((?x35594 (* ?x35593 l_0_14_163)))
 (let ((?x35590 (* 2.0 l_0_14_151)))
 (let ((?x35591 (* ?x35590 l_0_14_162)))
 (let ((?x35463 (* 2.0 l_0_14_15)))
 (let ((?x35464 (* ?x35463 l_0_14_26)))
 (let ((?x35457 (* 2.0 l_0_14_14)))
 (let ((?x35458 (* ?x35457 l_0_14_25)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x35455 (* ?x35454 l_0_14_24)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x35452 (* ?x35451 l_0_14_23)))
 (let ((?x36579 (- (- (- (- (* (* (- 2.0) l_0_14_11) l_0_14_22) ?x35452) ?x35455) ?x35458) ?x35464)))
 (let ((?x36586 (+ (+ (+ (+ (+ (+ (+ ?x36579 ?x35591) ?x35594) ?x35597) ?x35600) ?x35603) ?x35485) ?x35488)))
 (= (+ (+ (+ ?x36586 ?x35491) ?x35494) ?x35497) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x36639 (* ?x35634 l_0_14_76)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x36637 (* ?x35631 l_0_14_75)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x36635 (* ?x35628 l_0_14_74)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x36633 (* ?x35625 l_0_14_73)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x36631 (* ?x35622 l_0_14_72)))
 (let ((?x36629 (* l_0_14_49 l_0_14_49)))
 (let ((?x36627 (* l_0_14_48 l_0_14_48)))
 (let ((?x36625 (* l_0_14_47 l_0_14_47)))
 (let ((?x36623 (* l_0_14_46 l_0_14_46)))
 (let ((?x36621 (* l_0_14_45 l_0_14_45)))
 (let ((?x36619 (* l_0_14_44 l_0_14_44)))
 (let ((?x36617 (* l_0_14_21 l_0_14_21)))
 (let ((?x36615 (* l_0_14_20 l_0_14_20)))
 (let ((?x36613 (* l_0_14_19 l_0_14_19)))
 (let ((?x36611 (* l_0_14_18 l_0_14_18)))
 (let ((?x36609 (* l_0_14_17 l_0_14_17)))
 (let ((?x36607 (* l_0_14_161 l_0_14_161)))
 (let ((?x36605 (* l_0_14_160 l_0_14_160)))
 (let ((?x36603 (* l_0_14_16 l_0_14_16)))
 (let ((?x36601 (* l_0_14_159 l_0_14_159)))
 (let ((?x36599 (* l_0_14_158 l_0_14_158)))
 (let ((?x36597 (* l_0_14_157 l_0_14_157)))
 (let ((?x36595 (* l_0_14_156 l_0_14_156)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x36593 (* ?x26077 l_0_14_99)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x12092 (* ?x23685 l_0_14_98)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x12093 (* ?x12068 l_0_14_97)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x12072 (* ?x26067 l_0_14_96)))
 (let ((?x36594 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_95) ?x12072) ?x12093) ?x12092) ?x36593)))
 (let ((?x36608 (+ (+ (- (+ (+ (+ (+ ?x36594 ?x36595) ?x36597) ?x36599) ?x36601) ?x36603) ?x36605) ?x36607)))
 (let ((?x36622 (+ (+ (- (- (- (- (- ?x36608 ?x36609) ?x36611) ?x36613) ?x36615) ?x36617) ?x36619) ?x36621)))
 (let ((?x36636 (- (- (- (+ (+ (+ (+ ?x36622 ?x36623) ?x36625) ?x36627) ?x36629) ?x36631) ?x36633) ?x36635)))
 (= (- (- ?x36636 ?x36637) ?x36639) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x35635 (* ?x35634 l_0_14_82)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x35632 (* ?x35631 l_0_14_81)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x35629 (* ?x35628 l_0_14_80)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x35626 (* ?x35625 l_0_14_79)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x35623 (* ?x35622 l_0_14_78)))
 (let ((?x36741 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x36738 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x36735 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x36732 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x36729 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x36726 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x36723 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x36720 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x36717 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36714 (* ?x36070 l_0_14_24)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36712 (* ?x35871 l_0_14_23)))
 (let ((?x36710 (* (* 2.0 l_0_14_161) l_0_14_167)))
 (let ((?x36707 (* (* 2.0 l_0_14_160) l_0_14_166)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36704 (* ?x35861 l_0_14_22)))
 (let ((?x36702 (* (* 2.0 l_0_14_159) l_0_14_165)))
 (let ((?x36699 (* (* 2.0 l_0_14_158) l_0_14_164)))
 (let ((?x36696 (* (* 2.0 l_0_14_157) l_0_14_163)))
 (let ((?x36693 (* (* 2.0 l_0_14_156) l_0_14_162)))
 (let ((?x35571 (* (* 2.0 l_0_14_110) l_0_14_99)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x35568 (* ?x35567 l_0_14_98)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x35565 (* ?x35564 l_0_14_97)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x35562 (* ?x35561 l_0_14_96)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x35559 (* ?x35558 l_0_14_95)))
 (let ((?x36700 (+ (+ (+ (+ (+ (+ (+ ?x35559 ?x35562) ?x35565) ?x35568) ?x35571) ?x36693) ?x36696) ?x36699)))
 (let ((?x36718 (- (- (- (+ (+ (- (+ ?x36700 ?x36702) ?x36704) ?x36707) ?x36710) ?x36712) ?x36714) ?x36717)))
 (let ((?x36739 (+ (+ (+ (+ (+ (- (- ?x36718 ?x36720) ?x36723) ?x36726) ?x36729) ?x36732) ?x36735) ?x36738)))
 (= (- (- (- (- (- (+ ?x36739 ?x36741) ?x35623) ?x35626) ?x35629) ?x35632) ?x35635) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36858 (* l_0_14_56 l_0_14_56)))
 (let ((?x36856 (* l_0_14_55 l_0_14_55)))
 (let ((?x36854 (* l_0_14_54 l_0_14_54)))
 (let ((?x36852 (* l_0_14_53 l_0_14_53)))
 (let ((?x36850 (* l_0_14_52 l_0_14_52)))
 (let ((?x36848 (* l_0_14_51 l_0_14_51)))
 (let ((?x36846 (* l_0_14_50 l_0_14_50)))
 (let ((?x36844 (* l_0_14_28 l_0_14_28)))
 (let ((?x36842 (* l_0_14_27 l_0_14_27)))
 (let ((?x36840 (* l_0_14_26 l_0_14_26)))
 (let ((?x36838 (* l_0_14_25 l_0_14_25)))
 (let ((?x36836 (* l_0_14_24 l_0_14_24)))
 (let ((?x36834 (* l_0_14_23 l_0_14_23)))
 (let ((?x36832 (* l_0_14_22 l_0_14_22)))
 (let ((?x36830 (* l_0_14_168 l_0_14_168)))
 (let ((?x36828 (* l_0_14_167 l_0_14_167)))
 (let ((?x36826 (* l_0_14_166 l_0_14_166)))
 (let ((?x36824 (* l_0_14_165 l_0_14_165)))
 (let ((?x36822 (* l_0_14_164 l_0_14_164)))
 (let ((?x36823 (+ (+ (* l_0_14_162 l_0_14_162) (* l_0_14_163 l_0_14_163)) ?x36822)))
 (let ((?x36837 (- (- (- (+ (+ (+ (+ ?x36823 ?x36824) ?x36826) ?x36828) ?x36830) ?x36832) ?x36834) ?x36836)))
 (let ((?x36851 (+ (+ (+ (- (- (- (- ?x36837 ?x36838) ?x36840) ?x36842) ?x36844) ?x36846) ?x36848) ?x36850)))
 (= (+ (+ (+ (+ ?x36851 ?x36852) ?x36854) ?x36856) ?x36858) 0.0))))))))))))))))))))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35482 (* ?x35481 l_0_14_30)))
 (let ((?x36883 (* l_0_14_227 l_0_14_227)))
 (let ((?x36881 (* l_0_14_226 l_0_14_226)))
 (let ((?x36879 (* l_0_14_199 l_0_14_199)))
 (let ((?x36877 (* l_0_14_198 l_0_14_198)))
 (let ((?x36876 (+ (* (* 2.0 l_0_14_1) l_0_14_2) (* (* 4.0 l_0_14_169) l_0_14_170))))
 (= (- (- (- (- (- ?x36876 ?x36877) ?x36879) ?x36881) ?x36883) ?x35482) 0.0)))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x36922 (* ?x35735 l_0_14_86)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x36920 (* ?x35732 l_0_14_58)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35620 (* ?x35481 l_0_14_32)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35461 (* ?x35460 l_0_14_142)))
 (let ((?x36900 (- (* (* 2.0 l_0_14_1) l_0_14_4) (* (* 2.0 l_0_14_113) l_0_14_114))))
 (let ((?x36906 (+ (- (- ?x36900 ?x35461) (* (* 2.0 l_0_14_169) l_0_14_170)) (* (* 4.0 l_0_14_169) l_0_14_172))))
 (let ((?x36912 (- (- ?x36906 (* (* 2.0 l_0_14_198) l_0_14_200)) (* (* 2.0 l_0_14_199) l_0_14_201))))
 (let ((?x36918 (- (- ?x36912 (* (* 2.0 l_0_14_226) l_0_14_228)) (* (* 2.0 l_0_14_227) l_0_14_229))))
 (= (+ (- (- ?x36918 ?x35620) ?x36920) ?x36922) 0.0))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x36922 (* ?x35735 l_0_14_86)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x36920 (* ?x35732 l_0_14_58)))
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35716 (* ?x35481 l_0_14_35)))
 (let ((?x36949 (+ (* (* 2.0 l_0_14_1) l_0_14_7) (* (* 4.0 l_0_14_169) l_0_14_175))))
 (let ((?x36953 (- (- ?x36949 (* (* 2.0 l_0_14_198) l_0_14_203)) (* (* 2.0 l_0_14_199) l_0_14_204))))
 (let ((?x36957 (- (- ?x36953 (* (* 2.0 l_0_14_226) l_0_14_231)) (* (* 2.0 l_0_14_227) l_0_14_232))))
 (= (- (+ (- ?x36957 ?x35716) ?x36920) ?x36922) 0.0)))))))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x11620 (* ?x35481 l_0_14_39)))
 (let ((?x36979 (+ (* (* 2.0 l_0_14_1) l_0_14_11) (* (* 4.0 l_0_14_169) l_0_14_179))))
 (let ((?x36983 (- (- ?x36979 (* (* 2.0 l_0_14_198) l_0_14_207)) (* (* 2.0 l_0_14_199) l_0_14_208))))
 (let ((?x36987 (- (- ?x36983 (* (* 2.0 l_0_14_226) l_0_14_235)) (* (* 2.0 l_0_14_227) l_0_14_236))))
 (= (- ?x36987 ?x11620) 0.0)))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35730 (* ?x35481 l_0_14_44)))
 (let ((?x37013 (+ (* (* 2.0 l_0_14_1) l_0_14_16) (* (* 4.0 l_0_14_169) l_0_14_184))))
 (let ((?x37017 (- (- ?x37013 (* (* 2.0 l_0_14_198) l_0_14_212)) (* (* 2.0 l_0_14_199) l_0_14_213))))
 (let ((?x37021 (- (- ?x37017 (* (* 2.0 l_0_14_226) l_0_14_240)) (* (* 2.0 l_0_14_227) l_0_14_241))))
 (= (- ?x37021 ?x35730) 0.0)))))))
(assert
 (let ((?x35481 (* 2.0 l_0_14_29)))
 (let ((?x35756 (* ?x35481 l_0_14_50)))
 (let ((?x37045 (+ (* (* 2.0 l_0_14_1) l_0_14_22) (* (* 4.0 l_0_14_169) l_0_14_190))))
 (let ((?x37049 (- (- ?x37045 (* (* 2.0 l_0_14_198) l_0_14_218)) (* (* 2.0 l_0_14_199) l_0_14_219))))
 (let ((?x37053 (- (- ?x37049 (* (* 2.0 l_0_14_226) l_0_14_246)) (* (* 2.0 l_0_14_227) l_0_14_247))))
 (= (- ?x37053 ?x35756) 0.0)))))))
(assert
 (let ((?x35776 (* l_0_14_31 l_0_14_31)))
 (let ((?x35774 (* l_0_14_30 l_0_14_30)))
 (let ((?x35772 (* l_0_14_3 l_0_14_3)))
 (let ((?x35765 (* l_0_14_2 l_0_14_2)))
 (let ((?x37077 (* l_0_14_171 l_0_14_171)))
 (let ((?x37078 (* 2.0 ?x37077)))
 (let ((?x12700 (* l_0_14_170 l_0_14_170)))
 (let ((?x12702 (* 2.0 ?x12700)))
 (= (- (- (+ (+ (+ ?x12702 ?x37078) ?x35765) ?x35772) ?x35774) ?x35776) 0.0))))))))))
(assert
 (let ((?x37111 (* l_0_14_87 l_0_14_87)))
 (let ((?x37109 (* l_0_14_86 l_0_14_86)))
 (let ((?x37107 (* l_0_14_59 l_0_14_59)))
 (let ((?x37105 (* l_0_14_58 l_0_14_58)))
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35799 (* ?x35798 l_0_14_33)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35796 (* ?x35795 l_0_14_32)))
 (let ((?x35792 (* 2.0 l_0_14_3)))
 (let ((?x35793 (* ?x35792 l_0_14_5)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35790 (* ?x35789 l_0_14_4)))
 (let ((?x37077 (* l_0_14_171 l_0_14_171)))
 (let ((?x12700 (* l_0_14_170 l_0_14_170)))
 (let ((?x35762 (* l_0_14_143 l_0_14_143)))
 (let ((?x35760 (* l_0_14_142 l_0_14_142)))
 (let ((?x37091 (- (- (* (- l_0_14_114) l_0_14_114) (* l_0_14_115 l_0_14_115)) ?x35760)))
 (let ((?x37099 (+ (- (+ (- ?x37091 ?x35762) (* (* 4.0 l_0_14_170) l_0_14_172)) ?x12700) (* (* 4.0 l_0_14_171) l_0_14_173))))
 (let ((?x37108 (- (- (- (- (+ (+ (- ?x37099 ?x37077) ?x35790) ?x35793) ?x35796) ?x35799) ?x37105) ?x37107)))
 (= (+ (+ ?x37108 ?x37109) ?x37111) 0.0)))))))))))))))))))))
(assert
 (let ((?x37111 (* l_0_14_87 l_0_14_87)))
 (let ((?x37109 (* l_0_14_86 l_0_14_86)))
 (let ((?x37107 (* l_0_14_59 l_0_14_59)))
 (let ((?x37105 (* l_0_14_58 l_0_14_58)))
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35831 (* ?x35798 l_0_14_36)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35829 (* ?x35795 l_0_14_35)))
 (let ((?x35792 (* 2.0 l_0_14_3)))
 (let ((?x35827 (* ?x35792 l_0_14_8)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35825 (* ?x35789 l_0_14_7)))
 (let ((?x37120 (+ (* (* 4.0 l_0_14_170) l_0_14_175) (* (* 4.0 l_0_14_171) l_0_14_176))))
 (let ((?x37127 (- (+ (+ (- (- (+ (+ ?x37120 ?x35825) ?x35827) ?x35829) ?x35831) ?x37105) ?x37107) ?x37109)))
 (= (- ?x37127 ?x37111) 0.0))))))))))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35846 (* ?x35798 l_0_14_40)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35844 (* ?x35795 l_0_14_39)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x25840 (* ?x35451 l_0_14_3)))
 (let ((?x37138 (+ (+ (* (* 2.0 l_0_14_11) l_0_14_2) ?x25840) (* (* 4.0 l_0_14_170) l_0_14_179))))
 (= (- (- (+ ?x37138 (* (* 4.0 l_0_14_171) l_0_14_180)) ?x35844) ?x35846) 0.0)))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35876 (* ?x35798 l_0_14_45)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35874 (* ?x35795 l_0_14_44)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x35872 (* ?x35871 l_0_14_3)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x35862 (* ?x35861 l_0_14_2)))
 (let ((?x12777 (+ (+ (+ ?x35862 ?x35872) (* (* 4.0 l_0_14_170) l_0_14_184)) (* (* 4.0 l_0_14_171) l_0_14_185))))
 (= (- (- ?x12777 ?x35874) ?x35876) 0.0)))))))))))
(assert
 (let ((?x35798 (* 2.0 l_0_14_31)))
 (let ((?x35936 (* ?x35798 l_0_14_51)))
 (let ((?x35795 (* 2.0 l_0_14_30)))
 (let ((?x35934 (* ?x35795 l_0_14_50)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x35932 (* ?x35931 l_0_14_3)))
 (let ((?x35789 (* 2.0 l_0_14_2)))
 (let ((?x35929 (* ?x35789 l_0_14_22)))
 (let ((?x25669 (+ (* (* 4.0 l_0_14_170) l_0_14_190) (* (* 4.0 l_0_14_171) l_0_14_191))))
 (= (- (- (+ (+ ?x25669 ?x35929) ?x35932) ?x35934) ?x35936) 0.0)))))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x37208 (* ?x35887 l_0_14_89)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x37206 (* ?x35884 l_0_14_88)))
 (let ((?x35974 (* l_0_14_6 l_0_14_6)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37203 (* ?x35881 l_0_14_61)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37201 (* ?x35878 l_0_14_60)))
 (let ((?x35972 (* l_0_14_5 l_0_14_5)))
 (let ((?x35970 (* l_0_14_4 l_0_14_4)))
 (let ((?x35968 (* l_0_14_34 l_0_14_34)))
 (let ((?x35966 (* l_0_14_33 l_0_14_33)))
 (let ((?x35964 (* l_0_14_32 l_0_14_32)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35787 (* ?x35786 l_0_14_145)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35785 (* ?x11686 l_0_14_144)))
 (let ((?x37178 (- (* (* (- 2.0) l_0_14_114) l_0_14_116) (* (* 2.0 l_0_14_115) l_0_14_117))))
 (let ((?x37186 (- (- (- (- ?x37178 ?x35785) ?x35787) (* (* 2.0 l_0_14_170) l_0_14_172)) (* (* 2.0 l_0_14_171) l_0_14_173))))
 (let ((?x37192 (+ (+ ?x37186 (* 2.0 (* l_0_14_172 l_0_14_172))) (* 2.0 (* l_0_14_173 l_0_14_173)))))
 (let ((?x37198 (- (- (- (+ ?x37192 (* 2.0 (* l_0_14_174 l_0_14_174))) ?x35964) ?x35966) ?x35968)))
 (let ((?x37209 (+ (+ (+ (- (- (+ (+ ?x37198 ?x35970) ?x35972) ?x37201) ?x37203) ?x35974) ?x37206) ?x37208)))
 (= ?x37209 0.0)))))))))))))))))))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x37277 (* ?x35887 l_0_14_92)))
 (let ((?x37208 (* ?x35887 l_0_14_89)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x37274 (* ?x35884 l_0_14_91)))
 (let ((?x37206 (* ?x35884 l_0_14_88)))
 (let ((?x35997 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37270 (* ?x35881 l_0_14_64)))
 (let ((?x37203 (* ?x35881 l_0_14_61)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37267 (* ?x35878 l_0_14_63)))
 (let ((?x37201 (* ?x35878 l_0_14_60)))
 (let ((?x35994 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x35991 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x35988 (* ?x35987 l_0_14_37)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x35985 (* ?x35984 l_0_14_36)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x11762 (* ?x23290 l_0_14_35)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35823 (* ?x35786 l_0_14_148)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35822 (* ?x11686 l_0_14_147)))
 (let ((?x37237 (- (* (* (- 2.0) l_0_14_114) l_0_14_119) (* (* 2.0 l_0_14_115) l_0_14_120))))
 (let ((?x37251 (- (- (- (- ?x37237 ?x35822) ?x35823) (* (* 2.0 l_0_14_170) l_0_14_175)) (* (* 2.0 l_0_14_171) l_0_14_176))))
 (let ((?x37257 (+ (+ ?x37251 (* (* 4.0 l_0_14_172) l_0_14_175)) (* (* 4.0 l_0_14_173) l_0_14_176))))
 (let ((?x37263 (- (- (- (+ ?x37257 (* (* 4.0 l_0_14_174) l_0_14_177)) ?x11762) ?x35985) ?x35988)))
 (let ((?x37272 (+ (- (+ (- (+ (+ (+ ?x37263 ?x35991) ?x35994) ?x37201) ?x37267) ?x37203) ?x37270) ?x35997)))
 (= (+ (- (+ (- ?x37272 ?x37206) ?x37274) ?x37208) ?x37277) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x35888 (* ?x35887 l_0_14_96)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x35885 (* ?x35884 l_0_14_95)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x35882 (* ?x35881 l_0_14_68)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x35879 (* ?x35878 l_0_14_67)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36041 (* ?x35987 l_0_14_41)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36039 (* ?x35984 l_0_14_40)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36037 (* ?x23290 l_0_14_39)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35842 (* ?x35786 l_0_14_152)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35840 (* ?x11686 l_0_14_151)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36029 (* ?x35454 l_0_14_6)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x11804 (* ?x35451 l_0_14_5)))
 (let ((?x37308 (- (* (* 2.0 l_0_14_11) l_0_14_4) (* (* 2.0 l_0_14_114) l_0_14_123))))
 (let ((?x37313 (- (+ (+ (- ?x37308 (* (* 2.0 l_0_14_115) l_0_14_124)) ?x11804) ?x36029) ?x35840)))
 (let ((?x37318 (- (- (- ?x37313 ?x35842) (* (* 2.0 l_0_14_170) l_0_14_179)) (* (* 2.0 l_0_14_171) l_0_14_180))))
 (let ((?x37322 (+ (+ ?x37318 (* (* 4.0 l_0_14_172) l_0_14_179)) (* (* 4.0 l_0_14_173) l_0_14_180))))
 (let ((?x37327 (- (- (- (+ ?x37322 (* (* 4.0 l_0_14_174) l_0_14_181)) ?x36037) ?x36039) ?x36041)))
 (= (+ (+ (- (- ?x37327 ?x35879) ?x35882) ?x35885) ?x35888) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37388 (* ?x35881 l_0_14_73)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37386 (* ?x35878 l_0_14_72)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36077 (* ?x35987 l_0_14_46)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36075 (* ?x35984 l_0_14_45)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36073 (* ?x23290 l_0_14_44)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36071 (* ?x36070 l_0_14_6)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36068 (* ?x35871 l_0_14_5)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36056 (* ?x35861 l_0_14_4)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35857 (* ?x35786 l_0_14_157)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x35855 (* ?x11686 l_0_14_156)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x37362 (* ?x26067 l_0_14_87)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x13469 (* ?x26107 l_0_14_86)))
 (let ((?x37363 (+ ?x13469 ?x37362)))
 (let ((?x37367 (- (- ?x37363 (* (* 2.0 l_0_14_114) l_0_14_128)) (* (* 2.0 l_0_14_115) l_0_14_129))))
 (let ((?x37373 (- (+ (+ (- (- ?x37367 ?x35855) ?x35857) ?x36056) ?x36068) (* (* 2.0 l_0_14_170) l_0_14_184))))
 (let ((?x37377 (+ (- ?x37373 (* (* 2.0 l_0_14_171) l_0_14_185)) (* (* 4.0 l_0_14_172) l_0_14_184))))
 (let ((?x37381 (+ (+ ?x37377 (* (* 4.0 l_0_14_173) l_0_14_185)) (* (* 4.0 l_0_14_174) l_0_14_186))))
 (= (- (- (- (- (- (+ ?x37381 ?x36071) ?x36073) ?x36075) ?x36077) ?x37386) ?x37388) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37453 (* ?x35881 l_0_14_79)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37451 (* ?x35878 l_0_14_78)))
 (let ((?x35987 (* 2.0 l_0_14_34)))
 (let ((?x36151 (* ?x35987 l_0_14_52)))
 (let ((?x35984 (* 2.0 l_0_14_33)))
 (let ((?x36149 (* ?x35984 l_0_14_51)))
 (let ((?x23290 (* 2.0 l_0_14_32)))
 (let ((?x36147 (* ?x23290 l_0_14_50)))
 (let ((?x36144 (* 2.0 l_0_14_24)))
 (let ((?x36145 (* ?x36144 l_0_14_6)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x36142 (* ?x35931 l_0_14_5)))
 (let ((?x36139 (* 2.0 l_0_14_22)))
 (let ((?x36140 (* ?x36139 l_0_14_4)))
 (let ((?x35786 (* 2.0 l_0_14_143)))
 (let ((?x35919 (* ?x35786 l_0_14_163)))
 (let ((?x11686 (* 2.0 l_0_14_142)))
 (let ((?x25890 (* ?x11686 l_0_14_162)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x37427 (* ?x35561 l_0_14_87)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x37426 (* ?x35558 l_0_14_86)))
 (let ((?x37428 (+ ?x37426 ?x37427)))
 (let ((?x37432 (- (- ?x37428 (* (* 2.0 l_0_14_114) l_0_14_134)) (* (* 2.0 l_0_14_115) l_0_14_135))))
 (let ((?x37438 (- (- (- (- ?x37432 ?x25890) ?x35919) (* (* 2.0 l_0_14_170) l_0_14_190)) (* (* 2.0 l_0_14_171) l_0_14_191))))
 (let ((?x37442 (+ (+ ?x37438 (* (* 4.0 l_0_14_172) l_0_14_190)) (* (* 4.0 l_0_14_173) l_0_14_191))))
 (let ((?x37447 (+ (+ (+ (+ ?x37442 (* (* 4.0 l_0_14_174) l_0_14_192)) ?x36140) ?x36142) ?x36145)))
 (= (- (- (- (- (- ?x37447 ?x36147) ?x36149) ?x36151) ?x37451) ?x37453) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x36202 (* l_0_14_9 l_0_14_9)))
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x37277 (* ?x35887 l_0_14_92)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x37274 (* ?x35884 l_0_14_91)))
 (let ((?x36200 (* l_0_14_8 l_0_14_8)))
 (let ((?x36198 (* l_0_14_7 l_0_14_7)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37270 (* ?x35881 l_0_14_64)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37267 (* ?x35878 l_0_14_63)))
 (let ((?x36196 (* l_0_14_38 l_0_14_38)))
 (let ((?x36194 (* l_0_14_37 l_0_14_37)))
 (let ((?x36192 (* l_0_14_36 l_0_14_36)))
 (let ((?x36190 (* l_0_14_35 l_0_14_35)))
 (let ((?x37491 (* l_0_14_178 l_0_14_178)))
 (let ((?x37492 (* 2.0 ?x37491)))
 (let ((?x37488 (* l_0_14_177 l_0_14_177)))
 (let ((?x37489 (* 2.0 ?x37488)))
 (let ((?x37485 (* l_0_14_176 l_0_14_176)))
 (let ((?x37486 (* 2.0 ?x37485)))
 (let ((?x26496 (* l_0_14_175 l_0_14_175)))
 (let ((?x37483 (* 2.0 ?x26496)))
 (let ((?x11885 (* l_0_14_10 l_0_14_10)))
 (let ((?x37496 (- (- (- (+ (+ (+ (+ ?x11885 ?x37483) ?x37486) ?x37489) ?x37492) ?x36190) ?x36192) ?x36194)))
 (let ((?x37503 (- (- (+ (+ (+ (+ (- ?x37496 ?x36196) ?x37267) ?x37270) ?x36198) ?x36200) ?x37274) ?x37277)))
 (= (+ ?x37503 ?x36202) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x35888 (* ?x35887 l_0_14_96)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x35885 (* ?x35884 l_0_14_95)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x35882 (* ?x35881 l_0_14_68)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x35879 (* ?x35878 l_0_14_67)))
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36252 (* ?x36251 l_0_14_42)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36249 (* ?x36248 l_0_14_41)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36246 (* ?x36245 l_0_14_40)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36243 (* ?x36242 l_0_14_39)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36228 (* ?x35454 l_0_14_9)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x36226 (* ?x35451 l_0_14_8)))
 (let ((?x35448 (* 2.0 l_0_14_11)))
 (let ((?x36224 (* ?x35448 l_0_14_7)))
 (let ((?x13694 (+ (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_14) ?x36224) ?x36226) ?x36228) (* (* 4.0 l_0_14_175) l_0_14_179))))
 (let ((?x26500 (+ (+ ?x13694 (* (* 4.0 l_0_14_176) l_0_14_180)) (* (* 4.0 l_0_14_177) l_0_14_181))))
 (let ((?x13687 (- (- (- (+ ?x26500 (* (* 4.0 l_0_14_178) l_0_14_182)) ?x36243) ?x36246) ?x36249)))
 (= (- (- (+ (+ (- ?x13687 ?x36252) ?x35879) ?x35882) ?x35885) ?x35888) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37388 (* ?x35881 l_0_14_73)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37386 (* ?x35878 l_0_14_72)))
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36295 (* ?x36251 l_0_14_47)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36293 (* ?x36248 l_0_14_46)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36291 (* ?x36245 l_0_14_45)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36289 (* ?x36242 l_0_14_44)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36287 (* ?x36070 l_0_14_9)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36285 (* ?x35871 l_0_14_8)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36283 (* ?x35861 l_0_14_7)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x37362 (* ?x26067 l_0_14_87)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x13469 (* ?x26107 l_0_14_86)))
 (let ((?x37530 (+ (+ (- (- (* (* 2.0 l_0_14_10) l_0_14_19) ?x13469) ?x37362) ?x36283) ?x36285)))
 (let ((?x37534 (+ (+ ?x37530 (* (* 4.0 l_0_14_175) l_0_14_184)) (* (* 4.0 l_0_14_176) l_0_14_185))))
 (let ((?x37538 (+ (+ ?x37534 (* (* 4.0 l_0_14_177) l_0_14_186)) (* (* 4.0 l_0_14_178) l_0_14_187))))
 (let ((?x37545 (+ (+ (- (- (- (- (+ ?x37538 ?x36287) ?x36289) ?x36291) ?x36293) ?x36295) ?x37386) ?x37388)))
 (= ?x37545 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37453 (* ?x35881 l_0_14_79)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37451 (* ?x35878 l_0_14_78)))
 (let ((?x36251 (* 2.0 l_0_14_38)))
 (let ((?x36387 (* ?x36251 l_0_14_53)))
 (let ((?x36248 (* 2.0 l_0_14_37)))
 (let ((?x36385 (* ?x36248 l_0_14_52)))
 (let ((?x36245 (* 2.0 l_0_14_36)))
 (let ((?x36383 (* ?x36245 l_0_14_51)))
 (let ((?x36242 (* 2.0 l_0_14_35)))
 (let ((?x36381 (* ?x36242 l_0_14_50)))
 (let ((?x36144 (* 2.0 l_0_14_24)))
 (let ((?x36379 (* ?x36144 l_0_14_9)))
 (let ((?x35931 (* 2.0 l_0_14_23)))
 (let ((?x36377 (* ?x35931 l_0_14_8)))
 (let ((?x36139 (* 2.0 l_0_14_22)))
 (let ((?x36375 (* ?x36139 l_0_14_7)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x37427 (* ?x35561 l_0_14_87)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x37426 (* ?x35558 l_0_14_86)))
 (let ((?x26562 (+ (- (- (* (* 2.0 l_0_14_10) l_0_14_25) ?x37426) ?x37427) (* (* 4.0 l_0_14_175) l_0_14_190))))
 (let ((?x13808 (+ (+ ?x26562 (* (* 4.0 l_0_14_176) l_0_14_191)) (* (* 4.0 l_0_14_177) l_0_14_192))))
 (let ((?x37554 (+ (+ (+ (+ ?x13808 (* (* 4.0 l_0_14_178) l_0_14_193)) ?x36375) ?x36377) ?x36379)))
 (= (+ (+ (- (- (- (- ?x37554 ?x36381) ?x36383) ?x36385) ?x36387) ?x37451) ?x37453) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x36458 (* l_0_14_43 l_0_14_43)))
 (let ((?x36456 (* l_0_14_42 l_0_14_42)))
 (let ((?x36454 (* l_0_14_41 l_0_14_41)))
 (let ((?x36452 (* l_0_14_40 l_0_14_40)))
 (let ((?x36450 (* l_0_14_39 l_0_14_39)))
 (let ((?x37593 (* l_0_14_183 l_0_14_183)))
 (let ((?x37594 (* 2.0 ?x37593)))
 (let ((?x37590 (* l_0_14_182 l_0_14_182)))
 (let ((?x37591 (* 2.0 ?x37590)))
 (let ((?x37587 (* l_0_14_181 l_0_14_181)))
 (let ((?x37588 (* 2.0 ?x37587)))
 (let ((?x37584 (* l_0_14_180 l_0_14_180)))
 (let ((?x37585 (* 2.0 ?x37584)))
 (let ((?x37581 (* l_0_14_179 l_0_14_179)))
 (let ((?x37582 (* 2.0 ?x37581)))
 (let ((?x36438 (* l_0_14_15 l_0_14_15)))
 (let ((?x36436 (* l_0_14_14 l_0_14_14)))
 (let ((?x36423 (* l_0_14_13 l_0_14_13)))
 (let ((?x37579 (+ (+ (+ (* l_0_14_11 l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x36423) ?x36436)))
 (let ((?x37596 (- (+ (+ (+ (+ (+ (+ ?x37579 ?x36438) ?x37582) ?x37585) ?x37588) ?x37591) ?x37594) ?x36450)))
 (= (- (- (- (- ?x37596 ?x36452) ?x36454) ?x36456) ?x36458) 0.0))))))))))))))))))))))
(assert
 (let ((?x35496 (* 2.0 l_0_14_43)))
 (let ((?x36506 (* ?x35496 l_0_14_48)))
 (let ((?x35493 (* 2.0 l_0_14_42)))
 (let ((?x36504 (* ?x35493 l_0_14_47)))
 (let ((?x35490 (* 2.0 l_0_14_41)))
 (let ((?x36502 (* ?x35490 l_0_14_46)))
 (let ((?x35487 (* 2.0 l_0_14_40)))
 (let ((?x36500 (* ?x35487 l_0_14_45)))
 (let ((?x35484 (* 2.0 l_0_14_39)))
 (let ((?x36498 (* ?x35484 l_0_14_44)))
 (let ((?x35463 (* 2.0 l_0_14_15)))
 (let ((?x36486 (* ?x35463 l_0_14_20)))
 (let ((?x35457 (* 2.0 l_0_14_14)))
 (let ((?x36484 (* ?x35457 l_0_14_19)))
 (let ((?x35454 (* 2.0 l_0_14_13)))
 (let ((?x36482 (* ?x35454 l_0_14_18)))
 (let ((?x35451 (* 2.0 l_0_14_12)))
 (let ((?x36480 (* ?x35451 l_0_14_17)))
 (let ((?x26633 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_16) ?x36480) ?x36482) ?x36484) ?x36486)))
 (let ((?x37605 (+ (+ ?x26633 (* (* 4.0 l_0_14_179) l_0_14_184)) (* (* 4.0 l_0_14_180) l_0_14_185))))
 (let ((?x37609 (+ (+ ?x37605 (* (* 4.0 l_0_14_181) l_0_14_186)) (* (* 4.0 l_0_14_182) l_0_14_187))))
 (let ((?x37614 (- (- (- (+ ?x37609 (* (* 4.0 l_0_14_183) l_0_14_188)) ?x36498) ?x36500) ?x36502)))
 (= (- (- ?x37614 ?x36504) ?x36506) 0.0))))))))))))))))))))))))
(assert
 (let ((?x36629 (* l_0_14_49 l_0_14_49)))
 (let ((?x36627 (* l_0_14_48 l_0_14_48)))
 (let ((?x36625 (* l_0_14_47 l_0_14_47)))
 (let ((?x36623 (* l_0_14_46 l_0_14_46)))
 (let ((?x36621 (* l_0_14_45 l_0_14_45)))
 (let ((?x36619 (* l_0_14_44 l_0_14_44)))
 (let ((?x36617 (* l_0_14_21 l_0_14_21)))
 (let ((?x36615 (* l_0_14_20 l_0_14_20)))
 (let ((?x36613 (* l_0_14_19 l_0_14_19)))
 (let ((?x26687 (* l_0_14_189 l_0_14_189)))
 (let ((?x26684 (* 2.0 ?x26687)))
 (let ((?x26679 (* l_0_14_188 l_0_14_188)))
 (let ((?x26682 (* 2.0 ?x26679)))
 (let ((?x26715 (* l_0_14_187 l_0_14_187)))
 (let ((?x26704 (* 2.0 ?x26715)))
 (let ((?x26722 (* l_0_14_186 l_0_14_186)))
 (let ((?x26719 (* 2.0 ?x26722)))
 (let ((?x26714 (* l_0_14_185 l_0_14_185)))
 (let ((?x26717 (* 2.0 ?x26714)))
 (let ((?x26728 (* l_0_14_184 l_0_14_184)))
 (let ((?x26708 (* 2.0 ?x26728)))
 (let ((?x36611 (* l_0_14_18 l_0_14_18)))
 (let ((?x26711 (+ (+ (+ (* l_0_14_16 l_0_14_16) (* l_0_14_17 l_0_14_17)) ?x36611) ?x26708)))
 (let ((?x13910 (+ (+ (+ (+ (+ (+ (+ ?x26711 ?x26717) ?x26719) ?x26704) ?x26682) ?x26684) ?x36613) ?x36615)))
 (let ((?x37626 (- (- (- (- (- (- (+ ?x13910 ?x36617) ?x36619) ?x36621) ?x36623) ?x36625) ?x36627) ?x36629)))
 (= ?x37626 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x36922 (* ?x35735 l_0_14_86)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x36920 (* ?x35732 l_0_14_58)))
 (let ((?x36741 (* (* 2.0 l_0_14_49) l_0_14_55)))
 (let ((?x36738 (* (* 2.0 l_0_14_48) l_0_14_54)))
 (let ((?x36735 (* (* 2.0 l_0_14_47) l_0_14_53)))
 (let ((?x36732 (* (* 2.0 l_0_14_46) l_0_14_52)))
 (let ((?x36729 (* (* 2.0 l_0_14_45) l_0_14_51)))
 (let ((?x36726 (* (* 2.0 l_0_14_44) l_0_14_50)))
 (let ((?x36723 (* (* 2.0 l_0_14_21) l_0_14_27)))
 (let ((?x36720 (* (* 2.0 l_0_14_20) l_0_14_26)))
 (let ((?x36717 (* (* 2.0 l_0_14_19) l_0_14_25)))
 (let ((?x36070 (* 2.0 l_0_14_18)))
 (let ((?x36714 (* ?x36070 l_0_14_24)))
 (let ((?x35871 (* 2.0 l_0_14_17)))
 (let ((?x36712 (* ?x35871 l_0_14_23)))
 (let ((?x35861 (* 2.0 l_0_14_16)))
 (let ((?x36704 (* ?x35861 l_0_14_22)))
 (let ((?x26789 (+ (+ (+ (+ ?x36704 ?x36712) ?x36714) (* (* 4.0 l_0_14_184) l_0_14_190)) (* (* 4.0 l_0_14_185) l_0_14_191))))
 (let ((?x13928 (+ (+ ?x26789 (* (* 4.0 l_0_14_186) l_0_14_192)) (* (* 4.0 l_0_14_187) l_0_14_193))))
 (let ((?x26762 (+ (+ ?x13928 (* (* 4.0 l_0_14_188) l_0_14_194)) (* (* 4.0 l_0_14_189) l_0_14_195))))
 (let ((?x26745 (- (- (- (- (+ (+ (+ ?x26762 ?x36717) ?x36720) ?x36723) ?x36726) ?x36729) ?x36732) ?x36735)))
 (= (+ (- (- (- ?x26745 ?x36738) ?x36741) ?x36920) ?x36922) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x36858 (* l_0_14_56 l_0_14_56)))
 (let ((?x36856 (* l_0_14_55 l_0_14_55)))
 (let ((?x36854 (* l_0_14_54 l_0_14_54)))
 (let ((?x36852 (* l_0_14_53 l_0_14_53)))
 (let ((?x36850 (* l_0_14_52 l_0_14_52)))
 (let ((?x36848 (* l_0_14_51 l_0_14_51)))
 (let ((?x36846 (* l_0_14_50 l_0_14_50)))
 (let ((?x36844 (* l_0_14_28 l_0_14_28)))
 (let ((?x36842 (* l_0_14_27 l_0_14_27)))
 (let ((?x36840 (* l_0_14_26 l_0_14_26)))
 (let ((?x36838 (* l_0_14_25 l_0_14_25)))
 (let ((?x36836 (* l_0_14_24 l_0_14_24)))
 (let ((?x36834 (* l_0_14_23 l_0_14_23)))
 (let ((?x36832 (* l_0_14_22 l_0_14_22)))
 (let ((?x37664 (* l_0_14_196 l_0_14_196)))
 (let ((?x37665 (* 2.0 ?x37664)))
 (let ((?x37661 (* l_0_14_195 l_0_14_195)))
 (let ((?x37662 (* 2.0 ?x37661)))
 (let ((?x37658 (* l_0_14_194 l_0_14_194)))
 (let ((?x37659 (* 2.0 ?x37658)))
 (let ((?x37655 (* l_0_14_193 l_0_14_193)))
 (let ((?x37656 (* 2.0 ?x37655)))
 (let ((?x37652 (* l_0_14_192 l_0_14_192)))
 (let ((?x37653 (* 2.0 ?x37652)))
 (let ((?x37649 (* l_0_14_191 l_0_14_191)))
 (let ((?x37650 (* 2.0 ?x37649)))
 (let ((?x37647 (* l_0_14_190 l_0_14_190)))
 (let ((?x37648 (* 2.0 ?x37647)))
 (let ((?x37667 (+ (+ (+ (+ (+ (+ (+ ?x37648 ?x37650) ?x37653) ?x37656) ?x37659) ?x37662) ?x37665) ?x36832)))
 (let ((?x37674 (- (+ (+ (+ (+ (+ (+ ?x37667 ?x36834) ?x36836) ?x36838) ?x36840) ?x36842) ?x36844) ?x36846)))
 (= (- (- (- (- (- (- ?x37674 ?x36848) ?x36850) ?x36852) ?x36854) ?x36856) ?x36858) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x37691 (* l_0_14_85 l_0_14_85)))
 (let ((?x37689 (* l_0_14_57 l_0_14_57)))
 (let ((?x26879 (- (* (* (- 2.0) l_0_14_212) l_0_14_218) (* (* 2.0 l_0_14_213) l_0_14_219))))
 (let ((?x14051 (- (- ?x26879 (* (* 2.0 l_0_14_214) l_0_14_220)) (* (* 2.0 l_0_14_215) l_0_14_221))))
 (let ((?x26835 (- (- ?x14051 (* (* 2.0 l_0_14_216) l_0_14_222)) (* (* 2.0 l_0_14_217) l_0_14_223))))
 (let ((?x26824 (- (- ?x26835 (* (* 2.0 l_0_14_240) l_0_14_246)) (* (* 2.0 l_0_14_241) l_0_14_247))))
 (let ((?x37682 (- (- ?x26824 (* (* 2.0 l_0_14_242) l_0_14_248)) (* (* 2.0 l_0_14_243) l_0_14_249))))
 (let ((?x37688 (- (- ?x37682 (* (* 2.0 l_0_14_244) l_0_14_250)) (* (* 2.0 l_0_14_245) l_0_14_251))))
 (= (+ (- ?x37688 ?x37689) ?x37691) 0.0))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x37783 (* ?x35735 l_0_14_88)))
 (let ((?x37781 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x37778 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x37775 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x37772 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x37769 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x37766 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x37763 (* ?x35732 l_0_14_60)))
 (let ((?x36710 (* (* 2.0 l_0_14_161) l_0_14_167)))
 (let ((?x36707 (* (* 2.0 l_0_14_160) l_0_14_166)))
 (let ((?x36702 (* (* 2.0 l_0_14_159) l_0_14_165)))
 (let ((?x36699 (* (* 2.0 l_0_14_158) l_0_14_164)))
 (let ((?x36696 (* (* 2.0 l_0_14_157) l_0_14_163)))
 (let ((?x36693 (* (* 2.0 l_0_14_156) l_0_14_162)))
 (let ((?x37719 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x37716 (* ?x26077 l_0_14_110)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x37714 (* ?x23685 l_0_14_109)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x14086 (* ?x12068 l_0_14_108)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x26917 (* ?x26067 l_0_14_107)))
 (let ((?x37717 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_106) ?x26917) ?x14086) ?x37714) ?x37716)))
 (let ((?x37720 (+ ?x37717 ?x37719)))
 (let ((?x37726 (- (- ?x37720 (* (* 2.0 l_0_14_128) l_0_14_134)) (* (* 2.0 l_0_14_129) l_0_14_135))))
 (let ((?x37732 (- (- ?x37726 (* (* 2.0 l_0_14_130) l_0_14_136)) (* (* 2.0 l_0_14_131) l_0_14_137))))
 (let ((?x37738 (- (- ?x37732 (* (* 2.0 l_0_14_132) l_0_14_138)) (* (* 2.0 l_0_14_133) l_0_14_139))))
 (let ((?x37747 (- (- (- (- (- (- (- ?x37738 ?x36693) ?x36696) ?x36699) ?x36702) ?x36707) ?x36710) (* (* 2.0 l_0_14_184) l_0_14_190))))
 (let ((?x37753 (- (- ?x37747 (* (* 2.0 l_0_14_185) l_0_14_191)) (* (* 2.0 l_0_14_186) l_0_14_192))))
 (let ((?x37759 (- (- ?x37753 (* (* 2.0 l_0_14_187) l_0_14_193)) (* (* 2.0 l_0_14_188) l_0_14_194))))
 (let ((?x37770 (- (- (- (- ?x37759 (* (* 2.0 l_0_14_189) l_0_14_195)) ?x37763) ?x37766) ?x37769)))
 (= (+ (- (- (- (- ?x37770 ?x37772) ?x37775) ?x37778) ?x37781) ?x37783) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x37841 (* ?x35735 l_0_14_91)))
 (let ((?x37781 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x37778 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x37775 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x37772 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x37769 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x37766 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x37833 (* ?x35732 l_0_14_63)))
 (let ((?x37719 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x37716 (* ?x26077 l_0_14_110)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x37714 (* ?x23685 l_0_14_109)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x14086 (* ?x12068 l_0_14_108)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x26917 (* ?x26067 l_0_14_107)))
 (let ((?x37831 (- (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_106) ?x26917) ?x14086) ?x37714) ?x37716)))
 (let ((?x37839 (+ (+ (+ (+ (+ (- (- ?x37831 ?x37719) ?x37833) ?x37766) ?x37769) ?x37772) ?x37775) ?x37778)))
 (= (+ (+ ?x37839 ?x37781) ?x37841) 0.0)))))))))))))))))))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x14451 (* ?x35732 l_0_14_72)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x27355 (* ?x26107 l_0_14_85)))
 (= (- ?x27355 ?x14451) 0.0))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x27242 (* ?x35732 l_0_14_78)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x27360 (* ?x35558 l_0_14_85)))
 (= (- ?x27360 ?x27242) 0.0))))))
(assert
 (let ((?x37111 (* l_0_14_87 l_0_14_87)))
 (let ((?x37109 (* l_0_14_86 l_0_14_86)))
 (let ((?x37850 (+ (- (* (- l_0_14_58) l_0_14_58) (* l_0_14_59 l_0_14_59)) ?x37109)))
 (= (+ ?x37850 ?x37111) 0.0)))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x37208 (* ?x35887 l_0_14_89)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x37206 (* ?x35884 l_0_14_88)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37203 (* ?x35881 l_0_14_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_58) l_0_14_60) ?x37203) ?x37206) ?x37208) 0.0))))))))
(assert
 (let ((?x35887 (* 2.0 l_0_14_87)))
 (let ((?x37277 (* ?x35887 l_0_14_92)))
 (let ((?x35884 (* 2.0 l_0_14_86)))
 (let ((?x37274 (* ?x35884 l_0_14_91)))
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37270 (* ?x35881 l_0_14_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_58) l_0_14_63) ?x37270) ?x37274) ?x37277) 0.0))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37388 (* ?x35881 l_0_14_73)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37386 (* ?x35878 l_0_14_72)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x37362 (* ?x26067 l_0_14_87)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x13469 (* ?x26107 l_0_14_86)))
 (let ((?x37363 (+ ?x13469 ?x37362)))
 (= (- (- ?x37363 ?x37386) ?x37388) 0.0)))))))))))
(assert
 (let ((?x35881 (* 2.0 l_0_14_59)))
 (let ((?x37453 (* ?x35881 l_0_14_79)))
 (let ((?x35878 (* 2.0 l_0_14_58)))
 (let ((?x37451 (* ?x35878 l_0_14_78)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x37427 (* ?x35561 l_0_14_87)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x37426 (* ?x35558 l_0_14_86)))
 (let ((?x37428 (+ ?x37426 ?x37427)))
 (= (- (- ?x37428 ?x37451) ?x37453) 0.0)))))))))))
(assert
 (let ((?x37900 (* l_0_14_90 l_0_14_90)))
 (let ((?x37898 (* l_0_14_89 l_0_14_89)))
 (let ((?x37896 (* l_0_14_88 l_0_14_88)))
 (let ((?x37894 (* l_0_14_62 l_0_14_62)))
 (let ((?x37895 (- (- (* (- l_0_14_60) l_0_14_60) (* l_0_14_61 l_0_14_61)) ?x37894)))
 (= (+ (+ (+ ?x37895 ?x37896) ?x37898) ?x37900) 0.0)))))))
(assert
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x37927 (* ?x36094 l_0_14_93)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x37925 (* ?x36091 l_0_14_92)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x37923 (* ?x36088 l_0_14_91)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37921 (* ?x36085 l_0_14_65)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37919 (* ?x36082 l_0_14_64)))
 (let ((?x37926 (+ (+ (- (- (* (* (- 2.0) l_0_14_60) l_0_14_63) ?x37919) ?x37921) ?x37923) ?x37925)))
 (= (+ ?x37926 ?x37927) 0.0)))))))))))))
(assert
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37952 (* ?x36085 l_0_14_74)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37950 (* ?x36082 l_0_14_73)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37948 (* ?x36079 l_0_14_72)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x37946 (* ?x12068 l_0_14_90)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x37944 (* ?x26067 l_0_14_89)))
 (let ((?x37947 (+ (+ (* (* 2.0 l_0_14_100) l_0_14_88) ?x37944) ?x37946)))
 (= (- (- (- ?x37947 ?x37948) ?x37950) ?x37952) 0.0)))))))))))))
(assert
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37988 (* ?x36085 l_0_14_80)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37986 (* ?x36082 l_0_14_79)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37984 (* ?x36079 l_0_14_78)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x37982 (* ?x35564 l_0_14_90)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x37980 (* ?x35561 l_0_14_89)))
 (let ((?x37983 (+ (+ (* (* 2.0 l_0_14_106) l_0_14_88) ?x37980) ?x37982)))
 (= (- (- (- ?x37983 ?x37984) ?x37986) ?x37988) 0.0)))))))))))))
(assert
 (let ((?x38024 (* l_0_14_94 l_0_14_94)))
 (let ((?x38022 (* l_0_14_93 l_0_14_93)))
 (let ((?x38020 (* l_0_14_92 l_0_14_92)))
 (let ((?x38018 (* l_0_14_91 l_0_14_91)))
 (let ((?x38016 (* l_0_14_66 l_0_14_66)))
 (let ((?x38014 (* l_0_14_65 l_0_14_65)))
 (let ((?x38015 (- (- (* (- l_0_14_63) l_0_14_63) (* l_0_14_64 l_0_14_64)) ?x38014)))
 (= (+ (+ (+ (+ (- ?x38015 ?x38016) ?x38018) ?x38020) ?x38022) ?x38024) 0.0)))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38054 (* ?x36306 l_0_14_75)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38052 (* ?x36303 l_0_14_74)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38050 (* ?x36300 l_0_14_73)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38048 (* ?x36297 l_0_14_72)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x38046 (* ?x23685 l_0_14_94)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x38044 (* ?x12068 l_0_14_93)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x38042 (* ?x26067 l_0_14_92)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x38035 (* ?x26107 l_0_14_91)))
 (let ((?x38055 (- (- (- (- (+ (+ (+ ?x38035 ?x38042) ?x38044) ?x38046) ?x38048) ?x38050) ?x38052) ?x38054)))
 (= ?x38055 0.0)))))))))))))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38086 (* ?x36306 l_0_14_81)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38084 (* ?x36303 l_0_14_80)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38082 (* ?x36300 l_0_14_79)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38080 (* ?x36297 l_0_14_78)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x38078 (* ?x35567 l_0_14_94)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x38076 (* ?x35564 l_0_14_93)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x38074 (* ?x35561 l_0_14_92)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x38073 (* ?x35558 l_0_14_91)))
 (let ((?x38087 (- (- (- (- (+ (+ (+ ?x38073 ?x38074) ?x38076) ?x38078) ?x38080) ?x38082) ?x38084) ?x38086)))
 (= ?x38087 0.0)))))))))))))))))))
(assert
 (let ((?x38137 (* l_0_14_77 l_0_14_77)))
 (let ((?x38135 (* l_0_14_76 l_0_14_76)))
 (let ((?x38133 (* l_0_14_75 l_0_14_75)))
 (let ((?x38131 (* l_0_14_74 l_0_14_74)))
 (let ((?x38129 (* l_0_14_73 l_0_14_73)))
 (let ((?x38127 (* l_0_14_72 l_0_14_72)))
 (let ((?x38125 (* l_0_14_105 l_0_14_105)))
 (let ((?x38123 (* l_0_14_104 l_0_14_104)))
 (let ((?x38121 (* l_0_14_103 l_0_14_103)))
 (let ((?x38119 (* l_0_14_102 l_0_14_102)))
 (let ((?x38120 (+ (+ (* l_0_14_100 l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x38119)))
 (let ((?x38126 (+ (+ (+ ?x38120 ?x38121) ?x38123) ?x38125)))
 (= (- (- (- (- (- (- ?x38126 ?x38127) ?x38129) ?x38131) ?x38133) ?x38135) ?x38137) 0.0))))))))))))))
(assert
 (let ((?x37781 (* (* 2.0 l_0_14_77) l_0_14_83)))
 (let ((?x37778 (* (* 2.0 l_0_14_76) l_0_14_82)))
 (let ((?x37775 (* (* 2.0 l_0_14_75) l_0_14_81)))
 (let ((?x37772 (* (* 2.0 l_0_14_74) l_0_14_80)))
 (let ((?x37769 (* (* 2.0 l_0_14_73) l_0_14_79)))
 (let ((?x37766 (* (* 2.0 l_0_14_72) l_0_14_78)))
 (let ((?x37719 (* (* 2.0 l_0_14_105) l_0_14_111)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x37716 (* ?x26077 l_0_14_110)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x37714 (* ?x23685 l_0_14_109)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x14086 (* ?x12068 l_0_14_108)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x26917 (* ?x26067 l_0_14_107)))
 (let ((?x37717 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_106) ?x26917) ?x14086) ?x37714) ?x37716)))
 (let ((?x37720 (+ ?x37717 ?x37719)))
 (= (- (- (- (- (- (- ?x37720 ?x37766) ?x37769) ?x37772) ?x37775) ?x37778) ?x37781) 0.0)))))))))))))))))))
(assert
 (let ((?x38190 (* l_0_14_84 l_0_14_84)))
 (let ((?x38188 (* l_0_14_83 l_0_14_83)))
 (let ((?x38186 (* l_0_14_82 l_0_14_82)))
 (let ((?x38184 (* l_0_14_81 l_0_14_81)))
 (let ((?x38182 (* l_0_14_80 l_0_14_80)))
 (let ((?x38180 (* l_0_14_79 l_0_14_79)))
 (let ((?x38178 (* l_0_14_78 l_0_14_78)))
 (let ((?x38176 (* l_0_14_112 l_0_14_112)))
 (let ((?x38174 (* l_0_14_111 l_0_14_111)))
 (let ((?x38172 (* l_0_14_110 l_0_14_110)))
 (let ((?x38170 (* l_0_14_109 l_0_14_109)))
 (let ((?x38168 (* l_0_14_108 l_0_14_108)))
 (let ((?x38169 (+ (+ (* l_0_14_106 l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38168)))
 (let ((?x38177 (+ (+ (+ (+ ?x38169 ?x38170) ?x38172) ?x38174) ?x38176)))
 (let ((?x38191 (- (- (- (- (- (- (- ?x38177 ?x38178) ?x38180) ?x38182) ?x38184) ?x38186) ?x38188) ?x38190)))
 (= ?x38191 0.0)))))))))))))))))
(assert
 (let ((?x37691 (* l_0_14_85 l_0_14_85)))
 (let ((?x37689 (* l_0_14_57 l_0_14_57)))
 (let ((?x35363 (* l_0_14_169 l_0_14_169)))
 (let ((?x38206 (- (- (* (- l_0_14_113) l_0_14_113) (* l_0_14_141 l_0_14_141)) ?x35363)))
 (let ((?x38210 (- (- ?x38206 (* (* 2.0 l_0_14_197) l_0_14_200)) (* (* 2.0 l_0_14_225) l_0_14_228))))
 (= (+ (- ?x38210 ?x37689) ?x37691) 0.0)))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x37783 (* ?x35735 l_0_14_88)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x37763 (* ?x35732 l_0_14_60)))
 (let ((?x38234 (* l_0_14_230 l_0_14_230)))
 (let ((?x38232 (* l_0_14_229 l_0_14_229)))
 (let ((?x38230 (* l_0_14_228 l_0_14_228)))
 (let ((?x38228 (* l_0_14_202 l_0_14_202)))
 (let ((?x38226 (* l_0_14_201 l_0_14_201)))
 (let ((?x38224 (* l_0_14_200 l_0_14_200)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35588 (* ?x35460 l_0_14_144)))
 (let ((?x38223 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_116) ?x35588) (* (* 2.0 l_0_14_169) l_0_14_172))))
 (let ((?x38236 (- (- (- (- (- (- (- ?x38223 ?x38224) ?x38226) ?x38228) ?x38230) ?x38232) ?x38234) ?x37763)))
 (= (+ ?x38236 ?x37783) 0.0))))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x37841 (* ?x35735 l_0_14_91)))
 (let ((?x37783 (* ?x35735 l_0_14_88)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x37833 (* ?x35732 l_0_14_63)))
 (let ((?x37763 (* ?x35732 l_0_14_60)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35714 (* ?x35460 l_0_14_147)))
 (let ((?x27912 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_119) ?x35714) (* (* 2.0 l_0_14_169) l_0_14_175))))
 (let ((?x38252 (- (- ?x27912 (* (* 2.0 l_0_14_200) l_0_14_203)) (* (* 2.0 l_0_14_201) l_0_14_204))))
 (let ((?x38258 (- (- ?x38252 (* (* 2.0 l_0_14_202) l_0_14_205)) (* (* 2.0 l_0_14_228) l_0_14_231))))
 (let ((?x38264 (- (- ?x38258 (* (* 2.0 l_0_14_229) l_0_14_232)) (* (* 2.0 l_0_14_230) l_0_14_233))))
 (= (+ (- (- (+ ?x38264 ?x37763) ?x37833) ?x37783) ?x37841) 0.0))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x35736 (* ?x35735 l_0_14_95)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x35733 (* ?x35732 l_0_14_67)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x25804 (* ?x35460 l_0_14_151)))
 (let ((?x38290 (- (- (* (* (- 2.0) l_0_14_113) l_0_14_123) ?x25804) (* (* 2.0 l_0_14_169) l_0_14_179))))
 (let ((?x38294 (- (- ?x38290 (* (* 2.0 l_0_14_200) l_0_14_207)) (* (* 2.0 l_0_14_201) l_0_14_208))))
 (let ((?x38298 (- (- ?x38294 (* (* 2.0 l_0_14_202) l_0_14_209)) (* (* 2.0 l_0_14_228) l_0_14_235))))
 (let ((?x38302 (- (- ?x38298 (* (* 2.0 l_0_14_229) l_0_14_236)) (* (* 2.0 l_0_14_230) l_0_14_237))))
 (= (+ (- ?x38302 ?x35733) ?x35736) 0.0))))))))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x14451 (* ?x35732 l_0_14_72)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35728 (* ?x35460 l_0_14_156)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x27355 (* ?x26107 l_0_14_85)))
 (let ((?x38320 (- (- (- ?x27355 (* (* 2.0 l_0_14_113) l_0_14_128)) ?x35728) (* (* 2.0 l_0_14_169) l_0_14_184))))
 (let ((?x38324 (- (- ?x38320 (* (* 2.0 l_0_14_200) l_0_14_212)) (* (* 2.0 l_0_14_201) l_0_14_213))))
 (let ((?x38328 (- (- ?x38324 (* (* 2.0 l_0_14_202) l_0_14_214)) (* (* 2.0 l_0_14_228) l_0_14_240))))
 (let ((?x38332 (- (- ?x38328 (* (* 2.0 l_0_14_229) l_0_14_241)) (* (* 2.0 l_0_14_230) l_0_14_242))))
 (= (- ?x38332 ?x14451) 0.0))))))))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x27242 (* ?x35732 l_0_14_78)))
 (let ((?x35460 (* 2.0 l_0_14_141)))
 (let ((?x35754 (* ?x35460 l_0_14_162)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x27360 (* ?x35558 l_0_14_85)))
 (let ((?x38367 (- (- (- ?x27360 (* (* 2.0 l_0_14_113) l_0_14_134)) ?x35754) (* (* 2.0 l_0_14_169) l_0_14_190))))
 (let ((?x38371 (- (- ?x38367 (* (* 2.0 l_0_14_200) l_0_14_218)) (* (* 2.0 l_0_14_201) l_0_14_219))))
 (let ((?x38375 (- (- ?x38371 (* (* 2.0 l_0_14_202) l_0_14_220)) (* (* 2.0 l_0_14_228) l_0_14_246))))
 (let ((?x38379 (- (- ?x38375 (* (* 2.0 l_0_14_229) l_0_14_247)) (* (* 2.0 l_0_14_230) l_0_14_248))))
 (= (- ?x38379 ?x27242) 0.0))))))))))))
(assert
 (let ((?x37900 (* l_0_14_90 l_0_14_90)))
 (let ((?x37898 (* l_0_14_89 l_0_14_89)))
 (let ((?x37896 (* l_0_14_88 l_0_14_88)))
 (let ((?x37894 (* l_0_14_62 l_0_14_62)))
 (let ((?x37892 (* l_0_14_61 l_0_14_61)))
 (let ((?x37904 (* l_0_14_60 l_0_14_60)))
 (let ((?x37193 (* l_0_14_174 l_0_14_174)))
 (let ((?x37190 (* l_0_14_173 l_0_14_173)))
 (let ((?x37187 (* l_0_14_172 l_0_14_172)))
 (let ((?x35962 (* l_0_14_146 l_0_14_146)))
 (let ((?x35960 (* l_0_14_145 l_0_14_145)))
 (let ((?x35959 (* l_0_14_144 l_0_14_144)))
 (let ((?x38408 (* l_0_14_118 l_0_14_118)))
 (let ((?x38409 (- (- (* (- l_0_14_116) l_0_14_116) (* l_0_14_117 l_0_14_117)) ?x38408)))
 (let ((?x38416 (- (- (- (- (- (- (- ?x38409 ?x35959) ?x35960) ?x35962) ?x37187) ?x37190) ?x37193) ?x37904)))
 (= (+ (+ (+ (- (- ?x38416 ?x37892) ?x37894) ?x37896) ?x37898) ?x37900) 0.0)))))))))))))))))
(assert
 (let ((?x37900 (* l_0_14_90 l_0_14_90)))
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x37927 (* ?x36094 l_0_14_93)))
 (let ((?x37898 (* l_0_14_89 l_0_14_89)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x37925 (* ?x36091 l_0_14_92)))
 (let ((?x37896 (* l_0_14_88 l_0_14_88)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x37923 (* ?x36088 l_0_14_91)))
 (let ((?x37894 (* l_0_14_62 l_0_14_62)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37921 (* ?x36085 l_0_14_65)))
 (let ((?x37892 (* l_0_14_61 l_0_14_61)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37919 (* ?x36082 l_0_14_64)))
 (let ((?x37904 (* l_0_14_60 l_0_14_60)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x38432 (* ?x36079 l_0_14_63)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x11763 (* ?x25886 l_0_14_149)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x11710 (* ?x25897 l_0_14_148)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x11754 (* ?x25891 l_0_14_147)))
 (let ((?x28583 (- (* (* (- 2.0) l_0_14_116) l_0_14_119) (* (* 2.0 l_0_14_117) l_0_14_120))))
 (let ((?x15275 (- (- (- (- ?x28583 (* (* 2.0 l_0_14_118) l_0_14_121)) ?x11754) ?x11710) ?x11763)))
 (let ((?x38428 (- (- ?x15275 (* (* 2.0 l_0_14_172) l_0_14_175)) (* (* 2.0 l_0_14_173) l_0_14_176))))
 (let ((?x38435 (- (+ (- (- ?x38428 (* (* 2.0 l_0_14_174) l_0_14_177)) ?x38432) ?x37904) ?x37919)))
 (let ((?x38442 (- (+ (- (+ (+ (- (+ ?x38435 ?x37892) ?x37921) ?x37894) ?x37923) ?x37896) ?x37925) ?x37898)))
 (= (- (+ ?x38442 ?x37927) ?x37900) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x36095 (* ?x36094 l_0_14_97)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x36092 (* ?x36091 l_0_14_96)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x36089 (* ?x36088 l_0_14_95)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x36086 (* ?x36085 l_0_14_69)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x36083 (* ?x36082 l_0_14_68)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x36080 (* ?x36079 l_0_14_67)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36035 (* ?x25886 l_0_14_153)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x36033 (* ?x25897 l_0_14_152)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x36031 (* ?x25891 l_0_14_151)))
 (let ((?x38472 (- (* (* (- 2.0) l_0_14_116) l_0_14_123) (* (* 2.0 l_0_14_117) l_0_14_124))))
 (let ((?x38477 (- (- (- (- ?x38472 (* (* 2.0 l_0_14_118) l_0_14_125)) ?x36031) ?x36033) ?x36035)))
 (let ((?x38481 (- (- ?x38477 (* (* 2.0 l_0_14_172) l_0_14_179)) (* (* 2.0 l_0_14_173) l_0_14_180))))
 (let ((?x38486 (- (- (- (- ?x38481 (* (* 2.0 l_0_14_174) l_0_14_181)) ?x36080) ?x36083) ?x36086)))
 (= (+ (+ (+ ?x38486 ?x36089) ?x36092) ?x36095) 0.0))))))))))))))))))))))))
(assert
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37952 (* ?x36085 l_0_14_74)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37950 (* ?x36082 l_0_14_73)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37948 (* ?x36079 l_0_14_72)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36057 (* ?x25886 l_0_14_158)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x25925 (* ?x25897 l_0_14_157)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x11814 (* ?x25891 l_0_14_156)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x37946 (* ?x12068 l_0_14_90)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x37944 (* ?x26067 l_0_14_89)))
 (let ((?x37947 (+ (+ (* (* 2.0 l_0_14_100) l_0_14_88) ?x37944) ?x37946)))
 (let ((?x15594 (- (- ?x37947 (* (* 2.0 l_0_14_116) l_0_14_128)) (* (* 2.0 l_0_14_117) l_0_14_129))))
 (let ((?x15513 (- (- (- (- ?x15594 (* (* 2.0 l_0_14_118) l_0_14_130)) ?x11814) ?x25925) ?x36057)))
 (let ((?x28665 (- (- ?x15513 (* (* 2.0 l_0_14_172) l_0_14_184)) (* (* 2.0 l_0_14_173) l_0_14_185))))
 (let ((?x38502 (- (- (- (- ?x28665 (* (* 2.0 l_0_14_174) l_0_14_186)) ?x37948) ?x37950) ?x37952)))
 (= ?x38502 0.0)))))))))))))))))))))))
(assert
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37988 (* ?x36085 l_0_14_80)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37986 (* ?x36082 l_0_14_79)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37984 (* ?x36079 l_0_14_78)))
 (let ((?x25886 (* 2.0 l_0_14_146)))
 (let ((?x36137 (* ?x25886 l_0_14_164)))
 (let ((?x25897 (* 2.0 l_0_14_145)))
 (let ((?x36135 (* ?x25897 l_0_14_163)))
 (let ((?x25891 (* 2.0 l_0_14_144)))
 (let ((?x36134 (* ?x25891 l_0_14_162)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x37982 (* ?x35564 l_0_14_90)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x37980 (* ?x35561 l_0_14_89)))
 (let ((?x37983 (+ (+ (* (* 2.0 l_0_14_106) l_0_14_88) ?x37980) ?x37982)))
 (let ((?x15790 (- (- ?x37983 (* (* 2.0 l_0_14_116) l_0_14_134)) (* (* 2.0 l_0_14_117) l_0_14_135))))
 (let ((?x38526 (- (- (- (- ?x15790 (* (* 2.0 l_0_14_118) l_0_14_136)) ?x36134) ?x36135) ?x36137)))
 (let ((?x38530 (- (- ?x38526 (* (* 2.0 l_0_14_172) l_0_14_190)) (* (* 2.0 l_0_14_173) l_0_14_191))))
 (let ((?x38535 (- (- (- (- ?x38530 (* (* 2.0 l_0_14_174) l_0_14_192)) ?x37984) ?x37986) ?x37988)))
 (= ?x38535 0.0)))))))))))))))))))))))
(assert
 (let ((?x38024 (* l_0_14_94 l_0_14_94)))
 (let ((?x38022 (* l_0_14_93 l_0_14_93)))
 (let ((?x38020 (* l_0_14_92 l_0_14_92)))
 (let ((?x38018 (* l_0_14_91 l_0_14_91)))
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x37927 (* ?x36094 l_0_14_93)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x37925 (* ?x36091 l_0_14_92)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x37923 (* ?x36088 l_0_14_91)))
 (let ((?x38016 (* l_0_14_66 l_0_14_66)))
 (let ((?x38014 (* l_0_14_65 l_0_14_65)))
 (let ((?x38012 (* l_0_14_64 l_0_14_64)))
 (let ((?x14550 (* l_0_14_63 l_0_14_63)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37921 (* ?x36085 l_0_14_65)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37919 (* ?x36082 l_0_14_64)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x38432 (* ?x36079 l_0_14_63)))
 (let ((?x37491 (* l_0_14_178 l_0_14_178)))
 (let ((?x37488 (* l_0_14_177 l_0_14_177)))
 (let ((?x37485 (* l_0_14_176 l_0_14_176)))
 (let ((?x26496 (* l_0_14_175 l_0_14_175)))
 (let ((?x36188 (* l_0_14_150 l_0_14_150)))
 (let ((?x36186 (* l_0_14_149 l_0_14_149)))
 (let ((?x36184 (* l_0_14_148 l_0_14_148)))
 (let ((?x36174 (* l_0_14_147 l_0_14_147)))
 (let ((?x38553 (* l_0_14_122 l_0_14_122)))
 (let ((?x38551 (* l_0_14_121 l_0_14_121)))
 (let ((?x38552 (- (- (* (- l_0_14_119) l_0_14_119) (* l_0_14_120 l_0_14_120)) ?x38551)))
 (let ((?x38560 (- (- (- (- (- (- (- ?x38552 ?x38553) ?x36174) ?x36184) ?x36186) ?x36188) ?x26496) ?x37485)))
 (let ((?x38567 (- (- (+ (+ (+ (- (- ?x38560 ?x37488) ?x37491) ?x38432) ?x37919) ?x37921) ?x14550) ?x38012)))
 (let ((?x38574 (+ (+ (- (- (- (- (- ?x38567 ?x38014) ?x38016) ?x37923) ?x37925) ?x37927) ?x38018) ?x38020)))
 (= (+ (+ ?x38574 ?x38022) ?x38024) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36319 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x36316 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x36313 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x36310 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x36094 (* 2.0 l_0_14_90)))
 (let ((?x36095 (* ?x36094 l_0_14_97)))
 (let ((?x36091 (* 2.0 l_0_14_89)))
 (let ((?x36092 (* ?x36091 l_0_14_96)))
 (let ((?x36088 (* 2.0 l_0_14_88)))
 (let ((?x36089 (* ?x36088 l_0_14_95)))
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x36307 (* ?x36306 l_0_14_70)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x36304 (* ?x36303 l_0_14_69)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x36301 (* ?x36300 l_0_14_68)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x36298 (* ?x36297 l_0_14_67)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x36086 (* ?x36085 l_0_14_69)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x36083 (* ?x36082 l_0_14_68)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x36080 (* ?x36079 l_0_14_67)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36240 (* ?x36239 l_0_14_154)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36237 (* ?x36236 l_0_14_153)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36234 (* ?x36233 l_0_14_152)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x36231 (* ?x36230 l_0_14_151)))
 (let ((?x16143 (- (* (* (- 2.0) l_0_14_119) l_0_14_123) (* (* 2.0 l_0_14_120) l_0_14_124))))
 (let ((?x15997 (- (- ?x16143 (* (* 2.0 l_0_14_121) l_0_14_125)) (* (* 2.0 l_0_14_122) l_0_14_126))))
 (let ((?x38586 (- (- (- (- (- ?x15997 ?x36231) ?x36234) ?x36237) ?x36240) (* (* 2.0 l_0_14_175) l_0_14_179))))
 (let ((?x38592 (- (- ?x38586 (* (* 2.0 l_0_14_176) l_0_14_180)) (* (* 2.0 l_0_14_177) l_0_14_181))))
 (let ((?x38598 (+ (+ (+ (- ?x38592 (* (* 2.0 l_0_14_178) l_0_14_182)) ?x36080) ?x36083) ?x36086)))
 (let ((?x38605 (- (- (- (- (- (- (- ?x38598 ?x36298) ?x36301) ?x36304) ?x36307) ?x36089) ?x36092) ?x36095)))
 (= (+ (+ (+ (+ ?x38605 ?x36310) ?x36313) ?x36316) ?x36319) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38054 (* ?x36306 l_0_14_75)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38052 (* ?x36303 l_0_14_74)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38050 (* ?x36300 l_0_14_73)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38048 (* ?x36297 l_0_14_72)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37952 (* ?x36085 l_0_14_74)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37950 (* ?x36082 l_0_14_73)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37948 (* ?x36079 l_0_14_72)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36281 (* ?x36239 l_0_14_159)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36279 (* ?x36236 l_0_14_158)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36277 (* ?x36233 l_0_14_157)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x36275 (* ?x36230 l_0_14_156)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x38046 (* ?x23685 l_0_14_94)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x38044 (* ?x12068 l_0_14_93)))
 (let ((?x37946 (* ?x12068 l_0_14_90)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x38042 (* ?x26067 l_0_14_92)))
 (let ((?x37944 (* ?x26067 l_0_14_89)))
 (let ((?x26107 (* 2.0 l_0_14_100)))
 (let ((?x38035 (* ?x26107 l_0_14_91)))
 (let ((?x16306 (- (+ (- (+ (* (* (- 2.0) l_0_14_100) l_0_14_88) ?x38035) ?x37944) ?x38042) ?x37946)))
 (let ((?x38631 (- (- (+ (+ ?x16306 ?x38044) ?x38046) (* (* 2.0 l_0_14_119) l_0_14_128)) (* (* 2.0 l_0_14_120) l_0_14_129))))
 (let ((?x38635 (- (- ?x38631 (* (* 2.0 l_0_14_121) l_0_14_130)) (* (* 2.0 l_0_14_122) l_0_14_131))))
 (let ((?x38641 (- (- (- (- (- ?x38635 ?x36275) ?x36277) ?x36279) ?x36281) (* (* 2.0 l_0_14_175) l_0_14_184))))
 (let ((?x38645 (- (- ?x38641 (* (* 2.0 l_0_14_176) l_0_14_185)) (* (* 2.0 l_0_14_177) l_0_14_186))))
 (let ((?x38650 (+ (+ (+ (- ?x38645 (* (* 2.0 l_0_14_178) l_0_14_187)) ?x37948) ?x37950) ?x37952)))
 (= (- (- (- (- ?x38650 ?x38048) ?x38050) ?x38052) ?x38054) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38086 (* ?x36306 l_0_14_81)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38084 (* ?x36303 l_0_14_80)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38082 (* ?x36300 l_0_14_79)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38080 (* ?x36297 l_0_14_78)))
 (let ((?x36085 (* 2.0 l_0_14_62)))
 (let ((?x37988 (* ?x36085 l_0_14_80)))
 (let ((?x36082 (* 2.0 l_0_14_61)))
 (let ((?x37986 (* ?x36082 l_0_14_79)))
 (let ((?x36079 (* 2.0 l_0_14_60)))
 (let ((?x37984 (* ?x36079 l_0_14_78)))
 (let ((?x36239 (* 2.0 l_0_14_150)))
 (let ((?x36373 (* ?x36239 l_0_14_165)))
 (let ((?x36236 (* 2.0 l_0_14_149)))
 (let ((?x36371 (* ?x36236 l_0_14_164)))
 (let ((?x36233 (* 2.0 l_0_14_148)))
 (let ((?x36354 (* ?x36233 l_0_14_163)))
 (let ((?x36230 (* 2.0 l_0_14_147)))
 (let ((?x11997 (* ?x36230 l_0_14_162)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x38078 (* ?x35567 l_0_14_94)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x38076 (* ?x35564 l_0_14_93)))
 (let ((?x37982 (* ?x35564 l_0_14_90)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x38074 (* ?x35561 l_0_14_92)))
 (let ((?x37980 (* ?x35561 l_0_14_89)))
 (let ((?x35558 (* 2.0 l_0_14_106)))
 (let ((?x38073 (* ?x35558 l_0_14_91)))
 (let ((?x29031 (- (+ (- (+ (* (* (- 2.0) l_0_14_106) l_0_14_88) ?x38073) ?x37980) ?x38074) ?x37982)))
 (let ((?x38672 (- (- (+ (+ ?x29031 ?x38076) ?x38078) (* (* 2.0 l_0_14_119) l_0_14_134)) (* (* 2.0 l_0_14_120) l_0_14_135))))
 (let ((?x38676 (- (- ?x38672 (* (* 2.0 l_0_14_121) l_0_14_136)) (* (* 2.0 l_0_14_122) l_0_14_137))))
 (let ((?x38682 (- (- (- (- (- ?x38676 ?x11997) ?x36354) ?x36371) ?x36373) (* (* 2.0 l_0_14_175) l_0_14_190))))
 (let ((?x38686 (- (- ?x38682 (* (* 2.0 l_0_14_176) l_0_14_191)) (* (* 2.0 l_0_14_177) l_0_14_192))))
 (let ((?x38691 (+ (+ (+ (- ?x38686 (* (* 2.0 l_0_14_178) l_0_14_193)) ?x37984) ?x37986) ?x37988)))
 (= (- (- (- (- ?x38691 ?x38080) ?x38082) ?x38084) ?x38086) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x36526 (* l_0_14_99 l_0_14_99)))
 (let ((?x36524 (* l_0_14_98 l_0_14_98)))
 (let ((?x36522 (* l_0_14_97 l_0_14_97)))
 (let ((?x36520 (* l_0_14_96 l_0_14_96)))
 (let ((?x36518 (* l_0_14_95 l_0_14_95)))
 (let ((?x36516 (* l_0_14_71 l_0_14_71)))
 (let ((?x36514 (* l_0_14_70 l_0_14_70)))
 (let ((?x36512 (* l_0_14_69 l_0_14_69)))
 (let ((?x36510 (* l_0_14_68 l_0_14_68)))
 (let ((?x36508 (* l_0_14_67 l_0_14_67)))
 (let ((?x37593 (* l_0_14_183 l_0_14_183)))
 (let ((?x37590 (* l_0_14_182 l_0_14_182)))
 (let ((?x37587 (* l_0_14_181 l_0_14_181)))
 (let ((?x37584 (* l_0_14_180 l_0_14_180)))
 (let ((?x37581 (* l_0_14_179 l_0_14_179)))
 (let ((?x36448 (* l_0_14_155 l_0_14_155)))
 (let ((?x36446 (* l_0_14_154 l_0_14_154)))
 (let ((?x36444 (* l_0_14_153 l_0_14_153)))
 (let ((?x36442 (* l_0_14_152 l_0_14_152)))
 (let ((?x36440 (* l_0_14_151 l_0_14_151)))
 (let ((?x38724 (* l_0_14_127 l_0_14_127)))
 (let ((?x38722 (* l_0_14_126 l_0_14_126)))
 (let ((?x38720 (* l_0_14_125 l_0_14_125)))
 (let ((?x38721 (- (- (* (- l_0_14_123) l_0_14_123) (* l_0_14_124 l_0_14_124)) ?x38720)))
 (let ((?x38730 (- (- (- (- (- (- (- ?x38721 ?x38722) ?x38724) ?x36440) ?x36442) ?x36444) ?x36446) ?x36448)))
 (let ((?x38737 (- (- (- (- (- (- (- ?x38730 ?x37581) ?x37584) ?x37587) ?x37590) ?x37593) ?x36508) ?x36510)))
 (let ((?x38744 (+ (+ (+ (+ (- (- (- ?x38737 ?x36512) ?x36514) ?x36516) ?x36518) ?x36520) ?x36522) ?x36524)))
 (= (+ ?x38744 ?x36526) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x36639 (* ?x35634 l_0_14_76)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x36637 (* ?x35631 l_0_14_75)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x36635 (* ?x35628 l_0_14_74)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x36633 (* ?x35625 l_0_14_73)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x36631 (* ?x35622 l_0_14_72)))
 (let ((?x35602 (* 2.0 l_0_14_155)))
 (let ((?x36496 (* ?x35602 l_0_14_160)))
 (let ((?x35599 (* 2.0 l_0_14_154)))
 (let ((?x36494 (* ?x35599 l_0_14_159)))
 (let ((?x35596 (* 2.0 l_0_14_153)))
 (let ((?x36492 (* ?x35596 l_0_14_158)))
 (let ((?x35593 (* 2.0 l_0_14_152)))
 (let ((?x36490 (* ?x35593 l_0_14_157)))
 (let ((?x35590 (* 2.0 l_0_14_151)))
 (let ((?x36488 (* ?x35590 l_0_14_156)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x36593 (* ?x26077 l_0_14_99)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x12092 (* ?x23685 l_0_14_98)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x12093 (* ?x12068 l_0_14_97)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x12072 (* ?x26067 l_0_14_96)))
 (let ((?x36594 (+ (+ (+ (+ (* (* 2.0 l_0_14_100) l_0_14_95) ?x12072) ?x12093) ?x12092) ?x36593)))
 (let ((?x16732 (- (- ?x36594 (* (* 2.0 l_0_14_123) l_0_14_128)) (* (* 2.0 l_0_14_124) l_0_14_129))))
 (let ((?x29177 (- (- ?x16732 (* (* 2.0 l_0_14_125) l_0_14_130)) (* (* 2.0 l_0_14_126) l_0_14_131))))
 (let ((?x16707 (- (- (- (- ?x29177 (* (* 2.0 l_0_14_127) l_0_14_132)) ?x36488) ?x36490) ?x36492)))
 (let ((?x29128 (- (- (- (- ?x16707 ?x36494) ?x36496) (* (* 2.0 l_0_14_179) l_0_14_184)) (* (* 2.0 l_0_14_180) l_0_14_185))))
 (let ((?x38761 (- (- ?x29128 (* (* 2.0 l_0_14_181) l_0_14_186)) (* (* 2.0 l_0_14_182) l_0_14_187))))
 (let ((?x38766 (- (- (- (- ?x38761 (* (* 2.0 l_0_14_183) l_0_14_188)) ?x36631) ?x36633) ?x36635)))
 (= (- (- ?x38766 ?x36637) ?x36639) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38137 (* l_0_14_77 l_0_14_77)))
 (let ((?x38135 (* l_0_14_76 l_0_14_76)))
 (let ((?x38133 (* l_0_14_75 l_0_14_75)))
 (let ((?x38131 (* l_0_14_74 l_0_14_74)))
 (let ((?x38129 (* l_0_14_73 l_0_14_73)))
 (let ((?x38127 (* l_0_14_72 l_0_14_72)))
 (let ((?x26687 (* l_0_14_189 l_0_14_189)))
 (let ((?x26679 (* l_0_14_188 l_0_14_188)))
 (let ((?x26715 (* l_0_14_187 l_0_14_187)))
 (let ((?x26722 (* l_0_14_186 l_0_14_186)))
 (let ((?x26714 (* l_0_14_185 l_0_14_185)))
 (let ((?x26728 (* l_0_14_184 l_0_14_184)))
 (let ((?x36607 (* l_0_14_161 l_0_14_161)))
 (let ((?x36605 (* l_0_14_160 l_0_14_160)))
 (let ((?x36601 (* l_0_14_159 l_0_14_159)))
 (let ((?x36599 (* l_0_14_158 l_0_14_158)))
 (let ((?x36597 (* l_0_14_157 l_0_14_157)))
 (let ((?x36595 (* l_0_14_156 l_0_14_156)))
 (let ((?x38792 (* l_0_14_133 l_0_14_133)))
 (let ((?x38790 (* l_0_14_132 l_0_14_132)))
 (let ((?x38788 (* l_0_14_131 l_0_14_131)))
 (let ((?x38786 (* l_0_14_130 l_0_14_130)))
 (let ((?x38784 (* l_0_14_129 l_0_14_129)))
 (let ((?x38782 (* l_0_14_128 l_0_14_128)))
 (let ((?x38125 (* l_0_14_105 l_0_14_105)))
 (let ((?x38123 (* l_0_14_104 l_0_14_104)))
 (let ((?x38121 (* l_0_14_103 l_0_14_103)))
 (let ((?x38119 (* l_0_14_102 l_0_14_102)))
 (let ((?x38120 (+ (+ (* l_0_14_100 l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x38119)))
 (let ((?x38126 (+ (+ (+ ?x38120 ?x38121) ?x38123) ?x38125)))
 (let ((?x38794 (- (- (- (- (- (- (- ?x38126 ?x38782) ?x38784) ?x38786) ?x38788) ?x38790) ?x38792) ?x36595)))
 (let ((?x38801 (- (- (- (- (- (- (- ?x38794 ?x36597) ?x36599) ?x36601) ?x36605) ?x36607) ?x26728) ?x26714)))
 (let ((?x38808 (- (- (- (- (- (- (- ?x38801 ?x26722) ?x26715) ?x26679) ?x26687) ?x38127) ?x38129) ?x38131)))
 (= (- (- (- ?x38808 ?x38133) ?x38135) ?x38137) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x38190 (* l_0_14_84 l_0_14_84)))
 (let ((?x38188 (* l_0_14_83 l_0_14_83)))
 (let ((?x38186 (* l_0_14_82 l_0_14_82)))
 (let ((?x38184 (* l_0_14_81 l_0_14_81)))
 (let ((?x38182 (* l_0_14_80 l_0_14_80)))
 (let ((?x38180 (* l_0_14_79 l_0_14_79)))
 (let ((?x38178 (* l_0_14_78 l_0_14_78)))
 (let ((?x37664 (* l_0_14_196 l_0_14_196)))
 (let ((?x37661 (* l_0_14_195 l_0_14_195)))
 (let ((?x37658 (* l_0_14_194 l_0_14_194)))
 (let ((?x37655 (* l_0_14_193 l_0_14_193)))
 (let ((?x37652 (* l_0_14_192 l_0_14_192)))
 (let ((?x37649 (* l_0_14_191 l_0_14_191)))
 (let ((?x37647 (* l_0_14_190 l_0_14_190)))
 (let ((?x36830 (* l_0_14_168 l_0_14_168)))
 (let ((?x36828 (* l_0_14_167 l_0_14_167)))
 (let ((?x36826 (* l_0_14_166 l_0_14_166)))
 (let ((?x36824 (* l_0_14_165 l_0_14_165)))
 (let ((?x36822 (* l_0_14_164 l_0_14_164)))
 (let ((?x36820 (* l_0_14_163 l_0_14_163)))
 (let ((?x36819 (* l_0_14_162 l_0_14_162)))
 (let ((?x38816 (* l_0_14_140 l_0_14_140)))
 (let ((?x16994 (* l_0_14_139 l_0_14_139)))
 (let ((?x29261 (* l_0_14_138 l_0_14_138)))
 (let ((?x29263 (* l_0_14_137 l_0_14_137)))
 (let ((?x29265 (* l_0_14_136 l_0_14_136)))
 (let ((?x17126 (* l_0_14_135 l_0_14_135)))
 (let ((?x29286 (* l_0_14_134 l_0_14_134)))
 (let ((?x38176 (* l_0_14_112 l_0_14_112)))
 (let ((?x38174 (* l_0_14_111 l_0_14_111)))
 (let ((?x38172 (* l_0_14_110 l_0_14_110)))
 (let ((?x38170 (* l_0_14_109 l_0_14_109)))
 (let ((?x38168 (* l_0_14_108 l_0_14_108)))
 (let ((?x38169 (+ (+ (* l_0_14_106 l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38168)))
 (let ((?x38177 (+ (+ (+ (+ ?x38169 ?x38170) ?x38172) ?x38174) ?x38176)))
 (let ((?x38817 (- (- (- (- (- (- (- ?x38177 ?x29286) ?x17126) ?x29265) ?x29263) ?x29261) ?x16994) ?x38816)))
 (let ((?x38824 (- (- (- (- (- (- (- ?x38817 ?x36819) ?x36820) ?x36822) ?x36824) ?x36826) ?x36828) ?x36830)))
 (let ((?x38831 (- (- (- (- (- (- (- ?x38824 ?x37647) ?x37649) ?x37652) ?x37655) ?x37658) ?x37661) ?x37664)))
 (let ((?x38838 (- (- (- (- (- (- (- ?x38831 ?x38178) ?x38180) ?x38182) ?x38184) ?x38186) ?x38188) ?x38190)))
 (= ?x38838 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x37691 (* l_0_14_85 l_0_14_85)))
 (let ((?x37689 (* l_0_14_57 l_0_14_57)))
 (let ((?x38864 (- (* (* (- 2.0) l_0_14_197) l_0_14_203) (* (* 2.0 l_0_14_225) l_0_14_231))))
 (= (- (+ ?x38864 ?x37689) ?x37691) 0.0)))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x37841 (* ?x35735 l_0_14_91)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x37833 (* ?x35732 l_0_14_63)))
 (let ((?x38894 (* l_0_14_234 l_0_14_234)))
 (let ((?x38892 (* l_0_14_233 l_0_14_233)))
 (let ((?x38890 (* l_0_14_232 l_0_14_232)))
 (let ((?x38888 (* l_0_14_231 l_0_14_231)))
 (let ((?x38886 (* l_0_14_206 l_0_14_206)))
 (let ((?x38884 (* l_0_14_205 l_0_14_205)))
 (let ((?x38885 (- (- (* (- l_0_14_203) l_0_14_203) (* l_0_14_204 l_0_14_204)) ?x38884)))
 (let ((?x38897 (- (+ (- (- (- (- (- ?x38885 ?x38886) ?x38888) ?x38890) ?x38892) ?x38894) ?x37833) ?x37841)))
 (= ?x38897 0.0))))))))))))))
(assert
 (let ((?x35735 (* 2.0 l_0_14_85)))
 (let ((?x35736 (* ?x35735 l_0_14_95)))
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x35733 (* ?x35732 l_0_14_67)))
 (let ((?x17299 (- (* (* (- 2.0) l_0_14_203) l_0_14_207) (* (* 2.0 l_0_14_204) l_0_14_208))))
 (let ((?x29343 (- (- ?x17299 (* (* 2.0 l_0_14_205) l_0_14_209)) (* (* 2.0 l_0_14_206) l_0_14_210))))
 (let ((?x38919 (- (- ?x29343 (* (* 2.0 l_0_14_231) l_0_14_235)) (* (* 2.0 l_0_14_232) l_0_14_236))))
 (let ((?x38925 (- (- ?x38919 (* (* 2.0 l_0_14_233) l_0_14_237)) (* (* 2.0 l_0_14_234) l_0_14_238))))
 (= (- (+ ?x38925 ?x35733) ?x35736) 0.0))))))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x14451 (* ?x35732 l_0_14_72)))
 (let ((?x38960 (- (* (* (- 2.0) l_0_14_100) l_0_14_85) (* (* 2.0 l_0_14_203) l_0_14_212))))
 (let ((?x38964 (- (- ?x38960 (* (* 2.0 l_0_14_204) l_0_14_213)) (* (* 2.0 l_0_14_205) l_0_14_214))))
 (let ((?x38968 (- (- ?x38964 (* (* 2.0 l_0_14_206) l_0_14_215)) (* (* 2.0 l_0_14_231) l_0_14_240))))
 (let ((?x38972 (- (- ?x38968 (* (* 2.0 l_0_14_232) l_0_14_241)) (* (* 2.0 l_0_14_233) l_0_14_242))))
 (= (+ (- ?x38972 (* (* 2.0 l_0_14_234) l_0_14_243)) ?x14451) 0.0))))))))
(assert
 (let ((?x35732 (* 2.0 l_0_14_57)))
 (let ((?x27242 (* ?x35732 l_0_14_78)))
 (let ((?x38999 (- (* (* (- 2.0) l_0_14_106) l_0_14_85) (* (* 2.0 l_0_14_203) l_0_14_218))))
 (let ((?x39003 (- (- ?x38999 (* (* 2.0 l_0_14_204) l_0_14_219)) (* (* 2.0 l_0_14_205) l_0_14_220))))
 (let ((?x39007 (- (- ?x39003 (* (* 2.0 l_0_14_206) l_0_14_221)) (* (* 2.0 l_0_14_231) l_0_14_246))))
 (let ((?x39011 (- (- ?x39007 (* (* 2.0 l_0_14_232) l_0_14_247)) (* (* 2.0 l_0_14_233) l_0_14_248))))
 (= (+ (- ?x39011 (* (* 2.0 l_0_14_234) l_0_14_249)) ?x27242) 0.0))))))))
(assert
 (let ((?x38024 (* l_0_14_94 l_0_14_94)))
 (let ((?x38022 (* l_0_14_93 l_0_14_93)))
 (let ((?x38020 (* l_0_14_92 l_0_14_92)))
 (let ((?x38018 (* l_0_14_91 l_0_14_91)))
 (let ((?x38016 (* l_0_14_66 l_0_14_66)))
 (let ((?x38014 (* l_0_14_65 l_0_14_65)))
 (let ((?x39047 (+ (+ (+ (* l_0_14_63 l_0_14_63) (* l_0_14_64 l_0_14_64)) ?x38014) ?x38016)))
 (= (- (- (- (- ?x39047 ?x38018) ?x38020) ?x38022) ?x38024) 0.0)))))))))
(assert
 (let ((?x36319 (* (* 2.0 l_0_14_94) l_0_14_98)))
 (let ((?x36316 (* (* 2.0 l_0_14_93) l_0_14_97)))
 (let ((?x36313 (* (* 2.0 l_0_14_92) l_0_14_96)))
 (let ((?x36310 (* (* 2.0 l_0_14_91) l_0_14_95)))
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x36307 (* ?x36306 l_0_14_70)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x36304 (* ?x36303 l_0_14_69)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x36301 (* ?x36300 l_0_14_68)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x36298 (* ?x36297 l_0_14_67)))
 (let ((?x39063 (- (- (- (- (+ (+ (+ ?x36298 ?x36301) ?x36304) ?x36307) ?x36310) ?x36313) ?x36316) ?x36319)))
 (= ?x39063 0.0)))))))))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38054 (* ?x36306 l_0_14_75)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38052 (* ?x36303 l_0_14_74)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38050 (* ?x36300 l_0_14_73)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38048 (* ?x36297 l_0_14_72)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x38046 (* ?x23685 l_0_14_94)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x38044 (* ?x12068 l_0_14_93)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x38042 (* ?x26067 l_0_14_92)))
 (let ((?x39079 (+ (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_91) ?x38042) ?x38044) ?x38046) ?x38048)))
 (= (+ (+ (+ ?x39079 ?x38050) ?x38052) ?x38054) 0.0)))))))))))))))))
(assert
 (let ((?x36306 (* 2.0 l_0_14_66)))
 (let ((?x38086 (* ?x36306 l_0_14_81)))
 (let ((?x36303 (* 2.0 l_0_14_65)))
 (let ((?x38084 (* ?x36303 l_0_14_80)))
 (let ((?x36300 (* 2.0 l_0_14_64)))
 (let ((?x38082 (* ?x36300 l_0_14_79)))
 (let ((?x36297 (* 2.0 l_0_14_63)))
 (let ((?x38080 (* ?x36297 l_0_14_78)))
 (let ((?x35567 (* 2.0 l_0_14_109)))
 (let ((?x38078 (* ?x35567 l_0_14_94)))
 (let ((?x35564 (* 2.0 l_0_14_108)))
 (let ((?x38076 (* ?x35564 l_0_14_93)))
 (let ((?x35561 (* 2.0 l_0_14_107)))
 (let ((?x38074 (* ?x35561 l_0_14_92)))
 (let ((?x39087 (+ (- (- (- (* (* (- 2.0) l_0_14_106) l_0_14_91) ?x38074) ?x38076) ?x38078) ?x38080)))
 (= (+ (+ (+ ?x39087 ?x38082) ?x38084) ?x38086) 0.0)))))))))))))))))
(assert
 (let ((?x36526 (* l_0_14_99 l_0_14_99)))
 (let ((?x36524 (* l_0_14_98 l_0_14_98)))
 (let ((?x36522 (* l_0_14_97 l_0_14_97)))
 (let ((?x36520 (* l_0_14_96 l_0_14_96)))
 (let ((?x36518 (* l_0_14_95 l_0_14_95)))
 (let ((?x36516 (* l_0_14_71 l_0_14_71)))
 (let ((?x36514 (* l_0_14_70 l_0_14_70)))
 (let ((?x36512 (* l_0_14_69 l_0_14_69)))
 (let ((?x17602 (+ (+ (+ (* l_0_14_67 l_0_14_67) (* l_0_14_68 l_0_14_68)) ?x36512) ?x36514)))
 (= (- (- (- (- (- (+ ?x17602 ?x36516) ?x36518) ?x36520) ?x36522) ?x36524) ?x36526) 0.0)))))))))))
(assert
 (let ((?x35634 (* 2.0 l_0_14_71)))
 (let ((?x36639 (* ?x35634 l_0_14_76)))
 (let ((?x35631 (* 2.0 l_0_14_70)))
 (let ((?x36637 (* ?x35631 l_0_14_75)))
 (let ((?x35628 (* 2.0 l_0_14_69)))
 (let ((?x36635 (* ?x35628 l_0_14_74)))
 (let ((?x35625 (* 2.0 l_0_14_68)))
 (let ((?x36633 (* ?x35625 l_0_14_73)))
 (let ((?x35622 (* 2.0 l_0_14_67)))
 (let ((?x36631 (* ?x35622 l_0_14_72)))
 (let ((?x26077 (* 2.0 l_0_14_104)))
 (let ((?x36593 (* ?x26077 l_0_14_99)))
 (let ((?x23685 (* 2.0 l_0_14_103)))
 (let ((?x12092 (* ?x23685 l_0_14_98)))
 (let ((?x12068 (* 2.0 l_0_14_102)))
 (let ((?x12093 (* ?x12068 l_0_14_97)))
 (let ((?x26067 (* 2.0 l_0_14_101)))
 (let ((?x12072 (* ?x26067 l_0_14_96)))
 (let ((?x39121 (- (- (- (- (* (* (- 2.0) l_0_14_100) l_0_14_95) ?x12072) ?x12093) ?x12092) ?x36593)))
 (= (+ (+ (+ (+ (+ ?x39121 ?x36631) ?x36633) ?x36635) ?x36637) ?x36639) 0.0)))))))))))))))))))))
(assert
 (let ((?x38137 (* l_0_14_77 l_0_14_77)))
 (let ((?x38135 (* l_0_14_76 l_0_14_76)))
 (let ((?x38133 (* l_0_14_75 l_0_14_75)))
 (let ((?x38131 (* l_0_14_74 l_0_14_74)))
 (let ((?x38129 (* l_0_14_73 l_0_14_73)))
 (let ((?x38127 (* l_0_14_72 l_0_14_72)))
 (let ((?x38125 (* l_0_14_105 l_0_14_105)))
 (let ((?x38123 (* l_0_14_104 l_0_14_104)))
 (let ((?x38121 (* l_0_14_103 l_0_14_103)))
 (let ((?x38119 (* l_0_14_102 l_0_14_102)))
 (let ((?x39133 (- (- (* (- l_0_14_100) l_0_14_100) (* l_0_14_101 l_0_14_101)) ?x38119)))
 (let ((?x39140 (+ (+ (+ (+ (- (- (- ?x39133 ?x38121) ?x38123) ?x38125) ?x38127) ?x38129) ?x38131) ?x38133)))
 (= (+ (+ ?x39140 ?x38135) ?x38137) 0.0))))))))))))))
(assert
 (let ((?x38190 (* l_0_14_84 l_0_14_84)))
 (let ((?x38188 (* l_0_14_83 l_0_14_83)))
 (let ((?x38186 (* l_0_14_82 l_0_14_82)))
 (let ((?x38184 (* l_0_14_81 l_0_14_81)))
 (let ((?x38182 (* l_0_14_80 l_0_14_80)))
 (let ((?x38180 (* l_0_14_79 l_0_14_79)))
 (let ((?x38178 (* l_0_14_78 l_0_14_78)))
 (let ((?x38176 (* l_0_14_112 l_0_14_112)))
 (let ((?x38174 (* l_0_14_111 l_0_14_111)))
 (let ((?x38172 (* l_0_14_110 l_0_14_110)))
 (let ((?x38170 (* l_0_14_109 l_0_14_109)))
 (let ((?x38168 (* l_0_14_108 l_0_14_108)))
 (let ((?x39153 (- (- (* (- l_0_14_106) l_0_14_106) (* l_0_14_107 l_0_14_107)) ?x38168)))
 (let ((?x39160 (+ (+ (+ (- (- (- (- ?x39153 ?x38170) ?x38172) ?x38174) ?x38176) ?x38178) ?x38180) ?x38182)))
 (= (+ (+ (+ (+ ?x39160 ?x38184) ?x38186) ?x38188) ?x38190) 0.0))))))))))))))))
(assert
 (let ((?x39178 (- (* (* (- 2.0) l_0_14_197) l_0_14_207) (* (* 2.0 l_0_14_225) l_0_14_235))))
 (= ?x39178 0.0)))
(assert
 (let ((?x39193 (- (* (* (- 2.0) l_0_14_197) l_0_14_212) (* (* 2.0 l_0_14_225) l_0_14_240))))
 (= ?x39193 0.0)))
(assert
 (let ((?x39208 (- (* (* (- 2.0) l_0_14_197) l_0_14_218) (* (* 2.0 l_0_14_225) l_0_14_246))))
 (= ?x39208 0.0)))
(assert
 (let ((?x39237 (* l_0_14_239 l_0_14_239)))
 (let ((?x39235 (* l_0_14_238 l_0_14_238)))
 (let ((?x39233 (* l_0_14_237 l_0_14_237)))
 (let ((?x39231 (* l_0_14_236 l_0_14_236)))
 (let ((?x39229 (* l_0_14_235 l_0_14_235)))
 (let ((?x39227 (* l_0_14_211 l_0_14_211)))
 (let ((?x39225 (* l_0_14_210 l_0_14_210)))
 (let ((?x39223 (* l_0_14_209 l_0_14_209)))
 (let ((?x39224 (- (- (* (- l_0_14_207) l_0_14_207) (* l_0_14_208 l_0_14_208)) ?x39223)))
 (let ((?x39238 (- (- (- (- (- (- (- ?x39224 ?x39225) ?x39227) ?x39229) ?x39231) ?x39233) ?x39235) ?x39237)))
 (= ?x39238 0.0))))))))))))
(assert
 (let ((?x17743 (- (* (* (- 2.0) l_0_14_207) l_0_14_212) (* (* 2.0 l_0_14_208) l_0_14_213))))
 (let ((?x39252 (- (- ?x17743 (* (* 2.0 l_0_14_209) l_0_14_214)) (* (* 2.0 l_0_14_210) l_0_14_215))))
 (let ((?x39256 (- (- ?x39252 (* (* 2.0 l_0_14_211) l_0_14_216)) (* (* 2.0 l_0_14_235) l_0_14_240))))
 (let ((?x39260 (- (- ?x39256 (* (* 2.0 l_0_14_236) l_0_14_241)) (* (* 2.0 l_0_14_237) l_0_14_242))))
 (let ((?x39264 (- (- ?x39260 (* (* 2.0 l_0_14_238) l_0_14_243)) (* (* 2.0 l_0_14_239) l_0_14_244))))
 (= ?x39264 0.0)))))))
(assert
 (let ((?x39314 (* l_0_14_245 l_0_14_245)))
 (let ((?x39312 (* l_0_14_244 l_0_14_244)))
 (let ((?x39310 (* l_0_14_243 l_0_14_243)))
 (let ((?x39308 (* l_0_14_242 l_0_14_242)))
 (let ((?x39306 (* l_0_14_241 l_0_14_241)))
 (let ((?x39304 (* l_0_14_240 l_0_14_240)))
 (let ((?x39302 (* l_0_14_217 l_0_14_217)))
 (let ((?x39300 (* l_0_14_216 l_0_14_216)))
 (let ((?x39298 (* l_0_14_215 l_0_14_215)))
 (let ((?x39296 (* l_0_14_214 l_0_14_214)))
 (let ((?x39297 (- (- (* (- l_0_14_212) l_0_14_212) (* l_0_14_213 l_0_14_213)) ?x39296)))
 (let ((?x39311 (- (- (- (- (- (- (- ?x39297 ?x39298) ?x39300) ?x39302) ?x39304) ?x39306) ?x39308) ?x39310)))
 (= (- (- ?x39311 ?x39312) ?x39314) 0.0))))))))))))))
(assert
 (let ((?x39343 (* l_0_14_252 l_0_14_252)))
 (let ((?x39341 (* l_0_14_251 l_0_14_251)))
 (let ((?x39339 (* l_0_14_250 l_0_14_250)))
 (let ((?x39337 (* l_0_14_249 l_0_14_249)))
 (let ((?x39335 (* l_0_14_248 l_0_14_248)))
 (let ((?x39333 (* l_0_14_247 l_0_14_247)))
 (let ((?x39331 (* l_0_14_246 l_0_14_246)))
 (let ((?x17970 (* l_0_14_224 l_0_14_224)))
 (let ((?x29528 (* l_0_14_223 l_0_14_223)))
 (let ((?x14122 (* l_0_14_222 l_0_14_222)))
 (let ((?x17769 (* l_0_14_221 l_0_14_221)))
 (let ((?x17757 (* l_0_14_220 l_0_14_220)))
 (let ((?x17763 (- (- (* (- l_0_14_218) l_0_14_218) (* l_0_14_219 l_0_14_219)) ?x17757)))
 (let ((?x39336 (- (- (- (- (- (- (- ?x17763 ?x17769) ?x14122) ?x29528) ?x17970) ?x39331) ?x39333) ?x39335)))
 (= (- (- (- (- ?x39336 ?x39337) ?x39339) ?x39341) ?x39343) 0.0))))))))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_28 0.0))
(assert
 (>= l_0_14_29 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_34 0.0))
(assert
 (>= l_0_14_38 0.0))
(assert
 (>= l_0_14_43 0.0))
(assert
 (>= l_0_14_49 0.0))
(assert
 (>= l_0_14_56 0.0))
(assert
 (>= l_0_14_57 0.0))
(assert
 (>= l_0_14_59 0.0))
(assert
 (>= l_0_14_62 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_71 0.0))
(assert
 (>= l_0_14_77 0.0))
(assert
 (>= l_0_14_84 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_87 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (>= l_0_14_94 0.0))
(assert
 (>= l_0_14_99 0.0))
(assert
 (>= l_0_14_105 0.0))
(assert
 (>= l_0_14_112 0.0))
(assert
 (>= l_0_14_113 0.0))
(assert
 (>= l_0_14_115 0.0))
(assert
 (>= l_0_14_118 0.0))
(assert
 (>= l_0_14_122 0.0))
(assert
 (>= l_0_14_127 0.0))
(assert
 (>= l_0_14_133 0.0))
(assert
 (>= l_0_14_140 0.0))
(assert
 (>= l_0_14_141 0.0))
(assert
 (>= l_0_14_143 0.0))
(assert
 (>= l_0_14_146 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (>= l_0_14_155 0.0))
(assert
 (>= l_0_14_161 0.0))
(assert
 (>= l_0_14_168 0.0))
(assert
 (>= l_0_14_169 0.0))
(assert
 (>= l_0_14_171 0.0))
(assert
 (>= l_0_14_174 0.0))
(assert
 (>= l_0_14_178 0.0))
(assert
 (>= l_0_14_183 0.0))
(assert
 (>= l_0_14_189 0.0))
(assert
 (>= l_0_14_196 0.0))
(assert
 (>= l_0_14_197 0.0))
(assert
 (>= l_0_14_199 0.0))
(assert
 (>= l_0_14_202 0.0))
(assert
 (>= l_0_14_206 0.0))
(assert
 (>= l_0_14_211 0.0))
(assert
 (>= l_0_14_217 0.0))
(assert
 (>= l_0_14_224 0.0))
(assert
 (>= l_0_14_225 0.0))
(assert
 (>= l_0_14_227 0.0))
(assert
 (>= l_0_14_230 0.0))
(assert
 (>= l_0_14_234 0.0))
(assert
 (>= l_0_14_239 0.0))
(assert
 (>= l_0_14_245 0.0))
(assert
 (>= l_0_14_252 0.0))
(assert
 (let ((?x39484 (* l_0_15_85 l_0_15_85)))
 (let ((?x39482 (* l_0_15_57 l_0_15_57)))
 (let ((?x39433 (- (* (* (- 2.0) l_0_15_212) l_0_15_218) (* (* 2.0 l_0_15_213) l_0_15_219))))
 (let ((?x39439 (- (- ?x39433 (* (* 2.0 l_0_15_214) l_0_15_220)) (* (* 2.0 l_0_15_215) l_0_15_221))))
 (let ((?x39445 (- (- ?x39439 (* (* 2.0 l_0_15_216) l_0_15_222)) (* (* 2.0 l_0_15_217) l_0_15_223))))
 (let ((?x39451 (- (- ?x39445 (* (* 2.0 l_0_15_240) l_0_15_246)) (* (* 2.0 l_0_15_241) l_0_15_247))))
 (let ((?x39457 (- (- ?x39451 (* (* 2.0 l_0_15_242) l_0_15_248)) (* (* 2.0 l_0_15_243) l_0_15_249))))
 (let ((?x39463 (- (- ?x39457 (* (* 2.0 l_0_15_244) l_0_15_250)) (* (* 2.0 l_0_15_245) l_0_15_251))))
 (let ((?x39469 (- (- ?x39463 (* (* 2.0 l_0_15_268) l_0_15_274)) (* (* 2.0 l_0_15_269) l_0_15_275))))
 (let ((?x39475 (- (- ?x39469 (* (* 2.0 l_0_15_270) l_0_15_276)) (* (* 2.0 l_0_15_271) l_0_15_277))))
 (let ((?x39481 (- (- ?x39475 (* (* 2.0 l_0_15_272) l_0_15_278)) (* (* 2.0 l_0_15_273) l_0_15_279))))
 (= (+ (+ (- ?x39481 ?x39482) ?x39484) 1.0) 0.0)))))))))))))
(assert
 (let ((?x39484 (* l_0_15_85 l_0_15_85)))
 (let ((?x39482 (* l_0_15_57 l_0_15_57)))
 (let ((?x39547 (* l_0_15_169 l_0_15_169)))
 (let ((?x39548 (- (- (* (- l_0_15_113) l_0_15_113) (* l_0_15_141 l_0_15_141)) ?x39547)))
 (let ((?x39554 (- (- ?x39548 (* (* 2.0 l_0_15_197) l_0_15_200)) (* (* 2.0 l_0_15_225) l_0_15_228))))
 (let ((?x39560 (+ (+ (- (- ?x39554 (* (* 2.0 l_0_15_253) l_0_15_256)) ?x39482) ?x39484) 1.0)))
 (= ?x39560 0.0))))))))
(assert
 (let ((?x39484 (* l_0_15_85 l_0_15_85)))
 (let ((?x39482 (* l_0_15_57 l_0_15_57)))
 (let ((?x39579 (- (* (* (- 2.0) l_0_15_197) l_0_15_203) (* (* 2.0 l_0_15_225) l_0_15_231))))
 (let ((?x39584 (- (- (+ (- ?x39579 (* (* 2.0 l_0_15_253) l_0_15_259)) ?x39482) ?x39484) 1.0)))
 (= ?x39584 0.0))))))
(assert
 (let ((?x39644 (* l_0_15_29 l_0_15_29)))
 (let ((?x39601 (- (+ (* (- l_0_15_1) l_0_15_1) (* l_0_15_141 l_0_15_141)) (* (* 2.0 l_0_15_207) l_0_15_218))))
 (let ((?x39607 (- (- ?x39601 (* (* 2.0 l_0_15_208) l_0_15_219)) (* (* 2.0 l_0_15_209) l_0_15_220))))
 (let ((?x39613 (- (- ?x39607 (* (* 2.0 l_0_15_210) l_0_15_221)) (* (* 2.0 l_0_15_211) l_0_15_222))))
 (let ((?x39619 (- (- ?x39613 (* (* 2.0 l_0_15_235) l_0_15_246)) (* (* 2.0 l_0_15_236) l_0_15_247))))
 (let ((?x39625 (- (- ?x39619 (* (* 2.0 l_0_15_237) l_0_15_248)) (* (* 2.0 l_0_15_238) l_0_15_249))))
 (let ((?x39631 (- (- ?x39625 (* (* 2.0 l_0_15_239) l_0_15_250)) (* (* 2.0 l_0_15_263) l_0_15_274))))
 (let ((?x39637 (- (- ?x39631 (* (* 2.0 l_0_15_264) l_0_15_275)) (* (* 2.0 l_0_15_265) l_0_15_276))))
 (let ((?x39643 (- (- ?x39637 (* (* 2.0 l_0_15_266) l_0_15_277)) (* (* 2.0 l_0_15_267) l_0_15_278))))
 (= (+ ?x39643 ?x39644) 0.0)))))))))))
(assert
 (let ((?x39742 (* 2.0 l_0_15_43)))
 (let ((?x39743 (* ?x39742 l_0_15_54)))
 (let ((?x39739 (* 2.0 l_0_15_42)))
 (let ((?x39740 (* ?x39739 l_0_15_53)))
 (let ((?x39736 (* 2.0 l_0_15_41)))
 (let ((?x39737 (* ?x39736 l_0_15_52)))
 (let ((?x39733 (* 2.0 l_0_15_40)))
 (let ((?x39734 (* ?x39733 l_0_15_51)))
 (let ((?x39730 (* 2.0 l_0_15_39)))
 (let ((?x39731 (* ?x39730 l_0_15_50)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39728 (* ?x39727 l_0_15_30)))
 (let ((?x39709 (* 2.0 l_0_15_15)))
 (let ((?x39710 (* ?x39709 l_0_15_26)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39707 (* ?x39706 l_0_15_142)))
 (let ((?x39703 (* 2.0 l_0_15_14)))
 (let ((?x39704 (* ?x39703 l_0_15_25)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x39701 (* ?x39700 l_0_15_24)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x39698 (* ?x39697 l_0_15_23)))
 (let ((?x39696 (+ (* (* (- 2.0) l_0_15_1) l_0_15_2) (* (* 2.0 l_0_15_11) l_0_15_22))))
 (let ((?x39714 (+ (+ (+ (+ (+ (+ ?x39696 ?x39698) ?x39701) ?x39704) ?x39707) ?x39710) (* (* 4.0 l_0_15_179) l_0_15_190))))
 (let ((?x39720 (+ (+ ?x39714 (* (* 4.0 l_0_15_180) l_0_15_191)) (* (* 4.0 l_0_15_181) l_0_15_192))))
 (let ((?x39726 (+ (+ ?x39720 (* (* 4.0 l_0_15_182) l_0_15_193)) (* (* 4.0 l_0_15_183) l_0_15_194))))
 (= (- (- (- (- (- (+ ?x39726 ?x39728) ?x39731) ?x39734) ?x39737) ?x39740) ?x39743) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x39876 (* ?x39875 l_0_15_82)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x39873 (* ?x39872 l_0_15_81)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x39870 (* ?x39869 l_0_15_80)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x39867 (* ?x39866 l_0_15_79)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x39864 (* ?x39863 l_0_15_78)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39861 (* ?x39727 l_0_15_32)))
 (let ((?x39843 (* 2.0 l_0_15_155)))
 (let ((?x39844 (* ?x39843 l_0_15_166)))
 (let ((?x39840 (* 2.0 l_0_15_154)))
 (let ((?x39841 (* ?x39840 l_0_15_165)))
 (let ((?x39837 (* 2.0 l_0_15_153)))
 (let ((?x39838 (* ?x39837 l_0_15_164)))
 (let ((?x39834 (* 2.0 l_0_15_152)))
 (let ((?x39835 (* ?x39834 l_0_15_163)))
 (let ((?x39831 (* 2.0 l_0_15_151)))
 (let ((?x39832 (* ?x39831 l_0_15_162)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39829 (* ?x39706 l_0_15_144)))
 (let ((?x39812 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x39809 (* ?x39808 l_0_15_98)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x39806 (* ?x39805 l_0_15_97)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x39803 (* ?x39802 l_0_15_96)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x39800 (* ?x39799 l_0_15_95)))
 (let ((?x39810 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_4) ?x39800) ?x39803) ?x39806) ?x39809)))
 (let ((?x39819 (- (- (+ ?x39810 ?x39812) (* (* 2.0 l_0_15_123) l_0_15_134)) (* (* 2.0 l_0_15_124) l_0_15_135))))
 (let ((?x39825 (- (- ?x39819 (* (* 2.0 l_0_15_125) l_0_15_136)) (* (* 2.0 l_0_15_126) l_0_15_137))))
 (let ((?x39836 (- (- (+ (- ?x39825 (* (* 2.0 l_0_15_127) l_0_15_138)) ?x39829) ?x39832) ?x39835)))
 (let ((?x39848 (- (- (- (- ?x39836 ?x39838) ?x39841) ?x39844) (* (* 2.0 l_0_15_179) l_0_15_190))))
 (let ((?x39854 (- (- ?x39848 (* (* 2.0 l_0_15_180) l_0_15_191)) (* (* 2.0 l_0_15_181) l_0_15_192))))
 (let ((?x39860 (- (- ?x39854 (* (* 2.0 l_0_15_182) l_0_15_193)) (* (* 2.0 l_0_15_183) l_0_15_194))))
 (= (- (- (- (- (- (+ ?x39860 ?x39861) ?x39864) ?x39867) ?x39870) ?x39873) ?x39876) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x39876 (* ?x39875 l_0_15_82)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x39873 (* ?x39872 l_0_15_81)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x39870 (* ?x39869 l_0_15_80)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x39867 (* ?x39866 l_0_15_79)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x39864 (* ?x39863 l_0_15_78)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39936 (* ?x39727 l_0_15_35)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39934 (* ?x39706 l_0_15_147)))
 (let ((?x39812 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x39809 (* ?x39808 l_0_15_98)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x39806 (* ?x39805 l_0_15_97)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x39803 (* ?x39802 l_0_15_96)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x39800 (* ?x39799 l_0_15_95)))
 (let ((?x39932 (- (- (- (- (* (* (- 2.0) l_0_15_1) l_0_15_7) ?x39800) ?x39803) ?x39806) ?x39809)))
 (let ((?x39941 (+ (+ (+ (+ (+ (+ (- ?x39932 ?x39812) ?x39934) ?x39936) ?x39864) ?x39867) ?x39870) ?x39873)))
 (= (+ ?x39941 ?x39876) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39949 (* ?x39727 l_0_15_39)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x30171 (* ?x39706 l_0_15_151)))
 (= (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_11) ?x30171) ?x39949) 0.0))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x39969 (* ?x39968 l_0_15_95)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x39966 (* ?x39965 l_0_15_67)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39958 (* ?x39727 l_0_15_44)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39955 (* ?x39706 l_0_15_156)))
 (let ((?x39970 (+ (- (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_16) ?x39955) ?x39958) ?x39966) ?x39969)))
 (= ?x39970 0.0)))))))))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39989 (* ?x39727 l_0_15_50)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39987 (* ?x39706 l_0_15_162)))
 (= (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_22) ?x39987) ?x39989) 0.0))))))
(assert
 (let ((?x40009 (* l_0_15_31 l_0_15_31)))
 (let ((?x40007 (* l_0_15_30 l_0_15_30)))
 (let ((?x40005 (* l_0_15_3 l_0_15_3)))
 (let ((?x39998 (* l_0_15_2 l_0_15_2)))
 (let ((?x40004 (- (+ (* l_0_15_142 l_0_15_142) (* l_0_15_143 l_0_15_143)) ?x39998)))
 (= (+ (+ (- ?x40004 ?x40005) ?x40007) ?x40009) 0.0)))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40032 (* ?x40031 l_0_15_33)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40029 (* ?x40028 l_0_15_32)))
 (let ((?x40025 (* 2.0 l_0_15_3)))
 (let ((?x40026 (* ?x40025 l_0_15_5)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x40023 (* ?x40022 l_0_15_4)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40020 (* ?x40019 l_0_15_145)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40018 (* ?x40017 l_0_15_144)))
 (= (+ (+ (- (- (+ ?x40018 ?x40020) ?x40023) ?x40026) ?x40029) ?x40032) 0.0))))))))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40049 (* ?x40031 l_0_15_36)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x19590 (* ?x40028 l_0_15_35)))
 (let ((?x40025 (* 2.0 l_0_15_3)))
 (let ((?x19587 (* ?x40025 l_0_15_8)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x19500 (* ?x40022 l_0_15_7)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x30168 (* ?x40019 l_0_15_148)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x19418 (* ?x40017 l_0_15_147)))
 (= (+ (+ (- (- (+ ?x19418 ?x30168) ?x19500) ?x19587) ?x19590) ?x40049) 0.0))))))))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40076 (* ?x40031 l_0_15_40)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40074 (* ?x40028 l_0_15_39)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40072 (* ?x40019 l_0_15_152)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40070 (* ?x40017 l_0_15_151)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x40068 (* ?x39697 l_0_15_3)))
 (let ((?x40075 (+ (+ (+ (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x40068) ?x40070) ?x40072) ?x40074)))
 (= (+ ?x40075 ?x40076) 0.0)))))))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x40117 (* ?x40116 l_0_15_96)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x40114 (* ?x40113 l_0_15_95)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x40111 (* ?x40110 l_0_15_68)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x40108 (* ?x40107 l_0_15_67)))
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40105 (* ?x40031 l_0_15_45)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40103 (* ?x40028 l_0_15_44)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40101 (* ?x40100 l_0_15_3)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40098 (* ?x40097 l_0_15_2)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40095 (* ?x40019 l_0_15_157)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40094 (* ?x40017 l_0_15_156)))
 (let ((?x40112 (- (- (+ (+ (- (- (+ ?x40094 ?x40095) ?x40098) ?x40101) ?x40103) ?x40105) ?x40108) ?x40111)))
 (= (+ (+ ?x40112 ?x40114) ?x40117) 0.0)))))))))))))))))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40164 (* ?x40031 l_0_15_51)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40162 (* ?x40028 l_0_15_50)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40160 (* ?x40159 l_0_15_3)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x40157 (* ?x40022 l_0_15_22)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40155 (* ?x40019 l_0_15_163)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40154 (* ?x40017 l_0_15_162)))
 (= (+ (+ (- (- (+ ?x40154 ?x40155) ?x40157) ?x40160) ?x40162) ?x40164) 0.0))))))))))))))
(assert
 (let ((?x40201 (* l_0_15_6 l_0_15_6)))
 (let ((?x40199 (* l_0_15_5 l_0_15_5)))
 (let ((?x40197 (* l_0_15_4 l_0_15_4)))
 (let ((?x40195 (* l_0_15_34 l_0_15_34)))
 (let ((?x40193 (* l_0_15_33 l_0_15_33)))
 (let ((?x40191 (* l_0_15_32 l_0_15_32)))
 (let ((?x40189 (* l_0_15_146 l_0_15_146)))
 (let ((?x40190 (+ (+ (* l_0_15_144 l_0_15_144) (* l_0_15_145 l_0_15_145)) ?x40189)))
 (= (- (- (- (+ (+ (+ ?x40190 ?x40191) ?x40193) ?x40195) ?x40197) ?x40199) ?x40201) 0.0))))))))))
(assert
 (let ((?x40236 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x40233 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x40230 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40227 (* ?x40226 l_0_15_37)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40224 (* ?x40223 l_0_15_36)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40221 (* ?x40220 l_0_15_35)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40218 (* ?x40217 l_0_15_149)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40215 (* ?x40214 l_0_15_148)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x40213 (* ?x40212 l_0_15_147)))
 (let ((?x40234 (- (- (+ (+ (+ (+ (+ ?x40213 ?x40215) ?x40218) ?x40221) ?x40224) ?x40227) ?x40230) ?x40233)))
 (= (- ?x40234 ?x40236) 0.0))))))))))))))))))
(assert
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40272 (* ?x40226 l_0_15_41)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40270 (* ?x40223 l_0_15_40)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40268 (* ?x40220 l_0_15_39)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40266 (* ?x40217 l_0_15_153)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40264 (* ?x40214 l_0_15_152)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x19736 (* ?x40212 l_0_15_151)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x19733 (* ?x39700 l_0_15_6)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x30252 (* ?x39697 l_0_15_5)))
 (let ((?x40265 (+ (+ (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x30252) ?x19733) ?x19736) ?x40264)))
 (= (+ (+ (+ (+ ?x40265 ?x40266) ?x40268) ?x40270) ?x40272) 0.0)))))))))))))))))))
(assert
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x40328 (* ?x40327 l_0_15_97)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x40325 (* ?x40324 l_0_15_96)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x40322 (* ?x40321 l_0_15_95)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x40319 (* ?x40318 l_0_15_69)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x40316 (* ?x40315 l_0_15_68)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x40313 (* ?x40312 l_0_15_67)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40310 (* ?x40226 l_0_15_46)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40308 (* ?x40223 l_0_15_45)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40306 (* ?x40220 l_0_15_44)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40304 (* ?x40303 l_0_15_6)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40301 (* ?x40100 l_0_15_5)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40299 (* ?x40097 l_0_15_4)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40297 (* ?x40217 l_0_15_158)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40295 (* ?x40214 l_0_15_157)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x40294 (* ?x40212 l_0_15_156)))
 (let ((?x40309 (+ (+ (- (- (- (+ (+ ?x40294 ?x40295) ?x40297) ?x40299) ?x40301) ?x40304) ?x40306) ?x40308)))
 (let ((?x40329 (+ (+ (+ (- (- (- (+ ?x40309 ?x40310) ?x40313) ?x40316) ?x40319) ?x40322) ?x40325) ?x40328)))
 (= ?x40329 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40397 (* ?x40226 l_0_15_52)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40395 (* ?x40223 l_0_15_51)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40393 (* ?x40220 l_0_15_50)))
 (let ((?x40390 (* 2.0 l_0_15_24)))
 (let ((?x40391 (* ?x40390 l_0_15_6)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40388 (* ?x40159 l_0_15_5)))
 (let ((?x40385 (* 2.0 l_0_15_22)))
 (let ((?x40386 (* ?x40385 l_0_15_4)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40372 (* ?x40217 l_0_15_164)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40369 (* ?x40214 l_0_15_163)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x30293 (* ?x40212 l_0_15_162)))
 (let ((?x40396 (+ (+ (- (- (- (+ (+ ?x30293 ?x40369) ?x40372) ?x40386) ?x40388) ?x40391) ?x40393) ?x40395)))
 (= (+ ?x40396 ?x40397) 0.0)))))))))))))))))))))
(assert
 (let ((?x40449 (* l_0_15_9 l_0_15_9)))
 (let ((?x40447 (* l_0_15_8 l_0_15_8)))
 (let ((?x40445 (* l_0_15_7 l_0_15_7)))
 (let ((?x40443 (* l_0_15_38 l_0_15_38)))
 (let ((?x40441 (* l_0_15_37 l_0_15_37)))
 (let ((?x40439 (* l_0_15_36 l_0_15_36)))
 (let ((?x40437 (* l_0_15_35 l_0_15_35)))
 (let ((?x40435 (* l_0_15_150 l_0_15_150)))
 (let ((?x40433 (* l_0_15_149 l_0_15_149)))
 (let ((?x40431 (* l_0_15_148 l_0_15_148)))
 (let ((?x40432 (+ (+ (* (- l_0_15_10) l_0_15_10) (* l_0_15_147 l_0_15_147)) ?x40431)))
 (let ((?x40446 (- (+ (+ (+ (+ (+ (+ ?x40432 ?x40433) ?x40435) ?x40437) ?x40439) ?x40441) ?x40443) ?x40445)))
 (= (- (- ?x40446 ?x40447) ?x40449) 0.0))))))))))))))
(assert
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40477 (* ?x40476 l_0_15_42)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40474 (* ?x40473 l_0_15_41)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40471 (* ?x40470 l_0_15_40)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40468 (* ?x40467 l_0_15_39)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40465 (* ?x40464 l_0_15_154)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40462 (* ?x40461 l_0_15_153)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40459 (* ?x19888 l_0_15_152)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x19887 (* ?x30302 l_0_15_151)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x18351 (* ?x39700 l_0_15_9)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x30295 (* ?x39697 l_0_15_8)))
 (let ((?x39694 (* 2.0 l_0_15_11)))
 (let ((?x30291 (* ?x39694 l_0_15_7)))
 (let ((?x29675 (+ (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x30291) ?x30295) ?x18351) ?x19887)))
 (let ((?x40478 (+ (+ (+ (+ (+ (+ (+ ?x29675 ?x40459) ?x40462) ?x40465) ?x40468) ?x40471) ?x40474) ?x40477)))
 (= ?x40478 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40555 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40552 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40549 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40546 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x40543 (* ?x40542 l_0_15_70)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x40540 (* ?x40539 l_0_15_69)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x40537 (* ?x40536 l_0_15_68)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x40534 (* ?x40533 l_0_15_67)))
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40531 (* ?x40476 l_0_15_47)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40529 (* ?x40473 l_0_15_46)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40527 (* ?x40470 l_0_15_45)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40525 (* ?x40467 l_0_15_44)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40523 (* ?x40303 l_0_15_9)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40521 (* ?x40100 l_0_15_8)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40519 (* ?x40097 l_0_15_7)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40506 (* ?x40464 l_0_15_159)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40502 (* ?x40461 l_0_15_158)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40498 (* ?x19888 l_0_15_157)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x30332 (* ?x30302 l_0_15_156)))
 (let ((?x40507 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_10) l_0_15_19) ?x30332) ?x40498) ?x40502) ?x40506)))
 (let ((?x40532 (+ (+ (+ (+ (- (- (- ?x40507 ?x40519) ?x40521) ?x40523) ?x40525) ?x40527) ?x40529) ?x40531)))
 (let ((?x40553 (+ (+ (+ (- (- (- (- ?x40532 ?x40534) ?x40537) ?x40540) ?x40543) ?x40546) ?x40549) ?x40552)))
 (= (+ ?x40553 ?x40555) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40627 (* ?x40476 l_0_15_53)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40625 (* ?x40473 l_0_15_52)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40623 (* ?x40470 l_0_15_51)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40621 (* ?x40467 l_0_15_50)))
 (let ((?x40390 (* 2.0 l_0_15_24)))
 (let ((?x40619 (* ?x40390 l_0_15_9)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40617 (* ?x40159 l_0_15_8)))
 (let ((?x40385 (* 2.0 l_0_15_22)))
 (let ((?x40615 (* ?x40385 l_0_15_7)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40613 (* ?x40464 l_0_15_165)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40611 (* ?x40461 l_0_15_164)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40594 (* ?x19888 l_0_15_163)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x29756 (* ?x30302 l_0_15_162)))
 (let ((?x40614 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_10) l_0_15_25) ?x29756) ?x40594) ?x40611) ?x40613)))
 (let ((?x40628 (+ (+ (+ (+ (- (- (- ?x40614 ?x40615) ?x40617) ?x40619) ?x40621) ?x40623) ?x40625) ?x40627)))
 (= ?x40628 0.0))))))))))))))))))))))))))
(assert
 (let ((?x40685 (* l_0_15_43 l_0_15_43)))
 (let ((?x40683 (* l_0_15_42 l_0_15_42)))
 (let ((?x40681 (* l_0_15_41 l_0_15_41)))
 (let ((?x40679 (* l_0_15_40 l_0_15_40)))
 (let ((?x40677 (* l_0_15_39 l_0_15_39)))
 (let ((?x40675 (* l_0_15_155 l_0_15_155)))
 (let ((?x40673 (* l_0_15_154 l_0_15_154)))
 (let ((?x40671 (* l_0_15_153 l_0_15_153)))
 (let ((?x40669 (* l_0_15_152 l_0_15_152)))
 (let ((?x40667 (* l_0_15_151 l_0_15_151)))
 (let ((?x40665 (* l_0_15_15 l_0_15_15)))
 (let ((?x40663 (* l_0_15_14 l_0_15_14)))
 (let ((?x40661 (* l_0_15_13 l_0_15_13)))
 (let ((?x40662 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x40661)))
 (let ((?x40676 (+ (+ (+ (+ (+ (- (- ?x40662 ?x40663) ?x40665) ?x40667) ?x40669) ?x40671) ?x40673) ?x40675)))
 (= (+ (+ (+ (+ (+ ?x40676 ?x40677) ?x40679) ?x40681) ?x40683) ?x40685) 0.0)))))))))))))))))
(assert
 (let ((?x40760 (* l_0_15_99 l_0_15_99)))
 (let ((?x40758 (* l_0_15_98 l_0_15_98)))
 (let ((?x40756 (* l_0_15_97 l_0_15_97)))
 (let ((?x40754 (* l_0_15_96 l_0_15_96)))
 (let ((?x40752 (* l_0_15_95 l_0_15_95)))
 (let ((?x40750 (* l_0_15_71 l_0_15_71)))
 (let ((?x40748 (* l_0_15_70 l_0_15_70)))
 (let ((?x40746 (* l_0_15_69 l_0_15_69)))
 (let ((?x40744 (* l_0_15_68 l_0_15_68)))
 (let ((?x40742 (* l_0_15_67 l_0_15_67)))
 (let ((?x39742 (* 2.0 l_0_15_43)))
 (let ((?x40740 (* ?x39742 l_0_15_48)))
 (let ((?x39739 (* 2.0 l_0_15_42)))
 (let ((?x40738 (* ?x39739 l_0_15_47)))
 (let ((?x39736 (* 2.0 l_0_15_41)))
 (let ((?x40736 (* ?x39736 l_0_15_46)))
 (let ((?x39733 (* 2.0 l_0_15_40)))
 (let ((?x40734 (* ?x39733 l_0_15_45)))
 (let ((?x39730 (* 2.0 l_0_15_39)))
 (let ((?x40732 (* ?x39730 l_0_15_44)))
 (let ((?x39843 (* 2.0 l_0_15_155)))
 (let ((?x40730 (* ?x39843 l_0_15_160)))
 (let ((?x39840 (* 2.0 l_0_15_154)))
 (let ((?x40728 (* ?x39840 l_0_15_159)))
 (let ((?x39837 (* 2.0 l_0_15_153)))
 (let ((?x40726 (* ?x39837 l_0_15_158)))
 (let ((?x39834 (* 2.0 l_0_15_152)))
 (let ((?x40724 (* ?x39834 l_0_15_157)))
 (let ((?x39831 (* 2.0 l_0_15_151)))
 (let ((?x40722 (* ?x39831 l_0_15_156)))
 (let ((?x39709 (* 2.0 l_0_15_15)))
 (let ((?x40720 (* ?x39709 l_0_15_20)))
 (let ((?x39703 (* 2.0 l_0_15_14)))
 (let ((?x40718 (* ?x39703 l_0_15_19)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x40716 (* ?x39700 l_0_15_18)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x40714 (* ?x39697 l_0_15_17)))
 (let ((?x40721 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_16) ?x40714) ?x40716) ?x40718) ?x40720)))
 (let ((?x40735 (+ (+ (+ (+ (+ (+ (+ ?x40721 ?x40722) ?x40724) ?x40726) ?x40728) ?x40730) ?x40732) ?x40734)))
 (let ((?x40749 (- (- (- (- (+ (+ (+ ?x40735 ?x40736) ?x40738) ?x40740) ?x40742) ?x40744) ?x40746) ?x40748)))
 (= (+ (+ (+ (+ (+ (- ?x40749 ?x40750) ?x40752) ?x40754) ?x40756) ?x40758) ?x40760) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39742 (* 2.0 l_0_15_43)))
 (let ((?x39743 (* ?x39742 l_0_15_54)))
 (let ((?x39739 (* 2.0 l_0_15_42)))
 (let ((?x39740 (* ?x39739 l_0_15_53)))
 (let ((?x39736 (* 2.0 l_0_15_41)))
 (let ((?x39737 (* ?x39736 l_0_15_52)))
 (let ((?x39733 (* 2.0 l_0_15_40)))
 (let ((?x39734 (* ?x39733 l_0_15_51)))
 (let ((?x39730 (* 2.0 l_0_15_39)))
 (let ((?x39731 (* ?x39730 l_0_15_50)))
 (let ((?x39843 (* 2.0 l_0_15_155)))
 (let ((?x39844 (* ?x39843 l_0_15_166)))
 (let ((?x39840 (* 2.0 l_0_15_154)))
 (let ((?x39841 (* ?x39840 l_0_15_165)))
 (let ((?x39837 (* 2.0 l_0_15_153)))
 (let ((?x39838 (* ?x39837 l_0_15_164)))
 (let ((?x39834 (* 2.0 l_0_15_152)))
 (let ((?x39835 (* ?x39834 l_0_15_163)))
 (let ((?x39831 (* 2.0 l_0_15_151)))
 (let ((?x39832 (* ?x39831 l_0_15_162)))
 (let ((?x39709 (* 2.0 l_0_15_15)))
 (let ((?x39710 (* ?x39709 l_0_15_26)))
 (let ((?x39703 (* 2.0 l_0_15_14)))
 (let ((?x39704 (* ?x39703 l_0_15_25)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x39701 (* ?x39700 l_0_15_24)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x39698 (* ?x39697 l_0_15_23)))
 (let ((?x40814 (- (- (- (- (* (* (- 2.0) l_0_15_11) l_0_15_22) ?x39698) ?x39701) ?x39704) ?x39710)))
 (let ((?x40821 (+ (+ (+ (+ (+ (+ (+ ?x40814 ?x39832) ?x39835) ?x39838) ?x39841) ?x39844) ?x39731) ?x39734)))
 (= (+ (+ (+ ?x40821 ?x39737) ?x39740) ?x39743) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x40882 (* ?x39875 l_0_15_76)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x40880 (* ?x39872 l_0_15_75)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x40878 (* ?x39869 l_0_15_74)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x40876 (* ?x39866 l_0_15_73)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x40874 (* ?x39863 l_0_15_72)))
 (let ((?x40872 (* l_0_15_49 l_0_15_49)))
 (let ((?x40870 (* l_0_15_48 l_0_15_48)))
 (let ((?x40868 (* l_0_15_47 l_0_15_47)))
 (let ((?x40866 (* l_0_15_46 l_0_15_46)))
 (let ((?x40864 (* l_0_15_45 l_0_15_45)))
 (let ((?x40862 (* l_0_15_44 l_0_15_44)))
 (let ((?x40860 (* l_0_15_21 l_0_15_21)))
 (let ((?x40858 (* l_0_15_20 l_0_15_20)))
 (let ((?x40856 (* l_0_15_19 l_0_15_19)))
 (let ((?x40854 (* l_0_15_18 l_0_15_18)))
 (let ((?x40852 (* l_0_15_17 l_0_15_17)))
 (let ((?x40850 (* l_0_15_161 l_0_15_161)))
 (let ((?x40848 (* l_0_15_160 l_0_15_160)))
 (let ((?x40846 (* l_0_15_16 l_0_15_16)))
 (let ((?x40844 (* l_0_15_159 l_0_15_159)))
 (let ((?x40842 (* l_0_15_158 l_0_15_158)))
 (let ((?x40840 (* l_0_15_157 l_0_15_157)))
 (let ((?x40838 (* l_0_15_156 l_0_15_156)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x40836 (* ?x40835 l_0_15_99)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x40833 (* ?x40832 l_0_15_98)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x40830 (* ?x40829 l_0_15_97)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x40827 (* ?x40826 l_0_15_96)))
 (let ((?x40837 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_95) ?x40827) ?x40830) ?x40833) ?x40836)))
 (let ((?x40851 (+ (+ (- (+ (+ (+ (+ ?x40837 ?x40838) ?x40840) ?x40842) ?x40844) ?x40846) ?x40848) ?x40850)))
 (let ((?x40865 (+ (+ (- (- (- (- (- ?x40851 ?x40852) ?x40854) ?x40856) ?x40858) ?x40860) ?x40862) ?x40864)))
 (let ((?x40879 (- (- (- (+ (+ (+ (+ ?x40865 ?x40866) ?x40868) ?x40870) ?x40872) ?x40874) ?x40876) ?x40878)))
 (= (- (- ?x40879 ?x40880) ?x40882) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x39876 (* ?x39875 l_0_15_82)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x39873 (* ?x39872 l_0_15_81)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x39870 (* ?x39869 l_0_15_80)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x39867 (* ?x39866 l_0_15_79)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x39864 (* ?x39863 l_0_15_78)))
 (let ((?x40984 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x40981 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x40978 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x40975 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x40972 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x40969 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x40966 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x40963 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x40960 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40957 (* ?x40303 l_0_15_24)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40955 (* ?x40100 l_0_15_23)))
 (let ((?x40953 (* (* 2.0 l_0_15_161) l_0_15_167)))
 (let ((?x40950 (* (* 2.0 l_0_15_160) l_0_15_166)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40947 (* ?x40097 l_0_15_22)))
 (let ((?x40945 (* (* 2.0 l_0_15_159) l_0_15_165)))
 (let ((?x40942 (* (* 2.0 l_0_15_158) l_0_15_164)))
 (let ((?x40939 (* (* 2.0 l_0_15_157) l_0_15_163)))
 (let ((?x40936 (* (* 2.0 l_0_15_156) l_0_15_162)))
 (let ((?x39812 (* (* 2.0 l_0_15_110) l_0_15_99)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x39809 (* ?x39808 l_0_15_98)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x39806 (* ?x39805 l_0_15_97)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x39803 (* ?x39802 l_0_15_96)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x39800 (* ?x39799 l_0_15_95)))
 (let ((?x40943 (+ (+ (+ (+ (+ (+ (+ ?x39800 ?x39803) ?x39806) ?x39809) ?x39812) ?x40936) ?x40939) ?x40942)))
 (let ((?x40961 (- (- (- (+ (+ (- (+ ?x40943 ?x40945) ?x40947) ?x40950) ?x40953) ?x40955) ?x40957) ?x40960)))
 (let ((?x40982 (+ (+ (+ (+ (+ (- (- ?x40961 ?x40963) ?x40966) ?x40969) ?x40972) ?x40975) ?x40978) ?x40981)))
 (= (- (- (- (- (- (+ ?x40982 ?x40984) ?x39864) ?x39867) ?x39870) ?x39873) ?x39876) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x41098 (* l_0_15_56 l_0_15_56)))
 (let ((?x41096 (* l_0_15_55 l_0_15_55)))
 (let ((?x41094 (* l_0_15_54 l_0_15_54)))
 (let ((?x41092 (* l_0_15_53 l_0_15_53)))
 (let ((?x41090 (* l_0_15_52 l_0_15_52)))
 (let ((?x41088 (* l_0_15_51 l_0_15_51)))
 (let ((?x41086 (* l_0_15_50 l_0_15_50)))
 (let ((?x41084 (* l_0_15_28 l_0_15_28)))
 (let ((?x41082 (* l_0_15_27 l_0_15_27)))
 (let ((?x41080 (* l_0_15_26 l_0_15_26)))
 (let ((?x41078 (* l_0_15_25 l_0_15_25)))
 (let ((?x41076 (* l_0_15_24 l_0_15_24)))
 (let ((?x41074 (* l_0_15_23 l_0_15_23)))
 (let ((?x41072 (* l_0_15_22 l_0_15_22)))
 (let ((?x41070 (* l_0_15_168 l_0_15_168)))
 (let ((?x41068 (* l_0_15_167 l_0_15_167)))
 (let ((?x41066 (* l_0_15_166 l_0_15_166)))
 (let ((?x41064 (* l_0_15_165 l_0_15_165)))
 (let ((?x41062 (* l_0_15_164 l_0_15_164)))
 (let ((?x41063 (+ (+ (* l_0_15_162 l_0_15_162) (* l_0_15_163 l_0_15_163)) ?x41062)))
 (let ((?x41077 (- (- (- (+ (+ (+ (+ ?x41063 ?x41064) ?x41066) ?x41068) ?x41070) ?x41072) ?x41074) ?x41076)))
 (let ((?x41091 (+ (+ (+ (- (- (- (- ?x41077 ?x41078) ?x41080) ?x41082) ?x41084) ?x41086) ?x41088) ?x41090)))
 (= (+ (+ (+ (+ ?x41091 ?x41092) ?x41094) ?x41096) ?x41098) 0.0))))))))))))))))))))))))
(assert
 (let ((?x39644 (* l_0_15_29 l_0_15_29)))
 (let ((?x41119 (- (+ (* l_0_15_1 l_0_15_1) (* 2.0 (* l_0_15_169 l_0_15_169))) (* (* 2.0 l_0_15_197) l_0_15_198))))
 (let ((?x41123 (- (- ?x41119 (* (* 2.0 l_0_15_225) l_0_15_226)) (* (* 2.0 l_0_15_253) l_0_15_254))))
 (= (- ?x41123 ?x39644) 0.0)))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39728 (* ?x39727 l_0_15_30)))
 (let ((?x41154 (* l_0_15_255 l_0_15_255)))
 (let ((?x41152 (* l_0_15_254 l_0_15_254)))
 (let ((?x41150 (* l_0_15_227 l_0_15_227)))
 (let ((?x41148 (* l_0_15_226 l_0_15_226)))
 (let ((?x41146 (* l_0_15_199 l_0_15_199)))
 (let ((?x41144 (* l_0_15_198 l_0_15_198)))
 (let ((?x41143 (+ (* (* 2.0 l_0_15_1) l_0_15_2) (* (* 4.0 l_0_15_169) l_0_15_170))))
 (let ((?x41156 (- (- (- (- (- (- (- ?x41143 ?x41144) ?x41146) ?x41148) ?x41150) ?x41152) ?x41154) ?x39728)))
 (= ?x41156 0.0))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x41200 (* ?x39968 l_0_15_86)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x41198 (* ?x39965 l_0_15_58)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39861 (* ?x39727 l_0_15_32)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39707 (* ?x39706 l_0_15_142)))
 (let ((?x41172 (- (* (* 2.0 l_0_15_1) l_0_15_4) (* (* 2.0 l_0_15_113) l_0_15_114))))
 (let ((?x41178 (+ (- (- ?x41172 ?x39707) (* (* 2.0 l_0_15_169) l_0_15_170)) (* (* 4.0 l_0_15_169) l_0_15_172))))
 (let ((?x41184 (- (- ?x41178 (* (* 2.0 l_0_15_198) l_0_15_200)) (* (* 2.0 l_0_15_199) l_0_15_201))))
 (let ((?x41190 (- (- ?x41184 (* (* 2.0 l_0_15_226) l_0_15_228)) (* (* 2.0 l_0_15_227) l_0_15_229))))
 (let ((?x41196 (- (- ?x41190 (* (* 2.0 l_0_15_254) l_0_15_256)) (* (* 2.0 l_0_15_255) l_0_15_257))))
 (= (+ (- (- ?x41196 ?x39861) ?x41198) ?x41200) 0.0)))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x41200 (* ?x39968 l_0_15_86)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x41198 (* ?x39965 l_0_15_58)))
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39936 (* ?x39727 l_0_15_35)))
 (let ((?x41225 (+ (* (* 2.0 l_0_15_1) l_0_15_7) (* (* 4.0 l_0_15_169) l_0_15_175))))
 (let ((?x41229 (- (- ?x41225 (* (* 2.0 l_0_15_198) l_0_15_203)) (* (* 2.0 l_0_15_199) l_0_15_204))))
 (let ((?x41233 (- (- ?x41229 (* (* 2.0 l_0_15_226) l_0_15_231)) (* (* 2.0 l_0_15_227) l_0_15_232))))
 (let ((?x41237 (- (- ?x41233 (* (* 2.0 l_0_15_254) l_0_15_259)) (* (* 2.0 l_0_15_255) l_0_15_260))))
 (= (- (+ (- ?x41237 ?x39936) ?x41198) ?x41200) 0.0))))))))))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39949 (* ?x39727 l_0_15_39)))
 (let ((?x41271 (+ (* (* 2.0 l_0_15_1) l_0_15_11) (* (* 4.0 l_0_15_169) l_0_15_179))))
 (let ((?x41275 (- (- ?x41271 (* (* 2.0 l_0_15_198) l_0_15_207)) (* (* 2.0 l_0_15_199) l_0_15_208))))
 (let ((?x41279 (- (- ?x41275 (* (* 2.0 l_0_15_226) l_0_15_235)) (* (* 2.0 l_0_15_227) l_0_15_236))))
 (let ((?x41283 (- (- ?x41279 (* (* 2.0 l_0_15_254) l_0_15_263)) (* (* 2.0 l_0_15_255) l_0_15_264))))
 (= (- ?x41283 ?x39949) 0.0))))))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39958 (* ?x39727 l_0_15_44)))
 (let ((?x29872 (+ (* (* 2.0 l_0_15_1) l_0_15_16) (* (* 4.0 l_0_15_169) l_0_15_184))))
 (let ((?x29887 (- (- ?x29872 (* (* 2.0 l_0_15_198) l_0_15_212)) (* (* 2.0 l_0_15_199) l_0_15_213))))
 (let ((?x41313 (- (- ?x29887 (* (* 2.0 l_0_15_226) l_0_15_240)) (* (* 2.0 l_0_15_227) l_0_15_241))))
 (let ((?x41317 (- (- ?x41313 (* (* 2.0 l_0_15_254) l_0_15_268)) (* (* 2.0 l_0_15_255) l_0_15_269))))
 (= (- ?x41317 ?x39958) 0.0))))))))
(assert
 (let ((?x39727 (* 2.0 l_0_15_29)))
 (let ((?x39989 (* ?x39727 l_0_15_50)))
 (let ((?x41341 (+ (* (* 2.0 l_0_15_1) l_0_15_22) (* (* 4.0 l_0_15_169) l_0_15_190))))
 (let ((?x41345 (- (- ?x41341 (* (* 2.0 l_0_15_198) l_0_15_218)) (* (* 2.0 l_0_15_199) l_0_15_219))))
 (let ((?x41349 (- (- ?x41345 (* (* 2.0 l_0_15_226) l_0_15_246)) (* (* 2.0 l_0_15_227) l_0_15_247))))
 (let ((?x41353 (- (- ?x41349 (* (* 2.0 l_0_15_254) l_0_15_274)) (* (* 2.0 l_0_15_255) l_0_15_275))))
 (= (- ?x41353 ?x39989) 0.0))))))))
(assert
 (let ((?x40009 (* l_0_15_31 l_0_15_31)))
 (let ((?x40007 (* l_0_15_30 l_0_15_30)))
 (let ((?x40005 (* l_0_15_3 l_0_15_3)))
 (let ((?x39998 (* l_0_15_2 l_0_15_2)))
 (let ((?x41378 (* l_0_15_171 l_0_15_171)))
 (let ((?x41379 (* 2.0 ?x41378)))
 (let ((?x41376 (* l_0_15_170 l_0_15_170)))
 (let ((?x41377 (* 2.0 ?x41376)))
 (= (- (- (+ (+ (+ ?x41377 ?x41379) ?x39998) ?x40005) ?x40007) ?x40009) 0.0))))))))))
(assert
 (let ((?x41414 (* l_0_15_87 l_0_15_87)))
 (let ((?x41412 (* l_0_15_86 l_0_15_86)))
 (let ((?x41410 (* l_0_15_59 l_0_15_59)))
 (let ((?x41408 (* l_0_15_58 l_0_15_58)))
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40032 (* ?x40031 l_0_15_33)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40029 (* ?x40028 l_0_15_32)))
 (let ((?x40025 (* 2.0 l_0_15_3)))
 (let ((?x40026 (* ?x40025 l_0_15_5)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x40023 (* ?x40022 l_0_15_4)))
 (let ((?x41378 (* l_0_15_171 l_0_15_171)))
 (let ((?x41376 (* l_0_15_170 l_0_15_170)))
 (let ((?x39995 (* l_0_15_143 l_0_15_143)))
 (let ((?x39993 (* l_0_15_142 l_0_15_142)))
 (let ((?x41394 (- (- (* (- l_0_15_114) l_0_15_114) (* l_0_15_115 l_0_15_115)) ?x39993)))
 (let ((?x41402 (+ (- (+ (- ?x41394 ?x39995) (* (* 4.0 l_0_15_170) l_0_15_172)) ?x41376) (* (* 4.0 l_0_15_171) l_0_15_173))))
 (let ((?x41411 (- (- (- (- (+ (+ (- ?x41402 ?x41378) ?x40023) ?x40026) ?x40029) ?x40032) ?x41408) ?x41410)))
 (= (+ (+ ?x41411 ?x41412) ?x41414) 0.0)))))))))))))))))))))
(assert
 (let ((?x41414 (* l_0_15_87 l_0_15_87)))
 (let ((?x41412 (* l_0_15_86 l_0_15_86)))
 (let ((?x41410 (* l_0_15_59 l_0_15_59)))
 (let ((?x41408 (* l_0_15_58 l_0_15_58)))
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40049 (* ?x40031 l_0_15_36)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x19590 (* ?x40028 l_0_15_35)))
 (let ((?x40025 (* 2.0 l_0_15_3)))
 (let ((?x19587 (* ?x40025 l_0_15_8)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x19500 (* ?x40022 l_0_15_7)))
 (let ((?x41447 (+ (* (* 4.0 l_0_15_170) l_0_15_175) (* (* 4.0 l_0_15_171) l_0_15_176))))
 (let ((?x41454 (- (+ (+ (- (- (+ (+ ?x41447 ?x19500) ?x19587) ?x19590) ?x40049) ?x41408) ?x41410) ?x41412)))
 (= (- ?x41454 ?x41414) 0.0))))))))))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40076 (* ?x40031 l_0_15_40)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40074 (* ?x40028 l_0_15_39)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x40068 (* ?x39697 l_0_15_3)))
 (let ((?x41470 (+ (+ (* (* 2.0 l_0_15_11) l_0_15_2) ?x40068) (* (* 4.0 l_0_15_170) l_0_15_179))))
 (= (- (- (+ ?x41470 (* (* 4.0 l_0_15_171) l_0_15_180)) ?x40074) ?x40076) 0.0)))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40105 (* ?x40031 l_0_15_45)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40103 (* ?x40028 l_0_15_44)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40101 (* ?x40100 l_0_15_3)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40098 (* ?x40097 l_0_15_2)))
 (let ((?x41489 (+ (+ (+ ?x40098 ?x40101) (* (* 4.0 l_0_15_170) l_0_15_184)) (* (* 4.0 l_0_15_171) l_0_15_185))))
 (= (- (- ?x41489 ?x40103) ?x40105) 0.0)))))))))))
(assert
 (let ((?x40031 (* 2.0 l_0_15_31)))
 (let ((?x40164 (* ?x40031 l_0_15_51)))
 (let ((?x40028 (* 2.0 l_0_15_30)))
 (let ((?x40162 (* ?x40028 l_0_15_50)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40160 (* ?x40159 l_0_15_3)))
 (let ((?x40022 (* 2.0 l_0_15_2)))
 (let ((?x40157 (* ?x40022 l_0_15_22)))
 (let ((?x41506 (+ (* (* 4.0 l_0_15_170) l_0_15_190) (* (* 4.0 l_0_15_171) l_0_15_191))))
 (= (- (- (+ (+ ?x41506 ?x40157) ?x40160) ?x40162) ?x40164) 0.0)))))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x41554 (* ?x40116 l_0_15_89)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x41552 (* ?x40113 l_0_15_88)))
 (let ((?x40201 (* l_0_15_6 l_0_15_6)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41549 (* ?x40110 l_0_15_61)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41547 (* ?x40107 l_0_15_60)))
 (let ((?x40199 (* l_0_15_5 l_0_15_5)))
 (let ((?x40197 (* l_0_15_4 l_0_15_4)))
 (let ((?x40195 (* l_0_15_34 l_0_15_34)))
 (let ((?x40193 (* l_0_15_33 l_0_15_33)))
 (let ((?x40191 (* l_0_15_32 l_0_15_32)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40020 (* ?x40019 l_0_15_145)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40018 (* ?x40017 l_0_15_144)))
 (let ((?x41524 (- (* (* (- 2.0) l_0_15_114) l_0_15_116) (* (* 2.0 l_0_15_115) l_0_15_117))))
 (let ((?x41532 (- (- (- (- ?x41524 ?x40018) ?x40020) (* (* 2.0 l_0_15_170) l_0_15_172)) (* (* 2.0 l_0_15_171) l_0_15_173))))
 (let ((?x41538 (+ (+ ?x41532 (* 2.0 (* l_0_15_172 l_0_15_172))) (* 2.0 (* l_0_15_173 l_0_15_173)))))
 (let ((?x41544 (- (- (- (+ ?x41538 (* 2.0 (* l_0_15_174 l_0_15_174))) ?x40191) ?x40193) ?x40195)))
 (let ((?x41555 (+ (+ (+ (- (- (+ (+ ?x41544 ?x40197) ?x40199) ?x41547) ?x41549) ?x40201) ?x41552) ?x41554)))
 (= ?x41555 0.0)))))))))))))))))))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x41596 (* ?x40116 l_0_15_92)))
 (let ((?x41554 (* ?x40116 l_0_15_89)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x41593 (* ?x40113 l_0_15_91)))
 (let ((?x41552 (* ?x40113 l_0_15_88)))
 (let ((?x40236 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41589 (* ?x40110 l_0_15_64)))
 (let ((?x41549 (* ?x40110 l_0_15_61)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41586 (* ?x40107 l_0_15_63)))
 (let ((?x41547 (* ?x40107 l_0_15_60)))
 (let ((?x40233 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x40230 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40227 (* ?x40226 l_0_15_37)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40224 (* ?x40223 l_0_15_36)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40221 (* ?x40220 l_0_15_35)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x30168 (* ?x40019 l_0_15_148)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x19418 (* ?x40017 l_0_15_147)))
 (let ((?x28358 (- (* (* (- 2.0) l_0_15_114) l_0_15_119) (* (* 2.0 l_0_15_115) l_0_15_120))))
 (let ((?x41570 (- (- (- (- ?x28358 ?x19418) ?x30168) (* (* 2.0 l_0_15_170) l_0_15_175)) (* (* 2.0 l_0_15_171) l_0_15_176))))
 (let ((?x41576 (+ (+ ?x41570 (* (* 4.0 l_0_15_172) l_0_15_175)) (* (* 4.0 l_0_15_173) l_0_15_176))))
 (let ((?x41582 (- (- (- (+ ?x41576 (* (* 4.0 l_0_15_174) l_0_15_177)) ?x40221) ?x40224) ?x40227)))
 (let ((?x41591 (+ (- (+ (- (+ (+ (+ ?x41582 ?x40230) ?x40233) ?x41547) ?x41586) ?x41549) ?x41589) ?x40236)))
 (= (+ (- (+ (- ?x41591 ?x41552) ?x41593) ?x41554) ?x41596) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x40117 (* ?x40116 l_0_15_96)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x40114 (* ?x40113 l_0_15_95)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x40111 (* ?x40110 l_0_15_68)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x40108 (* ?x40107 l_0_15_67)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40272 (* ?x40226 l_0_15_41)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40270 (* ?x40223 l_0_15_40)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40268 (* ?x40220 l_0_15_39)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40072 (* ?x40019 l_0_15_152)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40070 (* ?x40017 l_0_15_151)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x19733 (* ?x39700 l_0_15_6)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x30252 (* ?x39697 l_0_15_5)))
 (let ((?x41635 (- (* (* 2.0 l_0_15_11) l_0_15_4) (* (* 2.0 l_0_15_114) l_0_15_123))))
 (let ((?x41640 (- (+ (+ (- ?x41635 (* (* 2.0 l_0_15_115) l_0_15_124)) ?x30252) ?x19733) ?x40070)))
 (let ((?x41645 (- (- (- ?x41640 ?x40072) (* (* 2.0 l_0_15_170) l_0_15_179)) (* (* 2.0 l_0_15_171) l_0_15_180))))
 (let ((?x41649 (+ (+ ?x41645 (* (* 4.0 l_0_15_172) l_0_15_179)) (* (* 4.0 l_0_15_173) l_0_15_180))))
 (let ((?x41654 (- (- (- (+ ?x41649 (* (* 4.0 l_0_15_174) l_0_15_181)) ?x40268) ?x40270) ?x40272)))
 (= (+ (+ (- (- ?x41654 ?x40108) ?x40111) ?x40114) ?x40117) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41695 (* ?x40110 l_0_15_73)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41693 (* ?x40107 l_0_15_72)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40310 (* ?x40226 l_0_15_46)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40308 (* ?x40223 l_0_15_45)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40306 (* ?x40220 l_0_15_44)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40304 (* ?x40303 l_0_15_6)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40301 (* ?x40100 l_0_15_5)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40299 (* ?x40097 l_0_15_4)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40095 (* ?x40019 l_0_15_157)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40094 (* ?x40017 l_0_15_156)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x3389 (* ?x40826 l_0_15_87)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x30842 (* ?x20086 l_0_15_86)))
 (let ((?x30767 (+ ?x30842 ?x3389)))
 (let ((?x3451 (- (- ?x30767 (* (* 2.0 l_0_15_114) l_0_15_128)) (* (* 2.0 l_0_15_115) l_0_15_129))))
 (let ((?x3557 (- (+ (+ (- (- ?x3451 ?x40094) ?x40095) ?x40299) ?x40301) (* (* 2.0 l_0_15_170) l_0_15_184))))
 (let ((?x41684 (+ (- ?x3557 (* (* 2.0 l_0_15_171) l_0_15_185)) (* (* 4.0 l_0_15_172) l_0_15_184))))
 (let ((?x41688 (+ (+ ?x41684 (* (* 4.0 l_0_15_173) l_0_15_185)) (* (* 4.0 l_0_15_174) l_0_15_186))))
 (= (- (- (- (- (- (+ ?x41688 ?x40304) ?x40306) ?x40308) ?x40310) ?x41693) ?x41695) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41753 (* ?x40110 l_0_15_79)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41751 (* ?x40107 l_0_15_78)))
 (let ((?x40226 (* 2.0 l_0_15_34)))
 (let ((?x40397 (* ?x40226 l_0_15_52)))
 (let ((?x40223 (* 2.0 l_0_15_33)))
 (let ((?x40395 (* ?x40223 l_0_15_51)))
 (let ((?x40220 (* 2.0 l_0_15_32)))
 (let ((?x40393 (* ?x40220 l_0_15_50)))
 (let ((?x40390 (* 2.0 l_0_15_24)))
 (let ((?x40391 (* ?x40390 l_0_15_6)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40388 (* ?x40159 l_0_15_5)))
 (let ((?x40385 (* 2.0 l_0_15_22)))
 (let ((?x40386 (* ?x40385 l_0_15_4)))
 (let ((?x40019 (* 2.0 l_0_15_143)))
 (let ((?x40155 (* ?x40019 l_0_15_163)))
 (let ((?x40017 (* 2.0 l_0_15_142)))
 (let ((?x40154 (* ?x40017 l_0_15_162)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x41727 (* ?x39802 l_0_15_87)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x41726 (* ?x39799 l_0_15_86)))
 (let ((?x41728 (+ ?x41726 ?x41727)))
 (let ((?x41732 (- (- ?x41728 (* (* 2.0 l_0_15_114) l_0_15_134)) (* (* 2.0 l_0_15_115) l_0_15_135))))
 (let ((?x41738 (- (- (- (- ?x41732 ?x40154) ?x40155) (* (* 2.0 l_0_15_170) l_0_15_190)) (* (* 2.0 l_0_15_171) l_0_15_191))))
 (let ((?x41742 (+ (+ ?x41738 (* (* 4.0 l_0_15_172) l_0_15_190)) (* (* 4.0 l_0_15_173) l_0_15_191))))
 (let ((?x41747 (+ (+ (+ (+ ?x41742 (* (* 4.0 l_0_15_174) l_0_15_192)) ?x40386) ?x40388) ?x40391)))
 (= (- (- (- (- (- ?x41747 ?x40393) ?x40395) ?x40397) ?x41751) ?x41753) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40449 (* l_0_15_9 l_0_15_9)))
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x41596 (* ?x40116 l_0_15_92)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x41593 (* ?x40113 l_0_15_91)))
 (let ((?x40447 (* l_0_15_8 l_0_15_8)))
 (let ((?x40445 (* l_0_15_7 l_0_15_7)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41589 (* ?x40110 l_0_15_64)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41586 (* ?x40107 l_0_15_63)))
 (let ((?x40443 (* l_0_15_38 l_0_15_38)))
 (let ((?x40441 (* l_0_15_37 l_0_15_37)))
 (let ((?x40439 (* l_0_15_36 l_0_15_36)))
 (let ((?x40437 (* l_0_15_35 l_0_15_35)))
 (let ((?x40453 (* l_0_15_10 l_0_15_10)))
 (let ((?x41783 (+ (+ ?x40453 (* 2.0 (* l_0_15_175 l_0_15_175))) (* 2.0 (* l_0_15_176 l_0_15_176)))))
 (let ((?x41789 (+ (+ ?x41783 (* 2.0 (* l_0_15_177 l_0_15_177))) (* 2.0 (* l_0_15_178 l_0_15_178)))))
 (let ((?x41796 (+ (+ (+ (- (- (- (- ?x41789 ?x40437) ?x40439) ?x40441) ?x40443) ?x41586) ?x41589) ?x40445)))
 (= (+ (- (- (+ ?x41796 ?x40447) ?x41593) ?x41596) ?x40449) 0.0)))))))))))))))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x40117 (* ?x40116 l_0_15_96)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x40114 (* ?x40113 l_0_15_95)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x40111 (* ?x40110 l_0_15_68)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x40108 (* ?x40107 l_0_15_67)))
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40477 (* ?x40476 l_0_15_42)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40474 (* ?x40473 l_0_15_41)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40471 (* ?x40470 l_0_15_40)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40468 (* ?x40467 l_0_15_39)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x18351 (* ?x39700 l_0_15_9)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x30295 (* ?x39697 l_0_15_8)))
 (let ((?x39694 (* 2.0 l_0_15_11)))
 (let ((?x30291 (* ?x39694 l_0_15_7)))
 (let ((?x41807 (+ (+ (+ (+ (* (* 2.0 l_0_15_10) l_0_15_14) ?x30291) ?x30295) ?x18351) (* (* 4.0 l_0_15_175) l_0_15_179))))
 (let ((?x41813 (+ (+ ?x41807 (* (* 4.0 l_0_15_176) l_0_15_180)) (* (* 4.0 l_0_15_177) l_0_15_181))))
 (let ((?x41819 (- (- (- (+ ?x41813 (* (* 4.0 l_0_15_178) l_0_15_182)) ?x40468) ?x40471) ?x40474)))
 (= (- (- (+ (+ (- ?x41819 ?x40477) ?x40108) ?x40111) ?x40114) ?x40117) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41695 (* ?x40110 l_0_15_73)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41693 (* ?x40107 l_0_15_72)))
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40531 (* ?x40476 l_0_15_47)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40529 (* ?x40473 l_0_15_46)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40527 (* ?x40470 l_0_15_45)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40525 (* ?x40467 l_0_15_44)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40523 (* ?x40303 l_0_15_9)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40521 (* ?x40100 l_0_15_8)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40519 (* ?x40097 l_0_15_7)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x3389 (* ?x40826 l_0_15_87)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x30842 (* ?x20086 l_0_15_86)))
 (let ((?x41842 (+ (+ (- (- (* (* 2.0 l_0_15_10) l_0_15_19) ?x30842) ?x3389) ?x40519) ?x40521)))
 (let ((?x41846 (+ (+ ?x41842 (* (* 4.0 l_0_15_175) l_0_15_184)) (* (* 4.0 l_0_15_176) l_0_15_185))))
 (let ((?x41850 (+ (+ ?x41846 (* (* 4.0 l_0_15_177) l_0_15_186)) (* (* 4.0 l_0_15_178) l_0_15_187))))
 (let ((?x41857 (+ (+ (- (- (- (- (+ ?x41850 ?x40523) ?x40525) ?x40527) ?x40529) ?x40531) ?x41693) ?x41695)))
 (= ?x41857 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41753 (* ?x40110 l_0_15_79)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41751 (* ?x40107 l_0_15_78)))
 (let ((?x40476 (* 2.0 l_0_15_38)))
 (let ((?x40627 (* ?x40476 l_0_15_53)))
 (let ((?x40473 (* 2.0 l_0_15_37)))
 (let ((?x40625 (* ?x40473 l_0_15_52)))
 (let ((?x40470 (* 2.0 l_0_15_36)))
 (let ((?x40623 (* ?x40470 l_0_15_51)))
 (let ((?x40467 (* 2.0 l_0_15_35)))
 (let ((?x40621 (* ?x40467 l_0_15_50)))
 (let ((?x40390 (* 2.0 l_0_15_24)))
 (let ((?x40619 (* ?x40390 l_0_15_9)))
 (let ((?x40159 (* 2.0 l_0_15_23)))
 (let ((?x40617 (* ?x40159 l_0_15_8)))
 (let ((?x40385 (* 2.0 l_0_15_22)))
 (let ((?x40615 (* ?x40385 l_0_15_7)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x41727 (* ?x39802 l_0_15_87)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x41726 (* ?x39799 l_0_15_86)))
 (let ((?x21072 (+ (- (- (* (* 2.0 l_0_15_10) l_0_15_25) ?x41726) ?x41727) (* (* 4.0 l_0_15_175) l_0_15_190))))
 (let ((?x4218 (+ (+ ?x21072 (* (* 4.0 l_0_15_176) l_0_15_191)) (* (* 4.0 l_0_15_177) l_0_15_192))))
 (let ((?x41862 (+ (+ (+ (+ ?x4218 (* (* 4.0 l_0_15_178) l_0_15_193)) ?x40615) ?x40617) ?x40619)))
 (= (+ (+ (- (- (- (- ?x41862 ?x40621) ?x40623) ?x40625) ?x40627) ?x41751) ?x41753) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x40685 (* l_0_15_43 l_0_15_43)))
 (let ((?x40683 (* l_0_15_42 l_0_15_42)))
 (let ((?x40681 (* l_0_15_41 l_0_15_41)))
 (let ((?x40679 (* l_0_15_40 l_0_15_40)))
 (let ((?x40677 (* l_0_15_39 l_0_15_39)))
 (let ((?x41901 (* l_0_15_183 l_0_15_183)))
 (let ((?x41902 (* 2.0 ?x41901)))
 (let ((?x41898 (* l_0_15_182 l_0_15_182)))
 (let ((?x41899 (* 2.0 ?x41898)))
 (let ((?x41895 (* l_0_15_181 l_0_15_181)))
 (let ((?x41896 (* 2.0 ?x41895)))
 (let ((?x41892 (* l_0_15_180 l_0_15_180)))
 (let ((?x41893 (* 2.0 ?x41892)))
 (let ((?x41889 (* l_0_15_179 l_0_15_179)))
 (let ((?x41890 (* 2.0 ?x41889)))
 (let ((?x40665 (* l_0_15_15 l_0_15_15)))
 (let ((?x40663 (* l_0_15_14 l_0_15_14)))
 (let ((?x40661 (* l_0_15_13 l_0_15_13)))
 (let ((?x41887 (+ (+ (+ (* l_0_15_11 l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x40661) ?x40663)))
 (let ((?x41904 (- (+ (+ (+ (+ (+ (+ ?x41887 ?x40665) ?x41890) ?x41893) ?x41896) ?x41899) ?x41902) ?x40677)))
 (= (- (- (- (- ?x41904 ?x40679) ?x40681) ?x40683) ?x40685) 0.0))))))))))))))))))))))
(assert
 (let ((?x39742 (* 2.0 l_0_15_43)))
 (let ((?x40740 (* ?x39742 l_0_15_48)))
 (let ((?x39739 (* 2.0 l_0_15_42)))
 (let ((?x40738 (* ?x39739 l_0_15_47)))
 (let ((?x39736 (* 2.0 l_0_15_41)))
 (let ((?x40736 (* ?x39736 l_0_15_46)))
 (let ((?x39733 (* 2.0 l_0_15_40)))
 (let ((?x40734 (* ?x39733 l_0_15_45)))
 (let ((?x39730 (* 2.0 l_0_15_39)))
 (let ((?x40732 (* ?x39730 l_0_15_44)))
 (let ((?x39709 (* 2.0 l_0_15_15)))
 (let ((?x40720 (* ?x39709 l_0_15_20)))
 (let ((?x39703 (* 2.0 l_0_15_14)))
 (let ((?x40718 (* ?x39703 l_0_15_19)))
 (let ((?x39700 (* 2.0 l_0_15_13)))
 (let ((?x40716 (* ?x39700 l_0_15_18)))
 (let ((?x39697 (* 2.0 l_0_15_12)))
 (let ((?x40714 (* ?x39697 l_0_15_17)))
 (let ((?x31136 (+ (+ (+ (+ (* (* 2.0 l_0_15_11) l_0_15_16) ?x40714) ?x40716) ?x40718) ?x40720)))
 (let ((?x41911 (+ (+ ?x31136 (* (* 4.0 l_0_15_179) l_0_15_184)) (* (* 4.0 l_0_15_180) l_0_15_185))))
 (let ((?x41915 (+ (+ ?x41911 (* (* 4.0 l_0_15_181) l_0_15_186)) (* (* 4.0 l_0_15_182) l_0_15_187))))
 (let ((?x41920 (- (- (- (+ ?x41915 (* (* 4.0 l_0_15_183) l_0_15_188)) ?x40732) ?x40734) ?x40736)))
 (= (- (- ?x41920 ?x40738) ?x40740) 0.0))))))))))))))))))))))))
(assert
 (let ((?x40872 (* l_0_15_49 l_0_15_49)))
 (let ((?x40870 (* l_0_15_48 l_0_15_48)))
 (let ((?x40868 (* l_0_15_47 l_0_15_47)))
 (let ((?x40866 (* l_0_15_46 l_0_15_46)))
 (let ((?x40864 (* l_0_15_45 l_0_15_45)))
 (let ((?x40862 (* l_0_15_44 l_0_15_44)))
 (let ((?x40860 (* l_0_15_21 l_0_15_21)))
 (let ((?x40858 (* l_0_15_20 l_0_15_20)))
 (let ((?x40856 (* l_0_15_19 l_0_15_19)))
 (let ((?x41937 (* l_0_15_189 l_0_15_189)))
 (let ((?x41938 (* 2.0 ?x41937)))
 (let ((?x41934 (* l_0_15_188 l_0_15_188)))
 (let ((?x41935 (* 2.0 ?x41934)))
 (let ((?x41931 (* l_0_15_187 l_0_15_187)))
 (let ((?x41932 (* 2.0 ?x41931)))
 (let ((?x41928 (* l_0_15_186 l_0_15_186)))
 (let ((?x41929 (* 2.0 ?x41928)))
 (let ((?x31189 (* l_0_15_185 l_0_15_185)))
 (let ((?x41926 (* 2.0 ?x31189)))
 (let ((?x31211 (* l_0_15_184 l_0_15_184)))
 (let ((?x31190 (* 2.0 ?x31211)))
 (let ((?x40854 (* l_0_15_18 l_0_15_18)))
 (let ((?x31187 (+ (+ (+ (* l_0_15_16 l_0_15_16) (* l_0_15_17 l_0_15_17)) ?x40854) ?x31190)))
 (let ((?x41941 (+ (+ (+ (+ (+ (+ (+ ?x31187 ?x41926) ?x41929) ?x41932) ?x41935) ?x41938) ?x40856) ?x40858)))
 (let ((?x41948 (- (- (- (- (- (- (+ ?x41941 ?x40860) ?x40862) ?x40864) ?x40866) ?x40868) ?x40870) ?x40872)))
 (= ?x41948 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x41200 (* ?x39968 l_0_15_86)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x41198 (* ?x39965 l_0_15_58)))
 (let ((?x40984 (* (* 2.0 l_0_15_49) l_0_15_55)))
 (let ((?x40981 (* (* 2.0 l_0_15_48) l_0_15_54)))
 (let ((?x40978 (* (* 2.0 l_0_15_47) l_0_15_53)))
 (let ((?x40975 (* (* 2.0 l_0_15_46) l_0_15_52)))
 (let ((?x40972 (* (* 2.0 l_0_15_45) l_0_15_51)))
 (let ((?x40969 (* (* 2.0 l_0_15_44) l_0_15_50)))
 (let ((?x40966 (* (* 2.0 l_0_15_21) l_0_15_27)))
 (let ((?x40963 (* (* 2.0 l_0_15_20) l_0_15_26)))
 (let ((?x40960 (* (* 2.0 l_0_15_19) l_0_15_25)))
 (let ((?x40303 (* 2.0 l_0_15_18)))
 (let ((?x40957 (* ?x40303 l_0_15_24)))
 (let ((?x40100 (* 2.0 l_0_15_17)))
 (let ((?x40955 (* ?x40100 l_0_15_23)))
 (let ((?x40097 (* 2.0 l_0_15_16)))
 (let ((?x40947 (* ?x40097 l_0_15_22)))
 (let ((?x31271 (+ (+ (+ (+ ?x40947 ?x40955) ?x40957) (* (* 4.0 l_0_15_184) l_0_15_190)) (* (* 4.0 l_0_15_185) l_0_15_191))))
 (let ((?x31255 (+ (+ ?x31271 (* (* 4.0 l_0_15_186) l_0_15_192)) (* (* 4.0 l_0_15_187) l_0_15_193))))
 (let ((?x31235 (+ (+ ?x31255 (* (* 4.0 l_0_15_188) l_0_15_194)) (* (* 4.0 l_0_15_189) l_0_15_195))))
 (let ((?x41953 (- (- (- (- (+ (+ (+ ?x31235 ?x40960) ?x40963) ?x40966) ?x40969) ?x40972) ?x40975) ?x40978)))
 (= (+ (- (- (- ?x41953 ?x40981) ?x40984) ?x41198) ?x41200) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x41098 (* l_0_15_56 l_0_15_56)))
 (let ((?x41096 (* l_0_15_55 l_0_15_55)))
 (let ((?x41094 (* l_0_15_54 l_0_15_54)))
 (let ((?x41092 (* l_0_15_53 l_0_15_53)))
 (let ((?x41090 (* l_0_15_52 l_0_15_52)))
 (let ((?x41088 (* l_0_15_51 l_0_15_51)))
 (let ((?x41086 (* l_0_15_50 l_0_15_50)))
 (let ((?x41084 (* l_0_15_28 l_0_15_28)))
 (let ((?x41082 (* l_0_15_27 l_0_15_27)))
 (let ((?x41080 (* l_0_15_26 l_0_15_26)))
 (let ((?x41078 (* l_0_15_25 l_0_15_25)))
 (let ((?x41076 (* l_0_15_24 l_0_15_24)))
 (let ((?x41074 (* l_0_15_23 l_0_15_23)))
 (let ((?x41072 (* l_0_15_22 l_0_15_22)))
 (let ((?x4452 (* l_0_15_196 l_0_15_196)))
 (let ((?x41969 (* 2.0 ?x4452)))
 (let ((?x31305 (* l_0_15_195 l_0_15_195)))
 (let ((?x31307 (* 2.0 ?x31305)))
 (let ((?x31309 (* l_0_15_194 l_0_15_194)))
 (let ((?x4461 (* 2.0 ?x31309)))
 (let ((?x4284 (* l_0_15_193 l_0_15_193)))
 (let ((?x31288 (* 2.0 ?x4284)))
 (let ((?x31303 (* l_0_15_192 l_0_15_192)))
 (let ((?x31306 (* 2.0 ?x31303)))
 (let ((?x21149 (* l_0_15_191 l_0_15_191)))
 (let ((?x31292 (* 2.0 ?x21149)))
 (let ((?x21160 (* l_0_15_190 l_0_15_190)))
 (let ((?x31289 (* 2.0 ?x21160)))
 (let ((?x41971 (+ (+ (+ (+ (+ (+ (+ ?x31289 ?x31292) ?x31306) ?x31288) ?x4461) ?x31307) ?x41969) ?x41072)))
 (let ((?x41978 (- (+ (+ (+ (+ (+ (+ ?x41971 ?x41074) ?x41076) ?x41078) ?x41080) ?x41082) ?x41084) ?x41086)))
 (= (- (- (- (- (- (- ?x41978 ?x41088) ?x41090) ?x41092) ?x41094) ?x41096) ?x41098) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x42068 (* ?x39968 l_0_15_88)))
 (let ((?x42066 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42063 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42060 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42057 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42054 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42051 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x42048 (* ?x39965 l_0_15_60)))
 (let ((?x40953 (* (* 2.0 l_0_15_161) l_0_15_167)))
 (let ((?x40950 (* (* 2.0 l_0_15_160) l_0_15_166)))
 (let ((?x40945 (* (* 2.0 l_0_15_159) l_0_15_165)))
 (let ((?x40942 (* (* 2.0 l_0_15_158) l_0_15_164)))
 (let ((?x40939 (* (* 2.0 l_0_15_157) l_0_15_163)))
 (let ((?x40936 (* (* 2.0 l_0_15_156) l_0_15_162)))
 (let ((?x42004 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x42001 (* ?x40835 l_0_15_110)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x41999 (* ?x40832 l_0_15_109)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x41997 (* ?x40829 l_0_15_108)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x41995 (* ?x40826 l_0_15_107)))
 (let ((?x42002 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_106) ?x41995) ?x41997) ?x41999) ?x42001)))
 (let ((?x42005 (+ ?x42002 ?x42004)))
 (let ((?x42011 (- (- ?x42005 (* (* 2.0 l_0_15_128) l_0_15_134)) (* (* 2.0 l_0_15_129) l_0_15_135))))
 (let ((?x42017 (- (- ?x42011 (* (* 2.0 l_0_15_130) l_0_15_136)) (* (* 2.0 l_0_15_131) l_0_15_137))))
 (let ((?x42023 (- (- ?x42017 (* (* 2.0 l_0_15_132) l_0_15_138)) (* (* 2.0 l_0_15_133) l_0_15_139))))
 (let ((?x42032 (- (- (- (- (- (- (- ?x42023 ?x40936) ?x40939) ?x40942) ?x40945) ?x40950) ?x40953) (* (* 2.0 l_0_15_184) l_0_15_190))))
 (let ((?x42038 (- (- ?x42032 (* (* 2.0 l_0_15_185) l_0_15_191)) (* (* 2.0 l_0_15_186) l_0_15_192))))
 (let ((?x42044 (- (- ?x42038 (* (* 2.0 l_0_15_187) l_0_15_193)) (* (* 2.0 l_0_15_188) l_0_15_194))))
 (let ((?x42055 (- (- (- (- ?x42044 (* (* 2.0 l_0_15_189) l_0_15_195)) ?x42048) ?x42051) ?x42054)))
 (= (+ (- (- (- (- ?x42055 ?x42057) ?x42060) ?x42063) ?x42066) ?x42068) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x4674 (* ?x39968 l_0_15_91)))
 (let ((?x42066 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42063 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42060 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42057 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42054 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42051 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31493 (* ?x39965 l_0_15_63)))
 (let ((?x42004 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x42001 (* ?x40835 l_0_15_110)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x41999 (* ?x40832 l_0_15_109)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x41997 (* ?x40829 l_0_15_108)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x41995 (* ?x40826 l_0_15_107)))
 (let ((?x20692 (- (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_106) ?x41995) ?x41997) ?x41999) ?x42001)))
 (let ((?x31411 (+ (+ (+ (+ (+ (- (- ?x20692 ?x42004) ?x31493) ?x42051) ?x42054) ?x42057) ?x42060) ?x42063)))
 (= (+ (+ ?x31411 ?x42066) ?x4674) 0.0)))))))))))))))))))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31725 (* ?x39965 l_0_15_72)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x31724 (* ?x20086 l_0_15_85)))
 (= (- ?x31724 ?x31725) 0.0))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31348 (* ?x39965 l_0_15_78)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x4478 (* ?x39799 l_0_15_85)))
 (= (- ?x4478 ?x31348) 0.0))))))
(assert
 (let ((?x41414 (* l_0_15_87 l_0_15_87)))
 (let ((?x41412 (* l_0_15_86 l_0_15_86)))
 (let ((?x31369 (+ (- (* (- l_0_15_58) l_0_15_58) (* l_0_15_59 l_0_15_59)) ?x41412)))
 (= (+ ?x31369 ?x41414) 0.0)))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x41554 (* ?x40116 l_0_15_89)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x41552 (* ?x40113 l_0_15_88)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41549 (* ?x40110 l_0_15_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_58) l_0_15_60) ?x41549) ?x41552) ?x41554) 0.0))))))))
(assert
 (let ((?x40116 (* 2.0 l_0_15_87)))
 (let ((?x41596 (* ?x40116 l_0_15_92)))
 (let ((?x40113 (* 2.0 l_0_15_86)))
 (let ((?x41593 (* ?x40113 l_0_15_91)))
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41589 (* ?x40110 l_0_15_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_58) l_0_15_63) ?x41589) ?x41593) ?x41596) 0.0))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41695 (* ?x40110 l_0_15_73)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41693 (* ?x40107 l_0_15_72)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x3389 (* ?x40826 l_0_15_87)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x30842 (* ?x20086 l_0_15_86)))
 (let ((?x30767 (+ ?x30842 ?x3389)))
 (= (- (- ?x30767 ?x41693) ?x41695) 0.0)))))))))))
(assert
 (let ((?x40110 (* 2.0 l_0_15_59)))
 (let ((?x41753 (* ?x40110 l_0_15_79)))
 (let ((?x40107 (* 2.0 l_0_15_58)))
 (let ((?x41751 (* ?x40107 l_0_15_78)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x41727 (* ?x39802 l_0_15_87)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x41726 (* ?x39799 l_0_15_86)))
 (let ((?x41728 (+ ?x41726 ?x41727)))
 (= (- (- ?x41728 ?x41751) ?x41753) 0.0)))))))))))
(assert
 (let ((?x42142 (* l_0_15_90 l_0_15_90)))
 (let ((?x42140 (* l_0_15_89 l_0_15_89)))
 (let ((?x42138 (* l_0_15_88 l_0_15_88)))
 (let ((?x42136 (* l_0_15_62 l_0_15_62)))
 (let ((?x42137 (- (- (* (- l_0_15_60) l_0_15_60) (* l_0_15_61 l_0_15_61)) ?x42136)))
 (= (+ (+ (+ ?x42137 ?x42138) ?x42140) ?x42142) 0.0)))))))
(assert
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x42169 (* ?x40327 l_0_15_93)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x42167 (* ?x40324 l_0_15_92)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x42165 (* ?x40321 l_0_15_91)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42163 (* ?x40318 l_0_15_65)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42161 (* ?x40315 l_0_15_64)))
 (let ((?x42168 (+ (+ (- (- (* (* (- 2.0) l_0_15_60) l_0_15_63) ?x42161) ?x42163) ?x42165) ?x42167)))
 (= (+ ?x42168 ?x42169) 0.0)))))))))))))
(assert
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42194 (* ?x40318 l_0_15_74)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42192 (* ?x40315 l_0_15_73)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42190 (* ?x40312 l_0_15_72)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x42188 (* ?x40829 l_0_15_90)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x42186 (* ?x40826 l_0_15_89)))
 (let ((?x42189 (+ (+ (* (* 2.0 l_0_15_100) l_0_15_88) ?x42186) ?x42188)))
 (= (- (- (- ?x42189 ?x42190) ?x42192) ?x42194) 0.0)))))))))))))
(assert
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42226 (* ?x40318 l_0_15_80)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42224 (* ?x40315 l_0_15_79)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42222 (* ?x40312 l_0_15_78)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x42220 (* ?x39805 l_0_15_90)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x42218 (* ?x39802 l_0_15_89)))
 (let ((?x42221 (+ (+ (* (* 2.0 l_0_15_106) l_0_15_88) ?x42218) ?x42220)))
 (= (- (- (- ?x42221 ?x42222) ?x42224) ?x42226) 0.0)))))))))))))
(assert
 (let ((?x42264 (* l_0_15_94 l_0_15_94)))
 (let ((?x42262 (* l_0_15_93 l_0_15_93)))
 (let ((?x42260 (* l_0_15_92 l_0_15_92)))
 (let ((?x42258 (* l_0_15_91 l_0_15_91)))
 (let ((?x42256 (* l_0_15_66 l_0_15_66)))
 (let ((?x42254 (* l_0_15_65 l_0_15_65)))
 (let ((?x42255 (- (- (* (- l_0_15_63) l_0_15_63) (* l_0_15_64 l_0_15_64)) ?x42254)))
 (= (+ (+ (+ (+ (- ?x42255 ?x42256) ?x42258) ?x42260) ?x42262) ?x42264) 0.0)))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42295 (* ?x40542 l_0_15_75)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42293 (* ?x40539 l_0_15_74)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42291 (* ?x40536 l_0_15_73)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42289 (* ?x40533 l_0_15_72)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x42287 (* ?x40832 l_0_15_94)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x42285 (* ?x40829 l_0_15_93)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x42283 (* ?x40826 l_0_15_92)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x42276 (* ?x20086 l_0_15_91)))
 (let ((?x42296 (- (- (- (- (+ (+ (+ ?x42276 ?x42283) ?x42285) ?x42287) ?x42289) ?x42291) ?x42293) ?x42295)))
 (= ?x42296 0.0)))))))))))))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42334 (* ?x40542 l_0_15_81)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42332 (* ?x40539 l_0_15_80)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42330 (* ?x40536 l_0_15_79)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42328 (* ?x40533 l_0_15_78)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x42326 (* ?x39808 l_0_15_94)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x42324 (* ?x39805 l_0_15_93)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x42322 (* ?x39802 l_0_15_92)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x42321 (* ?x39799 l_0_15_91)))
 (let ((?x42335 (- (- (- (- (+ (+ (+ ?x42321 ?x42322) ?x42324) ?x42326) ?x42328) ?x42330) ?x42332) ?x42334)))
 (= ?x42335 0.0)))))))))))))))))))
(assert
 (let ((?x42389 (* l_0_15_77 l_0_15_77)))
 (let ((?x42387 (* l_0_15_76 l_0_15_76)))
 (let ((?x42385 (* l_0_15_75 l_0_15_75)))
 (let ((?x42383 (* l_0_15_74 l_0_15_74)))
 (let ((?x42381 (* l_0_15_73 l_0_15_73)))
 (let ((?x42379 (* l_0_15_72 l_0_15_72)))
 (let ((?x42377 (* l_0_15_105 l_0_15_105)))
 (let ((?x42375 (* l_0_15_104 l_0_15_104)))
 (let ((?x42373 (* l_0_15_103 l_0_15_103)))
 (let ((?x42371 (* l_0_15_102 l_0_15_102)))
 (let ((?x42372 (+ (+ (* l_0_15_100 l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x42371)))
 (let ((?x42378 (+ (+ (+ ?x42372 ?x42373) ?x42375) ?x42377)))
 (= (- (- (- (- (- (- ?x42378 ?x42379) ?x42381) ?x42383) ?x42385) ?x42387) ?x42389) 0.0))))))))))))))
(assert
 (let ((?x42066 (* (* 2.0 l_0_15_77) l_0_15_83)))
 (let ((?x42063 (* (* 2.0 l_0_15_76) l_0_15_82)))
 (let ((?x42060 (* (* 2.0 l_0_15_75) l_0_15_81)))
 (let ((?x42057 (* (* 2.0 l_0_15_74) l_0_15_80)))
 (let ((?x42054 (* (* 2.0 l_0_15_73) l_0_15_79)))
 (let ((?x42051 (* (* 2.0 l_0_15_72) l_0_15_78)))
 (let ((?x42004 (* (* 2.0 l_0_15_105) l_0_15_111)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x42001 (* ?x40835 l_0_15_110)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x41999 (* ?x40832 l_0_15_109)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x41997 (* ?x40829 l_0_15_108)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x41995 (* ?x40826 l_0_15_107)))
 (let ((?x42002 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_106) ?x41995) ?x41997) ?x41999) ?x42001)))
 (let ((?x42005 (+ ?x42002 ?x42004)))
 (= (- (- (- (- (- (- ?x42005 ?x42051) ?x42054) ?x42057) ?x42060) ?x42063) ?x42066) 0.0)))))))))))))))))))
(assert
 (let ((?x42431 (* l_0_15_84 l_0_15_84)))
 (let ((?x42429 (* l_0_15_83 l_0_15_83)))
 (let ((?x42427 (* l_0_15_82 l_0_15_82)))
 (let ((?x42425 (* l_0_15_81 l_0_15_81)))
 (let ((?x42423 (* l_0_15_80 l_0_15_80)))
 (let ((?x42421 (* l_0_15_79 l_0_15_79)))
 (let ((?x42419 (* l_0_15_78 l_0_15_78)))
 (let ((?x42417 (* l_0_15_112 l_0_15_112)))
 (let ((?x42415 (* l_0_15_111 l_0_15_111)))
 (let ((?x42413 (* l_0_15_110 l_0_15_110)))
 (let ((?x42411 (* l_0_15_109 l_0_15_109)))
 (let ((?x42409 (* l_0_15_108 l_0_15_108)))
 (let ((?x42410 (+ (+ (* l_0_15_106 l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42409)))
 (let ((?x42418 (+ (+ (+ (+ ?x42410 ?x42411) ?x42413) ?x42415) ?x42417)))
 (let ((?x42432 (- (- (- (- (- (- (- ?x42418 ?x42419) ?x42421) ?x42423) ?x42425) ?x42427) ?x42429) ?x42431)))
 (= ?x42432 0.0)))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x42068 (* ?x39968 l_0_15_88)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x42048 (* ?x39965 l_0_15_60)))
 (let ((?x42467 (* l_0_15_258 l_0_15_258)))
 (let ((?x42465 (* l_0_15_257 l_0_15_257)))
 (let ((?x42463 (* l_0_15_256 l_0_15_256)))
 (let ((?x42461 (* l_0_15_230 l_0_15_230)))
 (let ((?x42459 (* l_0_15_229 l_0_15_229)))
 (let ((?x42457 (* l_0_15_228 l_0_15_228)))
 (let ((?x42455 (* l_0_15_202 l_0_15_202)))
 (let ((?x42453 (* l_0_15_201 l_0_15_201)))
 (let ((?x42451 (* l_0_15_200 l_0_15_200)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39829 (* ?x39706 l_0_15_144)))
 (let ((?x42450 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_116) ?x39829) (* (* 2.0 l_0_15_169) l_0_15_172))))
 (let ((?x42464 (- (- (- (- (- (- (- ?x42450 ?x42451) ?x42453) ?x42455) ?x42457) ?x42459) ?x42461) ?x42463)))
 (= (+ (- (- (- ?x42464 ?x42465) ?x42467) ?x42048) ?x42068) 0.0)))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x4674 (* ?x39968 l_0_15_91)))
 (let ((?x42068 (* ?x39968 l_0_15_88)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31493 (* ?x39965 l_0_15_63)))
 (let ((?x42048 (* ?x39965 l_0_15_60)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39934 (* ?x39706 l_0_15_147)))
 (let ((?x42486 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_119) ?x39934) (* (* 2.0 l_0_15_169) l_0_15_175))))
 (let ((?x42492 (- (- ?x42486 (* (* 2.0 l_0_15_200) l_0_15_203)) (* (* 2.0 l_0_15_201) l_0_15_204))))
 (let ((?x42498 (- (- ?x42492 (* (* 2.0 l_0_15_202) l_0_15_205)) (* (* 2.0 l_0_15_228) l_0_15_231))))
 (let ((?x42504 (- (- ?x42498 (* (* 2.0 l_0_15_229) l_0_15_232)) (* (* 2.0 l_0_15_230) l_0_15_233))))
 (let ((?x42510 (- (- ?x42504 (* (* 2.0 l_0_15_256) l_0_15_259)) (* (* 2.0 l_0_15_257) l_0_15_260))))
 (let ((?x42516 (- (- (+ (- ?x42510 (* (* 2.0 l_0_15_258) l_0_15_261)) ?x42048) ?x31493) ?x42068)))
 (= (+ ?x42516 ?x4674) 0.0))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x39969 (* ?x39968 l_0_15_95)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x39966 (* ?x39965 l_0_15_67)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x30171 (* ?x39706 l_0_15_151)))
 (let ((?x42548 (- (- (* (* (- 2.0) l_0_15_113) l_0_15_123) ?x30171) (* (* 2.0 l_0_15_169) l_0_15_179))))
 (let ((?x42552 (- (- ?x42548 (* (* 2.0 l_0_15_200) l_0_15_207)) (* (* 2.0 l_0_15_201) l_0_15_208))))
 (let ((?x42556 (- (- ?x42552 (* (* 2.0 l_0_15_202) l_0_15_209)) (* (* 2.0 l_0_15_228) l_0_15_235))))
 (let ((?x42560 (- (- ?x42556 (* (* 2.0 l_0_15_229) l_0_15_236)) (* (* 2.0 l_0_15_230) l_0_15_237))))
 (let ((?x42564 (- (- ?x42560 (* (* 2.0 l_0_15_256) l_0_15_263)) (* (* 2.0 l_0_15_257) l_0_15_264))))
 (= (+ (- (- ?x42564 (* (* 2.0 l_0_15_258) l_0_15_265)) ?x39966) ?x39969) 0.0)))))))))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31725 (* ?x39965 l_0_15_72)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39955 (* ?x39706 l_0_15_156)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x31724 (* ?x20086 l_0_15_85)))
 (let ((?x32532 (- (- (- ?x31724 (* (* 2.0 l_0_15_113) l_0_15_128)) ?x39955) (* (* 2.0 l_0_15_169) l_0_15_184))))
 (let ((?x42594 (- (- ?x32532 (* (* 2.0 l_0_15_200) l_0_15_212)) (* (* 2.0 l_0_15_201) l_0_15_213))))
 (let ((?x42598 (- (- ?x42594 (* (* 2.0 l_0_15_202) l_0_15_214)) (* (* 2.0 l_0_15_228) l_0_15_240))))
 (let ((?x42602 (- (- ?x42598 (* (* 2.0 l_0_15_229) l_0_15_241)) (* (* 2.0 l_0_15_230) l_0_15_242))))
 (let ((?x42606 (- (- ?x42602 (* (* 2.0 l_0_15_256) l_0_15_268)) (* (* 2.0 l_0_15_257) l_0_15_269))))
 (= (- (- ?x42606 (* (* 2.0 l_0_15_258) l_0_15_270)) ?x31725) 0.0)))))))))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31348 (* ?x39965 l_0_15_78)))
 (let ((?x39706 (* 2.0 l_0_15_141)))
 (let ((?x39987 (* ?x39706 l_0_15_162)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x4478 (* ?x39799 l_0_15_85)))
 (let ((?x42639 (- (- (- ?x4478 (* (* 2.0 l_0_15_113) l_0_15_134)) ?x39987) (* (* 2.0 l_0_15_169) l_0_15_190))))
 (let ((?x42643 (- (- ?x42639 (* (* 2.0 l_0_15_200) l_0_15_218)) (* (* 2.0 l_0_15_201) l_0_15_219))))
 (let ((?x42647 (- (- ?x42643 (* (* 2.0 l_0_15_202) l_0_15_220)) (* (* 2.0 l_0_15_228) l_0_15_246))))
 (let ((?x42651 (- (- ?x42647 (* (* 2.0 l_0_15_229) l_0_15_247)) (* (* 2.0 l_0_15_230) l_0_15_248))))
 (let ((?x42655 (- (- ?x42651 (* (* 2.0 l_0_15_256) l_0_15_274)) (* (* 2.0 l_0_15_257) l_0_15_275))))
 (= (- (- ?x42655 (* (* 2.0 l_0_15_258) l_0_15_276)) ?x31348) 0.0)))))))))))))
(assert
 (let ((?x42142 (* l_0_15_90 l_0_15_90)))
 (let ((?x42140 (* l_0_15_89 l_0_15_89)))
 (let ((?x42138 (* l_0_15_88 l_0_15_88)))
 (let ((?x42136 (* l_0_15_62 l_0_15_62)))
 (let ((?x42134 (* l_0_15_61 l_0_15_61)))
 (let ((?x42146 (* l_0_15_60 l_0_15_60)))
 (let ((?x41539 (* l_0_15_174 l_0_15_174)))
 (let ((?x41536 (* l_0_15_173 l_0_15_173)))
 (let ((?x41533 (* l_0_15_172 l_0_15_172)))
 (let ((?x40189 (* l_0_15_146 l_0_15_146)))
 (let ((?x40181 (* l_0_15_145 l_0_15_145)))
 (let ((?x30239 (* l_0_15_144 l_0_15_144)))
 (let ((?x5933 (* l_0_15_118 l_0_15_118)))
 (let ((?x22110 (- (- (* (- l_0_15_116) l_0_15_116) (* l_0_15_117 l_0_15_117)) ?x5933)))
 (let ((?x42693 (- (- (- (- (- (- (- ?x22110 ?x30239) ?x40181) ?x40189) ?x41533) ?x41536) ?x41539) ?x42146)))
 (= (+ (+ (+ (- (- ?x42693 ?x42134) ?x42136) ?x42138) ?x42140) ?x42142) 0.0)))))))))))))))))
(assert
 (let ((?x42142 (* l_0_15_90 l_0_15_90)))
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x42169 (* ?x40327 l_0_15_93)))
 (let ((?x42140 (* l_0_15_89 l_0_15_89)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x42167 (* ?x40324 l_0_15_92)))
 (let ((?x42138 (* l_0_15_88 l_0_15_88)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x42165 (* ?x40321 l_0_15_91)))
 (let ((?x42136 (* l_0_15_62 l_0_15_62)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42163 (* ?x40318 l_0_15_65)))
 (let ((?x42134 (* l_0_15_61 l_0_15_61)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42161 (* ?x40315 l_0_15_64)))
 (let ((?x42146 (* l_0_15_60 l_0_15_60)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42712 (* ?x40312 l_0_15_63)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40218 (* ?x40217 l_0_15_149)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40215 (* ?x40214 l_0_15_148)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x40213 (* ?x40212 l_0_15_147)))
 (let ((?x32973 (- (* (* (- 2.0) l_0_15_116) l_0_15_119) (* (* 2.0 l_0_15_117) l_0_15_120))))
 (let ((?x32991 (- (- (- (- ?x32973 (* (* 2.0 l_0_15_118) l_0_15_121)) ?x40213) ?x40215) ?x40218)))
 (let ((?x32974 (- (- ?x32991 (* (* 2.0 l_0_15_172) l_0_15_175)) (* (* 2.0 l_0_15_173) l_0_15_176))))
 (let ((?x42715 (- (+ (- (- ?x32974 (* (* 2.0 l_0_15_174) l_0_15_177)) ?x42712) ?x42146) ?x42161)))
 (let ((?x42722 (- (+ (- (+ (+ (- (+ ?x42715 ?x42134) ?x42163) ?x42136) ?x42165) ?x42138) ?x42167) ?x42140)))
 (= (- (+ ?x42722 ?x42169) ?x42142) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x40328 (* ?x40327 l_0_15_97)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x40325 (* ?x40324 l_0_15_96)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x40322 (* ?x40321 l_0_15_95)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x40319 (* ?x40318 l_0_15_69)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x40316 (* ?x40315 l_0_15_68)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x40313 (* ?x40312 l_0_15_67)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40266 (* ?x40217 l_0_15_153)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40264 (* ?x40214 l_0_15_152)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x19736 (* ?x40212 l_0_15_151)))
 (let ((?x42750 (- (* (* (- 2.0) l_0_15_116) l_0_15_123) (* (* 2.0 l_0_15_117) l_0_15_124))))
 (let ((?x42755 (- (- (- (- ?x42750 (* (* 2.0 l_0_15_118) l_0_15_125)) ?x19736) ?x40264) ?x40266)))
 (let ((?x42759 (- (- ?x42755 (* (* 2.0 l_0_15_172) l_0_15_179)) (* (* 2.0 l_0_15_173) l_0_15_180))))
 (let ((?x42764 (- (- (- (- ?x42759 (* (* 2.0 l_0_15_174) l_0_15_181)) ?x40313) ?x40316) ?x40319)))
 (= (+ (+ (+ ?x42764 ?x40322) ?x40325) ?x40328) 0.0))))))))))))))))))))))))
(assert
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42194 (* ?x40318 l_0_15_74)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42192 (* ?x40315 l_0_15_73)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42190 (* ?x40312 l_0_15_72)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40297 (* ?x40217 l_0_15_158)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40295 (* ?x40214 l_0_15_157)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x40294 (* ?x40212 l_0_15_156)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x42188 (* ?x40829 l_0_15_90)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x42186 (* ?x40826 l_0_15_89)))
 (let ((?x42189 (+ (+ (* (* 2.0 l_0_15_100) l_0_15_88) ?x42186) ?x42188)))
 (let ((?x42775 (- (- ?x42189 (* (* 2.0 l_0_15_116) l_0_15_128)) (* (* 2.0 l_0_15_117) l_0_15_129))))
 (let ((?x42780 (- (- (- (- ?x42775 (* (* 2.0 l_0_15_118) l_0_15_130)) ?x40294) ?x40295) ?x40297)))
 (let ((?x42784 (- (- ?x42780 (* (* 2.0 l_0_15_172) l_0_15_184)) (* (* 2.0 l_0_15_173) l_0_15_185))))
 (let ((?x42789 (- (- (- (- ?x42784 (* (* 2.0 l_0_15_174) l_0_15_186)) ?x42190) ?x42192) ?x42194)))
 (= ?x42789 0.0)))))))))))))))))))))))
(assert
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42226 (* ?x40318 l_0_15_80)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42224 (* ?x40315 l_0_15_79)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42222 (* ?x40312 l_0_15_78)))
 (let ((?x40217 (* 2.0 l_0_15_146)))
 (let ((?x40372 (* ?x40217 l_0_15_164)))
 (let ((?x40214 (* 2.0 l_0_15_145)))
 (let ((?x40369 (* ?x40214 l_0_15_163)))
 (let ((?x40212 (* 2.0 l_0_15_144)))
 (let ((?x30293 (* ?x40212 l_0_15_162)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x42220 (* ?x39805 l_0_15_90)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x42218 (* ?x39802 l_0_15_89)))
 (let ((?x42221 (+ (+ (* (* 2.0 l_0_15_106) l_0_15_88) ?x42218) ?x42220)))
 (let ((?x31988 (- (- ?x42221 (* (* 2.0 l_0_15_116) l_0_15_134)) (* (* 2.0 l_0_15_117) l_0_15_135))))
 (let ((?x22239 (- (- (- (- ?x31988 (* (* 2.0 l_0_15_118) l_0_15_136)) ?x30293) ?x40369) ?x40372)))
 (let ((?x42806 (- (- ?x22239 (* (* 2.0 l_0_15_172) l_0_15_190)) (* (* 2.0 l_0_15_173) l_0_15_191))))
 (let ((?x42811 (- (- (- (- ?x42806 (* (* 2.0 l_0_15_174) l_0_15_192)) ?x42222) ?x42224) ?x42226)))
 (= ?x42811 0.0)))))))))))))))))))))))
(assert
 (let ((?x42264 (* l_0_15_94 l_0_15_94)))
 (let ((?x42262 (* l_0_15_93 l_0_15_93)))
 (let ((?x42260 (* l_0_15_92 l_0_15_92)))
 (let ((?x42258 (* l_0_15_91 l_0_15_91)))
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x42169 (* ?x40327 l_0_15_93)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x42167 (* ?x40324 l_0_15_92)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x42165 (* ?x40321 l_0_15_91)))
 (let ((?x42256 (* l_0_15_66 l_0_15_66)))
 (let ((?x42254 (* l_0_15_65 l_0_15_65)))
 (let ((?x42252 (* l_0_15_64 l_0_15_64)))
 (let ((?x42268 (* l_0_15_63 l_0_15_63)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42163 (* ?x40318 l_0_15_65)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42161 (* ?x40315 l_0_15_64)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42712 (* ?x40312 l_0_15_63)))
 (let ((?x41787 (* l_0_15_178 l_0_15_178)))
 (let ((?x41784 (* l_0_15_177 l_0_15_177)))
 (let ((?x41781 (* l_0_15_176 l_0_15_176)))
 (let ((?x41778 (* l_0_15_175 l_0_15_175)))
 (let ((?x40435 (* l_0_15_150 l_0_15_150)))
 (let ((?x40433 (* l_0_15_149 l_0_15_149)))
 (let ((?x40431 (* l_0_15_148 l_0_15_148)))
 (let ((?x40421 (* l_0_15_147 l_0_15_147)))
 (let ((?x42823 (* l_0_15_122 l_0_15_122)))
 (let ((?x42821 (* l_0_15_121 l_0_15_121)))
 (let ((?x42822 (- (- (* (- l_0_15_119) l_0_15_119) (* l_0_15_120 l_0_15_120)) ?x42821)))
 (let ((?x42830 (- (- (- (- (- (- (- ?x42822 ?x42823) ?x40421) ?x40431) ?x40433) ?x40435) ?x41778) ?x41781)))
 (let ((?x42837 (- (- (+ (+ (+ (- (- ?x42830 ?x41784) ?x41787) ?x42712) ?x42161) ?x42163) ?x42268) ?x42252)))
 (let ((?x42844 (+ (+ (- (- (- (- (- ?x42837 ?x42254) ?x42256) ?x42165) ?x42167) ?x42169) ?x42258) ?x42260)))
 (= (+ (+ ?x42844 ?x42262) ?x42264) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40555 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40552 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40549 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40546 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x40327 (* 2.0 l_0_15_90)))
 (let ((?x40328 (* ?x40327 l_0_15_97)))
 (let ((?x40324 (* 2.0 l_0_15_89)))
 (let ((?x40325 (* ?x40324 l_0_15_96)))
 (let ((?x40321 (* 2.0 l_0_15_88)))
 (let ((?x40322 (* ?x40321 l_0_15_95)))
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x40543 (* ?x40542 l_0_15_70)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x40540 (* ?x40539 l_0_15_69)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x40537 (* ?x40536 l_0_15_68)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x40534 (* ?x40533 l_0_15_67)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x40319 (* ?x40318 l_0_15_69)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x40316 (* ?x40315 l_0_15_68)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x40313 (* ?x40312 l_0_15_67)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40465 (* ?x40464 l_0_15_154)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40462 (* ?x40461 l_0_15_153)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40459 (* ?x19888 l_0_15_152)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x19887 (* ?x30302 l_0_15_151)))
 (let ((?x22284 (- (* (* (- 2.0) l_0_15_119) l_0_15_123) (* (* 2.0 l_0_15_120) l_0_15_124))))
 (let ((?x42864 (- (- ?x22284 (* (* 2.0 l_0_15_121) l_0_15_125)) (* (* 2.0 l_0_15_122) l_0_15_126))))
 (let ((?x42871 (- (- (- (- (- ?x42864 ?x19887) ?x40459) ?x40462) ?x40465) (* (* 2.0 l_0_15_175) l_0_15_179))))
 (let ((?x42877 (- (- ?x42871 (* (* 2.0 l_0_15_176) l_0_15_180)) (* (* 2.0 l_0_15_177) l_0_15_181))))
 (let ((?x42883 (+ (+ (+ (- ?x42877 (* (* 2.0 l_0_15_178) l_0_15_182)) ?x40313) ?x40316) ?x40319)))
 (let ((?x42890 (- (- (- (- (- (- (- ?x42883 ?x40534) ?x40537) ?x40540) ?x40543) ?x40322) ?x40325) ?x40328)))
 (= (+ (+ (+ (+ ?x42890 ?x40546) ?x40549) ?x40552) ?x40555) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42295 (* ?x40542 l_0_15_75)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42293 (* ?x40539 l_0_15_74)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42291 (* ?x40536 l_0_15_73)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42289 (* ?x40533 l_0_15_72)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42194 (* ?x40318 l_0_15_74)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42192 (* ?x40315 l_0_15_73)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42190 (* ?x40312 l_0_15_72)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40506 (* ?x40464 l_0_15_159)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40502 (* ?x40461 l_0_15_158)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40498 (* ?x19888 l_0_15_157)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x30332 (* ?x30302 l_0_15_156)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x42287 (* ?x40832 l_0_15_94)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x42285 (* ?x40829 l_0_15_93)))
 (let ((?x42188 (* ?x40829 l_0_15_90)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x42283 (* ?x40826 l_0_15_92)))
 (let ((?x42186 (* ?x40826 l_0_15_89)))
 (let ((?x20086 (* 2.0 l_0_15_100)))
 (let ((?x42276 (* ?x20086 l_0_15_91)))
 (let ((?x6738 (- (+ (- (+ (* (* (- 2.0) l_0_15_100) l_0_15_88) ?x42276) ?x42186) ?x42283) ?x42188)))
 (let ((?x21846 (- (- (+ (+ ?x6738 ?x42285) ?x42287) (* (* 2.0 l_0_15_119) l_0_15_128)) (* (* 2.0 l_0_15_120) l_0_15_129))))
 (let ((?x42912 (- (- ?x21846 (* (* 2.0 l_0_15_121) l_0_15_130)) (* (* 2.0 l_0_15_122) l_0_15_131))))
 (let ((?x42918 (- (- (- (- (- ?x42912 ?x30332) ?x40498) ?x40502) ?x40506) (* (* 2.0 l_0_15_175) l_0_15_184))))
 (let ((?x42922 (- (- ?x42918 (* (* 2.0 l_0_15_176) l_0_15_185)) (* (* 2.0 l_0_15_177) l_0_15_186))))
 (let ((?x42927 (+ (+ (+ (- ?x42922 (* (* 2.0 l_0_15_178) l_0_15_187)) ?x42190) ?x42192) ?x42194)))
 (= (- (- (- (- ?x42927 ?x42289) ?x42291) ?x42293) ?x42295) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42334 (* ?x40542 l_0_15_81)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42332 (* ?x40539 l_0_15_80)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42330 (* ?x40536 l_0_15_79)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42328 (* ?x40533 l_0_15_78)))
 (let ((?x40318 (* 2.0 l_0_15_62)))
 (let ((?x42226 (* ?x40318 l_0_15_80)))
 (let ((?x40315 (* 2.0 l_0_15_61)))
 (let ((?x42224 (* ?x40315 l_0_15_79)))
 (let ((?x40312 (* 2.0 l_0_15_60)))
 (let ((?x42222 (* ?x40312 l_0_15_78)))
 (let ((?x40464 (* 2.0 l_0_15_150)))
 (let ((?x40613 (* ?x40464 l_0_15_165)))
 (let ((?x40461 (* 2.0 l_0_15_149)))
 (let ((?x40611 (* ?x40461 l_0_15_164)))
 (let ((?x19888 (* 2.0 l_0_15_148)))
 (let ((?x40594 (* ?x19888 l_0_15_163)))
 (let ((?x30302 (* 2.0 l_0_15_147)))
 (let ((?x29756 (* ?x30302 l_0_15_162)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x42326 (* ?x39808 l_0_15_94)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x42324 (* ?x39805 l_0_15_93)))
 (let ((?x42220 (* ?x39805 l_0_15_90)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x42322 (* ?x39802 l_0_15_92)))
 (let ((?x42218 (* ?x39802 l_0_15_89)))
 (let ((?x39799 (* 2.0 l_0_15_106)))
 (let ((?x42321 (* ?x39799 l_0_15_91)))
 (let ((?x42950 (- (+ (- (+ (* (* (- 2.0) l_0_15_106) l_0_15_88) ?x42321) ?x42218) ?x42322) ?x42220)))
 (let ((?x42956 (- (- (+ (+ ?x42950 ?x42324) ?x42326) (* (* 2.0 l_0_15_119) l_0_15_134)) (* (* 2.0 l_0_15_120) l_0_15_135))))
 (let ((?x42960 (- (- ?x42956 (* (* 2.0 l_0_15_121) l_0_15_136)) (* (* 2.0 l_0_15_122) l_0_15_137))))
 (let ((?x42966 (- (- (- (- (- ?x42960 ?x29756) ?x40594) ?x40611) ?x40613) (* (* 2.0 l_0_15_175) l_0_15_190))))
 (let ((?x42970 (- (- ?x42966 (* (* 2.0 l_0_15_176) l_0_15_191)) (* (* 2.0 l_0_15_177) l_0_15_192))))
 (let ((?x42975 (+ (+ (+ (- ?x42970 (* (* 2.0 l_0_15_178) l_0_15_193)) ?x42222) ?x42224) ?x42226)))
 (= (- (- (- (- ?x42975 ?x42328) ?x42330) ?x42332) ?x42334) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x40760 (* l_0_15_99 l_0_15_99)))
 (let ((?x40758 (* l_0_15_98 l_0_15_98)))
 (let ((?x40756 (* l_0_15_97 l_0_15_97)))
 (let ((?x40754 (* l_0_15_96 l_0_15_96)))
 (let ((?x40752 (* l_0_15_95 l_0_15_95)))
 (let ((?x40750 (* l_0_15_71 l_0_15_71)))
 (let ((?x40748 (* l_0_15_70 l_0_15_70)))
 (let ((?x40746 (* l_0_15_69 l_0_15_69)))
 (let ((?x40744 (* l_0_15_68 l_0_15_68)))
 (let ((?x40742 (* l_0_15_67 l_0_15_67)))
 (let ((?x41901 (* l_0_15_183 l_0_15_183)))
 (let ((?x41898 (* l_0_15_182 l_0_15_182)))
 (let ((?x41895 (* l_0_15_181 l_0_15_181)))
 (let ((?x41892 (* l_0_15_180 l_0_15_180)))
 (let ((?x41889 (* l_0_15_179 l_0_15_179)))
 (let ((?x40675 (* l_0_15_155 l_0_15_155)))
 (let ((?x40673 (* l_0_15_154 l_0_15_154)))
 (let ((?x40671 (* l_0_15_153 l_0_15_153)))
 (let ((?x40669 (* l_0_15_152 l_0_15_152)))
 (let ((?x40667 (* l_0_15_151 l_0_15_151)))
 (let ((?x43007 (* l_0_15_127 l_0_15_127)))
 (let ((?x43005 (* l_0_15_126 l_0_15_126)))
 (let ((?x7202 (* l_0_15_125 l_0_15_125)))
 (let ((?x7203 (- (- (* (- l_0_15_123) l_0_15_123) (* l_0_15_124 l_0_15_124)) ?x7202)))
 (let ((?x43013 (- (- (- (- (- (- (- ?x7203 ?x43005) ?x43007) ?x40667) ?x40669) ?x40671) ?x40673) ?x40675)))
 (let ((?x43020 (- (- (- (- (- (- (- ?x43013 ?x41889) ?x41892) ?x41895) ?x41898) ?x41901) ?x40742) ?x40744)))
 (let ((?x43027 (+ (+ (+ (+ (- (- (- ?x43020 ?x40746) ?x40748) ?x40750) ?x40752) ?x40754) ?x40756) ?x40758)))
 (= (+ ?x43027 ?x40760) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x40882 (* ?x39875 l_0_15_76)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x40880 (* ?x39872 l_0_15_75)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x40878 (* ?x39869 l_0_15_74)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x40876 (* ?x39866 l_0_15_73)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x40874 (* ?x39863 l_0_15_72)))
 (let ((?x39843 (* 2.0 l_0_15_155)))
 (let ((?x40730 (* ?x39843 l_0_15_160)))
 (let ((?x39840 (* 2.0 l_0_15_154)))
 (let ((?x40728 (* ?x39840 l_0_15_159)))
 (let ((?x39837 (* 2.0 l_0_15_153)))
 (let ((?x40726 (* ?x39837 l_0_15_158)))
 (let ((?x39834 (* 2.0 l_0_15_152)))
 (let ((?x40724 (* ?x39834 l_0_15_157)))
 (let ((?x39831 (* 2.0 l_0_15_151)))
 (let ((?x40722 (* ?x39831 l_0_15_156)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x40836 (* ?x40835 l_0_15_99)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x40833 (* ?x40832 l_0_15_98)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x40830 (* ?x40829 l_0_15_97)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x40827 (* ?x40826 l_0_15_96)))
 (let ((?x40837 (+ (+ (+ (+ (* (* 2.0 l_0_15_100) l_0_15_95) ?x40827) ?x40830) ?x40833) ?x40836)))
 (let ((?x32573 (- (- ?x40837 (* (* 2.0 l_0_15_123) l_0_15_128)) (* (* 2.0 l_0_15_124) l_0_15_129))))
 (let ((?x22691 (- (- ?x32573 (* (* 2.0 l_0_15_125) l_0_15_130)) (* (* 2.0 l_0_15_126) l_0_15_131))))
 (let ((?x22716 (- (- (- (- ?x22691 (* (* 2.0 l_0_15_127) l_0_15_132)) ?x40722) ?x40724) ?x40726)))
 (let ((?x43044 (- (- (- (- ?x22716 ?x40728) ?x40730) (* (* 2.0 l_0_15_179) l_0_15_184)) (* (* 2.0 l_0_15_180) l_0_15_185))))
 (let ((?x43048 (- (- ?x43044 (* (* 2.0 l_0_15_181) l_0_15_186)) (* (* 2.0 l_0_15_182) l_0_15_187))))
 (let ((?x43053 (- (- (- (- ?x43048 (* (* 2.0 l_0_15_183) l_0_15_188)) ?x40874) ?x40876) ?x40878)))
 (= (- (- ?x43053 ?x40880) ?x40882) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42389 (* l_0_15_77 l_0_15_77)))
 (let ((?x42387 (* l_0_15_76 l_0_15_76)))
 (let ((?x42385 (* l_0_15_75 l_0_15_75)))
 (let ((?x42383 (* l_0_15_74 l_0_15_74)))
 (let ((?x42381 (* l_0_15_73 l_0_15_73)))
 (let ((?x42379 (* l_0_15_72 l_0_15_72)))
 (let ((?x41937 (* l_0_15_189 l_0_15_189)))
 (let ((?x41934 (* l_0_15_188 l_0_15_188)))
 (let ((?x41931 (* l_0_15_187 l_0_15_187)))
 (let ((?x41928 (* l_0_15_186 l_0_15_186)))
 (let ((?x31189 (* l_0_15_185 l_0_15_185)))
 (let ((?x31211 (* l_0_15_184 l_0_15_184)))
 (let ((?x40850 (* l_0_15_161 l_0_15_161)))
 (let ((?x40848 (* l_0_15_160 l_0_15_160)))
 (let ((?x40844 (* l_0_15_159 l_0_15_159)))
 (let ((?x40842 (* l_0_15_158 l_0_15_158)))
 (let ((?x40840 (* l_0_15_157 l_0_15_157)))
 (let ((?x40838 (* l_0_15_156 l_0_15_156)))
 (let ((?x43106 (* l_0_15_133 l_0_15_133)))
 (let ((?x43104 (* l_0_15_132 l_0_15_132)))
 (let ((?x43102 (* l_0_15_131 l_0_15_131)))
 (let ((?x43100 (* l_0_15_130 l_0_15_130)))
 (let ((?x43098 (* l_0_15_129 l_0_15_129)))
 (let ((?x22943 (* l_0_15_128 l_0_15_128)))
 (let ((?x42377 (* l_0_15_105 l_0_15_105)))
 (let ((?x42375 (* l_0_15_104 l_0_15_104)))
 (let ((?x42373 (* l_0_15_103 l_0_15_103)))
 (let ((?x42371 (* l_0_15_102 l_0_15_102)))
 (let ((?x42372 (+ (+ (* l_0_15_100 l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x42371)))
 (let ((?x42378 (+ (+ (+ ?x42372 ?x42373) ?x42375) ?x42377)))
 (let ((?x43108 (- (- (- (- (- (- (- ?x42378 ?x22943) ?x43098) ?x43100) ?x43102) ?x43104) ?x43106) ?x40838)))
 (let ((?x43115 (- (- (- (- (- (- (- ?x43108 ?x40840) ?x40842) ?x40844) ?x40848) ?x40850) ?x31211) ?x31189)))
 (let ((?x43122 (- (- (- (- (- (- (- ?x43115 ?x41928) ?x41931) ?x41934) ?x41937) ?x42379) ?x42381) ?x42383)))
 (= (- (- (- ?x43122 ?x42385) ?x42387) ?x42389) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x42431 (* l_0_15_84 l_0_15_84)))
 (let ((?x42429 (* l_0_15_83 l_0_15_83)))
 (let ((?x42427 (* l_0_15_82 l_0_15_82)))
 (let ((?x42425 (* l_0_15_81 l_0_15_81)))
 (let ((?x42423 (* l_0_15_80 l_0_15_80)))
 (let ((?x42421 (* l_0_15_79 l_0_15_79)))
 (let ((?x42419 (* l_0_15_78 l_0_15_78)))
 (let ((?x4452 (* l_0_15_196 l_0_15_196)))
 (let ((?x31305 (* l_0_15_195 l_0_15_195)))
 (let ((?x31309 (* l_0_15_194 l_0_15_194)))
 (let ((?x4284 (* l_0_15_193 l_0_15_193)))
 (let ((?x31303 (* l_0_15_192 l_0_15_192)))
 (let ((?x21149 (* l_0_15_191 l_0_15_191)))
 (let ((?x21160 (* l_0_15_190 l_0_15_190)))
 (let ((?x41070 (* l_0_15_168 l_0_15_168)))
 (let ((?x41068 (* l_0_15_167 l_0_15_167)))
 (let ((?x41066 (* l_0_15_166 l_0_15_166)))
 (let ((?x41064 (* l_0_15_165 l_0_15_165)))
 (let ((?x41062 (* l_0_15_164 l_0_15_164)))
 (let ((?x41060 (* l_0_15_163 l_0_15_163)))
 (let ((?x41059 (* l_0_15_162 l_0_15_162)))
 (let ((?x43141 (* l_0_15_140 l_0_15_140)))
 (let ((?x43139 (* l_0_15_139 l_0_15_139)))
 (let ((?x43137 (* l_0_15_138 l_0_15_138)))
 (let ((?x43135 (* l_0_15_137 l_0_15_137)))
 (let ((?x33828 (* l_0_15_136 l_0_15_136)))
 (let ((?x33834 (* l_0_15_135 l_0_15_135)))
 (let ((?x23067 (* l_0_15_134 l_0_15_134)))
 (let ((?x42417 (* l_0_15_112 l_0_15_112)))
 (let ((?x42415 (* l_0_15_111 l_0_15_111)))
 (let ((?x42413 (* l_0_15_110 l_0_15_110)))
 (let ((?x42411 (* l_0_15_109 l_0_15_109)))
 (let ((?x42409 (* l_0_15_108 l_0_15_108)))
 (let ((?x42410 (+ (+ (* l_0_15_106 l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42409)))
 (let ((?x42418 (+ (+ (+ (+ ?x42410 ?x42411) ?x42413) ?x42415) ?x42417)))
 (let ((?x43142 (- (- (- (- (- (- (- ?x42418 ?x23067) ?x33834) ?x33828) ?x43135) ?x43137) ?x43139) ?x43141)))
 (let ((?x43149 (- (- (- (- (- (- (- ?x43142 ?x41059) ?x41060) ?x41062) ?x41064) ?x41066) ?x41068) ?x41070)))
 (let ((?x43156 (- (- (- (- (- (- (- ?x43149 ?x21160) ?x21149) ?x31303) ?x4284) ?x31309) ?x31305) ?x4452)))
 (let ((?x43163 (- (- (- (- (- (- (- ?x43156 ?x42419) ?x42421) ?x42423) ?x42425) ?x42427) ?x42429) ?x42431)))
 (= ?x43163 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x4674 (* ?x39968 l_0_15_91)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31493 (* ?x39965 l_0_15_63)))
 (let ((?x43198 (* l_0_15_262 l_0_15_262)))
 (let ((?x43196 (* l_0_15_261 l_0_15_261)))
 (let ((?x43194 (* l_0_15_260 l_0_15_260)))
 (let ((?x43192 (* l_0_15_259 l_0_15_259)))
 (let ((?x43190 (* l_0_15_234 l_0_15_234)))
 (let ((?x43188 (* l_0_15_233 l_0_15_233)))
 (let ((?x43186 (* l_0_15_232 l_0_15_232)))
 (let ((?x23344 (* l_0_15_231 l_0_15_231)))
 (let ((?x33933 (* l_0_15_206 l_0_15_206)))
 (let ((?x23446 (* l_0_15_205 l_0_15_205)))
 (let ((?x33936 (- (- (* (- l_0_15_203) l_0_15_203) (* l_0_15_204 l_0_15_204)) ?x23446)))
 (let ((?x43195 (- (- (- (- (- (- (- ?x33936 ?x33933) ?x23344) ?x43186) ?x43188) ?x43190) ?x43192) ?x43194)))
 (= (- (+ (- (- ?x43195 ?x43196) ?x43198) ?x31493) ?x4674) 0.0))))))))))))))))))
(assert
 (let ((?x39968 (* 2.0 l_0_15_85)))
 (let ((?x39969 (* ?x39968 l_0_15_95)))
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x39966 (* ?x39965 l_0_15_67)))
 (let ((?x43230 (- (* (* (- 2.0) l_0_15_203) l_0_15_207) (* (* 2.0 l_0_15_204) l_0_15_208))))
 (let ((?x43236 (- (- ?x43230 (* (* 2.0 l_0_15_205) l_0_15_209)) (* (* 2.0 l_0_15_206) l_0_15_210))))
 (let ((?x43242 (- (- ?x43236 (* (* 2.0 l_0_15_231) l_0_15_235)) (* (* 2.0 l_0_15_232) l_0_15_236))))
 (let ((?x43248 (- (- ?x43242 (* (* 2.0 l_0_15_233) l_0_15_237)) (* (* 2.0 l_0_15_234) l_0_15_238))))
 (let ((?x43254 (- (- ?x43248 (* (* 2.0 l_0_15_259) l_0_15_263)) (* (* 2.0 l_0_15_260) l_0_15_264))))
 (let ((?x43260 (- (- ?x43254 (* (* 2.0 l_0_15_261) l_0_15_265)) (* (* 2.0 l_0_15_262) l_0_15_266))))
 (= (- (+ ?x43260 ?x39966) ?x39969) 0.0))))))))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31725 (* ?x39965 l_0_15_72)))
 (let ((?x43304 (- (* (* (- 2.0) l_0_15_100) l_0_15_85) (* (* 2.0 l_0_15_203) l_0_15_212))))
 (let ((?x43308 (- (- ?x43304 (* (* 2.0 l_0_15_204) l_0_15_213)) (* (* 2.0 l_0_15_205) l_0_15_214))))
 (let ((?x43312 (- (- ?x43308 (* (* 2.0 l_0_15_206) l_0_15_215)) (* (* 2.0 l_0_15_231) l_0_15_240))))
 (let ((?x43316 (- (- ?x43312 (* (* 2.0 l_0_15_232) l_0_15_241)) (* (* 2.0 l_0_15_233) l_0_15_242))))
 (let ((?x43320 (- (- ?x43316 (* (* 2.0 l_0_15_234) l_0_15_243)) (* (* 2.0 l_0_15_259) l_0_15_268))))
 (let ((?x43324 (- (- ?x43320 (* (* 2.0 l_0_15_260) l_0_15_269)) (* (* 2.0 l_0_15_261) l_0_15_270))))
 (= (+ (- ?x43324 (* (* 2.0 l_0_15_262) l_0_15_271)) ?x31725) 0.0))))))))))
(assert
 (let ((?x39965 (* 2.0 l_0_15_57)))
 (let ((?x31348 (* ?x39965 l_0_15_78)))
 (let ((?x43352 (- (* (* (- 2.0) l_0_15_106) l_0_15_85) (* (* 2.0 l_0_15_203) l_0_15_218))))
 (let ((?x43356 (- (- ?x43352 (* (* 2.0 l_0_15_204) l_0_15_219)) (* (* 2.0 l_0_15_205) l_0_15_220))))
 (let ((?x43360 (- (- ?x43356 (* (* 2.0 l_0_15_206) l_0_15_221)) (* (* 2.0 l_0_15_231) l_0_15_246))))
 (let ((?x43364 (- (- ?x43360 (* (* 2.0 l_0_15_232) l_0_15_247)) (* (* 2.0 l_0_15_233) l_0_15_248))))
 (let ((?x43368 (- (- ?x43364 (* (* 2.0 l_0_15_234) l_0_15_249)) (* (* 2.0 l_0_15_259) l_0_15_274))))
 (let ((?x43372 (- (- ?x43368 (* (* 2.0 l_0_15_260) l_0_15_275)) (* (* 2.0 l_0_15_261) l_0_15_276))))
 (= (+ (- ?x43372 (* (* 2.0 l_0_15_262) l_0_15_277)) ?x31348) 0.0))))))))))
(assert
 (let ((?x42264 (* l_0_15_94 l_0_15_94)))
 (let ((?x42262 (* l_0_15_93 l_0_15_93)))
 (let ((?x42260 (* l_0_15_92 l_0_15_92)))
 (let ((?x42258 (* l_0_15_91 l_0_15_91)))
 (let ((?x42256 (* l_0_15_66 l_0_15_66)))
 (let ((?x42254 (* l_0_15_65 l_0_15_65)))
 (let ((?x43423 (+ (+ (+ (* l_0_15_63 l_0_15_63) (* l_0_15_64 l_0_15_64)) ?x42254) ?x42256)))
 (= (- (- (- (- ?x43423 ?x42258) ?x42260) ?x42262) ?x42264) 0.0)))))))))
(assert
 (let ((?x40555 (* (* 2.0 l_0_15_94) l_0_15_98)))
 (let ((?x40552 (* (* 2.0 l_0_15_93) l_0_15_97)))
 (let ((?x40549 (* (* 2.0 l_0_15_92) l_0_15_96)))
 (let ((?x40546 (* (* 2.0 l_0_15_91) l_0_15_95)))
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x40543 (* ?x40542 l_0_15_70)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x40540 (* ?x40539 l_0_15_69)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x40537 (* ?x40536 l_0_15_68)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x40534 (* ?x40533 l_0_15_67)))
 (let ((?x43441 (- (- (- (- (+ (+ (+ ?x40534 ?x40537) ?x40540) ?x40543) ?x40546) ?x40549) ?x40552) ?x40555)))
 (= ?x43441 0.0)))))))))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42295 (* ?x40542 l_0_15_75)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42293 (* ?x40539 l_0_15_74)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42291 (* ?x40536 l_0_15_73)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42289 (* ?x40533 l_0_15_72)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x42287 (* ?x40832 l_0_15_94)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x42285 (* ?x40829 l_0_15_93)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x42283 (* ?x40826 l_0_15_92)))
 (let ((?x34365 (+ (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_91) ?x42283) ?x42285) ?x42287) ?x42289)))
 (= (+ (+ (+ ?x34365 ?x42291) ?x42293) ?x42295) 0.0)))))))))))))))))
(assert
 (let ((?x40542 (* 2.0 l_0_15_66)))
 (let ((?x42334 (* ?x40542 l_0_15_81)))
 (let ((?x40539 (* 2.0 l_0_15_65)))
 (let ((?x42332 (* ?x40539 l_0_15_80)))
 (let ((?x40536 (* 2.0 l_0_15_64)))
 (let ((?x42330 (* ?x40536 l_0_15_79)))
 (let ((?x40533 (* 2.0 l_0_15_63)))
 (let ((?x42328 (* ?x40533 l_0_15_78)))
 (let ((?x39808 (* 2.0 l_0_15_109)))
 (let ((?x42326 (* ?x39808 l_0_15_94)))
 (let ((?x39805 (* 2.0 l_0_15_108)))
 (let ((?x42324 (* ?x39805 l_0_15_93)))
 (let ((?x39802 (* 2.0 l_0_15_107)))
 (let ((?x42322 (* ?x39802 l_0_15_92)))
 (let ((?x43460 (+ (- (- (- (* (* (- 2.0) l_0_15_106) l_0_15_91) ?x42322) ?x42324) ?x42326) ?x42328)))
 (= (+ (+ (+ ?x43460 ?x42330) ?x42332) ?x42334) 0.0)))))))))))))))))
(assert
 (let ((?x40760 (* l_0_15_99 l_0_15_99)))
 (let ((?x40758 (* l_0_15_98 l_0_15_98)))
 (let ((?x40756 (* l_0_15_97 l_0_15_97)))
 (let ((?x40754 (* l_0_15_96 l_0_15_96)))
 (let ((?x40752 (* l_0_15_95 l_0_15_95)))
 (let ((?x40750 (* l_0_15_71 l_0_15_71)))
 (let ((?x40748 (* l_0_15_70 l_0_15_70)))
 (let ((?x40746 (* l_0_15_69 l_0_15_69)))
 (let ((?x34391 (+ (+ (+ (* l_0_15_67 l_0_15_67) (* l_0_15_68 l_0_15_68)) ?x40746) ?x40748)))
 (= (- (- (- (- (- (+ ?x34391 ?x40750) ?x40752) ?x40754) ?x40756) ?x40758) ?x40760) 0.0)))))))))))
(assert
 (let ((?x39875 (* 2.0 l_0_15_71)))
 (let ((?x40882 (* ?x39875 l_0_15_76)))
 (let ((?x39872 (* 2.0 l_0_15_70)))
 (let ((?x40880 (* ?x39872 l_0_15_75)))
 (let ((?x39869 (* 2.0 l_0_15_69)))
 (let ((?x40878 (* ?x39869 l_0_15_74)))
 (let ((?x39866 (* 2.0 l_0_15_68)))
 (let ((?x40876 (* ?x39866 l_0_15_73)))
 (let ((?x39863 (* 2.0 l_0_15_67)))
 (let ((?x40874 (* ?x39863 l_0_15_72)))
 (let ((?x40835 (* 2.0 l_0_15_104)))
 (let ((?x40836 (* ?x40835 l_0_15_99)))
 (let ((?x40832 (* 2.0 l_0_15_103)))
 (let ((?x40833 (* ?x40832 l_0_15_98)))
 (let ((?x40829 (* 2.0 l_0_15_102)))
 (let ((?x40830 (* ?x40829 l_0_15_97)))
 (let ((?x40826 (* 2.0 l_0_15_101)))
 (let ((?x40827 (* ?x40826 l_0_15_96)))
 (let ((?x43496 (- (- (- (- (* (* (- 2.0) l_0_15_100) l_0_15_95) ?x40827) ?x40830) ?x40833) ?x40836)))
 (= (+ (+ (+ (+ (+ ?x43496 ?x40874) ?x40876) ?x40878) ?x40880) ?x40882) 0.0)))))))))))))))))))))
(assert
 (let ((?x42389 (* l_0_15_77 l_0_15_77)))
 (let ((?x42387 (* l_0_15_76 l_0_15_76)))
 (let ((?x42385 (* l_0_15_75 l_0_15_75)))
 (let ((?x42383 (* l_0_15_74 l_0_15_74)))
 (let ((?x42381 (* l_0_15_73 l_0_15_73)))
 (let ((?x42379 (* l_0_15_72 l_0_15_72)))
 (let ((?x42377 (* l_0_15_105 l_0_15_105)))
 (let ((?x42375 (* l_0_15_104 l_0_15_104)))
 (let ((?x42373 (* l_0_15_103 l_0_15_103)))
 (let ((?x42371 (* l_0_15_102 l_0_15_102)))
 (let ((?x34395 (- (- (* (- l_0_15_100) l_0_15_100) (* l_0_15_101 l_0_15_101)) ?x42371)))
 (let ((?x43509 (+ (+ (+ (+ (- (- (- ?x34395 ?x42373) ?x42375) ?x42377) ?x42379) ?x42381) ?x42383) ?x42385)))
 (= (+ (+ ?x43509 ?x42387) ?x42389) 0.0))))))))))))))
(assert
 (let ((?x42431 (* l_0_15_84 l_0_15_84)))
 (let ((?x42429 (* l_0_15_83 l_0_15_83)))
 (let ((?x42427 (* l_0_15_82 l_0_15_82)))
 (let ((?x42425 (* l_0_15_81 l_0_15_81)))
 (let ((?x42423 (* l_0_15_80 l_0_15_80)))
 (let ((?x42421 (* l_0_15_79 l_0_15_79)))
 (let ((?x42419 (* l_0_15_78 l_0_15_78)))
 (let ((?x42417 (* l_0_15_112 l_0_15_112)))
 (let ((?x42415 (* l_0_15_111 l_0_15_111)))
 (let ((?x42413 (* l_0_15_110 l_0_15_110)))
 (let ((?x42411 (* l_0_15_109 l_0_15_109)))
 (let ((?x42409 (* l_0_15_108 l_0_15_108)))
 (let ((?x43523 (- (- (* (- l_0_15_106) l_0_15_106) (* l_0_15_107 l_0_15_107)) ?x42409)))
 (let ((?x43530 (+ (+ (+ (- (- (- (- ?x43523 ?x42411) ?x42413) ?x42415) ?x42417) ?x42419) ?x42421) ?x42423)))
 (= (+ (+ (+ (+ ?x43530 ?x42425) ?x42427) ?x42429) ?x42431) 0.0))))))))))))))))
(assert
 (let ((?x43547 (* l_0_15_253 l_0_15_253)))
 (let ((?x43548 (- (- (* (- l_0_15_197) l_0_15_197) (* l_0_15_225 l_0_15_225)) ?x43547)))
 (= ?x43548 0.0))))
(assert
 (let ((?x43563 (- (* (* (- 2.0) l_0_15_197) l_0_15_207) (* (* 2.0 l_0_15_225) l_0_15_235))))
 (= (- ?x43563 (* (* 2.0 l_0_15_253) l_0_15_263)) 0.0)))
(assert
 (let ((?x23228 (- (* (* (- 2.0) l_0_15_197) l_0_15_212) (* (* 2.0 l_0_15_225) l_0_15_240))))
 (= (- ?x23228 (* (* 2.0 l_0_15_253) l_0_15_268)) 0.0)))
(assert
 (let ((?x43595 (- (* (* (- 2.0) l_0_15_197) l_0_15_218) (* (* 2.0 l_0_15_225) l_0_15_246))))
 (= (- ?x43595 (* (* 2.0 l_0_15_253) l_0_15_274)) 0.0)))
(assert
 (let ((?x43641 (* l_0_15_267 l_0_15_267)))
 (let ((?x43639 (* l_0_15_266 l_0_15_266)))
 (let ((?x43637 (* l_0_15_265 l_0_15_265)))
 (let ((?x43635 (* l_0_15_264 l_0_15_264)))
 (let ((?x43633 (* l_0_15_263 l_0_15_263)))
 (let ((?x43631 (* l_0_15_239 l_0_15_239)))
 (let ((?x43629 (* l_0_15_238 l_0_15_238)))
 (let ((?x43627 (* l_0_15_237 l_0_15_237)))
 (let ((?x43625 (* l_0_15_236 l_0_15_236)))
 (let ((?x43623 (* l_0_15_235 l_0_15_235)))
 (let ((?x43621 (* l_0_15_211 l_0_15_211)))
 (let ((?x43619 (* l_0_15_210 l_0_15_210)))
 (let ((?x43617 (* l_0_15_209 l_0_15_209)))
 (let ((?x43618 (- (- (* (- l_0_15_207) l_0_15_207) (* l_0_15_208 l_0_15_208)) ?x43617)))
 (let ((?x43632 (- (- (- (- (- (- (- ?x43618 ?x43619) ?x43621) ?x43623) ?x43625) ?x43627) ?x43629) ?x43631)))
 (= (- (- (- (- (- ?x43632 ?x43633) ?x43635) ?x43637) ?x43639) ?x43641) 0.0)))))))))))))))))
(assert
 (let ((?x43665 (- (* (* (- 2.0) l_0_15_207) l_0_15_212) (* (* 2.0 l_0_15_208) l_0_15_213))))
 (let ((?x43669 (- (- ?x43665 (* (* 2.0 l_0_15_209) l_0_15_214)) (* (* 2.0 l_0_15_210) l_0_15_215))))
 (let ((?x43673 (- (- ?x43669 (* (* 2.0 l_0_15_211) l_0_15_216)) (* (* 2.0 l_0_15_235) l_0_15_240))))
 (let ((?x43677 (- (- ?x43673 (* (* 2.0 l_0_15_236) l_0_15_241)) (* (* 2.0 l_0_15_237) l_0_15_242))))
 (let ((?x43681 (- (- ?x43677 (* (* 2.0 l_0_15_238) l_0_15_243)) (* (* 2.0 l_0_15_239) l_0_15_244))))
 (let ((?x43685 (- (- ?x43681 (* (* 2.0 l_0_15_263) l_0_15_268)) (* (* 2.0 l_0_15_264) l_0_15_269))))
 (let ((?x43689 (- (- ?x43685 (* (* 2.0 l_0_15_265) l_0_15_270)) (* (* 2.0 l_0_15_266) l_0_15_271))))
 (= (- ?x43689 (* (* 2.0 l_0_15_267) l_0_15_272)) 0.0)))))))))
(assert
 (let ((?x43752 (* l_0_15_273 l_0_15_273)))
 (let ((?x43750 (* l_0_15_272 l_0_15_272)))
 (let ((?x43748 (* l_0_15_271 l_0_15_271)))
 (let ((?x43746 (* l_0_15_270 l_0_15_270)))
 (let ((?x43744 (* l_0_15_269 l_0_15_269)))
 (let ((?x43742 (* l_0_15_268 l_0_15_268)))
 (let ((?x43740 (* l_0_15_245 l_0_15_245)))
 (let ((?x43738 (* l_0_15_244 l_0_15_244)))
 (let ((?x43736 (* l_0_15_243 l_0_15_243)))
 (let ((?x43734 (* l_0_15_242 l_0_15_242)))
 (let ((?x43732 (* l_0_15_241 l_0_15_241)))
 (let ((?x43730 (* l_0_15_240 l_0_15_240)))
 (let ((?x43728 (* l_0_15_217 l_0_15_217)))
 (let ((?x43726 (* l_0_15_216 l_0_15_216)))
 (let ((?x43724 (* l_0_15_215 l_0_15_215)))
 (let ((?x43722 (* l_0_15_214 l_0_15_214)))
 (let ((?x43723 (- (- (* (- l_0_15_212) l_0_15_212) (* l_0_15_213 l_0_15_213)) ?x43722)))
 (let ((?x43737 (- (- (- (- (- (- (- ?x43723 ?x43724) ?x43726) ?x43728) ?x43730) ?x43732) ?x43734) ?x43736)))
 (let ((?x43751 (- (- (- (- (- (- (- ?x43737 ?x43738) ?x43740) ?x43742) ?x43744) ?x43746) ?x43748) ?x43750)))
 (= (- ?x43751 ?x43752) 0.0)))))))))))))))))))))
(assert
 (let ((?x43810 (* l_0_15_280 l_0_15_280)))
 (let ((?x43808 (* l_0_15_279 l_0_15_279)))
 (let ((?x43806 (* l_0_15_278 l_0_15_278)))
 (let ((?x43804 (* l_0_15_277 l_0_15_277)))
 (let ((?x43802 (* l_0_15_276 l_0_15_276)))
 (let ((?x43800 (* l_0_15_275 l_0_15_275)))
 (let ((?x43798 (* l_0_15_274 l_0_15_274)))
 (let ((?x43796 (* l_0_15_252 l_0_15_252)))
 (let ((?x43794 (* l_0_15_251 l_0_15_251)))
 (let ((?x43792 (* l_0_15_250 l_0_15_250)))
 (let ((?x43790 (* l_0_15_249 l_0_15_249)))
 (let ((?x43788 (* l_0_15_248 l_0_15_248)))
 (let ((?x43786 (* l_0_15_247 l_0_15_247)))
 (let ((?x43784 (* l_0_15_246 l_0_15_246)))
 (let ((?x43782 (* l_0_15_224 l_0_15_224)))
 (let ((?x43780 (* l_0_15_223 l_0_15_223)))
 (let ((?x43778 (* l_0_15_222 l_0_15_222)))
 (let ((?x43776 (* l_0_15_221 l_0_15_221)))
 (let ((?x8978 (* l_0_15_220 l_0_15_220)))
 (let ((?x43775 (- (- (* (- l_0_15_218) l_0_15_218) (* l_0_15_219 l_0_15_219)) ?x8978)))
 (let ((?x43789 (- (- (- (- (- (- (- ?x43775 ?x43776) ?x43778) ?x43780) ?x43782) ?x43784) ?x43786) ?x43788)))
 (let ((?x43803 (- (- (- (- (- (- (- ?x43789 ?x43790) ?x43792) ?x43794) ?x43796) ?x43798) ?x43800) ?x43802)))
 (= (- (- (- (- ?x43803 ?x43804) ?x43806) ?x43808) ?x43810) 0.0))))))))))))))))))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_28 0.0))
(assert
 (>= l_0_15_29 0.0))
(assert
 (>= l_0_15_31 0.0))
(assert
 (>= l_0_15_34 0.0))
(assert
 (>= l_0_15_38 0.0))
(assert
 (>= l_0_15_43 0.0))
(assert
 (>= l_0_15_49 0.0))
(assert
 (>= l_0_15_56 0.0))
(assert
 (>= l_0_15_57 0.0))
(assert
 (>= l_0_15_59 0.0))
(assert
 (>= l_0_15_62 0.0))
(assert
 (>= l_0_15_66 0.0))
(assert
 (>= l_0_15_71 0.0))
(assert
 (>= l_0_15_77 0.0))
(assert
 (>= l_0_15_84 0.0))
(assert
 (>= l_0_15_85 0.0))
(assert
 (>= l_0_15_87 0.0))
(assert
 (>= l_0_15_90 0.0))
(assert
 (>= l_0_15_94 0.0))
(assert
 (>= l_0_15_99 0.0))
(assert
 (>= l_0_15_105 0.0))
(assert
 (>= l_0_15_112 0.0))
(assert
 (>= l_0_15_113 0.0))
(assert
 (>= l_0_15_115 0.0))
(assert
 (>= l_0_15_118 0.0))
(assert
 (>= l_0_15_122 0.0))
(assert
 (>= l_0_15_127 0.0))
(assert
 (>= l_0_15_133 0.0))
(assert
 (>= l_0_15_140 0.0))
(assert
 (>= l_0_15_141 0.0))
(assert
 (>= l_0_15_143 0.0))
(assert
 (>= l_0_15_146 0.0))
(assert
 (>= l_0_15_150 0.0))
(assert
 (>= l_0_15_155 0.0))
(assert
 (>= l_0_15_161 0.0))
(assert
 (>= l_0_15_168 0.0))
(assert
 (>= l_0_15_169 0.0))
(assert
 (>= l_0_15_171 0.0))
(assert
 (>= l_0_15_174 0.0))
(assert
 (>= l_0_15_178 0.0))
(assert
 (>= l_0_15_183 0.0))
(assert
 (>= l_0_15_189 0.0))
(assert
 (>= l_0_15_196 0.0))
(assert
 (>= l_0_15_197 0.0))
(assert
 (>= l_0_15_199 0.0))
(assert
 (>= l_0_15_202 0.0))
(assert
 (>= l_0_15_206 0.0))
(assert
 (>= l_0_15_211 0.0))
(assert
 (>= l_0_15_217 0.0))
(assert
 (>= l_0_15_224 0.0))
(assert
 (>= l_0_15_225 0.0))
(assert
 (>= l_0_15_227 0.0))
(assert
 (>= l_0_15_230 0.0))
(assert
 (>= l_0_15_234 0.0))
(assert
 (>= l_0_15_239 0.0))
(assert
 (>= l_0_15_245 0.0))
(assert
 (>= l_0_15_252 0.0))
(assert
 (>= l_0_15_253 0.0))
(assert
 (>= l_0_15_255 0.0))
(assert
 (>= l_0_15_258 0.0))
(assert
 (>= l_0_15_262 0.0))
(assert
 (>= l_0_15_267 0.0))
(assert
 (>= l_0_15_273 0.0))
(assert
 (>= l_0_15_280 0.0))
(assert
 (let ((?x43921 (* l_0_16_85 l_0_16_85)))
 (let ((?x43919 (* l_0_16_57 l_0_16_57)))
 (let ((?x43912 (- (* (* (- 2.0) l_0_16_197) l_0_16_203) (* (* 2.0 l_0_16_225) l_0_16_231))))
 (let ((?x43918 (- (- ?x43912 (* (* 2.0 l_0_16_253) l_0_16_259)) (* (* 2.0 l_0_16_281) l_0_16_287))))
 (= (+ (- (+ ?x43918 ?x43919) ?x43921) 1.0) 0.0))))))
(assert
 (let ((?x43921 (* l_0_16_85 l_0_16_85)))
 (let ((?x43919 (* l_0_16_57 l_0_16_57)))
 (let ((?x43948 (- (* (* (- 2.0) l_0_16_212) l_0_16_218) (* (* 2.0 l_0_16_213) l_0_16_219))))
 (let ((?x43954 (- (- ?x43948 (* (* 2.0 l_0_16_214) l_0_16_220)) (* (* 2.0 l_0_16_215) l_0_16_221))))
 (let ((?x43960 (- (- ?x43954 (* (* 2.0 l_0_16_216) l_0_16_222)) (* (* 2.0 l_0_16_217) l_0_16_223))))
 (let ((?x43966 (- (- ?x43960 (* (* 2.0 l_0_16_240) l_0_16_246)) (* (* 2.0 l_0_16_241) l_0_16_247))))
 (let ((?x43972 (- (- ?x43966 (* (* 2.0 l_0_16_242) l_0_16_248)) (* (* 2.0 l_0_16_243) l_0_16_249))))
 (let ((?x43978 (- (- ?x43972 (* (* 2.0 l_0_16_244) l_0_16_250)) (* (* 2.0 l_0_16_245) l_0_16_251))))
 (let ((?x43984 (- (- ?x43978 (* (* 2.0 l_0_16_268) l_0_16_274)) (* (* 2.0 l_0_16_269) l_0_16_275))))
 (let ((?x43990 (- (- ?x43984 (* (* 2.0 l_0_16_270) l_0_16_276)) (* (* 2.0 l_0_16_271) l_0_16_277))))
 (let ((?x43996 (- (- ?x43990 (* (* 2.0 l_0_16_272) l_0_16_278)) (* (* 2.0 l_0_16_273) l_0_16_279))))
 (let ((?x44002 (- (- ?x43996 (* (* 2.0 l_0_16_296) l_0_16_302)) (* (* 2.0 l_0_16_297) l_0_16_303))))
 (let ((?x44008 (- (- ?x44002 (* (* 2.0 l_0_16_298) l_0_16_304)) (* (* 2.0 l_0_16_299) l_0_16_305))))
 (let ((?x44014 (- (- ?x44008 (* (* 2.0 l_0_16_300) l_0_16_306)) (* (* 2.0 l_0_16_301) l_0_16_307))))
 (= (- (+ (- ?x44014 ?x43919) ?x43921) 1.0) 0.0))))))))))))))))
(assert
 (let ((?x43921 (* l_0_16_85 l_0_16_85)))
 (let ((?x43919 (* l_0_16_57 l_0_16_57)))
 (let ((?x44087 (* l_0_16_169 l_0_16_169)))
 (let ((?x44088 (- (- (* (- l_0_16_113) l_0_16_113) (* l_0_16_141 l_0_16_141)) ?x44087)))
 (let ((?x44093 (- (- ?x44088 (* (* 2.0 l_0_16_197) l_0_16_200)) (* (* 2.0 l_0_16_225) l_0_16_228))))
 (let ((?x44097 (- (- ?x44093 (* (* 2.0 l_0_16_253) l_0_16_256)) (* (* 2.0 l_0_16_281) l_0_16_284))))
 (= (- (+ (- ?x44097 ?x43919) ?x43921) 1.0) 0.0))))))))
(assert
 (let ((?x44173 (* l_0_16_29 l_0_16_29)))
 (let ((?x44130 (- (+ (* (- l_0_16_1) l_0_16_1) (* l_0_16_141 l_0_16_141)) (* (* 2.0 l_0_16_207) l_0_16_218))))
 (let ((?x44136 (- (- ?x44130 (* (* 2.0 l_0_16_208) l_0_16_219)) (* (* 2.0 l_0_16_209) l_0_16_220))))
 (let ((?x44142 (- (- ?x44136 (* (* 2.0 l_0_16_210) l_0_16_221)) (* (* 2.0 l_0_16_211) l_0_16_222))))
 (let ((?x44148 (- (- ?x44142 (* (* 2.0 l_0_16_235) l_0_16_246)) (* (* 2.0 l_0_16_236) l_0_16_247))))
 (let ((?x44154 (- (- ?x44148 (* (* 2.0 l_0_16_237) l_0_16_248)) (* (* 2.0 l_0_16_238) l_0_16_249))))
 (let ((?x44160 (- (- ?x44154 (* (* 2.0 l_0_16_239) l_0_16_250)) (* (* 2.0 l_0_16_263) l_0_16_274))))
 (let ((?x44166 (- (- ?x44160 (* (* 2.0 l_0_16_264) l_0_16_275)) (* (* 2.0 l_0_16_265) l_0_16_276))))
 (let ((?x44172 (- (- ?x44166 (* (* 2.0 l_0_16_266) l_0_16_277)) (* (* 2.0 l_0_16_267) l_0_16_278))))
 (let ((?x44180 (- (- (+ ?x44172 ?x44173) (* (* 2.0 l_0_16_291) l_0_16_302)) (* (* 2.0 l_0_16_292) l_0_16_303))))
 (let ((?x44186 (- (- ?x44180 (* (* 2.0 l_0_16_293) l_0_16_304)) (* (* 2.0 l_0_16_294) l_0_16_305))))
 (= (- ?x44186 (* (* 2.0 l_0_16_295) l_0_16_306)) 0.0)))))))))))))
(assert
 (let ((?x44284 (* 2.0 l_0_16_43)))
 (let ((?x44285 (* ?x44284 l_0_16_54)))
 (let ((?x44281 (* 2.0 l_0_16_42)))
 (let ((?x44282 (* ?x44281 l_0_16_53)))
 (let ((?x44278 (* 2.0 l_0_16_41)))
 (let ((?x44279 (* ?x44278 l_0_16_52)))
 (let ((?x44275 (* 2.0 l_0_16_40)))
 (let ((?x44276 (* ?x44275 l_0_16_51)))
 (let ((?x44272 (* 2.0 l_0_16_39)))
 (let ((?x44273 (* ?x44272 l_0_16_50)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44270 (* ?x44269 l_0_16_30)))
 (let ((?x44251 (* 2.0 l_0_16_15)))
 (let ((?x44252 (* ?x44251 l_0_16_26)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44249 (* ?x44248 l_0_16_142)))
 (let ((?x44245 (* 2.0 l_0_16_14)))
 (let ((?x44246 (* ?x44245 l_0_16_25)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x44243 (* ?x44242 l_0_16_24)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x44240 (* ?x44239 l_0_16_23)))
 (let ((?x44238 (+ (* (* (- 2.0) l_0_16_1) l_0_16_2) (* (* 2.0 l_0_16_11) l_0_16_22))))
 (let ((?x44256 (+ (+ (+ (+ (+ (+ ?x44238 ?x44240) ?x44243) ?x44246) ?x44249) ?x44252) (* (* 4.0 l_0_16_179) l_0_16_190))))
 (let ((?x44262 (+ (+ ?x44256 (* (* 4.0 l_0_16_180) l_0_16_191)) (* (* 4.0 l_0_16_181) l_0_16_192))))
 (let ((?x44268 (+ (+ ?x44262 (* (* 4.0 l_0_16_182) l_0_16_193)) (* (* 4.0 l_0_16_183) l_0_16_194))))
 (= (- (- (- (- (- (+ ?x44268 ?x44270) ?x44273) ?x44276) ?x44279) ?x44282) ?x44285) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x44423 (* ?x44422 l_0_16_82)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x44420 (* ?x44419 l_0_16_81)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x44417 (* ?x44416 l_0_16_80)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x44414 (* ?x44413 l_0_16_79)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x44411 (* ?x44410 l_0_16_78)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44408 (* ?x44269 l_0_16_32)))
 (let ((?x44390 (* 2.0 l_0_16_155)))
 (let ((?x44391 (* ?x44390 l_0_16_166)))
 (let ((?x44387 (* 2.0 l_0_16_154)))
 (let ((?x44388 (* ?x44387 l_0_16_165)))
 (let ((?x44384 (* 2.0 l_0_16_153)))
 (let ((?x44385 (* ?x44384 l_0_16_164)))
 (let ((?x44381 (* 2.0 l_0_16_152)))
 (let ((?x44382 (* ?x44381 l_0_16_163)))
 (let ((?x44378 (* 2.0 l_0_16_151)))
 (let ((?x44379 (* ?x44378 l_0_16_162)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44376 (* ?x44248 l_0_16_144)))
 (let ((?x44359 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x44356 (* ?x44355 l_0_16_98)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x44353 (* ?x44352 l_0_16_97)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x44350 (* ?x44349 l_0_16_96)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x44347 (* ?x44346 l_0_16_95)))
 (let ((?x44357 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_4) ?x44347) ?x44350) ?x44353) ?x44356)))
 (let ((?x44366 (- (- (+ ?x44357 ?x44359) (* (* 2.0 l_0_16_123) l_0_16_134)) (* (* 2.0 l_0_16_124) l_0_16_135))))
 (let ((?x44372 (- (- ?x44366 (* (* 2.0 l_0_16_125) l_0_16_136)) (* (* 2.0 l_0_16_126) l_0_16_137))))
 (let ((?x44383 (- (- (+ (- ?x44372 (* (* 2.0 l_0_16_127) l_0_16_138)) ?x44376) ?x44379) ?x44382)))
 (let ((?x44395 (- (- (- (- ?x44383 ?x44385) ?x44388) ?x44391) (* (* 2.0 l_0_16_179) l_0_16_190))))
 (let ((?x44401 (- (- ?x44395 (* (* 2.0 l_0_16_180) l_0_16_191)) (* (* 2.0 l_0_16_181) l_0_16_192))))
 (let ((?x44407 (- (- ?x44401 (* (* 2.0 l_0_16_182) l_0_16_193)) (* (* 2.0 l_0_16_183) l_0_16_194))))
 (= (- (- (- (- (- (+ ?x44407 ?x44408) ?x44411) ?x44414) ?x44417) ?x44420) ?x44423) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x44423 (* ?x44422 l_0_16_82)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x44420 (* ?x44419 l_0_16_81)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x44417 (* ?x44416 l_0_16_80)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x44414 (* ?x44413 l_0_16_79)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x44411 (* ?x44410 l_0_16_78)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44505 (* ?x44269 l_0_16_35)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44503 (* ?x44248 l_0_16_147)))
 (let ((?x44359 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x44356 (* ?x44355 l_0_16_98)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x44353 (* ?x44352 l_0_16_97)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x44350 (* ?x44349 l_0_16_96)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x44347 (* ?x44346 l_0_16_95)))
 (let ((?x44501 (- (- (- (- (* (* (- 2.0) l_0_16_1) l_0_16_7) ?x44347) ?x44350) ?x44353) ?x44356)))
 (let ((?x44510 (+ (+ (+ (+ (+ (+ (- ?x44501 ?x44359) ?x44503) ?x44505) ?x44411) ?x44414) ?x44417) ?x44420)))
 (= (+ ?x44510 ?x44423) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44521 (* ?x44269 l_0_16_39)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44519 (* ?x44248 l_0_16_151)))
 (= (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_11) ?x44519) ?x44521) 0.0))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x44541 (* ?x44540 l_0_16_95)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x44538 (* ?x44537 l_0_16_67)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44530 (* ?x44269 l_0_16_44)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44527 (* ?x44248 l_0_16_156)))
 (let ((?x44542 (+ (- (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_16) ?x44527) ?x44530) ?x44538) ?x44541)))
 (= ?x44542 0.0)))))))))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44561 (* ?x44269 l_0_16_50)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44559 (* ?x44248 l_0_16_162)))
 (= (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_22) ?x44559) ?x44561) 0.0))))))
(assert
 (let ((?x44581 (* l_0_16_31 l_0_16_31)))
 (let ((?x44579 (* l_0_16_30 l_0_16_30)))
 (let ((?x44577 (* l_0_16_3 l_0_16_3)))
 (let ((?x44570 (* l_0_16_2 l_0_16_2)))
 (let ((?x44576 (- (+ (* l_0_16_142 l_0_16_142) (* l_0_16_143 l_0_16_143)) ?x44570)))
 (= (+ (+ (- ?x44576 ?x44577) ?x44579) ?x44581) 0.0)))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44604 (* ?x44603 l_0_16_33)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44601 (* ?x44600 l_0_16_32)))
 (let ((?x44597 (* 2.0 l_0_16_3)))
 (let ((?x44598 (* ?x44597 l_0_16_5)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44595 (* ?x44594 l_0_16_4)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44592 (* ?x44591 l_0_16_145)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44590 (* ?x34784 l_0_16_144)))
 (= (+ (+ (- (- (+ ?x44590 ?x44592) ?x44595) ?x44598) ?x44601) ?x44604) 0.0))))))))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44636 (* ?x44603 l_0_16_36)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44634 (* ?x44600 l_0_16_35)))
 (let ((?x44597 (* 2.0 l_0_16_3)))
 (let ((?x44632 (* ?x44597 l_0_16_8)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44630 (* ?x44594 l_0_16_7)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44628 (* ?x44591 l_0_16_148)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44627 (* ?x34784 l_0_16_147)))
 (= (+ (+ (- (- (+ ?x44627 ?x44628) ?x44630) ?x44632) ?x44634) ?x44636) 0.0))))))))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x9870 (* ?x44603 l_0_16_40)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x34216 (* ?x44600 l_0_16_39)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x34765 (* ?x44591 l_0_16_152)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x24986 (* ?x34784 l_0_16_151)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x34776 (* ?x44239 l_0_16_3)))
 (let ((?x9875 (+ (+ (+ (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x34776) ?x24986) ?x34765) ?x34216)))
 (= (+ ?x9875 ?x9870) 0.0)))))))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x44682 (* ?x44681 l_0_16_96)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x44679 (* ?x44678 l_0_16_95)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x44676 (* ?x44675 l_0_16_68)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x44673 (* ?x44672 l_0_16_67)))
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44670 (* ?x44603 l_0_16_45)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44668 (* ?x44600 l_0_16_44)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x44666 (* ?x44665 l_0_16_3)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x44656 (* ?x44655 l_0_16_2)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44651 (* ?x44591 l_0_16_157)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44649 (* ?x34784 l_0_16_156)))
 (let ((?x44677 (- (- (+ (+ (- (- (+ ?x44649 ?x44651) ?x44656) ?x44666) ?x44668) ?x44670) ?x44673) ?x44676)))
 (= (+ (+ ?x44677 ?x44679) ?x44682) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44729 (* ?x44603 l_0_16_51)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44727 (* ?x44600 l_0_16_50)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x44725 (* ?x44724 l_0_16_3)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44722 (* ?x44594 l_0_16_22)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44720 (* ?x44591 l_0_16_163)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44719 (* ?x34784 l_0_16_162)))
 (= (+ (+ (- (- (+ ?x44719 ?x44720) ?x44722) ?x44725) ?x44727) ?x44729) 0.0))))))))))))))
(assert
 (let ((?x44768 (* l_0_16_6 l_0_16_6)))
 (let ((?x44766 (* l_0_16_5 l_0_16_5)))
 (let ((?x44764 (* l_0_16_4 l_0_16_4)))
 (let ((?x44762 (* l_0_16_34 l_0_16_34)))
 (let ((?x44760 (* l_0_16_33 l_0_16_33)))
 (let ((?x44758 (* l_0_16_32 l_0_16_32)))
 (let ((?x44756 (* l_0_16_146 l_0_16_146)))
 (let ((?x44757 (+ (+ (* l_0_16_144 l_0_16_144) (* l_0_16_145 l_0_16_145)) ?x44756)))
 (= (- (- (- (+ (+ (+ ?x44757 ?x44758) ?x44760) ?x44762) ?x44764) ?x44766) ?x44768) 0.0))))))))))
(assert
 (let ((?x44802 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x44799 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x44796 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44793 (* ?x44792 l_0_16_37)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44790 (* ?x44789 l_0_16_36)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44787 (* ?x44786 l_0_16_35)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44784 (* ?x44783 l_0_16_149)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44781 (* ?x44780 l_0_16_148)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44779 (* ?x9897 l_0_16_147)))
 (let ((?x44800 (- (- (+ (+ (+ (+ (+ ?x44779 ?x44781) ?x44784) ?x44787) ?x44790) ?x44793) ?x44796) ?x44799)))
 (= (- ?x44800 ?x44802) 0.0))))))))))))))))))
(assert
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44853 (* ?x44792 l_0_16_41)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44851 (* ?x44789 l_0_16_40)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44849 (* ?x44786 l_0_16_39)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44847 (* ?x44783 l_0_16_153)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44845 (* ?x44780 l_0_16_152)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44843 (* ?x9897 l_0_16_151)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x44841 (* ?x44242 l_0_16_6)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x44839 (* ?x44239 l_0_16_5)))
 (let ((?x44846 (+ (+ (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x44839) ?x44841) ?x44843) ?x44845)))
 (= (+ (+ (+ (+ ?x44846 ?x44847) ?x44849) ?x44851) ?x44853) 0.0)))))))))))))))))))
(assert
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x44908 (* ?x44907 l_0_16_97)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x44905 (* ?x44904 l_0_16_96)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x44902 (* ?x44901 l_0_16_95)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x44899 (* ?x44898 l_0_16_69)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x44896 (* ?x44895 l_0_16_68)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x44893 (* ?x44892 l_0_16_67)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44890 (* ?x44792 l_0_16_46)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44888 (* ?x44789 l_0_16_45)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44886 (* ?x44786 l_0_16_44)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x44884 (* ?x44883 l_0_16_6)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x44881 (* ?x44665 l_0_16_5)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x44879 (* ?x44655 l_0_16_4)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44877 (* ?x44783 l_0_16_158)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44875 (* ?x44780 l_0_16_157)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44874 (* ?x9897 l_0_16_156)))
 (let ((?x44889 (+ (+ (- (- (- (+ (+ ?x44874 ?x44875) ?x44877) ?x44879) ?x44881) ?x44884) ?x44886) ?x44888)))
 (let ((?x44909 (+ (+ (+ (- (- (- (+ ?x44889 ?x44890) ?x44893) ?x44896) ?x44899) ?x44902) ?x44905) ?x44908)))
 (= ?x44909 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44962 (* ?x44792 l_0_16_52)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44960 (* ?x44789 l_0_16_51)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44958 (* ?x44786 l_0_16_50)))
 (let ((?x44955 (* 2.0 l_0_16_24)))
 (let ((?x44956 (* ?x44955 l_0_16_6)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x44953 (* ?x44724 l_0_16_5)))
 (let ((?x44950 (* 2.0 l_0_16_22)))
 (let ((?x44951 (* ?x44950 l_0_16_4)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44948 (* ?x44783 l_0_16_164)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44946 (* ?x44780 l_0_16_163)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44945 (* ?x9897 l_0_16_162)))
 (let ((?x44961 (+ (+ (- (- (- (+ (+ ?x44945 ?x44946) ?x44948) ?x44951) ?x44953) ?x44956) ?x44958) ?x44960)))
 (= (+ ?x44961 ?x44962) 0.0)))))))))))))))))))))
(assert
 (let ((?x45017 (* l_0_16_9 l_0_16_9)))
 (let ((?x45015 (* l_0_16_8 l_0_16_8)))
 (let ((?x45013 (* l_0_16_7 l_0_16_7)))
 (let ((?x45011 (* l_0_16_38 l_0_16_38)))
 (let ((?x45009 (* l_0_16_37 l_0_16_37)))
 (let ((?x45007 (* l_0_16_36 l_0_16_36)))
 (let ((?x45005 (* l_0_16_35 l_0_16_35)))
 (let ((?x45003 (* l_0_16_150 l_0_16_150)))
 (let ((?x45001 (* l_0_16_149 l_0_16_149)))
 (let ((?x44999 (* l_0_16_148 l_0_16_148)))
 (let ((?x45000 (+ (+ (* (- l_0_16_10) l_0_16_10) (* l_0_16_147 l_0_16_147)) ?x44999)))
 (let ((?x45014 (- (+ (+ (+ (+ (+ (+ ?x45000 ?x45001) ?x45003) ?x45005) ?x45007) ?x45009) ?x45011) ?x45013)))
 (= (- (- ?x45014 ?x45015) ?x45017) 0.0))))))))))))))
(assert
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45067 (* ?x45066 l_0_16_42)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45064 (* ?x45063 l_0_16_41)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45061 (* ?x45060 l_0_16_40)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45058 (* ?x45057 l_0_16_39)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45055 (* ?x45054 l_0_16_154)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45052 (* ?x45051 l_0_16_153)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45049 (* ?x45048 l_0_16_152)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45046 (* ?x45045 l_0_16_151)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x45043 (* ?x44242 l_0_16_9)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x45041 (* ?x44239 l_0_16_8)))
 (let ((?x44236 (* 2.0 l_0_16_11)))
 (let ((?x45039 (* ?x44236 l_0_16_7)))
 (let ((?x45047 (+ (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x45039) ?x45041) ?x45043) ?x45046)))
 (let ((?x45068 (+ (+ (+ (+ (+ (+ (+ ?x45047 ?x45049) ?x45052) ?x45055) ?x45058) ?x45061) ?x45064) ?x45067)))
 (= ?x45068 0.0))))))))))))))))))))))))))
(assert
 (let ((?x45148 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x45145 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x45142 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x45139 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x45136 (* ?x45135 l_0_16_70)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x45133 (* ?x45132 l_0_16_69)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x45130 (* ?x45129 l_0_16_68)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x45127 (* ?x45126 l_0_16_67)))
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45124 (* ?x45066 l_0_16_47)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45122 (* ?x45063 l_0_16_46)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45120 (* ?x45060 l_0_16_45)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45118 (* ?x45057 l_0_16_44)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x45116 (* ?x44883 l_0_16_9)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x45114 (* ?x44665 l_0_16_8)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x45112 (* ?x44655 l_0_16_7)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45099 (* ?x45054 l_0_16_159)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45095 (* ?x45051 l_0_16_158)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45091 (* ?x45048 l_0_16_157)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45087 (* ?x45045 l_0_16_156)))
 (let ((?x45100 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_10) l_0_16_19) ?x45087) ?x45091) ?x45095) ?x45099)))
 (let ((?x45125 (+ (+ (+ (+ (- (- (- ?x45100 ?x45112) ?x45114) ?x45116) ?x45118) ?x45120) ?x45122) ?x45124)))
 (let ((?x45146 (+ (+ (+ (- (- (- (- ?x45125 ?x45127) ?x45130) ?x45133) ?x45136) ?x45139) ?x45142) ?x45145)))
 (= (+ ?x45146 ?x45148) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45223 (* ?x45066 l_0_16_53)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45221 (* ?x45063 l_0_16_52)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45219 (* ?x45060 l_0_16_51)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45217 (* ?x45057 l_0_16_50)))
 (let ((?x44955 (* 2.0 l_0_16_24)))
 (let ((?x45215 (* ?x44955 l_0_16_9)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x45213 (* ?x44724 l_0_16_8)))
 (let ((?x44950 (* 2.0 l_0_16_22)))
 (let ((?x45211 (* ?x44950 l_0_16_7)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45209 (* ?x45054 l_0_16_165)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45207 (* ?x45051 l_0_16_164)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45205 (* ?x45048 l_0_16_163)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45203 (* ?x45045 l_0_16_162)))
 (let ((?x45210 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_10) l_0_16_25) ?x45203) ?x45205) ?x45207) ?x45209)))
 (let ((?x45224 (+ (+ (+ (+ (- (- (- ?x45210 ?x45211) ?x45213) ?x45215) ?x45217) ?x45219) ?x45221) ?x45223)))
 (= ?x45224 0.0))))))))))))))))))))))))))
(assert
 (let ((?x45287 (* l_0_16_43 l_0_16_43)))
 (let ((?x45285 (* l_0_16_42 l_0_16_42)))
 (let ((?x45283 (* l_0_16_41 l_0_16_41)))
 (let ((?x45281 (* l_0_16_40 l_0_16_40)))
 (let ((?x45279 (* l_0_16_39 l_0_16_39)))
 (let ((?x45277 (* l_0_16_155 l_0_16_155)))
 (let ((?x45275 (* l_0_16_154 l_0_16_154)))
 (let ((?x45273 (* l_0_16_153 l_0_16_153)))
 (let ((?x45271 (* l_0_16_152 l_0_16_152)))
 (let ((?x45269 (* l_0_16_151 l_0_16_151)))
 (let ((?x45267 (* l_0_16_15 l_0_16_15)))
 (let ((?x45265 (* l_0_16_14 l_0_16_14)))
 (let ((?x45263 (* l_0_16_13 l_0_16_13)))
 (let ((?x45264 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x45263)))
 (let ((?x45278 (+ (+ (+ (+ (+ (- (- ?x45264 ?x45265) ?x45267) ?x45269) ?x45271) ?x45273) ?x45275) ?x45277)))
 (= (+ (+ (+ (+ (+ ?x45278 ?x45279) ?x45281) ?x45283) ?x45285) ?x45287) 0.0)))))))))))))))))
(assert
 (let ((?x45361 (* l_0_16_99 l_0_16_99)))
 (let ((?x45359 (* l_0_16_98 l_0_16_98)))
 (let ((?x45357 (* l_0_16_97 l_0_16_97)))
 (let ((?x45355 (* l_0_16_96 l_0_16_96)))
 (let ((?x45353 (* l_0_16_95 l_0_16_95)))
 (let ((?x45351 (* l_0_16_71 l_0_16_71)))
 (let ((?x45349 (* l_0_16_70 l_0_16_70)))
 (let ((?x45347 (* l_0_16_69 l_0_16_69)))
 (let ((?x45345 (* l_0_16_68 l_0_16_68)))
 (let ((?x45343 (* l_0_16_67 l_0_16_67)))
 (let ((?x44284 (* 2.0 l_0_16_43)))
 (let ((?x45341 (* ?x44284 l_0_16_48)))
 (let ((?x44281 (* 2.0 l_0_16_42)))
 (let ((?x45339 (* ?x44281 l_0_16_47)))
 (let ((?x44278 (* 2.0 l_0_16_41)))
 (let ((?x45337 (* ?x44278 l_0_16_46)))
 (let ((?x44275 (* 2.0 l_0_16_40)))
 (let ((?x45335 (* ?x44275 l_0_16_45)))
 (let ((?x44272 (* 2.0 l_0_16_39)))
 (let ((?x45333 (* ?x44272 l_0_16_44)))
 (let ((?x44390 (* 2.0 l_0_16_155)))
 (let ((?x45331 (* ?x44390 l_0_16_160)))
 (let ((?x44387 (* 2.0 l_0_16_154)))
 (let ((?x45329 (* ?x44387 l_0_16_159)))
 (let ((?x44384 (* 2.0 l_0_16_153)))
 (let ((?x45327 (* ?x44384 l_0_16_158)))
 (let ((?x44381 (* 2.0 l_0_16_152)))
 (let ((?x45325 (* ?x44381 l_0_16_157)))
 (let ((?x44378 (* 2.0 l_0_16_151)))
 (let ((?x45323 (* ?x44378 l_0_16_156)))
 (let ((?x44251 (* 2.0 l_0_16_15)))
 (let ((?x45321 (* ?x44251 l_0_16_20)))
 (let ((?x44245 (* 2.0 l_0_16_14)))
 (let ((?x45319 (* ?x44245 l_0_16_19)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x45317 (* ?x44242 l_0_16_18)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x45315 (* ?x44239 l_0_16_17)))
 (let ((?x45322 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_16) ?x45315) ?x45317) ?x45319) ?x45321)))
 (let ((?x45336 (+ (+ (+ (+ (+ (+ (+ ?x45322 ?x45323) ?x45325) ?x45327) ?x45329) ?x45331) ?x45333) ?x45335)))
 (let ((?x45350 (- (- (- (- (+ (+ (+ ?x45336 ?x45337) ?x45339) ?x45341) ?x45343) ?x45345) ?x45347) ?x45349)))
 (= (+ (+ (+ (+ (+ (- ?x45350 ?x45351) ?x45353) ?x45355) ?x45357) ?x45359) ?x45361) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44284 (* 2.0 l_0_16_43)))
 (let ((?x44285 (* ?x44284 l_0_16_54)))
 (let ((?x44281 (* 2.0 l_0_16_42)))
 (let ((?x44282 (* ?x44281 l_0_16_53)))
 (let ((?x44278 (* 2.0 l_0_16_41)))
 (let ((?x44279 (* ?x44278 l_0_16_52)))
 (let ((?x44275 (* 2.0 l_0_16_40)))
 (let ((?x44276 (* ?x44275 l_0_16_51)))
 (let ((?x44272 (* 2.0 l_0_16_39)))
 (let ((?x44273 (* ?x44272 l_0_16_50)))
 (let ((?x44390 (* 2.0 l_0_16_155)))
 (let ((?x44391 (* ?x44390 l_0_16_166)))
 (let ((?x44387 (* 2.0 l_0_16_154)))
 (let ((?x44388 (* ?x44387 l_0_16_165)))
 (let ((?x44384 (* 2.0 l_0_16_153)))
 (let ((?x44385 (* ?x44384 l_0_16_164)))
 (let ((?x44381 (* 2.0 l_0_16_152)))
 (let ((?x44382 (* ?x44381 l_0_16_163)))
 (let ((?x44378 (* 2.0 l_0_16_151)))
 (let ((?x44379 (* ?x44378 l_0_16_162)))
 (let ((?x44251 (* 2.0 l_0_16_15)))
 (let ((?x44252 (* ?x44251 l_0_16_26)))
 (let ((?x44245 (* 2.0 l_0_16_14)))
 (let ((?x44246 (* ?x44245 l_0_16_25)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x44243 (* ?x44242 l_0_16_24)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x44240 (* ?x44239 l_0_16_23)))
 (let ((?x45410 (- (- (- (- (* (* (- 2.0) l_0_16_11) l_0_16_22) ?x44240) ?x44243) ?x44246) ?x44252)))
 (let ((?x45417 (+ (+ (+ (+ (+ (+ (+ ?x45410 ?x44379) ?x44382) ?x44385) ?x44388) ?x44391) ?x44273) ?x44276)))
 (= (+ (+ (+ ?x45417 ?x44279) ?x44282) ?x44285) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x45484 (* ?x44422 l_0_16_76)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x45482 (* ?x44419 l_0_16_75)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x45480 (* ?x44416 l_0_16_74)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x45478 (* ?x44413 l_0_16_73)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x45476 (* ?x44410 l_0_16_72)))
 (let ((?x45474 (* l_0_16_49 l_0_16_49)))
 (let ((?x45472 (* l_0_16_48 l_0_16_48)))
 (let ((?x45470 (* l_0_16_47 l_0_16_47)))
 (let ((?x45468 (* l_0_16_46 l_0_16_46)))
 (let ((?x45466 (* l_0_16_45 l_0_16_45)))
 (let ((?x45464 (* l_0_16_44 l_0_16_44)))
 (let ((?x45462 (* l_0_16_21 l_0_16_21)))
 (let ((?x45460 (* l_0_16_20 l_0_16_20)))
 (let ((?x45458 (* l_0_16_19 l_0_16_19)))
 (let ((?x45456 (* l_0_16_18 l_0_16_18)))
 (let ((?x45454 (* l_0_16_17 l_0_16_17)))
 (let ((?x45452 (* l_0_16_161 l_0_16_161)))
 (let ((?x45450 (* l_0_16_160 l_0_16_160)))
 (let ((?x45448 (* l_0_16_16 l_0_16_16)))
 (let ((?x45446 (* l_0_16_159 l_0_16_159)))
 (let ((?x45444 (* l_0_16_158 l_0_16_158)))
 (let ((?x45442 (* l_0_16_157 l_0_16_157)))
 (let ((?x45440 (* l_0_16_156 l_0_16_156)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x45438 (* ?x45437 l_0_16_99)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x45435 (* ?x45434 l_0_16_98)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x45432 (* ?x45431 l_0_16_97)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x45429 (* ?x45428 l_0_16_96)))
 (let ((?x45439 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_95) ?x45429) ?x45432) ?x45435) ?x45438)))
 (let ((?x45453 (+ (+ (- (+ (+ (+ (+ ?x45439 ?x45440) ?x45442) ?x45444) ?x45446) ?x45448) ?x45450) ?x45452)))
 (let ((?x45467 (+ (+ (- (- (- (- (- ?x45453 ?x45454) ?x45456) ?x45458) ?x45460) ?x45462) ?x45464) ?x45466)))
 (let ((?x45481 (- (- (- (+ (+ (+ (+ ?x45467 ?x45468) ?x45470) ?x45472) ?x45474) ?x45476) ?x45478) ?x45480)))
 (= (- (- ?x45481 ?x45482) ?x45484) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x44423 (* ?x44422 l_0_16_82)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x44420 (* ?x44419 l_0_16_81)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x44417 (* ?x44416 l_0_16_80)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x44414 (* ?x44413 l_0_16_79)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x44411 (* ?x44410 l_0_16_78)))
 (let ((?x45583 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x45580 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x45577 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x45574 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x45571 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x45568 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x45565 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x45562 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x45559 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x45556 (* ?x44883 l_0_16_24)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x45554 (* ?x44665 l_0_16_23)))
 (let ((?x45552 (* (* 2.0 l_0_16_161) l_0_16_167)))
 (let ((?x45549 (* (* 2.0 l_0_16_160) l_0_16_166)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x45546 (* ?x44655 l_0_16_22)))
 (let ((?x45544 (* (* 2.0 l_0_16_159) l_0_16_165)))
 (let ((?x45541 (* (* 2.0 l_0_16_158) l_0_16_164)))
 (let ((?x45538 (* (* 2.0 l_0_16_157) l_0_16_163)))
 (let ((?x45535 (* (* 2.0 l_0_16_156) l_0_16_162)))
 (let ((?x44359 (* (* 2.0 l_0_16_110) l_0_16_99)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x44356 (* ?x44355 l_0_16_98)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x44353 (* ?x44352 l_0_16_97)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x44350 (* ?x44349 l_0_16_96)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x44347 (* ?x44346 l_0_16_95)))
 (let ((?x45542 (+ (+ (+ (+ (+ (+ (+ ?x44347 ?x44350) ?x44353) ?x44356) ?x44359) ?x45535) ?x45538) ?x45541)))
 (let ((?x45560 (- (- (- (+ (+ (- (+ ?x45542 ?x45544) ?x45546) ?x45549) ?x45552) ?x45554) ?x45556) ?x45559)))
 (let ((?x45581 (+ (+ (+ (+ (+ (- (- ?x45560 ?x45562) ?x45565) ?x45568) ?x45571) ?x45574) ?x45577) ?x45580)))
 (= (- (- (- (- (- (+ ?x45581 ?x45583) ?x44411) ?x44414) ?x44417) ?x44420) ?x44423) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45701 (* l_0_16_56 l_0_16_56)))
 (let ((?x45699 (* l_0_16_55 l_0_16_55)))
 (let ((?x45697 (* l_0_16_54 l_0_16_54)))
 (let ((?x45695 (* l_0_16_53 l_0_16_53)))
 (let ((?x45693 (* l_0_16_52 l_0_16_52)))
 (let ((?x45691 (* l_0_16_51 l_0_16_51)))
 (let ((?x45689 (* l_0_16_50 l_0_16_50)))
 (let ((?x45687 (* l_0_16_28 l_0_16_28)))
 (let ((?x45685 (* l_0_16_27 l_0_16_27)))
 (let ((?x45683 (* l_0_16_26 l_0_16_26)))
 (let ((?x45681 (* l_0_16_25 l_0_16_25)))
 (let ((?x45679 (* l_0_16_24 l_0_16_24)))
 (let ((?x45677 (* l_0_16_23 l_0_16_23)))
 (let ((?x45675 (* l_0_16_22 l_0_16_22)))
 (let ((?x45673 (* l_0_16_168 l_0_16_168)))
 (let ((?x45671 (* l_0_16_167 l_0_16_167)))
 (let ((?x45669 (* l_0_16_166 l_0_16_166)))
 (let ((?x45667 (* l_0_16_165 l_0_16_165)))
 (let ((?x45665 (* l_0_16_164 l_0_16_164)))
 (let ((?x45666 (+ (+ (* l_0_16_162 l_0_16_162) (* l_0_16_163 l_0_16_163)) ?x45665)))
 (let ((?x45680 (- (- (- (+ (+ (+ (+ ?x45666 ?x45667) ?x45669) ?x45671) ?x45673) ?x45675) ?x45677) ?x45679)))
 (let ((?x45694 (+ (+ (+ (- (- (- (- ?x45680 ?x45681) ?x45683) ?x45685) ?x45687) ?x45689) ?x45691) ?x45693)))
 (= (+ (+ (+ (+ ?x45694 ?x45695) ?x45697) ?x45699) ?x45701) 0.0))))))))))))))))))))))))
(assert
 (let ((?x44173 (* l_0_16_29 l_0_16_29)))
 (let ((?x45723 (- (+ (* l_0_16_1 l_0_16_1) (* 2.0 (* l_0_16_169 l_0_16_169))) (* (* 2.0 l_0_16_197) l_0_16_198))))
 (let ((?x45727 (- (- ?x45723 (* (* 2.0 l_0_16_225) l_0_16_226)) (* (* 2.0 l_0_16_253) l_0_16_254))))
 (= (- (- ?x45727 (* (* 2.0 l_0_16_281) l_0_16_282)) ?x44173) 0.0)))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44270 (* ?x44269 l_0_16_30)))
 (let ((?x45767 (* l_0_16_283 l_0_16_283)))
 (let ((?x45765 (* l_0_16_282 l_0_16_282)))
 (let ((?x45763 (* l_0_16_255 l_0_16_255)))
 (let ((?x45761 (* l_0_16_254 l_0_16_254)))
 (let ((?x45759 (* l_0_16_227 l_0_16_227)))
 (let ((?x45757 (* l_0_16_226 l_0_16_226)))
 (let ((?x45755 (* l_0_16_199 l_0_16_199)))
 (let ((?x45753 (* l_0_16_198 l_0_16_198)))
 (let ((?x45752 (+ (* (* 2.0 l_0_16_1) l_0_16_2) (* (* 4.0 l_0_16_169) l_0_16_170))))
 (let ((?x45766 (- (- (- (- (- (- (- ?x45752 ?x45753) ?x45755) ?x45757) ?x45759) ?x45761) ?x45763) ?x45765)))
 (= (- (- ?x45766 ?x45767) ?x44270) 0.0))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x45801 (* ?x44540 l_0_16_86)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x45799 (* ?x44537 l_0_16_58)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44408 (* ?x44269 l_0_16_32)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44249 (* ?x44248 l_0_16_142)))
 (let ((?x10685 (- (* (* 2.0 l_0_16_1) l_0_16_4) (* (* 2.0 l_0_16_113) l_0_16_114))))
 (let ((?x10563 (+ (- (- ?x10685 ?x44249) (* (* 2.0 l_0_16_169) l_0_16_170)) (* (* 4.0 l_0_16_169) l_0_16_172))))
 (let ((?x10640 (- (- ?x10563 (* (* 2.0 l_0_16_198) l_0_16_200)) (* (* 2.0 l_0_16_199) l_0_16_201))))
 (let ((?x34933 (- (- ?x10640 (* (* 2.0 l_0_16_226) l_0_16_228)) (* (* 2.0 l_0_16_227) l_0_16_229))))
 (let ((?x45791 (- (- ?x34933 (* (* 2.0 l_0_16_254) l_0_16_256)) (* (* 2.0 l_0_16_255) l_0_16_257))))
 (let ((?x45797 (- (- ?x45791 (* (* 2.0 l_0_16_282) l_0_16_284)) (* (* 2.0 l_0_16_283) l_0_16_285))))
 (= (+ (- (- ?x45797 ?x44408) ?x45799) ?x45801) 0.0))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x45801 (* ?x44540 l_0_16_86)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x45799 (* ?x44537 l_0_16_58)))
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44505 (* ?x44269 l_0_16_35)))
 (let ((?x35052 (+ (* (* 2.0 l_0_16_1) l_0_16_7) (* (* 4.0 l_0_16_169) l_0_16_175))))
 (let ((?x45829 (- (- ?x35052 (* (* 2.0 l_0_16_198) l_0_16_203)) (* (* 2.0 l_0_16_199) l_0_16_204))))
 (let ((?x45833 (- (- ?x45829 (* (* 2.0 l_0_16_226) l_0_16_231)) (* (* 2.0 l_0_16_227) l_0_16_232))))
 (let ((?x45837 (- (- ?x45833 (* (* 2.0 l_0_16_254) l_0_16_259)) (* (* 2.0 l_0_16_255) l_0_16_260))))
 (let ((?x45841 (- (- ?x45837 (* (* 2.0 l_0_16_282) l_0_16_287)) (* (* 2.0 l_0_16_283) l_0_16_288))))
 (= (- (+ (- ?x45841 ?x44505) ?x45799) ?x45801) 0.0)))))))))))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44521 (* ?x44269 l_0_16_39)))
 (let ((?x45877 (+ (* (* 2.0 l_0_16_1) l_0_16_11) (* (* 4.0 l_0_16_169) l_0_16_179))))
 (let ((?x45881 (- (- ?x45877 (* (* 2.0 l_0_16_198) l_0_16_207)) (* (* 2.0 l_0_16_199) l_0_16_208))))
 (let ((?x45885 (- (- ?x45881 (* (* 2.0 l_0_16_226) l_0_16_235)) (* (* 2.0 l_0_16_227) l_0_16_236))))
 (let ((?x45889 (- (- ?x45885 (* (* 2.0 l_0_16_254) l_0_16_263)) (* (* 2.0 l_0_16_255) l_0_16_264))))
 (let ((?x45893 (- (- ?x45889 (* (* 2.0 l_0_16_282) l_0_16_291)) (* (* 2.0 l_0_16_283) l_0_16_292))))
 (= (- ?x45893 ?x44521) 0.0)))))))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44530 (* ?x44269 l_0_16_44)))
 (let ((?x45936 (+ (* (* 2.0 l_0_16_1) l_0_16_16) (* (* 4.0 l_0_16_169) l_0_16_184))))
 (let ((?x45940 (- (- ?x45936 (* (* 2.0 l_0_16_198) l_0_16_212)) (* (* 2.0 l_0_16_199) l_0_16_213))))
 (let ((?x45944 (- (- ?x45940 (* (* 2.0 l_0_16_226) l_0_16_240)) (* (* 2.0 l_0_16_227) l_0_16_241))))
 (let ((?x45948 (- (- ?x45944 (* (* 2.0 l_0_16_254) l_0_16_268)) (* (* 2.0 l_0_16_255) l_0_16_269))))
 (let ((?x45952 (- (- ?x45948 (* (* 2.0 l_0_16_282) l_0_16_296)) (* (* 2.0 l_0_16_283) l_0_16_297))))
 (= (- ?x45952 ?x44530) 0.0)))))))))
(assert
 (let ((?x44269 (* 2.0 l_0_16_29)))
 (let ((?x44561 (* ?x44269 l_0_16_50)))
 (let ((?x45992 (+ (* (* 2.0 l_0_16_1) l_0_16_22) (* (* 4.0 l_0_16_169) l_0_16_190))))
 (let ((?x45996 (- (- ?x45992 (* (* 2.0 l_0_16_198) l_0_16_218)) (* (* 2.0 l_0_16_199) l_0_16_219))))
 (let ((?x46000 (- (- ?x45996 (* (* 2.0 l_0_16_226) l_0_16_246)) (* (* 2.0 l_0_16_227) l_0_16_247))))
 (let ((?x46004 (- (- ?x46000 (* (* 2.0 l_0_16_254) l_0_16_274)) (* (* 2.0 l_0_16_255) l_0_16_275))))
 (let ((?x46008 (- (- ?x46004 (* (* 2.0 l_0_16_282) l_0_16_302)) (* (* 2.0 l_0_16_283) l_0_16_303))))
 (= (- ?x46008 ?x44561) 0.0)))))))))
(assert
 (let ((?x44581 (* l_0_16_31 l_0_16_31)))
 (let ((?x44579 (* l_0_16_30 l_0_16_30)))
 (let ((?x44577 (* l_0_16_3 l_0_16_3)))
 (let ((?x44570 (* l_0_16_2 l_0_16_2)))
 (let ((?x11229 (* l_0_16_171 l_0_16_171)))
 (let ((?x11255 (* 2.0 ?x11229)))
 (let ((?x35224 (* l_0_16_170 l_0_16_170)))
 (let ((?x35229 (* 2.0 ?x35224)))
 (= (- (- (+ (+ (+ ?x35229 ?x11255) ?x44570) ?x44577) ?x44579) ?x44581) 0.0))))))))))
(assert
 (let ((?x46058 (* l_0_16_87 l_0_16_87)))
 (let ((?x46056 (* l_0_16_86 l_0_16_86)))
 (let ((?x46054 (* l_0_16_59 l_0_16_59)))
 (let ((?x46052 (* l_0_16_58 l_0_16_58)))
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44604 (* ?x44603 l_0_16_33)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44601 (* ?x44600 l_0_16_32)))
 (let ((?x44597 (* 2.0 l_0_16_3)))
 (let ((?x44598 (* ?x44597 l_0_16_5)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44595 (* ?x44594 l_0_16_4)))
 (let ((?x11229 (* l_0_16_171 l_0_16_171)))
 (let ((?x35224 (* l_0_16_170 l_0_16_170)))
 (let ((?x44567 (* l_0_16_143 l_0_16_143)))
 (let ((?x44565 (* l_0_16_142 l_0_16_142)))
 (let ((?x35250 (- (- (* (- l_0_16_114) l_0_16_114) (* l_0_16_115 l_0_16_115)) ?x44565)))
 (let ((?x46046 (+ (- (+ (- ?x35250 ?x44567) (* (* 4.0 l_0_16_170) l_0_16_172)) ?x35224) (* (* 4.0 l_0_16_171) l_0_16_173))))
 (let ((?x46055 (- (- (- (- (+ (+ (- ?x46046 ?x11229) ?x44595) ?x44598) ?x44601) ?x44604) ?x46052) ?x46054)))
 (= (+ (+ ?x46055 ?x46056) ?x46058) 0.0)))))))))))))))))))))
(assert
 (let ((?x46058 (* l_0_16_87 l_0_16_87)))
 (let ((?x46056 (* l_0_16_86 l_0_16_86)))
 (let ((?x46054 (* l_0_16_59 l_0_16_59)))
 (let ((?x46052 (* l_0_16_58 l_0_16_58)))
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44636 (* ?x44603 l_0_16_36)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44634 (* ?x44600 l_0_16_35)))
 (let ((?x44597 (* 2.0 l_0_16_3)))
 (let ((?x44632 (* ?x44597 l_0_16_8)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44630 (* ?x44594 l_0_16_7)))
 (let ((?x46074 (+ (* (* 4.0 l_0_16_170) l_0_16_175) (* (* 4.0 l_0_16_171) l_0_16_176))))
 (let ((?x46081 (- (+ (+ (- (- (+ (+ ?x46074 ?x44630) ?x44632) ?x44634) ?x44636) ?x46052) ?x46054) ?x46056)))
 (= (- ?x46081 ?x46058) 0.0))))))))))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x9870 (* ?x44603 l_0_16_40)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x34216 (* ?x44600 l_0_16_39)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x34776 (* ?x44239 l_0_16_3)))
 (let ((?x46091 (+ (+ (* (* 2.0 l_0_16_11) l_0_16_2) ?x34776) (* (* 4.0 l_0_16_170) l_0_16_179))))
 (= (- (- (+ ?x46091 (* (* 4.0 l_0_16_171) l_0_16_180)) ?x34216) ?x9870) 0.0)))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44670 (* ?x44603 l_0_16_45)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44668 (* ?x44600 l_0_16_44)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x44666 (* ?x44665 l_0_16_3)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x44656 (* ?x44655 l_0_16_2)))
 (let ((?x46109 (+ (+ (+ ?x44656 ?x44666) (* (* 4.0 l_0_16_170) l_0_16_184)) (* (* 4.0 l_0_16_171) l_0_16_185))))
 (= (- (- ?x46109 ?x44668) ?x44670) 0.0)))))))))))
(assert
 (let ((?x44603 (* 2.0 l_0_16_31)))
 (let ((?x44729 (* ?x44603 l_0_16_51)))
 (let ((?x44600 (* 2.0 l_0_16_30)))
 (let ((?x44727 (* ?x44600 l_0_16_50)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x44725 (* ?x44724 l_0_16_3)))
 (let ((?x44594 (* 2.0 l_0_16_2)))
 (let ((?x44722 (* ?x44594 l_0_16_22)))
 (let ((?x35434 (+ (* (* 4.0 l_0_16_170) l_0_16_190) (* (* 4.0 l_0_16_171) l_0_16_191))))
 (= (- (- (+ (+ ?x35434 ?x44722) ?x44725) ?x44727) ?x44729) 0.0)))))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x46155 (* ?x44681 l_0_16_89)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x46153 (* ?x44678 l_0_16_88)))
 (let ((?x44768 (* l_0_16_6 l_0_16_6)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46150 (* ?x44675 l_0_16_61)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46148 (* ?x44672 l_0_16_60)))
 (let ((?x44766 (* l_0_16_5 l_0_16_5)))
 (let ((?x44764 (* l_0_16_4 l_0_16_4)))
 (let ((?x44762 (* l_0_16_34 l_0_16_34)))
 (let ((?x44760 (* l_0_16_33 l_0_16_33)))
 (let ((?x44758 (* l_0_16_32 l_0_16_32)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44592 (* ?x44591 l_0_16_145)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44590 (* ?x34784 l_0_16_144)))
 (let ((?x46125 (- (* (* (- 2.0) l_0_16_114) l_0_16_116) (* (* 2.0 l_0_16_115) l_0_16_117))))
 (let ((?x46133 (- (- (- (- ?x46125 ?x44590) ?x44592) (* (* 2.0 l_0_16_170) l_0_16_172)) (* (* 2.0 l_0_16_171) l_0_16_173))))
 (let ((?x46139 (+ (+ ?x46133 (* 2.0 (* l_0_16_172 l_0_16_172))) (* 2.0 (* l_0_16_173 l_0_16_173)))))
 (let ((?x46145 (- (- (- (+ ?x46139 (* 2.0 (* l_0_16_174 l_0_16_174))) ?x44758) ?x44760) ?x44762)))
 (let ((?x46156 (+ (+ (+ (- (- (+ (+ ?x46145 ?x44764) ?x44766) ?x46148) ?x46150) ?x44768) ?x46153) ?x46155)))
 (= ?x46156 0.0)))))))))))))))))))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x46201 (* ?x44681 l_0_16_92)))
 (let ((?x46155 (* ?x44681 l_0_16_89)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x46198 (* ?x44678 l_0_16_91)))
 (let ((?x46153 (* ?x44678 l_0_16_88)))
 (let ((?x44802 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46194 (* ?x44675 l_0_16_64)))
 (let ((?x46150 (* ?x44675 l_0_16_61)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46191 (* ?x44672 l_0_16_63)))
 (let ((?x46148 (* ?x44672 l_0_16_60)))
 (let ((?x44799 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x44796 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44793 (* ?x44792 l_0_16_37)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44790 (* ?x44789 l_0_16_36)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44787 (* ?x44786 l_0_16_35)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44628 (* ?x44591 l_0_16_148)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44627 (* ?x34784 l_0_16_147)))
 (let ((?x25670 (- (* (* (- 2.0) l_0_16_114) l_0_16_119) (* (* 2.0 l_0_16_115) l_0_16_120))))
 (let ((?x46175 (- (- (- (- ?x25670 ?x44627) ?x44628) (* (* 2.0 l_0_16_170) l_0_16_175)) (* (* 2.0 l_0_16_171) l_0_16_176))))
 (let ((?x46181 (+ (+ ?x46175 (* (* 4.0 l_0_16_172) l_0_16_175)) (* (* 4.0 l_0_16_173) l_0_16_176))))
 (let ((?x46187 (- (- (- (+ ?x46181 (* (* 4.0 l_0_16_174) l_0_16_177)) ?x44787) ?x44790) ?x44793)))
 (let ((?x46196 (+ (- (+ (- (+ (+ (+ ?x46187 ?x44796) ?x44799) ?x46148) ?x46191) ?x46150) ?x46194) ?x44802)))
 (= (+ (- (+ (- ?x46196 ?x46153) ?x46198) ?x46155) ?x46201) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x44682 (* ?x44681 l_0_16_96)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x44679 (* ?x44678 l_0_16_95)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x44676 (* ?x44675 l_0_16_68)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x44673 (* ?x44672 l_0_16_67)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44853 (* ?x44792 l_0_16_41)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44851 (* ?x44789 l_0_16_40)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44849 (* ?x44786 l_0_16_39)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x34765 (* ?x44591 l_0_16_152)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x24986 (* ?x34784 l_0_16_151)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x44841 (* ?x44242 l_0_16_6)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x44839 (* ?x44239 l_0_16_5)))
 (let ((?x46220 (- (* (* 2.0 l_0_16_11) l_0_16_4) (* (* 2.0 l_0_16_114) l_0_16_123))))
 (let ((?x46225 (- (+ (+ (- ?x46220 (* (* 2.0 l_0_16_115) l_0_16_124)) ?x44839) ?x44841) ?x24986)))
 (let ((?x46230 (- (- (- ?x46225 ?x34765) (* (* 2.0 l_0_16_170) l_0_16_179)) (* (* 2.0 l_0_16_171) l_0_16_180))))
 (let ((?x46234 (+ (+ ?x46230 (* (* 4.0 l_0_16_172) l_0_16_179)) (* (* 4.0 l_0_16_173) l_0_16_180))))
 (let ((?x46239 (- (- (- (+ ?x46234 (* (* 4.0 l_0_16_174) l_0_16_181)) ?x44849) ?x44851) ?x44853)))
 (= (+ (+ (- (- ?x46239 ?x44673) ?x44676) ?x44679) ?x44682) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46274 (* ?x44675 l_0_16_73)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46272 (* ?x44672 l_0_16_72)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44890 (* ?x44792 l_0_16_46)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44888 (* ?x44789 l_0_16_45)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44886 (* ?x44786 l_0_16_44)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x44884 (* ?x44883 l_0_16_6)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x44881 (* ?x44665 l_0_16_5)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x44879 (* ?x44655 l_0_16_4)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44651 (* ?x44591 l_0_16_157)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44649 (* ?x34784 l_0_16_156)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x35949 (* ?x45428 l_0_16_87)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x35979 (* ?x45426 l_0_16_86)))
 (let ((?x35952 (+ ?x35979 ?x35949)))
 (let ((?x35916 (- (- ?x35952 (* (* 2.0 l_0_16_114) l_0_16_128)) (* (* 2.0 l_0_16_115) l_0_16_129))))
 (let ((?x46259 (- (+ (+ (- (- ?x35916 ?x44649) ?x44651) ?x44879) ?x44881) (* (* 2.0 l_0_16_170) l_0_16_184))))
 (let ((?x46263 (+ (- ?x46259 (* (* 2.0 l_0_16_171) l_0_16_185)) (* (* 4.0 l_0_16_172) l_0_16_184))))
 (let ((?x46267 (+ (+ ?x46263 (* (* 4.0 l_0_16_173) l_0_16_185)) (* (* 4.0 l_0_16_174) l_0_16_186))))
 (= (- (- (- (- (- (+ ?x46267 ?x44884) ?x44886) ?x44888) ?x44890) ?x46272) ?x46274) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46330 (* ?x44675 l_0_16_79)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46328 (* ?x44672 l_0_16_78)))
 (let ((?x44792 (* 2.0 l_0_16_34)))
 (let ((?x44962 (* ?x44792 l_0_16_52)))
 (let ((?x44789 (* 2.0 l_0_16_33)))
 (let ((?x44960 (* ?x44789 l_0_16_51)))
 (let ((?x44786 (* 2.0 l_0_16_32)))
 (let ((?x44958 (* ?x44786 l_0_16_50)))
 (let ((?x44955 (* 2.0 l_0_16_24)))
 (let ((?x44956 (* ?x44955 l_0_16_6)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x44953 (* ?x44724 l_0_16_5)))
 (let ((?x44950 (* 2.0 l_0_16_22)))
 (let ((?x44951 (* ?x44950 l_0_16_4)))
 (let ((?x44591 (* 2.0 l_0_16_143)))
 (let ((?x44720 (* ?x44591 l_0_16_163)))
 (let ((?x34784 (* 2.0 l_0_16_142)))
 (let ((?x44719 (* ?x34784 l_0_16_162)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46304 (* ?x44349 l_0_16_87)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x36169 (* ?x44346 l_0_16_86)))
 (let ((?x46305 (+ ?x36169 ?x46304)))
 (let ((?x46309 (- (- ?x46305 (* (* 2.0 l_0_16_114) l_0_16_134)) (* (* 2.0 l_0_16_115) l_0_16_135))))
 (let ((?x46315 (- (- (- (- ?x46309 ?x44719) ?x44720) (* (* 2.0 l_0_16_170) l_0_16_190)) (* (* 2.0 l_0_16_171) l_0_16_191))))
 (let ((?x46319 (+ (+ ?x46315 (* (* 4.0 l_0_16_172) l_0_16_190)) (* (* 4.0 l_0_16_173) l_0_16_191))))
 (let ((?x46324 (+ (+ (+ (+ ?x46319 (* (* 4.0 l_0_16_174) l_0_16_192)) ?x44951) ?x44953) ?x44956)))
 (= (- (- (- (- (- ?x46324 ?x44958) ?x44960) ?x44962) ?x46328) ?x46330) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x45017 (* l_0_16_9 l_0_16_9)))
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x46201 (* ?x44681 l_0_16_92)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x46198 (* ?x44678 l_0_16_91)))
 (let ((?x45015 (* l_0_16_8 l_0_16_8)))
 (let ((?x45013 (* l_0_16_7 l_0_16_7)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46194 (* ?x44675 l_0_16_64)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46191 (* ?x44672 l_0_16_63)))
 (let ((?x45011 (* l_0_16_38 l_0_16_38)))
 (let ((?x45009 (* l_0_16_37 l_0_16_37)))
 (let ((?x45007 (* l_0_16_36 l_0_16_36)))
 (let ((?x45005 (* l_0_16_35 l_0_16_35)))
 (let ((?x46352 (* l_0_16_178 l_0_16_178)))
 (let ((?x46353 (* 2.0 ?x46352)))
 (let ((?x12005 (* l_0_16_177 l_0_16_177)))
 (let ((?x12006 (* 2.0 ?x12005)))
 (let ((?x36411 (* l_0_16_176 l_0_16_176)))
 (let ((?x36414 (* 2.0 ?x36411)))
 (let ((?x36413 (* l_0_16_175 l_0_16_175)))
 (let ((?x36391 (* 2.0 ?x36413)))
 (let ((?x10006 (* l_0_16_10 l_0_16_10)))
 (let ((?x46357 (- (- (- (+ (+ (+ (+ ?x10006 ?x36391) ?x36414) ?x12006) ?x46353) ?x45005) ?x45007) ?x45009)))
 (let ((?x46364 (- (- (+ (+ (+ (+ (- ?x46357 ?x45011) ?x46191) ?x46194) ?x45013) ?x45015) ?x46198) ?x46201)))
 (= (+ ?x46364 ?x45017) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x44682 (* ?x44681 l_0_16_96)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x44679 (* ?x44678 l_0_16_95)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x44676 (* ?x44675 l_0_16_68)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x44673 (* ?x44672 l_0_16_67)))
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45067 (* ?x45066 l_0_16_42)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45064 (* ?x45063 l_0_16_41)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45061 (* ?x45060 l_0_16_40)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45058 (* ?x45057 l_0_16_39)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x45043 (* ?x44242 l_0_16_9)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x45041 (* ?x44239 l_0_16_8)))
 (let ((?x44236 (* 2.0 l_0_16_11)))
 (let ((?x45039 (* ?x44236 l_0_16_7)))
 (let ((?x12080 (+ (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_14) ?x45039) ?x45041) ?x45043) (* (* 4.0 l_0_16_175) l_0_16_179))))
 (let ((?x36467 (+ (+ ?x12080 (* (* 4.0 l_0_16_176) l_0_16_180)) (* (* 4.0 l_0_16_177) l_0_16_181))))
 (let ((?x23553 (- (- (- (+ ?x36467 (* (* 4.0 l_0_16_178) l_0_16_182)) ?x45058) ?x45061) ?x45064)))
 (= (- (- (+ (+ (- ?x23553 ?x45067) ?x44673) ?x44676) ?x44679) ?x44682) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46274 (* ?x44675 l_0_16_73)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46272 (* ?x44672 l_0_16_72)))
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45124 (* ?x45066 l_0_16_47)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45122 (* ?x45063 l_0_16_46)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45120 (* ?x45060 l_0_16_45)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45118 (* ?x45057 l_0_16_44)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x45116 (* ?x44883 l_0_16_9)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x45114 (* ?x44665 l_0_16_8)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x45112 (* ?x44655 l_0_16_7)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x35949 (* ?x45428 l_0_16_87)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x35979 (* ?x45426 l_0_16_86)))
 (let ((?x46401 (+ (+ (- (- (* (* 2.0 l_0_16_10) l_0_16_19) ?x35979) ?x35949) ?x45112) ?x45114)))
 (let ((?x46405 (+ (+ ?x46401 (* (* 4.0 l_0_16_175) l_0_16_184)) (* (* 4.0 l_0_16_176) l_0_16_185))))
 (let ((?x46409 (+ (+ ?x46405 (* (* 4.0 l_0_16_177) l_0_16_186)) (* (* 4.0 l_0_16_178) l_0_16_187))))
 (let ((?x46416 (+ (+ (- (- (- (- (+ ?x46409 ?x45116) ?x45118) ?x45120) ?x45122) ?x45124) ?x46272) ?x46274)))
 (= ?x46416 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46330 (* ?x44675 l_0_16_79)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46328 (* ?x44672 l_0_16_78)))
 (let ((?x45066 (* 2.0 l_0_16_38)))
 (let ((?x45223 (* ?x45066 l_0_16_53)))
 (let ((?x45063 (* 2.0 l_0_16_37)))
 (let ((?x45221 (* ?x45063 l_0_16_52)))
 (let ((?x45060 (* 2.0 l_0_16_36)))
 (let ((?x45219 (* ?x45060 l_0_16_51)))
 (let ((?x45057 (* 2.0 l_0_16_35)))
 (let ((?x45217 (* ?x45057 l_0_16_50)))
 (let ((?x44955 (* 2.0 l_0_16_24)))
 (let ((?x45215 (* ?x44955 l_0_16_9)))
 (let ((?x44724 (* 2.0 l_0_16_23)))
 (let ((?x45213 (* ?x44724 l_0_16_8)))
 (let ((?x44950 (* 2.0 l_0_16_22)))
 (let ((?x45211 (* ?x44950 l_0_16_7)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46304 (* ?x44349 l_0_16_87)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x36169 (* ?x44346 l_0_16_86)))
 (let ((?x12138 (+ (- (- (* (* 2.0 l_0_16_10) l_0_16_25) ?x36169) ?x46304) (* (* 4.0 l_0_16_175) l_0_16_190))))
 (let ((?x46426 (+ (+ ?x12138 (* (* 4.0 l_0_16_176) l_0_16_191)) (* (* 4.0 l_0_16_177) l_0_16_192))))
 (let ((?x46431 (+ (+ (+ (+ ?x46426 (* (* 4.0 l_0_16_178) l_0_16_193)) ?x45211) ?x45213) ?x45215)))
 (= (+ (+ (- (- (- (- ?x46431 ?x45217) ?x45219) ?x45221) ?x45223) ?x46328) ?x46330) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x45287 (* l_0_16_43 l_0_16_43)))
 (let ((?x45285 (* l_0_16_42 l_0_16_42)))
 (let ((?x45283 (* l_0_16_41 l_0_16_41)))
 (let ((?x45281 (* l_0_16_40 l_0_16_40)))
 (let ((?x45279 (* l_0_16_39 l_0_16_39)))
 (let ((?x46470 (* l_0_16_183 l_0_16_183)))
 (let ((?x46471 (* 2.0 ?x46470)))
 (let ((?x46467 (* l_0_16_182 l_0_16_182)))
 (let ((?x46468 (* 2.0 ?x46467)))
 (let ((?x46464 (* l_0_16_181 l_0_16_181)))
 (let ((?x46465 (* 2.0 ?x46464)))
 (let ((?x46461 (* l_0_16_180 l_0_16_180)))
 (let ((?x46462 (* 2.0 ?x46461)))
 (let ((?x46458 (* l_0_16_179 l_0_16_179)))
 (let ((?x46459 (* 2.0 ?x46458)))
 (let ((?x45267 (* l_0_16_15 l_0_16_15)))
 (let ((?x45265 (* l_0_16_14 l_0_16_14)))
 (let ((?x45263 (* l_0_16_13 l_0_16_13)))
 (let ((?x36786 (+ (+ (+ (* l_0_16_11 l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x45263) ?x45265)))
 (let ((?x46473 (- (+ (+ (+ (+ (+ (+ ?x36786 ?x45267) ?x46459) ?x46462) ?x46465) ?x46468) ?x46471) ?x45279)))
 (= (- (- (- (- ?x46473 ?x45281) ?x45283) ?x45285) ?x45287) 0.0))))))))))))))))))))))
(assert
 (let ((?x44284 (* 2.0 l_0_16_43)))
 (let ((?x45341 (* ?x44284 l_0_16_48)))
 (let ((?x44281 (* 2.0 l_0_16_42)))
 (let ((?x45339 (* ?x44281 l_0_16_47)))
 (let ((?x44278 (* 2.0 l_0_16_41)))
 (let ((?x45337 (* ?x44278 l_0_16_46)))
 (let ((?x44275 (* 2.0 l_0_16_40)))
 (let ((?x45335 (* ?x44275 l_0_16_45)))
 (let ((?x44272 (* 2.0 l_0_16_39)))
 (let ((?x45333 (* ?x44272 l_0_16_44)))
 (let ((?x44251 (* 2.0 l_0_16_15)))
 (let ((?x45321 (* ?x44251 l_0_16_20)))
 (let ((?x44245 (* 2.0 l_0_16_14)))
 (let ((?x45319 (* ?x44245 l_0_16_19)))
 (let ((?x44242 (* 2.0 l_0_16_13)))
 (let ((?x45317 (* ?x44242 l_0_16_18)))
 (let ((?x44239 (* 2.0 l_0_16_12)))
 (let ((?x45315 (* ?x44239 l_0_16_17)))
 (let ((?x36868 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_16) ?x45315) ?x45317) ?x45319) ?x45321)))
 (let ((?x26148 (+ (+ ?x36868 (* (* 4.0 l_0_16_179) l_0_16_184)) (* (* 4.0 l_0_16_180) l_0_16_185))))
 (let ((?x36789 (+ (+ ?x26148 (* (* 4.0 l_0_16_181) l_0_16_186)) (* (* 4.0 l_0_16_182) l_0_16_187))))
 (let ((?x12195 (- (- (- (+ ?x36789 (* (* 4.0 l_0_16_183) l_0_16_188)) ?x45333) ?x45335) ?x45337)))
 (= (- (- ?x12195 ?x45339) ?x45341) 0.0))))))))))))))))))))))))
(assert
 (let ((?x45474 (* l_0_16_49 l_0_16_49)))
 (let ((?x45472 (* l_0_16_48 l_0_16_48)))
 (let ((?x45470 (* l_0_16_47 l_0_16_47)))
 (let ((?x45468 (* l_0_16_46 l_0_16_46)))
 (let ((?x45466 (* l_0_16_45 l_0_16_45)))
 (let ((?x45464 (* l_0_16_44 l_0_16_44)))
 (let ((?x45462 (* l_0_16_21 l_0_16_21)))
 (let ((?x45460 (* l_0_16_20 l_0_16_20)))
 (let ((?x45458 (* l_0_16_19 l_0_16_19)))
 (let ((?x46498 (* l_0_16_189 l_0_16_189)))
 (let ((?x46499 (* 2.0 ?x46498)))
 (let ((?x46495 (* l_0_16_188 l_0_16_188)))
 (let ((?x46496 (* 2.0 ?x46495)))
 (let ((?x46492 (* l_0_16_187 l_0_16_187)))
 (let ((?x46493 (* 2.0 ?x46492)))
 (let ((?x46489 (* l_0_16_186 l_0_16_186)))
 (let ((?x46490 (* 2.0 ?x46489)))
 (let ((?x36928 (* l_0_16_185 l_0_16_185)))
 (let ((?x46487 (* 2.0 ?x36928)))
 (let ((?x36933 (* l_0_16_184 l_0_16_184)))
 (let ((?x36934 (* 2.0 ?x36933)))
 (let ((?x45456 (* l_0_16_18 l_0_16_18)))
 (let ((?x12297 (+ (+ (+ (* l_0_16_16 l_0_16_16) (* l_0_16_17 l_0_16_17)) ?x45456) ?x36934)))
 (let ((?x46502 (+ (+ (+ (+ (+ (+ (+ ?x12297 ?x46487) ?x46490) ?x46493) ?x46496) ?x46499) ?x45458) ?x45460)))
 (let ((?x46509 (- (- (- (- (- (- (+ ?x46502 ?x45462) ?x45464) ?x45466) ?x45468) ?x45470) ?x45472) ?x45474)))
 (= ?x46509 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x45801 (* ?x44540 l_0_16_86)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x45799 (* ?x44537 l_0_16_58)))
 (let ((?x45583 (* (* 2.0 l_0_16_49) l_0_16_55)))
 (let ((?x45580 (* (* 2.0 l_0_16_48) l_0_16_54)))
 (let ((?x45577 (* (* 2.0 l_0_16_47) l_0_16_53)))
 (let ((?x45574 (* (* 2.0 l_0_16_46) l_0_16_52)))
 (let ((?x45571 (* (* 2.0 l_0_16_45) l_0_16_51)))
 (let ((?x45568 (* (* 2.0 l_0_16_44) l_0_16_50)))
 (let ((?x45565 (* (* 2.0 l_0_16_21) l_0_16_27)))
 (let ((?x45562 (* (* 2.0 l_0_16_20) l_0_16_26)))
 (let ((?x45559 (* (* 2.0 l_0_16_19) l_0_16_25)))
 (let ((?x44883 (* 2.0 l_0_16_18)))
 (let ((?x45556 (* ?x44883 l_0_16_24)))
 (let ((?x44665 (* 2.0 l_0_16_17)))
 (let ((?x45554 (* ?x44665 l_0_16_23)))
 (let ((?x44655 (* 2.0 l_0_16_16)))
 (let ((?x45546 (* ?x44655 l_0_16_22)))
 (let ((?x36943 (+ (+ (+ (+ ?x45546 ?x45554) ?x45556) (* (* 4.0 l_0_16_184) l_0_16_190)) (* (* 4.0 l_0_16_185) l_0_16_191))))
 (let ((?x26225 (+ (+ ?x36943 (* (* 4.0 l_0_16_186) l_0_16_192)) (* (* 4.0 l_0_16_187) l_0_16_193))))
 (let ((?x46515 (+ (+ ?x26225 (* (* 4.0 l_0_16_188) l_0_16_194)) (* (* 4.0 l_0_16_189) l_0_16_195))))
 (let ((?x46522 (- (- (- (- (+ (+ (+ ?x46515 ?x45559) ?x45562) ?x45565) ?x45568) ?x45571) ?x45574) ?x45577)))
 (= (+ (- (- (- ?x46522 ?x45580) ?x45583) ?x45799) ?x45801) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x45701 (* l_0_16_56 l_0_16_56)))
 (let ((?x45699 (* l_0_16_55 l_0_16_55)))
 (let ((?x45697 (* l_0_16_54 l_0_16_54)))
 (let ((?x45695 (* l_0_16_53 l_0_16_53)))
 (let ((?x45693 (* l_0_16_52 l_0_16_52)))
 (let ((?x45691 (* l_0_16_51 l_0_16_51)))
 (let ((?x45689 (* l_0_16_50 l_0_16_50)))
 (let ((?x45687 (* l_0_16_28 l_0_16_28)))
 (let ((?x45685 (* l_0_16_27 l_0_16_27)))
 (let ((?x45683 (* l_0_16_26 l_0_16_26)))
 (let ((?x45681 (* l_0_16_25 l_0_16_25)))
 (let ((?x45679 (* l_0_16_24 l_0_16_24)))
 (let ((?x45677 (* l_0_16_23 l_0_16_23)))
 (let ((?x45675 (* l_0_16_22 l_0_16_22)))
 (let ((?x46534 (* l_0_16_196 l_0_16_196)))
 (let ((?x46535 (* 2.0 ?x46534)))
 (let ((?x46531 (* l_0_16_195 l_0_16_195)))
 (let ((?x46532 (* 2.0 ?x46531)))
 (let ((?x37006 (* l_0_16_194 l_0_16_194)))
 (let ((?x46529 (* 2.0 ?x37006)))
 (let ((?x12466 (* l_0_16_193 l_0_16_193)))
 (let ((?x12468 (* 2.0 ?x12466)))
 (let ((?x37007 (* l_0_16_192 l_0_16_192)))
 (let ((?x12555 (* 2.0 ?x37007)))
 (let ((?x37010 (* l_0_16_191 l_0_16_191)))
 (let ((?x36992 (* 2.0 ?x37010)))
 (let ((?x37039 (* l_0_16_190 l_0_16_190)))
 (let ((?x37001 (* 2.0 ?x37039)))
 (let ((?x46537 (+ (+ (+ (+ (+ (+ (+ ?x37001 ?x36992) ?x12555) ?x12468) ?x46529) ?x46532) ?x46535) ?x45675)))
 (let ((?x46544 (- (+ (+ (+ (+ (+ (+ ?x46537 ?x45677) ?x45679) ?x45681) ?x45683) ?x45685) ?x45687) ?x45689)))
 (= (- (- (- (- (- (- ?x46544 ?x45691) ?x45693) ?x45695) ?x45697) ?x45699) ?x45701) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x46617 (* ?x44540 l_0_16_88)))
 (let ((?x46615 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x46612 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x46609 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x46606 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x46603 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x46600 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46597 (* ?x44537 l_0_16_60)))
 (let ((?x45552 (* (* 2.0 l_0_16_161) l_0_16_167)))
 (let ((?x45549 (* (* 2.0 l_0_16_160) l_0_16_166)))
 (let ((?x45544 (* (* 2.0 l_0_16_159) l_0_16_165)))
 (let ((?x45541 (* (* 2.0 l_0_16_158) l_0_16_164)))
 (let ((?x45538 (* (* 2.0 l_0_16_157) l_0_16_163)))
 (let ((?x45535 (* (* 2.0 l_0_16_156) l_0_16_162)))
 (let ((?x46553 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x12585 (* ?x45437 l_0_16_110)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x12691 (* ?x45434 l_0_16_109)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x12704 (* ?x45431 l_0_16_108)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x37063 (* ?x45428 l_0_16_107)))
 (let ((?x12586 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_106) ?x37063) ?x12704) ?x12691) ?x12585)))
 (let ((?x46554 (+ ?x12586 ?x46553)))
 (let ((?x46560 (- (- ?x46554 (* (* 2.0 l_0_16_128) l_0_16_134)) (* (* 2.0 l_0_16_129) l_0_16_135))))
 (let ((?x46566 (- (- ?x46560 (* (* 2.0 l_0_16_130) l_0_16_136)) (* (* 2.0 l_0_16_131) l_0_16_137))))
 (let ((?x46572 (- (- ?x46566 (* (* 2.0 l_0_16_132) l_0_16_138)) (* (* 2.0 l_0_16_133) l_0_16_139))))
 (let ((?x46581 (- (- (- (- (- (- (- ?x46572 ?x45535) ?x45538) ?x45541) ?x45544) ?x45549) ?x45552) (* (* 2.0 l_0_16_184) l_0_16_190))))
 (let ((?x46587 (- (- ?x46581 (* (* 2.0 l_0_16_185) l_0_16_191)) (* (* 2.0 l_0_16_186) l_0_16_192))))
 (let ((?x46593 (- (- ?x46587 (* (* 2.0 l_0_16_187) l_0_16_193)) (* (* 2.0 l_0_16_188) l_0_16_194))))
 (let ((?x46604 (- (- (- (- ?x46593 (* (* 2.0 l_0_16_189) l_0_16_195)) ?x46597) ?x46600) ?x46603)))
 (= (+ (- (- (- (- ?x46604 ?x46606) ?x46609) ?x46612) ?x46615) ?x46617) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x46695 (* ?x44540 l_0_16_91)))
 (let ((?x46615 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x46612 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x46609 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x46606 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x46603 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x46600 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46687 (* ?x44537 l_0_16_63)))
 (let ((?x46553 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x12585 (* ?x45437 l_0_16_110)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x12691 (* ?x45434 l_0_16_109)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x12704 (* ?x45431 l_0_16_108)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x37063 (* ?x45428 l_0_16_107)))
 (let ((?x46685 (- (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_106) ?x37063) ?x12704) ?x12691) ?x12585)))
 (let ((?x46693 (+ (+ (+ (+ (+ (- (- ?x46685 ?x46553) ?x46687) ?x46600) ?x46603) ?x46606) ?x46609) ?x46612)))
 (= (+ (+ ?x46693 ?x46615) ?x46695) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x26359 (* ?x44537 l_0_16_72)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x13086 (* ?x45426 l_0_16_85)))
 (= (- ?x13086 ?x26359) 0.0))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46703 (* ?x44537 l_0_16_78)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x46702 (* ?x44346 l_0_16_85)))
 (= (- ?x46702 ?x46703) 0.0))))))
(assert
 (let ((?x46058 (* l_0_16_87 l_0_16_87)))
 (let ((?x46056 (* l_0_16_86 l_0_16_86)))
 (let ((?x46718 (+ (- (* (- l_0_16_58) l_0_16_58) (* l_0_16_59 l_0_16_59)) ?x46056)))
 (= (+ ?x46718 ?x46058) 0.0)))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x46155 (* ?x44681 l_0_16_89)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x46153 (* ?x44678 l_0_16_88)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46150 (* ?x44675 l_0_16_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_58) l_0_16_60) ?x46150) ?x46153) ?x46155) 0.0))))))))
(assert
 (let ((?x44681 (* 2.0 l_0_16_87)))
 (let ((?x46201 (* ?x44681 l_0_16_92)))
 (let ((?x44678 (* 2.0 l_0_16_86)))
 (let ((?x46198 (* ?x44678 l_0_16_91)))
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46194 (* ?x44675 l_0_16_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_58) l_0_16_63) ?x46194) ?x46198) ?x46201) 0.0))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46274 (* ?x44675 l_0_16_73)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46272 (* ?x44672 l_0_16_72)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x35949 (* ?x45428 l_0_16_87)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x35979 (* ?x45426 l_0_16_86)))
 (let ((?x35952 (+ ?x35979 ?x35949)))
 (= (- (- ?x35952 ?x46272) ?x46274) 0.0)))))))))))
(assert
 (let ((?x44675 (* 2.0 l_0_16_59)))
 (let ((?x46330 (* ?x44675 l_0_16_79)))
 (let ((?x44672 (* 2.0 l_0_16_58)))
 (let ((?x46328 (* ?x44672 l_0_16_78)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46304 (* ?x44349 l_0_16_87)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x36169 (* ?x44346 l_0_16_86)))
 (let ((?x46305 (+ ?x36169 ?x46304)))
 (= (- (- ?x46305 ?x46328) ?x46330) 0.0)))))))))))
(assert
 (let ((?x46767 (* l_0_16_90 l_0_16_90)))
 (let ((?x46765 (* l_0_16_89 l_0_16_89)))
 (let ((?x46763 (* l_0_16_88 l_0_16_88)))
 (let ((?x46761 (* l_0_16_62 l_0_16_62)))
 (let ((?x46762 (- (- (* (- l_0_16_60) l_0_16_60) (* l_0_16_61 l_0_16_61)) ?x46761)))
 (= (+ (+ (+ ?x46762 ?x46763) ?x46765) ?x46767) 0.0)))))))
(assert
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x46794 (* ?x44907 l_0_16_93)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x46792 (* ?x44904 l_0_16_92)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x46790 (* ?x44901 l_0_16_91)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46788 (* ?x44898 l_0_16_65)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46786 (* ?x44895 l_0_16_64)))
 (let ((?x46793 (+ (+ (- (- (* (* (- 2.0) l_0_16_60) l_0_16_63) ?x46786) ?x46788) ?x46790) ?x46792)))
 (= (+ ?x46793 ?x46794) 0.0)))))))))))))
(assert
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46817 (* ?x44898 l_0_16_74)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46815 (* ?x44895 l_0_16_73)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x46813 (* ?x44892 l_0_16_72)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x46811 (* ?x45431 l_0_16_90)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x46809 (* ?x45428 l_0_16_89)))
 (let ((?x46812 (+ (+ (* (* 2.0 l_0_16_100) l_0_16_88) ?x46809) ?x46811)))
 (= (- (- (- ?x46812 ?x46813) ?x46815) ?x46817) 0.0)))))))))))))
(assert
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46838 (* ?x44898 l_0_16_80)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46836 (* ?x44895 l_0_16_79)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x26354 (* ?x44892 l_0_16_78)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x26346 (* ?x44352 l_0_16_90)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x37294 (* ?x44349 l_0_16_89)))
 (let ((?x13004 (+ (+ (* (* 2.0 l_0_16_106) l_0_16_88) ?x37294) ?x26346)))
 (= (- (- (- ?x13004 ?x26354) ?x46836) ?x46838) 0.0)))))))))))))
(assert
 (let ((?x46876 (* l_0_16_94 l_0_16_94)))
 (let ((?x46874 (* l_0_16_93 l_0_16_93)))
 (let ((?x46872 (* l_0_16_92 l_0_16_92)))
 (let ((?x46870 (* l_0_16_91 l_0_16_91)))
 (let ((?x46868 (* l_0_16_66 l_0_16_66)))
 (let ((?x46866 (* l_0_16_65 l_0_16_65)))
 (let ((?x46867 (- (- (* (- l_0_16_63) l_0_16_63) (* l_0_16_64 l_0_16_64)) ?x46866)))
 (= (+ (+ (+ (+ (- ?x46867 ?x46868) ?x46870) ?x46872) ?x46874) ?x46876) 0.0)))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46907 (* ?x45135 l_0_16_75)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46905 (* ?x45132 l_0_16_74)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46903 (* ?x45129 l_0_16_73)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46901 (* ?x45126 l_0_16_72)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x46899 (* ?x45434 l_0_16_94)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x46897 (* ?x45431 l_0_16_93)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x46895 (* ?x45428 l_0_16_92)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x37341 (* ?x45426 l_0_16_91)))
 (let ((?x46908 (- (- (- (- (+ (+ (+ ?x37341 ?x46895) ?x46897) ?x46899) ?x46901) ?x46903) ?x46905) ?x46907)))
 (= ?x46908 0.0)))))))))))))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46949 (* ?x45135 l_0_16_81)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46947 (* ?x45132 l_0_16_80)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46945 (* ?x45129 l_0_16_79)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46943 (* ?x45126 l_0_16_78)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x46941 (* ?x44355 l_0_16_94)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x46939 (* ?x44352 l_0_16_93)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46937 (* ?x44349 l_0_16_92)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x46936 (* ?x44346 l_0_16_91)))
 (let ((?x46950 (- (- (- (- (+ (+ (+ ?x46936 ?x46937) ?x46939) ?x46941) ?x46943) ?x46945) ?x46947) ?x46949)))
 (= ?x46950 0.0)))))))))))))))))))
(assert
 (let ((?x46993 (* l_0_16_77 l_0_16_77)))
 (let ((?x46991 (* l_0_16_76 l_0_16_76)))
 (let ((?x46989 (* l_0_16_75 l_0_16_75)))
 (let ((?x46987 (* l_0_16_74 l_0_16_74)))
 (let ((?x46985 (* l_0_16_73 l_0_16_73)))
 (let ((?x46983 (* l_0_16_72 l_0_16_72)))
 (let ((?x46981 (* l_0_16_105 l_0_16_105)))
 (let ((?x46979 (* l_0_16_104 l_0_16_104)))
 (let ((?x46977 (* l_0_16_103 l_0_16_103)))
 (let ((?x46975 (* l_0_16_102 l_0_16_102)))
 (let ((?x46976 (+ (+ (* l_0_16_100 l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x46975)))
 (let ((?x46982 (+ (+ (+ ?x46976 ?x46977) ?x46979) ?x46981)))
 (= (- (- (- (- (- (- ?x46982 ?x46983) ?x46985) ?x46987) ?x46989) ?x46991) ?x46993) 0.0))))))))))))))
(assert
 (let ((?x46615 (* (* 2.0 l_0_16_77) l_0_16_83)))
 (let ((?x46612 (* (* 2.0 l_0_16_76) l_0_16_82)))
 (let ((?x46609 (* (* 2.0 l_0_16_75) l_0_16_81)))
 (let ((?x46606 (* (* 2.0 l_0_16_74) l_0_16_80)))
 (let ((?x46603 (* (* 2.0 l_0_16_73) l_0_16_79)))
 (let ((?x46600 (* (* 2.0 l_0_16_72) l_0_16_78)))
 (let ((?x46553 (* (* 2.0 l_0_16_105) l_0_16_111)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x12585 (* ?x45437 l_0_16_110)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x12691 (* ?x45434 l_0_16_109)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x12704 (* ?x45431 l_0_16_108)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x37063 (* ?x45428 l_0_16_107)))
 (let ((?x12586 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_106) ?x37063) ?x12704) ?x12691) ?x12585)))
 (let ((?x46554 (+ ?x12586 ?x46553)))
 (= (- (- (- (- (- (- ?x46554 ?x46600) ?x46603) ?x46606) ?x46609) ?x46612) ?x46615) 0.0)))))))))))))))))))
(assert
 (let ((?x47056 (* l_0_16_84 l_0_16_84)))
 (let ((?x47054 (* l_0_16_83 l_0_16_83)))
 (let ((?x47052 (* l_0_16_82 l_0_16_82)))
 (let ((?x47050 (* l_0_16_81 l_0_16_81)))
 (let ((?x47048 (* l_0_16_80 l_0_16_80)))
 (let ((?x47046 (* l_0_16_79 l_0_16_79)))
 (let ((?x47044 (* l_0_16_78 l_0_16_78)))
 (let ((?x47042 (* l_0_16_112 l_0_16_112)))
 (let ((?x47040 (* l_0_16_111 l_0_16_111)))
 (let ((?x47038 (* l_0_16_110 l_0_16_110)))
 (let ((?x47036 (* l_0_16_109 l_0_16_109)))
 (let ((?x47034 (* l_0_16_108 l_0_16_108)))
 (let ((?x47035 (+ (+ (* l_0_16_106 l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47034)))
 (let ((?x47043 (+ (+ (+ (+ ?x47035 ?x47036) ?x47038) ?x47040) ?x47042)))
 (let ((?x47057 (- (- (- (- (- (- (- ?x47043 ?x47044) ?x47046) ?x47048) ?x47050) ?x47052) ?x47054) ?x47056)))
 (= ?x47057 0.0)))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x46617 (* ?x44540 l_0_16_88)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46597 (* ?x44537 l_0_16_60)))
 (let ((?x47098 (* l_0_16_286 l_0_16_286)))
 (let ((?x47096 (* l_0_16_285 l_0_16_285)))
 (let ((?x47094 (* l_0_16_284 l_0_16_284)))
 (let ((?x47092 (* l_0_16_258 l_0_16_258)))
 (let ((?x47090 (* l_0_16_257 l_0_16_257)))
 (let ((?x47088 (* l_0_16_256 l_0_16_256)))
 (let ((?x47086 (* l_0_16_230 l_0_16_230)))
 (let ((?x47084 (* l_0_16_229 l_0_16_229)))
 (let ((?x47082 (* l_0_16_228 l_0_16_228)))
 (let ((?x47080 (* l_0_16_202 l_0_16_202)))
 (let ((?x47078 (* l_0_16_201 l_0_16_201)))
 (let ((?x47076 (* l_0_16_200 l_0_16_200)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44376 (* ?x44248 l_0_16_144)))
 (let ((?x47075 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_116) ?x44376) (* (* 2.0 l_0_16_169) l_0_16_172))))
 (let ((?x47089 (- (- (- (- (- (- (- ?x47075 ?x47076) ?x47078) ?x47080) ?x47082) ?x47084) ?x47086) ?x47088)))
 (let ((?x47101 (+ (- (- (- (- (- (- ?x47089 ?x47090) ?x47092) ?x47094) ?x47096) ?x47098) ?x46597) ?x46617)))
 (= ?x47101 0.0)))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x46695 (* ?x44540 l_0_16_91)))
 (let ((?x46617 (* ?x44540 l_0_16_88)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46687 (* ?x44537 l_0_16_63)))
 (let ((?x46597 (* ?x44537 l_0_16_60)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44503 (* ?x44248 l_0_16_147)))
 (let ((?x47118 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_119) ?x44503) (* (* 2.0 l_0_16_169) l_0_16_175))))
 (let ((?x47124 (- (- ?x47118 (* (* 2.0 l_0_16_200) l_0_16_203)) (* (* 2.0 l_0_16_201) l_0_16_204))))
 (let ((?x47130 (- (- ?x47124 (* (* 2.0 l_0_16_202) l_0_16_205)) (* (* 2.0 l_0_16_228) l_0_16_231))))
 (let ((?x47136 (- (- ?x47130 (* (* 2.0 l_0_16_229) l_0_16_232)) (* (* 2.0 l_0_16_230) l_0_16_233))))
 (let ((?x47142 (- (- ?x47136 (* (* 2.0 l_0_16_256) l_0_16_259)) (* (* 2.0 l_0_16_257) l_0_16_260))))
 (let ((?x47148 (- (- ?x47142 (* (* 2.0 l_0_16_258) l_0_16_261)) (* (* 2.0 l_0_16_284) l_0_16_287))))
 (let ((?x47154 (- (- ?x47148 (* (* 2.0 l_0_16_285) l_0_16_288)) (* (* 2.0 l_0_16_286) l_0_16_289))))
 (= (+ (- (- (+ ?x47154 ?x46597) ?x46687) ?x46617) ?x46695) 0.0)))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x44541 (* ?x44540 l_0_16_95)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x44538 (* ?x44537 l_0_16_67)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44519 (* ?x44248 l_0_16_151)))
 (let ((?x47215 (- (- (* (* (- 2.0) l_0_16_113) l_0_16_123) ?x44519) (* (* 2.0 l_0_16_169) l_0_16_179))))
 (let ((?x47219 (- (- ?x47215 (* (* 2.0 l_0_16_200) l_0_16_207)) (* (* 2.0 l_0_16_201) l_0_16_208))))
 (let ((?x47223 (- (- ?x47219 (* (* 2.0 l_0_16_202) l_0_16_209)) (* (* 2.0 l_0_16_228) l_0_16_235))))
 (let ((?x47227 (- (- ?x47223 (* (* 2.0 l_0_16_229) l_0_16_236)) (* (* 2.0 l_0_16_230) l_0_16_237))))
 (let ((?x47231 (- (- ?x47227 (* (* 2.0 l_0_16_256) l_0_16_263)) (* (* 2.0 l_0_16_257) l_0_16_264))))
 (let ((?x47235 (- (- ?x47231 (* (* 2.0 l_0_16_258) l_0_16_265)) (* (* 2.0 l_0_16_284) l_0_16_291))))
 (let ((?x47239 (- (- ?x47235 (* (* 2.0 l_0_16_285) l_0_16_292)) (* (* 2.0 l_0_16_286) l_0_16_293))))
 (= (+ (- ?x47239 ?x44538) ?x44541) 0.0)))))))))))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x26359 (* ?x44537 l_0_16_72)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44527 (* ?x44248 l_0_16_156)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x13086 (* ?x45426 l_0_16_85)))
 (let ((?x47282 (- (- (- ?x13086 (* (* 2.0 l_0_16_113) l_0_16_128)) ?x44527) (* (* 2.0 l_0_16_169) l_0_16_184))))
 (let ((?x47286 (- (- ?x47282 (* (* 2.0 l_0_16_200) l_0_16_212)) (* (* 2.0 l_0_16_201) l_0_16_213))))
 (let ((?x47290 (- (- ?x47286 (* (* 2.0 l_0_16_202) l_0_16_214)) (* (* 2.0 l_0_16_228) l_0_16_240))))
 (let ((?x47294 (- (- ?x47290 (* (* 2.0 l_0_16_229) l_0_16_241)) (* (* 2.0 l_0_16_230) l_0_16_242))))
 (let ((?x47298 (- (- ?x47294 (* (* 2.0 l_0_16_256) l_0_16_268)) (* (* 2.0 l_0_16_257) l_0_16_269))))
 (let ((?x47302 (- (- ?x47298 (* (* 2.0 l_0_16_258) l_0_16_270)) (* (* 2.0 l_0_16_284) l_0_16_296))))
 (let ((?x47306 (- (- ?x47302 (* (* 2.0 l_0_16_285) l_0_16_297)) (* (* 2.0 l_0_16_286) l_0_16_298))))
 (= (- ?x47306 ?x26359) 0.0)))))))))))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46703 (* ?x44537 l_0_16_78)))
 (let ((?x44248 (* 2.0 l_0_16_141)))
 (let ((?x44559 (* ?x44248 l_0_16_162)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x46702 (* ?x44346 l_0_16_85)))
 (let ((?x47377 (- (- (- ?x46702 (* (* 2.0 l_0_16_113) l_0_16_134)) ?x44559) (* (* 2.0 l_0_16_169) l_0_16_190))))
 (let ((?x47381 (- (- ?x47377 (* (* 2.0 l_0_16_200) l_0_16_218)) (* (* 2.0 l_0_16_201) l_0_16_219))))
 (let ((?x47385 (- (- ?x47381 (* (* 2.0 l_0_16_202) l_0_16_220)) (* (* 2.0 l_0_16_228) l_0_16_246))))
 (let ((?x47389 (- (- ?x47385 (* (* 2.0 l_0_16_229) l_0_16_247)) (* (* 2.0 l_0_16_230) l_0_16_248))))
 (let ((?x47393 (- (- ?x47389 (* (* 2.0 l_0_16_256) l_0_16_274)) (* (* 2.0 l_0_16_257) l_0_16_275))))
 (let ((?x47397 (- (- ?x47393 (* (* 2.0 l_0_16_258) l_0_16_276)) (* (* 2.0 l_0_16_284) l_0_16_302))))
 (let ((?x47401 (- (- ?x47397 (* (* 2.0 l_0_16_285) l_0_16_303)) (* (* 2.0 l_0_16_286) l_0_16_304))))
 (= (- ?x47401 ?x46703) 0.0)))))))))))))))
(assert
 (let ((?x46767 (* l_0_16_90 l_0_16_90)))
 (let ((?x46765 (* l_0_16_89 l_0_16_89)))
 (let ((?x46763 (* l_0_16_88 l_0_16_88)))
 (let ((?x46761 (* l_0_16_62 l_0_16_62)))
 (let ((?x46759 (* l_0_16_61 l_0_16_61)))
 (let ((?x46771 (* l_0_16_60 l_0_16_60)))
 (let ((?x46140 (* l_0_16_174 l_0_16_174)))
 (let ((?x46137 (* l_0_16_173 l_0_16_173)))
 (let ((?x46134 (* l_0_16_172 l_0_16_172)))
 (let ((?x44756 (* l_0_16_146 l_0_16_146)))
 (let ((?x44754 (* l_0_16_145 l_0_16_145)))
 (let ((?x44753 (* l_0_16_144 l_0_16_144)))
 (let ((?x47464 (* l_0_16_118 l_0_16_118)))
 (let ((?x47465 (- (- (* (- l_0_16_116) l_0_16_116) (* l_0_16_117 l_0_16_117)) ?x47464)))
 (let ((?x47472 (- (- (- (- (- (- (- ?x47465 ?x44753) ?x44754) ?x44756) ?x46134) ?x46137) ?x46140) ?x46771)))
 (= (+ (+ (+ (- (- ?x47472 ?x46759) ?x46761) ?x46763) ?x46765) ?x46767) 0.0)))))))))))))))))
(assert
 (let ((?x46767 (* l_0_16_90 l_0_16_90)))
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x46794 (* ?x44907 l_0_16_93)))
 (let ((?x46765 (* l_0_16_89 l_0_16_89)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x46792 (* ?x44904 l_0_16_92)))
 (let ((?x46763 (* l_0_16_88 l_0_16_88)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x46790 (* ?x44901 l_0_16_91)))
 (let ((?x46761 (* l_0_16_62 l_0_16_62)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46788 (* ?x44898 l_0_16_65)))
 (let ((?x46759 (* l_0_16_61 l_0_16_61)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46786 (* ?x44895 l_0_16_64)))
 (let ((?x46771 (* l_0_16_60 l_0_16_60)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x47507 (* ?x44892 l_0_16_63)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44784 (* ?x44783 l_0_16_149)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44781 (* ?x44780 l_0_16_148)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44779 (* ?x9897 l_0_16_147)))
 (let ((?x47491 (- (* (* (- 2.0) l_0_16_116) l_0_16_119) (* (* 2.0 l_0_16_117) l_0_16_120))))
 (let ((?x47497 (- (- (- (- ?x47491 (* (* 2.0 l_0_16_118) l_0_16_121)) ?x44779) ?x44781) ?x44784)))
 (let ((?x47503 (- (- ?x47497 (* (* 2.0 l_0_16_172) l_0_16_175)) (* (* 2.0 l_0_16_173) l_0_16_176))))
 (let ((?x47510 (- (+ (- (- ?x47503 (* (* 2.0 l_0_16_174) l_0_16_177)) ?x47507) ?x46771) ?x46786)))
 (let ((?x47517 (- (+ (- (+ (+ (- (+ ?x47510 ?x46759) ?x46788) ?x46761) ?x46790) ?x46763) ?x46792) ?x46765)))
 (= (- (+ ?x47517 ?x46794) ?x46767) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x44908 (* ?x44907 l_0_16_97)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x44905 (* ?x44904 l_0_16_96)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x44902 (* ?x44901 l_0_16_95)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x44899 (* ?x44898 l_0_16_69)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x44896 (* ?x44895 l_0_16_68)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x44893 (* ?x44892 l_0_16_67)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44847 (* ?x44783 l_0_16_153)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44845 (* ?x44780 l_0_16_152)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44843 (* ?x9897 l_0_16_151)))
 (let ((?x47550 (- (* (* (- 2.0) l_0_16_116) l_0_16_123) (* (* 2.0 l_0_16_117) l_0_16_124))))
 (let ((?x47555 (- (- (- (- ?x47550 (* (* 2.0 l_0_16_118) l_0_16_125)) ?x44843) ?x44845) ?x44847)))
 (let ((?x47559 (- (- ?x47555 (* (* 2.0 l_0_16_172) l_0_16_179)) (* (* 2.0 l_0_16_173) l_0_16_180))))
 (let ((?x47564 (- (- (- (- ?x47559 (* (* 2.0 l_0_16_174) l_0_16_181)) ?x44893) ?x44896) ?x44899)))
 (= (+ (+ (+ ?x47564 ?x44902) ?x44905) ?x44908) 0.0))))))))))))))))))))))))
(assert
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46817 (* ?x44898 l_0_16_74)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46815 (* ?x44895 l_0_16_73)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x46813 (* ?x44892 l_0_16_72)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44877 (* ?x44783 l_0_16_158)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44875 (* ?x44780 l_0_16_157)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44874 (* ?x9897 l_0_16_156)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x46811 (* ?x45431 l_0_16_90)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x46809 (* ?x45428 l_0_16_89)))
 (let ((?x46812 (+ (+ (* (* 2.0 l_0_16_100) l_0_16_88) ?x46809) ?x46811)))
 (let ((?x27057 (- (- ?x46812 (* (* 2.0 l_0_16_116) l_0_16_128)) (* (* 2.0 l_0_16_117) l_0_16_129))))
 (let ((?x47581 (- (- (- (- ?x27057 (* (* 2.0 l_0_16_118) l_0_16_130)) ?x44874) ?x44875) ?x44877)))
 (let ((?x47585 (- (- ?x47581 (* (* 2.0 l_0_16_172) l_0_16_184)) (* (* 2.0 l_0_16_173) l_0_16_185))))
 (let ((?x47590 (- (- (- (- ?x47585 (* (* 2.0 l_0_16_174) l_0_16_186)) ?x46813) ?x46815) ?x46817)))
 (= ?x47590 0.0)))))))))))))))))))))))
(assert
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46838 (* ?x44898 l_0_16_80)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46836 (* ?x44895 l_0_16_79)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x26354 (* ?x44892 l_0_16_78)))
 (let ((?x44783 (* 2.0 l_0_16_146)))
 (let ((?x44948 (* ?x44783 l_0_16_164)))
 (let ((?x44780 (* 2.0 l_0_16_145)))
 (let ((?x44946 (* ?x44780 l_0_16_163)))
 (let ((?x9897 (* 2.0 l_0_16_144)))
 (let ((?x44945 (* ?x9897 l_0_16_162)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x26346 (* ?x44352 l_0_16_90)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x37294 (* ?x44349 l_0_16_89)))
 (let ((?x13004 (+ (+ (* (* 2.0 l_0_16_106) l_0_16_88) ?x37294) ?x26346)))
 (let ((?x47619 (- (- ?x13004 (* (* 2.0 l_0_16_116) l_0_16_134)) (* (* 2.0 l_0_16_117) l_0_16_135))))
 (let ((?x47624 (- (- (- (- ?x47619 (* (* 2.0 l_0_16_118) l_0_16_136)) ?x44945) ?x44946) ?x44948)))
 (let ((?x47628 (- (- ?x47624 (* (* 2.0 l_0_16_172) l_0_16_190)) (* (* 2.0 l_0_16_173) l_0_16_191))))
 (let ((?x47633 (- (- (- (- ?x47628 (* (* 2.0 l_0_16_174) l_0_16_192)) ?x26354) ?x46836) ?x46838)))
 (= ?x47633 0.0)))))))))))))))))))))))
(assert
 (let ((?x46876 (* l_0_16_94 l_0_16_94)))
 (let ((?x46874 (* l_0_16_93 l_0_16_93)))
 (let ((?x46872 (* l_0_16_92 l_0_16_92)))
 (let ((?x46870 (* l_0_16_91 l_0_16_91)))
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x46794 (* ?x44907 l_0_16_93)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x46792 (* ?x44904 l_0_16_92)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x46790 (* ?x44901 l_0_16_91)))
 (let ((?x46868 (* l_0_16_66 l_0_16_66)))
 (let ((?x46866 (* l_0_16_65 l_0_16_65)))
 (let ((?x46864 (* l_0_16_64 l_0_16_64)))
 (let ((?x46880 (* l_0_16_63 l_0_16_63)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46788 (* ?x44898 l_0_16_65)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46786 (* ?x44895 l_0_16_64)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x47507 (* ?x44892 l_0_16_63)))
 (let ((?x46352 (* l_0_16_178 l_0_16_178)))
 (let ((?x12005 (* l_0_16_177 l_0_16_177)))
 (let ((?x36411 (* l_0_16_176 l_0_16_176)))
 (let ((?x36413 (* l_0_16_175 l_0_16_175)))
 (let ((?x45003 (* l_0_16_150 l_0_16_150)))
 (let ((?x45001 (* l_0_16_149 l_0_16_149)))
 (let ((?x44999 (* l_0_16_148 l_0_16_148)))
 (let ((?x44989 (* l_0_16_147 l_0_16_147)))
 (let ((?x27234 (* l_0_16_122 l_0_16_122)))
 (let ((?x37799 (* l_0_16_121 l_0_16_121)))
 (let ((?x14131 (- (- (* (- l_0_16_119) l_0_16_119) (* l_0_16_120 l_0_16_120)) ?x37799)))
 (let ((?x47649 (- (- (- (- (- (- (- ?x14131 ?x27234) ?x44989) ?x44999) ?x45001) ?x45003) ?x36413) ?x36411)))
 (let ((?x47656 (- (- (+ (+ (+ (- (- ?x47649 ?x12005) ?x46352) ?x47507) ?x46786) ?x46788) ?x46880) ?x46864)))
 (let ((?x47663 (+ (+ (- (- (- (- (- ?x47656 ?x46866) ?x46868) ?x46790) ?x46792) ?x46794) ?x46870) ?x46872)))
 (= (+ (+ ?x47663 ?x46874) ?x46876) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45148 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x45145 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x45142 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x45139 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x44907 (* 2.0 l_0_16_90)))
 (let ((?x44908 (* ?x44907 l_0_16_97)))
 (let ((?x44904 (* 2.0 l_0_16_89)))
 (let ((?x44905 (* ?x44904 l_0_16_96)))
 (let ((?x44901 (* 2.0 l_0_16_88)))
 (let ((?x44902 (* ?x44901 l_0_16_95)))
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x45136 (* ?x45135 l_0_16_70)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x45133 (* ?x45132 l_0_16_69)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x45130 (* ?x45129 l_0_16_68)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x45127 (* ?x45126 l_0_16_67)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x44899 (* ?x44898 l_0_16_69)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x44896 (* ?x44895 l_0_16_68)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x44893 (* ?x44892 l_0_16_67)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45055 (* ?x45054 l_0_16_154)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45052 (* ?x45051 l_0_16_153)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45049 (* ?x45048 l_0_16_152)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45046 (* ?x45045 l_0_16_151)))
 (let ((?x37417 (- (* (* (- 2.0) l_0_16_119) l_0_16_123) (* (* 2.0 l_0_16_120) l_0_16_124))))
 (let ((?x47678 (- (- ?x37417 (* (* 2.0 l_0_16_121) l_0_16_125)) (* (* 2.0 l_0_16_122) l_0_16_126))))
 (let ((?x47685 (- (- (- (- (- ?x47678 ?x45046) ?x45049) ?x45052) ?x45055) (* (* 2.0 l_0_16_175) l_0_16_179))))
 (let ((?x47691 (- (- ?x47685 (* (* 2.0 l_0_16_176) l_0_16_180)) (* (* 2.0 l_0_16_177) l_0_16_181))))
 (let ((?x47697 (+ (+ (+ (- ?x47691 (* (* 2.0 l_0_16_178) l_0_16_182)) ?x44893) ?x44896) ?x44899)))
 (let ((?x47704 (- (- (- (- (- (- (- ?x47697 ?x45127) ?x45130) ?x45133) ?x45136) ?x44902) ?x44905) ?x44908)))
 (= (+ (+ (+ (+ ?x47704 ?x45139) ?x45142) ?x45145) ?x45148) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46907 (* ?x45135 l_0_16_75)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46905 (* ?x45132 l_0_16_74)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46903 (* ?x45129 l_0_16_73)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46901 (* ?x45126 l_0_16_72)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46817 (* ?x44898 l_0_16_74)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46815 (* ?x44895 l_0_16_73)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x46813 (* ?x44892 l_0_16_72)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45099 (* ?x45054 l_0_16_159)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45095 (* ?x45051 l_0_16_158)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45091 (* ?x45048 l_0_16_157)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45087 (* ?x45045 l_0_16_156)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x46899 (* ?x45434 l_0_16_94)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x46897 (* ?x45431 l_0_16_93)))
 (let ((?x46811 (* ?x45431 l_0_16_90)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x46895 (* ?x45428 l_0_16_92)))
 (let ((?x46809 (* ?x45428 l_0_16_89)))
 (let ((?x45426 (* 2.0 l_0_16_100)))
 (let ((?x37341 (* ?x45426 l_0_16_91)))
 (let ((?x27783 (- (+ (- (+ (* (* (- 2.0) l_0_16_100) l_0_16_88) ?x37341) ?x46809) ?x46895) ?x46811)))
 (let ((?x47732 (- (- (+ (+ ?x27783 ?x46897) ?x46899) (* (* 2.0 l_0_16_119) l_0_16_128)) (* (* 2.0 l_0_16_120) l_0_16_129))))
 (let ((?x47736 (- (- ?x47732 (* (* 2.0 l_0_16_121) l_0_16_130)) (* (* 2.0 l_0_16_122) l_0_16_131))))
 (let ((?x47742 (- (- (- (- (- ?x47736 ?x45087) ?x45091) ?x45095) ?x45099) (* (* 2.0 l_0_16_175) l_0_16_184))))
 (let ((?x47746 (- (- ?x47742 (* (* 2.0 l_0_16_176) l_0_16_185)) (* (* 2.0 l_0_16_177) l_0_16_186))))
 (let ((?x47751 (+ (+ (+ (- ?x47746 (* (* 2.0 l_0_16_178) l_0_16_187)) ?x46813) ?x46815) ?x46817)))
 (= (- (- (- (- ?x47751 ?x46901) ?x46903) ?x46905) ?x46907) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46949 (* ?x45135 l_0_16_81)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46947 (* ?x45132 l_0_16_80)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46945 (* ?x45129 l_0_16_79)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46943 (* ?x45126 l_0_16_78)))
 (let ((?x44898 (* 2.0 l_0_16_62)))
 (let ((?x46838 (* ?x44898 l_0_16_80)))
 (let ((?x44895 (* 2.0 l_0_16_61)))
 (let ((?x46836 (* ?x44895 l_0_16_79)))
 (let ((?x44892 (* 2.0 l_0_16_60)))
 (let ((?x26354 (* ?x44892 l_0_16_78)))
 (let ((?x45054 (* 2.0 l_0_16_150)))
 (let ((?x45209 (* ?x45054 l_0_16_165)))
 (let ((?x45051 (* 2.0 l_0_16_149)))
 (let ((?x45207 (* ?x45051 l_0_16_164)))
 (let ((?x45048 (* 2.0 l_0_16_148)))
 (let ((?x45205 (* ?x45048 l_0_16_163)))
 (let ((?x45045 (* 2.0 l_0_16_147)))
 (let ((?x45203 (* ?x45045 l_0_16_162)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x46941 (* ?x44355 l_0_16_94)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x46939 (* ?x44352 l_0_16_93)))
 (let ((?x26346 (* ?x44352 l_0_16_90)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46937 (* ?x44349 l_0_16_92)))
 (let ((?x37294 (* ?x44349 l_0_16_89)))
 (let ((?x44346 (* 2.0 l_0_16_106)))
 (let ((?x46936 (* ?x44346 l_0_16_91)))
 (let ((?x38246 (- (+ (- (+ (* (* (- 2.0) l_0_16_106) l_0_16_88) ?x46936) ?x37294) ?x46937) ?x26346)))
 (let ((?x47768 (- (- (+ (+ ?x38246 ?x46939) ?x46941) (* (* 2.0 l_0_16_119) l_0_16_134)) (* (* 2.0 l_0_16_120) l_0_16_135))))
 (let ((?x47772 (- (- ?x47768 (* (* 2.0 l_0_16_121) l_0_16_136)) (* (* 2.0 l_0_16_122) l_0_16_137))))
 (let ((?x47778 (- (- (- (- (- ?x47772 ?x45203) ?x45205) ?x45207) ?x45209) (* (* 2.0 l_0_16_175) l_0_16_190))))
 (let ((?x47782 (- (- ?x47778 (* (* 2.0 l_0_16_176) l_0_16_191)) (* (* 2.0 l_0_16_177) l_0_16_192))))
 (let ((?x47787 (+ (+ (+ (- ?x47782 (* (* 2.0 l_0_16_178) l_0_16_193)) ?x26354) ?x46836) ?x46838)))
 (= (- (- (- (- ?x47787 ?x46943) ?x46945) ?x46947) ?x46949) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x45361 (* l_0_16_99 l_0_16_99)))
 (let ((?x45359 (* l_0_16_98 l_0_16_98)))
 (let ((?x45357 (* l_0_16_97 l_0_16_97)))
 (let ((?x45355 (* l_0_16_96 l_0_16_96)))
 (let ((?x45353 (* l_0_16_95 l_0_16_95)))
 (let ((?x45351 (* l_0_16_71 l_0_16_71)))
 (let ((?x45349 (* l_0_16_70 l_0_16_70)))
 (let ((?x45347 (* l_0_16_69 l_0_16_69)))
 (let ((?x45345 (* l_0_16_68 l_0_16_68)))
 (let ((?x45343 (* l_0_16_67 l_0_16_67)))
 (let ((?x46470 (* l_0_16_183 l_0_16_183)))
 (let ((?x46467 (* l_0_16_182 l_0_16_182)))
 (let ((?x46464 (* l_0_16_181 l_0_16_181)))
 (let ((?x46461 (* l_0_16_180 l_0_16_180)))
 (let ((?x46458 (* l_0_16_179 l_0_16_179)))
 (let ((?x45277 (* l_0_16_155 l_0_16_155)))
 (let ((?x45275 (* l_0_16_154 l_0_16_154)))
 (let ((?x45273 (* l_0_16_153 l_0_16_153)))
 (let ((?x45271 (* l_0_16_152 l_0_16_152)))
 (let ((?x45269 (* l_0_16_151 l_0_16_151)))
 (let ((?x47816 (* l_0_16_127 l_0_16_127)))
 (let ((?x47814 (* l_0_16_126 l_0_16_126)))
 (let ((?x47812 (* l_0_16_125 l_0_16_125)))
 (let ((?x47813 (- (- (* (- l_0_16_123) l_0_16_123) (* l_0_16_124 l_0_16_124)) ?x47812)))
 (let ((?x47822 (- (- (- (- (- (- (- ?x47813 ?x47814) ?x47816) ?x45269) ?x45271) ?x45273) ?x45275) ?x45277)))
 (let ((?x47829 (- (- (- (- (- (- (- ?x47822 ?x46458) ?x46461) ?x46464) ?x46467) ?x46470) ?x45343) ?x45345)))
 (let ((?x47836 (+ (+ (+ (+ (- (- (- ?x47829 ?x45347) ?x45349) ?x45351) ?x45353) ?x45355) ?x45357) ?x45359)))
 (= (+ ?x47836 ?x45361) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x45484 (* ?x44422 l_0_16_76)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x45482 (* ?x44419 l_0_16_75)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x45480 (* ?x44416 l_0_16_74)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x45478 (* ?x44413 l_0_16_73)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x45476 (* ?x44410 l_0_16_72)))
 (let ((?x44390 (* 2.0 l_0_16_155)))
 (let ((?x45331 (* ?x44390 l_0_16_160)))
 (let ((?x44387 (* 2.0 l_0_16_154)))
 (let ((?x45329 (* ?x44387 l_0_16_159)))
 (let ((?x44384 (* 2.0 l_0_16_153)))
 (let ((?x45327 (* ?x44384 l_0_16_158)))
 (let ((?x44381 (* 2.0 l_0_16_152)))
 (let ((?x45325 (* ?x44381 l_0_16_157)))
 (let ((?x44378 (* 2.0 l_0_16_151)))
 (let ((?x45323 (* ?x44378 l_0_16_156)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x45438 (* ?x45437 l_0_16_99)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x45435 (* ?x45434 l_0_16_98)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x45432 (* ?x45431 l_0_16_97)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x45429 (* ?x45428 l_0_16_96)))
 (let ((?x45439 (+ (+ (+ (+ (* (* 2.0 l_0_16_100) l_0_16_95) ?x45429) ?x45432) ?x45435) ?x45438)))
 (let ((?x15295 (- (- ?x45439 (* (* 2.0 l_0_16_123) l_0_16_128)) (* (* 2.0 l_0_16_124) l_0_16_129))))
 (let ((?x15314 (- (- ?x15295 (* (* 2.0 l_0_16_125) l_0_16_130)) (* (* 2.0 l_0_16_126) l_0_16_131))))
 (let ((?x14535 (- (- (- (- ?x15314 (* (* 2.0 l_0_16_127) l_0_16_132)) ?x45323) ?x45325) ?x45327)))
 (let ((?x38401 (- (- (- (- ?x14535 ?x45329) ?x45331) (* (* 2.0 l_0_16_179) l_0_16_184)) (* (* 2.0 l_0_16_180) l_0_16_185))))
 (let ((?x38394 (- (- ?x38401 (* (* 2.0 l_0_16_181) l_0_16_186)) (* (* 2.0 l_0_16_182) l_0_16_187))))
 (let ((?x47852 (- (- (- (- ?x38394 (* (* 2.0 l_0_16_183) l_0_16_188)) ?x45476) ?x45478) ?x45480)))
 (= (- (- ?x47852 ?x45482) ?x45484) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x46993 (* l_0_16_77 l_0_16_77)))
 (let ((?x46991 (* l_0_16_76 l_0_16_76)))
 (let ((?x46989 (* l_0_16_75 l_0_16_75)))
 (let ((?x46987 (* l_0_16_74 l_0_16_74)))
 (let ((?x46985 (* l_0_16_73 l_0_16_73)))
 (let ((?x46983 (* l_0_16_72 l_0_16_72)))
 (let ((?x46498 (* l_0_16_189 l_0_16_189)))
 (let ((?x46495 (* l_0_16_188 l_0_16_188)))
 (let ((?x46492 (* l_0_16_187 l_0_16_187)))
 (let ((?x46489 (* l_0_16_186 l_0_16_186)))
 (let ((?x36928 (* l_0_16_185 l_0_16_185)))
 (let ((?x36933 (* l_0_16_184 l_0_16_184)))
 (let ((?x45452 (* l_0_16_161 l_0_16_161)))
 (let ((?x45450 (* l_0_16_160 l_0_16_160)))
 (let ((?x45446 (* l_0_16_159 l_0_16_159)))
 (let ((?x45444 (* l_0_16_158 l_0_16_158)))
 (let ((?x45442 (* l_0_16_157 l_0_16_157)))
 (let ((?x45440 (* l_0_16_156 l_0_16_156)))
 (let ((?x15384 (* l_0_16_133 l_0_16_133)))
 (let ((?x15390 (* l_0_16_132 l_0_16_132)))
 (let ((?x38456 (* l_0_16_131 l_0_16_131)))
 (let ((?x15341 (* l_0_16_130 l_0_16_130)))
 (let ((?x38459 (* l_0_16_129 l_0_16_129)))
 (let ((?x38462 (* l_0_16_128 l_0_16_128)))
 (let ((?x46981 (* l_0_16_105 l_0_16_105)))
 (let ((?x46979 (* l_0_16_104 l_0_16_104)))
 (let ((?x46977 (* l_0_16_103 l_0_16_103)))
 (let ((?x46975 (* l_0_16_102 l_0_16_102)))
 (let ((?x46976 (+ (+ (* l_0_16_100 l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x46975)))
 (let ((?x46982 (+ (+ (+ ?x46976 ?x46977) ?x46979) ?x46981)))
 (let ((?x15335 (- (- (- (- (- (- (- ?x46982 ?x38462) ?x38459) ?x15341) ?x38456) ?x15390) ?x15384) ?x45440)))
 (let ((?x47878 (- (- (- (- (- (- (- ?x15335 ?x45442) ?x45444) ?x45446) ?x45450) ?x45452) ?x36933) ?x36928)))
 (let ((?x47885 (- (- (- (- (- (- (- ?x47878 ?x46489) ?x46492) ?x46495) ?x46498) ?x46983) ?x46985) ?x46987)))
 (= (- (- (- ?x47885 ?x46989) ?x46991) ?x46993) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x47056 (* l_0_16_84 l_0_16_84)))
 (let ((?x47054 (* l_0_16_83 l_0_16_83)))
 (let ((?x47052 (* l_0_16_82 l_0_16_82)))
 (let ((?x47050 (* l_0_16_81 l_0_16_81)))
 (let ((?x47048 (* l_0_16_80 l_0_16_80)))
 (let ((?x47046 (* l_0_16_79 l_0_16_79)))
 (let ((?x47044 (* l_0_16_78 l_0_16_78)))
 (let ((?x46534 (* l_0_16_196 l_0_16_196)))
 (let ((?x46531 (* l_0_16_195 l_0_16_195)))
 (let ((?x37006 (* l_0_16_194 l_0_16_194)))
 (let ((?x12466 (* l_0_16_193 l_0_16_193)))
 (let ((?x37007 (* l_0_16_192 l_0_16_192)))
 (let ((?x37010 (* l_0_16_191 l_0_16_191)))
 (let ((?x37039 (* l_0_16_190 l_0_16_190)))
 (let ((?x45673 (* l_0_16_168 l_0_16_168)))
 (let ((?x45671 (* l_0_16_167 l_0_16_167)))
 (let ((?x45669 (* l_0_16_166 l_0_16_166)))
 (let ((?x45667 (* l_0_16_165 l_0_16_165)))
 (let ((?x45665 (* l_0_16_164 l_0_16_164)))
 (let ((?x45663 (* l_0_16_163 l_0_16_163)))
 (let ((?x45662 (* l_0_16_162 l_0_16_162)))
 (let ((?x28747 (* l_0_16_140 l_0_16_140)))
 (let ((?x28774 (* l_0_16_139 l_0_16_139)))
 (let ((?x15823 (* l_0_16_138 l_0_16_138)))
 (let ((?x38512 (* l_0_16_137 l_0_16_137)))
 (let ((?x38543 (* l_0_16_136 l_0_16_136)))
 (let ((?x28777 (* l_0_16_135 l_0_16_135)))
 (let ((?x15878 (* l_0_16_134 l_0_16_134)))
 (let ((?x47042 (* l_0_16_112 l_0_16_112)))
 (let ((?x47040 (* l_0_16_111 l_0_16_111)))
 (let ((?x47038 (* l_0_16_110 l_0_16_110)))
 (let ((?x47036 (* l_0_16_109 l_0_16_109)))
 (let ((?x47034 (* l_0_16_108 l_0_16_108)))
 (let ((?x47035 (+ (+ (* l_0_16_106 l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47034)))
 (let ((?x47043 (+ (+ (+ (+ ?x47035 ?x47036) ?x47038) ?x47040) ?x47042)))
 (let ((?x28744 (- (- (- (- (- (- (- ?x47043 ?x15878) ?x28777) ?x38543) ?x38512) ?x15823) ?x28774) ?x28747)))
 (let ((?x47894 (- (- (- (- (- (- (- ?x28744 ?x45662) ?x45663) ?x45665) ?x45667) ?x45669) ?x45671) ?x45673)))
 (let ((?x47901 (- (- (- (- (- (- (- ?x47894 ?x37039) ?x37010) ?x37007) ?x12466) ?x37006) ?x46531) ?x46534)))
 (let ((?x47908 (- (- (- (- (- (- (- ?x47901 ?x47044) ?x47046) ?x47048) ?x47050) ?x47052) ?x47054) ?x47056)))
 (= ?x47908 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x46695 (* ?x44540 l_0_16_91)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46687 (* ?x44537 l_0_16_63)))
 (let ((?x47939 (* l_0_16_290 l_0_16_290)))
 (let ((?x47937 (* l_0_16_289 l_0_16_289)))
 (let ((?x47935 (* l_0_16_288 l_0_16_288)))
 (let ((?x47933 (* l_0_16_287 l_0_16_287)))
 (let ((?x47931 (* l_0_16_262 l_0_16_262)))
 (let ((?x47929 (* l_0_16_261 l_0_16_261)))
 (let ((?x47927 (* l_0_16_260 l_0_16_260)))
 (let ((?x47925 (* l_0_16_259 l_0_16_259)))
 (let ((?x47923 (* l_0_16_234 l_0_16_234)))
 (let ((?x47921 (* l_0_16_233 l_0_16_233)))
 (let ((?x16137 (* l_0_16_232 l_0_16_232)))
 (let ((?x16119 (* l_0_16_231 l_0_16_231)))
 (let ((?x16179 (* l_0_16_206 l_0_16_206)))
 (let ((?x28810 (* l_0_16_205 l_0_16_205)))
 (let ((?x38580 (- (- (* (- l_0_16_203) l_0_16_203) (* l_0_16_204 l_0_16_204)) ?x28810)))
 (let ((?x47928 (- (- (- (- (- (- (- ?x38580 ?x16179) ?x16119) ?x16137) ?x47921) ?x47923) ?x47925) ?x47927)))
 (let ((?x47941 (+ (- (- (- (- (- (- ?x47928 ?x47929) ?x47931) ?x47933) ?x47935) ?x47937) ?x47939) ?x46687)))
 (= (- ?x47941 ?x46695) 0.0)))))))))))))))))))))))
(assert
 (let ((?x44540 (* 2.0 l_0_16_85)))
 (let ((?x44541 (* ?x44540 l_0_16_95)))
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x44538 (* ?x44537 l_0_16_67)))
 (let ((?x47973 (- (* (* (- 2.0) l_0_16_203) l_0_16_207) (* (* 2.0 l_0_16_204) l_0_16_208))))
 (let ((?x47979 (- (- ?x47973 (* (* 2.0 l_0_16_205) l_0_16_209)) (* (* 2.0 l_0_16_206) l_0_16_210))))
 (let ((?x47985 (- (- ?x47979 (* (* 2.0 l_0_16_231) l_0_16_235)) (* (* 2.0 l_0_16_232) l_0_16_236))))
 (let ((?x47991 (- (- ?x47985 (* (* 2.0 l_0_16_233) l_0_16_237)) (* (* 2.0 l_0_16_234) l_0_16_238))))
 (let ((?x47997 (- (- ?x47991 (* (* 2.0 l_0_16_259) l_0_16_263)) (* (* 2.0 l_0_16_260) l_0_16_264))))
 (let ((?x48003 (- (- ?x47997 (* (* 2.0 l_0_16_261) l_0_16_265)) (* (* 2.0 l_0_16_262) l_0_16_266))))
 (let ((?x48009 (- (- ?x48003 (* (* 2.0 l_0_16_287) l_0_16_291)) (* (* 2.0 l_0_16_288) l_0_16_292))))
 (let ((?x48015 (- (- ?x48009 (* (* 2.0 l_0_16_289) l_0_16_293)) (* (* 2.0 l_0_16_290) l_0_16_294))))
 (= (- (+ ?x48015 ?x44538) ?x44541) 0.0))))))))))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x26359 (* ?x44537 l_0_16_72)))
 (let ((?x48074 (- (* (* (- 2.0) l_0_16_100) l_0_16_85) (* (* 2.0 l_0_16_203) l_0_16_212))))
 (let ((?x48078 (- (- ?x48074 (* (* 2.0 l_0_16_204) l_0_16_213)) (* (* 2.0 l_0_16_205) l_0_16_214))))
 (let ((?x48082 (- (- ?x48078 (* (* 2.0 l_0_16_206) l_0_16_215)) (* (* 2.0 l_0_16_231) l_0_16_240))))
 (let ((?x48086 (- (- ?x48082 (* (* 2.0 l_0_16_232) l_0_16_241)) (* (* 2.0 l_0_16_233) l_0_16_242))))
 (let ((?x48090 (- (- ?x48086 (* (* 2.0 l_0_16_234) l_0_16_243)) (* (* 2.0 l_0_16_259) l_0_16_268))))
 (let ((?x48094 (- (- ?x48090 (* (* 2.0 l_0_16_260) l_0_16_269)) (* (* 2.0 l_0_16_261) l_0_16_270))))
 (let ((?x48098 (- (- ?x48094 (* (* 2.0 l_0_16_262) l_0_16_271)) (* (* 2.0 l_0_16_287) l_0_16_296))))
 (let ((?x48102 (- (- ?x48098 (* (* 2.0 l_0_16_288) l_0_16_297)) (* (* 2.0 l_0_16_289) l_0_16_298))))
 (= (+ (- ?x48102 (* (* 2.0 l_0_16_290) l_0_16_299)) ?x26359) 0.0))))))))))))
(assert
 (let ((?x44537 (* 2.0 l_0_16_57)))
 (let ((?x46703 (* ?x44537 l_0_16_78)))
 (let ((?x48137 (- (* (* (- 2.0) l_0_16_106) l_0_16_85) (* (* 2.0 l_0_16_203) l_0_16_218))))
 (let ((?x48141 (- (- ?x48137 (* (* 2.0 l_0_16_204) l_0_16_219)) (* (* 2.0 l_0_16_205) l_0_16_220))))
 (let ((?x48145 (- (- ?x48141 (* (* 2.0 l_0_16_206) l_0_16_221)) (* (* 2.0 l_0_16_231) l_0_16_246))))
 (let ((?x48149 (- (- ?x48145 (* (* 2.0 l_0_16_232) l_0_16_247)) (* (* 2.0 l_0_16_233) l_0_16_248))))
 (let ((?x48153 (- (- ?x48149 (* (* 2.0 l_0_16_234) l_0_16_249)) (* (* 2.0 l_0_16_259) l_0_16_274))))
 (let ((?x48157 (- (- ?x48153 (* (* 2.0 l_0_16_260) l_0_16_275)) (* (* 2.0 l_0_16_261) l_0_16_276))))
 (let ((?x48161 (- (- ?x48157 (* (* 2.0 l_0_16_262) l_0_16_277)) (* (* 2.0 l_0_16_287) l_0_16_302))))
 (let ((?x48165 (- (- ?x48161 (* (* 2.0 l_0_16_288) l_0_16_303)) (* (* 2.0 l_0_16_289) l_0_16_304))))
 (= (+ (- ?x48165 (* (* 2.0 l_0_16_290) l_0_16_305)) ?x46703) 0.0))))))))))))
(assert
 (let ((?x46876 (* l_0_16_94 l_0_16_94)))
 (let ((?x46874 (* l_0_16_93 l_0_16_93)))
 (let ((?x46872 (* l_0_16_92 l_0_16_92)))
 (let ((?x46870 (* l_0_16_91 l_0_16_91)))
 (let ((?x46868 (* l_0_16_66 l_0_16_66)))
 (let ((?x46866 (* l_0_16_65 l_0_16_65)))
 (let ((?x48219 (+ (+ (+ (* l_0_16_63 l_0_16_63) (* l_0_16_64 l_0_16_64)) ?x46866) ?x46868)))
 (= (- (- (- (- ?x48219 ?x46870) ?x46872) ?x46874) ?x46876) 0.0)))))))))
(assert
 (let ((?x45148 (* (* 2.0 l_0_16_94) l_0_16_98)))
 (let ((?x45145 (* (* 2.0 l_0_16_93) l_0_16_97)))
 (let ((?x45142 (* (* 2.0 l_0_16_92) l_0_16_96)))
 (let ((?x45139 (* (* 2.0 l_0_16_91) l_0_16_95)))
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x45136 (* ?x45135 l_0_16_70)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x45133 (* ?x45132 l_0_16_69)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x45130 (* ?x45129 l_0_16_68)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x45127 (* ?x45126 l_0_16_67)))
 (let ((?x48239 (- (- (- (- (+ (+ (+ ?x45127 ?x45130) ?x45133) ?x45136) ?x45139) ?x45142) ?x45145) ?x45148)))
 (= ?x48239 0.0)))))))))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46907 (* ?x45135 l_0_16_75)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46905 (* ?x45132 l_0_16_74)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46903 (* ?x45129 l_0_16_73)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46901 (* ?x45126 l_0_16_72)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x46899 (* ?x45434 l_0_16_94)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x46897 (* ?x45431 l_0_16_93)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x46895 (* ?x45428 l_0_16_92)))
 (let ((?x48260 (+ (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_91) ?x46895) ?x46897) ?x46899) ?x46901)))
 (= (+ (+ (+ ?x48260 ?x46903) ?x46905) ?x46907) 0.0)))))))))))))))))
(assert
 (let ((?x45135 (* 2.0 l_0_16_66)))
 (let ((?x46949 (* ?x45135 l_0_16_81)))
 (let ((?x45132 (* 2.0 l_0_16_65)))
 (let ((?x46947 (* ?x45132 l_0_16_80)))
 (let ((?x45129 (* 2.0 l_0_16_64)))
 (let ((?x46945 (* ?x45129 l_0_16_79)))
 (let ((?x45126 (* 2.0 l_0_16_63)))
 (let ((?x46943 (* ?x45126 l_0_16_78)))
 (let ((?x44355 (* 2.0 l_0_16_109)))
 (let ((?x46941 (* ?x44355 l_0_16_94)))
 (let ((?x44352 (* 2.0 l_0_16_108)))
 (let ((?x46939 (* ?x44352 l_0_16_93)))
 (let ((?x44349 (* 2.0 l_0_16_107)))
 (let ((?x46937 (* ?x44349 l_0_16_92)))
 (let ((?x48272 (+ (- (- (- (* (* (- 2.0) l_0_16_106) l_0_16_91) ?x46937) ?x46939) ?x46941) ?x46943)))
 (= (+ (+ (+ ?x48272 ?x46945) ?x46947) ?x46949) 0.0)))))))))))))))))
(assert
 (let ((?x45361 (* l_0_16_99 l_0_16_99)))
 (let ((?x45359 (* l_0_16_98 l_0_16_98)))
 (let ((?x45357 (* l_0_16_97 l_0_16_97)))
 (let ((?x45355 (* l_0_16_96 l_0_16_96)))
 (let ((?x45353 (* l_0_16_95 l_0_16_95)))
 (let ((?x45351 (* l_0_16_71 l_0_16_71)))
 (let ((?x45349 (* l_0_16_70 l_0_16_70)))
 (let ((?x45347 (* l_0_16_69 l_0_16_69)))
 (let ((?x48284 (+ (+ (+ (* l_0_16_67 l_0_16_67) (* l_0_16_68 l_0_16_68)) ?x45347) ?x45349)))
 (= (- (- (- (- (- (+ ?x48284 ?x45351) ?x45353) ?x45355) ?x45357) ?x45359) ?x45361) 0.0)))))))))))
(assert
 (let ((?x44422 (* 2.0 l_0_16_71)))
 (let ((?x45484 (* ?x44422 l_0_16_76)))
 (let ((?x44419 (* 2.0 l_0_16_70)))
 (let ((?x45482 (* ?x44419 l_0_16_75)))
 (let ((?x44416 (* 2.0 l_0_16_69)))
 (let ((?x45480 (* ?x44416 l_0_16_74)))
 (let ((?x44413 (* 2.0 l_0_16_68)))
 (let ((?x45478 (* ?x44413 l_0_16_73)))
 (let ((?x44410 (* 2.0 l_0_16_67)))
 (let ((?x45476 (* ?x44410 l_0_16_72)))
 (let ((?x45437 (* 2.0 l_0_16_104)))
 (let ((?x45438 (* ?x45437 l_0_16_99)))
 (let ((?x45434 (* 2.0 l_0_16_103)))
 (let ((?x45435 (* ?x45434 l_0_16_98)))
 (let ((?x45431 (* 2.0 l_0_16_102)))
 (let ((?x45432 (* ?x45431 l_0_16_97)))
 (let ((?x45428 (* 2.0 l_0_16_101)))
 (let ((?x45429 (* ?x45428 l_0_16_96)))
 (let ((?x48308 (- (- (- (- (* (* (- 2.0) l_0_16_100) l_0_16_95) ?x45429) ?x45432) ?x45435) ?x45438)))
 (= (+ (+ (+ (+ (+ ?x48308 ?x45476) ?x45478) ?x45480) ?x45482) ?x45484) 0.0)))))))))))))))))))))
(assert
 (let ((?x46993 (* l_0_16_77 l_0_16_77)))
 (let ((?x46991 (* l_0_16_76 l_0_16_76)))
 (let ((?x46989 (* l_0_16_75 l_0_16_75)))
 (let ((?x46987 (* l_0_16_74 l_0_16_74)))
 (let ((?x46985 (* l_0_16_73 l_0_16_73)))
 (let ((?x46983 (* l_0_16_72 l_0_16_72)))
 (let ((?x46981 (* l_0_16_105 l_0_16_105)))
 (let ((?x46979 (* l_0_16_104 l_0_16_104)))
 (let ((?x46977 (* l_0_16_103 l_0_16_103)))
 (let ((?x46975 (* l_0_16_102 l_0_16_102)))
 (let ((?x15816 (- (- (* (- l_0_16_100) l_0_16_100) (* l_0_16_101 l_0_16_101)) ?x46975)))
 (let ((?x29122 (+ (+ (+ (+ (- (- (- ?x15816 ?x46977) ?x46979) ?x46981) ?x46983) ?x46985) ?x46987) ?x46989)))
 (= (+ (+ ?x29122 ?x46991) ?x46993) 0.0))))))))))))))
(assert
 (let ((?x47056 (* l_0_16_84 l_0_16_84)))
 (let ((?x47054 (* l_0_16_83 l_0_16_83)))
 (let ((?x47052 (* l_0_16_82 l_0_16_82)))
 (let ((?x47050 (* l_0_16_81 l_0_16_81)))
 (let ((?x47048 (* l_0_16_80 l_0_16_80)))
 (let ((?x47046 (* l_0_16_79 l_0_16_79)))
 (let ((?x47044 (* l_0_16_78 l_0_16_78)))
 (let ((?x47042 (* l_0_16_112 l_0_16_112)))
 (let ((?x47040 (* l_0_16_111 l_0_16_111)))
 (let ((?x47038 (* l_0_16_110 l_0_16_110)))
 (let ((?x47036 (* l_0_16_109 l_0_16_109)))
 (let ((?x47034 (* l_0_16_108 l_0_16_108)))
 (let ((?x48335 (- (- (* (- l_0_16_106) l_0_16_106) (* l_0_16_107 l_0_16_107)) ?x47034)))
 (let ((?x48342 (+ (+ (+ (- (- (- (- ?x48335 ?x47036) ?x47038) ?x47040) ?x47042) ?x47044) ?x47046) ?x47048)))
 (= (+ (+ (+ (+ ?x48342 ?x47050) ?x47052) ?x47054) ?x47056) 0.0))))))))))))))))
(assert
 (let ((?x48363 (* l_0_16_281 l_0_16_281)))
 (let ((?x48361 (* l_0_16_253 l_0_16_253)))
 (let ((?x48362 (- (- (* (- l_0_16_197) l_0_16_197) (* l_0_16_225 l_0_16_225)) ?x48361)))
 (= (- ?x48362 ?x48363) 0.0)))))
(assert
 (let ((?x48382 (- (* (* (- 2.0) l_0_16_197) l_0_16_207) (* (* 2.0 l_0_16_225) l_0_16_235))))
 (let ((?x48386 (- (- ?x48382 (* (* 2.0 l_0_16_253) l_0_16_263)) (* (* 2.0 l_0_16_281) l_0_16_291))))
 (= ?x48386 0.0))))
(assert
 (let ((?x48407 (- (* (* (- 2.0) l_0_16_197) l_0_16_212) (* (* 2.0 l_0_16_225) l_0_16_240))))
 (let ((?x48411 (- (- ?x48407 (* (* 2.0 l_0_16_253) l_0_16_268)) (* (* 2.0 l_0_16_281) l_0_16_296))))
 (= ?x48411 0.0))))
(assert
 (let ((?x48432 (- (* (* (- 2.0) l_0_16_197) l_0_16_218) (* (* 2.0 l_0_16_225) l_0_16_246))))
 (let ((?x48436 (- (- ?x48432 (* (* 2.0 l_0_16_253) l_0_16_274)) (* (* 2.0 l_0_16_281) l_0_16_302))))
 (= ?x48436 0.0))))
(assert
 (let ((?x48493 (* l_0_16_295 l_0_16_295)))
 (let ((?x48491 (* l_0_16_294 l_0_16_294)))
 (let ((?x48489 (* l_0_16_293 l_0_16_293)))
 (let ((?x48487 (* l_0_16_292 l_0_16_292)))
 (let ((?x48485 (* l_0_16_291 l_0_16_291)))
 (let ((?x48483 (* l_0_16_267 l_0_16_267)))
 (let ((?x48481 (* l_0_16_266 l_0_16_266)))
 (let ((?x48479 (* l_0_16_265 l_0_16_265)))
 (let ((?x48477 (* l_0_16_264 l_0_16_264)))
 (let ((?x48475 (* l_0_16_263 l_0_16_263)))
 (let ((?x48473 (* l_0_16_239 l_0_16_239)))
 (let ((?x48471 (* l_0_16_238 l_0_16_238)))
 (let ((?x48469 (* l_0_16_237 l_0_16_237)))
 (let ((?x48467 (* l_0_16_236 l_0_16_236)))
 (let ((?x48465 (* l_0_16_235 l_0_16_235)))
 (let ((?x48463 (* l_0_16_211 l_0_16_211)))
 (let ((?x48461 (* l_0_16_210 l_0_16_210)))
 (let ((?x48459 (* l_0_16_209 l_0_16_209)))
 (let ((?x48460 (- (- (* (- l_0_16_207) l_0_16_207) (* l_0_16_208 l_0_16_208)) ?x48459)))
 (let ((?x48474 (- (- (- (- (- (- (- ?x48460 ?x48461) ?x48463) ?x48465) ?x48467) ?x48469) ?x48471) ?x48473)))
 (let ((?x48488 (- (- (- (- (- (- (- ?x48474 ?x48475) ?x48477) ?x48479) ?x48481) ?x48483) ?x48485) ?x48487)))
 (= (- (- (- ?x48488 ?x48489) ?x48491) ?x48493) 0.0)))))))))))))))))))))))
(assert
 (let ((?x48537 (- (* (* (- 2.0) l_0_16_207) l_0_16_212) (* (* 2.0 l_0_16_208) l_0_16_213))))
 (let ((?x48541 (- (- ?x48537 (* (* 2.0 l_0_16_209) l_0_16_214)) (* (* 2.0 l_0_16_210) l_0_16_215))))
 (let ((?x48545 (- (- ?x48541 (* (* 2.0 l_0_16_211) l_0_16_216)) (* (* 2.0 l_0_16_235) l_0_16_240))))
 (let ((?x48549 (- (- ?x48545 (* (* 2.0 l_0_16_236) l_0_16_241)) (* (* 2.0 l_0_16_237) l_0_16_242))))
 (let ((?x48553 (- (- ?x48549 (* (* 2.0 l_0_16_238) l_0_16_243)) (* (* 2.0 l_0_16_239) l_0_16_244))))
 (let ((?x48557 (- (- ?x48553 (* (* 2.0 l_0_16_263) l_0_16_268)) (* (* 2.0 l_0_16_264) l_0_16_269))))
 (let ((?x48561 (- (- ?x48557 (* (* 2.0 l_0_16_265) l_0_16_270)) (* (* 2.0 l_0_16_266) l_0_16_271))))
 (let ((?x48565 (- (- ?x48561 (* (* 2.0 l_0_16_267) l_0_16_272)) (* (* 2.0 l_0_16_291) l_0_16_296))))
 (let ((?x48569 (- (- ?x48565 (* (* 2.0 l_0_16_292) l_0_16_297)) (* (* 2.0 l_0_16_293) l_0_16_298))))
 (let ((?x48573 (- (- ?x48569 (* (* 2.0 l_0_16_294) l_0_16_299)) (* (* 2.0 l_0_16_295) l_0_16_300))))
 (= ?x48573 0.0))))))))))))
(assert
 (let ((?x48647 (* l_0_16_301 l_0_16_301)))
 (let ((?x48645 (* l_0_16_300 l_0_16_300)))
 (let ((?x48643 (* l_0_16_299 l_0_16_299)))
 (let ((?x48641 (* l_0_16_298 l_0_16_298)))
 (let ((?x48639 (* l_0_16_297 l_0_16_297)))
 (let ((?x48637 (* l_0_16_296 l_0_16_296)))
 (let ((?x48635 (* l_0_16_273 l_0_16_273)))
 (let ((?x48633 (* l_0_16_272 l_0_16_272)))
 (let ((?x48631 (* l_0_16_271 l_0_16_271)))
 (let ((?x48629 (* l_0_16_270 l_0_16_270)))
 (let ((?x48627 (* l_0_16_269 l_0_16_269)))
 (let ((?x48625 (* l_0_16_268 l_0_16_268)))
 (let ((?x48623 (* l_0_16_245 l_0_16_245)))
 (let ((?x48621 (* l_0_16_244 l_0_16_244)))
 (let ((?x48619 (* l_0_16_243 l_0_16_243)))
 (let ((?x48617 (* l_0_16_242 l_0_16_242)))
 (let ((?x48615 (* l_0_16_241 l_0_16_241)))
 (let ((?x48613 (* l_0_16_240 l_0_16_240)))
 (let ((?x48611 (* l_0_16_217 l_0_16_217)))
 (let ((?x48609 (* l_0_16_216 l_0_16_216)))
 (let ((?x17134 (* l_0_16_215 l_0_16_215)))
 (let ((?x16992 (* l_0_16_214 l_0_16_214)))
 (let ((?x17138 (- (- (* (- l_0_16_212) l_0_16_212) (* l_0_16_213 l_0_16_213)) ?x16992)))
 (let ((?x48620 (- (- (- (- (- (- (- ?x17138 ?x17134) ?x48609) ?x48611) ?x48613) ?x48615) ?x48617) ?x48619)))
 (let ((?x48634 (- (- (- (- (- (- (- ?x48620 ?x48621) ?x48623) ?x48625) ?x48627) ?x48629) ?x48631) ?x48633)))
 (let ((?x48648 (- (- (- (- (- (- (- ?x48634 ?x48635) ?x48637) ?x48639) ?x48641) ?x48643) ?x48645) ?x48647)))
 (= ?x48648 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x48746 (* l_0_16_308 l_0_16_308)))
 (let ((?x48744 (* l_0_16_307 l_0_16_307)))
 (let ((?x48742 (* l_0_16_306 l_0_16_306)))
 (let ((?x48740 (* l_0_16_305 l_0_16_305)))
 (let ((?x48738 (* l_0_16_304 l_0_16_304)))
 (let ((?x48736 (* l_0_16_303 l_0_16_303)))
 (let ((?x48734 (* l_0_16_302 l_0_16_302)))
 (let ((?x48732 (* l_0_16_280 l_0_16_280)))
 (let ((?x48730 (* l_0_16_279 l_0_16_279)))
 (let ((?x48728 (* l_0_16_278 l_0_16_278)))
 (let ((?x48726 (* l_0_16_277 l_0_16_277)))
 (let ((?x48724 (* l_0_16_276 l_0_16_276)))
 (let ((?x48722 (* l_0_16_275 l_0_16_275)))
 (let ((?x48720 (* l_0_16_274 l_0_16_274)))
 (let ((?x48718 (* l_0_16_252 l_0_16_252)))
 (let ((?x48716 (* l_0_16_251 l_0_16_251)))
 (let ((?x48714 (* l_0_16_250 l_0_16_250)))
 (let ((?x48712 (* l_0_16_249 l_0_16_249)))
 (let ((?x48710 (* l_0_16_248 l_0_16_248)))
 (let ((?x48708 (* l_0_16_247 l_0_16_247)))
 (let ((?x48706 (* l_0_16_246 l_0_16_246)))
 (let ((?x48704 (* l_0_16_224 l_0_16_224)))
 (let ((?x48702 (* l_0_16_223 l_0_16_223)))
 (let ((?x48700 (* l_0_16_222 l_0_16_222)))
 (let ((?x48698 (* l_0_16_221 l_0_16_221)))
 (let ((?x48696 (* l_0_16_220 l_0_16_220)))
 (let ((?x48697 (- (- (* (- l_0_16_218) l_0_16_218) (* l_0_16_219 l_0_16_219)) ?x48696)))
 (let ((?x48711 (- (- (- (- (- (- (- ?x48697 ?x48698) ?x48700) ?x48702) ?x48704) ?x48706) ?x48708) ?x48710)))
 (let ((?x48725 (- (- (- (- (- (- (- ?x48711 ?x48712) ?x48714) ?x48716) ?x48718) ?x48720) ?x48722) ?x48724)))
 (let ((?x48739 (- (- (- (- (- (- (- ?x48725 ?x48726) ?x48728) ?x48730) ?x48732) ?x48734) ?x48736) ?x48738)))
 (= (- (- (- (- ?x48739 ?x48740) ?x48742) ?x48744) ?x48746) 0.0))))))))))))))))))))))))))))))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_28 0.0))
(assert
 (>= l_0_16_29 0.0))
(assert
 (>= l_0_16_31 0.0))
(assert
 (>= l_0_16_34 0.0))
(assert
 (>= l_0_16_38 0.0))
(assert
 (>= l_0_16_43 0.0))
(assert
 (>= l_0_16_49 0.0))
(assert
 (>= l_0_16_56 0.0))
(assert
 (>= l_0_16_57 0.0))
(assert
 (>= l_0_16_59 0.0))
(assert
 (>= l_0_16_62 0.0))
(assert
 (>= l_0_16_66 0.0))
(assert
 (>= l_0_16_71 0.0))
(assert
 (>= l_0_16_77 0.0))
(assert
 (>= l_0_16_84 0.0))
(assert
 (>= l_0_16_85 0.0))
(assert
 (>= l_0_16_87 0.0))
(assert
 (>= l_0_16_90 0.0))
(assert
 (>= l_0_16_94 0.0))
(assert
 (>= l_0_16_99 0.0))
(assert
 (>= l_0_16_105 0.0))
(assert
 (>= l_0_16_112 0.0))
(assert
 (>= l_0_16_113 0.0))
(assert
 (>= l_0_16_115 0.0))
(assert
 (>= l_0_16_118 0.0))
(assert
 (>= l_0_16_122 0.0))
(assert
 (>= l_0_16_127 0.0))
(assert
 (>= l_0_16_133 0.0))
(assert
 (>= l_0_16_140 0.0))
(assert
 (>= l_0_16_141 0.0))
(assert
 (>= l_0_16_143 0.0))
(assert
 (>= l_0_16_146 0.0))
(assert
 (>= l_0_16_150 0.0))
(assert
 (>= l_0_16_155 0.0))
(assert
 (>= l_0_16_161 0.0))
(assert
 (>= l_0_16_168 0.0))
(assert
 (>= l_0_16_169 0.0))
(assert
 (>= l_0_16_171 0.0))
(assert
 (>= l_0_16_174 0.0))
(assert
 (>= l_0_16_178 0.0))
(assert
 (>= l_0_16_183 0.0))
(assert
 (>= l_0_16_189 0.0))
(assert
 (>= l_0_16_196 0.0))
(assert
 (>= l_0_16_197 0.0))
(assert
 (>= l_0_16_199 0.0))
(assert
 (>= l_0_16_202 0.0))
(assert
 (>= l_0_16_206 0.0))
(assert
 (>= l_0_16_211 0.0))
(assert
 (>= l_0_16_217 0.0))
(assert
 (>= l_0_16_224 0.0))
(assert
 (>= l_0_16_225 0.0))
(assert
 (>= l_0_16_227 0.0))
(assert
 (>= l_0_16_230 0.0))
(assert
 (>= l_0_16_234 0.0))
(assert
 (>= l_0_16_239 0.0))
(assert
 (>= l_0_16_245 0.0))
(assert
 (>= l_0_16_252 0.0))
(assert
 (>= l_0_16_253 0.0))
(assert
 (>= l_0_16_255 0.0))
(assert
 (>= l_0_16_258 0.0))
(assert
 (>= l_0_16_262 0.0))
(assert
 (>= l_0_16_267 0.0))
(assert
 (>= l_0_16_273 0.0))
(assert
 (>= l_0_16_280 0.0))
(assert
 (>= l_0_16_281 0.0))
(assert
 (>= l_0_16_283 0.0))
(assert
 (>= l_0_16_286 0.0))
(assert
 (>= l_0_16_290 0.0))
(assert
 (>= l_0_16_295 0.0))
(assert
 (>= l_0_16_301 0.0))
(assert
 (>= l_0_16_308 0.0))
(assert
 (let ((?x48868 (* l_0_17_85 l_0_17_85)))
 (let ((?x48866 (* l_0_17_57 l_0_17_57)))
 (let ((?x48849 (* l_0_17_169 l_0_17_169)))
 (let ((?x48850 (- (- (* (- l_0_17_113) l_0_17_113) (* l_0_17_141 l_0_17_141)) ?x48849)))
 (let ((?x48856 (- (- ?x48850 (* (* 2.0 l_0_17_197) l_0_17_200)) (* (* 2.0 l_0_17_225) l_0_17_228))))
 (let ((?x48862 (- (- ?x48856 (* (* 2.0 l_0_17_253) l_0_17_256)) (* (* 2.0 l_0_17_281) l_0_17_284))))
 (let ((?x48870 (+ (+ (- (- ?x48862 (* (* 2.0 l_0_17_309) l_0_17_312)) ?x48866) ?x48868) 1.0)))
 (= ?x48870 0.0)))))))))
(assert
 (let ((?x48895 (* l_0_17_309 l_0_17_309)))
 (let ((?x48893 (* l_0_17_281 l_0_17_281)))
 (let ((?x38953 (* l_0_17_253 l_0_17_253)))
 (let ((?x38954 (- (- (* (- l_0_17_197) l_0_17_197) (* l_0_17_225 l_0_17_225)) ?x38953)))
 (= (- (- ?x38954 ?x48893) ?x48895) 0.0))))))
(assert
 (let ((?x48957 (* l_0_17_29 l_0_17_29)))
 (let ((?x48914 (- (+ (* (- l_0_17_1) l_0_17_1) (* l_0_17_141 l_0_17_141)) (* (* 2.0 l_0_17_207) l_0_17_218))))
 (let ((?x48920 (- (- ?x48914 (* (* 2.0 l_0_17_208) l_0_17_219)) (* (* 2.0 l_0_17_209) l_0_17_220))))
 (let ((?x48926 (- (- ?x48920 (* (* 2.0 l_0_17_210) l_0_17_221)) (* (* 2.0 l_0_17_211) l_0_17_222))))
 (let ((?x48932 (- (- ?x48926 (* (* 2.0 l_0_17_235) l_0_17_246)) (* (* 2.0 l_0_17_236) l_0_17_247))))
 (let ((?x48938 (- (- ?x48932 (* (* 2.0 l_0_17_237) l_0_17_248)) (* (* 2.0 l_0_17_238) l_0_17_249))))
 (let ((?x48944 (- (- ?x48938 (* (* 2.0 l_0_17_239) l_0_17_250)) (* (* 2.0 l_0_17_263) l_0_17_274))))
 (let ((?x48950 (- (- ?x48944 (* (* 2.0 l_0_17_264) l_0_17_275)) (* (* 2.0 l_0_17_265) l_0_17_276))))
 (let ((?x48956 (- (- ?x48950 (* (* 2.0 l_0_17_266) l_0_17_277)) (* (* 2.0 l_0_17_267) l_0_17_278))))
 (let ((?x48964 (- (- (+ ?x48956 ?x48957) (* (* 2.0 l_0_17_291) l_0_17_302)) (* (* 2.0 l_0_17_292) l_0_17_303))))
 (let ((?x48970 (- (- ?x48964 (* (* 2.0 l_0_17_293) l_0_17_304)) (* (* 2.0 l_0_17_294) l_0_17_305))))
 (let ((?x48976 (- (- ?x48970 (* (* 2.0 l_0_17_295) l_0_17_306)) (* (* 2.0 l_0_17_319) l_0_17_330))))
 (let ((?x48982 (- (- ?x48976 (* (* 2.0 l_0_17_320) l_0_17_331)) (* (* 2.0 l_0_17_321) l_0_17_332))))
 (let ((?x48988 (- (- ?x48982 (* (* 2.0 l_0_17_322) l_0_17_333)) (* (* 2.0 l_0_17_323) l_0_17_334))))
 (= ?x48988 0.0))))))))))))))))
(assert
 (let ((?x49107 (* 2.0 l_0_17_43)))
 (let ((?x49108 (* ?x49107 l_0_17_54)))
 (let ((?x49104 (* 2.0 l_0_17_42)))
 (let ((?x49105 (* ?x49104 l_0_17_53)))
 (let ((?x49101 (* 2.0 l_0_17_41)))
 (let ((?x49102 (* ?x49101 l_0_17_52)))
 (let ((?x49098 (* 2.0 l_0_17_40)))
 (let ((?x49099 (* ?x49098 l_0_17_51)))
 (let ((?x49095 (* 2.0 l_0_17_39)))
 (let ((?x49096 (* ?x49095 l_0_17_50)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49093 (* ?x49092 l_0_17_30)))
 (let ((?x49074 (* 2.0 l_0_17_15)))
 (let ((?x49075 (* ?x49074 l_0_17_26)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49072 (* ?x49071 l_0_17_142)))
 (let ((?x49068 (* 2.0 l_0_17_14)))
 (let ((?x49069 (* ?x49068 l_0_17_25)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x49066 (* ?x49065 l_0_17_24)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49063 (* ?x49062 l_0_17_23)))
 (let ((?x49061 (+ (* (* (- 2.0) l_0_17_1) l_0_17_2) (* (* 2.0 l_0_17_11) l_0_17_22))))
 (let ((?x49079 (+ (+ (+ (+ (+ (+ ?x49061 ?x49063) ?x49066) ?x49069) ?x49072) ?x49075) (* (* 4.0 l_0_17_179) l_0_17_190))))
 (let ((?x49085 (+ (+ ?x49079 (* (* 4.0 l_0_17_180) l_0_17_191)) (* (* 4.0 l_0_17_181) l_0_17_192))))
 (let ((?x49091 (+ (+ ?x49085 (* (* 4.0 l_0_17_182) l_0_17_193)) (* (* 4.0 l_0_17_183) l_0_17_194))))
 (= (- (- (- (- (- (+ ?x49091 ?x49093) ?x49096) ?x49099) ?x49102) ?x49105) ?x49108) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x49247 (* ?x49246 l_0_17_82)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x49244 (* ?x49243 l_0_17_81)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x49241 (* ?x49240 l_0_17_80)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x49238 (* ?x49237 l_0_17_79)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x49235 (* ?x49234 l_0_17_78)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49232 (* ?x49092 l_0_17_32)))
 (let ((?x49214 (* 2.0 l_0_17_155)))
 (let ((?x49215 (* ?x49214 l_0_17_166)))
 (let ((?x49211 (* 2.0 l_0_17_154)))
 (let ((?x49212 (* ?x49211 l_0_17_165)))
 (let ((?x49208 (* 2.0 l_0_17_153)))
 (let ((?x49209 (* ?x49208 l_0_17_164)))
 (let ((?x49205 (* 2.0 l_0_17_152)))
 (let ((?x49206 (* ?x49205 l_0_17_163)))
 (let ((?x49202 (* 2.0 l_0_17_151)))
 (let ((?x49203 (* ?x49202 l_0_17_162)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49200 (* ?x49071 l_0_17_144)))
 (let ((?x49183 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x49180 (* ?x49179 l_0_17_98)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x49177 (* ?x49176 l_0_17_97)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x49174 (* ?x49173 l_0_17_96)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x49171 (* ?x49170 l_0_17_95)))
 (let ((?x49181 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_4) ?x49171) ?x49174) ?x49177) ?x49180)))
 (let ((?x49190 (- (- (+ ?x49181 ?x49183) (* (* 2.0 l_0_17_123) l_0_17_134)) (* (* 2.0 l_0_17_124) l_0_17_135))))
 (let ((?x49196 (- (- ?x49190 (* (* 2.0 l_0_17_125) l_0_17_136)) (* (* 2.0 l_0_17_126) l_0_17_137))))
 (let ((?x49207 (- (- (+ (- ?x49196 (* (* 2.0 l_0_17_127) l_0_17_138)) ?x49200) ?x49203) ?x49206)))
 (let ((?x49219 (- (- (- (- ?x49207 ?x49209) ?x49212) ?x49215) (* (* 2.0 l_0_17_179) l_0_17_190))))
 (let ((?x49225 (- (- ?x49219 (* (* 2.0 l_0_17_180) l_0_17_191)) (* (* 2.0 l_0_17_181) l_0_17_192))))
 (let ((?x49231 (- (- ?x49225 (* (* 2.0 l_0_17_182) l_0_17_193)) (* (* 2.0 l_0_17_183) l_0_17_194))))
 (= (- (- (- (- (- (+ ?x49231 ?x49232) ?x49235) ?x49238) ?x49241) ?x49244) ?x49247) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x49247 (* ?x49246 l_0_17_82)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x49244 (* ?x49243 l_0_17_81)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x49241 (* ?x49240 l_0_17_80)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x49238 (* ?x49237 l_0_17_79)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x49235 (* ?x49234 l_0_17_78)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49320 (* ?x49092 l_0_17_35)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49318 (* ?x49071 l_0_17_147)))
 (let ((?x49183 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x49180 (* ?x49179 l_0_17_98)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x49177 (* ?x49176 l_0_17_97)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x49174 (* ?x49173 l_0_17_96)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x49171 (* ?x49170 l_0_17_95)))
 (let ((?x49316 (- (- (- (- (* (* (- 2.0) l_0_17_1) l_0_17_7) ?x49171) ?x49174) ?x49177) ?x49180)))
 (let ((?x49325 (+ (+ (+ (+ (+ (+ (- ?x49316 ?x49183) ?x49318) ?x49320) ?x49235) ?x49238) ?x49241) ?x49244)))
 (= (+ ?x49325 ?x49247) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49339 (* ?x49092 l_0_17_39)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49337 (* ?x49071 l_0_17_151)))
 (= (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_11) ?x49337) ?x49339) 0.0))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x49359 (* ?x49358 l_0_17_95)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x49356 (* ?x49355 l_0_17_67)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49348 (* ?x49092 l_0_17_44)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49345 (* ?x49071 l_0_17_156)))
 (let ((?x49360 (+ (- (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_16) ?x49345) ?x49348) ?x49356) ?x49359)))
 (= ?x49360 0.0)))))))))))
(assert
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49379 (* ?x49092 l_0_17_50)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49377 (* ?x49071 l_0_17_162)))
 (= (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_22) ?x49377) ?x49379) 0.0))))))
(assert
 (let ((?x49399 (* l_0_17_31 l_0_17_31)))
 (let ((?x49397 (* l_0_17_30 l_0_17_30)))
 (let ((?x49395 (* l_0_17_3 l_0_17_3)))
 (let ((?x49388 (* l_0_17_2 l_0_17_2)))
 (let ((?x49394 (- (+ (* l_0_17_142 l_0_17_142) (* l_0_17_143 l_0_17_143)) ?x49388)))
 (= (+ (+ (- ?x49394 ?x49395) ?x49397) ?x49399) 0.0)))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49422 (* ?x49421 l_0_17_33)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49419 (* ?x49418 l_0_17_32)))
 (let ((?x49415 (* 2.0 l_0_17_3)))
 (let ((?x49416 (* ?x49415 l_0_17_5)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x49413 (* ?x49412 l_0_17_4)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49410 (* ?x49409 l_0_17_145)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49408 (* ?x39286 l_0_17_144)))
 (= (+ (+ (- (- (+ ?x49408 ?x49410) ?x49413) ?x49416) ?x49419) ?x49422) 0.0))))))))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49441 (* ?x49421 l_0_17_36)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x39288 (* ?x49418 l_0_17_35)))
 (let ((?x49415 (* 2.0 l_0_17_3)))
 (let ((?x17754 (* ?x49415 l_0_17_8)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x39267 (* ?x49412 l_0_17_7)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x39287 (* ?x49409 l_0_17_148)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x39284 (* ?x39286 l_0_17_147)))
 (= (+ (+ (- (- (+ ?x39284 ?x39287) ?x39267) ?x17754) ?x39288) ?x49441) 0.0))))))))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49465 (* ?x49421 l_0_17_40)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49463 (* ?x49418 l_0_17_39)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49461 (* ?x49409 l_0_17_152)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49459 (* ?x39286 l_0_17_151)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49457 (* ?x49062 l_0_17_3)))
 (let ((?x49464 (+ (+ (+ (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x49457) ?x49459) ?x49461) ?x49463)))
 (= (+ ?x49464 ?x49465) 0.0)))))))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x49506 (* ?x49505 l_0_17_96)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x49503 (* ?x49502 l_0_17_95)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x49500 (* ?x49499 l_0_17_68)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x49497 (* ?x49496 l_0_17_67)))
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49494 (* ?x49421 l_0_17_45)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49492 (* ?x49418 l_0_17_44)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49490 (* ?x49489 l_0_17_3)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49480 (* ?x49479 l_0_17_2)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49475 (* ?x49409 l_0_17_157)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49473 (* ?x39286 l_0_17_156)))
 (let ((?x49501 (- (- (+ (+ (- (- (+ ?x49473 ?x49475) ?x49480) ?x49490) ?x49492) ?x49494) ?x49497) ?x49500)))
 (= (+ (+ ?x49501 ?x49503) ?x49506) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49540 (* ?x49421 l_0_17_51)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49538 (* ?x49418 l_0_17_50)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49536 (* ?x49535 l_0_17_3)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x49533 (* ?x49412 l_0_17_22)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x18004 (* ?x49409 l_0_17_163)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x17999 (* ?x39286 l_0_17_162)))
 (= (+ (+ (- (- (+ ?x17999 ?x18004) ?x49533) ?x49536) ?x49538) ?x49540) 0.0))))))))))))))
(assert
 (let ((?x49577 (* l_0_17_6 l_0_17_6)))
 (let ((?x49575 (* l_0_17_5 l_0_17_5)))
 (let ((?x49573 (* l_0_17_4 l_0_17_4)))
 (let ((?x49571 (* l_0_17_34 l_0_17_34)))
 (let ((?x49569 (* l_0_17_33 l_0_17_33)))
 (let ((?x49567 (* l_0_17_32 l_0_17_32)))
 (let ((?x49565 (* l_0_17_146 l_0_17_146)))
 (let ((?x49566 (+ (+ (* l_0_17_144 l_0_17_144) (* l_0_17_145 l_0_17_145)) ?x49565)))
 (= (- (- (- (+ (+ (+ ?x49566 ?x49567) ?x49569) ?x49571) ?x49573) ?x49575) ?x49577) 0.0))))))))))
(assert
 (let ((?x49609 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x49606 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x49603 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49600 (* ?x49599 l_0_17_37)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49597 (* ?x49596 l_0_17_36)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49594 (* ?x49593 l_0_17_35)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49591 (* ?x49590 l_0_17_149)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49588 (* ?x49587 l_0_17_148)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x49586 (* ?x39358 l_0_17_147)))
 (let ((?x49607 (- (- (+ (+ (+ (+ (+ ?x49586 ?x49588) ?x49591) ?x49594) ?x49597) ?x49600) ?x49603) ?x49606)))
 (= (- ?x49607 ?x49609) 0.0))))))))))))))))))
(assert
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49641 (* ?x49599 l_0_17_41)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49639 (* ?x49596 l_0_17_40)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49637 (* ?x49593 l_0_17_39)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49635 (* ?x49590 l_0_17_153)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x39364 (* ?x49587 l_0_17_152)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x39348 (* ?x39358 l_0_17_151)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x39362 (* ?x49065 l_0_17_6)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x39360 (* ?x49062 l_0_17_5)))
 (let ((?x28471 (+ (+ (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x39360) ?x39362) ?x39348) ?x39364)))
 (= (+ (+ (+ (+ ?x28471 ?x49635) ?x49637) ?x49639) ?x49641) 0.0)))))))))))))))))))
(assert
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x49697 (* ?x49696 l_0_17_97)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x49694 (* ?x49693 l_0_17_96)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x49691 (* ?x49690 l_0_17_95)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x49688 (* ?x49687 l_0_17_69)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x49685 (* ?x49684 l_0_17_68)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x49682 (* ?x49681 l_0_17_67)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49679 (* ?x49599 l_0_17_46)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49677 (* ?x49596 l_0_17_45)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49675 (* ?x49593 l_0_17_44)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x49673 (* ?x49672 l_0_17_6)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49670 (* ?x49489 l_0_17_5)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49668 (* ?x49479 l_0_17_4)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49666 (* ?x49590 l_0_17_158)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49664 (* ?x49587 l_0_17_157)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x49663 (* ?x39358 l_0_17_156)))
 (let ((?x49678 (+ (+ (- (- (- (+ (+ ?x49663 ?x49664) ?x49666) ?x49668) ?x49670) ?x49673) ?x49675) ?x49677)))
 (let ((?x49698 (+ (+ (+ (- (- (- (+ ?x49678 ?x49679) ?x49682) ?x49685) ?x49688) ?x49691) ?x49694) ?x49697)))
 (= ?x49698 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49766 (* ?x49599 l_0_17_52)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49764 (* ?x49596 l_0_17_51)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49762 (* ?x49593 l_0_17_50)))
 (let ((?x49759 (* 2.0 l_0_17_24)))
 (let ((?x49760 (* ?x49759 l_0_17_6)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49757 (* ?x49535 l_0_17_5)))
 (let ((?x49754 (* 2.0 l_0_17_22)))
 (let ((?x49755 (* ?x49754 l_0_17_4)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49741 (* ?x49590 l_0_17_164)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49738 (* ?x49587 l_0_17_163)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x39519 (* ?x39358 l_0_17_162)))
 (let ((?x49765 (+ (+ (- (- (- (+ (+ ?x39519 ?x49738) ?x49741) ?x49755) ?x49757) ?x49760) ?x49762) ?x49764)))
 (= (+ ?x49765 ?x49766) 0.0)))))))))))))))))))))
(assert
 (let ((?x49818 (* l_0_17_9 l_0_17_9)))
 (let ((?x49816 (* l_0_17_8 l_0_17_8)))
 (let ((?x49814 (* l_0_17_7 l_0_17_7)))
 (let ((?x49812 (* l_0_17_38 l_0_17_38)))
 (let ((?x49810 (* l_0_17_37 l_0_17_37)))
 (let ((?x49808 (* l_0_17_36 l_0_17_36)))
 (let ((?x49806 (* l_0_17_35 l_0_17_35)))
 (let ((?x49804 (* l_0_17_150 l_0_17_150)))
 (let ((?x49802 (* l_0_17_149 l_0_17_149)))
 (let ((?x49800 (* l_0_17_148 l_0_17_148)))
 (let ((?x49801 (+ (+ (* (- l_0_17_10) l_0_17_10) (* l_0_17_147 l_0_17_147)) ?x49800)))
 (let ((?x49815 (- (+ (+ (+ (+ (+ (+ ?x49801 ?x49802) ?x49804) ?x49806) ?x49808) ?x49810) ?x49812) ?x49814)))
 (= (- (- ?x49815 ?x49816) ?x49818) 0.0))))))))))))))
(assert
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49862 (* ?x49861 l_0_17_42)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49859 (* ?x49858 l_0_17_41)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49856 (* ?x49855 l_0_17_40)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49853 (* ?x49852 l_0_17_39)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49850 (* ?x49849 l_0_17_154)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49847 (* ?x49846 l_0_17_153)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49844 (* ?x49843 l_0_17_152)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49841 (* ?x49840 l_0_17_151)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x49838 (* ?x49065 l_0_17_9)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49836 (* ?x49062 l_0_17_8)))
 (let ((?x49059 (* 2.0 l_0_17_11)))
 (let ((?x49834 (* ?x49059 l_0_17_7)))
 (let ((?x49842 (+ (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x49834) ?x49836) ?x49838) ?x49841)))
 (let ((?x49863 (+ (+ (+ (+ (+ (+ (+ ?x49842 ?x49844) ?x49847) ?x49850) ?x49853) ?x49856) ?x49859) ?x49862)))
 (= ?x49863 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49940 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49937 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49934 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49931 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x49928 (* ?x49927 l_0_17_70)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x49925 (* ?x49924 l_0_17_69)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x49922 (* ?x49921 l_0_17_68)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x49919 (* ?x49918 l_0_17_67)))
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49916 (* ?x49861 l_0_17_47)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49914 (* ?x49858 l_0_17_46)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49912 (* ?x49855 l_0_17_45)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49910 (* ?x49852 l_0_17_44)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x49908 (* ?x49672 l_0_17_9)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49906 (* ?x49489 l_0_17_8)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49904 (* ?x49479 l_0_17_7)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49891 (* ?x49849 l_0_17_159)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49887 (* ?x49846 l_0_17_158)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49883 (* ?x49843 l_0_17_157)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49879 (* ?x49840 l_0_17_156)))
 (let ((?x49892 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_10) l_0_17_19) ?x49879) ?x49883) ?x49887) ?x49891)))
 (let ((?x49917 (+ (+ (+ (+ (- (- (- ?x49892 ?x49904) ?x49906) ?x49908) ?x49910) ?x49912) ?x49914) ?x49916)))
 (let ((?x49938 (+ (+ (+ (- (- (- (- ?x49917 ?x49919) ?x49922) ?x49925) ?x49928) ?x49931) ?x49934) ?x49937)))
 (= (+ ?x49938 ?x49940) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49979 (* ?x49861 l_0_17_53)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49977 (* ?x49858 l_0_17_52)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49975 (* ?x49855 l_0_17_51)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49973 (* ?x49852 l_0_17_50)))
 (let ((?x49759 (* 2.0 l_0_17_24)))
 (let ((?x49971 (* ?x49759 l_0_17_9)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49969 (* ?x49535 l_0_17_8)))
 (let ((?x49754 (* 2.0 l_0_17_22)))
 (let ((?x49967 (* ?x49754 l_0_17_7)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49965 (* ?x49849 l_0_17_165)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49963 (* ?x49846 l_0_17_164)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49961 (* ?x49843 l_0_17_163)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49959 (* ?x49840 l_0_17_162)))
 (let ((?x49966 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_10) l_0_17_25) ?x49959) ?x49961) ?x49963) ?x49965)))
 (let ((?x49980 (+ (+ (+ (+ (- (- (- ?x49966 ?x49967) ?x49969) ?x49971) ?x49973) ?x49975) ?x49977) ?x49979)))
 (= ?x49980 0.0))))))))))))))))))))))))))
(assert
 (let ((?x50046 (* l_0_17_43 l_0_17_43)))
 (let ((?x50044 (* l_0_17_42 l_0_17_42)))
 (let ((?x50042 (* l_0_17_41 l_0_17_41)))
 (let ((?x50040 (* l_0_17_40 l_0_17_40)))
 (let ((?x50038 (* l_0_17_39 l_0_17_39)))
 (let ((?x50036 (* l_0_17_155 l_0_17_155)))
 (let ((?x50034 (* l_0_17_154 l_0_17_154)))
 (let ((?x50032 (* l_0_17_153 l_0_17_153)))
 (let ((?x50030 (* l_0_17_152 l_0_17_152)))
 (let ((?x50028 (* l_0_17_151 l_0_17_151)))
 (let ((?x50026 (* l_0_17_15 l_0_17_15)))
 (let ((?x50024 (* l_0_17_14 l_0_17_14)))
 (let ((?x50022 (* l_0_17_13 l_0_17_13)))
 (let ((?x50023 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x50022)))
 (let ((?x50037 (+ (+ (+ (+ (+ (- (- ?x50023 ?x50024) ?x50026) ?x50028) ?x50030) ?x50032) ?x50034) ?x50036)))
 (= (+ (+ (+ (+ (+ ?x50037 ?x50038) ?x50040) ?x50042) ?x50044) ?x50046) 0.0)))))))))))))))))
(assert
 (let ((?x50120 (* l_0_17_99 l_0_17_99)))
 (let ((?x50118 (* l_0_17_98 l_0_17_98)))
 (let ((?x50116 (* l_0_17_97 l_0_17_97)))
 (let ((?x50114 (* l_0_17_96 l_0_17_96)))
 (let ((?x50112 (* l_0_17_95 l_0_17_95)))
 (let ((?x50110 (* l_0_17_71 l_0_17_71)))
 (let ((?x50108 (* l_0_17_70 l_0_17_70)))
 (let ((?x50106 (* l_0_17_69 l_0_17_69)))
 (let ((?x50104 (* l_0_17_68 l_0_17_68)))
 (let ((?x50102 (* l_0_17_67 l_0_17_67)))
 (let ((?x49107 (* 2.0 l_0_17_43)))
 (let ((?x50100 (* ?x49107 l_0_17_48)))
 (let ((?x49104 (* 2.0 l_0_17_42)))
 (let ((?x50098 (* ?x49104 l_0_17_47)))
 (let ((?x49101 (* 2.0 l_0_17_41)))
 (let ((?x50096 (* ?x49101 l_0_17_46)))
 (let ((?x49098 (* 2.0 l_0_17_40)))
 (let ((?x50094 (* ?x49098 l_0_17_45)))
 (let ((?x49095 (* 2.0 l_0_17_39)))
 (let ((?x50092 (* ?x49095 l_0_17_44)))
 (let ((?x49214 (* 2.0 l_0_17_155)))
 (let ((?x50090 (* ?x49214 l_0_17_160)))
 (let ((?x49211 (* 2.0 l_0_17_154)))
 (let ((?x50088 (* ?x49211 l_0_17_159)))
 (let ((?x49208 (* 2.0 l_0_17_153)))
 (let ((?x50086 (* ?x49208 l_0_17_158)))
 (let ((?x49205 (* 2.0 l_0_17_152)))
 (let ((?x50084 (* ?x49205 l_0_17_157)))
 (let ((?x49202 (* 2.0 l_0_17_151)))
 (let ((?x50082 (* ?x49202 l_0_17_156)))
 (let ((?x49074 (* 2.0 l_0_17_15)))
 (let ((?x50080 (* ?x49074 l_0_17_20)))
 (let ((?x49068 (* 2.0 l_0_17_14)))
 (let ((?x50078 (* ?x49068 l_0_17_19)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x50076 (* ?x49065 l_0_17_18)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x50074 (* ?x49062 l_0_17_17)))
 (let ((?x50081 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_16) ?x50074) ?x50076) ?x50078) ?x50080)))
 (let ((?x50095 (+ (+ (+ (+ (+ (+ (+ ?x50081 ?x50082) ?x50084) ?x50086) ?x50088) ?x50090) ?x50092) ?x50094)))
 (let ((?x50109 (- (- (- (- (+ (+ (+ ?x50095 ?x50096) ?x50098) ?x50100) ?x50102) ?x50104) ?x50106) ?x50108)))
 (= (+ (+ (+ (+ (+ (- ?x50109 ?x50110) ?x50112) ?x50114) ?x50116) ?x50118) ?x50120) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49107 (* 2.0 l_0_17_43)))
 (let ((?x49108 (* ?x49107 l_0_17_54)))
 (let ((?x49104 (* 2.0 l_0_17_42)))
 (let ((?x49105 (* ?x49104 l_0_17_53)))
 (let ((?x49101 (* 2.0 l_0_17_41)))
 (let ((?x49102 (* ?x49101 l_0_17_52)))
 (let ((?x49098 (* 2.0 l_0_17_40)))
 (let ((?x49099 (* ?x49098 l_0_17_51)))
 (let ((?x49095 (* 2.0 l_0_17_39)))
 (let ((?x49096 (* ?x49095 l_0_17_50)))
 (let ((?x49214 (* 2.0 l_0_17_155)))
 (let ((?x49215 (* ?x49214 l_0_17_166)))
 (let ((?x49211 (* 2.0 l_0_17_154)))
 (let ((?x49212 (* ?x49211 l_0_17_165)))
 (let ((?x49208 (* 2.0 l_0_17_153)))
 (let ((?x49209 (* ?x49208 l_0_17_164)))
 (let ((?x49205 (* 2.0 l_0_17_152)))
 (let ((?x49206 (* ?x49205 l_0_17_163)))
 (let ((?x49202 (* 2.0 l_0_17_151)))
 (let ((?x49203 (* ?x49202 l_0_17_162)))
 (let ((?x49074 (* 2.0 l_0_17_15)))
 (let ((?x49075 (* ?x49074 l_0_17_26)))
 (let ((?x49068 (* 2.0 l_0_17_14)))
 (let ((?x49069 (* ?x49068 l_0_17_25)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x49066 (* ?x49065 l_0_17_24)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49063 (* ?x49062 l_0_17_23)))
 (let ((?x50180 (- (- (- (- (* (* (- 2.0) l_0_17_11) l_0_17_22) ?x49063) ?x49066) ?x49069) ?x49075)))
 (let ((?x50187 (+ (+ (+ (+ (+ (+ (+ ?x50180 ?x49203) ?x49206) ?x49209) ?x49212) ?x49215) ?x49096) ?x49099)))
 (= (+ (+ (+ ?x50187 ?x49102) ?x49105) ?x49108) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x50233 (* ?x49246 l_0_17_76)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x50231 (* ?x49243 l_0_17_75)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x50229 (* ?x49240 l_0_17_74)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x50227 (* ?x49237 l_0_17_73)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x50225 (* ?x49234 l_0_17_72)))
 (let ((?x50223 (* l_0_17_49 l_0_17_49)))
 (let ((?x50221 (* l_0_17_48 l_0_17_48)))
 (let ((?x50219 (* l_0_17_47 l_0_17_47)))
 (let ((?x50217 (* l_0_17_46 l_0_17_46)))
 (let ((?x50215 (* l_0_17_45 l_0_17_45)))
 (let ((?x50213 (* l_0_17_44 l_0_17_44)))
 (let ((?x50211 (* l_0_17_21 l_0_17_21)))
 (let ((?x50209 (* l_0_17_20 l_0_17_20)))
 (let ((?x50207 (* l_0_17_19 l_0_17_19)))
 (let ((?x50205 (* l_0_17_18 l_0_17_18)))
 (let ((?x50203 (* l_0_17_17 l_0_17_17)))
 (let ((?x50201 (* l_0_17_161 l_0_17_161)))
 (let ((?x50199 (* l_0_17_160 l_0_17_160)))
 (let ((?x50197 (* l_0_17_16 l_0_17_16)))
 (let ((?x50195 (* l_0_17_159 l_0_17_159)))
 (let ((?x39682 (* l_0_17_158 l_0_17_158)))
 (let ((?x39689 (* l_0_17_157 l_0_17_157)))
 (let ((?x18899 (* l_0_17_156 l_0_17_156)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x39655 (* ?x29967 l_0_17_99)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x18813 (* ?x39678 l_0_17_98)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x39668 (* ?x39667 l_0_17_97)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x39661 (* ?x39657 l_0_17_96)))
 (let ((?x29608 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_95) ?x39661) ?x39668) ?x18813) ?x39655)))
 (let ((?x50202 (+ (+ (- (+ (+ (+ (+ ?x29608 ?x18899) ?x39689) ?x39682) ?x50195) ?x50197) ?x50199) ?x50201)))
 (let ((?x50216 (+ (+ (- (- (- (- (- ?x50202 ?x50203) ?x50205) ?x50207) ?x50209) ?x50211) ?x50213) ?x50215)))
 (let ((?x50230 (- (- (- (+ (+ (+ (+ ?x50216 ?x50217) ?x50219) ?x50221) ?x50223) ?x50225) ?x50227) ?x50229)))
 (= (- (- ?x50230 ?x50231) ?x50233) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x49247 (* ?x49246 l_0_17_82)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x49244 (* ?x49243 l_0_17_81)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x49241 (* ?x49240 l_0_17_80)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x49238 (* ?x49237 l_0_17_79)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x49235 (* ?x49234 l_0_17_78)))
 (let ((?x50328 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x50325 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x50322 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x50319 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x50316 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x50313 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x50310 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x50307 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x50304 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x50301 (* ?x49672 l_0_17_24)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x50299 (* ?x49489 l_0_17_23)))
 (let ((?x50297 (* (* 2.0 l_0_17_161) l_0_17_167)))
 (let ((?x50294 (* (* 2.0 l_0_17_160) l_0_17_166)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x50291 (* ?x49479 l_0_17_22)))
 (let ((?x50289 (* (* 2.0 l_0_17_159) l_0_17_165)))
 (let ((?x50286 (* (* 2.0 l_0_17_158) l_0_17_164)))
 (let ((?x50283 (* (* 2.0 l_0_17_157) l_0_17_163)))
 (let ((?x50280 (* (* 2.0 l_0_17_156) l_0_17_162)))
 (let ((?x49183 (* (* 2.0 l_0_17_110) l_0_17_99)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x49180 (* ?x49179 l_0_17_98)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x49177 (* ?x49176 l_0_17_97)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x49174 (* ?x49173 l_0_17_96)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x49171 (* ?x49170 l_0_17_95)))
 (let ((?x50287 (+ (+ (+ (+ (+ (+ (+ ?x49171 ?x49174) ?x49177) ?x49180) ?x49183) ?x50280) ?x50283) ?x50286)))
 (let ((?x50305 (- (- (- (+ (+ (- (+ ?x50287 ?x50289) ?x50291) ?x50294) ?x50297) ?x50299) ?x50301) ?x50304)))
 (let ((?x50326 (+ (+ (+ (+ (+ (- (- ?x50305 ?x50307) ?x50310) ?x50313) ?x50316) ?x50319) ?x50322) ?x50325)))
 (= (- (- (- (- (- (+ ?x50326 ?x50328) ?x49235) ?x49238) ?x49241) ?x49244) ?x49247) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50447 (* l_0_17_56 l_0_17_56)))
 (let ((?x50445 (* l_0_17_55 l_0_17_55)))
 (let ((?x50443 (* l_0_17_54 l_0_17_54)))
 (let ((?x50441 (* l_0_17_53 l_0_17_53)))
 (let ((?x50439 (* l_0_17_52 l_0_17_52)))
 (let ((?x50437 (* l_0_17_51 l_0_17_51)))
 (let ((?x50435 (* l_0_17_50 l_0_17_50)))
 (let ((?x50433 (* l_0_17_28 l_0_17_28)))
 (let ((?x50431 (* l_0_17_27 l_0_17_27)))
 (let ((?x50429 (* l_0_17_26 l_0_17_26)))
 (let ((?x50427 (* l_0_17_25 l_0_17_25)))
 (let ((?x50425 (* l_0_17_24 l_0_17_24)))
 (let ((?x50423 (* l_0_17_23 l_0_17_23)))
 (let ((?x50421 (* l_0_17_22 l_0_17_22)))
 (let ((?x50419 (* l_0_17_168 l_0_17_168)))
 (let ((?x50417 (* l_0_17_167 l_0_17_167)))
 (let ((?x50415 (* l_0_17_166 l_0_17_166)))
 (let ((?x50413 (* l_0_17_165 l_0_17_165)))
 (let ((?x50411 (* l_0_17_164 l_0_17_164)))
 (let ((?x50412 (+ (+ (* l_0_17_162 l_0_17_162) (* l_0_17_163 l_0_17_163)) ?x50411)))
 (let ((?x50426 (- (- (- (+ (+ (+ (+ ?x50412 ?x50413) ?x50415) ?x50417) ?x50419) ?x50421) ?x50423) ?x50425)))
 (let ((?x50440 (+ (+ (+ (- (- (- (- ?x50426 ?x50427) ?x50429) ?x50431) ?x50433) ?x50435) ?x50437) ?x50439)))
 (= (+ (+ (+ (+ ?x50440 ?x50441) ?x50443) ?x50445) ?x50447) 0.0))))))))))))))))))))))))
(assert
 (let ((?x48957 (* l_0_17_29 l_0_17_29)))
 (let ((?x50468 (- (+ (* l_0_17_1 l_0_17_1) (* 2.0 (* l_0_17_169 l_0_17_169))) (* (* 2.0 l_0_17_197) l_0_17_198))))
 (let ((?x50472 (- (- ?x50468 (* (* 2.0 l_0_17_225) l_0_17_226)) (* (* 2.0 l_0_17_253) l_0_17_254))))
 (let ((?x50477 (- (- (- ?x50472 (* (* 2.0 l_0_17_281) l_0_17_282)) ?x48957) (* (* 2.0 l_0_17_309) l_0_17_310))))
 (= ?x50477 0.0))))))
(assert
 (let ((?x50501 (* l_0_17_311 l_0_17_311)))
 (let ((?x50499 (* l_0_17_310 l_0_17_310)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49093 (* ?x49092 l_0_17_30)))
 (let ((?x50496 (* l_0_17_283 l_0_17_283)))
 (let ((?x50494 (* l_0_17_282 l_0_17_282)))
 (let ((?x50492 (* l_0_17_255 l_0_17_255)))
 (let ((?x50490 (* l_0_17_254 l_0_17_254)))
 (let ((?x50488 (* l_0_17_227 l_0_17_227)))
 (let ((?x29657 (* l_0_17_226 l_0_17_226)))
 (let ((?x39896 (* l_0_17_199 l_0_17_199)))
 (let ((?x19155 (* l_0_17_198 l_0_17_198)))
 (let ((?x19070 (+ (* (* 2.0 l_0_17_1) l_0_17_2) (* (* 4.0 l_0_17_169) l_0_17_170))))
 (let ((?x50495 (- (- (- (- (- (- (- ?x19070 ?x19155) ?x39896) ?x29657) ?x50488) ?x50490) ?x50492) ?x50494)))
 (= (- (- (- (- ?x50495 ?x50496) ?x49093) ?x50499) ?x50501) 0.0))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x50562 (* ?x49358 l_0_17_86)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x50560 (* ?x49355 l_0_17_58)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49232 (* ?x49092 l_0_17_32)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49072 (* ?x49071 l_0_17_142)))
 (let ((?x50522 (- (* (* 2.0 l_0_17_1) l_0_17_4) (* (* 2.0 l_0_17_113) l_0_17_114))))
 (let ((?x50528 (+ (- (- ?x50522 ?x49072) (* (* 2.0 l_0_17_169) l_0_17_170)) (* (* 4.0 l_0_17_169) l_0_17_172))))
 (let ((?x50534 (- (- ?x50528 (* (* 2.0 l_0_17_198) l_0_17_200)) (* (* 2.0 l_0_17_199) l_0_17_201))))
 (let ((?x50540 (- (- ?x50534 (* (* 2.0 l_0_17_226) l_0_17_228)) (* (* 2.0 l_0_17_227) l_0_17_229))))
 (let ((?x50546 (- (- ?x50540 (* (* 2.0 l_0_17_254) l_0_17_256)) (* (* 2.0 l_0_17_255) l_0_17_257))))
 (let ((?x50552 (- (- ?x50546 (* (* 2.0 l_0_17_282) l_0_17_284)) (* (* 2.0 l_0_17_283) l_0_17_285))))
 (let ((?x50559 (- (- (- ?x50552 ?x49232) (* (* 2.0 l_0_17_310) l_0_17_312)) (* (* 2.0 l_0_17_311) l_0_17_313))))
 (= (+ (- ?x50559 ?x50560) ?x50562) 0.0)))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x50562 (* ?x49358 l_0_17_86)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x50560 (* ?x49355 l_0_17_58)))
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49320 (* ?x49092 l_0_17_35)))
 (let ((?x50590 (+ (* (* 2.0 l_0_17_1) l_0_17_7) (* (* 4.0 l_0_17_169) l_0_17_175))))
 (let ((?x50594 (- (- ?x50590 (* (* 2.0 l_0_17_198) l_0_17_203)) (* (* 2.0 l_0_17_199) l_0_17_204))))
 (let ((?x50598 (- (- ?x50594 (* (* 2.0 l_0_17_226) l_0_17_231)) (* (* 2.0 l_0_17_227) l_0_17_232))))
 (let ((?x50602 (- (- ?x50598 (* (* 2.0 l_0_17_254) l_0_17_259)) (* (* 2.0 l_0_17_255) l_0_17_260))))
 (let ((?x50606 (- (- ?x50602 (* (* 2.0 l_0_17_282) l_0_17_287)) (* (* 2.0 l_0_17_283) l_0_17_288))))
 (let ((?x50611 (- (- (- ?x50606 ?x49320) (* (* 2.0 l_0_17_310) l_0_17_315)) (* (* 2.0 l_0_17_311) l_0_17_316))))
 (= (- (+ ?x50611 ?x50560) ?x50562) 0.0))))))))))))))
(assert
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49339 (* ?x49092 l_0_17_39)))
 (let ((?x19965 (+ (* (* 2.0 l_0_17_1) l_0_17_11) (* (* 4.0 l_0_17_169) l_0_17_179))))
 (let ((?x50639 (- (- ?x19965 (* (* 2.0 l_0_17_198) l_0_17_207)) (* (* 2.0 l_0_17_199) l_0_17_208))))
 (let ((?x50643 (- (- ?x50639 (* (* 2.0 l_0_17_226) l_0_17_235)) (* (* 2.0 l_0_17_227) l_0_17_236))))
 (let ((?x50647 (- (- ?x50643 (* (* 2.0 l_0_17_254) l_0_17_263)) (* (* 2.0 l_0_17_255) l_0_17_264))))
 (let ((?x50651 (- (- ?x50647 (* (* 2.0 l_0_17_282) l_0_17_291)) (* (* 2.0 l_0_17_283) l_0_17_292))))
 (let ((?x50656 (- (- (- ?x50651 ?x49339) (* (* 2.0 l_0_17_310) l_0_17_319)) (* (* 2.0 l_0_17_311) l_0_17_320))))
 (= ?x50656 0.0))))))))))
(assert
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49348 (* ?x49092 l_0_17_44)))
 (let ((?x50693 (+ (* (* 2.0 l_0_17_1) l_0_17_16) (* (* 4.0 l_0_17_169) l_0_17_184))))
 (let ((?x50697 (- (- ?x50693 (* (* 2.0 l_0_17_198) l_0_17_212)) (* (* 2.0 l_0_17_199) l_0_17_213))))
 (let ((?x50701 (- (- ?x50697 (* (* 2.0 l_0_17_226) l_0_17_240)) (* (* 2.0 l_0_17_227) l_0_17_241))))
 (let ((?x50705 (- (- ?x50701 (* (* 2.0 l_0_17_254) l_0_17_268)) (* (* 2.0 l_0_17_255) l_0_17_269))))
 (let ((?x50709 (- (- ?x50705 (* (* 2.0 l_0_17_282) l_0_17_296)) (* (* 2.0 l_0_17_283) l_0_17_297))))
 (let ((?x50714 (- (- (- ?x50709 ?x49348) (* (* 2.0 l_0_17_310) l_0_17_324)) (* (* 2.0 l_0_17_311) l_0_17_325))))
 (= ?x50714 0.0))))))))))
(assert
 (let ((?x49092 (* 2.0 l_0_17_29)))
 (let ((?x49379 (* ?x49092 l_0_17_50)))
 (let ((?x50750 (+ (* (* 2.0 l_0_17_1) l_0_17_22) (* (* 4.0 l_0_17_169) l_0_17_190))))
 (let ((?x50754 (- (- ?x50750 (* (* 2.0 l_0_17_198) l_0_17_218)) (* (* 2.0 l_0_17_199) l_0_17_219))))
 (let ((?x50758 (- (- ?x50754 (* (* 2.0 l_0_17_226) l_0_17_246)) (* (* 2.0 l_0_17_227) l_0_17_247))))
 (let ((?x50762 (- (- ?x50758 (* (* 2.0 l_0_17_254) l_0_17_274)) (* (* 2.0 l_0_17_255) l_0_17_275))))
 (let ((?x50766 (- (- ?x50762 (* (* 2.0 l_0_17_282) l_0_17_302)) (* (* 2.0 l_0_17_283) l_0_17_303))))
 (let ((?x50771 (- (- (- ?x50766 ?x49379) (* (* 2.0 l_0_17_310) l_0_17_330)) (* (* 2.0 l_0_17_311) l_0_17_331))))
 (= ?x50771 0.0))))))))))
(assert
 (let ((?x49399 (* l_0_17_31 l_0_17_31)))
 (let ((?x49397 (* l_0_17_30 l_0_17_30)))
 (let ((?x49395 (* l_0_17_3 l_0_17_3)))
 (let ((?x49388 (* l_0_17_2 l_0_17_2)))
 (let ((?x50801 (* l_0_17_171 l_0_17_171)))
 (let ((?x50802 (* 2.0 ?x50801)))
 (let ((?x50799 (* l_0_17_170 l_0_17_170)))
 (let ((?x50800 (* 2.0 ?x50799)))
 (= (- (- (+ (+ (+ ?x50800 ?x50802) ?x49388) ?x49395) ?x49397) ?x49399) 0.0))))))))))
(assert
 (let ((?x50832 (* l_0_17_87 l_0_17_87)))
 (let ((?x50830 (* l_0_17_86 l_0_17_86)))
 (let ((?x50828 (* l_0_17_59 l_0_17_59)))
 (let ((?x50826 (* l_0_17_58 l_0_17_58)))
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49422 (* ?x49421 l_0_17_33)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49419 (* ?x49418 l_0_17_32)))
 (let ((?x49415 (* 2.0 l_0_17_3)))
 (let ((?x49416 (* ?x49415 l_0_17_5)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x49413 (* ?x49412 l_0_17_4)))
 (let ((?x50801 (* l_0_17_171 l_0_17_171)))
 (let ((?x50799 (* l_0_17_170 l_0_17_170)))
 (let ((?x49385 (* l_0_17_143 l_0_17_143)))
 (let ((?x49383 (* l_0_17_142 l_0_17_142)))
 (let ((?x50812 (- (- (* (- l_0_17_114) l_0_17_114) (* l_0_17_115 l_0_17_115)) ?x49383)))
 (let ((?x50820 (+ (- (+ (- ?x50812 ?x49385) (* (* 4.0 l_0_17_170) l_0_17_172)) ?x50799) (* (* 4.0 l_0_17_171) l_0_17_173))))
 (let ((?x50829 (- (- (- (- (+ (+ (- ?x50820 ?x50801) ?x49413) ?x49416) ?x49419) ?x49422) ?x50826) ?x50828)))
 (= (+ (+ ?x50829 ?x50830) ?x50832) 0.0)))))))))))))))))))))
(assert
 (let ((?x50832 (* l_0_17_87 l_0_17_87)))
 (let ((?x50830 (* l_0_17_86 l_0_17_86)))
 (let ((?x50828 (* l_0_17_59 l_0_17_59)))
 (let ((?x50826 (* l_0_17_58 l_0_17_58)))
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49441 (* ?x49421 l_0_17_36)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x39288 (* ?x49418 l_0_17_35)))
 (let ((?x49415 (* 2.0 l_0_17_3)))
 (let ((?x17754 (* ?x49415 l_0_17_8)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x39267 (* ?x49412 l_0_17_7)))
 (let ((?x50847 (+ (* (* 4.0 l_0_17_170) l_0_17_175) (* (* 4.0 l_0_17_171) l_0_17_176))))
 (let ((?x50854 (- (+ (+ (- (- (+ (+ ?x50847 ?x39267) ?x17754) ?x39288) ?x49441) ?x50826) ?x50828) ?x50830)))
 (= (- ?x50854 ?x50832) 0.0))))))))))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49465 (* ?x49421 l_0_17_40)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49463 (* ?x49418 l_0_17_39)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49457 (* ?x49062 l_0_17_3)))
 (let ((?x50863 (+ (+ (* (* 2.0 l_0_17_11) l_0_17_2) ?x49457) (* (* 4.0 l_0_17_170) l_0_17_179))))
 (= (- (- (+ ?x50863 (* (* 4.0 l_0_17_171) l_0_17_180)) ?x49463) ?x49465) 0.0)))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49494 (* ?x49421 l_0_17_45)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49492 (* ?x49418 l_0_17_44)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49490 (* ?x49489 l_0_17_3)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49480 (* ?x49479 l_0_17_2)))
 (let ((?x50883 (+ (+ (+ ?x49480 ?x49490) (* (* 4.0 l_0_17_170) l_0_17_184)) (* (* 4.0 l_0_17_171) l_0_17_185))))
 (= (- (- ?x50883 ?x49492) ?x49494) 0.0)))))))))))
(assert
 (let ((?x49421 (* 2.0 l_0_17_31)))
 (let ((?x49540 (* ?x49421 l_0_17_51)))
 (let ((?x49418 (* 2.0 l_0_17_30)))
 (let ((?x49538 (* ?x49418 l_0_17_50)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49536 (* ?x49535 l_0_17_3)))
 (let ((?x49412 (* 2.0 l_0_17_2)))
 (let ((?x49533 (* ?x49412 l_0_17_22)))
 (let ((?x20329 (+ (* (* 4.0 l_0_17_170) l_0_17_190) (* (* 4.0 l_0_17_171) l_0_17_191))))
 (= (- (- (+ (+ ?x20329 ?x49533) ?x49536) ?x49538) ?x49540) 0.0)))))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x50937 (* ?x49505 l_0_17_89)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x50935 (* ?x49502 l_0_17_88)))
 (let ((?x49577 (* l_0_17_6 l_0_17_6)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x50932 (* ?x49499 l_0_17_61)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x50930 (* ?x49496 l_0_17_60)))
 (let ((?x49575 (* l_0_17_5 l_0_17_5)))
 (let ((?x49573 (* l_0_17_4 l_0_17_4)))
 (let ((?x49571 (* l_0_17_34 l_0_17_34)))
 (let ((?x49569 (* l_0_17_33 l_0_17_33)))
 (let ((?x49567 (* l_0_17_32 l_0_17_32)))
 (let ((?x50922 (* l_0_17_174 l_0_17_174)))
 (let ((?x50923 (* 2.0 ?x50922)))
 (let ((?x50919 (* l_0_17_173 l_0_17_173)))
 (let ((?x50920 (* 2.0 ?x50919)))
 (let ((?x50916 (* l_0_17_172 l_0_17_172)))
 (let ((?x50917 (* 2.0 ?x50916)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49410 (* ?x49409 l_0_17_145)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49408 (* ?x39286 l_0_17_144)))
 (let ((?x50907 (- (* (* (- 2.0) l_0_17_114) l_0_17_116) (* (* 2.0 l_0_17_115) l_0_17_117))))
 (let ((?x50915 (- (- (- (- ?x50907 ?x49408) ?x49410) (* (* 2.0 l_0_17_170) l_0_17_172)) (* (* 2.0 l_0_17_171) l_0_17_173))))
 (let ((?x50928 (+ (- (- (- (+ (+ (+ ?x50915 ?x50917) ?x50920) ?x50923) ?x49567) ?x49569) ?x49571) ?x49573)))
 (= (+ (+ (+ (- (- (+ ?x50928 ?x49575) ?x50930) ?x50932) ?x49577) ?x50935) ?x50937) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x50991 (* ?x49505 l_0_17_92)))
 (let ((?x50937 (* ?x49505 l_0_17_89)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x50988 (* ?x49502 l_0_17_91)))
 (let ((?x50935 (* ?x49502 l_0_17_88)))
 (let ((?x49609 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x50984 (* ?x49499 l_0_17_64)))
 (let ((?x50932 (* ?x49499 l_0_17_61)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x50981 (* ?x49496 l_0_17_63)))
 (let ((?x50930 (* ?x49496 l_0_17_60)))
 (let ((?x49606 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x49603 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49600 (* ?x49599 l_0_17_37)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49597 (* ?x49596 l_0_17_36)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49594 (* ?x49593 l_0_17_35)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x39287 (* ?x49409 l_0_17_148)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x39284 (* ?x39286 l_0_17_147)))
 (let ((?x41260 (- (* (* (- 2.0) l_0_17_114) l_0_17_119) (* (* 2.0 l_0_17_115) l_0_17_120))))
 (let ((?x50965 (- (- (- (- ?x41260 ?x39284) ?x39287) (* (* 2.0 l_0_17_170) l_0_17_175)) (* (* 2.0 l_0_17_171) l_0_17_176))))
 (let ((?x50971 (+ (+ ?x50965 (* (* 4.0 l_0_17_172) l_0_17_175)) (* (* 4.0 l_0_17_173) l_0_17_176))))
 (let ((?x50977 (- (- (- (+ ?x50971 (* (* 4.0 l_0_17_174) l_0_17_177)) ?x49594) ?x49597) ?x49600)))
 (let ((?x50986 (+ (- (+ (- (+ (+ (+ ?x50977 ?x49603) ?x49606) ?x50930) ?x50981) ?x50932) ?x50984) ?x49609)))
 (= (+ (- (+ (- ?x50986 ?x50935) ?x50988) ?x50937) ?x50991) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x49506 (* ?x49505 l_0_17_96)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x49503 (* ?x49502 l_0_17_95)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x49500 (* ?x49499 l_0_17_68)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x49497 (* ?x49496 l_0_17_67)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49641 (* ?x49599 l_0_17_41)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49639 (* ?x49596 l_0_17_40)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49637 (* ?x49593 l_0_17_39)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49461 (* ?x49409 l_0_17_152)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49459 (* ?x39286 l_0_17_151)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x39362 (* ?x49065 l_0_17_6)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x39360 (* ?x49062 l_0_17_5)))
 (let ((?x51008 (- (* (* 2.0 l_0_17_11) l_0_17_4) (* (* 2.0 l_0_17_114) l_0_17_123))))
 (let ((?x51013 (- (+ (+ (- ?x51008 (* (* 2.0 l_0_17_115) l_0_17_124)) ?x39360) ?x39362) ?x49459)))
 (let ((?x51018 (- (- (- ?x51013 ?x49461) (* (* 2.0 l_0_17_170) l_0_17_179)) (* (* 2.0 l_0_17_171) l_0_17_180))))
 (let ((?x51022 (+ (+ ?x51018 (* (* 4.0 l_0_17_172) l_0_17_179)) (* (* 4.0 l_0_17_173) l_0_17_180))))
 (let ((?x51027 (- (- (- (+ ?x51022 (* (* 4.0 l_0_17_174) l_0_17_181)) ?x49637) ?x49639) ?x49641)))
 (= (+ (+ (- (- ?x51027 ?x49497) ?x49500) ?x49503) ?x49506) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51071 (* ?x49499 l_0_17_73)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51069 (* ?x49496 l_0_17_72)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49679 (* ?x49599 l_0_17_46)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49677 (* ?x49596 l_0_17_45)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49675 (* ?x49593 l_0_17_44)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x49673 (* ?x49672 l_0_17_6)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49670 (* ?x49489 l_0_17_5)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49668 (* ?x49479 l_0_17_4)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x49475 (* ?x49409 l_0_17_157)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x49473 (* ?x39286 l_0_17_156)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x30671 (* ?x39657 l_0_17_87)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x41371 (* ?x29970 l_0_17_86)))
 (let ((?x20649 (+ ?x41371 ?x30671)))
 (let ((?x51050 (- (- ?x20649 (* (* 2.0 l_0_17_114) l_0_17_128)) (* (* 2.0 l_0_17_115) l_0_17_129))))
 (let ((?x51056 (- (+ (+ (- (- ?x51050 ?x49473) ?x49475) ?x49668) ?x49670) (* (* 2.0 l_0_17_170) l_0_17_184))))
 (let ((?x51060 (+ (- ?x51056 (* (* 2.0 l_0_17_171) l_0_17_185)) (* (* 4.0 l_0_17_172) l_0_17_184))))
 (let ((?x51064 (+ (+ ?x51060 (* (* 4.0 l_0_17_173) l_0_17_185)) (* (* 4.0 l_0_17_174) l_0_17_186))))
 (= (- (- (- (- (- (+ ?x51064 ?x49673) ?x49675) ?x49677) ?x49679) ?x51069) ?x51071) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51109 (* ?x49499 l_0_17_79)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51107 (* ?x49496 l_0_17_78)))
 (let ((?x49599 (* 2.0 l_0_17_34)))
 (let ((?x49766 (* ?x49599 l_0_17_52)))
 (let ((?x49596 (* 2.0 l_0_17_33)))
 (let ((?x49764 (* ?x49596 l_0_17_51)))
 (let ((?x49593 (* 2.0 l_0_17_32)))
 (let ((?x49762 (* ?x49593 l_0_17_50)))
 (let ((?x49759 (* 2.0 l_0_17_24)))
 (let ((?x49760 (* ?x49759 l_0_17_6)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49757 (* ?x49535 l_0_17_5)))
 (let ((?x49754 (* 2.0 l_0_17_22)))
 (let ((?x49755 (* ?x49754 l_0_17_4)))
 (let ((?x49409 (* 2.0 l_0_17_143)))
 (let ((?x18004 (* ?x49409 l_0_17_163)))
 (let ((?x39286 (* 2.0 l_0_17_142)))
 (let ((?x17999 (* ?x39286 l_0_17_162)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x51083 (* ?x49173 l_0_17_87)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x20759 (* ?x49170 l_0_17_86)))
 (let ((?x51084 (+ ?x20759 ?x51083)))
 (let ((?x51088 (- (- ?x51084 (* (* 2.0 l_0_17_114) l_0_17_134)) (* (* 2.0 l_0_17_115) l_0_17_135))))
 (let ((?x51094 (- (- (- (- ?x51088 ?x17999) ?x18004) (* (* 2.0 l_0_17_170) l_0_17_190)) (* (* 2.0 l_0_17_171) l_0_17_191))))
 (let ((?x51098 (+ (+ ?x51094 (* (* 4.0 l_0_17_172) l_0_17_190)) (* (* 4.0 l_0_17_173) l_0_17_191))))
 (let ((?x51103 (+ (+ (+ (+ ?x51098 (* (* 4.0 l_0_17_174) l_0_17_192)) ?x49755) ?x49757) ?x49760)))
 (= (- (- (- (- (- ?x51103 ?x49762) ?x49764) ?x49766) ?x51107) ?x51109) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49818 (* l_0_17_9 l_0_17_9)))
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x50991 (* ?x49505 l_0_17_92)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x50988 (* ?x49502 l_0_17_91)))
 (let ((?x49816 (* l_0_17_8 l_0_17_8)))
 (let ((?x49814 (* l_0_17_7 l_0_17_7)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x50984 (* ?x49499 l_0_17_64)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x50981 (* ?x49496 l_0_17_63)))
 (let ((?x49812 (* l_0_17_38 l_0_17_38)))
 (let ((?x49810 (* l_0_17_37 l_0_17_37)))
 (let ((?x49808 (* l_0_17_36 l_0_17_36)))
 (let ((?x49806 (* l_0_17_35 l_0_17_35)))
 (let ((?x51143 (* l_0_17_178 l_0_17_178)))
 (let ((?x51144 (* 2.0 ?x51143)))
 (let ((?x51140 (* l_0_17_177 l_0_17_177)))
 (let ((?x51141 (* 2.0 ?x51140)))
 (let ((?x51137 (* l_0_17_176 l_0_17_176)))
 (let ((?x51138 (* 2.0 ?x51137)))
 (let ((?x20877 (* l_0_17_175 l_0_17_175)))
 (let ((?x51135 (* 2.0 ?x20877)))
 (let ((?x49822 (* l_0_17_10 l_0_17_10)))
 (let ((?x51148 (- (- (- (+ (+ (+ (+ ?x49822 ?x51135) ?x51138) ?x51141) ?x51144) ?x49806) ?x49808) ?x49810)))
 (let ((?x51155 (- (- (+ (+ (+ (+ (- ?x51148 ?x49812) ?x50981) ?x50984) ?x49814) ?x49816) ?x50988) ?x50991)))
 (= (+ ?x51155 ?x49818) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x49506 (* ?x49505 l_0_17_96)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x49503 (* ?x49502 l_0_17_95)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x49500 (* ?x49499 l_0_17_68)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x49497 (* ?x49496 l_0_17_67)))
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49862 (* ?x49861 l_0_17_42)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49859 (* ?x49858 l_0_17_41)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49856 (* ?x49855 l_0_17_40)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49853 (* ?x49852 l_0_17_39)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x49838 (* ?x49065 l_0_17_9)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x49836 (* ?x49062 l_0_17_8)))
 (let ((?x49059 (* 2.0 l_0_17_11)))
 (let ((?x49834 (* ?x49059 l_0_17_7)))
 (let ((?x51166 (+ (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_14) ?x49834) ?x49836) ?x49838) (* (* 4.0 l_0_17_175) l_0_17_179))))
 (let ((?x51172 (+ (+ ?x51166 (* (* 4.0 l_0_17_176) l_0_17_180)) (* (* 4.0 l_0_17_177) l_0_17_181))))
 (let ((?x51178 (- (- (- (+ ?x51172 (* (* 4.0 l_0_17_178) l_0_17_182)) ?x49853) ?x49856) ?x49859)))
 (= (- (- (+ (+ (- ?x51178 ?x49862) ?x49497) ?x49500) ?x49503) ?x49506) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51071 (* ?x49499 l_0_17_73)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51069 (* ?x49496 l_0_17_72)))
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49916 (* ?x49861 l_0_17_47)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49914 (* ?x49858 l_0_17_46)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49912 (* ?x49855 l_0_17_45)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49910 (* ?x49852 l_0_17_44)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x49908 (* ?x49672 l_0_17_9)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x49906 (* ?x49489 l_0_17_8)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x49904 (* ?x49479 l_0_17_7)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x30671 (* ?x39657 l_0_17_87)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x41371 (* ?x29970 l_0_17_86)))
 (let ((?x51200 (+ (+ (- (- (* (* 2.0 l_0_17_10) l_0_17_19) ?x41371) ?x30671) ?x49904) ?x49906)))
 (let ((?x51204 (+ (+ ?x51200 (* (* 4.0 l_0_17_175) l_0_17_184)) (* (* 4.0 l_0_17_176) l_0_17_185))))
 (let ((?x51208 (+ (+ ?x51204 (* (* 4.0 l_0_17_177) l_0_17_186)) (* (* 4.0 l_0_17_178) l_0_17_187))))
 (let ((?x51215 (+ (+ (- (- (- (- (+ ?x51208 ?x49908) ?x49910) ?x49912) ?x49914) ?x49916) ?x51069) ?x51071)))
 (= ?x51215 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51109 (* ?x49499 l_0_17_79)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51107 (* ?x49496 l_0_17_78)))
 (let ((?x49861 (* 2.0 l_0_17_38)))
 (let ((?x49979 (* ?x49861 l_0_17_53)))
 (let ((?x49858 (* 2.0 l_0_17_37)))
 (let ((?x49977 (* ?x49858 l_0_17_52)))
 (let ((?x49855 (* 2.0 l_0_17_36)))
 (let ((?x49975 (* ?x49855 l_0_17_51)))
 (let ((?x49852 (* 2.0 l_0_17_35)))
 (let ((?x49973 (* ?x49852 l_0_17_50)))
 (let ((?x49759 (* 2.0 l_0_17_24)))
 (let ((?x49971 (* ?x49759 l_0_17_9)))
 (let ((?x49535 (* 2.0 l_0_17_23)))
 (let ((?x49969 (* ?x49535 l_0_17_8)))
 (let ((?x49754 (* 2.0 l_0_17_22)))
 (let ((?x49967 (* ?x49754 l_0_17_7)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x51083 (* ?x49173 l_0_17_87)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x20759 (* ?x49170 l_0_17_86)))
 (let ((?x51223 (+ (- (- (* (* 2.0 l_0_17_10) l_0_17_25) ?x20759) ?x51083) (* (* 4.0 l_0_17_175) l_0_17_190))))
 (let ((?x51227 (+ (+ ?x51223 (* (* 4.0 l_0_17_176) l_0_17_191)) (* (* 4.0 l_0_17_177) l_0_17_192))))
 (let ((?x51232 (+ (+ (+ (+ ?x51227 (* (* 4.0 l_0_17_178) l_0_17_193)) ?x49967) ?x49969) ?x49971)))
 (= (+ (+ (- (- (- (- ?x51232 ?x49973) ?x49975) ?x49977) ?x49979) ?x51107) ?x51109) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x50046 (* l_0_17_43 l_0_17_43)))
 (let ((?x50044 (* l_0_17_42 l_0_17_42)))
 (let ((?x50042 (* l_0_17_41 l_0_17_41)))
 (let ((?x50040 (* l_0_17_40 l_0_17_40)))
 (let ((?x50038 (* l_0_17_39 l_0_17_39)))
 (let ((?x51263 (* l_0_17_183 l_0_17_183)))
 (let ((?x51264 (* 2.0 ?x51263)))
 (let ((?x51260 (* l_0_17_182 l_0_17_182)))
 (let ((?x51261 (* 2.0 ?x51260)))
 (let ((?x30838 (* l_0_17_181 l_0_17_181)))
 (let ((?x40141 (* 2.0 ?x30838)))
 (let ((?x30839 (* l_0_17_180 l_0_17_180)))
 (let ((?x30834 (* 2.0 ?x30839)))
 (let ((?x41675 (* l_0_17_179 l_0_17_179)))
 (let ((?x41665 (* 2.0 ?x41675)))
 (let ((?x50026 (* l_0_17_15 l_0_17_15)))
 (let ((?x50024 (* l_0_17_14 l_0_17_14)))
 (let ((?x50022 (* l_0_17_13 l_0_17_13)))
 (let ((?x30798 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x50022) ?x50024)))
 (let ((?x51266 (- (+ (+ (+ (+ (+ (+ ?x30798 ?x50026) ?x41665) ?x30834) ?x40141) ?x51261) ?x51264) ?x50038)))
 (= (- (- (- (- ?x51266 ?x50040) ?x50042) ?x50044) ?x50046) 0.0))))))))))))))))))))))
(assert
 (let ((?x49107 (* 2.0 l_0_17_43)))
 (let ((?x50100 (* ?x49107 l_0_17_48)))
 (let ((?x49104 (* 2.0 l_0_17_42)))
 (let ((?x50098 (* ?x49104 l_0_17_47)))
 (let ((?x49101 (* 2.0 l_0_17_41)))
 (let ((?x50096 (* ?x49101 l_0_17_46)))
 (let ((?x49098 (* 2.0 l_0_17_40)))
 (let ((?x50094 (* ?x49098 l_0_17_45)))
 (let ((?x49095 (* 2.0 l_0_17_39)))
 (let ((?x50092 (* ?x49095 l_0_17_44)))
 (let ((?x49074 (* 2.0 l_0_17_15)))
 (let ((?x50080 (* ?x49074 l_0_17_20)))
 (let ((?x49068 (* 2.0 l_0_17_14)))
 (let ((?x50078 (* ?x49068 l_0_17_19)))
 (let ((?x49065 (* 2.0 l_0_17_13)))
 (let ((?x50076 (* ?x49065 l_0_17_18)))
 (let ((?x49062 (* 2.0 l_0_17_12)))
 (let ((?x50074 (* ?x49062 l_0_17_17)))
 (let ((?x41706 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_16) ?x50074) ?x50076) ?x50078) ?x50080)))
 (let ((?x51275 (+ (+ ?x41706 (* (* 4.0 l_0_17_179) l_0_17_184)) (* (* 4.0 l_0_17_180) l_0_17_185))))
 (let ((?x51279 (+ (+ ?x51275 (* (* 4.0 l_0_17_181) l_0_17_186)) (* (* 4.0 l_0_17_182) l_0_17_187))))
 (let ((?x51284 (- (- (- (+ ?x51279 (* (* 4.0 l_0_17_183) l_0_17_188)) ?x50092) ?x50094) ?x50096)))
 (= (- (- ?x51284 ?x50098) ?x50100) 0.0))))))))))))))))))))))))
(assert
 (let ((?x50223 (* l_0_17_49 l_0_17_49)))
 (let ((?x50221 (* l_0_17_48 l_0_17_48)))
 (let ((?x50219 (* l_0_17_47 l_0_17_47)))
 (let ((?x50217 (* l_0_17_46 l_0_17_46)))
 (let ((?x50215 (* l_0_17_45 l_0_17_45)))
 (let ((?x50213 (* l_0_17_44 l_0_17_44)))
 (let ((?x50211 (* l_0_17_21 l_0_17_21)))
 (let ((?x50209 (* l_0_17_20 l_0_17_20)))
 (let ((?x50207 (* l_0_17_19 l_0_17_19)))
 (let ((?x51301 (* l_0_17_189 l_0_17_189)))
 (let ((?x51302 (* 2.0 ?x51301)))
 (let ((?x51298 (* l_0_17_188 l_0_17_188)))
 (let ((?x51299 (* 2.0 ?x51298)))
 (let ((?x51295 (* l_0_17_187 l_0_17_187)))
 (let ((?x51296 (* 2.0 ?x51295)))
 (let ((?x41719 (* l_0_17_186 l_0_17_186)))
 (let ((?x3724 (* 2.0 ?x41719)))
 (let ((?x41711 (* l_0_17_185 l_0_17_185)))
 (let ((?x41721 (* 2.0 ?x41711)))
 (let ((?x30859 (* l_0_17_184 l_0_17_184)))
 (let ((?x30856 (* 2.0 ?x30859)))
 (let ((?x50205 (* l_0_17_18 l_0_17_18)))
 (let ((?x41707 (+ (+ (+ (* l_0_17_16 l_0_17_16) (* l_0_17_17 l_0_17_17)) ?x50205) ?x30856)))
 (let ((?x51305 (+ (+ (+ (+ (+ (+ (+ ?x41707 ?x41721) ?x3724) ?x51296) ?x51299) ?x51302) ?x50207) ?x50209)))
 (let ((?x51312 (- (- (- (- (- (- (+ ?x51305 ?x50211) ?x50213) ?x50215) ?x50217) ?x50219) ?x50221) ?x50223)))
 (= ?x51312 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x50562 (* ?x49358 l_0_17_86)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x50560 (* ?x49355 l_0_17_58)))
 (let ((?x50328 (* (* 2.0 l_0_17_49) l_0_17_55)))
 (let ((?x50325 (* (* 2.0 l_0_17_48) l_0_17_54)))
 (let ((?x50322 (* (* 2.0 l_0_17_47) l_0_17_53)))
 (let ((?x50319 (* (* 2.0 l_0_17_46) l_0_17_52)))
 (let ((?x50316 (* (* 2.0 l_0_17_45) l_0_17_51)))
 (let ((?x50313 (* (* 2.0 l_0_17_44) l_0_17_50)))
 (let ((?x50310 (* (* 2.0 l_0_17_21) l_0_17_27)))
 (let ((?x50307 (* (* 2.0 l_0_17_20) l_0_17_26)))
 (let ((?x50304 (* (* 2.0 l_0_17_19) l_0_17_25)))
 (let ((?x49672 (* 2.0 l_0_17_18)))
 (let ((?x50301 (* ?x49672 l_0_17_24)))
 (let ((?x49489 (* 2.0 l_0_17_17)))
 (let ((?x50299 (* ?x49489 l_0_17_23)))
 (let ((?x49479 (* 2.0 l_0_17_16)))
 (let ((?x50291 (* ?x49479 l_0_17_22)))
 (let ((?x51314 (+ (+ (+ (+ ?x50291 ?x50299) ?x50301) (* (* 4.0 l_0_17_184) l_0_17_190)) (* (* 4.0 l_0_17_185) l_0_17_191))))
 (let ((?x51320 (+ (+ ?x51314 (* (* 4.0 l_0_17_186) l_0_17_192)) (* (* 4.0 l_0_17_187) l_0_17_193))))
 (let ((?x51326 (+ (+ ?x51320 (* (* 4.0 l_0_17_188) l_0_17_194)) (* (* 4.0 l_0_17_189) l_0_17_195))))
 (let ((?x51333 (- (- (- (- (+ (+ (+ ?x51326 ?x50304) ?x50307) ?x50310) ?x50313) ?x50316) ?x50319) ?x50322)))
 (= (+ (- (- (- ?x51333 ?x50325) ?x50328) ?x50560) ?x50562) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x50447 (* l_0_17_56 l_0_17_56)))
 (let ((?x50445 (* l_0_17_55 l_0_17_55)))
 (let ((?x50443 (* l_0_17_54 l_0_17_54)))
 (let ((?x50441 (* l_0_17_53 l_0_17_53)))
 (let ((?x50439 (* l_0_17_52 l_0_17_52)))
 (let ((?x50437 (* l_0_17_51 l_0_17_51)))
 (let ((?x50435 (* l_0_17_50 l_0_17_50)))
 (let ((?x50433 (* l_0_17_28 l_0_17_28)))
 (let ((?x50431 (* l_0_17_27 l_0_17_27)))
 (let ((?x50429 (* l_0_17_26 l_0_17_26)))
 (let ((?x50427 (* l_0_17_25 l_0_17_25)))
 (let ((?x50425 (* l_0_17_24 l_0_17_24)))
 (let ((?x50423 (* l_0_17_23 l_0_17_23)))
 (let ((?x50421 (* l_0_17_22 l_0_17_22)))
 (let ((?x51354 (* l_0_17_196 l_0_17_196)))
 (let ((?x51355 (* 2.0 ?x51354)))
 (let ((?x51351 (* l_0_17_195 l_0_17_195)))
 (let ((?x51352 (* 2.0 ?x51351)))
 (let ((?x51348 (* l_0_17_194 l_0_17_194)))
 (let ((?x51349 (* 2.0 ?x51348)))
 (let ((?x51345 (* l_0_17_193 l_0_17_193)))
 (let ((?x51346 (* 2.0 ?x51345)))
 (let ((?x30997 (* l_0_17_192 l_0_17_192)))
 (let ((?x51343 (* 2.0 ?x30997)))
 (let ((?x31026 (* l_0_17_191 l_0_17_191)))
 (let ((?x31027 (* 2.0 ?x31026)))
 (let ((?x4033 (* l_0_17_190 l_0_17_190)))
 (let ((?x21075 (* 2.0 ?x4033)))
 (let ((?x51357 (+ (+ (+ (+ (+ (+ (+ ?x21075 ?x31027) ?x51343) ?x51346) ?x51349) ?x51352) ?x51355) ?x50421)))
 (let ((?x51364 (- (+ (+ (+ (+ (+ (+ ?x51357 ?x50423) ?x50425) ?x50427) ?x50429) ?x50431) ?x50433) ?x50435)))
 (= (- (- (- (- (- (- ?x51364 ?x50437) ?x50439) ?x50441) ?x50443) ?x50445) ?x50447) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x48868 (* l_0_17_85 l_0_17_85)))
 (let ((?x48866 (* l_0_17_57 l_0_17_57)))
 (let ((?x51378 (- (* (* (- 2.0) l_0_17_212) l_0_17_218) (* (* 2.0 l_0_17_213) l_0_17_219))))
 (let ((?x51384 (- (- ?x51378 (* (* 2.0 l_0_17_214) l_0_17_220)) (* (* 2.0 l_0_17_215) l_0_17_221))))
 (let ((?x51390 (- (- ?x51384 (* (* 2.0 l_0_17_216) l_0_17_222)) (* (* 2.0 l_0_17_217) l_0_17_223))))
 (let ((?x51396 (- (- ?x51390 (* (* 2.0 l_0_17_240) l_0_17_246)) (* (* 2.0 l_0_17_241) l_0_17_247))))
 (let ((?x51402 (- (- ?x51396 (* (* 2.0 l_0_17_242) l_0_17_248)) (* (* 2.0 l_0_17_243) l_0_17_249))))
 (let ((?x51408 (- (- ?x51402 (* (* 2.0 l_0_17_244) l_0_17_250)) (* (* 2.0 l_0_17_245) l_0_17_251))))
 (let ((?x51414 (- (- ?x51408 (* (* 2.0 l_0_17_268) l_0_17_274)) (* (* 2.0 l_0_17_269) l_0_17_275))))
 (let ((?x51420 (- (- ?x51414 (* (* 2.0 l_0_17_270) l_0_17_276)) (* (* 2.0 l_0_17_271) l_0_17_277))))
 (let ((?x51426 (- (- ?x51420 (* (* 2.0 l_0_17_272) l_0_17_278)) (* (* 2.0 l_0_17_273) l_0_17_279))))
 (let ((?x51432 (- (- ?x51426 (* (* 2.0 l_0_17_296) l_0_17_302)) (* (* 2.0 l_0_17_297) l_0_17_303))))
 (let ((?x51438 (- (- ?x51432 (* (* 2.0 l_0_17_298) l_0_17_304)) (* (* 2.0 l_0_17_299) l_0_17_305))))
 (let ((?x51444 (- (- ?x51438 (* (* 2.0 l_0_17_300) l_0_17_306)) (* (* 2.0 l_0_17_301) l_0_17_307))))
 (let ((?x51450 (- (- ?x51444 (* (* 2.0 l_0_17_324) l_0_17_330)) (* (* 2.0 l_0_17_325) l_0_17_331))))
 (let ((?x51456 (- (- ?x51450 (* (* 2.0 l_0_17_326) l_0_17_332)) (* (* 2.0 l_0_17_327) l_0_17_333))))
 (let ((?x51462 (- (- ?x51456 (* (* 2.0 l_0_17_328) l_0_17_334)) (* (* 2.0 l_0_17_329) l_0_17_335))))
 (= (+ (- ?x51462 ?x48866) ?x48868) 0.0)))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x51637 (* ?x49358 l_0_17_88)))
 (let ((?x51635 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x51632 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x51629 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x51626 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x51623 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x51620 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51617 (* ?x49355 l_0_17_60)))
 (let ((?x50297 (* (* 2.0 l_0_17_161) l_0_17_167)))
 (let ((?x50294 (* (* 2.0 l_0_17_160) l_0_17_166)))
 (let ((?x50289 (* (* 2.0 l_0_17_159) l_0_17_165)))
 (let ((?x50286 (* (* 2.0 l_0_17_158) l_0_17_164)))
 (let ((?x50283 (* (* 2.0 l_0_17_157) l_0_17_163)))
 (let ((?x50280 (* (* 2.0 l_0_17_156) l_0_17_162)))
 (let ((?x51573 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x51570 (* ?x29967 l_0_17_110)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51568 (* ?x39678 l_0_17_109)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51566 (* ?x39667 l_0_17_108)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51564 (* ?x39657 l_0_17_107)))
 (let ((?x51571 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_106) ?x51564) ?x51566) ?x51568) ?x51570)))
 (let ((?x51574 (+ ?x51571 ?x51573)))
 (let ((?x51580 (- (- ?x51574 (* (* 2.0 l_0_17_128) l_0_17_134)) (* (* 2.0 l_0_17_129) l_0_17_135))))
 (let ((?x51586 (- (- ?x51580 (* (* 2.0 l_0_17_130) l_0_17_136)) (* (* 2.0 l_0_17_131) l_0_17_137))))
 (let ((?x51592 (- (- ?x51586 (* (* 2.0 l_0_17_132) l_0_17_138)) (* (* 2.0 l_0_17_133) l_0_17_139))))
 (let ((?x51601 (- (- (- (- (- (- (- ?x51592 ?x50280) ?x50283) ?x50286) ?x50289) ?x50294) ?x50297) (* (* 2.0 l_0_17_184) l_0_17_190))))
 (let ((?x51607 (- (- ?x51601 (* (* 2.0 l_0_17_185) l_0_17_191)) (* (* 2.0 l_0_17_186) l_0_17_192))))
 (let ((?x51613 (- (- ?x51607 (* (* 2.0 l_0_17_187) l_0_17_193)) (* (* 2.0 l_0_17_188) l_0_17_194))))
 (let ((?x51624 (- (- (- (- ?x51613 (* (* 2.0 l_0_17_189) l_0_17_195)) ?x51617) ?x51620) ?x51623)))
 (= (+ (- (- (- (- ?x51624 ?x51626) ?x51629) ?x51632) ?x51635) ?x51637) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x51729 (* ?x49358 l_0_17_91)))
 (let ((?x51635 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x51632 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x51629 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x51626 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x51623 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x51620 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51721 (* ?x49355 l_0_17_63)))
 (let ((?x51573 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x51570 (* ?x29967 l_0_17_110)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51568 (* ?x39678 l_0_17_109)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51566 (* ?x39667 l_0_17_108)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51564 (* ?x39657 l_0_17_107)))
 (let ((?x51719 (- (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_106) ?x51564) ?x51566) ?x51568) ?x51570)))
 (let ((?x51727 (+ (+ (+ (+ (+ (- (- ?x51719 ?x51573) ?x51721) ?x51620) ?x51623) ?x51626) ?x51629) ?x51632)))
 (= (+ (+ ?x51727 ?x51635) ?x51729) 0.0)))))))))))))))))))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x41010 (* ?x49355 l_0_17_72)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x4613 (* ?x29970 l_0_17_85)))
 (= (- ?x4613 ?x41010) 0.0))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51743 (* ?x49355 l_0_17_78)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x51742 (* ?x49170 l_0_17_85)))
 (= (- ?x51742 ?x51743) 0.0))))))
(assert
 (let ((?x50832 (* l_0_17_87 l_0_17_87)))
 (let ((?x50830 (* l_0_17_86 l_0_17_86)))
 (let ((?x51754 (+ (- (* (- l_0_17_58) l_0_17_58) (* l_0_17_59 l_0_17_59)) ?x50830)))
 (= (+ ?x51754 ?x50832) 0.0)))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x50937 (* ?x49505 l_0_17_89)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x50935 (* ?x49502 l_0_17_88)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x50932 (* ?x49499 l_0_17_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_58) l_0_17_60) ?x50932) ?x50935) ?x50937) 0.0))))))))
(assert
 (let ((?x49505 (* 2.0 l_0_17_87)))
 (let ((?x50991 (* ?x49505 l_0_17_92)))
 (let ((?x49502 (* 2.0 l_0_17_86)))
 (let ((?x50988 (* ?x49502 l_0_17_91)))
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x50984 (* ?x49499 l_0_17_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_58) l_0_17_63) ?x50984) ?x50988) ?x50991) 0.0))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51071 (* ?x49499 l_0_17_73)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51069 (* ?x49496 l_0_17_72)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x30671 (* ?x39657 l_0_17_87)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x41371 (* ?x29970 l_0_17_86)))
 (let ((?x20649 (+ ?x41371 ?x30671)))
 (= (- (- ?x20649 ?x51069) ?x51071) 0.0)))))))))))
(assert
 (let ((?x49499 (* 2.0 l_0_17_59)))
 (let ((?x51109 (* ?x49499 l_0_17_79)))
 (let ((?x49496 (* 2.0 l_0_17_58)))
 (let ((?x51107 (* ?x49496 l_0_17_78)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x51083 (* ?x49173 l_0_17_87)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x20759 (* ?x49170 l_0_17_86)))
 (let ((?x51084 (+ ?x20759 ?x51083)))
 (= (- (- ?x51084 ?x51107) ?x51109) 0.0)))))))))))
(assert
 (let ((?x51803 (* l_0_17_90 l_0_17_90)))
 (let ((?x51801 (* l_0_17_89 l_0_17_89)))
 (let ((?x51799 (* l_0_17_88 l_0_17_88)))
 (let ((?x51797 (* l_0_17_62 l_0_17_62)))
 (let ((?x51798 (- (- (* (- l_0_17_60) l_0_17_60) (* l_0_17_61 l_0_17_61)) ?x51797)))
 (= (+ (+ (+ ?x51798 ?x51799) ?x51801) ?x51803) 0.0)))))))
(assert
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x51830 (* ?x49696 l_0_17_93)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x51828 (* ?x49693 l_0_17_92)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x51826 (* ?x49690 l_0_17_91)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51824 (* ?x49687 l_0_17_65)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51822 (* ?x49684 l_0_17_64)))
 (let ((?x51829 (+ (+ (- (- (* (* (- 2.0) l_0_17_60) l_0_17_63) ?x51822) ?x51824) ?x51826) ?x51828)))
 (= (+ ?x51829 ?x51830) 0.0)))))))))))))
(assert
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51852 (* ?x49687 l_0_17_74)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51850 (* ?x49684 l_0_17_73)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51848 (* ?x49681 l_0_17_72)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51846 (* ?x39667 l_0_17_90)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51844 (* ?x39657 l_0_17_89)))
 (let ((?x51847 (+ (+ (* (* 2.0 l_0_17_100) l_0_17_88) ?x51844) ?x51846)))
 (= (- (- (- ?x51847 ?x51848) ?x51850) ?x51852) 0.0)))))))))))))
(assert
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51888 (* ?x49687 l_0_17_80)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51886 (* ?x49684 l_0_17_79)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51884 (* ?x49681 l_0_17_78)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x51882 (* ?x49176 l_0_17_90)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x51880 (* ?x49173 l_0_17_89)))
 (let ((?x51883 (+ (+ (* (* 2.0 l_0_17_106) l_0_17_88) ?x51880) ?x51882)))
 (= (- (- (- ?x51883 ?x51884) ?x51886) ?x51888) 0.0)))))))))))))
(assert
 (let ((?x51926 (* l_0_17_94 l_0_17_94)))
 (let ((?x51924 (* l_0_17_93 l_0_17_93)))
 (let ((?x51922 (* l_0_17_92 l_0_17_92)))
 (let ((?x51920 (* l_0_17_91 l_0_17_91)))
 (let ((?x51918 (* l_0_17_66 l_0_17_66)))
 (let ((?x51916 (* l_0_17_65 l_0_17_65)))
 (let ((?x51917 (- (- (* (- l_0_17_63) l_0_17_63) (* l_0_17_64 l_0_17_64)) ?x51916)))
 (= (+ (+ (+ (+ (- ?x51917 ?x51918) ?x51920) ?x51922) ?x51924) ?x51926) 0.0)))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51958 (* ?x49927 l_0_17_75)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51956 (* ?x49924 l_0_17_74)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51954 (* ?x49921 l_0_17_73)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51952 (* ?x49918 l_0_17_72)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51950 (* ?x39678 l_0_17_94)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51948 (* ?x39667 l_0_17_93)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51946 (* ?x39657 l_0_17_92)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x51939 (* ?x29970 l_0_17_91)))
 (let ((?x51959 (- (- (- (- (+ (+ (+ ?x51939 ?x51946) ?x51948) ?x51950) ?x51952) ?x51954) ?x51956) ?x51958)))
 (= ?x51959 0.0)))))))))))))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51990 (* ?x49927 l_0_17_81)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51988 (* ?x49924 l_0_17_80)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51986 (* ?x49921 l_0_17_79)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51984 (* ?x49918 l_0_17_78)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x51982 (* ?x49179 l_0_17_94)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x51980 (* ?x49176 l_0_17_93)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x31630 (* ?x49173 l_0_17_92)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x31716 (* ?x49170 l_0_17_91)))
 (let ((?x51991 (- (- (- (- (+ (+ (+ ?x31716 ?x31630) ?x51980) ?x51982) ?x51984) ?x51986) ?x51988) ?x51990)))
 (= ?x51991 0.0)))))))))))))))))))
(assert
 (let ((?x52044 (* l_0_17_77 l_0_17_77)))
 (let ((?x52042 (* l_0_17_76 l_0_17_76)))
 (let ((?x52040 (* l_0_17_75 l_0_17_75)))
 (let ((?x52038 (* l_0_17_74 l_0_17_74)))
 (let ((?x52036 (* l_0_17_73 l_0_17_73)))
 (let ((?x52034 (* l_0_17_72 l_0_17_72)))
 (let ((?x52032 (* l_0_17_105 l_0_17_105)))
 (let ((?x52030 (* l_0_17_104 l_0_17_104)))
 (let ((?x52028 (* l_0_17_103 l_0_17_103)))
 (let ((?x52026 (* l_0_17_102 l_0_17_102)))
 (let ((?x52027 (+ (+ (* l_0_17_100 l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x52026)))
 (let ((?x52033 (+ (+ (+ ?x52027 ?x52028) ?x52030) ?x52032)))
 (= (- (- (- (- (- (- ?x52033 ?x52034) ?x52036) ?x52038) ?x52040) ?x52042) ?x52044) 0.0))))))))))))))
(assert
 (let ((?x51635 (* (* 2.0 l_0_17_77) l_0_17_83)))
 (let ((?x51632 (* (* 2.0 l_0_17_76) l_0_17_82)))
 (let ((?x51629 (* (* 2.0 l_0_17_75) l_0_17_81)))
 (let ((?x51626 (* (* 2.0 l_0_17_74) l_0_17_80)))
 (let ((?x51623 (* (* 2.0 l_0_17_73) l_0_17_79)))
 (let ((?x51620 (* (* 2.0 l_0_17_72) l_0_17_78)))
 (let ((?x51573 (* (* 2.0 l_0_17_105) l_0_17_111)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x51570 (* ?x29967 l_0_17_110)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51568 (* ?x39678 l_0_17_109)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51566 (* ?x39667 l_0_17_108)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51564 (* ?x39657 l_0_17_107)))
 (let ((?x51571 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_106) ?x51564) ?x51566) ?x51568) ?x51570)))
 (let ((?x51574 (+ ?x51571 ?x51573)))
 (= (- (- (- (- (- (- ?x51574 ?x51620) ?x51623) ?x51626) ?x51629) ?x51632) ?x51635) 0.0)))))))))))))))))))
(assert
 (let ((?x52099 (* l_0_17_84 l_0_17_84)))
 (let ((?x52097 (* l_0_17_83 l_0_17_83)))
 (let ((?x52095 (* l_0_17_82 l_0_17_82)))
 (let ((?x52093 (* l_0_17_81 l_0_17_81)))
 (let ((?x52091 (* l_0_17_80 l_0_17_80)))
 (let ((?x52089 (* l_0_17_79 l_0_17_79)))
 (let ((?x52087 (* l_0_17_78 l_0_17_78)))
 (let ((?x52085 (* l_0_17_112 l_0_17_112)))
 (let ((?x52083 (* l_0_17_111 l_0_17_111)))
 (let ((?x52081 (* l_0_17_110 l_0_17_110)))
 (let ((?x52079 (* l_0_17_109 l_0_17_109)))
 (let ((?x52077 (* l_0_17_108 l_0_17_108)))
 (let ((?x52078 (+ (+ (* l_0_17_106 l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52077)))
 (let ((?x52086 (+ (+ (+ (+ ?x52078 ?x52079) ?x52081) ?x52083) ?x52085)))
 (let ((?x52100 (- (- (- (- (- (- (- ?x52086 ?x52087) ?x52089) ?x52091) ?x52093) ?x52095) ?x52097) ?x52099)))
 (= ?x52100 0.0)))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x51637 (* ?x49358 l_0_17_88)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51617 (* ?x49355 l_0_17_60)))
 (let ((?x52148 (* l_0_17_314 l_0_17_314)))
 (let ((?x52146 (* l_0_17_313 l_0_17_313)))
 (let ((?x52144 (* l_0_17_312 l_0_17_312)))
 (let ((?x52142 (* l_0_17_286 l_0_17_286)))
 (let ((?x52140 (* l_0_17_285 l_0_17_285)))
 (let ((?x52138 (* l_0_17_284 l_0_17_284)))
 (let ((?x52136 (* l_0_17_258 l_0_17_258)))
 (let ((?x52134 (* l_0_17_257 l_0_17_257)))
 (let ((?x52132 (* l_0_17_256 l_0_17_256)))
 (let ((?x52130 (* l_0_17_230 l_0_17_230)))
 (let ((?x52128 (* l_0_17_229 l_0_17_229)))
 (let ((?x52126 (* l_0_17_228 l_0_17_228)))
 (let ((?x52124 (* l_0_17_202 l_0_17_202)))
 (let ((?x52122 (* l_0_17_201 l_0_17_201)))
 (let ((?x52120 (* l_0_17_200 l_0_17_200)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49200 (* ?x49071 l_0_17_144)))
 (let ((?x52119 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_116) ?x49200) (* (* 2.0 l_0_17_169) l_0_17_172))))
 (let ((?x52133 (- (- (- (- (- (- (- ?x52119 ?x52120) ?x52122) ?x52124) ?x52126) ?x52128) ?x52130) ?x52132)))
 (let ((?x52147 (- (- (- (- (- (- (- ?x52133 ?x52134) ?x52136) ?x52138) ?x52140) ?x52142) ?x52144) ?x52146)))
 (= (+ (- (- ?x52147 ?x52148) ?x51617) ?x51637) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x51729 (* ?x49358 l_0_17_91)))
 (let ((?x51637 (* ?x49358 l_0_17_88)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51721 (* ?x49355 l_0_17_63)))
 (let ((?x51617 (* ?x49355 l_0_17_60)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49318 (* ?x49071 l_0_17_147)))
 (let ((?x52178 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_119) ?x49318) (* (* 2.0 l_0_17_169) l_0_17_175))))
 (let ((?x52184 (- (- ?x52178 (* (* 2.0 l_0_17_200) l_0_17_203)) (* (* 2.0 l_0_17_201) l_0_17_204))))
 (let ((?x52190 (- (- ?x52184 (* (* 2.0 l_0_17_202) l_0_17_205)) (* (* 2.0 l_0_17_228) l_0_17_231))))
 (let ((?x52196 (- (- ?x52190 (* (* 2.0 l_0_17_229) l_0_17_232)) (* (* 2.0 l_0_17_230) l_0_17_233))))
 (let ((?x52202 (- (- ?x52196 (* (* 2.0 l_0_17_256) l_0_17_259)) (* (* 2.0 l_0_17_257) l_0_17_260))))
 (let ((?x52208 (- (- ?x52202 (* (* 2.0 l_0_17_258) l_0_17_261)) (* (* 2.0 l_0_17_284) l_0_17_287))))
 (let ((?x52214 (- (- ?x52208 (* (* 2.0 l_0_17_285) l_0_17_288)) (* (* 2.0 l_0_17_286) l_0_17_289))))
 (let ((?x52220 (- (- ?x52214 (* (* 2.0 l_0_17_312) l_0_17_315)) (* (* 2.0 l_0_17_313) l_0_17_316))))
 (let ((?x52226 (- (- (+ (- ?x52220 (* (* 2.0 l_0_17_314) l_0_17_317)) ?x51617) ?x51721) ?x51637)))
 (= (+ ?x52226 ?x51729) 0.0)))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x49359 (* ?x49358 l_0_17_95)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x49356 (* ?x49355 l_0_17_67)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49337 (* ?x49071 l_0_17_151)))
 (let ((?x32035 (- (- (* (* (- 2.0) l_0_17_113) l_0_17_123) ?x49337) (* (* 2.0 l_0_17_169) l_0_17_179))))
 (let ((?x42473 (- (- ?x32035 (* (* 2.0 l_0_17_200) l_0_17_207)) (* (* 2.0 l_0_17_201) l_0_17_208))))
 (let ((?x32090 (- (- ?x42473 (* (* 2.0 l_0_17_202) l_0_17_209)) (* (* 2.0 l_0_17_228) l_0_17_235))))
 (let ((?x52274 (- (- ?x32090 (* (* 2.0 l_0_17_229) l_0_17_236)) (* (* 2.0 l_0_17_230) l_0_17_237))))
 (let ((?x52278 (- (- ?x52274 (* (* 2.0 l_0_17_256) l_0_17_263)) (* (* 2.0 l_0_17_257) l_0_17_264))))
 (let ((?x52282 (- (- ?x52278 (* (* 2.0 l_0_17_258) l_0_17_265)) (* (* 2.0 l_0_17_284) l_0_17_291))))
 (let ((?x52286 (- (- ?x52282 (* (* 2.0 l_0_17_285) l_0_17_292)) (* (* 2.0 l_0_17_286) l_0_17_293))))
 (let ((?x52290 (- (- ?x52286 (* (* 2.0 l_0_17_312) l_0_17_319)) (* (* 2.0 l_0_17_313) l_0_17_320))))
 (= (+ (- (- ?x52290 (* (* 2.0 l_0_17_314) l_0_17_321)) ?x49356) ?x49359) 0.0))))))))))))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x41010 (* ?x49355 l_0_17_72)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49345 (* ?x49071 l_0_17_156)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x4613 (* ?x29970 l_0_17_85)))
 (let ((?x52330 (- (- (- ?x4613 (* (* 2.0 l_0_17_113) l_0_17_128)) ?x49345) (* (* 2.0 l_0_17_169) l_0_17_184))))
 (let ((?x52334 (- (- ?x52330 (* (* 2.0 l_0_17_200) l_0_17_212)) (* (* 2.0 l_0_17_201) l_0_17_213))))
 (let ((?x52338 (- (- ?x52334 (* (* 2.0 l_0_17_202) l_0_17_214)) (* (* 2.0 l_0_17_228) l_0_17_240))))
 (let ((?x52342 (- (- ?x52338 (* (* 2.0 l_0_17_229) l_0_17_241)) (* (* 2.0 l_0_17_230) l_0_17_242))))
 (let ((?x52346 (- (- ?x52342 (* (* 2.0 l_0_17_256) l_0_17_268)) (* (* 2.0 l_0_17_257) l_0_17_269))))
 (let ((?x52350 (- (- ?x52346 (* (* 2.0 l_0_17_258) l_0_17_270)) (* (* 2.0 l_0_17_284) l_0_17_296))))
 (let ((?x52354 (- (- ?x52350 (* (* 2.0 l_0_17_285) l_0_17_297)) (* (* 2.0 l_0_17_286) l_0_17_298))))
 (let ((?x52358 (- (- ?x52354 (* (* 2.0 l_0_17_312) l_0_17_324)) (* (* 2.0 l_0_17_313) l_0_17_325))))
 (= (- (- ?x52358 (* (* 2.0 l_0_17_314) l_0_17_326)) ?x41010) 0.0))))))))))))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51743 (* ?x49355 l_0_17_78)))
 (let ((?x49071 (* 2.0 l_0_17_141)))
 (let ((?x49377 (* ?x49071 l_0_17_162)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x51742 (* ?x49170 l_0_17_85)))
 (let ((?x42622 (- (- (- ?x51742 (* (* 2.0 l_0_17_113) l_0_17_134)) ?x49377) (* (* 2.0 l_0_17_169) l_0_17_190))))
 (let ((?x32758 (- (- ?x42622 (* (* 2.0 l_0_17_200) l_0_17_218)) (* (* 2.0 l_0_17_201) l_0_17_219))))
 (let ((?x52415 (- (- ?x32758 (* (* 2.0 l_0_17_202) l_0_17_220)) (* (* 2.0 l_0_17_228) l_0_17_246))))
 (let ((?x52419 (- (- ?x52415 (* (* 2.0 l_0_17_229) l_0_17_247)) (* (* 2.0 l_0_17_230) l_0_17_248))))
 (let ((?x52423 (- (- ?x52419 (* (* 2.0 l_0_17_256) l_0_17_274)) (* (* 2.0 l_0_17_257) l_0_17_275))))
 (let ((?x52427 (- (- ?x52423 (* (* 2.0 l_0_17_258) l_0_17_276)) (* (* 2.0 l_0_17_284) l_0_17_302))))
 (let ((?x52431 (- (- ?x52427 (* (* 2.0 l_0_17_285) l_0_17_303)) (* (* 2.0 l_0_17_286) l_0_17_304))))
 (let ((?x52435 (- (- ?x52431 (* (* 2.0 l_0_17_312) l_0_17_330)) (* (* 2.0 l_0_17_313) l_0_17_331))))
 (= (- (- ?x52435 (* (* 2.0 l_0_17_314) l_0_17_332)) ?x51743) 0.0))))))))))))))))
(assert
 (let ((?x51803 (* l_0_17_90 l_0_17_90)))
 (let ((?x51801 (* l_0_17_89 l_0_17_89)))
 (let ((?x51799 (* l_0_17_88 l_0_17_88)))
 (let ((?x51797 (* l_0_17_62 l_0_17_62)))
 (let ((?x51795 (* l_0_17_61 l_0_17_61)))
 (let ((?x51807 (* l_0_17_60 l_0_17_60)))
 (let ((?x50922 (* l_0_17_174 l_0_17_174)))
 (let ((?x50919 (* l_0_17_173 l_0_17_173)))
 (let ((?x50916 (* l_0_17_172 l_0_17_172)))
 (let ((?x49565 (* l_0_17_146 l_0_17_146)))
 (let ((?x49557 (* l_0_17_145 l_0_17_145)))
 (let ((?x39354 (* l_0_17_144 l_0_17_144)))
 (let ((?x52486 (* l_0_17_118 l_0_17_118)))
 (let ((?x52487 (- (- (* (- l_0_17_116) l_0_17_116) (* l_0_17_117 l_0_17_117)) ?x52486)))
 (let ((?x52494 (- (- (- (- (- (- (- ?x52487 ?x39354) ?x49557) ?x49565) ?x50916) ?x50919) ?x50922) ?x51807)))
 (= (+ (+ (+ (- (- ?x52494 ?x51795) ?x51797) ?x51799) ?x51801) ?x51803) 0.0)))))))))))))))))
(assert
 (let ((?x51803 (* l_0_17_90 l_0_17_90)))
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x51830 (* ?x49696 l_0_17_93)))
 (let ((?x51801 (* l_0_17_89 l_0_17_89)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x51828 (* ?x49693 l_0_17_92)))
 (let ((?x51799 (* l_0_17_88 l_0_17_88)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x51826 (* ?x49690 l_0_17_91)))
 (let ((?x51797 (* l_0_17_62 l_0_17_62)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51824 (* ?x49687 l_0_17_65)))
 (let ((?x51795 (* l_0_17_61 l_0_17_61)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51822 (* ?x49684 l_0_17_64)))
 (let ((?x51807 (* l_0_17_60 l_0_17_60)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x52522 (* ?x49681 l_0_17_63)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49591 (* ?x49590 l_0_17_149)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49588 (* ?x49587 l_0_17_148)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x49586 (* ?x39358 l_0_17_147)))
 (let ((?x32970 (- (* (* (- 2.0) l_0_17_116) l_0_17_119) (* (* 2.0 l_0_17_117) l_0_17_120))))
 (let ((?x52512 (- (- (- (- ?x32970 (* (* 2.0 l_0_17_118) l_0_17_121)) ?x49586) ?x49588) ?x49591)))
 (let ((?x52518 (- (- ?x52512 (* (* 2.0 l_0_17_172) l_0_17_175)) (* (* 2.0 l_0_17_173) l_0_17_176))))
 (let ((?x52525 (- (+ (- (- ?x52518 (* (* 2.0 l_0_17_174) l_0_17_177)) ?x52522) ?x51807) ?x51822)))
 (let ((?x52532 (- (+ (- (+ (+ (- (+ ?x52525 ?x51795) ?x51824) ?x51797) ?x51826) ?x51799) ?x51828) ?x51801)))
 (= (- (+ ?x52532 ?x51830) ?x51803) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x49697 (* ?x49696 l_0_17_97)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x49694 (* ?x49693 l_0_17_96)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x49691 (* ?x49690 l_0_17_95)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x49688 (* ?x49687 l_0_17_69)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x49685 (* ?x49684 l_0_17_68)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x49682 (* ?x49681 l_0_17_67)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49635 (* ?x49590 l_0_17_153)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x39364 (* ?x49587 l_0_17_152)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x39348 (* ?x39358 l_0_17_151)))
 (let ((?x52552 (- (* (* (- 2.0) l_0_17_116) l_0_17_123) (* (* 2.0 l_0_17_117) l_0_17_124))))
 (let ((?x52557 (- (- (- (- ?x52552 (* (* 2.0 l_0_17_118) l_0_17_125)) ?x39348) ?x39364) ?x49635)))
 (let ((?x52561 (- (- ?x52557 (* (* 2.0 l_0_17_172) l_0_17_179)) (* (* 2.0 l_0_17_173) l_0_17_180))))
 (let ((?x52566 (- (- (- (- ?x52561 (* (* 2.0 l_0_17_174) l_0_17_181)) ?x49682) ?x49685) ?x49688)))
 (= (+ (+ (+ ?x52566 ?x49691) ?x49694) ?x49697) 0.0))))))))))))))))))))))))
(assert
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51852 (* ?x49687 l_0_17_74)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51850 (* ?x49684 l_0_17_73)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51848 (* ?x49681 l_0_17_72)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49666 (* ?x49590 l_0_17_158)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49664 (* ?x49587 l_0_17_157)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x49663 (* ?x39358 l_0_17_156)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51846 (* ?x39667 l_0_17_90)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51844 (* ?x39657 l_0_17_89)))
 (let ((?x51847 (+ (+ (* (* 2.0 l_0_17_100) l_0_17_88) ?x51844) ?x51846)))
 (let ((?x52579 (- (- ?x51847 (* (* 2.0 l_0_17_116) l_0_17_128)) (* (* 2.0 l_0_17_117) l_0_17_129))))
 (let ((?x52584 (- (- (- (- ?x52579 (* (* 2.0 l_0_17_118) l_0_17_130)) ?x49663) ?x49664) ?x49666)))
 (let ((?x52588 (- (- ?x52584 (* (* 2.0 l_0_17_172) l_0_17_184)) (* (* 2.0 l_0_17_173) l_0_17_185))))
 (let ((?x52593 (- (- (- (- ?x52588 (* (* 2.0 l_0_17_174) l_0_17_186)) ?x51848) ?x51850) ?x51852)))
 (= ?x52593 0.0)))))))))))))))))))))))
(assert
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51888 (* ?x49687 l_0_17_80)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51886 (* ?x49684 l_0_17_79)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51884 (* ?x49681 l_0_17_78)))
 (let ((?x49590 (* 2.0 l_0_17_146)))
 (let ((?x49741 (* ?x49590 l_0_17_164)))
 (let ((?x49587 (* 2.0 l_0_17_145)))
 (let ((?x49738 (* ?x49587 l_0_17_163)))
 (let ((?x39358 (* 2.0 l_0_17_144)))
 (let ((?x39519 (* ?x39358 l_0_17_162)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x51882 (* ?x49176 l_0_17_90)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x51880 (* ?x49173 l_0_17_89)))
 (let ((?x51883 (+ (+ (* (* 2.0 l_0_17_106) l_0_17_88) ?x51880) ?x51882)))
 (let ((?x52608 (- (- ?x51883 (* (* 2.0 l_0_17_116) l_0_17_134)) (* (* 2.0 l_0_17_117) l_0_17_135))))
 (let ((?x52613 (- (- (- (- ?x52608 (* (* 2.0 l_0_17_118) l_0_17_136)) ?x39519) ?x49738) ?x49741)))
 (let ((?x52617 (- (- ?x52613 (* (* 2.0 l_0_17_172) l_0_17_190)) (* (* 2.0 l_0_17_173) l_0_17_191))))
 (let ((?x52622 (- (- (- (- ?x52617 (* (* 2.0 l_0_17_174) l_0_17_192)) ?x51884) ?x51886) ?x51888)))
 (= ?x52622 0.0)))))))))))))))))))))))
(assert
 (let ((?x51926 (* l_0_17_94 l_0_17_94)))
 (let ((?x51924 (* l_0_17_93 l_0_17_93)))
 (let ((?x51922 (* l_0_17_92 l_0_17_92)))
 (let ((?x51920 (* l_0_17_91 l_0_17_91)))
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x51830 (* ?x49696 l_0_17_93)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x51828 (* ?x49693 l_0_17_92)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x51826 (* ?x49690 l_0_17_91)))
 (let ((?x51918 (* l_0_17_66 l_0_17_66)))
 (let ((?x51916 (* l_0_17_65 l_0_17_65)))
 (let ((?x51914 (* l_0_17_64 l_0_17_64)))
 (let ((?x51930 (* l_0_17_63 l_0_17_63)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51824 (* ?x49687 l_0_17_65)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51822 (* ?x49684 l_0_17_64)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x52522 (* ?x49681 l_0_17_63)))
 (let ((?x51143 (* l_0_17_178 l_0_17_178)))
 (let ((?x51140 (* l_0_17_177 l_0_17_177)))
 (let ((?x51137 (* l_0_17_176 l_0_17_176)))
 (let ((?x20877 (* l_0_17_175 l_0_17_175)))
 (let ((?x49804 (* l_0_17_150 l_0_17_150)))
 (let ((?x49802 (* l_0_17_149 l_0_17_149)))
 (let ((?x49800 (* l_0_17_148 l_0_17_148)))
 (let ((?x49790 (* l_0_17_147 l_0_17_147)))
 (let ((?x33310 (* l_0_17_122 l_0_17_122)))
 (let ((?x33352 (* l_0_17_121 l_0_17_121)))
 (let ((?x22268 (- (- (* (- l_0_17_119) l_0_17_119) (* l_0_17_120 l_0_17_120)) ?x33352)))
 (let ((?x52641 (- (- (- (- (- (- (- ?x22268 ?x33310) ?x49790) ?x49800) ?x49802) ?x49804) ?x20877) ?x51137)))
 (let ((?x52648 (- (- (+ (+ (+ (- (- ?x52641 ?x51140) ?x51143) ?x52522) ?x51822) ?x51824) ?x51930) ?x51914)))
 (let ((?x52655 (+ (+ (- (- (- (- (- ?x52648 ?x51916) ?x51918) ?x51826) ?x51828) ?x51830) ?x51920) ?x51922)))
 (= (+ (+ ?x52655 ?x51924) ?x51926) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49940 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49937 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49934 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49931 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49696 (* 2.0 l_0_17_90)))
 (let ((?x49697 (* ?x49696 l_0_17_97)))
 (let ((?x49693 (* 2.0 l_0_17_89)))
 (let ((?x49694 (* ?x49693 l_0_17_96)))
 (let ((?x49690 (* 2.0 l_0_17_88)))
 (let ((?x49691 (* ?x49690 l_0_17_95)))
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x49928 (* ?x49927 l_0_17_70)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x49925 (* ?x49924 l_0_17_69)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x49922 (* ?x49921 l_0_17_68)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x49919 (* ?x49918 l_0_17_67)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x49688 (* ?x49687 l_0_17_69)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x49685 (* ?x49684 l_0_17_68)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x49682 (* ?x49681 l_0_17_67)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49850 (* ?x49849 l_0_17_154)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49847 (* ?x49846 l_0_17_153)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49844 (* ?x49843 l_0_17_152)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49841 (* ?x49840 l_0_17_151)))
 (let ((?x42854 (- (* (* (- 2.0) l_0_17_119) l_0_17_123) (* (* 2.0 l_0_17_120) l_0_17_124))))
 (let ((?x6512 (- (- ?x42854 (* (* 2.0 l_0_17_121) l_0_17_125)) (* (* 2.0 l_0_17_122) l_0_17_126))))
 (let ((?x52680 (- (- (- (- (- ?x6512 ?x49841) ?x49844) ?x49847) ?x49850) (* (* 2.0 l_0_17_175) l_0_17_179))))
 (let ((?x52686 (- (- ?x52680 (* (* 2.0 l_0_17_176) l_0_17_180)) (* (* 2.0 l_0_17_177) l_0_17_181))))
 (let ((?x52692 (+ (+ (+ (- ?x52686 (* (* 2.0 l_0_17_178) l_0_17_182)) ?x49682) ?x49685) ?x49688)))
 (let ((?x52699 (- (- (- (- (- (- (- ?x52692 ?x49919) ?x49922) ?x49925) ?x49928) ?x49691) ?x49694) ?x49697)))
 (= (+ (+ (+ (+ ?x52699 ?x49931) ?x49934) ?x49937) ?x49940) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51958 (* ?x49927 l_0_17_75)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51956 (* ?x49924 l_0_17_74)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51954 (* ?x49921 l_0_17_73)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51952 (* ?x49918 l_0_17_72)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51852 (* ?x49687 l_0_17_74)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51850 (* ?x49684 l_0_17_73)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51848 (* ?x49681 l_0_17_72)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49891 (* ?x49849 l_0_17_159)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49887 (* ?x49846 l_0_17_158)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49883 (* ?x49843 l_0_17_157)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49879 (* ?x49840 l_0_17_156)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51950 (* ?x39678 l_0_17_94)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51948 (* ?x39667 l_0_17_93)))
 (let ((?x51846 (* ?x39667 l_0_17_90)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51946 (* ?x39657 l_0_17_92)))
 (let ((?x51844 (* ?x39657 l_0_17_89)))
 (let ((?x29970 (* 2.0 l_0_17_100)))
 (let ((?x51939 (* ?x29970 l_0_17_91)))
 (let ((?x52724 (- (+ (- (+ (* (* (- 2.0) l_0_17_100) l_0_17_88) ?x51939) ?x51844) ?x51946) ?x51846)))
 (let ((?x52731 (- (- (+ (+ ?x52724 ?x51948) ?x51950) (* (* 2.0 l_0_17_119) l_0_17_128)) (* (* 2.0 l_0_17_120) l_0_17_129))))
 (let ((?x52735 (- (- ?x52731 (* (* 2.0 l_0_17_121) l_0_17_130)) (* (* 2.0 l_0_17_122) l_0_17_131))))
 (let ((?x52741 (- (- (- (- (- ?x52735 ?x49879) ?x49883) ?x49887) ?x49891) (* (* 2.0 l_0_17_175) l_0_17_184))))
 (let ((?x52745 (- (- ?x52741 (* (* 2.0 l_0_17_176) l_0_17_185)) (* (* 2.0 l_0_17_177) l_0_17_186))))
 (let ((?x52750 (+ (+ (+ (- ?x52745 (* (* 2.0 l_0_17_178) l_0_17_187)) ?x51848) ?x51850) ?x51852)))
 (= (- (- (- (- ?x52750 ?x51952) ?x51954) ?x51956) ?x51958) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51990 (* ?x49927 l_0_17_81)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51988 (* ?x49924 l_0_17_80)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51986 (* ?x49921 l_0_17_79)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51984 (* ?x49918 l_0_17_78)))
 (let ((?x49687 (* 2.0 l_0_17_62)))
 (let ((?x51888 (* ?x49687 l_0_17_80)))
 (let ((?x49684 (* 2.0 l_0_17_61)))
 (let ((?x51886 (* ?x49684 l_0_17_79)))
 (let ((?x49681 (* 2.0 l_0_17_60)))
 (let ((?x51884 (* ?x49681 l_0_17_78)))
 (let ((?x49849 (* 2.0 l_0_17_150)))
 (let ((?x49965 (* ?x49849 l_0_17_165)))
 (let ((?x49846 (* 2.0 l_0_17_149)))
 (let ((?x49963 (* ?x49846 l_0_17_164)))
 (let ((?x49843 (* 2.0 l_0_17_148)))
 (let ((?x49961 (* ?x49843 l_0_17_163)))
 (let ((?x49840 (* 2.0 l_0_17_147)))
 (let ((?x49959 (* ?x49840 l_0_17_162)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x51982 (* ?x49179 l_0_17_94)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x51980 (* ?x49176 l_0_17_93)))
 (let ((?x51882 (* ?x49176 l_0_17_90)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x31630 (* ?x49173 l_0_17_92)))
 (let ((?x51880 (* ?x49173 l_0_17_89)))
 (let ((?x49170 (* 2.0 l_0_17_106)))
 (let ((?x31716 (* ?x49170 l_0_17_91)))
 (let ((?x22478 (- (+ (- (+ (* (* (- 2.0) l_0_17_106) l_0_17_88) ?x31716) ?x51880) ?x31630) ?x51882)))
 (let ((?x7003 (- (- (+ (+ ?x22478 ?x51980) ?x51982) (* (* 2.0 l_0_17_119) l_0_17_134)) (* (* 2.0 l_0_17_120) l_0_17_135))))
 (let ((?x52772 (- (- ?x7003 (* (* 2.0 l_0_17_121) l_0_17_136)) (* (* 2.0 l_0_17_122) l_0_17_137))))
 (let ((?x52778 (- (- (- (- (- ?x52772 ?x49959) ?x49961) ?x49963) ?x49965) (* (* 2.0 l_0_17_175) l_0_17_190))))
 (let ((?x52782 (- (- ?x52778 (* (* 2.0 l_0_17_176) l_0_17_191)) (* (* 2.0 l_0_17_177) l_0_17_192))))
 (let ((?x52787 (+ (+ (+ (- ?x52782 (* (* 2.0 l_0_17_178) l_0_17_193)) ?x51884) ?x51886) ?x51888)))
 (= (- (- (- (- ?x52787 ?x51984) ?x51986) ?x51988) ?x51990) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50120 (* l_0_17_99 l_0_17_99)))
 (let ((?x50118 (* l_0_17_98 l_0_17_98)))
 (let ((?x50116 (* l_0_17_97 l_0_17_97)))
 (let ((?x50114 (* l_0_17_96 l_0_17_96)))
 (let ((?x50112 (* l_0_17_95 l_0_17_95)))
 (let ((?x50110 (* l_0_17_71 l_0_17_71)))
 (let ((?x50108 (* l_0_17_70 l_0_17_70)))
 (let ((?x50106 (* l_0_17_69 l_0_17_69)))
 (let ((?x50104 (* l_0_17_68 l_0_17_68)))
 (let ((?x50102 (* l_0_17_67 l_0_17_67)))
 (let ((?x51263 (* l_0_17_183 l_0_17_183)))
 (let ((?x51260 (* l_0_17_182 l_0_17_182)))
 (let ((?x30838 (* l_0_17_181 l_0_17_181)))
 (let ((?x30839 (* l_0_17_180 l_0_17_180)))
 (let ((?x41675 (* l_0_17_179 l_0_17_179)))
 (let ((?x50036 (* l_0_17_155 l_0_17_155)))
 (let ((?x50034 (* l_0_17_154 l_0_17_154)))
 (let ((?x50032 (* l_0_17_153 l_0_17_153)))
 (let ((?x50030 (* l_0_17_152 l_0_17_152)))
 (let ((?x50028 (* l_0_17_151 l_0_17_151)))
 (let ((?x52827 (* l_0_17_127 l_0_17_127)))
 (let ((?x52825 (* l_0_17_126 l_0_17_126)))
 (let ((?x52823 (* l_0_17_125 l_0_17_125)))
 (let ((?x52824 (- (- (* (- l_0_17_123) l_0_17_123) (* l_0_17_124 l_0_17_124)) ?x52823)))
 (let ((?x52833 (- (- (- (- (- (- (- ?x52824 ?x52825) ?x52827) ?x50028) ?x50030) ?x50032) ?x50034) ?x50036)))
 (let ((?x52840 (- (- (- (- (- (- (- ?x52833 ?x41675) ?x30839) ?x30838) ?x51260) ?x51263) ?x50102) ?x50104)))
 (let ((?x52847 (+ (+ (+ (+ (- (- (- ?x52840 ?x50106) ?x50108) ?x50110) ?x50112) ?x50114) ?x50116) ?x50118)))
 (= (+ ?x52847 ?x50120) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x50233 (* ?x49246 l_0_17_76)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x50231 (* ?x49243 l_0_17_75)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x50229 (* ?x49240 l_0_17_74)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x50227 (* ?x49237 l_0_17_73)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x50225 (* ?x49234 l_0_17_72)))
 (let ((?x49214 (* 2.0 l_0_17_155)))
 (let ((?x50090 (* ?x49214 l_0_17_160)))
 (let ((?x49211 (* 2.0 l_0_17_154)))
 (let ((?x50088 (* ?x49211 l_0_17_159)))
 (let ((?x49208 (* 2.0 l_0_17_153)))
 (let ((?x50086 (* ?x49208 l_0_17_158)))
 (let ((?x49205 (* 2.0 l_0_17_152)))
 (let ((?x50084 (* ?x49205 l_0_17_157)))
 (let ((?x49202 (* 2.0 l_0_17_151)))
 (let ((?x50082 (* ?x49202 l_0_17_156)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x39655 (* ?x29967 l_0_17_99)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x18813 (* ?x39678 l_0_17_98)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x39668 (* ?x39667 l_0_17_97)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x39661 (* ?x39657 l_0_17_96)))
 (let ((?x29608 (+ (+ (+ (+ (* (* 2.0 l_0_17_100) l_0_17_95) ?x39661) ?x39668) ?x18813) ?x39655)))
 (let ((?x43071 (- (- ?x29608 (* (* 2.0 l_0_17_123) l_0_17_128)) (* (* 2.0 l_0_17_124) l_0_17_129))))
 (let ((?x22634 (- (- ?x43071 (* (* 2.0 l_0_17_125) l_0_17_130)) (* (* 2.0 l_0_17_126) l_0_17_131))))
 (let ((?x33704 (- (- (- (- ?x22634 (* (* 2.0 l_0_17_127) l_0_17_132)) ?x50082) ?x50084) ?x50086)))
 (let ((?x52863 (- (- (- (- ?x33704 ?x50088) ?x50090) (* (* 2.0 l_0_17_179) l_0_17_184)) (* (* 2.0 l_0_17_180) l_0_17_185))))
 (let ((?x52867 (- (- ?x52863 (* (* 2.0 l_0_17_181) l_0_17_186)) (* (* 2.0 l_0_17_182) l_0_17_187))))
 (let ((?x52872 (- (- (- (- ?x52867 (* (* 2.0 l_0_17_183) l_0_17_188)) ?x50225) ?x50227) ?x50229)))
 (= (- (- ?x52872 ?x50231) ?x50233) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52044 (* l_0_17_77 l_0_17_77)))
 (let ((?x52042 (* l_0_17_76 l_0_17_76)))
 (let ((?x52040 (* l_0_17_75 l_0_17_75)))
 (let ((?x52038 (* l_0_17_74 l_0_17_74)))
 (let ((?x52036 (* l_0_17_73 l_0_17_73)))
 (let ((?x52034 (* l_0_17_72 l_0_17_72)))
 (let ((?x51301 (* l_0_17_189 l_0_17_189)))
 (let ((?x51298 (* l_0_17_188 l_0_17_188)))
 (let ((?x51295 (* l_0_17_187 l_0_17_187)))
 (let ((?x41719 (* l_0_17_186 l_0_17_186)))
 (let ((?x41711 (* l_0_17_185 l_0_17_185)))
 (let ((?x30859 (* l_0_17_184 l_0_17_184)))
 (let ((?x50201 (* l_0_17_161 l_0_17_161)))
 (let ((?x50199 (* l_0_17_160 l_0_17_160)))
 (let ((?x50195 (* l_0_17_159 l_0_17_159)))
 (let ((?x39682 (* l_0_17_158 l_0_17_158)))
 (let ((?x39689 (* l_0_17_157 l_0_17_157)))
 (let ((?x18899 (* l_0_17_156 l_0_17_156)))
 (let ((?x52898 (* l_0_17_133 l_0_17_133)))
 (let ((?x52896 (* l_0_17_132 l_0_17_132)))
 (let ((?x52894 (* l_0_17_131 l_0_17_131)))
 (let ((?x22935 (* l_0_17_130 l_0_17_130)))
 (let ((?x43090 (* l_0_17_129 l_0_17_129)))
 (let ((?x43096 (* l_0_17_128 l_0_17_128)))
 (let ((?x52032 (* l_0_17_105 l_0_17_105)))
 (let ((?x52030 (* l_0_17_104 l_0_17_104)))
 (let ((?x52028 (* l_0_17_103 l_0_17_103)))
 (let ((?x52026 (* l_0_17_102 l_0_17_102)))
 (let ((?x52027 (+ (+ (* l_0_17_100 l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x52026)))
 (let ((?x52033 (+ (+ (+ ?x52027 ?x52028) ?x52030) ?x52032)))
 (let ((?x52900 (- (- (- (- (- (- (- ?x52033 ?x43096) ?x43090) ?x22935) ?x52894) ?x52896) ?x52898) ?x18899)))
 (let ((?x52907 (- (- (- (- (- (- (- ?x52900 ?x39689) ?x39682) ?x50195) ?x50199) ?x50201) ?x30859) ?x41711)))
 (let ((?x52914 (- (- (- (- (- (- (- ?x52907 ?x41719) ?x51295) ?x51298) ?x51301) ?x52034) ?x52036) ?x52038)))
 (= (- (- (- ?x52914 ?x52040) ?x52042) ?x52044) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x52099 (* l_0_17_84 l_0_17_84)))
 (let ((?x52097 (* l_0_17_83 l_0_17_83)))
 (let ((?x52095 (* l_0_17_82 l_0_17_82)))
 (let ((?x52093 (* l_0_17_81 l_0_17_81)))
 (let ((?x52091 (* l_0_17_80 l_0_17_80)))
 (let ((?x52089 (* l_0_17_79 l_0_17_79)))
 (let ((?x52087 (* l_0_17_78 l_0_17_78)))
 (let ((?x51354 (* l_0_17_196 l_0_17_196)))
 (let ((?x51351 (* l_0_17_195 l_0_17_195)))
 (let ((?x51348 (* l_0_17_194 l_0_17_194)))
 (let ((?x51345 (* l_0_17_193 l_0_17_193)))
 (let ((?x30997 (* l_0_17_192 l_0_17_192)))
 (let ((?x31026 (* l_0_17_191 l_0_17_191)))
 (let ((?x4033 (* l_0_17_190 l_0_17_190)))
 (let ((?x50419 (* l_0_17_168 l_0_17_168)))
 (let ((?x50417 (* l_0_17_167 l_0_17_167)))
 (let ((?x50415 (* l_0_17_166 l_0_17_166)))
 (let ((?x50413 (* l_0_17_165 l_0_17_165)))
 (let ((?x50411 (* l_0_17_164 l_0_17_164)))
 (let ((?x50409 (* l_0_17_163 l_0_17_163)))
 (let ((?x50408 (* l_0_17_162 l_0_17_162)))
 (let ((?x52926 (* l_0_17_140 l_0_17_140)))
 (let ((?x33822 (* l_0_17_139 l_0_17_139)))
 (let ((?x7583 (* l_0_17_138 l_0_17_138)))
 (let ((?x33913 (* l_0_17_137 l_0_17_137)))
 (let ((?x22963 (* l_0_17_136 l_0_17_136)))
 (let ((?x43128 (* l_0_17_135 l_0_17_135)))
 (let ((?x7424 (* l_0_17_134 l_0_17_134)))
 (let ((?x52085 (* l_0_17_112 l_0_17_112)))
 (let ((?x52083 (* l_0_17_111 l_0_17_111)))
 (let ((?x52081 (* l_0_17_110 l_0_17_110)))
 (let ((?x52079 (* l_0_17_109 l_0_17_109)))
 (let ((?x52077 (* l_0_17_108 l_0_17_108)))
 (let ((?x52078 (+ (+ (* l_0_17_106 l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52077)))
 (let ((?x52086 (+ (+ (+ (+ ?x52078 ?x52079) ?x52081) ?x52083) ?x52085)))
 (let ((?x52927 (- (- (- (- (- (- (- ?x52086 ?x7424) ?x43128) ?x22963) ?x33913) ?x7583) ?x33822) ?x52926)))
 (let ((?x52934 (- (- (- (- (- (- (- ?x52927 ?x50408) ?x50409) ?x50411) ?x50413) ?x50415) ?x50417) ?x50419)))
 (let ((?x52941 (- (- (- (- (- (- (- ?x52934 ?x4033) ?x31026) ?x30997) ?x51345) ?x51348) ?x51351) ?x51354)))
 (let ((?x52948 (- (- (- (- (- (- (- ?x52941 ?x52087) ?x52089) ?x52091) ?x52093) ?x52095) ?x52097) ?x52099)))
 (= ?x52948 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x48868 (* l_0_17_85 l_0_17_85)))
 (let ((?x48866 (* l_0_17_57 l_0_17_57)))
 (let ((?x43216 (- (* (* (- 2.0) l_0_17_197) l_0_17_203) (* (* 2.0 l_0_17_225) l_0_17_231))))
 (let ((?x7928 (- (- ?x43216 (* (* 2.0 l_0_17_253) l_0_17_259)) (* (* 2.0 l_0_17_281) l_0_17_287))))
 (= (- (+ (- ?x7928 (* (* 2.0 l_0_17_309) l_0_17_315)) ?x48866) ?x48868) 0.0))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x51729 (* ?x49358 l_0_17_91)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51721 (* ?x49355 l_0_17_63)))
 (let ((?x53001 (* l_0_17_318 l_0_17_318)))
 (let ((?x52999 (* l_0_17_317 l_0_17_317)))
 (let ((?x52997 (* l_0_17_316 l_0_17_316)))
 (let ((?x52995 (* l_0_17_315 l_0_17_315)))
 (let ((?x52993 (* l_0_17_290 l_0_17_290)))
 (let ((?x52991 (* l_0_17_289 l_0_17_289)))
 (let ((?x52989 (* l_0_17_288 l_0_17_288)))
 (let ((?x52987 (* l_0_17_287 l_0_17_287)))
 (let ((?x52985 (* l_0_17_262 l_0_17_262)))
 (let ((?x52983 (* l_0_17_261 l_0_17_261)))
 (let ((?x52981 (* l_0_17_260 l_0_17_260)))
 (let ((?x52979 (* l_0_17_259 l_0_17_259)))
 (let ((?x52977 (* l_0_17_234 l_0_17_234)))
 (let ((?x52975 (* l_0_17_233 l_0_17_233)))
 (let ((?x52973 (* l_0_17_232 l_0_17_232)))
 (let ((?x52971 (* l_0_17_231 l_0_17_231)))
 (let ((?x52969 (* l_0_17_206 l_0_17_206)))
 (let ((?x52967 (* l_0_17_205 l_0_17_205)))
 (let ((?x52968 (- (- (* (- l_0_17_203) l_0_17_203) (* l_0_17_204 l_0_17_204)) ?x52967)))
 (let ((?x52982 (- (- (- (- (- (- (- ?x52968 ?x52969) ?x52971) ?x52973) ?x52975) ?x52977) ?x52979) ?x52981)))
 (let ((?x52996 (- (- (- (- (- (- (- ?x52982 ?x52983) ?x52985) ?x52987) ?x52989) ?x52991) ?x52993) ?x52995)))
 (= (- (+ (- (- (- ?x52996 ?x52997) ?x52999) ?x53001) ?x51721) ?x51729) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x49358 (* 2.0 l_0_17_85)))
 (let ((?x49359 (* ?x49358 l_0_17_95)))
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x49356 (* ?x49355 l_0_17_67)))
 (let ((?x53026 (- (* (* (- 2.0) l_0_17_203) l_0_17_207) (* (* 2.0 l_0_17_204) l_0_17_208))))
 (let ((?x53032 (- (- ?x53026 (* (* 2.0 l_0_17_205) l_0_17_209)) (* (* 2.0 l_0_17_206) l_0_17_210))))
 (let ((?x53038 (- (- ?x53032 (* (* 2.0 l_0_17_231) l_0_17_235)) (* (* 2.0 l_0_17_232) l_0_17_236))))
 (let ((?x53044 (- (- ?x53038 (* (* 2.0 l_0_17_233) l_0_17_237)) (* (* 2.0 l_0_17_234) l_0_17_238))))
 (let ((?x53050 (- (- ?x53044 (* (* 2.0 l_0_17_259) l_0_17_263)) (* (* 2.0 l_0_17_260) l_0_17_264))))
 (let ((?x53056 (- (- ?x53050 (* (* 2.0 l_0_17_261) l_0_17_265)) (* (* 2.0 l_0_17_262) l_0_17_266))))
 (let ((?x53062 (- (- ?x53056 (* (* 2.0 l_0_17_287) l_0_17_291)) (* (* 2.0 l_0_17_288) l_0_17_292))))
 (let ((?x53068 (- (- ?x53062 (* (* 2.0 l_0_17_289) l_0_17_293)) (* (* 2.0 l_0_17_290) l_0_17_294))))
 (let ((?x53074 (- (- ?x53068 (* (* 2.0 l_0_17_315) l_0_17_319)) (* (* 2.0 l_0_17_316) l_0_17_320))))
 (let ((?x53080 (- (- ?x53074 (* (* 2.0 l_0_17_317) l_0_17_321)) (* (* 2.0 l_0_17_318) l_0_17_322))))
 (= (- (+ ?x53080 ?x49356) ?x49359) 0.0))))))))))))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x41010 (* ?x49355 l_0_17_72)))
 (let ((?x53137 (- (* (* (- 2.0) l_0_17_100) l_0_17_85) (* (* 2.0 l_0_17_203) l_0_17_212))))
 (let ((?x53141 (- (- ?x53137 (* (* 2.0 l_0_17_204) l_0_17_213)) (* (* 2.0 l_0_17_205) l_0_17_214))))
 (let ((?x53145 (- (- ?x53141 (* (* 2.0 l_0_17_206) l_0_17_215)) (* (* 2.0 l_0_17_231) l_0_17_240))))
 (let ((?x53149 (- (- ?x53145 (* (* 2.0 l_0_17_232) l_0_17_241)) (* (* 2.0 l_0_17_233) l_0_17_242))))
 (let ((?x53153 (- (- ?x53149 (* (* 2.0 l_0_17_234) l_0_17_243)) (* (* 2.0 l_0_17_259) l_0_17_268))))
 (let ((?x53157 (- (- ?x53153 (* (* 2.0 l_0_17_260) l_0_17_269)) (* (* 2.0 l_0_17_261) l_0_17_270))))
 (let ((?x53161 (- (- ?x53157 (* (* 2.0 l_0_17_262) l_0_17_271)) (* (* 2.0 l_0_17_287) l_0_17_296))))
 (let ((?x53165 (- (- ?x53161 (* (* 2.0 l_0_17_288) l_0_17_297)) (* (* 2.0 l_0_17_289) l_0_17_298))))
 (let ((?x53169 (- (- ?x53165 (* (* 2.0 l_0_17_290) l_0_17_299)) (* (* 2.0 l_0_17_315) l_0_17_324))))
 (let ((?x53173 (- (- ?x53169 (* (* 2.0 l_0_17_316) l_0_17_325)) (* (* 2.0 l_0_17_317) l_0_17_326))))
 (= (+ (- ?x53173 (* (* 2.0 l_0_17_318) l_0_17_327)) ?x41010) 0.0))))))))))))))
(assert
 (let ((?x49355 (* 2.0 l_0_17_57)))
 (let ((?x51743 (* ?x49355 l_0_17_78)))
 (let ((?x53230 (- (* (* (- 2.0) l_0_17_106) l_0_17_85) (* (* 2.0 l_0_17_203) l_0_17_218))))
 (let ((?x53234 (- (- ?x53230 (* (* 2.0 l_0_17_204) l_0_17_219)) (* (* 2.0 l_0_17_205) l_0_17_220))))
 (let ((?x53238 (- (- ?x53234 (* (* 2.0 l_0_17_206) l_0_17_221)) (* (* 2.0 l_0_17_231) l_0_17_246))))
 (let ((?x53242 (- (- ?x53238 (* (* 2.0 l_0_17_232) l_0_17_247)) (* (* 2.0 l_0_17_233) l_0_17_248))))
 (let ((?x53246 (- (- ?x53242 (* (* 2.0 l_0_17_234) l_0_17_249)) (* (* 2.0 l_0_17_259) l_0_17_274))))
 (let ((?x53250 (- (- ?x53246 (* (* 2.0 l_0_17_260) l_0_17_275)) (* (* 2.0 l_0_17_261) l_0_17_276))))
 (let ((?x53254 (- (- ?x53250 (* (* 2.0 l_0_17_262) l_0_17_277)) (* (* 2.0 l_0_17_287) l_0_17_302))))
 (let ((?x53258 (- (- ?x53254 (* (* 2.0 l_0_17_288) l_0_17_303)) (* (* 2.0 l_0_17_289) l_0_17_304))))
 (let ((?x53262 (- (- ?x53258 (* (* 2.0 l_0_17_290) l_0_17_305)) (* (* 2.0 l_0_17_315) l_0_17_330))))
 (let ((?x53266 (- (- ?x53262 (* (* 2.0 l_0_17_316) l_0_17_331)) (* (* 2.0 l_0_17_317) l_0_17_332))))
 (= (+ (- ?x53266 (* (* 2.0 l_0_17_318) l_0_17_333)) ?x51743) 0.0))))))))))))))
(assert
 (let ((?x51926 (* l_0_17_94 l_0_17_94)))
 (let ((?x51924 (* l_0_17_93 l_0_17_93)))
 (let ((?x51922 (* l_0_17_92 l_0_17_92)))
 (let ((?x51920 (* l_0_17_91 l_0_17_91)))
 (let ((?x51918 (* l_0_17_66 l_0_17_66)))
 (let ((?x51916 (* l_0_17_65 l_0_17_65)))
 (let ((?x43661 (+ (+ (+ (* l_0_17_63 l_0_17_63) (* l_0_17_64 l_0_17_64)) ?x51916) ?x51918)))
 (= (- (- (- (- ?x43661 ?x51920) ?x51922) ?x51924) ?x51926) 0.0)))))))))
(assert
 (let ((?x49940 (* (* 2.0 l_0_17_94) l_0_17_98)))
 (let ((?x49937 (* (* 2.0 l_0_17_93) l_0_17_97)))
 (let ((?x49934 (* (* 2.0 l_0_17_92) l_0_17_96)))
 (let ((?x49931 (* (* 2.0 l_0_17_91) l_0_17_95)))
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x49928 (* ?x49927 l_0_17_70)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x49925 (* ?x49924 l_0_17_69)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x49922 (* ?x49921 l_0_17_68)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x49919 (* ?x49918 l_0_17_67)))
 (let ((?x53332 (- (- (- (- (+ (+ (+ ?x49919 ?x49922) ?x49925) ?x49928) ?x49931) ?x49934) ?x49937) ?x49940)))
 (= ?x53332 0.0)))))))))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51958 (* ?x49927 l_0_17_75)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51956 (* ?x49924 l_0_17_74)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51954 (* ?x49921 l_0_17_73)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51952 (* ?x49918 l_0_17_72)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x51950 (* ?x39678 l_0_17_94)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x51948 (* ?x39667 l_0_17_93)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x51946 (* ?x39657 l_0_17_92)))
 (let ((?x53349 (+ (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_91) ?x51946) ?x51948) ?x51950) ?x51952)))
 (= (+ (+ (+ ?x53349 ?x51954) ?x51956) ?x51958) 0.0)))))))))))))))))
(assert
 (let ((?x49927 (* 2.0 l_0_17_66)))
 (let ((?x51990 (* ?x49927 l_0_17_81)))
 (let ((?x49924 (* 2.0 l_0_17_65)))
 (let ((?x51988 (* ?x49924 l_0_17_80)))
 (let ((?x49921 (* 2.0 l_0_17_64)))
 (let ((?x51986 (* ?x49921 l_0_17_79)))
 (let ((?x49918 (* 2.0 l_0_17_63)))
 (let ((?x51984 (* ?x49918 l_0_17_78)))
 (let ((?x49179 (* 2.0 l_0_17_109)))
 (let ((?x51982 (* ?x49179 l_0_17_94)))
 (let ((?x49176 (* 2.0 l_0_17_108)))
 (let ((?x51980 (* ?x49176 l_0_17_93)))
 (let ((?x49173 (* 2.0 l_0_17_107)))
 (let ((?x31630 (* ?x49173 l_0_17_92)))
 (let ((?x53361 (+ (- (- (- (* (* (- 2.0) l_0_17_106) l_0_17_91) ?x31630) ?x51980) ?x51982) ?x51984)))
 (= (+ (+ (+ ?x53361 ?x51986) ?x51988) ?x51990) 0.0)))))))))))))))))
(assert
 (let ((?x50120 (* l_0_17_99 l_0_17_99)))
 (let ((?x50118 (* l_0_17_98 l_0_17_98)))
 (let ((?x50116 (* l_0_17_97 l_0_17_97)))
 (let ((?x50114 (* l_0_17_96 l_0_17_96)))
 (let ((?x50112 (* l_0_17_95 l_0_17_95)))
 (let ((?x50110 (* l_0_17_71 l_0_17_71)))
 (let ((?x50108 (* l_0_17_70 l_0_17_70)))
 (let ((?x50106 (* l_0_17_69 l_0_17_69)))
 (let ((?x53374 (+ (+ (+ (* l_0_17_67 l_0_17_67) (* l_0_17_68 l_0_17_68)) ?x50106) ?x50108)))
 (= (- (- (- (- (- (+ ?x53374 ?x50110) ?x50112) ?x50114) ?x50116) ?x50118) ?x50120) 0.0)))))))))))
(assert
 (let ((?x49246 (* 2.0 l_0_17_71)))
 (let ((?x50233 (* ?x49246 l_0_17_76)))
 (let ((?x49243 (* 2.0 l_0_17_70)))
 (let ((?x50231 (* ?x49243 l_0_17_75)))
 (let ((?x49240 (* 2.0 l_0_17_69)))
 (let ((?x50229 (* ?x49240 l_0_17_74)))
 (let ((?x49237 (* 2.0 l_0_17_68)))
 (let ((?x50227 (* ?x49237 l_0_17_73)))
 (let ((?x49234 (* 2.0 l_0_17_67)))
 (let ((?x50225 (* ?x49234 l_0_17_72)))
 (let ((?x29967 (* 2.0 l_0_17_104)))
 (let ((?x39655 (* ?x29967 l_0_17_99)))
 (let ((?x39678 (* 2.0 l_0_17_103)))
 (let ((?x18813 (* ?x39678 l_0_17_98)))
 (let ((?x39667 (* 2.0 l_0_17_102)))
 (let ((?x39668 (* ?x39667 l_0_17_97)))
 (let ((?x39657 (* 2.0 l_0_17_101)))
 (let ((?x39661 (* ?x39657 l_0_17_96)))
 (let ((?x53398 (- (- (- (- (* (* (- 2.0) l_0_17_100) l_0_17_95) ?x39661) ?x39668) ?x18813) ?x39655)))
 (= (+ (+ (+ (+ (+ ?x53398 ?x50225) ?x50227) ?x50229) ?x50231) ?x50233) 0.0)))))))))))))))))))))
(assert
 (let ((?x52044 (* l_0_17_77 l_0_17_77)))
 (let ((?x52042 (* l_0_17_76 l_0_17_76)))
 (let ((?x52040 (* l_0_17_75 l_0_17_75)))
 (let ((?x52038 (* l_0_17_74 l_0_17_74)))
 (let ((?x52036 (* l_0_17_73 l_0_17_73)))
 (let ((?x52034 (* l_0_17_72 l_0_17_72)))
 (let ((?x52032 (* l_0_17_105 l_0_17_105)))
 (let ((?x52030 (* l_0_17_104 l_0_17_104)))
 (let ((?x52028 (* l_0_17_103 l_0_17_103)))
 (let ((?x52026 (* l_0_17_102 l_0_17_102)))
 (let ((?x53410 (- (- (* (- l_0_17_100) l_0_17_100) (* l_0_17_101 l_0_17_101)) ?x52026)))
 (let ((?x53417 (+ (+ (+ (+ (- (- (- ?x53410 ?x52028) ?x52030) ?x52032) ?x52034) ?x52036) ?x52038) ?x52040)))
 (= (+ (+ ?x53417 ?x52042) ?x52044) 0.0))))))))))))))
(assert
 (let ((?x52099 (* l_0_17_84 l_0_17_84)))
 (let ((?x52097 (* l_0_17_83 l_0_17_83)))
 (let ((?x52095 (* l_0_17_82 l_0_17_82)))
 (let ((?x52093 (* l_0_17_81 l_0_17_81)))
 (let ((?x52091 (* l_0_17_80 l_0_17_80)))
 (let ((?x52089 (* l_0_17_79 l_0_17_79)))
 (let ((?x52087 (* l_0_17_78 l_0_17_78)))
 (let ((?x52085 (* l_0_17_112 l_0_17_112)))
 (let ((?x52083 (* l_0_17_111 l_0_17_111)))
 (let ((?x52081 (* l_0_17_110 l_0_17_110)))
 (let ((?x52079 (* l_0_17_109 l_0_17_109)))
 (let ((?x52077 (* l_0_17_108 l_0_17_108)))
 (let ((?x53431 (- (- (* (- l_0_17_106) l_0_17_106) (* l_0_17_107 l_0_17_107)) ?x52077)))
 (let ((?x53438 (+ (+ (+ (- (- (- (- ?x53431 ?x52079) ?x52081) ?x52083) ?x52085) ?x52087) ?x52089) ?x52091)))
 (= (+ (+ (+ (+ ?x53438 ?x52093) ?x52095) ?x52097) ?x52099) 0.0))))))))))))))))
(assert
 (let ((?x8603 (- (* (* (- 2.0) l_0_17_197) l_0_17_207) (* (* 2.0 l_0_17_225) l_0_17_235))))
 (let ((?x53459 (- (- ?x8603 (* (* 2.0 l_0_17_253) l_0_17_263)) (* (* 2.0 l_0_17_281) l_0_17_291))))
 (= (- ?x53459 (* (* 2.0 l_0_17_309) l_0_17_319)) 0.0))))
(assert
 (let ((?x53491 (- (* (* (- 2.0) l_0_17_197) l_0_17_212) (* (* 2.0 l_0_17_225) l_0_17_240))))
 (let ((?x53495 (- (- ?x53491 (* (* 2.0 l_0_17_253) l_0_17_268)) (* (* 2.0 l_0_17_281) l_0_17_296))))
 (= (- ?x53495 (* (* 2.0 l_0_17_309) l_0_17_324)) 0.0))))
(assert
 (let ((?x8796 (- (* (* (- 2.0) l_0_17_197) l_0_17_218) (* (* 2.0 l_0_17_225) l_0_17_246))))
 (let ((?x8889 (- (- ?x8796 (* (* 2.0 l_0_17_253) l_0_17_274)) (* (* 2.0 l_0_17_281) l_0_17_302))))
 (= (- ?x8889 (* (* 2.0 l_0_17_309) l_0_17_330)) 0.0))))
(assert
 (let ((?x53568 (* l_0_17_323 l_0_17_323)))
 (let ((?x53566 (* l_0_17_322 l_0_17_322)))
 (let ((?x53564 (* l_0_17_321 l_0_17_321)))
 (let ((?x53562 (* l_0_17_320 l_0_17_320)))
 (let ((?x53560 (* l_0_17_319 l_0_17_319)))
 (let ((?x53558 (* l_0_17_295 l_0_17_295)))
 (let ((?x53556 (* l_0_17_294 l_0_17_294)))
 (let ((?x53554 (* l_0_17_293 l_0_17_293)))
 (let ((?x53552 (* l_0_17_292 l_0_17_292)))
 (let ((?x53550 (* l_0_17_291 l_0_17_291)))
 (let ((?x53548 (* l_0_17_267 l_0_17_267)))
 (let ((?x53546 (* l_0_17_266 l_0_17_266)))
 (let ((?x53544 (* l_0_17_265 l_0_17_265)))
 (let ((?x53542 (* l_0_17_264 l_0_17_264)))
 (let ((?x53540 (* l_0_17_263 l_0_17_263)))
 (let ((?x53538 (* l_0_17_239 l_0_17_239)))
 (let ((?x53536 (* l_0_17_238 l_0_17_238)))
 (let ((?x53534 (* l_0_17_237 l_0_17_237)))
 (let ((?x53532 (* l_0_17_236 l_0_17_236)))
 (let ((?x53530 (* l_0_17_235 l_0_17_235)))
 (let ((?x53528 (* l_0_17_211 l_0_17_211)))
 (let ((?x53526 (* l_0_17_210 l_0_17_210)))
 (let ((?x53524 (* l_0_17_209 l_0_17_209)))
 (let ((?x53525 (- (- (* (- l_0_17_207) l_0_17_207) (* l_0_17_208 l_0_17_208)) ?x53524)))
 (let ((?x53539 (- (- (- (- (- (- (- ?x53525 ?x53526) ?x53528) ?x53530) ?x53532) ?x53534) ?x53536) ?x53538)))
 (let ((?x53553 (- (- (- (- (- (- (- ?x53539 ?x53540) ?x53542) ?x53544) ?x53546) ?x53548) ?x53550) ?x53552)))
 (let ((?x53567 (- (- (- (- (- (- (- ?x53553 ?x53554) ?x53556) ?x53558) ?x53560) ?x53562) ?x53564) ?x53566)))
 (= (- ?x53567 ?x53568) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x43831 (- (* (* (- 2.0) l_0_17_207) l_0_17_212) (* (* 2.0 l_0_17_208) l_0_17_213))))
 (let ((?x43837 (- (- ?x43831 (* (* 2.0 l_0_17_209) l_0_17_214)) (* (* 2.0 l_0_17_210) l_0_17_215))))
 (let ((?x43843 (- (- ?x43837 (* (* 2.0 l_0_17_211) l_0_17_216)) (* (* 2.0 l_0_17_235) l_0_17_240))))
 (let ((?x43815 (- (- ?x43843 (* (* 2.0 l_0_17_236) l_0_17_241)) (* (* 2.0 l_0_17_237) l_0_17_242))))
 (let ((?x53580 (- (- ?x43815 (* (* 2.0 l_0_17_238) l_0_17_243)) (* (* 2.0 l_0_17_239) l_0_17_244))))
 (let ((?x53584 (- (- ?x53580 (* (* 2.0 l_0_17_263) l_0_17_268)) (* (* 2.0 l_0_17_264) l_0_17_269))))
 (let ((?x53588 (- (- ?x53584 (* (* 2.0 l_0_17_265) l_0_17_270)) (* (* 2.0 l_0_17_266) l_0_17_271))))
 (let ((?x53592 (- (- ?x53588 (* (* 2.0 l_0_17_267) l_0_17_272)) (* (* 2.0 l_0_17_291) l_0_17_296))))
 (let ((?x53596 (- (- ?x53592 (* (* 2.0 l_0_17_292) l_0_17_297)) (* (* 2.0 l_0_17_293) l_0_17_298))))
 (let ((?x53600 (- (- ?x53596 (* (* 2.0 l_0_17_294) l_0_17_299)) (* (* 2.0 l_0_17_295) l_0_17_300))))
 (let ((?x53604 (- (- ?x53600 (* (* 2.0 l_0_17_319) l_0_17_324)) (* (* 2.0 l_0_17_320) l_0_17_325))))
 (let ((?x53608 (- (- ?x53604 (* (* 2.0 l_0_17_321) l_0_17_326)) (* (* 2.0 l_0_17_322) l_0_17_327))))
 (= (- ?x53608 (* (* 2.0 l_0_17_323) l_0_17_328)) 0.0))))))))))))))
(assert
 (let ((?x53695 (* l_0_17_329 l_0_17_329)))
 (let ((?x53693 (* l_0_17_328 l_0_17_328)))
 (let ((?x53691 (* l_0_17_327 l_0_17_327)))
 (let ((?x53689 (* l_0_17_326 l_0_17_326)))
 (let ((?x53687 (* l_0_17_325 l_0_17_325)))
 (let ((?x53685 (* l_0_17_324 l_0_17_324)))
 (let ((?x53683 (* l_0_17_301 l_0_17_301)))
 (let ((?x53681 (* l_0_17_300 l_0_17_300)))
 (let ((?x53679 (* l_0_17_299 l_0_17_299)))
 (let ((?x53677 (* l_0_17_298 l_0_17_298)))
 (let ((?x53675 (* l_0_17_297 l_0_17_297)))
 (let ((?x53673 (* l_0_17_296 l_0_17_296)))
 (let ((?x53671 (* l_0_17_273 l_0_17_273)))
 (let ((?x53669 (* l_0_17_272 l_0_17_272)))
 (let ((?x53667 (* l_0_17_271 l_0_17_271)))
 (let ((?x53665 (* l_0_17_270 l_0_17_270)))
 (let ((?x53663 (* l_0_17_269 l_0_17_269)))
 (let ((?x53661 (* l_0_17_268 l_0_17_268)))
 (let ((?x53659 (* l_0_17_245 l_0_17_245)))
 (let ((?x53657 (* l_0_17_244 l_0_17_244)))
 (let ((?x24735 (* l_0_17_243 l_0_17_243)))
 (let ((?x34639 (* l_0_17_242 l_0_17_242)))
 (let ((?x24740 (* l_0_17_241 l_0_17_241)))
 (let ((?x9234 (* l_0_17_240 l_0_17_240)))
 (let ((?x44025 (* l_0_17_217 l_0_17_217)))
 (let ((?x34638 (* l_0_17_216 l_0_17_216)))
 (let ((?x44052 (* l_0_17_215 l_0_17_215)))
 (let ((?x44078 (* l_0_17_214 l_0_17_214)))
 (let ((?x44076 (- (- (* (- l_0_17_212) l_0_17_212) (* l_0_17_213 l_0_17_213)) ?x44078)))
 (let ((?x44079 (- (- (- (- (- (- (- ?x44076 ?x44052) ?x34638) ?x44025) ?x9234) ?x24740) ?x34639) ?x24735)))
 (let ((?x53670 (- (- (- (- (- (- (- ?x44079 ?x53657) ?x53659) ?x53661) ?x53663) ?x53665) ?x53667) ?x53669)))
 (let ((?x53684 (- (- (- (- (- (- (- ?x53670 ?x53671) ?x53673) ?x53675) ?x53677) ?x53679) ?x53681) ?x53683)))
 (= (- (- (- (- (- (- ?x53684 ?x53685) ?x53687) ?x53689) ?x53691) ?x53693) ?x53695) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53805 (* l_0_17_336 l_0_17_336)))
 (let ((?x53803 (* l_0_17_335 l_0_17_335)))
 (let ((?x53801 (* l_0_17_334 l_0_17_334)))
 (let ((?x53799 (* l_0_17_333 l_0_17_333)))
 (let ((?x53797 (* l_0_17_332 l_0_17_332)))
 (let ((?x53795 (* l_0_17_331 l_0_17_331)))
 (let ((?x53793 (* l_0_17_330 l_0_17_330)))
 (let ((?x53791 (* l_0_17_308 l_0_17_308)))
 (let ((?x53789 (* l_0_17_307 l_0_17_307)))
 (let ((?x53787 (* l_0_17_306 l_0_17_306)))
 (let ((?x53785 (* l_0_17_305 l_0_17_305)))
 (let ((?x53783 (* l_0_17_304 l_0_17_304)))
 (let ((?x53781 (* l_0_17_303 l_0_17_303)))
 (let ((?x53779 (* l_0_17_302 l_0_17_302)))
 (let ((?x53777 (* l_0_17_280 l_0_17_280)))
 (let ((?x53775 (* l_0_17_279 l_0_17_279)))
 (let ((?x53773 (* l_0_17_278 l_0_17_278)))
 (let ((?x53771 (* l_0_17_277 l_0_17_277)))
 (let ((?x53769 (* l_0_17_276 l_0_17_276)))
 (let ((?x53767 (* l_0_17_275 l_0_17_275)))
 (let ((?x53765 (* l_0_17_274 l_0_17_274)))
 (let ((?x53763 (* l_0_17_252 l_0_17_252)))
 (let ((?x53761 (* l_0_17_251 l_0_17_251)))
 (let ((?x53759 (* l_0_17_250 l_0_17_250)))
 (let ((?x53757 (* l_0_17_249 l_0_17_249)))
 (let ((?x53755 (* l_0_17_248 l_0_17_248)))
 (let ((?x53753 (* l_0_17_247 l_0_17_247)))
 (let ((?x53751 (* l_0_17_246 l_0_17_246)))
 (let ((?x53749 (* l_0_17_224 l_0_17_224)))
 (let ((?x53747 (* l_0_17_223 l_0_17_223)))
 (let ((?x53745 (* l_0_17_222 l_0_17_222)))
 (let ((?x53743 (* l_0_17_221 l_0_17_221)))
 (let ((?x53741 (* l_0_17_220 l_0_17_220)))
 (let ((?x53742 (- (- (* (- l_0_17_218) l_0_17_218) (* l_0_17_219 l_0_17_219)) ?x53741)))
 (let ((?x53756 (- (- (- (- (- (- (- ?x53742 ?x53743) ?x53745) ?x53747) ?x53749) ?x53751) ?x53753) ?x53755)))
 (let ((?x53770 (- (- (- (- (- (- (- ?x53756 ?x53757) ?x53759) ?x53761) ?x53763) ?x53765) ?x53767) ?x53769)))
 (let ((?x53784 (- (- (- (- (- (- (- ?x53770 ?x53771) ?x53773) ?x53775) ?x53777) ?x53779) ?x53781) ?x53783)))
 (let ((?x53798 (- (- (- (- (- (- (- ?x53784 ?x53785) ?x53787) ?x53789) ?x53791) ?x53793) ?x53795) ?x53797)))
 (= (- (- (- (- ?x53798 ?x53799) ?x53801) ?x53803) ?x53805) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_28 0.0))
(assert
 (>= l_0_17_29 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_34 0.0))
(assert
 (>= l_0_17_38 0.0))
(assert
 (>= l_0_17_43 0.0))
(assert
 (>= l_0_17_49 0.0))
(assert
 (>= l_0_17_56 0.0))
(assert
 (>= l_0_17_57 0.0))
(assert
 (>= l_0_17_59 0.0))
(assert
 (>= l_0_17_62 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_71 0.0))
(assert
 (>= l_0_17_77 0.0))
(assert
 (>= l_0_17_84 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_87 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (>= l_0_17_94 0.0))
(assert
 (>= l_0_17_99 0.0))
(assert
 (>= l_0_17_105 0.0))
(assert
 (>= l_0_17_112 0.0))
(assert
 (>= l_0_17_113 0.0))
(assert
 (>= l_0_17_115 0.0))
(assert
 (>= l_0_17_118 0.0))
(assert
 (>= l_0_17_122 0.0))
(assert
 (>= l_0_17_127 0.0))
(assert
 (>= l_0_17_133 0.0))
(assert
 (>= l_0_17_140 0.0))
(assert
 (>= l_0_17_141 0.0))
(assert
 (>= l_0_17_143 0.0))
(assert
 (>= l_0_17_146 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_155 0.0))
(assert
 (>= l_0_17_161 0.0))
(assert
 (>= l_0_17_168 0.0))
(assert
 (>= l_0_17_169 0.0))
(assert
 (>= l_0_17_171 0.0))
(assert
 (>= l_0_17_174 0.0))
(assert
 (>= l_0_17_178 0.0))
(assert
 (>= l_0_17_183 0.0))
(assert
 (>= l_0_17_189 0.0))
(assert
 (>= l_0_17_196 0.0))
(assert
 (>= l_0_17_197 0.0))
(assert
 (>= l_0_17_199 0.0))
(assert
 (>= l_0_17_202 0.0))
(assert
 (>= l_0_17_206 0.0))
(assert
 (>= l_0_17_211 0.0))
(assert
 (>= l_0_17_217 0.0))
(assert
 (>= l_0_17_224 0.0))
(assert
 (>= l_0_17_225 0.0))
(assert
 (>= l_0_17_227 0.0))
(assert
 (>= l_0_17_230 0.0))
(assert
 (>= l_0_17_234 0.0))
(assert
 (>= l_0_17_239 0.0))
(assert
 (>= l_0_17_245 0.0))
(assert
 (>= l_0_17_252 0.0))
(assert
 (>= l_0_17_253 0.0))
(assert
 (>= l_0_17_255 0.0))
(assert
 (>= l_0_17_258 0.0))
(assert
 (>= l_0_17_262 0.0))
(assert
 (>= l_0_17_267 0.0))
(assert
 (>= l_0_17_273 0.0))
(assert
 (>= l_0_17_280 0.0))
(assert
 (>= l_0_17_281 0.0))
(assert
 (>= l_0_17_283 0.0))
(assert
 (>= l_0_17_286 0.0))
(assert
 (>= l_0_17_290 0.0))
(assert
 (>= l_0_17_295 0.0))
(assert
 (>= l_0_17_301 0.0))
(assert
 (>= l_0_17_308 0.0))
(assert
 (>= l_0_17_309 0.0))
(assert
 (>= l_0_17_311 0.0))
(assert
 (>= l_0_17_314 0.0))
(assert
 (>= l_0_17_318 0.0))
(assert
 (>= l_0_17_323 0.0))
(assert
 (>= l_0_17_329 0.0))
(assert
 (>= l_0_17_336 0.0))
(assert
 (let ((?x53935 (* l_0_18_85 l_0_18_85)))
 (let ((?x53933 (* l_0_18_57 l_0_18_57)))
 (let ((?x53913 (* l_0_18_169 l_0_18_169)))
 (let ((?x53914 (- (- (* (- l_0_18_113) l_0_18_113) (* l_0_18_141 l_0_18_141)) ?x53913)))
 (let ((?x53920 (- (- ?x53914 (* (* 2.0 l_0_18_197) l_0_18_200)) (* (* 2.0 l_0_18_225) l_0_18_228))))
 (let ((?x53926 (- (- ?x53920 (* (* 2.0 l_0_18_253) l_0_18_256)) (* (* 2.0 l_0_18_281) l_0_18_284))))
 (let ((?x53932 (- (- ?x53926 (* (* 2.0 l_0_18_309) l_0_18_312)) (* (* 2.0 l_0_18_337) l_0_18_340))))
 (= (+ (+ (- ?x53932 ?x53933) ?x53935) 1.0) 0.0)))))))))
(assert
 (let ((?x54016 (* l_0_18_29 l_0_18_29)))
 (let ((?x53973 (- (+ (* (- l_0_18_1) l_0_18_1) (* l_0_18_141 l_0_18_141)) (* (* 2.0 l_0_18_207) l_0_18_218))))
 (let ((?x53979 (- (- ?x53973 (* (* 2.0 l_0_18_208) l_0_18_219)) (* (* 2.0 l_0_18_209) l_0_18_220))))
 (let ((?x53985 (- (- ?x53979 (* (* 2.0 l_0_18_210) l_0_18_221)) (* (* 2.0 l_0_18_211) l_0_18_222))))
 (let ((?x53991 (- (- ?x53985 (* (* 2.0 l_0_18_235) l_0_18_246)) (* (* 2.0 l_0_18_236) l_0_18_247))))
 (let ((?x53997 (- (- ?x53991 (* (* 2.0 l_0_18_237) l_0_18_248)) (* (* 2.0 l_0_18_238) l_0_18_249))))
 (let ((?x54003 (- (- ?x53997 (* (* 2.0 l_0_18_239) l_0_18_250)) (* (* 2.0 l_0_18_263) l_0_18_274))))
 (let ((?x54009 (- (- ?x54003 (* (* 2.0 l_0_18_264) l_0_18_275)) (* (* 2.0 l_0_18_265) l_0_18_276))))
 (let ((?x54015 (- (- ?x54009 (* (* 2.0 l_0_18_266) l_0_18_277)) (* (* 2.0 l_0_18_267) l_0_18_278))))
 (let ((?x54023 (- (- (+ ?x54015 ?x54016) (* (* 2.0 l_0_18_291) l_0_18_302)) (* (* 2.0 l_0_18_292) l_0_18_303))))
 (let ((?x54029 (- (- ?x54023 (* (* 2.0 l_0_18_293) l_0_18_304)) (* (* 2.0 l_0_18_294) l_0_18_305))))
 (let ((?x54035 (- (- ?x54029 (* (* 2.0 l_0_18_295) l_0_18_306)) (* (* 2.0 l_0_18_319) l_0_18_330))))
 (let ((?x54041 (- (- ?x54035 (* (* 2.0 l_0_18_320) l_0_18_331)) (* (* 2.0 l_0_18_321) l_0_18_332))))
 (let ((?x54047 (- (- ?x54041 (* (* 2.0 l_0_18_322) l_0_18_333)) (* (* 2.0 l_0_18_323) l_0_18_334))))
 (let ((?x54053 (- (- ?x54047 (* (* 2.0 l_0_18_347) l_0_18_358)) (* (* 2.0 l_0_18_348) l_0_18_359))))
 (let ((?x54059 (- (- ?x54053 (* (* 2.0 l_0_18_349) l_0_18_360)) (* (* 2.0 l_0_18_350) l_0_18_361))))
 (= (- (- ?x54059 (* (* 2.0 l_0_18_351) l_0_18_362)) 2.0) 0.0))))))))))))))))))
(assert
 (let ((?x54169 (* 2.0 l_0_18_43)))
 (let ((?x54170 (* ?x54169 l_0_18_54)))
 (let ((?x54166 (* 2.0 l_0_18_42)))
 (let ((?x54167 (* ?x54166 l_0_18_53)))
 (let ((?x54163 (* 2.0 l_0_18_41)))
 (let ((?x54164 (* ?x54163 l_0_18_52)))
 (let ((?x54160 (* 2.0 l_0_18_40)))
 (let ((?x54161 (* ?x54160 l_0_18_51)))
 (let ((?x54157 (* 2.0 l_0_18_39)))
 (let ((?x54158 (* ?x54157 l_0_18_50)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54155 (* ?x54154 l_0_18_30)))
 (let ((?x54136 (* 2.0 l_0_18_15)))
 (let ((?x54137 (* ?x54136 l_0_18_26)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54134 (* ?x54133 l_0_18_142)))
 (let ((?x54130 (* 2.0 l_0_18_14)))
 (let ((?x54131 (* ?x54130 l_0_18_25)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54128 (* ?x54127 l_0_18_24)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54125 (* ?x54124 l_0_18_23)))
 (let ((?x54123 (+ (* (* (- 2.0) l_0_18_1) l_0_18_2) (* (* 2.0 l_0_18_11) l_0_18_22))))
 (let ((?x54141 (+ (+ (+ (+ (+ (+ ?x54123 ?x54125) ?x54128) ?x54131) ?x54134) ?x54137) (* (* 4.0 l_0_18_179) l_0_18_190))))
 (let ((?x54147 (+ (+ ?x54141 (* (* 4.0 l_0_18_180) l_0_18_191)) (* (* 4.0 l_0_18_181) l_0_18_192))))
 (let ((?x54153 (+ (+ ?x54147 (* (* 4.0 l_0_18_182) l_0_18_193)) (* (* 4.0 l_0_18_183) l_0_18_194))))
 (= (- (- (- (- (- (+ ?x54153 ?x54155) ?x54158) ?x54161) ?x54164) ?x54167) ?x54170) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x54303 (* ?x54302 l_0_18_82)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x54300 (* ?x54299 l_0_18_81)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x54297 (* ?x54296 l_0_18_80)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x54294 (* ?x54293 l_0_18_79)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x54291 (* ?x54290 l_0_18_78)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54288 (* ?x54154 l_0_18_32)))
 (let ((?x54270 (* 2.0 l_0_18_155)))
 (let ((?x54271 (* ?x54270 l_0_18_166)))
 (let ((?x54267 (* 2.0 l_0_18_154)))
 (let ((?x54268 (* ?x54267 l_0_18_165)))
 (let ((?x54264 (* 2.0 l_0_18_153)))
 (let ((?x54265 (* ?x54264 l_0_18_164)))
 (let ((?x54261 (* 2.0 l_0_18_152)))
 (let ((?x54262 (* ?x54261 l_0_18_163)))
 (let ((?x54258 (* 2.0 l_0_18_151)))
 (let ((?x54259 (* ?x54258 l_0_18_162)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54256 (* ?x54133 l_0_18_144)))
 (let ((?x54239 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x54236 (* ?x54235 l_0_18_98)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x54233 (* ?x54232 l_0_18_97)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x54230 (* ?x54229 l_0_18_96)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x54227 (* ?x54226 l_0_18_95)))
 (let ((?x54237 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_4) ?x54227) ?x54230) ?x54233) ?x54236)))
 (let ((?x54246 (- (- (+ ?x54237 ?x54239) (* (* 2.0 l_0_18_123) l_0_18_134)) (* (* 2.0 l_0_18_124) l_0_18_135))))
 (let ((?x54252 (- (- ?x54246 (* (* 2.0 l_0_18_125) l_0_18_136)) (* (* 2.0 l_0_18_126) l_0_18_137))))
 (let ((?x54263 (- (- (+ (- ?x54252 (* (* 2.0 l_0_18_127) l_0_18_138)) ?x54256) ?x54259) ?x54262)))
 (let ((?x54275 (- (- (- (- ?x54263 ?x54265) ?x54268) ?x54271) (* (* 2.0 l_0_18_179) l_0_18_190))))
 (let ((?x54281 (- (- ?x54275 (* (* 2.0 l_0_18_180) l_0_18_191)) (* (* 2.0 l_0_18_181) l_0_18_192))))
 (let ((?x54287 (- (- ?x54281 (* (* 2.0 l_0_18_182) l_0_18_193)) (* (* 2.0 l_0_18_183) l_0_18_194))))
 (= (- (- (- (- (- (+ ?x54287 ?x54288) ?x54291) ?x54294) ?x54297) ?x54300) ?x54303) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x54303 (* ?x54302 l_0_18_82)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x54300 (* ?x54299 l_0_18_81)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x54297 (* ?x54296 l_0_18_80)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x54294 (* ?x54293 l_0_18_79)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x54291 (* ?x54290 l_0_18_78)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54374 (* ?x54154 l_0_18_35)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54372 (* ?x54133 l_0_18_147)))
 (let ((?x54239 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x54236 (* ?x54235 l_0_18_98)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x54233 (* ?x54232 l_0_18_97)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x54230 (* ?x54229 l_0_18_96)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x54227 (* ?x54226 l_0_18_95)))
 (let ((?x54370 (- (- (- (- (* (* (- 2.0) l_0_18_1) l_0_18_7) ?x54227) ?x54230) ?x54233) ?x54236)))
 (let ((?x54379 (+ (+ (+ (+ (+ (+ (- ?x54370 ?x54239) ?x54372) ?x54374) ?x54291) ?x54294) ?x54297) ?x54300)))
 (= (+ ?x54379 ?x54303) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x45386 (* ?x54154 l_0_18_39)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x45370 (* ?x54133 l_0_18_151)))
 (= (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_11) ?x45370) ?x45386) 0.0))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x54404 (* ?x54403 l_0_18_95)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x54401 (* ?x54400 l_0_18_67)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54393 (* ?x54154 l_0_18_44)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54390 (* ?x54133 l_0_18_156)))
 (let ((?x54405 (+ (- (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_16) ?x54390) ?x54393) ?x54401) ?x54404)))
 (= ?x54405 0.0)))))))))))
(assert
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54430 (* ?x54154 l_0_18_50)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54422 (* ?x54133 l_0_18_162)))
 (= (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_22) ?x54422) ?x54430) 0.0))))))
(assert
 (let ((?x54450 (* l_0_18_31 l_0_18_31)))
 (let ((?x54448 (* l_0_18_30 l_0_18_30)))
 (let ((?x54446 (* l_0_18_3 l_0_18_3)))
 (let ((?x54439 (* l_0_18_2 l_0_18_2)))
 (let ((?x54436 (* l_0_18_143 l_0_18_143)))
 (let ((?x54434 (* l_0_18_142 l_0_18_142)))
 (let ((?x54438 (+ ?x54434 ?x54436)))
 (= (+ (+ (- (- ?x54438 ?x54439) ?x54446) ?x54448) ?x54450) 0.0)))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54473 (* ?x54472 l_0_18_33)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54470 (* ?x54469 l_0_18_32)))
 (let ((?x54466 (* 2.0 l_0_18_3)))
 (let ((?x54467 (* ?x54466 l_0_18_5)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54464 (* ?x54463 l_0_18_4)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54461 (* ?x54460 l_0_18_145)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54459 (* ?x45499 l_0_18_144)))
 (= (+ (+ (- (- (+ ?x54459 ?x54461) ?x54464) ?x54467) ?x54470) ?x54473) 0.0))))))))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54500 (* ?x54472 l_0_18_36)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54498 (* ?x54469 l_0_18_35)))
 (let ((?x54466 (* 2.0 l_0_18_3)))
 (let ((?x54496 (* ?x54466 l_0_18_8)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54494 (* ?x54463 l_0_18_7)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54492 (* ?x54460 l_0_18_148)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54491 (* ?x45499 l_0_18_147)))
 (= (+ (+ (- (- (+ ?x54491 ?x54492) ?x54494) ?x54496) ?x54498) ?x54500) 0.0))))))))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54525 (* ?x54472 l_0_18_40)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54523 (* ?x54469 l_0_18_39)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54521 (* ?x54460 l_0_18_152)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54519 (* ?x45499 l_0_18_151)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54517 (* ?x54124 l_0_18_3)))
 (let ((?x54524 (+ (+ (+ (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x54517) ?x54519) ?x54521) ?x54523)))
 (= (+ ?x54524 ?x54525) 0.0)))))))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x54560 (* ?x54559 l_0_18_96)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x54557 (* ?x54556 l_0_18_95)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x54554 (* ?x54553 l_0_18_68)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x54551 (* ?x54550 l_0_18_67)))
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54548 (* ?x54472 l_0_18_45)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54546 (* ?x54469 l_0_18_44)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54544 (* ?x54543 l_0_18_3)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54541 (* ?x54540 l_0_18_2)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54538 (* ?x54460 l_0_18_157)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54537 (* ?x45499 l_0_18_156)))
 (let ((?x54555 (- (- (+ (+ (- (- (+ ?x54537 ?x54538) ?x54541) ?x54544) ?x54546) ?x54548) ?x54551) ?x54554)))
 (= (+ (+ ?x54555 ?x54557) ?x54560) 0.0)))))))))))))))))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54603 (* ?x54472 l_0_18_51)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54601 (* ?x54469 l_0_18_50)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x54599 (* ?x54598 l_0_18_3)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54596 (* ?x54463 l_0_18_22)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54594 (* ?x54460 l_0_18_163)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54593 (* ?x45499 l_0_18_162)))
 (= (+ (+ (- (- (+ ?x54593 ?x54594) ?x54596) ?x54599) ?x54601) ?x54603) 0.0))))))))))))))
(assert
 (let ((?x54641 (* l_0_18_6 l_0_18_6)))
 (let ((?x54639 (* l_0_18_5 l_0_18_5)))
 (let ((?x54637 (* l_0_18_4 l_0_18_4)))
 (let ((?x54635 (* l_0_18_34 l_0_18_34)))
 (let ((?x54633 (* l_0_18_33 l_0_18_33)))
 (let ((?x54631 (* l_0_18_32 l_0_18_32)))
 (let ((?x54629 (* l_0_18_146 l_0_18_146)))
 (let ((?x54630 (+ (+ (* l_0_18_144 l_0_18_144) (* l_0_18_145 l_0_18_145)) ?x54629)))
 (= (- (- (- (+ (+ (+ ?x54630 ?x54631) ?x54633) ?x54635) ?x54637) ?x54639) ?x54641) 0.0))))))))))
(assert
 (let ((?x54672 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x54669 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x54666 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54663 (* ?x54662 l_0_18_37)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54660 (* ?x54659 l_0_18_36)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54657 (* ?x54656 l_0_18_35)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54654 (* ?x54653 l_0_18_149)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54651 (* ?x45628 l_0_18_148)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x45627 (* ?x34935 l_0_18_147)))
 (let ((?x54670 (- (- (+ (+ (+ (+ (+ ?x45627 ?x54651) ?x54654) ?x54657) ?x54660) ?x54663) ?x54666) ?x54669)))
 (= (- ?x54670 ?x54672) 0.0))))))))))))))))))
(assert
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54717 (* ?x54662 l_0_18_41)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54715 (* ?x54659 l_0_18_40)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54713 (* ?x54656 l_0_18_39)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54711 (* ?x54653 l_0_18_153)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54709 (* ?x45628 l_0_18_152)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x54707 (* ?x34935 l_0_18_151)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54705 (* ?x54127 l_0_18_6)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54703 (* ?x54124 l_0_18_5)))
 (let ((?x54710 (+ (+ (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x54703) ?x54705) ?x54707) ?x54709)))
 (= (+ (+ (+ (+ ?x54710 ?x54711) ?x54713) ?x54715) ?x54717) 0.0)))))))))))))))))))
(assert
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x54760 (* ?x54759 l_0_18_97)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x54757 (* ?x54756 l_0_18_96)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x54754 (* ?x54753 l_0_18_95)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x54751 (* ?x54750 l_0_18_69)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x54748 (* ?x54747 l_0_18_68)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x54745 (* ?x54744 l_0_18_67)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54742 (* ?x54662 l_0_18_46)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54740 (* ?x54659 l_0_18_45)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54738 (* ?x54656 l_0_18_44)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x54736 (* ?x54735 l_0_18_6)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54733 (* ?x54543 l_0_18_5)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54731 (* ?x54540 l_0_18_4)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54729 (* ?x54653 l_0_18_158)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x25185 (* ?x45628 l_0_18_157)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x44486 (* ?x34935 l_0_18_156)))
 (let ((?x54741 (+ (+ (- (- (- (+ (+ ?x44486 ?x25185) ?x54729) ?x54731) ?x54733) ?x54736) ?x54738) ?x54740)))
 (let ((?x54761 (+ (+ (+ (- (- (- (+ ?x54741 ?x54742) ?x54745) ?x54748) ?x54751) ?x54754) ?x54757) ?x54760)))
 (= ?x54761 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54832 (* ?x54662 l_0_18_52)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54830 (* ?x54659 l_0_18_51)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54828 (* ?x54656 l_0_18_50)))
 (let ((?x54825 (* 2.0 l_0_18_24)))
 (let ((?x54826 (* ?x54825 l_0_18_6)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x54823 (* ?x54598 l_0_18_5)))
 (let ((?x54820 (* 2.0 l_0_18_22)))
 (let ((?x54821 (* ?x54820 l_0_18_4)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54807 (* ?x54653 l_0_18_164)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54804 (* ?x45628 l_0_18_163)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x45742 (* ?x34935 l_0_18_162)))
 (let ((?x54831 (+ (+ (- (- (- (+ (+ ?x45742 ?x54804) ?x54807) ?x54821) ?x54823) ?x54826) ?x54828) ?x54830)))
 (= (+ ?x54831 ?x54832) 0.0)))))))))))))))))))))
(assert
 (let ((?x54874 (* l_0_18_9 l_0_18_9)))
 (let ((?x54872 (* l_0_18_8 l_0_18_8)))
 (let ((?x54870 (* l_0_18_7 l_0_18_7)))
 (let ((?x54868 (* l_0_18_38 l_0_18_38)))
 (let ((?x54866 (* l_0_18_37 l_0_18_37)))
 (let ((?x54864 (* l_0_18_36 l_0_18_36)))
 (let ((?x54862 (* l_0_18_35 l_0_18_35)))
 (let ((?x54860 (* l_0_18_150 l_0_18_150)))
 (let ((?x54858 (* l_0_18_149 l_0_18_149)))
 (let ((?x54856 (* l_0_18_148 l_0_18_148)))
 (let ((?x54857 (+ (+ (* (- l_0_18_10) l_0_18_10) (* l_0_18_147 l_0_18_147)) ?x54856)))
 (let ((?x54871 (- (+ (+ (+ (+ (+ (+ ?x54857 ?x54858) ?x54860) ?x54862) ?x54864) ?x54866) ?x54868) ?x54870)))
 (= (- (- ?x54871 ?x54872) ?x54874) 0.0))))))))))))))
(assert
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x54924 (* ?x54923 l_0_18_42)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x54921 (* ?x54920 l_0_18_41)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x54918 (* ?x54917 l_0_18_40)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x54915 (* ?x54914 l_0_18_39)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x54912 (* ?x54911 l_0_18_154)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x54909 (* ?x54908 l_0_18_153)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x54906 (* ?x54905 l_0_18_152)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x54903 (* ?x54902 l_0_18_151)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54900 (* ?x54127 l_0_18_9)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54898 (* ?x54124 l_0_18_8)))
 (let ((?x54121 (* 2.0 l_0_18_11)))
 (let ((?x54896 (* ?x54121 l_0_18_7)))
 (let ((?x54904 (+ (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x54896) ?x54898) ?x54900) ?x54903)))
 (let ((?x54925 (+ (+ (+ (+ (+ (+ (+ ?x54904 ?x54906) ?x54909) ?x54912) ?x54915) ?x54918) ?x54921) ?x54924)))
 (= ?x54925 0.0))))))))))))))))))))))))))
(assert
 (let ((?x55003 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x55000 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54997 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54994 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x54991 (* ?x54990 l_0_18_70)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x54988 (* ?x54987 l_0_18_69)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x54985 (* ?x54984 l_0_18_68)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x54982 (* ?x54981 l_0_18_67)))
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x54979 (* ?x54923 l_0_18_47)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x54977 (* ?x54920 l_0_18_46)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x54975 (* ?x54917 l_0_18_45)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x54973 (* ?x54914 l_0_18_44)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x54971 (* ?x54735 l_0_18_9)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54969 (* ?x54543 l_0_18_8)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54967 (* ?x54540 l_0_18_7)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x54954 (* ?x54911 l_0_18_159)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x54950 (* ?x54908 l_0_18_158)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x54946 (* ?x54905 l_0_18_157)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x54942 (* ?x54902 l_0_18_156)))
 (let ((?x54955 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_10) l_0_18_19) ?x54942) ?x54946) ?x54950) ?x54954)))
 (let ((?x54980 (+ (+ (+ (+ (- (- (- ?x54955 ?x54967) ?x54969) ?x54971) ?x54973) ?x54975) ?x54977) ?x54979)))
 (let ((?x55001 (+ (+ (+ (- (- (- (- ?x54980 ?x54982) ?x54985) ?x54988) ?x54991) ?x54994) ?x54997) ?x55000)))
 (= (+ ?x55001 ?x55003) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x55072 (* ?x54923 l_0_18_53)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x55070 (* ?x54920 l_0_18_52)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x55068 (* ?x54917 l_0_18_51)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x55066 (* ?x54914 l_0_18_50)))
 (let ((?x54825 (* 2.0 l_0_18_24)))
 (let ((?x55064 (* ?x54825 l_0_18_9)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x55062 (* ?x54598 l_0_18_8)))
 (let ((?x54820 (* 2.0 l_0_18_22)))
 (let ((?x55060 (* ?x54820 l_0_18_7)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x55058 (* ?x54911 l_0_18_165)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x55056 (* ?x54908 l_0_18_164)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x55039 (* ?x54905 l_0_18_163)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x55035 (* ?x54902 l_0_18_162)))
 (let ((?x55059 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_10) l_0_18_25) ?x55035) ?x55039) ?x55056) ?x55058)))
 (let ((?x55073 (+ (+ (+ (+ (- (- (- ?x55059 ?x55060) ?x55062) ?x55064) ?x55066) ?x55068) ?x55070) ?x55072)))
 (= ?x55073 0.0))))))))))))))))))))))))))
(assert
 (let ((?x55134 (* l_0_18_43 l_0_18_43)))
 (let ((?x55132 (* l_0_18_42 l_0_18_42)))
 (let ((?x55130 (* l_0_18_41 l_0_18_41)))
 (let ((?x55128 (* l_0_18_40 l_0_18_40)))
 (let ((?x55126 (* l_0_18_39 l_0_18_39)))
 (let ((?x55124 (* l_0_18_155 l_0_18_155)))
 (let ((?x55122 (* l_0_18_154 l_0_18_154)))
 (let ((?x55120 (* l_0_18_153 l_0_18_153)))
 (let ((?x55118 (* l_0_18_152 l_0_18_152)))
 (let ((?x55116 (* l_0_18_151 l_0_18_151)))
 (let ((?x55114 (* l_0_18_15 l_0_18_15)))
 (let ((?x55112 (* l_0_18_14 l_0_18_14)))
 (let ((?x55110 (* l_0_18_13 l_0_18_13)))
 (let ((?x55111 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x55110)))
 (let ((?x55125 (+ (+ (+ (+ (+ (- (- ?x55111 ?x55112) ?x55114) ?x55116) ?x55118) ?x55120) ?x55122) ?x55124)))
 (= (+ (+ (+ (+ (+ ?x55125 ?x55126) ?x55128) ?x55130) ?x55132) ?x55134) 0.0)))))))))))))))))
(assert
 (let ((?x55211 (* l_0_18_99 l_0_18_99)))
 (let ((?x55209 (* l_0_18_98 l_0_18_98)))
 (let ((?x55207 (* l_0_18_97 l_0_18_97)))
 (let ((?x55205 (* l_0_18_96 l_0_18_96)))
 (let ((?x55203 (* l_0_18_95 l_0_18_95)))
 (let ((?x55201 (* l_0_18_71 l_0_18_71)))
 (let ((?x55199 (* l_0_18_70 l_0_18_70)))
 (let ((?x55197 (* l_0_18_69 l_0_18_69)))
 (let ((?x55195 (* l_0_18_68 l_0_18_68)))
 (let ((?x55193 (* l_0_18_67 l_0_18_67)))
 (let ((?x54169 (* 2.0 l_0_18_43)))
 (let ((?x55191 (* ?x54169 l_0_18_48)))
 (let ((?x54166 (* 2.0 l_0_18_42)))
 (let ((?x55189 (* ?x54166 l_0_18_47)))
 (let ((?x54163 (* 2.0 l_0_18_41)))
 (let ((?x55187 (* ?x54163 l_0_18_46)))
 (let ((?x54160 (* 2.0 l_0_18_40)))
 (let ((?x55185 (* ?x54160 l_0_18_45)))
 (let ((?x54157 (* 2.0 l_0_18_39)))
 (let ((?x55183 (* ?x54157 l_0_18_44)))
 (let ((?x54270 (* 2.0 l_0_18_155)))
 (let ((?x55181 (* ?x54270 l_0_18_160)))
 (let ((?x54267 (* 2.0 l_0_18_154)))
 (let ((?x55179 (* ?x54267 l_0_18_159)))
 (let ((?x54264 (* 2.0 l_0_18_153)))
 (let ((?x55177 (* ?x54264 l_0_18_158)))
 (let ((?x54261 (* 2.0 l_0_18_152)))
 (let ((?x55175 (* ?x54261 l_0_18_157)))
 (let ((?x54258 (* 2.0 l_0_18_151)))
 (let ((?x55173 (* ?x54258 l_0_18_156)))
 (let ((?x54136 (* 2.0 l_0_18_15)))
 (let ((?x55171 (* ?x54136 l_0_18_20)))
 (let ((?x54130 (* 2.0 l_0_18_14)))
 (let ((?x55169 (* ?x54130 l_0_18_19)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x55167 (* ?x54127 l_0_18_18)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x55165 (* ?x54124 l_0_18_17)))
 (let ((?x55172 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_16) ?x55165) ?x55167) ?x55169) ?x55171)))
 (let ((?x55186 (+ (+ (+ (+ (+ (+ (+ ?x55172 ?x55173) ?x55175) ?x55177) ?x55179) ?x55181) ?x55183) ?x55185)))
 (let ((?x55200 (- (- (- (- (+ (+ (+ ?x55186 ?x55187) ?x55189) ?x55191) ?x55193) ?x55195) ?x55197) ?x55199)))
 (= (+ (+ (+ (+ (+ (- ?x55200 ?x55201) ?x55203) ?x55205) ?x55207) ?x55209) ?x55211) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54169 (* 2.0 l_0_18_43)))
 (let ((?x54170 (* ?x54169 l_0_18_54)))
 (let ((?x54166 (* 2.0 l_0_18_42)))
 (let ((?x54167 (* ?x54166 l_0_18_53)))
 (let ((?x54163 (* 2.0 l_0_18_41)))
 (let ((?x54164 (* ?x54163 l_0_18_52)))
 (let ((?x54160 (* 2.0 l_0_18_40)))
 (let ((?x54161 (* ?x54160 l_0_18_51)))
 (let ((?x54157 (* 2.0 l_0_18_39)))
 (let ((?x54158 (* ?x54157 l_0_18_50)))
 (let ((?x54270 (* 2.0 l_0_18_155)))
 (let ((?x54271 (* ?x54270 l_0_18_166)))
 (let ((?x54267 (* 2.0 l_0_18_154)))
 (let ((?x54268 (* ?x54267 l_0_18_165)))
 (let ((?x54264 (* 2.0 l_0_18_153)))
 (let ((?x54265 (* ?x54264 l_0_18_164)))
 (let ((?x54261 (* 2.0 l_0_18_152)))
 (let ((?x54262 (* ?x54261 l_0_18_163)))
 (let ((?x54258 (* 2.0 l_0_18_151)))
 (let ((?x54259 (* ?x54258 l_0_18_162)))
 (let ((?x54136 (* 2.0 l_0_18_15)))
 (let ((?x54137 (* ?x54136 l_0_18_26)))
 (let ((?x54130 (* 2.0 l_0_18_14)))
 (let ((?x54131 (* ?x54130 l_0_18_25)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54128 (* ?x54127 l_0_18_24)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54125 (* ?x54124 l_0_18_23)))
 (let ((?x55267 (- (- (- (- (* (* (- 2.0) l_0_18_11) l_0_18_22) ?x54125) ?x54128) ?x54131) ?x54137)))
 (let ((?x55274 (+ (+ (+ (+ (+ (+ (+ ?x55267 ?x54259) ?x54262) ?x54265) ?x54268) ?x54271) ?x54158) ?x54161)))
 (= (+ (+ (+ ?x55274 ?x54164) ?x54167) ?x54170) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x55325 (* ?x54302 l_0_18_76)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x55323 (* ?x54299 l_0_18_75)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x55321 (* ?x54296 l_0_18_74)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x55319 (* ?x54293 l_0_18_73)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x55317 (* ?x54290 l_0_18_72)))
 (let ((?x55315 (* l_0_18_49 l_0_18_49)))
 (let ((?x55313 (* l_0_18_48 l_0_18_48)))
 (let ((?x55311 (* l_0_18_47 l_0_18_47)))
 (let ((?x55309 (* l_0_18_46 l_0_18_46)))
 (let ((?x55307 (* l_0_18_45 l_0_18_45)))
 (let ((?x55305 (* l_0_18_44 l_0_18_44)))
 (let ((?x55303 (* l_0_18_21 l_0_18_21)))
 (let ((?x55301 (* l_0_18_20 l_0_18_20)))
 (let ((?x55299 (* l_0_18_19 l_0_18_19)))
 (let ((?x55297 (* l_0_18_18 l_0_18_18)))
 (let ((?x55295 (* l_0_18_17 l_0_18_17)))
 (let ((?x55293 (* l_0_18_161 l_0_18_161)))
 (let ((?x55291 (* l_0_18_160 l_0_18_160)))
 (let ((?x55289 (* l_0_18_16 l_0_18_16)))
 (let ((?x55287 (* l_0_18_159 l_0_18_159)))
 (let ((?x55285 (* l_0_18_158 l_0_18_158)))
 (let ((?x55283 (* l_0_18_157 l_0_18_157)))
 (let ((?x11159 (* l_0_18_156 l_0_18_156)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x45872 (* ?x35101 l_0_18_99)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x45874 (* ?x45854 l_0_18_98)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x11162 (* ?x45846 l_0_18_97)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x45864 (* ?x45861 l_0_18_96)))
 (let ((?x11069 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_95) ?x45864) ?x11162) ?x45874) ?x45872)))
 (let ((?x55294 (+ (+ (- (+ (+ (+ (+ ?x11069 ?x11159) ?x55283) ?x55285) ?x55287) ?x55289) ?x55291) ?x55293)))
 (let ((?x55308 (+ (+ (- (- (- (- (- ?x55294 ?x55295) ?x55297) ?x55299) ?x55301) ?x55303) ?x55305) ?x55307)))
 (let ((?x55322 (- (- (- (+ (+ (+ (+ ?x55308 ?x55309) ?x55311) ?x55313) ?x55315) ?x55317) ?x55319) ?x55321)))
 (= (- (- ?x55322 ?x55323) ?x55325) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x54303 (* ?x54302 l_0_18_82)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x54300 (* ?x54299 l_0_18_81)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x54297 (* ?x54296 l_0_18_80)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x54294 (* ?x54293 l_0_18_79)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x54291 (* ?x54290 l_0_18_78)))
 (let ((?x55406 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x55403 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x55400 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x55397 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x55394 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x55391 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x55388 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x55385 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x55382 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x55379 (* ?x54735 l_0_18_24)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x55377 (* ?x54543 l_0_18_23)))
 (let ((?x55375 (* (* 2.0 l_0_18_161) l_0_18_167)))
 (let ((?x55372 (* (* 2.0 l_0_18_160) l_0_18_166)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x55369 (* ?x54540 l_0_18_22)))
 (let ((?x55367 (* (* 2.0 l_0_18_159) l_0_18_165)))
 (let ((?x55364 (* (* 2.0 l_0_18_158) l_0_18_164)))
 (let ((?x11177 (* (* 2.0 l_0_18_157) l_0_18_163)))
 (let ((?x45909 (* (* 2.0 l_0_18_156) l_0_18_162)))
 (let ((?x54239 (* (* 2.0 l_0_18_110) l_0_18_99)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x54236 (* ?x54235 l_0_18_98)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x54233 (* ?x54232 l_0_18_97)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x54230 (* ?x54229 l_0_18_96)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x54227 (* ?x54226 l_0_18_95)))
 (let ((?x55365 (+ (+ (+ (+ (+ (+ (+ ?x54227 ?x54230) ?x54233) ?x54236) ?x54239) ?x45909) ?x11177) ?x55364)))
 (let ((?x55383 (- (- (- (+ (+ (- (+ ?x55365 ?x55367) ?x55369) ?x55372) ?x55375) ?x55377) ?x55379) ?x55382)))
 (let ((?x55404 (+ (+ (+ (+ (+ (- (- ?x55383 ?x55385) ?x55388) ?x55391) ?x55394) ?x55397) ?x55400) ?x55403)))
 (= (- (- (- (- (- (+ ?x55404 ?x55406) ?x54291) ?x54294) ?x54297) ?x54300) ?x54303) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x55525 (* l_0_18_56 l_0_18_56)))
 (let ((?x55523 (* l_0_18_55 l_0_18_55)))
 (let ((?x55521 (* l_0_18_54 l_0_18_54)))
 (let ((?x55519 (* l_0_18_53 l_0_18_53)))
 (let ((?x55517 (* l_0_18_52 l_0_18_52)))
 (let ((?x55515 (* l_0_18_51 l_0_18_51)))
 (let ((?x55513 (* l_0_18_50 l_0_18_50)))
 (let ((?x55511 (* l_0_18_28 l_0_18_28)))
 (let ((?x55509 (* l_0_18_27 l_0_18_27)))
 (let ((?x55507 (* l_0_18_26 l_0_18_26)))
 (let ((?x55505 (* l_0_18_25 l_0_18_25)))
 (let ((?x55503 (* l_0_18_24 l_0_18_24)))
 (let ((?x55501 (* l_0_18_23 l_0_18_23)))
 (let ((?x55499 (* l_0_18_22 l_0_18_22)))
 (let ((?x55497 (* l_0_18_168 l_0_18_168)))
 (let ((?x55495 (* l_0_18_167 l_0_18_167)))
 (let ((?x55493 (* l_0_18_166 l_0_18_166)))
 (let ((?x55491 (* l_0_18_165 l_0_18_165)))
 (let ((?x55489 (* l_0_18_164 l_0_18_164)))
 (let ((?x55490 (+ (+ (* l_0_18_162 l_0_18_162) (* l_0_18_163 l_0_18_163)) ?x55489)))
 (let ((?x55504 (- (- (- (+ (+ (+ (+ ?x55490 ?x55491) ?x55493) ?x55495) ?x55497) ?x55499) ?x55501) ?x55503)))
 (let ((?x55518 (+ (+ (+ (- (- (- (- ?x55504 ?x55505) ?x55507) ?x55509) ?x55511) ?x55513) ?x55515) ?x55517)))
 (= (+ (+ (+ (+ ?x55518 ?x55519) ?x55521) ?x55523) ?x55525) 0.0))))))))))))))))))))))))
(assert
 (let ((?x54016 (* l_0_18_29 l_0_18_29)))
 (let ((?x53913 (* l_0_18_169 l_0_18_169)))
 (let ((?x45955 (* 2.0 ?x53913)))
 (let ((?x9677 (* l_0_18_1 l_0_18_1)))
 (let ((?x45987 (+ ?x9677 ?x45955)))
 (let ((?x35169 (- (- ?x45987 (* (* 2.0 l_0_18_197) l_0_18_198)) (* (* 2.0 l_0_18_225) l_0_18_226))))
 (let ((?x55540 (- (- ?x35169 (* (* 2.0 l_0_18_253) l_0_18_254)) (* (* 2.0 l_0_18_281) l_0_18_282))))
 (let ((?x55545 (- (- (- ?x55540 ?x54016) (* (* 2.0 l_0_18_309) l_0_18_310)) (* (* 2.0 l_0_18_337) l_0_18_338))))
 (= ?x55545 0.0))))))))))
(assert
 (let ((?x55578 (* l_0_18_339 l_0_18_339)))
 (let ((?x55576 (* l_0_18_338 l_0_18_338)))
 (let ((?x55574 (* l_0_18_311 l_0_18_311)))
 (let ((?x55572 (* l_0_18_310 l_0_18_310)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54155 (* ?x54154 l_0_18_30)))
 (let ((?x55569 (* l_0_18_283 l_0_18_283)))
 (let ((?x55567 (* l_0_18_282 l_0_18_282)))
 (let ((?x55565 (* l_0_18_255 l_0_18_255)))
 (let ((?x55563 (* l_0_18_254 l_0_18_254)))
 (let ((?x55561 (* l_0_18_227 l_0_18_227)))
 (let ((?x55559 (* l_0_18_226 l_0_18_226)))
 (let ((?x35233 (* l_0_18_199 l_0_18_199)))
 (let ((?x46034 (* l_0_18_198 l_0_18_198)))
 (let ((?x35252 (+ (* (* 2.0 l_0_18_1) l_0_18_2) (* (* 4.0 l_0_18_169) l_0_18_170))))
 (let ((?x55568 (- (- (- (- (- (- (- ?x35252 ?x46034) ?x35233) ?x55559) ?x55561) ?x55563) ?x55565) ?x55567)))
 (= (- (- (- (- (- (- ?x55568 ?x55569) ?x54155) ?x55572) ?x55574) ?x55576) ?x55578) 0.0))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x55652 (* ?x54403 l_0_18_86)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x55650 (* ?x54400 l_0_18_58)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54288 (* ?x54154 l_0_18_32)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54134 (* ?x54133 l_0_18_142)))
 (let ((?x55606 (- (* (* 2.0 l_0_18_1) l_0_18_4) (* (* 2.0 l_0_18_113) l_0_18_114))))
 (let ((?x55612 (+ (- (- ?x55606 ?x54134) (* (* 2.0 l_0_18_169) l_0_18_170)) (* (* 4.0 l_0_18_169) l_0_18_172))))
 (let ((?x55618 (- (- ?x55612 (* (* 2.0 l_0_18_198) l_0_18_200)) (* (* 2.0 l_0_18_199) l_0_18_201))))
 (let ((?x55624 (- (- ?x55618 (* (* 2.0 l_0_18_226) l_0_18_228)) (* (* 2.0 l_0_18_227) l_0_18_229))))
 (let ((?x55630 (- (- ?x55624 (* (* 2.0 l_0_18_254) l_0_18_256)) (* (* 2.0 l_0_18_255) l_0_18_257))))
 (let ((?x55636 (- (- ?x55630 (* (* 2.0 l_0_18_282) l_0_18_284)) (* (* 2.0 l_0_18_283) l_0_18_285))))
 (let ((?x55643 (- (- (- ?x55636 ?x54288) (* (* 2.0 l_0_18_310) l_0_18_312)) (* (* 2.0 l_0_18_311) l_0_18_313))))
 (let ((?x55649 (- (- ?x55643 (* (* 2.0 l_0_18_338) l_0_18_340)) (* (* 2.0 l_0_18_339) l_0_18_341))))
 (= (+ (- ?x55649 ?x55650) ?x55652) 0.0))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x55652 (* ?x54403 l_0_18_86)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x55650 (* ?x54400 l_0_18_58)))
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54374 (* ?x54154 l_0_18_35)))
 (let ((?x55687 (+ (* (* 2.0 l_0_18_1) l_0_18_7) (* (* 4.0 l_0_18_169) l_0_18_175))))
 (let ((?x55691 (- (- ?x55687 (* (* 2.0 l_0_18_198) l_0_18_203)) (* (* 2.0 l_0_18_199) l_0_18_204))))
 (let ((?x55695 (- (- ?x55691 (* (* 2.0 l_0_18_226) l_0_18_231)) (* (* 2.0 l_0_18_227) l_0_18_232))))
 (let ((?x55699 (- (- ?x55695 (* (* 2.0 l_0_18_254) l_0_18_259)) (* (* 2.0 l_0_18_255) l_0_18_260))))
 (let ((?x55703 (- (- ?x55699 (* (* 2.0 l_0_18_282) l_0_18_287)) (* (* 2.0 l_0_18_283) l_0_18_288))))
 (let ((?x55708 (- (- (- ?x55703 ?x54374) (* (* 2.0 l_0_18_310) l_0_18_315)) (* (* 2.0 l_0_18_311) l_0_18_316))))
 (let ((?x55712 (- (- ?x55708 (* (* 2.0 l_0_18_338) l_0_18_343)) (* (* 2.0 l_0_18_339) l_0_18_344))))
 (= (- (+ ?x55712 ?x55650) ?x55652) 0.0)))))))))))))))
(assert
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x45386 (* ?x54154 l_0_18_39)))
 (let ((?x55738 (+ (* (* 2.0 l_0_18_1) l_0_18_11) (* (* 4.0 l_0_18_169) l_0_18_179))))
 (let ((?x55742 (- (- ?x55738 (* (* 2.0 l_0_18_198) l_0_18_207)) (* (* 2.0 l_0_18_199) l_0_18_208))))
 (let ((?x55746 (- (- ?x55742 (* (* 2.0 l_0_18_226) l_0_18_235)) (* (* 2.0 l_0_18_227) l_0_18_236))))
 (let ((?x55750 (- (- ?x55746 (* (* 2.0 l_0_18_254) l_0_18_263)) (* (* 2.0 l_0_18_255) l_0_18_264))))
 (let ((?x55754 (- (- ?x55750 (* (* 2.0 l_0_18_282) l_0_18_291)) (* (* 2.0 l_0_18_283) l_0_18_292))))
 (let ((?x55759 (- (- (- ?x55754 ?x45386) (* (* 2.0 l_0_18_310) l_0_18_319)) (* (* 2.0 l_0_18_311) l_0_18_320))))
 (let ((?x55763 (- (- ?x55759 (* (* 2.0 l_0_18_338) l_0_18_347)) (* (* 2.0 l_0_18_339) l_0_18_348))))
 (= ?x55763 0.0)))))))))))
(assert
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54393 (* ?x54154 l_0_18_44)))
 (let ((?x55816 (+ (* (* 2.0 l_0_18_1) l_0_18_16) (* (* 4.0 l_0_18_169) l_0_18_184))))
 (let ((?x55820 (- (- ?x55816 (* (* 2.0 l_0_18_198) l_0_18_212)) (* (* 2.0 l_0_18_199) l_0_18_213))))
 (let ((?x55824 (- (- ?x55820 (* (* 2.0 l_0_18_226) l_0_18_240)) (* (* 2.0 l_0_18_227) l_0_18_241))))
 (let ((?x55828 (- (- ?x55824 (* (* 2.0 l_0_18_254) l_0_18_268)) (* (* 2.0 l_0_18_255) l_0_18_269))))
 (let ((?x55832 (- (- ?x55828 (* (* 2.0 l_0_18_282) l_0_18_296)) (* (* 2.0 l_0_18_283) l_0_18_297))))
 (let ((?x55837 (- (- (- ?x55832 ?x54393) (* (* 2.0 l_0_18_310) l_0_18_324)) (* (* 2.0 l_0_18_311) l_0_18_325))))
 (let ((?x55841 (- (- ?x55837 (* (* 2.0 l_0_18_338) l_0_18_352)) (* (* 2.0 l_0_18_339) l_0_18_353))))
 (= ?x55841 0.0)))))))))))
(assert
 (let ((?x54154 (* 2.0 l_0_18_29)))
 (let ((?x54430 (* ?x54154 l_0_18_50)))
 (let ((?x25053 (+ (* (* 2.0 l_0_18_1) l_0_18_22) (* (* 4.0 l_0_18_169) l_0_18_190))))
 (let ((?x46286 (- (- ?x25053 (* (* 2.0 l_0_18_198) l_0_18_218)) (* (* 2.0 l_0_18_199) l_0_18_219))))
 (let ((?x44919 (- (- ?x46286 (* (* 2.0 l_0_18_226) l_0_18_246)) (* (* 2.0 l_0_18_227) l_0_18_247))))
 (let ((?x46303 (- (- ?x44919 (* (* 2.0 l_0_18_254) l_0_18_274)) (* (* 2.0 l_0_18_255) l_0_18_275))))
 (let ((?x55887 (- (- ?x46303 (* (* 2.0 l_0_18_282) l_0_18_302)) (* (* 2.0 l_0_18_283) l_0_18_303))))
 (let ((?x55892 (- (- (- ?x55887 ?x54430) (* (* 2.0 l_0_18_310) l_0_18_330)) (* (* 2.0 l_0_18_311) l_0_18_331))))
 (let ((?x55896 (- (- ?x55892 (* (* 2.0 l_0_18_338) l_0_18_358)) (* (* 2.0 l_0_18_339) l_0_18_359))))
 (= ?x55896 0.0)))))))))))
(assert
 (let ((?x54450 (* l_0_18_31 l_0_18_31)))
 (let ((?x54448 (* l_0_18_30 l_0_18_30)))
 (let ((?x54446 (* l_0_18_3 l_0_18_3)))
 (let ((?x54439 (* l_0_18_2 l_0_18_2)))
 (let ((?x55943 (* l_0_18_171 l_0_18_171)))
 (let ((?x55944 (* 2.0 ?x55943)))
 (let ((?x55941 (* l_0_18_170 l_0_18_170)))
 (let ((?x55942 (* 2.0 ?x55941)))
 (= (- (- (+ (+ (+ ?x55942 ?x55944) ?x54439) ?x54446) ?x54448) ?x54450) 0.0))))))))))
(assert
 (let ((?x55981 (* l_0_18_87 l_0_18_87)))
 (let ((?x55979 (* l_0_18_86 l_0_18_86)))
 (let ((?x55977 (* l_0_18_59 l_0_18_59)))
 (let ((?x55975 (* l_0_18_58 l_0_18_58)))
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54473 (* ?x54472 l_0_18_33)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54470 (* ?x54469 l_0_18_32)))
 (let ((?x54466 (* 2.0 l_0_18_3)))
 (let ((?x54467 (* ?x54466 l_0_18_5)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54464 (* ?x54463 l_0_18_4)))
 (let ((?x55943 (* l_0_18_171 l_0_18_171)))
 (let ((?x55941 (* l_0_18_170 l_0_18_170)))
 (let ((?x54436 (* l_0_18_143 l_0_18_143)))
 (let ((?x54434 (* l_0_18_142 l_0_18_142)))
 (let ((?x55961 (- (- (* (- l_0_18_114) l_0_18_114) (* l_0_18_115 l_0_18_115)) ?x54434)))
 (let ((?x55969 (+ (- (+ (- ?x55961 ?x54436) (* (* 4.0 l_0_18_170) l_0_18_172)) ?x55941) (* (* 4.0 l_0_18_171) l_0_18_173))))
 (let ((?x55978 (- (- (- (- (+ (+ (- ?x55969 ?x55943) ?x54464) ?x54467) ?x54470) ?x54473) ?x55975) ?x55977)))
 (= (+ (+ ?x55978 ?x55979) ?x55981) 0.0)))))))))))))))))))))
(assert
 (let ((?x55981 (* l_0_18_87 l_0_18_87)))
 (let ((?x55979 (* l_0_18_86 l_0_18_86)))
 (let ((?x55977 (* l_0_18_59 l_0_18_59)))
 (let ((?x55975 (* l_0_18_58 l_0_18_58)))
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54500 (* ?x54472 l_0_18_36)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54498 (* ?x54469 l_0_18_35)))
 (let ((?x54466 (* 2.0 l_0_18_3)))
 (let ((?x54496 (* ?x54466 l_0_18_8)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54494 (* ?x54463 l_0_18_7)))
 (let ((?x56015 (+ (* (* 4.0 l_0_18_170) l_0_18_175) (* (* 4.0 l_0_18_171) l_0_18_176))))
 (let ((?x56022 (- (+ (+ (- (- (+ (+ ?x56015 ?x54494) ?x54496) ?x54498) ?x54500) ?x55975) ?x55977) ?x55979)))
 (= (- ?x56022 ?x55981) 0.0))))))))))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54525 (* ?x54472 l_0_18_40)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54523 (* ?x54469 l_0_18_39)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54517 (* ?x54124 l_0_18_3)))
 (let ((?x46387 (+ (+ (* (* 2.0 l_0_18_11) l_0_18_2) ?x54517) (* (* 4.0 l_0_18_170) l_0_18_179))))
 (= (- (- (+ ?x46387 (* (* 4.0 l_0_18_171) l_0_18_180)) ?x54523) ?x54525) 0.0)))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54548 (* ?x54472 l_0_18_45)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54546 (* ?x54469 l_0_18_44)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54544 (* ?x54543 l_0_18_3)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54541 (* ?x54540 l_0_18_2)))
 (let ((?x56049 (+ (+ (+ ?x54541 ?x54544) (* (* 4.0 l_0_18_170) l_0_18_184)) (* (* 4.0 l_0_18_171) l_0_18_185))))
 (= (- (- ?x56049 ?x54546) ?x54548) 0.0)))))))))))
(assert
 (let ((?x54472 (* 2.0 l_0_18_31)))
 (let ((?x54603 (* ?x54472 l_0_18_51)))
 (let ((?x54469 (* 2.0 l_0_18_30)))
 (let ((?x54601 (* ?x54469 l_0_18_50)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x54599 (* ?x54598 l_0_18_3)))
 (let ((?x54463 (* 2.0 l_0_18_2)))
 (let ((?x54596 (* ?x54463 l_0_18_22)))
 (let ((?x56066 (+ (* (* 4.0 l_0_18_170) l_0_18_190) (* (* 4.0 l_0_18_171) l_0_18_191))))
 (= (- (- (+ (+ ?x56066 ?x54596) ?x54599) ?x54601) ?x54603) 0.0)))))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x56104 (* ?x54559 l_0_18_89)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x56102 (* ?x54556 l_0_18_88)))
 (let ((?x54641 (* l_0_18_6 l_0_18_6)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56099 (* ?x54553 l_0_18_61)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56097 (* ?x54550 l_0_18_60)))
 (let ((?x54639 (* l_0_18_5 l_0_18_5)))
 (let ((?x54637 (* l_0_18_4 l_0_18_4)))
 (let ((?x54635 (* l_0_18_34 l_0_18_34)))
 (let ((?x54633 (* l_0_18_33 l_0_18_33)))
 (let ((?x54631 (* l_0_18_32 l_0_18_32)))
 (let ((?x56089 (* l_0_18_174 l_0_18_174)))
 (let ((?x56090 (* 2.0 ?x56089)))
 (let ((?x56086 (* l_0_18_173 l_0_18_173)))
 (let ((?x56087 (* 2.0 ?x56086)))
 (let ((?x56083 (* l_0_18_172 l_0_18_172)))
 (let ((?x56084 (* 2.0 ?x56083)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54461 (* ?x54460 l_0_18_145)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54459 (* ?x45499 l_0_18_144)))
 (let ((?x45166 (- (* (* (- 2.0) l_0_18_114) l_0_18_116) (* (* 2.0 l_0_18_115) l_0_18_117))))
 (let ((?x56082 (- (- (- (- ?x45166 ?x54459) ?x54461) (* (* 2.0 l_0_18_170) l_0_18_172)) (* (* 2.0 l_0_18_171) l_0_18_173))))
 (let ((?x56095 (+ (- (- (- (+ (+ (+ ?x56082 ?x56084) ?x56087) ?x56090) ?x54631) ?x54633) ?x54635) ?x54637)))
 (= (+ (+ (+ (- (- (+ ?x56095 ?x54639) ?x56097) ?x56099) ?x54641) ?x56102) ?x56104) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x56159 (* ?x54559 l_0_18_92)))
 (let ((?x56104 (* ?x54559 l_0_18_89)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x56156 (* ?x54556 l_0_18_91)))
 (let ((?x56102 (* ?x54556 l_0_18_88)))
 (let ((?x54672 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56152 (* ?x54553 l_0_18_64)))
 (let ((?x56099 (* ?x54553 l_0_18_61)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56149 (* ?x54550 l_0_18_63)))
 (let ((?x56097 (* ?x54550 l_0_18_60)))
 (let ((?x54669 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x54666 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54663 (* ?x54662 l_0_18_37)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54660 (* ?x54659 l_0_18_36)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54657 (* ?x54656 l_0_18_35)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54492 (* ?x54460 l_0_18_148)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54491 (* ?x45499 l_0_18_147)))
 (let ((?x56127 (- (* (* (- 2.0) l_0_18_114) l_0_18_119) (* (* 2.0 l_0_18_115) l_0_18_120))))
 (let ((?x56133 (- (- (- (- ?x56127 ?x54491) ?x54492) (* (* 2.0 l_0_18_170) l_0_18_175)) (* (* 2.0 l_0_18_171) l_0_18_176))))
 (let ((?x56139 (+ (+ ?x56133 (* (* 4.0 l_0_18_172) l_0_18_175)) (* (* 4.0 l_0_18_173) l_0_18_176))))
 (let ((?x56145 (- (- (- (+ ?x56139 (* (* 4.0 l_0_18_174) l_0_18_177)) ?x54657) ?x54660) ?x54663)))
 (let ((?x56154 (+ (- (+ (- (+ (+ (+ ?x56145 ?x54666) ?x54669) ?x56097) ?x56149) ?x56099) ?x56152) ?x54672)))
 (= (+ (- (+ (- ?x56154 ?x56102) ?x56156) ?x56104) ?x56159) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x54560 (* ?x54559 l_0_18_96)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x54557 (* ?x54556 l_0_18_95)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x54554 (* ?x54553 l_0_18_68)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x54551 (* ?x54550 l_0_18_67)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54717 (* ?x54662 l_0_18_41)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54715 (* ?x54659 l_0_18_40)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54713 (* ?x54656 l_0_18_39)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54521 (* ?x54460 l_0_18_152)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54519 (* ?x45499 l_0_18_151)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54705 (* ?x54127 l_0_18_6)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54703 (* ?x54124 l_0_18_5)))
 (let ((?x56209 (- (* (* 2.0 l_0_18_11) l_0_18_4) (* (* 2.0 l_0_18_114) l_0_18_123))))
 (let ((?x56214 (- (+ (+ (- ?x56209 (* (* 2.0 l_0_18_115) l_0_18_124)) ?x54703) ?x54705) ?x54519)))
 (let ((?x56219 (- (- (- ?x56214 ?x54521) (* (* 2.0 l_0_18_170) l_0_18_179)) (* (* 2.0 l_0_18_171) l_0_18_180))))
 (let ((?x56223 (+ (+ ?x56219 (* (* 4.0 l_0_18_172) l_0_18_179)) (* (* 4.0 l_0_18_173) l_0_18_180))))
 (let ((?x56228 (- (- (- (+ ?x56223 (* (* 4.0 l_0_18_174) l_0_18_181)) ?x54713) ?x54715) ?x54717)))
 (= (+ (+ (- (- ?x56228 ?x54551) ?x54554) ?x54557) ?x54560) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56293 (* ?x54553 l_0_18_73)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56291 (* ?x54550 l_0_18_72)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54742 (* ?x54662 l_0_18_46)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54740 (* ?x54659 l_0_18_45)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54738 (* ?x54656 l_0_18_44)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x54736 (* ?x54735 l_0_18_6)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54733 (* ?x54543 l_0_18_5)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54731 (* ?x54540 l_0_18_4)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54538 (* ?x54460 l_0_18_157)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54537 (* ?x45499 l_0_18_156)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x56267 (* ?x45861 l_0_18_87)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x37027 (* ?x35066 l_0_18_86)))
 (let ((?x56268 (+ ?x37027 ?x56267)))
 (let ((?x56272 (- (- ?x56268 (* (* 2.0 l_0_18_114) l_0_18_128)) (* (* 2.0 l_0_18_115) l_0_18_129))))
 (let ((?x56278 (- (+ (+ (- (- ?x56272 ?x54537) ?x54538) ?x54731) ?x54733) (* (* 2.0 l_0_18_170) l_0_18_184))))
 (let ((?x56282 (+ (- ?x56278 (* (* 2.0 l_0_18_171) l_0_18_185)) (* (* 4.0 l_0_18_172) l_0_18_184))))
 (let ((?x56286 (+ (+ ?x56282 (* (* 4.0 l_0_18_173) l_0_18_185)) (* (* 4.0 l_0_18_174) l_0_18_186))))
 (= (- (- (- (- (- (+ ?x56286 ?x54736) ?x54738) ?x54740) ?x54742) ?x56291) ?x56293) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56355 (* ?x54553 l_0_18_79)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56353 (* ?x54550 l_0_18_78)))
 (let ((?x54662 (* 2.0 l_0_18_34)))
 (let ((?x54832 (* ?x54662 l_0_18_52)))
 (let ((?x54659 (* 2.0 l_0_18_33)))
 (let ((?x54830 (* ?x54659 l_0_18_51)))
 (let ((?x54656 (* 2.0 l_0_18_32)))
 (let ((?x54828 (* ?x54656 l_0_18_50)))
 (let ((?x54825 (* 2.0 l_0_18_24)))
 (let ((?x54826 (* ?x54825 l_0_18_6)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x54823 (* ?x54598 l_0_18_5)))
 (let ((?x54820 (* 2.0 l_0_18_22)))
 (let ((?x54821 (* ?x54820 l_0_18_4)))
 (let ((?x54460 (* 2.0 l_0_18_143)))
 (let ((?x54594 (* ?x54460 l_0_18_163)))
 (let ((?x45499 (* 2.0 l_0_18_142)))
 (let ((?x54593 (* ?x45499 l_0_18_162)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x46643 (* ?x54229 l_0_18_87)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x12710 (* ?x54226 l_0_18_86)))
 (let ((?x56330 (+ ?x12710 ?x46643)))
 (let ((?x56334 (- (- ?x56330 (* (* 2.0 l_0_18_114) l_0_18_134)) (* (* 2.0 l_0_18_115) l_0_18_135))))
 (let ((?x56340 (- (- (- (- ?x56334 ?x54593) ?x54594) (* (* 2.0 l_0_18_170) l_0_18_190)) (* (* 2.0 l_0_18_171) l_0_18_191))))
 (let ((?x56344 (+ (+ ?x56340 (* (* 4.0 l_0_18_172) l_0_18_190)) (* (* 4.0 l_0_18_173) l_0_18_191))))
 (let ((?x56349 (+ (+ (+ (+ ?x56344 (* (* 4.0 l_0_18_174) l_0_18_192)) ?x54821) ?x54823) ?x54826)))
 (= (- (- (- (- (- ?x56349 ?x54828) ?x54830) ?x54832) ?x56353) ?x56355) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x54874 (* l_0_18_9 l_0_18_9)))
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x56159 (* ?x54559 l_0_18_92)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x56156 (* ?x54556 l_0_18_91)))
 (let ((?x54872 (* l_0_18_8 l_0_18_8)))
 (let ((?x54870 (* l_0_18_7 l_0_18_7)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56152 (* ?x54553 l_0_18_64)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56149 (* ?x54550 l_0_18_63)))
 (let ((?x54868 (* l_0_18_38 l_0_18_38)))
 (let ((?x54866 (* l_0_18_37 l_0_18_37)))
 (let ((?x54864 (* l_0_18_36 l_0_18_36)))
 (let ((?x54862 (* l_0_18_35 l_0_18_35)))
 (let ((?x56410 (* l_0_18_178 l_0_18_178)))
 (let ((?x56411 (* 2.0 ?x56410)))
 (let ((?x56407 (* l_0_18_177 l_0_18_177)))
 (let ((?x56408 (* 2.0 ?x56407)))
 (let ((?x56404 (* l_0_18_176 l_0_18_176)))
 (let ((?x56405 (* 2.0 ?x56404)))
 (let ((?x56401 (* l_0_18_175 l_0_18_175)))
 (let ((?x56402 (* 2.0 ?x56401)))
 (let ((?x45780 (* l_0_18_10 l_0_18_10)))
 (let ((?x56415 (- (- (- (+ (+ (+ (+ ?x45780 ?x56402) ?x56405) ?x56408) ?x56411) ?x54862) ?x54864) ?x54866)))
 (let ((?x56422 (- (- (+ (+ (+ (+ (- ?x56415 ?x54868) ?x56149) ?x56152) ?x54870) ?x54872) ?x56156) ?x56159)))
 (= (+ ?x56422 ?x54874) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x54560 (* ?x54559 l_0_18_96)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x54557 (* ?x54556 l_0_18_95)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x54554 (* ?x54553 l_0_18_68)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x54551 (* ?x54550 l_0_18_67)))
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x54924 (* ?x54923 l_0_18_42)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x54921 (* ?x54920 l_0_18_41)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x54918 (* ?x54917 l_0_18_40)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x54915 (* ?x54914 l_0_18_39)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x54900 (* ?x54127 l_0_18_9)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x54898 (* ?x54124 l_0_18_8)))
 (let ((?x54121 (* 2.0 l_0_18_11)))
 (let ((?x54896 (* ?x54121 l_0_18_7)))
 (let ((?x56434 (+ (+ (+ (+ (* (* 2.0 l_0_18_10) l_0_18_14) ?x54896) ?x54898) ?x54900) (* (* 4.0 l_0_18_175) l_0_18_179))))
 (let ((?x56440 (+ (+ ?x56434 (* (* 4.0 l_0_18_176) l_0_18_180)) (* (* 4.0 l_0_18_177) l_0_18_181))))
 (let ((?x56446 (- (- (- (+ ?x56440 (* (* 4.0 l_0_18_178) l_0_18_182)) ?x54915) ?x54918) ?x54921)))
 (= (- (- (+ (+ (- ?x56446 ?x54924) ?x54551) ?x54554) ?x54557) ?x54560) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56293 (* ?x54553 l_0_18_73)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56291 (* ?x54550 l_0_18_72)))
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x54979 (* ?x54923 l_0_18_47)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x54977 (* ?x54920 l_0_18_46)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x54975 (* ?x54917 l_0_18_45)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x54973 (* ?x54914 l_0_18_44)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x54971 (* ?x54735 l_0_18_9)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x54969 (* ?x54543 l_0_18_8)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x54967 (* ?x54540 l_0_18_7)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x56267 (* ?x45861 l_0_18_87)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x37027 (* ?x35066 l_0_18_86)))
 (let ((?x12921 (+ (+ (- (- (* (* 2.0 l_0_18_10) l_0_18_19) ?x37027) ?x56267) ?x54967) ?x54969)))
 (let ((?x56463 (+ (+ ?x12921 (* (* 4.0 l_0_18_175) l_0_18_184)) (* (* 4.0 l_0_18_176) l_0_18_185))))
 (let ((?x56467 (+ (+ ?x56463 (* (* 4.0 l_0_18_177) l_0_18_186)) (* (* 4.0 l_0_18_178) l_0_18_187))))
 (let ((?x56474 (+ (+ (- (- (- (- (+ ?x56467 ?x54971) ?x54973) ?x54975) ?x54977) ?x54979) ?x56291) ?x56293)))
 (= ?x56474 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56355 (* ?x54553 l_0_18_79)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56353 (* ?x54550 l_0_18_78)))
 (let ((?x54923 (* 2.0 l_0_18_38)))
 (let ((?x55072 (* ?x54923 l_0_18_53)))
 (let ((?x54920 (* 2.0 l_0_18_37)))
 (let ((?x55070 (* ?x54920 l_0_18_52)))
 (let ((?x54917 (* 2.0 l_0_18_36)))
 (let ((?x55068 (* ?x54917 l_0_18_51)))
 (let ((?x54914 (* 2.0 l_0_18_35)))
 (let ((?x55066 (* ?x54914 l_0_18_50)))
 (let ((?x54825 (* 2.0 l_0_18_24)))
 (let ((?x55064 (* ?x54825 l_0_18_9)))
 (let ((?x54598 (* 2.0 l_0_18_23)))
 (let ((?x55062 (* ?x54598 l_0_18_8)))
 (let ((?x54820 (* 2.0 l_0_18_22)))
 (let ((?x55060 (* ?x54820 l_0_18_7)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x46643 (* ?x54229 l_0_18_87)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x12710 (* ?x54226 l_0_18_86)))
 (let ((?x46302 (+ (- (- (* (* 2.0 l_0_18_10) l_0_18_25) ?x12710) ?x46643) (* (* 4.0 l_0_18_175) l_0_18_190))))
 (let ((?x56481 (+ (+ ?x46302 (* (* 4.0 l_0_18_176) l_0_18_191)) (* (* 4.0 l_0_18_177) l_0_18_192))))
 (let ((?x56486 (+ (+ (+ (+ ?x56481 (* (* 4.0 l_0_18_178) l_0_18_193)) ?x55060) ?x55062) ?x55064)))
 (= (+ (+ (- (- (- (- ?x56486 ?x55066) ?x55068) ?x55070) ?x55072) ?x56353) ?x56355) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x55134 (* l_0_18_43 l_0_18_43)))
 (let ((?x55132 (* l_0_18_42 l_0_18_42)))
 (let ((?x55130 (* l_0_18_41 l_0_18_41)))
 (let ((?x55128 (* l_0_18_40 l_0_18_40)))
 (let ((?x55126 (* l_0_18_39 l_0_18_39)))
 (let ((?x56524 (* l_0_18_183 l_0_18_183)))
 (let ((?x56525 (* 2.0 ?x56524)))
 (let ((?x56521 (* l_0_18_182 l_0_18_182)))
 (let ((?x56522 (* 2.0 ?x56521)))
 (let ((?x56518 (* l_0_18_181 l_0_18_181)))
 (let ((?x56519 (* 2.0 ?x56518)))
 (let ((?x56515 (* l_0_18_180 l_0_18_180)))
 (let ((?x56516 (* 2.0 ?x56515)))
 (let ((?x56512 (* l_0_18_179 l_0_18_179)))
 (let ((?x56513 (* 2.0 ?x56512)))
 (let ((?x55114 (* l_0_18_15 l_0_18_15)))
 (let ((?x55112 (* l_0_18_14 l_0_18_14)))
 (let ((?x55110 (* l_0_18_13 l_0_18_13)))
 (let ((?x56510 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x55110) ?x55112)))
 (let ((?x56527 (- (+ (+ (+ (+ (+ (+ ?x56510 ?x55114) ?x56513) ?x56516) ?x56519) ?x56522) ?x56525) ?x55126)))
 (= (- (- (- (- ?x56527 ?x55128) ?x55130) ?x55132) ?x55134) 0.0))))))))))))))))))))))
(assert
 (let ((?x54169 (* 2.0 l_0_18_43)))
 (let ((?x55191 (* ?x54169 l_0_18_48)))
 (let ((?x54166 (* 2.0 l_0_18_42)))
 (let ((?x55189 (* ?x54166 l_0_18_47)))
 (let ((?x54163 (* 2.0 l_0_18_41)))
 (let ((?x55187 (* ?x54163 l_0_18_46)))
 (let ((?x54160 (* 2.0 l_0_18_40)))
 (let ((?x55185 (* ?x54160 l_0_18_45)))
 (let ((?x54157 (* 2.0 l_0_18_39)))
 (let ((?x55183 (* ?x54157 l_0_18_44)))
 (let ((?x54136 (* 2.0 l_0_18_15)))
 (let ((?x55171 (* ?x54136 l_0_18_20)))
 (let ((?x54130 (* 2.0 l_0_18_14)))
 (let ((?x55169 (* ?x54130 l_0_18_19)))
 (let ((?x54127 (* 2.0 l_0_18_13)))
 (let ((?x55167 (* ?x54127 l_0_18_18)))
 (let ((?x54124 (* 2.0 l_0_18_12)))
 (let ((?x55165 (* ?x54124 l_0_18_17)))
 (let ((?x46970 (+ (+ (+ (+ (* (* 2.0 l_0_18_11) l_0_18_16) ?x55165) ?x55167) ?x55169) ?x55171)))
 (let ((?x46925 (+ (+ ?x46970 (* (* 4.0 l_0_18_179) l_0_18_184)) (* (* 4.0 l_0_18_180) l_0_18_185))))
 (let ((?x56536 (+ (+ ?x46925 (* (* 4.0 l_0_18_181) l_0_18_186)) (* (* 4.0 l_0_18_182) l_0_18_187))))
 (let ((?x56541 (- (- (- (+ ?x56536 (* (* 4.0 l_0_18_183) l_0_18_188)) ?x55183) ?x55185) ?x55187)))
 (= (- (- ?x56541 ?x55189) ?x55191) 0.0))))))))))))))))))))))))
(assert
 (let ((?x55315 (* l_0_18_49 l_0_18_49)))
 (let ((?x55313 (* l_0_18_48 l_0_18_48)))
 (let ((?x55311 (* l_0_18_47 l_0_18_47)))
 (let ((?x55309 (* l_0_18_46 l_0_18_46)))
 (let ((?x55307 (* l_0_18_45 l_0_18_45)))
 (let ((?x55305 (* l_0_18_44 l_0_18_44)))
 (let ((?x55303 (* l_0_18_21 l_0_18_21)))
 (let ((?x55301 (* l_0_18_20 l_0_18_20)))
 (let ((?x55299 (* l_0_18_19 l_0_18_19)))
 (let ((?x56556 (* l_0_18_189 l_0_18_189)))
 (let ((?x56557 (* 2.0 ?x56556)))
 (let ((?x56553 (* l_0_18_188 l_0_18_188)))
 (let ((?x56554 (* 2.0 ?x56553)))
 (let ((?x56550 (* l_0_18_187 l_0_18_187)))
 (let ((?x56551 (* 2.0 ?x56550)))
 (let ((?x46662 (* l_0_18_186 l_0_18_186)))
 (let ((?x47021 (* 2.0 ?x46662)))
 (let ((?x37222 (* l_0_18_185 l_0_18_185)))
 (let ((?x47027 (* 2.0 ?x37222)))
 (let ((?x46621 (* l_0_18_184 l_0_18_184)))
 (let ((?x47028 (* 2.0 ?x46621)))
 (let ((?x55297 (* l_0_18_18 l_0_18_18)))
 (let ((?x47026 (+ (+ (+ (* l_0_18_16 l_0_18_16) (* l_0_18_17 l_0_18_17)) ?x55297) ?x47028)))
 (let ((?x56560 (+ (+ (+ (+ (+ (+ (+ ?x47026 ?x47027) ?x47021) ?x56551) ?x56554) ?x56557) ?x55299) ?x55301)))
 (let ((?x56567 (- (- (- (- (- (- (+ ?x56560 ?x55303) ?x55305) ?x55307) ?x55309) ?x55311) ?x55313) ?x55315)))
 (= ?x56567 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x55652 (* ?x54403 l_0_18_86)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x55650 (* ?x54400 l_0_18_58)))
 (let ((?x55406 (* (* 2.0 l_0_18_49) l_0_18_55)))
 (let ((?x55403 (* (* 2.0 l_0_18_48) l_0_18_54)))
 (let ((?x55400 (* (* 2.0 l_0_18_47) l_0_18_53)))
 (let ((?x55397 (* (* 2.0 l_0_18_46) l_0_18_52)))
 (let ((?x55394 (* (* 2.0 l_0_18_45) l_0_18_51)))
 (let ((?x55391 (* (* 2.0 l_0_18_44) l_0_18_50)))
 (let ((?x55388 (* (* 2.0 l_0_18_21) l_0_18_27)))
 (let ((?x55385 (* (* 2.0 l_0_18_20) l_0_18_26)))
 (let ((?x55382 (* (* 2.0 l_0_18_19) l_0_18_25)))
 (let ((?x54735 (* 2.0 l_0_18_18)))
 (let ((?x55379 (* ?x54735 l_0_18_24)))
 (let ((?x54543 (* 2.0 l_0_18_17)))
 (let ((?x55377 (* ?x54543 l_0_18_23)))
 (let ((?x54540 (* 2.0 l_0_18_16)))
 (let ((?x55369 (* ?x54540 l_0_18_22)))
 (let ((?x56575 (+ (+ (+ (+ ?x55369 ?x55377) ?x55379) (* (* 4.0 l_0_18_184) l_0_18_190)) (* (* 4.0 l_0_18_185) l_0_18_191))))
 (let ((?x56581 (+ (+ ?x56575 (* (* 4.0 l_0_18_186) l_0_18_192)) (* (* 4.0 l_0_18_187) l_0_18_193))))
 (let ((?x56587 (+ (+ ?x56581 (* (* 4.0 l_0_18_188) l_0_18_194)) (* (* 4.0 l_0_18_189) l_0_18_195))))
 (let ((?x56594 (- (- (- (- (+ (+ (+ ?x56587 ?x55382) ?x55385) ?x55388) ?x55391) ?x55394) ?x55397) ?x55400)))
 (= (+ (- (- (- ?x56594 ?x55403) ?x55406) ?x55650) ?x55652) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x55525 (* l_0_18_56 l_0_18_56)))
 (let ((?x55523 (* l_0_18_55 l_0_18_55)))
 (let ((?x55521 (* l_0_18_54 l_0_18_54)))
 (let ((?x55519 (* l_0_18_53 l_0_18_53)))
 (let ((?x55517 (* l_0_18_52 l_0_18_52)))
 (let ((?x55515 (* l_0_18_51 l_0_18_51)))
 (let ((?x55513 (* l_0_18_50 l_0_18_50)))
 (let ((?x55511 (* l_0_18_28 l_0_18_28)))
 (let ((?x55509 (* l_0_18_27 l_0_18_27)))
 (let ((?x55507 (* l_0_18_26 l_0_18_26)))
 (let ((?x55505 (* l_0_18_25 l_0_18_25)))
 (let ((?x55503 (* l_0_18_24 l_0_18_24)))
 (let ((?x55501 (* l_0_18_23 l_0_18_23)))
 (let ((?x55499 (* l_0_18_22 l_0_18_22)))
 (let ((?x37461 (* l_0_18_196 l_0_18_196)))
 (let ((?x56610 (* 2.0 ?x37461)))
 (let ((?x37408 (* l_0_18_195 l_0_18_195)))
 (let ((?x36112 (* 2.0 ?x37408)))
 (let ((?x26447 (* l_0_18_194 l_0_18_194)))
 (let ((?x37406 (* 2.0 ?x26447)))
 (let ((?x36106 (* l_0_18_193 l_0_18_193)))
 (let ((?x26442 (* 2.0 ?x36106)))
 (let ((?x13492 (* l_0_18_192 l_0_18_192)))
 (let ((?x37464 (* 2.0 ?x13492)))
 (let ((?x47114 (* l_0_18_191 l_0_18_191)))
 (let ((?x36115 (* 2.0 ?x47114)))
 (let ((?x26425 (* l_0_18_190 l_0_18_190)))
 (let ((?x13563 (* 2.0 ?x26425)))
 (let ((?x56612 (+ (+ (+ (+ (+ (+ (+ ?x13563 ?x36115) ?x37464) ?x26442) ?x37406) ?x36112) ?x56610) ?x55499)))
 (let ((?x56619 (- (+ (+ (+ (+ (+ (+ ?x56612 ?x55501) ?x55503) ?x55505) ?x55507) ?x55509) ?x55511) ?x55513)))
 (= (- (- (- (- (- (- ?x56619 ?x55515) ?x55517) ?x55519) ?x55521) ?x55523) ?x55525) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x53935 (* l_0_18_85 l_0_18_85)))
 (let ((?x53933 (* l_0_18_57 l_0_18_57)))
 (let ((?x56633 (- (* (* (- 2.0) l_0_18_212) l_0_18_218) (* (* 2.0 l_0_18_213) l_0_18_219))))
 (let ((?x56639 (- (- ?x56633 (* (* 2.0 l_0_18_214) l_0_18_220)) (* (* 2.0 l_0_18_215) l_0_18_221))))
 (let ((?x56645 (- (- ?x56639 (* (* 2.0 l_0_18_216) l_0_18_222)) (* (* 2.0 l_0_18_217) l_0_18_223))))
 (let ((?x56651 (- (- ?x56645 (* (* 2.0 l_0_18_240) l_0_18_246)) (* (* 2.0 l_0_18_241) l_0_18_247))))
 (let ((?x56657 (- (- ?x56651 (* (* 2.0 l_0_18_242) l_0_18_248)) (* (* 2.0 l_0_18_243) l_0_18_249))))
 (let ((?x56663 (- (- ?x56657 (* (* 2.0 l_0_18_244) l_0_18_250)) (* (* 2.0 l_0_18_245) l_0_18_251))))
 (let ((?x56669 (- (- ?x56663 (* (* 2.0 l_0_18_268) l_0_18_274)) (* (* 2.0 l_0_18_269) l_0_18_275))))
 (let ((?x56675 (- (- ?x56669 (* (* 2.0 l_0_18_270) l_0_18_276)) (* (* 2.0 l_0_18_271) l_0_18_277))))
 (let ((?x56681 (- (- ?x56675 (* (* 2.0 l_0_18_272) l_0_18_278)) (* (* 2.0 l_0_18_273) l_0_18_279))))
 (let ((?x56687 (- (- ?x56681 (* (* 2.0 l_0_18_296) l_0_18_302)) (* (* 2.0 l_0_18_297) l_0_18_303))))
 (let ((?x56693 (- (- ?x56687 (* (* 2.0 l_0_18_298) l_0_18_304)) (* (* 2.0 l_0_18_299) l_0_18_305))))
 (let ((?x56699 (- (- ?x56693 (* (* 2.0 l_0_18_300) l_0_18_306)) (* (* 2.0 l_0_18_301) l_0_18_307))))
 (let ((?x56705 (- (- ?x56699 (* (* 2.0 l_0_18_324) l_0_18_330)) (* (* 2.0 l_0_18_325) l_0_18_331))))
 (let ((?x56711 (- (- ?x56705 (* (* 2.0 l_0_18_326) l_0_18_332)) (* (* 2.0 l_0_18_327) l_0_18_333))))
 (let ((?x56717 (- (- ?x56711 (* (* 2.0 l_0_18_328) l_0_18_334)) (* (* 2.0 l_0_18_329) l_0_18_335))))
 (let ((?x56723 (- (- ?x56717 (* (* 2.0 l_0_18_352) l_0_18_358)) (* (* 2.0 l_0_18_353) l_0_18_359))))
 (let ((?x56729 (- (- ?x56723 (* (* 2.0 l_0_18_354) l_0_18_360)) (* (* 2.0 l_0_18_355) l_0_18_361))))
 (let ((?x56735 (- (- ?x56729 (* (* 2.0 l_0_18_356) l_0_18_362)) (* (* 2.0 l_0_18_357) l_0_18_363))))
 (= (+ (- ?x56735 ?x53933) ?x53935) 0.0))))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x56876 (* ?x54403 l_0_18_88)))
 (let ((?x56874 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x56871 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x56868 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x56865 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x56862 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x56859 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x56856 (* ?x54400 l_0_18_60)))
 (let ((?x55375 (* (* 2.0 l_0_18_161) l_0_18_167)))
 (let ((?x55372 (* (* 2.0 l_0_18_160) l_0_18_166)))
 (let ((?x55367 (* (* 2.0 l_0_18_159) l_0_18_165)))
 (let ((?x55364 (* (* 2.0 l_0_18_158) l_0_18_164)))
 (let ((?x11177 (* (* 2.0 l_0_18_157) l_0_18_163)))
 (let ((?x45909 (* (* 2.0 l_0_18_156) l_0_18_162)))
 (let ((?x47371 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x47349 (* ?x35101 l_0_18_110)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x47321 (* ?x45854 l_0_18_109)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x47314 (* ?x45846 l_0_18_108)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x47343 (* ?x45861 l_0_18_107)))
 (let ((?x47359 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_106) ?x47343) ?x47314) ?x47321) ?x47349)))
 (let ((?x37621 (+ ?x47359 ?x47371)))
 (let ((?x56819 (- (- ?x37621 (* (* 2.0 l_0_18_128) l_0_18_134)) (* (* 2.0 l_0_18_129) l_0_18_135))))
 (let ((?x56825 (- (- ?x56819 (* (* 2.0 l_0_18_130) l_0_18_136)) (* (* 2.0 l_0_18_131) l_0_18_137))))
 (let ((?x56831 (- (- ?x56825 (* (* 2.0 l_0_18_132) l_0_18_138)) (* (* 2.0 l_0_18_133) l_0_18_139))))
 (let ((?x56840 (- (- (- (- (- (- (- ?x56831 ?x45909) ?x11177) ?x55364) ?x55367) ?x55372) ?x55375) (* (* 2.0 l_0_18_184) l_0_18_190))))
 (let ((?x56846 (- (- ?x56840 (* (* 2.0 l_0_18_185) l_0_18_191)) (* (* 2.0 l_0_18_186) l_0_18_192))))
 (let ((?x56852 (- (- ?x56846 (* (* 2.0 l_0_18_187) l_0_18_193)) (* (* 2.0 l_0_18_188) l_0_18_194))))
 (let ((?x56863 (- (- (- (- ?x56852 (* (* 2.0 l_0_18_189) l_0_18_195)) ?x56856) ?x56859) ?x56862)))
 (= (+ (- (- (- (- ?x56863 ?x56865) ?x56868) ?x56871) ?x56874) ?x56876) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x56935 (* ?x54403 l_0_18_91)))
 (let ((?x56874 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x56871 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x56868 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x56865 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x56862 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x56859 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x56927 (* ?x54400 l_0_18_63)))
 (let ((?x47371 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x47349 (* ?x35101 l_0_18_110)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x47321 (* ?x45854 l_0_18_109)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x47314 (* ?x45846 l_0_18_108)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x47343 (* ?x45861 l_0_18_107)))
 (let ((?x56925 (- (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_106) ?x47343) ?x47314) ?x47321) ?x47349)))
 (let ((?x56933 (+ (+ (+ (+ (+ (- (- ?x56925 ?x47371) ?x56927) ?x56859) ?x56862) ?x56865) ?x56868) ?x56871)))
 (= (+ (+ ?x56933 ?x56874) ?x56935) 0.0)))))))))))))))))))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x47543 (* ?x54400 l_0_18_72)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x47545 (* ?x35066 l_0_18_85)))
 (= (- ?x47545 ?x47543) 0.0))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x37705 (* ?x54400 l_0_18_78)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x47574 (* ?x54226 l_0_18_85)))
 (= (- ?x47574 ?x37705) 0.0))))))
(assert
 (let ((?x55981 (* l_0_18_87 l_0_18_87)))
 (let ((?x55979 (* l_0_18_86 l_0_18_86)))
 (let ((?x56954 (+ (- (* (- l_0_18_58) l_0_18_58) (* l_0_18_59 l_0_18_59)) ?x55979)))
 (= (+ ?x56954 ?x55981) 0.0)))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x56104 (* ?x54559 l_0_18_89)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x56102 (* ?x54556 l_0_18_88)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56099 (* ?x54553 l_0_18_61)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_58) l_0_18_60) ?x56099) ?x56102) ?x56104) 0.0))))))))
(assert
 (let ((?x54559 (* 2.0 l_0_18_87)))
 (let ((?x56159 (* ?x54559 l_0_18_92)))
 (let ((?x54556 (* 2.0 l_0_18_86)))
 (let ((?x56156 (* ?x54556 l_0_18_91)))
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56152 (* ?x54553 l_0_18_64)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_58) l_0_18_63) ?x56152) ?x56156) ?x56159) 0.0))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56293 (* ?x54553 l_0_18_73)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56291 (* ?x54550 l_0_18_72)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x56267 (* ?x45861 l_0_18_87)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x37027 (* ?x35066 l_0_18_86)))
 (let ((?x56268 (+ ?x37027 ?x56267)))
 (= (- (- ?x56268 ?x56291) ?x56293) 0.0)))))))))))
(assert
 (let ((?x54553 (* 2.0 l_0_18_59)))
 (let ((?x56355 (* ?x54553 l_0_18_79)))
 (let ((?x54550 (* 2.0 l_0_18_58)))
 (let ((?x56353 (* ?x54550 l_0_18_78)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x46643 (* ?x54229 l_0_18_87)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x12710 (* ?x54226 l_0_18_86)))
 (let ((?x56330 (+ ?x12710 ?x46643)))
 (= (- (- ?x56330 ?x56353) ?x56355) 0.0)))))))))))
(assert
 (let ((?x57005 (* l_0_18_90 l_0_18_90)))
 (let ((?x57003 (* l_0_18_89 l_0_18_89)))
 (let ((?x57001 (* l_0_18_88 l_0_18_88)))
 (let ((?x56999 (* l_0_18_62 l_0_18_62)))
 (let ((?x57000 (- (- (* (- l_0_18_60) l_0_18_60) (* l_0_18_61 l_0_18_61)) ?x56999)))
 (= (+ (+ (+ ?x57000 ?x57001) ?x57003) ?x57005) 0.0)))))))
(assert
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x57032 (* ?x54759 l_0_18_93)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x57030 (* ?x54756 l_0_18_92)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x57028 (* ?x54753 l_0_18_91)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57026 (* ?x54750 l_0_18_65)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57024 (* ?x54747 l_0_18_64)))
 (let ((?x57031 (+ (+ (- (- (* (* (- 2.0) l_0_18_60) l_0_18_63) ?x57024) ?x57026) ?x57028) ?x57030)))
 (= (+ ?x57031 ?x57032) 0.0)))))))))))))
(assert
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57060 (* ?x54750 l_0_18_74)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57058 (* ?x54747 l_0_18_73)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57056 (* ?x54744 l_0_18_72)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x57054 (* ?x45846 l_0_18_90)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x57052 (* ?x45861 l_0_18_89)))
 (let ((?x57055 (+ (+ (* (* 2.0 l_0_18_100) l_0_18_88) ?x57052) ?x57054)))
 (= (- (- (- ?x57055 ?x57056) ?x57058) ?x57060) 0.0)))))))))))))
(assert
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57093 (* ?x54750 l_0_18_80)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57091 (* ?x54747 l_0_18_79)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57089 (* ?x54744 l_0_18_78)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x57087 (* ?x54232 l_0_18_90)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x57085 (* ?x54229 l_0_18_89)))
 (let ((?x57088 (+ (+ (* (* 2.0 l_0_18_106) l_0_18_88) ?x57085) ?x57087)))
 (= (- (- (- ?x57088 ?x57089) ?x57091) ?x57093) 0.0)))))))))))))
(assert
 (let ((?x57131 (* l_0_18_94 l_0_18_94)))
 (let ((?x57129 (* l_0_18_93 l_0_18_93)))
 (let ((?x57127 (* l_0_18_92 l_0_18_92)))
 (let ((?x57125 (* l_0_18_91 l_0_18_91)))
 (let ((?x57123 (* l_0_18_66 l_0_18_66)))
 (let ((?x57121 (* l_0_18_65 l_0_18_65)))
 (let ((?x57122 (- (- (* (- l_0_18_63) l_0_18_63) (* l_0_18_64 l_0_18_64)) ?x57121)))
 (= (+ (+ (+ (+ (- ?x57122 ?x57123) ?x57125) ?x57127) ?x57129) ?x57131) 0.0)))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57152 (* ?x54990 l_0_18_75)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57150 (* ?x54987 l_0_18_74)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57148 (* ?x54984 l_0_18_73)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57146 (* ?x54981 l_0_18_72)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x57144 (* ?x45854 l_0_18_94)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x57142 (* ?x45846 l_0_18_93)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x57140 (* ?x45861 l_0_18_92)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x37804 (* ?x35066 l_0_18_91)))
 (let ((?x57153 (- (- (- (- (+ (+ (+ ?x37804 ?x57140) ?x57142) ?x57144) ?x57146) ?x57148) ?x57150) ?x57152)))
 (= ?x57153 0.0)))))))))))))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57192 (* ?x54990 l_0_18_81)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57190 (* ?x54987 l_0_18_80)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57188 (* ?x54984 l_0_18_79)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57186 (* ?x54981 l_0_18_78)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x57184 (* ?x54235 l_0_18_94)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x57182 (* ?x54232 l_0_18_93)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x57180 (* ?x54229 l_0_18_92)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x57179 (* ?x54226 l_0_18_91)))
 (let ((?x57193 (- (- (- (- (+ (+ (+ ?x57179 ?x57180) ?x57182) ?x57184) ?x57186) ?x57188) ?x57190) ?x57192)))
 (= ?x57193 0.0)))))))))))))))))))
(assert
 (let ((?x57249 (* l_0_18_77 l_0_18_77)))
 (let ((?x57247 (* l_0_18_76 l_0_18_76)))
 (let ((?x57245 (* l_0_18_75 l_0_18_75)))
 (let ((?x57243 (* l_0_18_74 l_0_18_74)))
 (let ((?x57241 (* l_0_18_73 l_0_18_73)))
 (let ((?x57239 (* l_0_18_72 l_0_18_72)))
 (let ((?x57237 (* l_0_18_105 l_0_18_105)))
 (let ((?x57235 (* l_0_18_104 l_0_18_104)))
 (let ((?x57233 (* l_0_18_103 l_0_18_103)))
 (let ((?x57231 (* l_0_18_102 l_0_18_102)))
 (let ((?x57232 (+ (+ (* l_0_18_100 l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x57231)))
 (let ((?x57238 (+ (+ (+ ?x57232 ?x57233) ?x57235) ?x57237)))
 (= (- (- (- (- (- (- ?x57238 ?x57239) ?x57241) ?x57243) ?x57245) ?x57247) ?x57249) 0.0))))))))))))))
(assert
 (let ((?x56874 (* (* 2.0 l_0_18_77) l_0_18_83)))
 (let ((?x56871 (* (* 2.0 l_0_18_76) l_0_18_82)))
 (let ((?x56868 (* (* 2.0 l_0_18_75) l_0_18_81)))
 (let ((?x56865 (* (* 2.0 l_0_18_74) l_0_18_80)))
 (let ((?x56862 (* (* 2.0 l_0_18_73) l_0_18_79)))
 (let ((?x56859 (* (* 2.0 l_0_18_72) l_0_18_78)))
 (let ((?x47371 (* (* 2.0 l_0_18_105) l_0_18_111)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x47349 (* ?x35101 l_0_18_110)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x47321 (* ?x45854 l_0_18_109)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x47314 (* ?x45846 l_0_18_108)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x47343 (* ?x45861 l_0_18_107)))
 (let ((?x47359 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_106) ?x47343) ?x47314) ?x47321) ?x47349)))
 (let ((?x37621 (+ ?x47359 ?x47371)))
 (= (- (- (- (- (- (- ?x37621 ?x56859) ?x56862) ?x56865) ?x56868) ?x56871) ?x56874) 0.0)))))))))))))))))))
(assert
 (let ((?x57306 (* l_0_18_84 l_0_18_84)))
 (let ((?x57304 (* l_0_18_83 l_0_18_83)))
 (let ((?x57302 (* l_0_18_82 l_0_18_82)))
 (let ((?x57300 (* l_0_18_81 l_0_18_81)))
 (let ((?x57298 (* l_0_18_80 l_0_18_80)))
 (let ((?x57296 (* l_0_18_79 l_0_18_79)))
 (let ((?x57294 (* l_0_18_78 l_0_18_78)))
 (let ((?x57292 (* l_0_18_112 l_0_18_112)))
 (let ((?x57290 (* l_0_18_111 l_0_18_111)))
 (let ((?x57288 (* l_0_18_110 l_0_18_110)))
 (let ((?x57286 (* l_0_18_109 l_0_18_109)))
 (let ((?x57284 (* l_0_18_108 l_0_18_108)))
 (let ((?x57285 (+ (+ (* l_0_18_106 l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57284)))
 (let ((?x57293 (+ (+ (+ (+ ?x57285 ?x57286) ?x57288) ?x57290) ?x57292)))
 (let ((?x57307 (- (- (- (- (- (- (- ?x57293 ?x57294) ?x57296) ?x57298) ?x57300) ?x57302) ?x57304) ?x57306)))
 (= ?x57307 0.0)))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x56876 (* ?x54403 l_0_18_88)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x56856 (* ?x54400 l_0_18_60)))
 (let ((?x57352 (* l_0_18_342 l_0_18_342)))
 (let ((?x57350 (* l_0_18_341 l_0_18_341)))
 (let ((?x57348 (* l_0_18_340 l_0_18_340)))
 (let ((?x57346 (* l_0_18_314 l_0_18_314)))
 (let ((?x57344 (* l_0_18_313 l_0_18_313)))
 (let ((?x57342 (* l_0_18_312 l_0_18_312)))
 (let ((?x57340 (* l_0_18_286 l_0_18_286)))
 (let ((?x57338 (* l_0_18_285 l_0_18_285)))
 (let ((?x57336 (* l_0_18_284 l_0_18_284)))
 (let ((?x57334 (* l_0_18_258 l_0_18_258)))
 (let ((?x57332 (* l_0_18_257 l_0_18_257)))
 (let ((?x57330 (* l_0_18_256 l_0_18_256)))
 (let ((?x57328 (* l_0_18_230 l_0_18_230)))
 (let ((?x57326 (* l_0_18_229 l_0_18_229)))
 (let ((?x57324 (* l_0_18_228 l_0_18_228)))
 (let ((?x57322 (* l_0_18_202 l_0_18_202)))
 (let ((?x57320 (* l_0_18_201 l_0_18_201)))
 (let ((?x57318 (* l_0_18_200 l_0_18_200)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54256 (* ?x54133 l_0_18_144)))
 (let ((?x57317 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_116) ?x54256) (* (* 2.0 l_0_18_169) l_0_18_172))))
 (let ((?x57331 (- (- (- (- (- (- (- ?x57317 ?x57318) ?x57320) ?x57322) ?x57324) ?x57326) ?x57328) ?x57330)))
 (let ((?x57345 (- (- (- (- (- (- (- ?x57331 ?x57332) ?x57334) ?x57336) ?x57338) ?x57340) ?x57342) ?x57344)))
 (= (+ (- (- (- (- (- ?x57345 ?x57346) ?x57348) ?x57350) ?x57352) ?x56856) ?x56876) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x56935 (* ?x54403 l_0_18_91)))
 (let ((?x56876 (* ?x54403 l_0_18_88)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x56927 (* ?x54400 l_0_18_63)))
 (let ((?x56856 (* ?x54400 l_0_18_60)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54372 (* ?x54133 l_0_18_147)))
 (let ((?x37854 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_119) ?x54372) (* (* 2.0 l_0_18_169) l_0_18_175))))
 (let ((?x57390 (- (- ?x37854 (* (* 2.0 l_0_18_200) l_0_18_203)) (* (* 2.0 l_0_18_201) l_0_18_204))))
 (let ((?x57396 (- (- ?x57390 (* (* 2.0 l_0_18_202) l_0_18_205)) (* (* 2.0 l_0_18_228) l_0_18_231))))
 (let ((?x57402 (- (- ?x57396 (* (* 2.0 l_0_18_229) l_0_18_232)) (* (* 2.0 l_0_18_230) l_0_18_233))))
 (let ((?x57408 (- (- ?x57402 (* (* 2.0 l_0_18_256) l_0_18_259)) (* (* 2.0 l_0_18_257) l_0_18_260))))
 (let ((?x57414 (- (- ?x57408 (* (* 2.0 l_0_18_258) l_0_18_261)) (* (* 2.0 l_0_18_284) l_0_18_287))))
 (let ((?x57420 (- (- ?x57414 (* (* 2.0 l_0_18_285) l_0_18_288)) (* (* 2.0 l_0_18_286) l_0_18_289))))
 (let ((?x57426 (- (- ?x57420 (* (* 2.0 l_0_18_312) l_0_18_315)) (* (* 2.0 l_0_18_313) l_0_18_316))))
 (let ((?x57432 (- (- ?x57426 (* (* 2.0 l_0_18_314) l_0_18_317)) (* (* 2.0 l_0_18_340) l_0_18_343))))
 (let ((?x57438 (- (- ?x57432 (* (* 2.0 l_0_18_341) l_0_18_344)) (* (* 2.0 l_0_18_342) l_0_18_345))))
 (= (+ (- (- (+ ?x57438 ?x56856) ?x56927) ?x56876) ?x56935) 0.0))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x54404 (* ?x54403 l_0_18_95)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x54401 (* ?x54400 l_0_18_67)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x45370 (* ?x54133 l_0_18_151)))
 (let ((?x57496 (- (- (* (* (- 2.0) l_0_18_113) l_0_18_123) ?x45370) (* (* 2.0 l_0_18_169) l_0_18_179))))
 (let ((?x57500 (- (- ?x57496 (* (* 2.0 l_0_18_200) l_0_18_207)) (* (* 2.0 l_0_18_201) l_0_18_208))))
 (let ((?x57504 (- (- ?x57500 (* (* 2.0 l_0_18_202) l_0_18_209)) (* (* 2.0 l_0_18_228) l_0_18_235))))
 (let ((?x57508 (- (- ?x57504 (* (* 2.0 l_0_18_229) l_0_18_236)) (* (* 2.0 l_0_18_230) l_0_18_237))))
 (let ((?x57512 (- (- ?x57508 (* (* 2.0 l_0_18_256) l_0_18_263)) (* (* 2.0 l_0_18_257) l_0_18_264))))
 (let ((?x57516 (- (- ?x57512 (* (* 2.0 l_0_18_258) l_0_18_265)) (* (* 2.0 l_0_18_284) l_0_18_291))))
 (let ((?x57520 (- (- ?x57516 (* (* 2.0 l_0_18_285) l_0_18_292)) (* (* 2.0 l_0_18_286) l_0_18_293))))
 (let ((?x57524 (- (- ?x57520 (* (* 2.0 l_0_18_312) l_0_18_319)) (* (* 2.0 l_0_18_313) l_0_18_320))))
 (let ((?x57528 (- (- ?x57524 (* (* 2.0 l_0_18_314) l_0_18_321)) (* (* 2.0 l_0_18_340) l_0_18_347))))
 (let ((?x57532 (- (- ?x57528 (* (* 2.0 l_0_18_341) l_0_18_348)) (* (* 2.0 l_0_18_342) l_0_18_349))))
 (= (+ (- ?x57532 ?x54401) ?x54404) 0.0))))))))))))))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x47543 (* ?x54400 l_0_18_72)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54390 (* ?x54133 l_0_18_156)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x47545 (* ?x35066 l_0_18_85)))
 (let ((?x57576 (- (- (- ?x47545 (* (* 2.0 l_0_18_113) l_0_18_128)) ?x54390) (* (* 2.0 l_0_18_169) l_0_18_184))))
 (let ((?x57580 (- (- ?x57576 (* (* 2.0 l_0_18_200) l_0_18_212)) (* (* 2.0 l_0_18_201) l_0_18_213))))
 (let ((?x57584 (- (- ?x57580 (* (* 2.0 l_0_18_202) l_0_18_214)) (* (* 2.0 l_0_18_228) l_0_18_240))))
 (let ((?x57588 (- (- ?x57584 (* (* 2.0 l_0_18_229) l_0_18_241)) (* (* 2.0 l_0_18_230) l_0_18_242))))
 (let ((?x57592 (- (- ?x57588 (* (* 2.0 l_0_18_256) l_0_18_268)) (* (* 2.0 l_0_18_257) l_0_18_269))))
 (let ((?x57596 (- (- ?x57592 (* (* 2.0 l_0_18_258) l_0_18_270)) (* (* 2.0 l_0_18_284) l_0_18_296))))
 (let ((?x57600 (- (- ?x57596 (* (* 2.0 l_0_18_285) l_0_18_297)) (* (* 2.0 l_0_18_286) l_0_18_298))))
 (let ((?x57604 (- (- ?x57600 (* (* 2.0 l_0_18_312) l_0_18_324)) (* (* 2.0 l_0_18_313) l_0_18_325))))
 (let ((?x57608 (- (- ?x57604 (* (* 2.0 l_0_18_314) l_0_18_326)) (* (* 2.0 l_0_18_340) l_0_18_352))))
 (let ((?x57612 (- (- ?x57608 (* (* 2.0 l_0_18_341) l_0_18_353)) (* (* 2.0 l_0_18_342) l_0_18_354))))
 (= (- ?x57612 ?x47543) 0.0))))))))))))))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x37705 (* ?x54400 l_0_18_78)))
 (let ((?x54133 (* 2.0 l_0_18_141)))
 (let ((?x54422 (* ?x54133 l_0_18_162)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x47574 (* ?x54226 l_0_18_85)))
 (let ((?x57665 (- (- (- ?x47574 (* (* 2.0 l_0_18_113) l_0_18_134)) ?x54422) (* (* 2.0 l_0_18_169) l_0_18_190))))
 (let ((?x57669 (- (- ?x57665 (* (* 2.0 l_0_18_200) l_0_18_218)) (* (* 2.0 l_0_18_201) l_0_18_219))))
 (let ((?x57673 (- (- ?x57669 (* (* 2.0 l_0_18_202) l_0_18_220)) (* (* 2.0 l_0_18_228) l_0_18_246))))
 (let ((?x57677 (- (- ?x57673 (* (* 2.0 l_0_18_229) l_0_18_247)) (* (* 2.0 l_0_18_230) l_0_18_248))))
 (let ((?x57681 (- (- ?x57677 (* (* 2.0 l_0_18_256) l_0_18_274)) (* (* 2.0 l_0_18_257) l_0_18_275))))
 (let ((?x57685 (- (- ?x57681 (* (* 2.0 l_0_18_258) l_0_18_276)) (* (* 2.0 l_0_18_284) l_0_18_302))))
 (let ((?x57689 (- (- ?x57685 (* (* 2.0 l_0_18_285) l_0_18_303)) (* (* 2.0 l_0_18_286) l_0_18_304))))
 (let ((?x57693 (- (- ?x57689 (* (* 2.0 l_0_18_312) l_0_18_330)) (* (* 2.0 l_0_18_313) l_0_18_331))))
 (let ((?x57697 (- (- ?x57693 (* (* 2.0 l_0_18_314) l_0_18_332)) (* (* 2.0 l_0_18_340) l_0_18_358))))
 (let ((?x57701 (- (- ?x57697 (* (* 2.0 l_0_18_341) l_0_18_359)) (* (* 2.0 l_0_18_342) l_0_18_360))))
 (= (- ?x57701 ?x37705) 0.0))))))))))))))))))
(assert
 (let ((?x57005 (* l_0_18_90 l_0_18_90)))
 (let ((?x57003 (* l_0_18_89 l_0_18_89)))
 (let ((?x57001 (* l_0_18_88 l_0_18_88)))
 (let ((?x56999 (* l_0_18_62 l_0_18_62)))
 (let ((?x56997 (* l_0_18_61 l_0_18_61)))
 (let ((?x57009 (* l_0_18_60 l_0_18_60)))
 (let ((?x56089 (* l_0_18_174 l_0_18_174)))
 (let ((?x56086 (* l_0_18_173 l_0_18_173)))
 (let ((?x56083 (* l_0_18_172 l_0_18_172)))
 (let ((?x54629 (* l_0_18_146 l_0_18_146)))
 (let ((?x54627 (* l_0_18_145 l_0_18_145)))
 (let ((?x54626 (* l_0_18_144 l_0_18_144)))
 (let ((?x57764 (* l_0_18_118 l_0_18_118)))
 (let ((?x57765 (- (- (* (- l_0_18_116) l_0_18_116) (* l_0_18_117 l_0_18_117)) ?x57764)))
 (let ((?x57772 (- (- (- (- (- (- (- ?x57765 ?x54626) ?x54627) ?x54629) ?x56083) ?x56086) ?x56089) ?x57009)))
 (= (+ (+ (+ (- (- ?x57772 ?x56997) ?x56999) ?x57001) ?x57003) ?x57005) 0.0)))))))))))))))))
(assert
 (let ((?x57005 (* l_0_18_90 l_0_18_90)))
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x57032 (* ?x54759 l_0_18_93)))
 (let ((?x57003 (* l_0_18_89 l_0_18_89)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x57030 (* ?x54756 l_0_18_92)))
 (let ((?x57001 (* l_0_18_88 l_0_18_88)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x57028 (* ?x54753 l_0_18_91)))
 (let ((?x56999 (* l_0_18_62 l_0_18_62)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57026 (* ?x54750 l_0_18_65)))
 (let ((?x56997 (* l_0_18_61 l_0_18_61)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57024 (* ?x54747 l_0_18_64)))
 (let ((?x57009 (* l_0_18_60 l_0_18_60)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57813 (* ?x54744 l_0_18_63)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54654 (* ?x54653 l_0_18_149)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54651 (* ?x45628 l_0_18_148)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x45627 (* ?x34935 l_0_18_147)))
 (let ((?x57797 (- (* (* (- 2.0) l_0_18_116) l_0_18_119) (* (* 2.0 l_0_18_117) l_0_18_120))))
 (let ((?x57803 (- (- (- (- ?x57797 (* (* 2.0 l_0_18_118) l_0_18_121)) ?x45627) ?x54651) ?x54654)))
 (let ((?x57809 (- (- ?x57803 (* (* 2.0 l_0_18_172) l_0_18_175)) (* (* 2.0 l_0_18_173) l_0_18_176))))
 (let ((?x57816 (- (+ (- (- ?x57809 (* (* 2.0 l_0_18_174) l_0_18_177)) ?x57813) ?x57009) ?x57024)))
 (let ((?x57823 (- (+ (- (+ (+ (- (+ ?x57816 ?x56997) ?x57026) ?x56999) ?x57028) ?x57001) ?x57030) ?x57003)))
 (= (- (+ ?x57823 ?x57032) ?x57005) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x54760 (* ?x54759 l_0_18_97)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x54757 (* ?x54756 l_0_18_96)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x54754 (* ?x54753 l_0_18_95)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x54751 (* ?x54750 l_0_18_69)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x54748 (* ?x54747 l_0_18_68)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x54745 (* ?x54744 l_0_18_67)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54711 (* ?x54653 l_0_18_153)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54709 (* ?x45628 l_0_18_152)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x54707 (* ?x34935 l_0_18_151)))
 (let ((?x57839 (- (* (* (- 2.0) l_0_18_116) l_0_18_123) (* (* 2.0 l_0_18_117) l_0_18_124))))
 (let ((?x57844 (- (- (- (- ?x57839 (* (* 2.0 l_0_18_118) l_0_18_125)) ?x54707) ?x54709) ?x54711)))
 (let ((?x57848 (- (- ?x57844 (* (* 2.0 l_0_18_172) l_0_18_179)) (* (* 2.0 l_0_18_173) l_0_18_180))))
 (let ((?x57853 (- (- (- (- ?x57848 (* (* 2.0 l_0_18_174) l_0_18_181)) ?x54745) ?x54748) ?x54751)))
 (= (+ (+ (+ ?x57853 ?x54754) ?x54757) ?x54760) 0.0))))))))))))))))))))))))
(assert
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57060 (* ?x54750 l_0_18_74)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57058 (* ?x54747 l_0_18_73)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57056 (* ?x54744 l_0_18_72)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54729 (* ?x54653 l_0_18_158)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x25185 (* ?x45628 l_0_18_157)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x44486 (* ?x34935 l_0_18_156)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x57054 (* ?x45846 l_0_18_90)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x57052 (* ?x45861 l_0_18_89)))
 (let ((?x57055 (+ (+ (* (* 2.0 l_0_18_100) l_0_18_88) ?x57052) ?x57054)))
 (let ((?x57885 (- (- ?x57055 (* (* 2.0 l_0_18_116) l_0_18_128)) (* (* 2.0 l_0_18_117) l_0_18_129))))
 (let ((?x57890 (- (- (- (- ?x57885 (* (* 2.0 l_0_18_118) l_0_18_130)) ?x44486) ?x25185) ?x54729)))
 (let ((?x57894 (- (- ?x57890 (* (* 2.0 l_0_18_172) l_0_18_184)) (* (* 2.0 l_0_18_173) l_0_18_185))))
 (let ((?x57899 (- (- (- (- ?x57894 (* (* 2.0 l_0_18_174) l_0_18_186)) ?x57056) ?x57058) ?x57060)))
 (= ?x57899 0.0)))))))))))))))))))))))
(assert
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57093 (* ?x54750 l_0_18_80)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57091 (* ?x54747 l_0_18_79)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57089 (* ?x54744 l_0_18_78)))
 (let ((?x54653 (* 2.0 l_0_18_146)))
 (let ((?x54807 (* ?x54653 l_0_18_164)))
 (let ((?x45628 (* 2.0 l_0_18_145)))
 (let ((?x54804 (* ?x45628 l_0_18_163)))
 (let ((?x34935 (* 2.0 l_0_18_144)))
 (let ((?x45742 (* ?x34935 l_0_18_162)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x57087 (* ?x54232 l_0_18_90)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x57085 (* ?x54229 l_0_18_89)))
 (let ((?x57088 (+ (+ (* (* 2.0 l_0_18_106) l_0_18_88) ?x57085) ?x57087)))
 (let ((?x57920 (- (- ?x57088 (* (* 2.0 l_0_18_116) l_0_18_134)) (* (* 2.0 l_0_18_117) l_0_18_135))))
 (let ((?x57925 (- (- (- (- ?x57920 (* (* 2.0 l_0_18_118) l_0_18_136)) ?x45742) ?x54804) ?x54807)))
 (let ((?x57929 (- (- ?x57925 (* (* 2.0 l_0_18_172) l_0_18_190)) (* (* 2.0 l_0_18_173) l_0_18_191))))
 (let ((?x57934 (- (- (- (- ?x57929 (* (* 2.0 l_0_18_174) l_0_18_192)) ?x57089) ?x57091) ?x57093)))
 (= ?x57934 0.0)))))))))))))))))))))))
(assert
 (let ((?x57131 (* l_0_18_94 l_0_18_94)))
 (let ((?x57129 (* l_0_18_93 l_0_18_93)))
 (let ((?x57127 (* l_0_18_92 l_0_18_92)))
 (let ((?x57125 (* l_0_18_91 l_0_18_91)))
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x57032 (* ?x54759 l_0_18_93)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x57030 (* ?x54756 l_0_18_92)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x57028 (* ?x54753 l_0_18_91)))
 (let ((?x57123 (* l_0_18_66 l_0_18_66)))
 (let ((?x57121 (* l_0_18_65 l_0_18_65)))
 (let ((?x57119 (* l_0_18_64 l_0_18_64)))
 (let ((?x57135 (* l_0_18_63 l_0_18_63)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57026 (* ?x54750 l_0_18_65)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57024 (* ?x54747 l_0_18_64)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57813 (* ?x54744 l_0_18_63)))
 (let ((?x56410 (* l_0_18_178 l_0_18_178)))
 (let ((?x56407 (* l_0_18_177 l_0_18_177)))
 (let ((?x56404 (* l_0_18_176 l_0_18_176)))
 (let ((?x56401 (* l_0_18_175 l_0_18_175)))
 (let ((?x54860 (* l_0_18_150 l_0_18_150)))
 (let ((?x54858 (* l_0_18_149 l_0_18_149)))
 (let ((?x54856 (* l_0_18_148 l_0_18_148)))
 (let ((?x54854 (* l_0_18_147 l_0_18_147)))
 (let ((?x16084 (* l_0_18_122 l_0_18_122)))
 (let ((?x38582 (* l_0_18_121 l_0_18_121)))
 (let ((?x15999 (- (- (* (- l_0_18_119) l_0_18_119) (* l_0_18_120 l_0_18_120)) ?x38582)))
 (let ((?x28827 (- (- (- (- (- (- (- ?x15999 ?x16084) ?x54854) ?x54856) ?x54858) ?x54860) ?x56401) ?x56404)))
 (let ((?x16122 (- (- (+ (+ (+ (- (- ?x28827 ?x56407) ?x56410) ?x57813) ?x57024) ?x57026) ?x57135) ?x57119)))
 (let ((?x57958 (+ (+ (- (- (- (- (- ?x16122 ?x57121) ?x57123) ?x57028) ?x57030) ?x57032) ?x57125) ?x57127)))
 (= (+ (+ ?x57958 ?x57129) ?x57131) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x55003 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x55000 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54997 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54994 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54759 (* 2.0 l_0_18_90)))
 (let ((?x54760 (* ?x54759 l_0_18_97)))
 (let ((?x54756 (* 2.0 l_0_18_89)))
 (let ((?x54757 (* ?x54756 l_0_18_96)))
 (let ((?x54753 (* 2.0 l_0_18_88)))
 (let ((?x54754 (* ?x54753 l_0_18_95)))
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x54991 (* ?x54990 l_0_18_70)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x54988 (* ?x54987 l_0_18_69)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x54985 (* ?x54984 l_0_18_68)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x54982 (* ?x54981 l_0_18_67)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x54751 (* ?x54750 l_0_18_69)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x54748 (* ?x54747 l_0_18_68)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x54745 (* ?x54744 l_0_18_67)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x54912 (* ?x54911 l_0_18_154)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x54909 (* ?x54908 l_0_18_153)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x54906 (* ?x54905 l_0_18_152)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x54903 (* ?x54902 l_0_18_151)))
 (let ((?x47964 (- (* (* (- 2.0) l_0_18_119) l_0_18_123) (* (* 2.0 l_0_18_120) l_0_18_124))))
 (let ((?x16233 (- (- ?x47964 (* (* 2.0 l_0_18_121) l_0_18_125)) (* (* 2.0 l_0_18_122) l_0_18_126))))
 (let ((?x47965 (- (- (- (- (- ?x16233 ?x54903) ?x54906) ?x54909) ?x54912) (* (* 2.0 l_0_18_175) l_0_18_179))))
 (let ((?x57971 (- (- ?x47965 (* (* 2.0 l_0_18_176) l_0_18_180)) (* (* 2.0 l_0_18_177) l_0_18_181))))
 (let ((?x57977 (+ (+ (+ (- ?x57971 (* (* 2.0 l_0_18_178) l_0_18_182)) ?x54745) ?x54748) ?x54751)))
 (let ((?x57984 (- (- (- (- (- (- (- ?x57977 ?x54982) ?x54985) ?x54988) ?x54991) ?x54754) ?x54757) ?x54760)))
 (= (+ (+ (+ (+ ?x57984 ?x54994) ?x54997) ?x55000) ?x55003) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57152 (* ?x54990 l_0_18_75)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57150 (* ?x54987 l_0_18_74)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57148 (* ?x54984 l_0_18_73)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57146 (* ?x54981 l_0_18_72)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57060 (* ?x54750 l_0_18_74)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57058 (* ?x54747 l_0_18_73)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57056 (* ?x54744 l_0_18_72)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x54954 (* ?x54911 l_0_18_159)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x54950 (* ?x54908 l_0_18_158)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x54946 (* ?x54905 l_0_18_157)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x54942 (* ?x54902 l_0_18_156)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x57144 (* ?x45854 l_0_18_94)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x57142 (* ?x45846 l_0_18_93)))
 (let ((?x57054 (* ?x45846 l_0_18_90)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x57140 (* ?x45861 l_0_18_92)))
 (let ((?x57052 (* ?x45861 l_0_18_89)))
 (let ((?x35066 (* 2.0 l_0_18_100)))
 (let ((?x37804 (* ?x35066 l_0_18_91)))
 (let ((?x58006 (- (+ (- (+ (* (* (- 2.0) l_0_18_100) l_0_18_88) ?x37804) ?x57052) ?x57140) ?x57054)))
 (let ((?x58013 (- (- (+ (+ ?x58006 ?x57142) ?x57144) (* (* 2.0 l_0_18_119) l_0_18_128)) (* (* 2.0 l_0_18_120) l_0_18_129))))
 (let ((?x58017 (- (- ?x58013 (* (* 2.0 l_0_18_121) l_0_18_130)) (* (* 2.0 l_0_18_122) l_0_18_131))))
 (let ((?x58023 (- (- (- (- (- ?x58017 ?x54942) ?x54946) ?x54950) ?x54954) (* (* 2.0 l_0_18_175) l_0_18_184))))
 (let ((?x58027 (- (- ?x58023 (* (* 2.0 l_0_18_176) l_0_18_185)) (* (* 2.0 l_0_18_177) l_0_18_186))))
 (let ((?x58032 (+ (+ (+ (- ?x58027 (* (* 2.0 l_0_18_178) l_0_18_187)) ?x57056) ?x57058) ?x57060)))
 (= (- (- (- (- ?x58032 ?x57146) ?x57148) ?x57150) ?x57152) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57192 (* ?x54990 l_0_18_81)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57190 (* ?x54987 l_0_18_80)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57188 (* ?x54984 l_0_18_79)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57186 (* ?x54981 l_0_18_78)))
 (let ((?x54750 (* 2.0 l_0_18_62)))
 (let ((?x57093 (* ?x54750 l_0_18_80)))
 (let ((?x54747 (* 2.0 l_0_18_61)))
 (let ((?x57091 (* ?x54747 l_0_18_79)))
 (let ((?x54744 (* 2.0 l_0_18_60)))
 (let ((?x57089 (* ?x54744 l_0_18_78)))
 (let ((?x54911 (* 2.0 l_0_18_150)))
 (let ((?x55058 (* ?x54911 l_0_18_165)))
 (let ((?x54908 (* 2.0 l_0_18_149)))
 (let ((?x55056 (* ?x54908 l_0_18_164)))
 (let ((?x54905 (* 2.0 l_0_18_148)))
 (let ((?x55039 (* ?x54905 l_0_18_163)))
 (let ((?x54902 (* 2.0 l_0_18_147)))
 (let ((?x55035 (* ?x54902 l_0_18_162)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x57184 (* ?x54235 l_0_18_94)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x57182 (* ?x54232 l_0_18_93)))
 (let ((?x57087 (* ?x54232 l_0_18_90)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x57180 (* ?x54229 l_0_18_92)))
 (let ((?x57085 (* ?x54229 l_0_18_89)))
 (let ((?x54226 (* 2.0 l_0_18_106)))
 (let ((?x57179 (* ?x54226 l_0_18_91)))
 (let ((?x48133 (- (+ (- (+ (* (* (- 2.0) l_0_18_106) l_0_18_88) ?x57179) ?x57085) ?x57180) ?x57087)))
 (let ((?x58049 (- (- (+ (+ ?x48133 ?x57182) ?x57184) (* (* 2.0 l_0_18_119) l_0_18_134)) (* (* 2.0 l_0_18_120) l_0_18_135))))
 (let ((?x58053 (- (- ?x58049 (* (* 2.0 l_0_18_121) l_0_18_136)) (* (* 2.0 l_0_18_122) l_0_18_137))))
 (let ((?x58059 (- (- (- (- (- ?x58053 ?x55035) ?x55039) ?x55056) ?x55058) (* (* 2.0 l_0_18_175) l_0_18_190))))
 (let ((?x58063 (- (- ?x58059 (* (* 2.0 l_0_18_176) l_0_18_191)) (* (* 2.0 l_0_18_177) l_0_18_192))))
 (let ((?x58068 (+ (+ (+ (- ?x58063 (* (* 2.0 l_0_18_178) l_0_18_193)) ?x57089) ?x57091) ?x57093)))
 (= (- (- (- (- ?x58068 ?x57186) ?x57188) ?x57190) ?x57192) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x55211 (* l_0_18_99 l_0_18_99)))
 (let ((?x55209 (* l_0_18_98 l_0_18_98)))
 (let ((?x55207 (* l_0_18_97 l_0_18_97)))
 (let ((?x55205 (* l_0_18_96 l_0_18_96)))
 (let ((?x55203 (* l_0_18_95 l_0_18_95)))
 (let ((?x55201 (* l_0_18_71 l_0_18_71)))
 (let ((?x55199 (* l_0_18_70 l_0_18_70)))
 (let ((?x55197 (* l_0_18_69 l_0_18_69)))
 (let ((?x55195 (* l_0_18_68 l_0_18_68)))
 (let ((?x55193 (* l_0_18_67 l_0_18_67)))
 (let ((?x56524 (* l_0_18_183 l_0_18_183)))
 (let ((?x56521 (* l_0_18_182 l_0_18_182)))
 (let ((?x56518 (* l_0_18_181 l_0_18_181)))
 (let ((?x56515 (* l_0_18_180 l_0_18_180)))
 (let ((?x56512 (* l_0_18_179 l_0_18_179)))
 (let ((?x55124 (* l_0_18_155 l_0_18_155)))
 (let ((?x55122 (* l_0_18_154 l_0_18_154)))
 (let ((?x55120 (* l_0_18_153 l_0_18_153)))
 (let ((?x55118 (* l_0_18_152 l_0_18_152)))
 (let ((?x55116 (* l_0_18_151 l_0_18_151)))
 (let ((?x58092 (* l_0_18_127 l_0_18_127)))
 (let ((?x58090 (* l_0_18_126 l_0_18_126)))
 (let ((?x58088 (* l_0_18_125 l_0_18_125)))
 (let ((?x58089 (- (- (* (- l_0_18_123) l_0_18_123) (* l_0_18_124 l_0_18_124)) ?x58088)))
 (let ((?x58098 (- (- (- (- (- (- (- ?x58089 ?x58090) ?x58092) ?x55116) ?x55118) ?x55120) ?x55122) ?x55124)))
 (let ((?x58105 (- (- (- (- (- (- (- ?x58098 ?x56512) ?x56515) ?x56518) ?x56521) ?x56524) ?x55193) ?x55195)))
 (let ((?x58112 (+ (+ (+ (+ (- (- (- ?x58105 ?x55197) ?x55199) ?x55201) ?x55203) ?x55205) ?x55207) ?x55209)))
 (= (+ ?x58112 ?x55211) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x55325 (* ?x54302 l_0_18_76)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x55323 (* ?x54299 l_0_18_75)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x55321 (* ?x54296 l_0_18_74)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x55319 (* ?x54293 l_0_18_73)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x55317 (* ?x54290 l_0_18_72)))
 (let ((?x54270 (* 2.0 l_0_18_155)))
 (let ((?x55181 (* ?x54270 l_0_18_160)))
 (let ((?x54267 (* 2.0 l_0_18_154)))
 (let ((?x55179 (* ?x54267 l_0_18_159)))
 (let ((?x54264 (* 2.0 l_0_18_153)))
 (let ((?x55177 (* ?x54264 l_0_18_158)))
 (let ((?x54261 (* 2.0 l_0_18_152)))
 (let ((?x55175 (* ?x54261 l_0_18_157)))
 (let ((?x54258 (* 2.0 l_0_18_151)))
 (let ((?x55173 (* ?x54258 l_0_18_156)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x45872 (* ?x35101 l_0_18_99)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x45874 (* ?x45854 l_0_18_98)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x11162 (* ?x45846 l_0_18_97)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x45864 (* ?x45861 l_0_18_96)))
 (let ((?x11069 (+ (+ (+ (+ (* (* 2.0 l_0_18_100) l_0_18_95) ?x45864) ?x11162) ?x45874) ?x45872)))
 (let ((?x48375 (- (- ?x11069 (* (* 2.0 l_0_18_123) l_0_18_128)) (* (* 2.0 l_0_18_124) l_0_18_129))))
 (let ((?x48376 (- (- ?x48375 (* (* 2.0 l_0_18_125) l_0_18_130)) (* (* 2.0 l_0_18_126) l_0_18_131))))
 (let ((?x48354 (- (- (- (- ?x48376 (* (* 2.0 l_0_18_127) l_0_18_132)) ?x55173) ?x55175) ?x55177)))
 (let ((?x16706 (- (- (- (- ?x48354 ?x55179) ?x55181) (* (* 2.0 l_0_18_179) l_0_18_184)) (* (* 2.0 l_0_18_180) l_0_18_185))))
 (let ((?x58127 (- (- ?x16706 (* (* 2.0 l_0_18_181) l_0_18_186)) (* (* 2.0 l_0_18_182) l_0_18_187))))
 (let ((?x58132 (- (- (- (- ?x58127 (* (* 2.0 l_0_18_183) l_0_18_188)) ?x55317) ?x55319) ?x55321)))
 (= (- (- ?x58132 ?x55323) ?x55325) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57249 (* l_0_18_77 l_0_18_77)))
 (let ((?x57247 (* l_0_18_76 l_0_18_76)))
 (let ((?x57245 (* l_0_18_75 l_0_18_75)))
 (let ((?x57243 (* l_0_18_74 l_0_18_74)))
 (let ((?x57241 (* l_0_18_73 l_0_18_73)))
 (let ((?x57239 (* l_0_18_72 l_0_18_72)))
 (let ((?x56556 (* l_0_18_189 l_0_18_189)))
 (let ((?x56553 (* l_0_18_188 l_0_18_188)))
 (let ((?x56550 (* l_0_18_187 l_0_18_187)))
 (let ((?x46662 (* l_0_18_186 l_0_18_186)))
 (let ((?x37222 (* l_0_18_185 l_0_18_185)))
 (let ((?x46621 (* l_0_18_184 l_0_18_184)))
 (let ((?x55293 (* l_0_18_161 l_0_18_161)))
 (let ((?x55291 (* l_0_18_160 l_0_18_160)))
 (let ((?x55287 (* l_0_18_159 l_0_18_159)))
 (let ((?x55285 (* l_0_18_158 l_0_18_158)))
 (let ((?x55283 (* l_0_18_157 l_0_18_157)))
 (let ((?x11159 (* l_0_18_156 l_0_18_156)))
 (let ((?x48510 (* l_0_18_133 l_0_18_133)))
 (let ((?x29231 (* l_0_18_132 l_0_18_132)))
 (let ((?x48530 (* l_0_18_131 l_0_18_131)))
 (let ((?x12136 (* l_0_18_130 l_0_18_130)))
 (let ((?x16951 (* l_0_18_129 l_0_18_129)))
 (let ((?x16949 (* l_0_18_128 l_0_18_128)))
 (let ((?x57237 (* l_0_18_105 l_0_18_105)))
 (let ((?x57235 (* l_0_18_104 l_0_18_104)))
 (let ((?x57233 (* l_0_18_103 l_0_18_103)))
 (let ((?x57231 (* l_0_18_102 l_0_18_102)))
 (let ((?x57232 (+ (+ (* l_0_18_100 l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x57231)))
 (let ((?x57238 (+ (+ (+ ?x57232 ?x57233) ?x57235) ?x57237)))
 (let ((?x16868 (- (- (- (- (- (- (- ?x57238 ?x16949) ?x16951) ?x12136) ?x48530) ?x29231) ?x48510) ?x11159)))
 (let ((?x16826 (- (- (- (- (- (- (- ?x16868 ?x55283) ?x55285) ?x55287) ?x55291) ?x55293) ?x46621) ?x37222)))
 (let ((?x58143 (- (- (- (- (- (- (- ?x16826 ?x46662) ?x56550) ?x56553) ?x56556) ?x57239) ?x57241) ?x57243)))
 (= (- (- (- ?x58143 ?x57245) ?x57247) ?x57249) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x57306 (* l_0_18_84 l_0_18_84)))
 (let ((?x57304 (* l_0_18_83 l_0_18_83)))
 (let ((?x57302 (* l_0_18_82 l_0_18_82)))
 (let ((?x57300 (* l_0_18_81 l_0_18_81)))
 (let ((?x57298 (* l_0_18_80 l_0_18_80)))
 (let ((?x57296 (* l_0_18_79 l_0_18_79)))
 (let ((?x57294 (* l_0_18_78 l_0_18_78)))
 (let ((?x37461 (* l_0_18_196 l_0_18_196)))
 (let ((?x37408 (* l_0_18_195 l_0_18_195)))
 (let ((?x26447 (* l_0_18_194 l_0_18_194)))
 (let ((?x36106 (* l_0_18_193 l_0_18_193)))
 (let ((?x13492 (* l_0_18_192 l_0_18_192)))
 (let ((?x47114 (* l_0_18_191 l_0_18_191)))
 (let ((?x26425 (* l_0_18_190 l_0_18_190)))
 (let ((?x55497 (* l_0_18_168 l_0_18_168)))
 (let ((?x55495 (* l_0_18_167 l_0_18_167)))
 (let ((?x55493 (* l_0_18_166 l_0_18_166)))
 (let ((?x55491 (* l_0_18_165 l_0_18_165)))
 (let ((?x55489 (* l_0_18_164 l_0_18_164)))
 (let ((?x55487 (* l_0_18_163 l_0_18_163)))
 (let ((?x55486 (* l_0_18_162 l_0_18_162)))
 (let ((?x16976 (* l_0_18_140 l_0_18_140)))
 (let ((?x16977 (* l_0_18_139 l_0_18_139)))
 (let ((?x48605 (* l_0_18_138 l_0_18_138)))
 (let ((?x17095 (* l_0_18_137 l_0_18_137)))
 (let ((?x48595 (* l_0_18_136 l_0_18_136)))
 (let ((?x48589 (* l_0_18_135 l_0_18_135)))
 (let ((?x29260 (* l_0_18_134 l_0_18_134)))
 (let ((?x57292 (* l_0_18_112 l_0_18_112)))
 (let ((?x57290 (* l_0_18_111 l_0_18_111)))
 (let ((?x57288 (* l_0_18_110 l_0_18_110)))
 (let ((?x57286 (* l_0_18_109 l_0_18_109)))
 (let ((?x57284 (* l_0_18_108 l_0_18_108)))
 (let ((?x57285 (+ (+ (* l_0_18_106 l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57284)))
 (let ((?x57293 (+ (+ (+ (+ ?x57285 ?x57286) ?x57288) ?x57290) ?x57292)))
 (let ((?x38775 (- (- (- (- (- (- (- ?x57293 ?x29260) ?x48589) ?x48595) ?x17095) ?x48605) ?x16977) ?x16976)))
 (let ((?x48604 (- (- (- (- (- (- (- ?x38775 ?x55486) ?x55487) ?x55489) ?x55491) ?x55493) ?x55495) ?x55497)))
 (let ((?x58178 (- (- (- (- (- (- (- ?x48604 ?x26425) ?x47114) ?x13492) ?x36106) ?x26447) ?x37408) ?x37461)))
 (let ((?x58185 (- (- (- (- (- (- (- ?x58178 ?x57294) ?x57296) ?x57298) ?x57300) ?x57302) ?x57304) ?x57306)))
 (= ?x58185 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x53935 (* l_0_18_85 l_0_18_85)))
 (let ((?x53933 (* l_0_18_57 l_0_18_57)))
 (let ((?x17155 (- (* (* (- 2.0) l_0_18_197) l_0_18_203) (* (* 2.0 l_0_18_225) l_0_18_231))))
 (let ((?x38904 (- (- ?x17155 (* (* 2.0 l_0_18_253) l_0_18_259)) (* (* 2.0 l_0_18_281) l_0_18_287))))
 (let ((?x17346 (- (- ?x38904 (* (* 2.0 l_0_18_309) l_0_18_315)) (* (* 2.0 l_0_18_337) l_0_18_343))))
 (= (- (+ ?x17346 ?x53933) ?x53935) 0.0)))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x56935 (* ?x54403 l_0_18_91)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x56927 (* ?x54400 l_0_18_63)))
 (let ((?x58216 (* l_0_18_346 l_0_18_346)))
 (let ((?x58214 (* l_0_18_345 l_0_18_345)))
 (let ((?x58212 (* l_0_18_344 l_0_18_344)))
 (let ((?x58210 (* l_0_18_343 l_0_18_343)))
 (let ((?x58208 (* l_0_18_318 l_0_18_318)))
 (let ((?x58206 (* l_0_18_317 l_0_18_317)))
 (let ((?x58204 (* l_0_18_316 l_0_18_316)))
 (let ((?x58202 (* l_0_18_315 l_0_18_315)))
 (let ((?x58200 (* l_0_18_290 l_0_18_290)))
 (let ((?x58198 (* l_0_18_289 l_0_18_289)))
 (let ((?x58196 (* l_0_18_288 l_0_18_288)))
 (let ((?x58194 (* l_0_18_287 l_0_18_287)))
 (let ((?x58192 (* l_0_18_262 l_0_18_262)))
 (let ((?x58190 (* l_0_18_261 l_0_18_261)))
 (let ((?x58188 (* l_0_18_260 l_0_18_260)))
 (let ((?x48690 (* l_0_18_259 l_0_18_259)))
 (let ((?x29312 (* l_0_18_234 l_0_18_234)))
 (let ((?x48689 (* l_0_18_233 l_0_18_233)))
 (let ((?x38856 (* l_0_18_232 l_0_18_232)))
 (let ((?x38853 (* l_0_18_231 l_0_18_231)))
 (let ((?x48679 (* l_0_18_206 l_0_18_206)))
 (let ((?x38850 (* l_0_18_205 l_0_18_205)))
 (let ((?x17255 (- (- (* (- l_0_18_203) l_0_18_203) (* l_0_18_204 l_0_18_204)) ?x38850)))
 (let ((?x58189 (- (- (- (- (- (- (- ?x17255 ?x48679) ?x38853) ?x38856) ?x48689) ?x29312) ?x48690) ?x58188)))
 (let ((?x58203 (- (- (- (- (- (- (- ?x58189 ?x58190) ?x58192) ?x58194) ?x58196) ?x58198) ?x58200) ?x58202)))
 (let ((?x58217 (- (- (- (- (- (- (- ?x58203 ?x58204) ?x58206) ?x58208) ?x58210) ?x58212) ?x58214) ?x58216)))
 (= (- (+ ?x58217 ?x56927) ?x56935) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x54403 (* 2.0 l_0_18_85)))
 (let ((?x54404 (* ?x54403 l_0_18_95)))
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x54401 (* ?x54400 l_0_18_67)))
 (let ((?x58251 (- (* (* (- 2.0) l_0_18_203) l_0_18_207) (* (* 2.0 l_0_18_204) l_0_18_208))))
 (let ((?x58257 (- (- ?x58251 (* (* 2.0 l_0_18_205) l_0_18_209)) (* (* 2.0 l_0_18_206) l_0_18_210))))
 (let ((?x58263 (- (- ?x58257 (* (* 2.0 l_0_18_231) l_0_18_235)) (* (* 2.0 l_0_18_232) l_0_18_236))))
 (let ((?x58269 (- (- ?x58263 (* (* 2.0 l_0_18_233) l_0_18_237)) (* (* 2.0 l_0_18_234) l_0_18_238))))
 (let ((?x58275 (- (- ?x58269 (* (* 2.0 l_0_18_259) l_0_18_263)) (* (* 2.0 l_0_18_260) l_0_18_264))))
 (let ((?x58281 (- (- ?x58275 (* (* 2.0 l_0_18_261) l_0_18_265)) (* (* 2.0 l_0_18_262) l_0_18_266))))
 (let ((?x58287 (- (- ?x58281 (* (* 2.0 l_0_18_287) l_0_18_291)) (* (* 2.0 l_0_18_288) l_0_18_292))))
 (let ((?x58293 (- (- ?x58287 (* (* 2.0 l_0_18_289) l_0_18_293)) (* (* 2.0 l_0_18_290) l_0_18_294))))
 (let ((?x58299 (- (- ?x58293 (* (* 2.0 l_0_18_315) l_0_18_319)) (* (* 2.0 l_0_18_316) l_0_18_320))))
 (let ((?x58305 (- (- ?x58299 (* (* 2.0 l_0_18_317) l_0_18_321)) (* (* 2.0 l_0_18_318) l_0_18_322))))
 (let ((?x58311 (- (- ?x58305 (* (* 2.0 l_0_18_343) l_0_18_347)) (* (* 2.0 l_0_18_344) l_0_18_348))))
 (let ((?x58317 (- (- ?x58311 (* (* 2.0 l_0_18_345) l_0_18_349)) (* (* 2.0 l_0_18_346) l_0_18_350))))
 (= (- (+ ?x58317 ?x54401) ?x54404) 0.0))))))))))))))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x47543 (* ?x54400 l_0_18_72)))
 (let ((?x49142 (- (* (* (- 2.0) l_0_18_100) l_0_18_85) (* (* 2.0 l_0_18_203) l_0_18_212))))
 (let ((?x49151 (- (- ?x49142 (* (* 2.0 l_0_18_204) l_0_18_213)) (* (* 2.0 l_0_18_205) l_0_18_214))))
 (let ((?x39039 (- (- ?x49151 (* (* 2.0 l_0_18_206) l_0_18_215)) (* (* 2.0 l_0_18_231) l_0_18_240))))
 (let ((?x39074 (- (- ?x39039 (* (* 2.0 l_0_18_232) l_0_18_241)) (* (* 2.0 l_0_18_233) l_0_18_242))))
 (let ((?x39095 (- (- ?x39074 (* (* 2.0 l_0_18_234) l_0_18_243)) (* (* 2.0 l_0_18_259) l_0_18_268))))
 (let ((?x58380 (- (- ?x39095 (* (* 2.0 l_0_18_260) l_0_18_269)) (* (* 2.0 l_0_18_261) l_0_18_270))))
 (let ((?x58384 (- (- ?x58380 (* (* 2.0 l_0_18_262) l_0_18_271)) (* (* 2.0 l_0_18_287) l_0_18_296))))
 (let ((?x58388 (- (- ?x58384 (* (* 2.0 l_0_18_288) l_0_18_297)) (* (* 2.0 l_0_18_289) l_0_18_298))))
 (let ((?x58392 (- (- ?x58388 (* (* 2.0 l_0_18_290) l_0_18_299)) (* (* 2.0 l_0_18_315) l_0_18_324))))
 (let ((?x58396 (- (- ?x58392 (* (* 2.0 l_0_18_316) l_0_18_325)) (* (* 2.0 l_0_18_317) l_0_18_326))))
 (let ((?x58400 (- (- ?x58396 (* (* 2.0 l_0_18_318) l_0_18_327)) (* (* 2.0 l_0_18_343) l_0_18_352))))
 (let ((?x58404 (- (- ?x58400 (* (* 2.0 l_0_18_344) l_0_18_353)) (* (* 2.0 l_0_18_345) l_0_18_354))))
 (= (+ (- ?x58404 (* (* 2.0 l_0_18_346) l_0_18_355)) ?x47543) 0.0))))))))))))))))
(assert
 (let ((?x54400 (* 2.0 l_0_18_57)))
 (let ((?x37705 (* ?x54400 l_0_18_78)))
 (let ((?x39270 (- (* (* (- 2.0) l_0_18_106) l_0_18_85) (* (* 2.0 l_0_18_203) l_0_18_218))))
 (let ((?x58444 (- (- ?x39270 (* (* 2.0 l_0_18_204) l_0_18_219)) (* (* 2.0 l_0_18_205) l_0_18_220))))
 (let ((?x58448 (- (- ?x58444 (* (* 2.0 l_0_18_206) l_0_18_221)) (* (* 2.0 l_0_18_231) l_0_18_246))))
 (let ((?x58452 (- (- ?x58448 (* (* 2.0 l_0_18_232) l_0_18_247)) (* (* 2.0 l_0_18_233) l_0_18_248))))
 (let ((?x58456 (- (- ?x58452 (* (* 2.0 l_0_18_234) l_0_18_249)) (* (* 2.0 l_0_18_259) l_0_18_274))))
 (let ((?x58460 (- (- ?x58456 (* (* 2.0 l_0_18_260) l_0_18_275)) (* (* 2.0 l_0_18_261) l_0_18_276))))
 (let ((?x58464 (- (- ?x58460 (* (* 2.0 l_0_18_262) l_0_18_277)) (* (* 2.0 l_0_18_287) l_0_18_302))))
 (let ((?x58468 (- (- ?x58464 (* (* 2.0 l_0_18_288) l_0_18_303)) (* (* 2.0 l_0_18_289) l_0_18_304))))
 (let ((?x58472 (- (- ?x58468 (* (* 2.0 l_0_18_290) l_0_18_305)) (* (* 2.0 l_0_18_315) l_0_18_330))))
 (let ((?x58476 (- (- ?x58472 (* (* 2.0 l_0_18_316) l_0_18_331)) (* (* 2.0 l_0_18_317) l_0_18_332))))
 (let ((?x58480 (- (- ?x58476 (* (* 2.0 l_0_18_318) l_0_18_333)) (* (* 2.0 l_0_18_343) l_0_18_358))))
 (let ((?x58484 (- (- ?x58480 (* (* 2.0 l_0_18_344) l_0_18_359)) (* (* 2.0 l_0_18_345) l_0_18_360))))
 (= (+ (- ?x58484 (* (* 2.0 l_0_18_346) l_0_18_361)) ?x37705) 0.0))))))))))))))))
(assert
 (let ((?x57131 (* l_0_18_94 l_0_18_94)))
 (let ((?x57129 (* l_0_18_93 l_0_18_93)))
 (let ((?x57127 (* l_0_18_92 l_0_18_92)))
 (let ((?x57125 (* l_0_18_91 l_0_18_91)))
 (let ((?x57123 (* l_0_18_66 l_0_18_66)))
 (let ((?x57121 (* l_0_18_65 l_0_18_65)))
 (let ((?x58552 (+ (+ (+ (* l_0_18_63 l_0_18_63) (* l_0_18_64 l_0_18_64)) ?x57121) ?x57123)))
 (= (- (- (- (- ?x58552 ?x57125) ?x57127) ?x57129) ?x57131) 0.0)))))))))
(assert
 (let ((?x55003 (* (* 2.0 l_0_18_94) l_0_18_98)))
 (let ((?x55000 (* (* 2.0 l_0_18_93) l_0_18_97)))
 (let ((?x54997 (* (* 2.0 l_0_18_92) l_0_18_96)))
 (let ((?x54994 (* (* 2.0 l_0_18_91) l_0_18_95)))
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x54991 (* ?x54990 l_0_18_70)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x54988 (* ?x54987 l_0_18_69)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x54985 (* ?x54984 l_0_18_68)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x54982 (* ?x54981 l_0_18_67)))
 (let ((?x58570 (- (- (- (- (+ (+ (+ ?x54982 ?x54985) ?x54988) ?x54991) ?x54994) ?x54997) ?x55000) ?x55003)))
 (= ?x58570 0.0)))))))))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57152 (* ?x54990 l_0_18_75)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57150 (* ?x54987 l_0_18_74)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57148 (* ?x54984 l_0_18_73)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57146 (* ?x54981 l_0_18_72)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x57144 (* ?x45854 l_0_18_94)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x57142 (* ?x45846 l_0_18_93)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x57140 (* ?x45861 l_0_18_92)))
 (let ((?x58587 (+ (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_91) ?x57140) ?x57142) ?x57144) ?x57146)))
 (= (+ (+ (+ ?x58587 ?x57148) ?x57150) ?x57152) 0.0)))))))))))))))))
(assert
 (let ((?x54990 (* 2.0 l_0_18_66)))
 (let ((?x57192 (* ?x54990 l_0_18_81)))
 (let ((?x54987 (* 2.0 l_0_18_65)))
 (let ((?x57190 (* ?x54987 l_0_18_80)))
 (let ((?x54984 (* 2.0 l_0_18_64)))
 (let ((?x57188 (* ?x54984 l_0_18_79)))
 (let ((?x54981 (* 2.0 l_0_18_63)))
 (let ((?x57186 (* ?x54981 l_0_18_78)))
 (let ((?x54235 (* 2.0 l_0_18_109)))
 (let ((?x57184 (* ?x54235 l_0_18_94)))
 (let ((?x54232 (* 2.0 l_0_18_108)))
 (let ((?x57182 (* ?x54232 l_0_18_93)))
 (let ((?x54229 (* 2.0 l_0_18_107)))
 (let ((?x57180 (* ?x54229 l_0_18_92)))
 (let ((?x39536 (+ (- (- (- (* (* (- 2.0) l_0_18_106) l_0_18_91) ?x57180) ?x57182) ?x57184) ?x57186)))
 (= (+ (+ (+ ?x39536 ?x57188) ?x57190) ?x57192) 0.0)))))))))))))))))
(assert
 (let ((?x55211 (* l_0_18_99 l_0_18_99)))
 (let ((?x55209 (* l_0_18_98 l_0_18_98)))
 (let ((?x55207 (* l_0_18_97 l_0_18_97)))
 (let ((?x55205 (* l_0_18_96 l_0_18_96)))
 (let ((?x55203 (* l_0_18_95 l_0_18_95)))
 (let ((?x55201 (* l_0_18_71 l_0_18_71)))
 (let ((?x55199 (* l_0_18_70 l_0_18_70)))
 (let ((?x55197 (* l_0_18_69 l_0_18_69)))
 (let ((?x39535 (+ (+ (+ (* l_0_18_67 l_0_18_67) (* l_0_18_68 l_0_18_68)) ?x55197) ?x55199)))
 (= (- (- (- (- (- (+ ?x39535 ?x55201) ?x55203) ?x55205) ?x55207) ?x55209) ?x55211) 0.0)))))))))))
(assert
 (let ((?x54302 (* 2.0 l_0_18_71)))
 (let ((?x55325 (* ?x54302 l_0_18_76)))
 (let ((?x54299 (* 2.0 l_0_18_70)))
 (let ((?x55323 (* ?x54299 l_0_18_75)))
 (let ((?x54296 (* 2.0 l_0_18_69)))
 (let ((?x55321 (* ?x54296 l_0_18_74)))
 (let ((?x54293 (* 2.0 l_0_18_68)))
 (let ((?x55319 (* ?x54293 l_0_18_73)))
 (let ((?x54290 (* 2.0 l_0_18_67)))
 (let ((?x55317 (* ?x54290 l_0_18_72)))
 (let ((?x35101 (* 2.0 l_0_18_104)))
 (let ((?x45872 (* ?x35101 l_0_18_99)))
 (let ((?x45854 (* 2.0 l_0_18_103)))
 (let ((?x45874 (* ?x45854 l_0_18_98)))
 (let ((?x45846 (* 2.0 l_0_18_102)))
 (let ((?x11162 (* ?x45846 l_0_18_97)))
 (let ((?x45861 (* 2.0 l_0_18_101)))
 (let ((?x45864 (* ?x45861 l_0_18_96)))
 (let ((?x58627 (- (- (- (- (* (* (- 2.0) l_0_18_100) l_0_18_95) ?x45864) ?x11162) ?x45874) ?x45872)))
 (= (+ (+ (+ (+ (+ ?x58627 ?x55317) ?x55319) ?x55321) ?x55323) ?x55325) 0.0)))))))))))))))))))))
(assert
 (let ((?x57249 (* l_0_18_77 l_0_18_77)))
 (let ((?x57247 (* l_0_18_76 l_0_18_76)))
 (let ((?x57245 (* l_0_18_75 l_0_18_75)))
 (let ((?x57243 (* l_0_18_74 l_0_18_74)))
 (let ((?x57241 (* l_0_18_73 l_0_18_73)))
 (let ((?x57239 (* l_0_18_72 l_0_18_72)))
 (let ((?x57237 (* l_0_18_105 l_0_18_105)))
 (let ((?x57235 (* l_0_18_104 l_0_18_104)))
 (let ((?x57233 (* l_0_18_103 l_0_18_103)))
 (let ((?x57231 (* l_0_18_102 l_0_18_102)))
 (let ((?x58636 (- (- (* (- l_0_18_100) l_0_18_100) (* l_0_18_101 l_0_18_101)) ?x57231)))
 (let ((?x58643 (+ (+ (+ (+ (- (- (- ?x58636 ?x57233) ?x57235) ?x57237) ?x57239) ?x57241) ?x57243) ?x57245)))
 (= (+ (+ ?x58643 ?x57247) ?x57249) 0.0))))))))))))))
(assert
 (let ((?x57306 (* l_0_18_84 l_0_18_84)))
 (let ((?x57304 (* l_0_18_83 l_0_18_83)))
 (let ((?x57302 (* l_0_18_82 l_0_18_82)))
 (let ((?x57300 (* l_0_18_81 l_0_18_81)))
 (let ((?x57298 (* l_0_18_80 l_0_18_80)))
 (let ((?x57296 (* l_0_18_79 l_0_18_79)))
 (let ((?x57294 (* l_0_18_78 l_0_18_78)))
 (let ((?x57292 (* l_0_18_112 l_0_18_112)))
 (let ((?x57290 (* l_0_18_111 l_0_18_111)))
 (let ((?x57288 (* l_0_18_110 l_0_18_110)))
 (let ((?x57286 (* l_0_18_109 l_0_18_109)))
 (let ((?x57284 (* l_0_18_108 l_0_18_108)))
 (let ((?x58654 (- (- (* (- l_0_18_106) l_0_18_106) (* l_0_18_107 l_0_18_107)) ?x57284)))
 (let ((?x58661 (+ (+ (+ (- (- (- (- ?x58654 ?x57286) ?x57288) ?x57290) ?x57292) ?x57294) ?x57296) ?x57298)))
 (= (+ (+ (+ (+ ?x58661 ?x57300) ?x57302) ?x57304) ?x57306) 0.0))))))))))))))))
(assert
 (let ((?x58677 (* l_0_18_337 l_0_18_337)))
 (let ((?x58675 (* l_0_18_309 l_0_18_309)))
 (let ((?x18515 (* l_0_18_281 l_0_18_281)))
 (let ((?x50051 (* l_0_18_253 l_0_18_253)))
 (let ((?x50060 (- (- (* (- l_0_18_197) l_0_18_197) (* l_0_18_225 l_0_18_225)) ?x50051)))
 (= (- (- (- ?x50060 ?x18515) ?x58675) ?x58677) 0.0)))))))
(assert
 (let ((?x58700 (- (* (* (- 2.0) l_0_18_197) l_0_18_207) (* (* 2.0 l_0_18_225) l_0_18_235))))
 (let ((?x58704 (- (- ?x58700 (* (* 2.0 l_0_18_253) l_0_18_263)) (* (* 2.0 l_0_18_281) l_0_18_291))))
 (let ((?x58708 (- (- ?x58704 (* (* 2.0 l_0_18_309) l_0_18_319)) (* (* 2.0 l_0_18_337) l_0_18_347))))
 (= ?x58708 0.0)))))
(assert
 (let ((?x58729 (- (* (* (- 2.0) l_0_18_197) l_0_18_212) (* (* 2.0 l_0_18_225) l_0_18_240))))
 (let ((?x58733 (- (- ?x58729 (* (* 2.0 l_0_18_253) l_0_18_268)) (* (* 2.0 l_0_18_281) l_0_18_296))))
 (let ((?x58737 (- (- ?x58733 (* (* 2.0 l_0_18_309) l_0_18_324)) (* (* 2.0 l_0_18_337) l_0_18_352))))
 (= ?x58737 0.0)))))
(assert
 (let ((?x58757 (- (* (* (- 2.0) l_0_18_197) l_0_18_218) (* (* 2.0 l_0_18_225) l_0_18_246))))
 (let ((?x58761 (- (- ?x58757 (* (* 2.0 l_0_18_253) l_0_18_274)) (* (* 2.0 l_0_18_281) l_0_18_302))))
 (let ((?x58765 (- (- ?x58761 (* (* 2.0 l_0_18_309) l_0_18_330)) (* (* 2.0 l_0_18_337) l_0_18_358))))
 (= ?x58765 0.0)))))
(assert
 (let ((?x58846 (* l_0_18_351 l_0_18_351)))
 (let ((?x58844 (* l_0_18_350 l_0_18_350)))
 (let ((?x58842 (* l_0_18_349 l_0_18_349)))
 (let ((?x58840 (* l_0_18_348 l_0_18_348)))
 (let ((?x58838 (* l_0_18_347 l_0_18_347)))
 (let ((?x58836 (* l_0_18_323 l_0_18_323)))
 (let ((?x58834 (* l_0_18_322 l_0_18_322)))
 (let ((?x58832 (* l_0_18_321 l_0_18_321)))
 (let ((?x58830 (* l_0_18_320 l_0_18_320)))
 (let ((?x58828 (* l_0_18_319 l_0_18_319)))
 (let ((?x58826 (* l_0_18_295 l_0_18_295)))
 (let ((?x58824 (* l_0_18_294 l_0_18_294)))
 (let ((?x58822 (* l_0_18_293 l_0_18_293)))
 (let ((?x58820 (* l_0_18_292 l_0_18_292)))
 (let ((?x58818 (* l_0_18_291 l_0_18_291)))
 (let ((?x58816 (* l_0_18_267 l_0_18_267)))
 (let ((?x58814 (* l_0_18_266 l_0_18_266)))
 (let ((?x58812 (* l_0_18_265 l_0_18_265)))
 (let ((?x58810 (* l_0_18_264 l_0_18_264)))
 (let ((?x58808 (* l_0_18_263 l_0_18_263)))
 (let ((?x58806 (* l_0_18_239 l_0_18_239)))
 (let ((?x58804 (* l_0_18_238 l_0_18_238)))
 (let ((?x58802 (* l_0_18_237 l_0_18_237)))
 (let ((?x58800 (* l_0_18_236 l_0_18_236)))
 (let ((?x58798 (* l_0_18_235 l_0_18_235)))
 (let ((?x58796 (* l_0_18_211 l_0_18_211)))
 (let ((?x58794 (* l_0_18_210 l_0_18_210)))
 (let ((?x58792 (* l_0_18_209 l_0_18_209)))
 (let ((?x58793 (- (- (* (- l_0_18_207) l_0_18_207) (* l_0_18_208 l_0_18_208)) ?x58792)))
 (let ((?x58807 (- (- (- (- (- (- (- ?x58793 ?x58794) ?x58796) ?x58798) ?x58800) ?x58802) ?x58804) ?x58806)))
 (let ((?x58821 (- (- (- (- (- (- (- ?x58807 ?x58808) ?x58810) ?x58812) ?x58814) ?x58816) ?x58818) ?x58820)))
 (let ((?x58835 (- (- (- (- (- (- (- ?x58821 ?x58822) ?x58824) ?x58826) ?x58828) ?x58830) ?x58832) ?x58834)))
 (= (- (- (- (- (- (- ?x58835 ?x58836) ?x58838) ?x58840) ?x58842) ?x58844) ?x58846) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x50394 (- (* (* (- 2.0) l_0_18_207) l_0_18_212) (* (* 2.0 l_0_18_208) l_0_18_213))))
 (let ((?x58880 (- (- ?x50394 (* (* 2.0 l_0_18_209) l_0_18_214)) (* (* 2.0 l_0_18_210) l_0_18_215))))
 (let ((?x58884 (- (- ?x58880 (* (* 2.0 l_0_18_211) l_0_18_216)) (* (* 2.0 l_0_18_235) l_0_18_240))))
 (let ((?x58888 (- (- ?x58884 (* (* 2.0 l_0_18_236) l_0_18_241)) (* (* 2.0 l_0_18_237) l_0_18_242))))
 (let ((?x58892 (- (- ?x58888 (* (* 2.0 l_0_18_238) l_0_18_243)) (* (* 2.0 l_0_18_239) l_0_18_244))))
 (let ((?x58896 (- (- ?x58892 (* (* 2.0 l_0_18_263) l_0_18_268)) (* (* 2.0 l_0_18_264) l_0_18_269))))
 (let ((?x58900 (- (- ?x58896 (* (* 2.0 l_0_18_265) l_0_18_270)) (* (* 2.0 l_0_18_266) l_0_18_271))))
 (let ((?x58904 (- (- ?x58900 (* (* 2.0 l_0_18_267) l_0_18_272)) (* (* 2.0 l_0_18_291) l_0_18_296))))
 (let ((?x58908 (- (- ?x58904 (* (* 2.0 l_0_18_292) l_0_18_297)) (* (* 2.0 l_0_18_293) l_0_18_298))))
 (let ((?x58912 (- (- ?x58908 (* (* 2.0 l_0_18_294) l_0_18_299)) (* (* 2.0 l_0_18_295) l_0_18_300))))
 (let ((?x58916 (- (- ?x58912 (* (* 2.0 l_0_18_319) l_0_18_324)) (* (* 2.0 l_0_18_320) l_0_18_325))))
 (let ((?x58920 (- (- ?x58916 (* (* 2.0 l_0_18_321) l_0_18_326)) (* (* 2.0 l_0_18_322) l_0_18_327))))
 (let ((?x58924 (- (- ?x58920 (* (* 2.0 l_0_18_323) l_0_18_328)) (* (* 2.0 l_0_18_347) l_0_18_352))))
 (let ((?x58928 (- (- ?x58924 (* (* 2.0 l_0_18_348) l_0_18_353)) (* (* 2.0 l_0_18_349) l_0_18_354))))
 (let ((?x58932 (- (- ?x58928 (* (* 2.0 l_0_18_350) l_0_18_355)) (* (* 2.0 l_0_18_351) l_0_18_356))))
 (= ?x58932 0.0)))))))))))))))))
(assert
 (let ((?x59038 (* l_0_18_357 l_0_18_357)))
 (let ((?x59036 (* l_0_18_356 l_0_18_356)))
 (let ((?x59034 (* l_0_18_355 l_0_18_355)))
 (let ((?x59032 (* l_0_18_354 l_0_18_354)))
 (let ((?x59030 (* l_0_18_353 l_0_18_353)))
 (let ((?x59028 (* l_0_18_352 l_0_18_352)))
 (let ((?x59026 (* l_0_18_329 l_0_18_329)))
 (let ((?x59024 (* l_0_18_328 l_0_18_328)))
 (let ((?x59022 (* l_0_18_327 l_0_18_327)))
 (let ((?x59020 (* l_0_18_326 l_0_18_326)))
 (let ((?x59018 (* l_0_18_325 l_0_18_325)))
 (let ((?x59016 (* l_0_18_324 l_0_18_324)))
 (let ((?x59014 (* l_0_18_301 l_0_18_301)))
 (let ((?x59012 (* l_0_18_300 l_0_18_300)))
 (let ((?x59010 (* l_0_18_299 l_0_18_299)))
 (let ((?x59008 (* l_0_18_298 l_0_18_298)))
 (let ((?x59006 (* l_0_18_297 l_0_18_297)))
 (let ((?x59004 (* l_0_18_296 l_0_18_296)))
 (let ((?x59002 (* l_0_18_273 l_0_18_273)))
 (let ((?x59000 (* l_0_18_272 l_0_18_272)))
 (let ((?x58998 (* l_0_18_271 l_0_18_271)))
 (let ((?x58996 (* l_0_18_270 l_0_18_270)))
 (let ((?x58994 (* l_0_18_269 l_0_18_269)))
 (let ((?x58992 (* l_0_18_268 l_0_18_268)))
 (let ((?x58990 (* l_0_18_245 l_0_18_245)))
 (let ((?x58988 (* l_0_18_244 l_0_18_244)))
 (let ((?x58986 (* l_0_18_243 l_0_18_243)))
 (let ((?x58984 (* l_0_18_242 l_0_18_242)))
 (let ((?x58982 (* l_0_18_241 l_0_18_241)))
 (let ((?x58980 (* l_0_18_240 l_0_18_240)))
 (let ((?x58978 (* l_0_18_217 l_0_18_217)))
 (let ((?x58976 (* l_0_18_216 l_0_18_216)))
 (let ((?x58974 (* l_0_18_215 l_0_18_215)))
 (let ((?x58972 (* l_0_18_214 l_0_18_214)))
 (let ((?x58973 (- (- (* (- l_0_18_212) l_0_18_212) (* l_0_18_213 l_0_18_213)) ?x58972)))
 (let ((?x58987 (- (- (- (- (- (- (- ?x58973 ?x58974) ?x58976) ?x58978) ?x58980) ?x58982) ?x58984) ?x58986)))
 (let ((?x59001 (- (- (- (- (- (- (- ?x58987 ?x58988) ?x58990) ?x58992) ?x58994) ?x58996) ?x58998) ?x59000)))
 (let ((?x59015 (- (- (- (- (- (- (- ?x59001 ?x59002) ?x59004) ?x59006) ?x59008) ?x59010) ?x59012) ?x59014)))
 (let ((?x59029 (- (- (- (- (- (- (- ?x59015 ?x59016) ?x59018) ?x59020) ?x59022) ?x59024) ?x59026) ?x59028)))
 (= (- (- (- (- (- ?x59029 ?x59030) ?x59032) ?x59034) ?x59036) ?x59038) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x59152 (* l_0_18_364 l_0_18_364)))
 (let ((?x59150 (* l_0_18_363 l_0_18_363)))
 (let ((?x59148 (* l_0_18_362 l_0_18_362)))
 (let ((?x59146 (* l_0_18_361 l_0_18_361)))
 (let ((?x59144 (* l_0_18_360 l_0_18_360)))
 (let ((?x59142 (* l_0_18_359 l_0_18_359)))
 (let ((?x59140 (* l_0_18_358 l_0_18_358)))
 (let ((?x59138 (* l_0_18_336 l_0_18_336)))
 (let ((?x59136 (* l_0_18_335 l_0_18_335)))
 (let ((?x59134 (* l_0_18_334 l_0_18_334)))
 (let ((?x59132 (* l_0_18_333 l_0_18_333)))
 (let ((?x59130 (* l_0_18_332 l_0_18_332)))
 (let ((?x59128 (* l_0_18_331 l_0_18_331)))
 (let ((?x59126 (* l_0_18_330 l_0_18_330)))
 (let ((?x59124 (* l_0_18_308 l_0_18_308)))
 (let ((?x59122 (* l_0_18_307 l_0_18_307)))
 (let ((?x59120 (* l_0_18_306 l_0_18_306)))
 (let ((?x59118 (* l_0_18_305 l_0_18_305)))
 (let ((?x59116 (* l_0_18_304 l_0_18_304)))
 (let ((?x59114 (* l_0_18_303 l_0_18_303)))
 (let ((?x59112 (* l_0_18_302 l_0_18_302)))
 (let ((?x59110 (* l_0_18_280 l_0_18_280)))
 (let ((?x59108 (* l_0_18_279 l_0_18_279)))
 (let ((?x59106 (* l_0_18_278 l_0_18_278)))
 (let ((?x59104 (* l_0_18_277 l_0_18_277)))
 (let ((?x59102 (* l_0_18_276 l_0_18_276)))
 (let ((?x59100 (* l_0_18_275 l_0_18_275)))
 (let ((?x59098 (* l_0_18_274 l_0_18_274)))
 (let ((?x59096 (* l_0_18_252 l_0_18_252)))
 (let ((?x59094 (* l_0_18_251 l_0_18_251)))
 (let ((?x59092 (* l_0_18_250 l_0_18_250)))
 (let ((?x59090 (* l_0_18_249 l_0_18_249)))
 (let ((?x59088 (* l_0_18_248 l_0_18_248)))
 (let ((?x59086 (* l_0_18_247 l_0_18_247)))
 (let ((?x59084 (* l_0_18_246 l_0_18_246)))
 (let ((?x59082 (* l_0_18_224 l_0_18_224)))
 (let ((?x59080 (* l_0_18_223 l_0_18_223)))
 (let ((?x50689 (* l_0_18_222 l_0_18_222)))
 (let ((?x20020 (* l_0_18_221 l_0_18_221)))
 (let ((?x50665 (* l_0_18_220 l_0_18_220)))
 (let ((?x50674 (- (- (* (- l_0_18_218) l_0_18_218) (* l_0_18_219 l_0_18_219)) ?x50665)))
 (let ((?x59089 (- (- (- (- (- (- (- ?x50674 ?x20020) ?x50689) ?x59080) ?x59082) ?x59084) ?x59086) ?x59088)))
 (let ((?x59103 (- (- (- (- (- (- (- ?x59089 ?x59090) ?x59092) ?x59094) ?x59096) ?x59098) ?x59100) ?x59102)))
 (let ((?x59117 (- (- (- (- (- (- (- ?x59103 ?x59104) ?x59106) ?x59108) ?x59110) ?x59112) ?x59114) ?x59116)))
 (let ((?x59131 (- (- (- (- (- (- (- ?x59117 ?x59118) ?x59120) ?x59122) ?x59124) ?x59126) ?x59128) ?x59130)))
 (let ((?x59145 (- (- (- (- (- (- (- ?x59131 ?x59132) ?x59134) ?x59136) ?x59138) ?x59140) ?x59142) ?x59144)))
 (= (- (- (- (- ?x59145 ?x59146) ?x59148) ?x59150) ?x59152) 0.0))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_28 0.0))
(assert
 (>= l_0_18_29 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_34 0.0))
(assert
 (>= l_0_18_38 0.0))
(assert
 (>= l_0_18_43 0.0))
(assert
 (>= l_0_18_49 0.0))
(assert
 (>= l_0_18_56 0.0))
(assert
 (>= l_0_18_57 0.0))
(assert
 (>= l_0_18_59 0.0))
(assert
 (>= l_0_18_62 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_71 0.0))
(assert
 (>= l_0_18_77 0.0))
(assert
 (>= l_0_18_84 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_87 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_94 0.0))
(assert
 (>= l_0_18_99 0.0))
(assert
 (>= l_0_18_105 0.0))
(assert
 (>= l_0_18_112 0.0))
(assert
 (>= l_0_18_113 0.0))
(assert
 (>= l_0_18_115 0.0))
(assert
 (>= l_0_18_118 0.0))
(assert
 (>= l_0_18_122 0.0))
(assert
 (>= l_0_18_127 0.0))
(assert
 (>= l_0_18_133 0.0))
(assert
 (>= l_0_18_140 0.0))
(assert
 (>= l_0_18_141 0.0))
(assert
 (>= l_0_18_143 0.0))
(assert
 (>= l_0_18_146 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_155 0.0))
(assert
 (>= l_0_18_161 0.0))
(assert
 (>= l_0_18_168 0.0))
(assert
 (>= l_0_18_169 0.0))
(assert
 (>= l_0_18_171 0.0))
(assert
 (>= l_0_18_174 0.0))
(assert
 (>= l_0_18_178 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_189 0.0))
(assert
 (>= l_0_18_196 0.0))
(assert
 (>= l_0_18_197 0.0))
(assert
 (>= l_0_18_199 0.0))
(assert
 (>= l_0_18_202 0.0))
(assert
 (>= l_0_18_206 0.0))
(assert
 (>= l_0_18_211 0.0))
(assert
 (>= l_0_18_217 0.0))
(assert
 (>= l_0_18_224 0.0))
(assert
 (>= l_0_18_225 0.0))
(assert
 (>= l_0_18_227 0.0))
(assert
 (>= l_0_18_230 0.0))
(assert
 (>= l_0_18_234 0.0))
(assert
 (>= l_0_18_239 0.0))
(assert
 (>= l_0_18_245 0.0))
(assert
 (>= l_0_18_252 0.0))
(assert
 (>= l_0_18_253 0.0))
(assert
 (>= l_0_18_255 0.0))
(assert
 (>= l_0_18_258 0.0))
(assert
 (>= l_0_18_262 0.0))
(assert
 (>= l_0_18_267 0.0))
(assert
 (>= l_0_18_273 0.0))
(assert
 (>= l_0_18_280 0.0))
(assert
 (>= l_0_18_281 0.0))
(assert
 (>= l_0_18_283 0.0))
(assert
 (>= l_0_18_286 0.0))
(assert
 (>= l_0_18_290 0.0))
(assert
 (>= l_0_18_295 0.0))
(assert
 (>= l_0_18_301 0.0))
(assert
 (>= l_0_18_308 0.0))
(assert
 (>= l_0_18_309 0.0))
(assert
 (>= l_0_18_311 0.0))
(assert
 (>= l_0_18_314 0.0))
(assert
 (>= l_0_18_318 0.0))
(assert
 (>= l_0_18_323 0.0))
(assert
 (>= l_0_18_329 0.0))
(assert
 (>= l_0_18_336 0.0))
(assert
 (>= l_0_18_337 0.0))
(assert
 (>= l_0_18_339 0.0))
(assert
 (>= l_0_18_342 0.0))
(assert
 (>= l_0_18_346 0.0))
(assert
 (>= l_0_18_351 0.0))
(assert
 (>= l_0_18_357 0.0))
(assert
 (>= l_0_18_364 0.0))
(check-sat)
(get-model)