(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_45 () Real)
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (+ (- (* (- l_0_2_47) l_0_2_47) (* l_0_2_48 l_0_2_48)) 1.0) 0.0))
(assert
 (= (- (* l_0_2_1 l_0_2_1) (* l_0_2_16 l_0_2_16)) 0.0))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x540 (* ?x539 l_0_2_17)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x538 (* ?x537 l_0_2_2)))
 (= (- ?x538 ?x540) 0.0))))))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x554 (* ?x539 l_0_2_19)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x553 (* ?x537 l_0_2_4)))
 (= (- ?x553 ?x554) 0.0))))))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x567 (* ?x539 l_0_2_22)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x566 (* ?x537 l_0_2_7)))
 (= (- ?x566 ?x567) 0.0))))))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x580 (* ?x539 l_0_2_26)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x579 (* ?x537 l_0_2_11)))
 (= (- ?x579 ?x580) 0.0))))))
(assert
 (let ((?x598 (* l_0_2_3 l_0_2_3)))
 (let ((?x596 (* l_0_2_2 l_0_2_2)))
 (let ((?x599 (+ (+ (- (* (- l_0_2_17) l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x596) ?x598)))
 (= ?x599 0.0)))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x620 (* ?x619 l_0_2_5)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x617 (* ?x616 l_0_2_4)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x614 (* ?x613 l_0_2_20)))
 (let ((?x621 (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_19) ?x614) ?x617) ?x620)))
 (= ?x621 0.0)))))))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x643 (* ?x619 l_0_2_8)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x641 (* ?x616 l_0_2_7)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x634 (* ?x613 l_0_2_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_22) ?x634) ?x641) ?x643) 0.0))))))))
(assert
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x669 (* ?x613 l_0_2_27)))
 (let ((?x666 (* 2.0 l_0_2_17)))
 (let ((?x667 (* ?x666 l_0_2_26)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x664 (* ?x658 l_0_2_3)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x657 (* ?x655 l_0_2_2)))
 (let ((?x670 (- (- (+ ?x657 ?x664) ?x667) ?x669)))
 (= ?x670 0.0)))))))))))
(assert
 (let ((?x700 (* l_0_2_6 l_0_2_6)))
 (let ((?x698 (* l_0_2_5 l_0_2_5)))
 (let ((?x696 (* l_0_2_4 l_0_2_4)))
 (let ((?x694 (* l_0_2_21 l_0_2_21)))
 (let ((?x695 (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x694)))
 (= (+ (+ (+ ?x695 ?x696) ?x698) ?x700) 0.0)))))))
(assert
 (let ((?x732 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x729 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x726 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x723 (* ?x722 l_0_2_24)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x720 (* ?x719 l_0_2_23)))
 (let ((?x730 (+ (+ (- (- (* (* (- 2.0) l_0_2_19) l_0_2_22) ?x720) ?x723) ?x726) ?x729)))
 (= (+ ?x730 ?x732) 0.0))))))))))
(assert
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x769 (* ?x722 l_0_2_28)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x767 (* ?x719 l_0_2_27)))
 (let ((?x764 (* 2.0 l_0_2_19)))
 (let ((?x765 (* ?x764 l_0_2_26)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x762 (* ?x755 l_0_2_6)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x752 (* ?x658 l_0_2_5)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x750 (* ?x655 l_0_2_4)))
 (let ((?x770 (- (- (- (+ (+ ?x750 ?x752) ?x762) ?x765) ?x767) ?x769)))
 (= ?x770 0.0)))))))))))))))
(assert
 (let ((?x811 (* l_0_2_9 l_0_2_9)))
 (let ((?x809 (* l_0_2_8 l_0_2_8)))
 (let ((?x807 (* l_0_2_7 l_0_2_7)))
 (let ((?x805 (* l_0_2_25 l_0_2_25)))
 (let ((?x803 (* l_0_2_24 l_0_2_24)))
 (let ((?x801 (* l_0_2_23 l_0_2_23)))
 (let ((?x804 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x801) ?x803)))
 (= (+ (+ (+ (- ?x804 ?x805) ?x807) ?x809) ?x811) 0.0)))))))))
(assert
 (let ((?x845 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x842 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x839 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x836 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x833 (* ?x755 l_0_2_9)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x831 (* ?x658 l_0_2_8)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x829 (* ?x655 l_0_2_7)))
 (let ((?x828 (* (* 2.0 l_0_2_10) l_0_2_14)))
 (let ((?x830 (+ ?x828 ?x829)))
 (= (- (- (- (- (+ (+ ?x830 ?x831) ?x833) ?x836) ?x839) ?x842) ?x845) 0.0))))))))))))))
(assert
 (let ((?x899 (* l_0_2_30 l_0_2_30)))
 (let ((?x897 (* l_0_2_29 l_0_2_29)))
 (let ((?x895 (* l_0_2_28 l_0_2_28)))
 (let ((?x893 (* l_0_2_27 l_0_2_27)))
 (let ((?x891 (* l_0_2_26 l_0_2_26)))
 (let ((?x889 (* l_0_2_15 l_0_2_15)))
 (let ((?x887 (* l_0_2_14 l_0_2_14)))
 (let ((?x885 (* l_0_2_13 l_0_2_13)))
 (let ((?x888 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x885) ?x887)))
 (let ((?x900 (- (- (- (- (- (+ ?x888 ?x889) ?x891) ?x893) ?x895) ?x897) ?x899)))
 (= ?x900 0.0))))))))))))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x567 (* ?x539 l_0_2_22)))
 (let ((?x527 (* l_0_2_1 l_0_2_1)))
 (let ((?x922 (* 3.0 ?x527)))
 (let ((?x927 (- (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_7) ?x922) ?x567) (* (* 3.0 l_0_2_16) l_0_2_16))))
 (= ?x927 0.0)))))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x643 (* ?x619 l_0_2_8)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x641 (* ?x616 l_0_2_7)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x634 (* ?x613 l_0_2_23)))
 (let ((?x666 (* 2.0 l_0_2_17)))
 (let ((?x944 (* ?x666 l_0_2_22)))
 (let ((?x943 (- (* (* 6.0 l_0_2_1) l_0_2_2) (* (* 6.0 l_0_2_16) l_0_2_17))))
 (let ((?x951 (- (- (- (+ (+ ?x943 ?x944) ?x634) ?x641) ?x643) (* (* 2.0 l_0_2_46) l_0_2_52))))
 (= ?x951 0.0))))))))))))
(assert
 (let ((?x732 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x729 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x726 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x723 (* ?x722 l_0_2_24)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x720 (* ?x719 l_0_2_23)))
 (let ((?x764 (* 2.0 l_0_2_19)))
 (let ((?x979 (* ?x764 l_0_2_22)))
 (let ((?x978 (- (* (* 6.0 l_0_2_1) l_0_2_4) (* (* 6.0 l_0_2_16) l_0_2_19))))
 (= (- (- (- (+ (+ (+ ?x978 ?x979) ?x720) ?x723) ?x726) ?x729) ?x732) 0.0))))))))))))
(assert
 (let ((?x811 (* l_0_2_9 l_0_2_9)))
 (let ((?x809 (* l_0_2_8 l_0_2_8)))
 (let ((?x807 (* l_0_2_7 l_0_2_7)))
 (let ((?x805 (* l_0_2_25 l_0_2_25)))
 (let ((?x803 (* l_0_2_24 l_0_2_24)))
 (let ((?x801 (* l_0_2_23 l_0_2_23)))
 (let ((?x799 (* l_0_2_22 l_0_2_22)))
 (let ((?x1010 (- (- (* (* 6.0 l_0_2_1) l_0_2_7) (* l_0_2_10 l_0_2_10)) (* (* 6.0 l_0_2_16) l_0_2_22))))
 (let ((?x1017 (- (- (- (+ (+ (+ (+ ?x1010 ?x799) ?x801) ?x803) ?x805) ?x807) ?x809) ?x811)))
 (= ?x1017 0.0)))))))))))
(assert
 (let ((?x845 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x842 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x839 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x836 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x567 (* ?x539 l_0_2_22)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x833 (* ?x755 l_0_2_9)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x831 (* ?x658 l_0_2_8)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x829 (* ?x655 l_0_2_7)))
 (let ((?x828 (* (* 2.0 l_0_2_10) l_0_2_14)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x566 (* ?x537 l_0_2_7)))
 (let ((?x1042 (- (- (- (+ (* (* 6.0 l_0_2_1) l_0_2_11) ?x566) ?x828) ?x829) ?x831)))
 (let ((?x1047 (+ (- (- (- ?x1042 ?x833) ?x567) (* (* 6.0 l_0_2_16) l_0_2_26)) ?x836)))
 (let ((?x1053 (+ (+ (+ (+ ?x1047 ?x839) ?x842) ?x845) (* (* 2.0 l_0_2_31) l_0_2_37))))
 (= ?x1053 0.0))))))))))))))))))))
(assert
 (let ((?x1088 (- (* (* (- 3.0) l_0_2_17) l_0_2_17) (* (* 3.0 l_0_2_18) l_0_2_18))))
 (let ((?x1092 (+ (+ ?x1088 (* 3.0 (* l_0_2_2 l_0_2_2))) (* 3.0 (* l_0_2_3 l_0_2_3)))))
 (let ((?x1098 (- (- ?x1092 (* (* 2.0 l_0_2_47) l_0_2_52)) (* (* 2.0 l_0_2_48) l_0_2_53))))
 (= ?x1098 0.0)))))
(assert
 (let ((?x1128 (- (* (* (- 6.0) l_0_2_17) l_0_2_19) (* (* 6.0 l_0_2_18) l_0_2_20))))
 (let ((?x1134 (+ (+ ?x1128 (* (* 6.0 l_0_2_2) l_0_2_4)) (* (* 6.0 l_0_2_3) l_0_2_5))))
 (let ((?x1140 (- (- ?x1134 (* (* 2.0 l_0_2_49) l_0_2_52)) (* (* 2.0 l_0_2_50) l_0_2_53))))
 (= (- ?x1140 (* (* 2.0 l_0_2_51) l_0_2_54)) 0.0)))))
(assert
 (let ((?x1190 (* l_0_2_55 l_0_2_55)))
 (let ((?x1188 (* l_0_2_54 l_0_2_54)))
 (let ((?x1186 (* l_0_2_53 l_0_2_53)))
 (let ((?x1184 (* l_0_2_52 l_0_2_52)))
 (let ((?x1179 (- (* (* (- 6.0) l_0_2_17) l_0_2_22) (* (* 6.0 l_0_2_18) l_0_2_23))))
 (let ((?x1183 (+ (+ ?x1179 (* (* 6.0 l_0_2_2) l_0_2_7)) (* (* 6.0 l_0_2_3) l_0_2_8))))
 (= (- (- (- (- ?x1183 ?x1184) ?x1186) ?x1188) ?x1190) 0.0))))))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x643 (* ?x619 l_0_2_8)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x641 (* ?x616 l_0_2_7)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x634 (* ?x613 l_0_2_23)))
 (let ((?x666 (* 2.0 l_0_2_17)))
 (let ((?x944 (* ?x666 l_0_2_22)))
 (let ((?x1223 (+ (* (* 6.0 l_0_2_11) l_0_2_2) (* (* 6.0 l_0_2_12) l_0_2_3))))
 (let ((?x1230 (- (- (- (- ?x1223 ?x944) (* (* 6.0 l_0_2_17) l_0_2_26)) ?x634) (* (* 6.0 l_0_2_18) l_0_2_27))))
 (let ((?x1238 (+ (+ (+ (+ ?x1230 ?x641) ?x643) (* (* 2.0 l_0_2_32) l_0_2_37)) (* (* 2.0 l_0_2_33) l_0_2_38))))
 (let ((?x1244 (- (- ?x1238 (* (* 2.0 l_0_2_52) l_0_2_56)) (* (* 2.0 l_0_2_53) l_0_2_57))))
 (let ((?x1250 (- (- ?x1244 (* (* 2.0 l_0_2_54) l_0_2_58)) (* (* 2.0 l_0_2_55) l_0_2_59))))
 (= ?x1250 0.0)))))))))))))))
(assert
 (let ((?x1309 (- (* (* (- 3.0) l_0_2_19) l_0_2_19) (* (* 3.0 l_0_2_20) l_0_2_20))))
 (let ((?x1314 (+ (- ?x1309 (* (* 3.0 l_0_2_21) l_0_2_21)) (* 3.0 (* l_0_2_4 l_0_2_4)))))
 (let ((?x1318 (+ (+ ?x1314 (* 3.0 (* l_0_2_5 l_0_2_5))) (* 3.0 (* l_0_2_6 l_0_2_6)))))
 (= ?x1318 0.0)))))
(assert
 (let ((?x1341 (- (* (* (- 6.0) l_0_2_19) l_0_2_22) (* (* 6.0 l_0_2_20) l_0_2_23))))
 (let ((?x1347 (+ (- ?x1341 (* (* 6.0 l_0_2_21) l_0_2_24)) (* (* 6.0 l_0_2_4) l_0_2_7))))
 (let ((?x1353 (+ (+ ?x1347 (* (* 6.0 l_0_2_5) l_0_2_8)) (* (* 6.0 l_0_2_6) l_0_2_9))))
 (= ?x1353 0.0)))))
(assert
 (let ((?x732 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x729 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x726 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x723 (* ?x722 l_0_2_24)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x720 (* ?x719 l_0_2_23)))
 (let ((?x764 (* 2.0 l_0_2_19)))
 (let ((?x979 (* ?x764 l_0_2_22)))
 (let ((?x1368 (+ (* (* 6.0 l_0_2_11) l_0_2_4) (* (* 6.0 l_0_2_12) l_0_2_5))))
 (let ((?x1381 (- (- (+ ?x1368 (* (* 6.0 l_0_2_13) l_0_2_6)) ?x979) (* (* 6.0 l_0_2_19) l_0_2_26))))
 (let ((?x1387 (- (- (- (- ?x1381 ?x720) (* (* 6.0 l_0_2_20) l_0_2_27)) ?x723) (* (* 6.0 l_0_2_21) l_0_2_28))))
 (let ((?x1393 (+ (+ ?x1387 (* (* 2.0 l_0_2_34) l_0_2_37)) (* (* 2.0 l_0_2_35) l_0_2_38))))
 (let ((?x1399 (+ (+ (+ (+ ?x1393 (* (* 2.0 l_0_2_36) l_0_2_39)) ?x726) ?x729) ?x732)))
 (= ?x1399 0.0))))))))))))))))
(assert
 (let ((?x811 (* l_0_2_9 l_0_2_9)))
 (let ((?x1455 (* 3.0 ?x811)))
 (let ((?x809 (* l_0_2_8 l_0_2_8)))
 (let ((?x1453 (* 3.0 ?x809)))
 (let ((?x807 (* l_0_2_7 l_0_2_7)))
 (let ((?x1451 (* 3.0 ?x807)))
 (let ((?x798 (* l_0_2_10 l_0_2_10)))
 (let ((?x1428 (* 3.0 ?x798)))
 (let ((?x1444 (- (- ?x1428 (* (* 3.0 l_0_2_22) l_0_2_22)) (* (* 3.0 l_0_2_23) l_0_2_23))))
 (let ((?x1450 (- (- ?x1444 (* (* 3.0 l_0_2_24) l_0_2_24)) (* (* 3.0 l_0_2_25) l_0_2_25))))
 (= (+ (+ (+ ?x1450 ?x1451) ?x1453) ?x1455) 0.0))))))))))))
(assert
 (let ((?x811 (* l_0_2_9 l_0_2_9)))
 (let ((?x809 (* l_0_2_8 l_0_2_8)))
 (let ((?x807 (* l_0_2_7 l_0_2_7)))
 (let ((?x1511 (* l_0_2_40 l_0_2_40)))
 (let ((?x1509 (* l_0_2_39 l_0_2_39)))
 (let ((?x1507 (* l_0_2_38 l_0_2_38)))
 (let ((?x1505 (* l_0_2_37 l_0_2_37)))
 (let ((?x805 (* l_0_2_25 l_0_2_25)))
 (let ((?x803 (* l_0_2_24 l_0_2_24)))
 (let ((?x801 (* l_0_2_23 l_0_2_23)))
 (let ((?x799 (* l_0_2_22 l_0_2_22)))
 (let ((?x1484 (+ (+ (* (* 6.0 l_0_2_10) l_0_2_14) (* l_0_2_10 l_0_2_10)) (* (* 6.0 l_0_2_11) l_0_2_7))))
 (let ((?x1488 (+ (+ ?x1484 (* (* 6.0 l_0_2_12) l_0_2_8)) (* (* 6.0 l_0_2_13) l_0_2_9))))
 (let ((?x1495 (- (- (- ?x1488 (* (* 6.0 l_0_2_22) l_0_2_26)) ?x799) (* (* 6.0 l_0_2_23) l_0_2_27))))
 (let ((?x1503 (- (- (- (- ?x1495 ?x801) (* (* 6.0 l_0_2_24) l_0_2_28)) ?x803) (* (* 6.0 l_0_2_25) l_0_2_29))))
 (let ((?x1514 (+ (+ (+ (+ (+ (+ (- ?x1503 ?x805) ?x1505) ?x1507) ?x1509) ?x1511) ?x807) ?x809)))
 (= (+ ?x1514 ?x811) 0.0))))))))))))))))))
(assert
 (let ((?x845 (* (* 2.0 l_0_2_25) l_0_2_29)))
 (let ((?x842 (* (* 2.0 l_0_2_24) l_0_2_28)))
 (let ((?x839 (* (* 2.0 l_0_2_23) l_0_2_27)))
 (let ((?x836 (* (* 2.0 l_0_2_22) l_0_2_26)))
 (let ((?x889 (* l_0_2_15 l_0_2_15)))
 (let ((?x1562 (* 3.0 ?x889)))
 (let ((?x887 (* l_0_2_14 l_0_2_14)))
 (let ((?x1560 (* 3.0 ?x887)))
 (let ((?x885 (* l_0_2_13 l_0_2_13)))
 (let ((?x1558 (* 3.0 ?x885)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x833 (* ?x755 l_0_2_9)))
 (let ((?x883 (* l_0_2_12 l_0_2_12)))
 (let ((?x1555 (* 3.0 ?x883)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x831 (* ?x658 l_0_2_8)))
 (let ((?x882 (* l_0_2_11 l_0_2_11)))
 (let ((?x1552 (* 3.0 ?x882)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x829 (* ?x655 l_0_2_7)))
 (let ((?x828 (* (* 2.0 l_0_2_10) l_0_2_14)))
 (let ((?x830 (+ ?x828 ?x829)))
 (let ((?x1563 (+ (+ (+ (+ (+ (+ (+ ?x830 ?x1552) ?x831) ?x1555) ?x833) ?x1558) ?x1560) ?x1562)))
 (let ((?x1570 (- (- (- (- (- ?x1563 ?x836) ?x839) ?x842) ?x845) (* (* 3.0 l_0_2_26) l_0_2_26))))
 (let ((?x1576 (- (- ?x1570 (* (* 3.0 l_0_2_27) l_0_2_27)) (* (* 3.0 l_0_2_28) l_0_2_28))))
 (let ((?x1582 (- (- ?x1576 (* (* 3.0 l_0_2_29) l_0_2_29)) (* (* 3.0 l_0_2_30) l_0_2_30))))
 (let ((?x1588 (+ (+ ?x1582 (* (* 2.0 l_0_2_37) l_0_2_41)) (* (* 2.0 l_0_2_38) l_0_2_42))))
 (let ((?x1594 (+ (+ ?x1588 (* (* 2.0 l_0_2_39) l_0_2_43)) (* (* 2.0 l_0_2_40) l_0_2_44))))
 (= ?x1594 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x1645 (* l_0_2_31 l_0_2_31)))
 (let ((?x530 (* l_0_2_16 l_0_2_16)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x580 (* ?x539 l_0_2_26)))
 (let ((?x1643 (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) (* l_0_2_1 l_0_2_1)) ?x580)))
 (= (+ (- ?x1643 ?x530) ?x1645) 0.0)))))))
(assert
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x669 (* ?x613 l_0_2_27)))
 (let ((?x666 (* 2.0 l_0_2_17)))
 (let ((?x667 (* ?x666 l_0_2_26)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x540 (* ?x539 l_0_2_17)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x664 (* ?x658 l_0_2_3)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x657 (* ?x655 l_0_2_2)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x538 (* ?x537 l_0_2_2)))
 (let ((?x1660 (+ (+ (+ (- (- (- ?x538 ?x657) ?x664) ?x540) ?x667) ?x669) (* (* 2.0 l_0_2_31) l_0_2_32))))
 (= (- ?x1660 (* (* 2.0 l_0_2_46) l_0_2_56)) 0.0)))))))))))))))
(assert
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x769 (* ?x722 l_0_2_28)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x767 (* ?x719 l_0_2_27)))
 (let ((?x764 (* 2.0 l_0_2_19)))
 (let ((?x765 (* ?x764 l_0_2_26)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x554 (* ?x539 l_0_2_19)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x762 (* ?x755 l_0_2_6)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x752 (* ?x658 l_0_2_5)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x750 (* ?x655 l_0_2_4)))
 (let ((?x537 (* 2.0 l_0_2_1)))
 (let ((?x553 (* ?x537 l_0_2_4)))
 (let ((?x1690 (+ (+ (+ (- (- (- (- ?x553 ?x750) ?x752) ?x762) ?x554) ?x765) ?x767) ?x769)))
 (= (+ ?x1690 (* (* 2.0 l_0_2_31) l_0_2_34)) 0.0)))))))))))))))))))
(assert
 (let ((?x899 (* l_0_2_30 l_0_2_30)))
 (let ((?x897 (* l_0_2_29 l_0_2_29)))
 (let ((?x895 (* l_0_2_28 l_0_2_28)))
 (let ((?x893 (* l_0_2_27 l_0_2_27)))
 (let ((?x891 (* l_0_2_26 l_0_2_26)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x580 (* ?x539 l_0_2_26)))
 (let ((?x889 (* l_0_2_15 l_0_2_15)))
 (let ((?x887 (* l_0_2_14 l_0_2_14)))
 (let ((?x885 (* l_0_2_13 l_0_2_13)))
 (let ((?x883 (* l_0_2_12 l_0_2_12)))
 (let ((?x1713 (- (- (* (* 2.0 l_0_2_1) l_0_2_11) (* l_0_2_11 l_0_2_11)) ?x883)))
 (let ((?x1720 (+ (+ (+ (- (- (- (- ?x1713 ?x885) ?x887) ?x889) ?x580) ?x891) ?x893) ?x895)))
 (= (+ (+ (+ ?x1720 ?x897) ?x899) (* (* 2.0 l_0_2_31) l_0_2_41)) 0.0)))))))))))))))
(assert
 (let ((?x1748 (* l_0_2_33 l_0_2_33)))
 (let ((?x1746 (* l_0_2_32 l_0_2_32)))
 (let ((?x598 (* l_0_2_3 l_0_2_3)))
 (let ((?x596 (* l_0_2_2 l_0_2_2)))
 (let ((?x599 (+ (+ (- (* (- l_0_2_17) l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x596) ?x598)))
 (let ((?x1753 (- (- (+ (+ ?x599 ?x1746) ?x1748) (* (* 2.0 l_0_2_47) l_0_2_56)) (* (* 2.0 l_0_2_48) l_0_2_57))))
 (= ?x1753 0.0))))))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x620 (* ?x619 l_0_2_5)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x617 (* ?x616 l_0_2_4)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x614 (* ?x613 l_0_2_20)))
 (let ((?x621 (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_19) ?x614) ?x617) ?x620)))
 (let ((?x1776 (+ (+ ?x621 (* (* 2.0 l_0_2_32) l_0_2_34)) (* (* 2.0 l_0_2_33) l_0_2_35))))
 (let ((?x1780 (- (- ?x1776 (* (* 2.0 l_0_2_49) l_0_2_56)) (* (* 2.0 l_0_2_50) l_0_2_57))))
 (= (- ?x1780 (* (* 2.0 l_0_2_51) l_0_2_58)) 0.0)))))))))))
(assert
 (let ((?x1826 (* l_0_2_60 l_0_2_60)))
 (let ((?x1824 (* l_0_2_59 l_0_2_59)))
 (let ((?x1822 (* l_0_2_58 l_0_2_58)))
 (let ((?x1820 (* l_0_2_57 l_0_2_57)))
 (let ((?x1818 (* l_0_2_56 l_0_2_56)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x669 (* ?x613 l_0_2_27)))
 (let ((?x666 (* 2.0 l_0_2_17)))
 (let ((?x667 (* ?x666 l_0_2_26)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x664 (* ?x658 l_0_2_3)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x657 (* ?x655 l_0_2_2)))
 (let ((?x670 (- (- (+ ?x657 ?x664) ?x667) ?x669)))
 (let ((?x1817 (+ (+ ?x670 (* (* 2.0 l_0_2_32) l_0_2_41)) (* (* 2.0 l_0_2_33) l_0_2_42))))
 (= (- (- (- (- (- ?x1817 ?x1818) ?x1820) ?x1822) ?x1824) ?x1826) 0.0)))))))))))))))))
(assert
 (let ((?x700 (* l_0_2_6 l_0_2_6)))
 (let ((?x698 (* l_0_2_5 l_0_2_5)))
 (let ((?x696 (* l_0_2_4 l_0_2_4)))
 (let ((?x1854 (* l_0_2_36 l_0_2_36)))
 (let ((?x1852 (* l_0_2_35 l_0_2_35)))
 (let ((?x1850 (* l_0_2_34 l_0_2_34)))
 (let ((?x694 (* l_0_2_21 l_0_2_21)))
 (let ((?x695 (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x694)))
 (= (+ (+ (+ (+ (+ (+ ?x695 ?x1850) ?x1852) ?x1854) ?x696) ?x698) ?x700) 0.0))))))))))
(assert
 (let ((?x722 (* 2.0 l_0_2_21)))
 (let ((?x769 (* ?x722 l_0_2_28)))
 (let ((?x719 (* 2.0 l_0_2_20)))
 (let ((?x767 (* ?x719 l_0_2_27)))
 (let ((?x764 (* 2.0 l_0_2_19)))
 (let ((?x765 (* ?x764 l_0_2_26)))
 (let ((?x755 (* 2.0 l_0_2_13)))
 (let ((?x762 (* ?x755 l_0_2_6)))
 (let ((?x658 (* 2.0 l_0_2_12)))
 (let ((?x752 (* ?x658 l_0_2_5)))
 (let ((?x655 (* 2.0 l_0_2_11)))
 (let ((?x750 (* ?x655 l_0_2_4)))
 (let ((?x770 (- (- (- (+ (+ ?x750 ?x752) ?x762) ?x765) ?x767) ?x769)))
 (let ((?x1868 (+ (+ ?x770 (* (* 2.0 l_0_2_34) l_0_2_41)) (* (* 2.0 l_0_2_35) l_0_2_42))))
 (= (+ ?x1868 (* (* 2.0 l_0_2_36) l_0_2_43)) 0.0))))))))))))))))
(assert
 (let ((?x1888 (* l_0_2_45 l_0_2_45)))
 (let ((?x1886 (* l_0_2_44 l_0_2_44)))
 (let ((?x1884 (* l_0_2_43 l_0_2_43)))
 (let ((?x1882 (* l_0_2_42 l_0_2_42)))
 (let ((?x1880 (* l_0_2_41 l_0_2_41)))
 (let ((?x899 (* l_0_2_30 l_0_2_30)))
 (let ((?x897 (* l_0_2_29 l_0_2_29)))
 (let ((?x895 (* l_0_2_28 l_0_2_28)))
 (let ((?x893 (* l_0_2_27 l_0_2_27)))
 (let ((?x891 (* l_0_2_26 l_0_2_26)))
 (let ((?x889 (* l_0_2_15 l_0_2_15)))
 (let ((?x887 (* l_0_2_14 l_0_2_14)))
 (let ((?x885 (* l_0_2_13 l_0_2_13)))
 (let ((?x888 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x885) ?x887)))
 (let ((?x900 (- (- (- (- (- (+ ?x888 ?x889) ?x891) ?x893) ?x895) ?x897) ?x899)))
 (= (+ (+ (+ (+ (+ ?x900 ?x1880) ?x1882) ?x1884) ?x1886) ?x1888) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_16 l_0_2_16)) 0.0))
(assert
 (let ((?x1900 (* l_0_2_46 l_0_2_46)))
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x540 (* ?x539 l_0_2_17)))
 (= (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x540) ?x1900) 0.0)))))
(assert
 (let ((?x539 (* 2.0 l_0_2_16)))
 (let ((?x554 (* ?x539 l_0_2_19)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x554) 0.0))))
(assert
 (let ((?x598 (* l_0_2_3 l_0_2_3)))
 (let ((?x596 (* l_0_2_2 l_0_2_2)))
 (let ((?x1915 (- (- (+ (* l_0_2_17 l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x596) ?x598)))
 (= (- ?x1915 (* (* 2.0 l_0_2_46) l_0_2_47)) 0.0)))))
(assert
 (let ((?x619 (* 2.0 l_0_2_3)))
 (let ((?x620 (* ?x619 l_0_2_5)))
 (let ((?x616 (* 2.0 l_0_2_2)))
 (let ((?x617 (* ?x616 l_0_2_4)))
 (let ((?x613 (* 2.0 l_0_2_18)))
 (let ((?x614 (* ?x613 l_0_2_20)))
 (let ((?x1935 (- (- (- (+ (* (* 2.0 l_0_2_17) l_0_2_19) ?x614) ?x617) ?x620) (* (* 2.0 l_0_2_46) l_0_2_49))))
 (= ?x1935 0.0)))))))))
(assert
 (let ((?x700 (* l_0_2_6 l_0_2_6)))
 (let ((?x698 (* l_0_2_5 l_0_2_5)))
 (let ((?x696 (* l_0_2_4 l_0_2_4)))
 (let ((?x694 (* l_0_2_21 l_0_2_21)))
 (let ((?x1952 (- (+ (+ (* l_0_2_19 l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x694) ?x696)))
 (= (- (- ?x1952 ?x698) ?x700) 0.0)))))))
(assert
 (let ((?x1965 (- (* (* (- 2.0) l_0_2_47) l_0_2_49) (* (* 2.0 l_0_2_48) l_0_2_50))))
 (= ?x1965 0.0)))
(assert
 (let ((?x1982 (* l_0_2_51 l_0_2_51)))
 (= (- (- (* (- l_0_2_49) l_0_2_49) (* l_0_2_50 l_0_2_50)) ?x1982) 0.0)))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_16 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_40 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_46 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_51 0.0))
(assert
 (>= l_0_2_55 0.0))
(assert
 (>= l_0_2_60 0.0))
(assert
 (let ((?x2019 (* l_0_3_78 l_0_3_78)))
 (= (- (- (- (- _a_0_) (* l_0_3_77 l_0_3_77)) ?x2019) 1.0) 0.0)))
(assert
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x2052 (* ?x2051 l_0_3_65)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x2049 (* ?x2048 l_0_3_64)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x2046 (* ?x2045 l_0_3_50)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x2043 (* ?x2042 l_0_3_49)))
 (let ((?x2040 (* l_0_3_3 l_0_3_3)))
 (let ((?x2038 (* l_0_3_2 l_0_3_2)))
 (let ((?x2041 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2038) ?x2040)))
 (= (- (+ (+ (- (- ?x2041 ?x2043) ?x2046) ?x2049) ?x2052) 1.0) 0.0)))))))))))))
(assert
 (let ((?x2100 (* l_0_3_81 l_0_3_81)))
 (let ((?x2098 (* l_0_3_80 l_0_3_80)))
 (let ((?x2096 (* l_0_3_79 l_0_3_79)))
 (let ((?x2094 (* l_0_3_63 l_0_3_63)))
 (let ((?x2092 (* l_0_3_62 l_0_3_62)))
 (let ((?x2095 (+ (+ (- (* (- l_0_3_47) l_0_3_47) (* l_0_3_48 l_0_3_48)) ?x2092) ?x2094)))
 (= (- (- (- (- ?x2095 ?x2096) ?x2098) ?x2100) 3.0) 0.0))))))))
(assert
 (let ((?x2133 (- (- (- _a_2_) (* (* 2.0 l_0_3_77) l_0_3_79)) (* (* 2.0 l_0_3_78) l_0_3_80))))
 (= (- ?x2133 3.0) 0.0)))
(assert
 (let ((?x2160 (* l_0_3_33 l_0_3_33)))
 (let ((?x2158 (* l_0_3_32 l_0_3_32)))
 (let ((?x2040 (* l_0_3_3 l_0_3_3)))
 (let ((?x2038 (* l_0_3_2 l_0_3_2)))
 (let ((?x2036 (* l_0_3_18 l_0_3_18)))
 (let ((?x2159 (- (+ (+ (- (- (- _a_1_) (* l_0_3_17 l_0_3_17)) ?x2036) ?x2038) ?x2040) ?x2158)))
 (let ((?x2165 (- (- (- ?x2159 ?x2160) (* (* 2.0 l_0_3_77) l_0_3_86)) (* (* 2.0 l_0_3_78) l_0_3_87))))
 (= ?x2165 0.0)))))))))
(assert
 (let ((?x2040 (* l_0_3_3 l_0_3_3)))
 (let ((?x2038 (* l_0_3_2 l_0_3_2)))
 (let ((?x2194 (- (- (+ (* l_0_3_17 l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2038) ?x2040)))
 (= (+ (- ?x2194 (* (* 2.0 l_0_3_76) l_0_3_77)) 1.0) 0.0)))))
(assert
 (= (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) 0.0))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2228 (* ?x2227 l_0_3_64)))
 (let ((?x2224 (* 2.0 l_0_3_46)))
 (let ((?x2225 (* ?x2224 l_0_3_49)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2222 (* ?x2221 l_0_3_17)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2220 (* ?x2219 l_0_3_2)))
 (= (+ (- (- ?x2220 ?x2222) ?x2225) ?x2228) 0.0))))))))))
(assert
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2250 (* ?x2221 l_0_3_19)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2249 (* ?x2219 l_0_3_4)))
 (= (- ?x2249 ?x2250) 0.0))))))
(assert
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2263 (* ?x2221 l_0_3_22)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2262 (* ?x2219 l_0_3_7)))
 (= (- ?x2262 ?x2263) 0.0))))))
(assert
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2276 (* ?x2221 l_0_3_26)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2275 (* ?x2219 l_0_3_11)))
 (= (- ?x2275 ?x2276) 0.0))))))
(assert
 (let ((?x2309 (* l_0_3_66 l_0_3_66)))
 (let ((?x2307 (* l_0_3_65 l_0_3_65)))
 (let ((?x2305 (* l_0_3_64 l_0_3_64)))
 (let ((?x2303 (* l_0_3_51 l_0_3_51)))
 (let ((?x2301 (* l_0_3_50 l_0_3_50)))
 (let ((?x2299 (* l_0_3_49 l_0_3_49)))
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2297 (* ?x2296 l_0_3_5)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2294 (* ?x2293 l_0_3_4)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2291 (* ?x2290 l_0_3_20)))
 (let ((?x2298 (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x2291) ?x2294) ?x2297)))
 (= (+ (+ (+ (- (- (- ?x2298 ?x2299) ?x2301) ?x2303) ?x2305) ?x2307) ?x2309) 0.0)))))))))))))))
(assert
 (let ((?x2364 (* 2.0 l_0_3_66)))
 (let ((?x2365 (* ?x2364 l_0_3_69)))
 (let ((?x2361 (* 2.0 l_0_3_65)))
 (let ((?x2362 (* ?x2361 l_0_3_68)))
 (let ((?x2358 (* 2.0 l_0_3_64)))
 (let ((?x2359 (* ?x2358 l_0_3_67)))
 (let ((?x2355 (* 2.0 l_0_3_51)))
 (let ((?x2356 (* ?x2355 l_0_3_54)))
 (let ((?x2352 (* 2.0 l_0_3_50)))
 (let ((?x2353 (* ?x2352 l_0_3_53)))
 (let ((?x2349 (* 2.0 l_0_3_49)))
 (let ((?x2350 (* ?x2349 l_0_3_52)))
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2347 (* ?x2296 l_0_3_8)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2345 (* ?x2293 l_0_3_7)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2343 (* ?x2290 l_0_3_23)))
 (let ((?x2351 (- (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x2343) ?x2345) ?x2347) ?x2350)))
 (= (+ (+ (+ (- (- ?x2351 ?x2353) ?x2356) ?x2359) ?x2362) ?x2365) 0.0)))))))))))))))))))))
(assert
 (let ((?x2364 (* 2.0 l_0_3_66)))
 (let ((?x2430 (* ?x2364 l_0_3_73)))
 (let ((?x2361 (* 2.0 l_0_3_65)))
 (let ((?x2428 (* ?x2361 l_0_3_72)))
 (let ((?x2358 (* 2.0 l_0_3_64)))
 (let ((?x2426 (* ?x2358 l_0_3_71)))
 (let ((?x2355 (* 2.0 l_0_3_51)))
 (let ((?x2424 (* ?x2355 l_0_3_58)))
 (let ((?x2352 (* 2.0 l_0_3_50)))
 (let ((?x2422 (* ?x2352 l_0_3_57)))
 (let ((?x2349 (* 2.0 l_0_3_49)))
 (let ((?x2420 (* ?x2349 l_0_3_56)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2418 (* ?x2290 l_0_3_27)))
 (let ((?x2415 (* 2.0 l_0_3_17)))
 (let ((?x2416 (* ?x2415 l_0_3_26)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2405 (* ?x2404 l_0_3_3)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2402 (* ?x2400 l_0_3_2)))
 (let ((?x2419 (- (- (+ ?x2402 ?x2405) ?x2416) ?x2418)))
 (= (+ (+ (+ (- (- (- ?x2419 ?x2420) ?x2422) ?x2424) ?x2426) ?x2428) ?x2430) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2486 (* l_0_3_6 l_0_3_6)))
 (let ((?x2484 (* l_0_3_5 l_0_3_5)))
 (let ((?x2482 (* l_0_3_4 l_0_3_4)))
 (let ((?x2480 (* l_0_3_21 l_0_3_21)))
 (let ((?x2481 (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2480)))
 (= (+ (+ (+ ?x2481 ?x2482) ?x2484) ?x2486) 0.0)))))))
(assert
 (let ((?x2518 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2515 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2512 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2509 (* ?x2508 l_0_3_24)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2506 (* ?x2505 l_0_3_23)))
 (let ((?x2516 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x2506) ?x2509) ?x2512) ?x2515)))
 (= (+ ?x2516 ?x2518) 0.0))))))))))
(assert
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2555 (* ?x2508 l_0_3_28)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2553 (* ?x2505 l_0_3_27)))
 (let ((?x2550 (* 2.0 l_0_3_19)))
 (let ((?x2551 (* ?x2550 l_0_3_26)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2548 (* ?x2541 l_0_3_6)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2538 (* ?x2404 l_0_3_5)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2536 (* ?x2400 l_0_3_4)))
 (let ((?x2556 (- (- (- (+ (+ ?x2536 ?x2538) ?x2548) ?x2551) ?x2553) ?x2555)))
 (= ?x2556 0.0)))))))))))))))
(assert
 (let ((?x2597 (* l_0_3_9 l_0_3_9)))
 (let ((?x2595 (* l_0_3_8 l_0_3_8)))
 (let ((?x2593 (* l_0_3_7 l_0_3_7)))
 (let ((?x2591 (* l_0_3_25 l_0_3_25)))
 (let ((?x2589 (* l_0_3_24 l_0_3_24)))
 (let ((?x2587 (* l_0_3_23 l_0_3_23)))
 (let ((?x2590 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2587) ?x2589)))
 (= (+ (+ (+ (- ?x2590 ?x2591) ?x2593) ?x2595) ?x2597) 0.0)))))))))
(assert
 (let ((?x2631 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2628 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2625 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2622 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2619 (* ?x2541 l_0_3_9)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2617 (* ?x2404 l_0_3_8)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2615 (* ?x2400 l_0_3_7)))
 (let ((?x2614 (* (* 2.0 l_0_3_10) l_0_3_14)))
 (let ((?x2616 (+ ?x2614 ?x2615)))
 (= (- (- (- (- (+ (+ ?x2616 ?x2617) ?x2619) ?x2622) ?x2625) ?x2628) ?x2631) 0.0))))))))))))))
(assert
 (let ((?x2685 (* l_0_3_30 l_0_3_30)))
 (let ((?x2683 (* l_0_3_29 l_0_3_29)))
 (let ((?x2681 (* l_0_3_28 l_0_3_28)))
 (let ((?x2679 (* l_0_3_27 l_0_3_27)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x2675 (* l_0_3_15 l_0_3_15)))
 (let ((?x2673 (* l_0_3_14 l_0_3_14)))
 (let ((?x2671 (* l_0_3_13 l_0_3_13)))
 (let ((?x2674 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2671) ?x2673)))
 (let ((?x2686 (- (- (- (- (- (+ ?x2674 ?x2675) ?x2677) ?x2679) ?x2681) ?x2683) ?x2685)))
 (= ?x2686 0.0))))))))))))
(assert
 (let ((?x2715 (* l_0_3_61 l_0_3_61)))
 (let ((?x2713 (* l_0_3_46 l_0_3_46)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2263 (* ?x2221 l_0_3_22)))
 (let ((?x2211 (* l_0_3_1 l_0_3_1)))
 (let ((?x2707 (* 3.0 ?x2211)))
 (let ((?x2712 (- (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x2707) ?x2263) (* (* 3.0 l_0_3_16) l_0_3_16))))
 (= (- (+ ?x2712 ?x2713) ?x2715) 0.0)))))))))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2742 (* ?x2227 l_0_3_62)))
 (let ((?x2224 (* 2.0 l_0_3_46)))
 (let ((?x2740 (* ?x2224 l_0_3_47)))
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2347 (* ?x2296 l_0_3_8)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2345 (* ?x2293 l_0_3_7)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2343 (* ?x2290 l_0_3_23)))
 (let ((?x2415 (* 2.0 l_0_3_17)))
 (let ((?x2735 (* ?x2415 l_0_3_22)))
 (let ((?x2734 (- (* (* 6.0 l_0_3_1) l_0_3_2) (* (* 6.0 l_0_3_16) l_0_3_17))))
 (let ((?x2745 (- (- (+ (- (- (+ (+ ?x2734 ?x2735) ?x2343) ?x2345) ?x2347) ?x2740) ?x2742) (* (* 2.0 l_0_3_76) l_0_3_82))))
 (= ?x2745 0.0))))))))))))))))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2228 (* ?x2227 l_0_3_64)))
 (let ((?x2518 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2515 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2224 (* 2.0 l_0_3_46)))
 (let ((?x2225 (* ?x2224 l_0_3_49)))
 (let ((?x2512 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2509 (* ?x2508 l_0_3_24)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2506 (* ?x2505 l_0_3_23)))
 (let ((?x2550 (* 2.0 l_0_3_19)))
 (let ((?x2779 (* ?x2550 l_0_3_22)))
 (let ((?x2778 (- (* (* 6.0 l_0_3_1) l_0_3_4) (* (* 6.0 l_0_3_16) l_0_3_19))))
 (let ((?x2786 (- (- (+ (- (+ (+ (+ ?x2778 ?x2779) ?x2506) ?x2509) ?x2512) ?x2225) ?x2515) ?x2518)))
 (= (- ?x2786 ?x2228) 0.0)))))))))))))))))
(assert
 (let ((?x2597 (* l_0_3_9 l_0_3_9)))
 (let ((?x2595 (* l_0_3_8 l_0_3_8)))
 (let ((?x2593 (* l_0_3_7 l_0_3_7)))
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2824 (* ?x2227 l_0_3_67)))
 (let ((?x2591 (* l_0_3_25 l_0_3_25)))
 (let ((?x2589 (* l_0_3_24 l_0_3_24)))
 (let ((?x2587 (* l_0_3_23 l_0_3_23)))
 (let ((?x2585 (* l_0_3_22 l_0_3_22)))
 (let ((?x2817 (- (- (* (* 6.0 l_0_3_1) l_0_3_7) (* l_0_3_10 l_0_3_10)) (* (* 6.0 l_0_3_16) l_0_3_22))))
 (let ((?x2823 (+ (+ (+ (+ (+ ?x2817 ?x2585) ?x2587) ?x2589) ?x2591) (* (* 2.0 l_0_3_46) l_0_3_52))))
 (= (- (- (- (- ?x2823 ?x2824) ?x2593) ?x2595) ?x2597) 0.0)))))))))))))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2875 (* ?x2227 l_0_3_71)))
 (let ((?x2631 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2628 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2625 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2622 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2263 (* ?x2221 l_0_3_22)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2619 (* ?x2541 l_0_3_9)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2617 (* ?x2404 l_0_3_8)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2615 (* ?x2400 l_0_3_7)))
 (let ((?x2614 (* (* 2.0 l_0_3_10) l_0_3_14)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2262 (* ?x2219 l_0_3_7)))
 (let ((?x2861 (- (- (- (+ (* (* 6.0 l_0_3_1) l_0_3_11) ?x2262) ?x2614) ?x2615) ?x2617)))
 (let ((?x2866 (+ (- (- (- ?x2861 ?x2619) ?x2263) (* (* 6.0 l_0_3_16) l_0_3_26)) ?x2622)))
 (let ((?x2872 (- (+ (+ (+ ?x2866 ?x2625) ?x2628) ?x2631) (* (* 2.0 l_0_3_31) l_0_3_37))))
 (= (- (+ ?x2872 (* (* 2.0 l_0_3_46) l_0_3_56)) ?x2875) 0.0))))))))))))))))))))))
(assert
 (let ((?x2094 (* l_0_3_63 l_0_3_63)))
 (let ((?x2092 (* l_0_3_62 l_0_3_62)))
 (let ((?x2090 (* l_0_3_48 l_0_3_48)))
 (let ((?x2105 (* l_0_3_47 l_0_3_47)))
 (let ((?x2924 (- (* (* (- 3.0) l_0_3_17) l_0_3_17) (* (* 3.0 l_0_3_18) l_0_3_18))))
 (let ((?x2928 (+ (+ ?x2924 (* 3.0 (* l_0_3_2 l_0_3_2))) (* 3.0 (* l_0_3_3 l_0_3_3)))))
 (let ((?x2934 (- (- (- (+ (+ ?x2928 ?x2105) ?x2090) ?x2092) ?x2094) (* (* 2.0 l_0_3_77) l_0_3_82))))
 (= (- ?x2934 (* (* 2.0 l_0_3_78) l_0_3_83)) 0.0)))))))))
(assert
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x2052 (* ?x2051 l_0_3_65)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x2049 (* ?x2048 l_0_3_64)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x2046 (* ?x2045 l_0_3_50)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x2043 (* ?x2042 l_0_3_49)))
 (let ((?x2970 (- (* (* (- 6.0) l_0_3_17) l_0_3_19) (* (* 6.0 l_0_3_18) l_0_3_20))))
 (let ((?x2976 (+ (+ ?x2970 (* (* 6.0 l_0_3_2) l_0_3_4)) (* (* 6.0 l_0_3_3) l_0_3_5))))
 (let ((?x2983 (- (- (- (+ (+ ?x2976 ?x2043) ?x2046) ?x2049) ?x2052) (* (* 2.0 l_0_3_79) l_0_3_82))))
 (let ((?x2989 (- (- ?x2983 (* (* 2.0 l_0_3_80) l_0_3_83)) (* (* 2.0 l_0_3_81) l_0_3_84))))
 (= ?x2989 0.0))))))))))))))
(assert
 (let ((?x3046 (* l_0_3_85 l_0_3_85)))
 (let ((?x3044 (* l_0_3_84 l_0_3_84)))
 (let ((?x3042 (* l_0_3_83 l_0_3_83)))
 (let ((?x3040 (* l_0_3_82 l_0_3_82)))
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x3038 (* ?x2051 l_0_3_68)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x3036 (* ?x2048 l_0_3_67)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x3034 (* ?x2045 l_0_3_53)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x3032 (* ?x2042 l_0_3_52)))
 (let ((?x3027 (- (* (* (- 6.0) l_0_3_17) l_0_3_22) (* (* 6.0 l_0_3_18) l_0_3_23))))
 (let ((?x3031 (+ (+ ?x3027 (* (* 6.0 l_0_3_2) l_0_3_7)) (* (* 6.0 l_0_3_3) l_0_3_8))))
 (let ((?x3045 (- (- (- (- (- (+ (+ ?x3031 ?x3032) ?x3034) ?x3036) ?x3038) ?x3040) ?x3042) ?x3044)))
 (= (- ?x3045 ?x3046) 0.0)))))))))))))))))
(assert
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x3119 (* ?x2051 l_0_3_72)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x3117 (* ?x2048 l_0_3_71)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x3115 (* ?x2045 l_0_3_57)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x3113 (* ?x2042 l_0_3_56)))
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2347 (* ?x2296 l_0_3_8)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2345 (* ?x2293 l_0_3_7)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2343 (* ?x2290 l_0_3_23)))
 (let ((?x2415 (* 2.0 l_0_3_17)))
 (let ((?x2735 (* ?x2415 l_0_3_22)))
 (let ((?x3097 (+ (* (* 6.0 l_0_3_11) l_0_3_2) (* (* 6.0 l_0_3_12) l_0_3_3))))
 (let ((?x3104 (- (- (- (- ?x3097 ?x2735) (* (* 6.0 l_0_3_17) l_0_3_26)) ?x2343) (* (* 6.0 l_0_3_18) l_0_3_27))))
 (let ((?x3112 (- (- (+ (+ ?x3104 ?x2345) ?x2347) (* (* 2.0 l_0_3_32) l_0_3_37)) (* (* 2.0 l_0_3_33) l_0_3_38))))
 (let ((?x3123 (- (- (- (+ (+ ?x3112 ?x3113) ?x3115) ?x3117) ?x3119) (* (* 2.0 l_0_3_82) l_0_3_86))))
 (let ((?x3129 (- (- ?x3123 (* (* 2.0 l_0_3_83) l_0_3_87)) (* (* 2.0 l_0_3_84) l_0_3_88))))
 (= (- ?x3129 (* (* 2.0 l_0_3_85) l_0_3_89)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2309 (* l_0_3_66 l_0_3_66)))
 (let ((?x2307 (* l_0_3_65 l_0_3_65)))
 (let ((?x2305 (* l_0_3_64 l_0_3_64)))
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x3038 (* ?x2051 l_0_3_68)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x3036 (* ?x2048 l_0_3_67)))
 (let ((?x2486 (* l_0_3_6 l_0_3_6)))
 (let ((?x3229 (* 3.0 ?x2486)))
 (let ((?x2303 (* l_0_3_51 l_0_3_51)))
 (let ((?x2301 (* l_0_3_50 l_0_3_50)))
 (let ((?x2484 (* l_0_3_5 l_0_3_5)))
 (let ((?x3225 (* 3.0 ?x2484)))
 (let ((?x2299 (* l_0_3_49 l_0_3_49)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x3034 (* ?x2045 l_0_3_53)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x3032 (* ?x2042 l_0_3_52)))
 (let ((?x2482 (* l_0_3_4 l_0_3_4)))
 (let ((?x3220 (* 3.0 ?x2482)))
 (let ((?x3216 (- (* (* (- 3.0) l_0_3_19) l_0_3_19) (* (* 3.0 l_0_3_20) l_0_3_20))))
 (let ((?x3223 (- (- (+ (- ?x3216 (* (* 3.0 l_0_3_21) l_0_3_21)) ?x3220) ?x3032) ?x3034)))
 (let ((?x3232 (+ (+ (+ (+ (+ (+ (+ ?x3223 ?x2299) ?x3225) ?x2301) ?x2303) ?x3229) ?x3036) ?x3038)))
 (= (- (- (- ?x3232 ?x2305) ?x2307) ?x2309) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2364 (* 2.0 l_0_3_66)))
 (let ((?x2365 (* ?x2364 l_0_3_69)))
 (let ((?x2361 (* 2.0 l_0_3_65)))
 (let ((?x2362 (* ?x2361 l_0_3_68)))
 (let ((?x2358 (* 2.0 l_0_3_64)))
 (let ((?x2359 (* ?x2358 l_0_3_67)))
 (let ((?x2355 (* 2.0 l_0_3_51)))
 (let ((?x2356 (* ?x2355 l_0_3_54)))
 (let ((?x2352 (* 2.0 l_0_3_50)))
 (let ((?x2353 (* ?x2352 l_0_3_53)))
 (let ((?x2349 (* 2.0 l_0_3_49)))
 (let ((?x2350 (* ?x2349 l_0_3_52)))
 (let ((?x3267 (- (* (* (- 6.0) l_0_3_19) l_0_3_22) (* (* 6.0 l_0_3_20) l_0_3_23))))
 (let ((?x3273 (+ (- ?x3267 (* (* 6.0 l_0_3_21) l_0_3_24)) (* (* 6.0 l_0_3_4) l_0_3_7))))
 (let ((?x3279 (+ (+ (+ (+ ?x3273 ?x2350) (* (* 6.0 l_0_3_5) l_0_3_8)) ?x2353) ?x2356)))
 (let ((?x3285 (- (- (- (+ ?x3279 (* (* 6.0 l_0_3_6) l_0_3_9)) ?x2359) ?x2362) ?x2365)))
 (= ?x3285 0.0))))))))))))))))))
(assert
 (let ((?x2364 (* 2.0 l_0_3_66)))
 (let ((?x2430 (* ?x2364 l_0_3_73)))
 (let ((?x2361 (* 2.0 l_0_3_65)))
 (let ((?x2428 (* ?x2361 l_0_3_72)))
 (let ((?x2358 (* 2.0 l_0_3_64)))
 (let ((?x2426 (* ?x2358 l_0_3_71)))
 (let ((?x2518 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2355 (* 2.0 l_0_3_51)))
 (let ((?x2424 (* ?x2355 l_0_3_58)))
 (let ((?x2352 (* 2.0 l_0_3_50)))
 (let ((?x2422 (* ?x2352 l_0_3_57)))
 (let ((?x2515 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2349 (* 2.0 l_0_3_49)))
 (let ((?x2420 (* ?x2349 l_0_3_56)))
 (let ((?x2512 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2509 (* ?x2508 l_0_3_24)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2506 (* ?x2505 l_0_3_23)))
 (let ((?x2550 (* 2.0 l_0_3_19)))
 (let ((?x2779 (* ?x2550 l_0_3_22)))
 (let ((?x3317 (+ (* (* 6.0 l_0_3_11) l_0_3_4) (* (* 6.0 l_0_3_12) l_0_3_5))))
 (let ((?x3324 (- (- (+ ?x3317 (* (* 6.0 l_0_3_13) l_0_3_6)) ?x2779) (* (* 6.0 l_0_3_19) l_0_3_26))))
 (let ((?x3330 (- (- (- (- ?x3324 ?x2506) (* (* 6.0 l_0_3_20) l_0_3_27)) ?x2509) (* (* 6.0 l_0_3_21) l_0_3_28))))
 (let ((?x3336 (- (- ?x3330 (* (* 2.0 l_0_3_34) l_0_3_37)) (* (* 2.0 l_0_3_35) l_0_3_38))))
 (let ((?x3342 (+ (+ (+ (- ?x3336 (* (* 2.0 l_0_3_36) l_0_3_39)) ?x2512) ?x2420) ?x2515)))
 (= (- (- (- (+ (+ (+ ?x3342 ?x2422) ?x2424) ?x2518) ?x2426) ?x2428) ?x2430) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x2597 (* l_0_3_9 l_0_3_9)))
 (let ((?x3441 (* 3.0 ?x2597)))
 (let ((?x2595 (* l_0_3_8 l_0_3_8)))
 (let ((?x3439 (* 3.0 ?x2595)))
 (let ((?x3437 (* l_0_3_70 l_0_3_70)))
 (let ((?x2593 (* l_0_3_7 l_0_3_7)))
 (let ((?x3435 (* 3.0 ?x2593)))
 (let ((?x3433 (* l_0_3_69 l_0_3_69)))
 (let ((?x3431 (* l_0_3_68 l_0_3_68)))
 (let ((?x3429 (* l_0_3_67 l_0_3_67)))
 (let ((?x3427 (* l_0_3_55 l_0_3_55)))
 (let ((?x3425 (* l_0_3_54 l_0_3_54)))
 (let ((?x3423 (* l_0_3_53 l_0_3_53)))
 (let ((?x3421 (* l_0_3_52 l_0_3_52)))
 (let ((?x2584 (* l_0_3_10 l_0_3_10)))
 (let ((?x3408 (* 3.0 ?x2584)))
 (let ((?x3414 (- (- ?x3408 (* (* 3.0 l_0_3_22) l_0_3_22)) (* (* 3.0 l_0_3_23) l_0_3_23))))
 (let ((?x3420 (- (- ?x3414 (* (* 3.0 l_0_3_24) l_0_3_24)) (* (* 3.0 l_0_3_25) l_0_3_25))))
 (let ((?x3434 (- (- (- (+ (+ (+ (+ ?x3420 ?x3421) ?x3423) ?x3425) ?x3427) ?x3429) ?x3431) ?x3433)))
 (= (+ (+ (- (+ ?x3434 ?x3435) ?x3437) ?x3439) ?x3441) 0.0)))))))))))))))))))))
(assert
 (let ((?x2597 (* l_0_3_9 l_0_3_9)))
 (let ((?x2595 (* l_0_3_8 l_0_3_8)))
 (let ((?x3536 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x2593 (* l_0_3_7 l_0_3_7)))
 (let ((?x3532 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x3529 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x3526 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x3523 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3520 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3517 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x3511 (* l_0_3_40 l_0_3_40)))
 (let ((?x3509 (* l_0_3_39 l_0_3_39)))
 (let ((?x3507 (* l_0_3_38 l_0_3_38)))
 (let ((?x3505 (* l_0_3_37 l_0_3_37)))
 (let ((?x2591 (* l_0_3_25 l_0_3_25)))
 (let ((?x2589 (* l_0_3_24 l_0_3_24)))
 (let ((?x2587 (* l_0_3_23 l_0_3_23)))
 (let ((?x2585 (* l_0_3_22 l_0_3_22)))
 (let ((?x3484 (+ (+ (* (* 6.0 l_0_3_10) l_0_3_14) (* l_0_3_10 l_0_3_10)) (* (* 6.0 l_0_3_11) l_0_3_7))))
 (let ((?x3488 (+ (+ ?x3484 (* (* 6.0 l_0_3_12) l_0_3_8)) (* (* 6.0 l_0_3_13) l_0_3_9))))
 (let ((?x3495 (- (- (- ?x3488 (* (* 6.0 l_0_3_22) l_0_3_26)) ?x2585) (* (* 6.0 l_0_3_23) l_0_3_27))))
 (let ((?x3503 (- (- (- (- ?x3495 ?x2587) (* (* 6.0 l_0_3_24) l_0_3_28)) ?x2589) (* (* 6.0 l_0_3_25) l_0_3_29))))
 (let ((?x3515 (+ (- (- (- (- (- ?x3503 ?x2591) ?x3505) ?x3507) ?x3509) ?x3511) (* (* 2.0 l_0_3_52) l_0_3_56))))
 (let ((?x3534 (+ (- (- (- (+ (+ (+ ?x3515 ?x3517) ?x3520) ?x3523) ?x3526) ?x3529) ?x3532) ?x2593)))
 (= (+ (+ (- ?x3534 ?x3536) ?x2595) ?x2597) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3683 (* l_0_3_75 l_0_3_75)))
 (let ((?x3681 (* l_0_3_74 l_0_3_74)))
 (let ((?x3679 (* l_0_3_73 l_0_3_73)))
 (let ((?x3677 (* l_0_3_72 l_0_3_72)))
 (let ((?x3675 (* l_0_3_71 l_0_3_71)))
 (let ((?x3673 (* l_0_3_60 l_0_3_60)))
 (let ((?x3671 (* l_0_3_59 l_0_3_59)))
 (let ((?x3669 (* l_0_3_58 l_0_3_58)))
 (let ((?x3667 (* l_0_3_57 l_0_3_57)))
 (let ((?x3665 (* l_0_3_56 l_0_3_56)))
 (let ((?x2631 (* (* 2.0 l_0_3_25) l_0_3_29)))
 (let ((?x2628 (* (* 2.0 l_0_3_24) l_0_3_28)))
 (let ((?x2625 (* (* 2.0 l_0_3_23) l_0_3_27)))
 (let ((?x2622 (* (* 2.0 l_0_3_22) l_0_3_26)))
 (let ((?x2675 (* l_0_3_15 l_0_3_15)))
 (let ((?x3632 (* 3.0 ?x2675)))
 (let ((?x2673 (* l_0_3_14 l_0_3_14)))
 (let ((?x3630 (* 3.0 ?x2673)))
 (let ((?x2671 (* l_0_3_13 l_0_3_13)))
 (let ((?x3628 (* 3.0 ?x2671)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2619 (* ?x2541 l_0_3_9)))
 (let ((?x2669 (* l_0_3_12 l_0_3_12)))
 (let ((?x3625 (* 3.0 ?x2669)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2617 (* ?x2404 l_0_3_8)))
 (let ((?x2668 (* l_0_3_11 l_0_3_11)))
 (let ((?x3622 (* 3.0 ?x2668)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2615 (* ?x2400 l_0_3_7)))
 (let ((?x2614 (* (* 2.0 l_0_3_10) l_0_3_14)))
 (let ((?x2616 (+ ?x2614 ?x2615)))
 (let ((?x3633 (+ (+ (+ (+ (+ (+ (+ ?x2616 ?x3622) ?x2617) ?x3625) ?x2619) ?x3628) ?x3630) ?x3632)))
 (let ((?x3640 (- (- (- (- (- ?x3633 ?x2622) ?x2625) ?x2628) ?x2631) (* (* 3.0 l_0_3_26) l_0_3_26))))
 (let ((?x3646 (- (- ?x3640 (* (* 3.0 l_0_3_27) l_0_3_27)) (* (* 3.0 l_0_3_28) l_0_3_28))))
 (let ((?x3652 (- (- ?x3646 (* (* 3.0 l_0_3_29) l_0_3_29)) (* (* 3.0 l_0_3_30) l_0_3_30))))
 (let ((?x3658 (- (- ?x3652 (* (* 2.0 l_0_3_37) l_0_3_41)) (* (* 2.0 l_0_3_38) l_0_3_42))))
 (let ((?x3664 (- (- ?x3658 (* (* 2.0 l_0_3_39) l_0_3_43)) (* (* 2.0 l_0_3_40) l_0_3_44))))
 (let ((?x3678 (- (- (+ (+ (+ (+ (+ ?x3664 ?x3665) ?x3667) ?x3669) ?x3671) ?x3673) ?x3675) ?x3677)))
 (= (- (- (- ?x3678 ?x3679) ?x3681) ?x3683) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3766 (* l_0_3_31 l_0_3_31)))
 (let ((?x2213 (* l_0_3_16 l_0_3_16)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2276 (* ?x2221 l_0_3_26)))
 (let ((?x3764 (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* l_0_3_1 l_0_3_1)) ?x2276)))
 (= (- (- ?x3764 ?x2213) ?x3766) 0.0)))))))
(assert
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2418 (* ?x2290 l_0_3_27)))
 (let ((?x2415 (* 2.0 l_0_3_17)))
 (let ((?x2416 (* ?x2415 l_0_3_26)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2222 (* ?x2221 l_0_3_17)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2405 (* ?x2404 l_0_3_3)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2402 (* ?x2400 l_0_3_2)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2220 (* ?x2219 l_0_3_2)))
 (let ((?x3783 (- (+ (+ (- (- (- ?x2220 ?x2402) ?x2405) ?x2222) ?x2416) ?x2418) (* (* 2.0 l_0_3_31) l_0_3_32))))
 (= (- ?x3783 (* (* 2.0 l_0_3_76) l_0_3_86)) 0.0)))))))))))))))
(assert
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2555 (* ?x2508 l_0_3_28)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2553 (* ?x2505 l_0_3_27)))
 (let ((?x2550 (* 2.0 l_0_3_19)))
 (let ((?x2551 (* ?x2550 l_0_3_26)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2250 (* ?x2221 l_0_3_19)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2548 (* ?x2541 l_0_3_6)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2538 (* ?x2404 l_0_3_5)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2536 (* ?x2400 l_0_3_4)))
 (let ((?x2219 (* 2.0 l_0_3_1)))
 (let ((?x2249 (* ?x2219 l_0_3_4)))
 (let ((?x3817 (+ (+ (+ (- (- (- (- ?x2249 ?x2536) ?x2538) ?x2548) ?x2250) ?x2551) ?x2553) ?x2555)))
 (= (- ?x3817 (* (* 2.0 l_0_3_31) l_0_3_34)) 0.0)))))))))))))))))))
(assert
 (let ((?x2685 (* l_0_3_30 l_0_3_30)))
 (let ((?x2683 (* l_0_3_29 l_0_3_29)))
 (let ((?x2681 (* l_0_3_28 l_0_3_28)))
 (let ((?x2679 (* l_0_3_27 l_0_3_27)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2276 (* ?x2221 l_0_3_26)))
 (let ((?x2675 (* l_0_3_15 l_0_3_15)))
 (let ((?x2673 (* l_0_3_14 l_0_3_14)))
 (let ((?x2671 (* l_0_3_13 l_0_3_13)))
 (let ((?x2669 (* l_0_3_12 l_0_3_12)))
 (let ((?x3844 (- (- (* (* 2.0 l_0_3_1) l_0_3_11) (* l_0_3_11 l_0_3_11)) ?x2669)))
 (let ((?x3851 (+ (+ (+ (- (- (- (- ?x3844 ?x2671) ?x2673) ?x2675) ?x2276) ?x2677) ?x2679) ?x2681)))
 (= (- (+ (+ ?x3851 ?x2683) ?x2685) (* (* 2.0 l_0_3_31) l_0_3_41)) 0.0)))))))))))))))
(assert
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2297 (* ?x2296 l_0_3_5)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2294 (* ?x2293 l_0_3_4)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2291 (* ?x2290 l_0_3_20)))
 (let ((?x2298 (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x2291) ?x2294) ?x2297)))
 (let ((?x3884 (- (- ?x2298 (* (* 2.0 l_0_3_32) l_0_3_34)) (* (* 2.0 l_0_3_33) l_0_3_35))))
 (let ((?x3888 (- (- ?x3884 (* (* 2.0 l_0_3_79) l_0_3_86)) (* (* 2.0 l_0_3_80) l_0_3_87))))
 (= (- ?x3888 (* (* 2.0 l_0_3_81) l_0_3_88)) 0.0)))))))))))
(assert
 (let ((?x3936 (* l_0_3_90 l_0_3_90)))
 (let ((?x3934 (* l_0_3_89 l_0_3_89)))
 (let ((?x3932 (* l_0_3_88 l_0_3_88)))
 (let ((?x3930 (* l_0_3_87 l_0_3_87)))
 (let ((?x3928 (* l_0_3_86 l_0_3_86)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2418 (* ?x2290 l_0_3_27)))
 (let ((?x2415 (* 2.0 l_0_3_17)))
 (let ((?x2416 (* ?x2415 l_0_3_26)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2405 (* ?x2404 l_0_3_3)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2402 (* ?x2400 l_0_3_2)))
 (let ((?x2419 (- (- (+ ?x2402 ?x2405) ?x2416) ?x2418)))
 (let ((?x3927 (- (- ?x2419 (* (* 2.0 l_0_3_32) l_0_3_41)) (* (* 2.0 l_0_3_33) l_0_3_42))))
 (= (- (- (- (- (- ?x3927 ?x3928) ?x3930) ?x3932) ?x3934) ?x3936) 0.0)))))))))))))))))
(assert
 (let ((?x2051 (* 2.0 l_0_3_63)))
 (let ((?x3119 (* ?x2051 l_0_3_72)))
 (let ((?x2048 (* 2.0 l_0_3_62)))
 (let ((?x3117 (* ?x2048 l_0_3_71)))
 (let ((?x2486 (* l_0_3_6 l_0_3_6)))
 (let ((?x2484 (* l_0_3_5 l_0_3_5)))
 (let ((?x2045 (* 2.0 l_0_3_48)))
 (let ((?x3115 (* ?x2045 l_0_3_57)))
 (let ((?x2042 (* 2.0 l_0_3_47)))
 (let ((?x3113 (* ?x2042 l_0_3_56)))
 (let ((?x2482 (* l_0_3_4 l_0_3_4)))
 (let ((?x3971 (* l_0_3_36 l_0_3_36)))
 (let ((?x3969 (* l_0_3_35 l_0_3_35)))
 (let ((?x3967 (* l_0_3_34 l_0_3_34)))
 (let ((?x2480 (* l_0_3_21 l_0_3_21)))
 (let ((?x2481 (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2480)))
 (let ((?x3976 (+ (- (- (+ (- (- (- ?x2481 ?x3967) ?x3969) ?x3971) ?x2482) ?x3113) ?x3115) ?x2484)))
 (= (+ (+ (+ ?x3976 ?x2486) ?x3117) ?x3119) 0.0)))))))))))))))))))
(assert
 (let ((?x2508 (* 2.0 l_0_3_21)))
 (let ((?x2555 (* ?x2508 l_0_3_28)))
 (let ((?x2505 (* 2.0 l_0_3_20)))
 (let ((?x2553 (* ?x2505 l_0_3_27)))
 (let ((?x2550 (* 2.0 l_0_3_19)))
 (let ((?x2551 (* ?x2550 l_0_3_26)))
 (let ((?x2541 (* 2.0 l_0_3_13)))
 (let ((?x2548 (* ?x2541 l_0_3_6)))
 (let ((?x2404 (* 2.0 l_0_3_12)))
 (let ((?x2538 (* ?x2404 l_0_3_5)))
 (let ((?x2400 (* 2.0 l_0_3_11)))
 (let ((?x2536 (* ?x2400 l_0_3_4)))
 (let ((?x2556 (- (- (- (+ (+ ?x2536 ?x2538) ?x2548) ?x2551) ?x2553) ?x2555)))
 (let ((?x4002 (- (- ?x2556 (* (* 2.0 l_0_3_34) l_0_3_41)) (* (* 2.0 l_0_3_35) l_0_3_42))))
 (= (- ?x4002 (* (* 2.0 l_0_3_36) l_0_3_43)) 0.0))))))))))))))))
(assert
 (let ((?x4033 (* l_0_3_45 l_0_3_45)))
 (let ((?x4031 (* l_0_3_44 l_0_3_44)))
 (let ((?x4029 (* l_0_3_43 l_0_3_43)))
 (let ((?x4027 (* l_0_3_42 l_0_3_42)))
 (let ((?x4025 (* l_0_3_41 l_0_3_41)))
 (let ((?x2685 (* l_0_3_30 l_0_3_30)))
 (let ((?x2683 (* l_0_3_29 l_0_3_29)))
 (let ((?x2681 (* l_0_3_28 l_0_3_28)))
 (let ((?x2679 (* l_0_3_27 l_0_3_27)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x2675 (* l_0_3_15 l_0_3_15)))
 (let ((?x2673 (* l_0_3_14 l_0_3_14)))
 (let ((?x2671 (* l_0_3_13 l_0_3_13)))
 (let ((?x2674 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2671) ?x2673)))
 (let ((?x2686 (- (- (- (- (- (+ ?x2674 ?x2675) ?x2677) ?x2679) ?x2681) ?x2683) ?x2685)))
 (= (- (- (- (- (- ?x2686 ?x4025) ?x4027) ?x4029) ?x4031) ?x4033) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_3_1) l_0_3_1) (* l_0_3_16 l_0_3_16)) 0.0))
(assert
 (let ((?x4059 (* l_0_3_76 l_0_3_76)))
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2222 (* ?x2221 l_0_3_17)))
 (= (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x2222) ?x4059) 0.0)))))
(assert
 (let ((?x2221 (* 2.0 l_0_3_16)))
 (let ((?x2250 (* ?x2221 l_0_3_19)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x2250) 0.0))))
(assert
 (let ((?x2296 (* 2.0 l_0_3_3)))
 (let ((?x2297 (* ?x2296 l_0_3_5)))
 (let ((?x2293 (* 2.0 l_0_3_2)))
 (let ((?x2294 (* ?x2293 l_0_3_4)))
 (let ((?x2290 (* 2.0 l_0_3_18)))
 (let ((?x2291 (* ?x2290 l_0_3_20)))
 (let ((?x4077 (- (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x2291) ?x2294) ?x2297) (* (* 2.0 l_0_3_76) l_0_3_79))))
 (= ?x4077 0.0)))))))))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2742 (* ?x2227 l_0_3_62)))
 (let ((?x2486 (* l_0_3_6 l_0_3_6)))
 (let ((?x2484 (* l_0_3_5 l_0_3_5)))
 (let ((?x2224 (* 2.0 l_0_3_46)))
 (let ((?x2740 (* ?x2224 l_0_3_47)))
 (let ((?x2482 (* l_0_3_4 l_0_3_4)))
 (let ((?x2480 (* l_0_3_21 l_0_3_21)))
 (let ((?x505 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2480) ?x2482)))
 (= (+ (- (- (- ?x505 ?x2740) ?x2484) ?x2486) ?x2742) 0.0)))))))))))
(assert
 (= (+ (* (- l_0_3_46) l_0_3_46) (* l_0_3_61 l_0_3_61)) 0.0))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2824 (* ?x2227 l_0_3_67)))
 (= (+ (* (* (- 2.0) l_0_3_46) l_0_3_52) ?x2824) 0.0))))
(assert
 (let ((?x2227 (* 2.0 l_0_3_61)))
 (let ((?x2875 (* ?x2227 l_0_3_71)))
 (= (+ (* (* (- 2.0) l_0_3_46) l_0_3_56) ?x2875) 0.0))))
(assert
 (let ((?x3437 (* l_0_3_70 l_0_3_70)))
 (let ((?x3433 (* l_0_3_69 l_0_3_69)))
 (let ((?x3431 (* l_0_3_68 l_0_3_68)))
 (let ((?x3429 (* l_0_3_67 l_0_3_67)))
 (let ((?x3427 (* l_0_3_55 l_0_3_55)))
 (let ((?x3425 (* l_0_3_54 l_0_3_54)))
 (let ((?x4115 (- (- (- (* (- l_0_3_52) l_0_3_52) (* l_0_3_53 l_0_3_53)) ?x3425) ?x3427)))
 (= (+ (+ (+ (+ ?x4115 ?x3429) ?x3431) ?x3433) ?x3437) 0.0)))))))))
(assert
 (let ((?x3536 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x3532 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x3529 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x3526 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x3523 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x3520 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x3517 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x4125 (+ (- (- (- (* (* (- 2.0) l_0_3_52) l_0_3_56) ?x3517) ?x3520) ?x3523) ?x3526)))
 (= (+ (+ (+ ?x4125 ?x3529) ?x3532) ?x3536) 0.0))))))))))
(assert
 (let ((?x3683 (* l_0_3_75 l_0_3_75)))
 (let ((?x3681 (* l_0_3_74 l_0_3_74)))
 (let ((?x3679 (* l_0_3_73 l_0_3_73)))
 (let ((?x3677 (* l_0_3_72 l_0_3_72)))
 (let ((?x3675 (* l_0_3_71 l_0_3_71)))
 (let ((?x3673 (* l_0_3_60 l_0_3_60)))
 (let ((?x3671 (* l_0_3_59 l_0_3_59)))
 (let ((?x3669 (* l_0_3_58 l_0_3_58)))
 (let ((?x932 (- (- (- (* (- l_0_3_56) l_0_3_56) (* l_0_3_57 l_0_3_57)) ?x3669) ?x3671)))
 (= (+ (+ (+ (+ (+ (- ?x932 ?x3673) ?x3675) ?x3677) ?x3679) ?x3681) ?x3683) 0.0)))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (>= l_0_3_76 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_81 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4189 (* ?x4188 l_0_4_65)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4186 (* ?x4185 l_0_4_64)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4183 (* ?x4182 l_0_4_50)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4180 (* ?x4179 l_0_4_49)))
 (let ((?x4177 (* l_0_4_3 l_0_4_3)))
 (let ((?x4175 (* l_0_4_2 l_0_4_2)))
 (let ((?x4178 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x4175) ?x4177)))
 (= (+ (+ (+ (- (- ?x4178 ?x4180) ?x4183) ?x4186) ?x4189) 1.0) 0.0)))))))))))))
(assert
 (let ((?x4227 (* l_0_4_96 l_0_4_96)))
 (let ((?x4225 (* l_0_4_95 l_0_4_95)))
 (let ((?x4223 (* l_0_4_94 l_0_4_94)))
 (let ((?x4221 (* l_0_4_81 l_0_4_81)))
 (let ((?x4219 (* l_0_4_80 l_0_4_80)))
 (let ((?x4217 (* l_0_4_79 l_0_4_79)))
 (let ((?x4215 (* l_0_4_63 l_0_4_63)))
 (let ((?x4213 (* l_0_4_62 l_0_4_62)))
 (let ((?x4216 (+ (+ (- (* (- l_0_4_47) l_0_4_47) (* l_0_4_48 l_0_4_48)) ?x4213) ?x4215)))
 (let ((?x4229 (+ (- (- (- (- (- (- ?x4216 ?x4217) ?x4219) ?x4221) ?x4223) ?x4225) ?x4227) 3.0)))
 (= ?x4229 0.0))))))))))))
(assert
 (let ((?x4252 (- (- _a_2_ (* (* 2.0 l_0_4_77) l_0_4_79)) (* (* 2.0 l_0_4_78) l_0_4_80))))
 (let ((?x4258 (- (- ?x4252 (* (* 2.0 l_0_4_92) l_0_4_94)) (* (* 2.0 l_0_4_93) l_0_4_95))))
 (= (+ ?x4258 3.0) 0.0))))
(assert
 (let ((?x1116 (* l_0_4_93 l_0_4_93)))
 (let ((?x1112 (* l_0_4_92 l_0_4_92)))
 (let ((?x1115 (- (- (- _a_0_ (* l_0_4_77 l_0_4_77)) (* l_0_4_78 l_0_4_78)) ?x1112)))
 (= (+ (- ?x1115 ?x1116) 1.0) 0.0)))))
(assert
 (let ((?x4292 (* l_0_4_33 l_0_4_33)))
 (let ((?x4290 (* l_0_4_32 l_0_4_32)))
 (let ((?x4177 (* l_0_4_3 l_0_4_3)))
 (let ((?x4175 (* l_0_4_2 l_0_4_2)))
 (let ((?x4173 (* l_0_4_18 l_0_4_18)))
 (let ((?x1026 (* l_0_4_17 l_0_4_17)))
 (let ((?x4285 (- (- _a_1_ (* (* 2.0 l_0_4_101) l_0_4_92)) (* (* 2.0 l_0_4_102) l_0_4_93))))
 (let ((?x4295 (- (- (- (+ (+ (- (- ?x4285 ?x1026) ?x4173) ?x4175) ?x4177) ?x4290) ?x4292) (* (* 2.0 l_0_4_77) l_0_4_86))))
 (= (- ?x4295 (* (* 2.0 l_0_4_78) l_0_4_87)) 0.0))))))))))
(assert
 (let ((?x4177 (* l_0_4_3 l_0_4_3)))
 (let ((?x4175 (* l_0_4_2 l_0_4_2)))
 (let ((?x1260 (- (- (+ (* l_0_4_17 l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x4175) ?x4177)))
 (let ((?x1152 (- (- ?x1260 (* (* 2.0 l_0_4_76) l_0_4_77)) (* (* 2.0 l_0_4_91) l_0_4_92))))
 (= (- ?x1152 1.0) 0.0))))))
(assert
 (= (- (* l_0_4_1 l_0_4_1) (* l_0_4_16 l_0_4_16)) 0.0))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4328 (* ?x4327 l_0_4_64)))
 (let ((?x4324 (* 2.0 l_0_4_46)))
 (let ((?x4325 (* ?x4324 l_0_4_49)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4322 (* ?x4321 l_0_4_17)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x4320 (* ?x4319 l_0_4_2)))
 (= (+ (- (- ?x4320 ?x4322) ?x4325) ?x4328) 0.0))))))))))
(assert
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1252 (* ?x4321 l_0_4_19)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x1323 (* ?x4319 l_0_4_4)))
 (= (- ?x1323 ?x1252) 0.0))))))
(assert
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1329 (* ?x4321 l_0_4_22)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x1358 (* ?x4319 l_0_4_7)))
 (= (- ?x1358 ?x1329) 0.0))))))
(assert
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4348 (* ?x4321 l_0_4_26)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x4347 (* ?x4319 l_0_4_11)))
 (= (- ?x4347 ?x4348) 0.0))))))
(assert
 (let ((?x4374 (* l_0_4_66 l_0_4_66)))
 (let ((?x4372 (* l_0_4_65 l_0_4_65)))
 (let ((?x4370 (* l_0_4_64 l_0_4_64)))
 (let ((?x4368 (* l_0_4_51 l_0_4_51)))
 (let ((?x4366 (* l_0_4_50 l_0_4_50)))
 (let ((?x4364 (* l_0_4_49 l_0_4_49)))
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4362 (* ?x4361 l_0_4_5)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4359 (* ?x4358 l_0_4_4)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x1362 (* ?x1360 l_0_4_20)))
 (let ((?x4365 (- (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x1362) ?x4359) ?x4362) ?x4364)))
 (= (+ (+ (+ (- (- ?x4365 ?x4366) ?x4368) ?x4370) ?x4372) ?x4374) 0.0)))))))))))))))
(assert
 (let ((?x4417 (* 2.0 l_0_4_66)))
 (let ((?x4418 (* ?x4417 l_0_4_69)))
 (let ((?x4414 (* 2.0 l_0_4_65)))
 (let ((?x4415 (* ?x4414 l_0_4_68)))
 (let ((?x4411 (* 2.0 l_0_4_64)))
 (let ((?x4412 (* ?x4411 l_0_4_67)))
 (let ((?x4408 (* 2.0 l_0_4_51)))
 (let ((?x4409 (* ?x4408 l_0_4_54)))
 (let ((?x4405 (* 2.0 l_0_4_50)))
 (let ((?x4406 (* ?x4405 l_0_4_53)))
 (let ((?x4402 (* 2.0 l_0_4_49)))
 (let ((?x4403 (* ?x4402 l_0_4_52)))
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4400 (* ?x4361 l_0_4_8)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4398 (* ?x4358 l_0_4_7)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4396 (* ?x1360 l_0_4_23)))
 (let ((?x4404 (- (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x4396) ?x4398) ?x4400) ?x4403)))
 (= (+ (+ (+ (- (- ?x4404 ?x4406) ?x4409) ?x4412) ?x4415) ?x4418) 0.0)))))))))))))))))))))
(assert
 (let ((?x4417 (* 2.0 l_0_4_66)))
 (let ((?x4456 (* ?x4417 l_0_4_73)))
 (let ((?x4414 (* 2.0 l_0_4_65)))
 (let ((?x4454 (* ?x4414 l_0_4_72)))
 (let ((?x4411 (* 2.0 l_0_4_64)))
 (let ((?x4452 (* ?x4411 l_0_4_71)))
 (let ((?x4408 (* 2.0 l_0_4_51)))
 (let ((?x4450 (* ?x4408 l_0_4_58)))
 (let ((?x4405 (* 2.0 l_0_4_50)))
 (let ((?x4448 (* ?x4405 l_0_4_57)))
 (let ((?x4402 (* 2.0 l_0_4_49)))
 (let ((?x4446 (* ?x4402 l_0_4_56)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4444 (* ?x1360 l_0_4_27)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x4442 (* ?x4441 l_0_4_26)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x1425 (* ?x1465 l_0_4_3)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x1463 (* ?x1418 l_0_4_2)))
 (let ((?x4453 (+ (- (- (- (- (- (+ ?x1463 ?x1425) ?x4442) ?x4444) ?x4446) ?x4448) ?x4450) ?x4452)))
 (= (+ (+ ?x4453 ?x4454) ?x4456) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4487 (* l_0_4_6 l_0_4_6)))
 (let ((?x4485 (* l_0_4_5 l_0_4_5)))
 (let ((?x4483 (* l_0_4_4 l_0_4_4)))
 (let ((?x4481 (* l_0_4_21 l_0_4_21)))
 (let ((?x4482 (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4481)))
 (= (+ (+ (+ ?x4482 ?x4483) ?x4485) ?x4487) 0.0)))))))
(assert
 (let ((?x4515 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4512 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4509 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4506 (* ?x4505 l_0_4_24)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4503 (* ?x4502 l_0_4_23)))
 (let ((?x4513 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x4503) ?x4506) ?x4509) ?x4512)))
 (= (+ ?x4513 ?x4515) 0.0))))))))))
(assert
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4544 (* ?x4505 l_0_4_28)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4542 (* ?x4502 l_0_4_27)))
 (let ((?x4539 (* 2.0 l_0_4_19)))
 (let ((?x4540 (* ?x4539 l_0_4_26)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4537 (* ?x4536 l_0_4_6)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4534 (* ?x1465 l_0_4_5)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4533 (* ?x1418 l_0_4_4)))
 (let ((?x4545 (- (- (- (+ (+ ?x4533 ?x4534) ?x4537) ?x4540) ?x4542) ?x4544)))
 (= ?x4545 0.0)))))))))))))))
(assert
 (let ((?x4573 (* l_0_4_9 l_0_4_9)))
 (let ((?x4571 (* l_0_4_8 l_0_4_8)))
 (let ((?x4569 (* l_0_4_7 l_0_4_7)))
 (let ((?x4567 (* l_0_4_25 l_0_4_25)))
 (let ((?x4565 (* l_0_4_24 l_0_4_24)))
 (let ((?x4563 (* l_0_4_23 l_0_4_23)))
 (let ((?x4566 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4563) ?x4565)))
 (= (+ (+ (+ (- ?x4566 ?x4567) ?x4569) ?x4571) ?x4573) 0.0)))))))))
(assert
 (let ((?x4599 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4596 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4593 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4590 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4587 (* ?x4536 l_0_4_9)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4585 (* ?x1465 l_0_4_8)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4583 (* ?x1418 l_0_4_7)))
 (let ((?x4582 (* (* 2.0 l_0_4_10) l_0_4_14)))
 (let ((?x4584 (+ ?x4582 ?x4583)))
 (= (- (- (- (- (+ (+ ?x4584 ?x4585) ?x4587) ?x4590) ?x4593) ?x4596) ?x4599) 0.0))))))))))))))
(assert
 (let ((?x4645 (* l_0_4_30 l_0_4_30)))
 (let ((?x4643 (* l_0_4_29 l_0_4_29)))
 (let ((?x4641 (* l_0_4_28 l_0_4_28)))
 (let ((?x4639 (* l_0_4_27 l_0_4_27)))
 (let ((?x4637 (* l_0_4_26 l_0_4_26)))
 (let ((?x4635 (* l_0_4_15 l_0_4_15)))
 (let ((?x4633 (* l_0_4_14 l_0_4_14)))
 (let ((?x4631 (* l_0_4_13 l_0_4_13)))
 (let ((?x4634 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4631) ?x4633)))
 (let ((?x4646 (- (- (- (- (- (+ ?x4634 ?x4635) ?x4637) ?x4639) ?x4641) ?x4643) ?x4645)))
 (= ?x4646 0.0))))))))))))
(assert
 (let ((?x4665 (* l_0_4_61 l_0_4_61)))
 (let ((?x4663 (* l_0_4_46 l_0_4_46)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1329 (* ?x4321 l_0_4_22)))
 (let ((?x4658 (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) (* 3.0 (* l_0_4_1 l_0_4_1)))))
 (let ((?x4666 (- (+ (- (+ ?x4658 ?x1329) (* (* 3.0 l_0_4_16) l_0_4_16)) ?x4663) ?x4665)))
 (= ?x4666 0.0))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4692 (* ?x4327 l_0_4_62)))
 (let ((?x4324 (* 2.0 l_0_4_46)))
 (let ((?x4690 (* ?x4324 l_0_4_47)))
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4400 (* ?x4361 l_0_4_8)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4398 (* ?x4358 l_0_4_7)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4396 (* ?x1360 l_0_4_23)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x4685 (* ?x4441 l_0_4_22)))
 (let ((?x4684 (- (* (* 6.0 l_0_4_1) l_0_4_2) (* (* 6.0 l_0_4_16) l_0_4_17))))
 (let ((?x4695 (- (- (+ (- (- (+ (+ ?x4684 ?x4685) ?x4396) ?x4398) ?x4400) ?x4690) ?x4692) (* (* 2.0 l_0_4_76) l_0_4_82))))
 (= (- ?x4695 (* (* 2.0 l_0_4_91) l_0_4_97)) 0.0))))))))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4328 (* ?x4327 l_0_4_64)))
 (let ((?x4515 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4512 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4324 (* 2.0 l_0_4_46)))
 (let ((?x4325 (* ?x4324 l_0_4_49)))
 (let ((?x4509 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4506 (* ?x4505 l_0_4_24)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4503 (* ?x4502 l_0_4_23)))
 (let ((?x4539 (* 2.0 l_0_4_19)))
 (let ((?x4715 (* ?x4539 l_0_4_22)))
 (let ((?x4714 (- (* (* 6.0 l_0_4_1) l_0_4_4) (* (* 6.0 l_0_4_16) l_0_4_19))))
 (let ((?x4722 (- (- (+ (- (+ (+ (+ ?x4714 ?x4715) ?x4503) ?x4506) ?x4509) ?x4325) ?x4512) ?x4515)))
 (= (- ?x4722 ?x4328) 0.0)))))))))))))))))
(assert
 (let ((?x4573 (* l_0_4_9 l_0_4_9)))
 (let ((?x4571 (* l_0_4_8 l_0_4_8)))
 (let ((?x4569 (* l_0_4_7 l_0_4_7)))
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4739 (* ?x4327 l_0_4_67)))
 (let ((?x4567 (* l_0_4_25 l_0_4_25)))
 (let ((?x4565 (* l_0_4_24 l_0_4_24)))
 (let ((?x4563 (* l_0_4_23 l_0_4_23)))
 (let ((?x4561 (* l_0_4_22 l_0_4_22)))
 (let ((?x1809 (- (- (* (* 6.0 l_0_4_1) l_0_4_7) (* l_0_4_10 l_0_4_10)) (* (* 6.0 l_0_4_16) l_0_4_22))))
 (let ((?x4738 (+ (+ (+ (+ (+ ?x1809 ?x4561) ?x4563) ?x4565) ?x4567) (* (* 2.0 l_0_4_46) l_0_4_52))))
 (= (- (- (- (- ?x4738 ?x4739) ?x4569) ?x4571) ?x4573) 0.0)))))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4781 (* ?x4327 l_0_4_71)))
 (let ((?x4599 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4596 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4593 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4590 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1329 (* ?x4321 l_0_4_22)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4587 (* ?x4536 l_0_4_9)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4585 (* ?x1465 l_0_4_8)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4583 (* ?x1418 l_0_4_7)))
 (let ((?x4582 (* (* 2.0 l_0_4_10) l_0_4_14)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x1358 (* ?x4319 l_0_4_7)))
 (let ((?x4767 (- (- (- (+ (* (* 6.0 l_0_4_1) l_0_4_11) ?x1358) ?x4582) ?x4583) ?x4585)))
 (let ((?x4772 (+ (- (- (- ?x4767 ?x4587) ?x1329) (* (* 6.0 l_0_4_16) l_0_4_26)) ?x4590)))
 (let ((?x4778 (- (+ (+ (+ ?x4772 ?x4593) ?x4596) ?x4599) (* (* 2.0 l_0_4_31) l_0_4_37))))
 (= (- (+ ?x4778 (* (* 2.0 l_0_4_46) l_0_4_56)) ?x4781) 0.0))))))))))))))))))))))
(assert
 (let ((?x4215 (* l_0_4_63 l_0_4_63)))
 (let ((?x4213 (* l_0_4_62 l_0_4_62)))
 (let ((?x4205 (* l_0_4_48 l_0_4_48)))
 (let ((?x1056 (* l_0_4_47 l_0_4_47)))
 (let ((?x4799 (- (* (* (- 3.0) l_0_4_17) l_0_4_17) (* (* 3.0 l_0_4_18) l_0_4_18))))
 (let ((?x4803 (+ (+ ?x4799 (* 3.0 (* l_0_4_2 l_0_4_2))) (* 3.0 (* l_0_4_3 l_0_4_3)))))
 (let ((?x4809 (- (- (- (+ (+ ?x4803 ?x1056) ?x4205) ?x4213) ?x4215) (* (* 2.0 l_0_4_77) l_0_4_82))))
 (let ((?x4813 (- (- ?x4809 (* (* 2.0 l_0_4_78) l_0_4_83)) (* (* 2.0 l_0_4_92) l_0_4_97))))
 (= (- ?x4813 (* (* 2.0 l_0_4_93) l_0_4_98)) 0.0))))))))))
(assert
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4189 (* ?x4188 l_0_4_65)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4186 (* ?x4185 l_0_4_64)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4183 (* ?x4182 l_0_4_50)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4180 (* ?x4179 l_0_4_49)))
 (let ((?x1974 (- (* (* (- 6.0) l_0_4_17) l_0_4_19) (* (* 6.0 l_0_4_18) l_0_4_20))))
 (let ((?x4825 (+ (+ ?x1974 (* (* 6.0 l_0_4_2) l_0_4_4)) (* (* 6.0 l_0_4_3) l_0_4_5))))
 (let ((?x4832 (- (- (- (+ (+ ?x4825 ?x4180) ?x4183) ?x4186) ?x4189) (* (* 2.0 l_0_4_79) l_0_4_82))))
 (let ((?x4838 (- (- ?x4832 (* (* 2.0 l_0_4_80) l_0_4_83)) (* (* 2.0 l_0_4_81) l_0_4_84))))
 (let ((?x4844 (- (- ?x4838 (* (* 2.0 l_0_4_94) l_0_4_97)) (* (* 2.0 l_0_4_95) l_0_4_98))))
 (= (- ?x4844 (* (* 2.0 l_0_4_96) l_0_4_99)) 0.0)))))))))))))))
(assert
 (let ((?x4893 (* l_0_4_99 l_0_4_99)))
 (let ((?x4891 (* l_0_4_98 l_0_4_98)))
 (let ((?x4889 (* l_0_4_97 l_0_4_97)))
 (let ((?x4887 (* l_0_4_85 l_0_4_85)))
 (let ((?x4885 (* l_0_4_84 l_0_4_84)))
 (let ((?x4883 (* l_0_4_83 l_0_4_83)))
 (let ((?x4881 (* l_0_4_82 l_0_4_82)))
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4879 (* ?x4188 l_0_4_68)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4877 (* ?x4185 l_0_4_67)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4875 (* ?x4182 l_0_4_53)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4873 (* ?x4179 l_0_4_52)))
 (let ((?x4866 (- (* (- l_0_4_100) l_0_4_100) (* (* 6.0 l_0_4_17) l_0_4_22))))
 (let ((?x4870 (+ (- ?x4866 (* (* 6.0 l_0_4_18) l_0_4_23)) (* (* 6.0 l_0_4_2) l_0_4_7))))
 (let ((?x4878 (- (+ (+ (+ ?x4870 (* (* 6.0 l_0_4_3) l_0_4_8)) ?x4873) ?x4875) ?x4877)))
 (let ((?x4892 (- (- (- (- (- (- (- ?x4878 ?x4879) ?x4881) ?x4883) ?x4885) ?x4887) ?x4889) ?x4891)))
 (= (- ?x4892 ?x4893) 0.0)))))))))))))))))))))
(assert
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4952 (* ?x4188 l_0_4_72)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4950 (* ?x4185 l_0_4_71)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4948 (* ?x4182 l_0_4_57)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4946 (* ?x4179 l_0_4_56)))
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4400 (* ?x4361 l_0_4_8)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4398 (* ?x4358 l_0_4_7)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4396 (* ?x1360 l_0_4_23)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x4685 (* ?x4441 l_0_4_22)))
 (let ((?x4920 (- (* (* (- 2.0) l_0_4_100) l_0_4_104) (* (* 2.0 l_0_4_101) l_0_4_97))))
 (let ((?x4925 (- (- ?x4920 (* (* 2.0 l_0_4_102) l_0_4_98)) (* (* 2.0 l_0_4_103) l_0_4_99))))
 (let ((?x4931 (+ (+ ?x4925 (* (* 6.0 l_0_4_11) l_0_4_2)) (* (* 6.0 l_0_4_12) l_0_4_3))))
 (let ((?x4937 (- (- (- (- ?x4931 ?x4685) (* (* 6.0 l_0_4_17) l_0_4_26)) ?x4396) (* (* 6.0 l_0_4_18) l_0_4_27))))
 (let ((?x4945 (- (- (+ (+ ?x4937 ?x4398) ?x4400) (* (* 2.0 l_0_4_32) l_0_4_37)) (* (* 2.0 l_0_4_33) l_0_4_38))))
 (let ((?x4956 (- (- (- (+ (+ ?x4945 ?x4946) ?x4948) ?x4950) ?x4952) (* (* 2.0 l_0_4_82) l_0_4_86))))
 (let ((?x4962 (- (- ?x4956 (* (* 2.0 l_0_4_83) l_0_4_87)) (* (* 2.0 l_0_4_84) l_0_4_88))))
 (= (- ?x4962 (* (* 2.0 l_0_4_85) l_0_4_89)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4374 (* l_0_4_66 l_0_4_66)))
 (let ((?x4372 (* l_0_4_65 l_0_4_65)))
 (let ((?x4370 (* l_0_4_64 l_0_4_64)))
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4879 (* ?x4188 l_0_4_68)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4877 (* ?x4185 l_0_4_67)))
 (let ((?x4368 (* l_0_4_51 l_0_4_51)))
 (let ((?x4366 (* l_0_4_50 l_0_4_50)))
 (let ((?x4364 (* l_0_4_49 l_0_4_49)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4875 (* ?x4182 l_0_4_53)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4873 (* ?x4179 l_0_4_52)))
 (let ((?x5031 (- (* (* (- 3.0) l_0_4_19) l_0_4_19) (* (* 3.0 l_0_4_20) l_0_4_20))))
 (let ((?x5036 (+ (- ?x5031 (* (* 3.0 l_0_4_21) l_0_4_21)) (* 3.0 (* l_0_4_4 l_0_4_4)))))
 (let ((?x5041 (+ (+ (- (- ?x5036 ?x4873) ?x4875) ?x4364) (* 3.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x5046 (+ (+ (+ (+ ?x5041 ?x4366) ?x4368) (* 3.0 (* l_0_4_6 l_0_4_6))) ?x4877)))
 (= (- (- (- (+ ?x5046 ?x4879) ?x4370) ?x4372) ?x4374) 0.0))))))))))))))))))))
(assert
 (let ((?x4417 (* 2.0 l_0_4_66)))
 (let ((?x4418 (* ?x4417 l_0_4_69)))
 (let ((?x4414 (* 2.0 l_0_4_65)))
 (let ((?x4415 (* ?x4414 l_0_4_68)))
 (let ((?x4411 (* 2.0 l_0_4_64)))
 (let ((?x4412 (* ?x4411 l_0_4_67)))
 (let ((?x4408 (* 2.0 l_0_4_51)))
 (let ((?x4409 (* ?x4408 l_0_4_54)))
 (let ((?x4405 (* 2.0 l_0_4_50)))
 (let ((?x4406 (* ?x4405 l_0_4_53)))
 (let ((?x4402 (* 2.0 l_0_4_49)))
 (let ((?x4403 (* ?x4402 l_0_4_52)))
 (let ((?x2771 (- (* (* (- 6.0) l_0_4_19) l_0_4_22) (* (* 6.0 l_0_4_20) l_0_4_23))))
 (let ((?x5061 (+ (- ?x2771 (* (* 6.0 l_0_4_21) l_0_4_24)) (* (* 6.0 l_0_4_4) l_0_4_7))))
 (let ((?x5067 (+ (+ (+ (+ ?x5061 ?x4403) (* (* 6.0 l_0_4_5) l_0_4_8)) ?x4406) ?x4409)))
 (let ((?x5073 (- (- (- (+ ?x5067 (* (* 6.0 l_0_4_6) l_0_4_9)) ?x4412) ?x4415) ?x4418)))
 (= ?x5073 0.0))))))))))))))))))
(assert
 (let ((?x4417 (* 2.0 l_0_4_66)))
 (let ((?x4456 (* ?x4417 l_0_4_73)))
 (let ((?x4414 (* 2.0 l_0_4_65)))
 (let ((?x4454 (* ?x4414 l_0_4_72)))
 (let ((?x4411 (* 2.0 l_0_4_64)))
 (let ((?x4452 (* ?x4411 l_0_4_71)))
 (let ((?x4515 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4408 (* 2.0 l_0_4_51)))
 (let ((?x4450 (* ?x4408 l_0_4_58)))
 (let ((?x4405 (* 2.0 l_0_4_50)))
 (let ((?x4448 (* ?x4405 l_0_4_57)))
 (let ((?x4512 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4402 (* 2.0 l_0_4_49)))
 (let ((?x4446 (* ?x4402 l_0_4_56)))
 (let ((?x4509 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4506 (* ?x4505 l_0_4_24)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4503 (* ?x4502 l_0_4_23)))
 (let ((?x4539 (* 2.0 l_0_4_19)))
 (let ((?x4715 (* ?x4539 l_0_4_22)))
 (let ((?x5093 (+ (* (* 6.0 l_0_4_11) l_0_4_4) (* (* 6.0 l_0_4_12) l_0_4_5))))
 (let ((?x5100 (- (- (+ ?x5093 (* (* 6.0 l_0_4_13) l_0_4_6)) ?x4715) (* (* 6.0 l_0_4_19) l_0_4_26))))
 (let ((?x5106 (- (- (- (- ?x5100 ?x4503) (* (* 6.0 l_0_4_20) l_0_4_27)) ?x4506) (* (* 6.0 l_0_4_21) l_0_4_28))))
 (let ((?x5112 (- (- ?x5106 (* (* 2.0 l_0_4_34) l_0_4_37)) (* (* 2.0 l_0_4_35) l_0_4_38))))
 (let ((?x5118 (+ (+ (+ (- ?x5112 (* (* 2.0 l_0_4_36) l_0_4_39)) ?x4509) ?x4446) ?x4512)))
 (= (- (- (- (+ (+ (+ ?x5118 ?x4448) ?x4450) ?x4515) ?x4452) ?x4454) ?x4456) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4573 (* l_0_4_9 l_0_4_9)))
 (let ((?x5173 (* 3.0 ?x4573)))
 (let ((?x4571 (* l_0_4_8 l_0_4_8)))
 (let ((?x5171 (* 3.0 ?x4571)))
 (let ((?x5169 (* l_0_4_70 l_0_4_70)))
 (let ((?x4569 (* l_0_4_7 l_0_4_7)))
 (let ((?x5167 (* 3.0 ?x4569)))
 (let ((?x5165 (* l_0_4_69 l_0_4_69)))
 (let ((?x5163 (* l_0_4_68 l_0_4_68)))
 (let ((?x5161 (* l_0_4_67 l_0_4_67)))
 (let ((?x5159 (* l_0_4_55 l_0_4_55)))
 (let ((?x5157 (* l_0_4_54 l_0_4_54)))
 (let ((?x5155 (* l_0_4_53 l_0_4_53)))
 (let ((?x5153 (* l_0_4_52 l_0_4_52)))
 (let ((?x4560 (* l_0_4_10 l_0_4_10)))
 (let ((?x2992 (* 3.0 ?x4560)))
 (let ((?x2960 (- (- ?x2992 (* (* 3.0 l_0_4_22) l_0_4_22)) (* (* 3.0 l_0_4_23) l_0_4_23))))
 (let ((?x5152 (- (- ?x2960 (* (* 3.0 l_0_4_24) l_0_4_24)) (* (* 3.0 l_0_4_25) l_0_4_25))))
 (let ((?x5166 (- (- (- (+ (+ (+ (+ ?x5152 ?x5153) ?x5155) ?x5157) ?x5159) ?x5161) ?x5163) ?x5165)))
 (= (+ (+ (- (+ ?x5166 ?x5167) ?x5169) ?x5171) ?x5173) 0.0)))))))))))))))))))))
(assert
 (let ((?x4573 (* l_0_4_9 l_0_4_9)))
 (let ((?x4571 (* l_0_4_8 l_0_4_8)))
 (let ((?x5260 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x4569 (* l_0_4_7 l_0_4_7)))
 (let ((?x5256 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x5253 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x5250 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x5247 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5244 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5241 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5235 (* l_0_4_40 l_0_4_40)))
 (let ((?x5233 (* l_0_4_39 l_0_4_39)))
 (let ((?x5231 (* l_0_4_38 l_0_4_38)))
 (let ((?x5229 (* l_0_4_37 l_0_4_37)))
 (let ((?x4567 (* l_0_4_25 l_0_4_25)))
 (let ((?x4565 (* l_0_4_24 l_0_4_24)))
 (let ((?x4563 (* l_0_4_23 l_0_4_23)))
 (let ((?x4561 (* l_0_4_22 l_0_4_22)))
 (let ((?x5208 (+ (+ (* (* 6.0 l_0_4_10) l_0_4_14) (* l_0_4_10 l_0_4_10)) (* (* 6.0 l_0_4_11) l_0_4_7))))
 (let ((?x5212 (+ (+ ?x5208 (* (* 6.0 l_0_4_12) l_0_4_8)) (* (* 6.0 l_0_4_13) l_0_4_9))))
 (let ((?x5219 (- (- (- ?x5212 (* (* 6.0 l_0_4_22) l_0_4_26)) ?x4561) (* (* 6.0 l_0_4_23) l_0_4_27))))
 (let ((?x5227 (- (- (- (- ?x5219 ?x4563) (* (* 6.0 l_0_4_24) l_0_4_28)) ?x4565) (* (* 6.0 l_0_4_25) l_0_4_29))))
 (let ((?x5239 (+ (- (- (- (- (- ?x5227 ?x4567) ?x5229) ?x5231) ?x5233) ?x5235) (* (* 2.0 l_0_4_52) l_0_4_56))))
 (let ((?x5258 (+ (- (- (- (+ (+ (+ ?x5239 ?x5241) ?x5244) ?x5247) ?x5250) ?x5253) ?x5256) ?x4569)))
 (= (+ (+ (- ?x5258 ?x5260) ?x4571) ?x4573) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5369 (* l_0_4_75 l_0_4_75)))
 (let ((?x5367 (* l_0_4_74 l_0_4_74)))
 (let ((?x5365 (* l_0_4_73 l_0_4_73)))
 (let ((?x5363 (* l_0_4_72 l_0_4_72)))
 (let ((?x5361 (* l_0_4_71 l_0_4_71)))
 (let ((?x5359 (* l_0_4_60 l_0_4_60)))
 (let ((?x5357 (* l_0_4_59 l_0_4_59)))
 (let ((?x5355 (* l_0_4_58 l_0_4_58)))
 (let ((?x5353 (* l_0_4_57 l_0_4_57)))
 (let ((?x5351 (* l_0_4_56 l_0_4_56)))
 (let ((?x4599 (* (* 2.0 l_0_4_25) l_0_4_29)))
 (let ((?x4596 (* (* 2.0 l_0_4_24) l_0_4_28)))
 (let ((?x4593 (* (* 2.0 l_0_4_23) l_0_4_27)))
 (let ((?x4590 (* (* 2.0 l_0_4_22) l_0_4_26)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4587 (* ?x4536 l_0_4_9)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4585 (* ?x1465 l_0_4_8)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4583 (* ?x1418 l_0_4_7)))
 (let ((?x4582 (* (* 2.0 l_0_4_10) l_0_4_14)))
 (let ((?x4584 (+ ?x4582 ?x4583)))
 (let ((?x5312 (+ (+ (+ ?x4584 (* 3.0 (* l_0_4_11 l_0_4_11))) ?x4585) (* 3.0 (* l_0_4_12 l_0_4_12)))))
 (let ((?x5317 (+ (+ (+ ?x5312 ?x4587) (* 3.0 (* l_0_4_13 l_0_4_13))) (* 3.0 (* l_0_4_14 l_0_4_14)))))
 (let ((?x5322 (- (- (- (+ ?x5317 (* 3.0 (* l_0_4_15 l_0_4_15))) ?x4590) ?x4593) ?x4596)))
 (let ((?x5329 (- (- (- ?x5322 ?x4599) (* (* 3.0 l_0_4_26) l_0_4_26)) (* (* 3.0 l_0_4_27) l_0_4_27))))
 (let ((?x5335 (- (- ?x5329 (* (* 3.0 l_0_4_28) l_0_4_28)) (* (* 3.0 l_0_4_29) l_0_4_29))))
 (let ((?x5341 (- (- ?x5335 (* (* 3.0 l_0_4_30) l_0_4_30)) (* (* 2.0 l_0_4_37) l_0_4_41))))
 (let ((?x5347 (- (- ?x5341 (* (* 2.0 l_0_4_38) l_0_4_42)) (* (* 2.0 l_0_4_39) l_0_4_43))))
 (let ((?x5356 (+ (+ (+ (- ?x5347 (* (* 2.0 l_0_4_40) l_0_4_44)) ?x5351) ?x5353) ?x5355)))
 (let ((?x5370 (- (- (- (- (- (+ (+ ?x5356 ?x5357) ?x5359) ?x5361) ?x5363) ?x5365) ?x5367) ?x5369)))
 (= ?x5370 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5402 (* l_0_4_31 l_0_4_31)))
 (let ((?x4313 (* l_0_4_16 l_0_4_16)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4348 (* ?x4321 l_0_4_26)))
 (let ((?x5400 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* l_0_4_1 l_0_4_1)) ?x4348)))
 (= (- (- ?x5400 ?x4313) ?x5402) 0.0)))))))
(assert
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4444 (* ?x1360 l_0_4_27)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x4442 (* ?x4441 l_0_4_26)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4322 (* ?x4321 l_0_4_17)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x1425 (* ?x1465 l_0_4_3)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x1463 (* ?x1418 l_0_4_2)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x4320 (* ?x4319 l_0_4_2)))
 (let ((?x5417 (- (- (- (- ?x4320 (* (* 2.0 l_0_4_101) l_0_4_91)) ?x1463) ?x1425) ?x4322)))
 (let ((?x5423 (- (- (+ (+ ?x5417 ?x4442) ?x4444) (* (* 2.0 l_0_4_31) l_0_4_32)) (* (* 2.0 l_0_4_76) l_0_4_86))))
 (= ?x5423 0.0))))))))))))))))
(assert
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4544 (* ?x4505 l_0_4_28)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4542 (* ?x4502 l_0_4_27)))
 (let ((?x4539 (* 2.0 l_0_4_19)))
 (let ((?x4540 (* ?x4539 l_0_4_26)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1252 (* ?x4321 l_0_4_19)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4537 (* ?x4536 l_0_4_6)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4534 (* ?x1465 l_0_4_5)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4533 (* ?x1418 l_0_4_4)))
 (let ((?x4319 (* 2.0 l_0_4_1)))
 (let ((?x1323 (* ?x4319 l_0_4_4)))
 (let ((?x5441 (+ (+ (+ (- (- (- (- ?x1323 ?x4533) ?x4534) ?x4537) ?x1252) ?x4540) ?x4542) ?x4544)))
 (= (- ?x5441 (* (* 2.0 l_0_4_31) l_0_4_34)) 0.0)))))))))))))))))))
(assert
 (let ((?x4645 (* l_0_4_30 l_0_4_30)))
 (let ((?x4643 (* l_0_4_29 l_0_4_29)))
 (let ((?x4641 (* l_0_4_28 l_0_4_28)))
 (let ((?x4639 (* l_0_4_27 l_0_4_27)))
 (let ((?x4637 (* l_0_4_26 l_0_4_26)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4348 (* ?x4321 l_0_4_26)))
 (let ((?x4635 (* l_0_4_15 l_0_4_15)))
 (let ((?x4633 (* l_0_4_14 l_0_4_14)))
 (let ((?x4631 (* l_0_4_13 l_0_4_13)))
 (let ((?x4629 (* l_0_4_12 l_0_4_12)))
 (let ((?x3358 (- (- (* (* 2.0 l_0_4_1) l_0_4_11) (* l_0_4_11 l_0_4_11)) ?x4629)))
 (let ((?x5447 (+ (+ (+ (- (- (- (- ?x3358 ?x4631) ?x4633) ?x4635) ?x4348) ?x4637) ?x4639) ?x4641)))
 (= (- (+ (+ ?x5447 ?x4643) ?x4645) (* (* 2.0 l_0_4_31) l_0_4_41)) 0.0)))))))))))))))
(assert
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4362 (* ?x4361 l_0_4_5)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4359 (* ?x4358 l_0_4_4)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x1362 (* ?x1360 l_0_4_20)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x5479 (* ?x4441 l_0_4_19)))
 (let ((?x5476 (- (* (* (- 2.0) l_0_4_101) l_0_4_94) (* (* 2.0 l_0_4_102) l_0_4_95))))
 (let ((?x5482 (+ (- (- (- ?x5476 (* (* 2.0 l_0_4_103) l_0_4_96)) ?x5479) ?x1362) ?x4359)))
 (let ((?x5487 (- (- (+ ?x5482 ?x4362) (* (* 2.0 l_0_4_32) l_0_4_34)) (* (* 2.0 l_0_4_33) l_0_4_35))))
 (let ((?x5491 (- (- ?x5487 (* (* 2.0 l_0_4_79) l_0_4_86)) (* (* 2.0 l_0_4_80) l_0_4_87))))
 (= (- ?x5491 (* (* 2.0 l_0_4_81) l_0_4_88)) 0.0))))))))))))))
(assert
 (let ((?x5540 (* l_0_4_90 l_0_4_90)))
 (let ((?x5538 (* l_0_4_89 l_0_4_89)))
 (let ((?x5536 (* l_0_4_88 l_0_4_88)))
 (let ((?x5534 (* l_0_4_87 l_0_4_87)))
 (let ((?x5532 (* l_0_4_86 l_0_4_86)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x4444 (* ?x1360 l_0_4_27)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x4442 (* ?x4441 l_0_4_26)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x1425 (* ?x1465 l_0_4_3)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x1463 (* ?x1418 l_0_4_2)))
 (let ((?x5522 (* l_0_4_105 l_0_4_105)))
 (let ((?x5520 (* l_0_4_104 l_0_4_104)))
 (let ((?x5518 (* l_0_4_103 l_0_4_103)))
 (let ((?x5519 (- (- (* (- l_0_4_101) l_0_4_101) (* l_0_4_102 l_0_4_102)) ?x5518)))
 (let ((?x5529 (- (- (- (+ (+ (- (- ?x5519 ?x5520) ?x5522) ?x1463) ?x1425) ?x4442) ?x4444) (* (* 2.0 l_0_4_32) l_0_4_41))))
 (let ((?x5537 (- (- (- (- ?x5529 (* (* 2.0 l_0_4_33) l_0_4_42)) ?x5532) ?x5534) ?x5536)))
 (= (- (- ?x5537 ?x5538) ?x5540) 0.0)))))))))))))))))))))
(assert
 (let ((?x4188 (* 2.0 l_0_4_63)))
 (let ((?x4952 (* ?x4188 l_0_4_72)))
 (let ((?x4185 (* 2.0 l_0_4_62)))
 (let ((?x4950 (* ?x4185 l_0_4_71)))
 (let ((?x4487 (* l_0_4_6 l_0_4_6)))
 (let ((?x4485 (* l_0_4_5 l_0_4_5)))
 (let ((?x4182 (* 2.0 l_0_4_48)))
 (let ((?x4948 (* ?x4182 l_0_4_57)))
 (let ((?x4179 (* 2.0 l_0_4_47)))
 (let ((?x4946 (* ?x4179 l_0_4_56)))
 (let ((?x4483 (* l_0_4_4 l_0_4_4)))
 (let ((?x5568 (* l_0_4_36 l_0_4_36)))
 (let ((?x5566 (* l_0_4_35 l_0_4_35)))
 (let ((?x5564 (* l_0_4_34 l_0_4_34)))
 (let ((?x4481 (* l_0_4_21 l_0_4_21)))
 (let ((?x4482 (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4481)))
 (let ((?x5573 (+ (- (- (+ (- (- (- ?x4482 ?x5564) ?x5566) ?x5568) ?x4483) ?x4946) ?x4948) ?x4485)))
 (= (+ (+ (+ ?x5573 ?x4487) ?x4950) ?x4952) 0.0)))))))))))))))))))
(assert
 (let ((?x4505 (* 2.0 l_0_4_21)))
 (let ((?x4544 (* ?x4505 l_0_4_28)))
 (let ((?x4502 (* 2.0 l_0_4_20)))
 (let ((?x4542 (* ?x4502 l_0_4_27)))
 (let ((?x4539 (* 2.0 l_0_4_19)))
 (let ((?x4540 (* ?x4539 l_0_4_26)))
 (let ((?x4536 (* 2.0 l_0_4_13)))
 (let ((?x4537 (* ?x4536 l_0_4_6)))
 (let ((?x1465 (* 2.0 l_0_4_12)))
 (let ((?x4534 (* ?x1465 l_0_4_5)))
 (let ((?x1418 (* 2.0 l_0_4_11)))
 (let ((?x4533 (* ?x1418 l_0_4_4)))
 (let ((?x4545 (- (- (- (+ (+ ?x4533 ?x4534) ?x4537) ?x4540) ?x4542) ?x4544)))
 (let ((?x5587 (- (- ?x4545 (* (* 2.0 l_0_4_34) l_0_4_41)) (* (* 2.0 l_0_4_35) l_0_4_42))))
 (= (- ?x5587 (* (* 2.0 l_0_4_36) l_0_4_43)) 0.0))))))))))))))))
(assert
 (let ((?x5613 (* l_0_4_45 l_0_4_45)))
 (let ((?x5611 (* l_0_4_44 l_0_4_44)))
 (let ((?x5609 (* l_0_4_43 l_0_4_43)))
 (let ((?x5607 (* l_0_4_42 l_0_4_42)))
 (let ((?x5605 (* l_0_4_41 l_0_4_41)))
 (let ((?x4645 (* l_0_4_30 l_0_4_30)))
 (let ((?x4643 (* l_0_4_29 l_0_4_29)))
 (let ((?x4641 (* l_0_4_28 l_0_4_28)))
 (let ((?x4639 (* l_0_4_27 l_0_4_27)))
 (let ((?x4637 (* l_0_4_26 l_0_4_26)))
 (let ((?x4635 (* l_0_4_15 l_0_4_15)))
 (let ((?x4633 (* l_0_4_14 l_0_4_14)))
 (let ((?x4631 (* l_0_4_13 l_0_4_13)))
 (let ((?x4634 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4631) ?x4633)))
 (let ((?x4646 (- (- (- (- (- (+ ?x4634 ?x4635) ?x4637) ?x4639) ?x4641) ?x4643) ?x4645)))
 (= (- (- (- (- (- ?x4646 ?x5605) ?x5607) ?x5609) ?x5611) ?x5613) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_4_1) l_0_4_1) (* l_0_4_16 l_0_4_16)) 0.0))
(assert
 (let ((?x5635 (* l_0_4_91 l_0_4_91)))
 (let ((?x5633 (* l_0_4_76 l_0_4_76)))
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x4322 (* ?x4321 l_0_4_17)))
 (= (- (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x4322) ?x5633) ?x5635) 0.0))))))
(assert
 (let ((?x4321 (* 2.0 l_0_4_16)))
 (let ((?x1252 (* ?x4321 l_0_4_19)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x1252) 0.0))))
(assert
 (let ((?x4361 (* 2.0 l_0_4_3)))
 (let ((?x4362 (* ?x4361 l_0_4_5)))
 (let ((?x4358 (* 2.0 l_0_4_2)))
 (let ((?x4359 (* ?x4358 l_0_4_4)))
 (let ((?x1360 (* 2.0 l_0_4_18)))
 (let ((?x1362 (* ?x1360 l_0_4_20)))
 (let ((?x4441 (* 2.0 l_0_4_17)))
 (let ((?x5479 (* ?x4441 l_0_4_19)))
 (let ((?x5651 (- (- (- (+ ?x5479 ?x1362) ?x4359) ?x4362) (* (* 2.0 l_0_4_76) l_0_4_79))))
 (= (- ?x5651 (* (* 2.0 l_0_4_91) l_0_4_94)) 0.0)))))))))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4692 (* ?x4327 l_0_4_62)))
 (let ((?x4487 (* l_0_4_6 l_0_4_6)))
 (let ((?x4485 (* l_0_4_5 l_0_4_5)))
 (let ((?x4324 (* 2.0 l_0_4_46)))
 (let ((?x4690 (* ?x4324 l_0_4_47)))
 (let ((?x4483 (* l_0_4_4 l_0_4_4)))
 (let ((?x4481 (* l_0_4_21 l_0_4_21)))
 (let ((?x5668 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4481) ?x4483)))
 (= (+ (- (- (- ?x5668 ?x4690) ?x4485) ?x4487) ?x4692) 0.0)))))))))))
(assert
 (= (+ (* (- l_0_4_46) l_0_4_46) (* l_0_4_61 l_0_4_61)) 0.0))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4739 (* ?x4327 l_0_4_67)))
 (= (+ (* (* (- 2.0) l_0_4_46) l_0_4_52) ?x4739) 0.0))))
(assert
 (let ((?x4327 (* 2.0 l_0_4_61)))
 (let ((?x4781 (* ?x4327 l_0_4_71)))
 (= (+ (* (* (- 2.0) l_0_4_46) l_0_4_56) ?x4781) 0.0))))
(assert
 (let ((?x5169 (* l_0_4_70 l_0_4_70)))
 (let ((?x5165 (* l_0_4_69 l_0_4_69)))
 (let ((?x5163 (* l_0_4_68 l_0_4_68)))
 (let ((?x5161 (* l_0_4_67 l_0_4_67)))
 (let ((?x5159 (* l_0_4_55 l_0_4_55)))
 (let ((?x5157 (* l_0_4_54 l_0_4_54)))
 (let ((?x5684 (- (- (- (* (- l_0_4_52) l_0_4_52) (* l_0_4_53 l_0_4_53)) ?x5157) ?x5159)))
 (= (+ (+ (+ (+ ?x5684 ?x5161) ?x5163) ?x5165) ?x5169) 0.0)))))))))
(assert
 (let ((?x5260 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x5256 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x5253 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x5250 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x5247 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5244 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5241 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x3724 (+ (- (- (- (* (* (- 2.0) l_0_4_52) l_0_4_56) ?x5241) ?x5244) ?x5247) ?x5250)))
 (= (+ (+ (+ ?x3724 ?x5253) ?x5256) ?x5260) 0.0))))))))))
(assert
 (let ((?x5369 (* l_0_4_75 l_0_4_75)))
 (let ((?x5367 (* l_0_4_74 l_0_4_74)))
 (let ((?x5365 (* l_0_4_73 l_0_4_73)))
 (let ((?x5363 (* l_0_4_72 l_0_4_72)))
 (let ((?x5361 (* l_0_4_71 l_0_4_71)))
 (let ((?x5359 (* l_0_4_60 l_0_4_60)))
 (let ((?x5357 (* l_0_4_59 l_0_4_59)))
 (let ((?x5355 (* l_0_4_58 l_0_4_58)))
 (let ((?x3753 (- (- (- (* (- l_0_4_56) l_0_4_56) (* l_0_4_57 l_0_4_57)) ?x5355) ?x5357)))
 (= (+ (+ (+ (+ (+ (- ?x3753 ?x5359) ?x5361) ?x5363) ?x5365) ?x5367) ?x5369) 0.0)))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_91 0.0))
(assert
 (>= l_0_4_93 0.0))
(assert
 (>= l_0_4_96 0.0))
(assert
 (>= l_0_4_100 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (= (- (* (- l_0_5_77) l_0_5_77) (* l_0_5_78 l_0_5_78)) 0.0))
(assert
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x5758 (* ?x5757 l_0_5_65)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x5755 (* ?x5754 l_0_5_64)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x5752 (* ?x5751 l_0_5_50)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x5749 (* ?x5748 l_0_5_49)))
 (let ((?x5746 (* l_0_5_3 l_0_5_3)))
 (let ((?x5744 (* l_0_5_2 l_0_5_2)))
 (let ((?x5747 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x5744) ?x5746)))
 (= (- (- (- (+ (+ ?x5747 ?x5749) ?x5752) ?x5755) ?x5758) 1.0) 0.0)))))))))))))
(assert
 (let ((?x5803 (* l_0_5_63 l_0_5_63)))
 (let ((?x5801 (* l_0_5_62 l_0_5_62)))
 (let ((?x5799 (* l_0_5_48 l_0_5_48)))
 (let ((?x5797 (* l_0_5_47 l_0_5_47)))
 (let ((?x5792 (- (* (* (- 3.0) l_0_5_17) l_0_5_17) (* (* 3.0 l_0_5_18) l_0_5_18))))
 (let ((?x5796 (+ (+ ?x5792 (* 3.0 (* l_0_5_2 l_0_5_2))) (* 3.0 (* l_0_5_3 l_0_5_3)))))
 (let ((?x5807 (- (+ (+ (- (- ?x5796 ?x5797) ?x5799) ?x5801) ?x5803) (* (* 2.0 l_0_5_77) l_0_5_82))))
 (= (- (- ?x5807 (* (* 2.0 l_0_5_78) l_0_5_83)) 3.0) 0.0)))))))))
(assert
 (let ((?x5833 (* l_0_5_33 l_0_5_33)))
 (let ((?x5831 (* l_0_5_32 l_0_5_32)))
 (let ((?x5746 (* l_0_5_3 l_0_5_3)))
 (let ((?x5744 (* l_0_5_2 l_0_5_2)))
 (let ((?x5747 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x5744) ?x5746)))
 (let ((?x5838 (- (- (- (- ?x5747 ?x5831) ?x5833) (* (* 2.0 l_0_5_77) l_0_5_86)) (* (* 2.0 l_0_5_78) l_0_5_87))))
 (= (- ?x5838 1.0) 0.0))))))))
(assert
 (let ((?x5746 (* l_0_5_3 l_0_5_3)))
 (let ((?x5744 (* l_0_5_2 l_0_5_2)))
 (let ((?x5855 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x5744) ?x5746)))
 (= (+ (- ?x5855 (* (* 2.0 l_0_5_76) l_0_5_77)) 1.0) 0.0)))))
(assert
 (= (- (* l_0_5_1 l_0_5_1) (* l_0_5_16 l_0_5_16)) 0.0))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x5880 (* ?x5879 l_0_5_64)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x5877 (* ?x5876 l_0_5_49)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5874 (* ?x5873 l_0_5_17)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3913 (* ?x3912 l_0_5_2)))
 (= (- (+ (- ?x3913 ?x5874) ?x5877) ?x5880) 0.0))))))))))
(assert
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x3914 (* ?x5873 l_0_5_19)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3908 (* ?x3912 l_0_5_4)))
 (= (- ?x3908 ?x3914) 0.0))))))
(assert
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5903 (* ?x5873 l_0_5_22)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3942 (* ?x3912 l_0_5_7)))
 (= (- ?x3942 ?x5903) 0.0))))))
(assert
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5916 (* ?x5873 l_0_5_26)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x5915 (* ?x3912 l_0_5_11)))
 (= (- ?x5915 ?x5916) 0.0))))))
(assert
 (let ((?x5943 (* l_0_5_66 l_0_5_66)))
 (let ((?x5941 (* l_0_5_65 l_0_5_65)))
 (let ((?x5939 (* l_0_5_64 l_0_5_64)))
 (let ((?x5937 (* l_0_5_51 l_0_5_51)))
 (let ((?x5935 (* l_0_5_50 l_0_5_50)))
 (let ((?x5933 (* l_0_5_49 l_0_5_49)))
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5931 (* ?x5930 l_0_5_5)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5928 (* ?x5927 l_0_5_4)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x3948 (* ?x3947 l_0_5_20)))
 (let ((?x5932 (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x3948) ?x5928) ?x5931)))
 (= (- (- (- (+ (+ (+ ?x5932 ?x5933) ?x5935) ?x5937) ?x5939) ?x5941) ?x5943) 0.0)))))))))))))))
(assert
 (let ((?x5983 (* 2.0 l_0_5_66)))
 (let ((?x5984 (* ?x5983 l_0_5_69)))
 (let ((?x5980 (* 2.0 l_0_5_65)))
 (let ((?x5981 (* ?x5980 l_0_5_68)))
 (let ((?x5977 (* 2.0 l_0_5_64)))
 (let ((?x5978 (* ?x5977 l_0_5_67)))
 (let ((?x5974 (* 2.0 l_0_5_51)))
 (let ((?x5975 (* ?x5974 l_0_5_54)))
 (let ((?x5971 (* 2.0 l_0_5_50)))
 (let ((?x5972 (* ?x5971 l_0_5_53)))
 (let ((?x5968 (* 2.0 l_0_5_49)))
 (let ((?x5969 (* ?x5968 l_0_5_52)))
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5966 (* ?x5930 l_0_5_8)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5964 (* ?x5927 l_0_5_7)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x5962 (* ?x3947 l_0_5_23)))
 (let ((?x5970 (+ (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x5962) ?x5964) ?x5966) ?x5969)))
 (= (- (- (- (+ (+ ?x5970 ?x5972) ?x5975) ?x5978) ?x5981) ?x5984) 0.0)))))))))))))))))))))
(assert
 (let ((?x5983 (* 2.0 l_0_5_66)))
 (let ((?x6029 (* ?x5983 l_0_5_73)))
 (let ((?x5980 (* 2.0 l_0_5_65)))
 (let ((?x6027 (* ?x5980 l_0_5_72)))
 (let ((?x5977 (* 2.0 l_0_5_64)))
 (let ((?x6025 (* ?x5977 l_0_5_71)))
 (let ((?x5974 (* 2.0 l_0_5_51)))
 (let ((?x6023 (* ?x5974 l_0_5_58)))
 (let ((?x5971 (* 2.0 l_0_5_50)))
 (let ((?x6021 (* ?x5971 l_0_5_57)))
 (let ((?x5968 (* 2.0 l_0_5_49)))
 (let ((?x6019 (* ?x5968 l_0_5_56)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x6017 (* ?x3947 l_0_5_27)))
 (let ((?x6014 (* 2.0 l_0_5_17)))
 (let ((?x6015 (* ?x6014 l_0_5_26)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x3994 (* ?x3993 l_0_5_3)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x3996 (* ?x3987 l_0_5_2)))
 (let ((?x6018 (- (- (+ ?x3996 ?x3994) ?x6015) ?x6017)))
 (= (- (- (- (+ (+ (+ ?x6018 ?x6019) ?x6021) ?x6023) ?x6025) ?x6027) ?x6029) 0.0)))))))))))))))))))))))
(assert
 (let ((?x6069 (* l_0_5_6 l_0_5_6)))
 (let ((?x6067 (* l_0_5_5 l_0_5_5)))
 (let ((?x6065 (* l_0_5_4 l_0_5_4)))
 (let ((?x6063 (* l_0_5_21 l_0_5_21)))
 (let ((?x6064 (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6063)))
 (= (+ (+ (+ ?x6064 ?x6065) ?x6067) ?x6069) 0.0)))))))
(assert
 (let ((?x6097 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6094 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6091 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6088 (* ?x6087 l_0_5_24)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6085 (* ?x6084 l_0_5_23)))
 (let ((?x6095 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x6085) ?x6088) ?x6091) ?x6094)))
 (= (+ ?x6095 ?x6097) 0.0))))))))))
(assert
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6125 (* ?x6087 l_0_5_28)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6123 (* ?x6084 l_0_5_27)))
 (let ((?x6120 (* 2.0 l_0_5_19)))
 (let ((?x6121 (* ?x6120 l_0_5_26)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6118 (* ?x6111 l_0_5_6)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6108 (* ?x3993 l_0_5_5)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x4080 (* ?x3987 l_0_5_4)))
 (let ((?x6126 (- (- (- (+ (+ ?x4080 ?x6108) ?x6118) ?x6121) ?x6123) ?x6125)))
 (= ?x6126 0.0)))))))))))))))
(assert
 (let ((?x6161 (* l_0_5_9 l_0_5_9)))
 (let ((?x6159 (* l_0_5_8 l_0_5_8)))
 (let ((?x6157 (* l_0_5_7 l_0_5_7)))
 (let ((?x6155 (* l_0_5_25 l_0_5_25)))
 (let ((?x6153 (* l_0_5_24 l_0_5_24)))
 (let ((?x6151 (* l_0_5_23 l_0_5_23)))
 (let ((?x6154 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6151) ?x6153)))
 (= (+ (+ (+ (- ?x6154 ?x6155) ?x6157) ?x6159) ?x6161) 0.0)))))))))
(assert
 (let ((?x6190 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6187 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6184 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6181 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6178 (* ?x6111 l_0_5_9)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6176 (* ?x3993 l_0_5_8)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x6174 (* ?x3987 l_0_5_7)))
 (let ((?x6173 (* (* 2.0 l_0_5_10) l_0_5_14)))
 (let ((?x6175 (+ ?x6173 ?x6174)))
 (= (- (- (- (- (+ (+ ?x6175 ?x6176) ?x6178) ?x6181) ?x6184) ?x6187) ?x6190) 0.0))))))))))))))
(assert
 (let ((?x6241 (* l_0_5_30 l_0_5_30)))
 (let ((?x6239 (* l_0_5_29 l_0_5_29)))
 (let ((?x6237 (* l_0_5_28 l_0_5_28)))
 (let ((?x6235 (* l_0_5_27 l_0_5_27)))
 (let ((?x6233 (* l_0_5_26 l_0_5_26)))
 (let ((?x6231 (* l_0_5_15 l_0_5_15)))
 (let ((?x6229 (* l_0_5_14 l_0_5_14)))
 (let ((?x6227 (* l_0_5_13 l_0_5_13)))
 (let ((?x6230 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6227) ?x6229)))
 (let ((?x6242 (- (- (- (- (- (+ ?x6230 ?x6231) ?x6233) ?x6235) ?x6237) ?x6239) ?x6241)))
 (= ?x6242 0.0))))))))))))
(assert
 (let ((?x6264 (* l_0_5_61 l_0_5_61)))
 (let ((?x6262 (* l_0_5_46 l_0_5_46)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5903 (* ?x5873 l_0_5_22)))
 (let ((?x3907 (* l_0_5_1 l_0_5_1)))
 (let ((?x6256 (* 3.0 ?x3907)))
 (let ((?x6261 (- (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x6256) ?x5903) (* (* 3.0 l_0_5_16) l_0_5_16))))
 (= (+ (- ?x6261 ?x6262) ?x6264) 0.0)))))))))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6288 (* ?x5879 l_0_5_62)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6286 (* ?x5876 l_0_5_47)))
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5966 (* ?x5930 l_0_5_8)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5964 (* ?x5927 l_0_5_7)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x5962 (* ?x3947 l_0_5_23)))
 (let ((?x6014 (* 2.0 l_0_5_17)))
 (let ((?x6281 (* ?x6014 l_0_5_22)))
 (let ((?x6280 (- (* (* 6.0 l_0_5_1) l_0_5_2) (* (* 6.0 l_0_5_16) l_0_5_17))))
 (let ((?x6291 (- (+ (- (- (- (+ (+ ?x6280 ?x6281) ?x5962) ?x5964) ?x5966) ?x6286) ?x6288) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= ?x6291 0.0))))))))))))))))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x5880 (* ?x5879 l_0_5_64)))
 (let ((?x6097 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6094 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x5877 (* ?x5876 l_0_5_49)))
 (let ((?x6091 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6088 (* ?x6087 l_0_5_24)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6085 (* ?x6084 l_0_5_23)))
 (let ((?x6120 (* 2.0 l_0_5_19)))
 (let ((?x6309 (* ?x6120 l_0_5_22)))
 (let ((?x6308 (- (* (* 6.0 l_0_5_1) l_0_5_4) (* (* 6.0 l_0_5_16) l_0_5_19))))
 (let ((?x6316 (- (- (- (- (+ (+ (+ ?x6308 ?x6309) ?x6085) ?x6088) ?x6091) ?x5877) ?x6094) ?x6097)))
 (= (+ ?x6316 ?x5880) 0.0)))))))))))))))))
(assert
 (let ((?x6161 (* l_0_5_9 l_0_5_9)))
 (let ((?x6159 (* l_0_5_8 l_0_5_8)))
 (let ((?x6157 (* l_0_5_7 l_0_5_7)))
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6333 (* ?x5879 l_0_5_67)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6331 (* ?x5876 l_0_5_52)))
 (let ((?x6155 (* l_0_5_25 l_0_5_25)))
 (let ((?x6153 (* l_0_5_24 l_0_5_24)))
 (let ((?x6151 (* l_0_5_23 l_0_5_23)))
 (let ((?x6149 (* l_0_5_22 l_0_5_22)))
 (let ((?x1035 (- (- (* (* 6.0 l_0_5_1) l_0_5_7) (* l_0_5_10 l_0_5_10)) (* (* 6.0 l_0_5_16) l_0_5_22))))
 (let ((?x6335 (- (+ (- (+ (+ (+ (+ ?x1035 ?x6149) ?x6151) ?x6153) ?x6155) ?x6331) ?x6333) ?x6157)))
 (= (- (- ?x6335 ?x6159) ?x6161) 0.0)))))))))))))))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6370 (* ?x5879 l_0_5_71)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6368 (* ?x5876 l_0_5_56)))
 (let ((?x6190 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6187 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6184 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6181 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5903 (* ?x5873 l_0_5_22)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6178 (* ?x6111 l_0_5_9)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6176 (* ?x3993 l_0_5_8)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x6174 (* ?x3987 l_0_5_7)))
 (let ((?x6173 (* (* 2.0 l_0_5_10) l_0_5_14)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3942 (* ?x3912 l_0_5_7)))
 (let ((?x6356 (- (- (- (+ (* (* 6.0 l_0_5_1) l_0_5_11) ?x3942) ?x6173) ?x6174) ?x6176)))
 (let ((?x6361 (+ (- (- (- ?x6356 ?x6178) ?x5903) (* (* 6.0 l_0_5_16) l_0_5_26)) ?x6181)))
 (let ((?x6367 (- (+ (+ (+ ?x6361 ?x6184) ?x6187) ?x6190) (* (* 2.0 l_0_5_31) l_0_5_37))))
 (= (+ (- ?x6367 ?x6368) ?x6370) 0.0))))))))))))))))))))))))
(assert
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x5758 (* ?x5757 l_0_5_65)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x5755 (* ?x5754 l_0_5_64)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x5752 (* ?x5751 l_0_5_50)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x5749 (* ?x5748 l_0_5_49)))
 (let ((?x6382 (- (* (* (- 6.0) l_0_5_17) l_0_5_19) (* (* 6.0 l_0_5_18) l_0_5_20))))
 (let ((?x6388 (+ (+ ?x6382 (* (* 6.0 l_0_5_2) l_0_5_4)) (* (* 6.0 l_0_5_3) l_0_5_5))))
 (let ((?x6395 (- (+ (+ (- (- ?x6388 ?x5749) ?x5752) ?x5755) ?x5758) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x6401 (- (- ?x6395 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x6401 0.0))))))))))))))
(assert
 (let ((?x6445 (* l_0_5_85 l_0_5_85)))
 (let ((?x6443 (* l_0_5_84 l_0_5_84)))
 (let ((?x6441 (* l_0_5_83 l_0_5_83)))
 (let ((?x6439 (* l_0_5_82 l_0_5_82)))
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x6437 (* ?x5757 l_0_5_68)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x6435 (* ?x5754 l_0_5_67)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x6433 (* ?x5751 l_0_5_53)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x6431 (* ?x5748 l_0_5_52)))
 (let ((?x6426 (- (* (* (- 6.0) l_0_5_17) l_0_5_22) (* (* 6.0 l_0_5_18) l_0_5_23))))
 (let ((?x6430 (+ (+ ?x6426 (* (* 6.0 l_0_5_2) l_0_5_7)) (* (* 6.0 l_0_5_3) l_0_5_8))))
 (let ((?x6444 (- (- (- (+ (+ (- (- ?x6430 ?x6431) ?x6433) ?x6435) ?x6437) ?x6439) ?x6441) ?x6443)))
 (= (- ?x6444 ?x6445) 0.0)))))))))))))))))
(assert
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x6488 (* ?x5757 l_0_5_72)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x6486 (* ?x5754 l_0_5_71)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x6484 (* ?x5751 l_0_5_57)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x6482 (* ?x5748 l_0_5_56)))
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5966 (* ?x5930 l_0_5_8)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5964 (* ?x5927 l_0_5_7)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x5962 (* ?x3947 l_0_5_23)))
 (let ((?x6014 (* 2.0 l_0_5_17)))
 (let ((?x6281 (* ?x6014 l_0_5_22)))
 (let ((?x6466 (+ (* (* 6.0 l_0_5_11) l_0_5_2) (* (* 6.0 l_0_5_12) l_0_5_3))))
 (let ((?x6473 (- (- (- (- ?x6466 ?x6281) (* (* 6.0 l_0_5_17) l_0_5_26)) ?x5962) (* (* 6.0 l_0_5_18) l_0_5_27))))
 (let ((?x6481 (- (- (+ (+ ?x6473 ?x5964) ?x5966) (* (* 2.0 l_0_5_32) l_0_5_37)) (* (* 2.0 l_0_5_33) l_0_5_38))))
 (let ((?x6492 (- (+ (+ (- (- ?x6481 ?x6482) ?x6484) ?x6486) ?x6488) (* (* 2.0 l_0_5_82) l_0_5_86))))
 (let ((?x6498 (- (- ?x6492 (* (* 2.0 l_0_5_83) l_0_5_87)) (* (* 2.0 l_0_5_84) l_0_5_88))))
 (= (- ?x6498 (* (* 2.0 l_0_5_85) l_0_5_89)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5943 (* l_0_5_66 l_0_5_66)))
 (let ((?x5941 (* l_0_5_65 l_0_5_65)))
 (let ((?x5939 (* l_0_5_64 l_0_5_64)))
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x6437 (* ?x5757 l_0_5_68)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x6435 (* ?x5754 l_0_5_67)))
 (let ((?x6069 (* l_0_5_6 l_0_5_6)))
 (let ((?x6569 (* 3.0 ?x6069)))
 (let ((?x5937 (* l_0_5_51 l_0_5_51)))
 (let ((?x5935 (* l_0_5_50 l_0_5_50)))
 (let ((?x6067 (* l_0_5_5 l_0_5_5)))
 (let ((?x6565 (* 3.0 ?x6067)))
 (let ((?x5933 (* l_0_5_49 l_0_5_49)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x6433 (* ?x5751 l_0_5_53)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x6431 (* ?x5748 l_0_5_52)))
 (let ((?x6065 (* l_0_5_4 l_0_5_4)))
 (let ((?x6560 (* 3.0 ?x6065)))
 (let ((?x6556 (- (* (* (- 3.0) l_0_5_19) l_0_5_19) (* (* 3.0 l_0_5_20) l_0_5_20))))
 (let ((?x6563 (+ (+ (+ (- ?x6556 (* (* 3.0 l_0_5_21) l_0_5_21)) ?x6560) ?x6431) ?x6433)))
 (let ((?x6572 (- (- (+ (- (- (+ (- ?x6563 ?x5933) ?x6565) ?x5935) ?x5937) ?x6569) ?x6435) ?x6437)))
 (= (+ (+ (+ ?x6572 ?x5939) ?x5941) ?x5943) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5983 (* 2.0 l_0_5_66)))
 (let ((?x5984 (* ?x5983 l_0_5_69)))
 (let ((?x5980 (* 2.0 l_0_5_65)))
 (let ((?x5981 (* ?x5980 l_0_5_68)))
 (let ((?x5977 (* 2.0 l_0_5_64)))
 (let ((?x5978 (* ?x5977 l_0_5_67)))
 (let ((?x5974 (* 2.0 l_0_5_51)))
 (let ((?x5975 (* ?x5974 l_0_5_54)))
 (let ((?x5971 (* 2.0 l_0_5_50)))
 (let ((?x5972 (* ?x5971 l_0_5_53)))
 (let ((?x5968 (* 2.0 l_0_5_49)))
 (let ((?x5969 (* ?x5968 l_0_5_52)))
 (let ((?x1703 (- (* (* (- 6.0) l_0_5_19) l_0_5_22) (* (* 6.0 l_0_5_20) l_0_5_23))))
 (let ((?x6584 (+ (- ?x1703 (* (* 6.0 l_0_5_21) l_0_5_24)) (* (* 6.0 l_0_5_4) l_0_5_7))))
 (let ((?x6590 (- (- (+ (- ?x6584 ?x5969) (* (* 6.0 l_0_5_5) l_0_5_8)) ?x5972) ?x5975)))
 (let ((?x6596 (+ (+ (+ (+ ?x6590 (* (* 6.0 l_0_5_6) l_0_5_9)) ?x5978) ?x5981) ?x5984)))
 (= ?x6596 0.0))))))))))))))))))
(assert
 (let ((?x5983 (* 2.0 l_0_5_66)))
 (let ((?x6029 (* ?x5983 l_0_5_73)))
 (let ((?x5980 (* 2.0 l_0_5_65)))
 (let ((?x6027 (* ?x5980 l_0_5_72)))
 (let ((?x5977 (* 2.0 l_0_5_64)))
 (let ((?x6025 (* ?x5977 l_0_5_71)))
 (let ((?x6097 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x5974 (* 2.0 l_0_5_51)))
 (let ((?x6023 (* ?x5974 l_0_5_58)))
 (let ((?x5971 (* 2.0 l_0_5_50)))
 (let ((?x6021 (* ?x5971 l_0_5_57)))
 (let ((?x6094 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x5968 (* 2.0 l_0_5_49)))
 (let ((?x6019 (* ?x5968 l_0_5_56)))
 (let ((?x6091 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6088 (* ?x6087 l_0_5_24)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6085 (* ?x6084 l_0_5_23)))
 (let ((?x6120 (* 2.0 l_0_5_19)))
 (let ((?x6309 (* ?x6120 l_0_5_22)))
 (let ((?x6619 (+ (* (* 6.0 l_0_5_11) l_0_5_4) (* (* 6.0 l_0_5_12) l_0_5_5))))
 (let ((?x6626 (- (- (+ ?x6619 (* (* 6.0 l_0_5_13) l_0_5_6)) ?x6309) (* (* 6.0 l_0_5_19) l_0_5_26))))
 (let ((?x6632 (- (- (- (- ?x6626 ?x6085) (* (* 6.0 l_0_5_20) l_0_5_27)) ?x6088) (* (* 6.0 l_0_5_21) l_0_5_28))))
 (let ((?x6638 (- (- ?x6632 (* (* 2.0 l_0_5_34) l_0_5_37)) (* (* 2.0 l_0_5_35) l_0_5_38))))
 (let ((?x6644 (+ (- (+ (- ?x6638 (* (* 2.0 l_0_5_36) l_0_5_39)) ?x6091) ?x6019) ?x6094)))
 (= (+ (+ (+ (+ (- (- ?x6644 ?x6021) ?x6023) ?x6097) ?x6025) ?x6027) ?x6029) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6161 (* l_0_5_9 l_0_5_9)))
 (let ((?x6703 (* 3.0 ?x6161)))
 (let ((?x6159 (* l_0_5_8 l_0_5_8)))
 (let ((?x6701 (* 3.0 ?x6159)))
 (let ((?x6699 (* l_0_5_70 l_0_5_70)))
 (let ((?x6157 (* l_0_5_7 l_0_5_7)))
 (let ((?x6697 (* 3.0 ?x6157)))
 (let ((?x6695 (* l_0_5_69 l_0_5_69)))
 (let ((?x6693 (* l_0_5_68 l_0_5_68)))
 (let ((?x6691 (* l_0_5_67 l_0_5_67)))
 (let ((?x6689 (* l_0_5_55 l_0_5_55)))
 (let ((?x6687 (* l_0_5_54 l_0_5_54)))
 (let ((?x6685 (* l_0_5_53 l_0_5_53)))
 (let ((?x6683 (* l_0_5_52 l_0_5_52)))
 (let ((?x6148 (* l_0_5_10 l_0_5_10)))
 (let ((?x1785 (* 3.0 ?x6148)))
 (let ((?x6676 (- (- ?x1785 (* (* 3.0 l_0_5_22) l_0_5_22)) (* (* 3.0 l_0_5_23) l_0_5_23))))
 (let ((?x6682 (- (- ?x6676 (* (* 3.0 l_0_5_24) l_0_5_24)) (* (* 3.0 l_0_5_25) l_0_5_25))))
 (let ((?x6696 (+ (+ (+ (- (- (- (- ?x6682 ?x6683) ?x6685) ?x6687) ?x6689) ?x6691) ?x6693) ?x6695)))
 (= (+ (+ (+ (+ ?x6696 ?x6697) ?x6699) ?x6701) ?x6703) 0.0)))))))))))))))))))))
(assert
 (let ((?x6161 (* l_0_5_9 l_0_5_9)))
 (let ((?x6159 (* l_0_5_8 l_0_5_8)))
 (let ((?x6781 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6157 (* l_0_5_7 l_0_5_7)))
 (let ((?x6777 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6774 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6771 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6768 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6765 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6762 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6759 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6756 (* l_0_5_40 l_0_5_40)))
 (let ((?x6754 (* l_0_5_39 l_0_5_39)))
 (let ((?x6752 (* l_0_5_38 l_0_5_38)))
 (let ((?x6750 (* l_0_5_37 l_0_5_37)))
 (let ((?x6155 (* l_0_5_25 l_0_5_25)))
 (let ((?x6153 (* l_0_5_24 l_0_5_24)))
 (let ((?x6151 (* l_0_5_23 l_0_5_23)))
 (let ((?x6149 (* l_0_5_22 l_0_5_22)))
 (let ((?x6729 (+ (+ (* (* 6.0 l_0_5_10) l_0_5_14) (* l_0_5_10 l_0_5_10)) (* (* 6.0 l_0_5_11) l_0_5_7))))
 (let ((?x6733 (+ (+ ?x6729 (* (* 6.0 l_0_5_12) l_0_5_8)) (* (* 6.0 l_0_5_13) l_0_5_9))))
 (let ((?x6740 (- (- (- ?x6733 (* (* 6.0 l_0_5_22) l_0_5_26)) ?x6149) (* (* 6.0 l_0_5_23) l_0_5_27))))
 (let ((?x6748 (- (- (- (- ?x6740 ?x6151) (* (* 6.0 l_0_5_24) l_0_5_28)) ?x6153) (* (* 6.0 l_0_5_25) l_0_5_29))))
 (let ((?x6763 (- (- (- (- (- (- (- ?x6748 ?x6155) ?x6750) ?x6752) ?x6754) ?x6756) ?x6759) ?x6762)))
 (let ((?x6782 (+ (+ (+ (+ (+ (- (- ?x6763 ?x6765) ?x6768) ?x6771) ?x6774) ?x6777) ?x6157) ?x6781)))
 (= (+ (+ ?x6782 ?x6159) ?x6161) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6891 (* l_0_5_75 l_0_5_75)))
 (let ((?x6889 (* l_0_5_74 l_0_5_74)))
 (let ((?x6887 (* l_0_5_73 l_0_5_73)))
 (let ((?x6885 (* l_0_5_72 l_0_5_72)))
 (let ((?x6883 (* l_0_5_71 l_0_5_71)))
 (let ((?x6881 (* l_0_5_60 l_0_5_60)))
 (let ((?x6879 (* l_0_5_59 l_0_5_59)))
 (let ((?x6877 (* l_0_5_58 l_0_5_58)))
 (let ((?x6875 (* l_0_5_57 l_0_5_57)))
 (let ((?x6873 (* l_0_5_56 l_0_5_56)))
 (let ((?x6190 (* (* 2.0 l_0_5_25) l_0_5_29)))
 (let ((?x6187 (* (* 2.0 l_0_5_24) l_0_5_28)))
 (let ((?x6184 (* (* 2.0 l_0_5_23) l_0_5_27)))
 (let ((?x6181 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6178 (* ?x6111 l_0_5_9)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6176 (* ?x3993 l_0_5_8)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x6174 (* ?x3987 l_0_5_7)))
 (let ((?x6173 (* (* 2.0 l_0_5_10) l_0_5_14)))
 (let ((?x6175 (+ ?x6173 ?x6174)))
 (let ((?x6824 (+ (+ (+ ?x6175 (* 3.0 (* l_0_5_11 l_0_5_11))) ?x6176) (* 3.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x6839 (+ (+ (+ ?x6824 ?x6178) (* 3.0 (* l_0_5_13 l_0_5_13))) (* 3.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x6844 (- (- (- (+ ?x6839 (* 3.0 (* l_0_5_15 l_0_5_15))) ?x6181) ?x6184) ?x6187)))
 (let ((?x6851 (- (- (- ?x6844 ?x6190) (* (* 3.0 l_0_5_26) l_0_5_26)) (* (* 3.0 l_0_5_27) l_0_5_27))))
 (let ((?x6857 (- (- ?x6851 (* (* 3.0 l_0_5_28) l_0_5_28)) (* (* 3.0 l_0_5_29) l_0_5_29))))
 (let ((?x6863 (- (- ?x6857 (* (* 3.0 l_0_5_30) l_0_5_30)) (* (* 2.0 l_0_5_37) l_0_5_41))))
 (let ((?x6869 (- (- ?x6863 (* (* 2.0 l_0_5_38) l_0_5_42)) (* (* 2.0 l_0_5_39) l_0_5_43))))
 (let ((?x6878 (- (- (- (- ?x6869 (* (* 2.0 l_0_5_40) l_0_5_44)) ?x6873) ?x6875) ?x6877)))
 (let ((?x6892 (+ (+ (+ (+ (+ (- (- ?x6878 ?x6879) ?x6881) ?x6883) ?x6885) ?x6887) ?x6889) ?x6891)))
 (= ?x6892 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x6926 (* l_0_5_31 l_0_5_31)))
 (let ((?x5868 (* l_0_5_16 l_0_5_16)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5916 (* ?x5873 l_0_5_26)))
 (let ((?x6924 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* l_0_5_1 l_0_5_1)) ?x5916)))
 (= (- (- ?x6924 ?x5868) ?x6926) 0.0)))))))
(assert
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x6017 (* ?x3947 l_0_5_27)))
 (let ((?x6014 (* 2.0 l_0_5_17)))
 (let ((?x6015 (* ?x6014 l_0_5_26)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5874 (* ?x5873 l_0_5_17)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x3994 (* ?x3993 l_0_5_3)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x3996 (* ?x3987 l_0_5_2)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3913 (* ?x3912 l_0_5_2)))
 (let ((?x6936 (- (+ (+ (- (- (- ?x3913 ?x3996) ?x3994) ?x5874) ?x6015) ?x6017) (* (* 2.0 l_0_5_31) l_0_5_32))))
 (= (- ?x6936 (* (* 2.0 l_0_5_76) l_0_5_86)) 0.0)))))))))))))))
(assert
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6125 (* ?x6087 l_0_5_28)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6123 (* ?x6084 l_0_5_27)))
 (let ((?x6120 (* 2.0 l_0_5_19)))
 (let ((?x6121 (* ?x6120 l_0_5_26)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x3914 (* ?x5873 l_0_5_19)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6118 (* ?x6111 l_0_5_6)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6108 (* ?x3993 l_0_5_5)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x4080 (* ?x3987 l_0_5_4)))
 (let ((?x3912 (* 2.0 l_0_5_1)))
 (let ((?x3908 (* ?x3912 l_0_5_4)))
 (let ((?x6949 (+ (+ (+ (- (- (- (- ?x3908 ?x4080) ?x6108) ?x6118) ?x3914) ?x6121) ?x6123) ?x6125)))
 (= (- ?x6949 (* (* 2.0 l_0_5_31) l_0_5_34)) 0.0)))))))))))))))))))
(assert
 (let ((?x6241 (* l_0_5_30 l_0_5_30)))
 (let ((?x6239 (* l_0_5_29 l_0_5_29)))
 (let ((?x6237 (* l_0_5_28 l_0_5_28)))
 (let ((?x6235 (* l_0_5_27 l_0_5_27)))
 (let ((?x6233 (* l_0_5_26 l_0_5_26)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5916 (* ?x5873 l_0_5_26)))
 (let ((?x6231 (* l_0_5_15 l_0_5_15)))
 (let ((?x6229 (* l_0_5_14 l_0_5_14)))
 (let ((?x6227 (* l_0_5_13 l_0_5_13)))
 (let ((?x6225 (* l_0_5_12 l_0_5_12)))
 (let ((?x2725 (- (- (* (* 2.0 l_0_5_1) l_0_5_11) (* l_0_5_11 l_0_5_11)) ?x6225)))
 (let ((?x4998 (+ (+ (+ (- (- (- (- ?x2725 ?x6227) ?x6229) ?x6231) ?x5916) ?x6233) ?x6235) ?x6237)))
 (= (- (+ (+ ?x4998 ?x6239) ?x6241) (* (* 2.0 l_0_5_31) l_0_5_41)) 0.0)))))))))))))))
(assert
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5931 (* ?x5930 l_0_5_5)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5928 (* ?x5927 l_0_5_4)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x3948 (* ?x3947 l_0_5_20)))
 (let ((?x5932 (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x3948) ?x5928) ?x5931)))
 (let ((?x6974 (- (- ?x5932 (* (* 2.0 l_0_5_32) l_0_5_34)) (* (* 2.0 l_0_5_33) l_0_5_35))))
 (let ((?x6978 (- (- ?x6974 (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x6978 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0)))))))))))
(assert
 (let ((?x7010 (* l_0_5_90 l_0_5_90)))
 (let ((?x7008 (* l_0_5_89 l_0_5_89)))
 (let ((?x7006 (* l_0_5_88 l_0_5_88)))
 (let ((?x7004 (* l_0_5_87 l_0_5_87)))
 (let ((?x7002 (* l_0_5_86 l_0_5_86)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x6017 (* ?x3947 l_0_5_27)))
 (let ((?x6014 (* 2.0 l_0_5_17)))
 (let ((?x6015 (* ?x6014 l_0_5_26)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x3994 (* ?x3993 l_0_5_3)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x3996 (* ?x3987 l_0_5_2)))
 (let ((?x6018 (- (- (+ ?x3996 ?x3994) ?x6015) ?x6017)))
 (let ((?x7001 (- (- ?x6018 (* (* 2.0 l_0_5_32) l_0_5_41)) (* (* 2.0 l_0_5_33) l_0_5_42))))
 (= (- (- (- (- (- ?x7001 ?x7002) ?x7004) ?x7006) ?x7008) ?x7010) 0.0)))))))))))))))))
(assert
 (let ((?x5757 (* 2.0 l_0_5_63)))
 (let ((?x6488 (* ?x5757 l_0_5_72)))
 (let ((?x5754 (* 2.0 l_0_5_62)))
 (let ((?x6486 (* ?x5754 l_0_5_71)))
 (let ((?x6069 (* l_0_5_6 l_0_5_6)))
 (let ((?x6067 (* l_0_5_5 l_0_5_5)))
 (let ((?x5751 (* 2.0 l_0_5_48)))
 (let ((?x6484 (* ?x5751 l_0_5_57)))
 (let ((?x5748 (* 2.0 l_0_5_47)))
 (let ((?x6482 (* ?x5748 l_0_5_56)))
 (let ((?x6065 (* l_0_5_4 l_0_5_4)))
 (let ((?x7036 (* l_0_5_36 l_0_5_36)))
 (let ((?x7034 (* l_0_5_35 l_0_5_35)))
 (let ((?x7032 (* l_0_5_34 l_0_5_34)))
 (let ((?x6063 (* l_0_5_21 l_0_5_21)))
 (let ((?x6064 (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6063)))
 (let ((?x7041 (+ (+ (+ (+ (- (- (- ?x6064 ?x7032) ?x7034) ?x7036) ?x6065) ?x6482) ?x6484) ?x6067)))
 (= (- (- (+ ?x7041 ?x6069) ?x6486) ?x6488) 0.0)))))))))))))))))))
(assert
 (let ((?x6087 (* 2.0 l_0_5_21)))
 (let ((?x6125 (* ?x6087 l_0_5_28)))
 (let ((?x6084 (* 2.0 l_0_5_20)))
 (let ((?x6123 (* ?x6084 l_0_5_27)))
 (let ((?x6120 (* 2.0 l_0_5_19)))
 (let ((?x6121 (* ?x6120 l_0_5_26)))
 (let ((?x6111 (* 2.0 l_0_5_13)))
 (let ((?x6118 (* ?x6111 l_0_5_6)))
 (let ((?x3993 (* 2.0 l_0_5_12)))
 (let ((?x6108 (* ?x3993 l_0_5_5)))
 (let ((?x3987 (* 2.0 l_0_5_11)))
 (let ((?x4080 (* ?x3987 l_0_5_4)))
 (let ((?x6126 (- (- (- (+ (+ ?x4080 ?x6108) ?x6118) ?x6121) ?x6123) ?x6125)))
 (let ((?x7058 (- (- ?x6126 (* (* 2.0 l_0_5_34) l_0_5_41)) (* (* 2.0 l_0_5_35) l_0_5_42))))
 (= (- ?x7058 (* (* 2.0 l_0_5_36) l_0_5_43)) 0.0))))))))))))))))
(assert
 (let ((?x7079 (* l_0_5_45 l_0_5_45)))
 (let ((?x7077 (* l_0_5_44 l_0_5_44)))
 (let ((?x7075 (* l_0_5_43 l_0_5_43)))
 (let ((?x5132 (* l_0_5_42 l_0_5_42)))
 (let ((?x5135 (* l_0_5_41 l_0_5_41)))
 (let ((?x6241 (* l_0_5_30 l_0_5_30)))
 (let ((?x6239 (* l_0_5_29 l_0_5_29)))
 (let ((?x6237 (* l_0_5_28 l_0_5_28)))
 (let ((?x6235 (* l_0_5_27 l_0_5_27)))
 (let ((?x6233 (* l_0_5_26 l_0_5_26)))
 (let ((?x6231 (* l_0_5_15 l_0_5_15)))
 (let ((?x6229 (* l_0_5_14 l_0_5_14)))
 (let ((?x6227 (* l_0_5_13 l_0_5_13)))
 (let ((?x6230 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x6227) ?x6229)))
 (let ((?x6242 (- (- (- (- (- (+ ?x6230 ?x6231) ?x6233) ?x6235) ?x6237) ?x6239) ?x6241)))
 (= (- (- (- (- (- ?x6242 ?x5135) ?x5132) ?x7075) ?x7077) ?x7079) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_16 l_0_5_16)) 0.0))
(assert
 (let ((?x2895 (* l_0_5_76 l_0_5_76)))
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x5874 (* ?x5873 l_0_5_17)))
 (= (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x5874) ?x2895) 0.0)))))
(assert
 (let ((?x5873 (* 2.0 l_0_5_16)))
 (let ((?x3914 (* ?x5873 l_0_5_19)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x3914) 0.0))))
(assert
 (let ((?x5930 (* 2.0 l_0_5_3)))
 (let ((?x5931 (* ?x5930 l_0_5_5)))
 (let ((?x5927 (* 2.0 l_0_5_2)))
 (let ((?x5928 (* ?x5927 l_0_5_4)))
 (let ((?x3947 (* 2.0 l_0_5_18)))
 (let ((?x3948 (* ?x3947 l_0_5_20)))
 (let ((?x7116 (- (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x3948) ?x5928) ?x5931) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= ?x7116 0.0)))))))))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6288 (* ?x5879 l_0_5_62)))
 (let ((?x6069 (* l_0_5_6 l_0_5_6)))
 (let ((?x6067 (* l_0_5_5 l_0_5_5)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6286 (* ?x5876 l_0_5_47)))
 (let ((?x6065 (* l_0_5_4 l_0_5_4)))
 (let ((?x6063 (* l_0_5_21 l_0_5_21)))
 (let ((?x7123 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6063) ?x6065)))
 (= (- (- (- (+ ?x7123 ?x6286) ?x6067) ?x6069) ?x6288) 0.0)))))))))))
(assert
 (= (- (* l_0_5_46 l_0_5_46) (* l_0_5_61 l_0_5_61)) 0.0))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6333 (* ?x5879 l_0_5_67)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6331 (* ?x5876 l_0_5_52)))
 (= (- ?x6331 ?x6333) 0.0))))))
(assert
 (let ((?x5879 (* 2.0 l_0_5_61)))
 (let ((?x6370 (* ?x5879 l_0_5_71)))
 (let ((?x5876 (* 2.0 l_0_5_46)))
 (let ((?x6368 (* ?x5876 l_0_5_56)))
 (= (- ?x6368 ?x6370) 0.0))))))
(assert
 (let ((?x7144 (* l_0_5_81 l_0_5_81)))
 (let ((?x7142 (* l_0_5_80 l_0_5_80)))
 (let ((?x7140 (* l_0_5_79 l_0_5_79)))
 (let ((?x5803 (* l_0_5_63 l_0_5_63)))
 (let ((?x5801 (* l_0_5_62 l_0_5_62)))
 (let ((?x5799 (* l_0_5_48 l_0_5_48)))
 (let ((?x5797 (* l_0_5_47 l_0_5_47)))
 (let ((?x5183 (+ ?x5797 ?x5799)))
 (= (- (- (- (- (- ?x5183 ?x5801) ?x5803) ?x7140) ?x7142) ?x7144) 0.0))))))))))
(assert
 (let ((?x6699 (* l_0_5_70 l_0_5_70)))
 (let ((?x6695 (* l_0_5_69 l_0_5_69)))
 (let ((?x6693 (* l_0_5_68 l_0_5_68)))
 (let ((?x6691 (* l_0_5_67 l_0_5_67)))
 (let ((?x6689 (* l_0_5_55 l_0_5_55)))
 (let ((?x6687 (* l_0_5_54 l_0_5_54)))
 (let ((?x2999 (+ (+ (+ (* l_0_5_52 l_0_5_52) (* l_0_5_53 l_0_5_53)) ?x6687) ?x6689)))
 (= (- (- (- (- ?x2999 ?x6691) ?x6693) ?x6695) ?x6699) 0.0)))))))))
(assert
 (let ((?x6781 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6777 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6774 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6771 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6768 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6765 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6762 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6759 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7155 (- (- (- (- (+ (+ (+ ?x6759 ?x6762) ?x6765) ?x6768) ?x6771) ?x6774) ?x6777) ?x6781)))
 (= ?x7155 0.0)))))))))))
(assert
 (let ((?x6891 (* l_0_5_75 l_0_5_75)))
 (let ((?x6889 (* l_0_5_74 l_0_5_74)))
 (let ((?x6887 (* l_0_5_73 l_0_5_73)))
 (let ((?x6885 (* l_0_5_72 l_0_5_72)))
 (let ((?x6883 (* l_0_5_71 l_0_5_71)))
 (let ((?x6881 (* l_0_5_60 l_0_5_60)))
 (let ((?x6879 (* l_0_5_59 l_0_5_59)))
 (let ((?x6877 (* l_0_5_58 l_0_5_58)))
 (let ((?x3074 (+ (+ (+ (* l_0_5_56 l_0_5_56) (* l_0_5_57 l_0_5_57)) ?x6877) ?x6879)))
 (= (- (- (- (- (- (+ ?x3074 ?x6881) ?x6883) ?x6885) ?x6887) ?x6889) ?x6891) 0.0)))))))))))
(assert
 (let ((?x3146 (- (* (* (- 2.0) l_0_5_77) l_0_5_79) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (= ?x3146 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x7194 (* ?x7193 l_0_6_65)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7191 (* ?x7190 l_0_6_64)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7188 (* ?x7187 l_0_6_50)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7185 (* ?x7184 l_0_6_49)))
 (let ((?x7182 (* l_0_6_3 l_0_6_3)))
 (let ((?x7180 (* l_0_6_2 l_0_6_2)))
 (let ((?x7183 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x7180) ?x7182)))
 (= (+ (- (- (+ (+ ?x7183 ?x7185) ?x7188) ?x7191) ?x7194) 1.0) 0.0)))))))))))))
(assert
 (let ((?x7232 (* l_0_6_63 l_0_6_63)))
 (let ((?x7230 (* l_0_6_62 l_0_6_62)))
 (let ((?x7228 (* l_0_6_48 l_0_6_48)))
 (let ((?x7226 (* l_0_6_47 l_0_6_47)))
 (let ((?x7182 (* l_0_6_3 l_0_6_3)))
 (let ((?x7224 (* 3.0 ?x7182)))
 (let ((?x7180 (* l_0_6_2 l_0_6_2)))
 (let ((?x7222 (* 3.0 ?x7180)))
 (let ((?x7221 (- (* (* (- 3.0) l_0_6_17) l_0_6_17) (* (* 3.0 l_0_6_18) l_0_6_18))))
 (let ((?x7236 (- (+ (+ (- (- (+ (+ ?x7221 ?x7222) ?x7224) ?x7226) ?x7228) ?x7230) ?x7232) (* (* 2.0 l_0_6_77) l_0_6_82))))
 (let ((?x7242 (- (- ?x7236 (* (* 2.0 l_0_6_78) l_0_6_83)) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (+ (- ?x7242 (* (* 2.0 l_0_6_93) l_0_6_98)) 3.0) 0.0)))))))))))))
(assert
 (let ((?x7267 (* l_0_6_93 l_0_6_93)))
 (let ((?x3198 (* l_0_6_92 l_0_6_92)))
 (let ((?x7268 (- (- (- (* (- l_0_6_77) l_0_6_77) (* l_0_6_78 l_0_6_78)) ?x3198) ?x7267)))
 (= ?x7268 0.0)))))
(assert
 (let ((?x7290 (* l_0_6_33 l_0_6_33)))
 (let ((?x7288 (* l_0_6_32 l_0_6_32)))
 (let ((?x7182 (* l_0_6_3 l_0_6_3)))
 (let ((?x7180 (* l_0_6_2 l_0_6_2)))
 (let ((?x7178 (* l_0_6_18 l_0_6_18)))
 (let ((?x3169 (* l_0_6_17 l_0_6_17)))
 (let ((?x7283 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x7293 (- (- (- (+ (+ (- (- ?x7283 ?x3169) ?x7178) ?x7180) ?x7182) ?x7288) ?x7290) (* (* 2.0 l_0_6_77) l_0_6_86))))
 (= (+ (- ?x7293 (* (* 2.0 l_0_6_78) l_0_6_87)) 1.0) 0.0))))))))))
(assert
 (let ((?x7182 (* l_0_6_3 l_0_6_3)))
 (let ((?x7180 (* l_0_6_2 l_0_6_2)))
 (let ((?x7178 (* l_0_6_18 l_0_6_18)))
 (let ((?x3169 (* l_0_6_17 l_0_6_17)))
 (let ((?x3303 (+ ?x3169 ?x7178)))
 (let ((?x7322 (- (- (- (- ?x3303 ?x7180) ?x7182) (* (* 2.0 l_0_6_76) l_0_6_77)) (* (* 2.0 l_0_6_91) l_0_6_92))))
 (= (- ?x7322 1.0) 0.0))))))))
(assert
 (= (- (* l_0_6_1 l_0_6_1) (* l_0_6_16 l_0_6_16)) 0.0))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7344 (* ?x7343 l_0_6_64)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7341 (* ?x7340 l_0_6_49)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7338 (* ?x3362 l_0_6_17)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x3366 (* ?x3365 l_0_6_2)))
 (= (- (+ (- ?x3366 ?x7338) ?x7341) ?x7344) 0.0))))))))))
(assert
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7363 (* ?x3362 l_0_6_19)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x7362 (* ?x3365 l_0_6_4)))
 (= (- ?x7362 ?x7363) 0.0))))))
(assert
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7372 (* ?x3362 l_0_6_22)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x7371 (* ?x3365 l_0_6_7)))
 (= (- ?x7371 ?x7372) 0.0))))))
(assert
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x4355 (* ?x3362 l_0_6_26)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x3372 (* ?x3365 l_0_6_11)))
 (= (- ?x3372 ?x4355) 0.0))))))
(assert
 (let ((?x7410 (* l_0_6_66 l_0_6_66)))
 (let ((?x7408 (* l_0_6_65 l_0_6_65)))
 (let ((?x7406 (* l_0_6_64 l_0_6_64)))
 (let ((?x7404 (* l_0_6_51 l_0_6_51)))
 (let ((?x7402 (* l_0_6_50 l_0_6_50)))
 (let ((?x7400 (* l_0_6_49 l_0_6_49)))
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7398 (* ?x7397 l_0_6_5)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7395 (* ?x7394 l_0_6_4)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7392 (* ?x5469 l_0_6_20)))
 (let ((?x7401 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x7392) ?x7395) ?x7398) ?x7400)))
 (= (- (- (- (+ (+ ?x7401 ?x7402) ?x7404) ?x7406) ?x7408) ?x7410) 0.0)))))))))))))))
(assert
 (let ((?x7451 (* 2.0 l_0_6_66)))
 (let ((?x7452 (* ?x7451 l_0_6_69)))
 (let ((?x7448 (* 2.0 l_0_6_65)))
 (let ((?x7449 (* ?x7448 l_0_6_68)))
 (let ((?x7445 (* 2.0 l_0_6_64)))
 (let ((?x7446 (* ?x7445 l_0_6_67)))
 (let ((?x7442 (* 2.0 l_0_6_51)))
 (let ((?x7443 (* ?x7442 l_0_6_54)))
 (let ((?x7439 (* 2.0 l_0_6_50)))
 (let ((?x7440 (* ?x7439 l_0_6_53)))
 (let ((?x7436 (* 2.0 l_0_6_49)))
 (let ((?x7437 (* ?x7436 l_0_6_52)))
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7434 (* ?x7397 l_0_6_8)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7432 (* ?x7394 l_0_6_7)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x5505 (* ?x5469 l_0_6_23)))
 (let ((?x7438 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x5505) ?x7432) ?x7434) ?x7437)))
 (= (- (- (- (+ (+ ?x7438 ?x7440) ?x7443) ?x7446) ?x7449) ?x7452) 0.0)))))))))))))))))))))
(assert
 (let ((?x7451 (* 2.0 l_0_6_66)))
 (let ((?x7498 (* ?x7451 l_0_6_73)))
 (let ((?x7448 (* 2.0 l_0_6_65)))
 (let ((?x7496 (* ?x7448 l_0_6_72)))
 (let ((?x7445 (* 2.0 l_0_6_64)))
 (let ((?x7494 (* ?x7445 l_0_6_71)))
 (let ((?x7442 (* 2.0 l_0_6_51)))
 (let ((?x7492 (* ?x7442 l_0_6_58)))
 (let ((?x7439 (* 2.0 l_0_6_50)))
 (let ((?x7490 (* ?x7439 l_0_6_57)))
 (let ((?x7436 (* 2.0 l_0_6_49)))
 (let ((?x7488 (* ?x7436 l_0_6_56)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7486 (* ?x5469 l_0_6_27)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x7484 (* ?x7483 l_0_6_26)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7481 (* ?x7480 l_0_6_3)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7479 (* ?x7478 l_0_6_2)))
 (let ((?x7495 (- (+ (+ (+ (- (- (+ ?x7479 ?x7481) ?x7484) ?x7486) ?x7488) ?x7490) ?x7492) ?x7494)))
 (= (- (- ?x7495 ?x7496) ?x7498) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7535 (* l_0_6_6 l_0_6_6)))
 (let ((?x7533 (* l_0_6_5 l_0_6_5)))
 (let ((?x7531 (* l_0_6_4 l_0_6_4)))
 (let ((?x7529 (* l_0_6_21 l_0_6_21)))
 (let ((?x7530 (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7529)))
 (= (+ (+ (+ ?x7530 ?x7531) ?x7533) ?x7535) 0.0)))))))
(assert
 (let ((?x7564 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7561 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7558 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7555 (* ?x7554 l_0_6_24)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7552 (* ?x7551 l_0_6_23)))
 (let ((?x7562 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x7552) ?x7555) ?x7558) ?x7561)))
 (= (+ ?x7562 ?x7564) 0.0))))))))))
(assert
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7594 (* ?x7554 l_0_6_28)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7592 (* ?x7551 l_0_6_27)))
 (let ((?x7589 (* 2.0 l_0_6_19)))
 (let ((?x7590 (* ?x7589 l_0_6_26)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7587 (* ?x7580 l_0_6_6)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x3551 (* ?x7480 l_0_6_5)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7577 (* ?x7478 l_0_6_4)))
 (let ((?x7595 (- (- (- (+ (+ ?x7577 ?x3551) ?x7587) ?x7590) ?x7592) ?x7594)))
 (= ?x7595 0.0)))))))))))))))
(assert
 (let ((?x7617 (* l_0_6_9 l_0_6_9)))
 (let ((?x7615 (* l_0_6_8 l_0_6_8)))
 (let ((?x7613 (* l_0_6_7 l_0_6_7)))
 (let ((?x7611 (* l_0_6_25 l_0_6_25)))
 (let ((?x7609 (* l_0_6_24 l_0_6_24)))
 (let ((?x7607 (* l_0_6_23 l_0_6_23)))
 (let ((?x7610 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x7607) ?x7609)))
 (= (+ (+ (+ (- ?x7610 ?x7611) ?x7613) ?x7615) ?x7617) 0.0)))))))))
(assert
 (let ((?x7648 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7645 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7642 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7639 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7636 (* ?x7580 l_0_6_9)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7634 (* ?x7480 l_0_6_8)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7632 (* ?x7478 l_0_6_7)))
 (let ((?x7631 (* (* 2.0 l_0_6_10) l_0_6_14)))
 (let ((?x7633 (+ ?x7631 ?x7632)))
 (= (- (- (- (- (+ (+ ?x7633 ?x7634) ?x7636) ?x7639) ?x7642) ?x7645) ?x7648) 0.0))))))))))))))
(assert
 (let ((?x7695 (* l_0_6_30 l_0_6_30)))
 (let ((?x7693 (* l_0_6_29 l_0_6_29)))
 (let ((?x7691 (* l_0_6_28 l_0_6_28)))
 (let ((?x7689 (* l_0_6_27 l_0_6_27)))
 (let ((?x7687 (* l_0_6_26 l_0_6_26)))
 (let ((?x7685 (* l_0_6_15 l_0_6_15)))
 (let ((?x7683 (* l_0_6_14 l_0_6_14)))
 (let ((?x7681 (* l_0_6_13 l_0_6_13)))
 (let ((?x7684 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7681) ?x7683)))
 (let ((?x7696 (- (- (- (- (- (+ ?x7684 ?x7685) ?x7687) ?x7689) ?x7691) ?x7693) ?x7695)))
 (= ?x7696 0.0))))))))))))
(assert
 (let ((?x7717 (* l_0_6_61 l_0_6_61)))
 (let ((?x7715 (* l_0_6_46 l_0_6_46)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7372 (* ?x3362 l_0_6_22)))
 (let ((?x1292 (* l_0_6_1 l_0_6_1)))
 (let ((?x7709 (* 3.0 ?x1292)))
 (let ((?x7714 (- (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x7709) ?x7372) (* (* 3.0 l_0_6_16) l_0_6_16))))
 (= (+ (- ?x7714 ?x7715) ?x7717) 0.0)))))))))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7738 (* ?x7343 l_0_6_62)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7736 (* ?x7340 l_0_6_47)))
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7434 (* ?x7397 l_0_6_8)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7432 (* ?x7394 l_0_6_7)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x5505 (* ?x5469 l_0_6_23)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x7731 (* ?x7483 l_0_6_22)))
 (let ((?x7730 (- (* (* 6.0 l_0_6_1) l_0_6_2) (* (* 6.0 l_0_6_16) l_0_6_17))))
 (let ((?x7741 (- (+ (- (- (- (+ (+ ?x7730 ?x7731) ?x5505) ?x7432) ?x7434) ?x7736) ?x7738) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (- ?x7741 (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0))))))))))))))))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7344 (* ?x7343 l_0_6_64)))
 (let ((?x7564 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7561 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7341 (* ?x7340 l_0_6_49)))
 (let ((?x7558 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7555 (* ?x7554 l_0_6_24)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7552 (* ?x7551 l_0_6_23)))
 (let ((?x7589 (* 2.0 l_0_6_19)))
 (let ((?x3616 (* ?x7589 l_0_6_22)))
 (let ((?x3619 (- (* (* 6.0 l_0_6_1) l_0_6_4) (* (* 6.0 l_0_6_16) l_0_6_19))))
 (let ((?x7766 (- (- (- (- (+ (+ (+ ?x3619 ?x3616) ?x7552) ?x7555) ?x7558) ?x7341) ?x7561) ?x7564)))
 (= (+ ?x7766 ?x7344) 0.0)))))))))))))))))
(assert
 (let ((?x7617 (* l_0_6_9 l_0_6_9)))
 (let ((?x7615 (* l_0_6_8 l_0_6_8)))
 (let ((?x7613 (* l_0_6_7 l_0_6_7)))
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7791 (* ?x7343 l_0_6_67)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7789 (* ?x7340 l_0_6_52)))
 (let ((?x7611 (* l_0_6_25 l_0_6_25)))
 (let ((?x7609 (* l_0_6_24 l_0_6_24)))
 (let ((?x7607 (* l_0_6_23 l_0_6_23)))
 (let ((?x3558 (* l_0_6_22 l_0_6_22)))
 (let ((?x7784 (- (- (* (* 6.0 l_0_6_1) l_0_6_7) (* l_0_6_10 l_0_6_10)) (* (* 6.0 l_0_6_16) l_0_6_22))))
 (let ((?x7793 (- (+ (- (+ (+ (+ (+ ?x7784 ?x3558) ?x7607) ?x7609) ?x7611) ?x7789) ?x7791) ?x7613)))
 (= (- (- ?x7793 ?x7615) ?x7617) 0.0)))))))))))))))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7839 (* ?x7343 l_0_6_71)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7837 (* ?x7340 l_0_6_56)))
 (let ((?x7648 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7645 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7642 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7639 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7372 (* ?x3362 l_0_6_22)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7636 (* ?x7580 l_0_6_9)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7634 (* ?x7480 l_0_6_8)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7632 (* ?x7478 l_0_6_7)))
 (let ((?x7631 (* (* 2.0 l_0_6_10) l_0_6_14)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x7371 (* ?x3365 l_0_6_7)))
 (let ((?x7825 (- (- (- (+ (* (* 6.0 l_0_6_1) l_0_6_11) ?x7371) ?x7631) ?x7632) ?x7634)))
 (let ((?x7830 (+ (- (- (- ?x7825 ?x7636) ?x7372) (* (* 6.0 l_0_6_16) l_0_6_26)) ?x7639)))
 (let ((?x7836 (- (+ (+ (+ ?x7830 ?x7642) ?x7645) ?x7648) (* (* 2.0 l_0_6_31) l_0_6_37))))
 (= (+ (- ?x7836 ?x7837) ?x7839) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x7194 (* ?x7193 l_0_6_65)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7191 (* ?x7190 l_0_6_64)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7188 (* ?x7187 l_0_6_50)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7185 (* ?x7184 l_0_6_49)))
 (let ((?x7865 (- (* (* (- 6.0) l_0_6_17) l_0_6_19) (* (* 6.0 l_0_6_18) l_0_6_20))))
 (let ((?x7871 (+ (+ ?x7865 (* (* 6.0 l_0_6_2) l_0_6_4)) (* (* 6.0 l_0_6_3) l_0_6_5))))
 (let ((?x7878 (- (+ (+ (- (- ?x7871 ?x7185) ?x7188) ?x7191) ?x7194) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x7884 (- (- ?x7878 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x7890 (- (- ?x7884 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x7890 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))))))
(assert
 (let ((?x7943 (* l_0_6_99 l_0_6_99)))
 (let ((?x7941 (* l_0_6_98 l_0_6_98)))
 (let ((?x7939 (* l_0_6_97 l_0_6_97)))
 (let ((?x7937 (* l_0_6_85 l_0_6_85)))
 (let ((?x7935 (* l_0_6_84 l_0_6_84)))
 (let ((?x7933 (* l_0_6_83 l_0_6_83)))
 (let ((?x7931 (* l_0_6_82 l_0_6_82)))
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x7929 (* ?x7193 l_0_6_68)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7927 (* ?x7190 l_0_6_67)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7925 (* ?x7187 l_0_6_53)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7923 (* ?x7184 l_0_6_52)))
 (let ((?x7916 (- (* (- l_0_6_100) l_0_6_100) (* (* 6.0 l_0_6_17) l_0_6_22))))
 (let ((?x7920 (+ (- ?x7916 (* (* 6.0 l_0_6_18) l_0_6_23)) (* (* 6.0 l_0_6_2) l_0_6_7))))
 (let ((?x7928 (+ (- (- (+ ?x7920 (* (* 6.0 l_0_6_3) l_0_6_8)) ?x7923) ?x7925) ?x7927)))
 (let ((?x7942 (- (- (- (- (- (- (+ ?x7928 ?x7929) ?x7931) ?x7933) ?x7935) ?x7937) ?x7939) ?x7941)))
 (= (- ?x7942 ?x7943) 0.0)))))))))))))))))))))
(assert
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x8000 (* ?x7193 l_0_6_72)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7998 (* ?x7190 l_0_6_71)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7996 (* ?x7187 l_0_6_57)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7994 (* ?x7184 l_0_6_56)))
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7434 (* ?x7397 l_0_6_8)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7432 (* ?x7394 l_0_6_7)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x5505 (* ?x5469 l_0_6_23)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x7731 (* ?x7483 l_0_6_22)))
 (let ((?x7968 (- (* (* (- 2.0) l_0_6_100) l_0_6_104) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x7973 (- (- ?x7968 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x7979 (+ (+ ?x7973 (* (* 6.0 l_0_6_11) l_0_6_2)) (* (* 6.0 l_0_6_12) l_0_6_3))))
 (let ((?x7985 (- (- (- (- ?x7979 ?x7731) (* (* 6.0 l_0_6_17) l_0_6_26)) ?x5505) (* (* 6.0 l_0_6_18) l_0_6_27))))
 (let ((?x7993 (- (- (+ (+ ?x7985 ?x7432) ?x7434) (* (* 2.0 l_0_6_32) l_0_6_37)) (* (* 2.0 l_0_6_33) l_0_6_38))))
 (let ((?x8004 (- (+ (+ (- (- ?x7993 ?x7994) ?x7996) ?x7998) ?x8000) (* (* 2.0 l_0_6_82) l_0_6_86))))
 (let ((?x8010 (- (- ?x8004 (* (* 2.0 l_0_6_83) l_0_6_87)) (* (* 2.0 l_0_6_84) l_0_6_88))))
 (= (- ?x8010 (* (* 2.0 l_0_6_85) l_0_6_89)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7410 (* l_0_6_66 l_0_6_66)))
 (let ((?x7408 (* l_0_6_65 l_0_6_65)))
 (let ((?x7406 (* l_0_6_64 l_0_6_64)))
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x7929 (* ?x7193 l_0_6_68)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7927 (* ?x7190 l_0_6_67)))
 (let ((?x7535 (* l_0_6_6 l_0_6_6)))
 (let ((?x8097 (* 3.0 ?x7535)))
 (let ((?x7404 (* l_0_6_51 l_0_6_51)))
 (let ((?x7402 (* l_0_6_50 l_0_6_50)))
 (let ((?x7533 (* l_0_6_5 l_0_6_5)))
 (let ((?x8093 (* 3.0 ?x7533)))
 (let ((?x7400 (* l_0_6_49 l_0_6_49)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7925 (* ?x7187 l_0_6_53)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7923 (* ?x7184 l_0_6_52)))
 (let ((?x7531 (* l_0_6_4 l_0_6_4)))
 (let ((?x8088 (* 3.0 ?x7531)))
 (let ((?x8084 (- (* (* (- 3.0) l_0_6_19) l_0_6_19) (* (* 3.0 l_0_6_20) l_0_6_20))))
 (let ((?x8091 (+ (+ (+ (- ?x8084 (* (* 3.0 l_0_6_21) l_0_6_21)) ?x8088) ?x7923) ?x7925)))
 (let ((?x8100 (- (- (+ (- (- (+ (- ?x8091 ?x7400) ?x8093) ?x7402) ?x7404) ?x8097) ?x7927) ?x7929)))
 (= (+ (+ (+ ?x8100 ?x7406) ?x7408) ?x7410) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7451 (* 2.0 l_0_6_66)))
 (let ((?x7452 (* ?x7451 l_0_6_69)))
 (let ((?x7448 (* 2.0 l_0_6_65)))
 (let ((?x7449 (* ?x7448 l_0_6_68)))
 (let ((?x7445 (* 2.0 l_0_6_64)))
 (let ((?x7446 (* ?x7445 l_0_6_67)))
 (let ((?x7442 (* 2.0 l_0_6_51)))
 (let ((?x7443 (* ?x7442 l_0_6_54)))
 (let ((?x7439 (* 2.0 l_0_6_50)))
 (let ((?x7440 (* ?x7439 l_0_6_53)))
 (let ((?x7436 (* 2.0 l_0_6_49)))
 (let ((?x7437 (* ?x7436 l_0_6_52)))
 (let ((?x992 (- (* (* (- 6.0) l_0_6_19) l_0_6_22) (* (* 6.0 l_0_6_20) l_0_6_23))))
 (let ((?x6271 (+ (- ?x992 (* (* 6.0 l_0_6_21) l_0_6_24)) (* (* 6.0 l_0_6_4) l_0_6_7))))
 (let ((?x8120 (- (- (+ (- ?x6271 ?x7437) (* (* 6.0 l_0_6_5) l_0_6_8)) ?x7440) ?x7443)))
 (let ((?x8126 (+ (+ (+ (+ ?x8120 (* (* 6.0 l_0_6_6) l_0_6_9)) ?x7446) ?x7449) ?x7452)))
 (= ?x8126 0.0))))))))))))))))))
(assert
 (let ((?x7451 (* 2.0 l_0_6_66)))
 (let ((?x7498 (* ?x7451 l_0_6_73)))
 (let ((?x7448 (* 2.0 l_0_6_65)))
 (let ((?x7496 (* ?x7448 l_0_6_72)))
 (let ((?x7445 (* 2.0 l_0_6_64)))
 (let ((?x7494 (* ?x7445 l_0_6_71)))
 (let ((?x7564 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7442 (* 2.0 l_0_6_51)))
 (let ((?x7492 (* ?x7442 l_0_6_58)))
 (let ((?x7439 (* 2.0 l_0_6_50)))
 (let ((?x7490 (* ?x7439 l_0_6_57)))
 (let ((?x7561 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7436 (* 2.0 l_0_6_49)))
 (let ((?x7488 (* ?x7436 l_0_6_56)))
 (let ((?x7558 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7555 (* ?x7554 l_0_6_24)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7552 (* ?x7551 l_0_6_23)))
 (let ((?x7589 (* 2.0 l_0_6_19)))
 (let ((?x3616 (* ?x7589 l_0_6_22)))
 (let ((?x8147 (+ (* (* 6.0 l_0_6_11) l_0_6_4) (* (* 6.0 l_0_6_12) l_0_6_5))))
 (let ((?x8154 (- (- (+ ?x8147 (* (* 6.0 l_0_6_13) l_0_6_6)) ?x3616) (* (* 6.0 l_0_6_19) l_0_6_26))))
 (let ((?x8160 (- (- (- (- ?x8154 ?x7552) (* (* 6.0 l_0_6_20) l_0_6_27)) ?x7555) (* (* 6.0 l_0_6_21) l_0_6_28))))
 (let ((?x8166 (- (- ?x8160 (* (* 2.0 l_0_6_34) l_0_6_37)) (* (* 2.0 l_0_6_35) l_0_6_38))))
 (let ((?x8172 (+ (- (+ (- ?x8166 (* (* 2.0 l_0_6_36) l_0_6_39)) ?x7558) ?x7488) ?x7561)))
 (= (+ (+ (+ (+ (- (- ?x8172 ?x7490) ?x7492) ?x7564) ?x7494) ?x7496) ?x7498) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7617 (* l_0_6_9 l_0_6_9)))
 (let ((?x8229 (* 3.0 ?x7617)))
 (let ((?x7615 (* l_0_6_8 l_0_6_8)))
 (let ((?x8227 (* 3.0 ?x7615)))
 (let ((?x8225 (* l_0_6_70 l_0_6_70)))
 (let ((?x7613 (* l_0_6_7 l_0_6_7)))
 (let ((?x8223 (* 3.0 ?x7613)))
 (let ((?x8221 (* l_0_6_69 l_0_6_69)))
 (let ((?x8219 (* l_0_6_68 l_0_6_68)))
 (let ((?x8217 (* l_0_6_67 l_0_6_67)))
 (let ((?x8215 (* l_0_6_55 l_0_6_55)))
 (let ((?x8213 (* l_0_6_54 l_0_6_54)))
 (let ((?x8211 (* l_0_6_53 l_0_6_53)))
 (let ((?x8209 (* l_0_6_52 l_0_6_52)))
 (let ((?x3555 (* l_0_6_10 l_0_6_10)))
 (let ((?x6408 (* 3.0 ?x3555)))
 (let ((?x8202 (- (- ?x6408 (* (* 3.0 l_0_6_22) l_0_6_22)) (* (* 3.0 l_0_6_23) l_0_6_23))))
 (let ((?x8208 (- (- ?x8202 (* (* 3.0 l_0_6_24) l_0_6_24)) (* (* 3.0 l_0_6_25) l_0_6_25))))
 (let ((?x8222 (+ (+ (+ (- (- (- (- ?x8208 ?x8209) ?x8211) ?x8213) ?x8215) ?x8217) ?x8219) ?x8221)))
 (= (+ (+ (+ (+ ?x8222 ?x8223) ?x8225) ?x8227) ?x8229) 0.0)))))))))))))))))))))
(assert
 (let ((?x7617 (* l_0_6_9 l_0_6_9)))
 (let ((?x7615 (* l_0_6_8 l_0_6_8)))
 (let ((?x8312 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x7613 (* l_0_6_7 l_0_6_7)))
 (let ((?x8308 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x8305 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x8302 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x8299 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8296 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8293 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8290 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8287 (* l_0_6_40 l_0_6_40)))
 (let ((?x8285 (* l_0_6_39 l_0_6_39)))
 (let ((?x8283 (* l_0_6_38 l_0_6_38)))
 (let ((?x8281 (* l_0_6_37 l_0_6_37)))
 (let ((?x7611 (* l_0_6_25 l_0_6_25)))
 (let ((?x7609 (* l_0_6_24 l_0_6_24)))
 (let ((?x7607 (* l_0_6_23 l_0_6_23)))
 (let ((?x3558 (* l_0_6_22 l_0_6_22)))
 (let ((?x8260 (+ (+ (* (* 6.0 l_0_6_10) l_0_6_14) (* l_0_6_10 l_0_6_10)) (* (* 6.0 l_0_6_11) l_0_6_7))))
 (let ((?x8264 (+ (+ ?x8260 (* (* 6.0 l_0_6_12) l_0_6_8)) (* (* 6.0 l_0_6_13) l_0_6_9))))
 (let ((?x8271 (- (- (- ?x8264 (* (* 6.0 l_0_6_22) l_0_6_26)) ?x3558) (* (* 6.0 l_0_6_23) l_0_6_27))))
 (let ((?x8279 (- (- (- (- ?x8271 ?x7607) (* (* 6.0 l_0_6_24) l_0_6_28)) ?x7609) (* (* 6.0 l_0_6_25) l_0_6_29))))
 (let ((?x8294 (- (- (- (- (- (- (- ?x8279 ?x7611) ?x8281) ?x8283) ?x8285) ?x8287) ?x8290) ?x8293)))
 (let ((?x8313 (+ (+ (+ (+ (+ (- (- ?x8294 ?x8296) ?x8299) ?x8302) ?x8305) ?x8308) ?x7613) ?x8312)))
 (= (+ (+ ?x8313 ?x7615) ?x7617) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8401 (* l_0_6_75 l_0_6_75)))
 (let ((?x8399 (* l_0_6_74 l_0_6_74)))
 (let ((?x8397 (* l_0_6_73 l_0_6_73)))
 (let ((?x8395 (* l_0_6_72 l_0_6_72)))
 (let ((?x8393 (* l_0_6_71 l_0_6_71)))
 (let ((?x8391 (* l_0_6_60 l_0_6_60)))
 (let ((?x8389 (* l_0_6_59 l_0_6_59)))
 (let ((?x8387 (* l_0_6_58 l_0_6_58)))
 (let ((?x8385 (* l_0_6_57 l_0_6_57)))
 (let ((?x8383 (* l_0_6_56 l_0_6_56)))
 (let ((?x7648 (* (* 2.0 l_0_6_25) l_0_6_29)))
 (let ((?x7645 (* (* 2.0 l_0_6_24) l_0_6_28)))
 (let ((?x7642 (* (* 2.0 l_0_6_23) l_0_6_27)))
 (let ((?x7639 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x7685 (* l_0_6_15 l_0_6_15)))
 (let ((?x8350 (* 3.0 ?x7685)))
 (let ((?x7683 (* l_0_6_14 l_0_6_14)))
 (let ((?x8348 (* 3.0 ?x7683)))
 (let ((?x7681 (* l_0_6_13 l_0_6_13)))
 (let ((?x8346 (* 3.0 ?x7681)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7636 (* ?x7580 l_0_6_9)))
 (let ((?x7679 (* l_0_6_12 l_0_6_12)))
 (let ((?x8343 (* 3.0 ?x7679)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7634 (* ?x7480 l_0_6_8)))
 (let ((?x7678 (* l_0_6_11 l_0_6_11)))
 (let ((?x8340 (* 3.0 ?x7678)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7632 (* ?x7478 l_0_6_7)))
 (let ((?x7631 (* (* 2.0 l_0_6_10) l_0_6_14)))
 (let ((?x7633 (+ ?x7631 ?x7632)))
 (let ((?x8351 (+ (+ (+ (+ (+ (+ (+ ?x7633 ?x8340) ?x7634) ?x8343) ?x7636) ?x8346) ?x8348) ?x8350)))
 (let ((?x8358 (- (- (- (- (- ?x8351 ?x7639) ?x7642) ?x7645) ?x7648) (* (* 3.0 l_0_6_26) l_0_6_26))))
 (let ((?x8364 (- (- ?x8358 (* (* 3.0 l_0_6_27) l_0_6_27)) (* (* 3.0 l_0_6_28) l_0_6_28))))
 (let ((?x8370 (- (- ?x8364 (* (* 3.0 l_0_6_29) l_0_6_29)) (* (* 3.0 l_0_6_30) l_0_6_30))))
 (let ((?x8376 (- (- ?x8370 (* (* 2.0 l_0_6_37) l_0_6_41)) (* (* 2.0 l_0_6_38) l_0_6_42))))
 (let ((?x8382 (- (- ?x8376 (* (* 2.0 l_0_6_39) l_0_6_43)) (* (* 2.0 l_0_6_40) l_0_6_44))))
 (let ((?x8396 (+ (+ (- (- (- (- (- ?x8382 ?x8383) ?x8385) ?x8387) ?x8389) ?x8391) ?x8393) ?x8395)))
 (= (+ (+ (+ ?x8396 ?x8397) ?x8399) ?x8401) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8431 (* l_0_6_31 l_0_6_31)))
 (let ((?x3361 (* l_0_6_16 l_0_6_16)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x4355 (* ?x3362 l_0_6_26)))
 (let ((?x8429 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_1 l_0_6_1)) ?x4355)))
 (= (- (- ?x8429 ?x3361) ?x8431) 0.0)))))))
(assert
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7486 (* ?x5469 l_0_6_27)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x7484 (* ?x7483 l_0_6_26)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7338 (* ?x3362 l_0_6_17)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7481 (* ?x7480 l_0_6_3)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7479 (* ?x7478 l_0_6_2)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x3366 (* ?x3365 l_0_6_2)))
 (let ((?x8444 (- (- (- (- ?x3366 (* (* 2.0 l_0_6_101) l_0_6_91)) ?x7479) ?x7481) ?x7338)))
 (let ((?x8450 (- (- (+ (+ ?x8444 ?x7484) ?x7486) (* (* 2.0 l_0_6_31) l_0_6_32)) (* (* 2.0 l_0_6_76) l_0_6_86))))
 (= ?x8450 0.0))))))))))))))))
(assert
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7594 (* ?x7554 l_0_6_28)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7592 (* ?x7551 l_0_6_27)))
 (let ((?x7589 (* 2.0 l_0_6_19)))
 (let ((?x7590 (* ?x7589 l_0_6_26)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7363 (* ?x3362 l_0_6_19)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7587 (* ?x7580 l_0_6_6)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x3551 (* ?x7480 l_0_6_5)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7577 (* ?x7478 l_0_6_4)))
 (let ((?x3365 (* 2.0 l_0_6_1)))
 (let ((?x7362 (* ?x3365 l_0_6_4)))
 (let ((?x1739 (+ (+ (+ (- (- (- (- ?x7362 ?x7577) ?x3551) ?x7587) ?x7363) ?x7590) ?x7592) ?x7594)))
 (= (- ?x1739 (* (* 2.0 l_0_6_31) l_0_6_34)) 0.0)))))))))))))))))))
(assert
 (let ((?x7695 (* l_0_6_30 l_0_6_30)))
 (let ((?x7693 (* l_0_6_29 l_0_6_29)))
 (let ((?x7691 (* l_0_6_28 l_0_6_28)))
 (let ((?x7689 (* l_0_6_27 l_0_6_27)))
 (let ((?x7687 (* l_0_6_26 l_0_6_26)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x4355 (* ?x3362 l_0_6_26)))
 (let ((?x7685 (* l_0_6_15 l_0_6_15)))
 (let ((?x7683 (* l_0_6_14 l_0_6_14)))
 (let ((?x7681 (* l_0_6_13 l_0_6_13)))
 (let ((?x7679 (* l_0_6_12 l_0_6_12)))
 (let ((?x6664 (- (- (* (* 2.0 l_0_6_1) l_0_6_11) (* l_0_6_11 l_0_6_11)) ?x7679)))
 (let ((?x8463 (+ (+ (+ (- (- (- (- ?x6664 ?x7681) ?x7683) ?x7685) ?x4355) ?x7687) ?x7689) ?x7691)))
 (= (- (+ (+ ?x8463 ?x7693) ?x7695) (* (* 2.0 l_0_6_31) l_0_6_41)) 0.0)))))))))))))))
(assert
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7398 (* ?x7397 l_0_6_5)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7395 (* ?x7394 l_0_6_4)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7392 (* ?x5469 l_0_6_20)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x8495 (* ?x7483 l_0_6_19)))
 (let ((?x8492 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x8498 (+ (- (- (- ?x8492 (* (* 2.0 l_0_6_103) l_0_6_96)) ?x8495) ?x7392) ?x7395)))
 (let ((?x8503 (- (- (+ ?x8498 ?x7398) (* (* 2.0 l_0_6_32) l_0_6_34)) (* (* 2.0 l_0_6_33) l_0_6_35))))
 (let ((?x8507 (- (- ?x8503 (* (* 2.0 l_0_6_79) l_0_6_86)) (* (* 2.0 l_0_6_80) l_0_6_87))))
 (= (- ?x8507 (* (* 2.0 l_0_6_81) l_0_6_88)) 0.0))))))))))))))
(assert
 (let ((?x8541 (* l_0_6_90 l_0_6_90)))
 (let ((?x8539 (* l_0_6_89 l_0_6_89)))
 (let ((?x8537 (* l_0_6_88 l_0_6_88)))
 (let ((?x8535 (* l_0_6_87 l_0_6_87)))
 (let ((?x8533 (* l_0_6_86 l_0_6_86)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7486 (* ?x5469 l_0_6_27)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x7484 (* ?x7483 l_0_6_26)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x7481 (* ?x7480 l_0_6_3)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7479 (* ?x7478 l_0_6_2)))
 (let ((?x1926 (* l_0_6_105 l_0_6_105)))
 (let ((?x1937 (* l_0_6_104 l_0_6_104)))
 (let ((?x1800 (* l_0_6_103 l_0_6_103)))
 (let ((?x1762 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x1800)))
 (let ((?x8530 (- (- (- (+ (+ (- (- ?x1762 ?x1937) ?x1926) ?x7479) ?x7481) ?x7484) ?x7486) (* (* 2.0 l_0_6_32) l_0_6_41))))
 (let ((?x8538 (- (- (- (- ?x8530 (* (* 2.0 l_0_6_33) l_0_6_42)) ?x8533) ?x8535) ?x8537)))
 (= (- (- ?x8538 ?x8539) ?x8541) 0.0)))))))))))))))))))))
(assert
 (let ((?x7193 (* 2.0 l_0_6_63)))
 (let ((?x8000 (* ?x7193 l_0_6_72)))
 (let ((?x7190 (* 2.0 l_0_6_62)))
 (let ((?x7998 (* ?x7190 l_0_6_71)))
 (let ((?x7535 (* l_0_6_6 l_0_6_6)))
 (let ((?x7533 (* l_0_6_5 l_0_6_5)))
 (let ((?x7187 (* 2.0 l_0_6_48)))
 (let ((?x7996 (* ?x7187 l_0_6_57)))
 (let ((?x7184 (* 2.0 l_0_6_47)))
 (let ((?x7994 (* ?x7184 l_0_6_56)))
 (let ((?x7531 (* l_0_6_4 l_0_6_4)))
 (let ((?x8576 (* l_0_6_36 l_0_6_36)))
 (let ((?x8574 (* l_0_6_35 l_0_6_35)))
 (let ((?x8572 (* l_0_6_34 l_0_6_34)))
 (let ((?x7529 (* l_0_6_21 l_0_6_21)))
 (let ((?x7530 (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7529)))
 (let ((?x8581 (+ (+ (+ (+ (- (- (- ?x7530 ?x8572) ?x8574) ?x8576) ?x7531) ?x7994) ?x7996) ?x7533)))
 (= (- (- (+ ?x8581 ?x7535) ?x7998) ?x8000) 0.0)))))))))))))))))))
(assert
 (let ((?x7554 (* 2.0 l_0_6_21)))
 (let ((?x7594 (* ?x7554 l_0_6_28)))
 (let ((?x7551 (* 2.0 l_0_6_20)))
 (let ((?x7592 (* ?x7551 l_0_6_27)))
 (let ((?x7589 (* 2.0 l_0_6_19)))
 (let ((?x7590 (* ?x7589 l_0_6_26)))
 (let ((?x7580 (* 2.0 l_0_6_13)))
 (let ((?x7587 (* ?x7580 l_0_6_6)))
 (let ((?x7480 (* 2.0 l_0_6_12)))
 (let ((?x3551 (* ?x7480 l_0_6_5)))
 (let ((?x7478 (* 2.0 l_0_6_11)))
 (let ((?x7577 (* ?x7478 l_0_6_4)))
 (let ((?x7595 (- (- (- (+ (+ ?x7577 ?x3551) ?x7587) ?x7590) ?x7592) ?x7594)))
 (let ((?x8598 (- (- ?x7595 (* (* 2.0 l_0_6_34) l_0_6_41)) (* (* 2.0 l_0_6_35) l_0_6_42))))
 (= (- ?x8598 (* (* 2.0 l_0_6_36) l_0_6_43)) 0.0))))))))))))))))
(assert
 (let ((?x6789 (* l_0_6_45 l_0_6_45)))
 (let ((?x6787 (* l_0_6_44 l_0_6_44)))
 (let ((?x6809 (* l_0_6_43 l_0_6_43)))
 (let ((?x6818 (* l_0_6_42 l_0_6_42)))
 (let ((?x6816 (* l_0_6_41 l_0_6_41)))
 (let ((?x7695 (* l_0_6_30 l_0_6_30)))
 (let ((?x7693 (* l_0_6_29 l_0_6_29)))
 (let ((?x7691 (* l_0_6_28 l_0_6_28)))
 (let ((?x7689 (* l_0_6_27 l_0_6_27)))
 (let ((?x7687 (* l_0_6_26 l_0_6_26)))
 (let ((?x7685 (* l_0_6_15 l_0_6_15)))
 (let ((?x7683 (* l_0_6_14 l_0_6_14)))
 (let ((?x7681 (* l_0_6_13 l_0_6_13)))
 (let ((?x7684 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7681) ?x7683)))
 (let ((?x7696 (- (- (- (- (- (+ ?x7684 ?x7685) ?x7687) ?x7689) ?x7691) ?x7693) ?x7695)))
 (= (- (- (- (- (- ?x7696 ?x6816) ?x6818) ?x6809) ?x6787) ?x6789) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_16 l_0_6_16)) 0.0))
(assert
 (let ((?x8629 (* l_0_6_91 l_0_6_91)))
 (let ((?x8627 (* l_0_6_76 l_0_6_76)))
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7338 (* ?x3362 l_0_6_17)))
 (= (- (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x7338) ?x8627) ?x8629) 0.0))))))
(assert
 (let ((?x3362 (* 2.0 l_0_6_16)))
 (let ((?x7363 (* ?x3362 l_0_6_19)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x7363) 0.0))))
(assert
 (let ((?x7397 (* 2.0 l_0_6_3)))
 (let ((?x7398 (* ?x7397 l_0_6_5)))
 (let ((?x7394 (* 2.0 l_0_6_2)))
 (let ((?x7395 (* ?x7394 l_0_6_4)))
 (let ((?x5469 (* 2.0 l_0_6_18)))
 (let ((?x7392 (* ?x5469 l_0_6_20)))
 (let ((?x7483 (* 2.0 l_0_6_17)))
 (let ((?x8495 (* ?x7483 l_0_6_19)))
 (let ((?x8649 (- (- (- (+ ?x8495 ?x7392) ?x7395) ?x7398) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (- ?x8649 (* (* 2.0 l_0_6_91) l_0_6_94)) 0.0)))))))))))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7738 (* ?x7343 l_0_6_62)))
 (let ((?x7535 (* l_0_6_6 l_0_6_6)))
 (let ((?x7533 (* l_0_6_5 l_0_6_5)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7736 (* ?x7340 l_0_6_47)))
 (let ((?x7531 (* l_0_6_4 l_0_6_4)))
 (let ((?x7529 (* l_0_6_21 l_0_6_21)))
 (let ((?x8664 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7529) ?x7531)))
 (= (- (- (- (+ ?x8664 ?x7736) ?x7533) ?x7535) ?x7738) 0.0)))))))))))
(assert
 (= (- (* l_0_6_46 l_0_6_46) (* l_0_6_61 l_0_6_61)) 0.0))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7791 (* ?x7343 l_0_6_67)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7789 (* ?x7340 l_0_6_52)))
 (= (- ?x7789 ?x7791) 0.0))))))
(assert
 (let ((?x7343 (* 2.0 l_0_6_61)))
 (let ((?x7839 (* ?x7343 l_0_6_71)))
 (let ((?x7340 (* 2.0 l_0_6_46)))
 (let ((?x7837 (* ?x7340 l_0_6_56)))
 (= (- ?x7837 ?x7839) 0.0))))))
(assert
 (let ((?x8689 (* l_0_6_96 l_0_6_96)))
 (let ((?x8687 (* l_0_6_95 l_0_6_95)))
 (let ((?x8685 (* l_0_6_94 l_0_6_94)))
 (let ((?x8683 (* l_0_6_81 l_0_6_81)))
 (let ((?x8681 (* l_0_6_80 l_0_6_80)))
 (let ((?x8679 (* l_0_6_79 l_0_6_79)))
 (let ((?x7232 (* l_0_6_63 l_0_6_63)))
 (let ((?x7230 (* l_0_6_62 l_0_6_62)))
 (let ((?x7228 (* l_0_6_48 l_0_6_48)))
 (let ((?x7226 (* l_0_6_47 l_0_6_47)))
 (let ((?x2391 (+ ?x7226 ?x7228)))
 (let ((?x8688 (- (- (- (- (- (- (- ?x2391 ?x7230) ?x7232) ?x8679) ?x8681) ?x8683) ?x8685) ?x8687)))
 (= (- ?x8688 ?x8689) 0.0))))))))))))))
(assert
 (let ((?x8225 (* l_0_6_70 l_0_6_70)))
 (let ((?x8221 (* l_0_6_69 l_0_6_69)))
 (let ((?x8219 (* l_0_6_68 l_0_6_68)))
 (let ((?x8217 (* l_0_6_67 l_0_6_67)))
 (let ((?x8215 (* l_0_6_55 l_0_6_55)))
 (let ((?x8213 (* l_0_6_54 l_0_6_54)))
 (let ((?x4422 (+ (+ (+ (* l_0_6_52 l_0_6_52) (* l_0_6_53 l_0_6_53)) ?x8213) ?x8215)))
 (= (- (- (- (- ?x4422 ?x8217) ?x8219) ?x8221) ?x8225) 0.0)))))))))
(assert
 (let ((?x8312 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x8308 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x8305 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x8302 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x8299 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x8296 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x8293 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x8290 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x8696 (- (- (- (- (+ (+ (+ ?x8290 ?x8293) ?x8296) ?x8299) ?x8302) ?x8305) ?x8308) ?x8312)))
 (= ?x8696 0.0)))))))))))
(assert
 (let ((?x8401 (* l_0_6_75 l_0_6_75)))
 (let ((?x8399 (* l_0_6_74 l_0_6_74)))
 (let ((?x8397 (* l_0_6_73 l_0_6_73)))
 (let ((?x8395 (* l_0_6_72 l_0_6_72)))
 (let ((?x8393 (* l_0_6_71 l_0_6_71)))
 (let ((?x8391 (* l_0_6_60 l_0_6_60)))
 (let ((?x8389 (* l_0_6_59 l_0_6_59)))
 (let ((?x8387 (* l_0_6_58 l_0_6_58)))
 (let ((?x6963 (+ (+ (+ (* l_0_6_56 l_0_6_56) (* l_0_6_57 l_0_6_57)) ?x8387) ?x8389)))
 (= (- (- (- (- (- (+ ?x6963 ?x8391) ?x8393) ?x8395) ?x8397) ?x8399) ?x8401) 0.0)))))))))))
(assert
 (let ((?x6965 (- (* (* (- 2.0) l_0_6_77) l_0_6_79) (* (* 2.0 l_0_6_78) l_0_6_80))))
 (let ((?x8703 (- (- ?x6965 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x8703 0.0))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(check-sat)
(get-model)