(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_30 () Real)
(declare-fun l_0_1_29 () Real)
(declare-fun l_0_1_28 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_25 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_26 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_27 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun _a_4_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_15_92 () Real)
(declare-fun l_0_15_91 () Real)
(declare-fun l_0_15_77 () Real)
(declare-fun l_0_15_76 () Real)
(declare-fun l_0_15_62 () Real)
(declare-fun l_0_15_61 () Real)
(declare-fun l_0_15_31 () Real)
(declare-fun l_0_15_16 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_86 () Real)
(declare-fun l_0_15_71 () Real)
(declare-fun l_0_15_46 () Real)
(declare-fun l_0_15_101 () Real)
(declare-fun l_0_15_11 () Real)
(declare-fun l_0_15_96 () Real)
(declare-fun l_0_15_95 () Real)
(declare-fun l_0_15_94 () Real)
(declare-fun l_0_15_81 () Real)
(declare-fun l_0_15_80 () Real)
(declare-fun l_0_15_79 () Real)
(declare-fun l_0_15_66 () Real)
(declare-fun l_0_15_65 () Real)
(declare-fun l_0_15_64 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_34 () Real)
(declare-fun l_0_15_19 () Real)
(declare-fun l_0_15_99 () Real)
(declare-fun l_0_15_98 () Real)
(declare-fun l_0_15_97 () Real)
(declare-fun l_0_15_9 () Real)
(declare-fun l_0_15_85 () Real)
(declare-fun l_0_15_84 () Real)
(declare-fun l_0_15_83 () Real)
(declare-fun l_0_15_82 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_70 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_69 () Real)
(declare-fun l_0_15_68 () Real)
(declare-fun l_0_15_67 () Real)
(declare-fun l_0_15_37 () Real)
(declare-fun l_0_15_22 () Real)
(declare-fun l_0_15_100 () Real)
(declare-fun l_0_15_10 () Real)
(declare-fun l_0_15_93 () Real)
(declare-fun l_0_15_78 () Real)
(declare-fun l_0_15_63 () Real)
(declare-fun l_0_15_32 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_17 () Real)
(declare-fun l_0_15_87 () Real)
(declare-fun l_0_15_72 () Real)
(declare-fun l_0_15_47 () Real)
(declare-fun l_0_15_41 () Real)
(declare-fun l_0_15_26 () Real)
(declare-fun l_0_15_12 () Real)
(declare-fun l_0_15_102 () Real)
(declare-fun l_0_15_33 () Real)
(declare-fun l_0_15_18 () Real)
(declare-fun l_0_15_35 () Real)
(declare-fun l_0_15_20 () Real)
(declare-fun l_0_15_38 () Real)
(declare-fun l_0_15_23 () Real)
(declare-fun l_0_15_48 () Real)
(declare-fun l_0_15_42 () Real)
(declare-fun l_0_15_27 () Real)
(declare-fun l_0_15_36 () Real)
(declare-fun l_0_15_21 () Real)
(declare-fun l_0_15_39 () Real)
(declare-fun l_0_15_24 () Real)
(declare-fun l_0_15_50 () Real)
(declare-fun l_0_15_49 () Real)
(declare-fun l_0_15_43 () Real)
(declare-fun l_0_15_28 () Real)
(declare-fun l_0_15_13 () Real)
(declare-fun l_0_15_40 () Real)
(declare-fun l_0_15_25 () Real)
(declare-fun l_0_15_53 () Real)
(declare-fun l_0_15_52 () Real)
(declare-fun l_0_15_44 () Real)
(declare-fun l_0_15_29 () Real)
(declare-fun l_0_15_14 () Real)
(declare-fun l_0_15_57 () Real)
(declare-fun l_0_15_56 () Real)
(declare-fun l_0_15_45 () Real)
(declare-fun l_0_15_30 () Real)
(declare-fun l_0_15_15 () Real)
(declare-fun l_0_15_88 () Real)
(declare-fun l_0_15_73 () Real)
(declare-fun l_0_15_103 () Real)
(declare-fun l_0_15_89 () Real)
(declare-fun l_0_15_74 () Real)
(declare-fun l_0_15_104 () Real)
(declare-fun l_0_15_90 () Real)
(declare-fun l_0_15_75 () Real)
(declare-fun l_0_15_105 () Real)
(declare-fun l_0_15_51 () Real)
(declare-fun l_0_15_55 () Real)
(declare-fun l_0_15_54 () Real)
(declare-fun l_0_15_58 () Real)
(declare-fun l_0_15_59 () Real)
(declare-fun l_0_15_60 () Real)
(declare-fun l_0_16_62 () Real)
(declare-fun l_0_16_61 () Real)
(declare-fun l_0_16_31 () Real)
(declare-fun l_0_16_16 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_63 () Real)
(declare-fun l_0_16_32 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_17 () Real)
(declare-fun l_0_16_65 () Real)
(declare-fun l_0_16_64 () Real)
(declare-fun l_0_16_34 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_19 () Real)
(declare-fun l_0_16_68 () Real)
(declare-fun l_0_16_67 () Real)
(declare-fun l_0_16_37 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_22 () Real)
(declare-fun l_0_16_72 () Real)
(declare-fun l_0_16_71 () Real)
(declare-fun l_0_16_47 () Real)
(declare-fun l_0_16_46 () Real)
(declare-fun l_0_16_41 () Real)
(declare-fun l_0_16_26 () Real)
(declare-fun l_0_16_12 () Real)
(declare-fun l_0_16_11 () Real)
(declare-fun l_0_16_33 () Real)
(declare-fun l_0_16_18 () Real)
(declare-fun l_0_16_35 () Real)
(declare-fun l_0_16_20 () Real)
(declare-fun l_0_16_38 () Real)
(declare-fun l_0_16_23 () Real)
(declare-fun l_0_16_48 () Real)
(declare-fun l_0_16_42 () Real)
(declare-fun l_0_16_27 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_36 () Real)
(declare-fun l_0_16_21 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_39 () Real)
(declare-fun l_0_16_24 () Real)
(declare-fun l_0_16_50 () Real)
(declare-fun l_0_16_49 () Real)
(declare-fun l_0_16_43 () Real)
(declare-fun l_0_16_28 () Real)
(declare-fun l_0_16_13 () Real)
(declare-fun l_0_16_40 () Real)
(declare-fun l_0_16_25 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_53 () Real)
(declare-fun l_0_16_52 () Real)
(declare-fun l_0_16_44 () Real)
(declare-fun l_0_16_29 () Real)
(declare-fun l_0_16_14 () Real)
(declare-fun l_0_16_57 () Real)
(declare-fun l_0_16_56 () Real)
(declare-fun l_0_16_45 () Real)
(declare-fun l_0_16_30 () Real)
(declare-fun l_0_16_15 () Real)
(declare-fun l_0_16_66 () Real)
(declare-fun l_0_16_69 () Real)
(declare-fun l_0_16_73 () Real)
(declare-fun l_0_16_70 () Real)
(declare-fun l_0_16_74 () Real)
(declare-fun l_0_16_75 () Real)
(declare-fun l_0_16_51 () Real)
(declare-fun l_0_16_55 () Real)
(declare-fun l_0_16_54 () Real)
(declare-fun l_0_16_58 () Real)
(declare-fun l_0_16_59 () Real)
(declare-fun l_0_16_60 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_60 () Real)
(assert
 (let ((?x1539 (* l_0_0_7 l_0_0_7)))
 (let ((?x1537 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1530 (* l_0_0_13 l_0_0_13)))
 (let ((?x1531 (+ (- (* (* 2.0 l_0_0_1) l_0_0_2) (* l_0_0_1 l_0_0_1)) ?x1530)))
 (let ((?x1542 (+ (- (+ (- ?x1531 (* (* 2.0 l_0_0_19) l_0_0_20)) ?x1537) ?x1539) 1.0)))
 (= ?x1542 0.0)))))))
(assert
 (let ((?x1539 (* l_0_0_7 l_0_0_7)))
 (let ((?x1592 (* 2.0 ?x1539)))
 (let ((?x1593 (+ (- (* 1.0 (* l_0_0_1 l_0_0_1)) (* l_0_0_19 l_0_0_19)) ?x1592)))
 (= (- ?x1593 1.0) 0.0)))))
(assert
 (let ((?x1624 (* l_0_0_9 l_0_0_9)))
 (let ((?x1625 (* 2.0 ?x1624)))
 (let ((?x1621 (* l_0_0_8 l_0_0_8)))
 (let ((?x1622 (* 2.0 ?x1621)))
 (let ((?x1618 (* 2.0 l_0_0_7)))
 (let ((?x1619 (* ?x1618 l_0_0_8)))
 (let ((?x1613 (* l_0_0_21 l_0_0_21)))
 (let ((?x1611 (* l_0_0_20 l_0_0_20)))
 (let ((?x1605 (* 2.0 l_0_0_13)))
 (let ((?x1606 (* ?x1605 l_0_0_14)))
 (let ((?x1610 (+ (+ (* (* (- 2.0) l_0_0_1) l_0_0_2) ?x1606) (* 1.0 (* l_0_0_2 l_0_0_2)))))
 (let ((?x1620 (- (+ (- (- ?x1610 ?x1611) ?x1613) (* 1.0 (* l_0_0_3 l_0_0_3))) ?x1619)))
 (= (+ (+ ?x1620 ?x1622) ?x1625) 0.0))))))))))))))
(assert
 (let ((?x1537 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1672 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x1663 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1605 (* 2.0 l_0_0_13)))
 (let ((?x1660 (* ?x1605 l_0_0_16)))
 (let ((?x1658 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x1651 (* 2.0 l_0_0_10)))
 (let ((?x1652 (* ?x1651 l_0_0_7)))
 (let ((?x1656 (+ (- (* (* (- 2.0) l_0_0_1) l_0_0_4) ?x1652) (* (* 4.0 l_0_0_10) l_0_0_8))))
 (let ((?x1667 (- (+ (+ (+ ?x1656 ?x1658) ?x1660) ?x1663) (* (* 2.0 l_0_0_20) l_0_0_22))))
 (= (- (+ (- ?x1667 (* (* 2.0 l_0_0_21) l_0_0_23)) ?x1672) ?x1537) 0.0))))))))))))
(assert
 (let ((?x1624 (* l_0_0_9 l_0_0_9)))
 (let ((?x1621 (* l_0_0_8 l_0_0_8)))
 (let ((?x1615 (* l_0_0_3 l_0_0_3)))
 (let ((?x1608 (* l_0_0_2 l_0_0_2)))
 (let ((?x1723 (- (- (+ (* l_0_0_14 l_0_0_14) (* l_0_0_15 l_0_0_15)) ?x1608) ?x1615)))
 (= (- (- ?x1723 ?x1621) ?x1624) 0.0)))))))
(assert
 (let ((?x1672 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x1663 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1750 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1747 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1743 (* 2.0 l_0_0_11)))
 (let ((?x1744 (* ?x1743 l_0_0_9)))
 (let ((?x1752 (- (+ (+ (- (* (* (- 2.0) l_0_0_10) l_0_0_8) ?x1744) ?x1747) ?x1750) ?x1663)))
 (let ((?x1759 (- (- (- ?x1752 ?x1672) (* (* 2.0 l_0_0_8) l_0_0_8)) (* (* 2.0 l_0_0_9) l_0_0_9))))
 (= ?x1759 0.0))))))))))
(assert
 (let ((?x1618 (* 2.0 l_0_0_7)))
 (let ((?x1619 (* ?x1618 l_0_0_8)))
 (let ((?x1809 (* l_0_0_6 l_0_0_6)))
 (let ((?x1807 (* l_0_0_5 l_0_0_5)))
 (let ((?x1805 (* l_0_0_4 l_0_0_4)))
 (let ((?x1803 (* l_0_0_18 l_0_0_18)))
 (let ((?x1801 (* l_0_0_17 l_0_0_17)))
 (let ((?x1799 (* l_0_0_16 l_0_0_16)))
 (let ((?x1605 (* 2.0 l_0_0_13)))
 (let ((?x1606 (* ?x1605 l_0_0_14)))
 (let ((?x1796 (* l_0_0_12 l_0_0_12)))
 (let ((?x1794 (* l_0_0_11 l_0_0_11)))
 (let ((?x1658 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x1793 (- (- (* (* (- 4.0) l_0_0_10) l_0_0_8) (* l_0_0_10 l_0_0_10)) ?x1658)))
 (let ((?x1806 (- (+ (+ (+ (- (- (- ?x1793 ?x1794) ?x1796) ?x1606) ?x1799) ?x1801) ?x1803) ?x1805)))
 (= (+ (- (- ?x1806 ?x1807) ?x1809) ?x1619) 0.0)))))))))))))))))
(assert
 (let ((?x1841 (+ (* (* 2.0 l_0_0_1) l_0_0_4) (* (* 4.0 l_0_0_10) l_0_0_7))))
 (let ((?x1845 (- (- ?x1841 (* (* 2.0 l_0_0_19) l_0_0_22)) (* (* 2.0 l_0_0_7) l_0_0_7))))
 (= ?x1845 0.0))))
(assert
 (let ((?x1539 (* l_0_0_7 l_0_0_7)))
 (let ((?x1874 (* l_0_0_24 l_0_0_24)))
 (let ((?x1872 (* l_0_0_23 l_0_0_23)))
 (let ((?x1870 (* l_0_0_22 l_0_0_22)))
 (let ((?x1530 (* l_0_0_13 l_0_0_13)))
 (let ((?x1864 (+ (* (* (- 4.0) l_0_0_10) l_0_0_7) (* 2.0 (* l_0_0_10 l_0_0_10)))))
 (let ((?x1868 (+ (+ ?x1864 (* 2.0 (* l_0_0_11 l_0_0_11))) (* 2.0 (* l_0_0_12 l_0_0_12)))))
 (let ((?x1877 (+ (- (- (- (- ?x1868 ?x1530) ?x1870) ?x1872) ?x1874) (* 1.0 (* l_0_0_4 l_0_0_4)))))
 (let ((?x1881 (+ (+ ?x1877 (* 1.0 (* l_0_0_5 l_0_0_5))) (* 1.0 (* l_0_0_6 l_0_0_6)))))
 (= (+ ?x1881 ?x1539) 0.0)))))))))))
(assert
 (let ((?x1605 (* 2.0 l_0_0_13)))
 (let ((?x1660 (* ?x1605 l_0_0_16)))
 (let ((?x1651 (* 2.0 l_0_0_10)))
 (let ((?x1652 (* ?x1651 l_0_0_7)))
 (let ((?x1907 (- (- (- ?x1652 (* ?x1651 l_0_0_10)) (* (* 2.0 l_0_0_11) l_0_0_11)) (* (* 2.0 l_0_0_12) l_0_0_12))))
 (= (- ?x1907 ?x1660) 0.0)))))))
(assert
 (let ((?x1624 (* l_0_0_9 l_0_0_9)))
 (let ((?x1621 (* l_0_0_8 l_0_0_8)))
 (let ((?x1927 (+ (+ (- (* (- l_0_0_14) l_0_0_14) (* l_0_0_15 l_0_0_15)) ?x1621) ?x1624)))
 (= ?x1927 0.0)))))
(assert
 (let ((?x1750 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1747 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1743 (* 2.0 l_0_0_11)))
 (let ((?x1744 (* ?x1743 l_0_0_9)))
 (= (- (- (+ (* (* 2.0 l_0_0_10) l_0_0_8) ?x1744) ?x1747) ?x1750) 0.0))))))
(assert
 (let ((?x1803 (* l_0_0_18 l_0_0_18)))
 (let ((?x1801 (* l_0_0_17 l_0_0_17)))
 (let ((?x1799 (* l_0_0_16 l_0_0_16)))
 (let ((?x1796 (* l_0_0_12 l_0_0_12)))
 (let ((?x1948 (- (+ (+ (* l_0_0_10 l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x1796) ?x1799)))
 (= (- (- ?x1948 ?x1801) ?x1803) 0.0)))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_19 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_24 0.0))
(assert
 (let ((?x2009 (* l_0_1_7 l_0_1_7)))
 (let ((?x1998 (* l_0_1_30 l_0_1_30)))
 (let ((?x1996 (* l_0_1_29 l_0_1_29)))
 (let ((?x1994 (* l_0_1_28 l_0_1_28)))
 (let ((?x1992 (* l_0_1_24 l_0_1_24)))
 (let ((?x1990 (* l_0_1_23 l_0_1_23)))
 (let ((?x1988 (* l_0_1_22 l_0_1_22)))
 (let ((?x1986 (* l_0_1_13 l_0_1_13)))
 (let ((?x1983 (* l_0_1_12 l_0_1_12)))
 (let ((?x1984 (* 2.0 ?x1983)))
 (let ((?x1980 (* l_0_1_11 l_0_1_11)))
 (let ((?x1981 (* 2.0 ?x1980)))
 (let ((?x1977 (* l_0_1_10 l_0_1_10)))
 (let ((?x1978 (* 2.0 ?x1977)))
 (let ((?x1987 (- (+ (+ (+ (* (* (- 4.0) l_0_1_10) l_0_1_7) ?x1978) ?x1981) ?x1984) ?x1986)))
 (let ((?x2002 (+ (- (- (- (- (- (- ?x1987 ?x1988) ?x1990) ?x1992) ?x1994) ?x1996) ?x1998) (* 1.0 (* l_0_1_4 l_0_1_4)))))
 (let ((?x2008 (+ (+ ?x2002 (* 1.0 (* l_0_1_5 l_0_1_5))) (* 1.0 (* l_0_1_6 l_0_1_6)))))
 (= (+ ?x2008 ?x2009) 0.0)))))))))))))))))))
(assert
 (let ((?x2042 (+ (* (* 2.0 l_0_1_1) l_0_1_4) (* (* 4.0 l_0_1_10) l_0_1_7))))
 (let ((?x2048 (- (- ?x2042 (* (* 2.0 l_0_1_19) l_0_1_22)) (* (* 2.0 l_0_1_25) l_0_1_28))))
 (= (- ?x2048 (* (* 2.0 l_0_1_7) l_0_1_7)) 0.0))))
(assert
 (let ((?x2009 (* l_0_1_7 l_0_1_7)))
 (let ((?x2069 (* 2.0 ?x2009)))
 (let ((?x2081 (* l_0_1_25 l_0_1_25)))
 (let ((?x2082 (- (- (* 1.0 (* l_0_1_1 l_0_1_1)) (* l_0_1_19 l_0_1_19)) ?x2081)))
 (= (+ ?x2082 ?x2069) 0.0))))))
(assert
 (let ((?x2009 (* l_0_1_7 l_0_1_7)))
 (let ((?x2100 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x1986 (* l_0_1_13 l_0_1_13)))
 (let ((?x2094 (+ (- (* (* 2.0 l_0_1_1) l_0_1_2) (* l_0_1_1 l_0_1_1)) ?x1986)))
 (let ((?x2098 (- (- ?x2094 (* (* 2.0 l_0_1_19) l_0_1_20)) (* (* 2.0 l_0_1_25) l_0_1_26))))
 (= (- (+ ?x2098 ?x2100) ?x2009) 0.0)))))))
(assert
 (let ((?x2153 (* l_0_1_9 l_0_1_9)))
 (let ((?x2154 (* 2.0 ?x2153)))
 (let ((?x2150 (* l_0_1_8 l_0_1_8)))
 (let ((?x2151 (* 2.0 ?x2150)))
 (let ((?x2049 (* 2.0 l_0_1_7)))
 (let ((?x2148 (* ?x2049 l_0_1_8)))
 (let ((?x2143 (* l_0_1_27 l_0_1_27)))
 (let ((?x2141 (* l_0_1_26 l_0_1_26)))
 (let ((?x2139 (* l_0_1_21 l_0_1_21)))
 (let ((?x2137 (* l_0_1_20 l_0_1_20)))
 (let ((?x2131 (* 2.0 l_0_1_13)))
 (let ((?x2132 (* ?x2131 l_0_1_14)))
 (let ((?x2136 (+ (+ (* (* (- 2.0) l_0_1_1) l_0_1_2) ?x2132) (* 1.0 (* l_0_1_2 l_0_1_2)))))
 (let ((?x2147 (+ (- (- (- (- ?x2136 ?x2137) ?x2139) ?x2141) ?x2143) (* 1.0 (* l_0_1_3 l_0_1_3)))))
 (= (+ (+ (- ?x2147 ?x2148) ?x2151) ?x2154) 0.0))))))))))))))))
(assert
 (let ((?x2100 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x2213 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x2198 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x2131 (* 2.0 l_0_1_13)))
 (let ((?x2195 (* ?x2131 l_0_1_16)))
 (let ((?x2193 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x2187 (* 2.0 l_0_1_10)))
 (let ((?x2188 (* ?x2187 l_0_1_7)))
 (let ((?x2191 (+ (- (* (* (- 2.0) l_0_1_1) l_0_1_4) ?x2188) (* (* 4.0 l_0_1_10) l_0_1_8))))
 (let ((?x2202 (- (+ (+ (+ ?x2191 ?x2193) ?x2195) ?x2198) (* (* 2.0 l_0_1_20) l_0_1_22))))
 (let ((?x2208 (- (- ?x2202 (* (* 2.0 l_0_1_21) l_0_1_23)) (* (* 2.0 l_0_1_26) l_0_1_28))))
 (= (- (+ (- ?x2208 (* (* 2.0 l_0_1_27) l_0_1_29)) ?x2213) ?x2100) 0.0)))))))))))))
(assert
 (let ((?x2153 (* l_0_1_9 l_0_1_9)))
 (let ((?x2150 (* l_0_1_8 l_0_1_8)))
 (let ((?x2145 (* l_0_1_3 l_0_1_3)))
 (let ((?x2134 (* l_0_1_2 l_0_1_2)))
 (let ((?x2273 (- (- (+ (* l_0_1_14 l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x2134) ?x2145)))
 (= (- (- ?x2273 ?x2150) ?x2153) 0.0)))))))
(assert
 (let ((?x2213 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x2198 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x2300 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x2297 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x2293 (* 2.0 l_0_1_11)))
 (let ((?x2294 (* ?x2293 l_0_1_9)))
 (let ((?x2302 (- (+ (+ (- (* (* (- 2.0) l_0_1_10) l_0_1_8) ?x2294) ?x2297) ?x2300) ?x2198)))
 (let ((?x2309 (- (- (- ?x2302 ?x2213) (* (* 2.0 l_0_1_8) l_0_1_8)) (* (* 2.0 l_0_1_9) l_0_1_9))))
 (= ?x2309 0.0))))))))))
(assert
 (let ((?x2049 (* 2.0 l_0_1_7)))
 (let ((?x2148 (* ?x2049 l_0_1_8)))
 (let ((?x2006 (* l_0_1_6 l_0_1_6)))
 (let ((?x2003 (* l_0_1_5 l_0_1_5)))
 (let ((?x2000 (* l_0_1_4 l_0_1_4)))
 (let ((?x2349 (* l_0_1_18 l_0_1_18)))
 (let ((?x2347 (* l_0_1_17 l_0_1_17)))
 (let ((?x2345 (* l_0_1_16 l_0_1_16)))
 (let ((?x2131 (* 2.0 l_0_1_13)))
 (let ((?x2132 (* ?x2131 l_0_1_14)))
 (let ((?x1983 (* l_0_1_12 l_0_1_12)))
 (let ((?x1980 (* l_0_1_11 l_0_1_11)))
 (let ((?x2193 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x2341 (- (- (* (* (- 4.0) l_0_1_10) l_0_1_8) (* l_0_1_10 l_0_1_10)) ?x2193)))
 (let ((?x2351 (- (+ (+ (+ (- (- (- ?x2341 ?x1980) ?x1983) ?x2132) ?x2345) ?x2347) ?x2349) ?x2000)))
 (= (+ (- (- ?x2351 ?x2003) ?x2006) ?x2148) 0.0)))))))))))))))))
(assert
 (let ((?x2131 (* 2.0 l_0_1_13)))
 (let ((?x2195 (* ?x2131 l_0_1_16)))
 (let ((?x2187 (* 2.0 l_0_1_10)))
 (let ((?x2188 (* ?x2187 l_0_1_7)))
 (let ((?x2392 (- (- (- ?x2188 (* ?x2187 l_0_1_10)) (* (* 2.0 l_0_1_11) l_0_1_11)) (* (* 2.0 l_0_1_12) l_0_1_12))))
 (= (- ?x2392 ?x2195) 0.0)))))))
(assert
 (let ((?x2153 (* l_0_1_9 l_0_1_9)))
 (let ((?x2150 (* l_0_1_8 l_0_1_8)))
 (let ((?x2416 (+ (+ (- (* (- l_0_1_14) l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x2150) ?x2153)))
 (= ?x2416 0.0)))))
(assert
 (let ((?x2300 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x2297 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x2293 (* 2.0 l_0_1_11)))
 (let ((?x2294 (* ?x2293 l_0_1_9)))
 (= (- (- (+ (* (* 2.0 l_0_1_10) l_0_1_8) ?x2294) ?x2297) ?x2300) 0.0))))))
(assert
 (let ((?x2349 (* l_0_1_18 l_0_1_18)))
 (let ((?x2347 (* l_0_1_17 l_0_1_17)))
 (let ((?x2345 (* l_0_1_16 l_0_1_16)))
 (let ((?x1983 (* l_0_1_12 l_0_1_12)))
 (let ((?x2437 (- (+ (+ (* l_0_1_10 l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1983) ?x2345)))
 (= (- (- ?x2437 ?x2347) ?x2349) 0.0)))))))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (>= l_0_1_25 0.0))
(assert
 (>= l_0_1_27 0.0))
(assert
 (>= l_0_1_30 0.0))
(assert
 (let ((?x2482 (* l_0_2_7 l_0_2_7)))
 (let ((?x2480 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x2468 (* l_0_2_13 l_0_2_13)))
 (let ((?x2469 (+ (- (* (* 2.0 l_0_2_1) l_0_2_2) (* l_0_2_1 l_0_2_1)) ?x2468)))
 (let ((?x2475 (- (- ?x2469 (* (* 2.0 l_0_2_19) l_0_2_20)) (* (* 2.0 l_0_2_25) l_0_2_26))))
 (= (- (+ (- ?x2475 (* (* 2.0 l_0_2_31) l_0_2_32)) ?x2480) ?x2482) 0.0)))))))
(assert
 (let ((?x2482 (* l_0_2_7 l_0_2_7)))
 (let ((?x2548 (* l_0_2_36 l_0_2_36)))
 (let ((?x2546 (* l_0_2_35 l_0_2_35)))
 (let ((?x2544 (* l_0_2_34 l_0_2_34)))
 (let ((?x2542 (* l_0_2_30 l_0_2_30)))
 (let ((?x2540 (* l_0_2_29 l_0_2_29)))
 (let ((?x2538 (* l_0_2_28 l_0_2_28)))
 (let ((?x2536 (* l_0_2_24 l_0_2_24)))
 (let ((?x2534 (* l_0_2_23 l_0_2_23)))
 (let ((?x2532 (* l_0_2_22 l_0_2_22)))
 (let ((?x2468 (* l_0_2_13 l_0_2_13)))
 (let ((?x2528 (* l_0_2_12 l_0_2_12)))
 (let ((?x2529 (* 2.0 ?x2528)))
 (let ((?x2525 (* l_0_2_11 l_0_2_11)))
 (let ((?x2526 (* 2.0 ?x2525)))
 (let ((?x2522 (* l_0_2_10 l_0_2_10)))
 (let ((?x2523 (* 2.0 ?x2522)))
 (let ((?x2531 (- (+ (+ (+ (* (* (- 4.0) l_0_2_10) l_0_2_7) ?x2523) ?x2526) ?x2529) ?x2468)))
 (let ((?x2545 (- (- (- (- (- (- (- ?x2531 ?x2532) ?x2534) ?x2536) ?x2538) ?x2540) ?x2542) ?x2544)))
 (let ((?x2555 (+ (+ (- (- ?x2545 ?x2546) ?x2548) (* 1.0 (* l_0_2_4 l_0_2_4))) (* 1.0 (* l_0_2_5 l_0_2_5)))))
 (= (+ (+ ?x2555 (* 1.0 (* l_0_2_6 l_0_2_6))) ?x2482) 0.0))))))))))))))))))))))
(assert
 (let ((?x2605 (+ (* (* 2.0 l_0_2_1) l_0_2_4) (* (* 4.0 l_0_2_10) l_0_2_7))))
 (let ((?x2609 (- (- ?x2605 (* (* 2.0 l_0_2_19) l_0_2_22)) (* (* 2.0 l_0_2_25) l_0_2_28))))
 (let ((?x2614 (- (- ?x2609 (* (* 2.0 l_0_2_31) l_0_2_34)) (* (* 2.0 l_0_2_7) l_0_2_7))))
 (= ?x2614 0.0)))))
(assert
 (let ((?x2482 (* l_0_2_7 l_0_2_7)))
 (let ((?x2637 (* 2.0 ?x2482)))
 (let ((?x2650 (* l_0_2_31 l_0_2_31)))
 (let ((?x2648 (* l_0_2_25 l_0_2_25)))
 (let ((?x2649 (- (- (* 1.0 (* l_0_2_1 l_0_2_1)) (* l_0_2_19 l_0_2_19)) ?x2648)))
 (= (+ (- ?x2649 ?x2650) ?x2637) 0.0)))))))
(assert
 (let ((?x2692 (* l_0_2_9 l_0_2_9)))
 (let ((?x2693 (* 2.0 ?x2692)))
 (let ((?x2689 (* l_0_2_8 l_0_2_8)))
 (let ((?x2690 (* 2.0 ?x2689)))
 (let ((?x2612 (* 2.0 l_0_2_7)))
 (let ((?x2687 (* ?x2612 l_0_2_8)))
 (let ((?x2685 (* l_0_2_33 l_0_2_33)))
 (let ((?x2683 (* l_0_2_32 l_0_2_32)))
 (let ((?x2678 (* l_0_2_27 l_0_2_27)))
 (let ((?x2676 (* l_0_2_26 l_0_2_26)))
 (let ((?x2674 (* l_0_2_21 l_0_2_21)))
 (let ((?x2672 (* l_0_2_20 l_0_2_20)))
 (let ((?x2666 (* 2.0 l_0_2_13)))
 (let ((?x2667 (* ?x2666 l_0_2_14)))
 (let ((?x2671 (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x2667) (* 1.0 (* l_0_2_2 l_0_2_2)))))
 (let ((?x2682 (+ (- (- (- (- ?x2671 ?x2672) ?x2674) ?x2676) ?x2678) (* 1.0 (* l_0_2_3 l_0_2_3)))))
 (= (+ (+ (- (- (- ?x2682 ?x2683) ?x2685) ?x2687) ?x2690) ?x2693) 0.0))))))))))))))))))
(assert
 (let ((?x2480 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x2757 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2742 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2666 (* 2.0 l_0_2_13)))
 (let ((?x2739 (* ?x2666 l_0_2_16)))
 (let ((?x2737 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2731 (* 2.0 l_0_2_10)))
 (let ((?x2732 (* ?x2731 l_0_2_7)))
 (let ((?x2735 (+ (- (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x2732) (* (* 4.0 l_0_2_10) l_0_2_8))))
 (let ((?x2746 (- (+ (+ (+ ?x2735 ?x2737) ?x2739) ?x2742) (* (* 2.0 l_0_2_20) l_0_2_22))))
 (let ((?x2752 (- (- ?x2746 (* (* 2.0 l_0_2_21) l_0_2_23)) (* (* 2.0 l_0_2_26) l_0_2_28))))
 (let ((?x2761 (- (+ (- ?x2752 (* (* 2.0 l_0_2_27) l_0_2_29)) ?x2757) (* (* 2.0 l_0_2_32) l_0_2_34))))
 (= (- (- ?x2761 (* (* 2.0 l_0_2_33) l_0_2_35)) ?x2480) 0.0))))))))))))))
(assert
 (let ((?x2692 (* l_0_2_9 l_0_2_9)))
 (let ((?x2689 (* l_0_2_8 l_0_2_8)))
 (let ((?x2680 (* l_0_2_3 l_0_2_3)))
 (let ((?x2669 (* l_0_2_2 l_0_2_2)))
 (let ((?x2834 (- (- (+ (* l_0_2_14 l_0_2_14) (* l_0_2_15 l_0_2_15)) ?x2669) ?x2680)))
 (= (- (- ?x2834 ?x2689) ?x2692) 0.0)))))))
(assert
 (let ((?x2757 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x2742 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2861 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2858 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2854 (* 2.0 l_0_2_11)))
 (let ((?x2855 (* ?x2854 l_0_2_9)))
 (let ((?x2863 (- (+ (+ (- (* (* (- 2.0) l_0_2_10) l_0_2_8) ?x2855) ?x2858) ?x2861) ?x2742)))
 (let ((?x2870 (- (- (- ?x2863 ?x2757) (* (* 2.0 l_0_2_8) l_0_2_8)) (* (* 2.0 l_0_2_9) l_0_2_9))))
 (= ?x2870 0.0))))))))))
(assert
 (let ((?x2612 (* 2.0 l_0_2_7)))
 (let ((?x2687 (* ?x2612 l_0_2_8)))
 (let ((?x2556 (* l_0_2_6 l_0_2_6)))
 (let ((?x2553 (* l_0_2_5 l_0_2_5)))
 (let ((?x2550 (* l_0_2_4 l_0_2_4)))
 (let ((?x2910 (* l_0_2_18 l_0_2_18)))
 (let ((?x2908 (* l_0_2_17 l_0_2_17)))
 (let ((?x2906 (* l_0_2_16 l_0_2_16)))
 (let ((?x2666 (* 2.0 l_0_2_13)))
 (let ((?x2667 (* ?x2666 l_0_2_14)))
 (let ((?x2528 (* l_0_2_12 l_0_2_12)))
 (let ((?x2525 (* l_0_2_11 l_0_2_11)))
 (let ((?x2737 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x2902 (- (- (* (* (- 4.0) l_0_2_10) l_0_2_8) (* l_0_2_10 l_0_2_10)) ?x2737)))
 (let ((?x2912 (- (+ (+ (+ (- (- (- ?x2902 ?x2525) ?x2528) ?x2667) ?x2906) ?x2908) ?x2910) ?x2550)))
 (= (+ (- (- ?x2912 ?x2553) ?x2556) ?x2687) 0.0)))))))))))))))))
(assert
 (let ((?x2666 (* 2.0 l_0_2_13)))
 (let ((?x2739 (* ?x2666 l_0_2_16)))
 (let ((?x2731 (* 2.0 l_0_2_10)))
 (let ((?x2732 (* ?x2731 l_0_2_7)))
 (let ((?x2947 (- (- (- ?x2732 (* ?x2731 l_0_2_10)) (* (* 2.0 l_0_2_11) l_0_2_11)) (* (* 2.0 l_0_2_12) l_0_2_12))))
 (= (- ?x2947 ?x2739) 0.0)))))))
(assert
 (let ((?x2692 (* l_0_2_9 l_0_2_9)))
 (let ((?x2689 (* l_0_2_8 l_0_2_8)))
 (let ((?x2968 (+ (+ (- (* (- l_0_2_14) l_0_2_14) (* l_0_2_15 l_0_2_15)) ?x2689) ?x2692)))
 (= ?x2968 0.0)))))
(assert
 (let ((?x2861 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2858 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2854 (* 2.0 l_0_2_11)))
 (let ((?x2855 (* ?x2854 l_0_2_9)))
 (= (- (- (+ (* (* 2.0 l_0_2_10) l_0_2_8) ?x2855) ?x2858) ?x2861) 0.0))))))
(assert
 (let ((?x2910 (* l_0_2_18 l_0_2_18)))
 (let ((?x2908 (* l_0_2_17 l_0_2_17)))
 (let ((?x2906 (* l_0_2_16 l_0_2_16)))
 (let ((?x2528 (* l_0_2_12 l_0_2_12)))
 (let ((?x2989 (- (+ (+ (* l_0_2_10 l_0_2_10) (* l_0_2_11 l_0_2_11)) ?x2528) ?x2906)))
 (= (- (- ?x2989 ?x2908) ?x2910) 0.0)))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_9 0.0))
(assert
 (>= l_0_2_12 0.0))
(assert
 (>= l_0_2_13 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_19 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (let ((?x3027 (* l_0_3_61 l_0_3_61)))
 (let ((?x3026 (+ (* 1.0 (* l_0_3_1 l_0_3_1)) (* 1.0 (* l_0_3_46 l_0_3_46)))))
 (= (+ (- ?x3026 ?x3027) 1.0) 0.0))))
(assert
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x3043 (* ?x3042 l_0_3_31)))
 (let ((?x3039 (* l_0_3_16 l_0_3_16)))
 (let ((?x3040 (* 4.0 ?x3039)))
 (let ((?x3041 (+ (- (* (* 2.0 l_0_3_1) l_0_3_2) (* l_0_3_1 l_0_3_1)) ?x3040)))
 (let ((?x3050 (- (+ (- ?x3041 ?x3043) (* (* 2.0 l_0_3_46) l_0_3_47)) (* (* 2.0 l_0_3_61) l_0_3_62))))
 (= ?x3050 0.0))))))))
(assert
 (let ((?x3101 (* l_0_3_63 l_0_3_63)))
 (let ((?x3099 (* l_0_3_62 l_0_3_62)))
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3091 (* ?x3090 l_0_3_32)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3082 (* ?x3081 l_0_3_17)))
 (let ((?x3086 (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x3082) (* 1.0 (* l_0_3_2 l_0_3_2)))))
 (let ((?x3095 (+ (- (+ ?x3086 (* 1.0 (* l_0_3_3 l_0_3_3))) ?x3091) (* 1.0 (* l_0_3_47 l_0_3_47)))))
 (= (- (- (+ ?x3095 (* 1.0 (* l_0_3_48 l_0_3_48))) ?x3099) ?x3101) 0.0))))))))))
(assert
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3142 (* ?x3090 l_0_3_34)))
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x3140 (* ?x3042 l_0_3_32)))
 (let ((?x3137 (* 2.0 l_0_3_3)))
 (let ((?x3138 (* ?x3137 l_0_3_5)))
 (let ((?x3134 (* 2.0 l_0_3_2)))
 (let ((?x3135 (* ?x3134 l_0_3_4)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3132 (* ?x3081 l_0_3_19)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x3130 (* ?x3129 l_0_3_17)))
 (let ((?x3139 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x3130) ?x3132) ?x3135) ?x3138)))
 (let ((?x3149 (+ (+ (- (- ?x3139 ?x3140) ?x3142) (* (* 2.0 l_0_3_47) l_0_3_49)) (* (* 2.0 l_0_3_48) l_0_3_50))))
 (let ((?x3155 (- (- ?x3149 (* (* 2.0 l_0_3_62) l_0_3_64)) (* (* 2.0 l_0_3_63) l_0_3_65))))
 (= ?x3155 0.0)))))))))))))))))
(assert
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3205 (* ?x3090 l_0_3_37)))
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x3140 (* ?x3042 l_0_3_32)))
 (let ((?x3137 (* 2.0 l_0_3_3)))
 (let ((?x3202 (* ?x3137 l_0_3_8)))
 (let ((?x3134 (* 2.0 l_0_3_2)))
 (let ((?x3200 (* ?x3134 l_0_3_7)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3198 (* ?x3081 l_0_3_22)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x3130 (* ?x3129 l_0_3_17)))
 (let ((?x3203 (+ (+ (+ (- (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x3130) ?x3198) ?x3200) ?x3202)))
 (let ((?x3210 (+ (+ (- (+ ?x3203 ?x3140) ?x3205) (* (* 2.0 l_0_3_47) l_0_3_52)) (* (* 2.0 l_0_3_48) l_0_3_53))))
 (let ((?x3214 (- (- ?x3210 (* (* 2.0 l_0_3_62) l_0_3_67)) (* (* 2.0 l_0_3_63) l_0_3_68))))
 (= ?x3214 0.0)))))))))))))))))
(assert
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3271 (* ?x3090 l_0_3_41)))
 (let ((?x3091 (* ?x3090 l_0_3_32)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3268 (* ?x3081 l_0_3_26)))
 (let ((?x3082 (* ?x3081 l_0_3_17)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3265 (* ?x3264 l_0_3_3)))
 (let ((?x3263 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* (* 2.0 l_0_3_11) l_0_3_2))))
 (let ((?x3274 (+ (- (- (+ (+ (+ ?x3263 ?x3265) ?x3082) ?x3268) ?x3091) ?x3271) (* (* 2.0 l_0_3_47) l_0_3_56))))
 (let ((?x3278 (- (+ ?x3274 (* (* 2.0 l_0_3_48) l_0_3_57)) (* (* 2.0 l_0_3_62) l_0_3_71))))
 (= (- ?x3278 (* (* 2.0 l_0_3_63) l_0_3_72)) 0.0)))))))))))))
(assert
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3328 (* ?x3327 l_0_3_33)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3325 (* ?x3324 l_0_3_32)))
 (let ((?x3087 (* l_0_3_3 l_0_3_3)))
 (let ((?x3084 (* l_0_3_2 l_0_3_2)))
 (let ((?x3319 (* l_0_3_18 l_0_3_18)))
 (let ((?x3320 (* 4.0 ?x3319)))
 (let ((?x3317 (* l_0_3_17 l_0_3_17)))
 (let ((?x3318 (* 4.0 ?x3317)))
 (= (- (- (- (- (+ ?x3318 ?x3320) ?x3084) ?x3087) ?x3325) ?x3328) 0.0))))))))))))
(assert
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3369 (* ?x3368 l_0_3_35)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3363 (* ?x3362 l_0_3_34)))
 (let ((?x3137 (* 2.0 l_0_3_3)))
 (let ((?x3138 (* ?x3137 l_0_3_5)))
 (let ((?x3134 (* 2.0 l_0_3_2)))
 (let ((?x3135 (* ?x3134 l_0_3_4)))
 (let ((?x3319 (* l_0_3_18 l_0_3_18)))
 (let ((?x3358 (* 2.0 ?x3319)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3356 (* ?x3355 l_0_3_20)))
 (let ((?x3317 (* l_0_3_17 l_0_3_17)))
 (let ((?x3353 (* 2.0 ?x3317)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3352 (* ?x3351 l_0_3_19)))
 (let ((?x3367 (- (- (- (- (+ (+ (+ ?x3352 ?x3353) ?x3356) ?x3358) ?x3135) ?x3138) ?x3363) (* (* 2.0 l_0_3_32) l_0_3_32))))
 (= (- (- ?x3367 ?x3369) (* (* 2.0 l_0_3_33) l_0_3_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x3341 (* l_0_3_33 l_0_3_33)))
 (let ((?x3405 (* 2.0 ?x3341)))
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3430 (* ?x3368 l_0_3_38)))
 (let ((?x3335 (* l_0_3_32 l_0_3_32)))
 (let ((?x3394 (* 2.0 ?x3335)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3427 (* ?x3362 l_0_3_37)))
 (let ((?x3137 (* 2.0 l_0_3_3)))
 (let ((?x3202 (* ?x3137 l_0_3_8)))
 (let ((?x3134 (* 2.0 l_0_3_2)))
 (let ((?x3200 (* ?x3134 l_0_3_7)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3420 (* ?x3355 l_0_3_23)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3416 (* ?x3351 l_0_3_22)))
 (let ((?x3424 (- (+ (- ?x3416 (* (* 2.0 l_0_3_17) l_0_3_17)) ?x3420) (* (* 2.0 l_0_3_18) l_0_3_18))))
 (= (+ (- (+ (- (- (- ?x3424 ?x3200) ?x3202) ?x3427) ?x3394) ?x3430) ?x3405) 0.0)))))))))))))))))))
(assert
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3328 (* ?x3327 l_0_3_33)))
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3480 (* ?x3368 l_0_3_42)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3325 (* ?x3324 l_0_3_32)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3477 (* ?x3362 l_0_3_41)))
 (let ((?x3319 (* l_0_3_18 l_0_3_18)))
 (let ((?x3320 (* 4.0 ?x3319)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3474 (* ?x3355 l_0_3_27)))
 (let ((?x3317 (* l_0_3_17 l_0_3_17)))
 (let ((?x3318 (* 4.0 ?x3317)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3471 (* ?x3351 l_0_3_26)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3265 (* ?x3264 l_0_3_3)))
 (let ((?x3475 (+ (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x3265) ?x3471) ?x3318) ?x3474)))
 (= (- (- (- (- (+ ?x3475 ?x3320) ?x3477) ?x3325) ?x3480) ?x3328) 0.0)))))))))))))))))))))
(assert
 (let ((?x3551 (* l_0_3_6 l_0_3_6)))
 (let ((?x3549 (* l_0_3_5 l_0_3_5)))
 (let ((?x3547 (* l_0_3_4 l_0_3_4)))
 (let ((?x3544 (* 4.0 l_0_3_36)))
 (let ((?x3545 (* ?x3544 l_0_3_36)))
 (let ((?x3541 (* 4.0 l_0_3_35)))
 (let ((?x3542 (* ?x3541 l_0_3_35)))
 (let ((?x3538 (* 4.0 l_0_3_34)))
 (let ((?x3539 (* ?x3538 l_0_3_34)))
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3536 (* ?x3327 l_0_3_35)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3534 (* ?x3324 l_0_3_34)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x3532 (* ?x3531 l_0_3_32)))
 (let ((?x3528 (* l_0_3_21 l_0_3_21)))
 (let ((?x3529 (* 4.0 ?x3528)))
 (let ((?x3525 (* l_0_3_20 l_0_3_20)))
 (let ((?x3526 (* 4.0 ?x3525)))
 (let ((?x3522 (* l_0_3_19 l_0_3_19)))
 (let ((?x3523 (* 4.0 ?x3522)))
 (let ((?x3519 (* 4.0 l_0_3_18)))
 (let ((?x3520 (* ?x3519 l_0_3_20)))
 (let ((?x3518 (+ (* (* (- 2.0) l_0_3_16) l_0_3_17) (* (* 4.0 l_0_3_17) l_0_3_19))))
 (let ((?x3537 (- (- (+ (+ (+ (+ (+ ?x3518 ?x3520) ?x3523) ?x3526) ?x3529) ?x3532) ?x3534) ?x3536)))
 (= (- (- (- (- (- (- ?x3537 ?x3539) ?x3542) ?x3545) ?x3547) ?x3549) ?x3551) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x3643 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3640 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3637 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3633 (* 8.0 l_0_3_36)))
 (let ((?x3634 (* ?x3633 l_0_3_39)))
 (let ((?x3630 (* 8.0 l_0_3_35)))
 (let ((?x3631 (* ?x3630 l_0_3_38)))
 (let ((?x3627 (* 8.0 l_0_3_34)))
 (let ((?x3628 (* ?x3627 l_0_3_37)))
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3625 (* ?x3327 l_0_3_38)))
 (let ((?x3536 (* ?x3327 l_0_3_35)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3622 (* ?x3324 l_0_3_37)))
 (let ((?x3534 (* ?x3324 l_0_3_34)))
 (let ((?x3618 (* 8.0 l_0_3_21)))
 (let ((?x3619 (* ?x3618 l_0_3_24)))
 (let ((?x3615 (* 8.0 l_0_3_20)))
 (let ((?x3616 (* ?x3615 l_0_3_23)))
 (let ((?x3612 (* 8.0 l_0_3_19)))
 (let ((?x3613 (* ?x3612 l_0_3_22)))
 (let ((?x3519 (* 4.0 l_0_3_18)))
 (let ((?x3610 (* ?x3519 l_0_3_23)))
 (let ((?x3520 (* ?x3519 l_0_3_20)))
 (let ((?x3516 (* 4.0 l_0_3_17)))
 (let ((?x3607 (* ?x3516 l_0_3_22)))
 (let ((?x3614 (+ (+ (- (+ (* (* (- 4.0) l_0_3_17) l_0_3_19) ?x3607) ?x3520) ?x3610) ?x3613)))
 (let ((?x3629 (- (- (+ (- (+ (+ (+ ?x3614 ?x3616) ?x3619) ?x3534) ?x3622) ?x3536) ?x3625) ?x3628)))
 (= (- (- (- (- (- ?x3629 ?x3631) ?x3634) ?x3637) ?x3640) ?x3643) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x3633 (* 8.0 l_0_3_36)))
 (let ((?x3741 (* ?x3633 l_0_3_43)))
 (let ((?x3630 (* 8.0 l_0_3_35)))
 (let ((?x3739 (* ?x3630 l_0_3_42)))
 (let ((?x3627 (* 8.0 l_0_3_34)))
 (let ((?x3737 (* ?x3627 l_0_3_41)))
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3735 (* ?x3327 l_0_3_42)))
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3369 (* ?x3368 l_0_3_35)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3732 (* ?x3324 l_0_3_41)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3363 (* ?x3362 l_0_3_34)))
 (let ((?x3618 (* 8.0 l_0_3_21)))
 (let ((?x3729 (* ?x3618 l_0_3_28)))
 (let ((?x3615 (* 8.0 l_0_3_20)))
 (let ((?x3727 (* ?x3615 l_0_3_27)))
 (let ((?x3612 (* 8.0 l_0_3_19)))
 (let ((?x3725 (* ?x3612 l_0_3_26)))
 (let ((?x3519 (* 4.0 l_0_3_18)))
 (let ((?x3723 (* ?x3519 l_0_3_27)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3356 (* ?x3355 l_0_3_20)))
 (let ((?x3516 (* 4.0 l_0_3_17)))
 (let ((?x3720 (* ?x3516 l_0_3_26)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3352 (* ?x3351 l_0_3_19)))
 (let ((?x3716 (* 2.0 l_0_3_13)))
 (let ((?x3717 (* ?x3716 l_0_3_6)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3714 (* ?x3264 l_0_3_5)))
 (let ((?x3721 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x3714) ?x3717) ?x3352) ?x3720)))
 (let ((?x3733 (- (- (+ (+ (+ (+ (+ ?x3721 ?x3356) ?x3723) ?x3725) ?x3727) ?x3729) ?x3363) ?x3732)))
 (= (- (- (- (- (- ?x3733 ?x3369) ?x3735) ?x3737) ?x3739) ?x3741) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3838 (* l_0_3_9 l_0_3_9)))
 (let ((?x3836 (* l_0_3_8 l_0_3_8)))
 (let ((?x3834 (* l_0_3_7 l_0_3_7)))
 (let ((?x3831 (* 4.0 l_0_3_40)))
 (let ((?x3832 (* ?x3831 l_0_3_40)))
 (let ((?x3828 (* 4.0 l_0_3_39)))
 (let ((?x3829 (* ?x3828 l_0_3_39)))
 (let ((?x3825 (* 4.0 l_0_3_38)))
 (let ((?x3826 (* ?x3825 l_0_3_38)))
 (let ((?x3822 (* 4.0 l_0_3_37)))
 (let ((?x3823 (* ?x3822 l_0_3_37)))
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3625 (* ?x3327 l_0_3_38)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3622 (* ?x3324 l_0_3_37)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x3532 (* ?x3531 l_0_3_32)))
 (let ((?x3816 (* l_0_3_25 l_0_3_25)))
 (let ((?x3817 (* 4.0 ?x3816)))
 (let ((?x3813 (* l_0_3_24 l_0_3_24)))
 (let ((?x3814 (* 4.0 ?x3813)))
 (let ((?x3810 (* l_0_3_23 l_0_3_23)))
 (let ((?x3811 (* 4.0 ?x3810)))
 (let ((?x3807 (* l_0_3_22 l_0_3_22)))
 (let ((?x3808 (* 4.0 ?x3807)))
 (let ((?x3519 (* 4.0 l_0_3_18)))
 (let ((?x3610 (* ?x3519 l_0_3_23)))
 (let ((?x3516 (* 4.0 l_0_3_17)))
 (let ((?x3607 (* ?x3516 l_0_3_22)))
 (let ((?x3805 (- (+ (* (- l_0_3_10) l_0_3_10) (* (* 2.0 l_0_3_16) l_0_3_17)) ?x3607)))
 (let ((?x3820 (+ (- (+ (+ (+ (+ (- ?x3805 ?x3610) ?x3808) ?x3811) ?x3814) ?x3817) ?x3532) ?x3622)))
 (let ((?x3837 (- (- (- (- (- (- (+ ?x3820 ?x3625) ?x3823) ?x3826) ?x3829) ?x3832) ?x3834) ?x3836)))
 (= (- ?x3837 ?x3838) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3928 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3925 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3922 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3919 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x3327 (* 4.0 l_0_3_33)))
 (let ((?x3735 (* ?x3327 l_0_3_42)))
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3430 (* ?x3368 l_0_3_38)))
 (let ((?x3324 (* 4.0 l_0_3_32)))
 (let ((?x3732 (* ?x3324 l_0_3_41)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3427 (* ?x3362 l_0_3_37)))
 (let ((?x3912 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3909 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3906 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3903 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x3519 (* 4.0 l_0_3_18)))
 (let ((?x3723 (* ?x3519 l_0_3_27)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3420 (* ?x3355 l_0_3_23)))
 (let ((?x3516 (* 4.0 l_0_3_17)))
 (let ((?x3720 (* ?x3516 l_0_3_26)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3416 (* ?x3351 l_0_3_22)))
 (let ((?x3716 (* 2.0 l_0_3_13)))
 (let ((?x3896 (* ?x3716 l_0_3_9)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3894 (* ?x3264 l_0_3_8)))
 (let ((?x3261 (* 2.0 l_0_3_11)))
 (let ((?x3892 (* ?x3261 l_0_3_7)))
 (let ((?x3898 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x3892) ?x3894) ?x3896) ?x3416)))
 (let ((?x3913 (+ (+ (+ (+ (- (+ (- ?x3898 ?x3720) ?x3420) ?x3723) ?x3903) ?x3906) ?x3909) ?x3912)))
 (let ((?x3926 (- (- (- (+ (- (+ (- ?x3913 ?x3427) ?x3732) ?x3430) ?x3735) ?x3919) ?x3922) ?x3925)))
 (= (- ?x3926 ?x3928) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4043 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x4040 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x4037 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x4034 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x4031 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x3368 (* 8.0 l_0_3_33)))
 (let ((?x3480 (* ?x3368 l_0_3_42)))
 (let ((?x3362 (* 8.0 l_0_3_32)))
 (let ((?x3477 (* ?x3362 l_0_3_41)))
 (let ((?x4025 (* l_0_3_30 l_0_3_30)))
 (let ((?x4026 (* 4.0 ?x4025)))
 (let ((?x4022 (* l_0_3_29 l_0_3_29)))
 (let ((?x4023 (* 4.0 ?x4022)))
 (let ((?x4019 (* l_0_3_28 l_0_3_28)))
 (let ((?x4020 (* 4.0 ?x4019)))
 (let ((?x4016 (* l_0_3_27 l_0_3_27)))
 (let ((?x4017 (* 4.0 ?x4016)))
 (let ((?x4013 (* l_0_3_26 l_0_3_26)))
 (let ((?x4014 (* 4.0 ?x4013)))
 (let ((?x3355 (* 8.0 l_0_3_18)))
 (let ((?x3474 (* ?x3355 l_0_3_27)))
 (let ((?x3351 (* 8.0 l_0_3_17)))
 (let ((?x3471 (* ?x3351 l_0_3_26)))
 (let ((?x4009 (* l_0_3_15 l_0_3_15)))
 (let ((?x4007 (* l_0_3_14 l_0_3_14)))
 (let ((?x4005 (* l_0_3_13 l_0_3_13)))
 (let ((?x4008 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4005) ?x4007)))
 (let ((?x4024 (+ (+ (+ (+ (+ (+ (- ?x4008 ?x4009) ?x3471) ?x3474) ?x4014) ?x4017) ?x4020) ?x4023)))
 (let ((?x4041 (- (- (- (- (- (- (+ ?x4024 ?x4026) ?x3477) ?x3480) ?x4031) ?x4034) ?x4037) ?x4040)))
 (= (- ?x4041 ?x4043) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x3039 (* l_0_3_16 l_0_3_16)))
 (let ((?x4098 (* 2.0 ?x3039)))
 (let ((?x4101 (- (+ (* (* 2.0 l_0_3_1) l_0_3_4) ?x4098) (* (* 2.0 l_0_3_31) l_0_3_31))))
 (let ((?x4105 (- (+ ?x4101 (* (* 2.0 l_0_3_46) l_0_3_49)) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (= ?x4105 0.0))))))
(assert
 (let ((?x4126 (- (* (* 2.0 l_0_3_1) l_0_3_7) (* (* 2.0 l_0_3_16) l_0_3_16))))
 (let ((?x4129 (+ (+ ?x4126 (* 2.0 (* l_0_3_31 l_0_3_31))) (* (* 2.0 l_0_3_46) l_0_3_52))))
 (= (- ?x4129 (* (* 2.0 l_0_3_61) l_0_3_67)) 0.0))))
(assert
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x3043 (* ?x3042 l_0_3_31)))
 (let ((?x3039 (* l_0_3_16 l_0_3_16)))
 (let ((?x3040 (* 4.0 ?x3039)))
 (let ((?x4153 (+ (- (+ (* (* 2.0 l_0_3_1) l_0_3_11) ?x3040) ?x3043) (* (* 2.0 l_0_3_46) l_0_3_56))))
 (= (- ?x4153 (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0)))))))
(assert
 (let ((?x4195 (* l_0_3_66 l_0_3_66)))
 (let ((?x4193 (* l_0_3_65 l_0_3_65)))
 (let ((?x4191 (* l_0_3_64 l_0_3_64)))
 (let ((?x3058 (* l_0_3_31 l_0_3_31)))
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x4173 (* ?x3042 l_0_3_34)))
 (let ((?x4174 (- (- (* (* 4.0 l_0_3_16) l_0_3_19) (* l_0_3_16 l_0_3_16)) ?x4173)))
 (let ((?x4180 (+ (+ (+ ?x4174 ?x3058) (* 1.0 (* l_0_3_4 l_0_3_4))) (* 1.0 (* l_0_3_49 l_0_3_49)))))
 (let ((?x4185 (+ (+ ?x4180 (* 1.0 (* l_0_3_5 l_0_3_5))) (* 1.0 (* l_0_3_50 l_0_3_50)))))
 (let ((?x4190 (+ (+ ?x4185 (* 1.0 (* l_0_3_51 l_0_3_51))) (* 1.0 (* l_0_3_6 l_0_3_6)))))
 (= (- (- (- ?x4190 ?x4191) ?x4193) ?x4195) 0.0))))))))))))
(assert
 (let ((?x3643 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3640 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3637 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x4229 (* ?x3042 l_0_3_37)))
 (let ((?x4173 (* ?x3042 l_0_3_34)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x4226 (* ?x3129 l_0_3_22)))
 (let ((?x4231 (+ (- (+ (+ (* (* (- 4.0) l_0_3_16) l_0_3_19) ?x4226) ?x4173) ?x4229) ?x3637)))
 (let ((?x4238 (+ (+ (+ ?x4231 (* (* 2.0 l_0_3_49) l_0_3_52)) ?x3640) (* (* 2.0 l_0_3_50) l_0_3_53))))
 (let ((?x4245 (- (+ (+ ?x4238 (* (* 2.0 l_0_3_51) l_0_3_54)) ?x3643) (* (* 2.0 l_0_3_64) l_0_3_67))))
 (let ((?x4251 (- (- ?x4245 (* (* 2.0 l_0_3_65) l_0_3_68)) (* (* 2.0 l_0_3_66) l_0_3_69))))
 (= ?x4251 0.0))))))))))))))
(assert
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x4298 (* ?x3042 l_0_3_41)))
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3142 (* ?x3090 l_0_3_34)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x4295 (* ?x3129 l_0_3_26)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3132 (* ?x3081 l_0_3_19)))
 (let ((?x3716 (* 2.0 l_0_3_13)))
 (let ((?x3717 (* ?x3716 l_0_3_6)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3714 (* ?x3264 l_0_3_5)))
 (let ((?x4296 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x3714) ?x3717) ?x3132) ?x4295)))
 (let ((?x4303 (+ (+ (- (- ?x4296 ?x3142) ?x4298) (* (* 2.0 l_0_3_49) l_0_3_56)) (* (* 2.0 l_0_3_50) l_0_3_57))))
 (let ((?x4307 (- (+ ?x4303 (* (* 2.0 l_0_3_51) l_0_3_58)) (* (* 2.0 l_0_3_64) l_0_3_71))))
 (let ((?x4311 (- (- ?x4307 (* (* 2.0 l_0_3_65) l_0_3_72)) (* (* 2.0 l_0_3_66) l_0_3_73))))
 (= ?x4311 0.0))))))))))))))))))
(assert
 (let ((?x4374 (* l_0_3_70 l_0_3_70)))
 (let ((?x4370 (* l_0_3_69 l_0_3_69)))
 (let ((?x4368 (* l_0_3_68 l_0_3_68)))
 (let ((?x4366 (* l_0_3_67 l_0_3_67)))
 (let ((?x3058 (* l_0_3_31 l_0_3_31)))
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x4229 (* ?x3042 l_0_3_37)))
 (let ((?x3039 (* l_0_3_16 l_0_3_16)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x4226 (* ?x3129 l_0_3_22)))
 (let ((?x4353 (- (+ (+ (- (* 1.0 (* l_0_3_10 l_0_3_10)) ?x4226) ?x3039) ?x4229) ?x3058)))
 (let ((?x4359 (+ (+ ?x4353 (* 1.0 (* l_0_3_52 l_0_3_52))) (* 1.0 (* l_0_3_53 l_0_3_53)))))
 (let ((?x4365 (+ (+ ?x4359 (* 1.0 (* l_0_3_54 l_0_3_54))) (* 1.0 (* l_0_3_55 l_0_3_55)))))
 (let ((?x4373 (+ (- (- (- ?x4365 ?x4366) ?x4368) ?x4370) (* 1.0 (* l_0_3_7 l_0_3_7)))))
 (let ((?x4379 (+ (+ (- ?x4373 ?x4374) (* 1.0 (* l_0_3_8 l_0_3_8))) (* 1.0 (* l_0_3_9 l_0_3_9)))))
 (= ?x4379 0.0)))))))))))))))))
(assert
 (let ((?x3042 (* 4.0 l_0_3_31)))
 (let ((?x4298 (* ?x3042 l_0_3_41)))
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3205 (* ?x3090 l_0_3_37)))
 (let ((?x3129 (* 4.0 l_0_3_16)))
 (let ((?x4295 (* ?x3129 l_0_3_26)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3198 (* ?x3081 l_0_3_22)))
 (let ((?x3716 (* 2.0 l_0_3_13)))
 (let ((?x3896 (* ?x3716 l_0_3_9)))
 (let ((?x3264 (* 2.0 l_0_3_12)))
 (let ((?x3894 (* ?x3264 l_0_3_8)))
 (let ((?x3261 (* 2.0 l_0_3_11)))
 (let ((?x3892 (* ?x3261 l_0_3_7)))
 (let ((?x4408 (+ (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x3892) ?x3894) ?x3896) ?x3198)))
 (let ((?x4414 (+ (+ (- (- ?x4408 ?x4295) ?x3205) ?x4298) (* (* 2.0 l_0_3_52) l_0_3_56))))
 (let ((?x4420 (+ (+ ?x4414 (* (* 2.0 l_0_3_53) l_0_3_57)) (* (* 2.0 l_0_3_54) l_0_3_58))))
 (let ((?x4426 (- (+ ?x4420 (* (* 2.0 l_0_3_55) l_0_3_59)) (* (* 2.0 l_0_3_67) l_0_3_71))))
 (let ((?x4432 (- (- ?x4426 (* (* 2.0 l_0_3_68) l_0_3_72)) (* (* 2.0 l_0_3_69) l_0_3_73))))
 (= (- ?x4432 (* (* 2.0 l_0_3_70) l_0_3_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x4513 (* l_0_3_75 l_0_3_75)))
 (let ((?x4511 (* l_0_3_74 l_0_3_74)))
 (let ((?x4509 (* l_0_3_73 l_0_3_73)))
 (let ((?x4507 (* l_0_3_72 l_0_3_72)))
 (let ((?x4505 (* l_0_3_71 l_0_3_71)))
 (let ((?x3090 (* 8.0 l_0_3_31)))
 (let ((?x3271 (* ?x3090 l_0_3_41)))
 (let ((?x3081 (* 8.0 l_0_3_16)))
 (let ((?x3268 (* ?x3081 l_0_3_26)))
 (let ((?x4481 (+ (* 1.0 (* l_0_3_11 l_0_3_11)) (* 1.0 (* l_0_3_12 l_0_3_12)))))
 (let ((?x4485 (+ (+ ?x4481 (* 1.0 (* l_0_3_13 l_0_3_13))) (* 1.0 (* l_0_3_14 l_0_3_14)))))
 (let ((?x4492 (+ (- (+ (+ ?x4485 (* 1.0 (* l_0_3_15 l_0_3_15))) ?x3268) ?x3271) (* 1.0 (* l_0_3_56 l_0_3_56)))))
 (let ((?x4498 (+ (+ ?x4492 (* 1.0 (* l_0_3_57 l_0_3_57))) (* 1.0 (* l_0_3_58 l_0_3_58)))))
 (let ((?x4504 (+ (+ ?x4498 (* 1.0 (* l_0_3_59 l_0_3_59))) (* 1.0 (* l_0_3_60 l_0_3_60)))))
 (= (- (- (- (- (- ?x4504 ?x4505) ?x4507) ?x4509) ?x4511) ?x4513) 0.0))))))))))))))))
(assert
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4543 (* ?x3531 l_0_3_34)))
 (let ((?x3528 (* l_0_3_21 l_0_3_21)))
 (let ((?x4541 (* 2.0 ?x3528)))
 (let ((?x3525 (* l_0_3_20 l_0_3_20)))
 (let ((?x4539 (* 2.0 ?x3525)))
 (let ((?x3522 (* l_0_3_19 l_0_3_19)))
 (let ((?x4537 (* 2.0 ?x3522)))
 (let ((?x4544 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_19) ?x4537) ?x4539) ?x4541) ?x4543)))
 (let ((?x4550 (- (- ?x4544 (* (* 2.0 l_0_3_34) l_0_3_34)) (* (* 2.0 l_0_3_35) l_0_3_35))))
 (= (- ?x4550 (* (* 2.0 l_0_3_36) l_0_3_36)) 0.0))))))))))))
(assert
 (let ((?x3581 (* l_0_3_36 l_0_3_36)))
 (let ((?x4568 (* 2.0 ?x3581)))
 (let ((?x3544 (* 4.0 l_0_3_36)))
 (let ((?x4607 (* ?x3544 l_0_3_39)))
 (let ((?x3575 (* l_0_3_35 l_0_3_35)))
 (let ((?x4563 (* 2.0 ?x3575)))
 (let ((?x3541 (* 4.0 l_0_3_35)))
 (let ((?x4604 (* ?x3541 l_0_3_38)))
 (let ((?x3569 (* l_0_3_34 l_0_3_34)))
 (let ((?x4558 (* 2.0 ?x3569)))
 (let ((?x3538 (* 4.0 l_0_3_34)))
 (let ((?x4601 (* ?x3538 l_0_3_37)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4599 (* ?x3531 l_0_3_37)))
 (let ((?x4593 (* 4.0 l_0_3_21)))
 (let ((?x4594 (* ?x4593 l_0_3_24)))
 (let ((?x4587 (* 4.0 l_0_3_20)))
 (let ((?x4588 (* ?x4587 l_0_3_23)))
 (let ((?x4581 (* 4.0 l_0_3_19)))
 (let ((?x4582 (* ?x4581 l_0_3_22)))
 (let ((?x4586 (- (+ (* (* (- 2.0) l_0_3_16) l_0_3_22) ?x4582) (* (* 2.0 l_0_3_19) l_0_3_19))))
 (let ((?x4598 (- (+ (- (+ ?x4586 ?x4588) (* (* 2.0 l_0_3_20) l_0_3_20)) ?x4594) (* (* 2.0 l_0_3_21) l_0_3_21))))
 (let ((?x4609 (+ (- (+ (- (+ (- (+ ?x4598 ?x4599) ?x4601) ?x4558) ?x4604) ?x4563) ?x4607) ?x4568)))
 (= ?x4609 0.0)))))))))))))))))))))))))
(assert
 (let ((?x3544 (* 4.0 l_0_3_36)))
 (let ((?x3545 (* ?x3544 l_0_3_36)))
 (let ((?x4671 (* ?x3544 l_0_3_43)))
 (let ((?x3541 (* 4.0 l_0_3_35)))
 (let ((?x3542 (* ?x3541 l_0_3_35)))
 (let ((?x4668 (* ?x3541 l_0_3_42)))
 (let ((?x3538 (* 4.0 l_0_3_34)))
 (let ((?x3539 (* ?x3538 l_0_3_34)))
 (let ((?x4665 (* ?x3538 l_0_3_41)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4663 (* ?x3531 l_0_3_41)))
 (let ((?x3528 (* l_0_3_21 l_0_3_21)))
 (let ((?x3529 (* 4.0 ?x3528)))
 (let ((?x4593 (* 4.0 l_0_3_21)))
 (let ((?x4660 (* ?x4593 l_0_3_28)))
 (let ((?x3525 (* l_0_3_20 l_0_3_20)))
 (let ((?x3526 (* 4.0 ?x3525)))
 (let ((?x4587 (* 4.0 l_0_3_20)))
 (let ((?x4657 (* ?x4587 l_0_3_27)))
 (let ((?x3522 (* l_0_3_19 l_0_3_19)))
 (let ((?x3523 (* 4.0 ?x3522)))
 (let ((?x4581 (* 4.0 l_0_3_19)))
 (let ((?x4654 (* ?x4581 l_0_3_26)))
 (let ((?x4659 (+ (+ (+ (+ (* (* (- 2.0) l_0_3_16) l_0_3_26) ?x4654) ?x3523) ?x4657) ?x3526)))
 (let ((?x4670 (- (- (- (- (+ (+ (+ ?x4659 ?x4660) ?x3529) ?x4663) ?x4665) ?x3539) ?x4668) ?x3542)))
 (= (- (- ?x4670 ?x4671) ?x3545) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x3341 (* l_0_3_33 l_0_3_33)))
 (let ((?x3335 (* l_0_3_32 l_0_3_32)))
 (let ((?x4713 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x3335) ?x3341)))
 (= ?x4713 0.0)))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4729 (* ?x3371 l_0_3_35)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4727 (* ?x3365 l_0_3_34)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4725 (* ?x3422 l_0_3_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x4725) ?x4727) ?x4729) 0.0))))))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4748 (* ?x3371 l_0_3_38)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4746 (* ?x3365 l_0_3_37)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4739 (* ?x3422 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x4739) ?x4746) ?x4748) 0.0))))))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4767 (* ?x3371 l_0_3_42)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4765 (* ?x3365 l_0_3_41)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4758 (* ?x3422 l_0_3_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_26) ?x4758) ?x4765) ?x4767) 0.0))))))))
(assert
 (let ((?x3581 (* l_0_3_36 l_0_3_36)))
 (let ((?x3575 (* l_0_3_35 l_0_3_35)))
 (let ((?x3569 (* l_0_3_34 l_0_3_34)))
 (let ((?x3528 (* l_0_3_21 l_0_3_21)))
 (let ((?x4785 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3528) ?x3569)))
 (= (+ (+ ?x4785 ?x3575) ?x3581) 0.0)))))))
(assert
 (let ((?x4551 (* 2.0 l_0_3_36)))
 (let ((?x4811 (* ?x4551 l_0_3_39)))
 (let ((?x4548 (* 2.0 l_0_3_35)))
 (let ((?x4809 (* ?x4548 l_0_3_38)))
 (let ((?x4545 (* 2.0 l_0_3_34)))
 (let ((?x4807 (* ?x4545 l_0_3_37)))
 (let ((?x4596 (* 2.0 l_0_3_21)))
 (let ((?x4805 (* ?x4596 l_0_3_24)))
 (let ((?x4590 (* 2.0 l_0_3_20)))
 (let ((?x4803 (* ?x4590 l_0_3_23)))
 (let ((?x4810 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x4803) ?x4805) ?x4807) ?x4809)))
 (= (+ ?x4810 ?x4811) 0.0)))))))))))))
(assert
 (let ((?x4551 (* 2.0 l_0_3_36)))
 (let ((?x4840 (* ?x4551 l_0_3_43)))
 (let ((?x4548 (* 2.0 l_0_3_35)))
 (let ((?x4838 (* ?x4548 l_0_3_42)))
 (let ((?x4545 (* 2.0 l_0_3_34)))
 (let ((?x4836 (* ?x4545 l_0_3_41)))
 (let ((?x4596 (* 2.0 l_0_3_21)))
 (let ((?x4828 (* ?x4596 l_0_3_28)))
 (let ((?x4590 (* 2.0 l_0_3_20)))
 (let ((?x4826 (* ?x4590 l_0_3_27)))
 (let ((?x4839 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_26) ?x4826) ?x4828) ?x4836) ?x4838)))
 (= (+ ?x4839 ?x4840) 0.0)))))))))))))
(assert
 (let ((?x3874 (* l_0_3_40 l_0_3_40)))
 (let ((?x3868 (* l_0_3_39 l_0_3_39)))
 (let ((?x3862 (* l_0_3_38 l_0_3_38)))
 (let ((?x3856 (* l_0_3_37 l_0_3_37)))
 (let ((?x3581 (* l_0_3_36 l_0_3_36)))
 (let ((?x3575 (* l_0_3_35 l_0_3_35)))
 (let ((?x3569 (* l_0_3_34 l_0_3_34)))
 (let ((?x3816 (* l_0_3_25 l_0_3_25)))
 (let ((?x3813 (* l_0_3_24 l_0_3_24)))
 (let ((?x3810 (* l_0_3_23 l_0_3_23)))
 (let ((?x3807 (* l_0_3_22 l_0_3_22)))
 (let ((?x3528 (* l_0_3_21 l_0_3_21)))
 (let ((?x4856 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3528) ?x3807)))
 (let ((?x4869 (+ (- (- (- (- (- (- ?x4856 ?x3810) ?x3813) ?x3816) ?x3569) ?x3575) ?x3581) ?x3856)))
 (= (+ (+ (+ ?x4869 ?x3862) ?x3868) ?x3874) 0.0))))))))))))))))
(assert
 (let ((?x4915 (* 2.0 l_0_3_40)))
 (let ((?x4916 (* ?x4915 l_0_3_44)))
 (let ((?x4912 (* 2.0 l_0_3_39)))
 (let ((?x4913 (* ?x4912 l_0_3_43)))
 (let ((?x4909 (* 2.0 l_0_3_38)))
 (let ((?x4910 (* ?x4909 l_0_3_42)))
 (let ((?x4906 (* 2.0 l_0_3_37)))
 (let ((?x4907 (* ?x4906 l_0_3_41)))
 (let ((?x4903 (* 2.0 l_0_3_25)))
 (let ((?x4904 (* ?x4903 l_0_3_29)))
 (let ((?x4900 (* 2.0 l_0_3_24)))
 (let ((?x4901 (* ?x4900 l_0_3_28)))
 (let ((?x4897 (* 2.0 l_0_3_23)))
 (let ((?x4898 (* ?x4897 l_0_3_27)))
 (let ((?x4908 (+ (- (- (- (* (* (- 2.0) l_0_3_22) l_0_3_26) ?x4898) ?x4901) ?x4904) ?x4907)))
 (= (+ (+ (+ ?x4908 ?x4910) ?x4913) ?x4916) 0.0)))))))))))))))))
(assert
 (let ((?x4090 (* l_0_3_45 l_0_3_45)))
 (let ((?x4084 (* l_0_3_44 l_0_3_44)))
 (let ((?x4078 (* l_0_3_43 l_0_3_43)))
 (let ((?x4072 (* l_0_3_42 l_0_3_42)))
 (let ((?x4066 (* l_0_3_41 l_0_3_41)))
 (let ((?x4025 (* l_0_3_30 l_0_3_30)))
 (let ((?x4022 (* l_0_3_29 l_0_3_29)))
 (let ((?x4019 (* l_0_3_28 l_0_3_28)))
 (let ((?x4939 (- (- (- (* (- l_0_3_26) l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x4019) ?x4022)))
 (= (+ (+ (+ (+ (+ (- ?x4939 ?x4025) ?x4066) ?x4072) ?x4078) ?x4084) ?x4090) 0.0)))))))))))
(assert
 (let ((?x3544 (* 4.0 l_0_3_36)))
 (let ((?x4607 (* ?x3544 l_0_3_39)))
 (let ((?x3541 (* 4.0 l_0_3_35)))
 (let ((?x4604 (* ?x3541 l_0_3_38)))
 (let ((?x3538 (* 4.0 l_0_3_34)))
 (let ((?x4601 (* ?x3538 l_0_3_37)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4543 (* ?x3531 l_0_3_34)))
 (let ((?x3816 (* l_0_3_25 l_0_3_25)))
 (let ((?x4984 (* 2.0 ?x3816)))
 (let ((?x3813 (* l_0_3_24 l_0_3_24)))
 (let ((?x4982 (* 2.0 ?x3813)))
 (let ((?x3810 (* l_0_3_23 l_0_3_23)))
 (let ((?x4980 (* 2.0 ?x3810)))
 (let ((?x3807 (* l_0_3_22 l_0_3_22)))
 (let ((?x4978 (* 2.0 ?x3807)))
 (let ((?x4593 (* 4.0 l_0_3_21)))
 (let ((?x4594 (* ?x4593 l_0_3_24)))
 (let ((?x4587 (* 4.0 l_0_3_20)))
 (let ((?x4588 (* ?x4587 l_0_3_23)))
 (let ((?x4581 (* 4.0 l_0_3_19)))
 (let ((?x4582 (* ?x4581 l_0_3_22)))
 (let ((?x4979 (+ (- (- (- (* (* 2.0 l_0_3_16) l_0_3_19) ?x4582) ?x4588) ?x4594) ?x4978)))
 (let ((?x4989 (+ (+ (+ (- (+ (+ (+ ?x4979 ?x4980) ?x4982) ?x4984) ?x4543) ?x4601) ?x4604) ?x4607)))
 (let ((?x4993 (- (- ?x4989 (* (* 2.0 l_0_3_37) l_0_3_37)) (* (* 2.0 l_0_3_38) l_0_3_38))))
 (let ((?x4997 (- (- ?x4993 (* (* 2.0 l_0_3_39) l_0_3_39)) (* (* 2.0 l_0_3_40) l_0_3_40))))
 (= ?x4997 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3874 (* l_0_3_40 l_0_3_40)))
 (let ((?x5028 (* 2.0 ?x3874)))
 (let ((?x3868 (* l_0_3_39 l_0_3_39)))
 (let ((?x5023 (* 2.0 ?x3868)))
 (let ((?x3862 (* l_0_3_38 l_0_3_38)))
 (let ((?x5018 (* 2.0 ?x3862)))
 (let ((?x3856 (* l_0_3_37 l_0_3_37)))
 (let ((?x5013 (* 2.0 ?x3856)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4599 (* ?x3531 l_0_3_37)))
 (let ((?x5037 (- (* (* 2.0 l_0_3_16) l_0_3_22) (* (* 2.0 l_0_3_22) l_0_3_22))))
 (let ((?x5041 (- (- ?x5037 (* (* 2.0 l_0_3_23) l_0_3_23)) (* (* 2.0 l_0_3_24) l_0_3_24))))
 (let ((?x5046 (+ (+ (- (- ?x5041 (* (* 2.0 l_0_3_25) l_0_3_25)) ?x4599) ?x5013) ?x5018)))
 (= (+ (+ ?x5046 ?x5023) ?x5028) 0.0)))))))))))))))
(assert
 (let ((?x3831 (* 4.0 l_0_3_40)))
 (let ((?x3832 (* ?x3831 l_0_3_40)))
 (let ((?x5098 (* ?x3831 l_0_3_44)))
 (let ((?x3828 (* 4.0 l_0_3_39)))
 (let ((?x3829 (* ?x3828 l_0_3_39)))
 (let ((?x5095 (* ?x3828 l_0_3_43)))
 (let ((?x3825 (* 4.0 l_0_3_38)))
 (let ((?x3826 (* ?x3825 l_0_3_38)))
 (let ((?x5092 (* ?x3825 l_0_3_42)))
 (let ((?x3822 (* 4.0 l_0_3_37)))
 (let ((?x3823 (* ?x3822 l_0_3_37)))
 (let ((?x5089 (* ?x3822 l_0_3_41)))
 (let ((?x3531 (* 2.0 l_0_3_31)))
 (let ((?x4663 (* ?x3531 l_0_3_41)))
 (let ((?x3816 (* l_0_3_25 l_0_3_25)))
 (let ((?x3817 (* 4.0 ?x3816)))
 (let ((?x5085 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x3813 (* l_0_3_24 l_0_3_24)))
 (let ((?x3814 (* 4.0 ?x3813)))
 (let ((?x5081 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x3810 (* l_0_3_23 l_0_3_23)))
 (let ((?x3811 (* 4.0 ?x3810)))
 (let ((?x5077 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x3807 (* l_0_3_22 l_0_3_22)))
 (let ((?x3808 (* 4.0 ?x3807)))
 (let ((?x5073 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x5079 (+ (- (+ (- (* (* 2.0 l_0_3_16) l_0_3_26) ?x5073) ?x3808) ?x5077) ?x3811)))
 (let ((?x5091 (- (+ (- (+ (- (+ (- ?x5079 ?x5081) ?x3814) ?x5085) ?x3817) ?x4663) ?x5089) ?x3823)))
 (= (- (+ (- (+ (- (+ ?x5091 ?x5092) ?x3826) ?x5095) ?x3829) ?x5098) ?x3832) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x3341 (* l_0_3_33 l_0_3_33)))
 (let ((?x3335 (* l_0_3_32 l_0_3_32)))
 (let ((?x5148 (- (- (+ (* l_0_3_17 l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x3335) ?x3341)))
 (= ?x5148 0.0)))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4729 (* ?x3371 l_0_3_35)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4727 (* ?x3365 l_0_3_34)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4725 (* ?x3422 l_0_3_20)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x4725) ?x4727) ?x4729) 0.0))))))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4748 (* ?x3371 l_0_3_38)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4746 (* ?x3365 l_0_3_37)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4739 (* ?x3422 l_0_3_23)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_22) ?x4739) ?x4746) ?x4748) 0.0))))))))
(assert
 (let ((?x3371 (* 2.0 l_0_3_33)))
 (let ((?x4767 (* ?x3371 l_0_3_42)))
 (let ((?x3365 (* 2.0 l_0_3_32)))
 (let ((?x4765 (* ?x3365 l_0_3_41)))
 (let ((?x3422 (* 2.0 l_0_3_18)))
 (let ((?x4758 (* ?x3422 l_0_3_27)))
 (= (- (- (+ (* (* 2.0 l_0_3_17) l_0_3_26) ?x4758) ?x4765) ?x4767) 0.0))))))))
(assert
 (let ((?x4551 (* 2.0 l_0_3_36)))
 (let ((?x4811 (* ?x4551 l_0_3_39)))
 (let ((?x4548 (* 2.0 l_0_3_35)))
 (let ((?x4809 (* ?x4548 l_0_3_38)))
 (let ((?x4545 (* 2.0 l_0_3_34)))
 (let ((?x4807 (* ?x4545 l_0_3_37)))
 (let ((?x4596 (* 2.0 l_0_3_21)))
 (let ((?x4805 (* ?x4596 l_0_3_24)))
 (let ((?x4590 (* 2.0 l_0_3_20)))
 (let ((?x4803 (* ?x4590 l_0_3_23)))
 (let ((?x5196 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_22) ?x4803) ?x4805) ?x4807) ?x4809)))
 (= (- ?x5196 ?x4811) 0.0)))))))))))))
(assert
 (let ((?x4551 (* 2.0 l_0_3_36)))
 (let ((?x4840 (* ?x4551 l_0_3_43)))
 (let ((?x4548 (* 2.0 l_0_3_35)))
 (let ((?x4838 (* ?x4548 l_0_3_42)))
 (let ((?x4545 (* 2.0 l_0_3_34)))
 (let ((?x4836 (* ?x4545 l_0_3_41)))
 (let ((?x4596 (* 2.0 l_0_3_21)))
 (let ((?x4828 (* ?x4596 l_0_3_28)))
 (let ((?x4590 (* 2.0 l_0_3_20)))
 (let ((?x4826 (* ?x4590 l_0_3_27)))
 (let ((?x5215 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_26) ?x4826) ?x4828) ?x4836) ?x4838)))
 (= (- ?x5215 ?x4840) 0.0)))))))))))))
(assert
 (let ((?x3874 (* l_0_3_40 l_0_3_40)))
 (let ((?x3868 (* l_0_3_39 l_0_3_39)))
 (let ((?x3862 (* l_0_3_38 l_0_3_38)))
 (let ((?x3856 (* l_0_3_37 l_0_3_37)))
 (let ((?x3816 (* l_0_3_25 l_0_3_25)))
 (let ((?x3813 (* l_0_3_24 l_0_3_24)))
 (let ((?x5232 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x3813) ?x3816)))
 (= (- (- (- (- ?x5232 ?x3856) ?x3862) ?x3868) ?x3874) 0.0)))))))))
(assert
 (let ((?x4915 (* 2.0 l_0_3_40)))
 (let ((?x4916 (* ?x4915 l_0_3_44)))
 (let ((?x4912 (* 2.0 l_0_3_39)))
 (let ((?x4913 (* ?x4912 l_0_3_43)))
 (let ((?x4909 (* 2.0 l_0_3_38)))
 (let ((?x4910 (* ?x4909 l_0_3_42)))
 (let ((?x4906 (* 2.0 l_0_3_37)))
 (let ((?x4907 (* ?x4906 l_0_3_41)))
 (let ((?x4903 (* 2.0 l_0_3_25)))
 (let ((?x4904 (* ?x4903 l_0_3_29)))
 (let ((?x4900 (* 2.0 l_0_3_24)))
 (let ((?x4901 (* ?x4900 l_0_3_28)))
 (let ((?x4897 (* 2.0 l_0_3_23)))
 (let ((?x4898 (* ?x4897 l_0_3_27)))
 (let ((?x5256 (- (+ (+ (+ (* (* 2.0 l_0_3_22) l_0_3_26) ?x4898) ?x4901) ?x4904) ?x4907)))
 (= (- (- (- ?x5256 ?x4910) ?x4913) ?x4916) 0.0)))))))))))))))))
(assert
 (let ((?x4090 (* l_0_3_45 l_0_3_45)))
 (let ((?x4084 (* l_0_3_44 l_0_3_44)))
 (let ((?x4078 (* l_0_3_43 l_0_3_43)))
 (let ((?x4072 (* l_0_3_42 l_0_3_42)))
 (let ((?x4066 (* l_0_3_41 l_0_3_41)))
 (let ((?x4025 (* l_0_3_30 l_0_3_30)))
 (let ((?x4022 (* l_0_3_29 l_0_3_29)))
 (let ((?x4019 (* l_0_3_28 l_0_3_28)))
 (let ((?x5279 (+ (+ (+ (* l_0_3_26 l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x4019) ?x4022)))
 (= (- (- (- (- (- (+ ?x5279 ?x4025) ?x4066) ?x4072) ?x4078) ?x4084) ?x4090) 0.0)))))))))))
(assert
 (let ((?x3831 (* 4.0 l_0_3_40)))
 (let ((?x5098 (* ?x3831 l_0_3_44)))
 (let ((?x3828 (* 4.0 l_0_3_39)))
 (let ((?x5095 (* ?x3828 l_0_3_43)))
 (let ((?x3825 (* 4.0 l_0_3_38)))
 (let ((?x5092 (* ?x3825 l_0_3_42)))
 (let ((?x3822 (* 4.0 l_0_3_37)))
 (let ((?x5089 (* ?x3822 l_0_3_41)))
 (let ((?x3544 (* 4.0 l_0_3_36)))
 (let ((?x4671 (* ?x3544 l_0_3_43)))
 (let ((?x3633 (* 8.0 l_0_3_36)))
 (let ((?x3634 (* ?x3633 l_0_3_39)))
 (let ((?x3541 (* 4.0 l_0_3_35)))
 (let ((?x4668 (* ?x3541 l_0_3_42)))
 (let ((?x3630 (* 8.0 l_0_3_35)))
 (let ((?x3631 (* ?x3630 l_0_3_38)))
 (let ((?x3538 (* 4.0 l_0_3_34)))
 (let ((?x4665 (* ?x3538 l_0_3_41)))
 (let ((?x3627 (* 8.0 l_0_3_34)))
 (let ((?x3628 (* ?x3627 l_0_3_37)))
 (let ((?x5085 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x5081 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x5077 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x5073 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x4593 (* 4.0 l_0_3_21)))
 (let ((?x4660 (* ?x4593 l_0_3_28)))
 (let ((?x3618 (* 8.0 l_0_3_21)))
 (let ((?x3619 (* ?x3618 l_0_3_24)))
 (let ((?x4587 (* 4.0 l_0_3_20)))
 (let ((?x4657 (* ?x4587 l_0_3_27)))
 (let ((?x3615 (* 8.0 l_0_3_20)))
 (let ((?x3616 (* ?x3615 l_0_3_23)))
 (let ((?x4581 (* 4.0 l_0_3_19)))
 (let ((?x4654 (* ?x4581 l_0_3_26)))
 (let ((?x3612 (* 8.0 l_0_3_19)))
 (let ((?x3613 (* ?x3612 l_0_3_22)))
 (let ((?x5303 (+ (+ (- (+ (- (+ (- ?x3613 ?x4654) ?x3616) ?x4657) ?x3619) ?x4660) ?x5073) ?x5077)))
 (let ((?x5310 (- (+ (- (+ (- (+ (+ ?x5303 ?x5081) ?x5085) ?x3628) ?x4665) ?x3631) ?x4668) ?x3634)))
 (= (- (- (- (- (+ ?x5310 ?x4671) ?x5089) ?x5092) ?x5095) ?x5098) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3633 (* 8.0 l_0_3_36)))
 (let ((?x3741 (* ?x3633 l_0_3_43)))
 (let ((?x3630 (* 8.0 l_0_3_35)))
 (let ((?x3739 (* ?x3630 l_0_3_42)))
 (let ((?x3627 (* 8.0 l_0_3_34)))
 (let ((?x3737 (* ?x3627 l_0_3_41)))
 (let ((?x4025 (* l_0_3_30 l_0_3_30)))
 (let ((?x5365 (* 2.0 ?x4025)))
 (let ((?x4022 (* l_0_3_29 l_0_3_29)))
 (let ((?x5363 (* 2.0 ?x4022)))
 (let ((?x4019 (* l_0_3_28 l_0_3_28)))
 (let ((?x5361 (* 2.0 ?x4019)))
 (let ((?x4016 (* l_0_3_27 l_0_3_27)))
 (let ((?x5359 (* 2.0 ?x4016)))
 (let ((?x4013 (* l_0_3_26 l_0_3_26)))
 (let ((?x5357 (* 2.0 ?x4013)))
 (let ((?x3618 (* 8.0 l_0_3_21)))
 (let ((?x3729 (* ?x3618 l_0_3_28)))
 (let ((?x3615 (* 8.0 l_0_3_20)))
 (let ((?x3727 (* ?x3615 l_0_3_27)))
 (let ((?x3612 (* 8.0 l_0_3_19)))
 (let ((?x3725 (* ?x3612 l_0_3_26)))
 (let ((?x5366 (+ (+ (+ (+ (+ (+ (+ ?x3725 ?x3727) ?x3729) ?x5357) ?x5359) ?x5361) ?x5363) ?x5365)))
 (let ((?x5372 (- (- (- (- ?x5366 ?x3737) ?x3739) ?x3741) (* (* 2.0 l_0_3_41) l_0_3_41))))
 (let ((?x5378 (- (- ?x5372 (* (* 2.0 l_0_3_42) l_0_3_42)) (* (* 2.0 l_0_3_43) l_0_3_43))))
 (let ((?x5384 (- (- ?x5378 (* (* 2.0 l_0_3_44) l_0_3_44)) (* (* 2.0 l_0_3_45) l_0_3_45))))
 (= ?x5384 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4090 (* l_0_3_45 l_0_3_45)))
 (let ((?x5413 (* 2.0 ?x4090)))
 (let ((?x4084 (* l_0_3_44 l_0_3_44)))
 (let ((?x5408 (* 2.0 ?x4084)))
 (let ((?x4078 (* l_0_3_43 l_0_3_43)))
 (let ((?x5403 (* 2.0 ?x4078)))
 (let ((?x4072 (* l_0_3_42 l_0_3_42)))
 (let ((?x5398 (* 2.0 ?x4072)))
 (let ((?x4066 (* l_0_3_41 l_0_3_41)))
 (let ((?x5393 (* 2.0 ?x4066)))
 (let ((?x3928 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3925 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3922 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3919 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x3912 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3909 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3906 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3903 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x5424 (- (+ (+ (+ ?x3903 ?x3906) ?x3909) ?x3912) (* (* 2.0 l_0_3_26) l_0_3_26))))
 (let ((?x5430 (- (- ?x5424 (* (* 2.0 l_0_3_27) l_0_3_27)) (* (* 2.0 l_0_3_28) l_0_3_28))))
 (let ((?x5436 (- (- ?x5430 (* (* 2.0 l_0_3_29) l_0_3_29)) (* (* 2.0 l_0_3_30) l_0_3_30))))
 (let ((?x5443 (+ (+ (+ (- (- (- (- ?x5436 ?x3919) ?x3922) ?x3925) ?x3928) ?x5393) ?x5398) ?x5403)))
 (= (+ (+ ?x5443 ?x5408) ?x5413) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4043 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x4040 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x4037 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x4034 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x4031 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x4025 (* l_0_3_30 l_0_3_30)))
 (let ((?x4026 (* 4.0 ?x4025)))
 (let ((?x4022 (* l_0_3_29 l_0_3_29)))
 (let ((?x4023 (* 4.0 ?x4022)))
 (let ((?x4019 (* l_0_3_28 l_0_3_28)))
 (let ((?x4020 (* 4.0 ?x4019)))
 (let ((?x4016 (* l_0_3_27 l_0_3_27)))
 (let ((?x4017 (* 4.0 ?x4016)))
 (let ((?x4013 (* l_0_3_26 l_0_3_26)))
 (let ((?x4014 (* 4.0 ?x4013)))
 (let ((?x5484 (- (- (- (+ (+ (+ (+ ?x4014 ?x4017) ?x4020) ?x4023) ?x4026) ?x4031) ?x4034) ?x4037)))
 (= (- (- ?x5484 ?x4040) ?x4043) 0.0))))))))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x5533 (* ?x5532 l_0_4_31)))
 (let ((?x5529 (* l_0_4_16 l_0_4_16)))
 (let ((?x5530 (* 4.0 ?x5529)))
 (let ((?x5531 (+ (- (* (* 2.0 l_0_4_1) l_0_4_2) (* l_0_4_1 l_0_4_1)) ?x5530)))
 (= (+ (- (- ?x5531 ?x5533) (* (* 2.0 l_0_4_61) l_0_4_62)) 1.0) 0.0)))))))
(assert
 (let ((?x5565 (- (- (* 1.0 (* l_0_4_1 l_0_4_1)) (* l_0_4_61 l_0_4_61)) 1.0)))
 (= ?x5565 0.0)))
(assert
 (let ((?x5588 (* l_0_4_63 l_0_4_63)))
 (let ((?x5586 (* l_0_4_62 l_0_4_62)))
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5584 (* ?x5583 l_0_4_32)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5575 (* ?x5574 l_0_4_17)))
 (let ((?x5579 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x5575) (* 1.0 (* l_0_4_2 l_0_4_2)))))
 (let ((?x5589 (- (- (- (+ ?x5579 (* 1.0 (* l_0_4_3 l_0_4_3))) ?x5584) ?x5586) ?x5588)))
 (= ?x5589 0.0))))))))))
(assert
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5625 (* ?x5583 l_0_4_34)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x5623 (* ?x5532 l_0_4_32)))
 (let ((?x5620 (* 2.0 l_0_4_3)))
 (let ((?x5621 (* ?x5620 l_0_4_5)))
 (let ((?x5617 (* 2.0 l_0_4_2)))
 (let ((?x5618 (* ?x5617 l_0_4_4)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5615 (* ?x5574 l_0_4_19)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x5613 (* ?x5612 l_0_4_17)))
 (let ((?x5622 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x5613) ?x5615) ?x5618) ?x5621)))
 (let ((?x5632 (- (- (- (- ?x5622 ?x5623) ?x5625) (* (* 2.0 l_0_4_62) l_0_4_64)) (* (* 2.0 l_0_4_63) l_0_4_65))))
 (= ?x5632 0.0))))))))))))))))
(assert
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5677 (* ?x5583 l_0_4_37)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x5623 (* ?x5532 l_0_4_32)))
 (let ((?x5620 (* 2.0 l_0_4_3)))
 (let ((?x5674 (* ?x5620 l_0_4_8)))
 (let ((?x5617 (* 2.0 l_0_4_2)))
 (let ((?x5672 (* ?x5617 l_0_4_7)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5670 (* ?x5574 l_0_4_22)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x5613 (* ?x5612 l_0_4_17)))
 (let ((?x5675 (+ (+ (+ (- (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x5613) ?x5670) ?x5672) ?x5674)))
 (let ((?x5682 (- (- (- (+ ?x5675 ?x5623) ?x5677) (* (* 2.0 l_0_4_62) l_0_4_67)) (* (* 2.0 l_0_4_63) l_0_4_68))))
 (= ?x5682 0.0))))))))))))))))
(assert
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5732 (* ?x5583 l_0_4_41)))
 (let ((?x5584 (* ?x5583 l_0_4_32)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5729 (* ?x5574 l_0_4_26)))
 (let ((?x5575 (* ?x5574 l_0_4_17)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x5726 (* ?x5725 l_0_4_3)))
 (let ((?x5724 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_11) l_0_4_2))))
 (let ((?x5736 (+ (- (- (+ (+ (+ ?x5724 ?x5726) ?x5575) ?x5729) ?x5584) ?x5732) (* (* 2.0 l_0_4_46) l_0_4_47))))
 (let ((?x5740 (- (- ?x5736 (* (* 2.0 l_0_4_62) l_0_4_71)) (* (* 2.0 l_0_4_63) l_0_4_72))))
 (= ?x5740 0.0)))))))))))))
(assert
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x5786 (* ?x5785 l_0_4_33)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x5783 (* ?x5782 l_0_4_32)))
 (let ((?x5580 (* l_0_4_3 l_0_4_3)))
 (let ((?x5577 (* l_0_4_2 l_0_4_2)))
 (let ((?x5777 (* l_0_4_18 l_0_4_18)))
 (let ((?x5778 (* 4.0 ?x5777)))
 (let ((?x5775 (* l_0_4_17 l_0_4_17)))
 (let ((?x5776 (* 4.0 ?x5775)))
 (= (- (- (- (- (+ ?x5776 ?x5778) ?x5577) ?x5580) ?x5783) ?x5786) 0.0))))))))))))
(assert
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5827 (* ?x5826 l_0_4_35)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5821 (* ?x5820 l_0_4_34)))
 (let ((?x5620 (* 2.0 l_0_4_3)))
 (let ((?x5621 (* ?x5620 l_0_4_5)))
 (let ((?x5617 (* 2.0 l_0_4_2)))
 (let ((?x5618 (* ?x5617 l_0_4_4)))
 (let ((?x5777 (* l_0_4_18 l_0_4_18)))
 (let ((?x5816 (* 2.0 ?x5777)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5814 (* ?x5813 l_0_4_20)))
 (let ((?x5775 (* l_0_4_17 l_0_4_17)))
 (let ((?x5811 (* 2.0 ?x5775)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5810 (* ?x5809 l_0_4_19)))
 (let ((?x5825 (- (- (- (- (+ (+ (+ ?x5810 ?x5811) ?x5814) ?x5816) ?x5618) ?x5621) ?x5821) (* (* 2.0 l_0_4_32) l_0_4_32))))
 (= (- (- ?x5825 ?x5827) (* (* 2.0 l_0_4_33) l_0_4_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x5799 (* l_0_4_33 l_0_4_33)))
 (let ((?x5863 (* 2.0 ?x5799)))
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5888 (* ?x5826 l_0_4_38)))
 (let ((?x5793 (* l_0_4_32 l_0_4_32)))
 (let ((?x5852 (* 2.0 ?x5793)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5885 (* ?x5820 l_0_4_37)))
 (let ((?x5620 (* 2.0 l_0_4_3)))
 (let ((?x5674 (* ?x5620 l_0_4_8)))
 (let ((?x5617 (* 2.0 l_0_4_2)))
 (let ((?x5672 (* ?x5617 l_0_4_7)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5878 (* ?x5813 l_0_4_23)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5874 (* ?x5809 l_0_4_22)))
 (let ((?x5882 (- (+ (- ?x5874 (* (* 2.0 l_0_4_17) l_0_4_17)) ?x5878) (* (* 2.0 l_0_4_18) l_0_4_18))))
 (= (+ (- (+ (- (- (- ?x5882 ?x5672) ?x5674) ?x5885) ?x5852) ?x5888) ?x5863) 0.0)))))))))))))))))))
(assert
 (let ((?x5943 (* l_0_4_48 l_0_4_48)))
 (let ((?x5941 (* l_0_4_47 l_0_4_47)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x5786 (* ?x5785 l_0_4_33)))
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5938 (* ?x5826 l_0_4_42)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x5783 (* ?x5782 l_0_4_32)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5935 (* ?x5820 l_0_4_41)))
 (let ((?x5777 (* l_0_4_18 l_0_4_18)))
 (let ((?x5778 (* 4.0 ?x5777)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5932 (* ?x5813 l_0_4_27)))
 (let ((?x5775 (* l_0_4_17 l_0_4_17)))
 (let ((?x5776 (* 4.0 ?x5775)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5929 (* ?x5809 l_0_4_26)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x5726 (* ?x5725 l_0_4_3)))
 (let ((?x5933 (+ (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x5726) ?x5929) ?x5776) ?x5932)))
 (let ((?x5944 (+ (+ (- (- (- (- (+ ?x5933 ?x5778) ?x5935) ?x5783) ?x5938) ?x5786) ?x5941) ?x5943)))
 (= ?x5944 0.0))))))))))))))))))))))))
(assert
 (let ((?x6015 (* l_0_4_6 l_0_4_6)))
 (let ((?x6013 (* l_0_4_5 l_0_4_5)))
 (let ((?x6011 (* l_0_4_4 l_0_4_4)))
 (let ((?x6008 (* 4.0 l_0_4_36)))
 (let ((?x6009 (* ?x6008 l_0_4_36)))
 (let ((?x6005 (* 4.0 l_0_4_35)))
 (let ((?x6006 (* ?x6005 l_0_4_35)))
 (let ((?x6002 (* 4.0 l_0_4_34)))
 (let ((?x6003 (* ?x6002 l_0_4_34)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x6000 (* ?x5785 l_0_4_35)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x5998 (* ?x5782 l_0_4_34)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x5996 (* ?x5995 l_0_4_32)))
 (let ((?x5992 (* l_0_4_21 l_0_4_21)))
 (let ((?x5993 (* 4.0 ?x5992)))
 (let ((?x5989 (* l_0_4_20 l_0_4_20)))
 (let ((?x5990 (* 4.0 ?x5989)))
 (let ((?x5986 (* l_0_4_19 l_0_4_19)))
 (let ((?x5987 (* 4.0 ?x5986)))
 (let ((?x5983 (* 4.0 l_0_4_18)))
 (let ((?x5984 (* ?x5983 l_0_4_20)))
 (let ((?x5982 (+ (* (* (- 2.0) l_0_4_16) l_0_4_17) (* (* 4.0 l_0_4_17) l_0_4_19))))
 (let ((?x6001 (- (- (+ (+ (+ (+ (+ ?x5982 ?x5984) ?x5987) ?x5990) ?x5993) ?x5996) ?x5998) ?x6000)))
 (= (- (- (- (- (- (- ?x6001 ?x6003) ?x6006) ?x6009) ?x6011) ?x6013) ?x6015) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6107 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6104 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6101 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6097 (* 8.0 l_0_4_36)))
 (let ((?x6098 (* ?x6097 l_0_4_39)))
 (let ((?x6094 (* 8.0 l_0_4_35)))
 (let ((?x6095 (* ?x6094 l_0_4_38)))
 (let ((?x6091 (* 8.0 l_0_4_34)))
 (let ((?x6092 (* ?x6091 l_0_4_37)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x6089 (* ?x5785 l_0_4_38)))
 (let ((?x6000 (* ?x5785 l_0_4_35)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x6086 (* ?x5782 l_0_4_37)))
 (let ((?x5998 (* ?x5782 l_0_4_34)))
 (let ((?x6082 (* 8.0 l_0_4_21)))
 (let ((?x6083 (* ?x6082 l_0_4_24)))
 (let ((?x6079 (* 8.0 l_0_4_20)))
 (let ((?x6080 (* ?x6079 l_0_4_23)))
 (let ((?x6076 (* 8.0 l_0_4_19)))
 (let ((?x6077 (* ?x6076 l_0_4_22)))
 (let ((?x5983 (* 4.0 l_0_4_18)))
 (let ((?x6074 (* ?x5983 l_0_4_23)))
 (let ((?x5984 (* ?x5983 l_0_4_20)))
 (let ((?x5980 (* 4.0 l_0_4_17)))
 (let ((?x6071 (* ?x5980 l_0_4_22)))
 (let ((?x6078 (+ (+ (- (+ (* (* (- 4.0) l_0_4_17) l_0_4_19) ?x6071) ?x5984) ?x6074) ?x6077)))
 (let ((?x6093 (- (- (+ (- (+ (+ (+ ?x6078 ?x6080) ?x6083) ?x5998) ?x6086) ?x6000) ?x6089) ?x6092)))
 (= (- (- (- (- (- ?x6093 ?x6095) ?x6098) ?x6101) ?x6104) ?x6107) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6097 (* 8.0 l_0_4_36)))
 (let ((?x6205 (* ?x6097 l_0_4_43)))
 (let ((?x6094 (* 8.0 l_0_4_35)))
 (let ((?x6203 (* ?x6094 l_0_4_42)))
 (let ((?x6091 (* 8.0 l_0_4_34)))
 (let ((?x6201 (* ?x6091 l_0_4_41)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x6199 (* ?x5785 l_0_4_42)))
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5827 (* ?x5826 l_0_4_35)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x6196 (* ?x5782 l_0_4_41)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5821 (* ?x5820 l_0_4_34)))
 (let ((?x6082 (* 8.0 l_0_4_21)))
 (let ((?x6193 (* ?x6082 l_0_4_28)))
 (let ((?x6079 (* 8.0 l_0_4_20)))
 (let ((?x6191 (* ?x6079 l_0_4_27)))
 (let ((?x6076 (* 8.0 l_0_4_19)))
 (let ((?x6189 (* ?x6076 l_0_4_26)))
 (let ((?x5983 (* 4.0 l_0_4_18)))
 (let ((?x6187 (* ?x5983 l_0_4_27)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5814 (* ?x5813 l_0_4_20)))
 (let ((?x5980 (* 4.0 l_0_4_17)))
 (let ((?x6184 (* ?x5980 l_0_4_26)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5810 (* ?x5809 l_0_4_19)))
 (let ((?x6180 (* 2.0 l_0_4_13)))
 (let ((?x6181 (* ?x6180 l_0_4_6)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x6178 (* ?x5725 l_0_4_5)))
 (let ((?x6185 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x6178) ?x6181) ?x5810) ?x6184)))
 (let ((?x6197 (- (- (+ (+ (+ (+ (+ ?x6185 ?x5814) ?x6187) ?x6189) ?x6191) ?x6193) ?x5821) ?x6196)))
 (let ((?x6209 (+ (- (- (- (- (- ?x6197 ?x5827) ?x6199) ?x6201) ?x6203) ?x6205) (* (* 2.0 l_0_4_47) l_0_4_49))))
 (= (+ ?x6209 (* (* 2.0 l_0_4_48) l_0_4_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6313 (* l_0_4_9 l_0_4_9)))
 (let ((?x6311 (* l_0_4_8 l_0_4_8)))
 (let ((?x6309 (* l_0_4_7 l_0_4_7)))
 (let ((?x6306 (* 4.0 l_0_4_40)))
 (let ((?x6307 (* ?x6306 l_0_4_40)))
 (let ((?x6303 (* 4.0 l_0_4_39)))
 (let ((?x6304 (* ?x6303 l_0_4_39)))
 (let ((?x6300 (* 4.0 l_0_4_38)))
 (let ((?x6301 (* ?x6300 l_0_4_38)))
 (let ((?x6297 (* 4.0 l_0_4_37)))
 (let ((?x6298 (* ?x6297 l_0_4_37)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x6089 (* ?x5785 l_0_4_38)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x6086 (* ?x5782 l_0_4_37)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x5996 (* ?x5995 l_0_4_32)))
 (let ((?x6291 (* l_0_4_25 l_0_4_25)))
 (let ((?x6292 (* 4.0 ?x6291)))
 (let ((?x6288 (* l_0_4_24 l_0_4_24)))
 (let ((?x6289 (* 4.0 ?x6288)))
 (let ((?x6285 (* l_0_4_23 l_0_4_23)))
 (let ((?x6286 (* 4.0 ?x6285)))
 (let ((?x6282 (* l_0_4_22 l_0_4_22)))
 (let ((?x6283 (* 4.0 ?x6282)))
 (let ((?x5983 (* 4.0 l_0_4_18)))
 (let ((?x6074 (* ?x5983 l_0_4_23)))
 (let ((?x5980 (* 4.0 l_0_4_17)))
 (let ((?x6071 (* ?x5980 l_0_4_22)))
 (let ((?x6280 (- (+ (* (- l_0_4_10) l_0_4_10) (* (* 2.0 l_0_4_16) l_0_4_17)) ?x6071)))
 (let ((?x6295 (+ (- (+ (+ (+ (+ (- ?x6280 ?x6074) ?x6283) ?x6286) ?x6289) ?x6292) ?x5996) ?x6086)))
 (let ((?x6312 (- (- (- (- (- (- (+ ?x6295 ?x6089) ?x6298) ?x6301) ?x6304) ?x6307) ?x6309) ?x6311)))
 (= (- ?x6312 ?x6313) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6403 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x6400 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x6397 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x6394 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x5785 (* 4.0 l_0_4_33)))
 (let ((?x6199 (* ?x5785 l_0_4_42)))
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5888 (* ?x5826 l_0_4_38)))
 (let ((?x5782 (* 4.0 l_0_4_32)))
 (let ((?x6196 (* ?x5782 l_0_4_41)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5885 (* ?x5820 l_0_4_37)))
 (let ((?x6387 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6384 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6381 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x6378 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x5983 (* 4.0 l_0_4_18)))
 (let ((?x6187 (* ?x5983 l_0_4_27)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5878 (* ?x5813 l_0_4_23)))
 (let ((?x5980 (* 4.0 l_0_4_17)))
 (let ((?x6184 (* ?x5980 l_0_4_26)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5874 (* ?x5809 l_0_4_22)))
 (let ((?x6180 (* 2.0 l_0_4_13)))
 (let ((?x6371 (* ?x6180 l_0_4_9)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x6369 (* ?x5725 l_0_4_8)))
 (let ((?x5722 (* 2.0 l_0_4_11)))
 (let ((?x6367 (* ?x5722 l_0_4_7)))
 (let ((?x6373 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x6367) ?x6369) ?x6371) ?x5874)))
 (let ((?x6388 (+ (+ (+ (+ (- (+ (- ?x6373 ?x6184) ?x5878) ?x6187) ?x6378) ?x6381) ?x6384) ?x6387)))
 (let ((?x6401 (- (- (- (+ (- (+ (- ?x6388 ?x5885) ?x6196) ?x5888) ?x6199) ?x6394) ?x6397) ?x6400)))
 (let ((?x6408 (+ (+ (- ?x6401 ?x6403) (* (* 2.0 l_0_4_47) l_0_4_52)) (* (* 2.0 l_0_4_48) l_0_4_53))))
 (= ?x6408 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6527 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6524 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6521 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6518 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6515 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x5826 (* 8.0 l_0_4_33)))
 (let ((?x5938 (* ?x5826 l_0_4_42)))
 (let ((?x5820 (* 8.0 l_0_4_32)))
 (let ((?x5935 (* ?x5820 l_0_4_41)))
 (let ((?x6509 (* l_0_4_30 l_0_4_30)))
 (let ((?x6510 (* 4.0 ?x6509)))
 (let ((?x6506 (* l_0_4_29 l_0_4_29)))
 (let ((?x6507 (* 4.0 ?x6506)))
 (let ((?x6503 (* l_0_4_28 l_0_4_28)))
 (let ((?x6504 (* 4.0 ?x6503)))
 (let ((?x6500 (* l_0_4_27 l_0_4_27)))
 (let ((?x6501 (* 4.0 ?x6500)))
 (let ((?x6497 (* l_0_4_26 l_0_4_26)))
 (let ((?x6498 (* 4.0 ?x6497)))
 (let ((?x5813 (* 8.0 l_0_4_18)))
 (let ((?x5932 (* ?x5813 l_0_4_27)))
 (let ((?x5809 (* 8.0 l_0_4_17)))
 (let ((?x5929 (* ?x5809 l_0_4_26)))
 (let ((?x6493 (* l_0_4_15 l_0_4_15)))
 (let ((?x6491 (* l_0_4_14 l_0_4_14)))
 (let ((?x6489 (* l_0_4_13 l_0_4_13)))
 (let ((?x6492 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x6489) ?x6491)))
 (let ((?x6508 (+ (+ (+ (+ (+ (+ (- ?x6492 ?x6493) ?x5929) ?x5932) ?x6498) ?x6501) ?x6504) ?x6507)))
 (let ((?x6525 (- (- (- (- (- (- (+ ?x6508 ?x6510) ?x5935) ?x5938) ?x6515) ?x6518) ?x6521) ?x6524)))
 (let ((?x6532 (+ (+ (- ?x6525 ?x6527) (* (* 2.0 l_0_4_47) l_0_4_56)) (* (* 2.0 l_0_4_48) l_0_4_57))))
 (= ?x6532 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x5529 (* l_0_4_16 l_0_4_16)))
 (let ((?x6591 (* 2.0 ?x5529)))
 (let ((?x6594 (- (+ (* (* 2.0 l_0_4_1) l_0_4_4) ?x6591) (* (* 2.0 l_0_4_31) l_0_4_31))))
 (= (- ?x6594 (* (* 2.0 l_0_4_61) l_0_4_64)) 0.0)))))
(assert
 (let ((?x6614 (- (* (* 2.0 l_0_4_1) l_0_4_7) (* (* 2.0 l_0_4_16) l_0_4_16))))
 (let ((?x6617 (- (+ ?x6614 (* 2.0 (* l_0_4_31 l_0_4_31))) (* (* 2.0 l_0_4_61) l_0_4_67))))
 (= ?x6617 0.0))))
(assert
 (let ((?x6635 (* l_0_4_46 l_0_4_46)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x5533 (* ?x5532 l_0_4_31)))
 (let ((?x5529 (* l_0_4_16 l_0_4_16)))
 (let ((?x5530 (* 4.0 ?x5529)))
 (let ((?x6638 (- (+ (- (+ (* (* 2.0 l_0_4_1) l_0_4_11) ?x5530) ?x5533) ?x6635) (* (* 2.0 l_0_4_61) l_0_4_71))))
 (= ?x6638 0.0))))))))
(assert
 (let ((?x6667 (* l_0_4_66 l_0_4_66)))
 (let ((?x6665 (* l_0_4_65 l_0_4_65)))
 (let ((?x6663 (* l_0_4_64 l_0_4_64)))
 (let ((?x5546 (* l_0_4_31 l_0_4_31)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x6654 (* ?x5532 l_0_4_34)))
 (let ((?x6655 (- (- (* (* 4.0 l_0_4_16) l_0_4_19) (* l_0_4_16 l_0_4_16)) ?x6654)))
 (let ((?x6660 (+ (+ (+ ?x6655 ?x5546) (* 1.0 (* l_0_4_4 l_0_4_4))) (* 1.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x6668 (- (- (- (+ ?x6660 (* 1.0 (* l_0_4_6 l_0_4_6))) ?x6663) ?x6665) ?x6667)))
 (= ?x6668 0.0)))))))))))
(assert
 (let ((?x6107 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6104 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6101 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x6698 (* ?x5532 l_0_4_37)))
 (let ((?x6654 (* ?x5532 l_0_4_34)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x6695 (* ?x5612 l_0_4_22)))
 (let ((?x6700 (+ (- (+ (+ (* (* (- 4.0) l_0_4_16) l_0_4_19) ?x6695) ?x6654) ?x6698) ?x6101)))
 (let ((?x6708 (- (- (+ (+ ?x6700 ?x6104) ?x6107) (* (* 2.0 l_0_4_64) l_0_4_67)) (* (* 2.0 l_0_4_65) l_0_4_68))))
 (= (- ?x6708 (* (* 2.0 l_0_4_66) l_0_4_69)) 0.0))))))))))))
(assert
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x6749 (* ?x5532 l_0_4_41)))
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5625 (* ?x5583 l_0_4_34)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x6746 (* ?x5612 l_0_4_26)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5615 (* ?x5574 l_0_4_19)))
 (let ((?x6180 (* 2.0 l_0_4_13)))
 (let ((?x6181 (* ?x6180 l_0_4_6)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x6178 (* ?x5725 l_0_4_5)))
 (let ((?x6747 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x6178) ?x6181) ?x5615) ?x6746)))
 (let ((?x6754 (- (+ (- (- ?x6747 ?x5625) ?x6749) (* (* 2.0 l_0_4_46) l_0_4_49)) (* (* 2.0 l_0_4_64) l_0_4_71))))
 (let ((?x6758 (- (- ?x6754 (* (* 2.0 l_0_4_65) l_0_4_72)) (* (* 2.0 l_0_4_66) l_0_4_73))))
 (= ?x6758 0.0)))))))))))))))))
(assert
 (let ((?x6805 (* l_0_4_70 l_0_4_70)))
 (let ((?x6801 (* l_0_4_69 l_0_4_69)))
 (let ((?x6799 (* l_0_4_68 l_0_4_68)))
 (let ((?x6797 (* l_0_4_67 l_0_4_67)))
 (let ((?x5546 (* l_0_4_31 l_0_4_31)))
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x6698 (* ?x5532 l_0_4_37)))
 (let ((?x5529 (* l_0_4_16 l_0_4_16)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x6695 (* ?x5612 l_0_4_22)))
 (let ((?x6796 (- (+ (+ (- (* 1.0 (* l_0_4_10 l_0_4_10)) ?x6695) ?x5529) ?x6698) ?x5546)))
 (let ((?x6804 (+ (- (- (- ?x6796 ?x6797) ?x6799) ?x6801) (* 1.0 (* l_0_4_7 l_0_4_7)))))
 (let ((?x6810 (+ (+ (- ?x6804 ?x6805) (* 1.0 (* l_0_4_8 l_0_4_8))) (* 1.0 (* l_0_4_9 l_0_4_9)))))
 (= ?x6810 0.0)))))))))))))))
(assert
 (let ((?x5532 (* 4.0 l_0_4_31)))
 (let ((?x6749 (* ?x5532 l_0_4_41)))
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5677 (* ?x5583 l_0_4_37)))
 (let ((?x5612 (* 4.0 l_0_4_16)))
 (let ((?x6746 (* ?x5612 l_0_4_26)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5670 (* ?x5574 l_0_4_22)))
 (let ((?x6180 (* 2.0 l_0_4_13)))
 (let ((?x6371 (* ?x6180 l_0_4_9)))
 (let ((?x5725 (* 2.0 l_0_4_12)))
 (let ((?x6369 (* ?x5725 l_0_4_8)))
 (let ((?x5722 (* 2.0 l_0_4_11)))
 (let ((?x6367 (* ?x5722 l_0_4_7)))
 (let ((?x6838 (+ (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x6367) ?x6369) ?x6371) ?x5670)))
 (let ((?x6843 (+ (+ (- (- ?x6838 ?x6746) ?x5677) ?x6749) (* (* 2.0 l_0_4_46) l_0_4_52))))
 (let ((?x6849 (- (- ?x6843 (* (* 2.0 l_0_4_67) l_0_4_71)) (* (* 2.0 l_0_4_68) l_0_4_72))))
 (let ((?x6855 (- (- ?x6849 (* (* 2.0 l_0_4_69) l_0_4_73)) (* (* 2.0 l_0_4_70) l_0_4_74))))
 (= ?x6855 0.0))))))))))))))))))))
(assert
 (let ((?x6914 (* l_0_4_75 l_0_4_75)))
 (let ((?x6912 (* l_0_4_74 l_0_4_74)))
 (let ((?x6910 (* l_0_4_73 l_0_4_73)))
 (let ((?x6908 (* l_0_4_72 l_0_4_72)))
 (let ((?x6906 (* l_0_4_71 l_0_4_71)))
 (let ((?x5583 (* 8.0 l_0_4_31)))
 (let ((?x5732 (* ?x5583 l_0_4_41)))
 (let ((?x5574 (* 8.0 l_0_4_16)))
 (let ((?x5729 (* ?x5574 l_0_4_26)))
 (let ((?x6895 (+ (* 1.0 (* l_0_4_11 l_0_4_11)) (* 1.0 (* l_0_4_12 l_0_4_12)))))
 (let ((?x6899 (+ (+ ?x6895 (* 1.0 (* l_0_4_13 l_0_4_13))) (* 1.0 (* l_0_4_14 l_0_4_14)))))
 (let ((?x6905 (+ (- (+ (+ ?x6899 (* 1.0 (* l_0_4_15 l_0_4_15))) ?x5729) ?x5732) (* (* 2.0 l_0_4_46) l_0_4_56))))
 (= (- (- (- (- (- ?x6905 ?x6906) ?x6908) ?x6910) ?x6912) ?x6914) 0.0))))))))))))))
(assert
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x6946 (* ?x5995 l_0_4_34)))
 (let ((?x5992 (* l_0_4_21 l_0_4_21)))
 (let ((?x6944 (* 2.0 ?x5992)))
 (let ((?x5989 (* l_0_4_20 l_0_4_20)))
 (let ((?x6942 (* 2.0 ?x5989)))
 (let ((?x5986 (* l_0_4_19 l_0_4_19)))
 (let ((?x6940 (* 2.0 ?x5986)))
 (let ((?x6947 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_19) ?x6940) ?x6942) ?x6944) ?x6946)))
 (let ((?x6953 (- (- ?x6947 (* (* 2.0 l_0_4_34) l_0_4_34)) (* (* 2.0 l_0_4_35) l_0_4_35))))
 (= (- ?x6953 (* (* 2.0 l_0_4_36) l_0_4_36)) 0.0))))))))))))
(assert
 (let ((?x6045 (* l_0_4_36 l_0_4_36)))
 (let ((?x6971 (* 2.0 ?x6045)))
 (let ((?x6008 (* 4.0 l_0_4_36)))
 (let ((?x7010 (* ?x6008 l_0_4_39)))
 (let ((?x6039 (* l_0_4_35 l_0_4_35)))
 (let ((?x6966 (* 2.0 ?x6039)))
 (let ((?x6005 (* 4.0 l_0_4_35)))
 (let ((?x7007 (* ?x6005 l_0_4_38)))
 (let ((?x6033 (* l_0_4_34 l_0_4_34)))
 (let ((?x6961 (* 2.0 ?x6033)))
 (let ((?x6002 (* 4.0 l_0_4_34)))
 (let ((?x7004 (* ?x6002 l_0_4_37)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x7002 (* ?x5995 l_0_4_37)))
 (let ((?x6996 (* 4.0 l_0_4_21)))
 (let ((?x6997 (* ?x6996 l_0_4_24)))
 (let ((?x6990 (* 4.0 l_0_4_20)))
 (let ((?x6991 (* ?x6990 l_0_4_23)))
 (let ((?x6984 (* 4.0 l_0_4_19)))
 (let ((?x6985 (* ?x6984 l_0_4_22)))
 (let ((?x6989 (- (+ (* (* (- 2.0) l_0_4_16) l_0_4_22) ?x6985) (* (* 2.0 l_0_4_19) l_0_4_19))))
 (let ((?x7001 (- (+ (- (+ ?x6989 ?x6991) (* (* 2.0 l_0_4_20) l_0_4_20)) ?x6997) (* (* 2.0 l_0_4_21) l_0_4_21))))
 (let ((?x7012 (+ (- (+ (- (+ (- (+ ?x7001 ?x7002) ?x7004) ?x6961) ?x7007) ?x6966) ?x7010) ?x6971)))
 (= ?x7012 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7081 (* l_0_4_51 l_0_4_51)))
 (let ((?x7079 (* l_0_4_50 l_0_4_50)))
 (let ((?x7077 (* l_0_4_49 l_0_4_49)))
 (let ((?x6008 (* 4.0 l_0_4_36)))
 (let ((?x6009 (* ?x6008 l_0_4_36)))
 (let ((?x7074 (* ?x6008 l_0_4_43)))
 (let ((?x6005 (* 4.0 l_0_4_35)))
 (let ((?x6006 (* ?x6005 l_0_4_35)))
 (let ((?x7071 (* ?x6005 l_0_4_42)))
 (let ((?x6002 (* 4.0 l_0_4_34)))
 (let ((?x6003 (* ?x6002 l_0_4_34)))
 (let ((?x7068 (* ?x6002 l_0_4_41)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x7066 (* ?x5995 l_0_4_41)))
 (let ((?x5992 (* l_0_4_21 l_0_4_21)))
 (let ((?x5993 (* 4.0 ?x5992)))
 (let ((?x6996 (* 4.0 l_0_4_21)))
 (let ((?x7063 (* ?x6996 l_0_4_28)))
 (let ((?x5989 (* l_0_4_20 l_0_4_20)))
 (let ((?x5990 (* 4.0 ?x5989)))
 (let ((?x6990 (* 4.0 l_0_4_20)))
 (let ((?x7060 (* ?x6990 l_0_4_27)))
 (let ((?x5986 (* l_0_4_19 l_0_4_19)))
 (let ((?x5987 (* 4.0 ?x5986)))
 (let ((?x6984 (* 4.0 l_0_4_19)))
 (let ((?x7057 (* ?x6984 l_0_4_26)))
 (let ((?x7062 (+ (+ (+ (+ (* (* (- 2.0) l_0_4_16) l_0_4_26) ?x7057) ?x5987) ?x7060) ?x5990)))
 (let ((?x7073 (- (- (- (- (+ (+ (+ ?x7062 ?x7063) ?x5993) ?x7066) ?x7068) ?x6003) ?x7071) ?x6006)))
 (= (+ (+ (+ (- (- ?x7073 ?x7074) ?x6009) ?x7077) ?x7079) ?x7081) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5799 (* l_0_4_33 l_0_4_33)))
 (let ((?x5793 (* l_0_4_32 l_0_4_32)))
 (let ((?x7125 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5793) ?x5799)))
 (= ?x7125 0.0)))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7141 (* ?x5829 l_0_4_35)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7139 (* ?x5823 l_0_4_34)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7137 (* ?x5880 l_0_4_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x7137) ?x7139) ?x7141) 0.0))))))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7160 (* ?x5829 l_0_4_38)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7158 (* ?x5823 l_0_4_37)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7151 (* ?x5880 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x7151) ?x7158) ?x7160) 0.0))))))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7179 (* ?x5829 l_0_4_42)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7177 (* ?x5823 l_0_4_41)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7170 (* ?x5880 l_0_4_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_26) ?x7170) ?x7177) ?x7179) 0.0))))))))
(assert
 (let ((?x6045 (* l_0_4_36 l_0_4_36)))
 (let ((?x6039 (* l_0_4_35 l_0_4_35)))
 (let ((?x6033 (* l_0_4_34 l_0_4_34)))
 (let ((?x5992 (* l_0_4_21 l_0_4_21)))
 (let ((?x7197 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5992) ?x6033)))
 (= (+ (+ ?x7197 ?x6039) ?x6045) 0.0)))))))
(assert
 (let ((?x6954 (* 2.0 l_0_4_36)))
 (let ((?x7223 (* ?x6954 l_0_4_39)))
 (let ((?x6951 (* 2.0 l_0_4_35)))
 (let ((?x7221 (* ?x6951 l_0_4_38)))
 (let ((?x6948 (* 2.0 l_0_4_34)))
 (let ((?x7219 (* ?x6948 l_0_4_37)))
 (let ((?x6999 (* 2.0 l_0_4_21)))
 (let ((?x7217 (* ?x6999 l_0_4_24)))
 (let ((?x6993 (* 2.0 l_0_4_20)))
 (let ((?x7215 (* ?x6993 l_0_4_23)))
 (let ((?x7222 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x7215) ?x7217) ?x7219) ?x7221)))
 (= (+ ?x7222 ?x7223) 0.0)))))))))))))
(assert
 (let ((?x6954 (* 2.0 l_0_4_36)))
 (let ((?x7252 (* ?x6954 l_0_4_43)))
 (let ((?x6951 (* 2.0 l_0_4_35)))
 (let ((?x7250 (* ?x6951 l_0_4_42)))
 (let ((?x6948 (* 2.0 l_0_4_34)))
 (let ((?x7248 (* ?x6948 l_0_4_41)))
 (let ((?x6999 (* 2.0 l_0_4_21)))
 (let ((?x7240 (* ?x6999 l_0_4_28)))
 (let ((?x6993 (* 2.0 l_0_4_20)))
 (let ((?x7238 (* ?x6993 l_0_4_27)))
 (let ((?x7251 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_26) ?x7238) ?x7240) ?x7248) ?x7250)))
 (= (+ ?x7251 ?x7252) 0.0)))))))))))))
(assert
 (let ((?x6349 (* l_0_4_40 l_0_4_40)))
 (let ((?x6343 (* l_0_4_39 l_0_4_39)))
 (let ((?x6337 (* l_0_4_38 l_0_4_38)))
 (let ((?x6331 (* l_0_4_37 l_0_4_37)))
 (let ((?x6045 (* l_0_4_36 l_0_4_36)))
 (let ((?x6039 (* l_0_4_35 l_0_4_35)))
 (let ((?x6033 (* l_0_4_34 l_0_4_34)))
 (let ((?x6291 (* l_0_4_25 l_0_4_25)))
 (let ((?x6288 (* l_0_4_24 l_0_4_24)))
 (let ((?x6285 (* l_0_4_23 l_0_4_23)))
 (let ((?x6282 (* l_0_4_22 l_0_4_22)))
 (let ((?x5992 (* l_0_4_21 l_0_4_21)))
 (let ((?x7268 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5992) ?x6282)))
 (let ((?x7281 (+ (- (- (- (- (- (- ?x7268 ?x6285) ?x6288) ?x6291) ?x6033) ?x6039) ?x6045) ?x6331)))
 (= (+ (+ (+ ?x7281 ?x6337) ?x6343) ?x6349) 0.0))))))))))))))))
(assert
 (let ((?x7327 (* 2.0 l_0_4_40)))
 (let ((?x7328 (* ?x7327 l_0_4_44)))
 (let ((?x7324 (* 2.0 l_0_4_39)))
 (let ((?x7325 (* ?x7324 l_0_4_43)))
 (let ((?x7321 (* 2.0 l_0_4_38)))
 (let ((?x7322 (* ?x7321 l_0_4_42)))
 (let ((?x7318 (* 2.0 l_0_4_37)))
 (let ((?x7319 (* ?x7318 l_0_4_41)))
 (let ((?x7315 (* 2.0 l_0_4_25)))
 (let ((?x7316 (* ?x7315 l_0_4_29)))
 (let ((?x7312 (* 2.0 l_0_4_24)))
 (let ((?x7313 (* ?x7312 l_0_4_28)))
 (let ((?x7309 (* 2.0 l_0_4_23)))
 (let ((?x7310 (* ?x7309 l_0_4_27)))
 (let ((?x7320 (+ (- (- (- (* (* (- 2.0) l_0_4_22) l_0_4_26) ?x7310) ?x7313) ?x7316) ?x7319)))
 (= (+ (+ (+ ?x7320 ?x7322) ?x7325) ?x7328) 0.0)))))))))))))))))
(assert
 (let ((?x6578 (* l_0_4_45 l_0_4_45)))
 (let ((?x6572 (* l_0_4_44 l_0_4_44)))
 (let ((?x6566 (* l_0_4_43 l_0_4_43)))
 (let ((?x6560 (* l_0_4_42 l_0_4_42)))
 (let ((?x6554 (* l_0_4_41 l_0_4_41)))
 (let ((?x6509 (* l_0_4_30 l_0_4_30)))
 (let ((?x6506 (* l_0_4_29 l_0_4_29)))
 (let ((?x6503 (* l_0_4_28 l_0_4_28)))
 (let ((?x7351 (- (- (- (* (- l_0_4_26) l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x6503) ?x6506)))
 (= (+ (+ (+ (+ (+ (- ?x7351 ?x6509) ?x6554) ?x6560) ?x6566) ?x6572) ?x6578) 0.0)))))))))))
(assert
 (let ((?x6008 (* 4.0 l_0_4_36)))
 (let ((?x7010 (* ?x6008 l_0_4_39)))
 (let ((?x6005 (* 4.0 l_0_4_35)))
 (let ((?x7007 (* ?x6005 l_0_4_38)))
 (let ((?x6002 (* 4.0 l_0_4_34)))
 (let ((?x7004 (* ?x6002 l_0_4_37)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x6946 (* ?x5995 l_0_4_34)))
 (let ((?x6291 (* l_0_4_25 l_0_4_25)))
 (let ((?x7396 (* 2.0 ?x6291)))
 (let ((?x6288 (* l_0_4_24 l_0_4_24)))
 (let ((?x7394 (* 2.0 ?x6288)))
 (let ((?x6285 (* l_0_4_23 l_0_4_23)))
 (let ((?x7392 (* 2.0 ?x6285)))
 (let ((?x6282 (* l_0_4_22 l_0_4_22)))
 (let ((?x7390 (* 2.0 ?x6282)))
 (let ((?x6996 (* 4.0 l_0_4_21)))
 (let ((?x6997 (* ?x6996 l_0_4_24)))
 (let ((?x6990 (* 4.0 l_0_4_20)))
 (let ((?x6991 (* ?x6990 l_0_4_23)))
 (let ((?x6984 (* 4.0 l_0_4_19)))
 (let ((?x6985 (* ?x6984 l_0_4_22)))
 (let ((?x7391 (+ (- (- (- (* (* 2.0 l_0_4_16) l_0_4_19) ?x6985) ?x6991) ?x6997) ?x7390)))
 (let ((?x7401 (+ (+ (+ (- (+ (+ (+ ?x7391 ?x7392) ?x7394) ?x7396) ?x6946) ?x7004) ?x7007) ?x7010)))
 (let ((?x7405 (- (- ?x7401 (* (* 2.0 l_0_4_37) l_0_4_37)) (* (* 2.0 l_0_4_38) l_0_4_38))))
 (let ((?x7409 (- (- ?x7405 (* (* 2.0 l_0_4_39) l_0_4_39)) (* (* 2.0 l_0_4_40) l_0_4_40))))
 (= ?x7409 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6349 (* l_0_4_40 l_0_4_40)))
 (let ((?x7440 (* 2.0 ?x6349)))
 (let ((?x6343 (* l_0_4_39 l_0_4_39)))
 (let ((?x7435 (* 2.0 ?x6343)))
 (let ((?x6337 (* l_0_4_38 l_0_4_38)))
 (let ((?x7430 (* 2.0 ?x6337)))
 (let ((?x6331 (* l_0_4_37 l_0_4_37)))
 (let ((?x7425 (* 2.0 ?x6331)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x7002 (* ?x5995 l_0_4_37)))
 (let ((?x7449 (- (* (* 2.0 l_0_4_16) l_0_4_22) (* (* 2.0 l_0_4_22) l_0_4_22))))
 (let ((?x7453 (- (- ?x7449 (* (* 2.0 l_0_4_23) l_0_4_23)) (* (* 2.0 l_0_4_24) l_0_4_24))))
 (let ((?x7458 (+ (+ (- (- ?x7453 (* (* 2.0 l_0_4_25) l_0_4_25)) ?x7002) ?x7425) ?x7430)))
 (= (+ (+ ?x7458 ?x7435) ?x7440) 0.0)))))))))))))))
(assert
 (let ((?x7519 (* l_0_4_55 l_0_4_55)))
 (let ((?x7517 (* l_0_4_54 l_0_4_54)))
 (let ((?x7515 (* l_0_4_53 l_0_4_53)))
 (let ((?x7513 (* l_0_4_52 l_0_4_52)))
 (let ((?x6306 (* 4.0 l_0_4_40)))
 (let ((?x6307 (* ?x6306 l_0_4_40)))
 (let ((?x7510 (* ?x6306 l_0_4_44)))
 (let ((?x6303 (* 4.0 l_0_4_39)))
 (let ((?x6304 (* ?x6303 l_0_4_39)))
 (let ((?x7507 (* ?x6303 l_0_4_43)))
 (let ((?x6300 (* 4.0 l_0_4_38)))
 (let ((?x6301 (* ?x6300 l_0_4_38)))
 (let ((?x7504 (* ?x6300 l_0_4_42)))
 (let ((?x6297 (* 4.0 l_0_4_37)))
 (let ((?x6298 (* ?x6297 l_0_4_37)))
 (let ((?x7501 (* ?x6297 l_0_4_41)))
 (let ((?x5995 (* 2.0 l_0_4_31)))
 (let ((?x7066 (* ?x5995 l_0_4_41)))
 (let ((?x6291 (* l_0_4_25 l_0_4_25)))
 (let ((?x6292 (* 4.0 ?x6291)))
 (let ((?x7497 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x6288 (* l_0_4_24 l_0_4_24)))
 (let ((?x6289 (* 4.0 ?x6288)))
 (let ((?x7493 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x6285 (* l_0_4_23 l_0_4_23)))
 (let ((?x6286 (* 4.0 ?x6285)))
 (let ((?x7489 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x6282 (* l_0_4_22 l_0_4_22)))
 (let ((?x6283 (* 4.0 ?x6282)))
 (let ((?x7485 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x7491 (+ (- (+ (- (* (* 2.0 l_0_4_16) l_0_4_26) ?x7485) ?x6283) ?x7489) ?x6286)))
 (let ((?x7503 (- (+ (- (+ (- (+ (- ?x7491 ?x7493) ?x6289) ?x7497) ?x6292) ?x7066) ?x7501) ?x6298)))
 (let ((?x7514 (+ (- (+ (- (+ (- (+ ?x7503 ?x7504) ?x6301) ?x7507) ?x6304) ?x7510) ?x6307) ?x7513)))
 (= (+ (+ (+ ?x7514 ?x7515) ?x7517) ?x7519) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5799 (* l_0_4_33 l_0_4_33)))
 (let ((?x5793 (* l_0_4_32 l_0_4_32)))
 (let ((?x7569 (- (- (+ (* l_0_4_17 l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x5793) ?x5799)))
 (= ?x7569 0.0)))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7141 (* ?x5829 l_0_4_35)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7139 (* ?x5823 l_0_4_34)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7137 (* ?x5880 l_0_4_20)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x7137) ?x7139) ?x7141) 0.0))))))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7160 (* ?x5829 l_0_4_38)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7158 (* ?x5823 l_0_4_37)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7151 (* ?x5880 l_0_4_23)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_22) ?x7151) ?x7158) ?x7160) 0.0))))))))
(assert
 (let ((?x5829 (* 2.0 l_0_4_33)))
 (let ((?x7179 (* ?x5829 l_0_4_42)))
 (let ((?x5823 (* 2.0 l_0_4_32)))
 (let ((?x7177 (* ?x5823 l_0_4_41)))
 (let ((?x5880 (* 2.0 l_0_4_18)))
 (let ((?x7170 (* ?x5880 l_0_4_27)))
 (= (- (- (+ (* (* 2.0 l_0_4_17) l_0_4_26) ?x7170) ?x7177) ?x7179) 0.0))))))))
(assert
 (let ((?x6954 (* 2.0 l_0_4_36)))
 (let ((?x7223 (* ?x6954 l_0_4_39)))
 (let ((?x6951 (* 2.0 l_0_4_35)))
 (let ((?x7221 (* ?x6951 l_0_4_38)))
 (let ((?x6948 (* 2.0 l_0_4_34)))
 (let ((?x7219 (* ?x6948 l_0_4_37)))
 (let ((?x6999 (* 2.0 l_0_4_21)))
 (let ((?x7217 (* ?x6999 l_0_4_24)))
 (let ((?x6993 (* 2.0 l_0_4_20)))
 (let ((?x7215 (* ?x6993 l_0_4_23)))
 (let ((?x7617 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_22) ?x7215) ?x7217) ?x7219) ?x7221)))
 (= (- ?x7617 ?x7223) 0.0)))))))))))))
(assert
 (let ((?x6954 (* 2.0 l_0_4_36)))
 (let ((?x7252 (* ?x6954 l_0_4_43)))
 (let ((?x6951 (* 2.0 l_0_4_35)))
 (let ((?x7250 (* ?x6951 l_0_4_42)))
 (let ((?x6948 (* 2.0 l_0_4_34)))
 (let ((?x7248 (* ?x6948 l_0_4_41)))
 (let ((?x6999 (* 2.0 l_0_4_21)))
 (let ((?x7240 (* ?x6999 l_0_4_28)))
 (let ((?x6993 (* 2.0 l_0_4_20)))
 (let ((?x7238 (* ?x6993 l_0_4_27)))
 (let ((?x7636 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_26) ?x7238) ?x7240) ?x7248) ?x7250)))
 (= (- ?x7636 ?x7252) 0.0)))))))))))))
(assert
 (let ((?x6349 (* l_0_4_40 l_0_4_40)))
 (let ((?x6343 (* l_0_4_39 l_0_4_39)))
 (let ((?x6337 (* l_0_4_38 l_0_4_38)))
 (let ((?x6331 (* l_0_4_37 l_0_4_37)))
 (let ((?x6291 (* l_0_4_25 l_0_4_25)))
 (let ((?x6288 (* l_0_4_24 l_0_4_24)))
 (let ((?x7653 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6288) ?x6291)))
 (= (- (- (- (- ?x7653 ?x6331) ?x6337) ?x6343) ?x6349) 0.0)))))))))
(assert
 (let ((?x7327 (* 2.0 l_0_4_40)))
 (let ((?x7328 (* ?x7327 l_0_4_44)))
 (let ((?x7324 (* 2.0 l_0_4_39)))
 (let ((?x7325 (* ?x7324 l_0_4_43)))
 (let ((?x7321 (* 2.0 l_0_4_38)))
 (let ((?x7322 (* ?x7321 l_0_4_42)))
 (let ((?x7318 (* 2.0 l_0_4_37)))
 (let ((?x7319 (* ?x7318 l_0_4_41)))
 (let ((?x7315 (* 2.0 l_0_4_25)))
 (let ((?x7316 (* ?x7315 l_0_4_29)))
 (let ((?x7312 (* 2.0 l_0_4_24)))
 (let ((?x7313 (* ?x7312 l_0_4_28)))
 (let ((?x7309 (* 2.0 l_0_4_23)))
 (let ((?x7310 (* ?x7309 l_0_4_27)))
 (let ((?x7677 (- (+ (+ (+ (* (* 2.0 l_0_4_22) l_0_4_26) ?x7310) ?x7313) ?x7316) ?x7319)))
 (= (- (- (- ?x7677 ?x7322) ?x7325) ?x7328) 0.0)))))))))))))))))
(assert
 (let ((?x6578 (* l_0_4_45 l_0_4_45)))
 (let ((?x6572 (* l_0_4_44 l_0_4_44)))
 (let ((?x6566 (* l_0_4_43 l_0_4_43)))
 (let ((?x6560 (* l_0_4_42 l_0_4_42)))
 (let ((?x6554 (* l_0_4_41 l_0_4_41)))
 (let ((?x6509 (* l_0_4_30 l_0_4_30)))
 (let ((?x6506 (* l_0_4_29 l_0_4_29)))
 (let ((?x6503 (* l_0_4_28 l_0_4_28)))
 (let ((?x7700 (+ (+ (+ (* l_0_4_26 l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x6503) ?x6506)))
 (= (- (- (- (- (- (+ ?x7700 ?x6509) ?x6554) ?x6560) ?x6566) ?x6572) ?x6578) 0.0)))))))))))
(assert
 (let ((?x6306 (* 4.0 l_0_4_40)))
 (let ((?x7510 (* ?x6306 l_0_4_44)))
 (let ((?x6303 (* 4.0 l_0_4_39)))
 (let ((?x7507 (* ?x6303 l_0_4_43)))
 (let ((?x6300 (* 4.0 l_0_4_38)))
 (let ((?x7504 (* ?x6300 l_0_4_42)))
 (let ((?x6297 (* 4.0 l_0_4_37)))
 (let ((?x7501 (* ?x6297 l_0_4_41)))
 (let ((?x6008 (* 4.0 l_0_4_36)))
 (let ((?x7074 (* ?x6008 l_0_4_43)))
 (let ((?x6097 (* 8.0 l_0_4_36)))
 (let ((?x6098 (* ?x6097 l_0_4_39)))
 (let ((?x6005 (* 4.0 l_0_4_35)))
 (let ((?x7071 (* ?x6005 l_0_4_42)))
 (let ((?x6094 (* 8.0 l_0_4_35)))
 (let ((?x6095 (* ?x6094 l_0_4_38)))
 (let ((?x6002 (* 4.0 l_0_4_34)))
 (let ((?x7068 (* ?x6002 l_0_4_41)))
 (let ((?x6091 (* 8.0 l_0_4_34)))
 (let ((?x6092 (* ?x6091 l_0_4_37)))
 (let ((?x7497 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x7493 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x7489 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x7485 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x6996 (* 4.0 l_0_4_21)))
 (let ((?x7063 (* ?x6996 l_0_4_28)))
 (let ((?x6082 (* 8.0 l_0_4_21)))
 (let ((?x6083 (* ?x6082 l_0_4_24)))
 (let ((?x6990 (* 4.0 l_0_4_20)))
 (let ((?x7060 (* ?x6990 l_0_4_27)))
 (let ((?x6079 (* 8.0 l_0_4_20)))
 (let ((?x6080 (* ?x6079 l_0_4_23)))
 (let ((?x6984 (* 4.0 l_0_4_19)))
 (let ((?x7057 (* ?x6984 l_0_4_26)))
 (let ((?x6076 (* 8.0 l_0_4_19)))
 (let ((?x6077 (* ?x6076 l_0_4_22)))
 (let ((?x7724 (+ (+ (- (+ (- (+ (- ?x6077 ?x7057) ?x6080) ?x7060) ?x6083) ?x7063) ?x7485) ?x7489)))
 (let ((?x7731 (- (+ (- (+ (- (+ (+ ?x7724 ?x7493) ?x7497) ?x6092) ?x7068) ?x6095) ?x7071) ?x6098)))
 (let ((?x7739 (+ (- (- (- (- (+ ?x7731 ?x7074) ?x7501) ?x7504) ?x7507) ?x7510) (* (* 2.0 l_0_4_49) l_0_4_52))))
 (let ((?x7745 (+ (+ ?x7739 (* (* 2.0 l_0_4_50) l_0_4_53)) (* (* 2.0 l_0_4_51) l_0_4_54))))
 (= ?x7745 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6097 (* 8.0 l_0_4_36)))
 (let ((?x6205 (* ?x6097 l_0_4_43)))
 (let ((?x6094 (* 8.0 l_0_4_35)))
 (let ((?x6203 (* ?x6094 l_0_4_42)))
 (let ((?x6091 (* 8.0 l_0_4_34)))
 (let ((?x6201 (* ?x6091 l_0_4_41)))
 (let ((?x6509 (* l_0_4_30 l_0_4_30)))
 (let ((?x7802 (* 2.0 ?x6509)))
 (let ((?x6506 (* l_0_4_29 l_0_4_29)))
 (let ((?x7800 (* 2.0 ?x6506)))
 (let ((?x6503 (* l_0_4_28 l_0_4_28)))
 (let ((?x7798 (* 2.0 ?x6503)))
 (let ((?x6500 (* l_0_4_27 l_0_4_27)))
 (let ((?x7796 (* 2.0 ?x6500)))
 (let ((?x6497 (* l_0_4_26 l_0_4_26)))
 (let ((?x7794 (* 2.0 ?x6497)))
 (let ((?x6082 (* 8.0 l_0_4_21)))
 (let ((?x6193 (* ?x6082 l_0_4_28)))
 (let ((?x6079 (* 8.0 l_0_4_20)))
 (let ((?x6191 (* ?x6079 l_0_4_27)))
 (let ((?x6076 (* 8.0 l_0_4_19)))
 (let ((?x6189 (* ?x6076 l_0_4_26)))
 (let ((?x7803 (+ (+ (+ (+ (+ (+ (+ ?x6189 ?x6191) ?x6193) ?x7794) ?x7796) ?x7798) ?x7800) ?x7802)))
 (let ((?x7809 (- (- (- (- ?x7803 ?x6201) ?x6203) ?x6205) (* (* 2.0 l_0_4_41) l_0_4_41))))
 (let ((?x7815 (- (- ?x7809 (* (* 2.0 l_0_4_42) l_0_4_42)) (* (* 2.0 l_0_4_43) l_0_4_43))))
 (let ((?x7821 (- (- ?x7815 (* (* 2.0 l_0_4_44) l_0_4_44)) (* (* 2.0 l_0_4_45) l_0_4_45))))
 (let ((?x7825 (+ (+ ?x7821 (* (* 2.0 l_0_4_49) l_0_4_56)) (* (* 2.0 l_0_4_50) l_0_4_57))))
 (= (+ ?x7825 (* (* 2.0 l_0_4_51) l_0_4_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6578 (* l_0_4_45 l_0_4_45)))
 (let ((?x7856 (* 2.0 ?x6578)))
 (let ((?x6572 (* l_0_4_44 l_0_4_44)))
 (let ((?x7851 (* 2.0 ?x6572)))
 (let ((?x6566 (* l_0_4_43 l_0_4_43)))
 (let ((?x7846 (* 2.0 ?x6566)))
 (let ((?x6560 (* l_0_4_42 l_0_4_42)))
 (let ((?x7841 (* 2.0 ?x6560)))
 (let ((?x6554 (* l_0_4_41 l_0_4_41)))
 (let ((?x7836 (* 2.0 ?x6554)))
 (let ((?x6403 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x6400 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x6397 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x6394 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x6387 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6384 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6381 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x6378 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x7874 (- (+ (+ (+ ?x6378 ?x6381) ?x6384) ?x6387) (* (* 2.0 l_0_4_26) l_0_4_26))))
 (let ((?x7880 (- (- ?x7874 (* (* 2.0 l_0_4_27) l_0_4_27)) (* (* 2.0 l_0_4_28) l_0_4_28))))
 (let ((?x7886 (- (- ?x7880 (* (* 2.0 l_0_4_29) l_0_4_29)) (* (* 2.0 l_0_4_30) l_0_4_30))))
 (let ((?x7893 (+ (+ (+ (- (- (- (- ?x7886 ?x6394) ?x6397) ?x6400) ?x6403) ?x7836) ?x7841) ?x7846)))
 (let ((?x7901 (+ (+ (+ (+ ?x7893 ?x7851) ?x7856) (* (* 2.0 l_0_4_52) l_0_4_56)) (* (* 2.0 l_0_4_53) l_0_4_57))))
 (let ((?x7907 (+ (+ ?x7901 (* (* 2.0 l_0_4_54) l_0_4_58)) (* (* 2.0 l_0_4_55) l_0_4_59))))
 (= ?x7907 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7965 (* l_0_4_60 l_0_4_60)))
 (let ((?x7963 (* l_0_4_59 l_0_4_59)))
 (let ((?x7961 (* l_0_4_58 l_0_4_58)))
 (let ((?x7959 (* l_0_4_57 l_0_4_57)))
 (let ((?x7957 (* l_0_4_56 l_0_4_56)))
 (let ((?x6527 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6524 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6521 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6518 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6515 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x6509 (* l_0_4_30 l_0_4_30)))
 (let ((?x6510 (* 4.0 ?x6509)))
 (let ((?x6506 (* l_0_4_29 l_0_4_29)))
 (let ((?x6507 (* 4.0 ?x6506)))
 (let ((?x6503 (* l_0_4_28 l_0_4_28)))
 (let ((?x6504 (* 4.0 ?x6503)))
 (let ((?x6500 (* l_0_4_27 l_0_4_27)))
 (let ((?x6501 (* 4.0 ?x6500)))
 (let ((?x6497 (* l_0_4_26 l_0_4_26)))
 (let ((?x6498 (* 4.0 ?x6497)))
 (let ((?x7954 (- (- (- (+ (+ (+ (+ ?x6498 ?x6501) ?x6504) ?x6507) ?x6510) ?x6515) ?x6518) ?x6521)))
 (let ((?x7966 (+ (+ (+ (+ (+ (- (- ?x7954 ?x6524) ?x6527) ?x7957) ?x7959) ?x7961) ?x7963) ?x7965)))
 (= ?x7966 0.0))))))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (let ((?x8034 (* l_0_5_81 l_0_5_81)))
 (let ((?x8032 (* l_0_5_80 l_0_5_80)))
 (let ((?x8030 (* l_0_5_79 l_0_5_79)))
 (let ((?x8028 (* l_0_5_66 l_0_5_66)))
 (let ((?x8026 (* l_0_5_65 l_0_5_65)))
 (let ((?x8024 (* l_0_5_64 l_0_5_64)))
 (let ((?x8013 (* l_0_5_31 l_0_5_31)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8011 (* ?x8010 l_0_5_34)))
 (let ((?x8012 (- (- (* (* 4.0 l_0_5_16) l_0_5_19) (* l_0_5_16 l_0_5_16)) ?x8011)))
 (let ((?x8020 (+ (+ (+ ?x8012 ?x8013) (* 1.0 (* l_0_5_4 l_0_5_4))) (* 1.0 (* l_0_5_5 l_0_5_5)))))
 (let ((?x8029 (- (- (- (+ ?x8020 (* 1.0 (* l_0_5_6 l_0_5_6))) ?x8024) ?x8026) ?x8028)))
 (= (+ (- (- (- ?x8029 ?x8030) ?x8032) ?x8034) 1.0) 0.0))))))))))))))
(assert
 (let ((?x8008 (* l_0_5_16 l_0_5_16)))
 (let ((?x8079 (* 2.0 ?x8008)))
 (let ((?x8083 (- (+ (+ (* (- 4.0) _a_4_) (* (* 2.0 l_0_5_1) l_0_5_4)) ?x8079) (* (* 2.0 l_0_5_31) l_0_5_31))))
 (let ((?x8089 (- (- ?x8083 (* (* 2.0 l_0_5_61) l_0_5_64)) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= (+ ?x8089 2.0) 0.0))))))
(assert
 (let ((?x8123 (* l_0_5_76 l_0_5_76)))
 (let ((?x8121 (* l_0_5_61 l_0_5_61)))
 (let ((?x8124 (- (- (+ (* (- 4.0) _a_2_) (* 1.0 (* l_0_5_1 l_0_5_1))) ?x8121) ?x8123)))
 (= ?x8124 0.0)))))
(assert
 (let ((?x8165 (* l_0_5_85 l_0_5_85)))
 (let ((?x8163 (* l_0_5_84 l_0_5_84)))
 (let ((?x8161 (* l_0_5_83 l_0_5_83)))
 (let ((?x8159 (* l_0_5_82 l_0_5_82)))
 (let ((?x8154 (* l_0_5_70 l_0_5_70)))
 (let ((?x8149 (* l_0_5_69 l_0_5_69)))
 (let ((?x8147 (* l_0_5_68 l_0_5_68)))
 (let ((?x8145 (* l_0_5_67 l_0_5_67)))
 (let ((?x8013 (* l_0_5_31 l_0_5_31)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8142 (* ?x8010 l_0_5_37)))
 (let ((?x8008 (* l_0_5_16 l_0_5_16)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x8139 (* ?x8006 l_0_5_22)))
 (let ((?x8144 (- (+ (+ (- (* 1.0 (* l_0_5_10 l_0_5_10)) ?x8139) ?x8008) ?x8142) ?x8013)))
 (let ((?x8153 (+ (- (- (- ?x8144 ?x8145) ?x8147) ?x8149) (* 1.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x8162 (- (- (+ (- ?x8153 ?x8154) (* 1.0 (* l_0_5_8 l_0_5_8))) ?x8159) ?x8161)))
 (let ((?x8170 (- (+ (- (- ?x8162 ?x8163) ?x8165) (* 1.0 (* l_0_5_9 l_0_5_9))) 1.0)))
 (= ?x8170 0.0))))))))))))))))))))
(assert
 (let ((?x8013 (* l_0_5_31 l_0_5_31)))
 (let ((?x8095 (* 2.0 ?x8013)))
 (let ((?x8216 (- (* (* 2.0 l_0_5_1) l_0_5_7) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (let ((?x8221 (- (- (+ ?x8216 ?x8095) (* (* 2.0 l_0_5_61) l_0_5_67)) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= (+ ?x8221 2.0) 0.0))))))
(assert
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8249 (* ?x8010 l_0_5_31)))
 (let ((?x8008 (* l_0_5_16 l_0_5_16)))
 (let ((?x8247 (* 4.0 ?x8008)))
 (let ((?x8248 (+ (- (* (* 2.0 l_0_5_1) l_0_5_2) (* l_0_5_1 l_0_5_1)) ?x8247)))
 (let ((?x8254 (- (- (- ?x8248 ?x8249) (* (* 2.0 l_0_5_61) l_0_5_62)) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= (- ?x8254 4.0) 0.0))))))))
(assert
 (let ((?x8288 (* l_0_5_46 l_0_5_46)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8249 (* ?x8010 l_0_5_31)))
 (let ((?x8008 (* l_0_5_16 l_0_5_16)))
 (let ((?x8247 (* 4.0 ?x8008)))
 (let ((?x8287 (- (+ (+ (* (- 4.0) _a_3_) (* (* 2.0 l_0_5_1) l_0_5_11)) ?x8247) ?x8249)))
 (let ((?x8293 (- (- (+ ?x8287 ?x8288) (* (* 2.0 l_0_5_61) l_0_5_71)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= ?x8293 0.0)))))))))
(assert
 (let ((?x8339 (* l_0_5_78 l_0_5_78)))
 (let ((?x8337 (* l_0_5_77 l_0_5_77)))
 (let ((?x8335 (* l_0_5_63 l_0_5_63)))
 (let ((?x8333 (* l_0_5_62 l_0_5_62)))
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8331 (* ?x8330 l_0_5_32)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8322 (* ?x8321 l_0_5_17)))
 (let ((?x8326 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x8322) (* 1.0 (* l_0_5_2 l_0_5_2)))))
 (let ((?x8336 (- (- (- (+ ?x8326 (* 1.0 (* l_0_5_3 l_0_5_3))) ?x8331) ?x8333) ?x8335)))
 (= (- (- ?x8336 ?x8337) ?x8339) 0.0))))))))))))
(assert
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8382 (* ?x8330 l_0_5_34)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8380 (* ?x8010 l_0_5_32)))
 (let ((?x8377 (* 2.0 l_0_5_3)))
 (let ((?x8378 (* ?x8377 l_0_5_5)))
 (let ((?x8374 (* 2.0 l_0_5_2)))
 (let ((?x8375 (* ?x8374 l_0_5_4)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8372 (* ?x8321 l_0_5_19)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x8370 (* ?x8006 l_0_5_17)))
 (let ((?x8379 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x8370) ?x8372) ?x8375) ?x8378)))
 (let ((?x8389 (- (- (- (- ?x8379 ?x8380) ?x8382) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 2.0 l_0_5_63) l_0_5_65))))
 (let ((?x8395 (- (- ?x8389 (* (* 2.0 l_0_5_77) l_0_5_79)) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (= ?x8395 0.0)))))))))))))))))
(assert
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8448 (* ?x8330 l_0_5_37)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8380 (* ?x8010 l_0_5_32)))
 (let ((?x8377 (* 2.0 l_0_5_3)))
 (let ((?x8445 (* ?x8377 l_0_5_8)))
 (let ((?x8374 (* 2.0 l_0_5_2)))
 (let ((?x8443 (* ?x8374 l_0_5_7)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8441 (* ?x8321 l_0_5_22)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x8370 (* ?x8006 l_0_5_17)))
 (let ((?x8446 (+ (+ (+ (- (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x8370) ?x8441) ?x8443) ?x8445)))
 (let ((?x8453 (- (- (- (+ ?x8446 ?x8380) ?x8448) (* (* 2.0 l_0_5_62) l_0_5_67)) (* (* 2.0 l_0_5_63) l_0_5_68))))
 (let ((?x8457 (- (- ?x8453 (* (* 2.0 l_0_5_77) l_0_5_82)) (* (* 2.0 l_0_5_78) l_0_5_83))))
 (= ?x8457 0.0)))))))))))))))))
(assert
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8510 (* ?x8330 l_0_5_41)))
 (let ((?x8331 (* ?x8330 l_0_5_32)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8507 (* ?x8321 l_0_5_26)))
 (let ((?x8322 (* ?x8321 l_0_5_17)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x8504 (* ?x8503 l_0_5_3)))
 (let ((?x8502 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_11) l_0_5_2))))
 (let ((?x8514 (+ (- (- (+ (+ (+ ?x8502 ?x8504) ?x8322) ?x8507) ?x8331) ?x8510) (* (* 2.0 l_0_5_46) l_0_5_47))))
 (let ((?x8518 (- (- ?x8514 (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (let ((?x8522 (- (- ?x8518 (* (* 2.0 l_0_5_77) l_0_5_86)) (* (* 2.0 l_0_5_78) l_0_5_87))))
 (= ?x8522 0.0))))))))))))))
(assert
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8583 (* ?x8582 l_0_5_33)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8580 (* ?x8579 l_0_5_32)))
 (let ((?x8327 (* l_0_5_3 l_0_5_3)))
 (let ((?x8324 (* l_0_5_2 l_0_5_2)))
 (let ((?x8574 (* l_0_5_18 l_0_5_18)))
 (let ((?x8575 (* 4.0 ?x8574)))
 (let ((?x8572 (* l_0_5_17 l_0_5_17)))
 (let ((?x8573 (* 4.0 ?x8572)))
 (= (- (- (- (- (+ ?x8573 ?x8575) ?x8324) ?x8327) ?x8580) ?x8583) 0.0))))))))))))
(assert
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8624 (* ?x8623 l_0_5_35)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8618 (* ?x8617 l_0_5_34)))
 (let ((?x8377 (* 2.0 l_0_5_3)))
 (let ((?x8378 (* ?x8377 l_0_5_5)))
 (let ((?x8374 (* 2.0 l_0_5_2)))
 (let ((?x8375 (* ?x8374 l_0_5_4)))
 (let ((?x8574 (* l_0_5_18 l_0_5_18)))
 (let ((?x8613 (* 2.0 ?x8574)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8611 (* ?x8610 l_0_5_20)))
 (let ((?x8572 (* l_0_5_17 l_0_5_17)))
 (let ((?x8608 (* 2.0 ?x8572)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8607 (* ?x8606 l_0_5_19)))
 (let ((?x8622 (- (- (- (- (+ (+ (+ ?x8607 ?x8608) ?x8611) ?x8613) ?x8375) ?x8378) ?x8618) (* (* 2.0 l_0_5_32) l_0_5_32))))
 (= (- (- ?x8622 ?x8624) (* (* 2.0 l_0_5_33) l_0_5_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x8596 (* l_0_5_33 l_0_5_33)))
 (let ((?x8660 (* 2.0 ?x8596)))
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8685 (* ?x8623 l_0_5_38)))
 (let ((?x8590 (* l_0_5_32 l_0_5_32)))
 (let ((?x8649 (* 2.0 ?x8590)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8682 (* ?x8617 l_0_5_37)))
 (let ((?x8377 (* 2.0 l_0_5_3)))
 (let ((?x8445 (* ?x8377 l_0_5_8)))
 (let ((?x8374 (* 2.0 l_0_5_2)))
 (let ((?x8443 (* ?x8374 l_0_5_7)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8675 (* ?x8610 l_0_5_23)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8671 (* ?x8606 l_0_5_22)))
 (let ((?x8679 (- (+ (- ?x8671 (* (* 2.0 l_0_5_17) l_0_5_17)) ?x8675) (* (* 2.0 l_0_5_18) l_0_5_18))))
 (= (+ (- (+ (- (- (- ?x8679 ?x8443) ?x8445) ?x8682) ?x8649) ?x8685) ?x8660) 0.0)))))))))))))))))))
(assert
 (let ((?x8742 (* l_0_5_48 l_0_5_48)))
 (let ((?x8740 (* l_0_5_47 l_0_5_47)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8583 (* ?x8582 l_0_5_33)))
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8737 (* ?x8623 l_0_5_42)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8580 (* ?x8579 l_0_5_32)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8734 (* ?x8617 l_0_5_41)))
 (let ((?x8574 (* l_0_5_18 l_0_5_18)))
 (let ((?x8575 (* 4.0 ?x8574)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8731 (* ?x8610 l_0_5_27)))
 (let ((?x8572 (* l_0_5_17 l_0_5_17)))
 (let ((?x8573 (* 4.0 ?x8572)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8728 (* ?x8606 l_0_5_26)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x8504 (* ?x8503 l_0_5_3)))
 (let ((?x8732 (+ (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x8504) ?x8728) ?x8573) ?x8731)))
 (let ((?x8743 (+ (+ (- (- (- (- (+ ?x8732 ?x8575) ?x8734) ?x8580) ?x8737) ?x8583) ?x8740) ?x8742)))
 (= ?x8743 0.0))))))))))))))))))))))))
(assert
 (let ((?x8021 (* l_0_5_6 l_0_5_6)))
 (let ((?x8018 (* l_0_5_5 l_0_5_5)))
 (let ((?x8015 (* l_0_5_4 l_0_5_4)))
 (let ((?x8804 (* 4.0 l_0_5_36)))
 (let ((?x8805 (* ?x8804 l_0_5_36)))
 (let ((?x8801 (* 4.0 l_0_5_35)))
 (let ((?x8802 (* ?x8801 l_0_5_35)))
 (let ((?x8798 (* 4.0 l_0_5_34)))
 (let ((?x8799 (* ?x8798 l_0_5_34)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8796 (* ?x8582 l_0_5_35)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8794 (* ?x8579 l_0_5_34)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x8792 (* ?x8081 l_0_5_32)))
 (let ((?x8789 (* l_0_5_21 l_0_5_21)))
 (let ((?x8790 (* 4.0 ?x8789)))
 (let ((?x8786 (* l_0_5_20 l_0_5_20)))
 (let ((?x8787 (* 4.0 ?x8786)))
 (let ((?x8783 (* l_0_5_19 l_0_5_19)))
 (let ((?x8784 (* 4.0 ?x8783)))
 (let ((?x8780 (* 4.0 l_0_5_18)))
 (let ((?x8781 (* ?x8780 l_0_5_20)))
 (let ((?x8779 (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) (* (* 4.0 l_0_5_17) l_0_5_19))))
 (let ((?x8797 (- (- (+ (+ (+ (+ (+ ?x8779 ?x8781) ?x8784) ?x8787) ?x8790) ?x8792) ?x8794) ?x8796)))
 (= (- (- (- (- (- (- ?x8797 ?x8799) ?x8802) ?x8805) ?x8015) ?x8018) ?x8021) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8897 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x8894 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x8891 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8887 (* 8.0 l_0_5_36)))
 (let ((?x8888 (* ?x8887 l_0_5_39)))
 (let ((?x8884 (* 8.0 l_0_5_35)))
 (let ((?x8885 (* ?x8884 l_0_5_38)))
 (let ((?x8881 (* 8.0 l_0_5_34)))
 (let ((?x8882 (* ?x8881 l_0_5_37)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8879 (* ?x8582 l_0_5_38)))
 (let ((?x8796 (* ?x8582 l_0_5_35)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8876 (* ?x8579 l_0_5_37)))
 (let ((?x8794 (* ?x8579 l_0_5_34)))
 (let ((?x8872 (* 8.0 l_0_5_21)))
 (let ((?x8873 (* ?x8872 l_0_5_24)))
 (let ((?x8869 (* 8.0 l_0_5_20)))
 (let ((?x8870 (* ?x8869 l_0_5_23)))
 (let ((?x8866 (* 8.0 l_0_5_19)))
 (let ((?x8867 (* ?x8866 l_0_5_22)))
 (let ((?x8780 (* 4.0 l_0_5_18)))
 (let ((?x8864 (* ?x8780 l_0_5_23)))
 (let ((?x8781 (* ?x8780 l_0_5_20)))
 (let ((?x8777 (* 4.0 l_0_5_17)))
 (let ((?x8861 (* ?x8777 l_0_5_22)))
 (let ((?x8868 (+ (+ (- (+ (* (* (- 4.0) l_0_5_17) l_0_5_19) ?x8861) ?x8781) ?x8864) ?x8867)))
 (let ((?x8883 (- (- (+ (- (+ (+ (+ ?x8868 ?x8870) ?x8873) ?x8794) ?x8876) ?x8796) ?x8879) ?x8882)))
 (= (- (- (- (- (- ?x8883 ?x8885) ?x8888) ?x8891) ?x8894) ?x8897) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x8887 (* 8.0 l_0_5_36)))
 (let ((?x8995 (* ?x8887 l_0_5_43)))
 (let ((?x8884 (* 8.0 l_0_5_35)))
 (let ((?x8993 (* ?x8884 l_0_5_42)))
 (let ((?x8881 (* 8.0 l_0_5_34)))
 (let ((?x8991 (* ?x8881 l_0_5_41)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8989 (* ?x8582 l_0_5_42)))
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8624 (* ?x8623 l_0_5_35)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8986 (* ?x8579 l_0_5_41)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8618 (* ?x8617 l_0_5_34)))
 (let ((?x8872 (* 8.0 l_0_5_21)))
 (let ((?x8983 (* ?x8872 l_0_5_28)))
 (let ((?x8869 (* 8.0 l_0_5_20)))
 (let ((?x8981 (* ?x8869 l_0_5_27)))
 (let ((?x8866 (* 8.0 l_0_5_19)))
 (let ((?x8979 (* ?x8866 l_0_5_26)))
 (let ((?x8780 (* 4.0 l_0_5_18)))
 (let ((?x8977 (* ?x8780 l_0_5_27)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8611 (* ?x8610 l_0_5_20)))
 (let ((?x8777 (* 4.0 l_0_5_17)))
 (let ((?x8974 (* ?x8777 l_0_5_26)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8607 (* ?x8606 l_0_5_19)))
 (let ((?x8970 (* 2.0 l_0_5_13)))
 (let ((?x8971 (* ?x8970 l_0_5_6)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x8968 (* ?x8503 l_0_5_5)))
 (let ((?x8975 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x8968) ?x8971) ?x8607) ?x8974)))
 (let ((?x8987 (- (- (+ (+ (+ (+ (+ ?x8975 ?x8611) ?x8977) ?x8979) ?x8981) ?x8983) ?x8618) ?x8986)))
 (let ((?x8999 (+ (- (- (- (- (- ?x8987 ?x8624) ?x8989) ?x8991) ?x8993) ?x8995) (* (* 2.0 l_0_5_47) l_0_5_49))))
 (= (+ ?x8999 (* (* 2.0 l_0_5_48) l_0_5_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8167 (* l_0_5_9 l_0_5_9)))
 (let ((?x8156 (* l_0_5_8 l_0_5_8)))
 (let ((?x8151 (* l_0_5_7 l_0_5_7)))
 (let ((?x9095 (* 4.0 l_0_5_40)))
 (let ((?x9096 (* ?x9095 l_0_5_40)))
 (let ((?x9092 (* 4.0 l_0_5_39)))
 (let ((?x9093 (* ?x9092 l_0_5_39)))
 (let ((?x9089 (* 4.0 l_0_5_38)))
 (let ((?x9090 (* ?x9089 l_0_5_38)))
 (let ((?x9086 (* 4.0 l_0_5_37)))
 (let ((?x9087 (* ?x9086 l_0_5_37)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8879 (* ?x8582 l_0_5_38)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8876 (* ?x8579 l_0_5_37)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x8792 (* ?x8081 l_0_5_32)))
 (let ((?x9080 (* l_0_5_25 l_0_5_25)))
 (let ((?x9081 (* 4.0 ?x9080)))
 (let ((?x9077 (* l_0_5_24 l_0_5_24)))
 (let ((?x9078 (* 4.0 ?x9077)))
 (let ((?x9074 (* l_0_5_23 l_0_5_23)))
 (let ((?x9075 (* 4.0 ?x9074)))
 (let ((?x9071 (* l_0_5_22 l_0_5_22)))
 (let ((?x9072 (* 4.0 ?x9071)))
 (let ((?x8780 (* 4.0 l_0_5_18)))
 (let ((?x8864 (* ?x8780 l_0_5_23)))
 (let ((?x8777 (* 4.0 l_0_5_17)))
 (let ((?x8861 (* ?x8777 l_0_5_22)))
 (let ((?x9069 (- (+ (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_16) l_0_5_17)) ?x8861)))
 (let ((?x9084 (+ (- (+ (+ (+ (+ (- ?x9069 ?x8864) ?x9072) ?x9075) ?x9078) ?x9081) ?x8792) ?x8876)))
 (let ((?x9099 (- (- (- (- (- (- (+ ?x9084 ?x8879) ?x9087) ?x9090) ?x9093) ?x9096) ?x8151) ?x8156)))
 (= (- ?x9099 ?x8167) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9193 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x9190 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x9187 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x9184 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x8582 (* 4.0 l_0_5_33)))
 (let ((?x8989 (* ?x8582 l_0_5_42)))
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8685 (* ?x8623 l_0_5_38)))
 (let ((?x8579 (* 4.0 l_0_5_32)))
 (let ((?x8986 (* ?x8579 l_0_5_41)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8682 (* ?x8617 l_0_5_37)))
 (let ((?x9177 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x9174 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x9171 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x9168 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x8780 (* 4.0 l_0_5_18)))
 (let ((?x8977 (* ?x8780 l_0_5_27)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8675 (* ?x8610 l_0_5_23)))
 (let ((?x8777 (* 4.0 l_0_5_17)))
 (let ((?x8974 (* ?x8777 l_0_5_26)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8671 (* ?x8606 l_0_5_22)))
 (let ((?x8970 (* 2.0 l_0_5_13)))
 (let ((?x9161 (* ?x8970 l_0_5_9)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x9159 (* ?x8503 l_0_5_8)))
 (let ((?x8500 (* 2.0 l_0_5_11)))
 (let ((?x9157 (* ?x8500 l_0_5_7)))
 (let ((?x9163 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x9157) ?x9159) ?x9161) ?x8671)))
 (let ((?x9178 (+ (+ (+ (+ (- (+ (- ?x9163 ?x8974) ?x8675) ?x8977) ?x9168) ?x9171) ?x9174) ?x9177)))
 (let ((?x9191 (- (- (- (+ (- (+ (- ?x9178 ?x8682) ?x8986) ?x8685) ?x8989) ?x9184) ?x9187) ?x9190)))
 (let ((?x9198 (+ (+ (- ?x9191 ?x9193) (* (* 2.0 l_0_5_47) l_0_5_52)) (* (* 2.0 l_0_5_48) l_0_5_53))))
 (= ?x9198 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9317 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x9314 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x9311 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x9308 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x9305 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x8623 (* 8.0 l_0_5_33)))
 (let ((?x8737 (* ?x8623 l_0_5_42)))
 (let ((?x8617 (* 8.0 l_0_5_32)))
 (let ((?x8734 (* ?x8617 l_0_5_41)))
 (let ((?x9299 (* l_0_5_30 l_0_5_30)))
 (let ((?x9300 (* 4.0 ?x9299)))
 (let ((?x9296 (* l_0_5_29 l_0_5_29)))
 (let ((?x9297 (* 4.0 ?x9296)))
 (let ((?x9293 (* l_0_5_28 l_0_5_28)))
 (let ((?x9294 (* 4.0 ?x9293)))
 (let ((?x9290 (* l_0_5_27 l_0_5_27)))
 (let ((?x9291 (* 4.0 ?x9290)))
 (let ((?x9287 (* l_0_5_26 l_0_5_26)))
 (let ((?x9288 (* 4.0 ?x9287)))
 (let ((?x8610 (* 8.0 l_0_5_18)))
 (let ((?x8731 (* ?x8610 l_0_5_27)))
 (let ((?x8606 (* 8.0 l_0_5_17)))
 (let ((?x8728 (* ?x8606 l_0_5_26)))
 (let ((?x9283 (* l_0_5_15 l_0_5_15)))
 (let ((?x9281 (* l_0_5_14 l_0_5_14)))
 (let ((?x9279 (* l_0_5_13 l_0_5_13)))
 (let ((?x9282 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x9279) ?x9281)))
 (let ((?x9298 (+ (+ (+ (+ (+ (+ (- ?x9282 ?x9283) ?x8728) ?x8731) ?x9288) ?x9291) ?x9294) ?x9297)))
 (let ((?x9315 (- (- (- (- (- (- (+ ?x9298 ?x9300) ?x8734) ?x8737) ?x9305) ?x9308) ?x9311) ?x9314)))
 (let ((?x9322 (+ (+ (- ?x9315 ?x9317) (* (* 2.0 l_0_5_47) l_0_5_56)) (* (* 2.0 l_0_5_48) l_0_5_57))))
 (= ?x9322 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8897 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x8894 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x8891 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x8142 (* ?x8010 l_0_5_37)))
 (let ((?x8011 (* ?x8010 l_0_5_34)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x8139 (* ?x8006 l_0_5_22)))
 (let ((?x9385 (+ (- (+ (+ (* (* (- 4.0) l_0_5_16) l_0_5_19) ?x8139) ?x8011) ?x8142) ?x8891)))
 (let ((?x9393 (- (- (+ (+ ?x9385 ?x8894) ?x8897) (* (* 2.0 l_0_5_64) l_0_5_67)) (* (* 2.0 l_0_5_65) l_0_5_68))))
 (let ((?x9399 (- (- ?x9393 (* (* 2.0 l_0_5_66) l_0_5_69)) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x9405 (- (- ?x9399 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x9405 0.0))))))))))))))
(assert
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x9458 (* ?x8010 l_0_5_41)))
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8382 (* ?x8330 l_0_5_34)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x9455 (* ?x8006 l_0_5_26)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8372 (* ?x8321 l_0_5_19)))
 (let ((?x8970 (* 2.0 l_0_5_13)))
 (let ((?x8971 (* ?x8970 l_0_5_6)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x8968 (* ?x8503 l_0_5_5)))
 (let ((?x9456 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x8968) ?x8971) ?x8372) ?x9455)))
 (let ((?x9463 (- (+ (- (- ?x9456 ?x8382) ?x9458) (* (* 2.0 l_0_5_46) l_0_5_49)) (* (* 2.0 l_0_5_64) l_0_5_71))))
 (let ((?x9467 (- (- ?x9463 (* (* 2.0 l_0_5_65) l_0_5_72)) (* (* 2.0 l_0_5_66) l_0_5_73))))
 (let ((?x9471 (- (- ?x9467 (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x9471 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0))))))))))))))))))
(assert
 (let ((?x8010 (* 4.0 l_0_5_31)))
 (let ((?x9458 (* ?x8010 l_0_5_41)))
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8448 (* ?x8330 l_0_5_37)))
 (let ((?x8006 (* 4.0 l_0_5_16)))
 (let ((?x9455 (* ?x8006 l_0_5_26)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8441 (* ?x8321 l_0_5_22)))
 (let ((?x8970 (* 2.0 l_0_5_13)))
 (let ((?x9161 (* ?x8970 l_0_5_9)))
 (let ((?x8503 (* 2.0 l_0_5_12)))
 (let ((?x9159 (* ?x8503 l_0_5_8)))
 (let ((?x8500 (* 2.0 l_0_5_11)))
 (let ((?x9157 (* ?x8500 l_0_5_7)))
 (let ((?x9530 (+ (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x9157) ?x9159) ?x9161) ?x8441)))
 (let ((?x9535 (+ (+ (- (- ?x9530 ?x9455) ?x8448) ?x9458) (* (* 2.0 l_0_5_46) l_0_5_52))))
 (let ((?x9541 (- (- ?x9535 (* (* 2.0 l_0_5_67) l_0_5_71)) (* (* 2.0 l_0_5_68) l_0_5_72))))
 (let ((?x9547 (- (- ?x9541 (* (* 2.0 l_0_5_69) l_0_5_73)) (* (* 2.0 l_0_5_70) l_0_5_74))))
 (let ((?x9553 (- (- ?x9547 (* (* 2.0 l_0_5_82) l_0_5_86)) (* (* 2.0 l_0_5_83) l_0_5_87))))
 (let ((?x9559 (- (- ?x9553 (* (* 2.0 l_0_5_84) l_0_5_88)) (* (* 2.0 l_0_5_85) l_0_5_89))))
 (= ?x9559 0.0))))))))))))))))))))))
(assert
 (let ((?x9652 (* l_0_5_90 l_0_5_90)))
 (let ((?x9650 (* l_0_5_89 l_0_5_89)))
 (let ((?x9648 (* l_0_5_88 l_0_5_88)))
 (let ((?x9646 (* l_0_5_87 l_0_5_87)))
 (let ((?x9644 (* l_0_5_86 l_0_5_86)))
 (let ((?x9642 (* l_0_5_75 l_0_5_75)))
 (let ((?x9640 (* l_0_5_74 l_0_5_74)))
 (let ((?x9638 (* l_0_5_73 l_0_5_73)))
 (let ((?x9636 (* l_0_5_72 l_0_5_72)))
 (let ((?x9634 (* l_0_5_71 l_0_5_71)))
 (let ((?x8330 (* 8.0 l_0_5_31)))
 (let ((?x8510 (* ?x8330 l_0_5_41)))
 (let ((?x8321 (* 8.0 l_0_5_16)))
 (let ((?x8507 (* ?x8321 l_0_5_26)))
 (let ((?x9623 (+ (* 1.0 (* l_0_5_11 l_0_5_11)) (* 1.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x9627 (+ (+ ?x9623 (* 1.0 (* l_0_5_13 l_0_5_13))) (* 1.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x9633 (+ (- (+ (+ ?x9627 (* 1.0 (* l_0_5_15 l_0_5_15))) ?x8507) ?x8510) (* (* 2.0 l_0_5_46) l_0_5_56))))
 (let ((?x9647 (- (- (- (- (- (- (- ?x9633 ?x9634) ?x9636) ?x9638) ?x9640) ?x9642) ?x9644) ?x9646)))
 (= (- (- (- ?x9647 ?x9648) ?x9650) ?x9652) 0.0))))))))))))))))))))
(assert
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9699 (* ?x8081 l_0_5_34)))
 (let ((?x8789 (* l_0_5_21 l_0_5_21)))
 (let ((?x9697 (* 2.0 ?x8789)))
 (let ((?x8786 (* l_0_5_20 l_0_5_20)))
 (let ((?x9695 (* 2.0 ?x8786)))
 (let ((?x8783 (* l_0_5_19 l_0_5_19)))
 (let ((?x9693 (* 2.0 ?x8783)))
 (let ((?x9700 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) ?x9693) ?x9695) ?x9697) ?x9699)))
 (let ((?x9706 (- (- ?x9700 (* (* 2.0 l_0_5_34) l_0_5_34)) (* (* 2.0 l_0_5_35) l_0_5_35))))
 (= (- ?x9706 (* (* 2.0 l_0_5_36) l_0_5_36)) 0.0))))))))))))
(assert
 (let ((?x8838 (* l_0_5_36 l_0_5_36)))
 (let ((?x9724 (* 2.0 ?x8838)))
 (let ((?x8804 (* 4.0 l_0_5_36)))
 (let ((?x9763 (* ?x8804 l_0_5_39)))
 (let ((?x8832 (* l_0_5_35 l_0_5_35)))
 (let ((?x9719 (* 2.0 ?x8832)))
 (let ((?x8801 (* 4.0 l_0_5_35)))
 (let ((?x9760 (* ?x8801 l_0_5_38)))
 (let ((?x8826 (* l_0_5_34 l_0_5_34)))
 (let ((?x9714 (* 2.0 ?x8826)))
 (let ((?x8798 (* 4.0 l_0_5_34)))
 (let ((?x9757 (* ?x8798 l_0_5_37)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9755 (* ?x8081 l_0_5_37)))
 (let ((?x9749 (* 4.0 l_0_5_21)))
 (let ((?x9750 (* ?x9749 l_0_5_24)))
 (let ((?x9743 (* 4.0 l_0_5_20)))
 (let ((?x9744 (* ?x9743 l_0_5_23)))
 (let ((?x9737 (* 4.0 l_0_5_19)))
 (let ((?x9738 (* ?x9737 l_0_5_22)))
 (let ((?x9742 (- (+ (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x9738) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x9754 (- (+ (- (+ ?x9742 ?x9744) (* (* 2.0 l_0_5_20) l_0_5_20)) ?x9750) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x9765 (+ (- (+ (- (+ (- (+ ?x9754 ?x9755) ?x9757) ?x9714) ?x9760) ?x9719) ?x9763) ?x9724)))
 (= ?x9765 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9834 (* l_0_5_51 l_0_5_51)))
 (let ((?x9832 (* l_0_5_50 l_0_5_50)))
 (let ((?x9830 (* l_0_5_49 l_0_5_49)))
 (let ((?x8804 (* 4.0 l_0_5_36)))
 (let ((?x8805 (* ?x8804 l_0_5_36)))
 (let ((?x9827 (* ?x8804 l_0_5_43)))
 (let ((?x8801 (* 4.0 l_0_5_35)))
 (let ((?x8802 (* ?x8801 l_0_5_35)))
 (let ((?x9824 (* ?x8801 l_0_5_42)))
 (let ((?x8798 (* 4.0 l_0_5_34)))
 (let ((?x8799 (* ?x8798 l_0_5_34)))
 (let ((?x9821 (* ?x8798 l_0_5_41)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9819 (* ?x8081 l_0_5_41)))
 (let ((?x8789 (* l_0_5_21 l_0_5_21)))
 (let ((?x8790 (* 4.0 ?x8789)))
 (let ((?x9749 (* 4.0 l_0_5_21)))
 (let ((?x9816 (* ?x9749 l_0_5_28)))
 (let ((?x8786 (* l_0_5_20 l_0_5_20)))
 (let ((?x8787 (* 4.0 ?x8786)))
 (let ((?x9743 (* 4.0 l_0_5_20)))
 (let ((?x9813 (* ?x9743 l_0_5_27)))
 (let ((?x8783 (* l_0_5_19 l_0_5_19)))
 (let ((?x8784 (* 4.0 ?x8783)))
 (let ((?x9737 (* 4.0 l_0_5_19)))
 (let ((?x9810 (* ?x9737 l_0_5_26)))
 (let ((?x9815 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_26) ?x9810) ?x8784) ?x9813) ?x8787)))
 (let ((?x9826 (- (- (- (- (+ (+ (+ ?x9815 ?x9816) ?x8790) ?x9819) ?x9821) ?x8799) ?x9824) ?x8802)))
 (= (+ (+ (+ (- (- ?x9826 ?x9827) ?x8805) ?x9830) ?x9832) ?x9834) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x8596 (* l_0_5_33 l_0_5_33)))
 (let ((?x8590 (* l_0_5_32 l_0_5_32)))
 (let ((?x9878 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x8590) ?x8596)))
 (= ?x9878 0.0)))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9894 (* ?x8626 l_0_5_35)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9892 (* ?x8620 l_0_5_34)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9890 (* ?x8677 l_0_5_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x9890) ?x9892) ?x9894) 0.0))))))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9913 (* ?x8626 l_0_5_38)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9911 (* ?x8620 l_0_5_37)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9904 (* ?x8677 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x9904) ?x9911) ?x9913) 0.0))))))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9932 (* ?x8626 l_0_5_42)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9930 (* ?x8620 l_0_5_41)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9923 (* ?x8677 l_0_5_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_26) ?x9923) ?x9930) ?x9932) 0.0))))))))
(assert
 (let ((?x8838 (* l_0_5_36 l_0_5_36)))
 (let ((?x8832 (* l_0_5_35 l_0_5_35)))
 (let ((?x8826 (* l_0_5_34 l_0_5_34)))
 (let ((?x8789 (* l_0_5_21 l_0_5_21)))
 (let ((?x9950 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x8789) ?x8826)))
 (= (+ (+ ?x9950 ?x8832) ?x8838) 0.0)))))))
(assert
 (let ((?x9707 (* 2.0 l_0_5_36)))
 (let ((?x9976 (* ?x9707 l_0_5_39)))
 (let ((?x9704 (* 2.0 l_0_5_35)))
 (let ((?x9974 (* ?x9704 l_0_5_38)))
 (let ((?x9701 (* 2.0 l_0_5_34)))
 (let ((?x9972 (* ?x9701 l_0_5_37)))
 (let ((?x9752 (* 2.0 l_0_5_21)))
 (let ((?x9970 (* ?x9752 l_0_5_24)))
 (let ((?x9746 (* 2.0 l_0_5_20)))
 (let ((?x9968 (* ?x9746 l_0_5_23)))
 (let ((?x9975 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x9968) ?x9970) ?x9972) ?x9974)))
 (= (+ ?x9975 ?x9976) 0.0)))))))))))))
(assert
 (let ((?x9707 (* 2.0 l_0_5_36)))
 (let ((?x10005 (* ?x9707 l_0_5_43)))
 (let ((?x9704 (* 2.0 l_0_5_35)))
 (let ((?x10003 (* ?x9704 l_0_5_42)))
 (let ((?x9701 (* 2.0 l_0_5_34)))
 (let ((?x10001 (* ?x9701 l_0_5_41)))
 (let ((?x9752 (* 2.0 l_0_5_21)))
 (let ((?x9993 (* ?x9752 l_0_5_28)))
 (let ((?x9746 (* 2.0 l_0_5_20)))
 (let ((?x9991 (* ?x9746 l_0_5_27)))
 (let ((?x10004 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_26) ?x9991) ?x9993) ?x10001) ?x10003)))
 (= (+ ?x10004 ?x10005) 0.0)))))))))))))
(assert
 (let ((?x9134 (* l_0_5_40 l_0_5_40)))
 (let ((?x9128 (* l_0_5_39 l_0_5_39)))
 (let ((?x9122 (* l_0_5_38 l_0_5_38)))
 (let ((?x9116 (* l_0_5_37 l_0_5_37)))
 (let ((?x8838 (* l_0_5_36 l_0_5_36)))
 (let ((?x8832 (* l_0_5_35 l_0_5_35)))
 (let ((?x8826 (* l_0_5_34 l_0_5_34)))
 (let ((?x9080 (* l_0_5_25 l_0_5_25)))
 (let ((?x9077 (* l_0_5_24 l_0_5_24)))
 (let ((?x9074 (* l_0_5_23 l_0_5_23)))
 (let ((?x9071 (* l_0_5_22 l_0_5_22)))
 (let ((?x8789 (* l_0_5_21 l_0_5_21)))
 (let ((?x10021 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x8789) ?x9071)))
 (let ((?x10034 (+ (- (- (- (- (- (- ?x10021 ?x9074) ?x9077) ?x9080) ?x8826) ?x8832) ?x8838) ?x9116)))
 (= (+ (+ (+ ?x10034 ?x9122) ?x9128) ?x9134) 0.0))))))))))))))))
(assert
 (let ((?x10080 (* 2.0 l_0_5_40)))
 (let ((?x10081 (* ?x10080 l_0_5_44)))
 (let ((?x10077 (* 2.0 l_0_5_39)))
 (let ((?x10078 (* ?x10077 l_0_5_43)))
 (let ((?x10074 (* 2.0 l_0_5_38)))
 (let ((?x10075 (* ?x10074 l_0_5_42)))
 (let ((?x10071 (* 2.0 l_0_5_37)))
 (let ((?x10072 (* ?x10071 l_0_5_41)))
 (let ((?x10068 (* 2.0 l_0_5_25)))
 (let ((?x10069 (* ?x10068 l_0_5_29)))
 (let ((?x10065 (* 2.0 l_0_5_24)))
 (let ((?x10066 (* ?x10065 l_0_5_28)))
 (let ((?x10062 (* 2.0 l_0_5_23)))
 (let ((?x10063 (* ?x10062 l_0_5_27)))
 (let ((?x10073 (+ (- (- (- (* (* (- 2.0) l_0_5_22) l_0_5_26) ?x10063) ?x10066) ?x10069) ?x10072)))
 (= (+ (+ (+ ?x10073 ?x10075) ?x10078) ?x10081) 0.0)))))))))))))))))
(assert
 (let ((?x9368 (* l_0_5_45 l_0_5_45)))
 (let ((?x9362 (* l_0_5_44 l_0_5_44)))
 (let ((?x9356 (* l_0_5_43 l_0_5_43)))
 (let ((?x9350 (* l_0_5_42 l_0_5_42)))
 (let ((?x9344 (* l_0_5_41 l_0_5_41)))
 (let ((?x9299 (* l_0_5_30 l_0_5_30)))
 (let ((?x9296 (* l_0_5_29 l_0_5_29)))
 (let ((?x9293 (* l_0_5_28 l_0_5_28)))
 (let ((?x10104 (- (- (- (* (- l_0_5_26) l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x9293) ?x9296)))
 (= (+ (+ (+ (+ (+ (- ?x10104 ?x9299) ?x9344) ?x9350) ?x9356) ?x9362) ?x9368) 0.0)))))))))))
(assert
 (let ((?x8804 (* 4.0 l_0_5_36)))
 (let ((?x9763 (* ?x8804 l_0_5_39)))
 (let ((?x8801 (* 4.0 l_0_5_35)))
 (let ((?x9760 (* ?x8801 l_0_5_38)))
 (let ((?x8798 (* 4.0 l_0_5_34)))
 (let ((?x9757 (* ?x8798 l_0_5_37)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9699 (* ?x8081 l_0_5_34)))
 (let ((?x9080 (* l_0_5_25 l_0_5_25)))
 (let ((?x10149 (* 2.0 ?x9080)))
 (let ((?x9077 (* l_0_5_24 l_0_5_24)))
 (let ((?x10147 (* 2.0 ?x9077)))
 (let ((?x9074 (* l_0_5_23 l_0_5_23)))
 (let ((?x10145 (* 2.0 ?x9074)))
 (let ((?x9071 (* l_0_5_22 l_0_5_22)))
 (let ((?x10143 (* 2.0 ?x9071)))
 (let ((?x9749 (* 4.0 l_0_5_21)))
 (let ((?x9750 (* ?x9749 l_0_5_24)))
 (let ((?x9743 (* 4.0 l_0_5_20)))
 (let ((?x9744 (* ?x9743 l_0_5_23)))
 (let ((?x9737 (* 4.0 l_0_5_19)))
 (let ((?x9738 (* ?x9737 l_0_5_22)))
 (let ((?x10144 (+ (- (- (- (* (* 2.0 l_0_5_16) l_0_5_19) ?x9738) ?x9744) ?x9750) ?x10143)))
 (let ((?x10154 (+ (+ (+ (- (+ (+ (+ ?x10144 ?x10145) ?x10147) ?x10149) ?x9699) ?x9757) ?x9760) ?x9763)))
 (let ((?x10158 (- (- ?x10154 (* (* 2.0 l_0_5_37) l_0_5_37)) (* (* 2.0 l_0_5_38) l_0_5_38))))
 (let ((?x10162 (- (- ?x10158 (* (* 2.0 l_0_5_39) l_0_5_39)) (* (* 2.0 l_0_5_40) l_0_5_40))))
 (= ?x10162 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9134 (* l_0_5_40 l_0_5_40)))
 (let ((?x10193 (* 2.0 ?x9134)))
 (let ((?x9128 (* l_0_5_39 l_0_5_39)))
 (let ((?x10188 (* 2.0 ?x9128)))
 (let ((?x9122 (* l_0_5_38 l_0_5_38)))
 (let ((?x10183 (* 2.0 ?x9122)))
 (let ((?x9116 (* l_0_5_37 l_0_5_37)))
 (let ((?x10178 (* 2.0 ?x9116)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9755 (* ?x8081 l_0_5_37)))
 (let ((?x10202 (- (* (* 2.0 l_0_5_16) l_0_5_22) (* (* 2.0 l_0_5_22) l_0_5_22))))
 (let ((?x10206 (- (- ?x10202 (* (* 2.0 l_0_5_23) l_0_5_23)) (* (* 2.0 l_0_5_24) l_0_5_24))))
 (let ((?x10211 (+ (+ (- (- ?x10206 (* (* 2.0 l_0_5_25) l_0_5_25)) ?x9755) ?x10178) ?x10183)))
 (= (+ (+ ?x10211 ?x10188) ?x10193) 0.0)))))))))))))))
(assert
 (let ((?x10272 (* l_0_5_55 l_0_5_55)))
 (let ((?x10270 (* l_0_5_54 l_0_5_54)))
 (let ((?x10268 (* l_0_5_53 l_0_5_53)))
 (let ((?x10266 (* l_0_5_52 l_0_5_52)))
 (let ((?x9095 (* 4.0 l_0_5_40)))
 (let ((?x9096 (* ?x9095 l_0_5_40)))
 (let ((?x10263 (* ?x9095 l_0_5_44)))
 (let ((?x9092 (* 4.0 l_0_5_39)))
 (let ((?x9093 (* ?x9092 l_0_5_39)))
 (let ((?x10260 (* ?x9092 l_0_5_43)))
 (let ((?x9089 (* 4.0 l_0_5_38)))
 (let ((?x9090 (* ?x9089 l_0_5_38)))
 (let ((?x10257 (* ?x9089 l_0_5_42)))
 (let ((?x9086 (* 4.0 l_0_5_37)))
 (let ((?x9087 (* ?x9086 l_0_5_37)))
 (let ((?x10254 (* ?x9086 l_0_5_41)))
 (let ((?x8081 (* 2.0 l_0_5_31)))
 (let ((?x9819 (* ?x8081 l_0_5_41)))
 (let ((?x9080 (* l_0_5_25 l_0_5_25)))
 (let ((?x9081 (* 4.0 ?x9080)))
 (let ((?x10250 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x9077 (* l_0_5_24 l_0_5_24)))
 (let ((?x9078 (* 4.0 ?x9077)))
 (let ((?x10246 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x9074 (* l_0_5_23 l_0_5_23)))
 (let ((?x9075 (* 4.0 ?x9074)))
 (let ((?x10242 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x9071 (* l_0_5_22 l_0_5_22)))
 (let ((?x9072 (* 4.0 ?x9071)))
 (let ((?x10238 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x10244 (+ (- (+ (- (* (* 2.0 l_0_5_16) l_0_5_26) ?x10238) ?x9072) ?x10242) ?x9075)))
 (let ((?x10256 (- (+ (- (+ (- (+ (- ?x10244 ?x10246) ?x9078) ?x10250) ?x9081) ?x9819) ?x10254) ?x9087)))
 (let ((?x10267 (+ (- (+ (- (+ (- (+ ?x10256 ?x10257) ?x9090) ?x10260) ?x9093) ?x10263) ?x9096) ?x10266)))
 (= (+ (+ (+ ?x10267 ?x10268) ?x10270) ?x10272) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8596 (* l_0_5_33 l_0_5_33)))
 (let ((?x8590 (* l_0_5_32 l_0_5_32)))
 (let ((?x10322 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x8590) ?x8596)))
 (= ?x10322 0.0)))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9894 (* ?x8626 l_0_5_35)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9892 (* ?x8620 l_0_5_34)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9890 (* ?x8677 l_0_5_20)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x9890) ?x9892) ?x9894) 0.0))))))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9913 (* ?x8626 l_0_5_38)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9911 (* ?x8620 l_0_5_37)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9904 (* ?x8677 l_0_5_23)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_22) ?x9904) ?x9911) ?x9913) 0.0))))))))
(assert
 (let ((?x8626 (* 2.0 l_0_5_33)))
 (let ((?x9932 (* ?x8626 l_0_5_42)))
 (let ((?x8620 (* 2.0 l_0_5_32)))
 (let ((?x9930 (* ?x8620 l_0_5_41)))
 (let ((?x8677 (* 2.0 l_0_5_18)))
 (let ((?x9923 (* ?x8677 l_0_5_27)))
 (= (- (- (+ (* (* 2.0 l_0_5_17) l_0_5_26) ?x9923) ?x9930) ?x9932) 0.0))))))))
(assert
 (let ((?x9707 (* 2.0 l_0_5_36)))
 (let ((?x9976 (* ?x9707 l_0_5_39)))
 (let ((?x9704 (* 2.0 l_0_5_35)))
 (let ((?x9974 (* ?x9704 l_0_5_38)))
 (let ((?x9701 (* 2.0 l_0_5_34)))
 (let ((?x9972 (* ?x9701 l_0_5_37)))
 (let ((?x9752 (* 2.0 l_0_5_21)))
 (let ((?x9970 (* ?x9752 l_0_5_24)))
 (let ((?x9746 (* 2.0 l_0_5_20)))
 (let ((?x9968 (* ?x9746 l_0_5_23)))
 (let ((?x10370 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_22) ?x9968) ?x9970) ?x9972) ?x9974)))
 (= (- ?x10370 ?x9976) 0.0)))))))))))))
(assert
 (let ((?x9707 (* 2.0 l_0_5_36)))
 (let ((?x10005 (* ?x9707 l_0_5_43)))
 (let ((?x9704 (* 2.0 l_0_5_35)))
 (let ((?x10003 (* ?x9704 l_0_5_42)))
 (let ((?x9701 (* 2.0 l_0_5_34)))
 (let ((?x10001 (* ?x9701 l_0_5_41)))
 (let ((?x9752 (* 2.0 l_0_5_21)))
 (let ((?x9993 (* ?x9752 l_0_5_28)))
 (let ((?x9746 (* 2.0 l_0_5_20)))
 (let ((?x9991 (* ?x9746 l_0_5_27)))
 (let ((?x10389 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_26) ?x9991) ?x9993) ?x10001) ?x10003)))
 (= (- ?x10389 ?x10005) 0.0)))))))))))))
(assert
 (let ((?x9134 (* l_0_5_40 l_0_5_40)))
 (let ((?x9128 (* l_0_5_39 l_0_5_39)))
 (let ((?x9122 (* l_0_5_38 l_0_5_38)))
 (let ((?x9116 (* l_0_5_37 l_0_5_37)))
 (let ((?x9080 (* l_0_5_25 l_0_5_25)))
 (let ((?x9077 (* l_0_5_24 l_0_5_24)))
 (let ((?x10406 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x9077) ?x9080)))
 (= (- (- (- (- ?x10406 ?x9116) ?x9122) ?x9128) ?x9134) 0.0)))))))))
(assert
 (let ((?x10080 (* 2.0 l_0_5_40)))
 (let ((?x10081 (* ?x10080 l_0_5_44)))
 (let ((?x10077 (* 2.0 l_0_5_39)))
 (let ((?x10078 (* ?x10077 l_0_5_43)))
 (let ((?x10074 (* 2.0 l_0_5_38)))
 (let ((?x10075 (* ?x10074 l_0_5_42)))
 (let ((?x10071 (* 2.0 l_0_5_37)))
 (let ((?x10072 (* ?x10071 l_0_5_41)))
 (let ((?x10068 (* 2.0 l_0_5_25)))
 (let ((?x10069 (* ?x10068 l_0_5_29)))
 (let ((?x10065 (* 2.0 l_0_5_24)))
 (let ((?x10066 (* ?x10065 l_0_5_28)))
 (let ((?x10062 (* 2.0 l_0_5_23)))
 (let ((?x10063 (* ?x10062 l_0_5_27)))
 (let ((?x10430 (- (+ (+ (+ (* (* 2.0 l_0_5_22) l_0_5_26) ?x10063) ?x10066) ?x10069) ?x10072)))
 (= (- (- (- ?x10430 ?x10075) ?x10078) ?x10081) 0.0)))))))))))))))))
(assert
 (let ((?x9368 (* l_0_5_45 l_0_5_45)))
 (let ((?x9362 (* l_0_5_44 l_0_5_44)))
 (let ((?x9356 (* l_0_5_43 l_0_5_43)))
 (let ((?x9350 (* l_0_5_42 l_0_5_42)))
 (let ((?x9344 (* l_0_5_41 l_0_5_41)))
 (let ((?x9299 (* l_0_5_30 l_0_5_30)))
 (let ((?x9296 (* l_0_5_29 l_0_5_29)))
 (let ((?x9293 (* l_0_5_28 l_0_5_28)))
 (let ((?x10453 (+ (+ (+ (* l_0_5_26 l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x9293) ?x9296)))
 (= (- (- (- (- (- (+ ?x10453 ?x9299) ?x9344) ?x9350) ?x9356) ?x9362) ?x9368) 0.0)))))))))))
(assert
 (let ((?x9095 (* 4.0 l_0_5_40)))
 (let ((?x10263 (* ?x9095 l_0_5_44)))
 (let ((?x9092 (* 4.0 l_0_5_39)))
 (let ((?x10260 (* ?x9092 l_0_5_43)))
 (let ((?x9089 (* 4.0 l_0_5_38)))
 (let ((?x10257 (* ?x9089 l_0_5_42)))
 (let ((?x9086 (* 4.0 l_0_5_37)))
 (let ((?x10254 (* ?x9086 l_0_5_41)))
 (let ((?x8804 (* 4.0 l_0_5_36)))
 (let ((?x9827 (* ?x8804 l_0_5_43)))
 (let ((?x8887 (* 8.0 l_0_5_36)))
 (let ((?x8888 (* ?x8887 l_0_5_39)))
 (let ((?x8801 (* 4.0 l_0_5_35)))
 (let ((?x9824 (* ?x8801 l_0_5_42)))
 (let ((?x8884 (* 8.0 l_0_5_35)))
 (let ((?x8885 (* ?x8884 l_0_5_38)))
 (let ((?x8798 (* 4.0 l_0_5_34)))
 (let ((?x9821 (* ?x8798 l_0_5_41)))
 (let ((?x8881 (* 8.0 l_0_5_34)))
 (let ((?x8882 (* ?x8881 l_0_5_37)))
 (let ((?x10250 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x10246 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x10242 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x10238 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x9749 (* 4.0 l_0_5_21)))
 (let ((?x9816 (* ?x9749 l_0_5_28)))
 (let ((?x8872 (* 8.0 l_0_5_21)))
 (let ((?x8873 (* ?x8872 l_0_5_24)))
 (let ((?x9743 (* 4.0 l_0_5_20)))
 (let ((?x9813 (* ?x9743 l_0_5_27)))
 (let ((?x8869 (* 8.0 l_0_5_20)))
 (let ((?x8870 (* ?x8869 l_0_5_23)))
 (let ((?x9737 (* 4.0 l_0_5_19)))
 (let ((?x9810 (* ?x9737 l_0_5_26)))
 (let ((?x8866 (* 8.0 l_0_5_19)))
 (let ((?x8867 (* ?x8866 l_0_5_22)))
 (let ((?x10477 (+ (+ (- (+ (- (+ (- ?x8867 ?x9810) ?x8870) ?x9813) ?x8873) ?x9816) ?x10238) ?x10242)))
 (let ((?x10484 (- (+ (- (+ (- (+ (+ ?x10477 ?x10246) ?x10250) ?x8882) ?x9821) ?x8885) ?x9824) ?x8888)))
 (let ((?x10492 (+ (- (- (- (- (+ ?x10484 ?x9827) ?x10254) ?x10257) ?x10260) ?x10263) (* (* 2.0 l_0_5_49) l_0_5_52))))
 (let ((?x10498 (+ (+ ?x10492 (* (* 2.0 l_0_5_50) l_0_5_53)) (* (* 2.0 l_0_5_51) l_0_5_54))))
 (= ?x10498 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8887 (* 8.0 l_0_5_36)))
 (let ((?x8995 (* ?x8887 l_0_5_43)))
 (let ((?x8884 (* 8.0 l_0_5_35)))
 (let ((?x8993 (* ?x8884 l_0_5_42)))
 (let ((?x8881 (* 8.0 l_0_5_34)))
 (let ((?x8991 (* ?x8881 l_0_5_41)))
 (let ((?x9299 (* l_0_5_30 l_0_5_30)))
 (let ((?x10555 (* 2.0 ?x9299)))
 (let ((?x9296 (* l_0_5_29 l_0_5_29)))
 (let ((?x10553 (* 2.0 ?x9296)))
 (let ((?x9293 (* l_0_5_28 l_0_5_28)))
 (let ((?x10551 (* 2.0 ?x9293)))
 (let ((?x9290 (* l_0_5_27 l_0_5_27)))
 (let ((?x10549 (* 2.0 ?x9290)))
 (let ((?x9287 (* l_0_5_26 l_0_5_26)))
 (let ((?x10547 (* 2.0 ?x9287)))
 (let ((?x8872 (* 8.0 l_0_5_21)))
 (let ((?x8983 (* ?x8872 l_0_5_28)))
 (let ((?x8869 (* 8.0 l_0_5_20)))
 (let ((?x8981 (* ?x8869 l_0_5_27)))
 (let ((?x8866 (* 8.0 l_0_5_19)))
 (let ((?x8979 (* ?x8866 l_0_5_26)))
 (let ((?x10556 (+ (+ (+ (+ (+ (+ (+ ?x8979 ?x8981) ?x8983) ?x10547) ?x10549) ?x10551) ?x10553) ?x10555)))
 (let ((?x10562 (- (- (- (- ?x10556 ?x8991) ?x8993) ?x8995) (* (* 2.0 l_0_5_41) l_0_5_41))))
 (let ((?x10568 (- (- ?x10562 (* (* 2.0 l_0_5_42) l_0_5_42)) (* (* 2.0 l_0_5_43) l_0_5_43))))
 (let ((?x10574 (- (- ?x10568 (* (* 2.0 l_0_5_44) l_0_5_44)) (* (* 2.0 l_0_5_45) l_0_5_45))))
 (let ((?x10578 (+ (+ ?x10574 (* (* 2.0 l_0_5_49) l_0_5_56)) (* (* 2.0 l_0_5_50) l_0_5_57))))
 (= (+ ?x10578 (* (* 2.0 l_0_5_51) l_0_5_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9368 (* l_0_5_45 l_0_5_45)))
 (let ((?x10609 (* 2.0 ?x9368)))
 (let ((?x9362 (* l_0_5_44 l_0_5_44)))
 (let ((?x10604 (* 2.0 ?x9362)))
 (let ((?x9356 (* l_0_5_43 l_0_5_43)))
 (let ((?x10599 (* 2.0 ?x9356)))
 (let ((?x9350 (* l_0_5_42 l_0_5_42)))
 (let ((?x10594 (* 2.0 ?x9350)))
 (let ((?x9344 (* l_0_5_41 l_0_5_41)))
 (let ((?x10589 (* 2.0 ?x9344)))
 (let ((?x9193 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x9190 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x9187 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x9184 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x9177 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x9174 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x9171 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x9168 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x10627 (- (+ (+ (+ ?x9168 ?x9171) ?x9174) ?x9177) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x10633 (- (- ?x10627 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x10639 (- (- ?x10633 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x10646 (+ (+ (+ (- (- (- (- ?x10639 ?x9184) ?x9187) ?x9190) ?x9193) ?x10589) ?x10594) ?x10599)))
 (let ((?x10654 (+ (+ (+ (+ ?x10646 ?x10604) ?x10609) (* (* 2.0 l_0_5_52) l_0_5_56)) (* (* 2.0 l_0_5_53) l_0_5_57))))
 (let ((?x10660 (+ (+ ?x10654 (* (* 2.0 l_0_5_54) l_0_5_58)) (* (* 2.0 l_0_5_55) l_0_5_59))))
 (= ?x10660 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10718 (* l_0_5_60 l_0_5_60)))
 (let ((?x10716 (* l_0_5_59 l_0_5_59)))
 (let ((?x10714 (* l_0_5_58 l_0_5_58)))
 (let ((?x10712 (* l_0_5_57 l_0_5_57)))
 (let ((?x10710 (* l_0_5_56 l_0_5_56)))
 (let ((?x9317 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x9314 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x9311 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x9308 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x9305 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x9299 (* l_0_5_30 l_0_5_30)))
 (let ((?x9300 (* 4.0 ?x9299)))
 (let ((?x9296 (* l_0_5_29 l_0_5_29)))
 (let ((?x9297 (* 4.0 ?x9296)))
 (let ((?x9293 (* l_0_5_28 l_0_5_28)))
 (let ((?x9294 (* 4.0 ?x9293)))
 (let ((?x9290 (* l_0_5_27 l_0_5_27)))
 (let ((?x9291 (* 4.0 ?x9290)))
 (let ((?x9287 (* l_0_5_26 l_0_5_26)))
 (let ((?x9288 (* 4.0 ?x9287)))
 (let ((?x10707 (- (- (- (+ (+ (+ (+ ?x9288 ?x9291) ?x9294) ?x9297) ?x9300) ?x9305) ?x9308) ?x9311)))
 (let ((?x10719 (+ (+ (+ (+ (+ (- (- ?x10707 ?x9314) ?x9317) ?x10710) ?x10712) ?x10714) ?x10716) ?x10718)))
 (= ?x10719 0.0))))))))))))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x10772 (* ?x10771 l_0_6_31)))
 (let ((?x10768 (* l_0_6_16 l_0_6_16)))
 (let ((?x10769 (* 4.0 ?x10768)))
 (let ((?x10770 (+ (- (* (* 2.0 l_0_6_1) l_0_6_2) (* l_0_6_1 l_0_6_1)) ?x10769)))
 (let ((?x10779 (- (- (- ?x10770 ?x10772) (* (* 2.0 l_0_6_61) l_0_6_62)) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x10779 (* (* 2.0 l_0_6_91) l_0_6_92)) 4.0) 0.0))))))))
(assert
 (let ((?x10825 (* l_0_6_91 l_0_6_91)))
 (let ((?x10823 (* l_0_6_76 l_0_6_76)))
 (let ((?x10821 (* l_0_6_61 l_0_6_61)))
 (let ((?x10824 (- (- (+ (* 4.0 _a_2_) (* 1.0 (* l_0_6_1 l_0_6_1))) ?x10821) ?x10823)))
 (= (- ?x10824 ?x10825) 0.0))))))
(assert
 (let ((?x10846 (* l_0_6_46 l_0_6_46)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x10772 (* ?x10771 l_0_6_31)))
 (let ((?x10768 (* l_0_6_16 l_0_6_16)))
 (let ((?x10769 (* 4.0 ?x10768)))
 (let ((?x10843 (- (+ (* 4.0 _a_3_) (* (* 2.0 l_0_6_1) l_0_6_11)) (* (* 2.0 l_0_6_101) l_0_6_91))))
 (let ((?x10849 (- (+ (- (+ ?x10843 ?x10769) ?x10772) ?x10846) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (= (- ?x10849 (* (* 2.0 l_0_6_76) l_0_6_86)) 0.0)))))))))
(assert
 (let ((?x10768 (* l_0_6_16 l_0_6_16)))
 (let ((?x10881 (* 2.0 ?x10768)))
 (let ((?x10885 (- (+ (+ (* 4.0 _a_4_) (* (* 2.0 l_0_6_1) l_0_6_4)) ?x10881) (* (* 2.0 l_0_6_31) l_0_6_31))))
 (let ((?x10889 (- (- ?x10885 (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (- (- ?x10889 (* (* 2.0 l_0_6_91) l_0_6_94)) 2.0) 0.0))))))
(assert
 (let ((?x10955 (* l_0_6_96 l_0_6_96)))
 (let ((?x10953 (* l_0_6_95 l_0_6_95)))
 (let ((?x10951 (* l_0_6_94 l_0_6_94)))
 (let ((?x10949 (* l_0_6_81 l_0_6_81)))
 (let ((?x10947 (* l_0_6_80 l_0_6_80)))
 (let ((?x10945 (* l_0_6_79 l_0_6_79)))
 (let ((?x10943 (* l_0_6_66 l_0_6_66)))
 (let ((?x10941 (* l_0_6_65 l_0_6_65)))
 (let ((?x10939 (* l_0_6_64 l_0_6_64)))
 (let ((?x10791 (* l_0_6_31 l_0_6_31)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x10927 (* ?x10771 l_0_6_34)))
 (let ((?x10928 (- (- (* (* 4.0 l_0_6_16) l_0_6_19) (* l_0_6_16 l_0_6_16)) ?x10927)))
 (let ((?x10935 (+ (+ (+ ?x10928 ?x10791) (* 1.0 (* l_0_6_4 l_0_6_4))) (* 1.0 (* l_0_6_5 l_0_6_5)))))
 (let ((?x10944 (- (- (- (+ ?x10935 (* 1.0 (* l_0_6_6 l_0_6_6))) ?x10939) ?x10941) ?x10943)))
 (let ((?x10957 (- (- (- (- (- (- (- ?x10944 ?x10945) ?x10947) ?x10949) ?x10951) ?x10953) ?x10955) 1.0)))
 (= ?x10957 0.0))))))))))))))))))
(assert
 (let ((?x11046 (* l_0_6_99 l_0_6_99)))
 (let ((?x11044 (* l_0_6_98 l_0_6_98)))
 (let ((?x11042 (* l_0_6_97 l_0_6_97)))
 (let ((?x11037 (* l_0_6_85 l_0_6_85)))
 (let ((?x11035 (* l_0_6_84 l_0_6_84)))
 (let ((?x11033 (* l_0_6_83 l_0_6_83)))
 (let ((?x11031 (* l_0_6_82 l_0_6_82)))
 (let ((?x11026 (* l_0_6_70 l_0_6_70)))
 (let ((?x11021 (* l_0_6_69 l_0_6_69)))
 (let ((?x11019 (* l_0_6_68 l_0_6_68)))
 (let ((?x11017 (* l_0_6_67 l_0_6_67)))
 (let ((?x10791 (* l_0_6_31 l_0_6_31)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11014 (* ?x10771 l_0_6_37)))
 (let ((?x10768 (* l_0_6_16 l_0_6_16)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x11011 (* ?x10924 l_0_6_22)))
 (let ((?x11012 (- (- (* 1.0 (* l_0_6_10 l_0_6_10)) (* l_0_6_100 l_0_6_100)) ?x11011)))
 (let ((?x11025 (+ (- (- (- (- (+ (+ ?x11012 ?x10768) ?x11014) ?x10791) ?x11017) ?x11019) ?x11021) (* 1.0 (* l_0_6_7 l_0_6_7)))))
 (let ((?x11034 (- (- (+ (- ?x11025 ?x11026) (* 1.0 (* l_0_6_8 l_0_6_8))) ?x11031) ?x11033)))
 (let ((?x11043 (- (+ (- (- ?x11034 ?x11035) ?x11037) (* 1.0 (* l_0_6_9 l_0_6_9))) ?x11042)))
 (= (+ (- (- ?x11043 ?x11044) ?x11046) 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11103 (- (* (* 2.0 l_0_6_1) l_0_6_7) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (let ((?x11106 (- (+ ?x11103 (* 2.0 (* l_0_6_31 l_0_6_31))) (* (* 2.0 l_0_6_61) l_0_6_67))))
 (let ((?x11110 (- (- ?x11106 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= (- ?x11110 2.0) 0.0)))))
(assert
 (let ((?x11141 (* l_0_6_93 l_0_6_93)))
 (let ((?x11139 (* l_0_6_92 l_0_6_92)))
 (let ((?x11137 (* l_0_6_78 l_0_6_78)))
 (let ((?x11135 (* l_0_6_77 l_0_6_77)))
 (let ((?x11133 (* l_0_6_63 l_0_6_63)))
 (let ((?x11131 (* l_0_6_62 l_0_6_62)))
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11129 (* ?x11128 l_0_6_32)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x1635 (* ?x1633 l_0_6_17)))
 (let ((?x11124 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x1635) (* 1.0 (* l_0_6_2 l_0_6_2)))))
 (let ((?x11134 (- (- (- (+ ?x11124 (* 1.0 (* l_0_6_3 l_0_6_3))) ?x11129) ?x11131) ?x11133)))
 (= (- (- (- (- ?x11134 ?x11135) ?x11137) ?x11139) ?x11141) 0.0))))))))))))))
(assert
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11166 (* ?x11128 l_0_6_34)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11164 (* ?x10771 l_0_6_32)))
 (let ((?x11161 (* 2.0 l_0_6_3)))
 (let ((?x11162 (* ?x11161 l_0_6_5)))
 (let ((?x11158 (* 2.0 l_0_6_2)))
 (let ((?x11159 (* ?x11158 l_0_6_4)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11156 (* ?x1633 l_0_6_19)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x1709 (* ?x10924 l_0_6_17)))
 (let ((?x11163 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x1709) ?x11156) ?x11159) ?x11162)))
 (let ((?x11173 (- (- (- (- ?x11163 ?x11164) ?x11166) (* (* 2.0 l_0_6_62) l_0_6_64)) (* (* 2.0 l_0_6_63) l_0_6_65))))
 (let ((?x11179 (- (- ?x11173 (* (* 2.0 l_0_6_77) l_0_6_79)) (* (* 2.0 l_0_6_78) l_0_6_80))))
 (let ((?x11185 (- (- ?x11179 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x11185 0.0))))))))))))))))))
(assert
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11226 (* ?x11128 l_0_6_37)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11164 (* ?x10771 l_0_6_32)))
 (let ((?x11161 (* 2.0 l_0_6_3)))
 (let ((?x11223 (* ?x11161 l_0_6_8)))
 (let ((?x11158 (* 2.0 l_0_6_2)))
 (let ((?x11221 (* ?x11158 l_0_6_7)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11219 (* ?x1633 l_0_6_22)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x1709 (* ?x10924 l_0_6_17)))
 (let ((?x11224 (+ (+ (+ (- (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x1709) ?x11219) ?x11221) ?x11223)))
 (let ((?x11231 (- (- (- (+ ?x11224 ?x11164) ?x11226) (* (* 2.0 l_0_6_62) l_0_6_67)) (* (* 2.0 l_0_6_63) l_0_6_68))))
 (let ((?x11235 (- (- ?x11231 (* (* 2.0 l_0_6_77) l_0_6_82)) (* (* 2.0 l_0_6_78) l_0_6_83))))
 (let ((?x11239 (- (- ?x11235 (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x11239 0.0))))))))))))))))))
(assert
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11271 (* ?x11128 l_0_6_41)))
 (let ((?x11129 (* ?x11128 l_0_6_32)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11268 (* ?x1633 l_0_6_26)))
 (let ((?x1635 (* ?x1633 l_0_6_17)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x11265 (* ?x11264 l_0_6_3)))
 (let ((?x1894 (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x11263 (+ (- ?x1894 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_11) l_0_6_2))))
 (let ((?x11275 (+ (- (- (+ (+ (+ ?x11263 ?x11265) ?x1635) ?x11268) ?x11129) ?x11271) (* (* 2.0 l_0_6_46) l_0_6_47))))
 (let ((?x11279 (- (- ?x11275 (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (let ((?x11283 (- (- ?x11279 (* (* 2.0 l_0_6_77) l_0_6_86)) (* (* 2.0 l_0_6_78) l_0_6_87))))
 (= ?x11283 0.0)))))))))))))))
(assert
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11340 (* ?x11339 l_0_6_33)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11337 (* ?x11336 l_0_6_32)))
 (let ((?x11125 (* l_0_6_3 l_0_6_3)))
 (let ((?x1573 (* l_0_6_2 l_0_6_2)))
 (let ((?x11331 (* l_0_6_18 l_0_6_18)))
 (let ((?x11332 (* 4.0 ?x11331)))
 (let ((?x11329 (* l_0_6_17 l_0_6_17)))
 (let ((?x11330 (* 4.0 ?x11329)))
 (= (- (- (- (- (+ ?x11330 ?x11332) ?x1573) ?x11125) ?x11337) ?x11340) 0.0))))))))))))
(assert
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11371 (* ?x11370 l_0_6_35)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11365 (* ?x11364 l_0_6_34)))
 (let ((?x11161 (* 2.0 l_0_6_3)))
 (let ((?x11162 (* ?x11161 l_0_6_5)))
 (let ((?x11158 (* 2.0 l_0_6_2)))
 (let ((?x11159 (* ?x11158 l_0_6_4)))
 (let ((?x11331 (* l_0_6_18 l_0_6_18)))
 (let ((?x11360 (* 2.0 ?x11331)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x11358 (* ?x11357 l_0_6_20)))
 (let ((?x11329 (* l_0_6_17 l_0_6_17)))
 (let ((?x11355 (* 2.0 ?x11329)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x11354 (* ?x11353 l_0_6_19)))
 (let ((?x11369 (- (- (- (- (+ (+ (+ ?x11354 ?x11355) ?x11358) ?x11360) ?x11159) ?x11162) ?x11365) (* (* 2.0 l_0_6_32) l_0_6_32))))
 (= (- (- ?x11369 ?x11371) (* (* 2.0 l_0_6_33) l_0_6_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x1957 (* l_0_6_33 l_0_6_33)))
 (let ((?x2065 (* 2.0 ?x1957)))
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11403 (* ?x11370 l_0_6_38)))
 (let ((?x1952 (* l_0_6_32 l_0_6_32)))
 (let ((?x2032 (* 2.0 ?x1952)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11400 (* ?x11364 l_0_6_37)))
 (let ((?x11161 (* 2.0 l_0_6_3)))
 (let ((?x11223 (* ?x11161 l_0_6_8)))
 (let ((?x11158 (* 2.0 l_0_6_2)))
 (let ((?x11221 (* ?x11158 l_0_6_7)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x11393 (* ?x11357 l_0_6_23)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x2070 (* ?x11353 l_0_6_22)))
 (let ((?x11397 (- (+ (- ?x2070 (* (* 2.0 l_0_6_17) l_0_6_17)) ?x11393) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (= (+ (- (+ (- (- (- ?x11397 ?x11221) ?x11223) ?x11400) ?x2032) ?x11403) ?x2065) 0.0)))))))))))))))))))
(assert
 (let ((?x11427 (* l_0_6_48 l_0_6_48)))
 (let ((?x11425 (* l_0_6_47 l_0_6_47)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11340 (* ?x11339 l_0_6_33)))
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11422 (* ?x11370 l_0_6_42)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11337 (* ?x11336 l_0_6_32)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11419 (* ?x11364 l_0_6_41)))
 (let ((?x11331 (* l_0_6_18 l_0_6_18)))
 (let ((?x11332 (* 4.0 ?x11331)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x2171 (* ?x11357 l_0_6_27)))
 (let ((?x11329 (* l_0_6_17 l_0_6_17)))
 (let ((?x11330 (* 4.0 ?x11329)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x2175 (* ?x11353 l_0_6_26)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x11265 (* ?x11264 l_0_6_3)))
 (let ((?x2119 (+ (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x11265) ?x2175) ?x11330) ?x2171)))
 (let ((?x11428 (+ (+ (- (- (- (- (+ ?x2119 ?x11332) ?x11419) ?x11337) ?x11422) ?x11340) ?x11425) ?x11427)))
 (= ?x11428 0.0))))))))))))))))))))))))
(assert
 (let ((?x10936 (* l_0_6_6 l_0_6_6)))
 (let ((?x10933 (* l_0_6_5 l_0_6_5)))
 (let ((?x10930 (* l_0_6_4 l_0_6_4)))
 (let ((?x11477 (* 4.0 l_0_6_36)))
 (let ((?x11478 (* ?x11477 l_0_6_36)))
 (let ((?x11474 (* 4.0 l_0_6_35)))
 (let ((?x11475 (* ?x11474 l_0_6_35)))
 (let ((?x11471 (* 4.0 l_0_6_34)))
 (let ((?x11472 (* ?x11471 l_0_6_34)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11469 (* ?x11339 l_0_6_35)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11467 (* ?x11336 l_0_6_34)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x11465 (* ?x10883 l_0_6_32)))
 (let ((?x11462 (* l_0_6_21 l_0_6_21)))
 (let ((?x11463 (* 4.0 ?x11462)))
 (let ((?x11459 (* l_0_6_20 l_0_6_20)))
 (let ((?x11460 (* 4.0 ?x11459)))
 (let ((?x11456 (* l_0_6_19 l_0_6_19)))
 (let ((?x11457 (* 4.0 ?x11456)))
 (let ((?x11453 (* 4.0 l_0_6_18)))
 (let ((?x11454 (* ?x11453 l_0_6_20)))
 (let ((?x11452 (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) (* (* 4.0 l_0_6_17) l_0_6_19))))
 (let ((?x11470 (- (- (+ (+ (+ (+ (+ ?x11452 ?x11454) ?x11457) ?x11460) ?x11463) ?x11465) ?x11467) ?x11469)))
 (= (- (- (- (- (- (- ?x11470 ?x11472) ?x11475) ?x11478) ?x10930) ?x10933) ?x10936) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x11530 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11527 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11524 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11520 (* 8.0 l_0_6_36)))
 (let ((?x11521 (* ?x11520 l_0_6_39)))
 (let ((?x11517 (* 8.0 l_0_6_35)))
 (let ((?x11518 (* ?x11517 l_0_6_38)))
 (let ((?x11514 (* 8.0 l_0_6_34)))
 (let ((?x11515 (* ?x11514 l_0_6_37)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11512 (* ?x11339 l_0_6_38)))
 (let ((?x11469 (* ?x11339 l_0_6_35)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11509 (* ?x11336 l_0_6_37)))
 (let ((?x11467 (* ?x11336 l_0_6_34)))
 (let ((?x11505 (* 8.0 l_0_6_21)))
 (let ((?x11506 (* ?x11505 l_0_6_24)))
 (let ((?x11502 (* 8.0 l_0_6_20)))
 (let ((?x11503 (* ?x11502 l_0_6_23)))
 (let ((?x2282 (* 8.0 l_0_6_19)))
 (let ((?x2279 (* ?x2282 l_0_6_22)))
 (let ((?x11453 (* 4.0 l_0_6_18)))
 (let ((?x2283 (* ?x11453 l_0_6_23)))
 (let ((?x11454 (* ?x11453 l_0_6_20)))
 (let ((?x11450 (* 4.0 l_0_6_17)))
 (let ((?x2314 (* ?x11450 l_0_6_22)))
 (let ((?x11501 (+ (+ (- (+ (* (* (- 4.0) l_0_6_17) l_0_6_19) ?x2314) ?x11454) ?x2283) ?x2279)))
 (let ((?x11516 (- (- (+ (- (+ (+ (+ ?x11501 ?x11503) ?x11506) ?x11467) ?x11509) ?x11469) ?x11512) ?x11515)))
 (= (- (- (- (- (- ?x11516 ?x11518) ?x11521) ?x11524) ?x11527) ?x11530) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11520 (* 8.0 l_0_6_36)))
 (let ((?x11596 (* ?x11520 l_0_6_43)))
 (let ((?x11517 (* 8.0 l_0_6_35)))
 (let ((?x11594 (* ?x11517 l_0_6_42)))
 (let ((?x11514 (* 8.0 l_0_6_34)))
 (let ((?x11592 (* ?x11514 l_0_6_41)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11590 (* ?x11339 l_0_6_42)))
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11371 (* ?x11370 l_0_6_35)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11587 (* ?x11336 l_0_6_41)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11365 (* ?x11364 l_0_6_34)))
 (let ((?x11505 (* 8.0 l_0_6_21)))
 (let ((?x11584 (* ?x11505 l_0_6_28)))
 (let ((?x11502 (* 8.0 l_0_6_20)))
 (let ((?x11582 (* ?x11502 l_0_6_27)))
 (let ((?x2282 (* 8.0 l_0_6_19)))
 (let ((?x11580 (* ?x2282 l_0_6_26)))
 (let ((?x11453 (* 4.0 l_0_6_18)))
 (let ((?x11578 (* ?x11453 l_0_6_27)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x11358 (* ?x11357 l_0_6_20)))
 (let ((?x11450 (* 4.0 l_0_6_17)))
 (let ((?x11575 (* ?x11450 l_0_6_26)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x11354 (* ?x11353 l_0_6_19)))
 (let ((?x11571 (* 2.0 l_0_6_13)))
 (let ((?x11572 (* ?x11571 l_0_6_6)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x11569 (* ?x11264 l_0_6_5)))
 (let ((?x11576 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x11569) ?x11572) ?x11354) ?x11575)))
 (let ((?x11588 (- (- (+ (+ (+ (+ (+ ?x11576 ?x11358) ?x11578) ?x11580) ?x11582) ?x11584) ?x11365) ?x11587)))
 (let ((?x11600 (+ (- (- (- (- (- ?x11588 ?x11371) ?x11590) ?x11592) ?x11594) ?x11596) (* (* 2.0 l_0_6_47) l_0_6_49))))
 (= (+ ?x11600 (* (* 2.0 l_0_6_48) l_0_6_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11039 (* l_0_6_9 l_0_6_9)))
 (let ((?x11028 (* l_0_6_8 l_0_6_8)))
 (let ((?x11023 (* l_0_6_7 l_0_6_7)))
 (let ((?x11667 (* 4.0 l_0_6_40)))
 (let ((?x11668 (* ?x11667 l_0_6_40)))
 (let ((?x11664 (* 4.0 l_0_6_39)))
 (let ((?x11665 (* ?x11664 l_0_6_39)))
 (let ((?x11661 (* 4.0 l_0_6_38)))
 (let ((?x11662 (* ?x11661 l_0_6_38)))
 (let ((?x11658 (* 4.0 l_0_6_37)))
 (let ((?x11659 (* ?x11658 l_0_6_37)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11512 (* ?x11339 l_0_6_38)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11509 (* ?x11336 l_0_6_37)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x11465 (* ?x10883 l_0_6_32)))
 (let ((?x11652 (* l_0_6_25 l_0_6_25)))
 (let ((?x11653 (* 4.0 ?x11652)))
 (let ((?x11649 (* l_0_6_24 l_0_6_24)))
 (let ((?x11650 (* 4.0 ?x11649)))
 (let ((?x11646 (* l_0_6_23 l_0_6_23)))
 (let ((?x11647 (* 4.0 ?x11646)))
 (let ((?x11643 (* l_0_6_22 l_0_6_22)))
 (let ((?x11644 (* 4.0 ?x11643)))
 (let ((?x11453 (* 4.0 l_0_6_18)))
 (let ((?x2283 (* ?x11453 l_0_6_23)))
 (let ((?x11450 (* 4.0 l_0_6_17)))
 (let ((?x2314 (* ?x11450 l_0_6_22)))
 (let ((?x11641 (- (+ (* (- l_0_6_10) l_0_6_10) (* (* 2.0 l_0_6_16) l_0_6_17)) ?x2314)))
 (let ((?x11656 (+ (- (+ (+ (+ (+ (- ?x11641 ?x2283) ?x11644) ?x11647) ?x11650) ?x11653) ?x11465) ?x11509)))
 (let ((?x11671 (- (- (- (- (- (- (+ ?x11656 ?x11512) ?x11659) ?x11662) ?x11665) ?x11668) ?x11023) ?x11028)))
 (= (- ?x11671 ?x11039) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11716 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x11713 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x11710 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x11707 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x11339 (* 4.0 l_0_6_33)))
 (let ((?x11590 (* ?x11339 l_0_6_42)))
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11403 (* ?x11370 l_0_6_38)))
 (let ((?x11336 (* 4.0 l_0_6_32)))
 (let ((?x11587 (* ?x11336 l_0_6_41)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11400 (* ?x11364 l_0_6_37)))
 (let ((?x11700 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x11697 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x11694 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x11691 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x11453 (* 4.0 l_0_6_18)))
 (let ((?x11578 (* ?x11453 l_0_6_27)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x11393 (* ?x11357 l_0_6_23)))
 (let ((?x11450 (* 4.0 l_0_6_17)))
 (let ((?x11575 (* ?x11450 l_0_6_26)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x2070 (* ?x11353 l_0_6_22)))
 (let ((?x11571 (* 2.0 l_0_6_13)))
 (let ((?x2506 (* ?x11571 l_0_6_9)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x2591 (* ?x11264 l_0_6_8)))
 (let ((?x11261 (* 2.0 l_0_6_11)))
 (let ((?x2592 (* ?x11261 l_0_6_7)))
 (let ((?x11686 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x2592) ?x2591) ?x2506) ?x2070)))
 (let ((?x11701 (+ (+ (+ (+ (- (+ (- ?x11686 ?x11575) ?x11393) ?x11578) ?x11691) ?x11694) ?x11697) ?x11700)))
 (let ((?x11714 (- (- (- (+ (- (+ (- ?x11701 ?x11400) ?x11587) ?x11403) ?x11590) ?x11707) ?x11710) ?x11713)))
 (let ((?x11721 (+ (+ (- ?x11714 ?x11716) (* (* 2.0 l_0_6_47) l_0_6_52)) (* (* 2.0 l_0_6_48) l_0_6_53))))
 (= ?x11721 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11789 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x11786 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x11783 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x11780 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x11777 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x11370 (* 8.0 l_0_6_33)))
 (let ((?x11422 (* ?x11370 l_0_6_42)))
 (let ((?x11364 (* 8.0 l_0_6_32)))
 (let ((?x11419 (* ?x11364 l_0_6_41)))
 (let ((?x11771 (* l_0_6_30 l_0_6_30)))
 (let ((?x11772 (* 4.0 ?x11771)))
 (let ((?x11768 (* l_0_6_29 l_0_6_29)))
 (let ((?x11769 (* 4.0 ?x11768)))
 (let ((?x11765 (* l_0_6_28 l_0_6_28)))
 (let ((?x11766 (* 4.0 ?x11765)))
 (let ((?x11762 (* l_0_6_27 l_0_6_27)))
 (let ((?x11763 (* 4.0 ?x11762)))
 (let ((?x11759 (* l_0_6_26 l_0_6_26)))
 (let ((?x11760 (* 4.0 ?x11759)))
 (let ((?x11357 (* 8.0 l_0_6_18)))
 (let ((?x2171 (* ?x11357 l_0_6_27)))
 (let ((?x11353 (* 8.0 l_0_6_17)))
 (let ((?x2175 (* ?x11353 l_0_6_26)))
 (let ((?x11755 (* l_0_6_15 l_0_6_15)))
 (let ((?x11753 (* l_0_6_14 l_0_6_14)))
 (let ((?x11751 (* l_0_6_13 l_0_6_13)))
 (let ((?x11754 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x11751) ?x11753)))
 (let ((?x11770 (+ (+ (+ (+ (+ (+ (- ?x11754 ?x11755) ?x2175) ?x2171) ?x11760) ?x11763) ?x11766) ?x11769)))
 (let ((?x11787 (- (- (- (- (- (- (+ ?x11770 ?x11772) ?x11419) ?x11422) ?x11777) ?x11780) ?x11783) ?x11786)))
 (let ((?x11794 (+ (+ (- ?x11787 ?x11789) (* (* 2.0 l_0_6_47) l_0_6_56)) (* (* 2.0 l_0_6_48) l_0_6_57))))
 (= ?x11794 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11530 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11527 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11524 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11014 (* ?x10771 l_0_6_37)))
 (let ((?x10927 (* ?x10771 l_0_6_34)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x11011 (* ?x10924 l_0_6_22)))
 (let ((?x11817 (+ (- (+ (+ (* (* (- 4.0) l_0_6_16) l_0_6_19) ?x11011) ?x10927) ?x11014) ?x11524)))
 (let ((?x11825 (- (- (+ (+ ?x11817 ?x11527) ?x11530) (* (* 2.0 l_0_6_64) l_0_6_67)) (* (* 2.0 l_0_6_65) l_0_6_68))))
 (let ((?x11831 (- (- ?x11825 (* (* 2.0 l_0_6_66) l_0_6_69)) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x11837 (- (- ?x11831 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x11843 (- (- ?x11837 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x11843 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))))))
(assert
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11891 (* ?x10771 l_0_6_41)))
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11166 (* ?x11128 l_0_6_34)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x11888 (* ?x10924 l_0_6_26)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11156 (* ?x1633 l_0_6_19)))
 (let ((?x11571 (* 2.0 l_0_6_13)))
 (let ((?x11572 (* ?x11571 l_0_6_6)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x11569 (* ?x11264 l_0_6_5)))
 (let ((?x11879 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x11884 (+ (- ?x11879 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_11) l_0_6_4))))
 (let ((?x11894 (+ (- (- (+ (+ (+ (+ ?x11884 ?x11569) ?x11572) ?x11156) ?x11888) ?x11166) ?x11891) (* (* 2.0 l_0_6_46) l_0_6_49))))
 (let ((?x11898 (- (- ?x11894 (* (* 2.0 l_0_6_64) l_0_6_71)) (* (* 2.0 l_0_6_65) l_0_6_72))))
 (let ((?x11902 (- (- ?x11898 (* (* 2.0 l_0_6_66) l_0_6_73)) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x11906 (- (- ?x11902 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x11906 0.0))))))))))))))))))))
(assert
 (let ((?x10771 (* 4.0 l_0_6_31)))
 (let ((?x11891 (* ?x10771 l_0_6_41)))
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11226 (* ?x11128 l_0_6_37)))
 (let ((?x10924 (* 4.0 l_0_6_16)))
 (let ((?x11888 (* ?x10924 l_0_6_26)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11219 (* ?x1633 l_0_6_22)))
 (let ((?x11571 (* 2.0 l_0_6_13)))
 (let ((?x2506 (* ?x11571 l_0_6_9)))
 (let ((?x11264 (* 2.0 l_0_6_12)))
 (let ((?x2591 (* ?x11264 l_0_6_8)))
 (let ((?x11261 (* 2.0 l_0_6_11)))
 (let ((?x2592 (* ?x11261 l_0_6_7)))
 (let ((?x11947 (- (* (* 2.0 l_0_6_10) l_0_6_14) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x11951 (- (- ?x11947 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x11956 (+ (+ (+ (- ?x11951 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x2592) ?x2591) ?x2506)))
 (let ((?x11962 (+ (+ (- (- (+ ?x11956 ?x11219) ?x11888) ?x11226) ?x11891) (* (* 2.0 l_0_6_46) l_0_6_52))))
 (let ((?x11968 (- (- ?x11962 (* (* 2.0 l_0_6_67) l_0_6_71)) (* (* 2.0 l_0_6_68) l_0_6_72))))
 (let ((?x11974 (- (- ?x11968 (* (* 2.0 l_0_6_69) l_0_6_73)) (* (* 2.0 l_0_6_70) l_0_6_74))))
 (let ((?x11980 (- (- ?x11974 (* (* 2.0 l_0_6_82) l_0_6_86)) (* (* 2.0 l_0_6_83) l_0_6_87))))
 (let ((?x11986 (- (- ?x11980 (* (* 2.0 l_0_6_84) l_0_6_88)) (* (* 2.0 l_0_6_85) l_0_6_89))))
 (= ?x11986 0.0))))))))))))))))))))))))
(assert
 (let ((?x12039 (* l_0_6_90 l_0_6_90)))
 (let ((?x12037 (* l_0_6_89 l_0_6_89)))
 (let ((?x12035 (* l_0_6_88 l_0_6_88)))
 (let ((?x12033 (* l_0_6_87 l_0_6_87)))
 (let ((?x12031 (* l_0_6_86 l_0_6_86)))
 (let ((?x12029 (* l_0_6_75 l_0_6_75)))
 (let ((?x12027 (* l_0_6_74 l_0_6_74)))
 (let ((?x12025 (* l_0_6_73 l_0_6_73)))
 (let ((?x12023 (* l_0_6_72 l_0_6_72)))
 (let ((?x12021 (* l_0_6_71 l_0_6_71)))
 (let ((?x11128 (* 8.0 l_0_6_31)))
 (let ((?x11271 (* ?x11128 l_0_6_41)))
 (let ((?x1633 (* 8.0 l_0_6_16)))
 (let ((?x11268 (* ?x1633 l_0_6_26)))
 (let ((?x12005 (* l_0_6_105 l_0_6_105)))
 (let ((?x12003 (* l_0_6_104 l_0_6_104)))
 (let ((?x12001 (* l_0_6_103 l_0_6_103)))
 (let ((?x12002 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x12001)))
 (let ((?x12010 (+ (+ (- (- ?x12002 ?x12003) ?x12005) (* 1.0 (* l_0_6_11 l_0_6_11))) (* 1.0 (* l_0_6_12 l_0_6_12)))))
 (let ((?x12014 (+ (+ ?x12010 (* 1.0 (* l_0_6_13 l_0_6_13))) (* 1.0 (* l_0_6_14 l_0_6_14)))))
 (let ((?x12020 (+ (- (+ (+ ?x12014 (* 1.0 (* l_0_6_15 l_0_6_15))) ?x11268) ?x11271) (* (* 2.0 l_0_6_46) l_0_6_56))))
 (let ((?x12034 (- (- (- (- (- (- (- ?x12020 ?x12021) ?x12023) ?x12025) ?x12027) ?x12029) ?x12031) ?x12033)))
 (= (- (- (- ?x12034 ?x12035) ?x12037) ?x12039) 0.0))))))))))))))))))))))))
(assert
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12069 (* ?x10883 l_0_6_34)))
 (let ((?x12064 (+ (* (* (- 2.0) l_0_6_16) l_0_6_19) (* 2.0 (* l_0_6_19 l_0_6_19)))))
 (let ((?x12068 (+ (+ ?x12064 (* 2.0 (* l_0_6_20 l_0_6_20))) (* 2.0 (* l_0_6_21 l_0_6_21)))))
 (let ((?x12076 (- (- (+ ?x12068 ?x12069) (* (* 2.0 l_0_6_34) l_0_6_34)) (* (* 2.0 l_0_6_35) l_0_6_35))))
 (= (- ?x12076 (* (* 2.0 l_0_6_36) l_0_6_36)) 0.0)))))))
(assert
 (let ((?x2258 (* l_0_6_36 l_0_6_36)))
 (let ((?x12088 (* 2.0 ?x2258)))
 (let ((?x11477 (* 4.0 l_0_6_36)))
 (let ((?x12124 (* ?x11477 l_0_6_39)))
 (let ((?x2241 (* l_0_6_35 l_0_6_35)))
 (let ((?x12083 (* 2.0 ?x2241)))
 (let ((?x11474 (* 4.0 l_0_6_35)))
 (let ((?x12121 (* ?x11474 l_0_6_38)))
 (let ((?x11495 (* l_0_6_34 l_0_6_34)))
 (let ((?x3461 (* 2.0 ?x11495)))
 (let ((?x11471 (* 4.0 l_0_6_34)))
 (let ((?x12118 (* ?x11471 l_0_6_37)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12116 (* ?x10883 l_0_6_37)))
 (let ((?x12110 (* 4.0 l_0_6_21)))
 (let ((?x12111 (* ?x12110 l_0_6_24)))
 (let ((?x12104 (* 4.0 l_0_6_20)))
 (let ((?x12105 (* ?x12104 l_0_6_23)))
 (let ((?x12098 (* 4.0 l_0_6_19)))
 (let ((?x12099 (* ?x12098 l_0_6_22)))
 (let ((?x12103 (- (+ (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x12099) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x12115 (- (+ (- (+ ?x12103 ?x12105) (* (* 2.0 l_0_6_20) l_0_6_20)) ?x12111) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (let ((?x12126 (+ (- (+ (- (+ (- (+ ?x12115 ?x12116) ?x12118) ?x3461) ?x12121) ?x12083) ?x12124) ?x12088)))
 (= ?x12126 0.0)))))))))))))))))))))))))
(assert
 (let ((?x12183 (* l_0_6_51 l_0_6_51)))
 (let ((?x12181 (* l_0_6_50 l_0_6_50)))
 (let ((?x12179 (* l_0_6_49 l_0_6_49)))
 (let ((?x11477 (* 4.0 l_0_6_36)))
 (let ((?x11478 (* ?x11477 l_0_6_36)))
 (let ((?x12176 (* ?x11477 l_0_6_43)))
 (let ((?x11474 (* 4.0 l_0_6_35)))
 (let ((?x11475 (* ?x11474 l_0_6_35)))
 (let ((?x12173 (* ?x11474 l_0_6_42)))
 (let ((?x11471 (* 4.0 l_0_6_34)))
 (let ((?x11472 (* ?x11471 l_0_6_34)))
 (let ((?x12170 (* ?x11471 l_0_6_41)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12168 (* ?x10883 l_0_6_41)))
 (let ((?x11462 (* l_0_6_21 l_0_6_21)))
 (let ((?x11463 (* 4.0 ?x11462)))
 (let ((?x12110 (* 4.0 l_0_6_21)))
 (let ((?x12165 (* ?x12110 l_0_6_28)))
 (let ((?x11459 (* l_0_6_20 l_0_6_20)))
 (let ((?x11460 (* 4.0 ?x11459)))
 (let ((?x12104 (* 4.0 l_0_6_20)))
 (let ((?x12162 (* ?x12104 l_0_6_27)))
 (let ((?x11456 (* l_0_6_19 l_0_6_19)))
 (let ((?x11457 (* 4.0 ?x11456)))
 (let ((?x12098 (* 4.0 l_0_6_19)))
 (let ((?x12159 (* ?x12098 l_0_6_26)))
 (let ((?x12164 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_26) ?x12159) ?x11457) ?x12162) ?x11460)))
 (let ((?x12175 (- (- (- (- (+ (+ (+ ?x12164 ?x12165) ?x11463) ?x12168) ?x12170) ?x11472) ?x12173) ?x11475)))
 (= (+ (+ (+ (- (- ?x12175 ?x12176) ?x11478) ?x12179) ?x12181) ?x12183) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x1957 (* l_0_6_33 l_0_6_33)))
 (let ((?x1952 (* l_0_6_32 l_0_6_32)))
 (let ((?x12197 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x1952) ?x1957)))
 (= ?x12197 0.0)))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12207 (* ?x11373 l_0_6_35)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12205 (* ?x11367 l_0_6_34)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x12203 (* ?x11395 l_0_6_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x12203) ?x12205) ?x12207) 0.0))))))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12222 (* ?x11373 l_0_6_38)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12220 (* ?x11367 l_0_6_37)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x3647 (* ?x11395 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x3647) ?x12220) ?x12222) 0.0))))))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12241 (* ?x11373 l_0_6_42)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12239 (* ?x11367 l_0_6_41)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x12232 (* ?x11395 l_0_6_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_26) ?x12232) ?x12239) ?x12241) 0.0))))))))
(assert
 (let ((?x2258 (* l_0_6_36 l_0_6_36)))
 (let ((?x2241 (* l_0_6_35 l_0_6_35)))
 (let ((?x11495 (* l_0_6_34 l_0_6_34)))
 (let ((?x11462 (* l_0_6_21 l_0_6_21)))
 (let ((?x12259 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x11462) ?x11495)))
 (= (+ (+ ?x12259 ?x2241) ?x2258) 0.0)))))))
(assert
 (let ((?x12077 (* 2.0 l_0_6_36)))
 (let ((?x12282 (* ?x12077 l_0_6_39)))
 (let ((?x12074 (* 2.0 l_0_6_35)))
 (let ((?x12280 (* ?x12074 l_0_6_38)))
 (let ((?x12071 (* 2.0 l_0_6_34)))
 (let ((?x12278 (* ?x12071 l_0_6_37)))
 (let ((?x12113 (* 2.0 l_0_6_21)))
 (let ((?x12276 (* ?x12113 l_0_6_24)))
 (let ((?x12107 (* 2.0 l_0_6_20)))
 (let ((?x12274 (* ?x12107 l_0_6_23)))
 (let ((?x12281 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x12274) ?x12276) ?x12278) ?x12280)))
 (= (+ ?x12281 ?x12282) 0.0)))))))))))))
(assert
 (let ((?x12077 (* 2.0 l_0_6_36)))
 (let ((?x12298 (* ?x12077 l_0_6_43)))
 (let ((?x12074 (* 2.0 l_0_6_35)))
 (let ((?x12296 (* ?x12074 l_0_6_42)))
 (let ((?x12071 (* 2.0 l_0_6_34)))
 (let ((?x12294 (* ?x12071 l_0_6_41)))
 (let ((?x12113 (* 2.0 l_0_6_21)))
 (let ((?x3673 (* ?x12113 l_0_6_28)))
 (let ((?x12107 (* 2.0 l_0_6_20)))
 (let ((?x3681 (* ?x12107 l_0_6_27)))
 (let ((?x12297 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_26) ?x3681) ?x3673) ?x12294) ?x12296)))
 (= (+ ?x12297 ?x12298) 0.0)))))))))))))
(assert
 (let ((?x2571 (* l_0_6_40 l_0_6_40)))
 (let ((?x2565 (* l_0_6_39 l_0_6_39)))
 (let ((?x2495 (* l_0_6_38 l_0_6_38)))
 (let ((?x2500 (* l_0_6_37 l_0_6_37)))
 (let ((?x2258 (* l_0_6_36 l_0_6_36)))
 (let ((?x2241 (* l_0_6_35 l_0_6_35)))
 (let ((?x11495 (* l_0_6_34 l_0_6_34)))
 (let ((?x11652 (* l_0_6_25 l_0_6_25)))
 (let ((?x11649 (* l_0_6_24 l_0_6_24)))
 (let ((?x11646 (* l_0_6_23 l_0_6_23)))
 (let ((?x11643 (* l_0_6_22 l_0_6_22)))
 (let ((?x11462 (* l_0_6_21 l_0_6_21)))
 (let ((?x12313 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x11462) ?x11643)))
 (let ((?x12320 (+ (- (- (- (- (- (- ?x12313 ?x11646) ?x11649) ?x11652) ?x11495) ?x2241) ?x2258) ?x2500)))
 (= (+ (+ (+ ?x12320 ?x2495) ?x2565) ?x2571) 0.0))))))))))))))))
(assert
 (let ((?x12361 (* 2.0 l_0_6_40)))
 (let ((?x12362 (* ?x12361 l_0_6_44)))
 (let ((?x12358 (* 2.0 l_0_6_39)))
 (let ((?x12359 (* ?x12358 l_0_6_43)))
 (let ((?x12355 (* 2.0 l_0_6_38)))
 (let ((?x12356 (* ?x12355 l_0_6_42)))
 (let ((?x12352 (* 2.0 l_0_6_37)))
 (let ((?x12353 (* ?x12352 l_0_6_41)))
 (let ((?x12349 (* 2.0 l_0_6_25)))
 (let ((?x12350 (* ?x12349 l_0_6_29)))
 (let ((?x12346 (* 2.0 l_0_6_24)))
 (let ((?x12347 (* ?x12346 l_0_6_28)))
 (let ((?x12343 (* 2.0 l_0_6_23)))
 (let ((?x12344 (* ?x12343 l_0_6_27)))
 (let ((?x12354 (+ (- (- (- (* (* (- 2.0) l_0_6_22) l_0_6_26) ?x12344) ?x12347) ?x12350) ?x12353)))
 (= (+ (+ (+ ?x12354 ?x12356) ?x12359) ?x12362) 0.0)))))))))))))))))
(assert
 (let ((?x2841 (* l_0_6_45 l_0_6_45)))
 (let ((?x2818 (* l_0_6_44 l_0_6_44)))
 (let ((?x2785 (* l_0_6_43 l_0_6_43)))
 (let ((?x2816 (* l_0_6_42 l_0_6_42)))
 (let ((?x2811 (* l_0_6_41 l_0_6_41)))
 (let ((?x11771 (* l_0_6_30 l_0_6_30)))
 (let ((?x11768 (* l_0_6_29 l_0_6_29)))
 (let ((?x11765 (* l_0_6_28 l_0_6_28)))
 (let ((?x12379 (- (- (- (* (- l_0_6_26) l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x11765) ?x11768)))
 (= (+ (+ (+ (+ (+ (- ?x12379 ?x11771) ?x2811) ?x2816) ?x2785) ?x2818) ?x2841) 0.0)))))))))))
(assert
 (let ((?x11477 (* 4.0 l_0_6_36)))
 (let ((?x12124 (* ?x11477 l_0_6_39)))
 (let ((?x11474 (* 4.0 l_0_6_35)))
 (let ((?x12121 (* ?x11474 l_0_6_38)))
 (let ((?x11471 (* 4.0 l_0_6_34)))
 (let ((?x12118 (* ?x11471 l_0_6_37)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12069 (* ?x10883 l_0_6_34)))
 (let ((?x12110 (* 4.0 l_0_6_21)))
 (let ((?x12111 (* ?x12110 l_0_6_24)))
 (let ((?x12104 (* 4.0 l_0_6_20)))
 (let ((?x12105 (* ?x12104 l_0_6_23)))
 (let ((?x12098 (* 4.0 l_0_6_19)))
 (let ((?x12099 (* ?x12098 l_0_6_22)))
 (let ((?x12404 (+ (- (- (- (* (* 2.0 l_0_6_16) l_0_6_19) ?x12099) ?x12105) ?x12111) (* 2.0 (* l_0_6_22 l_0_6_22)))))
 (let ((?x12408 (+ (+ ?x12404 (* 2.0 (* l_0_6_23 l_0_6_23))) (* 2.0 (* l_0_6_24 l_0_6_24)))))
 (let ((?x12413 (+ (+ (- (+ ?x12408 (* 2.0 (* l_0_6_25 l_0_6_25))) ?x12069) ?x12118) ?x12121)))
 (let ((?x12418 (- (- (+ ?x12413 ?x12124) (* (* 2.0 l_0_6_37) l_0_6_37)) (* (* 2.0 l_0_6_38) l_0_6_38))))
 (let ((?x12422 (- (- ?x12418 (* (* 2.0 l_0_6_39) l_0_6_39)) (* (* 2.0 l_0_6_40) l_0_6_40))))
 (= ?x12422 0.0)))))))))))))))))))))
(assert
 (let ((?x2571 (* l_0_6_40 l_0_6_40)))
 (let ((?x3851 (* 2.0 ?x2571)))
 (let ((?x2565 (* l_0_6_39 l_0_6_39)))
 (let ((?x3850 (* 2.0 ?x2565)))
 (let ((?x2495 (* l_0_6_38 l_0_6_38)))
 (let ((?x3844 (* 2.0 ?x2495)))
 (let ((?x2500 (* l_0_6_37 l_0_6_37)))
 (let ((?x12438 (* 2.0 ?x2500)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12116 (* ?x10883 l_0_6_37)))
 (let ((?x12449 (- (* (* 2.0 l_0_6_16) l_0_6_22) (* (* 2.0 l_0_6_22) l_0_6_22))))
 (let ((?x12453 (- (- ?x12449 (* (* 2.0 l_0_6_23) l_0_6_23)) (* (* 2.0 l_0_6_24) l_0_6_24))))
 (let ((?x12458 (+ (+ (- (- ?x12453 (* (* 2.0 l_0_6_25) l_0_6_25)) ?x12116) ?x12438) ?x3844)))
 (= (+ (+ ?x12458 ?x3850) ?x3851) 0.0)))))))))))))))
(assert
 (let ((?x12498 (* l_0_6_55 l_0_6_55)))
 (let ((?x12496 (* l_0_6_54 l_0_6_54)))
 (let ((?x12494 (* l_0_6_53 l_0_6_53)))
 (let ((?x12492 (* l_0_6_52 l_0_6_52)))
 (let ((?x11667 (* 4.0 l_0_6_40)))
 (let ((?x11668 (* ?x11667 l_0_6_40)))
 (let ((?x12489 (* ?x11667 l_0_6_44)))
 (let ((?x11664 (* 4.0 l_0_6_39)))
 (let ((?x11665 (* ?x11664 l_0_6_39)))
 (let ((?x12486 (* ?x11664 l_0_6_43)))
 (let ((?x11661 (* 4.0 l_0_6_38)))
 (let ((?x11662 (* ?x11661 l_0_6_38)))
 (let ((?x12483 (* ?x11661 l_0_6_42)))
 (let ((?x11658 (* 4.0 l_0_6_37)))
 (let ((?x11659 (* ?x11658 l_0_6_37)))
 (let ((?x12480 (* ?x11658 l_0_6_41)))
 (let ((?x10883 (* 2.0 l_0_6_31)))
 (let ((?x12168 (* ?x10883 l_0_6_41)))
 (let ((?x11652 (* l_0_6_25 l_0_6_25)))
 (let ((?x11653 (* 4.0 ?x11652)))
 (let ((?x12476 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x11649 (* l_0_6_24 l_0_6_24)))
 (let ((?x11650 (* 4.0 ?x11649)))
 (let ((?x12472 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x11646 (* l_0_6_23 l_0_6_23)))
 (let ((?x11647 (* 4.0 ?x11646)))
 (let ((?x12468 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x11643 (* l_0_6_22 l_0_6_22)))
 (let ((?x11644 (* 4.0 ?x11643)))
 (let ((?x3941 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x12470 (+ (- (+ (- (* (* 2.0 l_0_6_16) l_0_6_26) ?x3941) ?x11644) ?x12468) ?x11647)))
 (let ((?x12482 (- (+ (- (+ (- (+ (- ?x12470 ?x12472) ?x11650) ?x12476) ?x11653) ?x12168) ?x12480) ?x11659)))
 (let ((?x12493 (+ (- (+ (- (+ (- (+ ?x12482 ?x12483) ?x11662) ?x12486) ?x11665) ?x12489) ?x11668) ?x12492)))
 (= (+ (+ (+ ?x12493 ?x12494) ?x12496) ?x12498) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1957 (* l_0_6_33 l_0_6_33)))
 (let ((?x1952 (* l_0_6_32 l_0_6_32)))
 (let ((?x12536 (- (- (+ (* l_0_6_17 l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x1952) ?x1957)))
 (= ?x12536 0.0)))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12207 (* ?x11373 l_0_6_35)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12205 (* ?x11367 l_0_6_34)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x12203 (* ?x11395 l_0_6_20)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x12203) ?x12205) ?x12207) 0.0))))))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12222 (* ?x11373 l_0_6_38)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12220 (* ?x11367 l_0_6_37)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x3647 (* ?x11395 l_0_6_23)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_22) ?x3647) ?x12220) ?x12222) 0.0))))))))
(assert
 (let ((?x11373 (* 2.0 l_0_6_33)))
 (let ((?x12241 (* ?x11373 l_0_6_42)))
 (let ((?x11367 (* 2.0 l_0_6_32)))
 (let ((?x12239 (* ?x11367 l_0_6_41)))
 (let ((?x11395 (* 2.0 l_0_6_18)))
 (let ((?x12232 (* ?x11395 l_0_6_27)))
 (= (- (- (+ (* (* 2.0 l_0_6_17) l_0_6_26) ?x12232) ?x12239) ?x12241) 0.0))))))))
(assert
 (let ((?x12077 (* 2.0 l_0_6_36)))
 (let ((?x12282 (* ?x12077 l_0_6_39)))
 (let ((?x12074 (* 2.0 l_0_6_35)))
 (let ((?x12280 (* ?x12074 l_0_6_38)))
 (let ((?x12071 (* 2.0 l_0_6_34)))
 (let ((?x12278 (* ?x12071 l_0_6_37)))
 (let ((?x12113 (* 2.0 l_0_6_21)))
 (let ((?x12276 (* ?x12113 l_0_6_24)))
 (let ((?x12107 (* 2.0 l_0_6_20)))
 (let ((?x12274 (* ?x12107 l_0_6_23)))
 (let ((?x12562 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_22) ?x12274) ?x12276) ?x12278) ?x12280)))
 (= (- ?x12562 ?x12282) 0.0)))))))))))))
(assert
 (let ((?x12077 (* 2.0 l_0_6_36)))
 (let ((?x12298 (* ?x12077 l_0_6_43)))
 (let ((?x12074 (* 2.0 l_0_6_35)))
 (let ((?x12296 (* ?x12074 l_0_6_42)))
 (let ((?x12071 (* 2.0 l_0_6_34)))
 (let ((?x12294 (* ?x12071 l_0_6_41)))
 (let ((?x12113 (* 2.0 l_0_6_21)))
 (let ((?x3673 (* ?x12113 l_0_6_28)))
 (let ((?x12107 (* 2.0 l_0_6_20)))
 (let ((?x3681 (* ?x12107 l_0_6_27)))
 (let ((?x4139 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_26) ?x3681) ?x3673) ?x12294) ?x12296)))
 (= (- ?x4139 ?x12298) 0.0)))))))))))))
(assert
 (let ((?x2571 (* l_0_6_40 l_0_6_40)))
 (let ((?x2565 (* l_0_6_39 l_0_6_39)))
 (let ((?x2495 (* l_0_6_38 l_0_6_38)))
 (let ((?x2500 (* l_0_6_37 l_0_6_37)))
 (let ((?x11652 (* l_0_6_25 l_0_6_25)))
 (let ((?x11649 (* l_0_6_24 l_0_6_24)))
 (let ((?x4167 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x11649) ?x11652)))
 (= (- (- (- (- ?x4167 ?x2500) ?x2495) ?x2565) ?x2571) 0.0)))))))))
(assert
 (let ((?x12361 (* 2.0 l_0_6_40)))
 (let ((?x12362 (* ?x12361 l_0_6_44)))
 (let ((?x12358 (* 2.0 l_0_6_39)))
 (let ((?x12359 (* ?x12358 l_0_6_43)))
 (let ((?x12355 (* 2.0 l_0_6_38)))
 (let ((?x12356 (* ?x12355 l_0_6_42)))
 (let ((?x12352 (* 2.0 l_0_6_37)))
 (let ((?x12353 (* ?x12352 l_0_6_41)))
 (let ((?x12349 (* 2.0 l_0_6_25)))
 (let ((?x12350 (* ?x12349 l_0_6_29)))
 (let ((?x12346 (* 2.0 l_0_6_24)))
 (let ((?x12347 (* ?x12346 l_0_6_28)))
 (let ((?x12343 (* 2.0 l_0_6_23)))
 (let ((?x12344 (* ?x12343 l_0_6_27)))
 (let ((?x4213 (- (+ (+ (+ (* (* 2.0 l_0_6_22) l_0_6_26) ?x12344) ?x12347) ?x12350) ?x12353)))
 (= (- (- (- ?x4213 ?x12356) ?x12359) ?x12362) 0.0)))))))))))))))))
(assert
 (let ((?x2841 (* l_0_6_45 l_0_6_45)))
 (let ((?x2818 (* l_0_6_44 l_0_6_44)))
 (let ((?x2785 (* l_0_6_43 l_0_6_43)))
 (let ((?x2816 (* l_0_6_42 l_0_6_42)))
 (let ((?x2811 (* l_0_6_41 l_0_6_41)))
 (let ((?x11771 (* l_0_6_30 l_0_6_30)))
 (let ((?x11768 (* l_0_6_29 l_0_6_29)))
 (let ((?x11765 (* l_0_6_28 l_0_6_28)))
 (let ((?x4276 (+ (+ (+ (* l_0_6_26 l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x11765) ?x11768)))
 (= (- (- (- (- (- (+ ?x4276 ?x11771) ?x2811) ?x2816) ?x2785) ?x2818) ?x2841) 0.0)))))))))))
(assert
 (let ((?x11667 (* 4.0 l_0_6_40)))
 (let ((?x12489 (* ?x11667 l_0_6_44)))
 (let ((?x11664 (* 4.0 l_0_6_39)))
 (let ((?x12486 (* ?x11664 l_0_6_43)))
 (let ((?x11661 (* 4.0 l_0_6_38)))
 (let ((?x12483 (* ?x11661 l_0_6_42)))
 (let ((?x11658 (* 4.0 l_0_6_37)))
 (let ((?x12480 (* ?x11658 l_0_6_41)))
 (let ((?x11477 (* 4.0 l_0_6_36)))
 (let ((?x12176 (* ?x11477 l_0_6_43)))
 (let ((?x11520 (* 8.0 l_0_6_36)))
 (let ((?x11521 (* ?x11520 l_0_6_39)))
 (let ((?x11474 (* 4.0 l_0_6_35)))
 (let ((?x12173 (* ?x11474 l_0_6_42)))
 (let ((?x11517 (* 8.0 l_0_6_35)))
 (let ((?x11518 (* ?x11517 l_0_6_38)))
 (let ((?x11471 (* 4.0 l_0_6_34)))
 (let ((?x12170 (* ?x11471 l_0_6_41)))
 (let ((?x11514 (* 8.0 l_0_6_34)))
 (let ((?x11515 (* ?x11514 l_0_6_37)))
 (let ((?x12476 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x12472 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x12468 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x3941 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x12110 (* 4.0 l_0_6_21)))
 (let ((?x12165 (* ?x12110 l_0_6_28)))
 (let ((?x11505 (* 8.0 l_0_6_21)))
 (let ((?x11506 (* ?x11505 l_0_6_24)))
 (let ((?x12104 (* 4.0 l_0_6_20)))
 (let ((?x12162 (* ?x12104 l_0_6_27)))
 (let ((?x11502 (* 8.0 l_0_6_20)))
 (let ((?x11503 (* ?x11502 l_0_6_23)))
 (let ((?x12098 (* 4.0 l_0_6_19)))
 (let ((?x12159 (* ?x12098 l_0_6_26)))
 (let ((?x2282 (* 8.0 l_0_6_19)))
 (let ((?x2279 (* ?x2282 l_0_6_22)))
 (let ((?x4281 (+ (+ (- (+ (- (+ (- ?x2279 ?x12159) ?x11503) ?x12162) ?x11506) ?x12165) ?x3941) ?x12468)))
 (let ((?x12616 (- (+ (- (+ (- (+ (+ ?x4281 ?x12472) ?x12476) ?x11515) ?x12170) ?x11518) ?x12173) ?x11521)))
 (let ((?x12624 (+ (- (- (- (- (+ ?x12616 ?x12176) ?x12480) ?x12483) ?x12486) ?x12489) (* (* 2.0 l_0_6_49) l_0_6_52))))
 (let ((?x12630 (+ (+ ?x12624 (* (* 2.0 l_0_6_50) l_0_6_53)) (* (* 2.0 l_0_6_51) l_0_6_54))))
 (= ?x12630 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11520 (* 8.0 l_0_6_36)))
 (let ((?x11596 (* ?x11520 l_0_6_43)))
 (let ((?x11517 (* 8.0 l_0_6_35)))
 (let ((?x11594 (* ?x11517 l_0_6_42)))
 (let ((?x11514 (* 8.0 l_0_6_34)))
 (let ((?x11592 (* ?x11514 l_0_6_41)))
 (let ((?x11505 (* 8.0 l_0_6_21)))
 (let ((?x11584 (* ?x11505 l_0_6_28)))
 (let ((?x11502 (* 8.0 l_0_6_20)))
 (let ((?x11582 (* ?x11502 l_0_6_27)))
 (let ((?x2282 (* 8.0 l_0_6_19)))
 (let ((?x11580 (* ?x2282 l_0_6_26)))
 (let ((?x12650 (+ (+ (+ (+ ?x11580 ?x11582) ?x11584) (* 2.0 (* l_0_6_26 l_0_6_26))) (* 2.0 (* l_0_6_27 l_0_6_27)))))
 (let ((?x12654 (+ (+ ?x12650 (* 2.0 (* l_0_6_28 l_0_6_28))) (* 2.0 (* l_0_6_29 l_0_6_29)))))
 (let ((?x12659 (- (- (- (+ ?x12654 (* 2.0 (* l_0_6_30 l_0_6_30))) ?x11592) ?x11594) ?x11596)))
 (let ((?x12665 (- (- ?x12659 (* (* 2.0 l_0_6_41) l_0_6_41)) (* (* 2.0 l_0_6_42) l_0_6_42))))
 (let ((?x12671 (- (- ?x12665 (* (* 2.0 l_0_6_43) l_0_6_43)) (* (* 2.0 l_0_6_44) l_0_6_44))))
 (let ((?x12676 (+ (- ?x12671 (* (* 2.0 l_0_6_45) l_0_6_45)) (* (* 2.0 l_0_6_49) l_0_6_56))))
 (let ((?x12680 (+ (+ ?x12676 (* (* 2.0 l_0_6_50) l_0_6_57)) (* (* 2.0 l_0_6_51) l_0_6_58))))
 (= ?x12680 0.0)))))))))))))))))))))
(assert
 (let ((?x2841 (* l_0_6_45 l_0_6_45)))
 (let ((?x4453 (* 2.0 ?x2841)))
 (let ((?x2818 (* l_0_6_44 l_0_6_44)))
 (let ((?x4442 (* 2.0 ?x2818)))
 (let ((?x2785 (* l_0_6_43 l_0_6_43)))
 (let ((?x4440 (* 2.0 ?x2785)))
 (let ((?x2816 (* l_0_6_42 l_0_6_42)))
 (let ((?x12688 (* 2.0 ?x2816)))
 (let ((?x2811 (* l_0_6_41 l_0_6_41)))
 (let ((?x12683 (* 2.0 ?x2811)))
 (let ((?x11716 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x11713 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x11710 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x11707 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x11700 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x11697 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x11694 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x11691 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x12714 (- (+ (+ (+ ?x11691 ?x11694) ?x11697) ?x11700) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x12720 (- (- ?x12714 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x12726 (- (- ?x12720 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (let ((?x12733 (+ (+ (+ (- (- (- (- ?x12726 ?x11707) ?x11710) ?x11713) ?x11716) ?x12683) ?x12688) ?x4440)))
 (let ((?x12741 (+ (+ (+ (+ ?x12733 ?x4442) ?x4453) (* (* 2.0 l_0_6_52) l_0_6_56)) (* (* 2.0 l_0_6_53) l_0_6_57))))
 (let ((?x12747 (+ (+ ?x12741 (* (* 2.0 l_0_6_54) l_0_6_58)) (* (* 2.0 l_0_6_55) l_0_6_59))))
 (= ?x12747 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12762 (* l_0_6_60 l_0_6_60)))
 (let ((?x12760 (* l_0_6_59 l_0_6_59)))
 (let ((?x12758 (* l_0_6_58 l_0_6_58)))
 (let ((?x12756 (* l_0_6_57 l_0_6_57)))
 (let ((?x12754 (* l_0_6_56 l_0_6_56)))
 (let ((?x11789 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x11786 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x11783 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x11780 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x11777 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x11771 (* l_0_6_30 l_0_6_30)))
 (let ((?x11772 (* 4.0 ?x11771)))
 (let ((?x11768 (* l_0_6_29 l_0_6_29)))
 (let ((?x11769 (* 4.0 ?x11768)))
 (let ((?x11765 (* l_0_6_28 l_0_6_28)))
 (let ((?x11766 (* 4.0 ?x11765)))
 (let ((?x11762 (* l_0_6_27 l_0_6_27)))
 (let ((?x11763 (* 4.0 ?x11762)))
 (let ((?x11759 (* l_0_6_26 l_0_6_26)))
 (let ((?x11760 (* 4.0 ?x11759)))
 (let ((?x3294 (- (- (- (+ (+ (+ (+ ?x11760 ?x11763) ?x11766) ?x11769) ?x11772) ?x11777) ?x11780) ?x11783)))
 (let ((?x12763 (+ (+ (+ (+ (+ (- (- ?x3294 ?x11786) ?x11789) ?x12754) ?x12756) ?x12758) ?x12760) ?x12762)))
 (= ?x12763 0.0))))))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x12804 (* ?x12803 l_0_7_31)))
 (let ((?x12800 (* l_0_7_16 l_0_7_16)))
 (let ((?x12801 (* 4.0 ?x12800)))
 (let ((?x12802 (+ (- (* (* 2.0 l_0_7_1) l_0_7_2) (* l_0_7_1 l_0_7_1)) ?x12801)))
 (= (+ (- (- ?x12802 ?x12804) (* (* 2.0 l_0_7_61) l_0_7_62)) 1.0) 0.0)))))))
(assert
 (let ((?x12830 (- (- (* 1.0 (* l_0_7_1 l_0_7_1)) (* l_0_7_61 l_0_7_61)) 1.0)))
 (= ?x12830 0.0)))
(assert
 (let ((?x12850 (* l_0_7_63 l_0_7_63)))
 (let ((?x12848 (* l_0_7_62 l_0_7_62)))
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12846 (* ?x12845 l_0_7_32)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x12837 (* ?x12836 l_0_7_17)))
 (let ((?x12841 (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) ?x12837) (* 1.0 (* l_0_7_2 l_0_7_2)))))
 (let ((?x12851 (- (- (- (+ ?x12841 (* 1.0 (* l_0_7_3 l_0_7_3))) ?x12846) ?x12848) ?x12850)))
 (= ?x12851 0.0))))))))))
(assert
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12876 (* ?x12845 l_0_7_34)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x12874 (* ?x12803 l_0_7_32)))
 (let ((?x12871 (* 2.0 l_0_7_3)))
 (let ((?x12872 (* ?x12871 l_0_7_5)))
 (let ((?x12868 (* 2.0 l_0_7_2)))
 (let ((?x12869 (* ?x12868 l_0_7_4)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x12866 (* ?x12836 l_0_7_19)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x4700 (* ?x3583 l_0_7_17)))
 (let ((?x12873 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x4700) ?x12866) ?x12869) ?x12872)))
 (let ((?x12883 (- (- (- (- ?x12873 ?x12874) ?x12876) (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (= ?x12883 0.0))))))))))))))))
(assert
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12902 (* ?x12845 l_0_7_37)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x12874 (* ?x12803 l_0_7_32)))
 (let ((?x12871 (* 2.0 l_0_7_3)))
 (let ((?x12899 (* ?x12871 l_0_7_8)))
 (let ((?x12868 (* 2.0 l_0_7_2)))
 (let ((?x12897 (* ?x12868 l_0_7_7)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x4735 (* ?x12836 l_0_7_22)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x4700 (* ?x3583 l_0_7_17)))
 (let ((?x12900 (+ (+ (+ (- (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x4700) ?x4735) ?x12897) ?x12899)))
 (let ((?x12907 (- (- (- (+ ?x12900 ?x12874) ?x12902) (* (* 2.0 l_0_7_62) l_0_7_67)) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (= ?x12907 0.0))))))))))))))))
(assert
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12932 (* ?x12845 l_0_7_41)))
 (let ((?x12846 (* ?x12845 l_0_7_32)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x12929 (* ?x12836 l_0_7_26)))
 (let ((?x12837 (* ?x12836 l_0_7_17)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x12926 (* ?x12925 l_0_7_3)))
 (let ((?x12924 (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_11) l_0_7_2))))
 (let ((?x12936 (- (- (- (+ (+ (+ ?x12924 ?x12926) ?x12837) ?x12929) ?x12846) ?x12932) (* (* 2.0 l_0_7_46) l_0_7_47))))
 (let ((?x12940 (- (- ?x12936 (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (= ?x12940 0.0)))))))))))))
(assert
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x12967 (* ?x12966 l_0_7_33)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x12964 (* ?x12963 l_0_7_32)))
 (let ((?x12842 (* l_0_7_3 l_0_7_3)))
 (let ((?x12839 (* l_0_7_2 l_0_7_2)))
 (let ((?x4931 (* l_0_7_18 l_0_7_18)))
 (let ((?x4932 (* 4.0 ?x4931)))
 (let ((?x4934 (* l_0_7_17 l_0_7_17)))
 (let ((?x4929 (* 4.0 ?x4934)))
 (= (- (- (- (- (+ ?x4929 ?x4932) ?x12839) ?x12842) ?x12964) ?x12967) 0.0))))))))))))
(assert
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x12991 (* ?x12990 l_0_7_35)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x12985 (* ?x12984 l_0_7_34)))
 (let ((?x12871 (* 2.0 l_0_7_3)))
 (let ((?x12872 (* ?x12871 l_0_7_5)))
 (let ((?x12868 (* 2.0 l_0_7_2)))
 (let ((?x12869 (* ?x12868 l_0_7_4)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x12978 (* ?x12977 l_0_7_20)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x12974 (* ?x12973 l_0_7_19)))
 (let ((?x12981 (+ (+ (+ ?x12974 (* 2.0 (* l_0_7_17 l_0_7_17))) ?x12978) (* 2.0 (* l_0_7_18 l_0_7_18)))))
 (let ((?x12989 (- (- (- (- ?x12981 ?x12869) ?x12872) ?x12985) (* (* 2.0 l_0_7_32) l_0_7_32))))
 (= (- (- ?x12989 ?x12991) (* (* 2.0 l_0_7_33) l_0_7_33)) 0.0))))))))))))))))
(assert
 (let ((?x4617 (* l_0_7_33 l_0_7_33)))
 (let ((?x5050 (* 2.0 ?x4617)))
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x13031 (* ?x12990 l_0_7_38)))
 (let ((?x4999 (* l_0_7_32 l_0_7_32)))
 (let ((?x5022 (* 2.0 ?x4999)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x13028 (* ?x12984 l_0_7_37)))
 (let ((?x12871 (* 2.0 l_0_7_3)))
 (let ((?x12899 (* ?x12871 l_0_7_8)))
 (let ((?x12868 (* 2.0 l_0_7_2)))
 (let ((?x12897 (* ?x12868 l_0_7_7)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x13021 (* ?x12977 l_0_7_23)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x13017 (* ?x12973 l_0_7_22)))
 (let ((?x13025 (- (+ (- ?x13017 (* (* 2.0 l_0_7_17) l_0_7_17)) ?x13021) (* (* 2.0 l_0_7_18) l_0_7_18))))
 (= (+ (- (+ (- (- (- ?x13025 ?x12897) ?x12899) ?x13028) ?x5022) ?x13031) ?x5050) 0.0)))))))))))))))))))
(assert
 (let ((?x13061 (* l_0_7_48 l_0_7_48)))
 (let ((?x13059 (* l_0_7_47 l_0_7_47)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x12967 (* ?x12966 l_0_7_33)))
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x13056 (* ?x12990 l_0_7_42)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x12964 (* ?x12963 l_0_7_32)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x13053 (* ?x12984 l_0_7_41)))
 (let ((?x4931 (* l_0_7_18 l_0_7_18)))
 (let ((?x4932 (* 4.0 ?x4931)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x13050 (* ?x12977 l_0_7_27)))
 (let ((?x4934 (* l_0_7_17 l_0_7_17)))
 (let ((?x4929 (* 4.0 ?x4934)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x5109 (* ?x12973 l_0_7_26)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x12926 (* ?x12925 l_0_7_3)))
 (let ((?x13051 (+ (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x12926) ?x5109) ?x4929) ?x13050)))
 (let ((?x13062 (- (- (- (- (- (- (+ ?x13051 ?x4932) ?x13053) ?x12964) ?x13056) ?x12967) ?x13059) ?x13061)))
 (= ?x13062 0.0))))))))))))))))))))))))
(assert
 (let ((?x13109 (* l_0_7_6 l_0_7_6)))
 (let ((?x13107 (* l_0_7_5 l_0_7_5)))
 (let ((?x13105 (* l_0_7_4 l_0_7_4)))
 (let ((?x13102 (* 4.0 l_0_7_36)))
 (let ((?x13103 (* ?x13102 l_0_7_36)))
 (let ((?x13099 (* 4.0 l_0_7_35)))
 (let ((?x13100 (* ?x13099 l_0_7_35)))
 (let ((?x13096 (* 4.0 l_0_7_34)))
 (let ((?x13097 (* ?x13096 l_0_7_34)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x13094 (* ?x12966 l_0_7_35)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x13092 (* ?x12963 l_0_7_34)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13090 (* ?x13089 l_0_7_32)))
 (let ((?x13086 (* l_0_7_21 l_0_7_21)))
 (let ((?x13087 (* 4.0 ?x13086)))
 (let ((?x13083 (* l_0_7_20 l_0_7_20)))
 (let ((?x13084 (* 4.0 ?x13083)))
 (let ((?x13080 (* l_0_7_19 l_0_7_19)))
 (let ((?x13081 (* 4.0 ?x13080)))
 (let ((?x5131 (* 4.0 l_0_7_18)))
 (let ((?x13078 (* ?x5131 l_0_7_20)))
 (let ((?x3858 (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) (* (* 4.0 l_0_7_17) l_0_7_19))))
 (let ((?x13095 (- (- (+ (+ (+ (+ (+ ?x3858 ?x13078) ?x13081) ?x13084) ?x13087) ?x13090) ?x13092) ?x13094)))
 (= (- (- (- (- (- (- ?x13095 ?x13097) ?x13100) ?x13103) ?x13105) ?x13107) ?x13109) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13182 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x13179 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x13176 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x13172 (* 8.0 l_0_7_36)))
 (let ((?x13173 (* ?x13172 l_0_7_39)))
 (let ((?x13169 (* 8.0 l_0_7_35)))
 (let ((?x13170 (* ?x13169 l_0_7_38)))
 (let ((?x13166 (* 8.0 l_0_7_34)))
 (let ((?x13167 (* ?x13166 l_0_7_37)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x13164 (* ?x12966 l_0_7_38)))
 (let ((?x13094 (* ?x12966 l_0_7_35)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x13161 (* ?x12963 l_0_7_37)))
 (let ((?x13092 (* ?x12963 l_0_7_34)))
 (let ((?x13157 (* 8.0 l_0_7_21)))
 (let ((?x13158 (* ?x13157 l_0_7_24)))
 (let ((?x13154 (* 8.0 l_0_7_20)))
 (let ((?x13155 (* ?x13154 l_0_7_23)))
 (let ((?x13151 (* 8.0 l_0_7_19)))
 (let ((?x13152 (* ?x13151 l_0_7_22)))
 (let ((?x5131 (* 4.0 l_0_7_18)))
 (let ((?x13149 (* ?x5131 l_0_7_23)))
 (let ((?x13078 (* ?x5131 l_0_7_20)))
 (let ((?x5130 (* 4.0 l_0_7_17)))
 (let ((?x13146 (* ?x5130 l_0_7_22)))
 (let ((?x13153 (+ (+ (- (+ (* (* (- 4.0) l_0_7_17) l_0_7_19) ?x13146) ?x13078) ?x13149) ?x13152)))
 (let ((?x13168 (- (- (+ (- (+ (+ (+ ?x13153 ?x13155) ?x13158) ?x13092) ?x13161) ?x13094) ?x13164) ?x13167)))
 (= (- (- (- (- (- ?x13168 ?x13170) ?x13173) ?x13176) ?x13179) ?x13182) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13172 (* 8.0 l_0_7_36)))
 (let ((?x13252 (* ?x13172 l_0_7_43)))
 (let ((?x13169 (* 8.0 l_0_7_35)))
 (let ((?x13250 (* ?x13169 l_0_7_42)))
 (let ((?x13166 (* 8.0 l_0_7_34)))
 (let ((?x13248 (* ?x13166 l_0_7_41)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x13246 (* ?x12966 l_0_7_42)))
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x12991 (* ?x12990 l_0_7_35)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x13243 (* ?x12963 l_0_7_41)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x12985 (* ?x12984 l_0_7_34)))
 (let ((?x13157 (* 8.0 l_0_7_21)))
 (let ((?x13240 (* ?x13157 l_0_7_28)))
 (let ((?x13154 (* 8.0 l_0_7_20)))
 (let ((?x13238 (* ?x13154 l_0_7_27)))
 (let ((?x13151 (* 8.0 l_0_7_19)))
 (let ((?x13236 (* ?x13151 l_0_7_26)))
 (let ((?x5131 (* 4.0 l_0_7_18)))
 (let ((?x13234 (* ?x5131 l_0_7_27)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x12978 (* ?x12977 l_0_7_20)))
 (let ((?x5130 (* 4.0 l_0_7_17)))
 (let ((?x13231 (* ?x5130 l_0_7_26)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x12974 (* ?x12973 l_0_7_19)))
 (let ((?x13227 (* 2.0 l_0_7_13)))
 (let ((?x13228 (* ?x13227 l_0_7_6)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x13225 (* ?x12925 l_0_7_5)))
 (let ((?x13232 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x13225) ?x13228) ?x12974) ?x13231)))
 (let ((?x13244 (- (- (+ (+ (+ (+ (+ ?x13232 ?x12978) ?x13234) ?x13236) ?x13238) ?x13240) ?x12985) ?x13243)))
 (let ((?x13256 (- (- (- (- (- (- ?x13244 ?x12991) ?x13246) ?x13248) ?x13250) ?x13252) (* (* 2.0 l_0_7_47) l_0_7_49))))
 (= (- ?x13256 (* (* 2.0 l_0_7_48) l_0_7_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13336 (* l_0_7_9 l_0_7_9)))
 (let ((?x13334 (* l_0_7_8 l_0_7_8)))
 (let ((?x13332 (* l_0_7_7 l_0_7_7)))
 (let ((?x13329 (* 4.0 l_0_7_40)))
 (let ((?x13330 (* ?x13329 l_0_7_40)))
 (let ((?x13326 (* 4.0 l_0_7_39)))
 (let ((?x13327 (* ?x13326 l_0_7_39)))
 (let ((?x13323 (* 4.0 l_0_7_38)))
 (let ((?x13324 (* ?x13323 l_0_7_38)))
 (let ((?x13320 (* 4.0 l_0_7_37)))
 (let ((?x13321 (* ?x13320 l_0_7_37)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x13164 (* ?x12966 l_0_7_38)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x13161 (* ?x12963 l_0_7_37)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13090 (* ?x13089 l_0_7_32)))
 (let ((?x13314 (* l_0_7_25 l_0_7_25)))
 (let ((?x13315 (* 4.0 ?x13314)))
 (let ((?x13311 (* l_0_7_24 l_0_7_24)))
 (let ((?x13312 (* 4.0 ?x13311)))
 (let ((?x13308 (* l_0_7_23 l_0_7_23)))
 (let ((?x13309 (* 4.0 ?x13308)))
 (let ((?x13305 (* l_0_7_22 l_0_7_22)))
 (let ((?x13306 (* 4.0 ?x13305)))
 (let ((?x5131 (* 4.0 l_0_7_18)))
 (let ((?x13149 (* ?x5131 l_0_7_23)))
 (let ((?x5130 (* 4.0 l_0_7_17)))
 (let ((?x13146 (* ?x5130 l_0_7_22)))
 (let ((?x13303 (- (+ (* (- l_0_7_10) l_0_7_10) (* (* 2.0 l_0_7_16) l_0_7_17)) ?x13146)))
 (let ((?x13318 (+ (- (+ (+ (+ (+ (- ?x13303 ?x13149) ?x13306) ?x13309) ?x13312) ?x13315) ?x13090) ?x13161)))
 (let ((?x13335 (- (- (- (- (- (- (+ ?x13318 ?x13164) ?x13321) ?x13324) ?x13327) ?x13330) ?x13332) ?x13334)))
 (= (- ?x13335 ?x13336) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13394 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x13391 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x13388 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x13385 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x12966 (* 4.0 l_0_7_33)))
 (let ((?x13246 (* ?x12966 l_0_7_42)))
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x13031 (* ?x12990 l_0_7_38)))
 (let ((?x12963 (* 4.0 l_0_7_32)))
 (let ((?x13243 (* ?x12963 l_0_7_41)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x13028 (* ?x12984 l_0_7_37)))
 (let ((?x13378 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x13375 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x13372 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x13369 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x5131 (* 4.0 l_0_7_18)))
 (let ((?x13234 (* ?x5131 l_0_7_27)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x13021 (* ?x12977 l_0_7_23)))
 (let ((?x5130 (* 4.0 l_0_7_17)))
 (let ((?x13231 (* ?x5130 l_0_7_26)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x13017 (* ?x12973 l_0_7_22)))
 (let ((?x13227 (* 2.0 l_0_7_13)))
 (let ((?x13362 (* ?x13227 l_0_7_9)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x13360 (* ?x12925 l_0_7_8)))
 (let ((?x12922 (* 2.0 l_0_7_11)))
 (let ((?x13358 (* ?x12922 l_0_7_7)))
 (let ((?x13364 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x13358) ?x13360) ?x13362) ?x13017)))
 (let ((?x13379 (+ (+ (+ (+ (- (+ (- ?x13364 ?x13231) ?x13021) ?x13234) ?x13369) ?x13372) ?x13375) ?x13378)))
 (let ((?x13392 (- (- (- (+ (- (+ (- ?x13379 ?x13028) ?x13243) ?x13031) ?x13246) ?x13385) ?x13388) ?x13391)))
 (let ((?x13399 (- (- (- ?x13392 ?x13394) (* (* 2.0 l_0_7_47) l_0_7_52)) (* (* 2.0 l_0_7_48) l_0_7_53))))
 (= ?x13399 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13475 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x13472 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x13469 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x13466 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x13463 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x12990 (* 8.0 l_0_7_33)))
 (let ((?x13056 (* ?x12990 l_0_7_42)))
 (let ((?x12984 (* 8.0 l_0_7_32)))
 (let ((?x13053 (* ?x12984 l_0_7_41)))
 (let ((?x13457 (* l_0_7_30 l_0_7_30)))
 (let ((?x13458 (* 4.0 ?x13457)))
 (let ((?x13454 (* l_0_7_29 l_0_7_29)))
 (let ((?x13455 (* 4.0 ?x13454)))
 (let ((?x13451 (* l_0_7_28 l_0_7_28)))
 (let ((?x13452 (* 4.0 ?x13451)))
 (let ((?x13448 (* l_0_7_27 l_0_7_27)))
 (let ((?x13449 (* 4.0 ?x13448)))
 (let ((?x13445 (* l_0_7_26 l_0_7_26)))
 (let ((?x13446 (* 4.0 ?x13445)))
 (let ((?x12977 (* 8.0 l_0_7_18)))
 (let ((?x13050 (* ?x12977 l_0_7_27)))
 (let ((?x12973 (* 8.0 l_0_7_17)))
 (let ((?x5109 (* ?x12973 l_0_7_26)))
 (let ((?x13441 (* l_0_7_15 l_0_7_15)))
 (let ((?x13439 (* l_0_7_14 l_0_7_14)))
 (let ((?x13437 (* l_0_7_13 l_0_7_13)))
 (let ((?x13440 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x13437) ?x13439)))
 (let ((?x13456 (+ (+ (+ (+ (+ (+ (- ?x13440 ?x13441) ?x5109) ?x13050) ?x13446) ?x13449) ?x13452) ?x13455)))
 (let ((?x13473 (- (- (- (- (- (- (+ ?x13456 ?x13458) ?x13053) ?x13056) ?x13463) ?x13466) ?x13469) ?x13472)))
 (let ((?x13480 (- (- (- ?x13473 ?x13475) (* (* 2.0 l_0_7_47) l_0_7_56)) (* (* 2.0 l_0_7_48) l_0_7_57))))
 (= ?x13480 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x12800 (* l_0_7_16 l_0_7_16)))
 (let ((?x13519 (* 2.0 ?x12800)))
 (let ((?x13522 (- (+ (* (* 2.0 l_0_7_1) l_0_7_4) ?x13519) (* (* 2.0 l_0_7_31) l_0_7_31))))
 (= (- ?x13522 (* (* 2.0 l_0_7_61) l_0_7_64)) 0.0)))))
(assert
 (let ((?x13533 (- (* (* 2.0 l_0_7_1) l_0_7_7) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (let ((?x13536 (- (+ ?x13533 (* 2.0 (* l_0_7_31 l_0_7_31))) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (= ?x13536 0.0))))
(assert
 (let ((?x13545 (* l_0_7_46 l_0_7_46)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x12804 (* ?x12803 l_0_7_31)))
 (let ((?x12800 (* l_0_7_16 l_0_7_16)))
 (let ((?x12801 (* 4.0 ?x12800)))
 (let ((?x13548 (- (- (- (+ (* (* 2.0 l_0_7_1) l_0_7_11) ?x12801) ?x12804) ?x13545) (* (* 2.0 l_0_7_61) l_0_7_71))))
 (= ?x13548 0.0))))))))
(assert
 (let ((?x13568 (* l_0_7_66 l_0_7_66)))
 (let ((?x13566 (* l_0_7_65 l_0_7_65)))
 (let ((?x13564 (* l_0_7_64 l_0_7_64)))
 (let ((?x12817 (* l_0_7_31 l_0_7_31)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x13555 (* ?x12803 l_0_7_34)))
 (let ((?x13556 (- (- (* (* 4.0 l_0_7_16) l_0_7_19) (* l_0_7_16 l_0_7_16)) ?x13555)))
 (let ((?x13561 (+ (+ (+ ?x13556 ?x12817) (* 1.0 (* l_0_7_4 l_0_7_4))) (* 1.0 (* l_0_7_5 l_0_7_5)))))
 (let ((?x13569 (- (- (- (+ ?x13561 (* 1.0 (* l_0_7_6 l_0_7_6))) ?x13564) ?x13566) ?x13568)))
 (= ?x13569 0.0)))))))))))
(assert
 (let ((?x13182 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x13179 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x13176 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x13584 (* ?x12803 l_0_7_37)))
 (let ((?x13555 (* ?x12803 l_0_7_34)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x13581 (* ?x3583 l_0_7_22)))
 (let ((?x13586 (+ (- (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_19) ?x13581) ?x13555) ?x13584) ?x13176)))
 (let ((?x13594 (- (- (+ (+ ?x13586 ?x13179) ?x13182) (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (= (- ?x13594 (* (* 2.0 l_0_7_66) l_0_7_69)) 0.0))))))))))))
(assert
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x13620 (* ?x12803 l_0_7_41)))
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12876 (* ?x12845 l_0_7_34)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x13617 (* ?x3583 l_0_7_26)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x12866 (* ?x12836 l_0_7_19)))
 (let ((?x13227 (* 2.0 l_0_7_13)))
 (let ((?x13228 (* ?x13227 l_0_7_6)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x13225 (* ?x12925 l_0_7_5)))
 (let ((?x13618 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x13225) ?x13228) ?x12866) ?x13617)))
 (let ((?x13625 (- (- (- (- ?x13618 ?x12876) ?x13620) (* (* 2.0 l_0_7_46) l_0_7_49)) (* (* 2.0 l_0_7_64) l_0_7_71))))
 (let ((?x13629 (- (- ?x13625 (* (* 2.0 l_0_7_65) l_0_7_72)) (* (* 2.0 l_0_7_66) l_0_7_73))))
 (= ?x13629 0.0)))))))))))))))))
(assert
 (let ((?x13656 (* l_0_7_70 l_0_7_70)))
 (let ((?x13652 (* l_0_7_69 l_0_7_69)))
 (let ((?x13650 (* l_0_7_68 l_0_7_68)))
 (let ((?x13648 (* l_0_7_67 l_0_7_67)))
 (let ((?x12817 (* l_0_7_31 l_0_7_31)))
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x13584 (* ?x12803 l_0_7_37)))
 (let ((?x12800 (* l_0_7_16 l_0_7_16)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x13581 (* ?x3583 l_0_7_22)))
 (let ((?x13647 (- (+ (+ (- (* 1.0 (* l_0_7_10 l_0_7_10)) ?x13581) ?x12800) ?x13584) ?x12817)))
 (let ((?x13655 (+ (- (- (- ?x13647 ?x13648) ?x13650) ?x13652) (* 1.0 (* l_0_7_7 l_0_7_7)))))
 (let ((?x13661 (+ (+ (- ?x13655 ?x13656) (* 1.0 (* l_0_7_8 l_0_7_8))) (* 1.0 (* l_0_7_9 l_0_7_9)))))
 (= ?x13661 0.0)))))))))))))))
(assert
 (let ((?x12803 (* 4.0 l_0_7_31)))
 (let ((?x13620 (* ?x12803 l_0_7_41)))
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12902 (* ?x12845 l_0_7_37)))
 (let ((?x3583 (* 4.0 l_0_7_16)))
 (let ((?x13617 (* ?x3583 l_0_7_26)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x4735 (* ?x12836 l_0_7_22)))
 (let ((?x13227 (* 2.0 l_0_7_13)))
 (let ((?x13362 (* ?x13227 l_0_7_9)))
 (let ((?x12925 (* 2.0 l_0_7_12)))
 (let ((?x13360 (* ?x12925 l_0_7_8)))
 (let ((?x12922 (* 2.0 l_0_7_11)))
 (let ((?x13358 (* ?x12922 l_0_7_7)))
 (let ((?x5864 (+ (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x13358) ?x13360) ?x13362) ?x4735)))
 (let ((?x13676 (- (+ (- (- ?x5864 ?x13617) ?x12902) ?x13620) (* (* 2.0 l_0_7_46) l_0_7_52))))
 (let ((?x13682 (- (- ?x13676 (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x13688 (- (- ?x13682 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (= ?x13688 0.0))))))))))))))))))))
(assert
 (let ((?x13726 (* l_0_7_75 l_0_7_75)))
 (let ((?x13724 (* l_0_7_74 l_0_7_74)))
 (let ((?x13722 (* l_0_7_73 l_0_7_73)))
 (let ((?x13720 (* l_0_7_72 l_0_7_72)))
 (let ((?x13718 (* l_0_7_71 l_0_7_71)))
 (let ((?x12845 (* 8.0 l_0_7_31)))
 (let ((?x12932 (* ?x12845 l_0_7_41)))
 (let ((?x12836 (* 8.0 l_0_7_16)))
 (let ((?x12929 (* ?x12836 l_0_7_26)))
 (let ((?x5962 (+ (* 1.0 (* l_0_7_11 l_0_7_11)) (* 1.0 (* l_0_7_12 l_0_7_12)))))
 (let ((?x13711 (+ (+ ?x5962 (* 1.0 (* l_0_7_13 l_0_7_13))) (* 1.0 (* l_0_7_14 l_0_7_14)))))
 (let ((?x13717 (- (- (+ (+ ?x13711 (* 1.0 (* l_0_7_15 l_0_7_15))) ?x12929) ?x12932) (* (* 2.0 l_0_7_46) l_0_7_56))))
 (= (- (- (- (- (- ?x13717 ?x13718) ?x13720) ?x13722) ?x13724) ?x13726) 0.0))))))))))))))
(assert
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13735 (* ?x13089 l_0_7_34)))
 (let ((?x13086 (* l_0_7_21 l_0_7_21)))
 (let ((?x13733 (* 2.0 ?x13086)))
 (let ((?x13083 (* l_0_7_20 l_0_7_20)))
 (let ((?x13731 (* 2.0 ?x13083)))
 (let ((?x13080 (* l_0_7_19 l_0_7_19)))
 (let ((?x6058 (* 2.0 ?x13080)))
 (let ((?x13736 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) ?x6058) ?x13731) ?x13733) ?x13735)))
 (let ((?x13742 (- (- ?x13736 (* (* 2.0 l_0_7_34) l_0_7_34)) (* (* 2.0 l_0_7_35) l_0_7_35))))
 (= (- ?x13742 (* (* 2.0 l_0_7_36) l_0_7_36)) 0.0))))))))))))
(assert
 (let ((?x5160 (* l_0_7_36 l_0_7_36)))
 (let ((?x6124 (* 2.0 ?x5160)))
 (let ((?x13102 (* 4.0 l_0_7_36)))
 (let ((?x13788 (* ?x13102 l_0_7_39)))
 (let ((?x13130 (* l_0_7_35 l_0_7_35)))
 (let ((?x13751 (* 2.0 ?x13130)))
 (let ((?x13099 (* 4.0 l_0_7_35)))
 (let ((?x13785 (* ?x13099 l_0_7_38)))
 (let ((?x13126 (* l_0_7_34 l_0_7_34)))
 (let ((?x6112 (* 2.0 ?x13126)))
 (let ((?x13096 (* 4.0 l_0_7_34)))
 (let ((?x13782 (* ?x13096 l_0_7_37)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13780 (* ?x13089 l_0_7_37)))
 (let ((?x13774 (* 4.0 l_0_7_21)))
 (let ((?x13775 (* ?x13774 l_0_7_24)))
 (let ((?x13768 (* 4.0 l_0_7_20)))
 (let ((?x13769 (* ?x13768 l_0_7_23)))
 (let ((?x13762 (* 4.0 l_0_7_19)))
 (let ((?x13763 (* ?x13762 l_0_7_22)))
 (let ((?x13767 (- (+ (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x13763) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x13779 (- (+ (- (+ ?x13767 ?x13769) (* (* 2.0 l_0_7_20) l_0_7_20)) ?x13775) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (let ((?x13790 (+ (- (+ (- (+ (- (+ ?x13779 ?x13780) ?x13782) ?x6112) ?x13785) ?x13751) ?x13788) ?x6124)))
 (= ?x13790 0.0)))))))))))))))))))))))))
(assert
 (let ((?x13850 (* l_0_7_51 l_0_7_51)))
 (let ((?x13848 (* l_0_7_50 l_0_7_50)))
 (let ((?x13846 (* l_0_7_49 l_0_7_49)))
 (let ((?x13102 (* 4.0 l_0_7_36)))
 (let ((?x13103 (* ?x13102 l_0_7_36)))
 (let ((?x13843 (* ?x13102 l_0_7_43)))
 (let ((?x13099 (* 4.0 l_0_7_35)))
 (let ((?x13100 (* ?x13099 l_0_7_35)))
 (let ((?x13840 (* ?x13099 l_0_7_42)))
 (let ((?x13096 (* 4.0 l_0_7_34)))
 (let ((?x13097 (* ?x13096 l_0_7_34)))
 (let ((?x13837 (* ?x13096 l_0_7_41)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13835 (* ?x13089 l_0_7_41)))
 (let ((?x13086 (* l_0_7_21 l_0_7_21)))
 (let ((?x13087 (* 4.0 ?x13086)))
 (let ((?x13774 (* 4.0 l_0_7_21)))
 (let ((?x13832 (* ?x13774 l_0_7_28)))
 (let ((?x13083 (* l_0_7_20 l_0_7_20)))
 (let ((?x13084 (* 4.0 ?x13083)))
 (let ((?x13768 (* 4.0 l_0_7_20)))
 (let ((?x13829 (* ?x13768 l_0_7_27)))
 (let ((?x13080 (* l_0_7_19 l_0_7_19)))
 (let ((?x13081 (* 4.0 ?x13080)))
 (let ((?x13762 (* 4.0 l_0_7_19)))
 (let ((?x13826 (* ?x13762 l_0_7_26)))
 (let ((?x13831 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_26) ?x13826) ?x13081) ?x13829) ?x13084)))
 (let ((?x13842 (- (- (- (- (+ (+ (+ ?x13831 ?x13832) ?x13087) ?x13835) ?x13837) ?x13097) ?x13840) ?x13100)))
 (= (- (- (- (- (- ?x13842 ?x13843) ?x13103) ?x13846) ?x13848) ?x13850) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4617 (* l_0_7_33 l_0_7_33)))
 (let ((?x4999 (* l_0_7_32 l_0_7_32)))
 (let ((?x13879 (+ (+ (- (* (- l_0_7_17) l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x4999) ?x4617)))
 (= ?x13879 0.0)))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13894 (* ?x12993 l_0_7_35)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13892 (* ?x12987 l_0_7_34)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13890 (* ?x13023 l_0_7_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x13890) ?x13892) ?x13894) 0.0))))))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13909 (* ?x12993 l_0_7_38)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13907 (* ?x12987 l_0_7_37)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13905 (* ?x13023 l_0_7_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x13905) ?x13907) ?x13909) 0.0))))))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13924 (* ?x12993 l_0_7_42)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13922 (* ?x12987 l_0_7_41)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13920 (* ?x13023 l_0_7_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_26) ?x13920) ?x13922) ?x13924) 0.0))))))))
(assert
 (let ((?x5160 (* l_0_7_36 l_0_7_36)))
 (let ((?x13130 (* l_0_7_35 l_0_7_35)))
 (let ((?x13126 (* l_0_7_34 l_0_7_34)))
 (let ((?x13086 (* l_0_7_21 l_0_7_21)))
 (let ((?x13941 (+ (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x13086) ?x13126)))
 (= (+ (+ ?x13941 ?x13130) ?x5160) 0.0)))))))
(assert
 (let ((?x13743 (* 2.0 l_0_7_36)))
 (let ((?x13964 (* ?x13743 l_0_7_39)))
 (let ((?x13740 (* 2.0 l_0_7_35)))
 (let ((?x13962 (* ?x13740 l_0_7_38)))
 (let ((?x13737 (* 2.0 l_0_7_34)))
 (let ((?x13960 (* ?x13737 l_0_7_37)))
 (let ((?x13777 (* 2.0 l_0_7_21)))
 (let ((?x13958 (* ?x13777 l_0_7_24)))
 (let ((?x13771 (* 2.0 l_0_7_20)))
 (let ((?x13956 (* ?x13771 l_0_7_23)))
 (let ((?x13963 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x13956) ?x13958) ?x13960) ?x13962)))
 (= (+ ?x13963 ?x13964) 0.0)))))))))))))
(assert
 (let ((?x13743 (* 2.0 l_0_7_36)))
 (let ((?x13980 (* ?x13743 l_0_7_43)))
 (let ((?x13740 (* 2.0 l_0_7_35)))
 (let ((?x13978 (* ?x13740 l_0_7_42)))
 (let ((?x13737 (* 2.0 l_0_7_34)))
 (let ((?x13976 (* ?x13737 l_0_7_41)))
 (let ((?x13777 (* 2.0 l_0_7_21)))
 (let ((?x13974 (* ?x13777 l_0_7_28)))
 (let ((?x13771 (* 2.0 l_0_7_20)))
 (let ((?x13972 (* ?x13771 l_0_7_27)))
 (let ((?x13979 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_26) ?x13972) ?x13974) ?x13976) ?x13978)))
 (= (+ ?x13979 ?x13980) 0.0)))))))))))))
(assert
 (let ((?x5336 (* l_0_7_40 l_0_7_40)))
 (let ((?x5333 (* l_0_7_39 l_0_7_39)))
 (let ((?x5330 (* l_0_7_38 l_0_7_38)))
 (let ((?x5326 (* l_0_7_37 l_0_7_37)))
 (let ((?x5160 (* l_0_7_36 l_0_7_36)))
 (let ((?x13130 (* l_0_7_35 l_0_7_35)))
 (let ((?x13126 (* l_0_7_34 l_0_7_34)))
 (let ((?x13314 (* l_0_7_25 l_0_7_25)))
 (let ((?x13311 (* l_0_7_24 l_0_7_24)))
 (let ((?x13308 (* l_0_7_23 l_0_7_23)))
 (let ((?x13305 (* l_0_7_22 l_0_7_22)))
 (let ((?x13086 (* l_0_7_21 l_0_7_21)))
 (let ((?x6329 (- (+ (+ (* l_0_7_19 l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x13086) ?x13305)))
 (let ((?x13999 (+ (- (- (- (- (- (- ?x6329 ?x13308) ?x13311) ?x13314) ?x13126) ?x13130) ?x5160) ?x5326)))
 (= (+ (+ (+ ?x13999 ?x5330) ?x5333) ?x5336) 0.0))))))))))))))))
(assert
 (let ((?x14040 (* 2.0 l_0_7_40)))
 (let ((?x14041 (* ?x14040 l_0_7_44)))
 (let ((?x14037 (* 2.0 l_0_7_39)))
 (let ((?x14038 (* ?x14037 l_0_7_43)))
 (let ((?x14034 (* 2.0 l_0_7_38)))
 (let ((?x14035 (* ?x14034 l_0_7_42)))
 (let ((?x14031 (* 2.0 l_0_7_37)))
 (let ((?x14032 (* ?x14031 l_0_7_41)))
 (let ((?x14028 (* 2.0 l_0_7_25)))
 (let ((?x14029 (* ?x14028 l_0_7_29)))
 (let ((?x14025 (* 2.0 l_0_7_24)))
 (let ((?x14026 (* ?x14025 l_0_7_28)))
 (let ((?x14022 (* 2.0 l_0_7_23)))
 (let ((?x14023 (* ?x14022 l_0_7_27)))
 (let ((?x14033 (+ (- (- (- (* (* (- 2.0) l_0_7_22) l_0_7_26) ?x14023) ?x14026) ?x14029) ?x14032)))
 (= (+ (+ (+ ?x14033 ?x14035) ?x14038) ?x14041) 0.0)))))))))))))))))
(assert
 (let ((?x4067 (* l_0_7_45 l_0_7_45)))
 (let ((?x13503 (* l_0_7_44 l_0_7_44)))
 (let ((?x13497 (* l_0_7_43 l_0_7_43)))
 (let ((?x3995 (* l_0_7_42 l_0_7_42)))
 (let ((?x3990 (* l_0_7_41 l_0_7_41)))
 (let ((?x13457 (* l_0_7_30 l_0_7_30)))
 (let ((?x13454 (* l_0_7_29 l_0_7_29)))
 (let ((?x13451 (* l_0_7_28 l_0_7_28)))
 (let ((?x14060 (- (- (- (* (- l_0_7_26) l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x13451) ?x13454)))
 (= (+ (+ (+ (+ (+ (- ?x14060 ?x13457) ?x3990) ?x3995) ?x13497) ?x13503) ?x4067) 0.0)))))))))))
(assert
 (let ((?x13102 (* 4.0 l_0_7_36)))
 (let ((?x13788 (* ?x13102 l_0_7_39)))
 (let ((?x13099 (* 4.0 l_0_7_35)))
 (let ((?x13785 (* ?x13099 l_0_7_38)))
 (let ((?x13096 (* 4.0 l_0_7_34)))
 (let ((?x13782 (* ?x13096 l_0_7_37)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13735 (* ?x13089 l_0_7_34)))
 (let ((?x13314 (* l_0_7_25 l_0_7_25)))
 (let ((?x14089 (* 2.0 ?x13314)))
 (let ((?x13311 (* l_0_7_24 l_0_7_24)))
 (let ((?x14087 (* 2.0 ?x13311)))
 (let ((?x13308 (* l_0_7_23 l_0_7_23)))
 (let ((?x14085 (* 2.0 ?x13308)))
 (let ((?x13305 (* l_0_7_22 l_0_7_22)))
 (let ((?x14083 (* 2.0 ?x13305)))
 (let ((?x13774 (* 4.0 l_0_7_21)))
 (let ((?x13775 (* ?x13774 l_0_7_24)))
 (let ((?x13768 (* 4.0 l_0_7_20)))
 (let ((?x13769 (* ?x13768 l_0_7_23)))
 (let ((?x13762 (* 4.0 l_0_7_19)))
 (let ((?x13763 (* ?x13762 l_0_7_22)))
 (let ((?x14084 (+ (- (- (- (* (* 2.0 l_0_7_16) l_0_7_19) ?x13763) ?x13769) ?x13775) ?x14083)))
 (let ((?x14094 (+ (+ (+ (- (+ (+ (+ ?x14084 ?x14085) ?x14087) ?x14089) ?x13735) ?x13782) ?x13785) ?x13788)))
 (let ((?x14098 (- (- ?x14094 (* (* 2.0 l_0_7_37) l_0_7_37)) (* (* 2.0 l_0_7_38) l_0_7_38))))
 (let ((?x14102 (- (- ?x14098 (* (* 2.0 l_0_7_39) l_0_7_39)) (* (* 2.0 l_0_7_40) l_0_7_40))))
 (= ?x14102 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5336 (* l_0_7_40 l_0_7_40)))
 (let ((?x6460 (* 2.0 ?x5336)))
 (let ((?x5333 (* l_0_7_39 l_0_7_39)))
 (let ((?x6453 (* 2.0 ?x5333)))
 (let ((?x5330 (* l_0_7_38 l_0_7_38)))
 (let ((?x6450 (* 2.0 ?x5330)))
 (let ((?x5326 (* l_0_7_37 l_0_7_37)))
 (let ((?x6435 (* 2.0 ?x5326)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13780 (* ?x13089 l_0_7_37)))
 (let ((?x14121 (- (* (* 2.0 l_0_7_16) l_0_7_22) (* (* 2.0 l_0_7_22) l_0_7_22))))
 (let ((?x14125 (- (- ?x14121 (* (* 2.0 l_0_7_23) l_0_7_23)) (* (* 2.0 l_0_7_24) l_0_7_24))))
 (let ((?x14130 (+ (+ (- (- ?x14125 (* (* 2.0 l_0_7_25) l_0_7_25)) ?x13780) ?x6435) ?x6450)))
 (= (+ (+ ?x14130 ?x6453) ?x6460) 0.0)))))))))))))))
(assert
 (let ((?x14170 (* l_0_7_55 l_0_7_55)))
 (let ((?x14168 (* l_0_7_54 l_0_7_54)))
 (let ((?x14166 (* l_0_7_53 l_0_7_53)))
 (let ((?x14164 (* l_0_7_52 l_0_7_52)))
 (let ((?x13329 (* 4.0 l_0_7_40)))
 (let ((?x13330 (* ?x13329 l_0_7_40)))
 (let ((?x14161 (* ?x13329 l_0_7_44)))
 (let ((?x13326 (* 4.0 l_0_7_39)))
 (let ((?x13327 (* ?x13326 l_0_7_39)))
 (let ((?x14158 (* ?x13326 l_0_7_43)))
 (let ((?x13323 (* 4.0 l_0_7_38)))
 (let ((?x13324 (* ?x13323 l_0_7_38)))
 (let ((?x14155 (* ?x13323 l_0_7_42)))
 (let ((?x13320 (* 4.0 l_0_7_37)))
 (let ((?x13321 (* ?x13320 l_0_7_37)))
 (let ((?x14152 (* ?x13320 l_0_7_41)))
 (let ((?x13089 (* 2.0 l_0_7_31)))
 (let ((?x13835 (* ?x13089 l_0_7_41)))
 (let ((?x13314 (* l_0_7_25 l_0_7_25)))
 (let ((?x13315 (* 4.0 ?x13314)))
 (let ((?x14148 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x13311 (* l_0_7_24 l_0_7_24)))
 (let ((?x13312 (* 4.0 ?x13311)))
 (let ((?x14144 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x13308 (* l_0_7_23 l_0_7_23)))
 (let ((?x13309 (* 4.0 ?x13308)))
 (let ((?x14140 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x13305 (* l_0_7_22 l_0_7_22)))
 (let ((?x13306 (* 4.0 ?x13305)))
 (let ((?x6553 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x14142 (+ (- (+ (- (* (* 2.0 l_0_7_16) l_0_7_26) ?x6553) ?x13306) ?x14140) ?x13309)))
 (let ((?x14154 (- (+ (- (+ (- (+ (- ?x14142 ?x14144) ?x13312) ?x14148) ?x13315) ?x13835) ?x14152) ?x13321)))
 (let ((?x14165 (- (- (+ (- (+ (- (+ ?x14154 ?x14155) ?x13324) ?x14158) ?x13327) ?x14161) ?x13330) ?x14164)))
 (= (- (- (- ?x14165 ?x14166) ?x14168) ?x14170) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4617 (* l_0_7_33 l_0_7_33)))
 (let ((?x4999 (* l_0_7_32 l_0_7_32)))
 (let ((?x14206 (- (- (+ (* l_0_7_17 l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x4999) ?x4617)))
 (= ?x14206 0.0)))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13894 (* ?x12993 l_0_7_35)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13892 (* ?x12987 l_0_7_34)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13890 (* ?x13023 l_0_7_20)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_19) ?x13890) ?x13892) ?x13894) 0.0))))))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13909 (* ?x12993 l_0_7_38)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13907 (* ?x12987 l_0_7_37)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13905 (* ?x13023 l_0_7_23)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_22) ?x13905) ?x13907) ?x13909) 0.0))))))))
(assert
 (let ((?x12993 (* 2.0 l_0_7_33)))
 (let ((?x13924 (* ?x12993 l_0_7_42)))
 (let ((?x12987 (* 2.0 l_0_7_32)))
 (let ((?x13922 (* ?x12987 l_0_7_41)))
 (let ((?x13023 (* 2.0 l_0_7_18)))
 (let ((?x13920 (* ?x13023 l_0_7_27)))
 (= (- (- (+ (* (* 2.0 l_0_7_17) l_0_7_26) ?x13920) ?x13922) ?x13924) 0.0))))))))
(assert
 (let ((?x13743 (* 2.0 l_0_7_36)))
 (let ((?x13964 (* ?x13743 l_0_7_39)))
 (let ((?x13740 (* 2.0 l_0_7_35)))
 (let ((?x13962 (* ?x13740 l_0_7_38)))
 (let ((?x13737 (* 2.0 l_0_7_34)))
 (let ((?x13960 (* ?x13737 l_0_7_37)))
 (let ((?x13777 (* 2.0 l_0_7_21)))
 (let ((?x13958 (* ?x13777 l_0_7_24)))
 (let ((?x13771 (* 2.0 l_0_7_20)))
 (let ((?x13956 (* ?x13771 l_0_7_23)))
 (let ((?x14235 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_22) ?x13956) ?x13958) ?x13960) ?x13962)))
 (= (- ?x14235 ?x13964) 0.0)))))))))))))
(assert
 (let ((?x13743 (* 2.0 l_0_7_36)))
 (let ((?x13980 (* ?x13743 l_0_7_43)))
 (let ((?x13740 (* 2.0 l_0_7_35)))
 (let ((?x13978 (* ?x13740 l_0_7_42)))
 (let ((?x13737 (* 2.0 l_0_7_34)))
 (let ((?x13976 (* ?x13737 l_0_7_41)))
 (let ((?x13777 (* 2.0 l_0_7_21)))
 (let ((?x13974 (* ?x13777 l_0_7_28)))
 (let ((?x13771 (* 2.0 l_0_7_20)))
 (let ((?x13972 (* ?x13771 l_0_7_27)))
 (let ((?x14240 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_26) ?x13972) ?x13974) ?x13976) ?x13978)))
 (= (- ?x14240 ?x13980) 0.0)))))))))))))
(assert
 (let ((?x5336 (* l_0_7_40 l_0_7_40)))
 (let ((?x5333 (* l_0_7_39 l_0_7_39)))
 (let ((?x5330 (* l_0_7_38 l_0_7_38)))
 (let ((?x5326 (* l_0_7_37 l_0_7_37)))
 (let ((?x13314 (* l_0_7_25 l_0_7_25)))
 (let ((?x13311 (* l_0_7_24 l_0_7_24)))
 (let ((?x6812 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x13311) ?x13314)))
 (= (- (- (- (- ?x6812 ?x5326) ?x5330) ?x5333) ?x5336) 0.0)))))))))
(assert
 (let ((?x14040 (* 2.0 l_0_7_40)))
 (let ((?x14041 (* ?x14040 l_0_7_44)))
 (let ((?x14037 (* 2.0 l_0_7_39)))
 (let ((?x14038 (* ?x14037 l_0_7_43)))
 (let ((?x14034 (* 2.0 l_0_7_38)))
 (let ((?x14035 (* ?x14034 l_0_7_42)))
 (let ((?x14031 (* 2.0 l_0_7_37)))
 (let ((?x14032 (* ?x14031 l_0_7_41)))
 (let ((?x14028 (* 2.0 l_0_7_25)))
 (let ((?x14029 (* ?x14028 l_0_7_29)))
 (let ((?x14025 (* 2.0 l_0_7_24)))
 (let ((?x14026 (* ?x14025 l_0_7_28)))
 (let ((?x14022 (* 2.0 l_0_7_23)))
 (let ((?x14023 (* ?x14022 l_0_7_27)))
 (let ((?x14258 (- (+ (+ (+ (* (* 2.0 l_0_7_22) l_0_7_26) ?x14023) ?x14026) ?x14029) ?x14032)))
 (= (- (- (- ?x14258 ?x14035) ?x14038) ?x14041) 0.0)))))))))))))))))
(assert
 (let ((?x4067 (* l_0_7_45 l_0_7_45)))
 (let ((?x13503 (* l_0_7_44 l_0_7_44)))
 (let ((?x13497 (* l_0_7_43 l_0_7_43)))
 (let ((?x3995 (* l_0_7_42 l_0_7_42)))
 (let ((?x3990 (* l_0_7_41 l_0_7_41)))
 (let ((?x13457 (* l_0_7_30 l_0_7_30)))
 (let ((?x13454 (* l_0_7_29 l_0_7_29)))
 (let ((?x13451 (* l_0_7_28 l_0_7_28)))
 (let ((?x6860 (+ (+ (+ (* l_0_7_26 l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x13451) ?x13454)))
 (= (- (- (- (- (- (+ ?x6860 ?x13457) ?x3990) ?x3995) ?x13497) ?x13503) ?x4067) 0.0)))))))))))
(assert
 (let ((?x13329 (* 4.0 l_0_7_40)))
 (let ((?x14161 (* ?x13329 l_0_7_44)))
 (let ((?x13326 (* 4.0 l_0_7_39)))
 (let ((?x14158 (* ?x13326 l_0_7_43)))
 (let ((?x13323 (* 4.0 l_0_7_38)))
 (let ((?x14155 (* ?x13323 l_0_7_42)))
 (let ((?x13320 (* 4.0 l_0_7_37)))
 (let ((?x14152 (* ?x13320 l_0_7_41)))
 (let ((?x13102 (* 4.0 l_0_7_36)))
 (let ((?x13843 (* ?x13102 l_0_7_43)))
 (let ((?x13172 (* 8.0 l_0_7_36)))
 (let ((?x13173 (* ?x13172 l_0_7_39)))
 (let ((?x13099 (* 4.0 l_0_7_35)))
 (let ((?x13840 (* ?x13099 l_0_7_42)))
 (let ((?x13169 (* 8.0 l_0_7_35)))
 (let ((?x13170 (* ?x13169 l_0_7_38)))
 (let ((?x13096 (* 4.0 l_0_7_34)))
 (let ((?x13837 (* ?x13096 l_0_7_41)))
 (let ((?x13166 (* 8.0 l_0_7_34)))
 (let ((?x13167 (* ?x13166 l_0_7_37)))
 (let ((?x14148 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x14144 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x14140 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x6553 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x13774 (* 4.0 l_0_7_21)))
 (let ((?x13832 (* ?x13774 l_0_7_28)))
 (let ((?x13157 (* 8.0 l_0_7_21)))
 (let ((?x13158 (* ?x13157 l_0_7_24)))
 (let ((?x13768 (* 4.0 l_0_7_20)))
 (let ((?x13829 (* ?x13768 l_0_7_27)))
 (let ((?x13154 (* 8.0 l_0_7_20)))
 (let ((?x13155 (* ?x13154 l_0_7_23)))
 (let ((?x13762 (* 4.0 l_0_7_19)))
 (let ((?x13826 (* ?x13762 l_0_7_26)))
 (let ((?x13151 (* 8.0 l_0_7_19)))
 (let ((?x13152 (* ?x13151 l_0_7_22)))
 (let ((?x14304 (+ (+ (- (+ (- (+ (- ?x13152 ?x13826) ?x13155) ?x13829) ?x13158) ?x13832) ?x6553) ?x14140)))
 (let ((?x14311 (- (+ (- (+ (- (+ (+ ?x14304 ?x14144) ?x14148) ?x13167) ?x13837) ?x13170) ?x13840) ?x13173)))
 (let ((?x14319 (- (- (- (- (- (+ ?x14311 ?x13843) ?x14152) ?x14155) ?x14158) ?x14161) (* (* 2.0 l_0_7_49) l_0_7_52))))
 (let ((?x14325 (- (- ?x14319 (* (* 2.0 l_0_7_50) l_0_7_53)) (* (* 2.0 l_0_7_51) l_0_7_54))))
 (= ?x14325 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13172 (* 8.0 l_0_7_36)))
 (let ((?x13252 (* ?x13172 l_0_7_43)))
 (let ((?x13169 (* 8.0 l_0_7_35)))
 (let ((?x13250 (* ?x13169 l_0_7_42)))
 (let ((?x13166 (* 8.0 l_0_7_34)))
 (let ((?x13248 (* ?x13166 l_0_7_41)))
 (let ((?x13157 (* 8.0 l_0_7_21)))
 (let ((?x13240 (* ?x13157 l_0_7_28)))
 (let ((?x13154 (* 8.0 l_0_7_20)))
 (let ((?x13238 (* ?x13154 l_0_7_27)))
 (let ((?x13151 (* 8.0 l_0_7_19)))
 (let ((?x13236 (* ?x13151 l_0_7_26)))
 (let ((?x6970 (+ (+ (+ (+ ?x13236 ?x13238) ?x13240) (* 2.0 (* l_0_7_26 l_0_7_26))) (* 2.0 (* l_0_7_27 l_0_7_27)))))
 (let ((?x6918 (+ (+ ?x6970 (* 2.0 (* l_0_7_28 l_0_7_28))) (* 2.0 (* l_0_7_29 l_0_7_29)))))
 (let ((?x14339 (- (- (- (+ ?x6918 (* 2.0 (* l_0_7_30 l_0_7_30))) ?x13248) ?x13250) ?x13252)))
 (let ((?x14345 (- (- ?x14339 (* (* 2.0 l_0_7_41) l_0_7_41)) (* (* 2.0 l_0_7_42) l_0_7_42))))
 (let ((?x14351 (- (- ?x14345 (* (* 2.0 l_0_7_43) l_0_7_43)) (* (* 2.0 l_0_7_44) l_0_7_44))))
 (let ((?x14356 (- (- ?x14351 (* (* 2.0 l_0_7_45) l_0_7_45)) (* (* 2.0 l_0_7_49) l_0_7_56))))
 (let ((?x14360 (- (- ?x14356 (* (* 2.0 l_0_7_50) l_0_7_57)) (* (* 2.0 l_0_7_51) l_0_7_58))))
 (= ?x14360 0.0)))))))))))))))))))))
(assert
 (let ((?x4067 (* l_0_7_45 l_0_7_45)))
 (let ((?x7099 (* 2.0 ?x4067)))
 (let ((?x13503 (* l_0_7_44 l_0_7_44)))
 (let ((?x7095 (* 2.0 ?x13503)))
 (let ((?x13497 (* l_0_7_43 l_0_7_43)))
 (let ((?x7040 (* 2.0 ?x13497)))
 (let ((?x3995 (* l_0_7_42 l_0_7_42)))
 (let ((?x7089 (* 2.0 ?x3995)))
 (let ((?x3990 (* l_0_7_41 l_0_7_41)))
 (let ((?x7041 (* 2.0 ?x3990)))
 (let ((?x13394 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x13391 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x13388 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x13385 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x13378 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x13375 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x13372 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x13369 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x7110 (- (+ (+ (+ ?x13369 ?x13372) ?x13375) ?x13378) (* (* 2.0 l_0_7_26) l_0_7_26))))
 (let ((?x14371 (- (- ?x7110 (* (* 2.0 l_0_7_27) l_0_7_27)) (* (* 2.0 l_0_7_28) l_0_7_28))))
 (let ((?x14377 (- (- ?x14371 (* (* 2.0 l_0_7_29) l_0_7_29)) (* (* 2.0 l_0_7_30) l_0_7_30))))
 (let ((?x14384 (+ (+ (+ (- (- (- (- ?x14377 ?x13385) ?x13388) ?x13391) ?x13394) ?x7041) ?x7089) ?x7040)))
 (let ((?x14392 (- (- (+ (+ ?x14384 ?x7095) ?x7099) (* (* 2.0 l_0_7_52) l_0_7_56)) (* (* 2.0 l_0_7_53) l_0_7_57))))
 (let ((?x14398 (- (- ?x14392 (* (* 2.0 l_0_7_54) l_0_7_58)) (* (* 2.0 l_0_7_55) l_0_7_59))))
 (= ?x14398 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14405 (* l_0_7_60 l_0_7_60)))
 (let ((?x14403 (* l_0_7_59 l_0_7_59)))
 (let ((?x14401 (* l_0_7_58 l_0_7_58)))
 (let ((?x7206 (* l_0_7_57 l_0_7_57)))
 (let ((?x7233 (* l_0_7_56 l_0_7_56)))
 (let ((?x13475 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x13472 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x13469 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x13466 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x13463 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x13457 (* l_0_7_30 l_0_7_30)))
 (let ((?x13458 (* 4.0 ?x13457)))
 (let ((?x13454 (* l_0_7_29 l_0_7_29)))
 (let ((?x13455 (* 4.0 ?x13454)))
 (let ((?x13451 (* l_0_7_28 l_0_7_28)))
 (let ((?x13452 (* 4.0 ?x13451)))
 (let ((?x13448 (* l_0_7_27 l_0_7_27)))
 (let ((?x13449 (* 4.0 ?x13448)))
 (let ((?x13445 (* l_0_7_26 l_0_7_26)))
 (let ((?x13446 (* 4.0 ?x13445)))
 (let ((?x7262 (- (- (- (+ (+ (+ (+ ?x13446 ?x13449) ?x13452) ?x13455) ?x13458) ?x13463) ?x13466) ?x13469)))
 (let ((?x14406 (- (- (- (- (- (- (- ?x7262 ?x13472) ?x13475) ?x7233) ?x7206) ?x14401) ?x14403) ?x14405)))
 (= ?x14406 0.0))))))))))))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (let ((?x14458 (* l_0_8_81 l_0_8_81)))
 (let ((?x14456 (* l_0_8_80 l_0_8_80)))
 (let ((?x14454 (* l_0_8_79 l_0_8_79)))
 (let ((?x14452 (* l_0_8_66 l_0_8_66)))
 (let ((?x14450 (* l_0_8_65 l_0_8_65)))
 (let ((?x14448 (* l_0_8_64 l_0_8_64)))
 (let ((?x14437 (* l_0_8_31 l_0_8_31)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14435 (* ?x14434 l_0_8_34)))
 (let ((?x14436 (- (- (* (* 4.0 l_0_8_16) l_0_8_19) (* l_0_8_16 l_0_8_16)) ?x14435)))
 (let ((?x14444 (+ (+ (+ ?x14436 ?x14437) (* 1.0 (* l_0_8_4 l_0_8_4))) (* 1.0 (* l_0_8_5 l_0_8_5)))))
 (let ((?x14453 (- (- (- (+ ?x14444 (* 1.0 (* l_0_8_6 l_0_8_6))) ?x14448) ?x14450) ?x14452)))
 (= (+ (- (- (- ?x14453 ?x14454) ?x14456) ?x14458) 1.0) 0.0))))))))))))))
(assert
 (let ((?x14516 (* l_0_8_85 l_0_8_85)))
 (let ((?x14514 (* l_0_8_84 l_0_8_84)))
 (let ((?x14512 (* l_0_8_83 l_0_8_83)))
 (let ((?x14510 (* l_0_8_82 l_0_8_82)))
 (let ((?x14505 (* l_0_8_70 l_0_8_70)))
 (let ((?x14500 (* l_0_8_69 l_0_8_69)))
 (let ((?x14498 (* l_0_8_68 l_0_8_68)))
 (let ((?x14496 (* l_0_8_67 l_0_8_67)))
 (let ((?x14437 (* l_0_8_31 l_0_8_31)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14493 (* ?x14434 l_0_8_37)))
 (let ((?x14432 (* l_0_8_16 l_0_8_16)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x14490 (* ?x14430 l_0_8_22)))
 (let ((?x14495 (- (+ (+ (- (* 1.0 (* l_0_8_10 l_0_8_10)) ?x14490) ?x14432) ?x14493) ?x14437)))
 (let ((?x14504 (+ (- (- (- ?x14495 ?x14496) ?x14498) ?x14500) (* 1.0 (* l_0_8_7 l_0_8_7)))))
 (let ((?x14513 (- (- (+ (- ?x14504 ?x14505) (* 1.0 (* l_0_8_8 l_0_8_8))) ?x14510) ?x14512)))
 (let ((?x14521 (- (+ (- (- ?x14513 ?x14514) ?x14516) (* 1.0 (* l_0_8_9 l_0_8_9))) 1.0)))
 (= ?x14521 0.0))))))))))))))))))))
(assert
 (let ((?x14432 (* l_0_8_16 l_0_8_16)))
 (let ((?x14537 (* 2.0 ?x14432)))
 (let ((?x14541 (- (+ (* (* 2.0 l_0_8_1) l_0_8_4) ?x14537) (* (* 2.0 l_0_8_31) l_0_8_31))))
 (let ((?x14547 (- (- ?x14541 (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* 2.0 l_0_8_76) l_0_8_79))))
 (= (- ?x14547 2.0) 0.0))))))
(assert
 (let ((?x14437 (* l_0_8_31 l_0_8_31)))
 (let ((?x14553 (* 2.0 ?x14437)))
 (let ((?x14571 (- (* (* 2.0 l_0_8_1) l_0_8_7) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (let ((?x14576 (- (- (+ ?x14571 ?x14553) (* (* 2.0 l_0_8_61) l_0_8_67)) (* (* 2.0 l_0_8_76) l_0_8_82))))
 (= (+ ?x14576 2.0) 0.0))))))
(assert
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14593 (* ?x14434 l_0_8_31)))
 (let ((?x14432 (* l_0_8_16 l_0_8_16)))
 (let ((?x14591 (* 4.0 ?x14432)))
 (let ((?x14592 (+ (- (* (* 2.0 l_0_8_1) l_0_8_2) (* l_0_8_1 l_0_8_1)) ?x14591)))
 (let ((?x14598 (- (- (- ?x14592 ?x14593) (* (* 2.0 l_0_8_61) l_0_8_62)) (* (* 2.0 l_0_8_76) l_0_8_77))))
 (= (- ?x14598 4.0) 0.0))))))))
(assert
 (let ((?x14621 (* l_0_8_46 l_0_8_46)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14593 (* ?x14434 l_0_8_31)))
 (let ((?x14432 (* l_0_8_16 l_0_8_16)))
 (let ((?x14591 (* 4.0 ?x14432)))
 (let ((?x14624 (- (- (- (+ (* (* 2.0 l_0_8_1) l_0_8_11) ?x14591) ?x14593) ?x14621) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= (- (- ?x14624 (* (* 2.0 l_0_8_76) l_0_8_86)) 4.0) 0.0))))))))
(assert
 (let ((?x14662 (* l_0_8_78 l_0_8_78)))
 (let ((?x14660 (* l_0_8_77 l_0_8_77)))
 (let ((?x14658 (* l_0_8_63 l_0_8_63)))
 (let ((?x14656 (* l_0_8_62 l_0_8_62)))
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14654 (* ?x14653 l_0_8_32)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14645 (* ?x14644 l_0_8_17)))
 (let ((?x14649 (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) ?x14645) (* 1.0 (* l_0_8_2 l_0_8_2)))))
 (let ((?x14659 (- (- (- (+ ?x14649 (* 1.0 (* l_0_8_3 l_0_8_3))) ?x14654) ?x14656) ?x14658)))
 (= (- (- ?x14659 ?x14660) ?x14662) 0.0))))))))))))
(assert
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14692 (* ?x14653 l_0_8_34)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14690 (* ?x14434 l_0_8_32)))
 (let ((?x14687 (* 2.0 l_0_8_3)))
 (let ((?x14688 (* ?x14687 l_0_8_5)))
 (let ((?x14684 (* 2.0 l_0_8_2)))
 (let ((?x14685 (* ?x14684 l_0_8_4)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14682 (* ?x14644 l_0_8_19)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x14680 (* ?x14430 l_0_8_17)))
 (let ((?x14689 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x14680) ?x14682) ?x14685) ?x14688)))
 (let ((?x14699 (- (- (- (- ?x14689 ?x14690) ?x14692) (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x14705 (- (- ?x14699 (* (* 2.0 l_0_8_77) l_0_8_79)) (* (* 2.0 l_0_8_78) l_0_8_80))))
 (= ?x14705 0.0)))))))))))))))))
(assert
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14747 (* ?x14653 l_0_8_37)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14690 (* ?x14434 l_0_8_32)))
 (let ((?x14687 (* 2.0 l_0_8_3)))
 (let ((?x14744 (* ?x14687 l_0_8_8)))
 (let ((?x14684 (* 2.0 l_0_8_2)))
 (let ((?x14742 (* ?x14684 l_0_8_7)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14740 (* ?x14644 l_0_8_22)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x14680 (* ?x14430 l_0_8_17)))
 (let ((?x14745 (+ (+ (+ (- (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x14680) ?x14740) ?x14742) ?x14744)))
 (let ((?x14752 (- (- (- (+ ?x14745 ?x14690) ?x14747) (* (* 2.0 l_0_8_62) l_0_8_67)) (* (* 2.0 l_0_8_63) l_0_8_68))))
 (let ((?x14756 (- (- ?x14752 (* (* 2.0 l_0_8_77) l_0_8_82)) (* (* 2.0 l_0_8_78) l_0_8_83))))
 (= ?x14756 0.0)))))))))))))))))
(assert
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14786 (* ?x14653 l_0_8_41)))
 (let ((?x14654 (* ?x14653 l_0_8_32)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14783 (* ?x14644 l_0_8_26)))
 (let ((?x14645 (* ?x14644 l_0_8_17)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x14780 (* ?x14779 l_0_8_3)))
 (let ((?x14778 (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_11) l_0_8_2))))
 (let ((?x14790 (- (- (- (+ (+ (+ ?x14778 ?x14780) ?x14645) ?x14783) ?x14654) ?x14786) (* (* 2.0 l_0_8_46) l_0_8_47))))
 (let ((?x14794 (- (- ?x14790 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x14798 (- (- ?x14794 (* (* 2.0 l_0_8_77) l_0_8_86)) (* (* 2.0 l_0_8_78) l_0_8_87))))
 (= ?x14798 0.0))))))))))))))
(assert
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x14835 (* ?x14834 l_0_8_33)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x14832 (* ?x14831 l_0_8_32)))
 (let ((?x14650 (* l_0_8_3 l_0_8_3)))
 (let ((?x14647 (* l_0_8_2 l_0_8_2)))
 (let ((?x14826 (* l_0_8_18 l_0_8_18)))
 (let ((?x14827 (* 4.0 ?x14826)))
 (let ((?x14824 (* l_0_8_17 l_0_8_17)))
 (let ((?x14825 (* 4.0 ?x14824)))
 (= (- (- (- (- (+ ?x14825 ?x14827) ?x14647) ?x14650) ?x14832) ?x14835) 0.0))))))))))))
(assert
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14863 (* ?x14862 l_0_8_35)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14857 (* ?x14856 l_0_8_34)))
 (let ((?x14687 (* 2.0 l_0_8_3)))
 (let ((?x14688 (* ?x14687 l_0_8_5)))
 (let ((?x14684 (* 2.0 l_0_8_2)))
 (let ((?x14685 (* ?x14684 l_0_8_4)))
 (let ((?x14826 (* l_0_8_18 l_0_8_18)))
 (let ((?x14852 (* 2.0 ?x14826)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14850 (* ?x14849 l_0_8_20)))
 (let ((?x14824 (* l_0_8_17 l_0_8_17)))
 (let ((?x14847 (* 2.0 ?x14824)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14846 (* ?x14845 l_0_8_19)))
 (let ((?x14861 (- (- (- (- (+ (+ (+ ?x14846 ?x14847) ?x14850) ?x14852) ?x14685) ?x14688) ?x14857) (* (* 2.0 l_0_8_32) l_0_8_32))))
 (= (- (- ?x14861 ?x14863) (* (* 2.0 l_0_8_33) l_0_8_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x7777 (* l_0_8_33 l_0_8_33)))
 (let ((?x7842 (* 2.0 ?x7777)))
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14901 (* ?x14862 l_0_8_38)))
 (let ((?x7773 (* l_0_8_32 l_0_8_32)))
 (let ((?x6264 (* 2.0 ?x7773)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14898 (* ?x14856 l_0_8_37)))
 (let ((?x14687 (* 2.0 l_0_8_3)))
 (let ((?x14744 (* ?x14687 l_0_8_8)))
 (let ((?x14684 (* 2.0 l_0_8_2)))
 (let ((?x14742 (* ?x14684 l_0_8_7)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14891 (* ?x14849 l_0_8_23)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14887 (* ?x14845 l_0_8_22)))
 (let ((?x14895 (- (+ (- ?x14887 (* (* 2.0 l_0_8_17) l_0_8_17)) ?x14891) (* (* 2.0 l_0_8_18) l_0_8_18))))
 (= (+ (- (+ (- (- (- ?x14895 ?x14742) ?x14744) ?x14898) ?x6264) ?x14901) ?x7842) 0.0)))))))))))))))))))
(assert
 (let ((?x14939 (* l_0_8_48 l_0_8_48)))
 (let ((?x14937 (* l_0_8_47 l_0_8_47)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x14835 (* ?x14834 l_0_8_33)))
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14934 (* ?x14862 l_0_8_42)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x14832 (* ?x14831 l_0_8_32)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14931 (* ?x14856 l_0_8_41)))
 (let ((?x14826 (* l_0_8_18 l_0_8_18)))
 (let ((?x14827 (* 4.0 ?x14826)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14928 (* ?x14849 l_0_8_27)))
 (let ((?x14824 (* l_0_8_17 l_0_8_17)))
 (let ((?x14825 (* 4.0 ?x14824)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14925 (* ?x14845 l_0_8_26)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x14780 (* ?x14779 l_0_8_3)))
 (let ((?x14929 (+ (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x14780) ?x14925) ?x14825) ?x14928)))
 (let ((?x14940 (- (- (- (- (- (- (+ ?x14929 ?x14827) ?x14931) ?x14832) ?x14934) ?x14835) ?x14937) ?x14939)))
 (= ?x14940 0.0))))))))))))))))))))))))
(assert
 (let ((?x14445 (* l_0_8_6 l_0_8_6)))
 (let ((?x14442 (* l_0_8_5 l_0_8_5)))
 (let ((?x14439 (* l_0_8_4 l_0_8_4)))
 (let ((?x14987 (* 4.0 l_0_8_36)))
 (let ((?x14988 (* ?x14987 l_0_8_36)))
 (let ((?x14984 (* 4.0 l_0_8_35)))
 (let ((?x14985 (* ?x14984 l_0_8_35)))
 (let ((?x14981 (* 4.0 l_0_8_34)))
 (let ((?x14982 (* ?x14981 l_0_8_34)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x14979 (* ?x14834 l_0_8_35)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x14977 (* ?x14831 l_0_8_34)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x14975 (* ?x14539 l_0_8_32)))
 (let ((?x14972 (* l_0_8_21 l_0_8_21)))
 (let ((?x14973 (* 4.0 ?x14972)))
 (let ((?x14969 (* l_0_8_20 l_0_8_20)))
 (let ((?x14970 (* 4.0 ?x14969)))
 (let ((?x14966 (* l_0_8_19 l_0_8_19)))
 (let ((?x14967 (* 4.0 ?x14966)))
 (let ((?x14963 (* 4.0 l_0_8_18)))
 (let ((?x14964 (* ?x14963 l_0_8_20)))
 (let ((?x14962 (+ (* (* (- 2.0) l_0_8_16) l_0_8_17) (* (* 4.0 l_0_8_17) l_0_8_19))))
 (let ((?x14980 (- (- (+ (+ (+ (+ (+ ?x14962 ?x14964) ?x14967) ?x14970) ?x14973) ?x14975) ?x14977) ?x14979)))
 (= (- (- (- (- (- (- ?x14980 ?x14982) ?x14985) ?x14988) ?x14439) ?x14442) ?x14445) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15058 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x15055 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x15052 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x15048 (* 8.0 l_0_8_36)))
 (let ((?x15049 (* ?x15048 l_0_8_39)))
 (let ((?x15045 (* 8.0 l_0_8_35)))
 (let ((?x15046 (* ?x15045 l_0_8_38)))
 (let ((?x15042 (* 8.0 l_0_8_34)))
 (let ((?x15043 (* ?x15042 l_0_8_37)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x15040 (* ?x14834 l_0_8_38)))
 (let ((?x14979 (* ?x14834 l_0_8_35)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x15037 (* ?x14831 l_0_8_37)))
 (let ((?x14977 (* ?x14831 l_0_8_34)))
 (let ((?x15033 (* 8.0 l_0_8_21)))
 (let ((?x15034 (* ?x15033 l_0_8_24)))
 (let ((?x15030 (* 8.0 l_0_8_20)))
 (let ((?x15031 (* ?x15030 l_0_8_23)))
 (let ((?x15027 (* 8.0 l_0_8_19)))
 (let ((?x15028 (* ?x15027 l_0_8_22)))
 (let ((?x14963 (* 4.0 l_0_8_18)))
 (let ((?x15025 (* ?x14963 l_0_8_23)))
 (let ((?x14964 (* ?x14963 l_0_8_20)))
 (let ((?x14960 (* 4.0 l_0_8_17)))
 (let ((?x15022 (* ?x14960 l_0_8_22)))
 (let ((?x15029 (+ (+ (- (+ (* (* (- 4.0) l_0_8_17) l_0_8_19) ?x15022) ?x14964) ?x15025) ?x15028)))
 (let ((?x15044 (- (- (+ (- (+ (+ (+ ?x15029 ?x15031) ?x15034) ?x14977) ?x15037) ?x14979) ?x15040) ?x15043)))
 (= (- (- (- (- (- ?x15044 ?x15046) ?x15049) ?x15052) ?x15055) ?x15058) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15048 (* 8.0 l_0_8_36)))
 (let ((?x15101 (* ?x15048 l_0_8_43)))
 (let ((?x15045 (* 8.0 l_0_8_35)))
 (let ((?x15099 (* ?x15045 l_0_8_42)))
 (let ((?x15042 (* 8.0 l_0_8_34)))
 (let ((?x15097 (* ?x15042 l_0_8_41)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x15095 (* ?x14834 l_0_8_42)))
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14863 (* ?x14862 l_0_8_35)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x15092 (* ?x14831 l_0_8_41)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14857 (* ?x14856 l_0_8_34)))
 (let ((?x15033 (* 8.0 l_0_8_21)))
 (let ((?x15089 (* ?x15033 l_0_8_28)))
 (let ((?x15030 (* 8.0 l_0_8_20)))
 (let ((?x15087 (* ?x15030 l_0_8_27)))
 (let ((?x15027 (* 8.0 l_0_8_19)))
 (let ((?x15085 (* ?x15027 l_0_8_26)))
 (let ((?x14963 (* 4.0 l_0_8_18)))
 (let ((?x15083 (* ?x14963 l_0_8_27)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14850 (* ?x14849 l_0_8_20)))
 (let ((?x14960 (* 4.0 l_0_8_17)))
 (let ((?x8066 (* ?x14960 l_0_8_26)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14846 (* ?x14845 l_0_8_19)))
 (let ((?x8108 (* 2.0 l_0_8_13)))
 (let ((?x8109 (* ?x8108 l_0_8_6)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x8174 (* ?x14779 l_0_8_5)))
 (let ((?x15081 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x8174) ?x8109) ?x14846) ?x8066)))
 (let ((?x15093 (- (- (+ (+ (+ (+ (+ ?x15081 ?x14850) ?x15083) ?x15085) ?x15087) ?x15089) ?x14857) ?x15092)))
 (let ((?x15105 (- (- (- (- (- (- ?x15093 ?x14863) ?x15095) ?x15097) ?x15099) ?x15101) (* (* 2.0 l_0_8_47) l_0_8_49))))
 (= (- ?x15105 (* (* 2.0 l_0_8_48) l_0_8_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14518 (* l_0_8_9 l_0_8_9)))
 (let ((?x14507 (* l_0_8_8 l_0_8_8)))
 (let ((?x14502 (* l_0_8_7 l_0_8_7)))
 (let ((?x15163 (* 4.0 l_0_8_40)))
 (let ((?x15164 (* ?x15163 l_0_8_40)))
 (let ((?x15160 (* 4.0 l_0_8_39)))
 (let ((?x15161 (* ?x15160 l_0_8_39)))
 (let ((?x15157 (* 4.0 l_0_8_38)))
 (let ((?x15158 (* ?x15157 l_0_8_38)))
 (let ((?x15154 (* 4.0 l_0_8_37)))
 (let ((?x15155 (* ?x15154 l_0_8_37)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x15040 (* ?x14834 l_0_8_38)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x15037 (* ?x14831 l_0_8_37)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x14975 (* ?x14539 l_0_8_32)))
 (let ((?x15148 (* l_0_8_25 l_0_8_25)))
 (let ((?x15149 (* 4.0 ?x15148)))
 (let ((?x15145 (* l_0_8_24 l_0_8_24)))
 (let ((?x15146 (* 4.0 ?x15145)))
 (let ((?x15142 (* l_0_8_23 l_0_8_23)))
 (let ((?x15143 (* 4.0 ?x15142)))
 (let ((?x15139 (* l_0_8_22 l_0_8_22)))
 (let ((?x15140 (* 4.0 ?x15139)))
 (let ((?x14963 (* 4.0 l_0_8_18)))
 (let ((?x15025 (* ?x14963 l_0_8_23)))
 (let ((?x14960 (* 4.0 l_0_8_17)))
 (let ((?x15022 (* ?x14960 l_0_8_22)))
 (let ((?x15137 (- (+ (* (- l_0_8_10) l_0_8_10) (* (* 2.0 l_0_8_16) l_0_8_17)) ?x15022)))
 (let ((?x15152 (+ (- (+ (+ (+ (+ (- ?x15137 ?x15025) ?x15140) ?x15143) ?x15146) ?x15149) ?x14975) ?x15037)))
 (let ((?x15167 (- (- (- (- (- (- (+ ?x15152 ?x15040) ?x15155) ?x15158) ?x15161) ?x15164) ?x14502) ?x14507)))
 (= (- ?x15167 ?x14518) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15208 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x15205 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x15202 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x15199 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x14834 (* 4.0 l_0_8_33)))
 (let ((?x15095 (* ?x14834 l_0_8_42)))
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14901 (* ?x14862 l_0_8_38)))
 (let ((?x14831 (* 4.0 l_0_8_32)))
 (let ((?x15092 (* ?x14831 l_0_8_41)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14898 (* ?x14856 l_0_8_37)))
 (let ((?x15192 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x15189 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x15186 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x15183 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x14963 (* 4.0 l_0_8_18)))
 (let ((?x15083 (* ?x14963 l_0_8_27)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14891 (* ?x14849 l_0_8_23)))
 (let ((?x14960 (* 4.0 l_0_8_17)))
 (let ((?x8066 (* ?x14960 l_0_8_26)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14887 (* ?x14845 l_0_8_22)))
 (let ((?x8108 (* 2.0 l_0_8_13)))
 (let ((?x15176 (* ?x8108 l_0_8_9)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x15174 (* ?x14779 l_0_8_8)))
 (let ((?x14776 (* 2.0 l_0_8_11)))
 (let ((?x15172 (* ?x14776 l_0_8_7)))
 (let ((?x15178 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x15172) ?x15174) ?x15176) ?x14887)))
 (let ((?x15193 (+ (+ (+ (+ (- (+ (- ?x15178 ?x8066) ?x14891) ?x15083) ?x15183) ?x15186) ?x15189) ?x15192)))
 (let ((?x15206 (- (- (- (+ (- (+ (- ?x15193 ?x14898) ?x15092) ?x14901) ?x15095) ?x15199) ?x15202) ?x15205)))
 (let ((?x15213 (- (- (- ?x15206 ?x15208) (* (* 2.0 l_0_8_47) l_0_8_52)) (* (* 2.0 l_0_8_48) l_0_8_53))))
 (= ?x15213 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15285 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x15282 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x15279 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x15276 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x15273 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x14862 (* 8.0 l_0_8_33)))
 (let ((?x14934 (* ?x14862 l_0_8_42)))
 (let ((?x14856 (* 8.0 l_0_8_32)))
 (let ((?x14931 (* ?x14856 l_0_8_41)))
 (let ((?x15267 (* l_0_8_30 l_0_8_30)))
 (let ((?x15268 (* 4.0 ?x15267)))
 (let ((?x15264 (* l_0_8_29 l_0_8_29)))
 (let ((?x15265 (* 4.0 ?x15264)))
 (let ((?x15261 (* l_0_8_28 l_0_8_28)))
 (let ((?x15262 (* 4.0 ?x15261)))
 (let ((?x15258 (* l_0_8_27 l_0_8_27)))
 (let ((?x15259 (* 4.0 ?x15258)))
 (let ((?x15255 (* l_0_8_26 l_0_8_26)))
 (let ((?x15256 (* 4.0 ?x15255)))
 (let ((?x14849 (* 8.0 l_0_8_18)))
 (let ((?x14928 (* ?x14849 l_0_8_27)))
 (let ((?x14845 (* 8.0 l_0_8_17)))
 (let ((?x14925 (* ?x14845 l_0_8_26)))
 (let ((?x15251 (* l_0_8_15 l_0_8_15)))
 (let ((?x15249 (* l_0_8_14 l_0_8_14)))
 (let ((?x15247 (* l_0_8_13 l_0_8_13)))
 (let ((?x15250 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x15247) ?x15249)))
 (let ((?x15266 (+ (+ (+ (+ (+ (+ (- ?x15250 ?x15251) ?x14925) ?x14928) ?x15256) ?x15259) ?x15262) ?x15265)))
 (let ((?x15283 (- (- (- (- (- (- (+ ?x15266 ?x15268) ?x14931) ?x14934) ?x15273) ?x15276) ?x15279) ?x15282)))
 (let ((?x15290 (- (- (- ?x15283 ?x15285) (* (* 2.0 l_0_8_47) l_0_8_56)) (* (* 2.0 l_0_8_48) l_0_8_57))))
 (= ?x15290 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15323 (* l_0_8_76 l_0_8_76)))
 (let ((?x15324 (- (- (* 1.0 (* l_0_8_1 l_0_8_1)) (* l_0_8_61 l_0_8_61)) ?x15323)))
 (= ?x15324 0.0))))
(assert
 (let ((?x15058 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x15055 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x15052 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x14493 (* ?x14434 l_0_8_37)))
 (let ((?x14435 (* ?x14434 l_0_8_34)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x14490 (* ?x14430 l_0_8_22)))
 (let ((?x15337 (+ (- (+ (+ (* (* (- 4.0) l_0_8_16) l_0_8_19) ?x14490) ?x14435) ?x14493) ?x15052)))
 (let ((?x15345 (- (- (+ (+ ?x15337 ?x15055) ?x15058) (* (* 2.0 l_0_8_64) l_0_8_67)) (* (* 2.0 l_0_8_65) l_0_8_68))))
 (let ((?x15351 (- (- ?x15345 (* (* 2.0 l_0_8_66) l_0_8_69)) (* (* 2.0 l_0_8_79) l_0_8_82))))
 (let ((?x15357 (- (- ?x15351 (* (* 2.0 l_0_8_80) l_0_8_83)) (* (* 2.0 l_0_8_81) l_0_8_84))))
 (= ?x15357 0.0))))))))))))))
(assert
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x15383 (* ?x14434 l_0_8_41)))
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14692 (* ?x14653 l_0_8_34)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x15380 (* ?x14430 l_0_8_26)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14682 (* ?x14644 l_0_8_19)))
 (let ((?x8108 (* 2.0 l_0_8_13)))
 (let ((?x8109 (* ?x8108 l_0_8_6)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x8174 (* ?x14779 l_0_8_5)))
 (let ((?x15381 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x8174) ?x8109) ?x14682) ?x15380)))
 (let ((?x15388 (- (- (- (- ?x15381 ?x14692) ?x15383) (* (* 2.0 l_0_8_46) l_0_8_49)) (* (* 2.0 l_0_8_64) l_0_8_71))))
 (let ((?x15392 (- (- ?x15388 (* (* 2.0 l_0_8_65) l_0_8_72)) (* (* 2.0 l_0_8_66) l_0_8_73))))
 (let ((?x15396 (- (- ?x15392 (* (* 2.0 l_0_8_79) l_0_8_86)) (* (* 2.0 l_0_8_80) l_0_8_87))))
 (= (- ?x15396 (* (* 2.0 l_0_8_81) l_0_8_88)) 0.0))))))))))))))))))
(assert
 (let ((?x14434 (* 4.0 l_0_8_31)))
 (let ((?x15383 (* ?x14434 l_0_8_41)))
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14747 (* ?x14653 l_0_8_37)))
 (let ((?x14430 (* 4.0 l_0_8_16)))
 (let ((?x15380 (* ?x14430 l_0_8_26)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14740 (* ?x14644 l_0_8_22)))
 (let ((?x8108 (* 2.0 l_0_8_13)))
 (let ((?x15176 (* ?x8108 l_0_8_9)))
 (let ((?x14779 (* 2.0 l_0_8_12)))
 (let ((?x15174 (* ?x14779 l_0_8_8)))
 (let ((?x14776 (* 2.0 l_0_8_11)))
 (let ((?x15172 (* ?x14776 l_0_8_7)))
 (let ((?x15421 (+ (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x15172) ?x15174) ?x15176) ?x14740)))
 (let ((?x15426 (- (+ (- (- ?x15421 ?x15380) ?x14747) ?x15383) (* (* 2.0 l_0_8_46) l_0_8_52))))
 (let ((?x15432 (- (- ?x15426 (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x15438 (- (- ?x15432 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (let ((?x15444 (- (- ?x15438 (* (* 2.0 l_0_8_82) l_0_8_86)) (* (* 2.0 l_0_8_83) l_0_8_87))))
 (let ((?x15450 (- (- ?x15444 (* (* 2.0 l_0_8_84) l_0_8_88)) (* (* 2.0 l_0_8_85) l_0_8_89))))
 (= ?x15450 0.0))))))))))))))))))))))
(assert
 (let ((?x15504 (* l_0_8_90 l_0_8_90)))
 (let ((?x15502 (* l_0_8_89 l_0_8_89)))
 (let ((?x15500 (* l_0_8_88 l_0_8_88)))
 (let ((?x15498 (* l_0_8_87 l_0_8_87)))
 (let ((?x15496 (* l_0_8_86 l_0_8_86)))
 (let ((?x15494 (* l_0_8_75 l_0_8_75)))
 (let ((?x15492 (* l_0_8_74 l_0_8_74)))
 (let ((?x15490 (* l_0_8_73 l_0_8_73)))
 (let ((?x15488 (* l_0_8_72 l_0_8_72)))
 (let ((?x15486 (* l_0_8_71 l_0_8_71)))
 (let ((?x14653 (* 8.0 l_0_8_31)))
 (let ((?x14786 (* ?x14653 l_0_8_41)))
 (let ((?x14644 (* 8.0 l_0_8_16)))
 (let ((?x14783 (* ?x14644 l_0_8_26)))
 (let ((?x15475 (+ (* 1.0 (* l_0_8_11 l_0_8_11)) (* 1.0 (* l_0_8_12 l_0_8_12)))))
 (let ((?x15479 (+ (+ ?x15475 (* 1.0 (* l_0_8_13 l_0_8_13))) (* 1.0 (* l_0_8_14 l_0_8_14)))))
 (let ((?x15485 (- (- (+ (+ ?x15479 (* 1.0 (* l_0_8_15 l_0_8_15))) ?x14783) ?x14786) (* (* 2.0 l_0_8_46) l_0_8_56))))
 (let ((?x15499 (- (- (- (- (- (- (- ?x15485 ?x15486) ?x15488) ?x15490) ?x15492) ?x15494) ?x15496) ?x15498)))
 (= (- (- (- ?x15499 ?x15500) ?x15502) ?x15504) 0.0))))))))))))))))))))
(assert
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15520 (* ?x14539 l_0_8_34)))
 (let ((?x15515 (+ (* (* (- 2.0) l_0_8_16) l_0_8_19) (* 2.0 (* l_0_8_19 l_0_8_19)))))
 (let ((?x15519 (+ (+ ?x15515 (* 2.0 (* l_0_8_20 l_0_8_20))) (* 2.0 (* l_0_8_21 l_0_8_21)))))
 (let ((?x15527 (- (- (+ ?x15519 ?x15520) (* (* 2.0 l_0_8_34) l_0_8_34)) (* (* 2.0 l_0_8_35) l_0_8_35))))
 (= (- ?x15527 (* (* 2.0 l_0_8_36) l_0_8_36)) 0.0)))))))
(assert
 (let ((?x6556 (* l_0_8_36 l_0_8_36)))
 (let ((?x9328 (* 2.0 ?x6556)))
 (let ((?x14987 (* 4.0 l_0_8_36)))
 (let ((?x15573 (* ?x14987 l_0_8_39)))
 (let ((?x15015 (* l_0_8_35 l_0_8_35)))
 (let ((?x9268 (* 2.0 ?x15015)))
 (let ((?x14984 (* 4.0 l_0_8_35)))
 (let ((?x15570 (* ?x14984 l_0_8_38)))
 (let ((?x15009 (* l_0_8_34 l_0_8_34)))
 (let ((?x9254 (* 2.0 ?x15009)))
 (let ((?x14981 (* 4.0 l_0_8_34)))
 (let ((?x15567 (* ?x14981 l_0_8_37)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15565 (* ?x14539 l_0_8_37)))
 (let ((?x15559 (* 4.0 l_0_8_21)))
 (let ((?x15560 (* ?x15559 l_0_8_24)))
 (let ((?x15553 (* 4.0 l_0_8_20)))
 (let ((?x15554 (* ?x15553 l_0_8_23)))
 (let ((?x15547 (* 4.0 l_0_8_19)))
 (let ((?x15548 (* ?x15547 l_0_8_22)))
 (let ((?x15552 (- (+ (* (* (- 2.0) l_0_8_16) l_0_8_22) ?x15548) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x15564 (- (+ (- (+ ?x15552 ?x15554) (* (* 2.0 l_0_8_20) l_0_8_20)) ?x15560) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (let ((?x15575 (+ (- (+ (- (+ (- (+ ?x15564 ?x15565) ?x15567) ?x9254) ?x15570) ?x9268) ?x15573) ?x9328)))
 (= ?x15575 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15631 (* l_0_8_51 l_0_8_51)))
 (let ((?x15629 (* l_0_8_50 l_0_8_50)))
 (let ((?x15627 (* l_0_8_49 l_0_8_49)))
 (let ((?x14987 (* 4.0 l_0_8_36)))
 (let ((?x14988 (* ?x14987 l_0_8_36)))
 (let ((?x15624 (* ?x14987 l_0_8_43)))
 (let ((?x14984 (* 4.0 l_0_8_35)))
 (let ((?x14985 (* ?x14984 l_0_8_35)))
 (let ((?x15621 (* ?x14984 l_0_8_42)))
 (let ((?x14981 (* 4.0 l_0_8_34)))
 (let ((?x14982 (* ?x14981 l_0_8_34)))
 (let ((?x15618 (* ?x14981 l_0_8_41)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15616 (* ?x14539 l_0_8_41)))
 (let ((?x14972 (* l_0_8_21 l_0_8_21)))
 (let ((?x14973 (* 4.0 ?x14972)))
 (let ((?x15559 (* 4.0 l_0_8_21)))
 (let ((?x15613 (* ?x15559 l_0_8_28)))
 (let ((?x14969 (* l_0_8_20 l_0_8_20)))
 (let ((?x14970 (* 4.0 ?x14969)))
 (let ((?x15553 (* 4.0 l_0_8_20)))
 (let ((?x15610 (* ?x15553 l_0_8_27)))
 (let ((?x14966 (* l_0_8_19 l_0_8_19)))
 (let ((?x14967 (* 4.0 ?x14966)))
 (let ((?x15547 (* 4.0 l_0_8_19)))
 (let ((?x15607 (* ?x15547 l_0_8_26)))
 (let ((?x15612 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_16) l_0_8_26) ?x15607) ?x14967) ?x15610) ?x14970)))
 (let ((?x15623 (- (- (- (- (+ (+ (+ ?x15612 ?x15613) ?x14973) ?x15616) ?x15618) ?x14982) ?x15621) ?x14985)))
 (= (- (- (- (- (- ?x15623 ?x15624) ?x14988) ?x15627) ?x15629) ?x15631) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7777 (* l_0_8_33 l_0_8_33)))
 (let ((?x7773 (* l_0_8_32 l_0_8_32)))
 (let ((?x15660 (+ (+ (- (* (- l_0_8_17) l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x7773) ?x7777)))
 (= ?x15660 0.0)))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15674 (* ?x14865 l_0_8_35)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15672 (* ?x14859 l_0_8_34)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15670 (* ?x14893 l_0_8_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x15670) ?x15672) ?x15674) 0.0))))))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15689 (* ?x14865 l_0_8_38)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15687 (* ?x14859 l_0_8_37)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15685 (* ?x14893 l_0_8_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x15685) ?x15687) ?x15689) 0.0))))))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15708 (* ?x14865 l_0_8_42)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15706 (* ?x14859 l_0_8_41)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15699 (* ?x14893 l_0_8_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_26) ?x15699) ?x15706) ?x15708) 0.0))))))))
(assert
 (let ((?x6556 (* l_0_8_36 l_0_8_36)))
 (let ((?x15015 (* l_0_8_35 l_0_8_35)))
 (let ((?x15009 (* l_0_8_34 l_0_8_34)))
 (let ((?x14972 (* l_0_8_21 l_0_8_21)))
 (let ((?x15725 (+ (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x14972) ?x15009)))
 (= (+ (+ ?x15725 ?x15015) ?x6556) 0.0)))))))
(assert
 (let ((?x15528 (* 2.0 l_0_8_36)))
 (let ((?x15748 (* ?x15528 l_0_8_39)))
 (let ((?x15525 (* 2.0 l_0_8_35)))
 (let ((?x15746 (* ?x15525 l_0_8_38)))
 (let ((?x15522 (* 2.0 l_0_8_34)))
 (let ((?x15744 (* ?x15522 l_0_8_37)))
 (let ((?x15562 (* 2.0 l_0_8_21)))
 (let ((?x15742 (* ?x15562 l_0_8_24)))
 (let ((?x15556 (* 2.0 l_0_8_20)))
 (let ((?x15740 (* ?x15556 l_0_8_23)))
 (let ((?x15747 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x15740) ?x15742) ?x15744) ?x15746)))
 (= (+ ?x15747 ?x15748) 0.0)))))))))))))
(assert
 (let ((?x15528 (* 2.0 l_0_8_36)))
 (let ((?x15768 (* ?x15528 l_0_8_43)))
 (let ((?x15525 (* 2.0 l_0_8_35)))
 (let ((?x15766 (* ?x15525 l_0_8_42)))
 (let ((?x15522 (* 2.0 l_0_8_34)))
 (let ((?x15764 (* ?x15522 l_0_8_41)))
 (let ((?x15562 (* 2.0 l_0_8_21)))
 (let ((?x15756 (* ?x15562 l_0_8_28)))
 (let ((?x15556 (* 2.0 l_0_8_20)))
 (let ((?x9440 (* ?x15556 l_0_8_27)))
 (let ((?x15767 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_26) ?x9440) ?x15756) ?x15764) ?x15766)))
 (= (+ ?x15767 ?x15768) 0.0)))))))))))))
(assert
 (let ((?x8419 (* l_0_8_40 l_0_8_40)))
 (let ((?x8413 (* l_0_8_39 l_0_8_39)))
 (let ((?x8408 (* l_0_8_38 l_0_8_38)))
 (let ((?x8352 (* l_0_8_37 l_0_8_37)))
 (let ((?x6556 (* l_0_8_36 l_0_8_36)))
 (let ((?x15015 (* l_0_8_35 l_0_8_35)))
 (let ((?x15009 (* l_0_8_34 l_0_8_34)))
 (let ((?x15148 (* l_0_8_25 l_0_8_25)))
 (let ((?x15145 (* l_0_8_24 l_0_8_24)))
 (let ((?x15142 (* l_0_8_23 l_0_8_23)))
 (let ((?x15139 (* l_0_8_22 l_0_8_22)))
 (let ((?x14972 (* l_0_8_21 l_0_8_21)))
 (let ((?x15772 (- (+ (+ (* l_0_8_19 l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x14972) ?x15139)))
 (let ((?x15785 (+ (- (- (- (- (- (- ?x15772 ?x15142) ?x15145) ?x15148) ?x15009) ?x15015) ?x6556) ?x8352)))
 (= (+ (+ (+ ?x15785 ?x8408) ?x8413) ?x8419) 0.0))))))))))))))))
(assert
 (let ((?x15822 (* 2.0 l_0_8_40)))
 (let ((?x15823 (* ?x15822 l_0_8_44)))
 (let ((?x15819 (* 2.0 l_0_8_39)))
 (let ((?x15820 (* ?x15819 l_0_8_43)))
 (let ((?x15816 (* 2.0 l_0_8_38)))
 (let ((?x15817 (* ?x15816 l_0_8_42)))
 (let ((?x15813 (* 2.0 l_0_8_37)))
 (let ((?x15814 (* ?x15813 l_0_8_41)))
 (let ((?x15810 (* 2.0 l_0_8_25)))
 (let ((?x15811 (* ?x15810 l_0_8_29)))
 (let ((?x15807 (* 2.0 l_0_8_24)))
 (let ((?x15808 (* ?x15807 l_0_8_28)))
 (let ((?x15804 (* 2.0 l_0_8_23)))
 (let ((?x15805 (* ?x15804 l_0_8_27)))
 (let ((?x15815 (+ (- (- (- (* (* (- 2.0) l_0_8_22) l_0_8_26) ?x15805) ?x15808) ?x15811) ?x15814)))
 (= (+ (+ (+ ?x15815 ?x15817) ?x15820) ?x15823) 0.0)))))))))))))))))
(assert
 (let ((?x8707 (* l_0_8_45 l_0_8_45)))
 (let ((?x15305 (* l_0_8_44 l_0_8_44)))
 (let ((?x8699 (* l_0_8_43 l_0_8_43)))
 (let ((?x8697 (* l_0_8_42 l_0_8_42)))
 (let ((?x8641 (* l_0_8_41 l_0_8_41)))
 (let ((?x15267 (* l_0_8_30 l_0_8_30)))
 (let ((?x15264 (* l_0_8_29 l_0_8_29)))
 (let ((?x15261 (* l_0_8_28 l_0_8_28)))
 (let ((?x15842 (- (- (- (* (- l_0_8_26) l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x15261) ?x15264)))
 (= (+ (+ (+ (+ (+ (- ?x15842 ?x15267) ?x8641) ?x8697) ?x8699) ?x15305) ?x8707) 0.0)))))))))))
(assert
 (let ((?x14987 (* 4.0 l_0_8_36)))
 (let ((?x15573 (* ?x14987 l_0_8_39)))
 (let ((?x14984 (* 4.0 l_0_8_35)))
 (let ((?x15570 (* ?x14984 l_0_8_38)))
 (let ((?x14981 (* 4.0 l_0_8_34)))
 (let ((?x15567 (* ?x14981 l_0_8_37)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15520 (* ?x14539 l_0_8_34)))
 (let ((?x15559 (* 4.0 l_0_8_21)))
 (let ((?x15560 (* ?x15559 l_0_8_24)))
 (let ((?x15553 (* 4.0 l_0_8_20)))
 (let ((?x15554 (* ?x15553 l_0_8_23)))
 (let ((?x15547 (* 4.0 l_0_8_19)))
 (let ((?x15548 (* ?x15547 l_0_8_22)))
 (let ((?x15869 (+ (- (- (- (* (* 2.0 l_0_8_16) l_0_8_19) ?x15548) ?x15554) ?x15560) (* 2.0 (* l_0_8_22 l_0_8_22)))))
 (let ((?x15873 (+ (+ ?x15869 (* 2.0 (* l_0_8_23 l_0_8_23))) (* 2.0 (* l_0_8_24 l_0_8_24)))))
 (let ((?x15878 (+ (+ (- (+ ?x15873 (* 2.0 (* l_0_8_25 l_0_8_25))) ?x15520) ?x15567) ?x15570)))
 (let ((?x15883 (- (- (+ ?x15878 ?x15573) (* (* 2.0 l_0_8_37) l_0_8_37)) (* (* 2.0 l_0_8_38) l_0_8_38))))
 (let ((?x15887 (- (- ?x15883 (* (* 2.0 l_0_8_39) l_0_8_39)) (* (* 2.0 l_0_8_40) l_0_8_40))))
 (= ?x15887 0.0)))))))))))))))))))))
(assert
 (let ((?x8419 (* l_0_8_40 l_0_8_40)))
 (let ((?x9566 (* 2.0 ?x8419)))
 (let ((?x8413 (* l_0_8_39 l_0_8_39)))
 (let ((?x9563 (* 2.0 ?x8413)))
 (let ((?x8408 (* l_0_8_38 l_0_8_38)))
 (let ((?x15907 (* 2.0 ?x8408)))
 (let ((?x8352 (* l_0_8_37 l_0_8_37)))
 (let ((?x15902 (* 2.0 ?x8352)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15565 (* ?x14539 l_0_8_37)))
 (let ((?x15919 (- (* (* 2.0 l_0_8_16) l_0_8_22) (* (* 2.0 l_0_8_22) l_0_8_22))))
 (let ((?x15923 (- (- ?x15919 (* (* 2.0 l_0_8_23) l_0_8_23)) (* (* 2.0 l_0_8_24) l_0_8_24))))
 (let ((?x15928 (+ (+ (- (- ?x15923 (* (* 2.0 l_0_8_25) l_0_8_25)) ?x15565) ?x15902) ?x15907)))
 (= (+ (+ ?x15928 ?x9563) ?x9566) 0.0)))))))))))))))
(assert
 (let ((?x15967 (* l_0_8_55 l_0_8_55)))
 (let ((?x15965 (* l_0_8_54 l_0_8_54)))
 (let ((?x15963 (* l_0_8_53 l_0_8_53)))
 (let ((?x15961 (* l_0_8_52 l_0_8_52)))
 (let ((?x15163 (* 4.0 l_0_8_40)))
 (let ((?x15164 (* ?x15163 l_0_8_40)))
 (let ((?x15958 (* ?x15163 l_0_8_44)))
 (let ((?x15160 (* 4.0 l_0_8_39)))
 (let ((?x15161 (* ?x15160 l_0_8_39)))
 (let ((?x15955 (* ?x15160 l_0_8_43)))
 (let ((?x15157 (* 4.0 l_0_8_38)))
 (let ((?x15158 (* ?x15157 l_0_8_38)))
 (let ((?x15952 (* ?x15157 l_0_8_42)))
 (let ((?x15154 (* 4.0 l_0_8_37)))
 (let ((?x15155 (* ?x15154 l_0_8_37)))
 (let ((?x15949 (* ?x15154 l_0_8_41)))
 (let ((?x14539 (* 2.0 l_0_8_31)))
 (let ((?x15616 (* ?x14539 l_0_8_41)))
 (let ((?x15148 (* l_0_8_25 l_0_8_25)))
 (let ((?x15149 (* 4.0 ?x15148)))
 (let ((?x15945 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x15145 (* l_0_8_24 l_0_8_24)))
 (let ((?x15146 (* 4.0 ?x15145)))
 (let ((?x15941 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x15142 (* l_0_8_23 l_0_8_23)))
 (let ((?x15143 (* 4.0 ?x15142)))
 (let ((?x15937 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x15139 (* l_0_8_22 l_0_8_22)))
 (let ((?x15140 (* 4.0 ?x15139)))
 (let ((?x9593 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x15939 (+ (- (+ (- (* (* 2.0 l_0_8_16) l_0_8_26) ?x9593) ?x15140) ?x15937) ?x15143)))
 (let ((?x15951 (- (+ (- (+ (- (+ (- ?x15939 ?x15941) ?x15146) ?x15945) ?x15149) ?x15616) ?x15949) ?x15155)))
 (let ((?x15962 (- (- (+ (- (+ (- (+ ?x15951 ?x15952) ?x15158) ?x15955) ?x15161) ?x15958) ?x15164) ?x15961)))
 (= (- (- (- ?x15962 ?x15963) ?x15965) ?x15967) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7777 (* l_0_8_33 l_0_8_33)))
 (let ((?x7773 (* l_0_8_32 l_0_8_32)))
 (let ((?x16000 (- (- (+ (* l_0_8_17 l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x7773) ?x7777)))
 (= ?x16000 0.0)))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15674 (* ?x14865 l_0_8_35)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15672 (* ?x14859 l_0_8_34)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15670 (* ?x14893 l_0_8_20)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_19) ?x15670) ?x15672) ?x15674) 0.0))))))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15689 (* ?x14865 l_0_8_38)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15687 (* ?x14859 l_0_8_37)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15685 (* ?x14893 l_0_8_23)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_22) ?x15685) ?x15687) ?x15689) 0.0))))))))
(assert
 (let ((?x14865 (* 2.0 l_0_8_33)))
 (let ((?x15708 (* ?x14865 l_0_8_42)))
 (let ((?x14859 (* 2.0 l_0_8_32)))
 (let ((?x15706 (* ?x14859 l_0_8_41)))
 (let ((?x14893 (* 2.0 l_0_8_18)))
 (let ((?x15699 (* ?x14893 l_0_8_27)))
 (= (- (- (+ (* (* 2.0 l_0_8_17) l_0_8_26) ?x15699) ?x15706) ?x15708) 0.0))))))))
(assert
 (let ((?x15528 (* 2.0 l_0_8_36)))
 (let ((?x15748 (* ?x15528 l_0_8_39)))
 (let ((?x15525 (* 2.0 l_0_8_35)))
 (let ((?x15746 (* ?x15525 l_0_8_38)))
 (let ((?x15522 (* 2.0 l_0_8_34)))
 (let ((?x15744 (* ?x15522 l_0_8_37)))
 (let ((?x15562 (* 2.0 l_0_8_21)))
 (let ((?x15742 (* ?x15562 l_0_8_24)))
 (let ((?x15556 (* 2.0 l_0_8_20)))
 (let ((?x15740 (* ?x15556 l_0_8_23)))
 (let ((?x9776 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_22) ?x15740) ?x15742) ?x15744) ?x15746)))
 (= (- ?x9776 ?x15748) 0.0)))))))))))))
(assert
 (let ((?x15528 (* 2.0 l_0_8_36)))
 (let ((?x15768 (* ?x15528 l_0_8_43)))
 (let ((?x15525 (* 2.0 l_0_8_35)))
 (let ((?x15766 (* ?x15525 l_0_8_42)))
 (let ((?x15522 (* 2.0 l_0_8_34)))
 (let ((?x15764 (* ?x15522 l_0_8_41)))
 (let ((?x15562 (* 2.0 l_0_8_21)))
 (let ((?x15756 (* ?x15562 l_0_8_28)))
 (let ((?x15556 (* 2.0 l_0_8_20)))
 (let ((?x9440 (* ?x15556 l_0_8_27)))
 (let ((?x16019 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_26) ?x9440) ?x15756) ?x15764) ?x15766)))
 (= (- ?x16019 ?x15768) 0.0)))))))))))))
(assert
 (let ((?x8419 (* l_0_8_40 l_0_8_40)))
 (let ((?x8413 (* l_0_8_39 l_0_8_39)))
 (let ((?x8408 (* l_0_8_38 l_0_8_38)))
 (let ((?x8352 (* l_0_8_37 l_0_8_37)))
 (let ((?x15148 (* l_0_8_25 l_0_8_25)))
 (let ((?x15145 (* l_0_8_24 l_0_8_24)))
 (let ((?x9902 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x15145) ?x15148)))
 (= (- (- (- (- ?x9902 ?x8352) ?x8408) ?x8413) ?x8419) 0.0)))))))))
(assert
 (let ((?x15822 (* 2.0 l_0_8_40)))
 (let ((?x15823 (* ?x15822 l_0_8_44)))
 (let ((?x15819 (* 2.0 l_0_8_39)))
 (let ((?x15820 (* ?x15819 l_0_8_43)))
 (let ((?x15816 (* 2.0 l_0_8_38)))
 (let ((?x15817 (* ?x15816 l_0_8_42)))
 (let ((?x15813 (* 2.0 l_0_8_37)))
 (let ((?x15814 (* ?x15813 l_0_8_41)))
 (let ((?x15810 (* 2.0 l_0_8_25)))
 (let ((?x15811 (* ?x15810 l_0_8_29)))
 (let ((?x15807 (* 2.0 l_0_8_24)))
 (let ((?x15808 (* ?x15807 l_0_8_28)))
 (let ((?x15804 (* 2.0 l_0_8_23)))
 (let ((?x15805 (* ?x15804 l_0_8_27)))
 (let ((?x9960 (- (+ (+ (+ (* (* 2.0 l_0_8_22) l_0_8_26) ?x15805) ?x15808) ?x15811) ?x15814)))
 (= (- (- (- ?x9960 ?x15817) ?x15820) ?x15823) 0.0)))))))))))))))))
(assert
 (let ((?x8707 (* l_0_8_45 l_0_8_45)))
 (let ((?x15305 (* l_0_8_44 l_0_8_44)))
 (let ((?x8699 (* l_0_8_43 l_0_8_43)))
 (let ((?x8697 (* l_0_8_42 l_0_8_42)))
 (let ((?x8641 (* l_0_8_41 l_0_8_41)))
 (let ((?x15267 (* l_0_8_30 l_0_8_30)))
 (let ((?x15264 (* l_0_8_29 l_0_8_29)))
 (let ((?x15261 (* l_0_8_28 l_0_8_28)))
 (let ((?x10017 (+ (+ (+ (* l_0_8_26 l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x15261) ?x15264)))
 (= (- (- (- (- (- (+ ?x10017 ?x15267) ?x8641) ?x8697) ?x8699) ?x15305) ?x8707) 0.0)))))))))))
(assert
 (let ((?x15163 (* 4.0 l_0_8_40)))
 (let ((?x15958 (* ?x15163 l_0_8_44)))
 (let ((?x15160 (* 4.0 l_0_8_39)))
 (let ((?x15955 (* ?x15160 l_0_8_43)))
 (let ((?x15157 (* 4.0 l_0_8_38)))
 (let ((?x15952 (* ?x15157 l_0_8_42)))
 (let ((?x15154 (* 4.0 l_0_8_37)))
 (let ((?x15949 (* ?x15154 l_0_8_41)))
 (let ((?x14987 (* 4.0 l_0_8_36)))
 (let ((?x15624 (* ?x14987 l_0_8_43)))
 (let ((?x15048 (* 8.0 l_0_8_36)))
 (let ((?x15049 (* ?x15048 l_0_8_39)))
 (let ((?x14984 (* 4.0 l_0_8_35)))
 (let ((?x15621 (* ?x14984 l_0_8_42)))
 (let ((?x15045 (* 8.0 l_0_8_35)))
 (let ((?x15046 (* ?x15045 l_0_8_38)))
 (let ((?x14981 (* 4.0 l_0_8_34)))
 (let ((?x15618 (* ?x14981 l_0_8_41)))
 (let ((?x15042 (* 8.0 l_0_8_34)))
 (let ((?x15043 (* ?x15042 l_0_8_37)))
 (let ((?x15945 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x15941 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x15937 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x9593 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x15559 (* 4.0 l_0_8_21)))
 (let ((?x15613 (* ?x15559 l_0_8_28)))
 (let ((?x15033 (* 8.0 l_0_8_21)))
 (let ((?x15034 (* ?x15033 l_0_8_24)))
 (let ((?x15553 (* 4.0 l_0_8_20)))
 (let ((?x15610 (* ?x15553 l_0_8_27)))
 (let ((?x15030 (* 8.0 l_0_8_20)))
 (let ((?x15031 (* ?x15030 l_0_8_23)))
 (let ((?x15547 (* 4.0 l_0_8_19)))
 (let ((?x15607 (* ?x15547 l_0_8_26)))
 (let ((?x15027 (* 8.0 l_0_8_19)))
 (let ((?x15028 (* ?x15027 l_0_8_22)))
 (let ((?x16050 (+ (+ (- (+ (- (+ (- ?x15028 ?x15607) ?x15031) ?x15610) ?x15034) ?x15613) ?x9593) ?x15937)))
 (let ((?x16057 (- (+ (- (+ (- (+ (+ ?x16050 ?x15941) ?x15945) ?x15043) ?x15618) ?x15046) ?x15621) ?x15049)))
 (let ((?x16065 (- (- (- (- (- (+ ?x16057 ?x15624) ?x15949) ?x15952) ?x15955) ?x15958) (* (* 2.0 l_0_8_49) l_0_8_52))))
 (let ((?x16071 (- (- ?x16065 (* (* 2.0 l_0_8_50) l_0_8_53)) (* (* 2.0 l_0_8_51) l_0_8_54))))
 (= ?x16071 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15048 (* 8.0 l_0_8_36)))
 (let ((?x15101 (* ?x15048 l_0_8_43)))
 (let ((?x15045 (* 8.0 l_0_8_35)))
 (let ((?x15099 (* ?x15045 l_0_8_42)))
 (let ((?x15042 (* 8.0 l_0_8_34)))
 (let ((?x15097 (* ?x15042 l_0_8_41)))
 (let ((?x15267 (* l_0_8_30 l_0_8_30)))
 (let ((?x16086 (* 2.0 ?x15267)))
 (let ((?x15264 (* l_0_8_29 l_0_8_29)))
 (let ((?x16084 (* 2.0 ?x15264)))
 (let ((?x15261 (* l_0_8_28 l_0_8_28)))
 (let ((?x16082 (* 2.0 ?x15261)))
 (let ((?x15258 (* l_0_8_27 l_0_8_27)))
 (let ((?x16080 (* 2.0 ?x15258)))
 (let ((?x15255 (* l_0_8_26 l_0_8_26)))
 (let ((?x16078 (* 2.0 ?x15255)))
 (let ((?x15033 (* 8.0 l_0_8_21)))
 (let ((?x15089 (* ?x15033 l_0_8_28)))
 (let ((?x15030 (* 8.0 l_0_8_20)))
 (let ((?x15087 (* ?x15030 l_0_8_27)))
 (let ((?x15027 (* 8.0 l_0_8_19)))
 (let ((?x15085 (* ?x15027 l_0_8_26)))
 (let ((?x16087 (+ (+ (+ (+ (+ (+ (+ ?x15085 ?x15087) ?x15089) ?x16078) ?x16080) ?x16082) ?x16084) ?x16086)))
 (let ((?x16093 (- (- (- (- ?x16087 ?x15097) ?x15099) ?x15101) (* (* 2.0 l_0_8_41) l_0_8_41))))
 (let ((?x16099 (- (- ?x16093 (* (* 2.0 l_0_8_42) l_0_8_42)) (* (* 2.0 l_0_8_43) l_0_8_43))))
 (let ((?x16105 (- (- ?x16099 (* (* 2.0 l_0_8_44) l_0_8_44)) (* (* 2.0 l_0_8_45) l_0_8_45))))
 (let ((?x16109 (- (- ?x16105 (* (* 2.0 l_0_8_49) l_0_8_56)) (* (* 2.0 l_0_8_50) l_0_8_57))))
 (= (- ?x16109 (* (* 2.0 l_0_8_51) l_0_8_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x8707 (* l_0_8_45 l_0_8_45)))
 (let ((?x10230 (* 2.0 ?x8707)))
 (let ((?x15305 (* l_0_8_44 l_0_8_44)))
 (let ((?x10228 (* 2.0 ?x15305)))
 (let ((?x8699 (* l_0_8_43 l_0_8_43)))
 (let ((?x10224 (* 2.0 ?x8699)))
 (let ((?x8697 (* l_0_8_42 l_0_8_42)))
 (let ((?x10220 (* 2.0 ?x8697)))
 (let ((?x8641 (* l_0_8_41 l_0_8_41)))
 (let ((?x10195 (* 2.0 ?x8641)))
 (let ((?x15208 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x15205 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x15202 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x15199 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x15192 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x15189 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x15186 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x15183 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x16132 (- (+ (+ (+ ?x15183 ?x15186) ?x15189) ?x15192) (* (* 2.0 l_0_8_26) l_0_8_26))))
 (let ((?x16138 (- (- ?x16132 (* (* 2.0 l_0_8_27) l_0_8_27)) (* (* 2.0 l_0_8_28) l_0_8_28))))
 (let ((?x16144 (- (- ?x16138 (* (* 2.0 l_0_8_29) l_0_8_29)) (* (* 2.0 l_0_8_30) l_0_8_30))))
 (let ((?x16151 (+ (+ (+ (- (- (- (- ?x16144 ?x15199) ?x15202) ?x15205) ?x15208) ?x10195) ?x10220) ?x10224)))
 (let ((?x16159 (- (- (+ (+ ?x16151 ?x10228) ?x10230) (* (* 2.0 l_0_8_52) l_0_8_56)) (* (* 2.0 l_0_8_53) l_0_8_57))))
 (let ((?x16165 (- (- ?x16159 (* (* 2.0 l_0_8_54) l_0_8_58)) (* (* 2.0 l_0_8_55) l_0_8_59))))
 (= ?x16165 0.0))))))))))))))))))))))))))
(assert
 (let ((?x16187 (* l_0_8_60 l_0_8_60)))
 (let ((?x16185 (* l_0_8_59 l_0_8_59)))
 (let ((?x16183 (* l_0_8_58 l_0_8_58)))
 (let ((?x16181 (* l_0_8_57 l_0_8_57)))
 (let ((?x16179 (* l_0_8_56 l_0_8_56)))
 (let ((?x15285 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x15282 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x15279 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x15276 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x15273 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x15267 (* l_0_8_30 l_0_8_30)))
 (let ((?x15268 (* 4.0 ?x15267)))
 (let ((?x15264 (* l_0_8_29 l_0_8_29)))
 (let ((?x15265 (* 4.0 ?x15264)))
 (let ((?x15261 (* l_0_8_28 l_0_8_28)))
 (let ((?x15262 (* 4.0 ?x15261)))
 (let ((?x15258 (* l_0_8_27 l_0_8_27)))
 (let ((?x15259 (* 4.0 ?x15258)))
 (let ((?x15255 (* l_0_8_26 l_0_8_26)))
 (let ((?x15256 (* 4.0 ?x15255)))
 (let ((?x16176 (- (- (- (+ (+ (+ (+ ?x15256 ?x15259) ?x15262) ?x15265) ?x15268) ?x15273) ?x15276) ?x15279)))
 (let ((?x16188 (- (- (- (- (- (- (- ?x16176 ?x15282) ?x15285) ?x16179) ?x16181) ?x16183) ?x16185) ?x16187)))
 (= ?x16188 0.0))))))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16228 (* ?x16227 l_0_9_31)))
 (let ((?x16224 (* l_0_9_16 l_0_9_16)))
 (let ((?x16225 (* 4.0 ?x16224)))
 (let ((?x16226 (+ (- (* (* 2.0 l_0_9_1) l_0_9_2) (* l_0_9_1 l_0_9_1)) ?x16225)))
 (let ((?x16235 (- (- (- ?x16226 ?x16228) (* (* 2.0 l_0_9_61) l_0_9_62)) (* (* 2.0 l_0_9_76) l_0_9_77))))
 (= (+ (- ?x16235 (* (* 2.0 l_0_9_91) l_0_9_92)) 4.0) 0.0))))))))
(assert
 (let ((?x16269 (* l_0_9_46 l_0_9_46)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16228 (* ?x16227 l_0_9_31)))
 (let ((?x16224 (* l_0_9_16 l_0_9_16)))
 (let ((?x16225 (* 4.0 ?x16224)))
 (let ((?x16266 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_101) l_0_9_91))))
 (let ((?x16272 (- (- (- (+ ?x16266 ?x16225) ?x16228) ?x16269) (* (* 2.0 l_0_9_61) l_0_9_71))))
 (= (+ (- ?x16272 (* (* 2.0 l_0_9_76) l_0_9_86)) 4.0) 0.0)))))))))
(assert
 (let ((?x16321 (* l_0_9_96 l_0_9_96)))
 (let ((?x16319 (* l_0_9_95 l_0_9_95)))
 (let ((?x16317 (* l_0_9_94 l_0_9_94)))
 (let ((?x16315 (* l_0_9_81 l_0_9_81)))
 (let ((?x16313 (* l_0_9_80 l_0_9_80)))
 (let ((?x16311 (* l_0_9_79 l_0_9_79)))
 (let ((?x16309 (* l_0_9_66 l_0_9_66)))
 (let ((?x16307 (* l_0_9_65 l_0_9_65)))
 (let ((?x16305 (* l_0_9_64 l_0_9_64)))
 (let ((?x16247 (* l_0_9_31 l_0_9_31)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16293 (* ?x16227 l_0_9_34)))
 (let ((?x16294 (- (- (* (* 4.0 l_0_9_16) l_0_9_19) (* l_0_9_16 l_0_9_16)) ?x16293)))
 (let ((?x16301 (+ (+ (+ ?x16294 ?x16247) (* 1.0 (* l_0_9_4 l_0_9_4))) (* 1.0 (* l_0_9_5 l_0_9_5)))))
 (let ((?x16310 (- (- (- (+ ?x16301 (* 1.0 (* l_0_9_6 l_0_9_6))) ?x16305) ?x16307) ?x16309)))
 (let ((?x16323 (- (- (- (- (- (- (- ?x16310 ?x16311) ?x16313) ?x16315) ?x16317) ?x16319) ?x16321) 1.0)))
 (= ?x16323 0.0))))))))))))))))))
(assert
 (let ((?x16390 (* l_0_9_99 l_0_9_99)))
 (let ((?x16388 (* l_0_9_98 l_0_9_98)))
 (let ((?x16386 (* l_0_9_97 l_0_9_97)))
 (let ((?x16381 (* l_0_9_85 l_0_9_85)))
 (let ((?x16379 (* l_0_9_84 l_0_9_84)))
 (let ((?x16377 (* l_0_9_83 l_0_9_83)))
 (let ((?x16375 (* l_0_9_82 l_0_9_82)))
 (let ((?x16370 (* l_0_9_70 l_0_9_70)))
 (let ((?x16365 (* l_0_9_69 l_0_9_69)))
 (let ((?x16363 (* l_0_9_68 l_0_9_68)))
 (let ((?x16361 (* l_0_9_67 l_0_9_67)))
 (let ((?x16247 (* l_0_9_31 l_0_9_31)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16358 (* ?x16227 l_0_9_37)))
 (let ((?x16224 (* l_0_9_16 l_0_9_16)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x16355 (* ?x16289 l_0_9_22)))
 (let ((?x16356 (- (- (* 1.0 (* l_0_9_10 l_0_9_10)) (* l_0_9_100 l_0_9_100)) ?x16355)))
 (let ((?x16369 (+ (- (- (- (- (+ (+ ?x16356 ?x16224) ?x16358) ?x16247) ?x16361) ?x16363) ?x16365) (* 1.0 (* l_0_9_7 l_0_9_7)))))
 (let ((?x16378 (- (- (+ (- ?x16369 ?x16370) (* 1.0 (* l_0_9_8 l_0_9_8))) ?x16375) ?x16377)))
 (let ((?x16387 (- (+ (- (- ?x16378 ?x16379) ?x16381) (* 1.0 (* l_0_9_9 l_0_9_9))) ?x16386)))
 (= (+ (- (- ?x16387 ?x16388) ?x16390) 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x16224 (* l_0_9_16 l_0_9_16)))
 (let ((?x16430 (* 2.0 ?x16224)))
 (let ((?x16434 (- (+ (* (* 2.0 l_0_9_1) l_0_9_4) ?x16430) (* (* 2.0 l_0_9_31) l_0_9_31))))
 (let ((?x16438 (- (- ?x16434 (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_76) l_0_9_79))))
 (= (+ (- ?x16438 (* (* 2.0 l_0_9_91) l_0_9_94)) 2.0) 0.0))))))
(assert
 (let ((?x16247 (* l_0_9_31 l_0_9_31)))
 (let ((?x16446 (* 2.0 ?x16247)))
 (let ((?x16462 (- (* (* 2.0 l_0_9_1) l_0_9_7) (* (* 2.0 l_0_9_16) l_0_9_16))))
 (let ((?x16467 (- (- (+ ?x16462 ?x16446) (* (* 2.0 l_0_9_61) l_0_9_67)) (* (* 2.0 l_0_9_76) l_0_9_82))))
 (= (- (- ?x16467 (* (* 2.0 l_0_9_91) l_0_9_97)) 2.0) 0.0))))))
(assert
 (let ((?x16515 (* l_0_9_93 l_0_9_93)))
 (let ((?x16513 (* l_0_9_92 l_0_9_92)))
 (let ((?x16511 (* l_0_9_78 l_0_9_78)))
 (let ((?x16509 (* l_0_9_77 l_0_9_77)))
 (let ((?x16507 (* l_0_9_63 l_0_9_63)))
 (let ((?x16505 (* l_0_9_62 l_0_9_62)))
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16503 (* ?x16502 l_0_9_32)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16494 (* ?x16493 l_0_9_17)))
 (let ((?x16498 (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_2) ?x16494) (* 1.0 (* l_0_9_2 l_0_9_2)))))
 (let ((?x16508 (- (- (- (+ ?x16498 (* 1.0 (* l_0_9_3 l_0_9_3))) ?x16503) ?x16505) ?x16507)))
 (= (- (- (- (- ?x16508 ?x16509) ?x16511) ?x16513) ?x16515) 0.0))))))))))))))
(assert
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16548 (* ?x16502 l_0_9_34)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16546 (* ?x16227 l_0_9_32)))
 (let ((?x16543 (* 2.0 l_0_9_3)))
 (let ((?x16544 (* ?x16543 l_0_9_5)))
 (let ((?x16540 (* 2.0 l_0_9_2)))
 (let ((?x16541 (* ?x16540 l_0_9_4)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16538 (* ?x16493 l_0_9_19)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x16536 (* ?x16289 l_0_9_17)))
 (let ((?x16545 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x16536) ?x16538) ?x16541) ?x16544)))
 (let ((?x16555 (- (- (- (- ?x16545 ?x16546) ?x16548) (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 2.0 l_0_9_63) l_0_9_65))))
 (let ((?x16561 (- (- ?x16555 (* (* 2.0 l_0_9_77) l_0_9_79)) (* (* 2.0 l_0_9_78) l_0_9_80))))
 (let ((?x16567 (- (- ?x16561 (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x16567 0.0))))))))))))))))))
(assert
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16616 (* ?x16502 l_0_9_37)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16546 (* ?x16227 l_0_9_32)))
 (let ((?x16543 (* 2.0 l_0_9_3)))
 (let ((?x16613 (* ?x16543 l_0_9_8)))
 (let ((?x16540 (* 2.0 l_0_9_2)))
 (let ((?x16611 (* ?x16540 l_0_9_7)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16609 (* ?x16493 l_0_9_22)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x16536 (* ?x16289 l_0_9_17)))
 (let ((?x16614 (+ (+ (+ (- (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x16536) ?x16609) ?x16611) ?x16613)))
 (let ((?x16621 (- (- (- (+ ?x16614 ?x16546) ?x16616) (* (* 2.0 l_0_9_62) l_0_9_67)) (* (* 2.0 l_0_9_63) l_0_9_68))))
 (let ((?x16625 (- (- ?x16621 (* (* 2.0 l_0_9_77) l_0_9_82)) (* (* 2.0 l_0_9_78) l_0_9_83))))
 (let ((?x16629 (- (- ?x16625 (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x16629 0.0))))))))))))))))))
(assert
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16656 (* ?x16502 l_0_9_41)))
 (let ((?x16503 (* ?x16502 l_0_9_32)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16653 (* ?x16493 l_0_9_26)))
 (let ((?x16494 (* ?x16493 l_0_9_17)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x16650 (* ?x16649 l_0_9_3)))
 (let ((?x10814 (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x16648 (+ (- ?x10814 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_11) l_0_9_2))))
 (let ((?x16660 (- (- (- (+ (+ (+ ?x16648 ?x16650) ?x16494) ?x16653) ?x16503) ?x16656) (* (* 2.0 l_0_9_46) l_0_9_47))))
 (let ((?x16664 (- (- ?x16660 (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (let ((?x16668 (- (- ?x16664 (* (* 2.0 l_0_9_77) l_0_9_86)) (* (* 2.0 l_0_9_78) l_0_9_87))))
 (= ?x16668 0.0)))))))))))))))
(assert
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16710 (* ?x16709 l_0_9_33)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16707 (* ?x16706 l_0_9_32)))
 (let ((?x16499 (* l_0_9_3 l_0_9_3)))
 (let ((?x16496 (* l_0_9_2 l_0_9_2)))
 (let ((?x16701 (* l_0_9_18 l_0_9_18)))
 (let ((?x16702 (* 4.0 ?x16701)))
 (let ((?x16699 (* l_0_9_17 l_0_9_17)))
 (let ((?x16700 (* 4.0 ?x16699)))
 (= (- (- (- (- (+ ?x16700 ?x16702) ?x16496) ?x16499) ?x16707) ?x16710) 0.0))))))))))))
(assert
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16734 (* ?x16733 l_0_9_35)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16728 (* ?x16727 l_0_9_34)))
 (let ((?x16543 (* 2.0 l_0_9_3)))
 (let ((?x16544 (* ?x16543 l_0_9_5)))
 (let ((?x16540 (* 2.0 l_0_9_2)))
 (let ((?x16541 (* ?x16540 l_0_9_4)))
 (let ((?x16701 (* l_0_9_18 l_0_9_18)))
 (let ((?x16723 (* 2.0 ?x16701)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16721 (* ?x16720 l_0_9_20)))
 (let ((?x16699 (* l_0_9_17 l_0_9_17)))
 (let ((?x16718 (* 2.0 ?x16699)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x16717 (* ?x16716 l_0_9_19)))
 (let ((?x16732 (- (- (- (- (+ (+ (+ ?x16717 ?x16718) ?x16721) ?x16723) ?x16541) ?x16544) ?x16728) (* (* 2.0 l_0_9_32) l_0_9_32))))
 (= (- (- ?x16732 ?x16734) (* (* 2.0 l_0_9_33) l_0_9_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x10981 (* l_0_9_33 l_0_9_33)))
 (let ((?x11071 (* 2.0 ?x10981)))
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16755 (* ?x16733 l_0_9_38)))
 (let ((?x10975 (* l_0_9_32 l_0_9_32)))
 (let ((?x11060 (* 2.0 ?x10975)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16752 (* ?x16727 l_0_9_37)))
 (let ((?x16543 (* 2.0 l_0_9_3)))
 (let ((?x16613 (* ?x16543 l_0_9_8)))
 (let ((?x16540 (* 2.0 l_0_9_2)))
 (let ((?x16611 (* ?x16540 l_0_9_7)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16745 (* ?x16720 l_0_9_23)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x10999 (* ?x16716 l_0_9_22)))
 (let ((?x16749 (- (+ (- ?x10999 (* (* 2.0 l_0_9_17) l_0_9_17)) ?x16745) (* (* 2.0 l_0_9_18) l_0_9_18))))
 (= (+ (- (+ (- (- (- ?x16749 ?x16611) ?x16613) ?x16752) ?x11060) ?x16755) ?x11071) 0.0)))))))))))))))))))
(assert
 (let ((?x16787 (* l_0_9_48 l_0_9_48)))
 (let ((?x16785 (* l_0_9_47 l_0_9_47)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16710 (* ?x16709 l_0_9_33)))
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16782 (* ?x16733 l_0_9_42)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16707 (* ?x16706 l_0_9_32)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16779 (* ?x16727 l_0_9_41)))
 (let ((?x16701 (* l_0_9_18 l_0_9_18)))
 (let ((?x16702 (* 4.0 ?x16701)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16776 (* ?x16720 l_0_9_27)))
 (let ((?x16699 (* l_0_9_17 l_0_9_17)))
 (let ((?x16700 (* 4.0 ?x16699)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x16773 (* ?x16716 l_0_9_26)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x16650 (* ?x16649 l_0_9_3)))
 (let ((?x16777 (+ (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x16650) ?x16773) ?x16700) ?x16776)))
 (let ((?x16788 (- (- (- (- (- (- (+ ?x16777 ?x16702) ?x16779) ?x16707) ?x16782) ?x16710) ?x16785) ?x16787)))
 (= ?x16788 0.0))))))))))))))))))))))))
(assert
 (let ((?x16302 (* l_0_9_6 l_0_9_6)))
 (let ((?x16299 (* l_0_9_5 l_0_9_5)))
 (let ((?x16296 (* l_0_9_4 l_0_9_4)))
 (let ((?x16826 (* 4.0 l_0_9_36)))
 (let ((?x16827 (* ?x16826 l_0_9_36)))
 (let ((?x16823 (* 4.0 l_0_9_35)))
 (let ((?x16824 (* ?x16823 l_0_9_35)))
 (let ((?x16820 (* 4.0 l_0_9_34)))
 (let ((?x16821 (* ?x16820 l_0_9_34)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16818 (* ?x16709 l_0_9_35)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16816 (* ?x16706 l_0_9_34)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x16814 (* ?x16432 l_0_9_32)))
 (let ((?x16811 (* l_0_9_21 l_0_9_21)))
 (let ((?x16812 (* 4.0 ?x16811)))
 (let ((?x16808 (* l_0_9_20 l_0_9_20)))
 (let ((?x16809 (* 4.0 ?x16808)))
 (let ((?x16805 (* l_0_9_19 l_0_9_19)))
 (let ((?x16806 (* 4.0 ?x16805)))
 (let ((?x16802 (* 4.0 l_0_9_18)))
 (let ((?x16803 (* ?x16802 l_0_9_20)))
 (let ((?x16801 (+ (* (* (- 2.0) l_0_9_16) l_0_9_17) (* (* 4.0 l_0_9_17) l_0_9_19))))
 (let ((?x16819 (- (- (+ (+ (+ (+ (+ ?x16801 ?x16803) ?x16806) ?x16809) ?x16812) ?x16814) ?x16816) ?x16818)))
 (= (- (- (- (- (- (- ?x16819 ?x16821) ?x16824) ?x16827) ?x16296) ?x16299) ?x16302) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x16886 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16883 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16880 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x16876 (* 8.0 l_0_9_36)))
 (let ((?x16877 (* ?x16876 l_0_9_39)))
 (let ((?x16873 (* 8.0 l_0_9_35)))
 (let ((?x16874 (* ?x16873 l_0_9_38)))
 (let ((?x16870 (* 8.0 l_0_9_34)))
 (let ((?x16871 (* ?x16870 l_0_9_37)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16868 (* ?x16709 l_0_9_38)))
 (let ((?x16818 (* ?x16709 l_0_9_35)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16865 (* ?x16706 l_0_9_37)))
 (let ((?x16816 (* ?x16706 l_0_9_34)))
 (let ((?x16861 (* 8.0 l_0_9_21)))
 (let ((?x16862 (* ?x16861 l_0_9_24)))
 (let ((?x16858 (* 8.0 l_0_9_20)))
 (let ((?x16859 (* ?x16858 l_0_9_23)))
 (let ((?x16855 (* 8.0 l_0_9_19)))
 (let ((?x16856 (* ?x16855 l_0_9_22)))
 (let ((?x16802 (* 4.0 l_0_9_18)))
 (let ((?x11214 (* ?x16802 l_0_9_23)))
 (let ((?x16803 (* ?x16802 l_0_9_20)))
 (let ((?x16799 (* 4.0 l_0_9_17)))
 (let ((?x1778 (* ?x16799 l_0_9_22)))
 (let ((?x16857 (+ (+ (- (+ (* (* (- 4.0) l_0_9_17) l_0_9_19) ?x1778) ?x16803) ?x11214) ?x16856)))
 (let ((?x16872 (- (- (+ (- (+ (+ (+ ?x16857 ?x16859) ?x16862) ?x16816) ?x16865) ?x16818) ?x16868) ?x16871)))
 (= (- (- (- (- (- ?x16872 ?x16874) ?x16877) ?x16880) ?x16883) ?x16886) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x16876 (* 8.0 l_0_9_36)))
 (let ((?x16958 (* ?x16876 l_0_9_43)))
 (let ((?x16873 (* 8.0 l_0_9_35)))
 (let ((?x16956 (* ?x16873 l_0_9_42)))
 (let ((?x16870 (* 8.0 l_0_9_34)))
 (let ((?x16954 (* ?x16870 l_0_9_41)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16952 (* ?x16709 l_0_9_42)))
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16734 (* ?x16733 l_0_9_35)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16949 (* ?x16706 l_0_9_41)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16728 (* ?x16727 l_0_9_34)))
 (let ((?x16861 (* 8.0 l_0_9_21)))
 (let ((?x16946 (* ?x16861 l_0_9_28)))
 (let ((?x16858 (* 8.0 l_0_9_20)))
 (let ((?x16944 (* ?x16858 l_0_9_27)))
 (let ((?x16855 (* 8.0 l_0_9_19)))
 (let ((?x16942 (* ?x16855 l_0_9_26)))
 (let ((?x16802 (* 4.0 l_0_9_18)))
 (let ((?x16940 (* ?x16802 l_0_9_27)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16721 (* ?x16720 l_0_9_20)))
 (let ((?x16799 (* 4.0 l_0_9_17)))
 (let ((?x16937 (* ?x16799 l_0_9_26)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x16717 (* ?x16716 l_0_9_19)))
 (let ((?x16933 (* 2.0 l_0_9_13)))
 (let ((?x16934 (* ?x16933 l_0_9_6)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x16931 (* ?x16649 l_0_9_5)))
 (let ((?x16938 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x16931) ?x16934) ?x16717) ?x16937)))
 (let ((?x16950 (- (- (+ (+ (+ (+ (+ ?x16938 ?x16721) ?x16940) ?x16942) ?x16944) ?x16946) ?x16728) ?x16949)))
 (let ((?x16962 (- (- (- (- (- (- ?x16950 ?x16734) ?x16952) ?x16954) ?x16956) ?x16958) (* (* 2.0 l_0_9_47) l_0_9_49))))
 (= (- ?x16962 (* (* 2.0 l_0_9_48) l_0_9_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16383 (* l_0_9_9 l_0_9_9)))
 (let ((?x16372 (* l_0_9_8 l_0_9_8)))
 (let ((?x16367 (* l_0_9_7 l_0_9_7)))
 (let ((?x17023 (* 4.0 l_0_9_40)))
 (let ((?x17024 (* ?x17023 l_0_9_40)))
 (let ((?x17020 (* 4.0 l_0_9_39)))
 (let ((?x17021 (* ?x17020 l_0_9_39)))
 (let ((?x17017 (* 4.0 l_0_9_38)))
 (let ((?x17018 (* ?x17017 l_0_9_38)))
 (let ((?x17014 (* 4.0 l_0_9_37)))
 (let ((?x17015 (* ?x17014 l_0_9_37)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16868 (* ?x16709 l_0_9_38)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16865 (* ?x16706 l_0_9_37)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x16814 (* ?x16432 l_0_9_32)))
 (let ((?x17008 (* l_0_9_25 l_0_9_25)))
 (let ((?x17009 (* 4.0 ?x17008)))
 (let ((?x17005 (* l_0_9_24 l_0_9_24)))
 (let ((?x17006 (* 4.0 ?x17005)))
 (let ((?x17002 (* l_0_9_23 l_0_9_23)))
 (let ((?x17003 (* 4.0 ?x17002)))
 (let ((?x16999 (* l_0_9_22 l_0_9_22)))
 (let ((?x17000 (* 4.0 ?x16999)))
 (let ((?x16802 (* 4.0 l_0_9_18)))
 (let ((?x11214 (* ?x16802 l_0_9_23)))
 (let ((?x16799 (* 4.0 l_0_9_17)))
 (let ((?x1778 (* ?x16799 l_0_9_22)))
 (let ((?x16997 (- (+ (* (- l_0_9_10) l_0_9_10) (* (* 2.0 l_0_9_16) l_0_9_17)) ?x1778)))
 (let ((?x17012 (+ (- (+ (+ (+ (+ (- ?x16997 ?x11214) ?x17000) ?x17003) ?x17006) ?x17009) ?x16814) ?x16865)))
 (let ((?x17027 (- (- (- (- (- (- (+ ?x17012 ?x16868) ?x17015) ?x17018) ?x17021) ?x17024) ?x16367) ?x16372)))
 (= (- ?x17027 ?x16383) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17073 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x17070 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x17067 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x17064 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x16709 (* 4.0 l_0_9_33)))
 (let ((?x16952 (* ?x16709 l_0_9_42)))
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16755 (* ?x16733 l_0_9_38)))
 (let ((?x16706 (* 4.0 l_0_9_32)))
 (let ((?x16949 (* ?x16706 l_0_9_41)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16752 (* ?x16727 l_0_9_37)))
 (let ((?x17057 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x17054 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x17051 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x17048 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x16802 (* 4.0 l_0_9_18)))
 (let ((?x16940 (* ?x16802 l_0_9_27)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16745 (* ?x16720 l_0_9_23)))
 (let ((?x16799 (* 4.0 l_0_9_17)))
 (let ((?x16937 (* ?x16799 l_0_9_26)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x10999 (* ?x16716 l_0_9_22)))
 (let ((?x16933 (* 2.0 l_0_9_13)))
 (let ((?x17041 (* ?x16933 l_0_9_9)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x17039 (* ?x16649 l_0_9_8)))
 (let ((?x16646 (* 2.0 l_0_9_11)))
 (let ((?x11431 (* ?x16646 l_0_9_7)))
 (let ((?x17043 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x11431) ?x17039) ?x17041) ?x10999)))
 (let ((?x17058 (+ (+ (+ (+ (- (+ (- ?x17043 ?x16937) ?x16745) ?x16940) ?x17048) ?x17051) ?x17054) ?x17057)))
 (let ((?x17071 (- (- (- (+ (- (+ (- ?x17058 ?x16752) ?x16949) ?x16755) ?x16952) ?x17064) ?x17067) ?x17070)))
 (let ((?x17078 (- (- (- ?x17071 ?x17073) (* (* 2.0 l_0_9_47) l_0_9_52)) (* (* 2.0 l_0_9_48) l_0_9_53))))
 (= ?x17078 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17146 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x17143 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x17140 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x17137 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x17134 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x16733 (* 8.0 l_0_9_33)))
 (let ((?x16782 (* ?x16733 l_0_9_42)))
 (let ((?x16727 (* 8.0 l_0_9_32)))
 (let ((?x16779 (* ?x16727 l_0_9_41)))
 (let ((?x17128 (* l_0_9_30 l_0_9_30)))
 (let ((?x17129 (* 4.0 ?x17128)))
 (let ((?x17125 (* l_0_9_29 l_0_9_29)))
 (let ((?x17126 (* 4.0 ?x17125)))
 (let ((?x17122 (* l_0_9_28 l_0_9_28)))
 (let ((?x17123 (* 4.0 ?x17122)))
 (let ((?x17119 (* l_0_9_27 l_0_9_27)))
 (let ((?x17120 (* 4.0 ?x17119)))
 (let ((?x17116 (* l_0_9_26 l_0_9_26)))
 (let ((?x17117 (* 4.0 ?x17116)))
 (let ((?x16720 (* 8.0 l_0_9_18)))
 (let ((?x16776 (* ?x16720 l_0_9_27)))
 (let ((?x16716 (* 8.0 l_0_9_17)))
 (let ((?x16773 (* ?x16716 l_0_9_26)))
 (let ((?x11567 (* l_0_9_15 l_0_9_15)))
 (let ((?x2373 (* l_0_9_14 l_0_9_14)))
 (let ((?x11533 (* l_0_9_13 l_0_9_13)))
 (let ((?x11566 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x11533) ?x2373)))
 (let ((?x17127 (+ (+ (+ (+ (+ (+ (- ?x11566 ?x11567) ?x16773) ?x16776) ?x17117) ?x17120) ?x17123) ?x17126)))
 (let ((?x17144 (- (- (- (- (- (- (+ ?x17127 ?x17129) ?x16779) ?x16782) ?x17134) ?x17137) ?x17140) ?x17143)))
 (let ((?x17151 (- (- (- ?x17144 ?x17146) (* (* 2.0 l_0_9_47) l_0_9_56)) (* (* 2.0 l_0_9_48) l_0_9_57))))
 (= ?x17151 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x17190 (* l_0_9_91 l_0_9_91)))
 (let ((?x17188 (* l_0_9_76 l_0_9_76)))
 (let ((?x17189 (- (- (* 1.0 (* l_0_9_1 l_0_9_1)) (* l_0_9_61 l_0_9_61)) ?x17188)))
 (= (- ?x17189 ?x17190) 0.0)))))
(assert
 (let ((?x16886 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x16883 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x16880 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x16358 (* ?x16227 l_0_9_37)))
 (let ((?x16293 (* ?x16227 l_0_9_34)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x16355 (* ?x16289 l_0_9_22)))
 (let ((?x17205 (+ (- (+ (+ (* (* (- 4.0) l_0_9_16) l_0_9_19) ?x16355) ?x16293) ?x16358) ?x16880)))
 (let ((?x17213 (- (- (+ (+ ?x17205 ?x16883) ?x16886) (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x17219 (- (- ?x17213 (* (* 2.0 l_0_9_66) l_0_9_69)) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x17225 (- (- ?x17219 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x17231 (- (- ?x17225 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x17231 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))))
(assert
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x17267 (* ?x16227 l_0_9_41)))
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16548 (* ?x16502 l_0_9_34)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x17264 (* ?x16289 l_0_9_26)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16538 (* ?x16493 l_0_9_19)))
 (let ((?x16933 (* 2.0 l_0_9_13)))
 (let ((?x16934 (* ?x16933 l_0_9_6)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x16931 (* ?x16649 l_0_9_5)))
 (let ((?x17255 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x17260 (+ (- ?x17255 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_11) l_0_9_4))))
 (let ((?x17270 (- (- (- (+ (+ (+ (+ ?x17260 ?x16931) ?x16934) ?x16538) ?x17264) ?x16548) ?x17267) (* (* 2.0 l_0_9_46) l_0_9_49))))
 (let ((?x17274 (- (- ?x17270 (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (let ((?x17278 (- (- ?x17274 (* (* 2.0 l_0_9_66) l_0_9_73)) (* (* 2.0 l_0_9_79) l_0_9_86))))
 (let ((?x17282 (- (- ?x17278 (* (* 2.0 l_0_9_80) l_0_9_87)) (* (* 2.0 l_0_9_81) l_0_9_88))))
 (= ?x17282 0.0))))))))))))))))))))
(assert
 (let ((?x16227 (* 4.0 l_0_9_31)))
 (let ((?x17267 (* ?x16227 l_0_9_41)))
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16616 (* ?x16502 l_0_9_37)))
 (let ((?x16289 (* 4.0 l_0_9_16)))
 (let ((?x17264 (* ?x16289 l_0_9_26)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16609 (* ?x16493 l_0_9_22)))
 (let ((?x16933 (* 2.0 l_0_9_13)))
 (let ((?x17041 (* ?x16933 l_0_9_9)))
 (let ((?x16649 (* 2.0 l_0_9_12)))
 (let ((?x17039 (* ?x16649 l_0_9_8)))
 (let ((?x16646 (* 2.0 l_0_9_11)))
 (let ((?x11431 (* ?x16646 l_0_9_7)))
 (let ((?x17311 (- (* (* 2.0 l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x17315 (- (- ?x17311 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x17320 (+ (+ (+ (- ?x17315 (* (* 2.0 l_0_9_103) l_0_9_99)) ?x11431) ?x17039) ?x17041)))
 (let ((?x17326 (- (+ (- (- (+ ?x17320 ?x16609) ?x17264) ?x16616) ?x17267) (* (* 2.0 l_0_9_46) l_0_9_52))))
 (let ((?x17332 (- (- ?x17326 (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x17338 (- (- ?x17332 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (let ((?x17344 (- (- ?x17338 (* (* 2.0 l_0_9_82) l_0_9_86)) (* (* 2.0 l_0_9_83) l_0_9_87))))
 (let ((?x17350 (- (- ?x17344 (* (* 2.0 l_0_9_84) l_0_9_88)) (* (* 2.0 l_0_9_85) l_0_9_89))))
 (= ?x17350 0.0))))))))))))))))))))))))
(assert
 (let ((?x17430 (* l_0_9_90 l_0_9_90)))
 (let ((?x17428 (* l_0_9_89 l_0_9_89)))
 (let ((?x17426 (* l_0_9_88 l_0_9_88)))
 (let ((?x17424 (* l_0_9_87 l_0_9_87)))
 (let ((?x17422 (* l_0_9_86 l_0_9_86)))
 (let ((?x17420 (* l_0_9_75 l_0_9_75)))
 (let ((?x17418 (* l_0_9_74 l_0_9_74)))
 (let ((?x17416 (* l_0_9_73 l_0_9_73)))
 (let ((?x17414 (* l_0_9_72 l_0_9_72)))
 (let ((?x17412 (* l_0_9_71 l_0_9_71)))
 (let ((?x16502 (* 8.0 l_0_9_31)))
 (let ((?x16656 (* ?x16502 l_0_9_41)))
 (let ((?x16493 (* 8.0 l_0_9_16)))
 (let ((?x16653 (* ?x16493 l_0_9_26)))
 (let ((?x17396 (* l_0_9_105 l_0_9_105)))
 (let ((?x17394 (* l_0_9_104 l_0_9_104)))
 (let ((?x17392 (* l_0_9_103 l_0_9_103)))
 (let ((?x17393 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x17392)))
 (let ((?x17401 (+ (+ (- (- ?x17393 ?x17394) ?x17396) (* 1.0 (* l_0_9_11 l_0_9_11))) (* 1.0 (* l_0_9_12 l_0_9_12)))))
 (let ((?x17405 (+ (+ ?x17401 (* 1.0 (* l_0_9_13 l_0_9_13))) (* 1.0 (* l_0_9_14 l_0_9_14)))))
 (let ((?x17411 (- (- (+ (+ ?x17405 (* 1.0 (* l_0_9_15 l_0_9_15))) ?x16653) ?x16656) (* (* 2.0 l_0_9_46) l_0_9_56))))
 (let ((?x17425 (- (- (- (- (- (- (- ?x17411 ?x17412) ?x17414) ?x17416) ?x17418) ?x17420) ?x17422) ?x17424)))
 (= (- (- (- ?x17425 ?x17426) ?x17428) ?x17430) 0.0))))))))))))))))))))))))
(assert
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17450 (* ?x16432 l_0_9_34)))
 (let ((?x17445 (+ (* (* (- 2.0) l_0_9_16) l_0_9_19) (* 2.0 (* l_0_9_19 l_0_9_19)))))
 (let ((?x17449 (+ (+ ?x17445 (* 2.0 (* l_0_9_20 l_0_9_20))) (* 2.0 (* l_0_9_21 l_0_9_21)))))
 (let ((?x17457 (- (- (+ ?x17449 ?x17450) (* (* 2.0 l_0_9_34) l_0_9_34)) (* (* 2.0 l_0_9_35) l_0_9_35))))
 (= (- ?x17457 (* (* 2.0 l_0_9_36) l_0_9_36)) 0.0)))))))
(assert
 (let ((?x11208 (* l_0_9_36 l_0_9_36)))
 (let ((?x3191 (* 2.0 ?x11208)))
 (let ((?x16826 (* 4.0 l_0_9_36)))
 (let ((?x17505 (* ?x16826 l_0_9_39)))
 (let ((?x1735 (* l_0_9_35 l_0_9_35)))
 (let ((?x17465 (* 2.0 ?x1735)))
 (let ((?x16823 (* 4.0 l_0_9_35)))
 (let ((?x17502 (* ?x16823 l_0_9_38)))
 (let ((?x16845 (* l_0_9_34 l_0_9_34)))
 (let ((?x11246 (* 2.0 ?x16845)))
 (let ((?x16820 (* 4.0 l_0_9_34)))
 (let ((?x17499 (* ?x16820 l_0_9_37)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17497 (* ?x16432 l_0_9_37)))
 (let ((?x17491 (* 4.0 l_0_9_21)))
 (let ((?x17492 (* ?x17491 l_0_9_24)))
 (let ((?x17485 (* 4.0 l_0_9_20)))
 (let ((?x17486 (* ?x17485 l_0_9_23)))
 (let ((?x17479 (* 4.0 l_0_9_19)))
 (let ((?x17480 (* ?x17479 l_0_9_22)))
 (let ((?x17484 (- (+ (* (* (- 2.0) l_0_9_16) l_0_9_22) ?x17480) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x17496 (- (+ (- (+ ?x17484 ?x17486) (* (* 2.0 l_0_9_20) l_0_9_20)) ?x17492) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (let ((?x17507 (+ (- (+ (- (+ (- (+ ?x17496 ?x17497) ?x17499) ?x11246) ?x17502) ?x17465) ?x17505) ?x3191)))
 (= ?x17507 0.0)))))))))))))))))))))))))
(assert
 (let ((?x17559 (* l_0_9_51 l_0_9_51)))
 (let ((?x17557 (* l_0_9_50 l_0_9_50)))
 (let ((?x17555 (* l_0_9_49 l_0_9_49)))
 (let ((?x16826 (* 4.0 l_0_9_36)))
 (let ((?x16827 (* ?x16826 l_0_9_36)))
 (let ((?x17552 (* ?x16826 l_0_9_43)))
 (let ((?x16823 (* 4.0 l_0_9_35)))
 (let ((?x16824 (* ?x16823 l_0_9_35)))
 (let ((?x17549 (* ?x16823 l_0_9_42)))
 (let ((?x16820 (* 4.0 l_0_9_34)))
 (let ((?x16821 (* ?x16820 l_0_9_34)))
 (let ((?x17546 (* ?x16820 l_0_9_41)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17544 (* ?x16432 l_0_9_41)))
 (let ((?x16811 (* l_0_9_21 l_0_9_21)))
 (let ((?x16812 (* 4.0 ?x16811)))
 (let ((?x17491 (* 4.0 l_0_9_21)))
 (let ((?x17541 (* ?x17491 l_0_9_28)))
 (let ((?x16808 (* l_0_9_20 l_0_9_20)))
 (let ((?x16809 (* 4.0 ?x16808)))
 (let ((?x17485 (* 4.0 l_0_9_20)))
 (let ((?x17538 (* ?x17485 l_0_9_27)))
 (let ((?x16805 (* l_0_9_19 l_0_9_19)))
 (let ((?x16806 (* 4.0 ?x16805)))
 (let ((?x17479 (* 4.0 l_0_9_19)))
 (let ((?x17535 (* ?x17479 l_0_9_26)))
 (let ((?x17540 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_16) l_0_9_26) ?x17535) ?x16806) ?x17538) ?x16809)))
 (let ((?x17551 (- (- (- (- (+ (+ (+ ?x17540 ?x17541) ?x16812) ?x17544) ?x17546) ?x16821) ?x17549) ?x16824)))
 (= (- (- (- (- (- ?x17551 ?x17552) ?x16827) ?x17555) ?x17557) ?x17559) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10981 (* l_0_9_33 l_0_9_33)))
 (let ((?x10975 (* l_0_9_32 l_0_9_32)))
 (let ((?x17584 (+ (+ (- (* (- l_0_9_17) l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x10975) ?x10981)))
 (= ?x17584 0.0)))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17598 (* ?x16736 l_0_9_35)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17596 (* ?x16730 l_0_9_34)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17594 (* ?x16747 l_0_9_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x17594) ?x17596) ?x17598) 0.0))))))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17616 (* ?x16736 l_0_9_38)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17614 (* ?x16730 l_0_9_37)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17612 (* ?x16747 l_0_9_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x17612) ?x17614) ?x17616) 0.0))))))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17634 (* ?x16736 l_0_9_42)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17632 (* ?x16730 l_0_9_41)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17630 (* ?x16747 l_0_9_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_26) ?x17630) ?x17632) ?x17634) 0.0))))))))
(assert
 (let ((?x11208 (* l_0_9_36 l_0_9_36)))
 (let ((?x1735 (* l_0_9_35 l_0_9_35)))
 (let ((?x16845 (* l_0_9_34 l_0_9_34)))
 (let ((?x16811 (* l_0_9_21 l_0_9_21)))
 (let ((?x17651 (+ (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x16811) ?x16845)))
 (= (+ (+ ?x17651 ?x1735) ?x11208) 0.0)))))))
(assert
 (let ((?x17458 (* 2.0 l_0_9_36)))
 (let ((?x17674 (* ?x17458 l_0_9_39)))
 (let ((?x17455 (* 2.0 l_0_9_35)))
 (let ((?x17672 (* ?x17455 l_0_9_38)))
 (let ((?x17452 (* 2.0 l_0_9_34)))
 (let ((?x17670 (* ?x17452 l_0_9_37)))
 (let ((?x17494 (* 2.0 l_0_9_21)))
 (let ((?x17668 (* ?x17494 l_0_9_24)))
 (let ((?x17488 (* 2.0 l_0_9_20)))
 (let ((?x17666 (* ?x17488 l_0_9_23)))
 (let ((?x17673 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x17666) ?x17668) ?x17670) ?x17672)))
 (= (+ ?x17673 ?x17674) 0.0)))))))))))))
(assert
 (let ((?x17458 (* 2.0 l_0_9_36)))
 (let ((?x17687 (* ?x17458 l_0_9_43)))
 (let ((?x17455 (* 2.0 l_0_9_35)))
 (let ((?x17685 (* ?x17455 l_0_9_42)))
 (let ((?x17452 (* 2.0 l_0_9_34)))
 (let ((?x17683 (* ?x17452 l_0_9_41)))
 (let ((?x17494 (* 2.0 l_0_9_21)))
 (let ((?x3442 (* ?x17494 l_0_9_28)))
 (let ((?x17488 (* 2.0 l_0_9_20)))
 (let ((?x3437 (* ?x17488 l_0_9_27)))
 (let ((?x17686 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_26) ?x3437) ?x3442) ?x17683) ?x17685)))
 (= (+ ?x17686 ?x17687) 0.0)))))))))))))
(assert
 (let ((?x2112 (* l_0_9_40 l_0_9_40)))
 (let ((?x2109 (* l_0_9_39 l_0_9_39)))
 (let ((?x2108 (* l_0_9_38 l_0_9_38)))
 (let ((?x2066 (* l_0_9_37 l_0_9_37)))
 (let ((?x11208 (* l_0_9_36 l_0_9_36)))
 (let ((?x1735 (* l_0_9_35 l_0_9_35)))
 (let ((?x16845 (* l_0_9_34 l_0_9_34)))
 (let ((?x17008 (* l_0_9_25 l_0_9_25)))
 (let ((?x17005 (* l_0_9_24 l_0_9_24)))
 (let ((?x17002 (* l_0_9_23 l_0_9_23)))
 (let ((?x16999 (* l_0_9_22 l_0_9_22)))
 (let ((?x16811 (* l_0_9_21 l_0_9_21)))
 (let ((?x12057 (- (+ (+ (* l_0_9_19 l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x16811) ?x16999)))
 (let ((?x17710 (+ (- (- (- (- (- (- ?x12057 ?x17002) ?x17005) ?x17008) ?x16845) ?x1735) ?x11208) ?x2066)))
 (= (+ (+ (+ ?x17710 ?x2108) ?x2109) ?x2112) 0.0))))))))))))))))
(assert
 (let ((?x17722 (* 2.0 l_0_9_40)))
 (let ((?x17723 (* ?x17722 l_0_9_44)))
 (let ((?x12061 (* 2.0 l_0_9_39)))
 (let ((?x12058 (* ?x12061 l_0_9_43)))
 (let ((?x3445 (* 2.0 l_0_9_38)))
 (let ((?x12059 (* ?x3445 l_0_9_42)))
 (let ((?x3441 (* 2.0 l_0_9_37)))
 (let ((?x3404 (* ?x3441 l_0_9_41)))
 (let ((?x3402 (* 2.0 l_0_9_25)))
 (let ((?x3382 (* ?x3402 l_0_9_29)))
 (let ((?x3379 (* 2.0 l_0_9_24)))
 (let ((?x3384 (* ?x3379 l_0_9_28)))
 (let ((?x12090 (* 2.0 l_0_9_23)))
 (let ((?x3346 (* ?x12090 l_0_9_27)))
 (let ((?x12056 (+ (- (- (- (* (* (- 2.0) l_0_9_22) l_0_9_26) ?x3346) ?x3384) ?x3382) ?x3404)))
 (= (+ (+ (+ ?x12056 ?x12059) ?x12058) ?x17723) 0.0)))))))))))))))))
(assert
 (let ((?x2430 (* l_0_9_45 l_0_9_45)))
 (let ((?x11630 (* l_0_9_44 l_0_9_44)))
 (let ((?x2408 (* l_0_9_43 l_0_9_43)))
 (let ((?x2409 (* l_0_9_42 l_0_9_42)))
 (let ((?x11621 (* l_0_9_41 l_0_9_41)))
 (let ((?x17128 (* l_0_9_30 l_0_9_30)))
 (let ((?x17125 (* l_0_9_29 l_0_9_29)))
 (let ((?x17122 (* l_0_9_28 l_0_9_28)))
 (let ((?x3497 (- (- (- (* (- l_0_9_26) l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x17122) ?x17125)))
 (= (+ (+ (+ (+ (+ (- ?x3497 ?x17128) ?x11621) ?x2409) ?x2408) ?x11630) ?x2430) 0.0)))))))))))
(assert
 (let ((?x16826 (* 4.0 l_0_9_36)))
 (let ((?x17505 (* ?x16826 l_0_9_39)))
 (let ((?x16823 (* 4.0 l_0_9_35)))
 (let ((?x17502 (* ?x16823 l_0_9_38)))
 (let ((?x16820 (* 4.0 l_0_9_34)))
 (let ((?x17499 (* ?x16820 l_0_9_37)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17450 (* ?x16432 l_0_9_34)))
 (let ((?x17491 (* 4.0 l_0_9_21)))
 (let ((?x17492 (* ?x17491 l_0_9_24)))
 (let ((?x17485 (* 4.0 l_0_9_20)))
 (let ((?x17486 (* ?x17485 l_0_9_23)))
 (let ((?x17479 (* 4.0 l_0_9_19)))
 (let ((?x17480 (* ?x17479 l_0_9_22)))
 (let ((?x17762 (+ (- (- (- (* (* 2.0 l_0_9_16) l_0_9_19) ?x17480) ?x17486) ?x17492) (* 2.0 (* l_0_9_22 l_0_9_22)))))
 (let ((?x17766 (+ (+ ?x17762 (* 2.0 (* l_0_9_23 l_0_9_23))) (* 2.0 (* l_0_9_24 l_0_9_24)))))
 (let ((?x17771 (+ (+ (- (+ ?x17766 (* 2.0 (* l_0_9_25 l_0_9_25))) ?x17450) ?x17499) ?x17502)))
 (let ((?x17776 (- (- (+ ?x17771 ?x17505) (* (* 2.0 l_0_9_37) l_0_9_37)) (* (* 2.0 l_0_9_38) l_0_9_38))))
 (let ((?x17780 (- (- ?x17776 (* (* 2.0 l_0_9_39) l_0_9_39)) (* (* 2.0 l_0_9_40) l_0_9_40))))
 (= ?x17780 0.0)))))))))))))))))))))
(assert
 (let ((?x2112 (* l_0_9_40 l_0_9_40)))
 (let ((?x12190 (* 2.0 ?x2112)))
 (let ((?x2109 (* l_0_9_39 l_0_9_39)))
 (let ((?x2247 (* 2.0 ?x2109)))
 (let ((?x2108 (* l_0_9_38 l_0_9_38)))
 (let ((?x3572 (* 2.0 ?x2108)))
 (let ((?x2066 (* l_0_9_37 l_0_9_37)))
 (let ((?x11496 (* 2.0 ?x2066)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17497 (* ?x16432 l_0_9_37)))
 (let ((?x17807 (- (* (* 2.0 l_0_9_16) l_0_9_22) (* (* 2.0 l_0_9_22) l_0_9_22))))
 (let ((?x17811 (- (- ?x17807 (* (* 2.0 l_0_9_23) l_0_9_23)) (* (* 2.0 l_0_9_24) l_0_9_24))))
 (let ((?x17816 (+ (+ (- (- ?x17811 (* (* 2.0 l_0_9_25) l_0_9_25)) ?x17497) ?x11496) ?x3572)))
 (= (+ (+ ?x17816 ?x2247) ?x12190) 0.0)))))))))))))))
(assert
 (let ((?x17838 (* l_0_9_55 l_0_9_55)))
 (let ((?x17836 (* l_0_9_54 l_0_9_54)))
 (let ((?x17834 (* l_0_9_53 l_0_9_53)))
 (let ((?x17832 (* l_0_9_52 l_0_9_52)))
 (let ((?x17023 (* 4.0 l_0_9_40)))
 (let ((?x17024 (* ?x17023 l_0_9_40)))
 (let ((?x17829 (* ?x17023 l_0_9_44)))
 (let ((?x17020 (* 4.0 l_0_9_39)))
 (let ((?x17021 (* ?x17020 l_0_9_39)))
 (let ((?x17826 (* ?x17020 l_0_9_43)))
 (let ((?x17017 (* 4.0 l_0_9_38)))
 (let ((?x17018 (* ?x17017 l_0_9_38)))
 (let ((?x12213 (* ?x17017 l_0_9_42)))
 (let ((?x17014 (* 4.0 l_0_9_37)))
 (let ((?x17015 (* ?x17014 l_0_9_37)))
 (let ((?x12228 (* ?x17014 l_0_9_41)))
 (let ((?x16432 (* 2.0 l_0_9_31)))
 (let ((?x17544 (* ?x16432 l_0_9_41)))
 (let ((?x17008 (* l_0_9_25 l_0_9_25)))
 (let ((?x17009 (* 4.0 ?x17008)))
 (let ((?x12247 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x17005 (* l_0_9_24 l_0_9_24)))
 (let ((?x17006 (* 4.0 ?x17005)))
 (let ((?x12268 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x17002 (* l_0_9_23 l_0_9_23)))
 (let ((?x17003 (* 4.0 ?x17002)))
 (let ((?x3675 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x16999 (* l_0_9_22 l_0_9_22)))
 (let ((?x17000 (* 4.0 ?x16999)))
 (let ((?x12308 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x3666 (+ (- (+ (- (* (* 2.0 l_0_9_16) l_0_9_26) ?x12308) ?x17000) ?x3675) ?x17003)))
 (let ((?x12212 (- (+ (- (+ (- (+ (- ?x3666 ?x12268) ?x17006) ?x12247) ?x17009) ?x17544) ?x12228) ?x17015)))
 (let ((?x17833 (- (- (+ (- (+ (- (+ ?x12212 ?x12213) ?x17018) ?x17826) ?x17021) ?x17829) ?x17024) ?x17832)))
 (= (- (- (- ?x17833 ?x17834) ?x17836) ?x17838) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10981 (* l_0_9_33 l_0_9_33)))
 (let ((?x10975 (* l_0_9_32 l_0_9_32)))
 (let ((?x17872 (- (- (+ (* l_0_9_17 l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x10975) ?x10981)))
 (= ?x17872 0.0)))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17598 (* ?x16736 l_0_9_35)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17596 (* ?x16730 l_0_9_34)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17594 (* ?x16747 l_0_9_20)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_19) ?x17594) ?x17596) ?x17598) 0.0))))))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17616 (* ?x16736 l_0_9_38)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17614 (* ?x16730 l_0_9_37)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17612 (* ?x16747 l_0_9_23)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_22) ?x17612) ?x17614) ?x17616) 0.0))))))))
(assert
 (let ((?x16736 (* 2.0 l_0_9_33)))
 (let ((?x17634 (* ?x16736 l_0_9_42)))
 (let ((?x16730 (* 2.0 l_0_9_32)))
 (let ((?x17632 (* ?x16730 l_0_9_41)))
 (let ((?x16747 (* 2.0 l_0_9_18)))
 (let ((?x17630 (* ?x16747 l_0_9_27)))
 (= (- (- (+ (* (* 2.0 l_0_9_17) l_0_9_26) ?x17630) ?x17632) ?x17634) 0.0))))))))
(assert
 (let ((?x17458 (* 2.0 l_0_9_36)))
 (let ((?x17674 (* ?x17458 l_0_9_39)))
 (let ((?x17455 (* 2.0 l_0_9_35)))
 (let ((?x17672 (* ?x17455 l_0_9_38)))
 (let ((?x17452 (* 2.0 l_0_9_34)))
 (let ((?x17670 (* ?x17452 l_0_9_37)))
 (let ((?x17494 (* 2.0 l_0_9_21)))
 (let ((?x17668 (* ?x17494 l_0_9_24)))
 (let ((?x17488 (* 2.0 l_0_9_20)))
 (let ((?x17666 (* ?x17488 l_0_9_23)))
 (let ((?x3848 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_22) ?x17666) ?x17668) ?x17670) ?x17672)))
 (= (- ?x3848 ?x17674) 0.0)))))))))))))
(assert
 (let ((?x17458 (* 2.0 l_0_9_36)))
 (let ((?x17687 (* ?x17458 l_0_9_43)))
 (let ((?x17455 (* 2.0 l_0_9_35)))
 (let ((?x17685 (* ?x17455 l_0_9_42)))
 (let ((?x17452 (* 2.0 l_0_9_34)))
 (let ((?x17683 (* ?x17452 l_0_9_41)))
 (let ((?x17494 (* 2.0 l_0_9_21)))
 (let ((?x3442 (* ?x17494 l_0_9_28)))
 (let ((?x17488 (* 2.0 l_0_9_20)))
 (let ((?x3437 (* ?x17488 l_0_9_27)))
 (let ((?x3557 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_26) ?x3437) ?x3442) ?x17683) ?x17685)))
 (= (- ?x3557 ?x17687) 0.0)))))))))))))
(assert
 (let ((?x2112 (* l_0_9_40 l_0_9_40)))
 (let ((?x2109 (* l_0_9_39 l_0_9_39)))
 (let ((?x2108 (* l_0_9_38 l_0_9_38)))
 (let ((?x2066 (* l_0_9_37 l_0_9_37)))
 (let ((?x17008 (* l_0_9_25 l_0_9_25)))
 (let ((?x17005 (* l_0_9_24 l_0_9_24)))
 (let ((?x12511 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x17005) ?x17008)))
 (= (- (- (- (- ?x12511 ?x2066) ?x2108) ?x2109) ?x2112) 0.0)))))))))
(assert
 (let ((?x17722 (* 2.0 l_0_9_40)))
 (let ((?x17723 (* ?x17722 l_0_9_44)))
 (let ((?x12061 (* 2.0 l_0_9_39)))
 (let ((?x12058 (* ?x12061 l_0_9_43)))
 (let ((?x3445 (* 2.0 l_0_9_38)))
 (let ((?x12059 (* ?x3445 l_0_9_42)))
 (let ((?x3441 (* 2.0 l_0_9_37)))
 (let ((?x3404 (* ?x3441 l_0_9_41)))
 (let ((?x3402 (* 2.0 l_0_9_25)))
 (let ((?x3382 (* ?x3402 l_0_9_29)))
 (let ((?x3379 (* 2.0 l_0_9_24)))
 (let ((?x3384 (* ?x3379 l_0_9_28)))
 (let ((?x12090 (* 2.0 l_0_9_23)))
 (let ((?x3346 (* ?x12090 l_0_9_27)))
 (let ((?x3971 (- (+ (+ (+ (* (* 2.0 l_0_9_22) l_0_9_26) ?x3346) ?x3384) ?x3382) ?x3404)))
 (= (- (- (- ?x3971 ?x12059) ?x12058) ?x17723) 0.0)))))))))))))))))
(assert
 (let ((?x2430 (* l_0_9_45 l_0_9_45)))
 (let ((?x11630 (* l_0_9_44 l_0_9_44)))
 (let ((?x2408 (* l_0_9_43 l_0_9_43)))
 (let ((?x2409 (* l_0_9_42 l_0_9_42)))
 (let ((?x11621 (* l_0_9_41 l_0_9_41)))
 (let ((?x17128 (* l_0_9_30 l_0_9_30)))
 (let ((?x17125 (* l_0_9_29 l_0_9_29)))
 (let ((?x17122 (* l_0_9_28 l_0_9_28)))
 (let ((?x12505 (+ (+ (+ (* l_0_9_26 l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x17122) ?x17125)))
 (= (- (- (- (- (- (+ ?x12505 ?x17128) ?x11621) ?x2409) ?x2408) ?x11630) ?x2430) 0.0)))))))))))
(assert
 (let ((?x17023 (* 4.0 l_0_9_40)))
 (let ((?x17829 (* ?x17023 l_0_9_44)))
 (let ((?x17020 (* 4.0 l_0_9_39)))
 (let ((?x17826 (* ?x17020 l_0_9_43)))
 (let ((?x17017 (* 4.0 l_0_9_38)))
 (let ((?x12213 (* ?x17017 l_0_9_42)))
 (let ((?x17014 (* 4.0 l_0_9_37)))
 (let ((?x12228 (* ?x17014 l_0_9_41)))
 (let ((?x16826 (* 4.0 l_0_9_36)))
 (let ((?x17552 (* ?x16826 l_0_9_43)))
 (let ((?x16876 (* 8.0 l_0_9_36)))
 (let ((?x16877 (* ?x16876 l_0_9_39)))
 (let ((?x16823 (* 4.0 l_0_9_35)))
 (let ((?x17549 (* ?x16823 l_0_9_42)))
 (let ((?x16873 (* 8.0 l_0_9_35)))
 (let ((?x16874 (* ?x16873 l_0_9_38)))
 (let ((?x16820 (* 4.0 l_0_9_34)))
 (let ((?x17546 (* ?x16820 l_0_9_41)))
 (let ((?x16870 (* 8.0 l_0_9_34)))
 (let ((?x16871 (* ?x16870 l_0_9_37)))
 (let ((?x12247 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x12268 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x3675 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x12308 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x17491 (* 4.0 l_0_9_21)))
 (let ((?x17541 (* ?x17491 l_0_9_28)))
 (let ((?x16861 (* 8.0 l_0_9_21)))
 (let ((?x16862 (* ?x16861 l_0_9_24)))
 (let ((?x17485 (* 4.0 l_0_9_20)))
 (let ((?x17538 (* ?x17485 l_0_9_27)))
 (let ((?x16858 (* 8.0 l_0_9_20)))
 (let ((?x16859 (* ?x16858 l_0_9_23)))
 (let ((?x17479 (* 4.0 l_0_9_19)))
 (let ((?x17535 (* ?x17479 l_0_9_26)))
 (let ((?x16855 (* 8.0 l_0_9_19)))
 (let ((?x16856 (* ?x16855 l_0_9_22)))
 (let ((?x17939 (+ (+ (- (+ (- (+ (- ?x16856 ?x17535) ?x16859) ?x17538) ?x16862) ?x17541) ?x12308) ?x3675)))
 (let ((?x17946 (- (+ (- (+ (- (+ (+ ?x17939 ?x12268) ?x12247) ?x16871) ?x17546) ?x16874) ?x17549) ?x16877)))
 (let ((?x17954 (- (- (- (- (- (+ ?x17946 ?x17552) ?x12228) ?x12213) ?x17826) ?x17829) (* (* 2.0 l_0_9_49) l_0_9_52))))
 (let ((?x17960 (- (- ?x17954 (* (* 2.0 l_0_9_50) l_0_9_53)) (* (* 2.0 l_0_9_51) l_0_9_54))))
 (= ?x17960 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16876 (* 8.0 l_0_9_36)))
 (let ((?x16958 (* ?x16876 l_0_9_43)))
 (let ((?x16873 (* 8.0 l_0_9_35)))
 (let ((?x16956 (* ?x16873 l_0_9_42)))
 (let ((?x16870 (* 8.0 l_0_9_34)))
 (let ((?x16954 (* ?x16870 l_0_9_41)))
 (let ((?x17128 (* l_0_9_30 l_0_9_30)))
 (let ((?x17976 (* 2.0 ?x17128)))
 (let ((?x17125 (* l_0_9_29 l_0_9_29)))
 (let ((?x4166 (* 2.0 ?x17125)))
 (let ((?x17122 (* l_0_9_28 l_0_9_28)))
 (let ((?x4200 (* 2.0 ?x17122)))
 (let ((?x17119 (* l_0_9_27 l_0_9_27)))
 (let ((?x12568 (* 2.0 ?x17119)))
 (let ((?x17116 (* l_0_9_26 l_0_9_26)))
 (let ((?x4206 (* 2.0 ?x17116)))
 (let ((?x16861 (* 8.0 l_0_9_21)))
 (let ((?x16946 (* ?x16861 l_0_9_28)))
 (let ((?x16858 (* 8.0 l_0_9_20)))
 (let ((?x16944 (* ?x16858 l_0_9_27)))
 (let ((?x16855 (* 8.0 l_0_9_19)))
 (let ((?x16942 (* ?x16855 l_0_9_26)))
 (let ((?x17977 (+ (+ (+ (+ (+ (+ (+ ?x16942 ?x16944) ?x16946) ?x4206) ?x12568) ?x4200) ?x4166) ?x17976)))
 (let ((?x17983 (- (- (- (- ?x17977 ?x16954) ?x16956) ?x16958) (* (* 2.0 l_0_9_41) l_0_9_41))))
 (let ((?x17989 (- (- ?x17983 (* (* 2.0 l_0_9_42) l_0_9_42)) (* (* 2.0 l_0_9_43) l_0_9_43))))
 (let ((?x17995 (- (- ?x17989 (* (* 2.0 l_0_9_44) l_0_9_44)) (* (* 2.0 l_0_9_45) l_0_9_45))))
 (let ((?x17999 (- (- ?x17995 (* (* 2.0 l_0_9_49) l_0_9_56)) (* (* 2.0 l_0_9_50) l_0_9_57))))
 (= (- ?x17999 (* (* 2.0 l_0_9_51) l_0_9_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2430 (* l_0_9_45 l_0_9_45)))
 (let ((?x12582 (* 2.0 ?x2430)))
 (let ((?x11630 (* l_0_9_44 l_0_9_44)))
 (let ((?x12579 (* 2.0 ?x11630)))
 (let ((?x2408 (* l_0_9_43 l_0_9_43)))
 (let ((?x18011 (* 2.0 ?x2408)))
 (let ((?x2409 (* l_0_9_42 l_0_9_42)))
 (let ((?x4208 (* 2.0 ?x2409)))
 (let ((?x11621 (* l_0_9_41 l_0_9_41)))
 (let ((?x18004 (* 2.0 ?x11621)))
 (let ((?x17073 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x17070 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x17067 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x17064 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x17057 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x17054 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x17051 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x17048 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x4261 (- (+ (+ (+ ?x17048 ?x17051) ?x17054) ?x17057) (* (* 2.0 l_0_9_26) l_0_9_26))))
 (let ((?x18024 (- (- ?x4261 (* (* 2.0 l_0_9_27) l_0_9_27)) (* (* 2.0 l_0_9_28) l_0_9_28))))
 (let ((?x18030 (- (- ?x18024 (* (* 2.0 l_0_9_29) l_0_9_29)) (* (* 2.0 l_0_9_30) l_0_9_30))))
 (let ((?x18037 (+ (+ (+ (- (- (- (- ?x18030 ?x17064) ?x17067) ?x17070) ?x17073) ?x18004) ?x4208) ?x18011)))
 (let ((?x18045 (- (- (+ (+ ?x18037 ?x12579) ?x12582) (* (* 2.0 l_0_9_52) l_0_9_56)) (* (* 2.0 l_0_9_53) l_0_9_57))))
 (let ((?x18051 (- (- ?x18045 (* (* 2.0 l_0_9_54) l_0_9_58)) (* (* 2.0 l_0_9_55) l_0_9_59))))
 (= ?x18051 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18082 (* l_0_9_60 l_0_9_60)))
 (let ((?x18080 (* l_0_9_59 l_0_9_59)))
 (let ((?x18078 (* l_0_9_58 l_0_9_58)))
 (let ((?x18076 (* l_0_9_57 l_0_9_57)))
 (let ((?x18074 (* l_0_9_56 l_0_9_56)))
 (let ((?x17146 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x17143 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x17140 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x17137 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x17134 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x17128 (* l_0_9_30 l_0_9_30)))
 (let ((?x17129 (* 4.0 ?x17128)))
 (let ((?x17125 (* l_0_9_29 l_0_9_29)))
 (let ((?x17126 (* 4.0 ?x17125)))
 (let ((?x17122 (* l_0_9_28 l_0_9_28)))
 (let ((?x17123 (* 4.0 ?x17122)))
 (let ((?x17119 (* l_0_9_27 l_0_9_27)))
 (let ((?x17120 (* 4.0 ?x17119)))
 (let ((?x17116 (* l_0_9_26 l_0_9_26)))
 (let ((?x17117 (* 4.0 ?x17116)))
 (let ((?x18071 (- (- (- (+ (+ (+ (+ ?x17117 ?x17120) ?x17123) ?x17126) ?x17129) ?x17134) ?x17137) ?x17140)))
 (let ((?x18083 (- (- (- (- (- (- (- ?x18071 ?x17143) ?x17146) ?x18074) ?x18076) ?x18078) ?x18080) ?x18082)))
 (= ?x18083 0.0))))))))))))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18129 (* ?x18128 l_0_10_31)))
 (let ((?x18125 (* l_0_10_16 l_0_10_16)))
 (let ((?x18126 (* 4.0 ?x18125)))
 (let ((?x18127 (+ (- (* (* 2.0 l_0_10_1) l_0_10_2) (* l_0_10_1 l_0_10_1)) ?x18126)))
 (let ((?x18136 (- (- (- ?x18127 ?x18129) (* (* 2.0 l_0_10_46) l_0_10_47)) (* (* 2.0 l_0_10_61) l_0_10_62))))
 (= (+ ?x18136 1.0) 0.0))))))))
(assert
 (let ((?x18159 (* l_0_10_61 l_0_10_61)))
 (let ((?x18158 (- (* 1.0 (* l_0_10_1 l_0_10_1)) (* (* 1.0 l_0_10_46) l_0_10_46))))
 (= (- (- ?x18158 ?x18159) 1.0) 0.0))))
(assert
 (let ((?x18191 (* l_0_10_63 l_0_10_63)))
 (let ((?x18189 (* l_0_10_62 l_0_10_62)))
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18181 (* ?x18180 l_0_10_32)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x18172 (* ?x18171 l_0_10_17)))
 (let ((?x18176 (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) ?x18172) (* 1.0 (* l_0_10_2 l_0_10_2)))))
 (let ((?x18185 (- (- (+ ?x18176 (* 1.0 (* l_0_10_3 l_0_10_3))) ?x18181) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (= (- (- (- ?x18185 (* (* 1.0 l_0_10_48) l_0_10_48)) ?x18189) ?x18191) 0.0))))))))))
(assert
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18228 (* ?x18180 l_0_10_34)))
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18226 (* ?x18128 l_0_10_32)))
 (let ((?x18223 (* 2.0 l_0_10_3)))
 (let ((?x18224 (* ?x18223 l_0_10_5)))
 (let ((?x18220 (* 2.0 l_0_10_2)))
 (let ((?x18221 (* ?x18220 l_0_10_4)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x18218 (* ?x18171 l_0_10_19)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x18216 (* ?x18215 l_0_10_17)))
 (let ((?x18225 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x18216) ?x18218) ?x18221) ?x18224)))
 (let ((?x18235 (- (- (- (- ?x18225 ?x18226) ?x18228) (* (* 2.0 l_0_10_47) l_0_10_49)) (* (* 2.0 l_0_10_48) l_0_10_50))))
 (let ((?x18241 (- (- ?x18235 (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 2.0 l_0_10_63) l_0_10_65))))
 (= ?x18241 0.0)))))))))))))))))
(assert
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18289 (* ?x18180 l_0_10_37)))
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18226 (* ?x18128 l_0_10_32)))
 (let ((?x18223 (* 2.0 l_0_10_3)))
 (let ((?x18286 (* ?x18223 l_0_10_8)))
 (let ((?x18220 (* 2.0 l_0_10_2)))
 (let ((?x18284 (* ?x18220 l_0_10_7)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x18282 (* ?x18171 l_0_10_22)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x18216 (* ?x18215 l_0_10_17)))
 (let ((?x18287 (+ (+ (+ (- (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x18216) ?x18282) ?x18284) ?x18286)))
 (let ((?x18294 (- (- (- (+ ?x18287 ?x18226) ?x18289) (* (* 2.0 l_0_10_47) l_0_10_52)) (* (* 2.0 l_0_10_48) l_0_10_53))))
 (let ((?x18298 (- (- ?x18294 (* (* 2.0 l_0_10_62) l_0_10_67)) (* (* 2.0 l_0_10_63) l_0_10_68))))
 (= ?x18298 0.0)))))))))))))))))
(assert
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18318 (* ?x18180 l_0_10_41)))
 (let ((?x18181 (* ?x18180 l_0_10_32)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x2840 (* ?x18171 l_0_10_26)))
 (let ((?x18172 (* ?x18171 l_0_10_17)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x4685 (* ?x4689 l_0_10_3)))
 (let ((?x4696 (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_11) l_0_10_2))))
 (let ((?x18321 (- (- (- (+ (+ (+ ?x4696 ?x4685) ?x18172) ?x2840) ?x18181) ?x18318) (* (* 2.0 l_0_10_47) l_0_10_56))))
 (let ((?x18325 (- (- ?x18321 (* (* 2.0 l_0_10_48) l_0_10_57)) (* (* 2.0 l_0_10_62) l_0_10_71))))
 (= (- ?x18325 (* (* 2.0 l_0_10_63) l_0_10_72)) 0.0)))))))))))))
(assert
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18366 (* ?x18365 l_0_10_33)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18363 (* ?x18362 l_0_10_32)))
 (let ((?x18177 (* l_0_10_3 l_0_10_3)))
 (let ((?x18174 (* l_0_10_2 l_0_10_2)))
 (let ((?x18357 (* l_0_10_18 l_0_10_18)))
 (let ((?x18358 (* 4.0 ?x18357)))
 (let ((?x18355 (* l_0_10_17 l_0_10_17)))
 (let ((?x18356 (* 4.0 ?x18355)))
 (= (- (- (- (- (+ ?x18356 ?x18358) ?x18174) ?x18177) ?x18363) ?x18366) 0.0))))))))))))
(assert
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18390 (* ?x18389 l_0_10_35)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18384 (* ?x18383 l_0_10_34)))
 (let ((?x18223 (* 2.0 l_0_10_3)))
 (let ((?x18224 (* ?x18223 l_0_10_5)))
 (let ((?x18220 (* 2.0 l_0_10_2)))
 (let ((?x18221 (* ?x18220 l_0_10_4)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18377 (* ?x18376 l_0_10_20)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18373 (* ?x18372 l_0_10_19)))
 (let ((?x18380 (+ (+ (+ ?x18373 (* 2.0 (* l_0_10_17 l_0_10_17))) ?x18377) (* 2.0 (* l_0_10_18 l_0_10_18)))))
 (let ((?x18388 (- (- (- (- ?x18380 ?x18221) ?x18224) ?x18384) (* (* 2.0 l_0_10_32) l_0_10_32))))
 (= (- (- ?x18388 ?x18390) (* (* 2.0 l_0_10_33) l_0_10_33)) 0.0))))))))))))))))
(assert
 (let ((?x4921 (* l_0_10_33 l_0_10_33)))
 (let ((?x5011 (* 2.0 ?x4921)))
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18433 (* ?x18389 l_0_10_38)))
 (let ((?x12950 (* l_0_10_32 l_0_10_32)))
 (let ((?x4612 (* 2.0 ?x12950)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18430 (* ?x18383 l_0_10_37)))
 (let ((?x18223 (* 2.0 l_0_10_3)))
 (let ((?x18286 (* ?x18223 l_0_10_8)))
 (let ((?x18220 (* 2.0 l_0_10_2)))
 (let ((?x18284 (* ?x18220 l_0_10_7)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18423 (* ?x18376 l_0_10_23)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18419 (* ?x18372 l_0_10_22)))
 (let ((?x18427 (- (+ (- ?x18419 (* (* 2.0 l_0_10_17) l_0_10_17)) ?x18423) (* (* 2.0 l_0_10_18) l_0_10_18))))
 (= (+ (- (+ (- (- (- ?x18427 ?x18284) ?x18286) ?x18430) ?x4612) ?x18433) ?x5011) 0.0)))))))))))))))))))
(assert
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18366 (* ?x18365 l_0_10_33)))
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18458 (* ?x18389 l_0_10_42)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18363 (* ?x18362 l_0_10_32)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18455 (* ?x18383 l_0_10_41)))
 (let ((?x18357 (* l_0_10_18 l_0_10_18)))
 (let ((?x18358 (* 4.0 ?x18357)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18452 (* ?x18376 l_0_10_27)))
 (let ((?x18355 (* l_0_10_17 l_0_10_17)))
 (let ((?x18356 (* 4.0 ?x18355)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18449 (* ?x18372 l_0_10_26)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x4685 (* ?x4689 l_0_10_3)))
 (let ((?x18453 (+ (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x4685) ?x18449) ?x18356) ?x18452)))
 (= (- (- (- (- (+ ?x18453 ?x18358) ?x18455) ?x18363) ?x18458) ?x18366) 0.0)))))))))))))))))))))
(assert
 (let ((?x18513 (* l_0_10_6 l_0_10_6)))
 (let ((?x18511 (* l_0_10_5 l_0_10_5)))
 (let ((?x18509 (* l_0_10_4 l_0_10_4)))
 (let ((?x18506 (* 4.0 l_0_10_36)))
 (let ((?x18507 (* ?x18506 l_0_10_36)))
 (let ((?x18503 (* 4.0 l_0_10_35)))
 (let ((?x18504 (* ?x18503 l_0_10_35)))
 (let ((?x18500 (* 4.0 l_0_10_34)))
 (let ((?x18501 (* ?x18500 l_0_10_34)))
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18498 (* ?x18365 l_0_10_35)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18496 (* ?x18362 l_0_10_34)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x18494 (* ?x18493 l_0_10_32)))
 (let ((?x18490 (* l_0_10_21 l_0_10_21)))
 (let ((?x18491 (* 4.0 ?x18490)))
 (let ((?x18487 (* l_0_10_20 l_0_10_20)))
 (let ((?x18488 (* 4.0 ?x18487)))
 (let ((?x18484 (* l_0_10_19 l_0_10_19)))
 (let ((?x18485 (* 4.0 ?x18484)))
 (let ((?x18481 (* 4.0 l_0_10_18)))
 (let ((?x18482 (* ?x18481 l_0_10_20)))
 (let ((?x18480 (+ (* (* (- 2.0) l_0_10_16) l_0_10_17) (* (* 4.0 l_0_10_17) l_0_10_19))))
 (let ((?x18499 (- (- (+ (+ (+ (+ (+ ?x18480 ?x18482) ?x18485) ?x18488) ?x18491) ?x18494) ?x18496) ?x18498)))
 (= (- (- (- (- (- (- ?x18499 ?x18501) ?x18504) ?x18507) ?x18509) ?x18511) ?x18513) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x18576 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18573 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18570 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18566 (* 8.0 l_0_10_36)))
 (let ((?x18567 (* ?x18566 l_0_10_39)))
 (let ((?x18563 (* 8.0 l_0_10_35)))
 (let ((?x18564 (* ?x18563 l_0_10_38)))
 (let ((?x18560 (* 8.0 l_0_10_34)))
 (let ((?x18561 (* ?x18560 l_0_10_37)))
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18558 (* ?x18365 l_0_10_38)))
 (let ((?x18498 (* ?x18365 l_0_10_35)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18555 (* ?x18362 l_0_10_37)))
 (let ((?x18496 (* ?x18362 l_0_10_34)))
 (let ((?x18551 (* 8.0 l_0_10_21)))
 (let ((?x18552 (* ?x18551 l_0_10_24)))
 (let ((?x18548 (* 8.0 l_0_10_20)))
 (let ((?x18549 (* ?x18548 l_0_10_23)))
 (let ((?x18545 (* 8.0 l_0_10_19)))
 (let ((?x18546 (* ?x18545 l_0_10_22)))
 (let ((?x18481 (* 4.0 l_0_10_18)))
 (let ((?x18543 (* ?x18481 l_0_10_23)))
 (let ((?x18482 (* ?x18481 l_0_10_20)))
 (let ((?x18478 (* 4.0 l_0_10_17)))
 (let ((?x18540 (* ?x18478 l_0_10_22)))
 (let ((?x18547 (+ (+ (- (+ (* (* (- 4.0) l_0_10_17) l_0_10_19) ?x18540) ?x18482) ?x18543) ?x18546)))
 (let ((?x18562 (- (- (+ (- (+ (+ (+ ?x18547 ?x18549) ?x18552) ?x18496) ?x18555) ?x18498) ?x18558) ?x18561)))
 (= (- (- (- (- (- ?x18562 ?x18564) ?x18567) ?x18570) ?x18573) ?x18576) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x18566 (* 8.0 l_0_10_36)))
 (let ((?x18634 (* ?x18566 l_0_10_43)))
 (let ((?x18563 (* 8.0 l_0_10_35)))
 (let ((?x18632 (* ?x18563 l_0_10_42)))
 (let ((?x18560 (* 8.0 l_0_10_34)))
 (let ((?x18630 (* ?x18560 l_0_10_41)))
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18628 (* ?x18365 l_0_10_42)))
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18390 (* ?x18389 l_0_10_35)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18625 (* ?x18362 l_0_10_41)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18384 (* ?x18383 l_0_10_34)))
 (let ((?x18551 (* 8.0 l_0_10_21)))
 (let ((?x18622 (* ?x18551 l_0_10_28)))
 (let ((?x18548 (* 8.0 l_0_10_20)))
 (let ((?x18620 (* ?x18548 l_0_10_27)))
 (let ((?x18545 (* 8.0 l_0_10_19)))
 (let ((?x18618 (* ?x18545 l_0_10_26)))
 (let ((?x18481 (* 4.0 l_0_10_18)))
 (let ((?x18616 (* ?x18481 l_0_10_27)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18377 (* ?x18376 l_0_10_20)))
 (let ((?x18478 (* 4.0 l_0_10_17)))
 (let ((?x18613 (* ?x18478 l_0_10_26)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18373 (* ?x18372 l_0_10_19)))
 (let ((?x18609 (* 2.0 l_0_10_13)))
 (let ((?x18610 (* ?x18609 l_0_10_6)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x18607 (* ?x4689 l_0_10_5)))
 (let ((?x18614 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x18607) ?x18610) ?x18373) ?x18613)))
 (let ((?x18626 (- (- (+ (+ (+ (+ (+ ?x18614 ?x18377) ?x18616) ?x18618) ?x18620) ?x18622) ?x18384) ?x18625)))
 (= (- (- (- (- (- ?x18626 ?x18390) ?x18628) ?x18630) ?x18632) ?x18634) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18705 (* l_0_10_9 l_0_10_9)))
 (let ((?x18703 (* l_0_10_8 l_0_10_8)))
 (let ((?x18701 (* l_0_10_7 l_0_10_7)))
 (let ((?x18698 (* 4.0 l_0_10_40)))
 (let ((?x18699 (* ?x18698 l_0_10_40)))
 (let ((?x18695 (* 4.0 l_0_10_39)))
 (let ((?x18696 (* ?x18695 l_0_10_39)))
 (let ((?x18692 (* 4.0 l_0_10_38)))
 (let ((?x18693 (* ?x18692 l_0_10_38)))
 (let ((?x18689 (* 4.0 l_0_10_37)))
 (let ((?x18690 (* ?x18689 l_0_10_37)))
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18558 (* ?x18365 l_0_10_38)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18555 (* ?x18362 l_0_10_37)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x18494 (* ?x18493 l_0_10_32)))
 (let ((?x18683 (* l_0_10_25 l_0_10_25)))
 (let ((?x18684 (* 4.0 ?x18683)))
 (let ((?x18680 (* l_0_10_24 l_0_10_24)))
 (let ((?x18681 (* 4.0 ?x18680)))
 (let ((?x18677 (* l_0_10_23 l_0_10_23)))
 (let ((?x18678 (* 4.0 ?x18677)))
 (let ((?x18674 (* l_0_10_22 l_0_10_22)))
 (let ((?x18675 (* 4.0 ?x18674)))
 (let ((?x18481 (* 4.0 l_0_10_18)))
 (let ((?x18543 (* ?x18481 l_0_10_23)))
 (let ((?x18478 (* 4.0 l_0_10_17)))
 (let ((?x18540 (* ?x18478 l_0_10_22)))
 (let ((?x18671 (+ (* (- l_0_10_10) l_0_10_10) (* (* 2.0 l_0_10_16) l_0_10_17))))
 (let ((?x18686 (- (+ (+ (+ (+ (- (- ?x18671 ?x18540) ?x18543) ?x18675) ?x18678) ?x18681) ?x18684) ?x18494)))
 (let ((?x18702 (- (- (- (- (- (+ (+ ?x18686 ?x18555) ?x18558) ?x18690) ?x18693) ?x18696) ?x18699) ?x18701)))
 (= (- (- ?x18702 ?x18703) ?x18705) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18755 (* (* 8.0 l_0_10_40) l_0_10_44)))
 (let ((?x18752 (* (* 8.0 l_0_10_39) l_0_10_43)))
 (let ((?x18749 (* (* 8.0 l_0_10_38) l_0_10_42)))
 (let ((?x18746 (* (* 8.0 l_0_10_37) l_0_10_41)))
 (let ((?x18365 (* 4.0 l_0_10_33)))
 (let ((?x18628 (* ?x18365 l_0_10_42)))
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18433 (* ?x18389 l_0_10_38)))
 (let ((?x18362 (* 4.0 l_0_10_32)))
 (let ((?x18625 (* ?x18362 l_0_10_41)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18430 (* ?x18383 l_0_10_37)))
 (let ((?x18739 (* (* 8.0 l_0_10_25) l_0_10_29)))
 (let ((?x18736 (* (* 8.0 l_0_10_24) l_0_10_28)))
 (let ((?x18733 (* (* 8.0 l_0_10_23) l_0_10_27)))
 (let ((?x18730 (* (* 8.0 l_0_10_22) l_0_10_26)))
 (let ((?x18481 (* 4.0 l_0_10_18)))
 (let ((?x18616 (* ?x18481 l_0_10_27)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18423 (* ?x18376 l_0_10_23)))
 (let ((?x18478 (* 4.0 l_0_10_17)))
 (let ((?x18613 (* ?x18478 l_0_10_26)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18419 (* ?x18372 l_0_10_22)))
 (let ((?x18609 (* 2.0 l_0_10_13)))
 (let ((?x18723 (* ?x18609 l_0_10_9)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x18721 (* ?x4689 l_0_10_8)))
 (let ((?x12893 (* 2.0 l_0_10_11)))
 (let ((?x18719 (* ?x12893 l_0_10_7)))
 (let ((?x18725 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x18719) ?x18721) ?x18723) ?x18419)))
 (let ((?x18740 (+ (+ (+ (+ (- (+ (- ?x18725 ?x18613) ?x18423) ?x18616) ?x18730) ?x18733) ?x18736) ?x18739)))
 (let ((?x18753 (- (- (- (+ (- (+ (- ?x18740 ?x18430) ?x18625) ?x18433) ?x18628) ?x18746) ?x18749) ?x18752)))
 (= (- ?x18753 ?x18755) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18822 (* (* 4.0 l_0_10_45) l_0_10_45)))
 (let ((?x18819 (* (* 4.0 l_0_10_44) l_0_10_44)))
 (let ((?x18816 (* (* 4.0 l_0_10_43) l_0_10_43)))
 (let ((?x18813 (* (* 4.0 l_0_10_42) l_0_10_42)))
 (let ((?x18810 (* (* 4.0 l_0_10_41) l_0_10_41)))
 (let ((?x18389 (* 8.0 l_0_10_33)))
 (let ((?x18458 (* ?x18389 l_0_10_42)))
 (let ((?x18383 (* 8.0 l_0_10_32)))
 (let ((?x18455 (* ?x18383 l_0_10_41)))
 (let ((?x18804 (* l_0_10_30 l_0_10_30)))
 (let ((?x18805 (* 4.0 ?x18804)))
 (let ((?x18801 (* l_0_10_29 l_0_10_29)))
 (let ((?x18802 (* 4.0 ?x18801)))
 (let ((?x18798 (* l_0_10_28 l_0_10_28)))
 (let ((?x18799 (* 4.0 ?x18798)))
 (let ((?x18795 (* l_0_10_27 l_0_10_27)))
 (let ((?x18796 (* 4.0 ?x18795)))
 (let ((?x18792 (* l_0_10_26 l_0_10_26)))
 (let ((?x18793 (* 4.0 ?x18792)))
 (let ((?x18376 (* 8.0 l_0_10_18)))
 (let ((?x18452 (* ?x18376 l_0_10_27)))
 (let ((?x18372 (* 8.0 l_0_10_17)))
 (let ((?x18449 (* ?x18372 l_0_10_26)))
 (let ((?x18788 (* l_0_10_15 l_0_10_15)))
 (let ((?x18786 (* l_0_10_14 l_0_10_14)))
 (let ((?x18784 (* l_0_10_13 l_0_10_13)))
 (let ((?x18785 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x18784)))
 (let ((?x18800 (+ (+ (+ (+ (+ (- (- ?x18785 ?x18786) ?x18788) ?x18449) ?x18452) ?x18793) ?x18796) ?x18799)))
 (let ((?x18817 (- (- (- (- (- (+ (+ ?x18800 ?x18802) ?x18805) ?x18455) ?x18458) ?x18810) ?x18813) ?x18816)))
 (= (- (- ?x18817 ?x18819) ?x18822) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x18125 (* l_0_10_16 l_0_10_16)))
 (let ((?x5467 (* 2.0 ?x18125)))
 (let ((?x13514 (- (+ (* (* 2.0 l_0_10_1) l_0_10_4) ?x5467) (* (* 2.0 l_0_10_31) l_0_10_31))))
 (let ((?x18845 (- (- ?x13514 (* (* 2.0 l_0_10_46) l_0_10_49)) (* (* 2.0 l_0_10_61) l_0_10_64))))
 (= ?x18845 0.0))))))
(assert
 (let ((?x18145 (* l_0_10_31 l_0_10_31)))
 (let ((?x13542 (* 2.0 ?x18145)))
 (let ((?x18851 (- (* (* 2.0 l_0_10_1) l_0_10_7) (* (* 2.0 l_0_10_16) l_0_10_16))))
 (let ((?x18856 (- (- (+ ?x18851 ?x13542) (* (* 2.0 l_0_10_46) l_0_10_52)) (* (* 2.0 l_0_10_61) l_0_10_67))))
 (= ?x18856 0.0))))))
(assert
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18129 (* ?x18128 l_0_10_31)))
 (let ((?x18125 (* l_0_10_16 l_0_10_16)))
 (let ((?x18126 (* 4.0 ?x18125)))
 (let ((?x18871 (- (- (+ (* (* 2.0 l_0_10_1) l_0_10_11) ?x18126) ?x18129) (* (* 2.0 l_0_10_46) l_0_10_56))))
 (= (- ?x18871 (* (* 2.0 l_0_10_61) l_0_10_71)) 0.0)))))))
(assert
 (let ((?x18906 (* l_0_10_66 l_0_10_66)))
 (let ((?x18904 (* l_0_10_65 l_0_10_65)))
 (let ((?x18902 (* l_0_10_64 l_0_10_64)))
 (let ((?x18145 (* l_0_10_31 l_0_10_31)))
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18884 (* ?x18128 l_0_10_34)))
 (let ((?x18885 (- (- (* (* 4.0 l_0_10_16) l_0_10_19) (* l_0_10_16 l_0_10_16)) ?x18884)))
 (let ((?x18891 (- (+ (+ ?x18885 ?x18145) (* 1.0 (* l_0_10_4 l_0_10_4))) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x18896 (- (+ ?x18891 (* 1.0 (* l_0_10_5 l_0_10_5))) (* (* 1.0 l_0_10_50) l_0_10_50))))
 (let ((?x18901 (+ (- ?x18896 (* (* 1.0 l_0_10_51) l_0_10_51)) (* 1.0 (* l_0_10_6 l_0_10_6)))))
 (= (- (- (- ?x18901 ?x18902) ?x18904) ?x18906) 0.0))))))))))))
(assert
 (let ((?x18576 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x18573 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x18570 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18932 (* ?x18128 l_0_10_37)))
 (let ((?x18884 (* ?x18128 l_0_10_34)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x5688 (* ?x18215 l_0_10_22)))
 (let ((?x18934 (+ (- (+ (+ (* (* (- 4.0) l_0_10_16) l_0_10_19) ?x5688) ?x18884) ?x18932) ?x18570)))
 (let ((?x18941 (- (+ (- ?x18934 (* (* 2.0 l_0_10_49) l_0_10_52)) ?x18573) (* (* 2.0 l_0_10_50) l_0_10_53))))
 (let ((?x18948 (- (+ (- ?x18941 (* (* 2.0 l_0_10_51) l_0_10_54)) ?x18576) (* (* 2.0 l_0_10_64) l_0_10_67))))
 (let ((?x18954 (- (- ?x18948 (* (* 2.0 l_0_10_65) l_0_10_68)) (* (* 2.0 l_0_10_66) l_0_10_69))))
 (= ?x18954 0.0))))))))))))))
(assert
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18993 (* ?x18128 l_0_10_41)))
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18228 (* ?x18180 l_0_10_34)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x18990 (* ?x18215 l_0_10_26)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x18218 (* ?x18171 l_0_10_19)))
 (let ((?x18609 (* 2.0 l_0_10_13)))
 (let ((?x18610 (* ?x18609 l_0_10_6)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x18607 (* ?x4689 l_0_10_5)))
 (let ((?x18991 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x18607) ?x18610) ?x18218) ?x18990)))
 (let ((?x18998 (- (- (- (- ?x18991 ?x18228) ?x18993) (* (* 2.0 l_0_10_49) l_0_10_56)) (* (* 2.0 l_0_10_50) l_0_10_57))))
 (let ((?x19002 (- (- ?x18998 (* (* 2.0 l_0_10_51) l_0_10_58)) (* (* 2.0 l_0_10_64) l_0_10_71))))
 (let ((?x19006 (- (- ?x19002 (* (* 2.0 l_0_10_65) l_0_10_72)) (* (* 2.0 l_0_10_66) l_0_10_73))))
 (= ?x19006 0.0))))))))))))))))))
(assert
 (let ((?x19043 (* l_0_10_70 l_0_10_70)))
 (let ((?x19039 (* l_0_10_69 l_0_10_69)))
 (let ((?x19037 (* l_0_10_68 l_0_10_68)))
 (let ((?x19035 (* l_0_10_67 l_0_10_67)))
 (let ((?x18145 (* l_0_10_31 l_0_10_31)))
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18932 (* ?x18128 l_0_10_37)))
 (let ((?x18125 (* l_0_10_16 l_0_10_16)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x5688 (* ?x18215 l_0_10_22)))
 (let ((?x19022 (- (+ (+ (- (* 1.0 (* l_0_10_10 l_0_10_10)) ?x5688) ?x18125) ?x18932) ?x18145)))
 (let ((?x19028 (- (- ?x19022 (* (* 1.0 l_0_10_52) l_0_10_52)) (* (* 1.0 l_0_10_53) l_0_10_53))))
 (let ((?x19034 (- (- ?x19028 (* (* 1.0 l_0_10_54) l_0_10_54)) (* (* 1.0 l_0_10_55) l_0_10_55))))
 (let ((?x19042 (+ (- (- (- ?x19034 ?x19035) ?x19037) ?x19039) (* 1.0 (* l_0_10_7 l_0_10_7)))))
 (let ((?x19048 (+ (+ (- ?x19042 ?x19043) (* 1.0 (* l_0_10_8 l_0_10_8))) (* 1.0 (* l_0_10_9 l_0_10_9)))))
 (= ?x19048 0.0)))))))))))))))))
(assert
 (let ((?x18128 (* 4.0 l_0_10_31)))
 (let ((?x18993 (* ?x18128 l_0_10_41)))
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18289 (* ?x18180 l_0_10_37)))
 (let ((?x18215 (* 4.0 l_0_10_16)))
 (let ((?x18990 (* ?x18215 l_0_10_26)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x18282 (* ?x18171 l_0_10_22)))
 (let ((?x18609 (* 2.0 l_0_10_13)))
 (let ((?x18723 (* ?x18609 l_0_10_9)))
 (let ((?x4689 (* 2.0 l_0_10_12)))
 (let ((?x18721 (* ?x4689 l_0_10_8)))
 (let ((?x12893 (* 2.0 l_0_10_11)))
 (let ((?x18719 (* ?x12893 l_0_10_7)))
 (let ((?x19074 (+ (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x18719) ?x18721) ?x18723) ?x18282)))
 (let ((?x19080 (- (+ (- (- ?x19074 ?x18990) ?x18289) ?x18993) (* (* 2.0 l_0_10_52) l_0_10_56))))
 (let ((?x19086 (- (- ?x19080 (* (* 2.0 l_0_10_53) l_0_10_57)) (* (* 2.0 l_0_10_54) l_0_10_58))))
 (let ((?x19092 (- (- ?x19086 (* (* 2.0 l_0_10_55) l_0_10_59)) (* (* 2.0 l_0_10_67) l_0_10_71))))
 (let ((?x19098 (- (- ?x19092 (* (* 2.0 l_0_10_68) l_0_10_72)) (* (* 2.0 l_0_10_69) l_0_10_73))))
 (= (- ?x19098 (* (* 2.0 l_0_10_70) l_0_10_74)) 0.0)))))))))))))))))))))
(assert
 (let ((?x19139 (* l_0_10_75 l_0_10_75)))
 (let ((?x19137 (* l_0_10_74 l_0_10_74)))
 (let ((?x19135 (* l_0_10_73 l_0_10_73)))
 (let ((?x19133 (* l_0_10_72 l_0_10_72)))
 (let ((?x19131 (* l_0_10_71 l_0_10_71)))
 (let ((?x18180 (* 8.0 l_0_10_31)))
 (let ((?x18318 (* ?x18180 l_0_10_41)))
 (let ((?x18171 (* 8.0 l_0_10_16)))
 (let ((?x2840 (* ?x18171 l_0_10_26)))
 (let ((?x6125 (+ (* 1.0 (* l_0_10_11 l_0_10_11)) (* 1.0 (* l_0_10_12 l_0_10_12)))))
 (let ((?x19111 (+ (+ ?x6125 (* 1.0 (* l_0_10_13 l_0_10_13))) (* 1.0 (* l_0_10_14 l_0_10_14)))))
 (let ((?x19118 (- (- (+ (+ ?x19111 (* 1.0 (* l_0_10_15 l_0_10_15))) ?x2840) ?x18318) (* (* 1.0 l_0_10_56) l_0_10_56))))
 (let ((?x19124 (- (- ?x19118 (* (* 1.0 l_0_10_57) l_0_10_57)) (* (* 1.0 l_0_10_58) l_0_10_58))))
 (let ((?x19130 (- (- ?x19124 (* (* 1.0 l_0_10_59) l_0_10_59)) (* (* 1.0 l_0_10_60) l_0_10_60))))
 (= (- (- (- (- (- ?x19130 ?x19131) ?x19133) ?x19135) ?x19137) ?x19139) 0.0))))))))))))))))
(assert
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19152 (* ?x18493 l_0_10_34)))
 (let ((?x18490 (* l_0_10_21 l_0_10_21)))
 (let ((?x6236 (* 2.0 ?x18490)))
 (let ((?x18487 (* l_0_10_20 l_0_10_20)))
 (let ((?x5848 (* 2.0 ?x18487)))
 (let ((?x18484 (* l_0_10_19 l_0_10_19)))
 (let ((?x6224 (* 2.0 ?x18484)))
 (let ((?x19153 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_16) l_0_10_19) ?x6224) ?x5848) ?x6236) ?x19152)))
 (let ((?x19159 (- (- ?x19153 (* (* 2.0 l_0_10_34) l_0_10_34)) (* (* 2.0 l_0_10_35) l_0_10_35))))
 (= (- ?x19159 (* (* 2.0 l_0_10_36) l_0_10_36)) 0.0))))))))))))
(assert
 (let ((?x13067 (* l_0_10_36 l_0_10_36)))
 (let ((?x13969 (* 2.0 ?x13067)))
 (let ((?x18506 (* 4.0 l_0_10_36)))
 (let ((?x19208 (* ?x18506 l_0_10_39)))
 (let ((?x5003 (* l_0_10_35 l_0_10_35)))
 (let ((?x19166 (* 2.0 ?x5003)))
 (let ((?x18503 (* 4.0 l_0_10_35)))
 (let ((?x19205 (* ?x18503 l_0_10_38)))
 (let ((?x18526 (* l_0_10_34 l_0_10_34)))
 (let ((?x13945 (* 2.0 ?x18526)))
 (let ((?x18500 (* 4.0 l_0_10_34)))
 (let ((?x19202 (* ?x18500 l_0_10_37)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19200 (* ?x18493 l_0_10_37)))
 (let ((?x19194 (* 4.0 l_0_10_21)))
 (let ((?x19195 (* ?x19194 l_0_10_24)))
 (let ((?x19188 (* 4.0 l_0_10_20)))
 (let ((?x19189 (* ?x19188 l_0_10_23)))
 (let ((?x19182 (* 4.0 l_0_10_19)))
 (let ((?x19183 (* ?x19182 l_0_10_22)))
 (let ((?x19187 (- (+ (* (* (- 2.0) l_0_10_16) l_0_10_22) ?x19183) (* (* 2.0 l_0_10_19) l_0_10_19))))
 (let ((?x19199 (- (+ (- (+ ?x19187 ?x19189) (* (* 2.0 l_0_10_20) l_0_10_20)) ?x19195) (* (* 2.0 l_0_10_21) l_0_10_21))))
 (let ((?x19210 (+ (- (+ (- (+ (- (+ ?x19199 ?x19200) ?x19202) ?x13945) ?x19205) ?x19166) ?x19208) ?x13969)))
 (= ?x19210 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18506 (* 4.0 l_0_10_36)))
 (let ((?x18507 (* ?x18506 l_0_10_36)))
 (let ((?x19255 (* ?x18506 l_0_10_43)))
 (let ((?x18503 (* 4.0 l_0_10_35)))
 (let ((?x18504 (* ?x18503 l_0_10_35)))
 (let ((?x19252 (* ?x18503 l_0_10_42)))
 (let ((?x18500 (* 4.0 l_0_10_34)))
 (let ((?x18501 (* ?x18500 l_0_10_34)))
 (let ((?x19249 (* ?x18500 l_0_10_41)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19247 (* ?x18493 l_0_10_41)))
 (let ((?x18490 (* l_0_10_21 l_0_10_21)))
 (let ((?x18491 (* 4.0 ?x18490)))
 (let ((?x19194 (* 4.0 l_0_10_21)))
 (let ((?x19244 (* ?x19194 l_0_10_28)))
 (let ((?x18487 (* l_0_10_20 l_0_10_20)))
 (let ((?x18488 (* 4.0 ?x18487)))
 (let ((?x19188 (* 4.0 l_0_10_20)))
 (let ((?x19241 (* ?x19188 l_0_10_27)))
 (let ((?x18484 (* l_0_10_19 l_0_10_19)))
 (let ((?x18485 (* 4.0 ?x18484)))
 (let ((?x19182 (* 4.0 l_0_10_19)))
 (let ((?x19238 (* ?x19182 l_0_10_26)))
 (let ((?x19243 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_16) l_0_10_26) ?x19238) ?x18485) ?x19241) ?x18488)))
 (let ((?x19254 (- (- (- (- (+ (+ (+ ?x19243 ?x19244) ?x18491) ?x19247) ?x19249) ?x18501) ?x19252) ?x18504)))
 (= (- (- ?x19254 ?x19255) ?x18507) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4921 (* l_0_10_33 l_0_10_33)))
 (let ((?x12950 (* l_0_10_32 l_0_10_32)))
 (let ((?x6415 (+ (- (* (- l_0_10_17) l_0_10_17) (* l_0_10_18 l_0_10_18)) ?x12950)))
 (= (+ ?x6415 ?x4921) 0.0)))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19276 (* ?x18392 l_0_10_35)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19274 (* ?x18386 l_0_10_34)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19272 (* ?x18425 l_0_10_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_19) ?x19272) ?x19274) ?x19276) 0.0))))))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19289 (* ?x18392 l_0_10_38)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19287 (* ?x18386 l_0_10_37)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19285 (* ?x18425 l_0_10_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_22) ?x19285) ?x19287) ?x19289) 0.0))))))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19308 (* ?x18392 l_0_10_42)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19306 (* ?x18386 l_0_10_41)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19299 (* ?x18425 l_0_10_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_17) l_0_10_26) ?x19299) ?x19306) ?x19308) 0.0))))))))
(assert
 (let ((?x13067 (* l_0_10_36 l_0_10_36)))
 (let ((?x5003 (* l_0_10_35 l_0_10_35)))
 (let ((?x18526 (* l_0_10_34 l_0_10_34)))
 (let ((?x18490 (* l_0_10_21 l_0_10_21)))
 (let ((?x19325 (- (- (* (- l_0_10_19) l_0_10_19) (* l_0_10_20 l_0_10_20)) ?x18490)))
 (= (+ (+ (+ ?x19325 ?x18526) ?x5003) ?x13067) 0.0)))))))
(assert
 (let ((?x19160 (* 2.0 l_0_10_36)))
 (let ((?x19349 (* ?x19160 l_0_10_39)))
 (let ((?x19157 (* 2.0 l_0_10_35)))
 (let ((?x19347 (* ?x19157 l_0_10_38)))
 (let ((?x19154 (* 2.0 l_0_10_34)))
 (let ((?x19345 (* ?x19154 l_0_10_37)))
 (let ((?x19197 (* 2.0 l_0_10_21)))
 (let ((?x19343 (* ?x19197 l_0_10_24)))
 (let ((?x19191 (* 2.0 l_0_10_20)))
 (let ((?x19341 (* ?x19191 l_0_10_23)))
 (let ((?x19348 (+ (+ (- (- (* (* (- 2.0) l_0_10_19) l_0_10_22) ?x19341) ?x19343) ?x19345) ?x19347)))
 (= (+ ?x19348 ?x19349) 0.0)))))))))))))
(assert
 (let ((?x19160 (* 2.0 l_0_10_36)))
 (let ((?x19366 (* ?x19160 l_0_10_43)))
 (let ((?x19157 (* 2.0 l_0_10_35)))
 (let ((?x19364 (* ?x19157 l_0_10_42)))
 (let ((?x19154 (* 2.0 l_0_10_34)))
 (let ((?x19362 (* ?x19154 l_0_10_41)))
 (let ((?x19197 (* 2.0 l_0_10_21)))
 (let ((?x14109 (* ?x19197 l_0_10_28)))
 (let ((?x19191 (* 2.0 l_0_10_20)))
 (let ((?x14112 (* ?x19191 l_0_10_27)))
 (let ((?x19365 (+ (+ (- (- (* (* (- 2.0) l_0_10_19) l_0_10_26) ?x14112) ?x14109) ?x19362) ?x19364)))
 (= (+ ?x19365 ?x19366) 0.0)))))))))))))
(assert
 (let ((?x5338 (* l_0_10_40 l_0_10_40)))
 (let ((?x5332 (* l_0_10_39 l_0_10_39)))
 (let ((?x5322 (* l_0_10_38 l_0_10_38)))
 (let ((?x5320 (* l_0_10_37 l_0_10_37)))
 (let ((?x13067 (* l_0_10_36 l_0_10_36)))
 (let ((?x5003 (* l_0_10_35 l_0_10_35)))
 (let ((?x18526 (* l_0_10_34 l_0_10_34)))
 (let ((?x18683 (* l_0_10_25 l_0_10_25)))
 (let ((?x18680 (* l_0_10_24 l_0_10_24)))
 (let ((?x18677 (* l_0_10_23 l_0_10_23)))
 (let ((?x18674 (* l_0_10_22 l_0_10_22)))
 (let ((?x18490 (* l_0_10_21 l_0_10_21)))
 (let ((?x19376 (- (+ (+ (* l_0_10_19 l_0_10_19) (* l_0_10_20 l_0_10_20)) ?x18490) ?x18674)))
 (let ((?x19390 (+ (- (- (- (- (- (- ?x19376 ?x18677) ?x18680) ?x18683) ?x18526) ?x5003) ?x13067) ?x5320)))
 (= (+ (+ (+ ?x19390 ?x5322) ?x5332) ?x5338) 0.0))))))))))))))))
(assert
 (let ((?x19429 (* 2.0 l_0_10_40)))
 (let ((?x19430 (* ?x19429 l_0_10_44)))
 (let ((?x19426 (* 2.0 l_0_10_39)))
 (let ((?x19427 (* ?x19426 l_0_10_43)))
 (let ((?x19423 (* 2.0 l_0_10_38)))
 (let ((?x19424 (* ?x19423 l_0_10_42)))
 (let ((?x19420 (* 2.0 l_0_10_37)))
 (let ((?x19421 (* ?x19420 l_0_10_41)))
 (let ((?x19417 (* 2.0 l_0_10_25)))
 (let ((?x19418 (* ?x19417 l_0_10_29)))
 (let ((?x19414 (* 2.0 l_0_10_24)))
 (let ((?x19415 (* ?x19414 l_0_10_28)))
 (let ((?x19411 (* 2.0 l_0_10_23)))
 (let ((?x19412 (* ?x19411 l_0_10_27)))
 (let ((?x19422 (+ (- (- (- (* (* (- 2.0) l_0_10_22) l_0_10_26) ?x19412) ?x19415) ?x19418) ?x19421)))
 (= (+ (+ (+ ?x19422 ?x19424) ?x19427) ?x19430) 0.0)))))))))))))))))
(assert
 (let ((?x13513 (* l_0_10_45 l_0_10_45)))
 (let ((?x5491 (* l_0_10_44 l_0_10_44)))
 (let ((?x13508 (* l_0_10_43 l_0_10_43)))
 (let ((?x13500 (* l_0_10_42 l_0_10_42)))
 (let ((?x13493 (* l_0_10_41 l_0_10_41)))
 (let ((?x18804 (* l_0_10_30 l_0_10_30)))
 (let ((?x18801 (* l_0_10_29 l_0_10_29)))
 (let ((?x18798 (* l_0_10_28 l_0_10_28)))
 (let ((?x6545 (- (- (* (- l_0_10_26) l_0_10_26) (* l_0_10_27 l_0_10_27)) ?x18798)))
 (let ((?x19460 (+ (+ (+ (+ (+ (- (- ?x6545 ?x18801) ?x18804) ?x13493) ?x13500) ?x13508) ?x5491) ?x13513)))
 (= ?x19460 0.0))))))))))))
(assert
 (let ((?x18506 (* 4.0 l_0_10_36)))
 (let ((?x19208 (* ?x18506 l_0_10_39)))
 (let ((?x18503 (* 4.0 l_0_10_35)))
 (let ((?x19205 (* ?x18503 l_0_10_38)))
 (let ((?x18500 (* 4.0 l_0_10_34)))
 (let ((?x19202 (* ?x18500 l_0_10_37)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19152 (* ?x18493 l_0_10_34)))
 (let ((?x18683 (* l_0_10_25 l_0_10_25)))
 (let ((?x19479 (* 2.0 ?x18683)))
 (let ((?x18680 (* l_0_10_24 l_0_10_24)))
 (let ((?x19477 (* 2.0 ?x18680)))
 (let ((?x18677 (* l_0_10_23 l_0_10_23)))
 (let ((?x19475 (* 2.0 ?x18677)))
 (let ((?x18674 (* l_0_10_22 l_0_10_22)))
 (let ((?x19473 (* 2.0 ?x18674)))
 (let ((?x19194 (* 4.0 l_0_10_21)))
 (let ((?x19195 (* ?x19194 l_0_10_24)))
 (let ((?x19188 (* 4.0 l_0_10_20)))
 (let ((?x19189 (* ?x19188 l_0_10_23)))
 (let ((?x19182 (* 4.0 l_0_10_19)))
 (let ((?x19183 (* ?x19182 l_0_10_22)))
 (let ((?x19474 (+ (- (- (- (* (* 2.0 l_0_10_16) l_0_10_19) ?x19183) ?x19189) ?x19195) ?x19473)))
 (let ((?x19484 (+ (+ (+ (- (+ (+ (+ ?x19474 ?x19475) ?x19477) ?x19479) ?x19152) ?x19202) ?x19205) ?x19208)))
 (let ((?x19488 (- (- ?x19484 (* (* 2.0 l_0_10_37) l_0_10_37)) (* (* 2.0 l_0_10_38) l_0_10_38))))
 (let ((?x19492 (- (- ?x19488 (* (* 2.0 l_0_10_39) l_0_10_39)) (* (* 2.0 l_0_10_40) l_0_10_40))))
 (= ?x19492 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x5338 (* l_0_10_40 l_0_10_40)))
 (let ((?x14184 (* 2.0 ?x5338)))
 (let ((?x5332 (* l_0_10_39 l_0_10_39)))
 (let ((?x6599 (* 2.0 ?x5332)))
 (let ((?x5322 (* l_0_10_38 l_0_10_38)))
 (let ((?x14178 (* 2.0 ?x5322)))
 (let ((?x5320 (* l_0_10_37 l_0_10_37)))
 (let ((?x14174 (* 2.0 ?x5320)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19200 (* ?x18493 l_0_10_37)))
 (let ((?x19513 (- (* (* 2.0 l_0_10_16) l_0_10_22) (* (* 2.0 l_0_10_22) l_0_10_22))))
 (let ((?x19517 (- (- ?x19513 (* (* 2.0 l_0_10_23) l_0_10_23)) (* (* 2.0 l_0_10_24) l_0_10_24))))
 (let ((?x19522 (+ (+ (- (- ?x19517 (* (* 2.0 l_0_10_25) l_0_10_25)) ?x19200) ?x14174) ?x14178)))
 (= (+ (+ ?x19522 ?x6599) ?x14184) 0.0)))))))))))))))
(assert
 (let ((?x18698 (* 4.0 l_0_10_40)))
 (let ((?x18699 (* ?x18698 l_0_10_40)))
 (let ((?x19535 (* ?x18698 l_0_10_44)))
 (let ((?x18695 (* 4.0 l_0_10_39)))
 (let ((?x18696 (* ?x18695 l_0_10_39)))
 (let ((?x19532 (* ?x18695 l_0_10_43)))
 (let ((?x18692 (* 4.0 l_0_10_38)))
 (let ((?x18693 (* ?x18692 l_0_10_38)))
 (let ((?x19529 (* ?x18692 l_0_10_42)))
 (let ((?x18689 (* 4.0 l_0_10_37)))
 (let ((?x18690 (* ?x18689 l_0_10_37)))
 (let ((?x5321 (* ?x18689 l_0_10_41)))
 (let ((?x18493 (* 2.0 l_0_10_31)))
 (let ((?x19247 (* ?x18493 l_0_10_41)))
 (let ((?x18683 (* l_0_10_25 l_0_10_25)))
 (let ((?x18684 (* 4.0 ?x18683)))
 (let ((?x6673 (* (* 4.0 l_0_10_25) l_0_10_29)))
 (let ((?x18680 (* l_0_10_24 l_0_10_24)))
 (let ((?x18681 (* 4.0 ?x18680)))
 (let ((?x6647 (* (* 4.0 l_0_10_24) l_0_10_28)))
 (let ((?x18677 (* l_0_10_23 l_0_10_23)))
 (let ((?x18678 (* 4.0 ?x18677)))
 (let ((?x14180 (* (* 4.0 l_0_10_23) l_0_10_27)))
 (let ((?x18674 (* l_0_10_22 l_0_10_22)))
 (let ((?x18675 (* 4.0 ?x18674)))
 (let ((?x14213 (* (* 4.0 l_0_10_22) l_0_10_26)))
 (let ((?x14191 (+ (- (+ (- (* (* 2.0 l_0_10_16) l_0_10_26) ?x14213) ?x18675) ?x14180) ?x18678)))
 (let ((?x19528 (- (+ (- (+ (- (+ (- ?x14191 ?x6647) ?x18681) ?x6673) ?x18684) ?x19247) ?x5321) ?x18690)))
 (= (- (+ (- (+ (- (+ ?x19528 ?x19529) ?x18693) ?x19532) ?x18696) ?x19535) ?x18699) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4921 (* l_0_10_33 l_0_10_33)))
 (let ((?x12950 (* l_0_10_32 l_0_10_32)))
 (let ((?x19567 (- (- (+ (* l_0_10_17 l_0_10_17) (* l_0_10_18 l_0_10_18)) ?x12950) ?x4921)))
 (= ?x19567 0.0)))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19276 (* ?x18392 l_0_10_35)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19274 (* ?x18386 l_0_10_34)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19272 (* ?x18425 l_0_10_20)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_19) ?x19272) ?x19274) ?x19276) 0.0))))))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19289 (* ?x18392 l_0_10_38)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19287 (* ?x18386 l_0_10_37)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19285 (* ?x18425 l_0_10_23)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_22) ?x19285) ?x19287) ?x19289) 0.0))))))))
(assert
 (let ((?x18392 (* 2.0 l_0_10_33)))
 (let ((?x19308 (* ?x18392 l_0_10_42)))
 (let ((?x18386 (* 2.0 l_0_10_32)))
 (let ((?x19306 (* ?x18386 l_0_10_41)))
 (let ((?x18425 (* 2.0 l_0_10_18)))
 (let ((?x19299 (* ?x18425 l_0_10_27)))
 (= (- (- (+ (* (* 2.0 l_0_10_17) l_0_10_26) ?x19299) ?x19306) ?x19308) 0.0))))))))
(assert
 (let ((?x19160 (* 2.0 l_0_10_36)))
 (let ((?x19349 (* ?x19160 l_0_10_39)))
 (let ((?x19157 (* 2.0 l_0_10_35)))
 (let ((?x19347 (* ?x19157 l_0_10_38)))
 (let ((?x19154 (* 2.0 l_0_10_34)))
 (let ((?x19345 (* ?x19154 l_0_10_37)))
 (let ((?x19197 (* 2.0 l_0_10_21)))
 (let ((?x19343 (* ?x19197 l_0_10_24)))
 (let ((?x19191 (* 2.0 l_0_10_20)))
 (let ((?x19341 (* ?x19191 l_0_10_23)))
 (let ((?x19584 (- (- (+ (+ (* (* 2.0 l_0_10_19) l_0_10_22) ?x19341) ?x19343) ?x19345) ?x19347)))
 (= (- ?x19584 ?x19349) 0.0)))))))))))))
(assert
 (let ((?x19160 (* 2.0 l_0_10_36)))
 (let ((?x19366 (* ?x19160 l_0_10_43)))
 (let ((?x19157 (* 2.0 l_0_10_35)))
 (let ((?x19364 (* ?x19157 l_0_10_42)))
 (let ((?x19154 (* 2.0 l_0_10_34)))
 (let ((?x19362 (* ?x19154 l_0_10_41)))
 (let ((?x19197 (* 2.0 l_0_10_21)))
 (let ((?x14109 (* ?x19197 l_0_10_28)))
 (let ((?x19191 (* 2.0 l_0_10_20)))
 (let ((?x14112 (* ?x19191 l_0_10_27)))
 (let ((?x19594 (- (- (+ (+ (* (* 2.0 l_0_10_19) l_0_10_26) ?x14112) ?x14109) ?x19362) ?x19364)))
 (= (- ?x19594 ?x19366) 0.0)))))))))))))
(assert
 (let ((?x5338 (* l_0_10_40 l_0_10_40)))
 (let ((?x5332 (* l_0_10_39 l_0_10_39)))
 (let ((?x5322 (* l_0_10_38 l_0_10_38)))
 (let ((?x5320 (* l_0_10_37 l_0_10_37)))
 (let ((?x18683 (* l_0_10_25 l_0_10_25)))
 (let ((?x18680 (* l_0_10_24 l_0_10_24)))
 (let ((?x14273 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x18680) ?x18683)))
 (= (- (- (- (- ?x14273 ?x5320) ?x5322) ?x5332) ?x5338) 0.0)))))))))
(assert
 (let ((?x19429 (* 2.0 l_0_10_40)))
 (let ((?x19430 (* ?x19429 l_0_10_44)))
 (let ((?x19426 (* 2.0 l_0_10_39)))
 (let ((?x19427 (* ?x19426 l_0_10_43)))
 (let ((?x19423 (* 2.0 l_0_10_38)))
 (let ((?x19424 (* ?x19423 l_0_10_42)))
 (let ((?x19420 (* 2.0 l_0_10_37)))
 (let ((?x19421 (* ?x19420 l_0_10_41)))
 (let ((?x19417 (* 2.0 l_0_10_25)))
 (let ((?x19418 (* ?x19417 l_0_10_29)))
 (let ((?x19414 (* 2.0 l_0_10_24)))
 (let ((?x19415 (* ?x19414 l_0_10_28)))
 (let ((?x19411 (* 2.0 l_0_10_23)))
 (let ((?x19412 (* ?x19411 l_0_10_27)))
 (let ((?x14278 (- (+ (+ (+ (* (* 2.0 l_0_10_22) l_0_10_26) ?x19412) ?x19415) ?x19418) ?x19421)))
 (= (- (- (- ?x14278 ?x19424) ?x19427) ?x19430) 0.0)))))))))))))))))
(assert
 (let ((?x13513 (* l_0_10_45 l_0_10_45)))
 (let ((?x5491 (* l_0_10_44 l_0_10_44)))
 (let ((?x13508 (* l_0_10_43 l_0_10_43)))
 (let ((?x13500 (* l_0_10_42 l_0_10_42)))
 (let ((?x13493 (* l_0_10_41 l_0_10_41)))
 (let ((?x18804 (* l_0_10_30 l_0_10_30)))
 (let ((?x18801 (* l_0_10_29 l_0_10_29)))
 (let ((?x18798 (* l_0_10_28 l_0_10_28)))
 (let ((?x6867 (+ (+ (+ (* l_0_10_26 l_0_10_26) (* l_0_10_27 l_0_10_27)) ?x18798) ?x18801)))
 (= (- (- (- (- (- (+ ?x6867 ?x18804) ?x13493) ?x13500) ?x13508) ?x5491) ?x13513) 0.0)))))))))))
(assert
 (let ((?x18698 (* 4.0 l_0_10_40)))
 (let ((?x19535 (* ?x18698 l_0_10_44)))
 (let ((?x18695 (* 4.0 l_0_10_39)))
 (let ((?x19532 (* ?x18695 l_0_10_43)))
 (let ((?x18692 (* 4.0 l_0_10_38)))
 (let ((?x19529 (* ?x18692 l_0_10_42)))
 (let ((?x18689 (* 4.0 l_0_10_37)))
 (let ((?x5321 (* ?x18689 l_0_10_41)))
 (let ((?x18506 (* 4.0 l_0_10_36)))
 (let ((?x19255 (* ?x18506 l_0_10_43)))
 (let ((?x18566 (* 8.0 l_0_10_36)))
 (let ((?x18567 (* ?x18566 l_0_10_39)))
 (let ((?x18503 (* 4.0 l_0_10_35)))
 (let ((?x19252 (* ?x18503 l_0_10_42)))
 (let ((?x18563 (* 8.0 l_0_10_35)))
 (let ((?x18564 (* ?x18563 l_0_10_38)))
 (let ((?x18500 (* 4.0 l_0_10_34)))
 (let ((?x19249 (* ?x18500 l_0_10_41)))
 (let ((?x18560 (* 8.0 l_0_10_34)))
 (let ((?x18561 (* ?x18560 l_0_10_37)))
 (let ((?x6673 (* (* 4.0 l_0_10_25) l_0_10_29)))
 (let ((?x6647 (* (* 4.0 l_0_10_24) l_0_10_28)))
 (let ((?x14180 (* (* 4.0 l_0_10_23) l_0_10_27)))
 (let ((?x14213 (* (* 4.0 l_0_10_22) l_0_10_26)))
 (let ((?x19194 (* 4.0 l_0_10_21)))
 (let ((?x19244 (* ?x19194 l_0_10_28)))
 (let ((?x18551 (* 8.0 l_0_10_21)))
 (let ((?x18552 (* ?x18551 l_0_10_24)))
 (let ((?x19188 (* 4.0 l_0_10_20)))
 (let ((?x19241 (* ?x19188 l_0_10_27)))
 (let ((?x18548 (* 8.0 l_0_10_20)))
 (let ((?x18549 (* ?x18548 l_0_10_23)))
 (let ((?x19182 (* 4.0 l_0_10_19)))
 (let ((?x19238 (* ?x19182 l_0_10_26)))
 (let ((?x18545 (* 8.0 l_0_10_19)))
 (let ((?x18546 (* ?x18545 l_0_10_22)))
 (let ((?x19644 (+ (+ (- (+ (- (+ (- ?x18546 ?x19238) ?x18549) ?x19241) ?x18552) ?x19244) ?x14213) ?x14180)))
 (let ((?x19651 (- (+ (- (+ (- (+ (+ ?x19644 ?x6647) ?x6673) ?x18561) ?x19249) ?x18564) ?x19252) ?x18567)))
 (= (- (- (- (- (+ ?x19651 ?x19255) ?x5321) ?x19529) ?x19532) ?x19535) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18566 (* 8.0 l_0_10_36)))
 (let ((?x18634 (* ?x18566 l_0_10_43)))
 (let ((?x18563 (* 8.0 l_0_10_35)))
 (let ((?x18632 (* ?x18563 l_0_10_42)))
 (let ((?x18560 (* 8.0 l_0_10_34)))
 (let ((?x18630 (* ?x18560 l_0_10_41)))
 (let ((?x18804 (* l_0_10_30 l_0_10_30)))
 (let ((?x19672 (* 2.0 ?x18804)))
 (let ((?x18801 (* l_0_10_29 l_0_10_29)))
 (let ((?x19670 (* 2.0 ?x18801)))
 (let ((?x18798 (* l_0_10_28 l_0_10_28)))
 (let ((?x19668 (* 2.0 ?x18798)))
 (let ((?x18795 (* l_0_10_27 l_0_10_27)))
 (let ((?x19666 (* 2.0 ?x18795)))
 (let ((?x18792 (* l_0_10_26 l_0_10_26)))
 (let ((?x6930 (* 2.0 ?x18792)))
 (let ((?x18551 (* 8.0 l_0_10_21)))
 (let ((?x18622 (* ?x18551 l_0_10_28)))
 (let ((?x18548 (* 8.0 l_0_10_20)))
 (let ((?x18620 (* ?x18548 l_0_10_27)))
 (let ((?x18545 (* 8.0 l_0_10_19)))
 (let ((?x18618 (* ?x18545 l_0_10_26)))
 (let ((?x19673 (+ (+ (+ (+ (+ (+ (+ ?x18618 ?x18620) ?x18622) ?x6930) ?x19666) ?x19668) ?x19670) ?x19672)))
 (let ((?x19679 (- (- (- (- ?x19673 ?x18630) ?x18632) ?x18634) (* (* 2.0 l_0_10_41) l_0_10_41))))
 (let ((?x19685 (- (- ?x19679 (* (* 2.0 l_0_10_42) l_0_10_42)) (* (* 2.0 l_0_10_43) l_0_10_43))))
 (let ((?x19691 (- (- ?x19685 (* (* 2.0 l_0_10_44) l_0_10_44)) (* (* 2.0 l_0_10_45) l_0_10_45))))
 (= ?x19691 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13513 (* l_0_10_45 l_0_10_45)))
 (let ((?x7042 (* 2.0 ?x13513)))
 (let ((?x5491 (* l_0_10_44 l_0_10_44)))
 (let ((?x19700 (* 2.0 ?x5491)))
 (let ((?x13508 (* l_0_10_43 l_0_10_43)))
 (let ((?x7036 (* 2.0 ?x13508)))
 (let ((?x13500 (* l_0_10_42 l_0_10_42)))
 (let ((?x19693 (* 2.0 ?x13500)))
 (let ((?x13493 (* l_0_10_41 l_0_10_41)))
 (let ((?x7019 (* 2.0 ?x13493)))
 (let ((?x18755 (* (* 8.0 l_0_10_40) l_0_10_44)))
 (let ((?x18752 (* (* 8.0 l_0_10_39) l_0_10_43)))
 (let ((?x18749 (* (* 8.0 l_0_10_38) l_0_10_42)))
 (let ((?x18746 (* (* 8.0 l_0_10_37) l_0_10_41)))
 (let ((?x18739 (* (* 8.0 l_0_10_25) l_0_10_29)))
 (let ((?x18736 (* (* 8.0 l_0_10_24) l_0_10_28)))
 (let ((?x18733 (* (* 8.0 l_0_10_23) l_0_10_27)))
 (let ((?x18730 (* (* 8.0 l_0_10_22) l_0_10_26)))
 (let ((?x19710 (- (+ (+ (+ ?x18730 ?x18733) ?x18736) ?x18739) (* (* 2.0 l_0_10_26) l_0_10_26))))
 (let ((?x19716 (- (- ?x19710 (* (* 2.0 l_0_10_27) l_0_10_27)) (* (* 2.0 l_0_10_28) l_0_10_28))))
 (let ((?x19722 (- (- ?x19716 (* (* 2.0 l_0_10_29) l_0_10_29)) (* (* 2.0 l_0_10_30) l_0_10_30))))
 (let ((?x19729 (+ (+ (+ (- (- (- (- ?x19722 ?x18746) ?x18749) ?x18752) ?x18755) ?x7019) ?x19693) ?x7036)))
 (= (+ (+ ?x19729 ?x19700) ?x7042) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18822 (* (* 4.0 l_0_10_45) l_0_10_45)))
 (let ((?x18819 (* (* 4.0 l_0_10_44) l_0_10_44)))
 (let ((?x18816 (* (* 4.0 l_0_10_43) l_0_10_43)))
 (let ((?x18813 (* (* 4.0 l_0_10_42) l_0_10_42)))
 (let ((?x18810 (* (* 4.0 l_0_10_41) l_0_10_41)))
 (let ((?x18804 (* l_0_10_30 l_0_10_30)))
 (let ((?x18805 (* 4.0 ?x18804)))
 (let ((?x18801 (* l_0_10_29 l_0_10_29)))
 (let ((?x18802 (* 4.0 ?x18801)))
 (let ((?x18798 (* l_0_10_28 l_0_10_28)))
 (let ((?x18799 (* 4.0 ?x18798)))
 (let ((?x18795 (* l_0_10_27 l_0_10_27)))
 (let ((?x18796 (* 4.0 ?x18795)))
 (let ((?x18792 (* l_0_10_26 l_0_10_26)))
 (let ((?x18793 (* 4.0 ?x18792)))
 (let ((?x7163 (- (- (- (+ (+ (+ (+ ?x18793 ?x18796) ?x18799) ?x18802) ?x18805) ?x18810) ?x18813) ?x18816)))
 (= (- (- ?x7163 ?x18819) ?x18822) 0.0))))))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (let ((?x19799 (* l_0_11_81 l_0_11_81)))
 (let ((?x19797 (* l_0_11_80 l_0_11_80)))
 (let ((?x19795 (* l_0_11_79 l_0_11_79)))
 (let ((?x19793 (* l_0_11_66 l_0_11_66)))
 (let ((?x19791 (* l_0_11_65 l_0_11_65)))
 (let ((?x19789 (* l_0_11_64 l_0_11_64)))
 (let ((?x19769 (* l_0_11_31 l_0_11_31)))
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x19767 (* ?x19766 l_0_11_34)))
 (let ((?x19768 (- (- (* (* 4.0 l_0_11_16) l_0_11_19) (* l_0_11_16 l_0_11_16)) ?x19767)))
 (let ((?x19776 (- (+ (+ ?x19768 ?x19769) (* 1.0 (* l_0_11_4 l_0_11_4))) (* (* 1.0 l_0_11_49) l_0_11_49))))
 (let ((?x19782 (- (+ ?x19776 (* 1.0 (* l_0_11_5 l_0_11_5))) (* (* 1.0 l_0_11_50) l_0_11_50))))
 (let ((?x19788 (+ (- ?x19782 (* (* 1.0 l_0_11_51) l_0_11_51)) (* 1.0 (* l_0_11_6 l_0_11_6)))))
 (let ((?x19801 (+ (- (- (- (- (- (- ?x19788 ?x19789) ?x19791) ?x19793) ?x19795) ?x19797) ?x19799) 1.0)))
 (= ?x19801 0.0))))))))))))))))
(assert
 (let ((?x19877 (* l_0_11_85 l_0_11_85)))
 (let ((?x19875 (* l_0_11_84 l_0_11_84)))
 (let ((?x19873 (* l_0_11_83 l_0_11_83)))
 (let ((?x19871 (* l_0_11_82 l_0_11_82)))
 (let ((?x19866 (* l_0_11_70 l_0_11_70)))
 (let ((?x19861 (* l_0_11_69 l_0_11_69)))
 (let ((?x19859 (* l_0_11_68 l_0_11_68)))
 (let ((?x19857 (* l_0_11_67 l_0_11_67)))
 (let ((?x19769 (* l_0_11_31 l_0_11_31)))
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x19842 (* ?x19766 l_0_11_37)))
 (let ((?x19764 (* l_0_11_16 l_0_11_16)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x19839 (* ?x19762 l_0_11_22)))
 (let ((?x19844 (- (+ (+ (- (* 1.0 (* l_0_11_10 l_0_11_10)) ?x19839) ?x19764) ?x19842) ?x19769)))
 (let ((?x19850 (- (- ?x19844 (* (* 1.0 l_0_11_52) l_0_11_52)) (* (* 1.0 l_0_11_53) l_0_11_53))))
 (let ((?x19856 (- (- ?x19850 (* (* 1.0 l_0_11_54) l_0_11_54)) (* (* 1.0 l_0_11_55) l_0_11_55))))
 (let ((?x19865 (+ (- (- (- ?x19856 ?x19857) ?x19859) ?x19861) (* 1.0 (* l_0_11_7 l_0_11_7)))))
 (let ((?x19874 (- (- (+ (- ?x19865 ?x19866) (* 1.0 (* l_0_11_8 l_0_11_8))) ?x19871) ?x19873)))
 (let ((?x19882 (- (+ (- (- ?x19874 ?x19875) ?x19877) (* 1.0 (* l_0_11_9 l_0_11_9))) 1.0)))
 (= ?x19882 0.0))))))))))))))))))))))
(assert
 (let ((?x19923 (+ (* (* 2.0 l_0_11_1) l_0_11_4) (* 2.0 (* l_0_11_16 l_0_11_16)))))
 (let ((?x19929 (- (- ?x19923 (* (* 2.0 l_0_11_31) l_0_11_31)) (* (* 2.0 l_0_11_46) l_0_11_49))))
 (let ((?x19935 (- (- ?x19929 (* (* 2.0 l_0_11_61) l_0_11_64)) (* (* 2.0 l_0_11_76) l_0_11_79))))
 (= (- ?x19935 2.0) 0.0)))))
(assert
 (let ((?x19769 (* l_0_11_31 l_0_11_31)))
 (let ((?x19941 (* 2.0 ?x19769)))
 (let ((?x7465 (- (* (* 2.0 l_0_11_1) l_0_11_7) (* (* 2.0 l_0_11_16) l_0_11_16))))
 (let ((?x19957 (- (- (+ ?x7465 ?x19941) (* (* 2.0 l_0_11_46) l_0_11_52)) (* (* 2.0 l_0_11_61) l_0_11_67))))
 (= (+ (- ?x19957 (* (* 2.0 l_0_11_76) l_0_11_82)) 2.0) 0.0))))))
(assert
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x14480 (* ?x19766 l_0_11_31)))
 (let ((?x19764 (* l_0_11_16 l_0_11_16)))
 (let ((?x14463 (* 4.0 ?x19764)))
 (let ((?x7469 (+ (- (* (* 2.0 l_0_11_1) l_0_11_2) (* l_0_11_1 l_0_11_1)) ?x14463)))
 (let ((?x19971 (- (- (- ?x7469 ?x14480) (* (* 2.0 l_0_11_46) l_0_11_47)) (* (* 2.0 l_0_11_61) l_0_11_62))))
 (= (- (- ?x19971 (* (* 2.0 l_0_11_76) l_0_11_77)) 4.0) 0.0))))))))
(assert
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x14480 (* ?x19766 l_0_11_31)))
 (let ((?x19764 (* l_0_11_16 l_0_11_16)))
 (let ((?x14463 (* 4.0 ?x19764)))
 (let ((?x19999 (- (- (+ (* (* 2.0 l_0_11_1) l_0_11_11) ?x14463) ?x14480) (* (* 2.0 l_0_11_46) l_0_11_56))))
 (let ((?x20003 (- (- ?x19999 (* (* 2.0 l_0_11_61) l_0_11_71)) (* (* 2.0 l_0_11_76) l_0_11_86))))
 (= (- ?x20003 4.0) 0.0))))))))
(assert
 (let ((?x20028 (* l_0_11_78 l_0_11_78)))
 (let ((?x20026 (* l_0_11_77 l_0_11_77)))
 (let ((?x20024 (* l_0_11_63 l_0_11_63)))
 (let ((?x20022 (* l_0_11_62 l_0_11_62)))
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20014 (* ?x20013 l_0_11_32)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x7563 (* ?x6351 l_0_11_17)))
 (let ((?x20009 (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) ?x7563) (* 1.0 (* l_0_11_2 l_0_11_2)))))
 (let ((?x20018 (- (- (+ ?x20009 (* 1.0 (* l_0_11_3 l_0_11_3))) ?x20014) (* (* 1.0 l_0_11_47) l_0_11_47))))
 (let ((?x20027 (- (- (- (- ?x20018 (* (* 1.0 l_0_11_48) l_0_11_48)) ?x20022) ?x20024) ?x20026)))
 (= (- ?x20027 ?x20028) 0.0)))))))))))))
(assert
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20057 (* ?x20013 l_0_11_34)))
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x20055 (* ?x19766 l_0_11_32)))
 (let ((?x20052 (* 2.0 l_0_11_3)))
 (let ((?x20053 (* ?x20052 l_0_11_5)))
 (let ((?x20049 (* 2.0 l_0_11_2)))
 (let ((?x20050 (* ?x20049 l_0_11_4)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x20047 (* ?x6351 l_0_11_19)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x20045 (* ?x19762 l_0_11_17)))
 (let ((?x20054 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x20045) ?x20047) ?x20050) ?x20053)))
 (let ((?x20064 (- (- (- (- ?x20054 ?x20055) ?x20057) (* (* 2.0 l_0_11_47) l_0_11_49)) (* (* 2.0 l_0_11_48) l_0_11_50))))
 (let ((?x20070 (- (- ?x20064 (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 2.0 l_0_11_63) l_0_11_65))))
 (let ((?x20076 (- (- ?x20070 (* (* 2.0 l_0_11_77) l_0_11_79)) (* (* 2.0 l_0_11_78) l_0_11_80))))
 (= ?x20076 0.0))))))))))))))))))
(assert
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20104 (* ?x20013 l_0_11_37)))
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x20055 (* ?x19766 l_0_11_32)))
 (let ((?x20052 (* 2.0 l_0_11_3)))
 (let ((?x20101 (* ?x20052 l_0_11_8)))
 (let ((?x20049 (* 2.0 l_0_11_2)))
 (let ((?x14638 (* ?x20049 l_0_11_7)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x7629 (* ?x6351 l_0_11_22)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x20045 (* ?x19762 l_0_11_17)))
 (let ((?x20102 (+ (+ (+ (- (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x20045) ?x7629) ?x14638) ?x20101)))
 (let ((?x20109 (- (- (- (+ ?x20102 ?x20055) ?x20104) (* (* 2.0 l_0_11_47) l_0_11_52)) (* (* 2.0 l_0_11_48) l_0_11_53))))
 (let ((?x20113 (- (- ?x20109 (* (* 2.0 l_0_11_62) l_0_11_67)) (* (* 2.0 l_0_11_63) l_0_11_68))))
 (let ((?x20117 (- (- ?x20113 (* (* 2.0 l_0_11_77) l_0_11_82)) (* (* 2.0 l_0_11_78) l_0_11_83))))
 (= ?x20117 0.0))))))))))))))))))
(assert
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20145 (* ?x20013 l_0_11_41)))
 (let ((?x20014 (* ?x20013 l_0_11_32)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x20142 (* ?x6351 l_0_11_26)))
 (let ((?x7563 (* ?x6351 l_0_11_17)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x20139 (* ?x20138 l_0_11_3)))
 (let ((?x20137 (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) (* (* 2.0 l_0_11_11) l_0_11_2))))
 (let ((?x20148 (- (- (- (+ (+ (+ ?x20137 ?x20139) ?x7563) ?x20142) ?x20014) ?x20145) (* (* 2.0 l_0_11_47) l_0_11_56))))
 (let ((?x20152 (- (- ?x20148 (* (* 2.0 l_0_11_48) l_0_11_57)) (* (* 2.0 l_0_11_62) l_0_11_71))))
 (let ((?x20156 (- (- ?x20152 (* (* 2.0 l_0_11_63) l_0_11_72)) (* (* 2.0 l_0_11_77) l_0_11_86))))
 (= (- ?x20156 (* (* 2.0 l_0_11_78) l_0_11_87)) 0.0))))))))))))))
(assert
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20203 (* ?x20202 l_0_11_33)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20200 (* ?x20199 l_0_11_32)))
 (let ((?x20010 (* l_0_11_3 l_0_11_3)))
 (let ((?x7555 (* l_0_11_2 l_0_11_2)))
 (let ((?x20194 (* l_0_11_18 l_0_11_18)))
 (let ((?x20195 (* 4.0 ?x20194)))
 (let ((?x20192 (* l_0_11_17 l_0_11_17)))
 (let ((?x20193 (* 4.0 ?x20192)))
 (= (- (- (- (- (+ ?x20193 ?x20195) ?x7555) ?x20010) ?x20200) ?x20203) 0.0))))))))))))
(assert
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20237 (* ?x20236 l_0_11_35)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20231 (* ?x20230 l_0_11_34)))
 (let ((?x20052 (* 2.0 l_0_11_3)))
 (let ((?x20053 (* ?x20052 l_0_11_5)))
 (let ((?x20049 (* 2.0 l_0_11_2)))
 (let ((?x20050 (* ?x20049 l_0_11_4)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20224 (* ?x20223 l_0_11_20)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20220 (* ?x20219 l_0_11_19)))
 (let ((?x20227 (+ (+ (+ ?x20220 (* 2.0 (* l_0_11_17 l_0_11_17))) ?x20224) (* 2.0 (* l_0_11_18 l_0_11_18)))))
 (let ((?x20235 (- (- (- (- ?x20227 ?x20050) ?x20053) ?x20231) (* (* 2.0 l_0_11_32) l_0_11_32))))
 (= (- (- ?x20235 ?x20237) (* (* 2.0 l_0_11_33) l_0_11_33)) 0.0))))))))))))))))
(assert
 (let ((?x6148 (* l_0_11_33 l_0_11_33)))
 (let ((?x7833 (* 2.0 ?x6148)))
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20276 (* ?x20236 l_0_11_38)))
 (let ((?x14818 (* l_0_11_32 l_0_11_32)))
 (let ((?x20250 (* 2.0 ?x14818)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20273 (* ?x20230 l_0_11_37)))
 (let ((?x20052 (* 2.0 l_0_11_3)))
 (let ((?x20101 (* ?x20052 l_0_11_8)))
 (let ((?x20049 (* 2.0 l_0_11_2)))
 (let ((?x14638 (* ?x20049 l_0_11_7)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20266 (* ?x20223 l_0_11_23)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20262 (* ?x20219 l_0_11_22)))
 (let ((?x20270 (- (+ (- ?x20262 (* (* 2.0 l_0_11_17) l_0_11_17)) ?x20266) (* (* 2.0 l_0_11_18) l_0_11_18))))
 (= (+ (- (+ (- (- (- ?x20270 ?x14638) ?x20101) ?x20273) ?x20250) ?x20276) ?x7833) 0.0)))))))))))))))))))
(assert
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20203 (* ?x20202 l_0_11_33)))
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20302 (* ?x20236 l_0_11_42)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20200 (* ?x20199 l_0_11_32)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20299 (* ?x20230 l_0_11_41)))
 (let ((?x20194 (* l_0_11_18 l_0_11_18)))
 (let ((?x20195 (* 4.0 ?x20194)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20296 (* ?x20223 l_0_11_27)))
 (let ((?x20192 (* l_0_11_17 l_0_11_17)))
 (let ((?x20193 (* 4.0 ?x20192)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20293 (* ?x20219 l_0_11_26)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x20139 (* ?x20138 l_0_11_3)))
 (let ((?x20297 (+ (+ (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x20139) ?x20293) ?x20193) ?x20296)))
 (= (- (- (- (- (+ ?x20297 ?x20195) ?x20299) ?x20200) ?x20302) ?x20203) 0.0)))))))))))))))))))))
(assert
 (let ((?x19786 (* l_0_11_6 l_0_11_6)))
 (let ((?x19777 (* l_0_11_5 l_0_11_5)))
 (let ((?x19771 (* l_0_11_4 l_0_11_4)))
 (let ((?x20348 (* 4.0 l_0_11_36)))
 (let ((?x20349 (* ?x20348 l_0_11_36)))
 (let ((?x20345 (* 4.0 l_0_11_35)))
 (let ((?x20346 (* ?x20345 l_0_11_35)))
 (let ((?x20342 (* 4.0 l_0_11_34)))
 (let ((?x20343 (* ?x20342 l_0_11_34)))
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20340 (* ?x20202 l_0_11_35)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20338 (* ?x20199 l_0_11_34)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20336 (* ?x19924 l_0_11_32)))
 (let ((?x20333 (* l_0_11_21 l_0_11_21)))
 (let ((?x20334 (* 4.0 ?x20333)))
 (let ((?x20330 (* l_0_11_20 l_0_11_20)))
 (let ((?x20331 (* 4.0 ?x20330)))
 (let ((?x20327 (* l_0_11_19 l_0_11_19)))
 (let ((?x20328 (* 4.0 ?x20327)))
 (let ((?x20324 (* 4.0 l_0_11_18)))
 (let ((?x20325 (* ?x20324 l_0_11_20)))
 (let ((?x20323 (+ (* (* (- 2.0) l_0_11_16) l_0_11_17) (* (* 4.0 l_0_11_17) l_0_11_19))))
 (let ((?x20341 (- (- (+ (+ (+ (+ (+ ?x20323 ?x20325) ?x20328) ?x20331) ?x20334) ?x20336) ?x20338) ?x20340)))
 (= (- (- (- (- (- (- ?x20341 ?x20343) ?x20346) ?x20349) ?x19771) ?x19777) ?x19786) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x20407 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x20404 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x20401 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x20397 (* 8.0 l_0_11_36)))
 (let ((?x20398 (* ?x20397 l_0_11_39)))
 (let ((?x20394 (* 8.0 l_0_11_35)))
 (let ((?x20395 (* ?x20394 l_0_11_38)))
 (let ((?x20391 (* 8.0 l_0_11_34)))
 (let ((?x20392 (* ?x20391 l_0_11_37)))
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20389 (* ?x20202 l_0_11_38)))
 (let ((?x20340 (* ?x20202 l_0_11_35)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20386 (* ?x20199 l_0_11_37)))
 (let ((?x20338 (* ?x20199 l_0_11_34)))
 (let ((?x20382 (* 8.0 l_0_11_21)))
 (let ((?x20383 (* ?x20382 l_0_11_24)))
 (let ((?x20379 (* 8.0 l_0_11_20)))
 (let ((?x20380 (* ?x20379 l_0_11_23)))
 (let ((?x20376 (* 8.0 l_0_11_19)))
 (let ((?x20377 (* ?x20376 l_0_11_22)))
 (let ((?x20324 (* 4.0 l_0_11_18)))
 (let ((?x20374 (* ?x20324 l_0_11_23)))
 (let ((?x20325 (* ?x20324 l_0_11_20)))
 (let ((?x20321 (* 4.0 l_0_11_17)))
 (let ((?x20371 (* ?x20321 l_0_11_22)))
 (let ((?x20378 (+ (+ (- (+ (* (* (- 4.0) l_0_11_17) l_0_11_19) ?x20371) ?x20325) ?x20374) ?x20377)))
 (let ((?x20393 (- (- (+ (- (+ (+ (+ ?x20378 ?x20380) ?x20383) ?x20338) ?x20386) ?x20340) ?x20389) ?x20392)))
 (= (- (- (- (- (- ?x20393 ?x20395) ?x20398) ?x20401) ?x20404) ?x20407) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x20397 (* 8.0 l_0_11_36)))
 (let ((?x20471 (* ?x20397 l_0_11_43)))
 (let ((?x20394 (* 8.0 l_0_11_35)))
 (let ((?x20469 (* ?x20394 l_0_11_42)))
 (let ((?x20391 (* 8.0 l_0_11_34)))
 (let ((?x20467 (* ?x20391 l_0_11_41)))
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20465 (* ?x20202 l_0_11_42)))
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20237 (* ?x20236 l_0_11_35)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20462 (* ?x20199 l_0_11_41)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20231 (* ?x20230 l_0_11_34)))
 (let ((?x20382 (* 8.0 l_0_11_21)))
 (let ((?x20459 (* ?x20382 l_0_11_28)))
 (let ((?x20379 (* 8.0 l_0_11_20)))
 (let ((?x20457 (* ?x20379 l_0_11_27)))
 (let ((?x20376 (* 8.0 l_0_11_19)))
 (let ((?x20455 (* ?x20376 l_0_11_26)))
 (let ((?x20324 (* 4.0 l_0_11_18)))
 (let ((?x20453 (* ?x20324 l_0_11_27)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20224 (* ?x20223 l_0_11_20)))
 (let ((?x20321 (* 4.0 l_0_11_17)))
 (let ((?x20450 (* ?x20321 l_0_11_26)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20220 (* ?x20219 l_0_11_19)))
 (let ((?x20446 (* 2.0 l_0_11_13)))
 (let ((?x20447 (* ?x20446 l_0_11_6)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x15117 (* ?x20138 l_0_11_5)))
 (let ((?x20451 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x15117) ?x20447) ?x20220) ?x20450)))
 (let ((?x20463 (- (- (+ (+ (+ (+ (+ ?x20451 ?x20224) ?x20453) ?x20455) ?x20457) ?x20459) ?x20231) ?x20462)))
 (= (- (- (- (- (- ?x20463 ?x20237) ?x20465) ?x20467) ?x20469) ?x20471) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19879 (* l_0_11_9 l_0_11_9)))
 (let ((?x19868 (* l_0_11_8 l_0_11_8)))
 (let ((?x19863 (* l_0_11_7 l_0_11_7)))
 (let ((?x20525 (* 4.0 l_0_11_40)))
 (let ((?x20526 (* ?x20525 l_0_11_40)))
 (let ((?x20522 (* 4.0 l_0_11_39)))
 (let ((?x20523 (* ?x20522 l_0_11_39)))
 (let ((?x20519 (* 4.0 l_0_11_38)))
 (let ((?x20520 (* ?x20519 l_0_11_38)))
 (let ((?x20516 (* 4.0 l_0_11_37)))
 (let ((?x20517 (* ?x20516 l_0_11_37)))
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20389 (* ?x20202 l_0_11_38)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20386 (* ?x20199 l_0_11_37)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20336 (* ?x19924 l_0_11_32)))
 (let ((?x20510 (* l_0_11_25 l_0_11_25)))
 (let ((?x20511 (* 4.0 ?x20510)))
 (let ((?x20507 (* l_0_11_24 l_0_11_24)))
 (let ((?x20508 (* 4.0 ?x20507)))
 (let ((?x20504 (* l_0_11_23 l_0_11_23)))
 (let ((?x20505 (* 4.0 ?x20504)))
 (let ((?x20501 (* l_0_11_22 l_0_11_22)))
 (let ((?x20502 (* 4.0 ?x20501)))
 (let ((?x20324 (* 4.0 l_0_11_18)))
 (let ((?x20374 (* ?x20324 l_0_11_23)))
 (let ((?x20321 (* 4.0 l_0_11_17)))
 (let ((?x20371 (* ?x20321 l_0_11_22)))
 (let ((?x20498 (+ (* (- l_0_11_10) l_0_11_10) (* (* 2.0 l_0_11_16) l_0_11_17))))
 (let ((?x20513 (- (+ (+ (+ (+ (- (- ?x20498 ?x20371) ?x20374) ?x20502) ?x20505) ?x20508) ?x20511) ?x20336)))
 (let ((?x20528 (- (- (- (- (- (+ (+ ?x20513 ?x20386) ?x20389) ?x20517) ?x20520) ?x20523) ?x20526) ?x19863)))
 (= (- (- ?x20528 ?x19868) ?x19879) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20584 (* (* 8.0 l_0_11_40) l_0_11_44)))
 (let ((?x20581 (* (* 8.0 l_0_11_39) l_0_11_43)))
 (let ((?x20578 (* (* 8.0 l_0_11_38) l_0_11_42)))
 (let ((?x20575 (* (* 8.0 l_0_11_37) l_0_11_41)))
 (let ((?x20202 (* 4.0 l_0_11_33)))
 (let ((?x20465 (* ?x20202 l_0_11_42)))
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20276 (* ?x20236 l_0_11_38)))
 (let ((?x20199 (* 4.0 l_0_11_32)))
 (let ((?x20462 (* ?x20199 l_0_11_41)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20273 (* ?x20230 l_0_11_37)))
 (let ((?x20568 (* (* 8.0 l_0_11_25) l_0_11_29)))
 (let ((?x20565 (* (* 8.0 l_0_11_24) l_0_11_28)))
 (let ((?x20562 (* (* 8.0 l_0_11_23) l_0_11_27)))
 (let ((?x20559 (* (* 8.0 l_0_11_22) l_0_11_26)))
 (let ((?x20324 (* 4.0 l_0_11_18)))
 (let ((?x20453 (* ?x20324 l_0_11_27)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20266 (* ?x20223 l_0_11_23)))
 (let ((?x20321 (* 4.0 l_0_11_17)))
 (let ((?x20450 (* ?x20321 l_0_11_26)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20262 (* ?x20219 l_0_11_22)))
 (let ((?x20446 (* 2.0 l_0_11_13)))
 (let ((?x20552 (* ?x20446 l_0_11_9)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x20550 (* ?x20138 l_0_11_8)))
 (let ((?x14767 (* 2.0 l_0_11_11)))
 (let ((?x20548 (* ?x14767 l_0_11_7)))
 (let ((?x20554 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x20548) ?x20550) ?x20552) ?x20262)))
 (let ((?x20569 (+ (+ (+ (+ (- (+ (- ?x20554 ?x20450) ?x20266) ?x20453) ?x20559) ?x20562) ?x20565) ?x20568)))
 (let ((?x20582 (- (- (- (+ (- (+ (- ?x20569 ?x20273) ?x20462) ?x20276) ?x20465) ?x20575) ?x20578) ?x20581)))
 (= (- ?x20582 ?x20584) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20653 (* (* 4.0 l_0_11_45) l_0_11_45)))
 (let ((?x20650 (* (* 4.0 l_0_11_44) l_0_11_44)))
 (let ((?x20647 (* (* 4.0 l_0_11_43) l_0_11_43)))
 (let ((?x20644 (* (* 4.0 l_0_11_42) l_0_11_42)))
 (let ((?x20641 (* (* 4.0 l_0_11_41) l_0_11_41)))
 (let ((?x20236 (* 8.0 l_0_11_33)))
 (let ((?x20302 (* ?x20236 l_0_11_42)))
 (let ((?x20230 (* 8.0 l_0_11_32)))
 (let ((?x20299 (* ?x20230 l_0_11_41)))
 (let ((?x20635 (* l_0_11_30 l_0_11_30)))
 (let ((?x20636 (* 4.0 ?x20635)))
 (let ((?x20632 (* l_0_11_29 l_0_11_29)))
 (let ((?x20633 (* 4.0 ?x20632)))
 (let ((?x20629 (* l_0_11_28 l_0_11_28)))
 (let ((?x20630 (* 4.0 ?x20629)))
 (let ((?x20626 (* l_0_11_27 l_0_11_27)))
 (let ((?x20627 (* 4.0 ?x20626)))
 (let ((?x20623 (* l_0_11_26 l_0_11_26)))
 (let ((?x20624 (* 4.0 ?x20623)))
 (let ((?x20223 (* 8.0 l_0_11_18)))
 (let ((?x20296 (* ?x20223 l_0_11_27)))
 (let ((?x20219 (* 8.0 l_0_11_17)))
 (let ((?x20293 (* ?x20219 l_0_11_26)))
 (let ((?x20619 (* l_0_11_15 l_0_11_15)))
 (let ((?x20617 (* l_0_11_14 l_0_11_14)))
 (let ((?x20615 (* l_0_11_13 l_0_11_13)))
 (let ((?x20616 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x20615)))
 (let ((?x20631 (+ (+ (+ (+ (+ (- (- ?x20616 ?x20617) ?x20619) ?x20293) ?x20296) ?x20624) ?x20627) ?x20630)))
 (let ((?x20648 (- (- (- (- (- (+ (+ ?x20631 ?x20633) ?x20636) ?x20299) ?x20302) ?x20641) ?x20644) ?x20647)))
 (= (- (- ?x20648 ?x20650) ?x20653) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x20678 (* l_0_11_76 l_0_11_76)))
 (let ((?x20676 (* l_0_11_61 l_0_11_61)))
 (let ((?x20675 (- (* 1.0 (* l_0_11_1 l_0_11_1)) (* (* 1.0 l_0_11_46) l_0_11_46))))
 (= (- (- ?x20675 ?x20676) ?x20678) 0.0)))))
(assert
 (let ((?x20407 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x20404 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x20401 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x19842 (* ?x19766 l_0_11_37)))
 (let ((?x19767 (* ?x19766 l_0_11_34)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x19839 (* ?x19762 l_0_11_22)))
 (let ((?x20696 (+ (- (+ (+ (* (* (- 4.0) l_0_11_16) l_0_11_19) ?x19839) ?x19767) ?x19842) ?x20401)))
 (let ((?x20703 (- (+ (- ?x20696 (* (* 2.0 l_0_11_49) l_0_11_52)) ?x20404) (* (* 2.0 l_0_11_50) l_0_11_53))))
 (let ((?x20710 (- (+ (- ?x20703 (* (* 2.0 l_0_11_51) l_0_11_54)) ?x20407) (* (* 2.0 l_0_11_64) l_0_11_67))))
 (let ((?x20716 (- (- ?x20710 (* (* 2.0 l_0_11_65) l_0_11_68)) (* (* 2.0 l_0_11_66) l_0_11_69))))
 (let ((?x20722 (- (- ?x20716 (* (* 2.0 l_0_11_79) l_0_11_82)) (* (* 2.0 l_0_11_80) l_0_11_83))))
 (= (- ?x20722 (* (* 2.0 l_0_11_81) l_0_11_84)) 0.0)))))))))))))))
(assert
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x20762 (* ?x19766 l_0_11_41)))
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20057 (* ?x20013 l_0_11_34)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x20759 (* ?x19762 l_0_11_26)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x20047 (* ?x6351 l_0_11_19)))
 (let ((?x20446 (* 2.0 l_0_11_13)))
 (let ((?x20447 (* ?x20446 l_0_11_6)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x15117 (* ?x20138 l_0_11_5)))
 (let ((?x20760 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x15117) ?x20447) ?x20047) ?x20759)))
 (let ((?x20767 (- (- (- (- ?x20760 ?x20057) ?x20762) (* (* 2.0 l_0_11_49) l_0_11_56)) (* (* 2.0 l_0_11_50) l_0_11_57))))
 (let ((?x20771 (- (- ?x20767 (* (* 2.0 l_0_11_51) l_0_11_58)) (* (* 2.0 l_0_11_64) l_0_11_71))))
 (let ((?x20775 (- (- ?x20771 (* (* 2.0 l_0_11_65) l_0_11_72)) (* (* 2.0 l_0_11_66) l_0_11_73))))
 (let ((?x20779 (- (- ?x20775 (* (* 2.0 l_0_11_79) l_0_11_86)) (* (* 2.0 l_0_11_80) l_0_11_87))))
 (= (- ?x20779 (* (* 2.0 l_0_11_81) l_0_11_88)) 0.0)))))))))))))))))))
(assert
 (let ((?x19766 (* 4.0 l_0_11_31)))
 (let ((?x20762 (* ?x19766 l_0_11_41)))
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20104 (* ?x20013 l_0_11_37)))
 (let ((?x19762 (* 4.0 l_0_11_16)))
 (let ((?x20759 (* ?x19762 l_0_11_26)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x7629 (* ?x6351 l_0_11_22)))
 (let ((?x20446 (* 2.0 l_0_11_13)))
 (let ((?x20552 (* ?x20446 l_0_11_9)))
 (let ((?x20138 (* 2.0 l_0_11_12)))
 (let ((?x20550 (* ?x20138 l_0_11_8)))
 (let ((?x14767 (* 2.0 l_0_11_11)))
 (let ((?x20548 (* ?x14767 l_0_11_7)))
 (let ((?x20810 (+ (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x20548) ?x20550) ?x20552) ?x7629)))
 (let ((?x20816 (- (+ (- (- ?x20810 ?x20759) ?x20104) ?x20762) (* (* 2.0 l_0_11_52) l_0_11_56))))
 (let ((?x20822 (- (- ?x20816 (* (* 2.0 l_0_11_53) l_0_11_57)) (* (* 2.0 l_0_11_54) l_0_11_58))))
 (let ((?x20828 (- (- ?x20822 (* (* 2.0 l_0_11_55) l_0_11_59)) (* (* 2.0 l_0_11_67) l_0_11_71))))
 (let ((?x20834 (- (- ?x20828 (* (* 2.0 l_0_11_68) l_0_11_72)) (* (* 2.0 l_0_11_69) l_0_11_73))))
 (let ((?x20840 (- (- ?x20834 (* (* 2.0 l_0_11_70) l_0_11_74)) (* (* 2.0 l_0_11_82) l_0_11_86))))
 (let ((?x20846 (- (- ?x20840 (* (* 2.0 l_0_11_83) l_0_11_87)) (* (* 2.0 l_0_11_84) l_0_11_88))))
 (= (- ?x20846 (* (* 2.0 l_0_11_85) l_0_11_89)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x20911 (* l_0_11_90 l_0_11_90)))
 (let ((?x20909 (* l_0_11_89 l_0_11_89)))
 (let ((?x20907 (* l_0_11_88 l_0_11_88)))
 (let ((?x20905 (* l_0_11_87 l_0_11_87)))
 (let ((?x20903 (* l_0_11_86 l_0_11_86)))
 (let ((?x20901 (* l_0_11_75 l_0_11_75)))
 (let ((?x20899 (* l_0_11_74 l_0_11_74)))
 (let ((?x20897 (* l_0_11_73 l_0_11_73)))
 (let ((?x20895 (* l_0_11_72 l_0_11_72)))
 (let ((?x20893 (* l_0_11_71 l_0_11_71)))
 (let ((?x20013 (* 8.0 l_0_11_31)))
 (let ((?x20145 (* ?x20013 l_0_11_41)))
 (let ((?x6351 (* 8.0 l_0_11_16)))
 (let ((?x20142 (* ?x6351 l_0_11_26)))
 (let ((?x15586 (+ (* 1.0 (* l_0_11_11 l_0_11_11)) (* 1.0 (* l_0_11_12 l_0_11_12)))))
 (let ((?x15537 (+ (+ ?x15586 (* 1.0 (* l_0_11_13 l_0_11_13))) (* 1.0 (* l_0_11_14 l_0_11_14)))))
 (let ((?x20880 (- (- (+ (+ ?x15537 (* 1.0 (* l_0_11_15 l_0_11_15))) ?x20142) ?x20145) (* (* 1.0 l_0_11_56) l_0_11_56))))
 (let ((?x20886 (- (- ?x20880 (* (* 1.0 l_0_11_57) l_0_11_57)) (* (* 1.0 l_0_11_58) l_0_11_58))))
 (let ((?x20892 (- (- ?x20886 (* (* 1.0 l_0_11_59) l_0_11_59)) (* (* 1.0 l_0_11_60) l_0_11_60))))
 (let ((?x20906 (- (- (- (- (- (- (- ?x20892 ?x20893) ?x20895) ?x20897) ?x20899) ?x20901) ?x20903) ?x20905)))
 (= (- (- (- ?x20906 ?x20907) ?x20909) ?x20911) 0.0))))))))))))))))))))))
(assert
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20938 (* ?x19924 l_0_11_34)))
 (let ((?x20333 (* l_0_11_21 l_0_11_21)))
 (let ((?x20936 (* 2.0 ?x20333)))
 (let ((?x20330 (* l_0_11_20 l_0_11_20)))
 (let ((?x20934 (* 2.0 ?x20330)))
 (let ((?x20327 (* l_0_11_19 l_0_11_19)))
 (let ((?x20932 (* 2.0 ?x20327)))
 (let ((?x20939 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_16) l_0_11_19) ?x20932) ?x20934) ?x20936) ?x20938)))
 (let ((?x20945 (- (- ?x20939 (* (* 2.0 l_0_11_34) l_0_11_34)) (* (* 2.0 l_0_11_35) l_0_11_35))))
 (= (- ?x20945 (* (* 2.0 l_0_11_36) l_0_11_36)) 0.0))))))))))))
(assert
 (let ((?x20348 (* 4.0 l_0_11_36)))
 (let ((?x20976 (* ?x20348 l_0_11_39)))
 (let ((?x20345 (* 4.0 l_0_11_35)))
 (let ((?x20973 (* ?x20345 l_0_11_38)))
 (let ((?x20342 (* 4.0 l_0_11_34)))
 (let ((?x20970 (* ?x20342 l_0_11_37)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20968 (* ?x19924 l_0_11_37)))
 (let ((?x20962 (* 4.0 l_0_11_21)))
 (let ((?x20963 (* ?x20962 l_0_11_24)))
 (let ((?x20956 (* 4.0 l_0_11_20)))
 (let ((?x20957 (* ?x20956 l_0_11_23)))
 (let ((?x15695 (* 4.0 l_0_11_19)))
 (let ((?x20951 (* ?x15695 l_0_11_22)))
 (let ((?x20955 (- (+ (* (* (- 2.0) l_0_11_16) l_0_11_22) ?x20951) (* (* 2.0 l_0_11_19) l_0_11_19))))
 (let ((?x20967 (- (+ (- (+ ?x20955 ?x20957) (* (* 2.0 l_0_11_20) l_0_11_20)) ?x20963) (* (* 2.0 l_0_11_21) l_0_11_21))))
 (let ((?x20974 (- (+ (- (+ ?x20967 ?x20968) ?x20970) (* 2.0 (* l_0_11_34 l_0_11_34))) ?x20973)))
 (let ((?x20978 (+ (- (+ ?x20974 (* 2.0 (* l_0_11_35 l_0_11_35))) ?x20976) (* 2.0 (* l_0_11_36 l_0_11_36)))))
 (= ?x20978 0.0))))))))))))))))))))
(assert
 (let ((?x20348 (* 4.0 l_0_11_36)))
 (let ((?x20349 (* ?x20348 l_0_11_36)))
 (let ((?x21026 (* ?x20348 l_0_11_43)))
 (let ((?x20345 (* 4.0 l_0_11_35)))
 (let ((?x20346 (* ?x20345 l_0_11_35)))
 (let ((?x21023 (* ?x20345 l_0_11_42)))
 (let ((?x20342 (* 4.0 l_0_11_34)))
 (let ((?x20343 (* ?x20342 l_0_11_34)))
 (let ((?x21020 (* ?x20342 l_0_11_41)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x21018 (* ?x19924 l_0_11_41)))
 (let ((?x20333 (* l_0_11_21 l_0_11_21)))
 (let ((?x20334 (* 4.0 ?x20333)))
 (let ((?x20962 (* 4.0 l_0_11_21)))
 (let ((?x21015 (* ?x20962 l_0_11_28)))
 (let ((?x20330 (* l_0_11_20 l_0_11_20)))
 (let ((?x20331 (* 4.0 ?x20330)))
 (let ((?x20956 (* 4.0 l_0_11_20)))
 (let ((?x21012 (* ?x20956 l_0_11_27)))
 (let ((?x20327 (* l_0_11_19 l_0_11_19)))
 (let ((?x20328 (* 4.0 ?x20327)))
 (let ((?x15695 (* 4.0 l_0_11_19)))
 (let ((?x21009 (* ?x15695 l_0_11_26)))
 (let ((?x21014 (+ (+ (+ (+ (* (* (- 2.0) l_0_11_16) l_0_11_26) ?x21009) ?x20328) ?x21012) ?x20331)))
 (let ((?x21025 (- (- (- (- (+ (+ (+ ?x21014 ?x21015) ?x20334) ?x21018) ?x21020) ?x20343) ?x21023) ?x20346)))
 (= (- (- ?x21025 ?x21026) ?x20349) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6148 (* l_0_11_33 l_0_11_33)))
 (let ((?x14818 (* l_0_11_32 l_0_11_32)))
 (let ((?x15798 (+ (- (* (- l_0_11_17) l_0_11_17) (* l_0_11_18 l_0_11_18)) ?x14818)))
 (= (+ ?x15798 ?x6148) 0.0)))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21049 (* ?x20239 l_0_11_35)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21047 (* ?x20233 l_0_11_34)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x21045 (* ?x20268 l_0_11_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_19) ?x21045) ?x21047) ?x21049) 0.0))))))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21064 (* ?x20239 l_0_11_38)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21062 (* ?x20233 l_0_11_37)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x21060 (* ?x20268 l_0_11_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_22) ?x21060) ?x21062) ?x21064) 0.0))))))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21075 (* ?x20239 l_0_11_42)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21073 (* ?x20233 l_0_11_41)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x15838 (* ?x20268 l_0_11_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_17) l_0_11_26) ?x15838) ?x21073) ?x21075) 0.0))))))))
(assert
 (let ((?x15020 (* l_0_11_36 l_0_11_36)))
 (let ((?x15012 (* l_0_11_35 l_0_11_35)))
 (let ((?x20360 (* l_0_11_34 l_0_11_34)))
 (let ((?x20333 (* l_0_11_21 l_0_11_21)))
 (let ((?x21091 (- (- (* (- l_0_11_19) l_0_11_19) (* l_0_11_20 l_0_11_20)) ?x20333)))
 (= (+ (+ (+ ?x21091 ?x20360) ?x15012) ?x15020) 0.0)))))))
(assert
 (let ((?x20946 (* 2.0 l_0_11_36)))
 (let ((?x21115 (* ?x20946 l_0_11_39)))
 (let ((?x20943 (* 2.0 l_0_11_35)))
 (let ((?x21113 (* ?x20943 l_0_11_38)))
 (let ((?x20940 (* 2.0 l_0_11_34)))
 (let ((?x21111 (* ?x20940 l_0_11_37)))
 (let ((?x20965 (* 2.0 l_0_11_21)))
 (let ((?x21109 (* ?x20965 l_0_11_24)))
 (let ((?x20959 (* 2.0 l_0_11_20)))
 (let ((?x21107 (* ?x20959 l_0_11_23)))
 (let ((?x21114 (+ (+ (- (- (* (* (- 2.0) l_0_11_19) l_0_11_22) ?x21107) ?x21109) ?x21111) ?x21113)))
 (= (+ ?x21114 ?x21115) 0.0)))))))))))))
(assert
 (let ((?x20946 (* 2.0 l_0_11_36)))
 (let ((?x21134 (* ?x20946 l_0_11_43)))
 (let ((?x20943 (* 2.0 l_0_11_35)))
 (let ((?x21132 (* ?x20943 l_0_11_42)))
 (let ((?x20940 (* 2.0 l_0_11_34)))
 (let ((?x21130 (* ?x20940 l_0_11_41)))
 (let ((?x20965 (* 2.0 l_0_11_21)))
 (let ((?x21128 (* ?x20965 l_0_11_28)))
 (let ((?x20959 (* 2.0 l_0_11_20)))
 (let ((?x21126 (* ?x20959 l_0_11_27)))
 (let ((?x21133 (+ (+ (- (- (* (* (- 2.0) l_0_11_19) l_0_11_26) ?x21126) ?x21128) ?x21130) ?x21132)))
 (= (+ ?x21133 ?x21134) 0.0)))))))))))))
(assert
 (let ((?x15064 (* l_0_11_40 l_0_11_40)))
 (let ((?x8431 (* l_0_11_39 l_0_11_39)))
 (let ((?x8425 (* l_0_11_38 l_0_11_38)))
 (let ((?x20535 (* l_0_11_37 l_0_11_37)))
 (let ((?x15020 (* l_0_11_36 l_0_11_36)))
 (let ((?x15012 (* l_0_11_35 l_0_11_35)))
 (let ((?x20360 (* l_0_11_34 l_0_11_34)))
 (let ((?x20510 (* l_0_11_25 l_0_11_25)))
 (let ((?x20507 (* l_0_11_24 l_0_11_24)))
 (let ((?x20504 (* l_0_11_23 l_0_11_23)))
 (let ((?x20501 (* l_0_11_22 l_0_11_22)))
 (let ((?x20333 (* l_0_11_21 l_0_11_21)))
 (let ((?x21145 (- (+ (+ (* l_0_11_19 l_0_11_19) (* l_0_11_20 l_0_11_20)) ?x20333) ?x20501)))
 (let ((?x21160 (+ (- (- (- (- (- (- ?x21145 ?x20504) ?x20507) ?x20510) ?x20360) ?x15012) ?x15020) ?x20535)))
 (= (+ (+ (+ ?x21160 ?x8425) ?x8431) ?x15064) 0.0))))))))))))))))
(assert
 (let ((?x21195 (* 2.0 l_0_11_40)))
 (let ((?x21196 (* ?x21195 l_0_11_44)))
 (let ((?x21192 (* 2.0 l_0_11_39)))
 (let ((?x21193 (* ?x21192 l_0_11_43)))
 (let ((?x21189 (* 2.0 l_0_11_38)))
 (let ((?x21190 (* ?x21189 l_0_11_42)))
 (let ((?x21186 (* 2.0 l_0_11_37)))
 (let ((?x21187 (* ?x21186 l_0_11_41)))
 (let ((?x21183 (* 2.0 l_0_11_25)))
 (let ((?x21184 (* ?x21183 l_0_11_29)))
 (let ((?x21180 (* 2.0 l_0_11_24)))
 (let ((?x21181 (* ?x21180 l_0_11_28)))
 (let ((?x21177 (* 2.0 l_0_11_23)))
 (let ((?x21178 (* ?x21177 l_0_11_27)))
 (let ((?x21188 (+ (- (- (- (* (* (- 2.0) l_0_11_22) l_0_11_26) ?x21178) ?x21181) ?x21184) ?x21187)))
 (= (+ (+ (+ ?x21188 ?x21190) ?x21193) ?x21196) 0.0)))))))))))))))))
(assert
 (let ((?x8760 (* l_0_11_45 l_0_11_45)))
 (let ((?x15359 (* l_0_11_44 l_0_11_44)))
 (let ((?x15298 (* l_0_11_43 l_0_11_43)))
 (let ((?x15310 (* l_0_11_42 l_0_11_42)))
 (let ((?x8706 (* l_0_11_41 l_0_11_41)))
 (let ((?x20635 (* l_0_11_30 l_0_11_30)))
 (let ((?x20632 (* l_0_11_29 l_0_11_29)))
 (let ((?x20629 (* l_0_11_28 l_0_11_28)))
 (let ((?x15891 (- (- (* (- l_0_11_26) l_0_11_26) (* l_0_11_27 l_0_11_27)) ?x20629)))
 (let ((?x21213 (+ (+ (+ (+ (+ (- (- ?x15891 ?x20632) ?x20635) ?x8706) ?x15310) ?x15298) ?x15359) ?x8760)))
 (= ?x21213 0.0))))))))))))
(assert
 (let ((?x20348 (* 4.0 l_0_11_36)))
 (let ((?x20976 (* ?x20348 l_0_11_39)))
 (let ((?x20345 (* 4.0 l_0_11_35)))
 (let ((?x20973 (* ?x20345 l_0_11_38)))
 (let ((?x20342 (* 4.0 l_0_11_34)))
 (let ((?x20970 (* ?x20342 l_0_11_37)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20938 (* ?x19924 l_0_11_34)))
 (let ((?x20962 (* 4.0 l_0_11_21)))
 (let ((?x20963 (* ?x20962 l_0_11_24)))
 (let ((?x20956 (* 4.0 l_0_11_20)))
 (let ((?x20957 (* ?x20956 l_0_11_23)))
 (let ((?x15695 (* 4.0 l_0_11_19)))
 (let ((?x20951 (* ?x15695 l_0_11_22)))
 (let ((?x21226 (+ (- (- (- (* (* 2.0 l_0_11_16) l_0_11_19) ?x20951) ?x20957) ?x20963) (* 2.0 (* l_0_11_22 l_0_11_22)))))
 (let ((?x21230 (+ (+ ?x21226 (* 2.0 (* l_0_11_23 l_0_11_23))) (* 2.0 (* l_0_11_24 l_0_11_24)))))
 (let ((?x21235 (+ (+ (- (+ ?x21230 (* 2.0 (* l_0_11_25 l_0_11_25))) ?x20938) ?x20970) ?x20973)))
 (let ((?x21240 (- (- (+ ?x21235 ?x20976) (* (* 2.0 l_0_11_37) l_0_11_37)) (* (* 2.0 l_0_11_38) l_0_11_38))))
 (let ((?x21244 (- (- ?x21240 (* (* 2.0 l_0_11_39) l_0_11_39)) (* (* 2.0 l_0_11_40) l_0_11_40))))
 (= ?x21244 0.0)))))))))))))))))))))
(assert
 (let ((?x15064 (* l_0_11_40 l_0_11_40)))
 (let ((?x9613 (* 2.0 ?x15064)))
 (let ((?x8431 (* l_0_11_39 l_0_11_39)))
 (let ((?x9609 (* 2.0 ?x8431)))
 (let ((?x8425 (* l_0_11_38 l_0_11_38)))
 (let ((?x21263 (* 2.0 ?x8425)))
 (let ((?x20535 (* l_0_11_37 l_0_11_37)))
 (let ((?x9592 (* 2.0 ?x20535)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x20968 (* ?x19924 l_0_11_37)))
 (let ((?x21276 (- (* (* 2.0 l_0_11_16) l_0_11_22) (* (* 2.0 l_0_11_22) l_0_11_22))))
 (let ((?x21280 (- (- ?x21276 (* (* 2.0 l_0_11_23) l_0_11_23)) (* (* 2.0 l_0_11_24) l_0_11_24))))
 (let ((?x21285 (+ (+ (- (- ?x21280 (* (* 2.0 l_0_11_25) l_0_11_25)) ?x20968) ?x9592) ?x21263)))
 (= (+ (+ ?x21285 ?x9609) ?x9613) 0.0)))))))))))))))
(assert
 (let ((?x20525 (* 4.0 l_0_11_40)))
 (let ((?x20526 (* ?x20525 l_0_11_40)))
 (let ((?x21303 (* ?x20525 l_0_11_44)))
 (let ((?x20522 (* 4.0 l_0_11_39)))
 (let ((?x20523 (* ?x20522 l_0_11_39)))
 (let ((?x21300 (* ?x20522 l_0_11_43)))
 (let ((?x20519 (* 4.0 l_0_11_38)))
 (let ((?x20520 (* ?x20519 l_0_11_38)))
 (let ((?x21297 (* ?x20519 l_0_11_42)))
 (let ((?x20516 (* 4.0 l_0_11_37)))
 (let ((?x20517 (* ?x20516 l_0_11_37)))
 (let ((?x21294 (* ?x20516 l_0_11_41)))
 (let ((?x19924 (* 2.0 l_0_11_31)))
 (let ((?x21018 (* ?x19924 l_0_11_41)))
 (let ((?x20510 (* l_0_11_25 l_0_11_25)))
 (let ((?x20511 (* 4.0 ?x20510)))
 (let ((?x15982 (* (* 4.0 l_0_11_25) l_0_11_29)))
 (let ((?x20507 (* l_0_11_24 l_0_11_24)))
 (let ((?x20508 (* 4.0 ?x20507)))
 (let ((?x15985 (* (* 4.0 l_0_11_24) l_0_11_28)))
 (let ((?x20504 (* l_0_11_23 l_0_11_23)))
 (let ((?x20505 (* 4.0 ?x20504)))
 (let ((?x15989 (* (* 4.0 l_0_11_23) l_0_11_27)))
 (let ((?x20501 (* l_0_11_22 l_0_11_22)))
 (let ((?x20502 (* 4.0 ?x20501)))
 (let ((?x15992 (* (* 4.0 l_0_11_22) l_0_11_26)))
 (let ((?x8535 (+ (- (+ (- (* (* 2.0 l_0_11_16) l_0_11_26) ?x15992) ?x20502) ?x15989) ?x20505)))
 (let ((?x21296 (- (+ (- (+ (- (+ (- ?x8535 ?x15985) ?x20508) ?x15982) ?x20511) ?x21018) ?x21294) ?x20517)))
 (= (- (+ (- (+ (- (+ ?x21296 ?x21297) ?x20520) ?x21300) ?x20523) ?x21303) ?x20526) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6148 (* l_0_11_33 l_0_11_33)))
 (let ((?x14818 (* l_0_11_32 l_0_11_32)))
 (let ((?x21337 (- (- (+ (* l_0_11_17 l_0_11_17) (* l_0_11_18 l_0_11_18)) ?x14818) ?x6148)))
 (= ?x21337 0.0)))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21049 (* ?x20239 l_0_11_35)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21047 (* ?x20233 l_0_11_34)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x21045 (* ?x20268 l_0_11_20)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_19) ?x21045) ?x21047) ?x21049) 0.0))))))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21064 (* ?x20239 l_0_11_38)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21062 (* ?x20233 l_0_11_37)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x21060 (* ?x20268 l_0_11_23)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_22) ?x21060) ?x21062) ?x21064) 0.0))))))))
(assert
 (let ((?x20239 (* 2.0 l_0_11_33)))
 (let ((?x21075 (* ?x20239 l_0_11_42)))
 (let ((?x20233 (* 2.0 l_0_11_32)))
 (let ((?x21073 (* ?x20233 l_0_11_41)))
 (let ((?x20268 (* 2.0 l_0_11_18)))
 (let ((?x15838 (* ?x20268 l_0_11_27)))
 (= (- (- (+ (* (* 2.0 l_0_11_17) l_0_11_26) ?x15838) ?x21073) ?x21075) 0.0))))))))
(assert
 (let ((?x20946 (* 2.0 l_0_11_36)))
 (let ((?x21115 (* ?x20946 l_0_11_39)))
 (let ((?x20943 (* 2.0 l_0_11_35)))
 (let ((?x21113 (* ?x20943 l_0_11_38)))
 (let ((?x20940 (* 2.0 l_0_11_34)))
 (let ((?x21111 (* ?x20940 l_0_11_37)))
 (let ((?x20965 (* 2.0 l_0_11_21)))
 (let ((?x21109 (* ?x20965 l_0_11_24)))
 (let ((?x20959 (* 2.0 l_0_11_20)))
 (let ((?x21107 (* ?x20959 l_0_11_23)))
 (let ((?x21361 (- (- (+ (+ (* (* 2.0 l_0_11_19) l_0_11_22) ?x21107) ?x21109) ?x21111) ?x21113)))
 (= (- ?x21361 ?x21115) 0.0)))))))))))))
(assert
 (let ((?x20946 (* 2.0 l_0_11_36)))
 (let ((?x21134 (* ?x20946 l_0_11_43)))
 (let ((?x20943 (* 2.0 l_0_11_35)))
 (let ((?x21132 (* ?x20943 l_0_11_42)))
 (let ((?x20940 (* 2.0 l_0_11_34)))
 (let ((?x21130 (* ?x20940 l_0_11_41)))
 (let ((?x20965 (* 2.0 l_0_11_21)))
 (let ((?x21128 (* ?x20965 l_0_11_28)))
 (let ((?x20959 (* 2.0 l_0_11_20)))
 (let ((?x21126 (* ?x20959 l_0_11_27)))
 (let ((?x21370 (- (- (+ (+ (* (* 2.0 l_0_11_19) l_0_11_26) ?x21126) ?x21128) ?x21130) ?x21132)))
 (= (- ?x21370 ?x21134) 0.0)))))))))))))
(assert
 (let ((?x15064 (* l_0_11_40 l_0_11_40)))
 (let ((?x8431 (* l_0_11_39 l_0_11_39)))
 (let ((?x8425 (* l_0_11_38 l_0_11_38)))
 (let ((?x20535 (* l_0_11_37 l_0_11_37)))
 (let ((?x20510 (* l_0_11_25 l_0_11_25)))
 (let ((?x20507 (* l_0_11_24 l_0_11_24)))
 (let ((?x9921 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x20507) ?x20510)))
 (= (- (- (- (- ?x9921 ?x20535) ?x8425) ?x8431) ?x15064) 0.0)))))))))
(assert
 (let ((?x21195 (* 2.0 l_0_11_40)))
 (let ((?x21196 (* ?x21195 l_0_11_44)))
 (let ((?x21192 (* 2.0 l_0_11_39)))
 (let ((?x21193 (* ?x21192 l_0_11_43)))
 (let ((?x21189 (* 2.0 l_0_11_38)))
 (let ((?x21190 (* ?x21189 l_0_11_42)))
 (let ((?x21186 (* 2.0 l_0_11_37)))
 (let ((?x21187 (* ?x21186 l_0_11_41)))
 (let ((?x21183 (* 2.0 l_0_11_25)))
 (let ((?x21184 (* ?x21183 l_0_11_29)))
 (let ((?x21180 (* 2.0 l_0_11_24)))
 (let ((?x21181 (* ?x21180 l_0_11_28)))
 (let ((?x21177 (* 2.0 l_0_11_23)))
 (let ((?x21178 (* ?x21177 l_0_11_27)))
 (let ((?x21395 (- (+ (+ (+ (* (* 2.0 l_0_11_22) l_0_11_26) ?x21178) ?x21181) ?x21184) ?x21187)))
 (= (- (- (- ?x21395 ?x21190) ?x21193) ?x21196) 0.0)))))))))))))))))
(assert
 (let ((?x8760 (* l_0_11_45 l_0_11_45)))
 (let ((?x15359 (* l_0_11_44 l_0_11_44)))
 (let ((?x15298 (* l_0_11_43 l_0_11_43)))
 (let ((?x15310 (* l_0_11_42 l_0_11_42)))
 (let ((?x8706 (* l_0_11_41 l_0_11_41)))
 (let ((?x20635 (* l_0_11_30 l_0_11_30)))
 (let ((?x20632 (* l_0_11_29 l_0_11_29)))
 (let ((?x20629 (* l_0_11_28 l_0_11_28)))
 (let ((?x21410 (+ (+ (+ (* l_0_11_26 l_0_11_26) (* l_0_11_27 l_0_11_27)) ?x20629) ?x20632)))
 (= (- (- (- (- (- (+ ?x21410 ?x20635) ?x8706) ?x15310) ?x15298) ?x15359) ?x8760) 0.0)))))))))))
(assert
 (let ((?x20525 (* 4.0 l_0_11_40)))
 (let ((?x21303 (* ?x20525 l_0_11_44)))
 (let ((?x20522 (* 4.0 l_0_11_39)))
 (let ((?x21300 (* ?x20522 l_0_11_43)))
 (let ((?x20519 (* 4.0 l_0_11_38)))
 (let ((?x21297 (* ?x20519 l_0_11_42)))
 (let ((?x20516 (* 4.0 l_0_11_37)))
 (let ((?x21294 (* ?x20516 l_0_11_41)))
 (let ((?x20348 (* 4.0 l_0_11_36)))
 (let ((?x21026 (* ?x20348 l_0_11_43)))
 (let ((?x20397 (* 8.0 l_0_11_36)))
 (let ((?x20398 (* ?x20397 l_0_11_39)))
 (let ((?x20345 (* 4.0 l_0_11_35)))
 (let ((?x21023 (* ?x20345 l_0_11_42)))
 (let ((?x20394 (* 8.0 l_0_11_35)))
 (let ((?x20395 (* ?x20394 l_0_11_38)))
 (let ((?x20342 (* 4.0 l_0_11_34)))
 (let ((?x21020 (* ?x20342 l_0_11_41)))
 (let ((?x20391 (* 8.0 l_0_11_34)))
 (let ((?x20392 (* ?x20391 l_0_11_37)))
 (let ((?x15982 (* (* 4.0 l_0_11_25) l_0_11_29)))
 (let ((?x15985 (* (* 4.0 l_0_11_24) l_0_11_28)))
 (let ((?x15989 (* (* 4.0 l_0_11_23) l_0_11_27)))
 (let ((?x15992 (* (* 4.0 l_0_11_22) l_0_11_26)))
 (let ((?x20962 (* 4.0 l_0_11_21)))
 (let ((?x21015 (* ?x20962 l_0_11_28)))
 (let ((?x20382 (* 8.0 l_0_11_21)))
 (let ((?x20383 (* ?x20382 l_0_11_24)))
 (let ((?x20956 (* 4.0 l_0_11_20)))
 (let ((?x21012 (* ?x20956 l_0_11_27)))
 (let ((?x20379 (* 8.0 l_0_11_20)))
 (let ((?x20380 (* ?x20379 l_0_11_23)))
 (let ((?x15695 (* 4.0 l_0_11_19)))
 (let ((?x21009 (* ?x15695 l_0_11_26)))
 (let ((?x20376 (* 8.0 l_0_11_19)))
 (let ((?x20377 (* ?x20376 l_0_11_22)))
 (let ((?x10050 (+ (+ (- (+ (- (+ (- ?x20377 ?x21009) ?x20380) ?x21012) ?x20383) ?x21015) ?x15992) ?x15989)))
 (let ((?x21435 (- (+ (- (+ (- (+ (+ ?x10050 ?x15985) ?x15982) ?x20392) ?x21020) ?x20395) ?x21023) ?x20398)))
 (= (- (- (- (- (+ ?x21435 ?x21026) ?x21294) ?x21297) ?x21300) ?x21303) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20397 (* 8.0 l_0_11_36)))
 (let ((?x20471 (* ?x20397 l_0_11_43)))
 (let ((?x20394 (* 8.0 l_0_11_35)))
 (let ((?x20469 (* ?x20394 l_0_11_42)))
 (let ((?x20391 (* 8.0 l_0_11_34)))
 (let ((?x20467 (* ?x20391 l_0_11_41)))
 (let ((?x20635 (* l_0_11_30 l_0_11_30)))
 (let ((?x21457 (* 2.0 ?x20635)))
 (let ((?x20632 (* l_0_11_29 l_0_11_29)))
 (let ((?x21455 (* 2.0 ?x20632)))
 (let ((?x20629 (* l_0_11_28 l_0_11_28)))
 (let ((?x21453 (* 2.0 ?x20629)))
 (let ((?x20626 (* l_0_11_27 l_0_11_27)))
 (let ((?x10088 (* 2.0 ?x20626)))
 (let ((?x20623 (* l_0_11_26 l_0_11_26)))
 (let ((?x10119 (* 2.0 ?x20623)))
 (let ((?x20382 (* 8.0 l_0_11_21)))
 (let ((?x20459 (* ?x20382 l_0_11_28)))
 (let ((?x20379 (* 8.0 l_0_11_20)))
 (let ((?x20457 (* ?x20379 l_0_11_27)))
 (let ((?x20376 (* 8.0 l_0_11_19)))
 (let ((?x20455 (* ?x20376 l_0_11_26)))
 (let ((?x21458 (+ (+ (+ (+ (+ (+ (+ ?x20455 ?x20457) ?x20459) ?x10119) ?x10088) ?x21453) ?x21455) ?x21457)))
 (let ((?x21464 (- (- (- (- ?x21458 ?x20467) ?x20469) ?x20471) (* (* 2.0 l_0_11_41) l_0_11_41))))
 (let ((?x21470 (- (- ?x21464 (* (* 2.0 l_0_11_42) l_0_11_42)) (* (* 2.0 l_0_11_43) l_0_11_43))))
 (let ((?x21476 (- (- ?x21470 (* (* 2.0 l_0_11_44) l_0_11_44)) (* (* 2.0 l_0_11_45) l_0_11_45))))
 (= ?x21476 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8760 (* l_0_11_45 l_0_11_45)))
 (let ((?x10097 (* 2.0 ?x8760)))
 (let ((?x15359 (* l_0_11_44 l_0_11_44)))
 (let ((?x9712 (* 2.0 ?x15359)))
 (let ((?x15298 (* l_0_11_43 l_0_11_43)))
 (let ((?x9778 (* 2.0 ?x15298)))
 (let ((?x15310 (* l_0_11_42 l_0_11_42)))
 (let ((?x21481 (* 2.0 ?x15310)))
 (let ((?x8706 (* l_0_11_41 l_0_11_41)))
 (let ((?x10130 (* 2.0 ?x8706)))
 (let ((?x20584 (* (* 8.0 l_0_11_40) l_0_11_44)))
 (let ((?x20581 (* (* 8.0 l_0_11_39) l_0_11_43)))
 (let ((?x20578 (* (* 8.0 l_0_11_38) l_0_11_42)))
 (let ((?x20575 (* (* 8.0 l_0_11_37) l_0_11_41)))
 (let ((?x20568 (* (* 8.0 l_0_11_25) l_0_11_29)))
 (let ((?x20565 (* (* 8.0 l_0_11_24) l_0_11_28)))
 (let ((?x20562 (* (* 8.0 l_0_11_23) l_0_11_27)))
 (let ((?x20559 (* (* 8.0 l_0_11_22) l_0_11_26)))
 (let ((?x21495 (- (+ (+ (+ ?x20559 ?x20562) ?x20565) ?x20568) (* (* 2.0 l_0_11_26) l_0_11_26))))
 (let ((?x21501 (- (- ?x21495 (* (* 2.0 l_0_11_27) l_0_11_27)) (* (* 2.0 l_0_11_28) l_0_11_28))))
 (let ((?x21507 (- (- ?x21501 (* (* 2.0 l_0_11_29) l_0_11_29)) (* (* 2.0 l_0_11_30) l_0_11_30))))
 (let ((?x21514 (+ (+ (+ (- (- (- (- ?x21507 ?x20575) ?x20578) ?x20581) ?x20584) ?x10130) ?x21481) ?x9778)))
 (= (+ (+ ?x21514 ?x9712) ?x10097) 0.0))))))))))))))))))))))))
(assert
 (let ((?x20653 (* (* 4.0 l_0_11_45) l_0_11_45)))
 (let ((?x20650 (* (* 4.0 l_0_11_44) l_0_11_44)))
 (let ((?x20647 (* (* 4.0 l_0_11_43) l_0_11_43)))
 (let ((?x20644 (* (* 4.0 l_0_11_42) l_0_11_42)))
 (let ((?x20641 (* (* 4.0 l_0_11_41) l_0_11_41)))
 (let ((?x20635 (* l_0_11_30 l_0_11_30)))
 (let ((?x20636 (* 4.0 ?x20635)))
 (let ((?x20632 (* l_0_11_29 l_0_11_29)))
 (let ((?x20633 (* 4.0 ?x20632)))
 (let ((?x20629 (* l_0_11_28 l_0_11_28)))
 (let ((?x20630 (* 4.0 ?x20629)))
 (let ((?x20626 (* l_0_11_27 l_0_11_27)))
 (let ((?x20627 (* 4.0 ?x20626)))
 (let ((?x20623 (* l_0_11_26 l_0_11_26)))
 (let ((?x20624 (* 4.0 ?x20623)))
 (let ((?x21527 (- (- (- (+ (+ (+ (+ ?x20624 ?x20627) ?x20630) ?x20633) ?x20636) ?x20641) ?x20644) ?x20647)))
 (= (- (- ?x21527 ?x20650) ?x20653) 0.0))))))))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x21565 (* ?x21564 l_0_12_31)))
 (let ((?x21561 (* l_0_12_16 l_0_12_16)))
 (let ((?x21562 (* 4.0 ?x21561)))
 (let ((?x21563 (+ (- (* (* 2.0 l_0_12_1) l_0_12_2) (* l_0_12_1 l_0_12_1)) ?x21562)))
 (let ((?x21572 (- (- (- ?x21563 ?x21565) (* (* 2.0 l_0_12_46) l_0_12_47)) (* (* 2.0 l_0_12_61) l_0_12_62))))
 (let ((?x21578 (- (- ?x21572 (* (* 2.0 l_0_12_76) l_0_12_77)) (* (* 2.0 l_0_12_91) l_0_12_92))))
 (= (+ ?x21578 4.0) 0.0)))))))))
(assert
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x21565 (* ?x21564 l_0_12_31)))
 (let ((?x21561 (* l_0_12_16 l_0_12_16)))
 (let ((?x21562 (* 4.0 ?x21561)))
 (let ((?x21606 (- (* (* 2.0 l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_101) l_0_12_91))))
 (let ((?x21612 (- (- (- (+ ?x21606 ?x21562) ?x21565) (* (* 2.0 l_0_12_46) l_0_12_56)) (* (* 2.0 l_0_12_61) l_0_12_71))))
 (= (+ (- ?x21612 (* (* 2.0 l_0_12_76) l_0_12_86)) 4.0) 0.0))))))))
(assert
 (let ((?x21668 (* l_0_12_96 l_0_12_96)))
 (let ((?x21666 (* l_0_12_95 l_0_12_95)))
 (let ((?x21664 (* l_0_12_94 l_0_12_94)))
 (let ((?x21662 (* l_0_12_81 l_0_12_81)))
 (let ((?x21660 (* l_0_12_80 l_0_12_80)))
 (let ((?x21658 (* l_0_12_79 l_0_12_79)))
 (let ((?x21656 (* l_0_12_66 l_0_12_66)))
 (let ((?x21654 (* l_0_12_65 l_0_12_65)))
 (let ((?x21652 (* l_0_12_64 l_0_12_64)))
 (let ((?x21587 (* l_0_12_31 l_0_12_31)))
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x21631 (* ?x21564 l_0_12_34)))
 (let ((?x21632 (- (- (* (* 4.0 l_0_12_16) l_0_12_19) (* l_0_12_16 l_0_12_16)) ?x21631)))
 (let ((?x21639 (- (+ (+ ?x21632 ?x21587) (* 1.0 (* l_0_12_4 l_0_12_4))) (* (* 1.0 l_0_12_49) l_0_12_49))))
 (let ((?x21645 (- (+ ?x21639 (* 1.0 (* l_0_12_5 l_0_12_5))) (* (* 1.0 l_0_12_50) l_0_12_50))))
 (let ((?x21651 (+ (- ?x21645 (* (* 1.0 l_0_12_51) l_0_12_51)) (* 1.0 (* l_0_12_6 l_0_12_6)))))
 (let ((?x21665 (- (- (- (- (- (- (- ?x21651 ?x21652) ?x21654) ?x21656) ?x21658) ?x21660) ?x21662) ?x21664)))
 (= (- (- (- ?x21665 ?x21666) ?x21668) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x21766 (* l_0_12_99 l_0_12_99)))
 (let ((?x21764 (* l_0_12_98 l_0_12_98)))
 (let ((?x21762 (* l_0_12_97 l_0_12_97)))
 (let ((?x21757 (* l_0_12_85 l_0_12_85)))
 (let ((?x21755 (* l_0_12_84 l_0_12_84)))
 (let ((?x21753 (* l_0_12_83 l_0_12_83)))
 (let ((?x21751 (* l_0_12_82 l_0_12_82)))
 (let ((?x21746 (* l_0_12_70 l_0_12_70)))
 (let ((?x21741 (* l_0_12_69 l_0_12_69)))
 (let ((?x21739 (* l_0_12_68 l_0_12_68)))
 (let ((?x21737 (* l_0_12_67 l_0_12_67)))
 (let ((?x21587 (* l_0_12_31 l_0_12_31)))
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x21722 (* ?x21564 l_0_12_37)))
 (let ((?x21561 (* l_0_12_16 l_0_12_16)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x21719 (* ?x10364 l_0_12_22)))
 (let ((?x21717 (* l_0_12_100 l_0_12_100)))
 (let ((?x21723 (+ (+ (- (- (* 1.0 (* l_0_12_10 l_0_12_10)) ?x21717) ?x21719) ?x21561) ?x21722)))
 (let ((?x21730 (- (- (- ?x21723 ?x21587) (* (* 1.0 l_0_12_52) l_0_12_52)) (* (* 1.0 l_0_12_53) l_0_12_53))))
 (let ((?x21736 (- (- ?x21730 (* (* 1.0 l_0_12_54) l_0_12_54)) (* (* 1.0 l_0_12_55) l_0_12_55))))
 (let ((?x21745 (+ (- (- (- ?x21736 ?x21737) ?x21739) ?x21741) (* 1.0 (* l_0_12_7 l_0_12_7)))))
 (let ((?x21754 (- (- (+ (- ?x21745 ?x21746) (* 1.0 (* l_0_12_8 l_0_12_8))) ?x21751) ?x21753)))
 (let ((?x21763 (- (+ (- (- ?x21754 ?x21755) ?x21757) (* 1.0 (* l_0_12_9 l_0_12_9))) ?x21762)))
 (= (+ (- (- ?x21763 ?x21764) ?x21766) 1.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21561 (* l_0_12_16 l_0_12_16)))
 (let ((?x16284 (* 2.0 ?x21561)))
 (let ((?x21798 (- (+ (* (* 2.0 l_0_12_1) l_0_12_4) ?x16284) (* (* 2.0 l_0_12_31) l_0_12_31))))
 (let ((?x21802 (- (- ?x21798 (* (* 2.0 l_0_12_46) l_0_12_49)) (* (* 2.0 l_0_12_61) l_0_12_64))))
 (let ((?x21806 (- (- ?x21802 (* (* 2.0 l_0_12_76) l_0_12_79)) (* (* 2.0 l_0_12_91) l_0_12_94))))
 (= (+ ?x21806 2.0) 0.0)))))))
(assert
 (let ((?x21587 (* l_0_12_31 l_0_12_31)))
 (let ((?x21812 (* 2.0 ?x21587)))
 (let ((?x21831 (- (* (* 2.0 l_0_12_1) l_0_12_7) (* (* 2.0 l_0_12_16) l_0_12_16))))
 (let ((?x21836 (- (- (+ ?x21831 ?x21812) (* (* 2.0 l_0_12_46) l_0_12_52)) (* (* 2.0 l_0_12_61) l_0_12_67))))
 (let ((?x21840 (- (- ?x21836 (* (* 2.0 l_0_12_76) l_0_12_82)) (* (* 2.0 l_0_12_91) l_0_12_97))))
 (= (- ?x21840 2.0) 0.0)))))))
(assert
 (let ((?x21877 (* l_0_12_93 l_0_12_93)))
 (let ((?x21875 (* l_0_12_92 l_0_12_92)))
 (let ((?x21873 (* l_0_12_78 l_0_12_78)))
 (let ((?x21871 (* l_0_12_77 l_0_12_77)))
 (let ((?x21869 (* l_0_12_63 l_0_12_63)))
 (let ((?x21867 (* l_0_12_62 l_0_12_62)))
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x21859 (* ?x21858 l_0_12_32)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x16343 (* ?x10511 l_0_12_17)))
 (let ((?x10514 (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) ?x16343) (* 1.0 (* l_0_12_2 l_0_12_2)))))
 (let ((?x21863 (- (- (+ ?x10514 (* 1.0 (* l_0_12_3 l_0_12_3))) ?x21859) (* (* 1.0 l_0_12_47) l_0_12_47))))
 (let ((?x21872 (- (- (- (- ?x21863 (* (* 1.0 l_0_12_48) l_0_12_48)) ?x21867) ?x21869) ?x21871)))
 (= (- (- (- ?x21872 ?x21873) ?x21875) ?x21877) 0.0)))))))))))))))
(assert
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x9042 (* ?x21858 l_0_12_34)))
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x9043 (* ?x21564 l_0_12_32)))
 (let ((?x16417 (* 2.0 l_0_12_3)))
 (let ((?x16420 (* ?x16417 l_0_12_5)))
 (let ((?x16411 (* 2.0 l_0_12_2)))
 (let ((?x16414 (* ?x16411 l_0_12_4)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x16407 (* ?x10511 l_0_12_19)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x16448 (* ?x10364 l_0_12_17)))
 (let ((?x10582 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x16448) ?x16407) ?x16414) ?x16420)))
 (let ((?x21897 (- (- (- (- ?x10582 ?x9043) ?x9042) (* (* 2.0 l_0_12_47) l_0_12_49)) (* (* 2.0 l_0_12_48) l_0_12_50))))
 (let ((?x21903 (- (- ?x21897 (* (* 2.0 l_0_12_62) l_0_12_64)) (* (* 2.0 l_0_12_63) l_0_12_65))))
 (let ((?x21909 (- (- ?x21903 (* (* 2.0 l_0_12_77) l_0_12_79)) (* (* 2.0 l_0_12_78) l_0_12_80))))
 (let ((?x21915 (- (- ?x21909 (* (* 2.0 l_0_12_92) l_0_12_94)) (* (* 2.0 l_0_12_93) l_0_12_95))))
 (= ?x21915 0.0)))))))))))))))))))
(assert
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x21955 (* ?x21858 l_0_12_37)))
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x9043 (* ?x21564 l_0_12_32)))
 (let ((?x16417 (* 2.0 l_0_12_3)))
 (let ((?x21952 (* ?x16417 l_0_12_8)))
 (let ((?x16411 (* 2.0 l_0_12_2)))
 (let ((?x21950 (* ?x16411 l_0_12_7)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x21948 (* ?x10511 l_0_12_22)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x16448 (* ?x10364 l_0_12_17)))
 (let ((?x21953 (+ (+ (+ (- (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x16448) ?x21948) ?x21950) ?x21952)))
 (let ((?x21960 (- (- (- (+ ?x21953 ?x9043) ?x21955) (* (* 2.0 l_0_12_47) l_0_12_52)) (* (* 2.0 l_0_12_48) l_0_12_53))))
 (let ((?x21964 (- (- ?x21960 (* (* 2.0 l_0_12_62) l_0_12_67)) (* (* 2.0 l_0_12_63) l_0_12_68))))
 (let ((?x21968 (- (- ?x21964 (* (* 2.0 l_0_12_77) l_0_12_82)) (* (* 2.0 l_0_12_78) l_0_12_83))))
 (let ((?x21972 (- (- ?x21968 (* (* 2.0 l_0_12_92) l_0_12_97)) (* (* 2.0 l_0_12_93) l_0_12_98))))
 (= ?x21972 0.0)))))))))))))))))))
(assert
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x22001 (* ?x21858 l_0_12_41)))
 (let ((?x21859 (* ?x21858 l_0_12_32)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x21998 (* ?x10511 l_0_12_26)))
 (let ((?x16343 (* ?x10511 l_0_12_17)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x21995 (* ?x21994 l_0_12_3)))
 (let ((?x21987 (- (* (* (- 2.0) l_0_12_1) l_0_12_11) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x21993 (+ (- ?x21987 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_11) l_0_12_2))))
 (let ((?x22004 (- (- (- (+ (+ (+ ?x21993 ?x21995) ?x16343) ?x21998) ?x21859) ?x22001) (* (* 2.0 l_0_12_47) l_0_12_56))))
 (let ((?x22008 (- (- ?x22004 (* (* 2.0 l_0_12_48) l_0_12_57)) (* (* 2.0 l_0_12_62) l_0_12_71))))
 (let ((?x22012 (- (- ?x22008 (* (* 2.0 l_0_12_63) l_0_12_72)) (* (* 2.0 l_0_12_77) l_0_12_86))))
 (= (- ?x22012 (* (* 2.0 l_0_12_78) l_0_12_87)) 0.0)))))))))))))))
(assert
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22061 (* ?x22060 l_0_12_33)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22058 (* ?x22057 l_0_12_32)))
 (let ((?x21855 (* l_0_12_3 l_0_12_3)))
 (let ((?x8932 (* l_0_12_2 l_0_12_2)))
 (let ((?x22052 (* l_0_12_18 l_0_12_18)))
 (let ((?x22053 (* 4.0 ?x22052)))
 (let ((?x10875 (* l_0_12_17 l_0_12_17)))
 (let ((?x16684 (* 4.0 ?x10875)))
 (= (- (- (- (- (+ ?x16684 ?x22053) ?x8932) ?x21855) ?x22058) ?x22061) 0.0))))))))))))
(assert
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22095 (* ?x22094 l_0_12_35)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22089 (* ?x22088 l_0_12_34)))
 (let ((?x16417 (* 2.0 l_0_12_3)))
 (let ((?x16420 (* ?x16417 l_0_12_5)))
 (let ((?x16411 (* 2.0 l_0_12_2)))
 (let ((?x16414 (* ?x16411 l_0_12_4)))
 (let ((?x22052 (* l_0_12_18 l_0_12_18)))
 (let ((?x22084 (* 2.0 ?x22052)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22082 (* ?x22081 l_0_12_20)))
 (let ((?x10875 (* l_0_12_17 l_0_12_17)))
 (let ((?x22079 (* 2.0 ?x10875)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22078 (* ?x22077 l_0_12_19)))
 (let ((?x22093 (- (- (- (- (+ (+ (+ ?x22078 ?x22079) ?x22082) ?x22084) ?x16414) ?x16420) ?x22089) (* (* 2.0 l_0_12_32) l_0_12_32))))
 (= (- (- ?x22093 ?x22095) (* (* 2.0 l_0_12_33) l_0_12_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22125 (* ?x22094 l_0_12_38)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22122 (* ?x22088 l_0_12_37)))
 (let ((?x16417 (* 2.0 l_0_12_3)))
 (let ((?x21952 (* ?x16417 l_0_12_8)))
 (let ((?x16411 (* 2.0 l_0_12_2)))
 (let ((?x21950 (* ?x16411 l_0_12_7)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22115 (* ?x22081 l_0_12_23)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22111 (* ?x22077 l_0_12_22)))
 (let ((?x22119 (- (+ (- ?x22111 (* (* 2.0 l_0_12_17) l_0_12_17)) ?x22115) (* (* 2.0 l_0_12_18) l_0_12_18))))
 (let ((?x22124 (+ (- (- (- ?x22119 ?x21950) ?x21952) ?x22122) (* 2.0 (* l_0_12_32 l_0_12_32)))))
 (= (+ (- ?x22124 ?x22125) (* 2.0 (* l_0_12_33 l_0_12_33))) 0.0))))))))))))))))
(assert
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22061 (* ?x22060 l_0_12_33)))
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22154 (* ?x22094 l_0_12_42)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22058 (* ?x22057 l_0_12_32)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22151 (* ?x22088 l_0_12_41)))
 (let ((?x22052 (* l_0_12_18 l_0_12_18)))
 (let ((?x22053 (* 4.0 ?x22052)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22148 (* ?x22081 l_0_12_27)))
 (let ((?x10875 (* l_0_12_17 l_0_12_17)))
 (let ((?x16684 (* 4.0 ?x10875)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22145 (* ?x22077 l_0_12_26)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x21995 (* ?x21994 l_0_12_3)))
 (let ((?x22149 (+ (+ (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x21995) ?x22145) ?x16684) ?x22148)))
 (= (- (- (- (- (+ ?x22149 ?x22053) ?x22151) ?x22058) ?x22154) ?x22061) 0.0)))))))))))))))))))))
(assert
 (let ((?x21649 (* l_0_12_6 l_0_12_6)))
 (let ((?x21640 (* l_0_12_5 l_0_12_5)))
 (let ((?x21634 (* l_0_12_4 l_0_12_4)))
 (let ((?x22201 (* 4.0 l_0_12_36)))
 (let ((?x22202 (* ?x22201 l_0_12_36)))
 (let ((?x22198 (* 4.0 l_0_12_35)))
 (let ((?x22199 (* ?x22198 l_0_12_35)))
 (let ((?x22195 (* 4.0 l_0_12_34)))
 (let ((?x22196 (* ?x22195 l_0_12_34)))
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22193 (* ?x22060 l_0_12_35)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22191 (* ?x22057 l_0_12_34)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22189 (* ?x21796 l_0_12_32)))
 (let ((?x22186 (* l_0_12_21 l_0_12_21)))
 (let ((?x22187 (* 4.0 ?x22186)))
 (let ((?x22183 (* l_0_12_20 l_0_12_20)))
 (let ((?x22184 (* 4.0 ?x22183)))
 (let ((?x22180 (* l_0_12_19 l_0_12_19)))
 (let ((?x22181 (* 4.0 ?x22180)))
 (let ((?x22177 (* 4.0 l_0_12_18)))
 (let ((?x22178 (* ?x22177 l_0_12_20)))
 (let ((?x22176 (+ (* (* (- 2.0) l_0_12_16) l_0_12_17) (* (* 4.0 l_0_12_17) l_0_12_19))))
 (let ((?x22194 (- (- (+ (+ (+ (+ (+ ?x22176 ?x22178) ?x22181) ?x22184) ?x22187) ?x22189) ?x22191) ?x22193)))
 (= (- (- (- (- (- (- ?x22194 ?x22196) ?x22199) ?x22202) ?x21634) ?x21640) ?x21649) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x22265 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x22262 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x22259 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x22255 (* 8.0 l_0_12_36)))
 (let ((?x22256 (* ?x22255 l_0_12_39)))
 (let ((?x22252 (* 8.0 l_0_12_35)))
 (let ((?x22253 (* ?x22252 l_0_12_38)))
 (let ((?x22249 (* 8.0 l_0_12_34)))
 (let ((?x22250 (* ?x22249 l_0_12_37)))
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22247 (* ?x22060 l_0_12_38)))
 (let ((?x22193 (* ?x22060 l_0_12_35)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22244 (* ?x22057 l_0_12_37)))
 (let ((?x22191 (* ?x22057 l_0_12_34)))
 (let ((?x22240 (* 8.0 l_0_12_21)))
 (let ((?x22241 (* ?x22240 l_0_12_24)))
 (let ((?x22237 (* 8.0 l_0_12_20)))
 (let ((?x22238 (* ?x22237 l_0_12_23)))
 (let ((?x22234 (* 8.0 l_0_12_19)))
 (let ((?x22235 (* ?x22234 l_0_12_22)))
 (let ((?x22177 (* 4.0 l_0_12_18)))
 (let ((?x22232 (* ?x22177 l_0_12_23)))
 (let ((?x22178 (* ?x22177 l_0_12_20)))
 (let ((?x22174 (* 4.0 l_0_12_17)))
 (let ((?x22229 (* ?x22174 l_0_12_22)))
 (let ((?x22236 (+ (+ (- (+ (* (* (- 4.0) l_0_12_17) l_0_12_19) ?x22229) ?x22178) ?x22232) ?x22235)))
 (let ((?x22251 (- (- (+ (- (+ (+ (+ ?x22236 ?x22238) ?x22241) ?x22191) ?x22244) ?x22193) ?x22247) ?x22250)))
 (= (- (- (- (- (- ?x22251 ?x22253) ?x22256) ?x22259) ?x22262) ?x22265) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x22255 (* 8.0 l_0_12_36)))
 (let ((?x22328 (* ?x22255 l_0_12_43)))
 (let ((?x22252 (* 8.0 l_0_12_35)))
 (let ((?x22326 (* ?x22252 l_0_12_42)))
 (let ((?x22249 (* 8.0 l_0_12_34)))
 (let ((?x22324 (* ?x22249 l_0_12_41)))
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22322 (* ?x22060 l_0_12_42)))
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22095 (* ?x22094 l_0_12_35)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22319 (* ?x22057 l_0_12_41)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22089 (* ?x22088 l_0_12_34)))
 (let ((?x22240 (* 8.0 l_0_12_21)))
 (let ((?x22316 (* ?x22240 l_0_12_28)))
 (let ((?x22237 (* 8.0 l_0_12_20)))
 (let ((?x22314 (* ?x22237 l_0_12_27)))
 (let ((?x22234 (* 8.0 l_0_12_19)))
 (let ((?x22312 (* ?x22234 l_0_12_26)))
 (let ((?x22177 (* 4.0 l_0_12_18)))
 (let ((?x22310 (* ?x22177 l_0_12_27)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22082 (* ?x22081 l_0_12_20)))
 (let ((?x22174 (* 4.0 l_0_12_17)))
 (let ((?x22307 (* ?x22174 l_0_12_26)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22078 (* ?x22077 l_0_12_19)))
 (let ((?x22303 (* 2.0 l_0_12_13)))
 (let ((?x22304 (* ?x22303 l_0_12_6)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x22301 (* ?x21994 l_0_12_5)))
 (let ((?x22308 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x22301) ?x22304) ?x22078) ?x22307)))
 (let ((?x22320 (- (- (+ (+ (+ (+ (+ ?x22308 ?x22082) ?x22310) ?x22312) ?x22314) ?x22316) ?x22089) ?x22319)))
 (= (- (- (- (- (- ?x22320 ?x22095) ?x22322) ?x22324) ?x22326) ?x22328) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21759 (* l_0_12_9 l_0_12_9)))
 (let ((?x21748 (* l_0_12_8 l_0_12_8)))
 (let ((?x21743 (* l_0_12_7 l_0_12_7)))
 (let ((?x22390 (* 4.0 l_0_12_40)))
 (let ((?x22391 (* ?x22390 l_0_12_40)))
 (let ((?x22387 (* 4.0 l_0_12_39)))
 (let ((?x22388 (* ?x22387 l_0_12_39)))
 (let ((?x22384 (* 4.0 l_0_12_38)))
 (let ((?x22385 (* ?x22384 l_0_12_38)))
 (let ((?x22381 (* 4.0 l_0_12_37)))
 (let ((?x22382 (* ?x22381 l_0_12_37)))
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22247 (* ?x22060 l_0_12_38)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22244 (* ?x22057 l_0_12_37)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22189 (* ?x21796 l_0_12_32)))
 (let ((?x22375 (* l_0_12_25 l_0_12_25)))
 (let ((?x22376 (* 4.0 ?x22375)))
 (let ((?x22372 (* l_0_12_24 l_0_12_24)))
 (let ((?x22373 (* 4.0 ?x22372)))
 (let ((?x22369 (* l_0_12_23 l_0_12_23)))
 (let ((?x22370 (* 4.0 ?x22369)))
 (let ((?x22366 (* l_0_12_22 l_0_12_22)))
 (let ((?x22367 (* 4.0 ?x22366)))
 (let ((?x22177 (* 4.0 l_0_12_18)))
 (let ((?x22232 (* ?x22177 l_0_12_23)))
 (let ((?x22174 (* 4.0 l_0_12_17)))
 (let ((?x22229 (* ?x22174 l_0_12_22)))
 (let ((?x22363 (+ (* (- l_0_12_10) l_0_12_10) (* (* 2.0 l_0_12_16) l_0_12_17))))
 (let ((?x22378 (- (+ (+ (+ (+ (- (- ?x22363 ?x22229) ?x22232) ?x22367) ?x22370) ?x22373) ?x22376) ?x22189)))
 (let ((?x22393 (- (- (- (- (- (+ (+ ?x22378 ?x22244) ?x22247) ?x22382) ?x22385) ?x22388) ?x22391) ?x21743)))
 (= (- (- ?x22393 ?x21748) ?x21759) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22446 (* (* 8.0 l_0_12_40) l_0_12_44)))
 (let ((?x22443 (* (* 8.0 l_0_12_39) l_0_12_43)))
 (let ((?x22440 (* (* 8.0 l_0_12_38) l_0_12_42)))
 (let ((?x22437 (* (* 8.0 l_0_12_37) l_0_12_41)))
 (let ((?x22060 (* 4.0 l_0_12_33)))
 (let ((?x22322 (* ?x22060 l_0_12_42)))
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22125 (* ?x22094 l_0_12_38)))
 (let ((?x22057 (* 4.0 l_0_12_32)))
 (let ((?x22319 (* ?x22057 l_0_12_41)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22122 (* ?x22088 l_0_12_37)))
 (let ((?x22430 (* (* 8.0 l_0_12_25) l_0_12_29)))
 (let ((?x22427 (* (* 8.0 l_0_12_24) l_0_12_28)))
 (let ((?x22424 (* (* 8.0 l_0_12_23) l_0_12_27)))
 (let ((?x22421 (* (* 8.0 l_0_12_22) l_0_12_26)))
 (let ((?x22177 (* 4.0 l_0_12_18)))
 (let ((?x22310 (* ?x22177 l_0_12_27)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22115 (* ?x22081 l_0_12_23)))
 (let ((?x22174 (* 4.0 l_0_12_17)))
 (let ((?x22307 (* ?x22174 l_0_12_26)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22111 (* ?x22077 l_0_12_22)))
 (let ((?x22303 (* 2.0 l_0_12_13)))
 (let ((?x22414 (* ?x22303 l_0_12_9)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x22412 (* ?x21994 l_0_12_8)))
 (let ((?x21991 (* 2.0 l_0_12_11)))
 (let ((?x22410 (* ?x21991 l_0_12_7)))
 (let ((?x22416 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x22410) ?x22412) ?x22414) ?x22111)))
 (let ((?x22431 (+ (+ (+ (+ (- (+ (- ?x22416 ?x22307) ?x22115) ?x22310) ?x22421) ?x22424) ?x22427) ?x22430)))
 (let ((?x22444 (- (- (- (+ (- (+ (- ?x22431 ?x22122) ?x22319) ?x22125) ?x22322) ?x22437) ?x22440) ?x22443)))
 (= (- ?x22444 ?x22446) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22520 (* (* 4.0 l_0_12_45) l_0_12_45)))
 (let ((?x22517 (* (* 4.0 l_0_12_44) l_0_12_44)))
 (let ((?x22514 (* (* 4.0 l_0_12_43) l_0_12_43)))
 (let ((?x22511 (* (* 4.0 l_0_12_42) l_0_12_42)))
 (let ((?x22508 (* (* 4.0 l_0_12_41) l_0_12_41)))
 (let ((?x22094 (* 8.0 l_0_12_33)))
 (let ((?x22154 (* ?x22094 l_0_12_42)))
 (let ((?x22088 (* 8.0 l_0_12_32)))
 (let ((?x22151 (* ?x22088 l_0_12_41)))
 (let ((?x22502 (* l_0_12_30 l_0_12_30)))
 (let ((?x22503 (* 4.0 ?x22502)))
 (let ((?x22499 (* l_0_12_29 l_0_12_29)))
 (let ((?x22500 (* 4.0 ?x22499)))
 (let ((?x22496 (* l_0_12_28 l_0_12_28)))
 (let ((?x22497 (* 4.0 ?x22496)))
 (let ((?x22493 (* l_0_12_27 l_0_12_27)))
 (let ((?x22494 (* 4.0 ?x22493)))
 (let ((?x22490 (* l_0_12_26 l_0_12_26)))
 (let ((?x22491 (* 4.0 ?x22490)))
 (let ((?x22081 (* 8.0 l_0_12_18)))
 (let ((?x22148 (* ?x22081 l_0_12_27)))
 (let ((?x22077 (* 8.0 l_0_12_17)))
 (let ((?x22145 (* ?x22077 l_0_12_26)))
 (let ((?x22486 (* l_0_12_15 l_0_12_15)))
 (let ((?x22484 (* l_0_12_14 l_0_12_14)))
 (let ((?x22482 (* l_0_12_13 l_0_12_13)))
 (let ((?x22483 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x22482)))
 (let ((?x22498 (+ (+ (+ (+ (+ (- (- ?x22483 ?x22484) ?x22486) ?x22145) ?x22148) ?x22491) ?x22494) ?x22497)))
 (let ((?x22515 (- (- (- (- (- (+ (+ ?x22498 ?x22500) ?x22503) ?x22151) ?x22154) ?x22508) ?x22511) ?x22514)))
 (= (- (- ?x22515 ?x22517) ?x22520) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x22548 (* l_0_12_91 l_0_12_91)))
 (let ((?x22546 (* l_0_12_76 l_0_12_76)))
 (let ((?x22544 (* l_0_12_61 l_0_12_61)))
 (let ((?x22543 (- (* 1.0 (* l_0_12_1 l_0_12_1)) (* (* 1.0 l_0_12_46) l_0_12_46))))
 (= (- (- (- ?x22543 ?x22544) ?x22546) ?x22548) 0.0))))))
(assert
 (let ((?x22265 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x22262 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x22259 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x21722 (* ?x21564 l_0_12_37)))
 (let ((?x21631 (* ?x21564 l_0_12_34)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x21719 (* ?x10364 l_0_12_22)))
 (let ((?x22564 (+ (- (+ (+ (* (* (- 4.0) l_0_12_16) l_0_12_19) ?x21719) ?x21631) ?x21722) ?x22259)))
 (let ((?x22571 (- (+ (- ?x22564 (* (* 2.0 l_0_12_49) l_0_12_52)) ?x22262) (* (* 2.0 l_0_12_50) l_0_12_53))))
 (let ((?x22578 (- (+ (- ?x22571 (* (* 2.0 l_0_12_51) l_0_12_54)) ?x22265) (* (* 2.0 l_0_12_64) l_0_12_67))))
 (let ((?x22584 (- (- ?x22578 (* (* 2.0 l_0_12_65) l_0_12_68)) (* (* 2.0 l_0_12_66) l_0_12_69))))
 (let ((?x22590 (- (- ?x22584 (* (* 2.0 l_0_12_79) l_0_12_82)) (* (* 2.0 l_0_12_80) l_0_12_83))))
 (let ((?x22596 (- (- ?x22590 (* (* 2.0 l_0_12_81) l_0_12_84)) (* (* 2.0 l_0_12_94) l_0_12_97))))
 (let ((?x22602 (- (- ?x22596 (* (* 2.0 l_0_12_95) l_0_12_98)) (* (* 2.0 l_0_12_96) l_0_12_99))))
 (= ?x22602 0.0)))))))))))))))))
(assert
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x22653 (* ?x21564 l_0_12_41)))
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x9042 (* ?x21858 l_0_12_34)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x22650 (* ?x10364 l_0_12_26)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x16407 (* ?x10511 l_0_12_19)))
 (let ((?x22303 (* 2.0 l_0_12_13)))
 (let ((?x22304 (* ?x22303 l_0_12_6)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x22301 (* ?x21994 l_0_12_5)))
 (let ((?x22641 (- (* (* (- 2.0) l_0_12_101) l_0_12_94) (* (* 2.0 l_0_12_102) l_0_12_95))))
 (let ((?x22646 (+ (- ?x22641 (* (* 2.0 l_0_12_103) l_0_12_96)) (* (* 2.0 l_0_12_11) l_0_12_4))))
 (let ((?x22656 (- (- (- (+ (+ (+ (+ ?x22646 ?x22301) ?x22304) ?x16407) ?x22650) ?x9042) ?x22653) (* (* 2.0 l_0_12_49) l_0_12_56))))
 (let ((?x22660 (- (- ?x22656 (* (* 2.0 l_0_12_50) l_0_12_57)) (* (* 2.0 l_0_12_51) l_0_12_58))))
 (let ((?x22664 (- (- ?x22660 (* (* 2.0 l_0_12_64) l_0_12_71)) (* (* 2.0 l_0_12_65) l_0_12_72))))
 (let ((?x22668 (- (- ?x22664 (* (* 2.0 l_0_12_66) l_0_12_73)) (* (* 2.0 l_0_12_79) l_0_12_86))))
 (let ((?x22672 (- (- ?x22668 (* (* 2.0 l_0_12_80) l_0_12_87)) (* (* 2.0 l_0_12_81) l_0_12_88))))
 (= ?x22672 0.0)))))))))))))))))))))
(assert
 (let ((?x21564 (* 4.0 l_0_12_31)))
 (let ((?x22653 (* ?x21564 l_0_12_41)))
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x21955 (* ?x21858 l_0_12_37)))
 (let ((?x10364 (* 4.0 l_0_12_16)))
 (let ((?x22650 (* ?x10364 l_0_12_26)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x21948 (* ?x10511 l_0_12_22)))
 (let ((?x22303 (* 2.0 l_0_12_13)))
 (let ((?x22414 (* ?x22303 l_0_12_9)))
 (let ((?x21994 (* 2.0 l_0_12_12)))
 (let ((?x22412 (* ?x21994 l_0_12_8)))
 (let ((?x21991 (* 2.0 l_0_12_11)))
 (let ((?x22410 (* ?x21991 l_0_12_7)))
 (let ((?x22713 (- (* (* 2.0 l_0_12_10) l_0_12_14) (* (* 2.0 l_0_12_100) l_0_12_104))))
 (let ((?x22717 (- (- ?x22713 (* (* 2.0 l_0_12_101) l_0_12_97)) (* (* 2.0 l_0_12_102) l_0_12_98))))
 (let ((?x22722 (+ (+ (+ (- ?x22717 (* (* 2.0 l_0_12_103) l_0_12_99)) ?x22410) ?x22412) ?x22414)))
 (let ((?x22729 (- (+ (- (- (+ ?x22722 ?x21948) ?x22650) ?x21955) ?x22653) (* (* 2.0 l_0_12_52) l_0_12_56))))
 (let ((?x22735 (- (- ?x22729 (* (* 2.0 l_0_12_53) l_0_12_57)) (* (* 2.0 l_0_12_54) l_0_12_58))))
 (let ((?x22741 (- (- ?x22735 (* (* 2.0 l_0_12_55) l_0_12_59)) (* (* 2.0 l_0_12_67) l_0_12_71))))
 (let ((?x22747 (- (- ?x22741 (* (* 2.0 l_0_12_68) l_0_12_72)) (* (* 2.0 l_0_12_69) l_0_12_73))))
 (let ((?x22753 (- (- ?x22747 (* (* 2.0 l_0_12_70) l_0_12_74)) (* (* 2.0 l_0_12_82) l_0_12_86))))
 (let ((?x22759 (- (- ?x22753 (* (* 2.0 l_0_12_83) l_0_12_87)) (* (* 2.0 l_0_12_84) l_0_12_88))))
 (= (- ?x22759 (* (* 2.0 l_0_12_85) l_0_12_89)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x22842 (* l_0_12_90 l_0_12_90)))
 (let ((?x22840 (* l_0_12_89 l_0_12_89)))
 (let ((?x22838 (* l_0_12_88 l_0_12_88)))
 (let ((?x22836 (* l_0_12_87 l_0_12_87)))
 (let ((?x22834 (* l_0_12_86 l_0_12_86)))
 (let ((?x22832 (* l_0_12_75 l_0_12_75)))
 (let ((?x22830 (* l_0_12_74 l_0_12_74)))
 (let ((?x22828 (* l_0_12_73 l_0_12_73)))
 (let ((?x22826 (* l_0_12_72 l_0_12_72)))
 (let ((?x22824 (* l_0_12_71 l_0_12_71)))
 (let ((?x21858 (* 8.0 l_0_12_31)))
 (let ((?x22001 (* ?x21858 l_0_12_41)))
 (let ((?x10511 (* 8.0 l_0_12_16)))
 (let ((?x21998 (* ?x10511 l_0_12_26)))
 (let ((?x22795 (* l_0_12_105 l_0_12_105)))
 (let ((?x22793 (* l_0_12_104 l_0_12_104)))
 (let ((?x22791 (* l_0_12_103 l_0_12_103)))
 (let ((?x22792 (- (- (* (- l_0_12_101) l_0_12_101) (* l_0_12_102 l_0_12_102)) ?x22791)))
 (let ((?x22800 (+ (+ (- (- ?x22792 ?x22793) ?x22795) (* 1.0 (* l_0_12_11 l_0_12_11))) (* 1.0 (* l_0_12_12 l_0_12_12)))))
 (let ((?x22804 (+ (+ ?x22800 (* 1.0 (* l_0_12_13 l_0_12_13))) (* 1.0 (* l_0_12_14 l_0_12_14)))))
 (let ((?x22811 (- (- (+ (+ ?x22804 (* 1.0 (* l_0_12_15 l_0_12_15))) ?x21998) ?x22001) (* (* 1.0 l_0_12_56) l_0_12_56))))
 (let ((?x22817 (- (- ?x22811 (* (* 1.0 l_0_12_57) l_0_12_57)) (* (* 1.0 l_0_12_58) l_0_12_58))))
 (let ((?x22823 (- (- ?x22817 (* (* 1.0 l_0_12_59) l_0_12_59)) (* (* 1.0 l_0_12_60) l_0_12_60))))
 (let ((?x22837 (- (- (- (- (- (- (- ?x22823 ?x22824) ?x22826) ?x22828) ?x22830) ?x22832) ?x22834) ?x22836)))
 (= (- (- (- ?x22837 ?x22838) ?x22840) ?x22842) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22869 (* ?x21796 l_0_12_34)))
 (let ((?x22864 (+ (* (* (- 2.0) l_0_12_16) l_0_12_19) (* 2.0 (* l_0_12_19 l_0_12_19)))))
 (let ((?x22868 (+ (+ ?x22864 (* 2.0 (* l_0_12_20 l_0_12_20))) (* 2.0 (* l_0_12_21 l_0_12_21)))))
 (let ((?x22876 (- (- (+ ?x22868 ?x22869) (* (* 2.0 l_0_12_34) l_0_12_34)) (* (* 2.0 l_0_12_35) l_0_12_35))))
 (= (- ?x22876 (* (* 2.0 l_0_12_36) l_0_12_36)) 0.0)))))))
(assert
 (let ((?x11196 (* l_0_12_36 l_0_12_36)))
 (let ((?x22888 (* 2.0 ?x11196)))
 (let ((?x22201 (* 4.0 l_0_12_36)))
 (let ((?x22924 (* ?x22201 l_0_12_39)))
 (let ((?x10966 (* l_0_12_35 l_0_12_35)))
 (let ((?x22883 (* 2.0 ?x10966)))
 (let ((?x22198 (* 4.0 l_0_12_35)))
 (let ((?x22921 (* ?x22198 l_0_12_38)))
 (let ((?x22218 (* l_0_12_34 l_0_12_34)))
 (let ((?x17572 (* 2.0 ?x22218)))
 (let ((?x22195 (* 4.0 l_0_12_34)))
 (let ((?x22918 (* ?x22195 l_0_12_37)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22916 (* ?x21796 l_0_12_37)))
 (let ((?x22910 (* 4.0 l_0_12_21)))
 (let ((?x22911 (* ?x22910 l_0_12_24)))
 (let ((?x22904 (* 4.0 l_0_12_20)))
 (let ((?x22905 (* ?x22904 l_0_12_23)))
 (let ((?x22898 (* 4.0 l_0_12_19)))
 (let ((?x22899 (* ?x22898 l_0_12_22)))
 (let ((?x22903 (- (+ (* (* (- 2.0) l_0_12_16) l_0_12_22) ?x22899) (* (* 2.0 l_0_12_19) l_0_12_19))))
 (let ((?x22915 (- (+ (- (+ ?x22903 ?x22905) (* (* 2.0 l_0_12_20) l_0_12_20)) ?x22911) (* (* 2.0 l_0_12_21) l_0_12_21))))
 (let ((?x22926 (+ (- (+ (- (+ (- (+ ?x22915 ?x22916) ?x22918) ?x17572) ?x22921) ?x22883) ?x22924) ?x22888)))
 (= ?x22926 0.0)))))))))))))))))))))))))
(assert
 (let ((?x22201 (* 4.0 l_0_12_36)))
 (let ((?x22202 (* ?x22201 l_0_12_36)))
 (let ((?x22962 (* ?x22201 l_0_12_43)))
 (let ((?x22198 (* 4.0 l_0_12_35)))
 (let ((?x22199 (* ?x22198 l_0_12_35)))
 (let ((?x22959 (* ?x22198 l_0_12_42)))
 (let ((?x22195 (* 4.0 l_0_12_34)))
 (let ((?x22196 (* ?x22195 l_0_12_34)))
 (let ((?x22956 (* ?x22195 l_0_12_41)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22954 (* ?x21796 l_0_12_41)))
 (let ((?x22186 (* l_0_12_21 l_0_12_21)))
 (let ((?x22187 (* 4.0 ?x22186)))
 (let ((?x22910 (* 4.0 l_0_12_21)))
 (let ((?x22951 (* ?x22910 l_0_12_28)))
 (let ((?x22183 (* l_0_12_20 l_0_12_20)))
 (let ((?x22184 (* 4.0 ?x22183)))
 (let ((?x22904 (* 4.0 l_0_12_20)))
 (let ((?x22948 (* ?x22904 l_0_12_27)))
 (let ((?x22180 (* l_0_12_19 l_0_12_19)))
 (let ((?x22181 (* 4.0 ?x22180)))
 (let ((?x22898 (* 4.0 l_0_12_19)))
 (let ((?x3344 (* ?x22898 l_0_12_26)))
 (let ((?x22950 (+ (+ (+ (+ (* (* (- 2.0) l_0_12_16) l_0_12_26) ?x3344) ?x22181) ?x22948) ?x22184)))
 (let ((?x22961 (- (- (- (- (+ (+ (+ ?x22950 ?x22951) ?x22187) ?x22954) ?x22956) ?x22196) ?x22959) ?x22199)))
 (= (- (- ?x22961 ?x22962) ?x22202) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10905 (* l_0_12_33 l_0_12_33)))
 (let ((?x22067 (* l_0_12_32 l_0_12_32)))
 (let ((?x22977 (+ (- (* (- l_0_12_17) l_0_12_17) (* l_0_12_18 l_0_12_18)) ?x22067)))
 (= (+ ?x22977 ?x10905) 0.0)))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x22992 (* ?x22097 l_0_12_35)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x22990 (* ?x22091 l_0_12_34)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x22988 (* ?x22117 l_0_12_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_19) ?x22988) ?x22990) ?x22992) 0.0))))))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x23006 (* ?x22097 l_0_12_38)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x23004 (* ?x22091 l_0_12_37)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x23002 (* ?x22117 l_0_12_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_22) ?x23002) ?x23004) ?x23006) 0.0))))))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x23023 (* ?x22097 l_0_12_42)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x23021 (* ?x22091 l_0_12_41)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x23014 (* ?x22117 l_0_12_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_17) l_0_12_26) ?x23014) ?x23021) ?x23023) 0.0))))))))
(assert
 (let ((?x11196 (* l_0_12_36 l_0_12_36)))
 (let ((?x10966 (* l_0_12_35 l_0_12_35)))
 (let ((?x22218 (* l_0_12_34 l_0_12_34)))
 (let ((?x22186 (* l_0_12_21 l_0_12_21)))
 (let ((?x23040 (- (- (* (- l_0_12_19) l_0_12_19) (* l_0_12_20 l_0_12_20)) ?x22186)))
 (= (+ (+ (+ ?x23040 ?x22218) ?x10966) ?x11196) 0.0)))))))
(assert
 (let ((?x22877 (* 2.0 l_0_12_36)))
 (let ((?x23064 (* ?x22877 l_0_12_39)))
 (let ((?x22874 (* 2.0 l_0_12_35)))
 (let ((?x23062 (* ?x22874 l_0_12_38)))
 (let ((?x22871 (* 2.0 l_0_12_34)))
 (let ((?x23060 (* ?x22871 l_0_12_37)))
 (let ((?x22913 (* 2.0 l_0_12_21)))
 (let ((?x23058 (* ?x22913 l_0_12_24)))
 (let ((?x22907 (* 2.0 l_0_12_20)))
 (let ((?x23056 (* ?x22907 l_0_12_23)))
 (let ((?x23063 (+ (+ (- (- (* (* (- 2.0) l_0_12_19) l_0_12_22) ?x23056) ?x23058) ?x23060) ?x23062)))
 (= (+ ?x23063 ?x23064) 0.0)))))))))))))
(assert
 (let ((?x22877 (* 2.0 l_0_12_36)))
 (let ((?x23072 (* ?x22877 l_0_12_43)))
 (let ((?x22874 (* 2.0 l_0_12_35)))
 (let ((?x12130 (* ?x22874 l_0_12_42)))
 (let ((?x22871 (* 2.0 l_0_12_34)))
 (let ((?x12131 (* ?x22871 l_0_12_41)))
 (let ((?x22913 (* 2.0 l_0_12_21)))
 (let ((?x17730 (* ?x22913 l_0_12_28)))
 (let ((?x22907 (* 2.0 l_0_12_20)))
 (let ((?x17726 (* ?x22907 l_0_12_27)))
 (let ((?x12091 (+ (+ (- (- (* (* (- 2.0) l_0_12_19) l_0_12_26) ?x17726) ?x17730) ?x12131) ?x12130)))
 (= (+ ?x12091 ?x23072) 0.0)))))))))))))
(assert
 (let ((?x2026 (* l_0_12_40 l_0_12_40)))
 (let ((?x17037 (* l_0_12_39 l_0_12_39)))
 (let ((?x17031 (* l_0_12_38 l_0_12_38)))
 (let ((?x11412 (* l_0_12_37 l_0_12_37)))
 (let ((?x11196 (* l_0_12_36 l_0_12_36)))
 (let ((?x10966 (* l_0_12_35 l_0_12_35)))
 (let ((?x22218 (* l_0_12_34 l_0_12_34)))
 (let ((?x22375 (* l_0_12_25 l_0_12_25)))
 (let ((?x22372 (* l_0_12_24 l_0_12_24)))
 (let ((?x22369 (* l_0_12_23 l_0_12_23)))
 (let ((?x22366 (* l_0_12_22 l_0_12_22)))
 (let ((?x22186 (* l_0_12_21 l_0_12_21)))
 (let ((?x23086 (- (+ (+ (* l_0_12_19 l_0_12_19) (* l_0_12_20 l_0_12_20)) ?x22186) ?x22366)))
 (let ((?x23093 (+ (- (- (- (- (- (- ?x23086 ?x22369) ?x22372) ?x22375) ?x22218) ?x10966) ?x11196) ?x11412)))
 (= (+ (+ (+ ?x23093 ?x17031) ?x17037) ?x2026) 0.0))))))))))))))))
(assert
 (let ((?x23133 (* 2.0 l_0_12_40)))
 (let ((?x23134 (* ?x23133 l_0_12_44)))
 (let ((?x23130 (* 2.0 l_0_12_39)))
 (let ((?x23131 (* ?x23130 l_0_12_43)))
 (let ((?x23127 (* 2.0 l_0_12_38)))
 (let ((?x23128 (* ?x23127 l_0_12_42)))
 (let ((?x23124 (* 2.0 l_0_12_37)))
 (let ((?x23125 (* ?x23124 l_0_12_41)))
 (let ((?x23121 (* 2.0 l_0_12_25)))
 (let ((?x23122 (* ?x23121 l_0_12_29)))
 (let ((?x23118 (* 2.0 l_0_12_24)))
 (let ((?x23119 (* ?x23118 l_0_12_28)))
 (let ((?x23115 (* 2.0 l_0_12_23)))
 (let ((?x23116 (* ?x23115 l_0_12_27)))
 (let ((?x23126 (+ (- (- (- (* (* (- 2.0) l_0_12_22) l_0_12_26) ?x23116) ?x23119) ?x23122) ?x23125)))
 (= (+ (+ (+ ?x23126 ?x23128) ?x23131) ?x23134) 0.0)))))))))))))))))
(assert
 (let ((?x1681 (* l_0_12_45 l_0_12_45)))
 (let ((?x11677 (* l_0_12_44 l_0_12_44)))
 (let ((?x11674 (* l_0_12_43 l_0_12_43)))
 (let ((?x2407 (* l_0_12_42 l_0_12_42)))
 (let ((?x2028 (* l_0_12_41 l_0_12_41)))
 (let ((?x22502 (* l_0_12_30 l_0_12_30)))
 (let ((?x22499 (* l_0_12_29 l_0_12_29)))
 (let ((?x22496 (* l_0_12_28 l_0_12_28)))
 (let ((?x23149 (- (- (* (- l_0_12_26) l_0_12_26) (* l_0_12_27 l_0_12_27)) ?x22496)))
 (let ((?x23163 (+ (+ (+ (+ (+ (- (- ?x23149 ?x22499) ?x22502) ?x2028) ?x2407) ?x11674) ?x11677) ?x1681)))
 (= ?x23163 0.0))))))))))))
(assert
 (let ((?x22201 (* 4.0 l_0_12_36)))
 (let ((?x22924 (* ?x22201 l_0_12_39)))
 (let ((?x22198 (* 4.0 l_0_12_35)))
 (let ((?x22921 (* ?x22198 l_0_12_38)))
 (let ((?x22195 (* 4.0 l_0_12_34)))
 (let ((?x22918 (* ?x22195 l_0_12_37)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22869 (* ?x21796 l_0_12_34)))
 (let ((?x22910 (* 4.0 l_0_12_21)))
 (let ((?x22911 (* ?x22910 l_0_12_24)))
 (let ((?x22904 (* 4.0 l_0_12_20)))
 (let ((?x22905 (* ?x22904 l_0_12_23)))
 (let ((?x22898 (* 4.0 l_0_12_19)))
 (let ((?x22899 (* ?x22898 l_0_12_22)))
 (let ((?x17792 (+ (- (- (- (* (* 2.0 l_0_12_16) l_0_12_19) ?x22899) ?x22905) ?x22911) (* 2.0 (* l_0_12_22 l_0_12_22)))))
 (let ((?x17801 (+ (+ ?x17792 (* 2.0 (* l_0_12_23 l_0_12_23))) (* 2.0 (* l_0_12_24 l_0_12_24)))))
 (let ((?x23174 (+ (+ (- (+ ?x17801 (* 2.0 (* l_0_12_25 l_0_12_25))) ?x22869) ?x22918) ?x22921)))
 (let ((?x23179 (- (- (+ ?x23174 ?x22924) (* (* 2.0 l_0_12_37) l_0_12_37)) (* (* 2.0 l_0_12_38) l_0_12_38))))
 (let ((?x23183 (- (- ?x23179 (* (* 2.0 l_0_12_39) l_0_12_39)) (* (* 2.0 l_0_12_40) l_0_12_40))))
 (= ?x23183 0.0)))))))))))))))))))))
(assert
 (let ((?x2026 (* l_0_12_40 l_0_12_40)))
 (let ((?x12285 (* 2.0 ?x2026)))
 (let ((?x17037 (* l_0_12_39 l_0_12_39)))
 (let ((?x3658 (* 2.0 ?x17037)))
 (let ((?x17031 (* l_0_12_38 l_0_12_38)))
 (let ((?x12225 (* 2.0 ?x17031)))
 (let ((?x11412 (* l_0_12_37 l_0_12_37)))
 (let ((?x12214 (* 2.0 ?x11412)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22916 (* ?x21796 l_0_12_37)))
 (let ((?x23216 (- (* (* 2.0 l_0_12_16) l_0_12_22) (* (* 2.0 l_0_12_22) l_0_12_22))))
 (let ((?x23220 (- (- ?x23216 (* (* 2.0 l_0_12_23) l_0_12_23)) (* (* 2.0 l_0_12_24) l_0_12_24))))
 (let ((?x23225 (+ (+ (- (- ?x23220 (* (* 2.0 l_0_12_25) l_0_12_25)) ?x22916) ?x12214) ?x12225)))
 (= (+ (+ ?x23225 ?x3658) ?x12285) 0.0)))))))))))))))
(assert
 (let ((?x22390 (* 4.0 l_0_12_40)))
 (let ((?x22391 (* ?x22390 l_0_12_40)))
 (let ((?x23248 (* ?x22390 l_0_12_44)))
 (let ((?x22387 (* 4.0 l_0_12_39)))
 (let ((?x22388 (* ?x22387 l_0_12_39)))
 (let ((?x23245 (* ?x22387 l_0_12_43)))
 (let ((?x22384 (* 4.0 l_0_12_38)))
 (let ((?x22385 (* ?x22384 l_0_12_38)))
 (let ((?x23242 (* ?x22384 l_0_12_42)))
 (let ((?x22381 (* 4.0 l_0_12_37)))
 (let ((?x22382 (* ?x22381 l_0_12_37)))
 (let ((?x23239 (* ?x22381 l_0_12_41)))
 (let ((?x21796 (* 2.0 l_0_12_31)))
 (let ((?x22954 (* ?x21796 l_0_12_41)))
 (let ((?x22375 (* l_0_12_25 l_0_12_25)))
 (let ((?x22376 (* 4.0 ?x22375)))
 (let ((?x23235 (* (* 4.0 l_0_12_25) l_0_12_29)))
 (let ((?x22372 (* l_0_12_24 l_0_12_24)))
 (let ((?x22373 (* 4.0 ?x22372)))
 (let ((?x12333 (* (* 4.0 l_0_12_24) l_0_12_28)))
 (let ((?x22369 (* l_0_12_23 l_0_12_23)))
 (let ((?x22370 (* 4.0 ?x22369)))
 (let ((?x12367 (* (* 4.0 l_0_12_23) l_0_12_27)))
 (let ((?x22366 (* l_0_12_22 l_0_12_22)))
 (let ((?x22367 (* 4.0 ?x22366)))
 (let ((?x3748 (* (* 4.0 l_0_12_22) l_0_12_26)))
 (let ((?x17853 (+ (- (+ (- (* (* 2.0 l_0_12_16) l_0_12_26) ?x3748) ?x22367) ?x12367) ?x22370)))
 (let ((?x23241 (- (+ (- (+ (- (+ (- ?x17853 ?x12333) ?x22373) ?x23235) ?x22376) ?x22954) ?x23239) ?x22382)))
 (= (- (+ (- (+ (- (+ ?x23241 ?x23242) ?x22385) ?x23245) ?x22388) ?x23248) ?x22391) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10905 (* l_0_12_33 l_0_12_33)))
 (let ((?x22067 (* l_0_12_32 l_0_12_32)))
 (let ((?x23270 (- (- (+ (* l_0_12_17 l_0_12_17) (* l_0_12_18 l_0_12_18)) ?x22067) ?x10905)))
 (= ?x23270 0.0)))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x22992 (* ?x22097 l_0_12_35)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x22990 (* ?x22091 l_0_12_34)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x22988 (* ?x22117 l_0_12_20)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_19) ?x22988) ?x22990) ?x22992) 0.0))))))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x23006 (* ?x22097 l_0_12_38)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x23004 (* ?x22091 l_0_12_37)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x23002 (* ?x22117 l_0_12_23)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_22) ?x23002) ?x23004) ?x23006) 0.0))))))))
(assert
 (let ((?x22097 (* 2.0 l_0_12_33)))
 (let ((?x23023 (* ?x22097 l_0_12_42)))
 (let ((?x22091 (* 2.0 l_0_12_32)))
 (let ((?x23021 (* ?x22091 l_0_12_41)))
 (let ((?x22117 (* 2.0 l_0_12_18)))
 (let ((?x23014 (* ?x22117 l_0_12_27)))
 (= (- (- (+ (* (* 2.0 l_0_12_17) l_0_12_26) ?x23014) ?x23021) ?x23023) 0.0))))))))
(assert
 (let ((?x22877 (* 2.0 l_0_12_36)))
 (let ((?x23064 (* ?x22877 l_0_12_39)))
 (let ((?x22874 (* 2.0 l_0_12_35)))
 (let ((?x23062 (* ?x22874 l_0_12_38)))
 (let ((?x22871 (* 2.0 l_0_12_34)))
 (let ((?x23060 (* ?x22871 l_0_12_37)))
 (let ((?x22913 (* 2.0 l_0_12_21)))
 (let ((?x23058 (* ?x22913 l_0_12_24)))
 (let ((?x22907 (* 2.0 l_0_12_20)))
 (let ((?x23056 (* ?x22907 l_0_12_23)))
 (let ((?x23282 (- (- (+ (+ (* (* 2.0 l_0_12_19) l_0_12_22) ?x23056) ?x23058) ?x23060) ?x23062)))
 (= (- ?x23282 ?x23064) 0.0)))))))))))))
(assert
 (let ((?x22877 (* 2.0 l_0_12_36)))
 (let ((?x23072 (* ?x22877 l_0_12_43)))
 (let ((?x22874 (* 2.0 l_0_12_35)))
 (let ((?x12130 (* ?x22874 l_0_12_42)))
 (let ((?x22871 (* 2.0 l_0_12_34)))
 (let ((?x12131 (* ?x22871 l_0_12_41)))
 (let ((?x22913 (* 2.0 l_0_12_21)))
 (let ((?x17730 (* ?x22913 l_0_12_28)))
 (let ((?x22907 (* 2.0 l_0_12_20)))
 (let ((?x17726 (* ?x22907 l_0_12_27)))
 (let ((?x23289 (- (- (+ (+ (* (* 2.0 l_0_12_19) l_0_12_26) ?x17726) ?x17730) ?x12131) ?x12130)))
 (= (- ?x23289 ?x23072) 0.0)))))))))))))
(assert
 (let ((?x2026 (* l_0_12_40 l_0_12_40)))
 (let ((?x17037 (* l_0_12_39 l_0_12_39)))
 (let ((?x17031 (* l_0_12_38 l_0_12_38)))
 (let ((?x11412 (* l_0_12_37 l_0_12_37)))
 (let ((?x22375 (* l_0_12_25 l_0_12_25)))
 (let ((?x22372 (* l_0_12_24 l_0_12_24)))
 (let ((?x23298 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x22372) ?x22375)))
 (= (- (- (- (- ?x23298 ?x11412) ?x17031) ?x17037) ?x2026) 0.0)))))))))
(assert
 (let ((?x23133 (* 2.0 l_0_12_40)))
 (let ((?x23134 (* ?x23133 l_0_12_44)))
 (let ((?x23130 (* 2.0 l_0_12_39)))
 (let ((?x23131 (* ?x23130 l_0_12_43)))
 (let ((?x23127 (* 2.0 l_0_12_38)))
 (let ((?x23128 (* ?x23127 l_0_12_42)))
 (let ((?x23124 (* 2.0 l_0_12_37)))
 (let ((?x23125 (* ?x23124 l_0_12_41)))
 (let ((?x23121 (* 2.0 l_0_12_25)))
 (let ((?x23122 (* ?x23121 l_0_12_29)))
 (let ((?x23118 (* 2.0 l_0_12_24)))
 (let ((?x23119 (* ?x23118 l_0_12_28)))
 (let ((?x23115 (* 2.0 l_0_12_23)))
 (let ((?x23116 (* ?x23115 l_0_12_27)))
 (let ((?x23320 (- (+ (+ (+ (* (* 2.0 l_0_12_22) l_0_12_26) ?x23116) ?x23119) ?x23122) ?x23125)))
 (= (- (- (- ?x23320 ?x23128) ?x23131) ?x23134) 0.0)))))))))))))))))
(assert
 (let ((?x1681 (* l_0_12_45 l_0_12_45)))
 (let ((?x11677 (* l_0_12_44 l_0_12_44)))
 (let ((?x11674 (* l_0_12_43 l_0_12_43)))
 (let ((?x2407 (* l_0_12_42 l_0_12_42)))
 (let ((?x2028 (* l_0_12_41 l_0_12_41)))
 (let ((?x22502 (* l_0_12_30 l_0_12_30)))
 (let ((?x22499 (* l_0_12_29 l_0_12_29)))
 (let ((?x22496 (* l_0_12_28 l_0_12_28)))
 (let ((?x23335 (+ (+ (+ (* l_0_12_26 l_0_12_26) (* l_0_12_27 l_0_12_27)) ?x22496) ?x22499)))
 (= (- (- (- (- (- (+ ?x23335 ?x22502) ?x2028) ?x2407) ?x11674) ?x11677) ?x1681) 0.0)))))))))))
(assert
 (let ((?x22390 (* 4.0 l_0_12_40)))
 (let ((?x23248 (* ?x22390 l_0_12_44)))
 (let ((?x22387 (* 4.0 l_0_12_39)))
 (let ((?x23245 (* ?x22387 l_0_12_43)))
 (let ((?x22384 (* 4.0 l_0_12_38)))
 (let ((?x23242 (* ?x22384 l_0_12_42)))
 (let ((?x22381 (* 4.0 l_0_12_37)))
 (let ((?x23239 (* ?x22381 l_0_12_41)))
 (let ((?x22201 (* 4.0 l_0_12_36)))
 (let ((?x22962 (* ?x22201 l_0_12_43)))
 (let ((?x22255 (* 8.0 l_0_12_36)))
 (let ((?x22256 (* ?x22255 l_0_12_39)))
 (let ((?x22198 (* 4.0 l_0_12_35)))
 (let ((?x22959 (* ?x22198 l_0_12_42)))
 (let ((?x22252 (* 8.0 l_0_12_35)))
 (let ((?x22253 (* ?x22252 l_0_12_38)))
 (let ((?x22195 (* 4.0 l_0_12_34)))
 (let ((?x22956 (* ?x22195 l_0_12_41)))
 (let ((?x22249 (* 8.0 l_0_12_34)))
 (let ((?x22250 (* ?x22249 l_0_12_37)))
 (let ((?x23235 (* (* 4.0 l_0_12_25) l_0_12_29)))
 (let ((?x12333 (* (* 4.0 l_0_12_24) l_0_12_28)))
 (let ((?x12367 (* (* 4.0 l_0_12_23) l_0_12_27)))
 (let ((?x3748 (* (* 4.0 l_0_12_22) l_0_12_26)))
 (let ((?x22910 (* 4.0 l_0_12_21)))
 (let ((?x22951 (* ?x22910 l_0_12_28)))
 (let ((?x22240 (* 8.0 l_0_12_21)))
 (let ((?x22241 (* ?x22240 l_0_12_24)))
 (let ((?x22904 (* 4.0 l_0_12_20)))
 (let ((?x22948 (* ?x22904 l_0_12_27)))
 (let ((?x22237 (* 8.0 l_0_12_20)))
 (let ((?x22238 (* ?x22237 l_0_12_23)))
 (let ((?x22898 (* 4.0 l_0_12_19)))
 (let ((?x3344 (* ?x22898 l_0_12_26)))
 (let ((?x22234 (* 8.0 l_0_12_19)))
 (let ((?x22235 (* ?x22234 l_0_12_22)))
 (let ((?x23355 (+ (+ (- (+ (- (+ (- ?x22235 ?x3344) ?x22238) ?x22948) ?x22241) ?x22951) ?x3748) ?x12367)))
 (let ((?x23362 (- (+ (- (+ (- (+ (+ ?x23355 ?x12333) ?x23235) ?x22250) ?x22956) ?x22253) ?x22959) ?x22256)))
 (= (- (- (- (- (+ ?x23362 ?x22962) ?x23239) ?x23242) ?x23245) ?x23248) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x22255 (* 8.0 l_0_12_36)))
 (let ((?x22328 (* ?x22255 l_0_12_43)))
 (let ((?x22252 (* 8.0 l_0_12_35)))
 (let ((?x22326 (* ?x22252 l_0_12_42)))
 (let ((?x22249 (* 8.0 l_0_12_34)))
 (let ((?x22324 (* ?x22249 l_0_12_41)))
 (let ((?x22240 (* 8.0 l_0_12_21)))
 (let ((?x22316 (* ?x22240 l_0_12_28)))
 (let ((?x22237 (* 8.0 l_0_12_20)))
 (let ((?x22314 (* ?x22237 l_0_12_27)))
 (let ((?x22234 (* 8.0 l_0_12_19)))
 (let ((?x22312 (* ?x22234 l_0_12_26)))
 (let ((?x23372 (+ (+ (+ (+ ?x22312 ?x22314) ?x22316) (* 2.0 (* l_0_12_26 l_0_12_26))) (* 2.0 (* l_0_12_27 l_0_12_27)))))
 (let ((?x23376 (+ (+ ?x23372 (* 2.0 (* l_0_12_28 l_0_12_28))) (* 2.0 (* l_0_12_29 l_0_12_29)))))
 (let ((?x23381 (- (- (- (+ ?x23376 (* 2.0 (* l_0_12_30 l_0_12_30))) ?x22324) ?x22326) ?x22328)))
 (let ((?x23387 (- (- ?x23381 (* (* 2.0 l_0_12_41) l_0_12_41)) (* (* 2.0 l_0_12_42) l_0_12_42))))
 (let ((?x23393 (- (- ?x23387 (* (* 2.0 l_0_12_43) l_0_12_43)) (* (* 2.0 l_0_12_44) l_0_12_44))))
 (= (- ?x23393 (* (* 2.0 l_0_12_45) l_0_12_45)) 0.0)))))))))))))))))))
(assert
 (let ((?x1681 (* l_0_12_45 l_0_12_45)))
 (let ((?x23405 (* 2.0 ?x1681)))
 (let ((?x11677 (* l_0_12_44 l_0_12_44)))
 (let ((?x4089 (* 2.0 ?x11677)))
 (let ((?x11674 (* l_0_12_43 l_0_12_43)))
 (let ((?x12394 (* 2.0 ?x11674)))
 (let ((?x2407 (* l_0_12_42 l_0_12_42)))
 (let ((?x4081 (* 2.0 ?x2407)))
 (let ((?x2028 (* l_0_12_41 l_0_12_41)))
 (let ((?x4071 (* 2.0 ?x2028)))
 (let ((?x22446 (* (* 8.0 l_0_12_40) l_0_12_44)))
 (let ((?x22443 (* (* 8.0 l_0_12_39) l_0_12_43)))
 (let ((?x22440 (* (* 8.0 l_0_12_38) l_0_12_42)))
 (let ((?x22437 (* (* 8.0 l_0_12_37) l_0_12_41)))
 (let ((?x22430 (* (* 8.0 l_0_12_25) l_0_12_29)))
 (let ((?x22427 (* (* 8.0 l_0_12_24) l_0_12_28)))
 (let ((?x22424 (* (* 8.0 l_0_12_23) l_0_12_27)))
 (let ((?x22421 (* (* 8.0 l_0_12_22) l_0_12_26)))
 (let ((?x23418 (- (+ (+ (+ ?x22421 ?x22424) ?x22427) ?x22430) (* (* 2.0 l_0_12_26) l_0_12_26))))
 (let ((?x23424 (- (- ?x23418 (* (* 2.0 l_0_12_27) l_0_12_27)) (* (* 2.0 l_0_12_28) l_0_12_28))))
 (let ((?x23430 (- (- ?x23424 (* (* 2.0 l_0_12_29) l_0_12_29)) (* (* 2.0 l_0_12_30) l_0_12_30))))
 (let ((?x23437 (+ (+ (+ (- (- (- (- ?x23430 ?x22437) ?x22440) ?x22443) ?x22446) ?x4071) ?x4081) ?x12394)))
 (= (+ (+ ?x23437 ?x4089) ?x23405) 0.0))))))))))))))))))))))))
(assert
 (let ((?x22520 (* (* 4.0 l_0_12_45) l_0_12_45)))
 (let ((?x22517 (* (* 4.0 l_0_12_44) l_0_12_44)))
 (let ((?x22514 (* (* 4.0 l_0_12_43) l_0_12_43)))
 (let ((?x22511 (* (* 4.0 l_0_12_42) l_0_12_42)))
 (let ((?x22508 (* (* 4.0 l_0_12_41) l_0_12_41)))
 (let ((?x22502 (* l_0_12_30 l_0_12_30)))
 (let ((?x22503 (* 4.0 ?x22502)))
 (let ((?x22499 (* l_0_12_29 l_0_12_29)))
 (let ((?x22500 (* 4.0 ?x22499)))
 (let ((?x22496 (* l_0_12_28 l_0_12_28)))
 (let ((?x22497 (* 4.0 ?x22496)))
 (let ((?x22493 (* l_0_12_27 l_0_12_27)))
 (let ((?x22494 (* 4.0 ?x22493)))
 (let ((?x22490 (* l_0_12_26 l_0_12_26)))
 (let ((?x22491 (* 4.0 ?x22490)))
 (let ((?x18008 (- (- (- (+ (+ (+ (+ ?x22491 ?x22494) ?x22497) ?x22500) ?x22503) ?x22508) ?x22511) ?x22514)))
 (= (- (- ?x18008 ?x22517) ?x22520) 0.0))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_16 0.0))
(assert
 (>= l_0_12_18 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_25 0.0))
(assert
 (>= l_0_12_30 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_33 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_40 0.0))
(assert
 (>= l_0_12_45 0.0))
(assert
 (>= l_0_12_46 0.0))
(assert
 (>= l_0_12_48 0.0))
(assert
 (>= l_0_12_51 0.0))
(assert
 (>= l_0_12_55 0.0))
(assert
 (>= l_0_12_60 0.0))
(assert
 (>= l_0_12_61 0.0))
(assert
 (>= l_0_12_63 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_70 0.0))
(assert
 (>= l_0_12_75 0.0))
(assert
 (>= l_0_12_76 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_81 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_91 0.0))
(assert
 (>= l_0_12_93 0.0))
(assert
 (>= l_0_12_96 0.0))
(assert
 (>= l_0_12_100 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x23489 (* ?x23488 l_0_13_31)))
 (let ((?x23485 (* l_0_13_16 l_0_13_16)))
 (let ((?x23486 (* 4.0 ?x23485)))
 (let ((?x23487 (+ (- (* (* 2.0 l_0_13_1) l_0_13_2) (* l_0_13_1 l_0_13_1)) ?x23486)))
 (= (+ (- (- ?x23487 ?x23489) (* (* 2.0 l_0_13_61) l_0_13_62)) 1.0) 0.0)))))))
(assert
 (let ((?x23512 (- (- (* 1.0 (* l_0_13_1 l_0_13_1)) (* l_0_13_61 l_0_13_61)) 1.0)))
 (= ?x23512 0.0)))
(assert
 (let ((?x23535 (* l_0_13_63 l_0_13_63)))
 (let ((?x23533 (* l_0_13_62 l_0_13_62)))
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23531 (* ?x23530 l_0_13_32)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23522 (* ?x23521 l_0_13_17)))
 (let ((?x23526 (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_2) ?x23522) (* 1.0 (* l_0_13_2 l_0_13_2)))))
 (let ((?x23536 (- (- (- (+ ?x23526 (* 1.0 (* l_0_13_3 l_0_13_3))) ?x23531) ?x23533) ?x23535)))
 (= ?x23536 0.0))))))))))
(assert
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23566 (* ?x23530 l_0_13_34)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x23564 (* ?x23488 l_0_13_32)))
 (let ((?x23561 (* 2.0 l_0_13_3)))
 (let ((?x23562 (* ?x23561 l_0_13_5)))
 (let ((?x23558 (* 2.0 l_0_13_2)))
 (let ((?x23559 (* ?x23558 l_0_13_4)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23556 (* ?x23521 l_0_13_19)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x23554 (* ?x23553 l_0_13_17)))
 (let ((?x23563 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_1) l_0_13_4) ?x23554) ?x23556) ?x23559) ?x23562)))
 (let ((?x23573 (- (- (- (- ?x23563 ?x23564) ?x23566) (* (* 2.0 l_0_13_62) l_0_13_64)) (* (* 2.0 l_0_13_63) l_0_13_65))))
 (= ?x23573 0.0))))))))))))))))
(assert
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23601 (* ?x23530 l_0_13_37)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x23564 (* ?x23488 l_0_13_32)))
 (let ((?x23561 (* 2.0 l_0_13_3)))
 (let ((?x23598 (* ?x23561 l_0_13_8)))
 (let ((?x23558 (* 2.0 l_0_13_2)))
 (let ((?x23596 (* ?x23558 l_0_13_7)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23594 (* ?x23521 l_0_13_22)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x23554 (* ?x23553 l_0_13_17)))
 (let ((?x23599 (+ (+ (+ (- (* (* (- 2.0) l_0_13_1) l_0_13_7) ?x23554) ?x23594) ?x23596) ?x23598)))
 (let ((?x23606 (- (- (- (+ ?x23599 ?x23564) ?x23601) (* (* 2.0 l_0_13_62) l_0_13_67)) (* (* 2.0 l_0_13_63) l_0_13_68))))
 (= ?x23606 0.0))))))))))))))))
(assert
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23644 (* ?x23530 l_0_13_41)))
 (let ((?x23531 (* ?x23530 l_0_13_32)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23641 (* ?x23521 l_0_13_26)))
 (let ((?x23522 (* ?x23521 l_0_13_17)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x23638 (* ?x23637 l_0_13_3)))
 (let ((?x23636 (+ (* (* (- 2.0) l_0_13_1) l_0_13_11) (* (* 2.0 l_0_13_11) l_0_13_2))))
 (let ((?x23648 (+ (- (- (+ (+ (+ ?x23636 ?x23638) ?x23522) ?x23641) ?x23531) ?x23644) (* (* 2.0 l_0_13_46) l_0_13_47))))
 (let ((?x23652 (- (- ?x23648 (* (* 2.0 l_0_13_62) l_0_13_71)) (* (* 2.0 l_0_13_63) l_0_13_72))))
 (= ?x23652 0.0)))))))))))))
(assert
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23691 (* ?x23690 l_0_13_33)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23688 (* ?x23687 l_0_13_32)))
 (let ((?x23527 (* l_0_13_3 l_0_13_3)))
 (let ((?x23524 (* l_0_13_2 l_0_13_2)))
 (let ((?x23682 (* l_0_13_18 l_0_13_18)))
 (let ((?x23683 (* 4.0 ?x23682)))
 (let ((?x23680 (* l_0_13_17 l_0_13_17)))
 (let ((?x23681 (* 4.0 ?x23680)))
 (= (- (- (- (- (+ ?x23681 ?x23683) ?x23524) ?x23527) ?x23688) ?x23691) 0.0))))))))))))
(assert
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23718 (* ?x23717 l_0_13_35)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23712 (* ?x23711 l_0_13_34)))
 (let ((?x23561 (* 2.0 l_0_13_3)))
 (let ((?x23562 (* ?x23561 l_0_13_5)))
 (let ((?x23558 (* 2.0 l_0_13_2)))
 (let ((?x23559 (* ?x23558 l_0_13_4)))
 (let ((?x23682 (* l_0_13_18 l_0_13_18)))
 (let ((?x23707 (* 2.0 ?x23682)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23705 (* ?x23704 l_0_13_20)))
 (let ((?x23680 (* l_0_13_17 l_0_13_17)))
 (let ((?x23702 (* 2.0 ?x23680)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23701 (* ?x23700 l_0_13_19)))
 (let ((?x23716 (- (- (- (- (+ (+ (+ ?x23701 ?x23702) ?x23705) ?x23707) ?x23559) ?x23562) ?x23712) (* (* 2.0 l_0_13_32) l_0_13_32))))
 (= (- (- ?x23716 ?x23718) (* (* 2.0 l_0_13_33) l_0_13_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x12687 (* l_0_13_33 l_0_13_33)))
 (let ((?x18152 (* 2.0 ?x12687)))
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23746 (* ?x23717 l_0_13_38)))
 (let ((?x12682 (* l_0_13_32 l_0_13_32)))
 (let ((?x4465 (* 2.0 ?x12682)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23743 (* ?x23711 l_0_13_37)))
 (let ((?x23561 (* 2.0 l_0_13_3)))
 (let ((?x23598 (* ?x23561 l_0_13_8)))
 (let ((?x23558 (* 2.0 l_0_13_2)))
 (let ((?x23596 (* ?x23558 l_0_13_7)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23736 (* ?x23704 l_0_13_23)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23732 (* ?x23700 l_0_13_22)))
 (let ((?x23740 (- (+ (- ?x23732 (* (* 2.0 l_0_13_17) l_0_13_17)) ?x23736) (* (* 2.0 l_0_13_18) l_0_13_18))))
 (= (+ (- (+ (- (- (- ?x23740 ?x23596) ?x23598) ?x23743) ?x4465) ?x23746) ?x18152) 0.0)))))))))))))))))))
(assert
 (let ((?x23774 (* l_0_13_48 l_0_13_48)))
 (let ((?x23772 (* l_0_13_47 l_0_13_47)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23691 (* ?x23690 l_0_13_33)))
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23769 (* ?x23717 l_0_13_42)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23688 (* ?x23687 l_0_13_32)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23766 (* ?x23711 l_0_13_41)))
 (let ((?x23682 (* l_0_13_18 l_0_13_18)))
 (let ((?x23683 (* 4.0 ?x23682)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23763 (* ?x23704 l_0_13_27)))
 (let ((?x23680 (* l_0_13_17 l_0_13_17)))
 (let ((?x23681 (* 4.0 ?x23680)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23760 (* ?x23700 l_0_13_26)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x23638 (* ?x23637 l_0_13_3)))
 (let ((?x23764 (+ (+ (+ (- (* (* (- 2.0) l_0_13_11) l_0_13_2) ?x23638) ?x23760) ?x23681) ?x23763)))
 (let ((?x23775 (+ (+ (- (- (- (- (+ ?x23764 ?x23683) ?x23766) ?x23688) ?x23769) ?x23691) ?x23772) ?x23774)))
 (= ?x23775 0.0))))))))))))))))))))))))
(assert
 (let ((?x23827 (* l_0_13_6 l_0_13_6)))
 (let ((?x23825 (* l_0_13_5 l_0_13_5)))
 (let ((?x23823 (* l_0_13_4 l_0_13_4)))
 (let ((?x23820 (* 4.0 l_0_13_36)))
 (let ((?x23821 (* ?x23820 l_0_13_36)))
 (let ((?x23817 (* 4.0 l_0_13_35)))
 (let ((?x23818 (* ?x23817 l_0_13_35)))
 (let ((?x23814 (* 4.0 l_0_13_34)))
 (let ((?x23815 (* ?x23814 l_0_13_34)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23812 (* ?x23690 l_0_13_35)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23810 (* ?x23687 l_0_13_34)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x23808 (* ?x23807 l_0_13_32)))
 (let ((?x23804 (* l_0_13_21 l_0_13_21)))
 (let ((?x23805 (* 4.0 ?x23804)))
 (let ((?x23801 (* l_0_13_20 l_0_13_20)))
 (let ((?x23802 (* 4.0 ?x23801)))
 (let ((?x23798 (* l_0_13_19 l_0_13_19)))
 (let ((?x23799 (* 4.0 ?x23798)))
 (let ((?x23795 (* 4.0 l_0_13_18)))
 (let ((?x23796 (* ?x23795 l_0_13_20)))
 (let ((?x23794 (+ (* (* (- 2.0) l_0_13_16) l_0_13_17) (* (* 4.0 l_0_13_17) l_0_13_19))))
 (let ((?x23813 (- (- (+ (+ (+ (+ (+ ?x23794 ?x23796) ?x23799) ?x23802) ?x23805) ?x23808) ?x23810) ?x23812)))
 (= (- (- (- (- (- (- ?x23813 ?x23815) ?x23818) ?x23821) ?x23823) ?x23825) ?x23827) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23891 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x23888 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x23885 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x23881 (* 8.0 l_0_13_36)))
 (let ((?x23882 (* ?x23881 l_0_13_39)))
 (let ((?x23878 (* 8.0 l_0_13_35)))
 (let ((?x23879 (* ?x23878 l_0_13_38)))
 (let ((?x23875 (* 8.0 l_0_13_34)))
 (let ((?x23876 (* ?x23875 l_0_13_37)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23873 (* ?x23690 l_0_13_38)))
 (let ((?x23812 (* ?x23690 l_0_13_35)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23870 (* ?x23687 l_0_13_37)))
 (let ((?x23810 (* ?x23687 l_0_13_34)))
 (let ((?x23866 (* 8.0 l_0_13_21)))
 (let ((?x23867 (* ?x23866 l_0_13_24)))
 (let ((?x23863 (* 8.0 l_0_13_20)))
 (let ((?x23864 (* ?x23863 l_0_13_23)))
 (let ((?x23860 (* 8.0 l_0_13_19)))
 (let ((?x23861 (* ?x23860 l_0_13_22)))
 (let ((?x23795 (* 4.0 l_0_13_18)))
 (let ((?x23858 (* ?x23795 l_0_13_23)))
 (let ((?x23796 (* ?x23795 l_0_13_20)))
 (let ((?x23792 (* 4.0 l_0_13_17)))
 (let ((?x23855 (* ?x23792 l_0_13_22)))
 (let ((?x23862 (+ (+ (- (+ (* (* (- 4.0) l_0_13_17) l_0_13_19) ?x23855) ?x23796) ?x23858) ?x23861)))
 (let ((?x23877 (- (- (+ (- (+ (+ (+ ?x23862 ?x23864) ?x23867) ?x23810) ?x23870) ?x23812) ?x23873) ?x23876)))
 (= (- (- (- (- (- ?x23877 ?x23879) ?x23882) ?x23885) ?x23888) ?x23891) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x23881 (* 8.0 l_0_13_36)))
 (let ((?x23962 (* ?x23881 l_0_13_43)))
 (let ((?x23878 (* 8.0 l_0_13_35)))
 (let ((?x23960 (* ?x23878 l_0_13_42)))
 (let ((?x23875 (* 8.0 l_0_13_34)))
 (let ((?x23958 (* ?x23875 l_0_13_41)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23956 (* ?x23690 l_0_13_42)))
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23718 (* ?x23717 l_0_13_35)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23953 (* ?x23687 l_0_13_41)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23712 (* ?x23711 l_0_13_34)))
 (let ((?x23866 (* 8.0 l_0_13_21)))
 (let ((?x23950 (* ?x23866 l_0_13_28)))
 (let ((?x23863 (* 8.0 l_0_13_20)))
 (let ((?x23948 (* ?x23863 l_0_13_27)))
 (let ((?x23860 (* 8.0 l_0_13_19)))
 (let ((?x23946 (* ?x23860 l_0_13_26)))
 (let ((?x23795 (* 4.0 l_0_13_18)))
 (let ((?x23944 (* ?x23795 l_0_13_27)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23705 (* ?x23704 l_0_13_20)))
 (let ((?x23792 (* 4.0 l_0_13_17)))
 (let ((?x23941 (* ?x23792 l_0_13_26)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23701 (* ?x23700 l_0_13_19)))
 (let ((?x23937 (* 2.0 l_0_13_13)))
 (let ((?x23938 (* ?x23937 l_0_13_6)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x23935 (* ?x23637 l_0_13_5)))
 (let ((?x23942 (+ (+ (- (- (* (* (- 2.0) l_0_13_11) l_0_13_4) ?x23935) ?x23938) ?x23701) ?x23941)))
 (let ((?x23954 (- (- (+ (+ (+ (+ (+ ?x23942 ?x23705) ?x23944) ?x23946) ?x23948) ?x23950) ?x23712) ?x23953)))
 (let ((?x23966 (+ (- (- (- (- (- ?x23954 ?x23718) ?x23956) ?x23958) ?x23960) ?x23962) (* (* 2.0 l_0_13_47) l_0_13_49))))
 (= (+ ?x23966 (* (* 2.0 l_0_13_48) l_0_13_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24034 (* l_0_13_9 l_0_13_9)))
 (let ((?x24032 (* l_0_13_8 l_0_13_8)))
 (let ((?x24030 (* l_0_13_7 l_0_13_7)))
 (let ((?x24027 (* 4.0 l_0_13_40)))
 (let ((?x24028 (* ?x24027 l_0_13_40)))
 (let ((?x24024 (* 4.0 l_0_13_39)))
 (let ((?x24025 (* ?x24024 l_0_13_39)))
 (let ((?x24021 (* 4.0 l_0_13_38)))
 (let ((?x24022 (* ?x24021 l_0_13_38)))
 (let ((?x24018 (* 4.0 l_0_13_37)))
 (let ((?x24019 (* ?x24018 l_0_13_37)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23873 (* ?x23690 l_0_13_38)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23870 (* ?x23687 l_0_13_37)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x23808 (* ?x23807 l_0_13_32)))
 (let ((?x24012 (* l_0_13_25 l_0_13_25)))
 (let ((?x24013 (* 4.0 ?x24012)))
 (let ((?x24009 (* l_0_13_24 l_0_13_24)))
 (let ((?x24010 (* 4.0 ?x24009)))
 (let ((?x24006 (* l_0_13_23 l_0_13_23)))
 (let ((?x24007 (* 4.0 ?x24006)))
 (let ((?x24003 (* l_0_13_22 l_0_13_22)))
 (let ((?x24004 (* 4.0 ?x24003)))
 (let ((?x23795 (* 4.0 l_0_13_18)))
 (let ((?x23858 (* ?x23795 l_0_13_23)))
 (let ((?x23792 (* 4.0 l_0_13_17)))
 (let ((?x23855 (* ?x23792 l_0_13_22)))
 (let ((?x24000 (+ (* (- l_0_13_10) l_0_13_10) (* (* 2.0 l_0_13_16) l_0_13_17))))
 (let ((?x24015 (- (+ (+ (+ (+ (- (- ?x24000 ?x23855) ?x23858) ?x24004) ?x24007) ?x24010) ?x24013) ?x23808)))
 (let ((?x24031 (- (- (- (- (- (+ (+ ?x24015 ?x23870) ?x23873) ?x24019) ?x24022) ?x24025) ?x24028) ?x24030)))
 (= (- (- ?x24031 ?x24032) ?x24034) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24080 (* (* 8.0 l_0_13_40) l_0_13_44)))
 (let ((?x24077 (* (* 8.0 l_0_13_39) l_0_13_43)))
 (let ((?x24074 (* (* 8.0 l_0_13_38) l_0_13_42)))
 (let ((?x24071 (* (* 8.0 l_0_13_37) l_0_13_41)))
 (let ((?x23690 (* 4.0 l_0_13_33)))
 (let ((?x23956 (* ?x23690 l_0_13_42)))
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23746 (* ?x23717 l_0_13_38)))
 (let ((?x23687 (* 4.0 l_0_13_32)))
 (let ((?x23953 (* ?x23687 l_0_13_41)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23743 (* ?x23711 l_0_13_37)))
 (let ((?x24064 (* (* 8.0 l_0_13_25) l_0_13_29)))
 (let ((?x24061 (* (* 8.0 l_0_13_24) l_0_13_28)))
 (let ((?x24058 (* (* 8.0 l_0_13_23) l_0_13_27)))
 (let ((?x24055 (* (* 8.0 l_0_13_22) l_0_13_26)))
 (let ((?x23795 (* 4.0 l_0_13_18)))
 (let ((?x23944 (* ?x23795 l_0_13_27)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23736 (* ?x23704 l_0_13_23)))
 (let ((?x23792 (* 4.0 l_0_13_17)))
 (let ((?x23941 (* ?x23792 l_0_13_26)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23732 (* ?x23700 l_0_13_22)))
 (let ((?x23937 (* 2.0 l_0_13_13)))
 (let ((?x24048 (* ?x23937 l_0_13_9)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x13133 (* ?x23637 l_0_13_8)))
 (let ((?x23634 (* 2.0 l_0_13_11)))
 (let ((?x5140 (* ?x23634 l_0_13_7)))
 (let ((?x24050 (+ (- (- (- (* (* (- 2.0) l_0_13_10) l_0_13_14) ?x5140) ?x13133) ?x24048) ?x23732)))
 (let ((?x24065 (+ (+ (+ (+ (- (+ (- ?x24050 ?x23941) ?x23736) ?x23944) ?x24055) ?x24058) ?x24061) ?x24064)))
 (let ((?x24078 (- (- (- (+ (- (+ (- ?x24065 ?x23743) ?x23953) ?x23746) ?x23956) ?x24071) ?x24074) ?x24077)))
 (let ((?x24085 (+ (+ (- ?x24078 ?x24080) (* (* 2.0 l_0_13_47) l_0_13_52)) (* (* 2.0 l_0_13_48) l_0_13_53))))
 (= ?x24085 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24172 (* (* 4.0 l_0_13_45) l_0_13_45)))
 (let ((?x24169 (* (* 4.0 l_0_13_44) l_0_13_44)))
 (let ((?x24166 (* (* 4.0 l_0_13_43) l_0_13_43)))
 (let ((?x24163 (* (* 4.0 l_0_13_42) l_0_13_42)))
 (let ((?x24160 (* (* 4.0 l_0_13_41) l_0_13_41)))
 (let ((?x23717 (* 8.0 l_0_13_33)))
 (let ((?x23769 (* ?x23717 l_0_13_42)))
 (let ((?x23711 (* 8.0 l_0_13_32)))
 (let ((?x23766 (* ?x23711 l_0_13_41)))
 (let ((?x24154 (* l_0_13_30 l_0_13_30)))
 (let ((?x24155 (* 4.0 ?x24154)))
 (let ((?x24151 (* l_0_13_29 l_0_13_29)))
 (let ((?x24152 (* 4.0 ?x24151)))
 (let ((?x24148 (* l_0_13_28 l_0_13_28)))
 (let ((?x24149 (* 4.0 ?x24148)))
 (let ((?x24145 (* l_0_13_27 l_0_13_27)))
 (let ((?x24146 (* 4.0 ?x24145)))
 (let ((?x24142 (* l_0_13_26 l_0_13_26)))
 (let ((?x24143 (* 4.0 ?x24142)))
 (let ((?x23704 (* 8.0 l_0_13_18)))
 (let ((?x23763 (* ?x23704 l_0_13_27)))
 (let ((?x23700 (* 8.0 l_0_13_17)))
 (let ((?x23760 (* ?x23700 l_0_13_26)))
 (let ((?x24138 (* l_0_13_15 l_0_13_15)))
 (let ((?x24136 (* l_0_13_14 l_0_13_14)))
 (let ((?x24134 (* l_0_13_13 l_0_13_13)))
 (let ((?x24135 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x24134)))
 (let ((?x24150 (+ (+ (+ (+ (+ (- (- ?x24135 ?x24136) ?x24138) ?x23760) ?x23763) ?x24143) ?x24146) ?x24149)))
 (let ((?x24167 (- (- (- (- (- (+ (+ ?x24150 ?x24152) ?x24155) ?x23766) ?x23769) ?x24160) ?x24163) ?x24166)))
 (let ((?x24177 (+ (+ (- (- ?x24167 ?x24169) ?x24172) (* (* 2.0 l_0_13_47) l_0_13_56)) (* (* 2.0 l_0_13_48) l_0_13_57))))
 (= ?x24177 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x23485 (* l_0_13_16 l_0_13_16)))
 (let ((?x18712 (* 2.0 ?x23485)))
 (let ((?x24200 (- (+ (* (* 2.0 l_0_13_1) l_0_13_4) ?x18712) (* (* 2.0 l_0_13_31) l_0_13_31))))
 (= (- ?x24200 (* (* 2.0 l_0_13_61) l_0_13_64)) 0.0)))))
(assert
 (let ((?x23502 (* l_0_13_31 l_0_13_31)))
 (let ((?x24206 (* 2.0 ?x23502)))
 (let ((?x24215 (- (* (* 2.0 l_0_13_1) l_0_13_7) (* (* 2.0 l_0_13_16) l_0_13_16))))
 (= (- (+ ?x24215 ?x24206) (* (* 2.0 l_0_13_61) l_0_13_67)) 0.0)))))
(assert
 (let ((?x24230 (* l_0_13_46 l_0_13_46)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x23489 (* ?x23488 l_0_13_31)))
 (let ((?x23485 (* l_0_13_16 l_0_13_16)))
 (let ((?x23486 (* 4.0 ?x23485)))
 (let ((?x24233 (- (+ (- (+ (* (* 2.0 l_0_13_1) l_0_13_11) ?x23486) ?x23489) ?x24230) (* (* 2.0 l_0_13_61) l_0_13_71))))
 (= ?x24233 0.0))))))))
(assert
 (let ((?x24254 (* l_0_13_66 l_0_13_66)))
 (let ((?x24252 (* l_0_13_65 l_0_13_65)))
 (let ((?x24250 (* l_0_13_64 l_0_13_64)))
 (let ((?x23502 (* l_0_13_31 l_0_13_31)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x24241 (* ?x23488 l_0_13_34)))
 (let ((?x24242 (- (- (* (* 4.0 l_0_13_16) l_0_13_19) (* l_0_13_16 l_0_13_16)) ?x24241)))
 (let ((?x24247 (+ (+ (+ ?x24242 ?x23502) (* 1.0 (* l_0_13_4 l_0_13_4))) (* 1.0 (* l_0_13_5 l_0_13_5)))))
 (let ((?x24255 (- (- (- (+ ?x24247 (* 1.0 (* l_0_13_6 l_0_13_6))) ?x24250) ?x24252) ?x24254)))
 (= ?x24255 0.0)))))))))))
(assert
 (let ((?x23891 (* (* 2.0 l_0_13_6) l_0_13_9)))
 (let ((?x23888 (* (* 2.0 l_0_13_5) l_0_13_8)))
 (let ((?x23885 (* (* 2.0 l_0_13_4) l_0_13_7)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x24270 (* ?x23488 l_0_13_37)))
 (let ((?x24241 (* ?x23488 l_0_13_34)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x24267 (* ?x23553 l_0_13_22)))
 (let ((?x24272 (+ (- (+ (+ (* (* (- 4.0) l_0_13_16) l_0_13_19) ?x24267) ?x24241) ?x24270) ?x23885)))
 (let ((?x24280 (- (- (+ (+ ?x24272 ?x23888) ?x23891) (* (* 2.0 l_0_13_64) l_0_13_67)) (* (* 2.0 l_0_13_65) l_0_13_68))))
 (= (- ?x24280 (* (* 2.0 l_0_13_66) l_0_13_69)) 0.0))))))))))))
(assert
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x24308 (* ?x23488 l_0_13_41)))
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23566 (* ?x23530 l_0_13_34)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x24305 (* ?x23553 l_0_13_26)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23556 (* ?x23521 l_0_13_19)))
 (let ((?x23937 (* 2.0 l_0_13_13)))
 (let ((?x23938 (* ?x23937 l_0_13_6)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x23935 (* ?x23637 l_0_13_5)))
 (let ((?x24306 (+ (+ (+ (+ (* (* 2.0 l_0_13_11) l_0_13_4) ?x23935) ?x23938) ?x23556) ?x24305)))
 (let ((?x24313 (- (+ (- (- ?x24306 ?x23566) ?x24308) (* (* 2.0 l_0_13_46) l_0_13_49)) (* (* 2.0 l_0_13_64) l_0_13_71))))
 (let ((?x24317 (- (- ?x24313 (* (* 2.0 l_0_13_65) l_0_13_72)) (* (* 2.0 l_0_13_66) l_0_13_73))))
 (= ?x24317 0.0)))))))))))))))))
(assert
 (let ((?x24345 (* l_0_13_70 l_0_13_70)))
 (let ((?x24341 (* l_0_13_69 l_0_13_69)))
 (let ((?x24339 (* l_0_13_68 l_0_13_68)))
 (let ((?x24337 (* l_0_13_67 l_0_13_67)))
 (let ((?x23502 (* l_0_13_31 l_0_13_31)))
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x24270 (* ?x23488 l_0_13_37)))
 (let ((?x23485 (* l_0_13_16 l_0_13_16)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x24267 (* ?x23553 l_0_13_22)))
 (let ((?x24336 (- (+ (+ (- (* 1.0 (* l_0_13_10 l_0_13_10)) ?x24267) ?x23485) ?x24270) ?x23502)))
 (let ((?x24344 (+ (- (- (- ?x24336 ?x24337) ?x24339) ?x24341) (* 1.0 (* l_0_13_7 l_0_13_7)))))
 (let ((?x24350 (+ (+ (- ?x24344 ?x24345) (* 1.0 (* l_0_13_8 l_0_13_8))) (* 1.0 (* l_0_13_9 l_0_13_9)))))
 (= ?x24350 0.0)))))))))))))))
(assert
 (let ((?x23488 (* 4.0 l_0_13_31)))
 (let ((?x24308 (* ?x23488 l_0_13_41)))
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23601 (* ?x23530 l_0_13_37)))
 (let ((?x23553 (* 4.0 l_0_13_16)))
 (let ((?x24305 (* ?x23553 l_0_13_26)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23594 (* ?x23521 l_0_13_22)))
 (let ((?x23937 (* 2.0 l_0_13_13)))
 (let ((?x24048 (* ?x23937 l_0_13_9)))
 (let ((?x23637 (* 2.0 l_0_13_12)))
 (let ((?x13133 (* ?x23637 l_0_13_8)))
 (let ((?x23634 (* 2.0 l_0_13_11)))
 (let ((?x5140 (* ?x23634 l_0_13_7)))
 (let ((?x24358 (+ (+ (+ (+ (* (* 2.0 l_0_13_10) l_0_13_14) ?x5140) ?x13133) ?x24048) ?x23594)))
 (let ((?x24363 (+ (+ (- (- ?x24358 ?x24305) ?x23601) ?x24308) (* (* 2.0 l_0_13_46) l_0_13_52))))
 (let ((?x24369 (- (- ?x24363 (* (* 2.0 l_0_13_67) l_0_13_71)) (* (* 2.0 l_0_13_68) l_0_13_72))))
 (let ((?x24375 (- (- ?x24369 (* (* 2.0 l_0_13_69) l_0_13_73)) (* (* 2.0 l_0_13_70) l_0_13_74))))
 (= ?x24375 0.0))))))))))))))))))))
(assert
 (let ((?x24405 (* l_0_13_75 l_0_13_75)))
 (let ((?x24403 (* l_0_13_74 l_0_13_74)))
 (let ((?x24401 (* l_0_13_73 l_0_13_73)))
 (let ((?x24399 (* l_0_13_72 l_0_13_72)))
 (let ((?x24397 (* l_0_13_71 l_0_13_71)))
 (let ((?x23530 (* 8.0 l_0_13_31)))
 (let ((?x23644 (* ?x23530 l_0_13_41)))
 (let ((?x23521 (* 8.0 l_0_13_16)))
 (let ((?x23641 (* ?x23521 l_0_13_26)))
 (let ((?x24386 (+ (* 1.0 (* l_0_13_11 l_0_13_11)) (* 1.0 (* l_0_13_12 l_0_13_12)))))
 (let ((?x24390 (+ (+ ?x24386 (* 1.0 (* l_0_13_13 l_0_13_13))) (* 1.0 (* l_0_13_14 l_0_13_14)))))
 (let ((?x24396 (+ (- (+ (+ ?x24390 (* 1.0 (* l_0_13_15 l_0_13_15))) ?x23641) ?x23644) (* (* 2.0 l_0_13_46) l_0_13_56))))
 (= (- (- (- (- (- ?x24396 ?x24397) ?x24399) ?x24401) ?x24403) ?x24405) 0.0))))))))))))))
(assert
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24419 (* ?x23807 l_0_13_34)))
 (let ((?x24414 (+ (* (* (- 2.0) l_0_13_16) l_0_13_19) (* 2.0 (* l_0_13_19 l_0_13_19)))))
 (let ((?x24418 (+ (+ ?x24414 (* 2.0 (* l_0_13_20 l_0_13_20))) (* 2.0 (* l_0_13_21 l_0_13_21)))))
 (let ((?x24426 (- (- (+ ?x24418 ?x24419) (* (* 2.0 l_0_13_34) l_0_13_34)) (* (* 2.0 l_0_13_35) l_0_13_35))))
 (= (- ?x24426 (* (* 2.0 l_0_13_36) l_0_13_36)) 0.0)))))))
(assert
 (let ((?x12864 (* l_0_13_36 l_0_13_36)))
 (let ((?x18982 (* 2.0 ?x12864)))
 (let ((?x23820 (* 4.0 l_0_13_36)))
 (let ((?x24475 (* ?x23820 l_0_13_39)))
 (let ((?x12832 (* l_0_13_35 l_0_13_35)))
 (let ((?x24435 (* 2.0 ?x12832)))
 (let ((?x23817 (* 4.0 l_0_13_35)))
 (let ((?x24472 (* ?x23817 l_0_13_38)))
 (let ((?x23841 (* l_0_13_34 l_0_13_34)))
 (let ((?x13638 (* 2.0 ?x23841)))
 (let ((?x23814 (* 4.0 l_0_13_34)))
 (let ((?x24469 (* ?x23814 l_0_13_37)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24467 (* ?x23807 l_0_13_37)))
 (let ((?x24461 (* 4.0 l_0_13_21)))
 (let ((?x24462 (* ?x24461 l_0_13_24)))
 (let ((?x24455 (* 4.0 l_0_13_20)))
 (let ((?x24456 (* ?x24455 l_0_13_23)))
 (let ((?x24449 (* 4.0 l_0_13_19)))
 (let ((?x24450 (* ?x24449 l_0_13_22)))
 (let ((?x24454 (- (+ (* (* (- 2.0) l_0_13_16) l_0_13_22) ?x24450) (* (* 2.0 l_0_13_19) l_0_13_19))))
 (let ((?x24466 (- (+ (- (+ ?x24454 ?x24456) (* (* 2.0 l_0_13_20) l_0_13_20)) ?x24462) (* (* 2.0 l_0_13_21) l_0_13_21))))
 (let ((?x24477 (+ (- (+ (- (+ (- (+ ?x24466 ?x24467) ?x24469) ?x13638) ?x24472) ?x24435) ?x24475) ?x18982)))
 (= ?x24477 0.0)))))))))))))))))))))))))
(assert
 (let ((?x24535 (* l_0_13_51 l_0_13_51)))
 (let ((?x24533 (* l_0_13_50 l_0_13_50)))
 (let ((?x24531 (* l_0_13_49 l_0_13_49)))
 (let ((?x23820 (* 4.0 l_0_13_36)))
 (let ((?x23821 (* ?x23820 l_0_13_36)))
 (let ((?x24528 (* ?x23820 l_0_13_43)))
 (let ((?x23817 (* 4.0 l_0_13_35)))
 (let ((?x23818 (* ?x23817 l_0_13_35)))
 (let ((?x24525 (* ?x23817 l_0_13_42)))
 (let ((?x23814 (* 4.0 l_0_13_34)))
 (let ((?x23815 (* ?x23814 l_0_13_34)))
 (let ((?x24522 (* ?x23814 l_0_13_41)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24520 (* ?x23807 l_0_13_41)))
 (let ((?x23804 (* l_0_13_21 l_0_13_21)))
 (let ((?x23805 (* 4.0 ?x23804)))
 (let ((?x24461 (* 4.0 l_0_13_21)))
 (let ((?x24517 (* ?x24461 l_0_13_28)))
 (let ((?x23801 (* l_0_13_20 l_0_13_20)))
 (let ((?x23802 (* 4.0 ?x23801)))
 (let ((?x24455 (* 4.0 l_0_13_20)))
 (let ((?x24514 (* ?x24455 l_0_13_27)))
 (let ((?x23798 (* l_0_13_19 l_0_13_19)))
 (let ((?x23799 (* 4.0 ?x23798)))
 (let ((?x24449 (* 4.0 l_0_13_19)))
 (let ((?x24511 (* ?x24449 l_0_13_26)))
 (let ((?x24516 (+ (+ (+ (+ (* (* (- 2.0) l_0_13_16) l_0_13_26) ?x24511) ?x23799) ?x24514) ?x23802)))
 (let ((?x24527 (- (- (- (- (+ (+ (+ ?x24516 ?x24517) ?x23805) ?x24520) ?x24522) ?x23815) ?x24525) ?x23818)))
 (= (+ (+ (+ (- (- ?x24527 ?x24528) ?x23821) ?x24531) ?x24533) ?x24535) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x12687 (* l_0_13_33 l_0_13_33)))
 (let ((?x12682 (* l_0_13_32 l_0_13_32)))
 (let ((?x24565 (+ (- (* (- l_0_13_17) l_0_13_17) (* l_0_13_18 l_0_13_18)) ?x12682)))
 (= (+ ?x24565 ?x12687) 0.0)))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24580 (* ?x23720 l_0_13_35)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24578 (* ?x23714 l_0_13_34)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x24576 (* ?x23738 l_0_13_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_19) ?x24576) ?x24578) ?x24580) 0.0))))))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24595 (* ?x23720 l_0_13_38)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24593 (* ?x23714 l_0_13_37)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x19016 (* ?x23738 l_0_13_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_22) ?x19016) ?x24593) ?x24595) 0.0))))))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24613 (* ?x23720 l_0_13_42)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24611 (* ?x23714 l_0_13_41)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x24609 (* ?x23738 l_0_13_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_17) l_0_13_26) ?x24609) ?x24611) ?x24613) 0.0))))))))
(assert
 (let ((?x12864 (* l_0_13_36 l_0_13_36)))
 (let ((?x12832 (* l_0_13_35 l_0_13_35)))
 (let ((?x23841 (* l_0_13_34 l_0_13_34)))
 (let ((?x23804 (* l_0_13_21 l_0_13_21)))
 (let ((?x24629 (- (- (* (- l_0_13_19) l_0_13_19) (* l_0_13_20 l_0_13_20)) ?x23804)))
 (= (+ (+ (+ ?x24629 ?x23841) ?x12832) ?x12864) 0.0)))))))
(assert
 (let ((?x24427 (* 2.0 l_0_13_36)))
 (let ((?x24653 (* ?x24427 l_0_13_39)))
 (let ((?x24424 (* 2.0 l_0_13_35)))
 (let ((?x24651 (* ?x24424 l_0_13_38)))
 (let ((?x24421 (* 2.0 l_0_13_34)))
 (let ((?x24649 (* ?x24421 l_0_13_37)))
 (let ((?x24464 (* 2.0 l_0_13_21)))
 (let ((?x24647 (* ?x24464 l_0_13_24)))
 (let ((?x24458 (* 2.0 l_0_13_20)))
 (let ((?x24645 (* ?x24458 l_0_13_23)))
 (let ((?x24652 (+ (+ (- (- (* (* (- 2.0) l_0_13_19) l_0_13_22) ?x24645) ?x24647) ?x24649) ?x24651)))
 (= (+ ?x24652 ?x24653) 0.0)))))))))))))
(assert
 (let ((?x24427 (* 2.0 l_0_13_36)))
 (let ((?x24669 (* ?x24427 l_0_13_43)))
 (let ((?x24424 (* 2.0 l_0_13_35)))
 (let ((?x24667 (* ?x24424 l_0_13_42)))
 (let ((?x24421 (* 2.0 l_0_13_34)))
 (let ((?x24665 (* ?x24421 l_0_13_41)))
 (let ((?x24464 (* 2.0 l_0_13_21)))
 (let ((?x19056 (* ?x24464 l_0_13_28)))
 (let ((?x24458 (* 2.0 l_0_13_20)))
 (let ((?x13699 (* ?x24458 l_0_13_27)))
 (let ((?x24668 (+ (+ (- (- (* (* (- 2.0) l_0_13_19) l_0_13_26) ?x13699) ?x19056) ?x24665) ?x24667)))
 (= (+ ?x24668 ?x24669) 0.0)))))))))))))
(assert
 (let ((?x18524 (* l_0_13_40 l_0_13_40)))
 (let ((?x13118 (* l_0_13_39 l_0_13_39)))
 (let ((?x5132 (* l_0_13_38 l_0_13_38)))
 (let ((?x4966 (* l_0_13_37 l_0_13_37)))
 (let ((?x12864 (* l_0_13_36 l_0_13_36)))
 (let ((?x12832 (* l_0_13_35 l_0_13_35)))
 (let ((?x23841 (* l_0_13_34 l_0_13_34)))
 (let ((?x24012 (* l_0_13_25 l_0_13_25)))
 (let ((?x24009 (* l_0_13_24 l_0_13_24)))
 (let ((?x24006 (* l_0_13_23 l_0_13_23)))
 (let ((?x24003 (* l_0_13_22 l_0_13_22)))
 (let ((?x23804 (* l_0_13_21 l_0_13_21)))
 (let ((?x24684 (- (+ (+ (* l_0_13_19 l_0_13_19) (* l_0_13_20 l_0_13_20)) ?x23804) ?x24003)))
 (let ((?x24691 (+ (- (- (- (- (- (- ?x24684 ?x24006) ?x24009) ?x24012) ?x23841) ?x12832) ?x12864) ?x4966)))
 (= (+ (+ (+ ?x24691 ?x5132) ?x13118) ?x18524) 0.0))))))))))))))))
(assert
 (let ((?x24721 (* 2.0 l_0_13_40)))
 (let ((?x24722 (* ?x24721 l_0_13_44)))
 (let ((?x24718 (* 2.0 l_0_13_39)))
 (let ((?x24719 (* ?x24718 l_0_13_43)))
 (let ((?x24715 (* 2.0 l_0_13_38)))
 (let ((?x24716 (* ?x24715 l_0_13_42)))
 (let ((?x24712 (* 2.0 l_0_13_37)))
 (let ((?x24713 (* ?x24712 l_0_13_41)))
 (let ((?x24709 (* 2.0 l_0_13_25)))
 (let ((?x24710 (* ?x24709 l_0_13_29)))
 (let ((?x24706 (* 2.0 l_0_13_24)))
 (let ((?x24707 (* ?x24706 l_0_13_28)))
 (let ((?x24703 (* 2.0 l_0_13_23)))
 (let ((?x24704 (* ?x24703 l_0_13_27)))
 (let ((?x24714 (+ (- (- (- (* (* (- 2.0) l_0_13_22) l_0_13_26) ?x24704) ?x24707) ?x24710) ?x24713)))
 (= (+ (+ (+ ?x24714 ?x24716) ?x24719) ?x24722) 0.0)))))))))))))))))
(assert
 (let ((?x18581 (* l_0_13_45 l_0_13_45)))
 (let ((?x13353 (* l_0_13_44 l_0_13_44)))
 (let ((?x5261 (* l_0_13_43 l_0_13_43)))
 (let ((?x5324 (* l_0_13_42 l_0_13_42)))
 (let ((?x5187 (* l_0_13_41 l_0_13_41)))
 (let ((?x24154 (* l_0_13_30 l_0_13_30)))
 (let ((?x24151 (* l_0_13_29 l_0_13_29)))
 (let ((?x24148 (* l_0_13_28 l_0_13_28)))
 (let ((?x6038 (- (- (* (- l_0_13_26) l_0_13_26) (* l_0_13_27 l_0_13_27)) ?x24148)))
 (let ((?x24750 (+ (+ (+ (+ (+ (- (- ?x6038 ?x24151) ?x24154) ?x5187) ?x5324) ?x5261) ?x13353) ?x18581)))
 (= ?x24750 0.0))))))))))))
(assert
 (let ((?x23820 (* 4.0 l_0_13_36)))
 (let ((?x24475 (* ?x23820 l_0_13_39)))
 (let ((?x23817 (* 4.0 l_0_13_35)))
 (let ((?x24472 (* ?x23817 l_0_13_38)))
 (let ((?x23814 (* 4.0 l_0_13_34)))
 (let ((?x24469 (* ?x23814 l_0_13_37)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24419 (* ?x23807 l_0_13_34)))
 (let ((?x24461 (* 4.0 l_0_13_21)))
 (let ((?x24462 (* ?x24461 l_0_13_24)))
 (let ((?x24455 (* 4.0 l_0_13_20)))
 (let ((?x24456 (* ?x24455 l_0_13_23)))
 (let ((?x24449 (* 4.0 l_0_13_19)))
 (let ((?x24450 (* ?x24449 l_0_13_22)))
 (let ((?x24764 (+ (- (- (- (* (* 2.0 l_0_13_16) l_0_13_19) ?x24450) ?x24456) ?x24462) (* 2.0 (* l_0_13_22 l_0_13_22)))))
 (let ((?x24768 (+ (+ ?x24764 (* 2.0 (* l_0_13_23 l_0_13_23))) (* 2.0 (* l_0_13_24 l_0_13_24)))))
 (let ((?x24773 (+ (+ (- (+ ?x24768 (* 2.0 (* l_0_13_25 l_0_13_25))) ?x24419) ?x24469) ?x24472)))
 (let ((?x24778 (- (- (+ ?x24773 ?x24475) (* (* 2.0 l_0_13_37) l_0_13_37)) (* (* 2.0 l_0_13_38) l_0_13_38))))
 (let ((?x24782 (- (- ?x24778 (* (* 2.0 l_0_13_39) l_0_13_39)) (* (* 2.0 l_0_13_40) l_0_13_40))))
 (= ?x24782 0.0)))))))))))))))))))))
(assert
 (let ((?x18524 (* l_0_13_40 l_0_13_40)))
 (let ((?x13810 (* 2.0 ?x18524)))
 (let ((?x13118 (* l_0_13_39 l_0_13_39)))
 (let ((?x13805 (* 2.0 ?x13118)))
 (let ((?x5132 (* l_0_13_38 l_0_13_38)))
 (let ((?x24798 (* 2.0 ?x5132)))
 (let ((?x4966 (* l_0_13_37 l_0_13_37)))
 (let ((?x13747 (* 2.0 ?x4966)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24467 (* ?x23807 l_0_13_37)))
 (let ((?x24810 (- (* (* 2.0 l_0_13_16) l_0_13_22) (* (* 2.0 l_0_13_22) l_0_13_22))))
 (let ((?x24814 (- (- ?x24810 (* (* 2.0 l_0_13_23) l_0_13_23)) (* (* 2.0 l_0_13_24) l_0_13_24))))
 (let ((?x24819 (+ (+ (- (- ?x24814 (* (* 2.0 l_0_13_25) l_0_13_25)) ?x24467) ?x13747) ?x24798)))
 (= (+ (+ ?x24819 ?x13805) ?x13810) 0.0)))))))))))))))
(assert
 (let ((?x24861 (* l_0_13_55 l_0_13_55)))
 (let ((?x24859 (* l_0_13_54 l_0_13_54)))
 (let ((?x24857 (* l_0_13_53 l_0_13_53)))
 (let ((?x24855 (* l_0_13_52 l_0_13_52)))
 (let ((?x24027 (* 4.0 l_0_13_40)))
 (let ((?x24028 (* ?x24027 l_0_13_40)))
 (let ((?x24852 (* ?x24027 l_0_13_44)))
 (let ((?x24024 (* 4.0 l_0_13_39)))
 (let ((?x24025 (* ?x24024 l_0_13_39)))
 (let ((?x24849 (* ?x24024 l_0_13_43)))
 (let ((?x24021 (* 4.0 l_0_13_38)))
 (let ((?x24022 (* ?x24021 l_0_13_38)))
 (let ((?x24846 (* ?x24021 l_0_13_42)))
 (let ((?x24018 (* 4.0 l_0_13_37)))
 (let ((?x24019 (* ?x24018 l_0_13_37)))
 (let ((?x24843 (* ?x24018 l_0_13_41)))
 (let ((?x23807 (* 2.0 l_0_13_31)))
 (let ((?x24520 (* ?x23807 l_0_13_41)))
 (let ((?x24012 (* l_0_13_25 l_0_13_25)))
 (let ((?x24013 (* 4.0 ?x24012)))
 (let ((?x24839 (* (* 4.0 l_0_13_25) l_0_13_29)))
 (let ((?x24009 (* l_0_13_24 l_0_13_24)))
 (let ((?x24010 (* 4.0 ?x24009)))
 (let ((?x24835 (* (* 4.0 l_0_13_24) l_0_13_28)))
 (let ((?x24006 (* l_0_13_23 l_0_13_23)))
 (let ((?x24007 (* 4.0 ?x24006)))
 (let ((?x24831 (* (* 4.0 l_0_13_23) l_0_13_27)))
 (let ((?x24003 (* l_0_13_22 l_0_13_22)))
 (let ((?x24004 (* 4.0 ?x24003)))
 (let ((?x13864 (* (* 4.0 l_0_13_22) l_0_13_26)))
 (let ((?x24833 (+ (- (+ (- (* (* 2.0 l_0_13_16) l_0_13_26) ?x13864) ?x24004) ?x24831) ?x24007)))
 (let ((?x24845 (- (+ (- (+ (- (+ (- ?x24833 ?x24835) ?x24010) ?x24839) ?x24013) ?x24520) ?x24843) ?x24019)))
 (let ((?x24856 (+ (- (+ (- (+ (- (+ ?x24845 ?x24846) ?x24022) ?x24849) ?x24025) ?x24852) ?x24028) ?x24855)))
 (= (+ (+ (+ ?x24856 ?x24857) ?x24859) ?x24861) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12687 (* l_0_13_33 l_0_13_33)))
 (let ((?x12682 (* l_0_13_32 l_0_13_32)))
 (let ((?x13900 (- (- (+ (* l_0_13_17 l_0_13_17) (* l_0_13_18 l_0_13_18)) ?x12682) ?x12687)))
 (= ?x13900 0.0)))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24580 (* ?x23720 l_0_13_35)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24578 (* ?x23714 l_0_13_34)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x24576 (* ?x23738 l_0_13_20)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_19) ?x24576) ?x24578) ?x24580) 0.0))))))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24595 (* ?x23720 l_0_13_38)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24593 (* ?x23714 l_0_13_37)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x19016 (* ?x23738 l_0_13_23)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_22) ?x19016) ?x24593) ?x24595) 0.0))))))))
(assert
 (let ((?x23720 (* 2.0 l_0_13_33)))
 (let ((?x24613 (* ?x23720 l_0_13_42)))
 (let ((?x23714 (* 2.0 l_0_13_32)))
 (let ((?x24611 (* ?x23714 l_0_13_41)))
 (let ((?x23738 (* 2.0 l_0_13_18)))
 (let ((?x24609 (* ?x23738 l_0_13_27)))
 (= (- (- (+ (* (* 2.0 l_0_13_17) l_0_13_26) ?x24609) ?x24611) ?x24613) 0.0))))))))
(assert
 (let ((?x24427 (* 2.0 l_0_13_36)))
 (let ((?x24653 (* ?x24427 l_0_13_39)))
 (let ((?x24424 (* 2.0 l_0_13_35)))
 (let ((?x24651 (* ?x24424 l_0_13_38)))
 (let ((?x24421 (* 2.0 l_0_13_34)))
 (let ((?x24649 (* ?x24421 l_0_13_37)))
 (let ((?x24464 (* 2.0 l_0_13_21)))
 (let ((?x24647 (* ?x24464 l_0_13_24)))
 (let ((?x24458 (* 2.0 l_0_13_20)))
 (let ((?x24645 (* ?x24458 l_0_13_23)))
 (let ((?x24893 (- (- (+ (+ (* (* 2.0 l_0_13_19) l_0_13_22) ?x24645) ?x24647) ?x24649) ?x24651)))
 (= (- ?x24893 ?x24653) 0.0)))))))))))))
(assert
 (let ((?x24427 (* 2.0 l_0_13_36)))
 (let ((?x24669 (* ?x24427 l_0_13_43)))
 (let ((?x24424 (* 2.0 l_0_13_35)))
 (let ((?x24667 (* ?x24424 l_0_13_42)))
 (let ((?x24421 (* 2.0 l_0_13_34)))
 (let ((?x24665 (* ?x24421 l_0_13_41)))
 (let ((?x24464 (* 2.0 l_0_13_21)))
 (let ((?x19056 (* ?x24464 l_0_13_28)))
 (let ((?x24458 (* 2.0 l_0_13_20)))
 (let ((?x13699 (* ?x24458 l_0_13_27)))
 (let ((?x19313 (- (- (+ (+ (* (* 2.0 l_0_13_19) l_0_13_26) ?x13699) ?x19056) ?x24665) ?x24667)))
 (= (- ?x19313 ?x24669) 0.0)))))))))))))
(assert
 (let ((?x18524 (* l_0_13_40 l_0_13_40)))
 (let ((?x13118 (* l_0_13_39 l_0_13_39)))
 (let ((?x5132 (* l_0_13_38 l_0_13_38)))
 (let ((?x4966 (* l_0_13_37 l_0_13_37)))
 (let ((?x24012 (* l_0_13_25 l_0_13_25)))
 (let ((?x24009 (* l_0_13_24 l_0_13_24)))
 (let ((?x14114 (+ (+ (+ (* l_0_13_22 l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x24009) ?x24012)))
 (= (- (- (- (- ?x14114 ?x4966) ?x5132) ?x13118) ?x18524) 0.0)))))))))
(assert
 (let ((?x24721 (* 2.0 l_0_13_40)))
 (let ((?x24722 (* ?x24721 l_0_13_44)))
 (let ((?x24718 (* 2.0 l_0_13_39)))
 (let ((?x24719 (* ?x24718 l_0_13_43)))
 (let ((?x24715 (* 2.0 l_0_13_38)))
 (let ((?x24716 (* ?x24715 l_0_13_42)))
 (let ((?x24712 (* 2.0 l_0_13_37)))
 (let ((?x24713 (* ?x24712 l_0_13_41)))
 (let ((?x24709 (* 2.0 l_0_13_25)))
 (let ((?x24710 (* ?x24709 l_0_13_29)))
 (let ((?x24706 (* 2.0 l_0_13_24)))
 (let ((?x24707 (* ?x24706 l_0_13_28)))
 (let ((?x24703 (* 2.0 l_0_13_23)))
 (let ((?x24704 (* ?x24703 l_0_13_27)))
 (let ((?x24906 (- (+ (+ (+ (* (* 2.0 l_0_13_22) l_0_13_26) ?x24704) ?x24707) ?x24710) ?x24713)))
 (= (- (- (- ?x24906 ?x24716) ?x24719) ?x24722) 0.0)))))))))))))))))
(assert
 (let ((?x18581 (* l_0_13_45 l_0_13_45)))
 (let ((?x13353 (* l_0_13_44 l_0_13_44)))
 (let ((?x5261 (* l_0_13_43 l_0_13_43)))
 (let ((?x5324 (* l_0_13_42 l_0_13_42)))
 (let ((?x5187 (* l_0_13_41 l_0_13_41)))
 (let ((?x24154 (* l_0_13_30 l_0_13_30)))
 (let ((?x24151 (* l_0_13_29 l_0_13_29)))
 (let ((?x24148 (* l_0_13_28 l_0_13_28)))
 (let ((?x19404 (+ (+ (+ (* l_0_13_26 l_0_13_26) (* l_0_13_27 l_0_13_27)) ?x24148) ?x24151)))
 (= (- (- (- (- (- (+ ?x19404 ?x24154) ?x5187) ?x5324) ?x5261) ?x13353) ?x18581) 0.0)))))))))))
(assert
 (let ((?x24027 (* 4.0 l_0_13_40)))
 (let ((?x24852 (* ?x24027 l_0_13_44)))
 (let ((?x24024 (* 4.0 l_0_13_39)))
 (let ((?x24849 (* ?x24024 l_0_13_43)))
 (let ((?x24021 (* 4.0 l_0_13_38)))
 (let ((?x24846 (* ?x24021 l_0_13_42)))
 (let ((?x24018 (* 4.0 l_0_13_37)))
 (let ((?x24843 (* ?x24018 l_0_13_41)))
 (let ((?x23820 (* 4.0 l_0_13_36)))
 (let ((?x24528 (* ?x23820 l_0_13_43)))
 (let ((?x23881 (* 8.0 l_0_13_36)))
 (let ((?x23882 (* ?x23881 l_0_13_39)))
 (let ((?x23817 (* 4.0 l_0_13_35)))
 (let ((?x24525 (* ?x23817 l_0_13_42)))
 (let ((?x23878 (* 8.0 l_0_13_35)))
 (let ((?x23879 (* ?x23878 l_0_13_38)))
 (let ((?x23814 (* 4.0 l_0_13_34)))
 (let ((?x24522 (* ?x23814 l_0_13_41)))
 (let ((?x23875 (* 8.0 l_0_13_34)))
 (let ((?x23876 (* ?x23875 l_0_13_37)))
 (let ((?x24839 (* (* 4.0 l_0_13_25) l_0_13_29)))
 (let ((?x24835 (* (* 4.0 l_0_13_24) l_0_13_28)))
 (let ((?x24831 (* (* 4.0 l_0_13_23) l_0_13_27)))
 (let ((?x13864 (* (* 4.0 l_0_13_22) l_0_13_26)))
 (let ((?x24461 (* 4.0 l_0_13_21)))
 (let ((?x24517 (* ?x24461 l_0_13_28)))
 (let ((?x23866 (* 8.0 l_0_13_21)))
 (let ((?x23867 (* ?x23866 l_0_13_24)))
 (let ((?x24455 (* 4.0 l_0_13_20)))
 (let ((?x24514 (* ?x24455 l_0_13_27)))
 (let ((?x23863 (* 8.0 l_0_13_20)))
 (let ((?x23864 (* ?x23863 l_0_13_23)))
 (let ((?x24449 (* 4.0 l_0_13_19)))
 (let ((?x24511 (* ?x24449 l_0_13_26)))
 (let ((?x23860 (* 8.0 l_0_13_19)))
 (let ((?x23861 (* ?x23860 l_0_13_22)))
 (let ((?x6539 (+ (+ (- (+ (- (+ (- ?x23861 ?x24511) ?x23864) ?x24514) ?x23867) ?x24517) ?x13864) ?x24831)))
 (let ((?x24943 (- (+ (- (+ (- (+ (+ ?x6539 ?x24835) ?x24839) ?x23876) ?x24522) ?x23879) ?x24525) ?x23882)))
 (let ((?x24951 (+ (- (- (- (- (+ ?x24943 ?x24528) ?x24843) ?x24846) ?x24849) ?x24852) (* (* 2.0 l_0_13_49) l_0_13_52))))
 (let ((?x24957 (+ (+ ?x24951 (* (* 2.0 l_0_13_50) l_0_13_53)) (* (* 2.0 l_0_13_51) l_0_13_54))))
 (= ?x24957 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23881 (* 8.0 l_0_13_36)))
 (let ((?x23962 (* ?x23881 l_0_13_43)))
 (let ((?x23878 (* 8.0 l_0_13_35)))
 (let ((?x23960 (* ?x23878 l_0_13_42)))
 (let ((?x23875 (* 8.0 l_0_13_34)))
 (let ((?x23958 (* ?x23875 l_0_13_41)))
 (let ((?x23866 (* 8.0 l_0_13_21)))
 (let ((?x23950 (* ?x23866 l_0_13_28)))
 (let ((?x23863 (* 8.0 l_0_13_20)))
 (let ((?x23948 (* ?x23863 l_0_13_27)))
 (let ((?x23860 (* 8.0 l_0_13_19)))
 (let ((?x23946 (* ?x23860 l_0_13_26)))
 (let ((?x24976 (+ (+ (+ (+ ?x23946 ?x23948) ?x23950) (* 2.0 (* l_0_13_26 l_0_13_26))) (* 2.0 (* l_0_13_27 l_0_13_27)))))
 (let ((?x24980 (+ (+ ?x24976 (* 2.0 (* l_0_13_28 l_0_13_28))) (* 2.0 (* l_0_13_29 l_0_13_29)))))
 (let ((?x24985 (- (- (- (+ ?x24980 (* 2.0 (* l_0_13_30 l_0_13_30))) ?x23958) ?x23960) ?x23962)))
 (let ((?x24991 (- (- ?x24985 (* (* 2.0 l_0_13_41) l_0_13_41)) (* (* 2.0 l_0_13_42) l_0_13_42))))
 (let ((?x24997 (- (- ?x24991 (* (* 2.0 l_0_13_43) l_0_13_43)) (* (* 2.0 l_0_13_44) l_0_13_44))))
 (let ((?x25002 (+ (- ?x24997 (* (* 2.0 l_0_13_45) l_0_13_45)) (* (* 2.0 l_0_13_49) l_0_13_56))))
 (let ((?x25006 (+ (+ ?x25002 (* (* 2.0 l_0_13_50) l_0_13_57)) (* (* 2.0 l_0_13_51) l_0_13_58))))
 (= ?x25006 0.0)))))))))))))))))))))
(assert
 (let ((?x18581 (* l_0_13_45 l_0_13_45)))
 (let ((?x25016 (* 2.0 ?x18581)))
 (let ((?x13353 (* l_0_13_44 l_0_13_44)))
 (let ((?x14193 (* 2.0 ?x13353)))
 (let ((?x5261 (* l_0_13_43 l_0_13_43)))
 (let ((?x14192 (* 2.0 ?x5261)))
 (let ((?x5324 (* l_0_13_42 l_0_13_42)))
 (let ((?x6627 (* 2.0 ?x5324)))
 (let ((?x5187 (* l_0_13_41 l_0_13_41)))
 (let ((?x6628 (* 2.0 ?x5187)))
 (let ((?x24080 (* (* 8.0 l_0_13_40) l_0_13_44)))
 (let ((?x24077 (* (* 8.0 l_0_13_39) l_0_13_43)))
 (let ((?x24074 (* (* 8.0 l_0_13_38) l_0_13_42)))
 (let ((?x24071 (* (* 8.0 l_0_13_37) l_0_13_41)))
 (let ((?x24064 (* (* 8.0 l_0_13_25) l_0_13_29)))
 (let ((?x24061 (* (* 8.0 l_0_13_24) l_0_13_28)))
 (let ((?x24058 (* (* 8.0 l_0_13_23) l_0_13_27)))
 (let ((?x24055 (* (* 8.0 l_0_13_22) l_0_13_26)))
 (let ((?x25035 (- (+ (+ (+ ?x24055 ?x24058) ?x24061) ?x24064) (* (* 2.0 l_0_13_26) l_0_13_26))))
 (let ((?x25041 (- (- ?x25035 (* (* 2.0 l_0_13_27) l_0_13_27)) (* (* 2.0 l_0_13_28) l_0_13_28))))
 (let ((?x25047 (- (- ?x25041 (* (* 2.0 l_0_13_29) l_0_13_29)) (* (* 2.0 l_0_13_30) l_0_13_30))))
 (let ((?x25054 (+ (+ (+ (- (- (- (- ?x25047 ?x24071) ?x24074) ?x24077) ?x24080) ?x6628) ?x6627) ?x14192)))
 (let ((?x25062 (+ (+ (+ (+ ?x25054 ?x14193) ?x25016) (* (* 2.0 l_0_13_52) l_0_13_56)) (* (* 2.0 l_0_13_53) l_0_13_57))))
 (let ((?x25068 (+ (+ ?x25062 (* (* 2.0 l_0_13_54) l_0_13_58)) (* (* 2.0 l_0_13_55) l_0_13_59))))
 (= ?x25068 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14223 (* l_0_13_60 l_0_13_60)))
 (let ((?x6720 (* l_0_13_59 l_0_13_59)))
 (let ((?x14225 (* l_0_13_58 l_0_13_58)))
 (let ((?x13000 (* l_0_13_57 l_0_13_57)))
 (let ((?x13262 (* l_0_13_56 l_0_13_56)))
 (let ((?x24172 (* (* 4.0 l_0_13_45) l_0_13_45)))
 (let ((?x24169 (* (* 4.0 l_0_13_44) l_0_13_44)))
 (let ((?x24166 (* (* 4.0 l_0_13_43) l_0_13_43)))
 (let ((?x24163 (* (* 4.0 l_0_13_42) l_0_13_42)))
 (let ((?x24160 (* (* 4.0 l_0_13_41) l_0_13_41)))
 (let ((?x24154 (* l_0_13_30 l_0_13_30)))
 (let ((?x24155 (* 4.0 ?x24154)))
 (let ((?x24151 (* l_0_13_29 l_0_13_29)))
 (let ((?x24152 (* 4.0 ?x24151)))
 (let ((?x24148 (* l_0_13_28 l_0_13_28)))
 (let ((?x24149 (* 4.0 ?x24148)))
 (let ((?x24145 (* l_0_13_27 l_0_13_27)))
 (let ((?x24146 (* 4.0 ?x24145)))
 (let ((?x24142 (* l_0_13_26 l_0_13_26)))
 (let ((?x24143 (* 4.0 ?x24142)))
 (let ((?x19539 (- (- (- (+ (+ (+ (+ ?x24143 ?x24146) ?x24149) ?x24152) ?x24155) ?x24160) ?x24163) ?x24166)))
 (let ((?x25071 (+ (+ (+ (+ (+ (- (- ?x19539 ?x24169) ?x24172) ?x13262) ?x13000) ?x14225) ?x6720) ?x14223)))
 (= ?x25071 0.0))))))))))))))))))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_16 0.0))
(assert
 (>= l_0_13_18 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_25 0.0))
(assert
 (>= l_0_13_30 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_33 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_40 0.0))
(assert
 (>= l_0_13_45 0.0))
(assert
 (>= l_0_13_46 0.0))
(assert
 (>= l_0_13_48 0.0))
(assert
 (>= l_0_13_51 0.0))
(assert
 (>= l_0_13_55 0.0))
(assert
 (>= l_0_13_60 0.0))
(assert
 (>= l_0_13_61 0.0))
(assert
 (>= l_0_13_63 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_70 0.0))
(assert
 (>= l_0_13_75 0.0))
(assert
 (let ((?x25128 (* l_0_14_81 l_0_14_81)))
 (let ((?x25126 (* l_0_14_80 l_0_14_80)))
 (let ((?x25124 (* l_0_14_79 l_0_14_79)))
 (let ((?x25122 (* l_0_14_66 l_0_14_66)))
 (let ((?x25120 (* l_0_14_65 l_0_14_65)))
 (let ((?x25118 (* l_0_14_64 l_0_14_64)))
 (let ((?x25107 (* l_0_14_31 l_0_14_31)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25105 (* ?x25104 l_0_14_34)))
 (let ((?x25106 (- (- (* (* 4.0 l_0_14_16) l_0_14_19) (* l_0_14_16 l_0_14_16)) ?x25105)))
 (let ((?x25114 (+ (+ (+ ?x25106 ?x25107) (* 1.0 (* l_0_14_4 l_0_14_4))) (* 1.0 (* l_0_14_5 l_0_14_5)))))
 (let ((?x25123 (- (- (- (+ ?x25114 (* 1.0 (* l_0_14_6 l_0_14_6))) ?x25118) ?x25120) ?x25122)))
 (= (+ (- (- (- ?x25123 ?x25124) ?x25126) ?x25128) 1.0) 0.0))))))))))))))
(assert
 (let ((?x25181 (* l_0_14_85 l_0_14_85)))
 (let ((?x25179 (* l_0_14_84 l_0_14_84)))
 (let ((?x25177 (* l_0_14_83 l_0_14_83)))
 (let ((?x25175 (* l_0_14_82 l_0_14_82)))
 (let ((?x25170 (* l_0_14_70 l_0_14_70)))
 (let ((?x25165 (* l_0_14_69 l_0_14_69)))
 (let ((?x25163 (* l_0_14_68 l_0_14_68)))
 (let ((?x25161 (* l_0_14_67 l_0_14_67)))
 (let ((?x25107 (* l_0_14_31 l_0_14_31)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25158 (* ?x25104 l_0_14_37)))
 (let ((?x25102 (* l_0_14_16 l_0_14_16)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x25155 (* ?x25100 l_0_14_22)))
 (let ((?x25160 (- (+ (+ (- (* 1.0 (* l_0_14_10 l_0_14_10)) ?x25155) ?x25102) ?x25158) ?x25107)))
 (let ((?x25169 (+ (- (- (- ?x25160 ?x25161) ?x25163) ?x25165) (* 1.0 (* l_0_14_7 l_0_14_7)))))
 (let ((?x25178 (- (- (+ (- ?x25169 ?x25170) (* 1.0 (* l_0_14_8 l_0_14_8))) ?x25175) ?x25177)))
 (let ((?x25186 (- (+ (- (- ?x25178 ?x25179) ?x25181) (* 1.0 (* l_0_14_9 l_0_14_9))) 1.0)))
 (= ?x25186 0.0))))))))))))))))))))
(assert
 (let ((?x25211 (+ (* (* 2.0 l_0_14_1) l_0_14_4) (* 2.0 (* l_0_14_16 l_0_14_16)))))
 (let ((?x25217 (- (- ?x25211 (* (* 2.0 l_0_14_31) l_0_14_31)) (* (* 2.0 l_0_14_61) l_0_14_64))))
 (= (- (- ?x25217 (* (* 2.0 l_0_14_76) l_0_14_79)) 2.0) 0.0))))
(assert
 (let ((?x25107 (* l_0_14_31 l_0_14_31)))
 (let ((?x25226 (* 2.0 ?x25107)))
 (let ((?x25244 (- (* (* 2.0 l_0_14_1) l_0_14_7) (* (* 2.0 l_0_14_16) l_0_14_16))))
 (let ((?x25249 (- (- (+ ?x25244 ?x25226) (* (* 2.0 l_0_14_61) l_0_14_67)) (* (* 2.0 l_0_14_76) l_0_14_82))))
 (= (+ ?x25249 2.0) 0.0))))))
(assert
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25256 (* ?x25104 l_0_14_31)))
 (let ((?x25102 (* l_0_14_16 l_0_14_16)))
 (let ((?x6877 (* 4.0 ?x25102)))
 (let ((?x6157 (+ (- (* (* 2.0 l_0_14_1) l_0_14_2) (* l_0_14_1 l_0_14_1)) ?x6877)))
 (let ((?x25261 (- (- (- ?x6157 ?x25256) (* (* 2.0 l_0_14_61) l_0_14_62)) (* (* 2.0 l_0_14_76) l_0_14_77))))
 (= (- ?x25261 4.0) 0.0))))))))
(assert
 (let ((?x25289 (* l_0_14_46 l_0_14_46)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25256 (* ?x25104 l_0_14_31)))
 (let ((?x25102 (* l_0_14_16 l_0_14_16)))
 (let ((?x6877 (* 4.0 ?x25102)))
 (let ((?x25292 (- (+ (- (+ (* (* 2.0 l_0_14_1) l_0_14_11) ?x6877) ?x25256) ?x25289) (* (* 2.0 l_0_14_61) l_0_14_71))))
 (= (- (- ?x25292 (* (* 2.0 l_0_14_76) l_0_14_86)) 4.0) 0.0))))))))
(assert
 (let ((?x25332 (* l_0_14_78 l_0_14_78)))
 (let ((?x25330 (* l_0_14_77 l_0_14_77)))
 (let ((?x25328 (* l_0_14_63 l_0_14_63)))
 (let ((?x25326 (* l_0_14_62 l_0_14_62)))
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25324 (* ?x25323 l_0_14_32)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25315 (* ?x25314 l_0_14_17)))
 (let ((?x25319 (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_2) ?x25315) (* 1.0 (* l_0_14_2 l_0_14_2)))))
 (let ((?x25329 (- (- (- (+ ?x25319 (* 1.0 (* l_0_14_3 l_0_14_3))) ?x25324) ?x25326) ?x25328)))
 (= (- (- ?x25329 ?x25330) ?x25332) 0.0))))))))))))
(assert
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25360 (* ?x25323 l_0_14_34)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25358 (* ?x25104 l_0_14_32)))
 (let ((?x25355 (* 2.0 l_0_14_3)))
 (let ((?x25356 (* ?x25355 l_0_14_5)))
 (let ((?x25352 (* 2.0 l_0_14_2)))
 (let ((?x25353 (* ?x25352 l_0_14_4)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25350 (* ?x25314 l_0_14_19)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x25348 (* ?x25100 l_0_14_17)))
 (let ((?x25357 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_1) l_0_14_4) ?x25348) ?x25350) ?x25353) ?x25356)))
 (let ((?x25367 (- (- (- (- ?x25357 ?x25358) ?x25360) (* (* 2.0 l_0_14_62) l_0_14_64)) (* (* 2.0 l_0_14_63) l_0_14_65))))
 (let ((?x25373 (- (- ?x25367 (* (* 2.0 l_0_14_77) l_0_14_79)) (* (* 2.0 l_0_14_78) l_0_14_80))))
 (= ?x25373 0.0)))))))))))))))))
(assert
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25413 (* ?x25323 l_0_14_37)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25358 (* ?x25104 l_0_14_32)))
 (let ((?x25355 (* 2.0 l_0_14_3)))
 (let ((?x25410 (* ?x25355 l_0_14_8)))
 (let ((?x25352 (* 2.0 l_0_14_2)))
 (let ((?x25408 (* ?x25352 l_0_14_7)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25406 (* ?x25314 l_0_14_22)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x25348 (* ?x25100 l_0_14_17)))
 (let ((?x25411 (+ (+ (+ (- (* (* (- 2.0) l_0_14_1) l_0_14_7) ?x25348) ?x25406) ?x25408) ?x25410)))
 (let ((?x25418 (- (- (- (+ ?x25411 ?x25358) ?x25413) (* (* 2.0 l_0_14_62) l_0_14_67)) (* (* 2.0 l_0_14_63) l_0_14_68))))
 (let ((?x25422 (- (- ?x25418 (* (* 2.0 l_0_14_77) l_0_14_82)) (* (* 2.0 l_0_14_78) l_0_14_83))))
 (= ?x25422 0.0)))))))))))))))))
(assert
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25455 (* ?x25323 l_0_14_41)))
 (let ((?x25324 (* ?x25323 l_0_14_32)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25452 (* ?x25314 l_0_14_26)))
 (let ((?x25315 (* ?x25314 l_0_14_17)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25449 (* ?x25448 l_0_14_3)))
 (let ((?x25447 (+ (* (* (- 2.0) l_0_14_1) l_0_14_11) (* (* 2.0 l_0_14_11) l_0_14_2))))
 (let ((?x25459 (+ (- (- (+ (+ (+ ?x25447 ?x25449) ?x25315) ?x25452) ?x25324) ?x25455) (* (* 2.0 l_0_14_46) l_0_14_47))))
 (let ((?x25463 (- (- ?x25459 (* (* 2.0 l_0_14_62) l_0_14_71)) (* (* 2.0 l_0_14_63) l_0_14_72))))
 (let ((?x25467 (- (- ?x25463 (* (* 2.0 l_0_14_77) l_0_14_86)) (* (* 2.0 l_0_14_78) l_0_14_87))))
 (= ?x25467 0.0))))))))))))))
(assert
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25511 (* ?x25510 l_0_14_33)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25508 (* ?x25507 l_0_14_32)))
 (let ((?x25320 (* l_0_14_3 l_0_14_3)))
 (let ((?x25317 (* l_0_14_2 l_0_14_2)))
 (let ((?x25502 (* l_0_14_18 l_0_14_18)))
 (let ((?x25503 (* 4.0 ?x25502)))
 (let ((?x25500 (* l_0_14_17 l_0_14_17)))
 (let ((?x25501 (* 4.0 ?x25500)))
 (= (- (- (- (- (+ ?x25501 ?x25503) ?x25317) ?x25320) ?x25508) ?x25511) 0.0))))))))))))
(assert
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x25543 (* ?x25542 l_0_14_35)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x25537 (* ?x25536 l_0_14_34)))
 (let ((?x25355 (* 2.0 l_0_14_3)))
 (let ((?x25356 (* ?x25355 l_0_14_5)))
 (let ((?x25352 (* 2.0 l_0_14_2)))
 (let ((?x25353 (* ?x25352 l_0_14_4)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x25530 (* ?x25529 l_0_14_20)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x25526 (* ?x25525 l_0_14_19)))
 (let ((?x25533 (+ (+ (+ ?x25526 (* 2.0 (* l_0_14_17 l_0_14_17))) ?x25530) (* 2.0 (* l_0_14_18 l_0_14_18)))))
 (let ((?x25541 (- (- (- (- ?x25533 ?x25353) ?x25356) ?x25537) (* (* 2.0 l_0_14_32) l_0_14_32))))
 (= (- (- ?x25541 ?x25543) (* (* 2.0 l_0_14_33) l_0_14_33)) 0.0))))))))))))))))
(assert
 (let ((?x25515 (* l_0_14_33 l_0_14_33)))
 (let ((?x7289 (* 2.0 ?x25515)))
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x25585 (* ?x25542 l_0_14_38)))
 (let ((?x7100 (* l_0_14_32 l_0_14_32)))
 (let ((?x18839 (* 2.0 ?x7100)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x25582 (* ?x25536 l_0_14_37)))
 (let ((?x25355 (* 2.0 l_0_14_3)))
 (let ((?x25410 (* ?x25355 l_0_14_8)))
 (let ((?x25352 (* 2.0 l_0_14_2)))
 (let ((?x25408 (* ?x25352 l_0_14_7)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x25575 (* ?x25529 l_0_14_23)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x25571 (* ?x25525 l_0_14_22)))
 (let ((?x25579 (- (+ (- ?x25571 (* (* 2.0 l_0_14_17) l_0_14_17)) ?x25575) (* (* 2.0 l_0_14_18) l_0_14_18))))
 (= (+ (- (+ (- (- (- ?x25579 ?x25408) ?x25410) ?x25582) ?x18839) ?x25585) ?x7289) 0.0)))))))))))))))))))
(assert
 (let ((?x25597 (* l_0_14_48 l_0_14_48)))
 (let ((?x7300 (* l_0_14_47 l_0_14_47)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25511 (* ?x25510 l_0_14_33)))
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x19818 (* ?x25542 l_0_14_42)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25508 (* ?x25507 l_0_14_32)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x19829 (* ?x25536 l_0_14_41)))
 (let ((?x25502 (* l_0_14_18 l_0_14_18)))
 (let ((?x25503 (* 4.0 ?x25502)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x7334 (* ?x25529 l_0_14_27)))
 (let ((?x25500 (* l_0_14_17 l_0_14_17)))
 (let ((?x25501 (* 4.0 ?x25500)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x19804 (* ?x25525 l_0_14_26)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25449 (* ?x25448 l_0_14_3)))
 (let ((?x7336 (+ (+ (+ (- (* (* (- 2.0) l_0_14_11) l_0_14_2) ?x25449) ?x19804) ?x25501) ?x7334)))
 (let ((?x25598 (+ (+ (- (- (- (- (+ ?x7336 ?x25503) ?x19829) ?x25508) ?x19818) ?x25511) ?x7300) ?x25597)))
 (= ?x25598 0.0))))))))))))))))))))))))
(assert
 (let ((?x25115 (* l_0_14_6 l_0_14_6)))
 (let ((?x25112 (* l_0_14_5 l_0_14_5)))
 (let ((?x25109 (* l_0_14_4 l_0_14_4)))
 (let ((?x25639 (* 4.0 l_0_14_36)))
 (let ((?x25640 (* ?x25639 l_0_14_36)))
 (let ((?x25636 (* 4.0 l_0_14_35)))
 (let ((?x25637 (* ?x25636 l_0_14_35)))
 (let ((?x25633 (* 4.0 l_0_14_34)))
 (let ((?x25634 (* ?x25633 l_0_14_34)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25631 (* ?x25510 l_0_14_35)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25629 (* ?x25507 l_0_14_34)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x25627 (* ?x25212 l_0_14_32)))
 (let ((?x25624 (* l_0_14_21 l_0_14_21)))
 (let ((?x25625 (* 4.0 ?x25624)))
 (let ((?x25621 (* l_0_14_20 l_0_14_20)))
 (let ((?x25622 (* 4.0 ?x25621)))
 (let ((?x25618 (* l_0_14_19 l_0_14_19)))
 (let ((?x25619 (* 4.0 ?x25618)))
 (let ((?x25615 (* 4.0 l_0_14_18)))
 (let ((?x25616 (* ?x25615 l_0_14_20)))
 (let ((?x25614 (+ (* (* (- 2.0) l_0_14_16) l_0_14_17) (* (* 4.0 l_0_14_17) l_0_14_19))))
 (let ((?x25632 (- (- (+ (+ (+ (+ (+ ?x25614 ?x25616) ?x25619) ?x25622) ?x25625) ?x25627) ?x25629) ?x25631)))
 (= (- (- (- (- (- (- ?x25632 ?x25634) ?x25637) ?x25640) ?x25109) ?x25112) ?x25115) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x25683 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x25680 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x25677 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x25673 (* 8.0 l_0_14_36)))
 (let ((?x25674 (* ?x25673 l_0_14_39)))
 (let ((?x25670 (* 8.0 l_0_14_35)))
 (let ((?x25671 (* ?x25670 l_0_14_38)))
 (let ((?x25667 (* 8.0 l_0_14_34)))
 (let ((?x25668 (* ?x25667 l_0_14_37)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25665 (* ?x25510 l_0_14_38)))
 (let ((?x25631 (* ?x25510 l_0_14_35)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25662 (* ?x25507 l_0_14_37)))
 (let ((?x25629 (* ?x25507 l_0_14_34)))
 (let ((?x25658 (* 8.0 l_0_14_21)))
 (let ((?x25659 (* ?x25658 l_0_14_24)))
 (let ((?x25655 (* 8.0 l_0_14_20)))
 (let ((?x25656 (* ?x25655 l_0_14_23)))
 (let ((?x19913 (* 8.0 l_0_14_19)))
 (let ((?x19914 (* ?x19913 l_0_14_22)))
 (let ((?x25615 (* 4.0 l_0_14_18)))
 (let ((?x19896 (* ?x25615 l_0_14_23)))
 (let ((?x25616 (* ?x25615 l_0_14_20)))
 (let ((?x25612 (* 4.0 l_0_14_17)))
 (let ((?x19953 (* ?x25612 l_0_14_22)))
 (let ((?x7424 (+ (+ (- (+ (* (* (- 4.0) l_0_14_17) l_0_14_19) ?x19953) ?x25616) ?x19896) ?x19914)))
 (let ((?x25669 (- (- (+ (- (+ (+ (+ ?x7424 ?x25656) ?x25659) ?x25629) ?x25662) ?x25631) ?x25665) ?x25668)))
 (= (- (- (- (- (- ?x25669 ?x25671) ?x25674) ?x25677) ?x25680) ?x25683) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x25673 (* 8.0 l_0_14_36)))
 (let ((?x25746 (* ?x25673 l_0_14_43)))
 (let ((?x25670 (* 8.0 l_0_14_35)))
 (let ((?x25744 (* ?x25670 l_0_14_42)))
 (let ((?x25667 (* 8.0 l_0_14_34)))
 (let ((?x25742 (* ?x25667 l_0_14_41)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25740 (* ?x25510 l_0_14_42)))
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x25543 (* ?x25542 l_0_14_35)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25737 (* ?x25507 l_0_14_41)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x25537 (* ?x25536 l_0_14_34)))
 (let ((?x25658 (* 8.0 l_0_14_21)))
 (let ((?x25734 (* ?x25658 l_0_14_28)))
 (let ((?x25655 (* 8.0 l_0_14_20)))
 (let ((?x25732 (* ?x25655 l_0_14_27)))
 (let ((?x19913 (* 8.0 l_0_14_19)))
 (let ((?x25730 (* ?x19913 l_0_14_26)))
 (let ((?x25615 (* 4.0 l_0_14_18)))
 (let ((?x25728 (* ?x25615 l_0_14_27)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x25530 (* ?x25529 l_0_14_20)))
 (let ((?x25612 (* 4.0 l_0_14_17)))
 (let ((?x25725 (* ?x25612 l_0_14_26)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x25526 (* ?x25525 l_0_14_19)))
 (let ((?x25721 (* 2.0 l_0_14_13)))
 (let ((?x25722 (* ?x25721 l_0_14_6)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25719 (* ?x25448 l_0_14_5)))
 (let ((?x25726 (+ (+ (- (- (* (* (- 2.0) l_0_14_11) l_0_14_4) ?x25719) ?x25722) ?x25526) ?x25725)))
 (let ((?x25738 (- (- (+ (+ (+ (+ (+ ?x25726 ?x25530) ?x25728) ?x25730) ?x25732) ?x25734) ?x25537) ?x25737)))
 (let ((?x25750 (+ (- (- (- (- (- ?x25738 ?x25543) ?x25740) ?x25742) ?x25744) ?x25746) (* (* 2.0 l_0_14_47) l_0_14_49))))
 (= (+ ?x25750 (* (* 2.0 l_0_14_48) l_0_14_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25183 (* l_0_14_9 l_0_14_9)))
 (let ((?x25172 (* l_0_14_8 l_0_14_8)))
 (let ((?x25167 (* l_0_14_7 l_0_14_7)))
 (let ((?x25815 (* 4.0 l_0_14_40)))
 (let ((?x25816 (* ?x25815 l_0_14_40)))
 (let ((?x25812 (* 4.0 l_0_14_39)))
 (let ((?x25813 (* ?x25812 l_0_14_39)))
 (let ((?x25809 (* 4.0 l_0_14_38)))
 (let ((?x25810 (* ?x25809 l_0_14_38)))
 (let ((?x25806 (* 4.0 l_0_14_37)))
 (let ((?x25807 (* ?x25806 l_0_14_37)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25665 (* ?x25510 l_0_14_38)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25662 (* ?x25507 l_0_14_37)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x25627 (* ?x25212 l_0_14_32)))
 (let ((?x25800 (* l_0_14_25 l_0_14_25)))
 (let ((?x25801 (* 4.0 ?x25800)))
 (let ((?x25797 (* l_0_14_24 l_0_14_24)))
 (let ((?x25798 (* 4.0 ?x25797)))
 (let ((?x25794 (* l_0_14_23 l_0_14_23)))
 (let ((?x25795 (* 4.0 ?x25794)))
 (let ((?x25791 (* l_0_14_22 l_0_14_22)))
 (let ((?x25792 (* 4.0 ?x25791)))
 (let ((?x25615 (* 4.0 l_0_14_18)))
 (let ((?x19896 (* ?x25615 l_0_14_23)))
 (let ((?x25612 (* 4.0 l_0_14_17)))
 (let ((?x19953 (* ?x25612 l_0_14_22)))
 (let ((?x25788 (+ (* (- l_0_14_10) l_0_14_10) (* (* 2.0 l_0_14_16) l_0_14_17))))
 (let ((?x25803 (- (+ (+ (+ (+ (- (- ?x25788 ?x19953) ?x19896) ?x25792) ?x25795) ?x25798) ?x25801) ?x25627)))
 (let ((?x25818 (- (- (- (- (- (+ (+ ?x25803 ?x25662) ?x25665) ?x25807) ?x25810) ?x25813) ?x25816) ?x25167)))
 (= (- (- ?x25818 ?x25172) ?x25183) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25862 (* (* 8.0 l_0_14_40) l_0_14_44)))
 (let ((?x25859 (* (* 8.0 l_0_14_39) l_0_14_43)))
 (let ((?x25856 (* (* 8.0 l_0_14_38) l_0_14_42)))
 (let ((?x25853 (* (* 8.0 l_0_14_37) l_0_14_41)))
 (let ((?x25510 (* 4.0 l_0_14_33)))
 (let ((?x25740 (* ?x25510 l_0_14_42)))
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x25585 (* ?x25542 l_0_14_38)))
 (let ((?x25507 (* 4.0 l_0_14_32)))
 (let ((?x25737 (* ?x25507 l_0_14_41)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x25582 (* ?x25536 l_0_14_37)))
 (let ((?x25846 (* (* 8.0 l_0_14_25) l_0_14_29)))
 (let ((?x25843 (* (* 8.0 l_0_14_24) l_0_14_28)))
 (let ((?x25840 (* (* 8.0 l_0_14_23) l_0_14_27)))
 (let ((?x25837 (* (* 8.0 l_0_14_22) l_0_14_26)))
 (let ((?x25615 (* 4.0 l_0_14_18)))
 (let ((?x25728 (* ?x25615 l_0_14_27)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x25575 (* ?x25529 l_0_14_23)))
 (let ((?x25612 (* 4.0 l_0_14_17)))
 (let ((?x25725 (* ?x25612 l_0_14_26)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x25571 (* ?x25525 l_0_14_22)))
 (let ((?x25721 (* 2.0 l_0_14_13)))
 (let ((?x25830 (* ?x25721 l_0_14_9)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25828 (* ?x25448 l_0_14_8)))
 (let ((?x25445 (* 2.0 l_0_14_11)))
 (let ((?x14758 (* ?x25445 l_0_14_7)))
 (let ((?x25832 (+ (- (- (- (* (* (- 2.0) l_0_14_10) l_0_14_14) ?x14758) ?x25828) ?x25830) ?x25571)))
 (let ((?x25847 (+ (+ (+ (+ (- (+ (- ?x25832 ?x25725) ?x25575) ?x25728) ?x25837) ?x25840) ?x25843) ?x25846)))
 (let ((?x25860 (- (- (- (+ (- (+ (- ?x25847 ?x25582) ?x25737) ?x25585) ?x25740) ?x25853) ?x25856) ?x25859)))
 (let ((?x25867 (+ (+ (- ?x25860 ?x25862) (* (* 2.0 l_0_14_47) l_0_14_52)) (* (* 2.0 l_0_14_48) l_0_14_53))))
 (= ?x25867 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25947 (* (* 4.0 l_0_14_45) l_0_14_45)))
 (let ((?x25944 (* (* 4.0 l_0_14_44) l_0_14_44)))
 (let ((?x25941 (* (* 4.0 l_0_14_43) l_0_14_43)))
 (let ((?x25938 (* (* 4.0 l_0_14_42) l_0_14_42)))
 (let ((?x25935 (* (* 4.0 l_0_14_41) l_0_14_41)))
 (let ((?x25542 (* 8.0 l_0_14_33)))
 (let ((?x19818 (* ?x25542 l_0_14_42)))
 (let ((?x25536 (* 8.0 l_0_14_32)))
 (let ((?x19829 (* ?x25536 l_0_14_41)))
 (let ((?x25929 (* l_0_14_30 l_0_14_30)))
 (let ((?x25930 (* 4.0 ?x25929)))
 (let ((?x25926 (* l_0_14_29 l_0_14_29)))
 (let ((?x25927 (* 4.0 ?x25926)))
 (let ((?x25923 (* l_0_14_28 l_0_14_28)))
 (let ((?x25924 (* 4.0 ?x25923)))
 (let ((?x25920 (* l_0_14_27 l_0_14_27)))
 (let ((?x25921 (* 4.0 ?x25920)))
 (let ((?x25917 (* l_0_14_26 l_0_14_26)))
 (let ((?x25918 (* 4.0 ?x25917)))
 (let ((?x25529 (* 8.0 l_0_14_18)))
 (let ((?x7334 (* ?x25529 l_0_14_27)))
 (let ((?x25525 (* 8.0 l_0_14_17)))
 (let ((?x19804 (* ?x25525 l_0_14_26)))
 (let ((?x25913 (* l_0_14_15 l_0_14_15)))
 (let ((?x25911 (* l_0_14_14 l_0_14_14)))
 (let ((?x25909 (* l_0_14_13 l_0_14_13)))
 (let ((?x25910 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x25909)))
 (let ((?x25925 (+ (+ (+ (+ (+ (- (- ?x25910 ?x25911) ?x25913) ?x19804) ?x7334) ?x25918) ?x25921) ?x25924)))
 (let ((?x25942 (- (- (- (- (- (+ (+ ?x25925 ?x25927) ?x25930) ?x19829) ?x19818) ?x25935) ?x25938) ?x25941)))
 (let ((?x25952 (+ (+ (- (- ?x25942 ?x25944) ?x25947) (* (* 2.0 l_0_14_47) l_0_14_56)) (* (* 2.0 l_0_14_48) l_0_14_57))))
 (= ?x25952 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x25984 (* l_0_14_76 l_0_14_76)))
 (let ((?x25985 (- (- (* 1.0 (* l_0_14_1 l_0_14_1)) (* l_0_14_61 l_0_14_61)) ?x25984)))
 (= ?x25985 0.0))))
(assert
 (let ((?x25683 (* (* 2.0 l_0_14_6) l_0_14_9)))
 (let ((?x25680 (* (* 2.0 l_0_14_5) l_0_14_8)))
 (let ((?x25677 (* (* 2.0 l_0_14_4) l_0_14_7)))
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x25158 (* ?x25104 l_0_14_37)))
 (let ((?x25105 (* ?x25104 l_0_14_34)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x25155 (* ?x25100 l_0_14_22)))
 (let ((?x25998 (+ (- (+ (+ (* (* (- 4.0) l_0_14_16) l_0_14_19) ?x25155) ?x25105) ?x25158) ?x25677)))
 (let ((?x26006 (- (- (+ (+ ?x25998 ?x25680) ?x25683) (* (* 2.0 l_0_14_64) l_0_14_67)) (* (* 2.0 l_0_14_65) l_0_14_68))))
 (let ((?x26012 (- (- ?x26006 (* (* 2.0 l_0_14_66) l_0_14_69)) (* (* 2.0 l_0_14_79) l_0_14_82))))
 (let ((?x26018 (- (- ?x26012 (* (* 2.0 l_0_14_80) l_0_14_83)) (* (* 2.0 l_0_14_81) l_0_14_84))))
 (= ?x26018 0.0))))))))))))))
(assert
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x26044 (* ?x25104 l_0_14_41)))
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25360 (* ?x25323 l_0_14_34)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x26041 (* ?x25100 l_0_14_26)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25350 (* ?x25314 l_0_14_19)))
 (let ((?x25721 (* 2.0 l_0_14_13)))
 (let ((?x25722 (* ?x25721 l_0_14_6)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25719 (* ?x25448 l_0_14_5)))
 (let ((?x26042 (+ (+ (+ (+ (* (* 2.0 l_0_14_11) l_0_14_4) ?x25719) ?x25722) ?x25350) ?x26041)))
 (let ((?x26049 (- (+ (- (- ?x26042 ?x25360) ?x26044) (* (* 2.0 l_0_14_46) l_0_14_49)) (* (* 2.0 l_0_14_64) l_0_14_71))))
 (let ((?x26053 (- (- ?x26049 (* (* 2.0 l_0_14_65) l_0_14_72)) (* (* 2.0 l_0_14_66) l_0_14_73))))
 (let ((?x26057 (- (- ?x26053 (* (* 2.0 l_0_14_79) l_0_14_86)) (* (* 2.0 l_0_14_80) l_0_14_87))))
 (= (- ?x26057 (* (* 2.0 l_0_14_81) l_0_14_88)) 0.0))))))))))))))))))
(assert
 (let ((?x25104 (* 4.0 l_0_14_31)))
 (let ((?x26044 (* ?x25104 l_0_14_41)))
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25413 (* ?x25323 l_0_14_37)))
 (let ((?x25100 (* 4.0 l_0_14_16)))
 (let ((?x26041 (* ?x25100 l_0_14_26)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25406 (* ?x25314 l_0_14_22)))
 (let ((?x25721 (* 2.0 l_0_14_13)))
 (let ((?x25830 (* ?x25721 l_0_14_9)))
 (let ((?x25448 (* 2.0 l_0_14_12)))
 (let ((?x25828 (* ?x25448 l_0_14_8)))
 (let ((?x25445 (* 2.0 l_0_14_11)))
 (let ((?x14758 (* ?x25445 l_0_14_7)))
 (let ((?x26082 (+ (+ (+ (+ (* (* 2.0 l_0_14_10) l_0_14_14) ?x14758) ?x25828) ?x25830) ?x25406)))
 (let ((?x26087 (+ (+ (- (- ?x26082 ?x26041) ?x25413) ?x26044) (* (* 2.0 l_0_14_46) l_0_14_52))))
 (let ((?x26093 (- (- ?x26087 (* (* 2.0 l_0_14_67) l_0_14_71)) (* (* 2.0 l_0_14_68) l_0_14_72))))
 (let ((?x26099 (- (- ?x26093 (* (* 2.0 l_0_14_69) l_0_14_73)) (* (* 2.0 l_0_14_70) l_0_14_74))))
 (let ((?x26105 (- (- ?x26099 (* (* 2.0 l_0_14_82) l_0_14_86)) (* (* 2.0 l_0_14_83) l_0_14_87))))
 (let ((?x26111 (- (- ?x26105 (* (* 2.0 l_0_14_84) l_0_14_88)) (* (* 2.0 l_0_14_85) l_0_14_89))))
 (= ?x26111 0.0))))))))))))))))))))))
(assert
 (let ((?x26164 (* l_0_14_90 l_0_14_90)))
 (let ((?x26162 (* l_0_14_89 l_0_14_89)))
 (let ((?x26160 (* l_0_14_88 l_0_14_88)))
 (let ((?x26158 (* l_0_14_87 l_0_14_87)))
 (let ((?x26156 (* l_0_14_86 l_0_14_86)))
 (let ((?x26154 (* l_0_14_75 l_0_14_75)))
 (let ((?x26152 (* l_0_14_74 l_0_14_74)))
 (let ((?x26150 (* l_0_14_73 l_0_14_73)))
 (let ((?x26148 (* l_0_14_72 l_0_14_72)))
 (let ((?x26146 (* l_0_14_71 l_0_14_71)))
 (let ((?x25323 (* 8.0 l_0_14_31)))
 (let ((?x25455 (* ?x25323 l_0_14_41)))
 (let ((?x25314 (* 8.0 l_0_14_16)))
 (let ((?x25452 (* ?x25314 l_0_14_26)))
 (let ((?x26135 (+ (* 1.0 (* l_0_14_11 l_0_14_11)) (* 1.0 (* l_0_14_12 l_0_14_12)))))
 (let ((?x26139 (+ (+ ?x26135 (* 1.0 (* l_0_14_13 l_0_14_13))) (* 1.0 (* l_0_14_14 l_0_14_14)))))
 (let ((?x26145 (+ (- (+ (+ ?x26139 (* 1.0 (* l_0_14_15 l_0_14_15))) ?x25452) ?x25455) (* (* 2.0 l_0_14_46) l_0_14_56))))
 (let ((?x26159 (- (- (- (- (- (- (- ?x26145 ?x26146) ?x26148) ?x26150) ?x26152) ?x26154) ?x26156) ?x26158)))
 (= (- (- (- ?x26159 ?x26160) ?x26162) ?x26164) 0.0))))))))))))))))))))
(assert
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26186 (* ?x25212 l_0_14_34)))
 (let ((?x8482 (+ (* (* (- 2.0) l_0_14_16) l_0_14_19) (* 2.0 (* l_0_14_19 l_0_14_19)))))
 (let ((?x26185 (+ (+ ?x8482 (* 2.0 (* l_0_14_20 l_0_14_20))) (* 2.0 (* l_0_14_21 l_0_14_21)))))
 (let ((?x26193 (- (- (+ ?x26185 ?x26186) (* (* 2.0 l_0_14_34) l_0_14_34)) (* (* 2.0 l_0_14_35) l_0_14_35))))
 (= (- ?x26193 (* (* 2.0 l_0_14_36) l_0_14_36)) 0.0)))))))
(assert
 (let ((?x19948 (* l_0_14_36 l_0_14_36)))
 (let ((?x8348 (* 2.0 ?x19948)))
 (let ((?x25639 (* 4.0 l_0_14_36)))
 (let ((?x26245 (* ?x25639 l_0_14_39)))
 (let ((?x19942 (* l_0_14_35 l_0_14_35)))
 (let ((?x26204 (* 2.0 ?x19942)))
 (let ((?x25636 (* 4.0 l_0_14_35)))
 (let ((?x26242 (* ?x25636 l_0_14_38)))
 (let ((?x7341 (* l_0_14_34 l_0_14_34)))
 (let ((?x26199 (* 2.0 ?x7341)))
 (let ((?x25633 (* 4.0 l_0_14_34)))
 (let ((?x26239 (* ?x25633 l_0_14_37)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26237 (* ?x25212 l_0_14_37)))
 (let ((?x26231 (* 4.0 l_0_14_21)))
 (let ((?x26232 (* ?x26231 l_0_14_24)))
 (let ((?x26225 (* 4.0 l_0_14_20)))
 (let ((?x26226 (* ?x26225 l_0_14_23)))
 (let ((?x26219 (* 4.0 l_0_14_19)))
 (let ((?x26220 (* ?x26219 l_0_14_22)))
 (let ((?x26224 (- (+ (* (* (- 2.0) l_0_14_16) l_0_14_22) ?x26220) (* (* 2.0 l_0_14_19) l_0_14_19))))
 (let ((?x26236 (- (+ (- (+ ?x26224 ?x26226) (* (* 2.0 l_0_14_20) l_0_14_20)) ?x26232) (* (* 2.0 l_0_14_21) l_0_14_21))))
 (let ((?x26247 (+ (- (+ (- (+ (- (+ ?x26236 ?x26237) ?x26239) ?x26199) ?x26242) ?x26204) ?x26245) ?x8348)))
 (= ?x26247 0.0)))))))))))))))))))))))))
(assert
 (let ((?x26297 (* l_0_14_51 l_0_14_51)))
 (let ((?x26295 (* l_0_14_50 l_0_14_50)))
 (let ((?x26293 (* l_0_14_49 l_0_14_49)))
 (let ((?x25639 (* 4.0 l_0_14_36)))
 (let ((?x25640 (* ?x25639 l_0_14_36)))
 (let ((?x26290 (* ?x25639 l_0_14_43)))
 (let ((?x25636 (* 4.0 l_0_14_35)))
 (let ((?x25637 (* ?x25636 l_0_14_35)))
 (let ((?x26287 (* ?x25636 l_0_14_42)))
 (let ((?x25633 (* 4.0 l_0_14_34)))
 (let ((?x25634 (* ?x25633 l_0_14_34)))
 (let ((?x26284 (* ?x25633 l_0_14_41)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26282 (* ?x25212 l_0_14_41)))
 (let ((?x25624 (* l_0_14_21 l_0_14_21)))
 (let ((?x25625 (* 4.0 ?x25624)))
 (let ((?x26231 (* 4.0 l_0_14_21)))
 (let ((?x26279 (* ?x26231 l_0_14_28)))
 (let ((?x25621 (* l_0_14_20 l_0_14_20)))
 (let ((?x25622 (* 4.0 ?x25621)))
 (let ((?x26225 (* 4.0 l_0_14_20)))
 (let ((?x26276 (* ?x26225 l_0_14_27)))
 (let ((?x25618 (* l_0_14_19 l_0_14_19)))
 (let ((?x25619 (* 4.0 ?x25618)))
 (let ((?x26219 (* 4.0 l_0_14_19)))
 (let ((?x8564 (* ?x26219 l_0_14_26)))
 (let ((?x26278 (+ (+ (+ (+ (* (* (- 2.0) l_0_14_16) l_0_14_26) ?x8564) ?x25619) ?x26276) ?x25622)))
 (let ((?x26289 (- (- (- (- (+ (+ (+ ?x26278 ?x26279) ?x25625) ?x26282) ?x26284) ?x25634) ?x26287) ?x25637)))
 (= (+ (+ (+ (- (- ?x26289 ?x26290) ?x25640) ?x26293) ?x26295) ?x26297) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x25515 (* l_0_14_33 l_0_14_33)))
 (let ((?x7100 (* l_0_14_32 l_0_14_32)))
 (let ((?x26312 (+ (- (* (- l_0_14_17) l_0_14_17) (* l_0_14_18 l_0_14_18)) ?x7100)))
 (= (+ ?x26312 ?x25515) 0.0)))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26325 (* ?x25545 l_0_14_35)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26323 (* ?x25539 l_0_14_34)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26321 (* ?x25577 l_0_14_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_19) ?x26321) ?x26323) ?x26325) 0.0))))))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26340 (* ?x25545 l_0_14_38)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26338 (* ?x25539 l_0_14_37)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26336 (* ?x25577 l_0_14_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_22) ?x26336) ?x26338) ?x26340) 0.0))))))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26358 (* ?x25545 l_0_14_42)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26356 (* ?x25539 l_0_14_41)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26354 (* ?x25577 l_0_14_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_17) l_0_14_26) ?x26354) ?x26356) ?x26358) 0.0))))))))
(assert
 (let ((?x19948 (* l_0_14_36 l_0_14_36)))
 (let ((?x19942 (* l_0_14_35 l_0_14_35)))
 (let ((?x7341 (* l_0_14_34 l_0_14_34)))
 (let ((?x25624 (* l_0_14_21 l_0_14_21)))
 (let ((?x26374 (- (- (* (- l_0_14_19) l_0_14_19) (* l_0_14_20 l_0_14_20)) ?x25624)))
 (= (+ (+ (+ ?x26374 ?x7341) ?x19942) ?x19948) 0.0)))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26398 (* ?x26194 l_0_14_39)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26396 (* ?x26191 l_0_14_38)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26394 (* ?x26188 l_0_14_37)))
 (let ((?x26234 (* 2.0 l_0_14_21)))
 (let ((?x26392 (* ?x26234 l_0_14_24)))
 (let ((?x26228 (* 2.0 l_0_14_20)))
 (let ((?x26390 (* ?x26228 l_0_14_23)))
 (let ((?x26397 (+ (+ (- (- (* (* (- 2.0) l_0_14_19) l_0_14_22) ?x26390) ?x26392) ?x26394) ?x26396)))
 (= (+ ?x26397 ?x26398) 0.0)))))))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26415 (* ?x26194 l_0_14_43)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26413 (* ?x26191 l_0_14_42)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26411 (* ?x26188 l_0_14_41)))
 (let ((?x26234 (* 2.0 l_0_14_21)))
 (let ((?x14947 (* ?x26234 l_0_14_28)))
 (let ((?x26228 (* 2.0 l_0_14_20)))
 (let ((?x15294 (* ?x26228 l_0_14_27)))
 (let ((?x26414 (+ (+ (- (- (* (* (- 2.0) l_0_14_19) l_0_14_26) ?x15294) ?x14947) ?x26411) ?x26413)))
 (= (+ ?x26414 ?x26415) 0.0)))))))))))))
(assert
 (let ((?x14721 (* l_0_14_40 l_0_14_40)))
 (let ((?x14675 (* l_0_14_39 l_0_14_39)))
 (let ((?x20078 (* l_0_14_38 l_0_14_38)))
 (let ((?x14633 (* l_0_14_37 l_0_14_37)))
 (let ((?x19948 (* l_0_14_36 l_0_14_36)))
 (let ((?x19942 (* l_0_14_35 l_0_14_35)))
 (let ((?x7341 (* l_0_14_34 l_0_14_34)))
 (let ((?x25800 (* l_0_14_25 l_0_14_25)))
 (let ((?x25797 (* l_0_14_24 l_0_14_24)))
 (let ((?x25794 (* l_0_14_23 l_0_14_23)))
 (let ((?x25791 (* l_0_14_22 l_0_14_22)))
 (let ((?x25624 (* l_0_14_21 l_0_14_21)))
 (let ((?x20688 (- (+ (+ (* l_0_14_19 l_0_14_19) (* l_0_14_20 l_0_14_20)) ?x25624) ?x25791)))
 (let ((?x26434 (+ (- (- (- (- (- (- ?x20688 ?x25794) ?x25797) ?x25800) ?x7341) ?x19942) ?x19948) ?x14633)))
 (= (+ (+ (+ ?x26434 ?x20078) ?x14675) ?x14721) 0.0))))))))))))))))
(assert
 (let ((?x26473 (* 2.0 l_0_14_40)))
 (let ((?x26474 (* ?x26473 l_0_14_44)))
 (let ((?x26470 (* 2.0 l_0_14_39)))
 (let ((?x26471 (* ?x26470 l_0_14_43)))
 (let ((?x26467 (* 2.0 l_0_14_38)))
 (let ((?x26468 (* ?x26467 l_0_14_42)))
 (let ((?x26464 (* 2.0 l_0_14_37)))
 (let ((?x26465 (* ?x26464 l_0_14_41)))
 (let ((?x26461 (* 2.0 l_0_14_25)))
 (let ((?x26462 (* ?x26461 l_0_14_29)))
 (let ((?x26458 (* 2.0 l_0_14_24)))
 (let ((?x26459 (* ?x26458 l_0_14_28)))
 (let ((?x26455 (* 2.0 l_0_14_23)))
 (let ((?x26456 (* ?x26455 l_0_14_27)))
 (let ((?x26466 (+ (- (- (- (* (* (- 2.0) l_0_14_22) l_0_14_26) ?x26456) ?x26459) ?x26462) ?x26465)))
 (= (+ (+ (+ ?x26466 ?x26468) ?x26471) ?x26474) 0.0)))))))))))))))))
(assert
 (let ((?x25970 (* l_0_14_45 l_0_14_45)))
 (let ((?x20286 (* l_0_14_44 l_0_14_44)))
 (let ((?x14881 (* l_0_14_43 l_0_14_43)))
 (let ((?x7829 (* l_0_14_42 l_0_14_42)))
 (let ((?x6252 (* l_0_14_41 l_0_14_41)))
 (let ((?x25929 (* l_0_14_30 l_0_14_30)))
 (let ((?x25926 (* l_0_14_29 l_0_14_29)))
 (let ((?x25923 (* l_0_14_28 l_0_14_28)))
 (let ((?x15373 (- (- (* (- l_0_14_26) l_0_14_26) (* l_0_14_27 l_0_14_27)) ?x25923)))
 (let ((?x26501 (+ (+ (+ (+ (+ (- (- ?x15373 ?x25926) ?x25929) ?x6252) ?x7829) ?x14881) ?x20286) ?x25970)))
 (= ?x26501 0.0))))))))))))
(assert
 (let ((?x25639 (* 4.0 l_0_14_36)))
 (let ((?x26245 (* ?x25639 l_0_14_39)))
 (let ((?x25636 (* 4.0 l_0_14_35)))
 (let ((?x26242 (* ?x25636 l_0_14_38)))
 (let ((?x25633 (* 4.0 l_0_14_34)))
 (let ((?x26239 (* ?x25633 l_0_14_37)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26186 (* ?x25212 l_0_14_34)))
 (let ((?x25800 (* l_0_14_25 l_0_14_25)))
 (let ((?x26520 (* 2.0 ?x25800)))
 (let ((?x25797 (* l_0_14_24 l_0_14_24)))
 (let ((?x26518 (* 2.0 ?x25797)))
 (let ((?x25794 (* l_0_14_23 l_0_14_23)))
 (let ((?x26516 (* 2.0 ?x25794)))
 (let ((?x25791 (* l_0_14_22 l_0_14_22)))
 (let ((?x26514 (* 2.0 ?x25791)))
 (let ((?x26231 (* 4.0 l_0_14_21)))
 (let ((?x26232 (* ?x26231 l_0_14_24)))
 (let ((?x26225 (* 4.0 l_0_14_20)))
 (let ((?x26226 (* ?x26225 l_0_14_23)))
 (let ((?x26219 (* 4.0 l_0_14_19)))
 (let ((?x26220 (* ?x26219 l_0_14_22)))
 (let ((?x26515 (+ (- (- (- (* (* 2.0 l_0_14_16) l_0_14_19) ?x26220) ?x26226) ?x26232) ?x26514)))
 (let ((?x26525 (+ (+ (+ (- (+ (+ (+ ?x26515 ?x26516) ?x26518) ?x26520) ?x26186) ?x26239) ?x26242) ?x26245)))
 (let ((?x26529 (- (- ?x26525 (* (* 2.0 l_0_14_37) l_0_14_37)) (* (* 2.0 l_0_14_38) l_0_14_38))))
 (let ((?x26533 (- (- ?x26529 (* (* 2.0 l_0_14_39) l_0_14_39)) (* (* 2.0 l_0_14_40) l_0_14_40))))
 (= ?x26533 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x14721 (* l_0_14_40 l_0_14_40)))
 (let ((?x8944 (* 2.0 ?x14721)))
 (let ((?x14675 (* l_0_14_39 l_0_14_39)))
 (let ((?x8933 (* 2.0 ?x14675)))
 (let ((?x20078 (* l_0_14_38 l_0_14_38)))
 (let ((?x8921 (* 2.0 ?x20078)))
 (let ((?x14633 (* l_0_14_37 l_0_14_37)))
 (let ((?x26548 (* 2.0 ?x14633)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26237 (* ?x25212 l_0_14_37)))
 (let ((?x26563 (- (* (* 2.0 l_0_14_16) l_0_14_22) (* (* 2.0 l_0_14_22) l_0_14_22))))
 (let ((?x26567 (- (- ?x26563 (* (* 2.0 l_0_14_23) l_0_14_23)) (* (* 2.0 l_0_14_24) l_0_14_24))))
 (let ((?x26572 (+ (+ (- (- ?x26567 (* (* 2.0 l_0_14_25) l_0_14_25)) ?x26237) ?x26548) ?x8921)))
 (= (+ (+ ?x26572 ?x8933) ?x8944) 0.0)))))))))))))))
(assert
 (let ((?x26619 (* l_0_14_55 l_0_14_55)))
 (let ((?x26617 (* l_0_14_54 l_0_14_54)))
 (let ((?x26615 (* l_0_14_53 l_0_14_53)))
 (let ((?x26613 (* l_0_14_52 l_0_14_52)))
 (let ((?x25815 (* 4.0 l_0_14_40)))
 (let ((?x25816 (* ?x25815 l_0_14_40)))
 (let ((?x26610 (* ?x25815 l_0_14_44)))
 (let ((?x25812 (* 4.0 l_0_14_39)))
 (let ((?x25813 (* ?x25812 l_0_14_39)))
 (let ((?x26607 (* ?x25812 l_0_14_43)))
 (let ((?x25809 (* 4.0 l_0_14_38)))
 (let ((?x25810 (* ?x25809 l_0_14_38)))
 (let ((?x26604 (* ?x25809 l_0_14_42)))
 (let ((?x25806 (* 4.0 l_0_14_37)))
 (let ((?x25807 (* ?x25806 l_0_14_37)))
 (let ((?x26601 (* ?x25806 l_0_14_41)))
 (let ((?x25212 (* 2.0 l_0_14_31)))
 (let ((?x26282 (* ?x25212 l_0_14_41)))
 (let ((?x25800 (* l_0_14_25 l_0_14_25)))
 (let ((?x25801 (* 4.0 ?x25800)))
 (let ((?x26597 (* (* 4.0 l_0_14_25) l_0_14_29)))
 (let ((?x25797 (* l_0_14_24 l_0_14_24)))
 (let ((?x25798 (* 4.0 ?x25797)))
 (let ((?x26593 (* (* 4.0 l_0_14_24) l_0_14_28)))
 (let ((?x25794 (* l_0_14_23 l_0_14_23)))
 (let ((?x25795 (* 4.0 ?x25794)))
 (let ((?x26589 (* (* 4.0 l_0_14_23) l_0_14_27)))
 (let ((?x25791 (* l_0_14_22 l_0_14_22)))
 (let ((?x25792 (* 4.0 ?x25791)))
 (let ((?x26585 (* (* 4.0 l_0_14_22) l_0_14_26)))
 (let ((?x26591 (+ (- (+ (- (* (* 2.0 l_0_14_16) l_0_14_26) ?x26585) ?x25792) ?x26589) ?x25795)))
 (let ((?x26603 (- (+ (- (+ (- (+ (- ?x26591 ?x26593) ?x25798) ?x26597) ?x25801) ?x26282) ?x26601) ?x25807)))
 (let ((?x26614 (+ (- (+ (- (+ (- (+ ?x26603 ?x26604) ?x25810) ?x26607) ?x25813) ?x26610) ?x25816) ?x26613)))
 (= (+ (+ (+ ?x26614 ?x26615) ?x26617) ?x26619) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25515 (* l_0_14_33 l_0_14_33)))
 (let ((?x7100 (* l_0_14_32 l_0_14_32)))
 (let ((?x26671 (- (- (+ (* l_0_14_17 l_0_14_17) (* l_0_14_18 l_0_14_18)) ?x7100) ?x25515)))
 (= ?x26671 0.0)))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26325 (* ?x25545 l_0_14_35)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26323 (* ?x25539 l_0_14_34)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26321 (* ?x25577 l_0_14_20)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_19) ?x26321) ?x26323) ?x26325) 0.0))))))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26340 (* ?x25545 l_0_14_38)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26338 (* ?x25539 l_0_14_37)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26336 (* ?x25577 l_0_14_23)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_22) ?x26336) ?x26338) ?x26340) 0.0))))))))
(assert
 (let ((?x25545 (* 2.0 l_0_14_33)))
 (let ((?x26358 (* ?x25545 l_0_14_42)))
 (let ((?x25539 (* 2.0 l_0_14_32)))
 (let ((?x26356 (* ?x25539 l_0_14_41)))
 (let ((?x25577 (* 2.0 l_0_14_18)))
 (let ((?x26354 (* ?x25577 l_0_14_27)))
 (= (- (- (+ (* (* 2.0 l_0_14_17) l_0_14_26) ?x26354) ?x26356) ?x26358) 0.0))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26398 (* ?x26194 l_0_14_39)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26396 (* ?x26191 l_0_14_38)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26394 (* ?x26188 l_0_14_37)))
 (let ((?x26234 (* 2.0 l_0_14_21)))
 (let ((?x26392 (* ?x26234 l_0_14_24)))
 (let ((?x26228 (* 2.0 l_0_14_20)))
 (let ((?x26390 (* ?x26228 l_0_14_23)))
 (let ((?x26692 (- (- (+ (+ (* (* 2.0 l_0_14_19) l_0_14_22) ?x26390) ?x26392) ?x26394) ?x26396)))
 (= (- ?x26692 ?x26398) 0.0)))))))))))))
(assert
 (let ((?x26194 (* 2.0 l_0_14_36)))
 (let ((?x26415 (* ?x26194 l_0_14_43)))
 (let ((?x26191 (* 2.0 l_0_14_35)))
 (let ((?x26413 (* ?x26191 l_0_14_42)))
 (let ((?x26188 (* 2.0 l_0_14_34)))
 (let ((?x26411 (* ?x26188 l_0_14_41)))
 (let ((?x26234 (* 2.0 l_0_14_21)))
 (let ((?x14947 (* ?x26234 l_0_14_28)))
 (let ((?x26228 (* 2.0 l_0_14_20)))
 (let ((?x15294 (* ?x26228 l_0_14_27)))
 (let ((?x20864 (- (- (+ (+ (* (* 2.0 l_0_14_19) l_0_14_26) ?x15294) ?x14947) ?x26411) ?x26413)))
 (= (- ?x20864 ?x26415) 0.0)))))))))))))
(assert
 (let ((?x14721 (* l_0_14_40 l_0_14_40)))
 (let ((?x14675 (* l_0_14_39 l_0_14_39)))
 (let ((?x20078 (* l_0_14_38 l_0_14_38)))
 (let ((?x14633 (* l_0_14_37 l_0_14_37)))
 (let ((?x25800 (* l_0_14_25 l_0_14_25)))
 (let ((?x25797 (* l_0_14_24 l_0_14_24)))
 (let ((?x15513 (+ (+ (+ (* l_0_14_22 l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x25797) ?x25800)))
 (= (- (- (- (- ?x15513 ?x14633) ?x20078) ?x14675) ?x14721) 0.0)))))))))
(assert
 (let ((?x26473 (* 2.0 l_0_14_40)))
 (let ((?x26474 (* ?x26473 l_0_14_44)))
 (let ((?x26470 (* 2.0 l_0_14_39)))
 (let ((?x26471 (* ?x26470 l_0_14_43)))
 (let ((?x26467 (* 2.0 l_0_14_38)))
 (let ((?x26468 (* ?x26467 l_0_14_42)))
 (let ((?x26464 (* 2.0 l_0_14_37)))
 (let ((?x26465 (* ?x26464 l_0_14_41)))
 (let ((?x26461 (* 2.0 l_0_14_25)))
 (let ((?x26462 (* ?x26461 l_0_14_29)))
 (let ((?x26458 (* 2.0 l_0_14_24)))
 (let ((?x26459 (* ?x26458 l_0_14_28)))
 (let ((?x26455 (* 2.0 l_0_14_23)))
 (let ((?x26456 (* ?x26455 l_0_14_27)))
 (let ((?x26713 (- (+ (+ (+ (* (* 2.0 l_0_14_22) l_0_14_26) ?x26456) ?x26459) ?x26462) ?x26465)))
 (= (- (- (- ?x26713 ?x26468) ?x26471) ?x26474) 0.0)))))))))))))))))
(assert
 (let ((?x25970 (* l_0_14_45 l_0_14_45)))
 (let ((?x20286 (* l_0_14_44 l_0_14_44)))
 (let ((?x14881 (* l_0_14_43 l_0_14_43)))
 (let ((?x7829 (* l_0_14_42 l_0_14_42)))
 (let ((?x6252 (* l_0_14_41 l_0_14_41)))
 (let ((?x25929 (* l_0_14_30 l_0_14_30)))
 (let ((?x25926 (* l_0_14_29 l_0_14_29)))
 (let ((?x25923 (* l_0_14_28 l_0_14_28)))
 (let ((?x26731 (+ (+ (+ (* l_0_14_26 l_0_14_26) (* l_0_14_27 l_0_14_27)) ?x25923) ?x25926)))
 (= (- (- (- (- (- (+ ?x26731 ?x25929) ?x6252) ?x7829) ?x14881) ?x20286) ?x25970) 0.0)))))))))))
(assert
 (let ((?x25815 (* 4.0 l_0_14_40)))
 (let ((?x26610 (* ?x25815 l_0_14_44)))
 (let ((?x25812 (* 4.0 l_0_14_39)))
 (let ((?x26607 (* ?x25812 l_0_14_43)))
 (let ((?x25809 (* 4.0 l_0_14_38)))
 (let ((?x26604 (* ?x25809 l_0_14_42)))
 (let ((?x25806 (* 4.0 l_0_14_37)))
 (let ((?x26601 (* ?x25806 l_0_14_41)))
 (let ((?x25639 (* 4.0 l_0_14_36)))
 (let ((?x26290 (* ?x25639 l_0_14_43)))
 (let ((?x25673 (* 8.0 l_0_14_36)))
 (let ((?x25674 (* ?x25673 l_0_14_39)))
 (let ((?x25636 (* 4.0 l_0_14_35)))
 (let ((?x26287 (* ?x25636 l_0_14_42)))
 (let ((?x25670 (* 8.0 l_0_14_35)))
 (let ((?x25671 (* ?x25670 l_0_14_38)))
 (let ((?x25633 (* 4.0 l_0_14_34)))
 (let ((?x26284 (* ?x25633 l_0_14_41)))
 (let ((?x25667 (* 8.0 l_0_14_34)))
 (let ((?x25668 (* ?x25667 l_0_14_37)))
 (let ((?x26597 (* (* 4.0 l_0_14_25) l_0_14_29)))
 (let ((?x26593 (* (* 4.0 l_0_14_24) l_0_14_28)))
 (let ((?x26589 (* (* 4.0 l_0_14_23) l_0_14_27)))
 (let ((?x26585 (* (* 4.0 l_0_14_22) l_0_14_26)))
 (let ((?x26231 (* 4.0 l_0_14_21)))
 (let ((?x26279 (* ?x26231 l_0_14_28)))
 (let ((?x25658 (* 8.0 l_0_14_21)))
 (let ((?x25659 (* ?x25658 l_0_14_24)))
 (let ((?x26225 (* 4.0 l_0_14_20)))
 (let ((?x26276 (* ?x26225 l_0_14_27)))
 (let ((?x25655 (* 8.0 l_0_14_20)))
 (let ((?x25656 (* ?x25655 l_0_14_23)))
 (let ((?x26219 (* 4.0 l_0_14_19)))
 (let ((?x8564 (* ?x26219 l_0_14_26)))
 (let ((?x19913 (* 8.0 l_0_14_19)))
 (let ((?x19914 (* ?x19913 l_0_14_22)))
 (let ((?x26755 (+ (+ (- (+ (- (+ (- ?x19914 ?x8564) ?x25656) ?x26276) ?x25659) ?x26279) ?x26585) ?x26589)))
 (let ((?x26762 (- (+ (- (+ (- (+ (+ ?x26755 ?x26593) ?x26597) ?x25668) ?x26284) ?x25671) ?x26287) ?x25674)))
 (let ((?x26770 (+ (- (- (- (- (+ ?x26762 ?x26290) ?x26601) ?x26604) ?x26607) ?x26610) (* (* 2.0 l_0_14_49) l_0_14_52))))
 (let ((?x26776 (+ (+ ?x26770 (* (* 2.0 l_0_14_50) l_0_14_53)) (* (* 2.0 l_0_14_51) l_0_14_54))))
 (= ?x26776 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25673 (* 8.0 l_0_14_36)))
 (let ((?x25746 (* ?x25673 l_0_14_43)))
 (let ((?x25670 (* 8.0 l_0_14_35)))
 (let ((?x25744 (* ?x25670 l_0_14_42)))
 (let ((?x25667 (* 8.0 l_0_14_34)))
 (let ((?x25742 (* ?x25667 l_0_14_41)))
 (let ((?x25658 (* 8.0 l_0_14_21)))
 (let ((?x25734 (* ?x25658 l_0_14_28)))
 (let ((?x25655 (* 8.0 l_0_14_20)))
 (let ((?x25732 (* ?x25655 l_0_14_27)))
 (let ((?x19913 (* 8.0 l_0_14_19)))
 (let ((?x25730 (* ?x19913 l_0_14_26)))
 (let ((?x20165 (+ (+ (+ (+ ?x25730 ?x25732) ?x25734) (* 2.0 (* l_0_14_26 l_0_14_26))) (* 2.0 (* l_0_14_27 l_0_14_27)))))
 (let ((?x15639 (+ (+ ?x20165 (* 2.0 (* l_0_14_28 l_0_14_28))) (* 2.0 (* l_0_14_29 l_0_14_29)))))
 (let ((?x15644 (- (- (- (+ ?x15639 (* 2.0 (* l_0_14_30 l_0_14_30))) ?x25742) ?x25744) ?x25746)))
 (let ((?x26786 (- (- ?x15644 (* (* 2.0 l_0_14_41) l_0_14_41)) (* (* 2.0 l_0_14_42) l_0_14_42))))
 (let ((?x26792 (- (- ?x26786 (* (* 2.0 l_0_14_43) l_0_14_43)) (* (* 2.0 l_0_14_44) l_0_14_44))))
 (let ((?x26797 (+ (- ?x26792 (* (* 2.0 l_0_14_45) l_0_14_45)) (* (* 2.0 l_0_14_49) l_0_14_56))))
 (let ((?x26801 (+ (+ ?x26797 (* (* 2.0 l_0_14_50) l_0_14_57)) (* (* 2.0 l_0_14_51) l_0_14_58))))
 (= ?x26801 0.0)))))))))))))))))))))
(assert
 (let ((?x25970 (* l_0_14_45 l_0_14_45)))
 (let ((?x9447 (* 2.0 ?x25970)))
 (let ((?x20286 (* l_0_14_44 l_0_14_44)))
 (let ((?x20993 (* 2.0 ?x20286)))
 (let ((?x14881 (* l_0_14_43 l_0_14_43)))
 (let ((?x15795 (* 2.0 ?x14881)))
 (let ((?x7829 (* l_0_14_42 l_0_14_42)))
 (let ((?x15752 (* 2.0 ?x7829)))
 (let ((?x6252 (* l_0_14_41 l_0_14_41)))
 (let ((?x20980 (* 2.0 ?x6252)))
 (let ((?x25862 (* (* 8.0 l_0_14_40) l_0_14_44)))
 (let ((?x25859 (* (* 8.0 l_0_14_39) l_0_14_43)))
 (let ((?x25856 (* (* 8.0 l_0_14_38) l_0_14_42)))
 (let ((?x25853 (* (* 8.0 l_0_14_37) l_0_14_41)))
 (let ((?x25846 (* (* 8.0 l_0_14_25) l_0_14_29)))
 (let ((?x25843 (* (* 8.0 l_0_14_24) l_0_14_28)))
 (let ((?x25840 (* (* 8.0 l_0_14_23) l_0_14_27)))
 (let ((?x25837 (* (* 8.0 l_0_14_22) l_0_14_26)))
 (let ((?x26821 (- (+ (+ (+ ?x25837 ?x25840) ?x25843) ?x25846) (* (* 2.0 l_0_14_26) l_0_14_26))))
 (let ((?x26827 (- (- ?x26821 (* (* 2.0 l_0_14_27) l_0_14_27)) (* (* 2.0 l_0_14_28) l_0_14_28))))
 (let ((?x26833 (- (- ?x26827 (* (* 2.0 l_0_14_29) l_0_14_29)) (* (* 2.0 l_0_14_30) l_0_14_30))))
 (let ((?x26840 (+ (+ (+ (- (- (- (- ?x26833 ?x25853) ?x25856) ?x25859) ?x25862) ?x20980) ?x15752) ?x15795)))
 (let ((?x26848 (+ (+ (+ (+ ?x26840 ?x20993) ?x9447) (* (* 2.0 l_0_14_52) l_0_14_56)) (* (* 2.0 l_0_14_53) l_0_14_57))))
 (let ((?x26854 (+ (+ ?x26848 (* (* 2.0 l_0_14_54) l_0_14_58)) (* (* 2.0 l_0_14_55) l_0_14_59))))
 (= ?x26854 0.0))))))))))))))))))))))))))
(assert
 (let ((?x26862 (* l_0_14_60 l_0_14_60)))
 (let ((?x26860 (* l_0_14_59 l_0_14_59)))
 (let ((?x26858 (* l_0_14_58 l_0_14_58)))
 (let ((?x21055 (* l_0_14_57 l_0_14_57)))
 (let ((?x9499 (* l_0_14_56 l_0_14_56)))
 (let ((?x25947 (* (* 4.0 l_0_14_45) l_0_14_45)))
 (let ((?x25944 (* (* 4.0 l_0_14_44) l_0_14_44)))
 (let ((?x25941 (* (* 4.0 l_0_14_43) l_0_14_43)))
 (let ((?x25938 (* (* 4.0 l_0_14_42) l_0_14_42)))
 (let ((?x25935 (* (* 4.0 l_0_14_41) l_0_14_41)))
 (let ((?x25929 (* l_0_14_30 l_0_14_30)))
 (let ((?x25930 (* 4.0 ?x25929)))
 (let ((?x25926 (* l_0_14_29 l_0_14_29)))
 (let ((?x25927 (* 4.0 ?x25926)))
 (let ((?x25923 (* l_0_14_28 l_0_14_28)))
 (let ((?x25924 (* 4.0 ?x25923)))
 (let ((?x25920 (* l_0_14_27 l_0_14_27)))
 (let ((?x25921 (* 4.0 ?x25920)))
 (let ((?x25917 (* l_0_14_26 l_0_14_26)))
 (let ((?x25918 (* 4.0 ?x25917)))
 (let ((?x21081 (- (- (- (+ (+ (+ (+ ?x25918 ?x25921) ?x25924) ?x25927) ?x25930) ?x25935) ?x25938) ?x25941)))
 (let ((?x26863 (+ (+ (+ (+ (+ (- (- ?x21081 ?x25944) ?x25947) ?x9499) ?x21055) ?x26858) ?x26860) ?x26862)))
 (= ?x26863 0.0))))))))))))))))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_16 0.0))
(assert
 (>= l_0_14_18 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_25 0.0))
(assert
 (>= l_0_14_30 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_33 0.0))
(assert
 (>= l_0_14_36 0.0))
(assert
 (>= l_0_14_40 0.0))
(assert
 (>= l_0_14_45 0.0))
(assert
 (>= l_0_14_46 0.0))
(assert
 (>= l_0_14_48 0.0))
(assert
 (>= l_0_14_51 0.0))
(assert
 (>= l_0_14_55 0.0))
(assert
 (>= l_0_14_60 0.0))
(assert
 (>= l_0_14_61 0.0))
(assert
 (>= l_0_14_63 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_70 0.0))
(assert
 (>= l_0_14_75 0.0))
(assert
 (>= l_0_14_76 0.0))
(assert
 (>= l_0_14_78 0.0))
(assert
 (>= l_0_14_81 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x26894 (* ?x26893 l_0_15_31)))
 (let ((?x26890 (* l_0_15_16 l_0_15_16)))
 (let ((?x26891 (* 4.0 ?x26890)))
 (let ((?x26892 (+ (- (* (* 2.0 l_0_15_1) l_0_15_2) (* l_0_15_1 l_0_15_1)) ?x26891)))
 (let ((?x26901 (- (- (- ?x26892 ?x26894) (* (* 2.0 l_0_15_61) l_0_15_62)) (* (* 2.0 l_0_15_76) l_0_15_77))))
 (= (+ (- ?x26901 (* (* 2.0 l_0_15_91) l_0_15_92)) 4.0) 0.0))))))))
(assert
 (let ((?x26934 (* l_0_15_46 l_0_15_46)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x26894 (* ?x26893 l_0_15_31)))
 (let ((?x26890 (* l_0_15_16 l_0_15_16)))
 (let ((?x26891 (* 4.0 ?x26890)))
 (let ((?x26931 (- (* (* 2.0 l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_101) l_0_15_91))))
 (let ((?x26937 (- (+ (- (+ ?x26931 ?x26891) ?x26894) ?x26934) (* (* 2.0 l_0_15_61) l_0_15_71))))
 (= (+ (- ?x26937 (* (* 2.0 l_0_15_76) l_0_15_86)) 4.0) 0.0)))))))))
(assert
 (let ((?x26980 (* l_0_15_96 l_0_15_96)))
 (let ((?x26978 (* l_0_15_95 l_0_15_95)))
 (let ((?x26976 (* l_0_15_94 l_0_15_94)))
 (let ((?x26974 (* l_0_15_81 l_0_15_81)))
 (let ((?x26972 (* l_0_15_80 l_0_15_80)))
 (let ((?x26970 (* l_0_15_79 l_0_15_79)))
 (let ((?x26968 (* l_0_15_66 l_0_15_66)))
 (let ((?x26966 (* l_0_15_65 l_0_15_65)))
 (let ((?x26964 (* l_0_15_64 l_0_15_64)))
 (let ((?x26913 (* l_0_15_31 l_0_15_31)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x15972 (* ?x26893 l_0_15_34)))
 (let ((?x26953 (- (- (* (* 4.0 l_0_15_16) l_0_15_19) (* l_0_15_16 l_0_15_16)) ?x15972)))
 (let ((?x26960 (+ (+ (+ ?x26953 ?x26913) (* 1.0 (* l_0_15_4 l_0_15_4))) (* 1.0 (* l_0_15_5 l_0_15_5)))))
 (let ((?x26969 (- (- (- (+ ?x26960 (* 1.0 (* l_0_15_6 l_0_15_6))) ?x26964) ?x26966) ?x26968)))
 (let ((?x26982 (- (- (- (- (- (- (- ?x26969 ?x26970) ?x26972) ?x26974) ?x26976) ?x26978) ?x26980) 1.0)))
 (= ?x26982 0.0))))))))))))))))))
(assert
 (let ((?x27050 (* l_0_15_99 l_0_15_99)))
 (let ((?x27048 (* l_0_15_98 l_0_15_98)))
 (let ((?x27046 (* l_0_15_97 l_0_15_97)))
 (let ((?x27041 (* l_0_15_85 l_0_15_85)))
 (let ((?x27039 (* l_0_15_84 l_0_15_84)))
 (let ((?x27037 (* l_0_15_83 l_0_15_83)))
 (let ((?x27035 (* l_0_15_82 l_0_15_82)))
 (let ((?x27030 (* l_0_15_70 l_0_15_70)))
 (let ((?x27025 (* l_0_15_69 l_0_15_69)))
 (let ((?x27023 (* l_0_15_68 l_0_15_68)))
 (let ((?x27021 (* l_0_15_67 l_0_15_67)))
 (let ((?x26913 (* l_0_15_31 l_0_15_31)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27018 (* ?x26893 l_0_15_37)))
 (let ((?x26890 (* l_0_15_16 l_0_15_16)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x27015 (* ?x21290 l_0_15_22)))
 (let ((?x27013 (* l_0_15_100 l_0_15_100)))
 (let ((?x27019 (+ (+ (- (- (* 1.0 (* l_0_15_10 l_0_15_10)) ?x27013) ?x27015) ?x26890) ?x27018)))
 (let ((?x27029 (+ (- (- (- (- ?x27019 ?x26913) ?x27021) ?x27023) ?x27025) (* 1.0 (* l_0_15_7 l_0_15_7)))))
 (let ((?x27038 (- (- (+ (- ?x27029 ?x27030) (* 1.0 (* l_0_15_8 l_0_15_8))) ?x27035) ?x27037)))
 (let ((?x27047 (- (+ (- (- ?x27038 ?x27039) ?x27041) (* 1.0 (* l_0_15_9 l_0_15_9))) ?x27046)))
 (= (+ (- (- ?x27047 ?x27048) ?x27050) 1.0) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26890 (* l_0_15_16 l_0_15_16)))
 (let ((?x15171 (* 2.0 ?x26890)))
 (let ((?x27075 (- (+ (* (* 2.0 l_0_15_1) l_0_15_4) ?x15171) (* (* 2.0 l_0_15_31) l_0_15_31))))
 (let ((?x27079 (- (- ?x27075 (* (* 2.0 l_0_15_61) l_0_15_64)) (* (* 2.0 l_0_15_76) l_0_15_79))))
 (= (+ (- ?x27079 (* (* 2.0 l_0_15_91) l_0_15_94)) 2.0) 0.0))))))
(assert
 (let ((?x26913 (* l_0_15_31 l_0_15_31)))
 (let ((?x27087 (* 2.0 ?x26913)))
 (let ((?x27102 (- (* (* 2.0 l_0_15_1) l_0_15_7) (* (* 2.0 l_0_15_16) l_0_15_16))))
 (let ((?x27107 (- (- (+ ?x27102 ?x27087) (* (* 2.0 l_0_15_61) l_0_15_67)) (* (* 2.0 l_0_15_76) l_0_15_82))))
 (= (- (- ?x27107 (* (* 2.0 l_0_15_91) l_0_15_97)) 2.0) 0.0))))))
(assert
 (let ((?x27150 (* l_0_15_93 l_0_15_93)))
 (let ((?x27148 (* l_0_15_92 l_0_15_92)))
 (let ((?x27146 (* l_0_15_78 l_0_15_78)))
 (let ((?x27144 (* l_0_15_77 l_0_15_77)))
 (let ((?x27142 (* l_0_15_63 l_0_15_63)))
 (let ((?x27140 (* l_0_15_62 l_0_15_62)))
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27138 (* ?x27137 l_0_15_32)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27129 (* ?x27128 l_0_15_17)))
 (let ((?x27133 (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_2) ?x27129) (* 1.0 (* l_0_15_2 l_0_15_2)))))
 (let ((?x27143 (- (- (- (+ ?x27133 (* 1.0 (* l_0_15_3 l_0_15_3))) ?x27138) ?x27140) ?x27142)))
 (= (- (- (- (- ?x27143 ?x27144) ?x27146) ?x27148) ?x27150) 0.0))))))))))))))
(assert
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27178 (* ?x27137 l_0_15_34)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27176 (* ?x26893 l_0_15_32)))
 (let ((?x27173 (* 2.0 l_0_15_3)))
 (let ((?x27174 (* ?x27173 l_0_15_5)))
 (let ((?x27170 (* 2.0 l_0_15_2)))
 (let ((?x27171 (* ?x27170 l_0_15_4)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27168 (* ?x27128 l_0_15_19)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x9882 (* ?x21290 l_0_15_17)))
 (let ((?x27175 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_1) l_0_15_4) ?x9882) ?x27168) ?x27171) ?x27174)))
 (let ((?x27185 (- (- (- (- ?x27175 ?x27176) ?x27178) (* (* 2.0 l_0_15_62) l_0_15_64)) (* (* 2.0 l_0_15_63) l_0_15_65))))
 (let ((?x27191 (- (- ?x27185 (* (* 2.0 l_0_15_77) l_0_15_79)) (* (* 2.0 l_0_15_78) l_0_15_80))))
 (let ((?x27197 (- (- ?x27191 (* (* 2.0 l_0_15_92) l_0_15_94)) (* (* 2.0 l_0_15_93) l_0_15_95))))
 (= ?x27197 0.0))))))))))))))))))
(assert
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27238 (* ?x27137 l_0_15_37)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27176 (* ?x26893 l_0_15_32)))
 (let ((?x27173 (* 2.0 l_0_15_3)))
 (let ((?x27235 (* ?x27173 l_0_15_8)))
 (let ((?x27170 (* 2.0 l_0_15_2)))
 (let ((?x27233 (* ?x27170 l_0_15_7)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27231 (* ?x27128 l_0_15_22)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x9882 (* ?x21290 l_0_15_17)))
 (let ((?x27236 (+ (+ (+ (- (* (* (- 2.0) l_0_15_1) l_0_15_7) ?x9882) ?x27231) ?x27233) ?x27235)))
 (let ((?x27243 (- (- (- (+ ?x27236 ?x27176) ?x27238) (* (* 2.0 l_0_15_62) l_0_15_67)) (* (* 2.0 l_0_15_63) l_0_15_68))))
 (let ((?x27247 (- (- ?x27243 (* (* 2.0 l_0_15_77) l_0_15_82)) (* (* 2.0 l_0_15_78) l_0_15_83))))
 (let ((?x27251 (- (- ?x27247 (* (* 2.0 l_0_15_92) l_0_15_97)) (* (* 2.0 l_0_15_93) l_0_15_98))))
 (= ?x27251 0.0))))))))))))))))))
(assert
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27280 (* ?x27137 l_0_15_41)))
 (let ((?x27138 (* ?x27137 l_0_15_32)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27277 (* ?x27128 l_0_15_26)))
 (let ((?x27129 (* ?x27128 l_0_15_17)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x27274 (* ?x27273 l_0_15_3)))
 (let ((?x27266 (- (* (* (- 2.0) l_0_15_1) l_0_15_11) (* (* 2.0 l_0_15_101) l_0_15_92))))
 (let ((?x27272 (+ (- ?x27266 (* (* 2.0 l_0_15_102) l_0_15_93)) (* (* 2.0 l_0_15_11) l_0_15_2))))
 (let ((?x27284 (+ (- (- (+ (+ (+ ?x27272 ?x27274) ?x27129) ?x27277) ?x27138) ?x27280) (* (* 2.0 l_0_15_46) l_0_15_47))))
 (let ((?x27288 (- (- ?x27284 (* (* 2.0 l_0_15_62) l_0_15_71)) (* (* 2.0 l_0_15_63) l_0_15_72))))
 (let ((?x27292 (- (- ?x27288 (* (* 2.0 l_0_15_77) l_0_15_86)) (* (* 2.0 l_0_15_78) l_0_15_87))))
 (= ?x27292 0.0)))))))))))))))
(assert
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27336 (* ?x27335 l_0_15_33)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27333 (* ?x27332 l_0_15_32)))
 (let ((?x27134 (* l_0_15_3 l_0_15_3)))
 (let ((?x27131 (* l_0_15_2 l_0_15_2)))
 (let ((?x27327 (* l_0_15_18 l_0_15_18)))
 (let ((?x27328 (* 4.0 ?x27327)))
 (let ((?x27325 (* l_0_15_17 l_0_15_17)))
 (let ((?x27326 (* 4.0 ?x27325)))
 (= (- (- (- (- (+ ?x27326 ?x27328) ?x27131) ?x27134) ?x27333) ?x27336) 0.0))))))))))))
(assert
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27365 (* ?x27364 l_0_15_35)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27359 (* ?x27358 l_0_15_34)))
 (let ((?x27173 (* 2.0 l_0_15_3)))
 (let ((?x27174 (* ?x27173 l_0_15_5)))
 (let ((?x27170 (* 2.0 l_0_15_2)))
 (let ((?x27171 (* ?x27170 l_0_15_4)))
 (let ((?x27327 (* l_0_15_18 l_0_15_18)))
 (let ((?x27354 (* 2.0 ?x27327)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27352 (* ?x27351 l_0_15_20)))
 (let ((?x27325 (* l_0_15_17 l_0_15_17)))
 (let ((?x27349 (* 2.0 ?x27325)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27348 (* ?x27347 l_0_15_19)))
 (let ((?x27363 (- (- (- (- (+ (+ (+ ?x27348 ?x27349) ?x27352) ?x27354) ?x27171) ?x27174) ?x27359) (* (* 2.0 l_0_15_32) l_0_15_32))))
 (= (- (- ?x27363 ?x27365) (* (* 2.0 l_0_15_33) l_0_15_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x10166 (* l_0_15_33 l_0_15_33)))
 (let ((?x8234 (* 2.0 ?x10166)))
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27406 (* ?x27364 l_0_15_38)))
 (let ((?x10128 (* l_0_15_32 l_0_15_32)))
 (let ((?x10187 (* 2.0 ?x10128)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27403 (* ?x27358 l_0_15_37)))
 (let ((?x27173 (* 2.0 l_0_15_3)))
 (let ((?x27235 (* ?x27173 l_0_15_8)))
 (let ((?x27170 (* 2.0 l_0_15_2)))
 (let ((?x27233 (* ?x27170 l_0_15_7)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27396 (* ?x27351 l_0_15_23)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27392 (* ?x27347 l_0_15_22)))
 (let ((?x27400 (- (+ (- ?x27392 (* (* 2.0 l_0_15_17) l_0_15_17)) ?x27396) (* (* 2.0 l_0_15_18) l_0_15_18))))
 (= (+ (- (+ (- (- (- ?x27400 ?x27233) ?x27235) ?x27403) ?x10187) ?x27406) ?x8234) 0.0)))))))))))))))))))
(assert
 (let ((?x27440 (* l_0_15_48 l_0_15_48)))
 (let ((?x27438 (* l_0_15_47 l_0_15_47)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27336 (* ?x27335 l_0_15_33)))
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27435 (* ?x27364 l_0_15_42)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27333 (* ?x27332 l_0_15_32)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27432 (* ?x27358 l_0_15_41)))
 (let ((?x27327 (* l_0_15_18 l_0_15_18)))
 (let ((?x27328 (* 4.0 ?x27327)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27429 (* ?x27351 l_0_15_27)))
 (let ((?x27325 (* l_0_15_17 l_0_15_17)))
 (let ((?x27326 (* 4.0 ?x27325)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27426 (* ?x27347 l_0_15_26)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x27274 (* ?x27273 l_0_15_3)))
 (let ((?x27430 (+ (+ (+ (- (* (* (- 2.0) l_0_15_11) l_0_15_2) ?x27274) ?x27426) ?x27326) ?x27429)))
 (let ((?x27441 (+ (+ (- (- (- (- (+ ?x27430 ?x27328) ?x27432) ?x27333) ?x27435) ?x27336) ?x27438) ?x27440)))
 (= ?x27441 0.0))))))))))))))))))))))))
(assert
 (let ((?x26961 (* l_0_15_6 l_0_15_6)))
 (let ((?x26958 (* l_0_15_5 l_0_15_5)))
 (let ((?x26955 (* l_0_15_4 l_0_15_4)))
 (let ((?x27493 (* 4.0 l_0_15_36)))
 (let ((?x27494 (* ?x27493 l_0_15_36)))
 (let ((?x27490 (* 4.0 l_0_15_35)))
 (let ((?x27491 (* ?x27490 l_0_15_35)))
 (let ((?x27487 (* 4.0 l_0_15_34)))
 (let ((?x27488 (* ?x27487 l_0_15_34)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27485 (* ?x27335 l_0_15_35)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27483 (* ?x27332 l_0_15_34)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x27481 (* ?x27073 l_0_15_32)))
 (let ((?x27478 (* l_0_15_21 l_0_15_21)))
 (let ((?x27479 (* 4.0 ?x27478)))
 (let ((?x27475 (* l_0_15_20 l_0_15_20)))
 (let ((?x27476 (* 4.0 ?x27475)))
 (let ((?x27472 (* l_0_15_19 l_0_15_19)))
 (let ((?x27473 (* 4.0 ?x27472)))
 (let ((?x27469 (* 4.0 l_0_15_18)))
 (let ((?x27470 (* ?x27469 l_0_15_20)))
 (let ((?x27468 (+ (* (* (- 2.0) l_0_15_16) l_0_15_17) (* (* 4.0 l_0_15_17) l_0_15_19))))
 (let ((?x27486 (- (- (+ (+ (+ (+ (+ ?x27468 ?x27470) ?x27473) ?x27476) ?x27479) ?x27481) ?x27483) ?x27485)))
 (= (- (- (- (- (- (- ?x27486 ?x27488) ?x27491) ?x27494) ?x26955) ?x26958) ?x26961) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x27545 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x27542 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x27539 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x27535 (* 8.0 l_0_15_36)))
 (let ((?x27536 (* ?x27535 l_0_15_39)))
 (let ((?x27532 (* 8.0 l_0_15_35)))
 (let ((?x27533 (* ?x27532 l_0_15_38)))
 (let ((?x27529 (* 8.0 l_0_15_34)))
 (let ((?x27530 (* ?x27529 l_0_15_37)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27527 (* ?x27335 l_0_15_38)))
 (let ((?x27485 (* ?x27335 l_0_15_35)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27524 (* ?x27332 l_0_15_37)))
 (let ((?x27483 (* ?x27332 l_0_15_34)))
 (let ((?x27520 (* 8.0 l_0_15_21)))
 (let ((?x27521 (* ?x27520 l_0_15_24)))
 (let ((?x21598 (* 8.0 l_0_15_20)))
 (let ((?x21596 (* ?x21598 l_0_15_23)))
 (let ((?x15237 (* 8.0 l_0_15_19)))
 (let ((?x21599 (* ?x15237 l_0_15_22)))
 (let ((?x27469 (* 4.0 l_0_15_18)))
 (let ((?x21582 (* ?x27469 l_0_15_23)))
 (let ((?x27470 (* ?x27469 l_0_15_20)))
 (let ((?x27466 (* 4.0 l_0_15_17)))
 (let ((?x10325 (* ?x27466 l_0_15_22)))
 (let ((?x21600 (+ (+ (- (+ (* (* (- 4.0) l_0_15_17) l_0_15_19) ?x10325) ?x27470) ?x21582) ?x21599)))
 (let ((?x27531 (- (- (+ (- (+ (+ (+ ?x21600 ?x21596) ?x27521) ?x27483) ?x27524) ?x27485) ?x27527) ?x27530)))
 (= (- (- (- (- (- ?x27531 ?x27533) ?x27536) ?x27539) ?x27542) ?x27545) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x27535 (* 8.0 l_0_15_36)))
 (let ((?x27606 (* ?x27535 l_0_15_43)))
 (let ((?x27532 (* 8.0 l_0_15_35)))
 (let ((?x27604 (* ?x27532 l_0_15_42)))
 (let ((?x27529 (* 8.0 l_0_15_34)))
 (let ((?x27602 (* ?x27529 l_0_15_41)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27600 (* ?x27335 l_0_15_42)))
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27365 (* ?x27364 l_0_15_35)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27597 (* ?x27332 l_0_15_41)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27359 (* ?x27358 l_0_15_34)))
 (let ((?x27520 (* 8.0 l_0_15_21)))
 (let ((?x27594 (* ?x27520 l_0_15_28)))
 (let ((?x21598 (* 8.0 l_0_15_20)))
 (let ((?x27592 (* ?x21598 l_0_15_27)))
 (let ((?x15237 (* 8.0 l_0_15_19)))
 (let ((?x27590 (* ?x15237 l_0_15_26)))
 (let ((?x27469 (* 4.0 l_0_15_18)))
 (let ((?x27588 (* ?x27469 l_0_15_27)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27352 (* ?x27351 l_0_15_20)))
 (let ((?x27466 (* 4.0 l_0_15_17)))
 (let ((?x27585 (* ?x27466 l_0_15_26)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27348 (* ?x27347 l_0_15_19)))
 (let ((?x27581 (* 2.0 l_0_15_13)))
 (let ((?x27582 (* ?x27581 l_0_15_6)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x27579 (* ?x27273 l_0_15_5)))
 (let ((?x27586 (+ (+ (- (- (* (* (- 2.0) l_0_15_11) l_0_15_4) ?x27579) ?x27582) ?x27348) ?x27585)))
 (let ((?x27598 (- (- (+ (+ (+ (+ (+ ?x27586 ?x27352) ?x27588) ?x27590) ?x27592) ?x27594) ?x27359) ?x27597)))
 (let ((?x27610 (+ (- (- (- (- (- ?x27598 ?x27365) ?x27600) ?x27602) ?x27604) ?x27606) (* (* 2.0 l_0_15_47) l_0_15_49))))
 (= (+ ?x27610 (* (* 2.0 l_0_15_48) l_0_15_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27043 (* l_0_15_9 l_0_15_9)))
 (let ((?x27032 (* l_0_15_8 l_0_15_8)))
 (let ((?x27027 (* l_0_15_7 l_0_15_7)))
 (let ((?x27649 (* 4.0 l_0_15_40)))
 (let ((?x27650 (* ?x27649 l_0_15_40)))
 (let ((?x27646 (* 4.0 l_0_15_39)))
 (let ((?x27647 (* ?x27646 l_0_15_39)))
 (let ((?x27643 (* 4.0 l_0_15_38)))
 (let ((?x27644 (* ?x27643 l_0_15_38)))
 (let ((?x27640 (* 4.0 l_0_15_37)))
 (let ((?x27641 (* ?x27640 l_0_15_37)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27527 (* ?x27335 l_0_15_38)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27524 (* ?x27332 l_0_15_37)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x27481 (* ?x27073 l_0_15_32)))
 (let ((?x27634 (* l_0_15_25 l_0_15_25)))
 (let ((?x27635 (* 4.0 ?x27634)))
 (let ((?x27631 (* l_0_15_24 l_0_15_24)))
 (let ((?x27632 (* 4.0 ?x27631)))
 (let ((?x27628 (* l_0_15_23 l_0_15_23)))
 (let ((?x27629 (* 4.0 ?x27628)))
 (let ((?x27625 (* l_0_15_22 l_0_15_22)))
 (let ((?x27626 (* 4.0 ?x27625)))
 (let ((?x27469 (* 4.0 l_0_15_18)))
 (let ((?x21582 (* ?x27469 l_0_15_23)))
 (let ((?x27466 (* 4.0 l_0_15_17)))
 (let ((?x10325 (* ?x27466 l_0_15_22)))
 (let ((?x27622 (+ (* (- l_0_15_10) l_0_15_10) (* (* 2.0 l_0_15_16) l_0_15_17))))
 (let ((?x27637 (- (+ (+ (+ (+ (- (- ?x27622 ?x10325) ?x21582) ?x27626) ?x27629) ?x27632) ?x27635) ?x27481)))
 (let ((?x27652 (- (- (- (- (- (+ (+ ?x27637 ?x27524) ?x27527) ?x27641) ?x27644) ?x27647) ?x27650) ?x27027)))
 (= (- (- ?x27652 ?x27032) ?x27043) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27699 (* (* 8.0 l_0_15_40) l_0_15_44)))
 (let ((?x27696 (* (* 8.0 l_0_15_39) l_0_15_43)))
 (let ((?x27693 (* (* 8.0 l_0_15_38) l_0_15_42)))
 (let ((?x27690 (* (* 8.0 l_0_15_37) l_0_15_41)))
 (let ((?x27335 (* 4.0 l_0_15_33)))
 (let ((?x27600 (* ?x27335 l_0_15_42)))
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27406 (* ?x27364 l_0_15_38)))
 (let ((?x27332 (* 4.0 l_0_15_32)))
 (let ((?x27597 (* ?x27332 l_0_15_41)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27403 (* ?x27358 l_0_15_37)))
 (let ((?x27683 (* (* 8.0 l_0_15_25) l_0_15_29)))
 (let ((?x27680 (* (* 8.0 l_0_15_24) l_0_15_28)))
 (let ((?x27677 (* (* 8.0 l_0_15_23) l_0_15_27)))
 (let ((?x27674 (* (* 8.0 l_0_15_22) l_0_15_26)))
 (let ((?x27469 (* 4.0 l_0_15_18)))
 (let ((?x27588 (* ?x27469 l_0_15_27)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27396 (* ?x27351 l_0_15_23)))
 (let ((?x27466 (* 4.0 l_0_15_17)))
 (let ((?x27585 (* ?x27466 l_0_15_26)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27392 (* ?x27347 l_0_15_22)))
 (let ((?x27581 (* 2.0 l_0_15_13)))
 (let ((?x27667 (* ?x27581 l_0_15_9)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x9839 (* ?x27273 l_0_15_8)))
 (let ((?x27270 (* 2.0 l_0_15_11)))
 (let ((?x21846 (* ?x27270 l_0_15_7)))
 (let ((?x27669 (+ (- (- (- (* (* (- 2.0) l_0_15_10) l_0_15_14) ?x21846) ?x9839) ?x27667) ?x27392)))
 (let ((?x27684 (+ (+ (+ (+ (- (+ (- ?x27669 ?x27585) ?x27396) ?x27588) ?x27674) ?x27677) ?x27680) ?x27683)))
 (let ((?x27697 (- (- (- (+ (- (+ (- ?x27684 ?x27403) ?x27597) ?x27406) ?x27600) ?x27690) ?x27693) ?x27696)))
 (let ((?x27704 (+ (+ (- ?x27697 ?x27699) (* (* 2.0 l_0_15_47) l_0_15_52)) (* (* 2.0 l_0_15_48) l_0_15_53))))
 (= ?x27704 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27780 (* (* 4.0 l_0_15_45) l_0_15_45)))
 (let ((?x27777 (* (* 4.0 l_0_15_44) l_0_15_44)))
 (let ((?x27774 (* (* 4.0 l_0_15_43) l_0_15_43)))
 (let ((?x27771 (* (* 4.0 l_0_15_42) l_0_15_42)))
 (let ((?x27768 (* (* 4.0 l_0_15_41) l_0_15_41)))
 (let ((?x27364 (* 8.0 l_0_15_33)))
 (let ((?x27435 (* ?x27364 l_0_15_42)))
 (let ((?x27358 (* 8.0 l_0_15_32)))
 (let ((?x27432 (* ?x27358 l_0_15_41)))
 (let ((?x27762 (* l_0_15_30 l_0_15_30)))
 (let ((?x27763 (* 4.0 ?x27762)))
 (let ((?x27759 (* l_0_15_29 l_0_15_29)))
 (let ((?x27760 (* 4.0 ?x27759)))
 (let ((?x27756 (* l_0_15_28 l_0_15_28)))
 (let ((?x27757 (* 4.0 ?x27756)))
 (let ((?x27753 (* l_0_15_27 l_0_15_27)))
 (let ((?x27754 (* 4.0 ?x27753)))
 (let ((?x27750 (* l_0_15_26 l_0_15_26)))
 (let ((?x27751 (* 4.0 ?x27750)))
 (let ((?x27351 (* 8.0 l_0_15_18)))
 (let ((?x27429 (* ?x27351 l_0_15_27)))
 (let ((?x27347 (* 8.0 l_0_15_17)))
 (let ((?x27426 (* ?x27347 l_0_15_26)))
 (let ((?x27746 (* l_0_15_15 l_0_15_15)))
 (let ((?x27744 (* l_0_15_14 l_0_15_14)))
 (let ((?x27742 (* l_0_15_13 l_0_15_13)))
 (let ((?x27743 (- (- (* (- l_0_15_11) l_0_15_11) (* l_0_15_12 l_0_15_12)) ?x27742)))
 (let ((?x27758 (+ (+ (+ (+ (+ (- (- ?x27743 ?x27744) ?x27746) ?x27426) ?x27429) ?x27751) ?x27754) ?x27757)))
 (let ((?x27775 (- (- (- (- (- (+ (+ ?x27758 ?x27760) ?x27763) ?x27432) ?x27435) ?x27768) ?x27771) ?x27774)))
 (let ((?x27785 (+ (+ (- (- ?x27775 ?x27777) ?x27780) (* (* 2.0 l_0_15_47) l_0_15_56)) (* (* 2.0 l_0_15_48) l_0_15_57))))
 (= ?x27785 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x27818 (* l_0_15_91 l_0_15_91)))
 (let ((?x27816 (* l_0_15_76 l_0_15_76)))
 (let ((?x27817 (- (- (* 1.0 (* l_0_15_1 l_0_15_1)) (* l_0_15_61 l_0_15_61)) ?x27816)))
 (= (- ?x27817 ?x27818) 0.0)))))
(assert
 (let ((?x27545 (* (* 2.0 l_0_15_6) l_0_15_9)))
 (let ((?x27542 (* (* 2.0 l_0_15_5) l_0_15_8)))
 (let ((?x27539 (* (* 2.0 l_0_15_4) l_0_15_7)))
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27018 (* ?x26893 l_0_15_37)))
 (let ((?x15972 (* ?x26893 l_0_15_34)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x27015 (* ?x21290 l_0_15_22)))
 (let ((?x27835 (+ (- (+ (+ (* (* (- 4.0) l_0_15_16) l_0_15_19) ?x27015) ?x15972) ?x27018) ?x27539)))
 (let ((?x27843 (- (- (+ (+ ?x27835 ?x27542) ?x27545) (* (* 2.0 l_0_15_64) l_0_15_67)) (* (* 2.0 l_0_15_65) l_0_15_68))))
 (let ((?x27849 (- (- ?x27843 (* (* 2.0 l_0_15_66) l_0_15_69)) (* (* 2.0 l_0_15_79) l_0_15_82))))
 (let ((?x27855 (- (- ?x27849 (* (* 2.0 l_0_15_80) l_0_15_83)) (* (* 2.0 l_0_15_81) l_0_15_84))))
 (let ((?x27861 (- (- ?x27855 (* (* 2.0 l_0_15_94) l_0_15_97)) (* (* 2.0 l_0_15_95) l_0_15_98))))
 (= (- ?x27861 (* (* 2.0 l_0_15_96) l_0_15_99)) 0.0)))))))))))))))
(assert
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27895 (* ?x26893 l_0_15_41)))
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27178 (* ?x27137 l_0_15_34)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x27892 (* ?x21290 l_0_15_26)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27168 (* ?x27128 l_0_15_19)))
 (let ((?x27581 (* 2.0 l_0_15_13)))
 (let ((?x27582 (* ?x27581 l_0_15_6)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x27579 (* ?x27273 l_0_15_5)))
 (let ((?x27883 (- (* (* (- 2.0) l_0_15_101) l_0_15_94) (* (* 2.0 l_0_15_102) l_0_15_95))))
 (let ((?x27888 (+ (- ?x27883 (* (* 2.0 l_0_15_103) l_0_15_96)) (* (* 2.0 l_0_15_11) l_0_15_4))))
 (let ((?x27898 (+ (- (- (+ (+ (+ (+ ?x27888 ?x27579) ?x27582) ?x27168) ?x27892) ?x27178) ?x27895) (* (* 2.0 l_0_15_46) l_0_15_49))))
 (let ((?x27902 (- (- ?x27898 (* (* 2.0 l_0_15_64) l_0_15_71)) (* (* 2.0 l_0_15_65) l_0_15_72))))
 (let ((?x27906 (- (- ?x27902 (* (* 2.0 l_0_15_66) l_0_15_73)) (* (* 2.0 l_0_15_79) l_0_15_86))))
 (let ((?x27910 (- (- ?x27906 (* (* 2.0 l_0_15_80) l_0_15_87)) (* (* 2.0 l_0_15_81) l_0_15_88))))
 (= ?x27910 0.0))))))))))))))))))))
(assert
 (let ((?x26893 (* 4.0 l_0_15_31)))
 (let ((?x27895 (* ?x26893 l_0_15_41)))
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27238 (* ?x27137 l_0_15_37)))
 (let ((?x21290 (* 4.0 l_0_15_16)))
 (let ((?x27892 (* ?x21290 l_0_15_26)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27231 (* ?x27128 l_0_15_22)))
 (let ((?x27581 (* 2.0 l_0_15_13)))
 (let ((?x27667 (* ?x27581 l_0_15_9)))
 (let ((?x27273 (* 2.0 l_0_15_12)))
 (let ((?x9839 (* ?x27273 l_0_15_8)))
 (let ((?x27270 (* 2.0 l_0_15_11)))
 (let ((?x21846 (* ?x27270 l_0_15_7)))
 (let ((?x27937 (- (* (* 2.0 l_0_15_10) l_0_15_14) (* (* 2.0 l_0_15_100) l_0_15_104))))
 (let ((?x27941 (- (- ?x27937 (* (* 2.0 l_0_15_101) l_0_15_97)) (* (* 2.0 l_0_15_102) l_0_15_98))))
 (let ((?x27946 (+ (+ (+ (- ?x27941 (* (* 2.0 l_0_15_103) l_0_15_99)) ?x21846) ?x9839) ?x27667)))
 (let ((?x27952 (+ (+ (- (- (+ ?x27946 ?x27231) ?x27892) ?x27238) ?x27895) (* (* 2.0 l_0_15_46) l_0_15_52))))
 (let ((?x27958 (- (- ?x27952 (* (* 2.0 l_0_15_67) l_0_15_71)) (* (* 2.0 l_0_15_68) l_0_15_72))))
 (let ((?x27964 (- (- ?x27958 (* (* 2.0 l_0_15_69) l_0_15_73)) (* (* 2.0 l_0_15_70) l_0_15_74))))
 (let ((?x27970 (- (- ?x27964 (* (* 2.0 l_0_15_82) l_0_15_86)) (* (* 2.0 l_0_15_83) l_0_15_87))))
 (let ((?x27976 (- (- ?x27970 (* (* 2.0 l_0_15_84) l_0_15_88)) (* (* 2.0 l_0_15_85) l_0_15_89))))
 (= ?x27976 0.0))))))))))))))))))))))))
(assert
 (let ((?x28051 (* l_0_15_90 l_0_15_90)))
 (let ((?x28049 (* l_0_15_89 l_0_15_89)))
 (let ((?x28047 (* l_0_15_88 l_0_15_88)))
 (let ((?x28045 (* l_0_15_87 l_0_15_87)))
 (let ((?x28043 (* l_0_15_86 l_0_15_86)))
 (let ((?x28041 (* l_0_15_75 l_0_15_75)))
 (let ((?x28039 (* l_0_15_74 l_0_15_74)))
 (let ((?x28037 (* l_0_15_73 l_0_15_73)))
 (let ((?x28035 (* l_0_15_72 l_0_15_72)))
 (let ((?x28033 (* l_0_15_71 l_0_15_71)))
 (let ((?x27137 (* 8.0 l_0_15_31)))
 (let ((?x27280 (* ?x27137 l_0_15_41)))
 (let ((?x27128 (* 8.0 l_0_15_16)))
 (let ((?x27277 (* ?x27128 l_0_15_26)))
 (let ((?x28017 (* l_0_15_105 l_0_15_105)))
 (let ((?x28015 (* l_0_15_104 l_0_15_104)))
 (let ((?x28013 (* l_0_15_103 l_0_15_103)))
 (let ((?x28014 (- (- (* (- l_0_15_101) l_0_15_101) (* l_0_15_102 l_0_15_102)) ?x28013)))
 (let ((?x28022 (+ (+ (- (- ?x28014 ?x28015) ?x28017) (* 1.0 (* l_0_15_11 l_0_15_11))) (* 1.0 (* l_0_15_12 l_0_15_12)))))
 (let ((?x28026 (+ (+ ?x28022 (* 1.0 (* l_0_15_13 l_0_15_13))) (* 1.0 (* l_0_15_14 l_0_15_14)))))
 (let ((?x28032 (+ (- (+ (+ ?x28026 (* 1.0 (* l_0_15_15 l_0_15_15))) ?x27277) ?x27280) (* (* 2.0 l_0_15_46) l_0_15_56))))
 (let ((?x28046 (- (- (- (- (- (- (- ?x28032 ?x28033) ?x28035) ?x28037) ?x28039) ?x28041) ?x28043) ?x28045)))
 (= (- (- (- ?x28046 ?x28047) ?x28049) ?x28051) 0.0))))))))))))))))))))))))
(assert
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28080 (* ?x27073 l_0_15_34)))
 (let ((?x22333 (+ (* (* (- 2.0) l_0_15_16) l_0_15_19) (* 2.0 (* l_0_15_19 l_0_15_19)))))
 (let ((?x28079 (+ (+ ?x22333 (* 2.0 (* l_0_15_20 l_0_15_20))) (* 2.0 (* l_0_15_21 l_0_15_21)))))
 (let ((?x28087 (- (- (+ ?x28079 ?x28080) (* (* 2.0 l_0_15_34) l_0_15_34)) (* (* 2.0 l_0_15_35) l_0_15_35))))
 (= (- ?x28087 (* (* 2.0 l_0_15_36) l_0_15_36)) 0.0)))))))
(assert
 (let ((?x10313 (* l_0_15_36 l_0_15_36)))
 (let ((?x28102 (* 2.0 ?x10313)))
 (let ((?x27493 (* 4.0 l_0_15_36)))
 (let ((?x28138 (* ?x27493 l_0_15_39)))
 (let ((?x21586 (* l_0_15_35 l_0_15_35)))
 (let ((?x22338 (* 2.0 ?x21586)))
 (let ((?x27490 (* 4.0 l_0_15_35)))
 (let ((?x28135 (* ?x27490 l_0_15_38)))
 (let ((?x27512 (* l_0_15_34 l_0_15_34)))
 (let ((?x28095 (* 2.0 ?x27512)))
 (let ((?x27487 (* 4.0 l_0_15_34)))
 (let ((?x28132 (* ?x27487 l_0_15_37)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28130 (* ?x27073 l_0_15_37)))
 (let ((?x28124 (* 4.0 l_0_15_21)))
 (let ((?x28125 (* ?x28124 l_0_15_24)))
 (let ((?x28118 (* 4.0 l_0_15_20)))
 (let ((?x28119 (* ?x28118 l_0_15_23)))
 (let ((?x28112 (* 4.0 l_0_15_19)))
 (let ((?x28113 (* ?x28112 l_0_15_22)))
 (let ((?x28117 (- (+ (* (* (- 2.0) l_0_15_16) l_0_15_22) ?x28113) (* (* 2.0 l_0_15_19) l_0_15_19))))
 (let ((?x28129 (- (+ (- (+ ?x28117 ?x28119) (* (* 2.0 l_0_15_20) l_0_15_20)) ?x28125) (* (* 2.0 l_0_15_21) l_0_15_21))))
 (let ((?x28140 (+ (- (+ (- (+ (- (+ ?x28129 ?x28130) ?x28132) ?x28095) ?x28135) ?x22338) ?x28138) ?x28102)))
 (= ?x28140 0.0)))))))))))))))))))))))))
(assert
 (let ((?x28194 (* l_0_15_51 l_0_15_51)))
 (let ((?x28192 (* l_0_15_50 l_0_15_50)))
 (let ((?x28190 (* l_0_15_49 l_0_15_49)))
 (let ((?x27493 (* 4.0 l_0_15_36)))
 (let ((?x27494 (* ?x27493 l_0_15_36)))
 (let ((?x28187 (* ?x27493 l_0_15_43)))
 (let ((?x27490 (* 4.0 l_0_15_35)))
 (let ((?x27491 (* ?x27490 l_0_15_35)))
 (let ((?x28184 (* ?x27490 l_0_15_42)))
 (let ((?x27487 (* 4.0 l_0_15_34)))
 (let ((?x27488 (* ?x27487 l_0_15_34)))
 (let ((?x28181 (* ?x27487 l_0_15_41)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28179 (* ?x27073 l_0_15_41)))
 (let ((?x27478 (* l_0_15_21 l_0_15_21)))
 (let ((?x27479 (* 4.0 ?x27478)))
 (let ((?x28124 (* 4.0 l_0_15_21)))
 (let ((?x28176 (* ?x28124 l_0_15_28)))
 (let ((?x27475 (* l_0_15_20 l_0_15_20)))
 (let ((?x27476 (* 4.0 ?x27475)))
 (let ((?x28118 (* 4.0 l_0_15_20)))
 (let ((?x28173 (* ?x28118 l_0_15_27)))
 (let ((?x27472 (* l_0_15_19 l_0_15_19)))
 (let ((?x27473 (* 4.0 ?x27472)))
 (let ((?x28112 (* 4.0 l_0_15_19)))
 (let ((?x28170 (* ?x28112 l_0_15_26)))
 (let ((?x28175 (+ (+ (+ (+ (* (* (- 2.0) l_0_15_16) l_0_15_26) ?x28170) ?x27473) ?x28173) ?x27476)))
 (let ((?x28186 (- (- (- (- (+ (+ (+ ?x28175 ?x28176) ?x27479) ?x28179) ?x28181) ?x27488) ?x28184) ?x27491)))
 (= (+ (+ (+ (- (- ?x28186 ?x28187) ?x27494) ?x28190) ?x28192) ?x28194) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10166 (* l_0_15_33 l_0_15_33)))
 (let ((?x10128 (* l_0_15_32 l_0_15_32)))
 (let ((?x28209 (+ (- (* (- l_0_15_17) l_0_15_17) (* l_0_15_18 l_0_15_18)) ?x10128)))
 (= (+ ?x28209 ?x10166) 0.0)))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28222 (* ?x27367 l_0_15_35)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28220 (* ?x27361 l_0_15_34)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x28218 (* ?x27398 l_0_15_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_19) ?x28218) ?x28220) ?x28222) 0.0))))))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28237 (* ?x27367 l_0_15_38)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28235 (* ?x27361 l_0_15_37)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x16987 (* ?x27398 l_0_15_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_22) ?x16987) ?x28235) ?x28237) 0.0))))))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28255 (* ?x27367 l_0_15_42)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28253 (* ?x27361 l_0_15_41)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x28251 (* ?x27398 l_0_15_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_15_17) l_0_15_26) ?x28251) ?x28253) ?x28255) 0.0))))))))
(assert
 (let ((?x10313 (* l_0_15_36 l_0_15_36)))
 (let ((?x21586 (* l_0_15_35 l_0_15_35)))
 (let ((?x27512 (* l_0_15_34 l_0_15_34)))
 (let ((?x27478 (* l_0_15_21 l_0_15_21)))
 (let ((?x28271 (- (- (* (- l_0_15_19) l_0_15_19) (* l_0_15_20 l_0_15_20)) ?x27478)))
 (= (+ (+ (+ ?x28271 ?x27512) ?x21586) ?x10313) 0.0)))))))
(assert
 (let ((?x28088 (* 2.0 l_0_15_36)))
 (let ((?x28295 (* ?x28088 l_0_15_39)))
 (let ((?x28085 (* 2.0 l_0_15_35)))
 (let ((?x28293 (* ?x28085 l_0_15_38)))
 (let ((?x28082 (* 2.0 l_0_15_34)))
 (let ((?x28291 (* ?x28082 l_0_15_37)))
 (let ((?x28127 (* 2.0 l_0_15_21)))
 (let ((?x28289 (* ?x28127 l_0_15_24)))
 (let ((?x28121 (* 2.0 l_0_15_20)))
 (let ((?x28287 (* ?x28121 l_0_15_23)))
 (let ((?x28294 (+ (+ (- (- (* (* (- 2.0) l_0_15_19) l_0_15_22) ?x28287) ?x28289) ?x28291) ?x28293)))
 (= (+ ?x28294 ?x28295) 0.0)))))))))))))
(assert
 (let ((?x28088 (* 2.0 l_0_15_36)))
 (let ((?x28306 (* ?x28088 l_0_15_43)))
 (let ((?x28085 (* 2.0 l_0_15_35)))
 (let ((?x28304 (* ?x28085 l_0_15_42)))
 (let ((?x28082 (* 2.0 l_0_15_34)))
 (let ((?x11438 (* ?x28082 l_0_15_41)))
 (let ((?x28127 (* 2.0 l_0_15_21)))
 (let ((?x10990 (* ?x28127 l_0_15_28)))
 (let ((?x28121 (* 2.0 l_0_15_20)))
 (let ((?x22400 (* ?x28121 l_0_15_27)))
 (let ((?x28305 (+ (+ (- (- (* (* (- 2.0) l_0_15_19) l_0_15_26) ?x22400) ?x10990) ?x11438) ?x28304)))
 (= (+ ?x28305 ?x28306) 0.0)))))))))))))
(assert
 (let ((?x21822 (* l_0_15_40 l_0_15_40)))
 (let ((?x10500 (* l_0_15_39 l_0_15_39)))
 (let ((?x16285 (* l_0_15_38 l_0_15_38)))
 (let ((?x21819 (* l_0_15_37 l_0_15_37)))
 (let ((?x10313 (* l_0_15_36 l_0_15_36)))
 (let ((?x21586 (* l_0_15_35 l_0_15_35)))
 (let ((?x27512 (* l_0_15_34 l_0_15_34)))
 (let ((?x27634 (* l_0_15_25 l_0_15_25)))
 (let ((?x27631 (* l_0_15_24 l_0_15_24)))
 (let ((?x27628 (* l_0_15_23 l_0_15_23)))
 (let ((?x27625 (* l_0_15_22 l_0_15_22)))
 (let ((?x27478 (* l_0_15_21 l_0_15_21)))
 (let ((?x22459 (- (+ (+ (* l_0_15_19 l_0_15_19) (* l_0_15_20 l_0_15_20)) ?x27478) ?x27625)))
 (let ((?x28328 (+ (- (- (- (- (- (- ?x22459 ?x27628) ?x27631) ?x27634) ?x27512) ?x21586) ?x10313) ?x21819)))
 (= (+ (+ (+ ?x28328 ?x16285) ?x10500) ?x21822) 0.0))))))))))))))))
(assert
 (let ((?x28369 (* 2.0 l_0_15_40)))
 (let ((?x28370 (* ?x28369 l_0_15_44)))
 (let ((?x28366 (* 2.0 l_0_15_39)))
 (let ((?x28367 (* ?x28366 l_0_15_43)))
 (let ((?x28363 (* 2.0 l_0_15_38)))
 (let ((?x28364 (* ?x28363 l_0_15_42)))
 (let ((?x28360 (* 2.0 l_0_15_37)))
 (let ((?x28361 (* ?x28360 l_0_15_41)))
 (let ((?x28357 (* 2.0 l_0_15_25)))
 (let ((?x28358 (* ?x28357 l_0_15_29)))
 (let ((?x28354 (* 2.0 l_0_15_24)))
 (let ((?x28355 (* ?x28354 l_0_15_28)))
 (let ((?x28351 (* 2.0 l_0_15_23)))
 (let ((?x28352 (* ?x28351 l_0_15_27)))
 (let ((?x28362 (+ (- (- (- (* (* (- 2.0) l_0_15_22) l_0_15_26) ?x28352) ?x28355) ?x28358) ?x28361)))
 (= (+ (+ (+ ?x28362 ?x28364) ?x28367) ?x28370) 0.0)))))))))))))))))
(assert
 (let ((?x21980 (* l_0_15_45 l_0_15_45)))
 (let ((?x21977 (* l_0_15_44 l_0_15_44)))
 (let ((?x10676 (* l_0_15_43 l_0_15_43)))
 (let ((?x10675 (* l_0_15_42 l_0_15_42)))
 (let ((?x10598 (* l_0_15_41 l_0_15_41)))
 (let ((?x27762 (* l_0_15_30 l_0_15_30)))
 (let ((?x27759 (* l_0_15_29 l_0_15_29)))
 (let ((?x27756 (* l_0_15_28 l_0_15_28)))
 (let ((?x22466 (- (- (* (- l_0_15_26) l_0_15_26) (* l_0_15_27 l_0_15_27)) ?x27756)))
 (let ((?x28398 (+ (+ (+ (+ (+ (- (- ?x22466 ?x27759) ?x27762) ?x10598) ?x10675) ?x10676) ?x21977) ?x21980)))
 (= ?x28398 0.0))))))))))))
(assert
 (let ((?x27493 (* 4.0 l_0_15_36)))
 (let ((?x28138 (* ?x27493 l_0_15_39)))
 (let ((?x27490 (* 4.0 l_0_15_35)))
 (let ((?x28135 (* ?x27490 l_0_15_38)))
 (let ((?x27487 (* 4.0 l_0_15_34)))
 (let ((?x28132 (* ?x27487 l_0_15_37)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28080 (* ?x27073 l_0_15_34)))
 (let ((?x28124 (* 4.0 l_0_15_21)))
 (let ((?x28125 (* ?x28124 l_0_15_24)))
 (let ((?x28118 (* 4.0 l_0_15_20)))
 (let ((?x28119 (* ?x28118 l_0_15_23)))
 (let ((?x28112 (* 4.0 l_0_15_19)))
 (let ((?x28113 (* ?x28112 l_0_15_22)))
 (let ((?x28403 (+ (- (- (- (* (* 2.0 l_0_15_16) l_0_15_19) ?x28113) ?x28119) ?x28125) (* 2.0 (* l_0_15_22 l_0_15_22)))))
 (let ((?x28407 (+ (+ ?x28403 (* 2.0 (* l_0_15_23 l_0_15_23))) (* 2.0 (* l_0_15_24 l_0_15_24)))))
 (let ((?x28412 (+ (+ (- (+ ?x28407 (* 2.0 (* l_0_15_25 l_0_15_25))) ?x28080) ?x28132) ?x28135)))
 (let ((?x28417 (- (- (+ ?x28412 ?x28138) (* (* 2.0 l_0_15_37) l_0_15_37)) (* (* 2.0 l_0_15_38) l_0_15_38))))
 (let ((?x28421 (- (- ?x28417 (* (* 2.0 l_0_15_39) l_0_15_39)) (* (* 2.0 l_0_15_40) l_0_15_40))))
 (= ?x28421 0.0)))))))))))))))))))))
(assert
 (let ((?x21822 (* l_0_15_40 l_0_15_40)))
 (let ((?x2427 (* 2.0 ?x21822)))
 (let ((?x10500 (* l_0_15_39 l_0_15_39)))
 (let ((?x16792 (* 2.0 ?x10500)))
 (let ((?x16285 (* l_0_15_38 l_0_15_38)))
 (let ((?x22164 (* 2.0 ?x16285)))
 (let ((?x21819 (* l_0_15_37 l_0_15_37)))
 (let ((?x28437 (* 2.0 ?x21819)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28130 (* ?x27073 l_0_15_37)))
 (let ((?x28452 (- (* (* 2.0 l_0_15_16) l_0_15_22) (* (* 2.0 l_0_15_22) l_0_15_22))))
 (let ((?x28456 (- (- ?x28452 (* (* 2.0 l_0_15_23) l_0_15_23)) (* (* 2.0 l_0_15_24) l_0_15_24))))
 (let ((?x28461 (+ (+ (- (- ?x28456 (* (* 2.0 l_0_15_25) l_0_15_25)) ?x28130) ?x28437) ?x22164)))
 (= (+ (+ ?x28461 ?x16792) ?x2427) 0.0)))))))))))))))
(assert
 (let ((?x28497 (* l_0_15_55 l_0_15_55)))
 (let ((?x28495 (* l_0_15_54 l_0_15_54)))
 (let ((?x28493 (* l_0_15_53 l_0_15_53)))
 (let ((?x28491 (* l_0_15_52 l_0_15_52)))
 (let ((?x27649 (* 4.0 l_0_15_40)))
 (let ((?x27650 (* ?x27649 l_0_15_40)))
 (let ((?x28488 (* ?x27649 l_0_15_44)))
 (let ((?x27646 (* 4.0 l_0_15_39)))
 (let ((?x27647 (* ?x27646 l_0_15_39)))
 (let ((?x28485 (* ?x27646 l_0_15_43)))
 (let ((?x27643 (* 4.0 l_0_15_38)))
 (let ((?x27644 (* ?x27643 l_0_15_38)))
 (let ((?x28482 (* ?x27643 l_0_15_42)))
 (let ((?x27640 (* 4.0 l_0_15_37)))
 (let ((?x27641 (* ?x27640 l_0_15_37)))
 (let ((?x28479 (* ?x27640 l_0_15_41)))
 (let ((?x27073 (* 2.0 l_0_15_31)))
 (let ((?x28179 (* ?x27073 l_0_15_41)))
 (let ((?x27634 (* l_0_15_25 l_0_15_25)))
 (let ((?x27635 (* 4.0 ?x27634)))
 (let ((?x28475 (* (* 4.0 l_0_15_25) l_0_15_29)))
 (let ((?x27631 (* l_0_15_24 l_0_15_24)))
 (let ((?x27632 (* 4.0 ?x27631)))
 (let ((?x28471 (* (* 4.0 l_0_15_24) l_0_15_28)))
 (let ((?x27628 (* l_0_15_23 l_0_15_23)))
 (let ((?x27629 (* 4.0 ?x27628)))
 (let ((?x17180 (* (* 4.0 l_0_15_23) l_0_15_27)))
 (let ((?x27625 (* l_0_15_22 l_0_15_22)))
 (let ((?x27626 (* 4.0 ?x27625)))
 (let ((?x22609 (* (* 4.0 l_0_15_22) l_0_15_26)))
 (let ((?x28469 (+ (- (+ (- (* (* 2.0 l_0_15_16) l_0_15_26) ?x22609) ?x27626) ?x17180) ?x27629)))
 (let ((?x28481 (- (+ (- (+ (- (+ (- ?x28469 ?x28471) ?x27632) ?x28475) ?x27635) ?x28179) ?x28479) ?x27641)))
 (let ((?x28492 (+ (- (+ (- (+ (- (+ ?x28481 ?x28482) ?x27644) ?x28485) ?x27647) ?x28488) ?x27650) ?x28491)))
 (= (+ (+ (+ ?x28492 ?x28493) ?x28495) ?x28497) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10166 (* l_0_15_33 l_0_15_33)))
 (let ((?x10128 (* l_0_15_32 l_0_15_32)))
 (let ((?x28536 (- (- (+ (* l_0_15_17 l_0_15_17) (* l_0_15_18 l_0_15_18)) ?x10128) ?x10166)))
 (= ?x28536 0.0)))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28222 (* ?x27367 l_0_15_35)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28220 (* ?x27361 l_0_15_34)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x28218 (* ?x27398 l_0_15_20)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_19) ?x28218) ?x28220) ?x28222) 0.0))))))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28237 (* ?x27367 l_0_15_38)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28235 (* ?x27361 l_0_15_37)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x16987 (* ?x27398 l_0_15_23)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_22) ?x16987) ?x28235) ?x28237) 0.0))))))))
(assert
 (let ((?x27367 (* 2.0 l_0_15_33)))
 (let ((?x28255 (* ?x27367 l_0_15_42)))
 (let ((?x27361 (* 2.0 l_0_15_32)))
 (let ((?x28253 (* ?x27361 l_0_15_41)))
 (let ((?x27398 (* 2.0 l_0_15_18)))
 (let ((?x28251 (* ?x27398 l_0_15_27)))
 (= (- (- (+ (* (* 2.0 l_0_15_17) l_0_15_26) ?x28251) ?x28253) ?x28255) 0.0))))))))
(assert
 (let ((?x28088 (* 2.0 l_0_15_36)))
 (let ((?x28295 (* ?x28088 l_0_15_39)))
 (let ((?x28085 (* 2.0 l_0_15_35)))
 (let ((?x28293 (* ?x28085 l_0_15_38)))
 (let ((?x28082 (* 2.0 l_0_15_34)))
 (let ((?x28291 (* ?x28082 l_0_15_37)))
 (let ((?x28127 (* 2.0 l_0_15_21)))
 (let ((?x28289 (* ?x28127 l_0_15_24)))
 (let ((?x28121 (* 2.0 l_0_15_20)))
 (let ((?x28287 (* ?x28121 l_0_15_23)))
 (let ((?x28567 (- (- (+ (+ (* (* 2.0 l_0_15_19) l_0_15_22) ?x28287) ?x28289) ?x28291) ?x28293)))
 (= (- ?x28567 ?x28295) 0.0)))))))))))))
(assert
 (let ((?x28088 (* 2.0 l_0_15_36)))
 (let ((?x28306 (* ?x28088 l_0_15_43)))
 (let ((?x28085 (* 2.0 l_0_15_35)))
 (let ((?x28304 (* ?x28085 l_0_15_42)))
 (let ((?x28082 (* 2.0 l_0_15_34)))
 (let ((?x11438 (* ?x28082 l_0_15_41)))
 (let ((?x28127 (* 2.0 l_0_15_21)))
 (let ((?x10990 (* ?x28127 l_0_15_28)))
 (let ((?x28121 (* 2.0 l_0_15_20)))
 (let ((?x22400 (* ?x28121 l_0_15_27)))
 (let ((?x28574 (- (- (+ (+ (* (* 2.0 l_0_15_19) l_0_15_26) ?x22400) ?x10990) ?x11438) ?x28304)))
 (= (- ?x28574 ?x28306) 0.0)))))))))))))
(assert
 (let ((?x21822 (* l_0_15_40 l_0_15_40)))
 (let ((?x10500 (* l_0_15_39 l_0_15_39)))
 (let ((?x16285 (* l_0_15_38 l_0_15_38)))
 (let ((?x21819 (* l_0_15_37 l_0_15_37)))
 (let ((?x27634 (* l_0_15_25 l_0_15_25)))
 (let ((?x27631 (* l_0_15_24 l_0_15_24)))
 (let ((?x22694 (+ (+ (+ (* l_0_15_22 l_0_15_22) (* l_0_15_23 l_0_15_23)) ?x27631) ?x27634)))
 (= (- (- (- (- ?x22694 ?x21819) ?x16285) ?x10500) ?x21822) 0.0)))))))))
(assert
 (let ((?x28369 (* 2.0 l_0_15_40)))
 (let ((?x28370 (* ?x28369 l_0_15_44)))
 (let ((?x28366 (* 2.0 l_0_15_39)))
 (let ((?x28367 (* ?x28366 l_0_15_43)))
 (let ((?x28363 (* 2.0 l_0_15_38)))
 (let ((?x28364 (* ?x28363 l_0_15_42)))
 (let ((?x28360 (* 2.0 l_0_15_37)))
 (let ((?x28361 (* ?x28360 l_0_15_41)))
 (let ((?x28357 (* 2.0 l_0_15_25)))
 (let ((?x28358 (* ?x28357 l_0_15_29)))
 (let ((?x28354 (* 2.0 l_0_15_24)))
 (let ((?x28355 (* ?x28354 l_0_15_28)))
 (let ((?x28351 (* 2.0 l_0_15_23)))
 (let ((?x28352 (* ?x28351 l_0_15_27)))
 (let ((?x28596 (- (+ (+ (+ (* (* 2.0 l_0_15_22) l_0_15_26) ?x28352) ?x28355) ?x28358) ?x28361)))
 (= (- (- (- ?x28596 ?x28364) ?x28367) ?x28370) 0.0)))))))))))))))))
(assert
 (let ((?x21980 (* l_0_15_45 l_0_15_45)))
 (let ((?x21977 (* l_0_15_44 l_0_15_44)))
 (let ((?x10676 (* l_0_15_43 l_0_15_43)))
 (let ((?x10675 (* l_0_15_42 l_0_15_42)))
 (let ((?x10598 (* l_0_15_41 l_0_15_41)))
 (let ((?x27762 (* l_0_15_30 l_0_15_30)))
 (let ((?x27759 (* l_0_15_29 l_0_15_29)))
 (let ((?x27756 (* l_0_15_28 l_0_15_28)))
 (let ((?x22702 (+ (+ (+ (* l_0_15_26 l_0_15_26) (* l_0_15_27 l_0_15_27)) ?x27756) ?x27759)))
 (= (- (- (- (- (- (+ ?x22702 ?x27762) ?x10598) ?x10675) ?x10676) ?x21977) ?x21980) 0.0)))))))))))
(assert
 (let ((?x27649 (* 4.0 l_0_15_40)))
 (let ((?x28488 (* ?x27649 l_0_15_44)))
 (let ((?x27646 (* 4.0 l_0_15_39)))
 (let ((?x28485 (* ?x27646 l_0_15_43)))
 (let ((?x27643 (* 4.0 l_0_15_38)))
 (let ((?x28482 (* ?x27643 l_0_15_42)))
 (let ((?x27640 (* 4.0 l_0_15_37)))
 (let ((?x28479 (* ?x27640 l_0_15_41)))
 (let ((?x27493 (* 4.0 l_0_15_36)))
 (let ((?x28187 (* ?x27493 l_0_15_43)))
 (let ((?x27535 (* 8.0 l_0_15_36)))
 (let ((?x27536 (* ?x27535 l_0_15_39)))
 (let ((?x27490 (* 4.0 l_0_15_35)))
 (let ((?x28184 (* ?x27490 l_0_15_42)))
 (let ((?x27532 (* 8.0 l_0_15_35)))
 (let ((?x27533 (* ?x27532 l_0_15_38)))
 (let ((?x27487 (* 4.0 l_0_15_34)))
 (let ((?x28181 (* ?x27487 l_0_15_41)))
 (let ((?x27529 (* 8.0 l_0_15_34)))
 (let ((?x27530 (* ?x27529 l_0_15_37)))
 (let ((?x28475 (* (* 4.0 l_0_15_25) l_0_15_29)))
 (let ((?x28471 (* (* 4.0 l_0_15_24) l_0_15_28)))
 (let ((?x17180 (* (* 4.0 l_0_15_23) l_0_15_27)))
 (let ((?x22609 (* (* 4.0 l_0_15_22) l_0_15_26)))
 (let ((?x28124 (* 4.0 l_0_15_21)))
 (let ((?x28176 (* ?x28124 l_0_15_28)))
 (let ((?x27520 (* 8.0 l_0_15_21)))
 (let ((?x27521 (* ?x27520 l_0_15_24)))
 (let ((?x28118 (* 4.0 l_0_15_20)))
 (let ((?x28173 (* ?x28118 l_0_15_27)))
 (let ((?x21598 (* 8.0 l_0_15_20)))
 (let ((?x21596 (* ?x21598 l_0_15_23)))
 (let ((?x28112 (* 4.0 l_0_15_19)))
 (let ((?x28170 (* ?x28112 l_0_15_26)))
 (let ((?x15237 (* 8.0 l_0_15_19)))
 (let ((?x21599 (* ?x15237 l_0_15_22)))
 (let ((?x28637 (+ (+ (- (+ (- (+ (- ?x21599 ?x28170) ?x21596) ?x28173) ?x27521) ?x28176) ?x22609) ?x17180)))
 (let ((?x28644 (- (+ (- (+ (- (+ (+ ?x28637 ?x28471) ?x28475) ?x27530) ?x28181) ?x27533) ?x28184) ?x27536)))
 (let ((?x28652 (+ (- (- (- (- (+ ?x28644 ?x28187) ?x28479) ?x28482) ?x28485) ?x28488) (* (* 2.0 l_0_15_49) l_0_15_52))))
 (let ((?x28658 (+ (+ ?x28652 (* (* 2.0 l_0_15_50) l_0_15_53)) (* (* 2.0 l_0_15_51) l_0_15_54))))
 (= ?x28658 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27535 (* 8.0 l_0_15_36)))
 (let ((?x27606 (* ?x27535 l_0_15_43)))
 (let ((?x27532 (* 8.0 l_0_15_35)))
 (let ((?x27604 (* ?x27532 l_0_15_42)))
 (let ((?x27529 (* 8.0 l_0_15_34)))
 (let ((?x27602 (* ?x27529 l_0_15_41)))
 (let ((?x27762 (* l_0_15_30 l_0_15_30)))
 (let ((?x28687 (* 2.0 ?x27762)))
 (let ((?x27759 (* l_0_15_29 l_0_15_29)))
 (let ((?x28685 (* 2.0 ?x27759)))
 (let ((?x27756 (* l_0_15_28 l_0_15_28)))
 (let ((?x28683 (* 2.0 ?x27756)))
 (let ((?x27753 (* l_0_15_27 l_0_15_27)))
 (let ((?x28681 (* 2.0 ?x27753)))
 (let ((?x27750 (* l_0_15_26 l_0_15_26)))
 (let ((?x28674 (* 2.0 ?x27750)))
 (let ((?x27520 (* 8.0 l_0_15_21)))
 (let ((?x27594 (* ?x27520 l_0_15_28)))
 (let ((?x21598 (* 8.0 l_0_15_20)))
 (let ((?x27592 (* ?x21598 l_0_15_27)))
 (let ((?x15237 (* 8.0 l_0_15_19)))
 (let ((?x27590 (* ?x15237 l_0_15_26)))
 (let ((?x28688 (+ (+ (+ (+ (+ (+ (+ ?x27590 ?x27592) ?x27594) ?x28674) ?x28681) ?x28683) ?x28685) ?x28687)))
 (let ((?x28694 (- (- (- (- ?x28688 ?x27602) ?x27604) ?x27606) (* (* 2.0 l_0_15_41) l_0_15_41))))
 (let ((?x28700 (- (- ?x28694 (* (* 2.0 l_0_15_42) l_0_15_42)) (* (* 2.0 l_0_15_43) l_0_15_43))))
 (let ((?x28706 (- (- ?x28700 (* (* 2.0 l_0_15_44) l_0_15_44)) (* (* 2.0 l_0_15_45) l_0_15_45))))
 (let ((?x28710 (+ (+ ?x28706 (* (* 2.0 l_0_15_49) l_0_15_56)) (* (* 2.0 l_0_15_50) l_0_15_57))))
 (= (+ ?x28710 (* (* 2.0 l_0_15_51) l_0_15_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21980 (* l_0_15_45 l_0_15_45)))
 (let ((?x17443 (* 2.0 ?x21980)))
 (let ((?x21977 (* l_0_15_44 l_0_15_44)))
 (let ((?x11801 (* 2.0 ?x21977)))
 (let ((?x10676 (* l_0_15_43 l_0_15_43)))
 (let ((?x28715 (* 2.0 ?x10676)))
 (let ((?x10675 (* l_0_15_42 l_0_15_42)))
 (let ((?x11863 (* 2.0 ?x10675)))
 (let ((?x10598 (* l_0_15_41 l_0_15_41)))
 (let ((?x17382 (* 2.0 ?x10598)))
 (let ((?x27699 (* (* 8.0 l_0_15_40) l_0_15_44)))
 (let ((?x27696 (* (* 8.0 l_0_15_39) l_0_15_43)))
 (let ((?x27693 (* (* 8.0 l_0_15_38) l_0_15_42)))
 (let ((?x27690 (* (* 8.0 l_0_15_37) l_0_15_41)))
 (let ((?x27683 (* (* 8.0 l_0_15_25) l_0_15_29)))
 (let ((?x27680 (* (* 8.0 l_0_15_24) l_0_15_28)))
 (let ((?x27677 (* (* 8.0 l_0_15_23) l_0_15_27)))
 (let ((?x27674 (* (* 8.0 l_0_15_22) l_0_15_26)))
 (let ((?x28731 (- (+ (+ (+ ?x27674 ?x27677) ?x27680) ?x27683) (* (* 2.0 l_0_15_26) l_0_15_26))))
 (let ((?x28737 (- (- ?x28731 (* (* 2.0 l_0_15_27) l_0_15_27)) (* (* 2.0 l_0_15_28) l_0_15_28))))
 (let ((?x28743 (- (- ?x28737 (* (* 2.0 l_0_15_29) l_0_15_29)) (* (* 2.0 l_0_15_30) l_0_15_30))))
 (let ((?x28750 (+ (+ (+ (- (- (- (- ?x28743 ?x27690) ?x27693) ?x27696) ?x27699) ?x17382) ?x11863) ?x28715)))
 (let ((?x28758 (+ (+ (+ (+ ?x28750 ?x11801) ?x17443) (* (* 2.0 l_0_15_52) l_0_15_56)) (* (* 2.0 l_0_15_53) l_0_15_57))))
 (let ((?x28764 (+ (+ ?x28758 (* (* 2.0 l_0_15_54) l_0_15_58)) (* (* 2.0 l_0_15_55) l_0_15_59))))
 (= ?x28764 0.0))))))))))))))))))))))))))
(assert
 (let ((?x28790 (* l_0_15_60 l_0_15_60)))
 (let ((?x28788 (* l_0_15_59 l_0_15_59)))
 (let ((?x28786 (* l_0_15_58 l_0_15_58)))
 (let ((?x28784 (* l_0_15_57 l_0_15_57)))
 (let ((?x28782 (* l_0_15_56 l_0_15_56)))
 (let ((?x27780 (* (* 4.0 l_0_15_45) l_0_15_45)))
 (let ((?x27777 (* (* 4.0 l_0_15_44) l_0_15_44)))
 (let ((?x27774 (* (* 4.0 l_0_15_43) l_0_15_43)))
 (let ((?x27771 (* (* 4.0 l_0_15_42) l_0_15_42)))
 (let ((?x27768 (* (* 4.0 l_0_15_41) l_0_15_41)))
 (let ((?x27762 (* l_0_15_30 l_0_15_30)))
 (let ((?x27763 (* 4.0 ?x27762)))
 (let ((?x27759 (* l_0_15_29 l_0_15_29)))
 (let ((?x27760 (* 4.0 ?x27759)))
 (let ((?x27756 (* l_0_15_28 l_0_15_28)))
 (let ((?x27757 (* 4.0 ?x27756)))
 (let ((?x27753 (* l_0_15_27 l_0_15_27)))
 (let ((?x27754 (* 4.0 ?x27753)))
 (let ((?x27750 (* l_0_15_26 l_0_15_26)))
 (let ((?x27751 (* 4.0 ?x27750)))
 (let ((?x28779 (- (- (- (+ (+ (+ (+ ?x27751 ?x27754) ?x27757) ?x27760) ?x27763) ?x27768) ?x27771) ?x27774)))
 (let ((?x28791 (+ (+ (+ (+ (+ (- (- ?x28779 ?x27777) ?x27780) ?x28782) ?x28784) ?x28786) ?x28788) ?x28790)))
 (= ?x28791 0.0))))))))))))))))))))))))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_10 0.0))
(assert
 (>= l_0_15_15 0.0))
(assert
 (>= l_0_15_16 0.0))
(assert
 (>= l_0_15_18 0.0))
(assert
 (>= l_0_15_21 0.0))
(assert
 (>= l_0_15_25 0.0))
(assert
 (>= l_0_15_30 0.0))
(assert
 (>= l_0_15_31 0.0))
(assert
 (>= l_0_15_33 0.0))
(assert
 (>= l_0_15_36 0.0))
(assert
 (>= l_0_15_40 0.0))
(assert
 (>= l_0_15_45 0.0))
(assert
 (>= l_0_15_46 0.0))
(assert
 (>= l_0_15_48 0.0))
(assert
 (>= l_0_15_51 0.0))
(assert
 (>= l_0_15_55 0.0))
(assert
 (>= l_0_15_60 0.0))
(assert
 (>= l_0_15_61 0.0))
(assert
 (>= l_0_15_63 0.0))
(assert
 (>= l_0_15_66 0.0))
(assert
 (>= l_0_15_70 0.0))
(assert
 (>= l_0_15_75 0.0))
(assert
 (>= l_0_15_76 0.0))
(assert
 (>= l_0_15_78 0.0))
(assert
 (>= l_0_15_81 0.0))
(assert
 (>= l_0_15_85 0.0))
(assert
 (>= l_0_15_90 0.0))
(assert
 (>= l_0_15_91 0.0))
(assert
 (>= l_0_15_93 0.0))
(assert
 (>= l_0_15_96 0.0))
(assert
 (>= l_0_15_100 0.0))
(assert
 (>= l_0_15_105 0.0))
(assert
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x28834 (* ?x28833 l_0_16_31)))
 (let ((?x28830 (* l_0_16_16 l_0_16_16)))
 (let ((?x28831 (* 4.0 ?x28830)))
 (let ((?x28832 (+ (- (* (* 2.0 l_0_16_1) l_0_16_2) (* l_0_16_1 l_0_16_1)) ?x28831)))
 (= (+ (- (- ?x28832 ?x28834) (* (* 2.0 l_0_16_61) l_0_16_62)) 1.0) 0.0)))))))
(assert
 (let ((?x22848 (- (- (* 1.0 (* l_0_16_1 l_0_16_1)) (* l_0_16_61 l_0_16_61)) 1.0)))
 (= ?x22848 0.0)))
(assert
 (let ((?x28858 (* l_0_16_63 l_0_16_63)))
 (let ((?x28856 (* l_0_16_62 l_0_16_62)))
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28854 (* ?x17569 l_0_16_32)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x3306 (* ?x11247 l_0_16_17)))
 (let ((?x17568 (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_2) ?x3306) (* 1.0 (* l_0_16_2 l_0_16_2)))))
 (let ((?x28859 (- (- (- (+ ?x17568 (* 1.0 (* l_0_16_3 l_0_16_3))) ?x28854) ?x28856) ?x28858)))
 (= ?x28859 0.0))))))))))
(assert
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28876 (* ?x17569 l_0_16_34)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x28874 (* ?x28833 l_0_16_32)))
 (let ((?x28871 (* 2.0 l_0_16_3)))
 (let ((?x28872 (* ?x28871 l_0_16_5)))
 (let ((?x22889 (* 2.0 l_0_16_2)))
 (let ((?x22890 (* ?x22889 l_0_16_4)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x16853 (* ?x11247 l_0_16_19)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x22937 (* ?x22936 l_0_16_17)))
 (let ((?x28873 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_1) l_0_16_4) ?x22937) ?x16853) ?x22890) ?x28872)))
 (let ((?x28883 (- (- (- (- ?x28873 ?x28874) ?x28876) (* (* 2.0 l_0_16_62) l_0_16_64)) (* (* 2.0 l_0_16_63) l_0_16_65))))
 (= ?x28883 0.0))))))))))))))))
(assert
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28915 (* ?x17569 l_0_16_37)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x28874 (* ?x28833 l_0_16_32)))
 (let ((?x28871 (* 2.0 l_0_16_3)))
 (let ((?x28912 (* ?x28871 l_0_16_8)))
 (let ((?x22889 (* 2.0 l_0_16_2)))
 (let ((?x28910 (* ?x22889 l_0_16_7)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x28908 (* ?x11247 l_0_16_22)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x22937 (* ?x22936 l_0_16_17)))
 (let ((?x28913 (+ (+ (+ (- (* (* (- 2.0) l_0_16_1) l_0_16_7) ?x22937) ?x28908) ?x28910) ?x28912)))
 (let ((?x28920 (- (- (- (+ ?x28913 ?x28874) ?x28915) (* (* 2.0 l_0_16_62) l_0_16_67)) (* (* 2.0 l_0_16_63) l_0_16_68))))
 (= ?x28920 0.0))))))))))))))))
(assert
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28957 (* ?x17569 l_0_16_41)))
 (let ((?x28854 (* ?x17569 l_0_16_32)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x28954 (* ?x11247 l_0_16_26)))
 (let ((?x3306 (* ?x11247 l_0_16_17)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x28951 (* ?x28950 l_0_16_3)))
 (let ((?x28949 (+ (* (* (- 2.0) l_0_16_1) l_0_16_11) (* (* 2.0 l_0_16_11) l_0_16_2))))
 (let ((?x28961 (- (- (- (+ (+ (+ ?x28949 ?x28951) ?x3306) ?x28954) ?x28854) ?x28957) (* (* 2.0 l_0_16_46) l_0_16_47))))
 (let ((?x28965 (- (- ?x28961 (* (* 2.0 l_0_16_62) l_0_16_71)) (* (* 2.0 l_0_16_63) l_0_16_72))))
 (= ?x28965 0.0)))))))))))))
(assert
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x28984 (* ?x28983 l_0_16_33)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x28981 (* ?x28980 l_0_16_32)))
 (let ((?x22847 (* l_0_16_3 l_0_16_3)))
 (let ((?x17564 (* l_0_16_2 l_0_16_2)))
 (let ((?x28975 (* l_0_16_18 l_0_16_18)))
 (let ((?x28976 (* 4.0 ?x28975)))
 (let ((?x28973 (* l_0_16_17 l_0_16_17)))
 (let ((?x28974 (* 4.0 ?x28973)))
 (let ((?x28977 (+ ?x28974 ?x28976)))
 (= (- (- (- (- ?x28977 ?x17564) ?x22847) ?x28981) ?x28984) 0.0)))))))))))))
(assert
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29011 (* ?x29010 l_0_16_35)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29005 (* ?x29004 l_0_16_34)))
 (let ((?x28871 (* 2.0 l_0_16_3)))
 (let ((?x28872 (* ?x28871 l_0_16_5)))
 (let ((?x22889 (* 2.0 l_0_16_2)))
 (let ((?x22890 (* ?x22889 l_0_16_4)))
 (let ((?x28975 (* l_0_16_18 l_0_16_18)))
 (let ((?x29000 (* 2.0 ?x28975)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x28998 (* ?x28997 l_0_16_20)))
 (let ((?x28973 (* l_0_16_17 l_0_16_17)))
 (let ((?x28995 (* 2.0 ?x28973)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x28994 (* ?x28993 l_0_16_19)))
 (let ((?x29009 (- (- (- (- (+ (+ (+ ?x28994 ?x28995) ?x28998) ?x29000) ?x22890) ?x28872) ?x29005) (* (* 2.0 l_0_16_32) l_0_16_32))))
 (= (- (- ?x29009 ?x29011) (* (* 2.0 l_0_16_33) l_0_16_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x23104 (* l_0_16_33 l_0_16_33)))
 (let ((?x12189 (* 2.0 ?x23104)))
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29045 (* ?x29010 l_0_16_38)))
 (let ((?x23098 (* l_0_16_32 l_0_16_32)))
 (let ((?x23165 (* 2.0 ?x23098)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29042 (* ?x29004 l_0_16_37)))
 (let ((?x28871 (* 2.0 l_0_16_3)))
 (let ((?x28912 (* ?x28871 l_0_16_8)))
 (let ((?x22889 (* 2.0 l_0_16_2)))
 (let ((?x28910 (* ?x22889 l_0_16_7)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x29035 (* ?x28997 l_0_16_23)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x29031 (* ?x28993 l_0_16_22)))
 (let ((?x29039 (- (+ (- ?x29031 (* (* 2.0 l_0_16_17) l_0_16_17)) ?x29035) (* (* 2.0 l_0_16_18) l_0_16_18))))
 (= (+ (- (+ (- (- (- ?x29039 ?x28910) ?x28912) ?x29042) ?x23165) ?x29045) ?x12189) 0.0)))))))))))))))))))
(assert
 (let ((?x29078 (* l_0_16_48 l_0_16_48)))
 (let ((?x29076 (* l_0_16_47 l_0_16_47)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x28984 (* ?x28983 l_0_16_33)))
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29073 (* ?x29010 l_0_16_42)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x28981 (* ?x28980 l_0_16_32)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29070 (* ?x29004 l_0_16_41)))
 (let ((?x28975 (* l_0_16_18 l_0_16_18)))
 (let ((?x28976 (* 4.0 ?x28975)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x29067 (* ?x28997 l_0_16_27)))
 (let ((?x28973 (* l_0_16_17 l_0_16_17)))
 (let ((?x28974 (* 4.0 ?x28973)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x29064 (* ?x28993 l_0_16_26)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x28951 (* ?x28950 l_0_16_3)))
 (let ((?x29068 (+ (+ (+ (- (* (* (- 2.0) l_0_16_11) l_0_16_2) ?x28951) ?x29064) ?x28974) ?x29067)))
 (let ((?x29079 (- (- (- (- (- (- (+ ?x29068 ?x28976) ?x29070) ?x28981) ?x29073) ?x28984) ?x29076) ?x29078)))
 (= ?x29079 0.0))))))))))))))))))))))))
(assert
 (let ((?x29123 (* l_0_16_6 l_0_16_6)))
 (let ((?x29121 (* l_0_16_5 l_0_16_5)))
 (let ((?x29119 (* l_0_16_4 l_0_16_4)))
 (let ((?x29116 (* 4.0 l_0_16_36)))
 (let ((?x29117 (* ?x29116 l_0_16_36)))
 (let ((?x29113 (* 4.0 l_0_16_35)))
 (let ((?x29114 (* ?x29113 l_0_16_35)))
 (let ((?x29110 (* 4.0 l_0_16_34)))
 (let ((?x29111 (* ?x29110 l_0_16_34)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x29108 (* ?x28983 l_0_16_35)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x29106 (* ?x28980 l_0_16_34)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29104 (* ?x29103 l_0_16_32)))
 (let ((?x29100 (* l_0_16_21 l_0_16_21)))
 (let ((?x29101 (* 4.0 ?x29100)))
 (let ((?x29097 (* l_0_16_20 l_0_16_20)))
 (let ((?x29098 (* 4.0 ?x29097)))
 (let ((?x29094 (* l_0_16_19 l_0_16_19)))
 (let ((?x29095 (* 4.0 ?x29094)))
 (let ((?x29091 (* 4.0 l_0_16_18)))
 (let ((?x29092 (* ?x29091 l_0_16_20)))
 (let ((?x29090 (+ (* (* (- 2.0) l_0_16_16) l_0_16_17) (* (* 4.0 l_0_16_17) l_0_16_19))))
 (let ((?x29109 (- (- (+ (+ (+ (+ (+ ?x29090 ?x29092) ?x29095) ?x29098) ?x29101) ?x29104) ?x29106) ?x29108)))
 (= (- (- (- (- (- (- ?x29109 ?x29111) ?x29114) ?x29117) ?x29119) ?x29121) ?x29123) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x29192 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x29189 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x29186 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x29182 (* 8.0 l_0_16_36)))
 (let ((?x29183 (* ?x29182 l_0_16_39)))
 (let ((?x29179 (* 8.0 l_0_16_35)))
 (let ((?x29180 (* ?x29179 l_0_16_38)))
 (let ((?x29176 (* 8.0 l_0_16_34)))
 (let ((?x29177 (* ?x29176 l_0_16_37)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x29174 (* ?x28983 l_0_16_38)))
 (let ((?x29108 (* ?x28983 l_0_16_35)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x29171 (* ?x28980 l_0_16_37)))
 (let ((?x29106 (* ?x28980 l_0_16_34)))
 (let ((?x29167 (* 8.0 l_0_16_21)))
 (let ((?x29168 (* ?x29167 l_0_16_24)))
 (let ((?x29164 (* 8.0 l_0_16_20)))
 (let ((?x29165 (* ?x29164 l_0_16_23)))
 (let ((?x29161 (* 8.0 l_0_16_19)))
 (let ((?x29162 (* ?x29161 l_0_16_22)))
 (let ((?x29091 (* 4.0 l_0_16_18)))
 (let ((?x29159 (* ?x29091 l_0_16_23)))
 (let ((?x29092 (* ?x29091 l_0_16_20)))
 (let ((?x29088 (* 4.0 l_0_16_17)))
 (let ((?x29156 (* ?x29088 l_0_16_22)))
 (let ((?x29163 (+ (+ (- (+ (* (* (- 4.0) l_0_16_17) l_0_16_19) ?x29156) ?x29092) ?x29159) ?x29162)))
 (let ((?x29178 (- (- (+ (- (+ (+ (+ ?x29163 ?x29165) ?x29168) ?x29106) ?x29171) ?x29108) ?x29174) ?x29177)))
 (= (- (- (- (- (- ?x29178 ?x29180) ?x29183) ?x29186) ?x29189) ?x29192) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x29182 (* 8.0 l_0_16_36)))
 (let ((?x29252 (* ?x29182 l_0_16_43)))
 (let ((?x29179 (* 8.0 l_0_16_35)))
 (let ((?x29250 (* ?x29179 l_0_16_42)))
 (let ((?x29176 (* 8.0 l_0_16_34)))
 (let ((?x29248 (* ?x29176 l_0_16_41)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x29246 (* ?x28983 l_0_16_42)))
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29011 (* ?x29010 l_0_16_35)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x29243 (* ?x28980 l_0_16_41)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29005 (* ?x29004 l_0_16_34)))
 (let ((?x29167 (* 8.0 l_0_16_21)))
 (let ((?x29240 (* ?x29167 l_0_16_28)))
 (let ((?x29164 (* 8.0 l_0_16_20)))
 (let ((?x29238 (* ?x29164 l_0_16_27)))
 (let ((?x29161 (* 8.0 l_0_16_19)))
 (let ((?x29236 (* ?x29161 l_0_16_26)))
 (let ((?x29091 (* 4.0 l_0_16_18)))
 (let ((?x29234 (* ?x29091 l_0_16_27)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x28998 (* ?x28997 l_0_16_20)))
 (let ((?x29088 (* 4.0 l_0_16_17)))
 (let ((?x29231 (* ?x29088 l_0_16_26)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x28994 (* ?x28993 l_0_16_19)))
 (let ((?x29227 (* 2.0 l_0_16_13)))
 (let ((?x29228 (* ?x29227 l_0_16_6)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x29225 (* ?x28950 l_0_16_5)))
 (let ((?x29232 (+ (+ (- (- (* (* (- 2.0) l_0_16_11) l_0_16_4) ?x29225) ?x29228) ?x28994) ?x29231)))
 (let ((?x29244 (- (- (+ (+ (+ (+ (+ ?x29232 ?x28998) ?x29234) ?x29236) ?x29238) ?x29240) ?x29005) ?x29243)))
 (let ((?x29256 (- (- (- (- (- (- ?x29244 ?x29011) ?x29246) ?x29248) ?x29250) ?x29252) (* (* 2.0 l_0_16_47) l_0_16_49))))
 (= (- ?x29256 (* (* 2.0 l_0_16_48) l_0_16_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29318 (* l_0_16_9 l_0_16_9)))
 (let ((?x29316 (* l_0_16_8 l_0_16_8)))
 (let ((?x29314 (* l_0_16_7 l_0_16_7)))
 (let ((?x29311 (* 4.0 l_0_16_40)))
 (let ((?x29312 (* ?x29311 l_0_16_40)))
 (let ((?x29308 (* 4.0 l_0_16_39)))
 (let ((?x29309 (* ?x29308 l_0_16_39)))
 (let ((?x29305 (* 4.0 l_0_16_38)))
 (let ((?x29306 (* ?x29305 l_0_16_38)))
 (let ((?x29302 (* 4.0 l_0_16_37)))
 (let ((?x29303 (* ?x29302 l_0_16_37)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x29174 (* ?x28983 l_0_16_38)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x29171 (* ?x28980 l_0_16_37)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29104 (* ?x29103 l_0_16_32)))
 (let ((?x29296 (* l_0_16_25 l_0_16_25)))
 (let ((?x29297 (* 4.0 ?x29296)))
 (let ((?x29293 (* l_0_16_24 l_0_16_24)))
 (let ((?x29294 (* 4.0 ?x29293)))
 (let ((?x29290 (* l_0_16_23 l_0_16_23)))
 (let ((?x29291 (* 4.0 ?x29290)))
 (let ((?x29287 (* l_0_16_22 l_0_16_22)))
 (let ((?x29288 (* 4.0 ?x29287)))
 (let ((?x29091 (* 4.0 l_0_16_18)))
 (let ((?x29159 (* ?x29091 l_0_16_23)))
 (let ((?x29088 (* 4.0 l_0_16_17)))
 (let ((?x29156 (* ?x29088 l_0_16_22)))
 (let ((?x29284 (+ (* (- l_0_16_10) l_0_16_10) (* (* 2.0 l_0_16_16) l_0_16_17))))
 (let ((?x29299 (- (+ (+ (+ (+ (- (- ?x29284 ?x29156) ?x29159) ?x29288) ?x29291) ?x29294) ?x29297) ?x29104)))
 (let ((?x29315 (- (- (- (- (- (+ (+ ?x29299 ?x29171) ?x29174) ?x29303) ?x29306) ?x29309) ?x29312) ?x29314)))
 (= (- (- ?x29315 ?x29316) ?x29318) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29367 (* (* 8.0 l_0_16_40) l_0_16_44)))
 (let ((?x29364 (* (* 8.0 l_0_16_39) l_0_16_43)))
 (let ((?x29361 (* (* 8.0 l_0_16_38) l_0_16_42)))
 (let ((?x29358 (* (* 8.0 l_0_16_37) l_0_16_41)))
 (let ((?x28983 (* 4.0 l_0_16_33)))
 (let ((?x29246 (* ?x28983 l_0_16_42)))
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29045 (* ?x29010 l_0_16_38)))
 (let ((?x28980 (* 4.0 l_0_16_32)))
 (let ((?x29243 (* ?x28980 l_0_16_41)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29042 (* ?x29004 l_0_16_37)))
 (let ((?x29351 (* (* 8.0 l_0_16_25) l_0_16_29)))
 (let ((?x29348 (* (* 8.0 l_0_16_24) l_0_16_28)))
 (let ((?x29345 (* (* 8.0 l_0_16_23) l_0_16_27)))
 (let ((?x29342 (* (* 8.0 l_0_16_22) l_0_16_26)))
 (let ((?x29091 (* 4.0 l_0_16_18)))
 (let ((?x29234 (* ?x29091 l_0_16_27)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x29035 (* ?x28997 l_0_16_23)))
 (let ((?x29088 (* 4.0 l_0_16_17)))
 (let ((?x29231 (* ?x29088 l_0_16_26)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x29031 (* ?x28993 l_0_16_22)))
 (let ((?x29227 (* 2.0 l_0_16_13)))
 (let ((?x29335 (* ?x29227 l_0_16_9)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x29333 (* ?x28950 l_0_16_8)))
 (let ((?x28947 (* 2.0 l_0_16_11)))
 (let ((?x29331 (* ?x28947 l_0_16_7)))
 (let ((?x29337 (+ (- (- (- (* (* (- 2.0) l_0_16_10) l_0_16_14) ?x29331) ?x29333) ?x29335) ?x29031)))
 (let ((?x29352 (+ (+ (+ (+ (- (+ (- ?x29337 ?x29231) ?x29035) ?x29234) ?x29342) ?x29345) ?x29348) ?x29351)))
 (let ((?x29365 (- (- (- (+ (- (+ (- ?x29352 ?x29042) ?x29243) ?x29045) ?x29246) ?x29358) ?x29361) ?x29364)))
 (let ((?x29372 (- (- (- ?x29365 ?x29367) (* (* 2.0 l_0_16_47) l_0_16_52)) (* (* 2.0 l_0_16_48) l_0_16_53))))
 (= ?x29372 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29452 (* (* 4.0 l_0_16_45) l_0_16_45)))
 (let ((?x29449 (* (* 4.0 l_0_16_44) l_0_16_44)))
 (let ((?x29446 (* (* 4.0 l_0_16_43) l_0_16_43)))
 (let ((?x29443 (* (* 4.0 l_0_16_42) l_0_16_42)))
 (let ((?x29440 (* (* 4.0 l_0_16_41) l_0_16_41)))
 (let ((?x29010 (* 8.0 l_0_16_33)))
 (let ((?x29073 (* ?x29010 l_0_16_42)))
 (let ((?x29004 (* 8.0 l_0_16_32)))
 (let ((?x29070 (* ?x29004 l_0_16_41)))
 (let ((?x29434 (* l_0_16_30 l_0_16_30)))
 (let ((?x29435 (* 4.0 ?x29434)))
 (let ((?x29431 (* l_0_16_29 l_0_16_29)))
 (let ((?x29432 (* 4.0 ?x29431)))
 (let ((?x29428 (* l_0_16_28 l_0_16_28)))
 (let ((?x29429 (* 4.0 ?x29428)))
 (let ((?x29425 (* l_0_16_27 l_0_16_27)))
 (let ((?x29426 (* 4.0 ?x29425)))
 (let ((?x29422 (* l_0_16_26 l_0_16_26)))
 (let ((?x29423 (* 4.0 ?x29422)))
 (let ((?x28997 (* 8.0 l_0_16_18)))
 (let ((?x29067 (* ?x28997 l_0_16_27)))
 (let ((?x28993 (* 8.0 l_0_16_17)))
 (let ((?x29064 (* ?x28993 l_0_16_26)))
 (let ((?x29418 (* l_0_16_15 l_0_16_15)))
 (let ((?x29416 (* l_0_16_14 l_0_16_14)))
 (let ((?x29414 (* l_0_16_13 l_0_16_13)))
 (let ((?x29415 (- (- (* (- l_0_16_11) l_0_16_11) (* l_0_16_12 l_0_16_12)) ?x29414)))
 (let ((?x29430 (+ (+ (+ (+ (+ (- (- ?x29415 ?x29416) ?x29418) ?x29064) ?x29067) ?x29423) ?x29426) ?x29429)))
 (let ((?x29447 (- (- (- (- (- (+ (+ ?x29430 ?x29432) ?x29435) ?x29070) ?x29073) ?x29440) ?x29443) ?x29446)))
 (let ((?x29457 (- (- (- (- ?x29447 ?x29449) ?x29452) (* (* 2.0 l_0_16_47) l_0_16_56)) (* (* 2.0 l_0_16_48) l_0_16_57))))
 (= ?x29457 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x28830 (* l_0_16_16 l_0_16_16)))
 (let ((?x29486 (* 2.0 ?x28830)))
 (let ((?x29489 (- (+ (* (* 2.0 l_0_16_1) l_0_16_4) ?x29486) (* (* 2.0 l_0_16_31) l_0_16_31))))
 (= (- ?x29489 (* (* 2.0 l_0_16_61) l_0_16_64)) 0.0)))))
(assert
 (let ((?x28847 (* l_0_16_31 l_0_16_31)))
 (let ((?x4199 (* 2.0 ?x28847)))
 (let ((?x29504 (- (* (* 2.0 l_0_16_1) l_0_16_7) (* (* 2.0 l_0_16_16) l_0_16_16))))
 (= (- (+ ?x29504 ?x4199) (* (* 2.0 l_0_16_61) l_0_16_67)) 0.0)))))
(assert
 (let ((?x29525 (* l_0_16_46 l_0_16_46)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x28834 (* ?x28833 l_0_16_31)))
 (let ((?x28830 (* l_0_16_16 l_0_16_16)))
 (let ((?x28831 (* 4.0 ?x28830)))
 (let ((?x29528 (- (- (- (+ (* (* 2.0 l_0_16_1) l_0_16_11) ?x28831) ?x28834) ?x29525) (* (* 2.0 l_0_16_61) l_0_16_71))))
 (= ?x29528 0.0))))))))
(assert
 (let ((?x29550 (* l_0_16_66 l_0_16_66)))
 (let ((?x29548 (* l_0_16_65 l_0_16_65)))
 (let ((?x29546 (* l_0_16_64 l_0_16_64)))
 (let ((?x28847 (* l_0_16_31 l_0_16_31)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x29537 (* ?x28833 l_0_16_34)))
 (let ((?x29538 (- (- (* (* 4.0 l_0_16_16) l_0_16_19) (* l_0_16_16 l_0_16_16)) ?x29537)))
 (let ((?x29543 (+ (+ (+ ?x29538 ?x28847) (* 1.0 (* l_0_16_4 l_0_16_4))) (* 1.0 (* l_0_16_5 l_0_16_5)))))
 (let ((?x29551 (- (- (- (+ ?x29543 (* 1.0 (* l_0_16_6 l_0_16_6))) ?x29546) ?x29548) ?x29550)))
 (= ?x29551 0.0)))))))))))
(assert
 (let ((?x29192 (* (* 2.0 l_0_16_6) l_0_16_9)))
 (let ((?x29189 (* (* 2.0 l_0_16_5) l_0_16_8)))
 (let ((?x29186 (* (* 2.0 l_0_16_4) l_0_16_7)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x29566 (* ?x28833 l_0_16_37)))
 (let ((?x29537 (* ?x28833 l_0_16_34)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x11610 (* ?x22936 l_0_16_22)))
 (let ((?x29568 (+ (- (+ (+ (* (* (- 4.0) l_0_16_16) l_0_16_19) ?x11610) ?x29537) ?x29566) ?x29186)))
 (let ((?x29576 (- (- (+ (+ ?x29568 ?x29189) ?x29192) (* (* 2.0 l_0_16_64) l_0_16_67)) (* (* 2.0 l_0_16_65) l_0_16_68))))
 (= (- ?x29576 (* (* 2.0 l_0_16_66) l_0_16_69)) 0.0))))))))))))
(assert
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x29596 (* ?x28833 l_0_16_41)))
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28876 (* ?x17569 l_0_16_34)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x29593 (* ?x22936 l_0_16_26)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x16853 (* ?x11247 l_0_16_19)))
 (let ((?x29227 (* 2.0 l_0_16_13)))
 (let ((?x29228 (* ?x29227 l_0_16_6)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x29225 (* ?x28950 l_0_16_5)))
 (let ((?x29594 (+ (+ (+ (+ (* (* 2.0 l_0_16_11) l_0_16_4) ?x29225) ?x29228) ?x16853) ?x29593)))
 (let ((?x29601 (- (- (- (- ?x29594 ?x28876) ?x29596) (* (* 2.0 l_0_16_46) l_0_16_49)) (* (* 2.0 l_0_16_64) l_0_16_71))))
 (let ((?x29605 (- (- ?x29601 (* (* 2.0 l_0_16_65) l_0_16_72)) (* (* 2.0 l_0_16_66) l_0_16_73))))
 (= ?x29605 0.0)))))))))))))))))
(assert
 (let ((?x29630 (* l_0_16_70 l_0_16_70)))
 (let ((?x29626 (* l_0_16_69 l_0_16_69)))
 (let ((?x29624 (* l_0_16_68 l_0_16_68)))
 (let ((?x29622 (* l_0_16_67 l_0_16_67)))
 (let ((?x28847 (* l_0_16_31 l_0_16_31)))
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x29566 (* ?x28833 l_0_16_37)))
 (let ((?x28830 (* l_0_16_16 l_0_16_16)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x11610 (* ?x22936 l_0_16_22)))
 (let ((?x29621 (- (+ (+ (- (* 1.0 (* l_0_16_10 l_0_16_10)) ?x11610) ?x28830) ?x29566) ?x28847)))
 (let ((?x29629 (+ (- (- (- ?x29621 ?x29622) ?x29624) ?x29626) (* 1.0 (* l_0_16_7 l_0_16_7)))))
 (let ((?x29635 (+ (+ (- ?x29629 ?x29630) (* 1.0 (* l_0_16_8 l_0_16_8))) (* 1.0 (* l_0_16_9 l_0_16_9)))))
 (= ?x29635 0.0)))))))))))))))
(assert
 (let ((?x28833 (* 4.0 l_0_16_31)))
 (let ((?x29596 (* ?x28833 l_0_16_41)))
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28915 (* ?x17569 l_0_16_37)))
 (let ((?x22936 (* 4.0 l_0_16_16)))
 (let ((?x29593 (* ?x22936 l_0_16_26)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x28908 (* ?x11247 l_0_16_22)))
 (let ((?x29227 (* 2.0 l_0_16_13)))
 (let ((?x29335 (* ?x29227 l_0_16_9)))
 (let ((?x28950 (* 2.0 l_0_16_12)))
 (let ((?x29333 (* ?x28950 l_0_16_8)))
 (let ((?x28947 (* 2.0 l_0_16_11)))
 (let ((?x29331 (* ?x28947 l_0_16_7)))
 (let ((?x29652 (+ (+ (+ (+ (* (* 2.0 l_0_16_10) l_0_16_14) ?x29331) ?x29333) ?x29335) ?x28908)))
 (let ((?x29657 (- (+ (- (- ?x29652 ?x29593) ?x28915) ?x29596) (* (* 2.0 l_0_16_46) l_0_16_52))))
 (let ((?x29663 (- (- ?x29657 (* (* 2.0 l_0_16_67) l_0_16_71)) (* (* 2.0 l_0_16_68) l_0_16_72))))
 (let ((?x29669 (- (- ?x29663 (* (* 2.0 l_0_16_69) l_0_16_73)) (* (* 2.0 l_0_16_70) l_0_16_74))))
 (= ?x29669 0.0))))))))))))))))))))
(assert
 (let ((?x29700 (* l_0_16_75 l_0_16_75)))
 (let ((?x29698 (* l_0_16_74 l_0_16_74)))
 (let ((?x29696 (* l_0_16_73 l_0_16_73)))
 (let ((?x29694 (* l_0_16_72 l_0_16_72)))
 (let ((?x29692 (* l_0_16_71 l_0_16_71)))
 (let ((?x17569 (* 8.0 l_0_16_31)))
 (let ((?x28957 (* ?x17569 l_0_16_41)))
 (let ((?x11247 (* 8.0 l_0_16_16)))
 (let ((?x28954 (* ?x11247 l_0_16_26)))
 (let ((?x18141 (+ (* 1.0 (* l_0_16_11 l_0_16_11)) (* 1.0 (* l_0_16_12 l_0_16_12)))))
 (let ((?x29685 (+ (+ ?x18141 (* 1.0 (* l_0_16_13 l_0_16_13))) (* 1.0 (* l_0_16_14 l_0_16_14)))))
 (let ((?x29691 (- (- (+ (+ ?x29685 (* 1.0 (* l_0_16_15 l_0_16_15))) ?x28954) ?x28957) (* (* 2.0 l_0_16_46) l_0_16_56))))
 (= (- (- (- (- (- ?x29691 ?x29692) ?x29694) ?x29696) ?x29698) ?x29700) 0.0))))))))))))))
(assert
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29719 (* ?x29103 l_0_16_34)))
 (let ((?x29100 (* l_0_16_21 l_0_16_21)))
 (let ((?x29717 (* 2.0 ?x29100)))
 (let ((?x29097 (* l_0_16_20 l_0_16_20)))
 (let ((?x29715 (* 2.0 ?x29097)))
 (let ((?x29094 (* l_0_16_19 l_0_16_19)))
 (let ((?x29713 (* 2.0 ?x29094)))
 (let ((?x29720 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_16) l_0_16_19) ?x29713) ?x29715) ?x29717) ?x29719)))
 (let ((?x29726 (- (- ?x29720 (* (* 2.0 l_0_16_34) l_0_16_34)) (* (* 2.0 l_0_16_35) l_0_16_35))))
 (= (- ?x29726 (* (* 2.0 l_0_16_36) l_0_16_36)) 0.0))))))))))))
(assert
 (let ((?x12365 (* l_0_16_36 l_0_16_36)))
 (let ((?x29739 (* 2.0 ?x12365)))
 (let ((?x29116 (* 4.0 l_0_16_36)))
 (let ((?x29772 (* ?x29116 l_0_16_39)))
 (let ((?x12374 (* l_0_16_35 l_0_16_35)))
 (let ((?x29734 (* 2.0 ?x12374)))
 (let ((?x29113 (* 4.0 l_0_16_35)))
 (let ((?x29769 (* ?x29113 l_0_16_38)))
 (let ((?x12369 (* l_0_16_34 l_0_16_34)))
 (let ((?x23783 (* 2.0 ?x12369)))
 (let ((?x29110 (* 4.0 l_0_16_34)))
 (let ((?x29766 (* ?x29110 l_0_16_37)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29764 (* ?x29103 l_0_16_37)))
 (let ((?x29758 (* 4.0 l_0_16_21)))
 (let ((?x29759 (* ?x29758 l_0_16_24)))
 (let ((?x29752 (* 4.0 l_0_16_20)))
 (let ((?x29753 (* ?x29752 l_0_16_23)))
 (let ((?x29746 (* 4.0 l_0_16_19)))
 (let ((?x29747 (* ?x29746 l_0_16_22)))
 (let ((?x29751 (- (+ (* (* (- 2.0) l_0_16_16) l_0_16_22) ?x29747) (* (* 2.0 l_0_16_19) l_0_16_19))))
 (let ((?x29763 (- (+ (- (+ ?x29751 ?x29753) (* (* 2.0 l_0_16_20) l_0_16_20)) ?x29759) (* (* 2.0 l_0_16_21) l_0_16_21))))
 (let ((?x29774 (+ (- (+ (- (+ (- (+ ?x29763 ?x29764) ?x29766) ?x23783) ?x29769) ?x29734) ?x29772) ?x29739)))
 (= ?x29774 0.0)))))))))))))))))))))))))
(assert
 (let ((?x29826 (* l_0_16_51 l_0_16_51)))
 (let ((?x29824 (* l_0_16_50 l_0_16_50)))
 (let ((?x29822 (* l_0_16_49 l_0_16_49)))
 (let ((?x29116 (* 4.0 l_0_16_36)))
 (let ((?x29117 (* ?x29116 l_0_16_36)))
 (let ((?x29819 (* ?x29116 l_0_16_43)))
 (let ((?x29113 (* 4.0 l_0_16_35)))
 (let ((?x29114 (* ?x29113 l_0_16_35)))
 (let ((?x29816 (* ?x29113 l_0_16_42)))
 (let ((?x29110 (* 4.0 l_0_16_34)))
 (let ((?x29111 (* ?x29110 l_0_16_34)))
 (let ((?x29813 (* ?x29110 l_0_16_41)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29811 (* ?x29103 l_0_16_41)))
 (let ((?x29100 (* l_0_16_21 l_0_16_21)))
 (let ((?x29101 (* 4.0 ?x29100)))
 (let ((?x29758 (* 4.0 l_0_16_21)))
 (let ((?x29808 (* ?x29758 l_0_16_28)))
 (let ((?x29097 (* l_0_16_20 l_0_16_20)))
 (let ((?x29098 (* 4.0 ?x29097)))
 (let ((?x29752 (* 4.0 l_0_16_20)))
 (let ((?x29805 (* ?x29752 l_0_16_27)))
 (let ((?x29094 (* l_0_16_19 l_0_16_19)))
 (let ((?x29095 (* 4.0 ?x29094)))
 (let ((?x29746 (* 4.0 l_0_16_19)))
 (let ((?x29802 (* ?x29746 l_0_16_26)))
 (let ((?x29807 (+ (+ (+ (+ (* (* (- 2.0) l_0_16_16) l_0_16_26) ?x29802) ?x29095) ?x29805) ?x29098)))
 (let ((?x29818 (- (- (- (- (+ (+ (+ ?x29807 ?x29808) ?x29101) ?x29811) ?x29813) ?x29111) ?x29816) ?x29114)))
 (= (- (- (- (- (- ?x29818 ?x29819) ?x29117) ?x29822) ?x29824) ?x29826) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x23104 (* l_0_16_33 l_0_16_33)))
 (let ((?x23098 (* l_0_16_32 l_0_16_32)))
 (let ((?x29846 (+ (- (* (- l_0_16_17) l_0_16_17) (* l_0_16_18 l_0_16_18)) ?x23098)))
 (= (+ ?x29846 ?x23104) 0.0)))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29858 (* ?x29013 l_0_16_35)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29856 (* ?x29007 l_0_16_34)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29854 (* ?x29037 l_0_16_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_19) ?x29854) ?x29856) ?x29858) 0.0))))))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29873 (* ?x29013 l_0_16_38)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29871 (* ?x29007 l_0_16_37)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29869 (* ?x29037 l_0_16_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_22) ?x29869) ?x29871) ?x29873) 0.0))))))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29892 (* ?x29013 l_0_16_42)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29890 (* ?x29007 l_0_16_41)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29883 (* ?x29037 l_0_16_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_16_17) l_0_16_26) ?x29883) ?x29890) ?x29892) 0.0))))))))
(assert
 (let ((?x12365 (* l_0_16_36 l_0_16_36)))
 (let ((?x12374 (* l_0_16_35 l_0_16_35)))
 (let ((?x12369 (* l_0_16_34 l_0_16_34)))
 (let ((?x29100 (* l_0_16_21 l_0_16_21)))
 (let ((?x29908 (- (- (* (- l_0_16_19) l_0_16_19) (* l_0_16_20 l_0_16_20)) ?x29100)))
 (= (+ (+ (+ ?x29908 ?x12369) ?x12374) ?x12365) 0.0)))))))
(assert
 (let ((?x29727 (* 2.0 l_0_16_36)))
 (let ((?x29932 (* ?x29727 l_0_16_39)))
 (let ((?x29724 (* 2.0 l_0_16_35)))
 (let ((?x29930 (* ?x29724 l_0_16_38)))
 (let ((?x29721 (* 2.0 l_0_16_34)))
 (let ((?x29928 (* ?x29721 l_0_16_37)))
 (let ((?x29761 (* 2.0 l_0_16_21)))
 (let ((?x29926 (* ?x29761 l_0_16_24)))
 (let ((?x29755 (* 2.0 l_0_16_20)))
 (let ((?x29924 (* ?x29755 l_0_16_23)))
 (let ((?x29931 (+ (+ (- (- (* (* (- 2.0) l_0_16_19) l_0_16_22) ?x29924) ?x29926) ?x29928) ?x29930)))
 (= (+ ?x29931 ?x29932) 0.0)))))))))))))
(assert
 (let ((?x29727 (* 2.0 l_0_16_36)))
 (let ((?x29942 (* ?x29727 l_0_16_43)))
 (let ((?x29724 (* 2.0 l_0_16_35)))
 (let ((?x29940 (* ?x29724 l_0_16_42)))
 (let ((?x29721 (* 2.0 l_0_16_34)))
 (let ((?x23926 (* ?x29721 l_0_16_41)))
 (let ((?x29761 (* 2.0 l_0_16_21)))
 (let ((?x23976 (* ?x29761 l_0_16_28)))
 (let ((?x29755 (* 2.0 l_0_16_20)))
 (let ((?x23974 (* ?x29755 l_0_16_27)))
 (let ((?x29941 (+ (+ (- (- (* (* (- 2.0) l_0_16_19) l_0_16_26) ?x23974) ?x23976) ?x23926) ?x29940)))
 (= (+ ?x29941 ?x29942) 0.0)))))))))))))
(assert
 (let ((?x23351 (* l_0_16_40 l_0_16_40)))
 (let ((?x23352 (* l_0_16_39 l_0_16_39)))
 (let ((?x23345 (* l_0_16_38 l_0_16_38)))
 (let ((?x2564 (* l_0_16_37 l_0_16_37)))
 (let ((?x12365 (* l_0_16_36 l_0_16_36)))
 (let ((?x12374 (* l_0_16_35 l_0_16_35)))
 (let ((?x12369 (* l_0_16_34 l_0_16_34)))
 (let ((?x29296 (* l_0_16_25 l_0_16_25)))
 (let ((?x29293 (* l_0_16_24 l_0_16_24)))
 (let ((?x29290 (* l_0_16_23 l_0_16_23)))
 (let ((?x29287 (* l_0_16_22 l_0_16_22)))
 (let ((?x29100 (* l_0_16_21 l_0_16_21)))
 (let ((?x18142 (- (+ (+ (* l_0_16_19 l_0_16_19) (* l_0_16_20 l_0_16_20)) ?x29100) ?x29287)))
 (let ((?x29968 (+ (- (- (- (- (- (- ?x18142 ?x29290) ?x29293) ?x29296) ?x12369) ?x12374) ?x12365) ?x2564)))
 (= (+ (+ (+ ?x29968 ?x23345) ?x23352) ?x23351) 0.0))))))))))))))))
(assert
 (let ((?x30001 (* 2.0 l_0_16_40)))
 (let ((?x30002 (* ?x30001 l_0_16_44)))
 (let ((?x29998 (* 2.0 l_0_16_39)))
 (let ((?x29999 (* ?x29998 l_0_16_43)))
 (let ((?x29995 (* 2.0 l_0_16_38)))
 (let ((?x29996 (* ?x29995 l_0_16_42)))
 (let ((?x29992 (* 2.0 l_0_16_37)))
 (let ((?x29993 (* ?x29992 l_0_16_41)))
 (let ((?x29989 (* 2.0 l_0_16_25)))
 (let ((?x29990 (* ?x29989 l_0_16_29)))
 (let ((?x29986 (* 2.0 l_0_16_24)))
 (let ((?x29987 (* ?x29986 l_0_16_28)))
 (let ((?x29983 (* 2.0 l_0_16_23)))
 (let ((?x29984 (* ?x29983 l_0_16_27)))
 (let ((?x29994 (+ (- (- (- (* (* (- 2.0) l_0_16_22) l_0_16_26) ?x29984) ?x29987) ?x29990) ?x29993)))
 (= (+ (+ (+ ?x29994 ?x29996) ?x29999) ?x30002) 0.0)))))))))))))))))
(assert
 (let ((?x18003 (* l_0_16_45 l_0_16_45)))
 (let ((?x12574 (* l_0_16_44 l_0_16_44)))
 (let ((?x17972 (* l_0_16_43 l_0_16_43)))
 (let ((?x17971 (* l_0_16_42 l_0_16_42)))
 (let ((?x17968 (* l_0_16_41 l_0_16_41)))
 (let ((?x29434 (* l_0_16_30 l_0_16_30)))
 (let ((?x29431 (* l_0_16_29 l_0_16_29)))
 (let ((?x29428 (* l_0_16_28 l_0_16_28)))
 (let ((?x24043 (- (- (* (- l_0_16_26) l_0_16_26) (* l_0_16_27 l_0_16_27)) ?x29428)))
 (let ((?x30033 (+ (+ (+ (+ (+ (- (- ?x24043 ?x29431) ?x29434) ?x17968) ?x17971) ?x17972) ?x12574) ?x18003)))
 (= ?x30033 0.0))))))))))))
(assert
 (let ((?x29116 (* 4.0 l_0_16_36)))
 (let ((?x29772 (* ?x29116 l_0_16_39)))
 (let ((?x29113 (* 4.0 l_0_16_35)))
 (let ((?x29769 (* ?x29113 l_0_16_38)))
 (let ((?x29110 (* 4.0 l_0_16_34)))
 (let ((?x29766 (* ?x29110 l_0_16_37)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29719 (* ?x29103 l_0_16_34)))
 (let ((?x29296 (* l_0_16_25 l_0_16_25)))
 (let ((?x30047 (* 2.0 ?x29296)))
 (let ((?x29293 (* l_0_16_24 l_0_16_24)))
 (let ((?x30045 (* 2.0 ?x29293)))
 (let ((?x29290 (* l_0_16_23 l_0_16_23)))
 (let ((?x30043 (* 2.0 ?x29290)))
 (let ((?x29287 (* l_0_16_22 l_0_16_22)))
 (let ((?x30041 (* 2.0 ?x29287)))
 (let ((?x29758 (* 4.0 l_0_16_21)))
 (let ((?x29759 (* ?x29758 l_0_16_24)))
 (let ((?x29752 (* 4.0 l_0_16_20)))
 (let ((?x29753 (* ?x29752 l_0_16_23)))
 (let ((?x29746 (* 4.0 l_0_16_19)))
 (let ((?x29747 (* ?x29746 l_0_16_22)))
 (let ((?x30042 (+ (- (- (- (* (* 2.0 l_0_16_16) l_0_16_19) ?x29747) ?x29753) ?x29759) ?x30041)))
 (let ((?x30052 (+ (+ (+ (- (+ (+ (+ ?x30042 ?x30043) ?x30045) ?x30047) ?x29719) ?x29766) ?x29769) ?x29772)))
 (let ((?x30056 (- (- ?x30052 (* (* 2.0 l_0_16_37) l_0_16_37)) (* (* 2.0 l_0_16_38) l_0_16_38))))
 (let ((?x30060 (- (- ?x30056 (* (* 2.0 l_0_16_39) l_0_16_39)) (* (* 2.0 l_0_16_40) l_0_16_40))))
 (= ?x30060 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x23351 (* l_0_16_40 l_0_16_40)))
 (let ((?x30082 (* 2.0 ?x23351)))
 (let ((?x23352 (* l_0_16_39 l_0_16_39)))
 (let ((?x5165 (* 2.0 ?x23352)))
 (let ((?x23345 (* l_0_16_38 l_0_16_38)))
 (let ((?x5163 (* 2.0 ?x23345)))
 (let ((?x2564 (* l_0_16_37 l_0_16_37)))
 (let ((?x13121 (* 2.0 ?x2564)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29764 (* ?x29103 l_0_16_37)))
 (let ((?x30093 (- (* (* 2.0 l_0_16_16) l_0_16_22) (* (* 2.0 l_0_16_22) l_0_16_22))))
 (let ((?x30097 (- (- ?x30093 (* (* 2.0 l_0_16_23) l_0_16_23)) (* (* 2.0 l_0_16_24) l_0_16_24))))
 (let ((?x30102 (+ (+ (- (- ?x30097 (* (* 2.0 l_0_16_25) l_0_16_25)) ?x29764) ?x13121) ?x5163)))
 (= (+ (+ ?x30102 ?x5165) ?x30082) 0.0)))))))))))))))
(assert
 (let ((?x30137 (* l_0_16_55 l_0_16_55)))
 (let ((?x30135 (* l_0_16_54 l_0_16_54)))
 (let ((?x30133 (* l_0_16_53 l_0_16_53)))
 (let ((?x30131 (* l_0_16_52 l_0_16_52)))
 (let ((?x29311 (* 4.0 l_0_16_40)))
 (let ((?x29312 (* ?x29311 l_0_16_40)))
 (let ((?x30128 (* ?x29311 l_0_16_44)))
 (let ((?x29308 (* 4.0 l_0_16_39)))
 (let ((?x29309 (* ?x29308 l_0_16_39)))
 (let ((?x30125 (* ?x29308 l_0_16_43)))
 (let ((?x29305 (* 4.0 l_0_16_38)))
 (let ((?x29306 (* ?x29305 l_0_16_38)))
 (let ((?x30122 (* ?x29305 l_0_16_42)))
 (let ((?x29302 (* 4.0 l_0_16_37)))
 (let ((?x29303 (* ?x29302 l_0_16_37)))
 (let ((?x30119 (* ?x29302 l_0_16_41)))
 (let ((?x29103 (* 2.0 l_0_16_31)))
 (let ((?x29811 (* ?x29103 l_0_16_41)))
 (let ((?x29296 (* l_0_16_25 l_0_16_25)))
 (let ((?x29297 (* 4.0 ?x29296)))
 (let ((?x30115 (* (* 4.0 l_0_16_25) l_0_16_29)))
 (let ((?x29293 (* l_0_16_24 l_0_16_24)))
 (let ((?x29294 (* 4.0 ?x29293)))
 (let ((?x30111 (* (* 4.0 l_0_16_24) l_0_16_28)))
 (let ((?x29290 (* l_0_16_23 l_0_16_23)))
 (let ((?x29291 (* 4.0 ?x29290)))
 (let ((?x18605 (* (* 4.0 l_0_16_23) l_0_16_27)))
 (let ((?x29287 (* l_0_16_22 l_0_16_22)))
 (let ((?x29288 (* 4.0 ?x29287)))
 (let ((?x18641 (* (* 4.0 l_0_16_22) l_0_16_26)))
 (let ((?x24098 (+ (- (+ (- (* (* 2.0 l_0_16_16) l_0_16_26) ?x18641) ?x29288) ?x18605) ?x29291)))
 (let ((?x30121 (- (+ (- (+ (- (+ (- ?x24098 ?x30111) ?x29294) ?x30115) ?x29297) ?x29811) ?x30119) ?x29303)))
 (let ((?x30132 (- (- (+ (- (+ (- (+ ?x30121 ?x30122) ?x29306) ?x30125) ?x29309) ?x30128) ?x29312) ?x30131)))
 (= (- (- (- ?x30132 ?x30133) ?x30135) ?x30137) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23104 (* l_0_16_33 l_0_16_33)))
 (let ((?x23098 (* l_0_16_32 l_0_16_32)))
 (let ((?x28975 (* l_0_16_18 l_0_16_18)))
 (let ((?x28973 (* l_0_16_17 l_0_16_17)))
 (let ((?x13342 (+ ?x28973 ?x28975)))
 (= (- (- ?x13342 ?x23098) ?x23104) 0.0)))))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29858 (* ?x29013 l_0_16_35)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29856 (* ?x29007 l_0_16_34)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29854 (* ?x29037 l_0_16_20)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_19) ?x29854) ?x29856) ?x29858) 0.0))))))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29873 (* ?x29013 l_0_16_38)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29871 (* ?x29007 l_0_16_37)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29869 (* ?x29037 l_0_16_23)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_22) ?x29869) ?x29871) ?x29873) 0.0))))))))
(assert
 (let ((?x29013 (* 2.0 l_0_16_33)))
 (let ((?x29892 (* ?x29013 l_0_16_42)))
 (let ((?x29007 (* 2.0 l_0_16_32)))
 (let ((?x29890 (* ?x29007 l_0_16_41)))
 (let ((?x29037 (* 2.0 l_0_16_18)))
 (let ((?x29883 (* ?x29037 l_0_16_27)))
 (= (- (- (+ (* (* 2.0 l_0_16_17) l_0_16_26) ?x29883) ?x29890) ?x29892) 0.0))))))))
(assert
 (let ((?x29727 (* 2.0 l_0_16_36)))
 (let ((?x29932 (* ?x29727 l_0_16_39)))
 (let ((?x29724 (* 2.0 l_0_16_35)))
 (let ((?x29930 (* ?x29724 l_0_16_38)))
 (let ((?x29721 (* 2.0 l_0_16_34)))
 (let ((?x29928 (* ?x29721 l_0_16_37)))
 (let ((?x29761 (* 2.0 l_0_16_21)))
 (let ((?x29926 (* ?x29761 l_0_16_24)))
 (let ((?x29755 (* 2.0 l_0_16_20)))
 (let ((?x29924 (* ?x29755 l_0_16_23)))
 (let ((?x30186 (- (- (+ (+ (* (* 2.0 l_0_16_19) l_0_16_22) ?x29924) ?x29926) ?x29928) ?x29930)))
 (= (- ?x30186 ?x29932) 0.0)))))))))))))
(assert
 (let ((?x29727 (* 2.0 l_0_16_36)))
 (let ((?x29942 (* ?x29727 l_0_16_43)))
 (let ((?x29724 (* 2.0 l_0_16_35)))
 (let ((?x29940 (* ?x29724 l_0_16_42)))
 (let ((?x29721 (* 2.0 l_0_16_34)))
 (let ((?x23926 (* ?x29721 l_0_16_41)))
 (let ((?x29761 (* 2.0 l_0_16_21)))
 (let ((?x23976 (* ?x29761 l_0_16_28)))
 (let ((?x29755 (* 2.0 l_0_16_20)))
 (let ((?x23974 (* ?x29755 l_0_16_27)))
 (let ((?x30195 (- (- (+ (+ (* (* 2.0 l_0_16_19) l_0_16_26) ?x23974) ?x23976) ?x23926) ?x29940)))
 (= (- ?x30195 ?x29942) 0.0)))))))))))))
(assert
 (let ((?x23351 (* l_0_16_40 l_0_16_40)))
 (let ((?x23352 (* l_0_16_39 l_0_16_39)))
 (let ((?x23345 (* l_0_16_38 l_0_16_38)))
 (let ((?x2564 (* l_0_16_37 l_0_16_37)))
 (let ((?x29296 (* l_0_16_25 l_0_16_25)))
 (let ((?x29293 (* l_0_16_24 l_0_16_24)))
 (let ((?x23588 (+ (+ (+ (* l_0_16_22 l_0_16_22) (* l_0_16_23 l_0_16_23)) ?x29293) ?x29296)))
 (= (- (- (- (- ?x23588 ?x2564) ?x23345) ?x23352) ?x23351) 0.0)))))))))
(assert
 (let ((?x30001 (* 2.0 l_0_16_40)))
 (let ((?x30002 (* ?x30001 l_0_16_44)))
 (let ((?x29998 (* 2.0 l_0_16_39)))
 (let ((?x29999 (* ?x29998 l_0_16_43)))
 (let ((?x29995 (* 2.0 l_0_16_38)))
 (let ((?x29996 (* ?x29995 l_0_16_42)))
 (let ((?x29992 (* 2.0 l_0_16_37)))
 (let ((?x29993 (* ?x29992 l_0_16_41)))
 (let ((?x29989 (* 2.0 l_0_16_25)))
 (let ((?x29990 (* ?x29989 l_0_16_29)))
 (let ((?x29986 (* 2.0 l_0_16_24)))
 (let ((?x29987 (* ?x29986 l_0_16_28)))
 (let ((?x29983 (* 2.0 l_0_16_23)))
 (let ((?x29984 (* ?x29983 l_0_16_27)))
 (let ((?x30217 (- (+ (+ (+ (* (* 2.0 l_0_16_22) l_0_16_26) ?x29984) ?x29987) ?x29990) ?x29993)))
 (= (- (- (- ?x30217 ?x29996) ?x29999) ?x30002) 0.0)))))))))))))))))
(assert
 (let ((?x18003 (* l_0_16_45 l_0_16_45)))
 (let ((?x12574 (* l_0_16_44 l_0_16_44)))
 (let ((?x17972 (* l_0_16_43 l_0_16_43)))
 (let ((?x17971 (* l_0_16_42 l_0_16_42)))
 (let ((?x17968 (* l_0_16_41 l_0_16_41)))
 (let ((?x29434 (* l_0_16_30 l_0_16_30)))
 (let ((?x29431 (* l_0_16_29 l_0_16_29)))
 (let ((?x29428 (* l_0_16_28 l_0_16_28)))
 (let ((?x30236 (+ (+ (+ (* l_0_16_26 l_0_16_26) (* l_0_16_27 l_0_16_27)) ?x29428) ?x29431)))
 (= (- (- (- (- (- (+ ?x30236 ?x29434) ?x17968) ?x17971) ?x17972) ?x12574) ?x18003) 0.0)))))))))))
(assert
 (let ((?x29311 (* 4.0 l_0_16_40)))
 (let ((?x30128 (* ?x29311 l_0_16_44)))
 (let ((?x29308 (* 4.0 l_0_16_39)))
 (let ((?x30125 (* ?x29308 l_0_16_43)))
 (let ((?x29305 (* 4.0 l_0_16_38)))
 (let ((?x30122 (* ?x29305 l_0_16_42)))
 (let ((?x29302 (* 4.0 l_0_16_37)))
 (let ((?x30119 (* ?x29302 l_0_16_41)))
 (let ((?x29116 (* 4.0 l_0_16_36)))
 (let ((?x29819 (* ?x29116 l_0_16_43)))
 (let ((?x29182 (* 8.0 l_0_16_36)))
 (let ((?x29183 (* ?x29182 l_0_16_39)))
 (let ((?x29113 (* 4.0 l_0_16_35)))
 (let ((?x29816 (* ?x29113 l_0_16_42)))
 (let ((?x29179 (* 8.0 l_0_16_35)))
 (let ((?x29180 (* ?x29179 l_0_16_38)))
 (let ((?x29110 (* 4.0 l_0_16_34)))
 (let ((?x29813 (* ?x29110 l_0_16_41)))
 (let ((?x29176 (* 8.0 l_0_16_34)))
 (let ((?x29177 (* ?x29176 l_0_16_37)))
 (let ((?x30115 (* (* 4.0 l_0_16_25) l_0_16_29)))
 (let ((?x30111 (* (* 4.0 l_0_16_24) l_0_16_28)))
 (let ((?x18605 (* (* 4.0 l_0_16_23) l_0_16_27)))
 (let ((?x18641 (* (* 4.0 l_0_16_22) l_0_16_26)))
 (let ((?x29758 (* 4.0 l_0_16_21)))
 (let ((?x29808 (* ?x29758 l_0_16_28)))
 (let ((?x29167 (* 8.0 l_0_16_21)))
 (let ((?x29168 (* ?x29167 l_0_16_24)))
 (let ((?x29752 (* 4.0 l_0_16_20)))
 (let ((?x29805 (* ?x29752 l_0_16_27)))
 (let ((?x29164 (* 8.0 l_0_16_20)))
 (let ((?x29165 (* ?x29164 l_0_16_23)))
 (let ((?x29746 (* 4.0 l_0_16_19)))
 (let ((?x29802 (* ?x29746 l_0_16_26)))
 (let ((?x29161 (* 8.0 l_0_16_19)))
 (let ((?x29162 (* ?x29161 l_0_16_22)))
 (let ((?x30259 (+ (+ (- (+ (- (+ (- ?x29162 ?x29802) ?x29165) ?x29805) ?x29168) ?x29808) ?x18641) ?x18605)))
 (let ((?x30266 (- (+ (- (+ (- (+ (+ ?x30259 ?x30111) ?x30115) ?x29177) ?x29813) ?x29180) ?x29816) ?x29183)))
 (let ((?x30274 (- (- (- (- (- (+ ?x30266 ?x29819) ?x30119) ?x30122) ?x30125) ?x30128) (* (* 2.0 l_0_16_49) l_0_16_52))))
 (let ((?x30280 (- (- ?x30274 (* (* 2.0 l_0_16_50) l_0_16_53)) (* (* 2.0 l_0_16_51) l_0_16_54))))
 (= ?x30280 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x29182 (* 8.0 l_0_16_36)))
 (let ((?x29252 (* ?x29182 l_0_16_43)))
 (let ((?x29179 (* 8.0 l_0_16_35)))
 (let ((?x29250 (* ?x29179 l_0_16_42)))
 (let ((?x29176 (* 8.0 l_0_16_34)))
 (let ((?x29248 (* ?x29176 l_0_16_41)))
 (let ((?x29434 (* l_0_16_30 l_0_16_30)))
 (let ((?x30308 (* 2.0 ?x29434)))
 (let ((?x29431 (* l_0_16_29 l_0_16_29)))
 (let ((?x30306 (* 2.0 ?x29431)))
 (let ((?x29428 (* l_0_16_28 l_0_16_28)))
 (let ((?x30304 (* 2.0 ?x29428)))
 (let ((?x29425 (* l_0_16_27 l_0_16_27)))
 (let ((?x30302 (* 2.0 ?x29425)))
 (let ((?x29422 (* l_0_16_26 l_0_16_26)))
 (let ((?x30300 (* 2.0 ?x29422)))
 (let ((?x29167 (* 8.0 l_0_16_21)))
 (let ((?x29240 (* ?x29167 l_0_16_28)))
 (let ((?x29164 (* 8.0 l_0_16_20)))
 (let ((?x29238 (* ?x29164 l_0_16_27)))
 (let ((?x29161 (* 8.0 l_0_16_19)))
 (let ((?x29236 (* ?x29161 l_0_16_26)))
 (let ((?x30309 (+ (+ (+ (+ (+ (+ (+ ?x29236 ?x29238) ?x29240) ?x30300) ?x30302) ?x30304) ?x30306) ?x30308)))
 (let ((?x30315 (- (- (- (- ?x30309 ?x29248) ?x29250) ?x29252) (* (* 2.0 l_0_16_41) l_0_16_41))))
 (let ((?x30321 (- (- ?x30315 (* (* 2.0 l_0_16_42) l_0_16_42)) (* (* 2.0 l_0_16_43) l_0_16_43))))
 (let ((?x30327 (- (- ?x30321 (* (* 2.0 l_0_16_44) l_0_16_44)) (* (* 2.0 l_0_16_45) l_0_16_45))))
 (let ((?x30331 (- (- ?x30327 (* (* 2.0 l_0_16_49) l_0_16_56)) (* (* 2.0 l_0_16_50) l_0_16_57))))
 (= (- ?x30331 (* (* 2.0 l_0_16_51) l_0_16_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18003 (* l_0_16_45 l_0_16_45)))
 (let ((?x24481 (* 2.0 ?x18003)))
 (let ((?x12574 (* l_0_16_44 l_0_16_44)))
 (let ((?x24438 (* 2.0 ?x12574)))
 (let ((?x17972 (* l_0_16_43 l_0_16_43)))
 (let ((?x24434 (* 2.0 ?x17972)))
 (let ((?x17971 (* l_0_16_42 l_0_16_42)))
 (let ((?x5771 (* 2.0 ?x17971)))
 (let ((?x17968 (* l_0_16_41 l_0_16_41)))
 (let ((?x18975 (* 2.0 ?x17968)))
 (let ((?x29367 (* (* 8.0 l_0_16_40) l_0_16_44)))
 (let ((?x29364 (* (* 8.0 l_0_16_39) l_0_16_43)))
 (let ((?x29361 (* (* 8.0 l_0_16_38) l_0_16_42)))
 (let ((?x29358 (* (* 8.0 l_0_16_37) l_0_16_41)))
 (let ((?x29351 (* (* 8.0 l_0_16_25) l_0_16_29)))
 (let ((?x29348 (* (* 8.0 l_0_16_24) l_0_16_28)))
 (let ((?x29345 (* (* 8.0 l_0_16_23) l_0_16_27)))
 (let ((?x29342 (* (* 8.0 l_0_16_22) l_0_16_26)))
 (let ((?x30336 (- (+ (+ (+ ?x29342 ?x29345) ?x29348) ?x29351) (* (* 2.0 l_0_16_26) l_0_16_26))))
 (let ((?x30342 (- (- ?x30336 (* (* 2.0 l_0_16_27) l_0_16_27)) (* (* 2.0 l_0_16_28) l_0_16_28))))
 (let ((?x30348 (- (- ?x30342 (* (* 2.0 l_0_16_29) l_0_16_29)) (* (* 2.0 l_0_16_30) l_0_16_30))))
 (let ((?x30355 (+ (+ (+ (- (- (- (- ?x30348 ?x29358) ?x29361) ?x29364) ?x29367) ?x18975) ?x5771) ?x24434)))
 (let ((?x30363 (- (- (+ (+ ?x30355 ?x24438) ?x24481) (* (* 2.0 l_0_16_52) l_0_16_56)) (* (* 2.0 l_0_16_53) l_0_16_57))))
 (let ((?x30369 (- (- ?x30363 (* (* 2.0 l_0_16_54) l_0_16_58)) (* (* 2.0 l_0_16_55) l_0_16_59))))
 (= ?x30369 0.0))))))))))))))))))))))))))
(assert
 (let ((?x30380 (* l_0_16_60 l_0_16_60)))
 (let ((?x24551 (* l_0_16_59 l_0_16_59)))
 (let ((?x24550 (* l_0_16_58 l_0_16_58)))
 (let ((?x24549 (* l_0_16_57 l_0_16_57)))
 (let ((?x24539 (* l_0_16_56 l_0_16_56)))
 (let ((?x29452 (* (* 4.0 l_0_16_45) l_0_16_45)))
 (let ((?x29449 (* (* 4.0 l_0_16_44) l_0_16_44)))
 (let ((?x29446 (* (* 4.0 l_0_16_43) l_0_16_43)))
 (let ((?x29443 (* (* 4.0 l_0_16_42) l_0_16_42)))
 (let ((?x29440 (* (* 4.0 l_0_16_41) l_0_16_41)))
 (let ((?x29434 (* l_0_16_30 l_0_16_30)))
 (let ((?x29435 (* 4.0 ?x29434)))
 (let ((?x29431 (* l_0_16_29 l_0_16_29)))
 (let ((?x29432 (* 4.0 ?x29431)))
 (let ((?x29428 (* l_0_16_28 l_0_16_28)))
 (let ((?x29429 (* 4.0 ?x29428)))
 (let ((?x29425 (* l_0_16_27 l_0_16_27)))
 (let ((?x29426 (* 4.0 ?x29425)))
 (let ((?x29422 (* l_0_16_26 l_0_16_26)))
 (let ((?x29423 (* 4.0 ?x29422)))
 (let ((?x24588 (- (- (- (+ (+ (+ (+ ?x29423 ?x29426) ?x29429) ?x29432) ?x29435) ?x29440) ?x29443) ?x29446)))
 (let ((?x30381 (- (- (- (- (- (- (- ?x24588 ?x29449) ?x29452) ?x24539) ?x24549) ?x24550) ?x24551) ?x30380)))
 (= ?x30381 0.0))))))))))))))))))))))))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (>= l_0_16_15 0.0))
(assert
 (>= l_0_16_16 0.0))
(assert
 (>= l_0_16_18 0.0))
(assert
 (>= l_0_16_21 0.0))
(assert
 (>= l_0_16_25 0.0))
(assert
 (>= l_0_16_30 0.0))
(assert
 (>= l_0_16_31 0.0))
(assert
 (>= l_0_16_33 0.0))
(assert
 (>= l_0_16_36 0.0))
(assert
 (>= l_0_16_40 0.0))
(assert
 (>= l_0_16_45 0.0))
(assert
 (>= l_0_16_46 0.0))
(assert
 (>= l_0_16_48 0.0))
(assert
 (>= l_0_16_51 0.0))
(assert
 (>= l_0_16_55 0.0))
(assert
 (>= l_0_16_60 0.0))
(assert
 (>= l_0_16_61 0.0))
(assert
 (>= l_0_16_63 0.0))
(assert
 (>= l_0_16_66 0.0))
(assert
 (>= l_0_16_70 0.0))
(assert
 (>= l_0_16_75 0.0))
(assert
 (let ((?x30432 (* l_0_17_81 l_0_17_81)))
 (let ((?x30430 (* l_0_17_80 l_0_17_80)))
 (let ((?x30428 (* l_0_17_79 l_0_17_79)))
 (let ((?x30426 (* l_0_17_66 l_0_17_66)))
 (let ((?x30424 (* l_0_17_65 l_0_17_65)))
 (let ((?x30422 (* l_0_17_64 l_0_17_64)))
 (let ((?x30411 (* l_0_17_31 l_0_17_31)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30409 (* ?x30408 l_0_17_34)))
 (let ((?x30410 (- (- (* (* 4.0 l_0_17_16) l_0_17_19) (* l_0_17_16 l_0_17_16)) ?x30409)))
 (let ((?x30418 (+ (+ (+ ?x30410 ?x30411) (* 1.0 (* l_0_17_4 l_0_17_4))) (* 1.0 (* l_0_17_5 l_0_17_5)))))
 (let ((?x30427 (- (- (- (+ ?x30418 (* 1.0 (* l_0_17_6 l_0_17_6))) ?x30422) ?x30424) ?x30426)))
 (= (+ (- (- (- ?x30427 ?x30428) ?x30430) ?x30432) 1.0) 0.0))))))))))))))
(assert
 (let ((?x30455 (* l_0_17_76 l_0_17_76)))
 (let ((?x30453 (* l_0_17_61 l_0_17_61)))
 (let ((?x24802 (+ (+ (* (- _a_0_) _a_0_) (* 2.0 _a_0_)) (* 1.0 (* l_0_17_1 l_0_17_1)))))
 (= (- (- ?x24802 ?x30453) ?x30455) 0.0)))))
(assert
 (let ((?x30411 (* l_0_17_31 l_0_17_31)))
 (let ((?x30477 (* 2.0 ?x30411)))
 (let ((?x30473 (+ (+ (* (* (- 2.0) _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_17_1) l_0_17_7))))
 (let ((?x30481 (- (+ (- ?x30473 (* (* 2.0 l_0_17_16) l_0_17_16)) ?x30477) (* (* 2.0 l_0_17_61) l_0_17_67))))
 (= (+ (- ?x30481 (* (* 2.0 l_0_17_76) l_0_17_82)) 4.0) 0.0))))))
(assert
 (let ((?x30529 (* l_0_17_85 l_0_17_85)))
 (let ((?x30527 (* l_0_17_84 l_0_17_84)))
 (let ((?x30525 (* l_0_17_83 l_0_17_83)))
 (let ((?x30523 (* l_0_17_82 l_0_17_82)))
 (let ((?x30518 (* l_0_17_70 l_0_17_70)))
 (let ((?x30513 (* l_0_17_69 l_0_17_69)))
 (let ((?x30511 (* l_0_17_68 l_0_17_68)))
 (let ((?x30509 (* l_0_17_67 l_0_17_67)))
 (let ((?x30411 (* l_0_17_31 l_0_17_31)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30506 (* ?x30408 l_0_17_37)))
 (let ((?x30406 (* l_0_17_16 l_0_17_16)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x30503 (* ?x30404 l_0_17_22)))
 (let ((?x30504 (- (+ (* (- _a_1_) _a_1_) (* 1.0 (* l_0_17_10 l_0_17_10))) ?x30503)))
 (let ((?x30517 (+ (- (- (- (- (+ (+ ?x30504 ?x30406) ?x30506) ?x30411) ?x30509) ?x30511) ?x30513) (* 1.0 (* l_0_17_7 l_0_17_7)))))
 (let ((?x30526 (- (- (+ (- ?x30517 ?x30518) (* 1.0 (* l_0_17_8 l_0_17_8))) ?x30523) ?x30525)))
 (= (+ (- (- ?x30526 ?x30527) ?x30529) (* 1.0 (* l_0_17_9 l_0_17_9))) 0.0)))))))))))))))))))
(assert
 (let ((?x30406 (* l_0_17_16 l_0_17_16)))
 (let ((?x30492 (* 2.0 ?x30406)))
 (let ((?x30567 (- (+ (* (* 2.0 l_0_17_1) l_0_17_4) ?x30492) (* (* 2.0 l_0_17_31) l_0_17_31))))
 (let ((?x30571 (- (- ?x30567 (* (* 2.0 l_0_17_61) l_0_17_64)) (* (* 2.0 l_0_17_76) l_0_17_79))))
 (= (- ?x30571 2.0) 0.0))))))
(assert
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30576 (* ?x30408 l_0_17_31)))
 (let ((?x30406 (* l_0_17_16 l_0_17_16)))
 (let ((?x18529 (* 4.0 ?x30406)))
 (let ((?x19170 (+ (- (* (* 2.0 l_0_17_1) l_0_17_2) (* l_0_17_1 l_0_17_1)) ?x18529)))
 (let ((?x30581 (- (- (- ?x19170 ?x30576) (* (* 2.0 l_0_17_61) l_0_17_62)) (* (* 2.0 l_0_17_76) l_0_17_77))))
 (= (- ?x30581 4.0) 0.0))))))))
(assert
 (let ((?x30603 (* l_0_17_46 l_0_17_46)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30576 (* ?x30408 l_0_17_31)))
 (let ((?x30406 (* l_0_17_16 l_0_17_16)))
 (let ((?x18529 (* 4.0 ?x30406)))
 (let ((?x30606 (- (- (- (+ (* (* 2.0 l_0_17_1) l_0_17_11) ?x18529) ?x30576) ?x30603) (* (* 2.0 l_0_17_61) l_0_17_71))))
 (= (- (- ?x30606 (* (* 2.0 l_0_17_76) l_0_17_86)) 4.0) 0.0))))))))
(assert
 (let ((?x30634 (* l_0_17_78 l_0_17_78)))
 (let ((?x30632 (* l_0_17_77 l_0_17_77)))
 (let ((?x30630 (* l_0_17_63 l_0_17_63)))
 (let ((?x30628 (* l_0_17_62 l_0_17_62)))
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30626 (* ?x30625 l_0_17_32)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x24888 (* ?x24887 l_0_17_17)))
 (let ((?x30621 (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_2) ?x24888) (* 1.0 (* l_0_17_2 l_0_17_2)))))
 (let ((?x30631 (- (- (- (+ ?x30621 (* 1.0 (* l_0_17_3 l_0_17_3))) ?x30626) ?x30628) ?x30630)))
 (= (- (- ?x30631 ?x30632) ?x30634) 0.0))))))))))))
(assert
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30664 (* ?x30625 l_0_17_34)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30662 (* ?x30408 l_0_17_32)))
 (let ((?x30659 (* 2.0 l_0_17_3)))
 (let ((?x30660 (* ?x30659 l_0_17_5)))
 (let ((?x30656 (* 2.0 l_0_17_2)))
 (let ((?x30657 (* ?x30656 l_0_17_4)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x30654 (* ?x24887 l_0_17_19)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x30652 (* ?x30404 l_0_17_17)))
 (let ((?x30661 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_1) l_0_17_4) ?x30652) ?x30654) ?x30657) ?x30660)))
 (let ((?x30671 (- (- (- (- ?x30661 ?x30662) ?x30664) (* (* 2.0 l_0_17_62) l_0_17_64)) (* (* 2.0 l_0_17_63) l_0_17_65))))
 (let ((?x30677 (- (- ?x30671 (* (* 2.0 l_0_17_77) l_0_17_79)) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (= ?x30677 0.0)))))))))))))))))
(assert
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30709 (* ?x30625 l_0_17_37)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30662 (* ?x30408 l_0_17_32)))
 (let ((?x30659 (* 2.0 l_0_17_3)))
 (let ((?x30706 (* ?x30659 l_0_17_8)))
 (let ((?x30656 (* 2.0 l_0_17_2)))
 (let ((?x30704 (* ?x30656 l_0_17_7)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x19372 (* ?x24887 l_0_17_22)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x30652 (* ?x30404 l_0_17_17)))
 (let ((?x30707 (+ (+ (+ (- (* (* (- 2.0) l_0_17_1) l_0_17_7) ?x30652) ?x19372) ?x30704) ?x30706)))
 (let ((?x30714 (- (- (- (+ ?x30707 ?x30662) ?x30709) (* (* 2.0 l_0_17_62) l_0_17_67)) (* (* 2.0 l_0_17_63) l_0_17_68))))
 (let ((?x30718 (- (- ?x30714 (* (* 2.0 l_0_17_77) l_0_17_82)) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (= ?x30718 0.0)))))))))))))))))
(assert
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30744 (* ?x30625 l_0_17_41)))
 (let ((?x30626 (* ?x30625 l_0_17_32)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x30741 (* ?x24887 l_0_17_26)))
 (let ((?x24888 (* ?x24887 l_0_17_17)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x30738 (* ?x30737 l_0_17_3)))
 (let ((?x30736 (+ (* (* (- 2.0) l_0_17_1) l_0_17_11) (* (* 2.0 l_0_17_11) l_0_17_2))))
 (let ((?x30748 (- (- (- (+ (+ (+ ?x30736 ?x30738) ?x24888) ?x30741) ?x30626) ?x30744) (* (* 2.0 l_0_17_46) l_0_17_47))))
 (let ((?x30752 (- (- ?x30748 (* (* 2.0 l_0_17_62) l_0_17_71)) (* (* 2.0 l_0_17_63) l_0_17_72))))
 (let ((?x30756 (- (- ?x30752 (* (* 2.0 l_0_17_77) l_0_17_86)) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (= ?x30756 0.0))))))))))))))
(assert
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x30794 (* ?x30793 l_0_17_33)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x30791 (* ?x30790 l_0_17_32)))
 (let ((?x30622 (* l_0_17_3 l_0_17_3)))
 (let ((?x19260 (* l_0_17_2 l_0_17_2)))
 (let ((?x30785 (* l_0_17_18 l_0_17_18)))
 (let ((?x30786 (* 4.0 ?x30785)))
 (let ((?x30783 (* l_0_17_17 l_0_17_17)))
 (let ((?x30784 (* 4.0 ?x30783)))
 (let ((?x30787 (+ ?x30784 ?x30786)))
 (= (- (- (- (- ?x30787 ?x19260) ?x30622) ?x30791) ?x30794) 0.0)))))))))))))
(assert
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30826 (* ?x30825 l_0_17_35)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30820 (* ?x30819 l_0_17_34)))
 (let ((?x30659 (* 2.0 l_0_17_3)))
 (let ((?x30660 (* ?x30659 l_0_17_5)))
 (let ((?x30656 (* 2.0 l_0_17_2)))
 (let ((?x30657 (* ?x30656 l_0_17_4)))
 (let ((?x30785 (* l_0_17_18 l_0_17_18)))
 (let ((?x30815 (* 2.0 ?x30785)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30813 (* ?x30812 l_0_17_20)))
 (let ((?x30783 (* l_0_17_17 l_0_17_17)))
 (let ((?x30810 (* 2.0 ?x30783)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30809 (* ?x30808 l_0_17_19)))
 (let ((?x30824 (- (- (- (- (+ (+ (+ ?x30809 ?x30810) ?x30813) ?x30815) ?x30657) ?x30660) ?x30820) (* (* 2.0 l_0_17_32) l_0_17_32))))
 (= (- (- ?x30824 ?x30826) (* (* 2.0 l_0_17_33) l_0_17_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x19498 (* l_0_17_33 l_0_17_33)))
 (let ((?x14185 (* 2.0 ?x19498)))
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30869 (* ?x30825 l_0_17_38)))
 (let ((?x19218 (* l_0_17_32 l_0_17_32)))
 (let ((?x19509 (* 2.0 ?x19218)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30866 (* ?x30819 l_0_17_37)))
 (let ((?x30659 (* 2.0 l_0_17_3)))
 (let ((?x30706 (* ?x30659 l_0_17_8)))
 (let ((?x30656 (* 2.0 l_0_17_2)))
 (let ((?x30704 (* ?x30656 l_0_17_7)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30859 (* ?x30812 l_0_17_23)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30855 (* ?x30808 l_0_17_22)))
 (let ((?x30863 (- (+ (- ?x30855 (* (* 2.0 l_0_17_17) l_0_17_17)) ?x30859) (* (* 2.0 l_0_17_18) l_0_17_18))))
 (= (+ (- (+ (- (- (- ?x30863 ?x30704) ?x30706) ?x30866) ?x19509) ?x30869) ?x14185) 0.0)))))))))))))))))))
(assert
 (let ((?x30900 (* l_0_17_48 l_0_17_48)))
 (let ((?x30898 (* l_0_17_47 l_0_17_47)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x30794 (* ?x30793 l_0_17_33)))
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30895 (* ?x30825 l_0_17_42)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x30791 (* ?x30790 l_0_17_32)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30892 (* ?x30819 l_0_17_41)))
 (let ((?x30785 (* l_0_17_18 l_0_17_18)))
 (let ((?x30786 (* 4.0 ?x30785)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30889 (* ?x30812 l_0_17_27)))
 (let ((?x30783 (* l_0_17_17 l_0_17_17)))
 (let ((?x30784 (* 4.0 ?x30783)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30886 (* ?x30808 l_0_17_26)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x30738 (* ?x30737 l_0_17_3)))
 (let ((?x30890 (+ (+ (+ (- (* (* (- 2.0) l_0_17_11) l_0_17_2) ?x30738) ?x30886) ?x30784) ?x30889)))
 (let ((?x30901 (- (- (- (- (- (- (+ ?x30890 ?x30786) ?x30892) ?x30791) ?x30895) ?x30794) ?x30898) ?x30900)))
 (= ?x30901 0.0))))))))))))))))))))))))
(assert
 (let ((?x30419 (* l_0_17_6 l_0_17_6)))
 (let ((?x30416 (* l_0_17_5 l_0_17_5)))
 (let ((?x30413 (* l_0_17_4 l_0_17_4)))
 (let ((?x30945 (* 4.0 l_0_17_36)))
 (let ((?x30946 (* ?x30945 l_0_17_36)))
 (let ((?x30942 (* 4.0 l_0_17_35)))
 (let ((?x30943 (* ?x30942 l_0_17_35)))
 (let ((?x30939 (* 4.0 l_0_17_34)))
 (let ((?x30940 (* ?x30939 l_0_17_34)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x30937 (* ?x30793 l_0_17_35)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x30935 (* ?x30790 l_0_17_34)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x30933 (* ?x30565 l_0_17_32)))
 (let ((?x30930 (* l_0_17_21 l_0_17_21)))
 (let ((?x30931 (* 4.0 ?x30930)))
 (let ((?x30927 (* l_0_17_20 l_0_17_20)))
 (let ((?x30928 (* 4.0 ?x30927)))
 (let ((?x30924 (* l_0_17_19 l_0_17_19)))
 (let ((?x30925 (* 4.0 ?x30924)))
 (let ((?x30921 (* 4.0 l_0_17_18)))
 (let ((?x30922 (* ?x30921 l_0_17_20)))
 (let ((?x30920 (+ (* (* (- 2.0) l_0_17_16) l_0_17_17) (* (* 4.0 l_0_17_17) l_0_17_19))))
 (let ((?x30938 (- (- (+ (+ (+ (+ (+ ?x30920 ?x30922) ?x30925) ?x30928) ?x30931) ?x30933) ?x30935) ?x30937)))
 (= (- (- (- (- (- (- ?x30938 ?x30940) ?x30943) ?x30946) ?x30413) ?x30416) ?x30419) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x31022 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x31019 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x31016 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x31012 (* 8.0 l_0_17_36)))
 (let ((?x31013 (* ?x31012 l_0_17_39)))
 (let ((?x31009 (* 8.0 l_0_17_35)))
 (let ((?x31010 (* ?x31009 l_0_17_38)))
 (let ((?x31006 (* 8.0 l_0_17_34)))
 (let ((?x31007 (* ?x31006 l_0_17_37)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x31004 (* ?x30793 l_0_17_38)))
 (let ((?x30937 (* ?x30793 l_0_17_35)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x31001 (* ?x30790 l_0_17_37)))
 (let ((?x30935 (* ?x30790 l_0_17_34)))
 (let ((?x30997 (* 8.0 l_0_17_21)))
 (let ((?x30998 (* ?x30997 l_0_17_24)))
 (let ((?x30994 (* 8.0 l_0_17_20)))
 (let ((?x30995 (* ?x30994 l_0_17_23)))
 (let ((?x30991 (* 8.0 l_0_17_19)))
 (let ((?x30992 (* ?x30991 l_0_17_22)))
 (let ((?x30921 (* 4.0 l_0_17_18)))
 (let ((?x30989 (* ?x30921 l_0_17_23)))
 (let ((?x30922 (* ?x30921 l_0_17_20)))
 (let ((?x30918 (* 4.0 l_0_17_17)))
 (let ((?x30986 (* ?x30918 l_0_17_22)))
 (let ((?x30993 (+ (+ (- (+ (* (* (- 4.0) l_0_17_17) l_0_17_19) ?x30986) ?x30922) ?x30989) ?x30992)))
 (let ((?x31008 (- (- (+ (- (+ (+ (+ ?x30993 ?x30995) ?x30998) ?x30935) ?x31001) ?x30937) ?x31004) ?x31007)))
 (= (- (- (- (- (- ?x31008 ?x31010) ?x31013) ?x31016) ?x31019) ?x31022) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x31012 (* 8.0 l_0_17_36)))
 (let ((?x31074 (* ?x31012 l_0_17_43)))
 (let ((?x31009 (* 8.0 l_0_17_35)))
 (let ((?x31072 (* ?x31009 l_0_17_42)))
 (let ((?x31006 (* 8.0 l_0_17_34)))
 (let ((?x31070 (* ?x31006 l_0_17_41)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x31068 (* ?x30793 l_0_17_42)))
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30826 (* ?x30825 l_0_17_35)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x31065 (* ?x30790 l_0_17_41)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30820 (* ?x30819 l_0_17_34)))
 (let ((?x30997 (* 8.0 l_0_17_21)))
 (let ((?x31062 (* ?x30997 l_0_17_28)))
 (let ((?x30994 (* 8.0 l_0_17_20)))
 (let ((?x31060 (* ?x30994 l_0_17_27)))
 (let ((?x30991 (* 8.0 l_0_17_19)))
 (let ((?x31058 (* ?x30991 l_0_17_26)))
 (let ((?x30921 (* 4.0 l_0_17_18)))
 (let ((?x31056 (* ?x30921 l_0_17_27)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30813 (* ?x30812 l_0_17_20)))
 (let ((?x30918 (* 4.0 l_0_17_17)))
 (let ((?x31053 (* ?x30918 l_0_17_26)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30809 (* ?x30808 l_0_17_19)))
 (let ((?x19599 (* 2.0 l_0_17_13)))
 (let ((?x25146 (* ?x19599 l_0_17_6)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x25191 (* ?x30737 l_0_17_5)))
 (let ((?x31054 (+ (+ (- (- (* (* (- 2.0) l_0_17_11) l_0_17_4) ?x25191) ?x25146) ?x30809) ?x31053)))
 (let ((?x31066 (- (- (+ (+ (+ (+ (+ ?x31054 ?x30813) ?x31056) ?x31058) ?x31060) ?x31062) ?x30820) ?x31065)))
 (let ((?x31078 (- (- (- (- (- (- ?x31066 ?x30826) ?x31068) ?x31070) ?x31072) ?x31074) (* (* 2.0 l_0_17_47) l_0_17_49))))
 (= (- ?x31078 (* (* 2.0 l_0_17_48) l_0_17_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x30531 (* l_0_17_9 l_0_17_9)))
 (let ((?x30520 (* l_0_17_8 l_0_17_8)))
 (let ((?x30515 (* l_0_17_7 l_0_17_7)))
 (let ((?x31134 (* 4.0 l_0_17_40)))
 (let ((?x31135 (* ?x31134 l_0_17_40)))
 (let ((?x31131 (* 4.0 l_0_17_39)))
 (let ((?x31132 (* ?x31131 l_0_17_39)))
 (let ((?x31128 (* 4.0 l_0_17_38)))
 (let ((?x31129 (* ?x31128 l_0_17_38)))
 (let ((?x31125 (* 4.0 l_0_17_37)))
 (let ((?x31126 (* ?x31125 l_0_17_37)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x31004 (* ?x30793 l_0_17_38)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x31001 (* ?x30790 l_0_17_37)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x30933 (* ?x30565 l_0_17_32)))
 (let ((?x31119 (* l_0_17_25 l_0_17_25)))
 (let ((?x31120 (* 4.0 ?x31119)))
 (let ((?x31116 (* l_0_17_24 l_0_17_24)))
 (let ((?x31117 (* 4.0 ?x31116)))
 (let ((?x31113 (* l_0_17_23 l_0_17_23)))
 (let ((?x31114 (* 4.0 ?x31113)))
 (let ((?x31110 (* l_0_17_22 l_0_17_22)))
 (let ((?x31111 (* 4.0 ?x31110)))
 (let ((?x30921 (* 4.0 l_0_17_18)))
 (let ((?x30989 (* ?x30921 l_0_17_23)))
 (let ((?x30918 (* 4.0 l_0_17_17)))
 (let ((?x30986 (* ?x30918 l_0_17_22)))
 (let ((?x31107 (+ (* (- l_0_17_10) l_0_17_10) (* (* 2.0 l_0_17_16) l_0_17_17))))
 (let ((?x31122 (- (+ (+ (+ (+ (- (- ?x31107 ?x30986) ?x30989) ?x31111) ?x31114) ?x31117) ?x31120) ?x30933)))
 (let ((?x31137 (- (- (- (- (- (+ (+ ?x31122 ?x31001) ?x31004) ?x31126) ?x31129) ?x31132) ?x31135) ?x30515)))
 (= (- (- ?x31137 ?x30520) ?x30531) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31179 (* (* 8.0 l_0_17_40) l_0_17_44)))
 (let ((?x31176 (* (* 8.0 l_0_17_39) l_0_17_43)))
 (let ((?x31173 (* (* 8.0 l_0_17_38) l_0_17_42)))
 (let ((?x31170 (* (* 8.0 l_0_17_37) l_0_17_41)))
 (let ((?x30793 (* 4.0 l_0_17_33)))
 (let ((?x31068 (* ?x30793 l_0_17_42)))
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30869 (* ?x30825 l_0_17_38)))
 (let ((?x30790 (* 4.0 l_0_17_32)))
 (let ((?x31065 (* ?x30790 l_0_17_41)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30866 (* ?x30819 l_0_17_37)))
 (let ((?x31163 (* (* 8.0 l_0_17_25) l_0_17_29)))
 (let ((?x31160 (* (* 8.0 l_0_17_24) l_0_17_28)))
 (let ((?x31157 (* (* 8.0 l_0_17_23) l_0_17_27)))
 (let ((?x31154 (* (* 8.0 l_0_17_22) l_0_17_26)))
 (let ((?x30921 (* 4.0 l_0_17_18)))
 (let ((?x31056 (* ?x30921 l_0_17_27)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30859 (* ?x30812 l_0_17_23)))
 (let ((?x30918 (* 4.0 l_0_17_17)))
 (let ((?x31053 (* ?x30918 l_0_17_26)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30855 (* ?x30808 l_0_17_22)))
 (let ((?x19599 (* 2.0 l_0_17_13)))
 (let ((?x31147 (* ?x19599 l_0_17_9)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x31145 (* ?x30737 l_0_17_8)))
 (let ((?x30734 (* 2.0 l_0_17_11)))
 (let ((?x31143 (* ?x30734 l_0_17_7)))
 (let ((?x31149 (+ (- (- (- (* (* (- 2.0) l_0_17_10) l_0_17_14) ?x31143) ?x31145) ?x31147) ?x30855)))
 (let ((?x31164 (+ (+ (+ (+ (- (+ (- ?x31149 ?x31053) ?x30859) ?x31056) ?x31154) ?x31157) ?x31160) ?x31163)))
 (let ((?x31177 (- (- (- (+ (- (+ (- ?x31164 ?x30866) ?x31065) ?x30869) ?x31068) ?x31170) ?x31173) ?x31176)))
 (let ((?x31184 (- (- (- ?x31177 ?x31179) (* (* 2.0 l_0_17_47) l_0_17_52)) (* (* 2.0 l_0_17_48) l_0_17_53))))
 (= ?x31184 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31254 (* (* 4.0 l_0_17_45) l_0_17_45)))
 (let ((?x31251 (* (* 4.0 l_0_17_44) l_0_17_44)))
 (let ((?x31248 (* (* 4.0 l_0_17_43) l_0_17_43)))
 (let ((?x31245 (* (* 4.0 l_0_17_42) l_0_17_42)))
 (let ((?x31242 (* (* 4.0 l_0_17_41) l_0_17_41)))
 (let ((?x30825 (* 8.0 l_0_17_33)))
 (let ((?x30895 (* ?x30825 l_0_17_42)))
 (let ((?x30819 (* 8.0 l_0_17_32)))
 (let ((?x30892 (* ?x30819 l_0_17_41)))
 (let ((?x31236 (* l_0_17_30 l_0_17_30)))
 (let ((?x31237 (* 4.0 ?x31236)))
 (let ((?x31233 (* l_0_17_29 l_0_17_29)))
 (let ((?x31234 (* 4.0 ?x31233)))
 (let ((?x31230 (* l_0_17_28 l_0_17_28)))
 (let ((?x31231 (* 4.0 ?x31230)))
 (let ((?x31227 (* l_0_17_27 l_0_17_27)))
 (let ((?x31228 (* 4.0 ?x31227)))
 (let ((?x31224 (* l_0_17_26 l_0_17_26)))
 (let ((?x31225 (* 4.0 ?x31224)))
 (let ((?x30812 (* 8.0 l_0_17_18)))
 (let ((?x30889 (* ?x30812 l_0_17_27)))
 (let ((?x30808 (* 8.0 l_0_17_17)))
 (let ((?x30886 (* ?x30808 l_0_17_26)))
 (let ((?x31220 (* l_0_17_15 l_0_17_15)))
 (let ((?x31218 (* l_0_17_14 l_0_17_14)))
 (let ((?x31216 (* l_0_17_13 l_0_17_13)))
 (let ((?x31217 (- (- (* (- l_0_17_11) l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x31216)))
 (let ((?x31232 (+ (+ (+ (+ (+ (- (- ?x31217 ?x31218) ?x31220) ?x30886) ?x30889) ?x31225) ?x31228) ?x31231)))
 (let ((?x31249 (- (- (- (- (- (+ (+ ?x31232 ?x31234) ?x31237) ?x30892) ?x30895) ?x31242) ?x31245) ?x31248)))
 (let ((?x31259 (- (- (- (- ?x31249 ?x31251) ?x31254) (* (* 2.0 l_0_17_47) l_0_17_56)) (* (* 2.0 l_0_17_48) l_0_17_57))))
 (= ?x31259 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x31022 (* (* 2.0 l_0_17_6) l_0_17_9)))
 (let ((?x31019 (* (* 2.0 l_0_17_5) l_0_17_8)))
 (let ((?x31016 (* (* 2.0 l_0_17_4) l_0_17_7)))
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x30506 (* ?x30408 l_0_17_37)))
 (let ((?x30409 (* ?x30408 l_0_17_34)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x30503 (* ?x30404 l_0_17_22)))
 (let ((?x31289 (+ (- (+ (+ (* (* (- 4.0) l_0_17_16) l_0_17_19) ?x30503) ?x30409) ?x30506) ?x31016)))
 (let ((?x31297 (- (- (+ (+ ?x31289 ?x31019) ?x31022) (* (* 2.0 l_0_17_64) l_0_17_67)) (* (* 2.0 l_0_17_65) l_0_17_68))))
 (let ((?x31303 (- (- ?x31297 (* (* 2.0 l_0_17_66) l_0_17_69)) (* (* 2.0 l_0_17_79) l_0_17_82))))
 (let ((?x31309 (- (- ?x31303 (* (* 2.0 l_0_17_80) l_0_17_83)) (* (* 2.0 l_0_17_81) l_0_17_84))))
 (= ?x31309 0.0))))))))))))))
(assert
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x31334 (* ?x30408 l_0_17_41)))
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30664 (* ?x30625 l_0_17_34)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x31331 (* ?x30404 l_0_17_26)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x30654 (* ?x24887 l_0_17_19)))
 (let ((?x19599 (* 2.0 l_0_17_13)))
 (let ((?x25146 (* ?x19599 l_0_17_6)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x25191 (* ?x30737 l_0_17_5)))
 (let ((?x31332 (+ (+ (+ (+ (* (* 2.0 l_0_17_11) l_0_17_4) ?x25191) ?x25146) ?x30654) ?x31331)))
 (let ((?x31339 (- (- (- (- ?x31332 ?x30664) ?x31334) (* (* 2.0 l_0_17_46) l_0_17_49)) (* (* 2.0 l_0_17_64) l_0_17_71))))
 (let ((?x31343 (- (- ?x31339 (* (* 2.0 l_0_17_65) l_0_17_72)) (* (* 2.0 l_0_17_66) l_0_17_73))))
 (let ((?x31347 (- (- ?x31343 (* (* 2.0 l_0_17_79) l_0_17_86)) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (= (- ?x31347 (* (* 2.0 l_0_17_81) l_0_17_88)) 0.0))))))))))))))))))
(assert
 (let ((?x30408 (* 4.0 l_0_17_31)))
 (let ((?x31334 (* ?x30408 l_0_17_41)))
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30709 (* ?x30625 l_0_17_37)))
 (let ((?x30404 (* 4.0 l_0_17_16)))
 (let ((?x31331 (* ?x30404 l_0_17_26)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x19372 (* ?x24887 l_0_17_22)))
 (let ((?x19599 (* 2.0 l_0_17_13)))
 (let ((?x31147 (* ?x19599 l_0_17_9)))
 (let ((?x30737 (* 2.0 l_0_17_12)))
 (let ((?x31145 (* ?x30737 l_0_17_8)))
 (let ((?x30734 (* 2.0 l_0_17_11)))
 (let ((?x31143 (* ?x30734 l_0_17_7)))
 (let ((?x31375 (+ (+ (+ (+ (* (* 2.0 l_0_17_10) l_0_17_14) ?x31143) ?x31145) ?x31147) ?x19372)))
 (let ((?x31380 (- (+ (- (- ?x31375 ?x31331) ?x30709) ?x31334) (* (* 2.0 l_0_17_46) l_0_17_52))))
 (let ((?x31386 (- (- ?x31380 (* (* 2.0 l_0_17_67) l_0_17_71)) (* (* 2.0 l_0_17_68) l_0_17_72))))
 (let ((?x31392 (- (- ?x31386 (* (* 2.0 l_0_17_69) l_0_17_73)) (* (* 2.0 l_0_17_70) l_0_17_74))))
 (let ((?x31398 (- (- ?x31392 (* (* 2.0 l_0_17_82) l_0_17_86)) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x31404 (- (- ?x31398 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (= ?x31404 0.0))))))))))))))))))))))
(assert
 (let ((?x31449 (* l_0_17_90 l_0_17_90)))
 (let ((?x31447 (* l_0_17_89 l_0_17_89)))
 (let ((?x31445 (* l_0_17_88 l_0_17_88)))
 (let ((?x31443 (* l_0_17_87 l_0_17_87)))
 (let ((?x31441 (* l_0_17_86 l_0_17_86)))
 (let ((?x31439 (* l_0_17_75 l_0_17_75)))
 (let ((?x31437 (* l_0_17_74 l_0_17_74)))
 (let ((?x31435 (* l_0_17_73 l_0_17_73)))
 (let ((?x31433 (* l_0_17_72 l_0_17_72)))
 (let ((?x31431 (* l_0_17_71 l_0_17_71)))
 (let ((?x30625 (* 8.0 l_0_17_31)))
 (let ((?x30744 (* ?x30625 l_0_17_41)))
 (let ((?x24887 (* 8.0 l_0_17_16)))
 (let ((?x30741 (* ?x24887 l_0_17_26)))
 (let ((?x31420 (+ (* 1.0 (* l_0_17_11 l_0_17_11)) (* 1.0 (* l_0_17_12 l_0_17_12)))))
 (let ((?x31424 (+ (+ ?x31420 (* 1.0 (* l_0_17_13 l_0_17_13))) (* 1.0 (* l_0_17_14 l_0_17_14)))))
 (let ((?x31430 (- (- (+ (+ ?x31424 (* 1.0 (* l_0_17_15 l_0_17_15))) ?x30741) ?x30744) (* (* 2.0 l_0_17_46) l_0_17_56))))
 (let ((?x31444 (- (- (- (- (- (- (- ?x31430 ?x31431) ?x31433) ?x31435) ?x31437) ?x31439) ?x31441) ?x31443)))
 (= (- (- (- ?x31444 ?x31445) ?x31447) ?x31449) 0.0))))))))))))))))))))
(assert
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31473 (* ?x30565 l_0_17_34)))
 (let ((?x30930 (* l_0_17_21 l_0_17_21)))
 (let ((?x31471 (* 2.0 ?x30930)))
 (let ((?x30927 (* l_0_17_20 l_0_17_20)))
 (let ((?x31469 (* 2.0 ?x30927)))
 (let ((?x30924 (* l_0_17_19 l_0_17_19)))
 (let ((?x14775 (* 2.0 ?x30924)))
 (let ((?x31474 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_16) l_0_17_19) ?x14775) ?x31469) ?x31471) ?x31473)))
 (let ((?x31480 (- (- ?x31474 (* (* 2.0 l_0_17_34) l_0_17_34)) (* (* 2.0 l_0_17_35) l_0_17_35))))
 (= (- ?x31480 (* (* 2.0 l_0_17_36) l_0_17_36)) 0.0))))))))))))
(assert
 (let ((?x30969 (* l_0_17_36 l_0_17_36)))
 (let ((?x25889 (* 2.0 ?x30969)))
 (let ((?x30945 (* 4.0 l_0_17_36)))
 (let ((?x31529 (* ?x30945 l_0_17_39)))
 (let ((?x14233 (* l_0_17_35 l_0_17_35)))
 (let ((?x31489 (* 2.0 ?x14233)))
 (let ((?x30942 (* 4.0 l_0_17_35)))
 (let ((?x31526 (* ?x30942 l_0_17_38)))
 (let ((?x19550 (* l_0_17_34 l_0_17_34)))
 (let ((?x7751 (* 2.0 ?x19550)))
 (let ((?x30939 (* 4.0 l_0_17_34)))
 (let ((?x31523 (* ?x30939 l_0_17_37)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31521 (* ?x30565 l_0_17_37)))
 (let ((?x31515 (* 4.0 l_0_17_21)))
 (let ((?x31516 (* ?x31515 l_0_17_24)))
 (let ((?x31509 (* 4.0 l_0_17_20)))
 (let ((?x31510 (* ?x31509 l_0_17_23)))
 (let ((?x31503 (* 4.0 l_0_17_19)))
 (let ((?x31504 (* ?x31503 l_0_17_22)))
 (let ((?x31508 (- (+ (* (* (- 2.0) l_0_17_16) l_0_17_22) ?x31504) (* (* 2.0 l_0_17_19) l_0_17_19))))
 (let ((?x31520 (- (+ (- (+ ?x31508 ?x31510) (* (* 2.0 l_0_17_20) l_0_17_20)) ?x31516) (* (* 2.0 l_0_17_21) l_0_17_21))))
 (let ((?x31531 (+ (- (+ (- (+ (- (+ ?x31520 ?x31521) ?x31523) ?x7751) ?x31526) ?x31489) ?x31529) ?x25889)))
 (= ?x31531 0.0)))))))))))))))))))))))))
(assert
 (let ((?x31577 (* l_0_17_51 l_0_17_51)))
 (let ((?x31575 (* l_0_17_50 l_0_17_50)))
 (let ((?x31573 (* l_0_17_49 l_0_17_49)))
 (let ((?x30945 (* 4.0 l_0_17_36)))
 (let ((?x30946 (* ?x30945 l_0_17_36)))
 (let ((?x31570 (* ?x30945 l_0_17_43)))
 (let ((?x30942 (* 4.0 l_0_17_35)))
 (let ((?x30943 (* ?x30942 l_0_17_35)))
 (let ((?x31567 (* ?x30942 l_0_17_42)))
 (let ((?x30939 (* 4.0 l_0_17_34)))
 (let ((?x30940 (* ?x30939 l_0_17_34)))
 (let ((?x31564 (* ?x30939 l_0_17_41)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31562 (* ?x30565 l_0_17_41)))
 (let ((?x30930 (* l_0_17_21 l_0_17_21)))
 (let ((?x30931 (* 4.0 ?x30930)))
 (let ((?x31515 (* 4.0 l_0_17_21)))
 (let ((?x31559 (* ?x31515 l_0_17_28)))
 (let ((?x30927 (* l_0_17_20 l_0_17_20)))
 (let ((?x30928 (* 4.0 ?x30927)))
 (let ((?x31509 (* 4.0 l_0_17_20)))
 (let ((?x20207 (* ?x31509 l_0_17_27)))
 (let ((?x30924 (* l_0_17_19 l_0_17_19)))
 (let ((?x30925 (* 4.0 ?x30924)))
 (let ((?x31503 (* 4.0 l_0_17_19)))
 (let ((?x25870 (* ?x31503 l_0_17_26)))
 (let ((?x31558 (+ (+ (+ (+ (* (* (- 2.0) l_0_17_16) l_0_17_26) ?x25870) ?x30925) ?x20207) ?x30928)))
 (let ((?x31569 (- (- (- (- (+ (+ (+ ?x31558 ?x31559) ?x30931) ?x31562) ?x31564) ?x30940) ?x31567) ?x30943)))
 (= (- (- (- (- (- ?x31569 ?x31570) ?x30946) ?x31573) ?x31575) ?x31577) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x19498 (* l_0_17_33 l_0_17_33)))
 (let ((?x19218 (* l_0_17_32 l_0_17_32)))
 (let ((?x31606 (+ (- (* (- l_0_17_17) l_0_17_17) (* l_0_17_18 l_0_17_18)) ?x19218)))
 (= (+ ?x31606 ?x19498) 0.0)))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31619 (* ?x30828 l_0_17_35)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31617 (* ?x30822 l_0_17_34)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31615 (* ?x30861 l_0_17_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_19) ?x31615) ?x31617) ?x31619) 0.0))))))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31631 (* ?x30828 l_0_17_38)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31629 (* ?x30822 l_0_17_37)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31627 (* ?x30861 l_0_17_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_22) ?x31627) ?x31629) ?x31631) 0.0))))))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31649 (* ?x30828 l_0_17_42)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31647 (* ?x30822 l_0_17_41)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31645 (* ?x30861 l_0_17_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_17_17) l_0_17_26) ?x31645) ?x31647) ?x31649) 0.0))))))))
(assert
 (let ((?x30969 (* l_0_17_36 l_0_17_36)))
 (let ((?x14233 (* l_0_17_35 l_0_17_35)))
 (let ((?x19550 (* l_0_17_34 l_0_17_34)))
 (let ((?x30930 (* l_0_17_21 l_0_17_21)))
 (let ((?x31666 (- (- (* (- l_0_17_19) l_0_17_19) (* l_0_17_20 l_0_17_20)) ?x30930)))
 (= (+ (+ (+ ?x31666 ?x19550) ?x14233) ?x30969) 0.0)))))))
(assert
 (let ((?x31481 (* 2.0 l_0_17_36)))
 (let ((?x31690 (* ?x31481 l_0_17_39)))
 (let ((?x31478 (* 2.0 l_0_17_35)))
 (let ((?x31688 (* ?x31478 l_0_17_38)))
 (let ((?x31475 (* 2.0 l_0_17_34)))
 (let ((?x31686 (* ?x31475 l_0_17_37)))
 (let ((?x31518 (* 2.0 l_0_17_21)))
 (let ((?x31684 (* ?x31518 l_0_17_24)))
 (let ((?x31512 (* 2.0 l_0_17_20)))
 (let ((?x31682 (* ?x31512 l_0_17_23)))
 (let ((?x31689 (+ (+ (- (- (* (* (- 2.0) l_0_17_19) l_0_17_22) ?x31682) ?x31684) ?x31686) ?x31688)))
 (= (+ ?x31689 ?x31690) 0.0)))))))))))))
(assert
 (let ((?x31481 (* 2.0 l_0_17_36)))
 (let ((?x31709 (* ?x31481 l_0_17_43)))
 (let ((?x31478 (* 2.0 l_0_17_35)))
 (let ((?x31707 (* ?x31478 l_0_17_42)))
 (let ((?x31475 (* 2.0 l_0_17_34)))
 (let ((?x31705 (* ?x31475 l_0_17_41)))
 (let ((?x31518 (* 2.0 l_0_17_21)))
 (let ((?x26028 (* ?x31518 l_0_17_28)))
 (let ((?x31512 (* 2.0 l_0_17_20)))
 (let ((?x14948 (* ?x31512 l_0_17_27)))
 (let ((?x31708 (+ (+ (- (- (* (* (- 2.0) l_0_17_19) l_0_17_26) ?x14948) ?x26028) ?x31705) ?x31707)))
 (= (+ ?x31708 ?x31709) 0.0)))))))))))))
(assert
 (let ((?x13211 (* l_0_17_40 l_0_17_40)))
 (let ((?x14330 (* l_0_17_39 l_0_17_39)))
 (let ((?x25341 (* l_0_17_38 l_0_17_38)))
 (let ((?x25307 (* l_0_17_37 l_0_17_37)))
 (let ((?x30969 (* l_0_17_36 l_0_17_36)))
 (let ((?x14233 (* l_0_17_35 l_0_17_35)))
 (let ((?x19550 (* l_0_17_34 l_0_17_34)))
 (let ((?x31119 (* l_0_17_25 l_0_17_25)))
 (let ((?x31116 (* l_0_17_24 l_0_17_24)))
 (let ((?x31113 (* l_0_17_23 l_0_17_23)))
 (let ((?x31110 (* l_0_17_22 l_0_17_22)))
 (let ((?x30930 (* l_0_17_21 l_0_17_21)))
 (let ((?x26032 (- (+ (+ (* l_0_17_19 l_0_17_19) (* l_0_17_20 l_0_17_20)) ?x30930) ?x31110)))
 (let ((?x31735 (+ (- (- (- (- (- (- ?x26032 ?x31113) ?x31116) ?x31119) ?x19550) ?x14233) ?x30969) ?x25307)))
 (= (+ (+ (+ ?x31735 ?x25341) ?x14330) ?x13211) 0.0))))))))))))))))
(assert
 (let ((?x31766 (* 2.0 l_0_17_40)))
 (let ((?x31767 (* ?x31766 l_0_17_44)))
 (let ((?x31763 (* 2.0 l_0_17_39)))
 (let ((?x31764 (* ?x31763 l_0_17_43)))
 (let ((?x31760 (* 2.0 l_0_17_38)))
 (let ((?x31761 (* ?x31760 l_0_17_42)))
 (let ((?x31757 (* 2.0 l_0_17_37)))
 (let ((?x31758 (* ?x31757 l_0_17_41)))
 (let ((?x31754 (* 2.0 l_0_17_25)))
 (let ((?x31755 (* ?x31754 l_0_17_29)))
 (let ((?x31751 (* 2.0 l_0_17_24)))
 (let ((?x31752 (* ?x31751 l_0_17_28)))
 (let ((?x15001 (* 2.0 l_0_17_23)))
 (let ((?x6469 (* ?x15001 l_0_17_27)))
 (let ((?x31759 (+ (- (- (- (* (* (- 2.0) l_0_17_22) l_0_17_26) ?x6469) ?x31752) ?x31755) ?x31758)))
 (= (+ (+ (+ ?x31759 ?x31761) ?x31764) ?x31767) 0.0)))))))))))))))))
(assert
 (let ((?x13425 (* l_0_17_45 l_0_17_45)))
 (let ((?x25560 (* l_0_17_44 l_0_17_44)))
 (let ((?x7255 (* l_0_17_43 l_0_17_43)))
 (let ((?x7257 (* l_0_17_42 l_0_17_42)))
 (let ((?x25555 (* l_0_17_41 l_0_17_41)))
 (let ((?x31236 (* l_0_17_30 l_0_17_30)))
 (let ((?x31233 (* l_0_17_29 l_0_17_29)))
 (let ((?x31230 (* l_0_17_28 l_0_17_28)))
 (let ((?x31788 (- (- (* (- l_0_17_26) l_0_17_26) (* l_0_17_27 l_0_17_27)) ?x31230)))
 (let ((?x31795 (+ (+ (+ (+ (+ (- (- ?x31788 ?x31233) ?x31236) ?x25555) ?x7257) ?x7255) ?x25560) ?x13425)))
 (= ?x31795 0.0))))))))))))
(assert
 (let ((?x30945 (* 4.0 l_0_17_36)))
 (let ((?x31529 (* ?x30945 l_0_17_39)))
 (let ((?x30942 (* 4.0 l_0_17_35)))
 (let ((?x31526 (* ?x30942 l_0_17_38)))
 (let ((?x30939 (* 4.0 l_0_17_34)))
 (let ((?x31523 (* ?x30939 l_0_17_37)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31473 (* ?x30565 l_0_17_34)))
 (let ((?x31119 (* l_0_17_25 l_0_17_25)))
 (let ((?x31814 (* 2.0 ?x31119)))
 (let ((?x31116 (* l_0_17_24 l_0_17_24)))
 (let ((?x31812 (* 2.0 ?x31116)))
 (let ((?x31113 (* l_0_17_23 l_0_17_23)))
 (let ((?x31810 (* 2.0 ?x31113)))
 (let ((?x31110 (* l_0_17_22 l_0_17_22)))
 (let ((?x31808 (* 2.0 ?x31110)))
 (let ((?x31515 (* 4.0 l_0_17_21)))
 (let ((?x31516 (* ?x31515 l_0_17_24)))
 (let ((?x31509 (* 4.0 l_0_17_20)))
 (let ((?x31510 (* ?x31509 l_0_17_23)))
 (let ((?x31503 (* 4.0 l_0_17_19)))
 (let ((?x31504 (* ?x31503 l_0_17_22)))
 (let ((?x31809 (+ (- (- (- (* (* 2.0 l_0_17_16) l_0_17_19) ?x31504) ?x31510) ?x31516) ?x31808)))
 (let ((?x31819 (+ (+ (+ (- (+ (+ (+ ?x31809 ?x31810) ?x31812) ?x31814) ?x31473) ?x31523) ?x31526) ?x31529)))
 (let ((?x31823 (- (- ?x31819 (* (* 2.0 l_0_17_37) l_0_17_37)) (* (* 2.0 l_0_17_38) l_0_17_38))))
 (let ((?x31827 (- (- ?x31823 (* (* 2.0 l_0_17_39) l_0_17_39)) (* (* 2.0 l_0_17_40) l_0_17_40))))
 (= ?x31827 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13211 (* l_0_17_40 l_0_17_40)))
 (let ((?x31849 (* 2.0 ?x13211)))
 (let ((?x14330 (* l_0_17_39 l_0_17_39)))
 (let ((?x20419 (* 2.0 ?x14330)))
 (let ((?x25341 (* l_0_17_38 l_0_17_38)))
 (let ((?x15063 (* 2.0 ?x25341)))
 (let ((?x25307 (* l_0_17_37 l_0_17_37)))
 (let ((?x31842 (* 2.0 ?x25307)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31521 (* ?x30565 l_0_17_37)))
 (let ((?x31859 (- (* (* 2.0 l_0_17_16) l_0_17_22) (* (* 2.0 l_0_17_22) l_0_17_22))))
 (let ((?x31863 (- (- ?x31859 (* (* 2.0 l_0_17_23) l_0_17_23)) (* (* 2.0 l_0_17_24) l_0_17_24))))
 (let ((?x31868 (+ (+ (- (- ?x31863 (* (* 2.0 l_0_17_25) l_0_17_25)) ?x31521) ?x31842) ?x15063)))
 (= (+ (+ ?x31868 ?x20419) ?x31849) 0.0)))))))))))))))
(assert
 (let ((?x31908 (* l_0_17_55 l_0_17_55)))
 (let ((?x31906 (* l_0_17_54 l_0_17_54)))
 (let ((?x31904 (* l_0_17_53 l_0_17_53)))
 (let ((?x31902 (* l_0_17_52 l_0_17_52)))
 (let ((?x31134 (* 4.0 l_0_17_40)))
 (let ((?x31135 (* ?x31134 l_0_17_40)))
 (let ((?x31899 (* ?x31134 l_0_17_44)))
 (let ((?x31131 (* 4.0 l_0_17_39)))
 (let ((?x31132 (* ?x31131 l_0_17_39)))
 (let ((?x31896 (* ?x31131 l_0_17_43)))
 (let ((?x31128 (* 4.0 l_0_17_38)))
 (let ((?x31129 (* ?x31128 l_0_17_38)))
 (let ((?x31893 (* ?x31128 l_0_17_42)))
 (let ((?x31125 (* 4.0 l_0_17_37)))
 (let ((?x31126 (* ?x31125 l_0_17_37)))
 (let ((?x31890 (* ?x31125 l_0_17_41)))
 (let ((?x30565 (* 2.0 l_0_17_31)))
 (let ((?x31562 (* ?x30565 l_0_17_41)))
 (let ((?x31119 (* l_0_17_25 l_0_17_25)))
 (let ((?x31120 (* 4.0 ?x31119)))
 (let ((?x31886 (* (* 4.0 l_0_17_25) l_0_17_29)))
 (let ((?x31116 (* l_0_17_24 l_0_17_24)))
 (let ((?x31117 (* 4.0 ?x31116)))
 (let ((?x31882 (* (* 4.0 l_0_17_24) l_0_17_28)))
 (let ((?x31113 (* l_0_17_23 l_0_17_23)))
 (let ((?x31114 (* 4.0 ?x31113)))
 (let ((?x20442 (* (* 4.0 l_0_17_23) l_0_17_27)))
 (let ((?x31110 (* l_0_17_22 l_0_17_22)))
 (let ((?x31111 (* 4.0 ?x31110)))
 (let ((?x26120 (* (* 4.0 l_0_17_22) l_0_17_26)))
 (let ((?x31880 (+ (- (+ (- (* (* 2.0 l_0_17_16) l_0_17_26) ?x26120) ?x31111) ?x20442) ?x31114)))
 (let ((?x31892 (- (+ (- (+ (- (+ (- ?x31880 ?x31882) ?x31117) ?x31886) ?x31120) ?x31562) ?x31890) ?x31126)))
 (let ((?x31903 (- (- (+ (- (+ (- (+ ?x31892 ?x31893) ?x31129) ?x31896) ?x31132) ?x31899) ?x31135) ?x31902)))
 (= (- (- (- ?x31903 ?x31904) ?x31906) ?x31908) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19498 (* l_0_17_33 l_0_17_33)))
 (let ((?x19218 (* l_0_17_32 l_0_17_32)))
 (let ((?x30785 (* l_0_17_18 l_0_17_18)))
 (let ((?x30783 (* l_0_17_17 l_0_17_17)))
 (let ((?x8311 (+ ?x30783 ?x30785)))
 (= (- (- ?x8311 ?x19218) ?x19498) 0.0)))))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31619 (* ?x30828 l_0_17_35)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31617 (* ?x30822 l_0_17_34)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31615 (* ?x30861 l_0_17_20)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_19) ?x31615) ?x31617) ?x31619) 0.0))))))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31631 (* ?x30828 l_0_17_38)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31629 (* ?x30822 l_0_17_37)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31627 (* ?x30861 l_0_17_23)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_22) ?x31627) ?x31629) ?x31631) 0.0))))))))
(assert
 (let ((?x30828 (* 2.0 l_0_17_33)))
 (let ((?x31649 (* ?x30828 l_0_17_42)))
 (let ((?x30822 (* 2.0 l_0_17_32)))
 (let ((?x31647 (* ?x30822 l_0_17_41)))
 (let ((?x30861 (* 2.0 l_0_17_18)))
 (let ((?x31645 (* ?x30861 l_0_17_27)))
 (= (- (- (+ (* (* 2.0 l_0_17_17) l_0_17_26) ?x31645) ?x31647) ?x31649) 0.0))))))))
(assert
 (let ((?x31481 (* 2.0 l_0_17_36)))
 (let ((?x31690 (* ?x31481 l_0_17_39)))
 (let ((?x31478 (* 2.0 l_0_17_35)))
 (let ((?x31688 (* ?x31478 l_0_17_38)))
 (let ((?x31475 (* 2.0 l_0_17_34)))
 (let ((?x31686 (* ?x31475 l_0_17_37)))
 (let ((?x31518 (* 2.0 l_0_17_21)))
 (let ((?x31684 (* ?x31518 l_0_17_24)))
 (let ((?x31512 (* 2.0 l_0_17_20)))
 (let ((?x31682 (* ?x31512 l_0_17_23)))
 (let ((?x26202 (- (- (+ (+ (* (* 2.0 l_0_17_19) l_0_17_22) ?x31682) ?x31684) ?x31686) ?x31688)))
 (= (- ?x26202 ?x31690) 0.0)))))))))))))
(assert
 (let ((?x31481 (* 2.0 l_0_17_36)))
 (let ((?x31709 (* ?x31481 l_0_17_43)))
 (let ((?x31478 (* 2.0 l_0_17_35)))
 (let ((?x31707 (* ?x31478 l_0_17_42)))
 (let ((?x31475 (* 2.0 l_0_17_34)))
 (let ((?x31705 (* ?x31475 l_0_17_41)))
 (let ((?x31518 (* 2.0 l_0_17_21)))
 (let ((?x26028 (* ?x31518 l_0_17_28)))
 (let ((?x31512 (* 2.0 l_0_17_20)))
 (let ((?x14948 (* ?x31512 l_0_17_27)))
 (let ((?x26265 (- (- (+ (+ (* (* 2.0 l_0_17_19) l_0_17_26) ?x14948) ?x26028) ?x31705) ?x31707)))
 (= (- ?x26265 ?x31709) 0.0)))))))))))))
(assert
 (let ((?x13211 (* l_0_17_40 l_0_17_40)))
 (let ((?x14330 (* l_0_17_39 l_0_17_39)))
 (let ((?x25341 (* l_0_17_38 l_0_17_38)))
 (let ((?x25307 (* l_0_17_37 l_0_17_37)))
 (let ((?x31119 (* l_0_17_25 l_0_17_25)))
 (let ((?x31116 (* l_0_17_24 l_0_17_24)))
 (let ((?x26303 (+ (+ (+ (* l_0_17_22 l_0_17_22) (* l_0_17_23 l_0_17_23)) ?x31116) ?x31119)))
 (= (- (- (- (- ?x26303 ?x25307) ?x25341) ?x14330) ?x13211) 0.0)))))))))
(assert
 (let ((?x31766 (* 2.0 l_0_17_40)))
 (let ((?x31767 (* ?x31766 l_0_17_44)))
 (let ((?x31763 (* 2.0 l_0_17_39)))
 (let ((?x31764 (* ?x31763 l_0_17_43)))
 (let ((?x31760 (* 2.0 l_0_17_38)))
 (let ((?x31761 (* ?x31760 l_0_17_42)))
 (let ((?x31757 (* 2.0 l_0_17_37)))
 (let ((?x31758 (* ?x31757 l_0_17_41)))
 (let ((?x31754 (* 2.0 l_0_17_25)))
 (let ((?x31755 (* ?x31754 l_0_17_29)))
 (let ((?x31751 (* 2.0 l_0_17_24)))
 (let ((?x31752 (* ?x31751 l_0_17_28)))
 (let ((?x15001 (* 2.0 l_0_17_23)))
 (let ((?x6469 (* ?x15001 l_0_17_27)))
 (let ((?x31976 (- (+ (+ (+ (* (* 2.0 l_0_17_22) l_0_17_26) ?x6469) ?x31752) ?x31755) ?x31758)))
 (= (- (- (- ?x31976 ?x31761) ?x31764) ?x31767) 0.0)))))))))))))))))
(assert
 (let ((?x13425 (* l_0_17_45 l_0_17_45)))
 (let ((?x25560 (* l_0_17_44 l_0_17_44)))
 (let ((?x7255 (* l_0_17_43 l_0_17_43)))
 (let ((?x7257 (* l_0_17_42 l_0_17_42)))
 (let ((?x25555 (* l_0_17_41 l_0_17_41)))
 (let ((?x31236 (* l_0_17_30 l_0_17_30)))
 (let ((?x31233 (* l_0_17_29 l_0_17_29)))
 (let ((?x31230 (* l_0_17_28 l_0_17_28)))
 (let ((?x31992 (+ (+ (+ (* l_0_17_26 l_0_17_26) (* l_0_17_27 l_0_17_27)) ?x31230) ?x31233)))
 (= (- (- (- (- (- (+ ?x31992 ?x31236) ?x25555) ?x7257) ?x7255) ?x25560) ?x13425) 0.0)))))))))))
(assert
 (let ((?x31134 (* 4.0 l_0_17_40)))
 (let ((?x31899 (* ?x31134 l_0_17_44)))
 (let ((?x31131 (* 4.0 l_0_17_39)))
 (let ((?x31896 (* ?x31131 l_0_17_43)))
 (let ((?x31128 (* 4.0 l_0_17_38)))
 (let ((?x31893 (* ?x31128 l_0_17_42)))
 (let ((?x31125 (* 4.0 l_0_17_37)))
 (let ((?x31890 (* ?x31125 l_0_17_41)))
 (let ((?x30945 (* 4.0 l_0_17_36)))
 (let ((?x31570 (* ?x30945 l_0_17_43)))
 (let ((?x31012 (* 8.0 l_0_17_36)))
 (let ((?x31013 (* ?x31012 l_0_17_39)))
 (let ((?x30942 (* 4.0 l_0_17_35)))
 (let ((?x31567 (* ?x30942 l_0_17_42)))
 (let ((?x31009 (* 8.0 l_0_17_35)))
 (let ((?x31010 (* ?x31009 l_0_17_38)))
 (let ((?x30939 (* 4.0 l_0_17_34)))
 (let ((?x31564 (* ?x30939 l_0_17_41)))
 (let ((?x31006 (* 8.0 l_0_17_34)))
 (let ((?x31007 (* ?x31006 l_0_17_37)))
 (let ((?x31886 (* (* 4.0 l_0_17_25) l_0_17_29)))
 (let ((?x31882 (* (* 4.0 l_0_17_24) l_0_17_28)))
 (let ((?x20442 (* (* 4.0 l_0_17_23) l_0_17_27)))
 (let ((?x26120 (* (* 4.0 l_0_17_22) l_0_17_26)))
 (let ((?x31515 (* 4.0 l_0_17_21)))
 (let ((?x31559 (* ?x31515 l_0_17_28)))
 (let ((?x30997 (* 8.0 l_0_17_21)))
 (let ((?x30998 (* ?x30997 l_0_17_24)))
 (let ((?x31509 (* 4.0 l_0_17_20)))
 (let ((?x20207 (* ?x31509 l_0_17_27)))
 (let ((?x30994 (* 8.0 l_0_17_20)))
 (let ((?x30995 (* ?x30994 l_0_17_23)))
 (let ((?x31503 (* 4.0 l_0_17_19)))
 (let ((?x25870 (* ?x31503 l_0_17_26)))
 (let ((?x30991 (* 8.0 l_0_17_19)))
 (let ((?x30992 (* ?x30991 l_0_17_22)))
 (let ((?x32013 (+ (+ (- (+ (- (+ (- ?x30992 ?x25870) ?x30995) ?x20207) ?x30998) ?x31559) ?x26120) ?x20442)))
 (let ((?x32020 (- (+ (- (+ (- (+ (+ ?x32013 ?x31882) ?x31886) ?x31007) ?x31564) ?x31010) ?x31567) ?x31013)))
 (let ((?x32028 (- (- (- (- (- (+ ?x32020 ?x31570) ?x31890) ?x31893) ?x31896) ?x31899) (* (* 2.0 l_0_17_49) l_0_17_52))))
 (let ((?x32034 (- (- ?x32028 (* (* 2.0 l_0_17_50) l_0_17_53)) (* (* 2.0 l_0_17_51) l_0_17_54))))
 (= ?x32034 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x31012 (* 8.0 l_0_17_36)))
 (let ((?x31074 (* ?x31012 l_0_17_43)))
 (let ((?x31009 (* 8.0 l_0_17_35)))
 (let ((?x31072 (* ?x31009 l_0_17_42)))
 (let ((?x31006 (* 8.0 l_0_17_34)))
 (let ((?x31070 (* ?x31006 l_0_17_41)))
 (let ((?x31236 (* l_0_17_30 l_0_17_30)))
 (let ((?x32045 (* 2.0 ?x31236)))
 (let ((?x31233 (* l_0_17_29 l_0_17_29)))
 (let ((?x32043 (* 2.0 ?x31233)))
 (let ((?x31230 (* l_0_17_28 l_0_17_28)))
 (let ((?x32041 (* 2.0 ?x31230)))
 (let ((?x31227 (* l_0_17_27 l_0_17_27)))
 (let ((?x32039 (* 2.0 ?x31227)))
 (let ((?x31224 (* l_0_17_26 l_0_17_26)))
 (let ((?x32037 (* 2.0 ?x31224)))
 (let ((?x30997 (* 8.0 l_0_17_21)))
 (let ((?x31062 (* ?x30997 l_0_17_28)))
 (let ((?x30994 (* 8.0 l_0_17_20)))
 (let ((?x31060 (* ?x30994 l_0_17_27)))
 (let ((?x30991 (* 8.0 l_0_17_19)))
 (let ((?x31058 (* ?x30991 l_0_17_26)))
 (let ((?x32046 (+ (+ (+ (+ (+ (+ (+ ?x31058 ?x31060) ?x31062) ?x32037) ?x32039) ?x32041) ?x32043) ?x32045)))
 (let ((?x32052 (- (- (- (- ?x32046 ?x31070) ?x31072) ?x31074) (* (* 2.0 l_0_17_41) l_0_17_41))))
 (let ((?x32058 (- (- ?x32052 (* (* 2.0 l_0_17_42) l_0_17_42)) (* (* 2.0 l_0_17_43) l_0_17_43))))
 (let ((?x32064 (- (- ?x32058 (* (* 2.0 l_0_17_44) l_0_17_44)) (* (* 2.0 l_0_17_45) l_0_17_45))))
 (let ((?x32068 (- (- ?x32064 (* (* 2.0 l_0_17_49) l_0_17_56)) (* (* 2.0 l_0_17_50) l_0_17_57))))
 (= (- ?x32068 (* (* 2.0 l_0_17_51) l_0_17_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x13425 (* l_0_17_45 l_0_17_45)))
 (let ((?x26537 (* 2.0 ?x13425)))
 (let ((?x25560 (* l_0_17_44 l_0_17_44)))
 (let ((?x8927 (* 2.0 ?x25560)))
 (let ((?x7255 (* l_0_17_43 l_0_17_43)))
 (let ((?x8912 (* 2.0 ?x7255)))
 (let ((?x7257 (* l_0_17_42 l_0_17_42)))
 (let ((?x26549 (* 2.0 ?x7257)))
 (let ((?x25555 (* l_0_17_41 l_0_17_41)))
 (let ((?x8902 (* 2.0 ?x25555)))
 (let ((?x31179 (* (* 8.0 l_0_17_40) l_0_17_44)))
 (let ((?x31176 (* (* 8.0 l_0_17_39) l_0_17_43)))
 (let ((?x31173 (* (* 8.0 l_0_17_38) l_0_17_42)))
 (let ((?x31170 (* (* 8.0 l_0_17_37) l_0_17_41)))
 (let ((?x31163 (* (* 8.0 l_0_17_25) l_0_17_29)))
 (let ((?x31160 (* (* 8.0 l_0_17_24) l_0_17_28)))
 (let ((?x31157 (* (* 8.0 l_0_17_23) l_0_17_27)))
 (let ((?x31154 (* (* 8.0 l_0_17_22) l_0_17_26)))
 (let ((?x32090 (- (+ (+ (+ ?x31154 ?x31157) ?x31160) ?x31163) (* (* 2.0 l_0_17_26) l_0_17_26))))
 (let ((?x32096 (- (- ?x32090 (* (* 2.0 l_0_17_27) l_0_17_27)) (* (* 2.0 l_0_17_28) l_0_17_28))))
 (let ((?x32102 (- (- ?x32096 (* (* 2.0 l_0_17_29) l_0_17_29)) (* (* 2.0 l_0_17_30) l_0_17_30))))
 (let ((?x32109 (+ (+ (+ (- (- (- (- ?x32102 ?x31170) ?x31173) ?x31176) ?x31179) ?x8902) ?x26549) ?x8912)))
 (let ((?x32117 (- (- (+ (+ ?x32109 ?x8927) ?x26537) (* (* 2.0 l_0_17_52) l_0_17_56)) (* (* 2.0 l_0_17_53) l_0_17_57))))
 (let ((?x32123 (- (- ?x32117 (* (* 2.0 l_0_17_54) l_0_17_58)) (* (* 2.0 l_0_17_55) l_0_17_59))))
 (= ?x32123 0.0))))))))))))))))))))))))))
(assert
 (let ((?x26642 (* l_0_17_60 l_0_17_60)))
 (let ((?x26640 (* l_0_17_59 l_0_17_59)))
 (let ((?x7624 (* l_0_17_58 l_0_17_58)))
 (let ((?x20121 (* l_0_17_57 l_0_17_57)))
 (let ((?x7640 (* l_0_17_56 l_0_17_56)))
 (let ((?x31254 (* (* 4.0 l_0_17_45) l_0_17_45)))
 (let ((?x31251 (* (* 4.0 l_0_17_44) l_0_17_44)))
 (let ((?x31248 (* (* 4.0 l_0_17_43) l_0_17_43)))
 (let ((?x31245 (* (* 4.0 l_0_17_42) l_0_17_42)))
 (let ((?x31242 (* (* 4.0 l_0_17_41) l_0_17_41)))
 (let ((?x31236 (* l_0_17_30 l_0_17_30)))
 (let ((?x31237 (* 4.0 ?x31236)))
 (let ((?x31233 (* l_0_17_29 l_0_17_29)))
 (let ((?x31234 (* 4.0 ?x31233)))
 (let ((?x31230 (* l_0_17_28 l_0_17_28)))
 (let ((?x31231 (* 4.0 ?x31230)))
 (let ((?x31227 (* l_0_17_27 l_0_17_27)))
 (let ((?x31228 (* 4.0 ?x31227)))
 (let ((?x31224 (* l_0_17_26 l_0_17_26)))
 (let ((?x31225 (* 4.0 ?x31224)))
 (let ((?x26652 (- (- (- (+ (+ (+ (+ ?x31225 ?x31228) ?x31231) ?x31234) ?x31237) ?x31242) ?x31245) ?x31248)))
 (let ((?x26628 (- (- (- (- (- (- (- ?x26652 ?x31251) ?x31254) ?x7640) ?x20121) ?x7624) ?x26640) ?x26642)))
 (= ?x26628 0.0))))))))))))))))))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_16 0.0))
(assert
 (>= l_0_17_18 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_25 0.0))
(assert
 (>= l_0_17_30 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_33 0.0))
(assert
 (>= l_0_17_36 0.0))
(assert
 (>= l_0_17_40 0.0))
(assert
 (>= l_0_17_45 0.0))
(assert
 (>= l_0_17_46 0.0))
(assert
 (>= l_0_17_48 0.0))
(assert
 (>= l_0_17_51 0.0))
(assert
 (>= l_0_17_55 0.0))
(assert
 (>= l_0_17_60 0.0))
(assert
 (>= l_0_17_61 0.0))
(assert
 (>= l_0_17_63 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_70 0.0))
(assert
 (>= l_0_17_75 0.0))
(assert
 (>= l_0_17_76 0.0))
(assert
 (>= l_0_17_78 0.0))
(assert
 (>= l_0_17_81 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32167 (* ?x32166 l_0_18_31)))
 (let ((?x32163 (* l_0_18_16 l_0_18_16)))
 (let ((?x32164 (* 4.0 ?x32163)))
 (let ((?x32165 (+ (- (* (* 2.0 l_0_18_1) l_0_18_2) (* l_0_18_1 l_0_18_1)) ?x32164)))
 (let ((?x32174 (- (- (- ?x32165 ?x32167) (* (* 2.0 l_0_18_61) l_0_18_62)) (* (* 2.0 l_0_18_76) l_0_18_77))))
 (= (+ (- ?x32174 (* (* 2.0 l_0_18_91) l_0_18_92)) 4.0) 0.0))))))))
(assert
 (let ((?x32207 (* l_0_18_46 l_0_18_46)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32167 (* ?x32166 l_0_18_31)))
 (let ((?x32163 (* l_0_18_16 l_0_18_16)))
 (let ((?x32164 (* 4.0 ?x32163)))
 (let ((?x32204 (- (* (* 2.0 l_0_18_1) l_0_18_11) (* (* 2.0 l_0_18_101) l_0_18_91))))
 (let ((?x32210 (- (- (- (+ ?x32204 ?x32164) ?x32167) ?x32207) (* (* 2.0 l_0_18_61) l_0_18_71))))
 (= (+ (- ?x32210 (* (* 2.0 l_0_18_76) l_0_18_86)) 4.0) 0.0)))))))))
(assert
 (let ((?x32186 (* l_0_18_31 l_0_18_31)))
 (let ((?x32231 (* 2.0 ?x32186)))
 (let ((?x32227 (+ (- (* (* 2.0 _a_0_) _a_1_) (* 2.0 _a_1_)) (* (* 2.0 l_0_18_1) l_0_18_7))))
 (let ((?x32234 (- (+ (- ?x32227 (* (* 2.0 l_0_18_16) l_0_18_16)) ?x32231) (* (* 2.0 l_0_18_61) l_0_18_67))))
 (let ((?x32238 (- (- ?x32234 (* (* 2.0 l_0_18_76) l_0_18_82)) (* (* 2.0 l_0_18_91) l_0_18_97))))
 (= (- ?x32238 4.0) 0.0)))))))
(assert
 (let ((?x32295 (* l_0_18_96 l_0_18_96)))
 (let ((?x32293 (* l_0_18_95 l_0_18_95)))
 (let ((?x32291 (* l_0_18_94 l_0_18_94)))
 (let ((?x32289 (* l_0_18_81 l_0_18_81)))
 (let ((?x32287 (* l_0_18_80 l_0_18_80)))
 (let ((?x32285 (* l_0_18_79 l_0_18_79)))
 (let ((?x32283 (* l_0_18_66 l_0_18_66)))
 (let ((?x32281 (* l_0_18_65 l_0_18_65)))
 (let ((?x32279 (* l_0_18_64 l_0_18_64)))
 (let ((?x32186 (* l_0_18_31 l_0_18_31)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32267 (* ?x32166 l_0_18_34)))
 (let ((?x32268 (- (- (* (* 4.0 l_0_18_16) l_0_18_19) (* l_0_18_16 l_0_18_16)) ?x32267)))
 (let ((?x32275 (+ (+ (+ ?x32268 ?x32186) (* 1.0 (* l_0_18_4 l_0_18_4))) (* 1.0 (* l_0_18_5 l_0_18_5)))))
 (let ((?x32284 (- (- (- (+ ?x32275 (* 1.0 (* l_0_18_6 l_0_18_6))) ?x32279) ?x32281) ?x32283)))
 (let ((?x32297 (- (- (- (- (- (- (- ?x32284 ?x32285) ?x32287) ?x32289) ?x32291) ?x32293) ?x32295) 1.0)))
 (= ?x32297 0.0))))))))))))))))))
(assert
 (let ((?x32330 (* l_0_18_91 l_0_18_91)))
 (let ((?x32328 (* l_0_18_76 l_0_18_76)))
 (let ((?x32326 (* l_0_18_61 l_0_18_61)))
 (let ((?x32325 (+ (+ (* (- 2.0) _a_0_) (* _a_0_ _a_0_)) (* 1.0 (* l_0_18_1 l_0_18_1)))))
 (= (- (- (- ?x32325 ?x32326) ?x32328) ?x32330) 0.0))))))
(assert
 (let ((?x32377 (* l_0_18_99 l_0_18_99)))
 (let ((?x32375 (* l_0_18_98 l_0_18_98)))
 (let ((?x32373 (* l_0_18_97 l_0_18_97)))
 (let ((?x32368 (* l_0_18_85 l_0_18_85)))
 (let ((?x32366 (* l_0_18_84 l_0_18_84)))
 (let ((?x32364 (* l_0_18_83 l_0_18_83)))
 (let ((?x32362 (* l_0_18_82 l_0_18_82)))
 (let ((?x32357 (* l_0_18_70 l_0_18_70)))
 (let ((?x32352 (* l_0_18_69 l_0_18_69)))
 (let ((?x32350 (* l_0_18_68 l_0_18_68)))
 (let ((?x32348 (* l_0_18_67 l_0_18_67)))
 (let ((?x32186 (* l_0_18_31 l_0_18_31)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32345 (* ?x32166 l_0_18_37)))
 (let ((?x32163 (* l_0_18_16 l_0_18_16)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x32342 (* ?x32264 l_0_18_22)))
 (let ((?x32340 (* l_0_18_100 l_0_18_100)))
 (let ((?x32341 (- (+ (* _a_1_ _a_1_) (* 1.0 (* l_0_18_10 l_0_18_10))) ?x32340)))
 (let ((?x32353 (- (- (- (- (+ (+ (- ?x32341 ?x32342) ?x32163) ?x32345) ?x32186) ?x32348) ?x32350) ?x32352)))
 (let ((?x32361 (+ (- (+ ?x32353 (* 1.0 (* l_0_18_7 l_0_18_7))) ?x32357) (* 1.0 (* l_0_18_8 l_0_18_8)))))
 (let ((?x32372 (+ (- (- (- (- ?x32361 ?x32362) ?x32364) ?x32366) ?x32368) (* 1.0 (* l_0_18_9 l_0_18_9)))))
 (= (- (- (- ?x32372 ?x32373) ?x32375) ?x32377) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32163 (* l_0_18_16 l_0_18_16)))
 (let ((?x32247 (* 2.0 ?x32163)))
 (let ((?x32413 (- (+ (* (* 2.0 l_0_18_1) l_0_18_4) ?x32247) (* (* 2.0 l_0_18_31) l_0_18_31))))
 (let ((?x32417 (- (- ?x32413 (* (* 2.0 l_0_18_61) l_0_18_64)) (* (* 2.0 l_0_18_76) l_0_18_79))))
 (= (+ (- ?x32417 (* (* 2.0 l_0_18_91) l_0_18_94)) 2.0) 0.0))))))
(assert
 (let ((?x32458 (* l_0_18_93 l_0_18_93)))
 (let ((?x32456 (* l_0_18_92 l_0_18_92)))
 (let ((?x32454 (* l_0_18_78 l_0_18_78)))
 (let ((?x32452 (* l_0_18_77 l_0_18_77)))
 (let ((?x32450 (* l_0_18_63 l_0_18_63)))
 (let ((?x32448 (* l_0_18_62 l_0_18_62)))
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32446 (* ?x32445 l_0_18_32)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32437 (* ?x32436 l_0_18_17)))
 (let ((?x32441 (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_2) ?x32437) (* 1.0 (* l_0_18_2 l_0_18_2)))))
 (let ((?x32451 (- (- (- (+ ?x32441 (* 1.0 (* l_0_18_3 l_0_18_3))) ?x32446) ?x32448) ?x32450)))
 (= (- (- (- (- ?x32451 ?x32452) ?x32454) ?x32456) ?x32458) 0.0))))))))))))))
(assert
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32491 (* ?x32445 l_0_18_34)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32489 (* ?x32166 l_0_18_32)))
 (let ((?x32486 (* 2.0 l_0_18_3)))
 (let ((?x32487 (* ?x32486 l_0_18_5)))
 (let ((?x32483 (* 2.0 l_0_18_2)))
 (let ((?x32484 (* ?x32483 l_0_18_4)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32481 (* ?x32436 l_0_18_19)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x32479 (* ?x32264 l_0_18_17)))
 (let ((?x32488 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_1) l_0_18_4) ?x32479) ?x32481) ?x32484) ?x32487)))
 (let ((?x32498 (- (- (- (- ?x32488 ?x32489) ?x32491) (* (* 2.0 l_0_18_62) l_0_18_64)) (* (* 2.0 l_0_18_63) l_0_18_65))))
 (let ((?x32504 (- (- ?x32498 (* (* 2.0 l_0_18_77) l_0_18_79)) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x32510 (- (- ?x32504 (* (* 2.0 l_0_18_92) l_0_18_94)) (* (* 2.0 l_0_18_93) l_0_18_95))))
 (= ?x32510 0.0))))))))))))))))))
(assert
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32564 (* ?x32445 l_0_18_37)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32489 (* ?x32166 l_0_18_32)))
 (let ((?x32486 (* 2.0 l_0_18_3)))
 (let ((?x32561 (* ?x32486 l_0_18_8)))
 (let ((?x32483 (* 2.0 l_0_18_2)))
 (let ((?x32559 (* ?x32483 l_0_18_7)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32557 (* ?x32436 l_0_18_22)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x32479 (* ?x32264 l_0_18_17)))
 (let ((?x32562 (+ (+ (+ (- (* (* (- 2.0) l_0_18_1) l_0_18_7) ?x32479) ?x32557) ?x32559) ?x32561)))
 (let ((?x32569 (- (- (- (+ ?x32562 ?x32489) ?x32564) (* (* 2.0 l_0_18_62) l_0_18_67)) (* (* 2.0 l_0_18_63) l_0_18_68))))
 (let ((?x32573 (- (- ?x32569 (* (* 2.0 l_0_18_77) l_0_18_82)) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x32577 (- (- ?x32573 (* (* 2.0 l_0_18_92) l_0_18_97)) (* (* 2.0 l_0_18_93) l_0_18_98))))
 (= ?x32577 0.0))))))))))))))))))
(assert
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32609 (* ?x32445 l_0_18_41)))
 (let ((?x32446 (* ?x32445 l_0_18_32)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32606 (* ?x32436 l_0_18_26)))
 (let ((?x32437 (* ?x32436 l_0_18_17)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32603 (* ?x32602 l_0_18_3)))
 (let ((?x32595 (- (* (* (- 2.0) l_0_18_1) l_0_18_11) (* (* 2.0 l_0_18_101) l_0_18_92))))
 (let ((?x32601 (+ (- ?x32595 (* (* 2.0 l_0_18_102) l_0_18_93)) (* (* 2.0 l_0_18_11) l_0_18_2))))
 (let ((?x32613 (- (- (- (+ (+ (+ ?x32601 ?x32603) ?x32437) ?x32606) ?x32446) ?x32609) (* (* 2.0 l_0_18_46) l_0_18_47))))
 (let ((?x32617 (- (- ?x32613 (* (* 2.0 l_0_18_62) l_0_18_71)) (* (* 2.0 l_0_18_63) l_0_18_72))))
 (let ((?x32621 (- (- ?x32617 (* (* 2.0 l_0_18_77) l_0_18_86)) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (= ?x32621 0.0)))))))))))))))
(assert
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32651 (* ?x32650 l_0_18_33)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32648 (* ?x32647 l_0_18_32)))
 (let ((?x32442 (* l_0_18_3 l_0_18_3)))
 (let ((?x32439 (* l_0_18_2 l_0_18_2)))
 (let ((?x27006 (* l_0_18_18 l_0_18_18)))
 (let ((?x32643 (* 4.0 ?x27006)))
 (let ((?x21315 (* l_0_18_17 l_0_18_17)))
 (let ((?x21310 (* 4.0 ?x21315)))
 (let ((?x32644 (+ ?x21310 ?x32643)))
 (= (- (- (- (- ?x32644 ?x32439) ?x32442) ?x32648) ?x32651) 0.0)))))))))))))
(assert
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32669 (* ?x32668 l_0_18_35)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32663 (* ?x32662 l_0_18_34)))
 (let ((?x32486 (* 2.0 l_0_18_3)))
 (let ((?x32487 (* ?x32486 l_0_18_5)))
 (let ((?x32483 (* 2.0 l_0_18_2)))
 (let ((?x32484 (* ?x32483 l_0_18_4)))
 (let ((?x27006 (* l_0_18_18 l_0_18_18)))
 (let ((?x32658 (* 2.0 ?x27006)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32656 (* ?x32655 l_0_18_20)))
 (let ((?x21315 (* l_0_18_17 l_0_18_17)))
 (let ((?x21320 (* 2.0 ?x21315)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x27060 (* ?x20541 l_0_18_19)))
 (let ((?x32667 (- (- (- (- (+ (+ (+ ?x27060 ?x21320) ?x32656) ?x32658) ?x32484) ?x32487) ?x32663) (* (* 2.0 l_0_18_32) l_0_18_32))))
 (= (- (- ?x32667 ?x32669) (* (* 2.0 l_0_18_33) l_0_18_33)) 0.0)))))))))))))))))))
(assert
 (let ((?x27069 (* l_0_18_33 l_0_18_33)))
 (let ((?x9792 (* 2.0 ?x27069)))
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32693 (* ?x32668 l_0_18_38)))
 (let ((?x9713 (* l_0_18_32 l_0_18_32)))
 (let ((?x27095 (* 2.0 ?x9713)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32690 (* ?x32662 l_0_18_37)))
 (let ((?x32486 (* 2.0 l_0_18_3)))
 (let ((?x32561 (* ?x32486 l_0_18_8)))
 (let ((?x32483 (* 2.0 l_0_18_2)))
 (let ((?x32559 (* ?x32483 l_0_18_7)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32683 (* ?x32655 l_0_18_23)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x21311 (* ?x20541 l_0_18_22)))
 (let ((?x32687 (- (+ (- ?x21311 (* (* 2.0 l_0_18_17) l_0_18_17)) ?x32683) (* (* 2.0 l_0_18_18) l_0_18_18))))
 (= (+ (- (+ (- (- (- ?x32687 ?x32559) ?x32561) ?x32690) ?x27095) ?x32693) ?x9792) 0.0)))))))))))))))))))
(assert
 (let ((?x32718 (* l_0_18_48 l_0_18_48)))
 (let ((?x32716 (* l_0_18_47 l_0_18_47)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32651 (* ?x32650 l_0_18_33)))
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32713 (* ?x32668 l_0_18_42)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32648 (* ?x32647 l_0_18_32)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32710 (* ?x32662 l_0_18_41)))
 (let ((?x27006 (* l_0_18_18 l_0_18_18)))
 (let ((?x32643 (* 4.0 ?x27006)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32707 (* ?x32655 l_0_18_27)))
 (let ((?x21315 (* l_0_18_17 l_0_18_17)))
 (let ((?x21310 (* 4.0 ?x21315)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x21356 (* ?x20541 l_0_18_26)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32603 (* ?x32602 l_0_18_3)))
 (let ((?x32708 (+ (+ (+ (- (* (* (- 2.0) l_0_18_11) l_0_18_2) ?x32603) ?x21356) ?x21310) ?x32707)))
 (let ((?x32719 (- (- (- (- (- (- (+ ?x32708 ?x32643) ?x32710) ?x32648) ?x32713) ?x32651) ?x32716) ?x32718)))
 (= ?x32719 0.0))))))))))))))))))))))))
(assert
 (let ((?x32276 (* l_0_18_6 l_0_18_6)))
 (let ((?x32273 (* l_0_18_5 l_0_18_5)))
 (let ((?x32270 (* l_0_18_4 l_0_18_4)))
 (let ((?x32761 (* 4.0 l_0_18_36)))
 (let ((?x32762 (* ?x32761 l_0_18_36)))
 (let ((?x32758 (* 4.0 l_0_18_35)))
 (let ((?x32759 (* ?x32758 l_0_18_35)))
 (let ((?x32755 (* 4.0 l_0_18_34)))
 (let ((?x32756 (* ?x32755 l_0_18_34)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32753 (* ?x32650 l_0_18_35)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32751 (* ?x32647 l_0_18_34)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x32749 (* ?x32411 l_0_18_32)))
 (let ((?x32746 (* l_0_18_21 l_0_18_21)))
 (let ((?x32747 (* 4.0 ?x32746)))
 (let ((?x32743 (* l_0_18_20 l_0_18_20)))
 (let ((?x32744 (* 4.0 ?x32743)))
 (let ((?x32740 (* l_0_18_19 l_0_18_19)))
 (let ((?x32741 (* 4.0 ?x32740)))
 (let ((?x32737 (* 4.0 l_0_18_18)))
 (let ((?x32738 (* ?x32737 l_0_18_20)))
 (let ((?x32736 (+ (* (* (- 2.0) l_0_18_16) l_0_18_17) (* (* 4.0 l_0_18_17) l_0_18_19))))
 (let ((?x32754 (- (- (+ (+ (+ (+ (+ ?x32736 ?x32738) ?x32741) ?x32744) ?x32747) ?x32749) ?x32751) ?x32753)))
 (= (- (- (- (- (- (- ?x32754 ?x32756) ?x32759) ?x32762) ?x32270) ?x32273) ?x32276) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x32819 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x32816 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x32813 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x32809 (* 8.0 l_0_18_36)))
 (let ((?x32810 (* ?x32809 l_0_18_39)))
 (let ((?x32806 (* 8.0 l_0_18_35)))
 (let ((?x32807 (* ?x32806 l_0_18_38)))
 (let ((?x32803 (* 8.0 l_0_18_34)))
 (let ((?x32804 (* ?x32803 l_0_18_37)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32801 (* ?x32650 l_0_18_38)))
 (let ((?x32753 (* ?x32650 l_0_18_35)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32798 (* ?x32647 l_0_18_37)))
 (let ((?x32751 (* ?x32647 l_0_18_34)))
 (let ((?x32794 (* 8.0 l_0_18_21)))
 (let ((?x32795 (* ?x32794 l_0_18_24)))
 (let ((?x32791 (* 8.0 l_0_18_20)))
 (let ((?x32792 (* ?x32791 l_0_18_23)))
 (let ((?x32788 (* 8.0 l_0_18_19)))
 (let ((?x32789 (* ?x32788 l_0_18_22)))
 (let ((?x32737 (* 4.0 l_0_18_18)))
 (let ((?x32786 (* ?x32737 l_0_18_23)))
 (let ((?x32738 (* ?x32737 l_0_18_20)))
 (let ((?x32734 (* 4.0 l_0_18_17)))
 (let ((?x32783 (* ?x32734 l_0_18_22)))
 (let ((?x32790 (+ (+ (- (+ (* (* (- 4.0) l_0_18_17) l_0_18_19) ?x32783) ?x32738) ?x32786) ?x32789)))
 (let ((?x32805 (- (- (+ (- (+ (+ (+ ?x32790 ?x32792) ?x32795) ?x32751) ?x32798) ?x32753) ?x32801) ?x32804)))
 (= (- (- (- (- (- ?x32805 ?x32807) ?x32810) ?x32813) ?x32816) ?x32819) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x32809 (* 8.0 l_0_18_36)))
 (let ((?x32890 (* ?x32809 l_0_18_43)))
 (let ((?x32806 (* 8.0 l_0_18_35)))
 (let ((?x32888 (* ?x32806 l_0_18_42)))
 (let ((?x32803 (* 8.0 l_0_18_34)))
 (let ((?x32886 (* ?x32803 l_0_18_41)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32884 (* ?x32650 l_0_18_42)))
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32669 (* ?x32668 l_0_18_35)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32881 (* ?x32647 l_0_18_41)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32663 (* ?x32662 l_0_18_34)))
 (let ((?x32794 (* 8.0 l_0_18_21)))
 (let ((?x32878 (* ?x32794 l_0_18_28)))
 (let ((?x32791 (* 8.0 l_0_18_20)))
 (let ((?x32876 (* ?x32791 l_0_18_27)))
 (let ((?x32788 (* 8.0 l_0_18_19)))
 (let ((?x32874 (* ?x32788 l_0_18_26)))
 (let ((?x32737 (* 4.0 l_0_18_18)))
 (let ((?x32872 (* ?x32737 l_0_18_27)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32656 (* ?x32655 l_0_18_20)))
 (let ((?x32734 (* 4.0 l_0_18_17)))
 (let ((?x32869 (* ?x32734 l_0_18_26)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x27060 (* ?x20541 l_0_18_19)))
 (let ((?x32865 (* 2.0 l_0_18_13)))
 (let ((?x32866 (* ?x32865 l_0_18_6)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32863 (* ?x32602 l_0_18_5)))
 (let ((?x32870 (+ (+ (- (- (* (* (- 2.0) l_0_18_11) l_0_18_4) ?x32863) ?x32866) ?x27060) ?x32869)))
 (let ((?x32882 (- (- (+ (+ (+ (+ (+ ?x32870 ?x32656) ?x32872) ?x32874) ?x32876) ?x32878) ?x32663) ?x32881)))
 (let ((?x32894 (- (- (- (- (- (- ?x32882 ?x32669) ?x32884) ?x32886) ?x32888) ?x32890) (* (* 2.0 l_0_18_47) l_0_18_49))))
 (= (- ?x32894 (* (* 2.0 l_0_18_48) l_0_18_50)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32370 (* l_0_18_9 l_0_18_9)))
 (let ((?x32359 (* l_0_18_8 l_0_18_8)))
 (let ((?x32354 (* l_0_18_7 l_0_18_7)))
 (let ((?x32948 (* 4.0 l_0_18_40)))
 (let ((?x32949 (* ?x32948 l_0_18_40)))
 (let ((?x32945 (* 4.0 l_0_18_39)))
 (let ((?x32946 (* ?x32945 l_0_18_39)))
 (let ((?x32942 (* 4.0 l_0_18_38)))
 (let ((?x32943 (* ?x32942 l_0_18_38)))
 (let ((?x32939 (* 4.0 l_0_18_37)))
 (let ((?x32940 (* ?x32939 l_0_18_37)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32801 (* ?x32650 l_0_18_38)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32798 (* ?x32647 l_0_18_37)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x32749 (* ?x32411 l_0_18_32)))
 (let ((?x32933 (* l_0_18_25 l_0_18_25)))
 (let ((?x32934 (* 4.0 ?x32933)))
 (let ((?x32930 (* l_0_18_24 l_0_18_24)))
 (let ((?x32931 (* 4.0 ?x32930)))
 (let ((?x32927 (* l_0_18_23 l_0_18_23)))
 (let ((?x32928 (* 4.0 ?x32927)))
 (let ((?x32924 (* l_0_18_22 l_0_18_22)))
 (let ((?x32925 (* 4.0 ?x32924)))
 (let ((?x32737 (* 4.0 l_0_18_18)))
 (let ((?x32786 (* ?x32737 l_0_18_23)))
 (let ((?x32734 (* 4.0 l_0_18_17)))
 (let ((?x32783 (* ?x32734 l_0_18_22)))
 (let ((?x27410 (+ (* (- l_0_18_10) l_0_18_10) (* (* 2.0 l_0_18_16) l_0_18_17))))
 (let ((?x32936 (- (+ (+ (+ (+ (- (- ?x27410 ?x32783) ?x32786) ?x32925) ?x32928) ?x32931) ?x32934) ?x32749)))
 (let ((?x32951 (- (- (- (- (- (+ (+ ?x32936 ?x32798) ?x32801) ?x32940) ?x32943) ?x32946) ?x32949) ?x32354)))
 (= (- (- ?x32951 ?x32359) ?x32370) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33012 (* (* 8.0 l_0_18_40) l_0_18_44)))
 (let ((?x33009 (* (* 8.0 l_0_18_39) l_0_18_43)))
 (let ((?x33006 (* (* 8.0 l_0_18_38) l_0_18_42)))
 (let ((?x33003 (* (* 8.0 l_0_18_37) l_0_18_41)))
 (let ((?x32650 (* 4.0 l_0_18_33)))
 (let ((?x32884 (* ?x32650 l_0_18_42)))
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32693 (* ?x32668 l_0_18_38)))
 (let ((?x32647 (* 4.0 l_0_18_32)))
 (let ((?x32881 (* ?x32647 l_0_18_41)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32690 (* ?x32662 l_0_18_37)))
 (let ((?x32996 (* (* 8.0 l_0_18_25) l_0_18_29)))
 (let ((?x32993 (* (* 8.0 l_0_18_24) l_0_18_28)))
 (let ((?x32990 (* (* 8.0 l_0_18_23) l_0_18_27)))
 (let ((?x32987 (* (* 8.0 l_0_18_22) l_0_18_26)))
 (let ((?x32737 (* 4.0 l_0_18_18)))
 (let ((?x32872 (* ?x32737 l_0_18_27)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32683 (* ?x32655 l_0_18_23)))
 (let ((?x32734 (* 4.0 l_0_18_17)))
 (let ((?x32869 (* ?x32734 l_0_18_26)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x21311 (* ?x20541 l_0_18_22)))
 (let ((?x32865 (* 2.0 l_0_18_13)))
 (let ((?x32980 (* ?x32865 l_0_18_9)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32978 (* ?x32602 l_0_18_8)))
 (let ((?x32599 (* 2.0 l_0_18_11)))
 (let ((?x32976 (* ?x32599 l_0_18_7)))
 (let ((?x32982 (+ (- (- (- (* (* (- 2.0) l_0_18_10) l_0_18_14) ?x32976) ?x32978) ?x32980) ?x21311)))
 (let ((?x32997 (+ (+ (+ (+ (- (+ (- ?x32982 ?x32869) ?x32683) ?x32872) ?x32987) ?x32990) ?x32993) ?x32996)))
 (let ((?x33010 (- (- (- (+ (- (+ (- ?x32997 ?x32690) ?x32881) ?x32693) ?x32884) ?x33003) ?x33006) ?x33009)))
 (let ((?x33017 (- (- (- ?x33010 ?x33012) (* (* 2.0 l_0_18_47) l_0_18_52)) (* (* 2.0 l_0_18_48) l_0_18_53))))
 (= ?x33017 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x33100 (* (* 4.0 l_0_18_45) l_0_18_45)))
 (let ((?x33097 (* (* 4.0 l_0_18_44) l_0_18_44)))
 (let ((?x33094 (* (* 4.0 l_0_18_43) l_0_18_43)))
 (let ((?x33091 (* (* 4.0 l_0_18_42) l_0_18_42)))
 (let ((?x33088 (* (* 4.0 l_0_18_41) l_0_18_41)))
 (let ((?x32668 (* 8.0 l_0_18_33)))
 (let ((?x32713 (* ?x32668 l_0_18_42)))
 (let ((?x32662 (* 8.0 l_0_18_32)))
 (let ((?x32710 (* ?x32662 l_0_18_41)))
 (let ((?x33082 (* l_0_18_30 l_0_18_30)))
 (let ((?x33083 (* 4.0 ?x33082)))
 (let ((?x33079 (* l_0_18_29 l_0_18_29)))
 (let ((?x33080 (* 4.0 ?x33079)))
 (let ((?x33076 (* l_0_18_28 l_0_18_28)))
 (let ((?x33077 (* 4.0 ?x33076)))
 (let ((?x33073 (* l_0_18_27 l_0_18_27)))
 (let ((?x33074 (* 4.0 ?x33073)))
 (let ((?x33070 (* l_0_18_26 l_0_18_26)))
 (let ((?x33071 (* 4.0 ?x33070)))
 (let ((?x32655 (* 8.0 l_0_18_18)))
 (let ((?x32707 (* ?x32655 l_0_18_27)))
 (let ((?x20541 (* 8.0 l_0_18_17)))
 (let ((?x21356 (* ?x20541 l_0_18_26)))
 (let ((?x33066 (* l_0_18_15 l_0_18_15)))
 (let ((?x33064 (* l_0_18_14 l_0_18_14)))
 (let ((?x33062 (* l_0_18_13 l_0_18_13)))
 (let ((?x33063 (- (- (* (- l_0_18_11) l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x33062)))
 (let ((?x33078 (+ (+ (+ (+ (+ (- (- ?x33063 ?x33064) ?x33066) ?x21356) ?x32707) ?x33071) ?x33074) ?x33077)))
 (let ((?x33095 (- (- (- (- (- (+ (+ ?x33078 ?x33080) ?x33083) ?x32710) ?x32713) ?x33088) ?x33091) ?x33094)))
 (let ((?x33105 (- (- (- (- ?x33095 ?x33097) ?x33100) (* (* 2.0 l_0_18_47) l_0_18_56)) (* (* 2.0 l_0_18_48) l_0_18_57))))
 (= ?x33105 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x32819 (* (* 2.0 l_0_18_6) l_0_18_9)))
 (let ((?x32816 (* (* 2.0 l_0_18_5) l_0_18_8)))
 (let ((?x32813 (* (* 2.0 l_0_18_4) l_0_18_7)))
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x32345 (* ?x32166 l_0_18_37)))
 (let ((?x32267 (* ?x32166 l_0_18_34)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x32342 (* ?x32264 l_0_18_22)))
 (let ((?x33140 (+ (- (+ (+ (* (* (- 4.0) l_0_18_16) l_0_18_19) ?x32342) ?x32267) ?x32345) ?x32813)))
 (let ((?x33148 (- (- (+ (+ ?x33140 ?x32816) ?x32819) (* (* 2.0 l_0_18_64) l_0_18_67)) (* (* 2.0 l_0_18_65) l_0_18_68))))
 (let ((?x33154 (- (- ?x33148 (* (* 2.0 l_0_18_66) l_0_18_69)) (* (* 2.0 l_0_18_79) l_0_18_82))))
 (let ((?x33160 (- (- ?x33154 (* (* 2.0 l_0_18_80) l_0_18_83)) (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x33166 (- (- ?x33160 (* (* 2.0 l_0_18_94) l_0_18_97)) (* (* 2.0 l_0_18_95) l_0_18_98))))
 (= (- ?x33166 (* (* 2.0 l_0_18_96) l_0_18_99)) 0.0)))))))))))))))
(assert
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x33214 (* ?x32166 l_0_18_41)))
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32491 (* ?x32445 l_0_18_34)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x33211 (* ?x32264 l_0_18_26)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32481 (* ?x32436 l_0_18_19)))
 (let ((?x32865 (* 2.0 l_0_18_13)))
 (let ((?x32866 (* ?x32865 l_0_18_6)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32863 (* ?x32602 l_0_18_5)))
 (let ((?x33202 (- (* (* (- 2.0) l_0_18_101) l_0_18_94) (* (* 2.0 l_0_18_102) l_0_18_95))))
 (let ((?x33207 (+ (- ?x33202 (* (* 2.0 l_0_18_103) l_0_18_96)) (* (* 2.0 l_0_18_11) l_0_18_4))))
 (let ((?x33217 (- (- (- (+ (+ (+ (+ ?x33207 ?x32863) ?x32866) ?x32481) ?x33211) ?x32491) ?x33214) (* (* 2.0 l_0_18_46) l_0_18_49))))
 (let ((?x33221 (- (- ?x33217 (* (* 2.0 l_0_18_64) l_0_18_71)) (* (* 2.0 l_0_18_65) l_0_18_72))))
 (let ((?x33225 (- (- ?x33221 (* (* 2.0 l_0_18_66) l_0_18_73)) (* (* 2.0 l_0_18_79) l_0_18_86))))
 (let ((?x33229 (- (- ?x33225 (* (* 2.0 l_0_18_80) l_0_18_87)) (* (* 2.0 l_0_18_81) l_0_18_88))))
 (= ?x33229 0.0))))))))))))))))))))
(assert
 (let ((?x32166 (* 4.0 l_0_18_31)))
 (let ((?x33214 (* ?x32166 l_0_18_41)))
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32564 (* ?x32445 l_0_18_37)))
 (let ((?x32264 (* 4.0 l_0_18_16)))
 (let ((?x33211 (* ?x32264 l_0_18_26)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32557 (* ?x32436 l_0_18_22)))
 (let ((?x32865 (* 2.0 l_0_18_13)))
 (let ((?x32980 (* ?x32865 l_0_18_9)))
 (let ((?x32602 (* 2.0 l_0_18_12)))
 (let ((?x32978 (* ?x32602 l_0_18_8)))
 (let ((?x32599 (* 2.0 l_0_18_11)))
 (let ((?x32976 (* ?x32599 l_0_18_7)))
 (let ((?x33246 (- (* (* 2.0 l_0_18_10) l_0_18_14) (* (* 2.0 l_0_18_100) l_0_18_104))))
 (let ((?x33250 (- (- ?x33246 (* (* 2.0 l_0_18_101) l_0_18_97)) (* (* 2.0 l_0_18_102) l_0_18_98))))
 (let ((?x33255 (+ (+ (+ (- ?x33250 (* (* 2.0 l_0_18_103) l_0_18_99)) ?x32976) ?x32978) ?x32980)))
 (let ((?x33261 (- (+ (- (- (+ ?x33255 ?x32557) ?x33211) ?x32564) ?x33214) (* (* 2.0 l_0_18_46) l_0_18_52))))
 (let ((?x33267 (- (- ?x33261 (* (* 2.0 l_0_18_67) l_0_18_71)) (* (* 2.0 l_0_18_68) l_0_18_72))))
 (let ((?x33273 (- (- ?x33267 (* (* 2.0 l_0_18_69) l_0_18_73)) (* (* 2.0 l_0_18_70) l_0_18_74))))
 (let ((?x33279 (- (- ?x33273 (* (* 2.0 l_0_18_82) l_0_18_86)) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x33285 (- (- ?x33279 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (= ?x33285 0.0))))))))))))))))))))))))
(assert
 (let ((?x33355 (* l_0_18_90 l_0_18_90)))
 (let ((?x33353 (* l_0_18_89 l_0_18_89)))
 (let ((?x33351 (* l_0_18_88 l_0_18_88)))
 (let ((?x33349 (* l_0_18_87 l_0_18_87)))
 (let ((?x33347 (* l_0_18_86 l_0_18_86)))
 (let ((?x33345 (* l_0_18_75 l_0_18_75)))
 (let ((?x33343 (* l_0_18_74 l_0_18_74)))
 (let ((?x33341 (* l_0_18_73 l_0_18_73)))
 (let ((?x33339 (* l_0_18_72 l_0_18_72)))
 (let ((?x33337 (* l_0_18_71 l_0_18_71)))
 (let ((?x32445 (* 8.0 l_0_18_31)))
 (let ((?x32609 (* ?x32445 l_0_18_41)))
 (let ((?x32436 (* 8.0 l_0_18_16)))
 (let ((?x32606 (* ?x32436 l_0_18_26)))
 (let ((?x33321 (* l_0_18_105 l_0_18_105)))
 (let ((?x33319 (* l_0_18_104 l_0_18_104)))
 (let ((?x33317 (* l_0_18_103 l_0_18_103)))
 (let ((?x33318 (- (- (* (- l_0_18_101) l_0_18_101) (* l_0_18_102 l_0_18_102)) ?x33317)))
 (let ((?x33326 (+ (+ (- (- ?x33318 ?x33319) ?x33321) (* 1.0 (* l_0_18_11 l_0_18_11))) (* 1.0 (* l_0_18_12 l_0_18_12)))))
 (let ((?x33330 (+ (+ ?x33326 (* 1.0 (* l_0_18_13 l_0_18_13))) (* 1.0 (* l_0_18_14 l_0_18_14)))))
 (let ((?x33336 (- (- (+ (+ ?x33330 (* 1.0 (* l_0_18_15 l_0_18_15))) ?x32606) ?x32609) (* (* 2.0 l_0_18_46) l_0_18_56))))
 (let ((?x33350 (- (- (- (- (- (- (- ?x33336 ?x33337) ?x33339) ?x33341) ?x33343) ?x33345) ?x33347) ?x33349)))
 (= (- (- (- ?x33350 ?x33351) ?x33353) ?x33355) 0.0))))))))))))))))))))))))
(assert
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33394 (* ?x32411 l_0_18_34)))
 (let ((?x32746 (* l_0_18_21 l_0_18_21)))
 (let ((?x33392 (* 2.0 ?x32746)))
 (let ((?x32743 (* l_0_18_20 l_0_18_20)))
 (let ((?x33390 (* 2.0 ?x32743)))
 (let ((?x32740 (* l_0_18_19 l_0_18_19)))
 (let ((?x33388 (* 2.0 ?x32740)))
 (let ((?x33395 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_16) l_0_18_19) ?x33388) ?x33390) ?x33392) ?x33394)))
 (let ((?x33401 (- (- ?x33395 (* (* 2.0 l_0_18_34) l_0_18_34)) (* (* 2.0 l_0_18_35) l_0_18_35))))
 (= (- ?x33401 (* (* 2.0 l_0_18_36) l_0_18_36)) 0.0))))))))))))
(assert
 (let ((?x21408 (* l_0_18_36 l_0_18_36)))
 (let ((?x11068 (* 2.0 ?x21408)))
 (let ((?x32761 (* 4.0 l_0_18_36)))
 (let ((?x33451 (* ?x32761 l_0_18_39)))
 (let ((?x27216 (* l_0_18_35 l_0_18_35)))
 (let ((?x33410 (* 2.0 ?x27216)))
 (let ((?x32758 (* 4.0 l_0_18_35)))
 (let ((?x33448 (* ?x32758 l_0_18_38)))
 (let ((?x27222 (* l_0_18_34 l_0_18_34)))
 (let ((?x10012 (* 2.0 ?x27222)))
 (let ((?x32755 (* 4.0 l_0_18_34)))
 (let ((?x33445 (* ?x32755 l_0_18_37)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33443 (* ?x32411 l_0_18_37)))
 (let ((?x33437 (* 4.0 l_0_18_21)))
 (let ((?x33438 (* ?x33437 l_0_18_24)))
 (let ((?x33431 (* 4.0 l_0_18_20)))
 (let ((?x33432 (* ?x33431 l_0_18_23)))
 (let ((?x33425 (* 4.0 l_0_18_19)))
 (let ((?x33426 (* ?x33425 l_0_18_22)))
 (let ((?x33430 (- (+ (* (* (- 2.0) l_0_18_16) l_0_18_22) ?x33426) (* (* 2.0 l_0_18_19) l_0_18_19))))
 (let ((?x33442 (- (+ (- (+ ?x33430 ?x33432) (* (* 2.0 l_0_18_20) l_0_18_20)) ?x33438) (* (* 2.0 l_0_18_21) l_0_18_21))))
 (let ((?x33453 (+ (- (+ (- (+ (- (+ ?x33442 ?x33443) ?x33445) ?x10012) ?x33448) ?x33410) ?x33451) ?x11068)))
 (= ?x33453 0.0)))))))))))))))))))))))))
(assert
 (let ((?x33508 (* l_0_18_51 l_0_18_51)))
 (let ((?x33506 (* l_0_18_50 l_0_18_50)))
 (let ((?x33504 (* l_0_18_49 l_0_18_49)))
 (let ((?x32761 (* 4.0 l_0_18_36)))
 (let ((?x32762 (* ?x32761 l_0_18_36)))
 (let ((?x33501 (* ?x32761 l_0_18_43)))
 (let ((?x32758 (* 4.0 l_0_18_35)))
 (let ((?x32759 (* ?x32758 l_0_18_35)))
 (let ((?x33498 (* ?x32758 l_0_18_42)))
 (let ((?x32755 (* 4.0 l_0_18_34)))
 (let ((?x32756 (* ?x32755 l_0_18_34)))
 (let ((?x33495 (* ?x32755 l_0_18_41)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33493 (* ?x32411 l_0_18_41)))
 (let ((?x32746 (* l_0_18_21 l_0_18_21)))
 (let ((?x32747 (* 4.0 ?x32746)))
 (let ((?x33437 (* 4.0 l_0_18_21)))
 (let ((?x33490 (* ?x33437 l_0_18_28)))
 (let ((?x32743 (* l_0_18_20 l_0_18_20)))
 (let ((?x32744 (* 4.0 ?x32743)))
 (let ((?x33431 (* 4.0 l_0_18_20)))
 (let ((?x33487 (* ?x33431 l_0_18_27)))
 (let ((?x32740 (* l_0_18_19 l_0_18_19)))
 (let ((?x32741 (* 4.0 ?x32740)))
 (let ((?x33425 (* 4.0 l_0_18_19)))
 (let ((?x33484 (* ?x33425 l_0_18_26)))
 (let ((?x33489 (+ (+ (+ (+ (* (* (- 2.0) l_0_18_16) l_0_18_26) ?x33484) ?x32741) ?x33487) ?x32744)))
 (let ((?x33500 (- (- (- (- (+ (+ (+ ?x33489 ?x33490) ?x32747) ?x33493) ?x33495) ?x32756) ?x33498) ?x32759)))
 (= (- (- (- (- (- ?x33500 ?x33501) ?x32762) ?x33504) ?x33506) ?x33508) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x27069 (* l_0_18_33 l_0_18_33)))
 (let ((?x9713 (* l_0_18_32 l_0_18_32)))
 (let ((?x16768 (+ (- (* (- l_0_18_17) l_0_18_17) (* l_0_18_18 l_0_18_18)) ?x9713)))
 (= (+ ?x16768 ?x27069) 0.0)))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33529 (* ?x32671 l_0_18_35)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33527 (* ?x32665 l_0_18_34)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x28007 (* ?x32685 l_0_18_20)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_19) ?x28007) ?x33527) ?x33529) 0.0))))))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33547 (* ?x32671 l_0_18_38)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33545 (* ?x32665 l_0_18_37)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x33543 (* ?x32685 l_0_18_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_22) ?x33543) ?x33545) ?x33547) 0.0))))))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33565 (* ?x32671 l_0_18_42)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33563 (* ?x32665 l_0_18_41)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x33561 (* ?x32685 l_0_18_27)))
 (= (+ (+ (- (* (* (- 2.0) l_0_18_17) l_0_18_26) ?x33561) ?x33563) ?x33565) 0.0))))))))
(assert
 (let ((?x21408 (* l_0_18_36 l_0_18_36)))
 (let ((?x27216 (* l_0_18_35 l_0_18_35)))
 (let ((?x27222 (* l_0_18_34 l_0_18_34)))
 (let ((?x32746 (* l_0_18_21 l_0_18_21)))
 (let ((?x33581 (- (- (* (- l_0_18_19) l_0_18_19) (* l_0_18_20 l_0_18_20)) ?x32746)))
 (= (+ (+ (+ ?x33581 ?x27222) ?x27216) ?x21408) 0.0)))))))
(assert
 (let ((?x33402 (* 2.0 l_0_18_36)))
 (let ((?x33605 (* ?x33402 l_0_18_39)))
 (let ((?x33399 (* 2.0 l_0_18_35)))
 (let ((?x33603 (* ?x33399 l_0_18_38)))
 (let ((?x33396 (* 2.0 l_0_18_34)))
 (let ((?x33601 (* ?x33396 l_0_18_37)))
 (let ((?x33440 (* 2.0 l_0_18_21)))
 (let ((?x33599 (* ?x33440 l_0_18_24)))
 (let ((?x33434 (* 2.0 l_0_18_20)))
 (let ((?x33597 (* ?x33434 l_0_18_23)))
 (let ((?x33604 (+ (+ (- (- (* (* (- 2.0) l_0_18_19) l_0_18_22) ?x33597) ?x33599) ?x33601) ?x33603)))
 (= (+ ?x33604 ?x33605) 0.0)))))))))))))
(assert
 (let ((?x33402 (* 2.0 l_0_18_36)))
 (let ((?x33619 (* ?x33402 l_0_18_43)))
 (let ((?x33399 (* 2.0 l_0_18_35)))
 (let ((?x33617 (* ?x33399 l_0_18_42)))
 (let ((?x33396 (* 2.0 l_0_18_34)))
 (let ((?x33615 (* ?x33396 l_0_18_41)))
 (let ((?x33440 (* 2.0 l_0_18_21)))
 (let ((?x33613 (* ?x33440 l_0_18_28)))
 (let ((?x33434 (* 2.0 l_0_18_20)))
 (let ((?x27303 (* ?x33434 l_0_18_27)))
 (let ((?x33618 (+ (+ (- (- (* (* (- 2.0) l_0_18_19) l_0_18_26) ?x27303) ?x33613) ?x33615) ?x33617)))
 (= (+ ?x33618 ?x33619) 0.0)))))))))))))
(assert
 (let ((?x32968 (* l_0_18_40 l_0_18_40)))
 (let ((?x27443 (* l_0_18_39 l_0_18_39)))
 (let ((?x32961 (* l_0_18_38 l_0_18_38)))
 (let ((?x16115 (* l_0_18_37 l_0_18_37)))
 (let ((?x21408 (* l_0_18_36 l_0_18_36)))
 (let ((?x27216 (* l_0_18_35 l_0_18_35)))
 (let ((?x27222 (* l_0_18_34 l_0_18_34)))
 (let ((?x32933 (* l_0_18_25 l_0_18_25)))
 (let ((?x32930 (* l_0_18_24 l_0_18_24)))
 (let ((?x32927 (* l_0_18_23 l_0_18_23)))
 (let ((?x32924 (* l_0_18_22 l_0_18_22)))
 (let ((?x32746 (* l_0_18_21 l_0_18_21)))
 (let ((?x33628 (- (+ (+ (* l_0_18_19 l_0_18_19) (* l_0_18_20 l_0_18_20)) ?x32746) ?x32924)))
 (let ((?x33642 (+ (- (- (- (- (- (- ?x33628 ?x32927) ?x32930) ?x32933) ?x27222) ?x27216) ?x21408) ?x16115)))
 (= (+ (+ (+ ?x33642 ?x32961) ?x27443) ?x32968) 0.0))))))))))))))))
(assert
 (let ((?x33670 (* 2.0 l_0_18_40)))
 (let ((?x33671 (* ?x33670 l_0_18_44)))
 (let ((?x33667 (* 2.0 l_0_18_39)))
 (let ((?x33668 (* ?x33667 l_0_18_43)))
 (let ((?x33664 (* 2.0 l_0_18_38)))
 (let ((?x33665 (* ?x33664 l_0_18_42)))
 (let ((?x33661 (* 2.0 l_0_18_37)))
 (let ((?x33662 (* ?x33661 l_0_18_41)))
 (let ((?x33658 (* 2.0 l_0_18_25)))
 (let ((?x33659 (* ?x33658 l_0_18_29)))
 (let ((?x33655 (* 2.0 l_0_18_24)))
 (let ((?x33656 (* ?x33655 l_0_18_28)))
 (let ((?x28101 (* 2.0 l_0_18_23)))
 (let ((?x28103 (* ?x28101 l_0_18_27)))
 (let ((?x33663 (+ (- (- (- (* (* (- 2.0) l_0_18_22) l_0_18_26) ?x28103) ?x33656) ?x33659) ?x33662)))
 (= (+ (+ (+ ?x33663 ?x33665) ?x33668) ?x33671) 0.0)))))))))))))))))
(assert
 (let ((?x21789 (* l_0_18_45 l_0_18_45)))
 (let ((?x27549 (* l_0_18_44 l_0_18_44)))
 (let ((?x10439 (* l_0_18_43 l_0_18_43)))
 (let ((?x10400 (* l_0_18_42 l_0_18_42)))
 (let ((?x10418 (* l_0_18_41 l_0_18_41)))
 (let ((?x33082 (* l_0_18_30 l_0_18_30)))
 (let ((?x33079 (* l_0_18_29 l_0_18_29)))
 (let ((?x33076 (* l_0_18_28 l_0_18_28)))
 (let ((?x16978 (- (- (* (- l_0_18_26) l_0_18_26) (* l_0_18_27 l_0_18_27)) ?x33076)))
 (let ((?x33695 (+ (+ (+ (+ (+ (- (- ?x16978 ?x33079) ?x33082) ?x10418) ?x10400) ?x10439) ?x27549) ?x21789)))
 (= ?x33695 0.0))))))))))))
(assert
 (let ((?x32761 (* 4.0 l_0_18_36)))
 (let ((?x33451 (* ?x32761 l_0_18_39)))
 (let ((?x32758 (* 4.0 l_0_18_35)))
 (let ((?x33448 (* ?x32758 l_0_18_38)))
 (let ((?x32755 (* 4.0 l_0_18_34)))
 (let ((?x33445 (* ?x32755 l_0_18_37)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33394 (* ?x32411 l_0_18_34)))
 (let ((?x32933 (* l_0_18_25 l_0_18_25)))
 (let ((?x33711 (* 2.0 ?x32933)))
 (let ((?x32930 (* l_0_18_24 l_0_18_24)))
 (let ((?x33709 (* 2.0 ?x32930)))
 (let ((?x32927 (* l_0_18_23 l_0_18_23)))
 (let ((?x33707 (* 2.0 ?x32927)))
 (let ((?x32924 (* l_0_18_22 l_0_18_22)))
 (let ((?x33705 (* 2.0 ?x32924)))
 (let ((?x33437 (* 4.0 l_0_18_21)))
 (let ((?x33438 (* ?x33437 l_0_18_24)))
 (let ((?x33431 (* 4.0 l_0_18_20)))
 (let ((?x33432 (* ?x33431 l_0_18_23)))
 (let ((?x33425 (* 4.0 l_0_18_19)))
 (let ((?x33426 (* ?x33425 l_0_18_22)))
 (let ((?x33706 (+ (- (- (- (* (* 2.0 l_0_18_16) l_0_18_19) ?x33426) ?x33432) ?x33438) ?x33705)))
 (let ((?x33716 (+ (+ (+ (- (+ (+ (+ ?x33706 ?x33707) ?x33709) ?x33711) ?x33394) ?x33445) ?x33448) ?x33451)))
 (let ((?x33720 (- (- ?x33716 (* (* 2.0 l_0_18_37) l_0_18_37)) (* (* 2.0 l_0_18_38) l_0_18_38))))
 (let ((?x33724 (- (- ?x33720 (* (* 2.0 l_0_18_39) l_0_18_39)) (* (* 2.0 l_0_18_40) l_0_18_40))))
 (= ?x33724 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x32968 (* l_0_18_40 l_0_18_40)))
 (let ((?x11409 (* 2.0 ?x32968)))
 (let ((?x27443 (* l_0_18_39 l_0_18_39)))
 (let ((?x28204 (* 2.0 ?x27443)))
 (let ((?x32961 (* l_0_18_38 l_0_18_38)))
 (let ((?x28199 (* 2.0 ?x32961)))
 (let ((?x16115 (* l_0_18_37 l_0_18_37)))
 (let ((?x27513 (* 2.0 ?x16115)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33443 (* ?x32411 l_0_18_37)))
 (let ((?x33752 (- (* (* 2.0 l_0_18_16) l_0_18_22) (* (* 2.0 l_0_18_22) l_0_18_22))))
 (let ((?x33756 (- (- ?x33752 (* (* 2.0 l_0_18_23) l_0_18_23)) (* (* 2.0 l_0_18_24) l_0_18_24))))
 (let ((?x33761 (+ (+ (- (- ?x33756 (* (* 2.0 l_0_18_25) l_0_18_25)) ?x33443) ?x27513) ?x28199)))
 (= (+ (+ ?x33761 ?x28204) ?x11409) 0.0)))))))))))))))
(assert
 (let ((?x33788 (* l_0_18_55 l_0_18_55)))
 (let ((?x33786 (* l_0_18_54 l_0_18_54)))
 (let ((?x33784 (* l_0_18_53 l_0_18_53)))
 (let ((?x33782 (* l_0_18_52 l_0_18_52)))
 (let ((?x32948 (* 4.0 l_0_18_40)))
 (let ((?x32949 (* ?x32948 l_0_18_40)))
 (let ((?x33779 (* ?x32948 l_0_18_44)))
 (let ((?x32945 (* 4.0 l_0_18_39)))
 (let ((?x32946 (* ?x32945 l_0_18_39)))
 (let ((?x33776 (* ?x32945 l_0_18_43)))
 (let ((?x32942 (* 4.0 l_0_18_38)))
 (let ((?x32943 (* ?x32942 l_0_18_38)))
 (let ((?x33773 (* ?x32942 l_0_18_42)))
 (let ((?x32939 (* 4.0 l_0_18_37)))
 (let ((?x32940 (* ?x32939 l_0_18_37)))
 (let ((?x33770 (* ?x32939 l_0_18_41)))
 (let ((?x32411 (* 2.0 l_0_18_31)))
 (let ((?x33493 (* ?x32411 l_0_18_41)))
 (let ((?x32933 (* l_0_18_25 l_0_18_25)))
 (let ((?x32934 (* 4.0 ?x32933)))
 (let ((?x11299 (* (* 4.0 l_0_18_25) l_0_18_29)))
 (let ((?x32930 (* l_0_18_24 l_0_18_24)))
 (let ((?x32931 (* 4.0 ?x32930)))
 (let ((?x28261 (* (* 4.0 l_0_18_24) l_0_18_28)))
 (let ((?x32927 (* l_0_18_23 l_0_18_23)))
 (let ((?x32928 (* 4.0 ?x32927)))
 (let ((?x28314 (* (* 4.0 l_0_18_23) l_0_18_27)))
 (let ((?x32924 (* l_0_18_22 l_0_18_22)))
 (let ((?x32925 (* 4.0 ?x32924)))
 (let ((?x28313 (* (* 4.0 l_0_18_22) l_0_18_26)))
 (let ((?x28302 (+ (- (+ (- (* (* 2.0 l_0_18_16) l_0_18_26) ?x28313) ?x32925) ?x28314) ?x32928)))
 (let ((?x33772 (- (+ (- (+ (- (+ (- ?x28302 ?x28261) ?x32931) ?x11299) ?x32934) ?x33493) ?x33770) ?x32940)))
 (let ((?x33783 (- (- (+ (- (+ (- (+ ?x33772 ?x33773) ?x32943) ?x33776) ?x32946) ?x33779) ?x32949) ?x33782)))
 (= (- (- (- ?x33783 ?x33784) ?x33786) ?x33788) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x27069 (* l_0_18_33 l_0_18_33)))
 (let ((?x9713 (* l_0_18_32 l_0_18_32)))
 (let ((?x27006 (* l_0_18_18 l_0_18_18)))
 (let ((?x21315 (* l_0_18_17 l_0_18_17)))
 (let ((?x33818 (+ ?x21315 ?x27006)))
 (= (- (- ?x33818 ?x9713) ?x27069) 0.0)))))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33529 (* ?x32671 l_0_18_35)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33527 (* ?x32665 l_0_18_34)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x28007 (* ?x32685 l_0_18_20)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_19) ?x28007) ?x33527) ?x33529) 0.0))))))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33547 (* ?x32671 l_0_18_38)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33545 (* ?x32665 l_0_18_37)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x33543 (* ?x32685 l_0_18_23)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_22) ?x33543) ?x33545) ?x33547) 0.0))))))))
(assert
 (let ((?x32671 (* 2.0 l_0_18_33)))
 (let ((?x33565 (* ?x32671 l_0_18_42)))
 (let ((?x32665 (* 2.0 l_0_18_32)))
 (let ((?x33563 (* ?x32665 l_0_18_41)))
 (let ((?x32685 (* 2.0 l_0_18_18)))
 (let ((?x33561 (* ?x32685 l_0_18_27)))
 (= (- (- (+ (* (* 2.0 l_0_18_17) l_0_18_26) ?x33561) ?x33563) ?x33565) 0.0))))))))
(assert
 (let ((?x33402 (* 2.0 l_0_18_36)))
 (let ((?x33605 (* ?x33402 l_0_18_39)))
 (let ((?x33399 (* 2.0 l_0_18_35)))
 (let ((?x33603 (* ?x33399 l_0_18_38)))
 (let ((?x33396 (* 2.0 l_0_18_34)))
 (let ((?x33601 (* ?x33396 l_0_18_37)))
 (let ((?x33440 (* 2.0 l_0_18_21)))
 (let ((?x33599 (* ?x33440 l_0_18_24)))
 (let ((?x33434 (* 2.0 l_0_18_20)))
 (let ((?x33597 (* ?x33434 l_0_18_23)))
 (let ((?x11311 (- (- (+ (+ (* (* 2.0 l_0_18_19) l_0_18_22) ?x33597) ?x33599) ?x33601) ?x33603)))
 (= (- ?x11311 ?x33605) 0.0)))))))))))))
(assert
 (let ((?x33402 (* 2.0 l_0_18_36)))
 (let ((?x33619 (* ?x33402 l_0_18_43)))
 (let ((?x33399 (* 2.0 l_0_18_35)))
 (let ((?x33617 (* ?x33399 l_0_18_42)))
 (let ((?x33396 (* 2.0 l_0_18_34)))
 (let ((?x33615 (* ?x33396 l_0_18_41)))
 (let ((?x33440 (* 2.0 l_0_18_21)))
 (let ((?x33613 (* ?x33440 l_0_18_28)))
 (let ((?x33434 (* 2.0 l_0_18_20)))
 (let ((?x27303 (* ?x33434 l_0_18_27)))
 (let ((?x22537 (- (- (+ (+ (* (* 2.0 l_0_18_19) l_0_18_26) ?x27303) ?x33613) ?x33615) ?x33617)))
 (= (- ?x22537 ?x33619) 0.0)))))))))))))
(assert
 (let ((?x32968 (* l_0_18_40 l_0_18_40)))
 (let ((?x27443 (* l_0_18_39 l_0_18_39)))
 (let ((?x32961 (* l_0_18_38 l_0_18_38)))
 (let ((?x16115 (* l_0_18_37 l_0_18_37)))
 (let ((?x32933 (* l_0_18_25 l_0_18_25)))
 (let ((?x32930 (* l_0_18_24 l_0_18_24)))
 (let ((?x2582 (+ (+ (+ (* l_0_18_22 l_0_18_22) (* l_0_18_23 l_0_18_23)) ?x32930) ?x32933)))
 (= (- (- (- (- ?x2582 ?x16115) ?x32961) ?x27443) ?x32968) 0.0)))))))))
(assert
 (let ((?x33670 (* 2.0 l_0_18_40)))
 (let ((?x33671 (* ?x33670 l_0_18_44)))
 (let ((?x33667 (* 2.0 l_0_18_39)))
 (let ((?x33668 (* ?x33667 l_0_18_43)))
 (let ((?x33664 (* 2.0 l_0_18_38)))
 (let ((?x33665 (* ?x33664 l_0_18_42)))
 (let ((?x33661 (* 2.0 l_0_18_37)))
 (let ((?x33662 (* ?x33661 l_0_18_41)))
 (let ((?x33658 (* 2.0 l_0_18_25)))
 (let ((?x33659 (* ?x33658 l_0_18_29)))
 (let ((?x33655 (* 2.0 l_0_18_24)))
 (let ((?x33656 (* ?x33655 l_0_18_28)))
 (let ((?x28101 (* 2.0 l_0_18_23)))
 (let ((?x28103 (* ?x28101 l_0_18_27)))
 (let ((?x33870 (- (+ (+ (+ (* (* 2.0 l_0_18_22) l_0_18_26) ?x28103) ?x33656) ?x33659) ?x33662)))
 (= (- (- (- ?x33870 ?x33665) ?x33668) ?x33671) 0.0)))))))))))))))))
(assert
 (let ((?x21789 (* l_0_18_45 l_0_18_45)))
 (let ((?x27549 (* l_0_18_44 l_0_18_44)))
 (let ((?x10439 (* l_0_18_43 l_0_18_43)))
 (let ((?x10400 (* l_0_18_42 l_0_18_42)))
 (let ((?x10418 (* l_0_18_41 l_0_18_41)))
 (let ((?x33082 (* l_0_18_30 l_0_18_30)))
 (let ((?x33079 (* l_0_18_29 l_0_18_29)))
 (let ((?x33076 (* l_0_18_28 l_0_18_28)))
 (let ((?x33885 (+ (+ (+ (* l_0_18_26 l_0_18_26) (* l_0_18_27 l_0_18_27)) ?x33076) ?x33079)))
 (= (- (- (- (- (- (+ ?x33885 ?x33082) ?x10418) ?x10400) ?x10439) ?x27549) ?x21789) 0.0)))))))))))
(assert
 (let ((?x32948 (* 4.0 l_0_18_40)))
 (let ((?x33779 (* ?x32948 l_0_18_44)))
 (let ((?x32945 (* 4.0 l_0_18_39)))
 (let ((?x33776 (* ?x32945 l_0_18_43)))
 (let ((?x32942 (* 4.0 l_0_18_38)))
 (let ((?x33773 (* ?x32942 l_0_18_42)))
 (let ((?x32939 (* 4.0 l_0_18_37)))
 (let ((?x33770 (* ?x32939 l_0_18_41)))
 (let ((?x32761 (* 4.0 l_0_18_36)))
 (let ((?x33501 (* ?x32761 l_0_18_43)))
 (let ((?x32809 (* 8.0 l_0_18_36)))
 (let ((?x32810 (* ?x32809 l_0_18_39)))
 (let ((?x32758 (* 4.0 l_0_18_35)))
 (let ((?x33498 (* ?x32758 l_0_18_42)))
 (let ((?x32806 (* 8.0 l_0_18_35)))
 (let ((?x32807 (* ?x32806 l_0_18_38)))
 (let ((?x32755 (* 4.0 l_0_18_34)))
 (let ((?x33495 (* ?x32755 l_0_18_41)))
 (let ((?x32803 (* 8.0 l_0_18_34)))
 (let ((?x32804 (* ?x32803 l_0_18_37)))
 (let ((?x11299 (* (* 4.0 l_0_18_25) l_0_18_29)))
 (let ((?x28261 (* (* 4.0 l_0_18_24) l_0_18_28)))
 (let ((?x28314 (* (* 4.0 l_0_18_23) l_0_18_27)))
 (let ((?x28313 (* (* 4.0 l_0_18_22) l_0_18_26)))
 (let ((?x33437 (* 4.0 l_0_18_21)))
 (let ((?x33490 (* ?x33437 l_0_18_28)))
 (let ((?x32794 (* 8.0 l_0_18_21)))
 (let ((?x32795 (* ?x32794 l_0_18_24)))
 (let ((?x33431 (* 4.0 l_0_18_20)))
 (let ((?x33487 (* ?x33431 l_0_18_27)))
 (let ((?x32791 (* 8.0 l_0_18_20)))
 (let ((?x32792 (* ?x32791 l_0_18_23)))
 (let ((?x33425 (* 4.0 l_0_18_19)))
 (let ((?x33484 (* ?x33425 l_0_18_26)))
 (let ((?x32788 (* 8.0 l_0_18_19)))
 (let ((?x32789 (* ?x32788 l_0_18_22)))
 (let ((?x33904 (+ (+ (- (+ (- (+ (- ?x32789 ?x33484) ?x32792) ?x33487) ?x32795) ?x33490) ?x28313) ?x28314)))
 (let ((?x33911 (- (+ (- (+ (- (+ (+ ?x33904 ?x28261) ?x11299) ?x32804) ?x33495) ?x32807) ?x33498) ?x32810)))
 (let ((?x33919 (- (- (- (- (- (+ ?x33911 ?x33501) ?x33770) ?x33773) ?x33776) ?x33779) (* (* 2.0 l_0_18_49) l_0_18_52))))
 (let ((?x33925 (- (- ?x33919 (* (* 2.0 l_0_18_50) l_0_18_53)) (* (* 2.0 l_0_18_51) l_0_18_54))))
 (= ?x33925 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x32809 (* 8.0 l_0_18_36)))
 (let ((?x32890 (* ?x32809 l_0_18_43)))
 (let ((?x32806 (* 8.0 l_0_18_35)))
 (let ((?x32888 (* ?x32806 l_0_18_42)))
 (let ((?x32803 (* 8.0 l_0_18_34)))
 (let ((?x32886 (* ?x32803 l_0_18_41)))
 (let ((?x33082 (* l_0_18_30 l_0_18_30)))
 (let ((?x33938 (* 2.0 ?x33082)))
 (let ((?x33079 (* l_0_18_29 l_0_18_29)))
 (let ((?x33936 (* 2.0 ?x33079)))
 (let ((?x33076 (* l_0_18_28 l_0_18_28)))
 (let ((?x33934 (* 2.0 ?x33076)))
 (let ((?x33073 (* l_0_18_27 l_0_18_27)))
 (let ((?x22633 (* 2.0 ?x33073)))
 (let ((?x33070 (* l_0_18_26 l_0_18_26)))
 (let ((?x22687 (* 2.0 ?x33070)))
 (let ((?x32794 (* 8.0 l_0_18_21)))
 (let ((?x32878 (* ?x32794 l_0_18_28)))
 (let ((?x32791 (* 8.0 l_0_18_20)))
 (let ((?x32876 (* ?x32791 l_0_18_27)))
 (let ((?x32788 (* 8.0 l_0_18_19)))
 (let ((?x32874 (* ?x32788 l_0_18_26)))
 (let ((?x33939 (+ (+ (+ (+ (+ (+ (+ ?x32874 ?x32876) ?x32878) ?x22687) ?x22633) ?x33934) ?x33936) ?x33938)))
 (let ((?x33945 (- (- (- (- ?x33939 ?x32886) ?x32888) ?x32890) (* (* 2.0 l_0_18_41) l_0_18_41))))
 (let ((?x33951 (- (- ?x33945 (* (* 2.0 l_0_18_42) l_0_18_42)) (* (* 2.0 l_0_18_43) l_0_18_43))))
 (let ((?x33957 (- (- ?x33951 (* (* 2.0 l_0_18_44) l_0_18_44)) (* (* 2.0 l_0_18_45) l_0_18_45))))
 (let ((?x33961 (- (- ?x33957 (* (* 2.0 l_0_18_49) l_0_18_56)) (* (* 2.0 l_0_18_50) l_0_18_57))))
 (= (- ?x33961 (* (* 2.0 l_0_18_51) l_0_18_58)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x21789 (* l_0_18_45 l_0_18_45)))
 (let ((?x33975 (* 2.0 ?x21789)))
 (let ((?x27549 (* l_0_18_44 l_0_18_44)))
 (let ((?x17305 (* 2.0 ?x27549)))
 (let ((?x10439 (* l_0_18_43 l_0_18_43)))
 (let ((?x33968 (* 2.0 ?x10439)))
 (let ((?x10400 (* l_0_18_42 l_0_18_42)))
 (let ((?x33965 (* 2.0 ?x10400)))
 (let ((?x10418 (* l_0_18_41 l_0_18_41)))
 (let ((?x22693 (* 2.0 ?x10418)))
 (let ((?x33012 (* (* 8.0 l_0_18_40) l_0_18_44)))
 (let ((?x33009 (* (* 8.0 l_0_18_39) l_0_18_43)))
 (let ((?x33006 (* (* 8.0 l_0_18_38) l_0_18_42)))
 (let ((?x33003 (* (* 8.0 l_0_18_37) l_0_18_41)))
 (let ((?x32996 (* (* 8.0 l_0_18_25) l_0_18_29)))
 (let ((?x32993 (* (* 8.0 l_0_18_24) l_0_18_28)))
 (let ((?x32990 (* (* 8.0 l_0_18_23) l_0_18_27)))
 (let ((?x32987 (* (* 8.0 l_0_18_22) l_0_18_26)))
 (let ((?x33984 (- (+ (+ (+ ?x32987 ?x32990) ?x32993) ?x32996) (* (* 2.0 l_0_18_26) l_0_18_26))))
 (let ((?x33990 (- (- ?x33984 (* (* 2.0 l_0_18_27) l_0_18_27)) (* (* 2.0 l_0_18_28) l_0_18_28))))
 (let ((?x33996 (- (- ?x33990 (* (* 2.0 l_0_18_29) l_0_18_29)) (* (* 2.0 l_0_18_30) l_0_18_30))))
 (let ((?x34003 (+ (+ (+ (- (- (- (- ?x33996 ?x33003) ?x33006) ?x33009) ?x33012) ?x22693) ?x33965) ?x33968)))
 (let ((?x34011 (- (- (+ (+ ?x34003 ?x17305) ?x33975) (* (* 2.0 l_0_18_52) l_0_18_56)) (* (* 2.0 l_0_18_53) l_0_18_57))))
 (let ((?x34017 (- (- ?x34011 (* (* 2.0 l_0_18_54) l_0_18_58)) (* (* 2.0 l_0_18_55) l_0_18_59))))
 (= ?x34017 0.0))))))))))))))))))))))))))
(assert
 (let ((?x34034 (* l_0_18_60 l_0_18_60)))
 (let ((?x34032 (* l_0_18_59 l_0_18_59)))
 (let ((?x34030 (* l_0_18_58 l_0_18_58)))
 (let ((?x11916 (* l_0_18_57 l_0_18_57)))
 (let ((?x16578 (* l_0_18_56 l_0_18_56)))
 (let ((?x33100 (* (* 4.0 l_0_18_45) l_0_18_45)))
 (let ((?x33097 (* (* 4.0 l_0_18_44) l_0_18_44)))
 (let ((?x33094 (* (* 4.0 l_0_18_43) l_0_18_43)))
 (let ((?x33091 (* (* 4.0 l_0_18_42) l_0_18_42)))
 (let ((?x33088 (* (* 4.0 l_0_18_41) l_0_18_41)))
 (let ((?x33082 (* l_0_18_30 l_0_18_30)))
 (let ((?x33083 (* 4.0 ?x33082)))
 (let ((?x33079 (* l_0_18_29 l_0_18_29)))
 (let ((?x33080 (* 4.0 ?x33079)))
 (let ((?x33076 (* l_0_18_28 l_0_18_28)))
 (let ((?x33077 (* 4.0 ?x33076)))
 (let ((?x33073 (* l_0_18_27 l_0_18_27)))
 (let ((?x33074 (* 4.0 ?x33073)))
 (let ((?x33070 (* l_0_18_26 l_0_18_26)))
 (let ((?x33071 (* 4.0 ?x33070)))
 (let ((?x27556 (- (- (- (+ (+ (+ (+ ?x33071 ?x33074) ?x33077) ?x33080) ?x33083) ?x33088) ?x33091) ?x33094)))
 (let ((?x34035 (- (- (- (- (- (- (- ?x27556 ?x33097) ?x33100) ?x16578) ?x11916) ?x34030) ?x34032) ?x34034)))
 (= ?x34035 0.0))))))))))))))))))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_16 0.0))
(assert
 (>= l_0_18_18 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_25 0.0))
(assert
 (>= l_0_18_30 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_33 0.0))
(assert
 (>= l_0_18_36 0.0))
(assert
 (>= l_0_18_40 0.0))
(assert
 (>= l_0_18_45 0.0))
(assert
 (>= l_0_18_46 0.0))
(assert
 (>= l_0_18_48 0.0))
(assert
 (>= l_0_18_51 0.0))
(assert
 (>= l_0_18_55 0.0))
(assert
 (>= l_0_18_60 0.0))
(assert
 (>= l_0_18_61 0.0))
(assert
 (>= l_0_18_63 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_70 0.0))
(assert
 (>= l_0_18_75 0.0))
(assert
 (>= l_0_18_76 0.0))
(assert
 (>= l_0_18_78 0.0))
(assert
 (>= l_0_18_81 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_91 0.0))
(assert
 (>= l_0_18_93 0.0))
(assert
 (>= l_0_18_96 0.0))
(assert
 (>= l_0_18_100 0.0))
(assert
 (>= l_0_18_105 0.0))
(check-sat)
(get-model)