(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_2_66 () Real)
(declare-fun l_0_2_65 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_79 () Real)
(declare-fun l_0_2_64 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_80 () Real)
(declare-fun l_0_2_81 () Real)
(declare-fun l_0_2_69 () Real)
(declare-fun l_0_2_68 () Real)
(declare-fun l_0_2_67 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_82 () Real)
(declare-fun l_0_2_73 () Real)
(declare-fun l_0_2_72 () Real)
(declare-fun l_0_2_71 () Real)
(declare-fun l_0_2_70 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_83 () Real)
(declare-fun l_0_2_78 () Real)
(declare-fun l_0_2_77 () Real)
(declare-fun l_0_2_76 () Real)
(declare-fun l_0_2_75 () Real)
(declare-fun l_0_2_74 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_84 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_61 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_62 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_63 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_122 () Real)
(declare-fun l_0_3_108 () Real)
(declare-fun l_0_3_121 () Real)
(declare-fun l_0_3_107 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_101 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_100 () Real)
(declare-fun l_0_3_96 () Real)
(declare-fun l_0_3_95 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_116 () Real)
(declare-fun l_0_3_106 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_92 () Real)
(declare-fun l_0_3_91 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_113 () Real)
(declare-fun l_0_3_112 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_102 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_94 () Real)
(declare-fun l_0_3_103 () Real)
(declare-fun l_0_3_93 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_99 () Real)
(declare-fun l_0_3_104 () Real)
(declare-fun l_0_3_98 () Real)
(declare-fun l_0_3_97 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_105 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_123 () Real)
(declare-fun l_0_3_111 () Real)
(declare-fun l_0_3_110 () Real)
(declare-fun l_0_3_109 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_124 () Real)
(declare-fun l_0_3_115 () Real)
(declare-fun l_0_3_114 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_125 () Real)
(declare-fun l_0_3_120 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_119 () Real)
(declare-fun l_0_3_118 () Real)
(declare-fun l_0_3_117 () Real)
(declare-fun l_0_3_126 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_137 () Real)
(declare-fun l_0_4_127 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_128 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_129 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_134 () Real)
(declare-fun l_0_4_133 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_143 () Real)
(declare-fun l_0_4_142 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_144 () Real)
(declare-fun l_0_4_132 () Real)
(declare-fun l_0_4_131 () Real)
(declare-fun l_0_4_130 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_145 () Real)
(declare-fun l_0_4_136 () Real)
(declare-fun l_0_4_135 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_146 () Real)
(declare-fun l_0_4_141 () Real)
(declare-fun l_0_4_140 () Real)
(declare-fun l_0_4_139 () Real)
(declare-fun l_0_4_138 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_147 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_122 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_121 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_116 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_113 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_123 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_124 () Real)
(declare-fun l_0_5_115 () Real)
(declare-fun l_0_5_114 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_125 () Real)
(declare-fun l_0_5_120 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_119 () Real)
(declare-fun l_0_5_118 () Real)
(declare-fun l_0_5_117 () Real)
(declare-fun l_0_5_126 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_143 () Real)
(declare-fun l_0_6_142 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_144 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_145 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_146 () Real)
(declare-fun l_0_6_141 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_147 () Real)
(declare-fun l_0_6_126 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_63 () Real)
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_3) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- (- (- l_0_1_3) l_0_1_4) l_0_1_5) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (>= l_0_1_5 0.0))
(assert
 (= (+ (- (* (- l_0_2_65) l_0_2_65) (* l_0_2_66 l_0_2_66)) 1.0) 0.0))
(assert
 (= (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_22 l_0_2_22)) 0.0))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x736 (* ?x735 l_0_2_23)))
 (let ((?x740 (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x736) (* (* 2.0 l_0_2_64) l_0_2_79))))
 (= ?x740 0.0)))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x763 (* ?x735 l_0_2_37)))
 (let ((?x761 (* ?x735 l_0_2_25)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x759 (* ?x757 l_0_2_4)))
 (let ((?x758 (* ?x757 l_0_2_16)))
 (= (- (+ (- ?x758 ?x759) ?x761) ?x763) 0.0))))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x763 (* ?x735 l_0_2_37)))
 (let ((?x786 (* ?x735 l_0_2_28)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x784 (* ?x757 l_0_2_7)))
 (let ((?x758 (* ?x757 l_0_2_16)))
 (let ((?x791 (+ (- (+ (- ?x758 ?x784) ?x786) ?x763) (* (* 2.0 l_0_2_43) l_0_2_58))))
 (= ?x791 0.0)))))))))
(assert
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x821 (* ?x820 l_0_2_38)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x818 (* ?x817 l_0_2_37)))
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x815 (* ?x735 l_0_2_32)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x813 (* ?x812 l_0_2_3)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x810 (* ?x809 l_0_2_2)))
 (let ((?x819 (- (+ (+ (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x810) ?x813) ?x815) ?x818)))
 (= (- ?x819 ?x821) 0.0)))))))))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x763 (* ?x735 l_0_2_37)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_16) ?x763) 0.0))))
(assert
 (let ((?x862 (* l_0_2_3 l_0_2_3)))
 (let ((?x860 (* l_0_2_24 l_0_2_24)))
 (let ((?x863 (- (+ (+ (* (- l_0_2_2) l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x860) ?x862)))
 (let ((?x869 (- (- ?x863 (* (* 2.0 l_0_2_65) l_0_2_79)) (* (* 2.0 l_0_2_66) l_0_2_80))))
 (= ?x869 0.0))))))
(assert
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x902 (* ?x901 l_0_2_5)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x821 (* ?x820 l_0_2_38)))
 (let ((?x898 (* ?x820 l_0_2_26)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x818 (* ?x817 l_0_2_37)))
 (let ((?x895 (* ?x817 l_0_2_25)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x893 (* ?x892 l_0_2_4)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x813 (* ?x812 l_0_2_3)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x810 (* ?x809 l_0_2_2)))
 (let ((?x891 (+ ?x810 ?x813)))
 (let ((?x906 (- (- (- (+ (- (+ (- ?x891 ?x893) ?x895) ?x818) ?x898) ?x821) ?x902) (* (* 2.0 l_0_2_67) l_0_2_79))))
 (let ((?x912 (- (- ?x906 (* (* 2.0 l_0_2_68) l_0_2_80)) (* (* 2.0 l_0_2_69) l_0_2_81))))
 (= ?x912 0.0)))))))))))))))))))
(assert
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x964 (* ?x901 l_0_2_8)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x821 (* ?x820 l_0_2_38)))
 (let ((?x961 (* ?x820 l_0_2_29)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x818 (* ?x817 l_0_2_37)))
 (let ((?x958 (* ?x817 l_0_2_28)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x956 (* ?x892 l_0_2_7)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x813 (* ?x812 l_0_2_3)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x810 (* ?x809 l_0_2_2)))
 (let ((?x891 (+ ?x810 ?x813)))
 (let ((?x968 (+ (- (- (+ (- (+ (- ?x891 ?x956) ?x958) ?x818) ?x961) ?x821) ?x964) (* (* 2.0 l_0_2_44) l_0_2_58))))
 (let ((?x974 (- (+ ?x968 (* (* 2.0 l_0_2_45) l_0_2_59)) (* (* 2.0 l_0_2_70) l_0_2_79))))
 (let ((?x980 (- (- ?x974 (* (* 2.0 l_0_2_71) l_0_2_80)) (* (* 2.0 l_0_2_72) l_0_2_81))))
 (= (- ?x980 (* (* 2.0 l_0_2_73) l_0_2_82)) 0.0))))))))))))))))))))
(assert
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x1044 (* ?x820 l_0_2_33)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x1042 (* ?x817 l_0_2_32)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1040 (* ?x1039 l_0_2_3)))
 (let ((?x1048 (- (+ (+ (- (* (* (- 2.0) l_0_2_11) l_0_2_2) ?x1040) ?x1042) ?x1044) (* (* 2.0 l_0_2_74) l_0_2_79))))
 (let ((?x1054 (- (- ?x1048 (* (* 2.0 l_0_2_75) l_0_2_80)) (* (* 2.0 l_0_2_76) l_0_2_81))))
 (let ((?x1060 (- (- ?x1054 (* (* 2.0 l_0_2_77) l_0_2_82)) (* (* 2.0 l_0_2_78) l_0_2_83))))
 (= ?x1060 0.0)))))))))))
(assert
 (let ((?x1125 (* l_0_2_84 l_0_2_84)))
 (let ((?x1123 (* l_0_2_83 l_0_2_83)))
 (let ((?x1121 (* l_0_2_82 l_0_2_82)))
 (let ((?x1119 (* l_0_2_81 l_0_2_81)))
 (let ((?x1117 (* l_0_2_80 l_0_2_80)))
 (let ((?x1115 (* l_0_2_79 l_0_2_79)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x821 (* ?x820 l_0_2_38)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x818 (* ?x817 l_0_2_37)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x813 (* ?x812 l_0_2_3)))
 (let ((?x1116 (- (+ (+ (- (* (* (- 2.0) l_0_2_16) l_0_2_2) ?x813) ?x818) ?x821) ?x1115)))
 (= (- (- (- (- (- ?x1116 ?x1117) ?x1119) ?x1121) ?x1123) ?x1125) 0.0)))))))))))))))
(assert
 (let ((?x1177 (* l_0_2_6 l_0_2_6)))
 (let ((?x1175 (* l_0_2_5 l_0_2_5)))
 (let ((?x1173 (* l_0_2_4 l_0_2_4)))
 (let ((?x1171 (* l_0_2_27 l_0_2_27)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1169 (* ?x1168 l_0_2_39)))
 (let ((?x1166 (* l_0_2_26 l_0_2_26)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1164 (* ?x1163 l_0_2_38)))
 (let ((?x1161 (* l_0_2_25 l_0_2_25)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1159 (* ?x1158 l_0_2_37)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1156 (* ?x1155 l_0_2_6)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1153 (* ?x812 l_0_2_5)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1152 (* ?x809 l_0_2_4)))
 (let ((?x1160 (- (+ (+ ?x1152 ?x1153) ?x1156) ?x1159)))
 (let ((?x1176 (- (- (+ (- (+ (- (+ ?x1160 ?x1161) ?x1164) ?x1166) ?x1169) ?x1171) ?x1173) ?x1175)))
 (= (- ?x1176 ?x1177) 0.0))))))))))))))))))))))
(assert
 (let ((?x1266 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1263 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1251 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1248 (* ?x1247 l_0_2_40)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1245 (* ?x1244 l_0_2_39)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1242 (* ?x1241 l_0_2_38)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1239 (* ?x1238 l_0_2_37)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1169 (* ?x1168 l_0_2_39)))
 (let ((?x1235 (* ?x1168 l_0_2_30)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1164 (* ?x1163 l_0_2_38)))
 (let ((?x1232 (* ?x1163 l_0_2_29)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1159 (* ?x1158 l_0_2_37)))
 (let ((?x1229 (* ?x1158 l_0_2_28)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1227 (* ?x1155 l_0_2_9)))
 (let ((?x1156 (* ?x1155 l_0_2_6)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1224 (* ?x812 l_0_2_8)))
 (let ((?x1153 (* ?x812 l_0_2_5)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1221 (* ?x809 l_0_2_7)))
 (let ((?x1223 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_19) (* ?x809 l_0_2_4)) ?x1221) ?x1153)))
 (let ((?x1234 (- (+ (- (+ (+ (+ (+ ?x1223 ?x1224) ?x1156) ?x1227) ?x1229) ?x1159) ?x1232) ?x1164)))
 (let ((?x1252 (- (- (- (- (- (- (+ ?x1234 ?x1235) ?x1169) ?x1239) ?x1242) ?x1245) ?x1248) ?x1251)))
 (let ((?x1258 (+ (+ ?x1252 (* (* 2.0 l_0_2_46) l_0_2_58)) (* (* 2.0 l_0_2_47) l_0_2_59))))
 (= (- (- (+ ?x1258 (* (* 2.0 l_0_2_48) l_0_2_60)) ?x1263) ?x1266) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1380 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1377 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1374 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x1371 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x1368 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1365 (* ?x1168 l_0_2_34)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1363 (* ?x1163 l_0_2_33)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1361 (* ?x1158 l_0_2_32)))
 (let ((?x1359 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x1356 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1353 (* ?x1350 l_0_2_6)))
 (let ((?x1351 (* ?x1350 l_0_2_18)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1348 (* ?x1039 l_0_2_5)))
 (let ((?x1346 (* ?x1039 l_0_2_17)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1344 (* ?x1342 l_0_2_4)))
 (let ((?x1343 (* ?x1342 l_0_2_16)))
 (let ((?x1360 (+ (+ (- (+ (- (+ (- ?x1343 ?x1344) ?x1346) ?x1348) ?x1351) ?x1353) ?x1356) ?x1359)))
 (let ((?x1378 (- (- (- (- (+ (+ (+ ?x1360 ?x1361) ?x1363) ?x1365) ?x1368) ?x1371) ?x1374) ?x1377)))
 (= (- ?x1378 ?x1380) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x1479 (* l_0_2_42 l_0_2_42)))
 (let ((?x1477 (* l_0_2_41 l_0_2_41)))
 (let ((?x1475 (* l_0_2_40 l_0_2_40)))
 (let ((?x1473 (* l_0_2_39 l_0_2_39)))
 (let ((?x1471 (* l_0_2_38 l_0_2_38)))
 (let ((?x1469 (* l_0_2_37 l_0_2_37)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1169 (* ?x1168 l_0_2_39)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1164 (* ?x1163 l_0_2_38)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1159 (* ?x1158 l_0_2_37)))
 (let ((?x1464 (* l_0_2_21 l_0_2_21)))
 (let ((?x1462 (* l_0_2_20 l_0_2_20)))
 (let ((?x1460 (* l_0_2_19 l_0_2_19)))
 (let ((?x1458 (* l_0_2_18 l_0_2_18)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1156 (* ?x1155 l_0_2_6)))
 (let ((?x1455 (* l_0_2_17 l_0_2_17)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1153 (* ?x812 l_0_2_5)))
 (let ((?x1454 (- (+ (* (* (- 2.0) l_0_2_16) l_0_2_4) (* l_0_2_16 l_0_2_16)) ?x1153)))
 (let ((?x1466 (+ (+ (+ (+ (+ (- (+ ?x1454 ?x1455) ?x1156) ?x1458) ?x1460) ?x1462) ?x1464) ?x1159)))
 (let ((?x1478 (- (- (- (- (- (+ (+ ?x1466 ?x1164) ?x1169) ?x1469) ?x1471) ?x1473) ?x1475) ?x1477)))
 (= (- ?x1478 ?x1479) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x1553 (* l_0_2_9 l_0_2_9)))
 (let ((?x1551 (* l_0_2_8 l_0_2_8)))
 (let ((?x1549 (* l_0_2_7 l_0_2_7)))
 (let ((?x1535 (* l_0_2_31 l_0_2_31)))
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1248 (* ?x1247 l_0_2_40)))
 (let ((?x1532 (* l_0_2_30 l_0_2_30)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1245 (* ?x1244 l_0_2_39)))
 (let ((?x1529 (* l_0_2_29 l_0_2_29)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1242 (* ?x1241 l_0_2_38)))
 (let ((?x1526 (* l_0_2_28 l_0_2_28)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1239 (* ?x1238 l_0_2_37)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1227 (* ?x1155 l_0_2_9)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1224 (* ?x812 l_0_2_8)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1221 (* ?x809 l_0_2_7)))
 (let ((?x1522 (+ (- (* (* 2.0 l_0_2_10) l_0_2_19) (* l_0_2_10 l_0_2_10)) ?x1221)))
 (let ((?x1531 (- (+ (- (+ (- (+ (+ ?x1522 ?x1224) ?x1227) ?x1239) ?x1526) ?x1242) ?x1529) ?x1245)))
 (let ((?x1539 (+ (+ (- (+ ?x1531 ?x1532) ?x1248) ?x1535) (* (* 2.0 l_0_2_49) l_0_2_58))))
 (let ((?x1545 (+ (+ ?x1539 (* (* 2.0 l_0_2_50) l_0_2_59)) (* (* 2.0 l_0_2_51) l_0_2_60))))
 (let ((?x1554 (- (- (- (+ ?x1545 (* (* 2.0 l_0_2_52) l_0_2_61)) ?x1549) ?x1551) ?x1553)))
 (= ?x1554 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1380 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1377 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1374 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x1371 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x1368 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1608 (* ?x1247 l_0_2_35)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1606 (* ?x1244 l_0_2_34)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1604 (* ?x1241 l_0_2_33)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1602 (* ?x1238 l_0_2_32)))
 (let ((?x1359 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x1356 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1598 (* ?x1350 l_0_2_9)))
 (let ((?x1351 (* ?x1350 l_0_2_18)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1595 (* ?x1039 l_0_2_8)))
 (let ((?x1346 (* ?x1039 l_0_2_17)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1592 (* ?x1342 l_0_2_7)))
 (let ((?x1594 (+ (- (+ (* (* (- 2.0) l_0_2_10) l_0_2_14) (* ?x1342 l_0_2_16)) ?x1592) ?x1346)))
 (let ((?x1605 (+ (+ (+ (+ (- (+ (- ?x1594 ?x1595) ?x1351) ?x1598) ?x1356) ?x1359) ?x1602) ?x1604)))
 (let ((?x1614 (- (- (- (- (- (+ (+ ?x1605 ?x1606) ?x1608) ?x1368) ?x1371) ?x1374) ?x1377) ?x1380)))
 (let ((?x1620 (+ (+ ?x1614 (* (* 2.0 l_0_2_53) l_0_2_58)) (* (* 2.0 l_0_2_54) l_0_2_59))))
 (let ((?x1626 (+ (+ ?x1620 (* (* 2.0 l_0_2_55) l_0_2_60)) (* (* 2.0 l_0_2_56) l_0_2_61))))
 (= (+ ?x1626 (* (* 2.0 l_0_2_57) l_0_2_62)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x1715 (* l_0_2_63 l_0_2_63)))
 (let ((?x1713 (* l_0_2_62 l_0_2_62)))
 (let ((?x1711 (* l_0_2_61 l_0_2_61)))
 (let ((?x1709 (* l_0_2_60 l_0_2_60)))
 (let ((?x1707 (* l_0_2_59 l_0_2_59)))
 (let ((?x1705 (* l_0_2_58 l_0_2_58)))
 (let ((?x1479 (* l_0_2_42 l_0_2_42)))
 (let ((?x1477 (* l_0_2_41 l_0_2_41)))
 (let ((?x1475 (* l_0_2_40 l_0_2_40)))
 (let ((?x1473 (* l_0_2_39 l_0_2_39)))
 (let ((?x1471 (* l_0_2_38 l_0_2_38)))
 (let ((?x1469 (* l_0_2_37 l_0_2_37)))
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1248 (* ?x1247 l_0_2_40)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1245 (* ?x1244 l_0_2_39)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1242 (* ?x1241 l_0_2_38)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1239 (* ?x1238 l_0_2_37)))
 (let ((?x1464 (* l_0_2_21 l_0_2_21)))
 (let ((?x1462 (* l_0_2_20 l_0_2_20)))
 (let ((?x1460 (* l_0_2_19 l_0_2_19)))
 (let ((?x1458 (* l_0_2_18 l_0_2_18)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1227 (* ?x1155 l_0_2_9)))
 (let ((?x1455 (* l_0_2_17 l_0_2_17)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1224 (* ?x812 l_0_2_8)))
 (let ((?x1452 (* l_0_2_16 l_0_2_16)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1221 (* ?x809 l_0_2_7)))
 (let ((?x1689 (+ (- (+ (- (* (* (- 2.0) l_0_2_10) l_0_2_19) ?x1221) ?x1452) ?x1224) ?x1455)))
 (let ((?x1696 (+ (+ (+ (+ (+ (+ (- ?x1689 ?x1227) ?x1458) ?x1460) ?x1462) ?x1464) ?x1239) ?x1242)))
 (let ((?x1703 (- (- (- (- (- (+ (+ ?x1696 ?x1245) ?x1248) ?x1469) ?x1471) ?x1473) ?x1475) ?x1477)))
 (let ((?x1716 (+ (+ (+ (+ (+ (+ (- ?x1703 ?x1479) ?x1705) ?x1707) ?x1709) ?x1711) ?x1713) ?x1715)))
 (= ?x1716 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1772 (* l_0_2_36 l_0_2_36)))
 (let ((?x1770 (* l_0_2_35 l_0_2_35)))
 (let ((?x1768 (* l_0_2_34 l_0_2_34)))
 (let ((?x1766 (* l_0_2_33 l_0_2_33)))
 (let ((?x1764 (* l_0_2_32 l_0_2_32)))
 (let ((?x1762 (* l_0_2_15 l_0_2_15)))
 (let ((?x1760 (* l_0_2_14 l_0_2_14)))
 (let ((?x1758 (* l_0_2_13 l_0_2_13)))
 (let ((?x1761 (- (- (- (* (- l_0_2_11) l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x1758) ?x1760)))
 (= (+ (+ (+ (+ (+ (- ?x1761 ?x1762) ?x1764) ?x1766) ?x1768) ?x1770) ?x1772) 0.0)))))))))))
(assert
 (let ((?x1380 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1377 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1374 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x1371 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x1368 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x1359 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x1356 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1351 (* ?x1350 l_0_2_18)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1346 (* ?x1039 l_0_2_17)))
 (let ((?x1801 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_16) ?x1346) ?x1351) ?x1356) ?x1359)))
 (= (+ (+ (+ (+ (+ ?x1801 ?x1368) ?x1371) ?x1374) ?x1377) ?x1380) 0.0))))))))))))))
(assert
 (let ((?x1479 (* l_0_2_42 l_0_2_42)))
 (let ((?x1477 (* l_0_2_41 l_0_2_41)))
 (let ((?x1475 (* l_0_2_40 l_0_2_40)))
 (let ((?x1473 (* l_0_2_39 l_0_2_39)))
 (let ((?x1471 (* l_0_2_38 l_0_2_38)))
 (let ((?x1469 (* l_0_2_37 l_0_2_37)))
 (let ((?x1464 (* l_0_2_21 l_0_2_21)))
 (let ((?x1462 (* l_0_2_20 l_0_2_20)))
 (let ((?x1460 (* l_0_2_19 l_0_2_19)))
 (let ((?x1458 (* l_0_2_18 l_0_2_18)))
 (let ((?x1831 (- (- (- (* (- l_0_2_16) l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1458) ?x1460)))
 (let ((?x1838 (+ (+ (+ (+ (+ (- (- ?x1831 ?x1462) ?x1464) ?x1469) ?x1471) ?x1473) ?x1475) ?x1477)))
 (= (+ ?x1838 ?x1479) 0.0))))))))))))))
(assert
 (let ((?x723 (* l_0_2_22 l_0_2_22)))
 (let ((?x727 (* l_0_2_1 l_0_2_1)))
 (let ((?x1851 (- ?x727 ?x723)))
 (= ?x1851 0.0)))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x736 (* ?x735 l_0_2_23)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x736)))
 (= ?x1859 0.0)))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x761 (* ?x735 l_0_2_25)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x759 (* ?x757 l_0_2_4)))
 (= (- ?x759 ?x761) 0.0))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x786 (* ?x735 l_0_2_28)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x784 (* ?x757 l_0_2_7)))
 (let ((?x1872 (- ?x784 ?x786)))
 (= ?x1872 0.0)))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x815 (* ?x735 l_0_2_32)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x1879 (* ?x757 l_0_2_11)))
 (= (- ?x1879 ?x815) 0.0))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x763 (* ?x735 l_0_2_37)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x758 (* ?x757 l_0_2_16)))
 (= (- ?x758 ?x763) 0.0))))))
(assert
 (let ((?x862 (* l_0_2_3 l_0_2_3)))
 (let ((?x860 (* l_0_2_24 l_0_2_24)))
 (let ((?x1891 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x860) ?x862)))
 (= (- ?x1891 (* (* 2.0 l_0_2_64) l_0_2_74)) 0.0)))))
(assert
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x902 (* ?x901 l_0_2_5)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x898 (* ?x820 l_0_2_26)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x895 (* ?x817 l_0_2_25)))
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x815 (* ?x735 l_0_2_32)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x893 (* ?x892 l_0_2_4)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x1879 (* ?x757 l_0_2_11)))
 (= (+ (- (- (- (+ ?x1879 ?x893) ?x815) ?x895) ?x898) ?x902) 0.0))))))))))))))
(assert
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x964 (* ?x901 l_0_2_8)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x961 (* ?x820 l_0_2_29)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x958 (* ?x817 l_0_2_28)))
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x815 (* ?x735 l_0_2_32)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x956 (* ?x892 l_0_2_7)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x1879 (* ?x757 l_0_2_11)))
 (let ((?x1935 (+ (+ (- (- (- (+ ?x1879 ?x956) ?x815) ?x958) ?x961) ?x964) (* (* 2.0 l_0_2_43) l_0_2_53))))
 (= ?x1935 0.0)))))))))))))))
(assert
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x1044 (* ?x820 l_0_2_33)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x1042 (* ?x817 l_0_2_32)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1040 (* ?x1039 l_0_2_3)))
 (let ((?x1955 (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x1040) ?x1042) ?x1044)))
 (= ?x1955 0.0)))))))))
(assert
 (let ((?x1177 (* l_0_2_6 l_0_2_6)))
 (let ((?x1175 (* l_0_2_5 l_0_2_5)))
 (let ((?x1173 (* l_0_2_4 l_0_2_4)))
 (let ((?x1171 (* l_0_2_27 l_0_2_27)))
 (let ((?x1969 (+ (- (- (* (- l_0_2_25) l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1171) ?x1173)))
 (= (+ (+ ?x1969 ?x1175) ?x1177) 0.0)))))))
(assert
 (let ((?x1266 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1263 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1251 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1235 (* ?x1168 l_0_2_30)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1232 (* ?x1163 l_0_2_29)))
 (let ((?x1983 (* (* (- 2.0) l_0_2_25) l_0_2_28)))
 (= (+ (+ (+ (- (- ?x1983 ?x1232) ?x1235) ?x1251) ?x1263) ?x1266) 0.0))))))))))
(assert
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1365 (* ?x1168 l_0_2_34)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1363 (* ?x1163 l_0_2_33)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1361 (* ?x1158 l_0_2_32)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1353 (* ?x1350 l_0_2_6)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1348 (* ?x1039 l_0_2_5)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1344 (* ?x1342 l_0_2_4)))
 (= (- (- (- (+ (+ ?x1344 ?x1348) ?x1353) ?x1361) ?x1363) ?x1365) 0.0))))))))))))))
(assert
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1169 (* ?x1168 l_0_2_39)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1164 (* ?x1163 l_0_2_38)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1159 (* ?x1158 l_0_2_37)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1156 (* ?x1155 l_0_2_6)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1153 (* ?x812 l_0_2_5)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1152 (* ?x809 l_0_2_4)))
 (let ((?x1160 (- (+ (+ ?x1152 ?x1153) ?x1156) ?x1159)))
 (= (- (- ?x1160 ?x1164) ?x1169) 0.0)))))))))))))))
(assert
 (let ((?x1553 (* l_0_2_9 l_0_2_9)))
 (let ((?x1551 (* l_0_2_8 l_0_2_8)))
 (let ((?x1549 (* l_0_2_7 l_0_2_7)))
 (let ((?x1535 (* l_0_2_31 l_0_2_31)))
 (let ((?x1532 (* l_0_2_30 l_0_2_30)))
 (let ((?x1529 (* l_0_2_29 l_0_2_29)))
 (let ((?x2031 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_28 l_0_2_28)) ?x1529) ?x1532)))
 (let ((?x2032 (- ?x2031 ?x1535)))
 (= (+ (+ (+ ?x2032 ?x1549) ?x1551) ?x1553) 0.0))))))))))
(assert
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1608 (* ?x1247 l_0_2_35)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1606 (* ?x1244 l_0_2_34)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1604 (* ?x1241 l_0_2_33)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1602 (* ?x1238 l_0_2_32)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1598 (* ?x1350 l_0_2_9)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1595 (* ?x1039 l_0_2_8)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1592 (* ?x1342 l_0_2_7)))
 (let ((?x1218 (* 2.0 l_0_2_10)))
 (let ((?x2050 (* ?x1218 l_0_2_14)))
 (let ((?x2057 (- (- (- (- (+ (+ (+ ?x2050 ?x1592) ?x1595) ?x1598) ?x1602) ?x1604) ?x1606) ?x1608)))
 (= ?x2057 0.0)))))))))))))))))))
(assert
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1248 (* ?x1247 l_0_2_40)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1245 (* ?x1244 l_0_2_39)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1242 (* ?x1241 l_0_2_38)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1239 (* ?x1238 l_0_2_37)))
 (let ((?x1155 (* 2.0 l_0_2_18)))
 (let ((?x1227 (* ?x1155 l_0_2_9)))
 (let ((?x812 (* 2.0 l_0_2_17)))
 (let ((?x1224 (* ?x812 l_0_2_8)))
 (let ((?x809 (* 2.0 l_0_2_16)))
 (let ((?x1221 (* ?x809 l_0_2_7)))
 (let ((?x1218 (* 2.0 l_0_2_10)))
 (let ((?x1219 (* ?x1218 l_0_2_19)))
 (let ((?x2084 (- (- (- (- (+ (+ (+ ?x1219 ?x1221) ?x1224) ?x1227) ?x1239) ?x1242) ?x1245) ?x1248)))
 (= ?x2084 0.0)))))))))))))))))))
(assert
 (let ((?x1772 (* l_0_2_36 l_0_2_36)))
 (let ((?x1770 (* l_0_2_35 l_0_2_35)))
 (let ((?x1768 (* l_0_2_34 l_0_2_34)))
 (let ((?x1766 (* l_0_2_33 l_0_2_33)))
 (let ((?x1764 (* l_0_2_32 l_0_2_32)))
 (let ((?x1762 (* l_0_2_15 l_0_2_15)))
 (let ((?x1760 (* l_0_2_14 l_0_2_14)))
 (let ((?x1758 (* l_0_2_13 l_0_2_13)))
 (let ((?x2098 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x1758) ?x1760)))
 (let ((?x2104 (- (- (- (- (- (+ ?x2098 ?x1762) ?x1764) ?x1766) ?x1768) ?x1770) ?x1772)))
 (= ?x2104 0.0))))))))))))
(assert
 (let ((?x1380 (* (* 2.0 l_0_2_36) l_0_2_41)))
 (let ((?x1377 (* (* 2.0 l_0_2_35) l_0_2_40)))
 (let ((?x1374 (* (* 2.0 l_0_2_34) l_0_2_39)))
 (let ((?x1371 (* (* 2.0 l_0_2_33) l_0_2_38)))
 (let ((?x1368 (* (* 2.0 l_0_2_32) l_0_2_37)))
 (let ((?x1359 (* (* 2.0 l_0_2_15) l_0_2_20)))
 (let ((?x1356 (* (* 2.0 l_0_2_14) l_0_2_19)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1351 (* ?x1350 l_0_2_18)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1346 (* ?x1039 l_0_2_17)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1343 (* ?x1342 l_0_2_16)))
 (let ((?x2122 (- (- (- (+ (+ (+ (+ ?x1343 ?x1346) ?x1351) ?x1356) ?x1359) ?x1368) ?x1371) ?x1374)))
 (= (- (- ?x2122 ?x1377) ?x1380) 0.0))))))))))))))))
(assert
 (let ((?x1479 (* l_0_2_42 l_0_2_42)))
 (let ((?x1477 (* l_0_2_41 l_0_2_41)))
 (let ((?x1475 (* l_0_2_40 l_0_2_40)))
 (let ((?x1473 (* l_0_2_39 l_0_2_39)))
 (let ((?x1471 (* l_0_2_38 l_0_2_38)))
 (let ((?x1469 (* l_0_2_37 l_0_2_37)))
 (let ((?x1464 (* l_0_2_21 l_0_2_21)))
 (let ((?x1462 (* l_0_2_20 l_0_2_20)))
 (let ((?x1460 (* l_0_2_19 l_0_2_19)))
 (let ((?x1458 (* l_0_2_18 l_0_2_18)))
 (let ((?x2138 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x1458) ?x1460)))
 (let ((?x2145 (- (- (- (- (- (+ (+ ?x2138 ?x1462) ?x1464) ?x1469) ?x1471) ?x1473) ?x1475) ?x1477)))
 (= (- ?x2145 ?x1479) 0.0))))))))))))))
(assert
 (let ((?x723 (* l_0_2_22 l_0_2_22)))
 (let ((?x727 (* l_0_2_1 l_0_2_1)))
 (let ((?x1851 (- ?x727 ?x723)))
 (= ?x1851 0.0)))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x736 (* ?x735 l_0_2_23)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x736)))
 (= (- ?x1859 (* (* 2.0 l_0_2_64) l_0_2_67)) 0.0)))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x761 (* ?x735 l_0_2_25)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x759 (* ?x757 l_0_2_4)))
 (= (- ?x759 ?x761) 0.0))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x786 (* ?x735 l_0_2_28)))
 (let ((?x761 (* ?x735 l_0_2_25)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x784 (* ?x757 l_0_2_7)))
 (let ((?x759 (* ?x757 l_0_2_4)))
 (let ((?x2174 (+ (- (- (+ ?x759 ?x784) ?x761) ?x786) (* (* 2.0 l_0_2_43) l_0_2_46))))
 (= ?x2174 0.0)))))))))
(assert
 (let ((?x862 (* l_0_2_3 l_0_2_3)))
 (let ((?x860 (* l_0_2_24 l_0_2_24)))
 (let ((?x1891 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x860) ?x862)))
 (let ((?x2188 (- (- ?x1891 (* (* 2.0 l_0_2_65) l_0_2_67)) (* (* 2.0 l_0_2_66) l_0_2_68))))
 (= ?x2188 0.0))))))
(assert
 (let ((?x2211 (* l_0_2_69 l_0_2_69)))
 (let ((?x2209 (* l_0_2_68 l_0_2_68)))
 (let ((?x2207 (* l_0_2_67 l_0_2_67)))
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x902 (* ?x901 l_0_2_5)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x898 (* ?x820 l_0_2_26)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x895 (* ?x817 l_0_2_25)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x893 (* ?x892 l_0_2_4)))
 (= (- (- (- (+ (- (- ?x893 ?x895) ?x898) ?x902) ?x2207) ?x2209) ?x2211) 0.0)))))))))))))
(assert
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x964 (* ?x901 l_0_2_8)))
 (let ((?x902 (* ?x901 l_0_2_5)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x961 (* ?x820 l_0_2_29)))
 (let ((?x898 (* ?x820 l_0_2_26)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x958 (* ?x817 l_0_2_28)))
 (let ((?x895 (* ?x817 l_0_2_25)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x956 (* ?x892 l_0_2_7)))
 (let ((?x893 (* ?x892 l_0_2_4)))
 (let ((?x2235 (+ (+ (- (- (- (- (+ ?x893 ?x956) ?x895) ?x958) ?x898) ?x961) ?x902) ?x964)))
 (let ((?x2239 (+ (+ ?x2235 (* (* 2.0 l_0_2_44) l_0_2_46)) (* (* 2.0 l_0_2_45) l_0_2_47))))
 (let ((?x2243 (- (- ?x2239 (* (* 2.0 l_0_2_67) l_0_2_70)) (* (* 2.0 l_0_2_68) l_0_2_71))))
 (= (- ?x2243 (* (* 2.0 l_0_2_69) l_0_2_72)) 0.0)))))))))))))))))
(assert
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x1044 (* ?x820 l_0_2_33)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x1042 (* ?x817 l_0_2_32)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1040 (* ?x1039 l_0_2_3)))
 (let ((?x1955 (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x1040) ?x1042) ?x1044)))
 (let ((?x2283 (- (- ?x1955 (* (* 2.0 l_0_2_67) l_0_2_74)) (* (* 2.0 l_0_2_68) l_0_2_75))))
 (= (- ?x2283 (* (* 2.0 l_0_2_69) l_0_2_76)) 0.0))))))))))
(assert
 (let ((?x1177 (* l_0_2_6 l_0_2_6)))
 (let ((?x1175 (* l_0_2_5 l_0_2_5)))
 (let ((?x1173 (* l_0_2_4 l_0_2_4)))
 (let ((?x1171 (* l_0_2_27 l_0_2_27)))
 (let ((?x1969 (+ (- (- (* (- l_0_2_25) l_0_2_25) (* l_0_2_26 l_0_2_26)) ?x1171) ?x1173)))
 (= (+ (+ ?x1969 ?x1175) ?x1177) 0.0)))))))
(assert
 (let ((?x1177 (* l_0_2_6 l_0_2_6)))
 (let ((?x1266 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1175 (* l_0_2_5 l_0_2_5)))
 (let ((?x1263 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2317 (* l_0_2_48 l_0_2_48)))
 (let ((?x2315 (* l_0_2_47 l_0_2_47)))
 (let ((?x2313 (* l_0_2_46 l_0_2_46)))
 (let ((?x1173 (* l_0_2_4 l_0_2_4)))
 (let ((?x1251 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1171 (* l_0_2_27 l_0_2_27)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1235 (* ?x1168 l_0_2_30)))
 (let ((?x1166 (* l_0_2_26 l_0_2_26)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1232 (* ?x1163 l_0_2_29)))
 (let ((?x2307 (- (- (* (* (- 2.0) l_0_2_25) l_0_2_28) (* l_0_2_25 l_0_2_25)) ?x1232)))
 (let ((?x2316 (+ (+ (+ (+ (- (- (- ?x2307 ?x1166) ?x1235) ?x1171) ?x1251) ?x1173) ?x2313) ?x2315)))
 (= (+ (+ (+ (+ (+ ?x2316 ?x2317) ?x1263) ?x1175) ?x1266) ?x1177) 0.0)))))))))))))))))))
(assert
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1365 (* ?x1168 l_0_2_34)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1363 (* ?x1163 l_0_2_33)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1361 (* ?x1158 l_0_2_32)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1353 (* ?x1350 l_0_2_6)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1348 (* ?x1039 l_0_2_5)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1344 (* ?x1342 l_0_2_4)))
 (= (- (- (- (+ (+ ?x1344 ?x1348) ?x1353) ?x1361) ?x1363) ?x1365) 0.0))))))))))))))
(assert
 (let ((?x1553 (* l_0_2_9 l_0_2_9)))
 (let ((?x1551 (* l_0_2_8 l_0_2_8)))
 (let ((?x1549 (* l_0_2_7 l_0_2_7)))
 (let ((?x1266 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x1263 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x1251 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1535 (* l_0_2_31 l_0_2_31)))
 (let ((?x1532 (* l_0_2_30 l_0_2_30)))
 (let ((?x1529 (* l_0_2_29 l_0_2_29)))
 (let ((?x1526 (* l_0_2_28 l_0_2_28)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1235 (* ?x1168 l_0_2_30)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1232 (* ?x1163 l_0_2_29)))
 (let ((?x2340 (- (- (* l_0_2_10 l_0_2_10) (* (* 2.0 l_0_2_25) l_0_2_28)) ?x1232)))
 (let ((?x2348 (+ (+ (- (- (- (- (- ?x2340 ?x1235) ?x1526) ?x1529) ?x1532) ?x1535) ?x1251) (* (* 2.0 l_0_2_46) l_0_2_49))))
 (let ((?x2352 (+ (+ ?x2348 (* (* 2.0 l_0_2_47) l_0_2_50)) (* (* 2.0 l_0_2_48) l_0_2_51))))
 (= (+ (+ (+ (+ (+ ?x2352 ?x1263) ?x1266) ?x1549) ?x1551) ?x1553) 0.0)))))))))))))))))))
(assert
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1608 (* ?x1247 l_0_2_35)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1606 (* ?x1244 l_0_2_34)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1604 (* ?x1241 l_0_2_33)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1602 (* ?x1238 l_0_2_32)))
 (let ((?x1168 (* 2.0 l_0_2_27)))
 (let ((?x1365 (* ?x1168 l_0_2_34)))
 (let ((?x1163 (* 2.0 l_0_2_26)))
 (let ((?x1363 (* ?x1163 l_0_2_33)))
 (let ((?x1158 (* 2.0 l_0_2_25)))
 (let ((?x1361 (* ?x1158 l_0_2_32)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1598 (* ?x1350 l_0_2_9)))
 (let ((?x1353 (* ?x1350 l_0_2_6)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1595 (* ?x1039 l_0_2_8)))
 (let ((?x1348 (* ?x1039 l_0_2_5)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1592 (* ?x1342 l_0_2_7)))
 (let ((?x2379 (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) (* ?x1342 l_0_2_4)) ?x1592) ?x1348)))
 (let ((?x2391 (- (- (- (- (+ (+ (+ ?x2379 ?x1595) ?x1353) ?x1598) ?x1361) ?x1363) ?x1365) ?x1602)))
 (let ((?x2396 (+ (- (- (- ?x2391 ?x1604) ?x1606) ?x1608) (* (* 2.0 l_0_2_46) l_0_2_53))))
 (let ((?x2400 (+ (+ ?x2396 (* (* 2.0 l_0_2_47) l_0_2_54)) (* (* 2.0 l_0_2_48) l_0_2_55))))
 (= ?x2400 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1772 (* l_0_2_36 l_0_2_36)))
 (let ((?x1770 (* l_0_2_35 l_0_2_35)))
 (let ((?x1768 (* l_0_2_34 l_0_2_34)))
 (let ((?x1766 (* l_0_2_33 l_0_2_33)))
 (let ((?x1764 (* l_0_2_32 l_0_2_32)))
 (let ((?x1762 (* l_0_2_15 l_0_2_15)))
 (let ((?x1760 (* l_0_2_14 l_0_2_14)))
 (let ((?x1758 (* l_0_2_13 l_0_2_13)))
 (let ((?x2098 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x1758) ?x1760)))
 (let ((?x2104 (- (- (- (- (- (+ ?x2098 ?x1762) ?x1764) ?x1766) ?x1768) ?x1770) ?x1772)))
 (= ?x2104 0.0))))))))))))
(assert
 (let ((?x2425 (* l_0_2_43 l_0_2_43)))
 (let ((?x723 (* l_0_2_22 l_0_2_22)))
 (let ((?x727 (* l_0_2_1 l_0_2_1)))
 (let ((?x1851 (- ?x727 ?x723)))
 (= (+ ?x1851 ?x2425) 0.0))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x736 (* ?x735 l_0_2_23)))
 (let ((?x1859 (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x736)))
 (let ((?x2434 (- (+ ?x1859 (* (* 2.0 l_0_2_43) l_0_2_44)) (* (* 2.0 l_0_2_64) l_0_2_70))))
 (= ?x2434 0.0))))))
(assert
 (let ((?x735 (* 2.0 l_0_2_22)))
 (let ((?x786 (* ?x735 l_0_2_28)))
 (let ((?x757 (* 2.0 l_0_2_1)))
 (let ((?x784 (* ?x757 l_0_2_7)))
 (let ((?x1872 (- ?x784 ?x786)))
 (= (+ ?x1872 (* (* 2.0 l_0_2_43) l_0_2_49)) 0.0)))))))
(assert
 (let ((?x2455 (* l_0_2_45 l_0_2_45)))
 (let ((?x2453 (* l_0_2_44 l_0_2_44)))
 (let ((?x862 (* l_0_2_3 l_0_2_3)))
 (let ((?x860 (* l_0_2_24 l_0_2_24)))
 (let ((?x1891 (+ (- (- (* l_0_2_2 l_0_2_2) (* l_0_2_23 l_0_2_23)) ?x860) ?x862)))
 (let ((?x2460 (- (- (+ (+ ?x1891 ?x2453) ?x2455) (* (* 2.0 l_0_2_65) l_0_2_70)) (* (* 2.0 l_0_2_66) l_0_2_71))))
 (= ?x2460 0.0))))))))
(assert
 (let ((?x2492 (* l_0_2_73 l_0_2_73)))
 (let ((?x2490 (* l_0_2_72 l_0_2_72)))
 (let ((?x2488 (* l_0_2_71 l_0_2_71)))
 (let ((?x2486 (* l_0_2_70 l_0_2_70)))
 (let ((?x901 (* 2.0 l_0_2_3)))
 (let ((?x964 (* ?x901 l_0_2_8)))
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x961 (* ?x820 l_0_2_29)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x958 (* ?x817 l_0_2_28)))
 (let ((?x892 (* 2.0 l_0_2_2)))
 (let ((?x956 (* ?x892 l_0_2_7)))
 (let ((?x2483 (+ (+ (- (- ?x956 ?x958) ?x961) ?x964) (* (* 2.0 l_0_2_44) l_0_2_49))))
 (let ((?x2491 (- (- (- (+ ?x2483 (* (* 2.0 l_0_2_45) l_0_2_50)) ?x2486) ?x2488) ?x2490)))
 (= (- ?x2491 ?x2492) 0.0))))))))))))))))
(assert
 (let ((?x820 (* 2.0 l_0_2_24)))
 (let ((?x1044 (* ?x820 l_0_2_33)))
 (let ((?x817 (* 2.0 l_0_2_23)))
 (let ((?x1042 (* ?x817 l_0_2_32)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1040 (* ?x1039 l_0_2_3)))
 (let ((?x1955 (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x1040) ?x1042) ?x1044)))
 (let ((?x2520 (+ (+ ?x1955 (* (* 2.0 l_0_2_44) l_0_2_53)) (* (* 2.0 l_0_2_45) l_0_2_54))))
 (let ((?x2524 (- (- ?x2520 (* (* 2.0 l_0_2_70) l_0_2_74)) (* (* 2.0 l_0_2_71) l_0_2_75))))
 (let ((?x2528 (- (- ?x2524 (* (* 2.0 l_0_2_72) l_0_2_76)) (* (* 2.0 l_0_2_73) l_0_2_77))))
 (= ?x2528 0.0))))))))))))
(assert
 (let ((?x1553 (* l_0_2_9 l_0_2_9)))
 (let ((?x1551 (* l_0_2_8 l_0_2_8)))
 (let ((?x1549 (* l_0_2_7 l_0_2_7)))
 (let ((?x2566 (* l_0_2_52 l_0_2_52)))
 (let ((?x2564 (* l_0_2_51 l_0_2_51)))
 (let ((?x2562 (* l_0_2_50 l_0_2_50)))
 (let ((?x2560 (* l_0_2_49 l_0_2_49)))
 (let ((?x1535 (* l_0_2_31 l_0_2_31)))
 (let ((?x1532 (* l_0_2_30 l_0_2_30)))
 (let ((?x1529 (* l_0_2_29 l_0_2_29)))
 (let ((?x2031 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_28 l_0_2_28)) ?x1529) ?x1532)))
 (let ((?x2032 (- ?x2031 ?x1535)))
 (let ((?x2570 (+ (+ (+ (+ (+ (+ (+ ?x2032 ?x2560) ?x2562) ?x2564) ?x2566) ?x1549) ?x1551) ?x1553)))
 (= ?x2570 0.0)))))))))))))))
(assert
 (let ((?x1247 (* 2.0 l_0_2_31)))
 (let ((?x1608 (* ?x1247 l_0_2_35)))
 (let ((?x1244 (* 2.0 l_0_2_30)))
 (let ((?x1606 (* ?x1244 l_0_2_34)))
 (let ((?x1241 (* 2.0 l_0_2_29)))
 (let ((?x1604 (* ?x1241 l_0_2_33)))
 (let ((?x1238 (* 2.0 l_0_2_28)))
 (let ((?x1602 (* ?x1238 l_0_2_32)))
 (let ((?x1350 (* 2.0 l_0_2_13)))
 (let ((?x1598 (* ?x1350 l_0_2_9)))
 (let ((?x1039 (* 2.0 l_0_2_12)))
 (let ((?x1595 (* ?x1039 l_0_2_8)))
 (let ((?x1342 (* 2.0 l_0_2_11)))
 (let ((?x1592 (* ?x1342 l_0_2_7)))
 (let ((?x1218 (* 2.0 l_0_2_10)))
 (let ((?x2050 (* ?x1218 l_0_2_14)))
 (let ((?x2057 (- (- (- (- (+ (+ (+ ?x2050 ?x1592) ?x1595) ?x1598) ?x1602) ?x1604) ?x1606) ?x1608)))
 (let ((?x2577 (+ (+ ?x2057 (* (* 2.0 l_0_2_49) l_0_2_53)) (* (* 2.0 l_0_2_50) l_0_2_54))))
 (let ((?x2581 (+ (+ ?x2577 (* (* 2.0 l_0_2_51) l_0_2_55)) (* (* 2.0 l_0_2_52) l_0_2_56))))
 (= ?x2581 0.0)))))))))))))))))))))
(assert
 (let ((?x2601 (* l_0_2_57 l_0_2_57)))
 (let ((?x2599 (* l_0_2_56 l_0_2_56)))
 (let ((?x2597 (* l_0_2_55 l_0_2_55)))
 (let ((?x2595 (* l_0_2_54 l_0_2_54)))
 (let ((?x2593 (* l_0_2_53 l_0_2_53)))
 (let ((?x1772 (* l_0_2_36 l_0_2_36)))
 (let ((?x1770 (* l_0_2_35 l_0_2_35)))
 (let ((?x1768 (* l_0_2_34 l_0_2_34)))
 (let ((?x1766 (* l_0_2_33 l_0_2_33)))
 (let ((?x1764 (* l_0_2_32 l_0_2_32)))
 (let ((?x1762 (* l_0_2_15 l_0_2_15)))
 (let ((?x1760 (* l_0_2_14 l_0_2_14)))
 (let ((?x1758 (* l_0_2_13 l_0_2_13)))
 (let ((?x2098 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x1758) ?x1760)))
 (let ((?x2104 (- (- (- (- (- (+ ?x2098 ?x1762) ?x1764) ?x1766) ?x1768) ?x1770) ?x1772)))
 (= (+ (+ (+ (+ (+ ?x2104 ?x2593) ?x2595) ?x2597) ?x2599) ?x2601) 0.0)))))))))))))))))
(assert
 (= (* (- l_0_2_64) l_0_2_64) 0.0))
(assert
 (= (* (* (- 2.0) l_0_2_64) l_0_2_65) 0.0))
(assert
 (let ((?x2620 (- (* (* (- 2.0) l_0_2_65) l_0_2_74) (* (* 2.0 l_0_2_66) l_0_2_75))))
 (= ?x2620 0.0)))
(assert
 (let ((?x2641 (* l_0_2_78 l_0_2_78)))
 (let ((?x2639 (* l_0_2_77 l_0_2_77)))
 (let ((?x2637 (* l_0_2_76 l_0_2_76)))
 (let ((?x2640 (- (- (- (* (- l_0_2_74) l_0_2_74) (* l_0_2_75 l_0_2_75)) ?x2637) ?x2639)))
 (= (- ?x2640 ?x2641) 0.0))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_22 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_42 0.0))
(assert
 (>= l_0_2_43 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_52 0.0))
(assert
 (>= l_0_2_57 0.0))
(assert
 (>= l_0_2_63 0.0))
(assert
 (>= l_0_2_64 0.0))
(assert
 (>= l_0_2_66 0.0))
(assert
 (>= l_0_2_69 0.0))
(assert
 (>= l_0_2_73 0.0))
(assert
 (>= l_0_2_78 0.0))
(assert
 (>= l_0_2_84 0.0))
(assert
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2708 (* ?x2707 l_0_3_80)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2705 (* ?x2704 l_0_3_79)))
 (let ((?x2702 (* l_0_3_3 l_0_3_3)))
 (let ((?x2700 (* l_0_3_24 l_0_3_24)))
 (let ((?x2698 (* l_0_3_23 l_0_3_23)))
 (let ((?x2696 (* l_0_3_2 l_0_3_2)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x2688 (* ?x2687 l_0_3_87)))
 (let ((?x2685 (* (- 2.0) l_0_3_100)))
 (let ((?x2686 (* ?x2685 l_0_3_86)))
 (let ((?x2695 (- (- (- ?x2686 ?x2688) (* (* 2.0 l_0_3_107) l_0_3_121)) (* (* 2.0 l_0_3_108) l_0_3_122))))
 (let ((?x2710 (+ (+ (+ (- (+ (+ (- ?x2695 ?x2696) ?x2698) ?x2700) ?x2702) ?x2705) ?x2708) 1.0)))
 (= ?x2710 0.0))))))))))))))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2768 (* ?x2767 l_0_3_96)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2765 (* ?x2764 l_0_3_95)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x2762 (* ?x2761 l_0_3_95)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2759 (* ?x2707 l_0_3_75)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2757 (* ?x2704 l_0_3_74)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2755 (* ?x2754 l_0_3_74)))
 (let ((?x2702 (* l_0_3_3 l_0_3_3)))
 (let ((?x2700 (* l_0_3_24 l_0_3_24)))
 (let ((?x2698 (* l_0_3_23 l_0_3_23)))
 (let ((?x2751 (- (+ (* (* (- 2.0) l_0_3_106) l_0_3_116) (* l_0_3_2 l_0_3_2)) ?x2698)))
 (let ((?x2766 (+ (- (- (- (+ (+ (- ?x2751 ?x2700) ?x2702) ?x2755) ?x2757) ?x2759) ?x2762) ?x2765)))
 (= (- (+ ?x2766 ?x2768) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x2820 (* l_0_3_87 l_0_3_87)))
 (let ((?x2818 (* l_0_3_86 l_0_3_86)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x2816 (* ?x2761 l_0_3_86)))
 (let ((?x2814 (* l_0_3_66 l_0_3_66)))
 (let ((?x2812 (* l_0_3_65 l_0_3_65)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2810 (* ?x2754 l_0_3_65)))
 (let ((?x2817 (- (- (- (+ (* (* (- 2.0) l_0_3_106) l_0_3_107) ?x2810) ?x2812) ?x2814) ?x2816)))
 (= (- (+ (+ ?x2817 ?x2818) ?x2820) 1.0) 0.0)))))))))))
(assert
 (let ((?x2853 (* l_0_3_108 l_0_3_108)))
 (let ((?x2856 (+ (- (- (- _a_0_) (* l_0_3_107 l_0_3_107)) ?x2853) (* 1.0 (* l_0_3_65 l_0_3_65)))))
 (let ((?x2861 (- (+ ?x2856 (* 1.0 (* l_0_3_66 l_0_3_66))) (* (* 1.0 l_0_3_86) l_0_3_86))))
 (= (+ (- ?x2861 (* (* 1.0 l_0_3_87) l_0_3_87)) 1.0) 0.0)))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2898 (* ?x2767 l_0_3_92)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2896 (* ?x2764 l_0_3_91)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2894 (* ?x2707 l_0_3_71)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2892 (* ?x2704 l_0_3_70)))
 (let ((?x2890 (* l_0_3_45 l_0_3_45)))
 (let ((?x2888 (* l_0_3_44 l_0_3_44)))
 (let ((?x2702 (* l_0_3_3 l_0_3_3)))
 (let ((?x2700 (* l_0_3_24 l_0_3_24)))
 (let ((?x2698 (* l_0_3_23 l_0_3_23)))
 (let ((?x2696 (* l_0_3_2 l_0_3_2)))
 (let ((?x2883 (- (* (* (- 2.0) l_0_3_107) l_0_3_112) (* (* 2.0 l_0_3_108) l_0_3_113))))
 (let ((?x2893 (+ (- (- (+ (- (- (+ ?x2883 ?x2696) ?x2698) ?x2700) ?x2702) ?x2888) ?x2890) ?x2892)))
 (= (- (- (- (+ ?x2893 ?x2894) ?x2896) ?x2898) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2949 (* ?x2754 l_0_3_79)))
 (let ((?x2947 (* l_0_3_22 l_0_3_22)))
 (let ((?x2948 (+ (+ (* (- l_0_3_1) l_0_3_1) (* (* 2.0 l_0_3_100) l_0_3_85)) ?x2947)))
 (= (- ?x2948 ?x2949) 0.0))))))
(assert
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2708 (* ?x2707 l_0_3_80)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2705 (* ?x2704 l_0_3_79)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2949 (* ?x2754 l_0_3_79)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x2975 (* ?x2974 l_0_3_23)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x2688 (* ?x2687 l_0_3_87)))
 (let ((?x2944 (* 2.0 l_0_3_100)))
 (let ((?x2945 (* ?x2944 l_0_3_85)))
 (let ((?x2970 (+ (+ (- (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x2945) (* ?x2944 l_0_3_86)) ?x2688)))
 (let ((?x2978 (- (+ (+ (- ?x2970 (* (* 2.0 l_0_3_106) l_0_3_121)) ?x2975) ?x2949) ?x2705)))
 (= (- ?x2978 ?x2708) 0.0))))))))))))))))
(assert
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x3030 (* ?x3029 l_0_3_81)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x3027 (* ?x3026 l_0_3_80)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x3024 (* ?x3023 l_0_3_79)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2949 (* ?x2754 l_0_3_79)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3020 (* ?x2974 l_0_3_37)))
 (let ((?x3018 (* ?x2974 l_0_3_25)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3016 (* ?x3015 l_0_3_90)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3013 (* ?x2687 l_0_3_89)))
 (let ((?x2944 (* 2.0 l_0_3_100)))
 (let ((?x3011 (* ?x2944 l_0_3_88)))
 (let ((?x2945 (* ?x2944 l_0_3_85)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3008 (* ?x3006 l_0_3_4)))
 (let ((?x3007 (* ?x3006 l_0_3_16)))
 (let ((?x3021 (- (+ (+ (+ (+ (- (- ?x3007 ?x3008) ?x2945) ?x3011) ?x3013) ?x3016) ?x3018) ?x3020)))
 (= (- (- (- (+ ?x3021 ?x2949) ?x3024) ?x3027) ?x3030) 0.0))))))))))))))))))))))))
(assert
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x3111 (* ?x3110 l_0_3_82)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x3108 (* ?x3107 l_0_3_81)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x3105 (* ?x3104 l_0_3_80)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x3102 (* ?x3101 l_0_3_79)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3020 (* ?x2974 l_0_3_37)))
 (let ((?x3095 (* ?x2974 l_0_3_28)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3093 (* ?x3092 l_0_3_94)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3090 (* ?x3015 l_0_3_93)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3088 (* ?x2687 l_0_3_92)))
 (let ((?x2944 (* 2.0 l_0_3_100)))
 (let ((?x3086 (* ?x2944 l_0_3_91)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3084 (* ?x3006 l_0_3_7)))
 (let ((?x3007 (* ?x3006 l_0_3_16)))
 (let ((?x3097 (- (+ (+ (+ (+ (+ (- ?x3007 ?x3084) ?x3086) ?x3088) ?x3090) ?x3093) ?x3095) ?x3020)))
 (let ((?x3109 (- (- (- (- ?x3097 (* (* 2.0 l_0_3_43) l_0_3_58)) ?x3102) ?x3105) ?x3108)))
 (= (- ?x3109 ?x3111) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3203 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3200 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3197 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3194 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3191 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3188 (* ?x3187 l_0_3_38)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3185 (* ?x3184 l_0_3_37)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3182 (* ?x2974 l_0_3_32)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3180 (* ?x3179 l_0_3_3)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3177 (* ?x3176 l_0_3_2)))
 (let ((?x3174 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3171 (* ?x3092 l_0_3_98)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3169 (* ?x3015 l_0_3_97)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3167 (* ?x2687 l_0_3_96)))
 (let ((?x3166 (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) (* (* 2.0 l_0_3_100) l_0_3_95))))
 (let ((?x3183 (+ (+ (+ (+ (+ (+ (+ ?x3166 ?x3167) ?x3169) ?x3171) ?x3174) ?x3177) ?x3180) ?x3182)))
 (let ((?x3204 (- (- (- (- (- (- (- ?x3183 ?x3185) ?x3188) ?x3191) ?x3194) ?x3197) ?x3200) ?x3203)))
 (= ?x3204 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x3302 (* l_0_3_84 l_0_3_84)))
 (let ((?x3300 (* l_0_3_83 l_0_3_83)))
 (let ((?x3298 (* l_0_3_82 l_0_3_82)))
 (let ((?x3296 (* l_0_3_81 l_0_3_81)))
 (let ((?x3294 (* l_0_3_80 l_0_3_80)))
 (let ((?x3292 (* l_0_3_79 l_0_3_79)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3020 (* ?x2974 l_0_3_37)))
 (let ((?x3289 (* l_0_3_105 l_0_3_105)))
 (let ((?x3287 (* l_0_3_104 l_0_3_104)))
 (let ((?x3285 (* l_0_3_103 l_0_3_103)))
 (let ((?x3283 (* l_0_3_102 l_0_3_102)))
 (let ((?x3281 (* l_0_3_101 l_0_3_101)))
 (let ((?x3282 (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_16) (* l_0_3_100 l_0_3_100)) ?x3281)))
 (let ((?x3295 (- (- (+ (+ (+ (+ (+ ?x3282 ?x3283) ?x3285) ?x3287) ?x3289) ?x3020) ?x3292) ?x3294)))
 (= (- (- (- (- ?x3295 ?x3296) ?x3298) ?x3300) ?x3302) 0.0)))))))))))))))))
(assert
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x3030 (* ?x3029 l_0_3_81)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x3027 (* ?x3026 l_0_3_80)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x3024 (* ?x3023 l_0_3_79)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2708 (* ?x2707 l_0_3_80)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2705 (* ?x2704 l_0_3_79)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3357 (* ?x3356 l_0_3_5)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3188 (* ?x3187 l_0_3_38)))
 (let ((?x3353 (* ?x3187 l_0_3_26)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3185 (* ?x3184 l_0_3_37)))
 (let ((?x3350 (* ?x3184 l_0_3_25)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3348 (* ?x3347 l_0_3_4)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3180 (* ?x3179 l_0_3_3)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3177 (* ?x3176 l_0_3_2)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3016 (* ?x3015 l_0_3_90)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3013 (* ?x2687 l_0_3_89)))
 (let ((?x2688 (* ?x2687 l_0_3_87)))
 (let ((?x2944 (* 2.0 l_0_3_100)))
 (let ((?x3011 (* ?x2944 l_0_3_88)))
 (let ((?x2685 (* (- 2.0) l_0_3_100)))
 (let ((?x2686 (* ?x2685 l_0_3_86)))
 (let ((?x3338 (- (- (- (- (- ?x2686 ?x3011) ?x2688) ?x3013) ?x3016) (* (* 2.0 l_0_3_109) l_0_3_121))))
 (let ((?x3344 (- (- ?x3338 (* (* 2.0 l_0_3_110) l_0_3_122)) (* (* 2.0 l_0_3_111) l_0_3_123))))
 (let ((?x3355 (- (+ (- (+ (- (+ (+ ?x3344 ?x3177) ?x3180) ?x3348) ?x3350) ?x3185) ?x3353) ?x3188)))
 (= (+ (+ (+ (+ (+ (- ?x3355 ?x3357) ?x2705) ?x2708) ?x3024) ?x3027) ?x3030) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x3111 (* ?x3110 l_0_3_82)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x3108 (* ?x3107 l_0_3_81)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x3105 (* ?x3104 l_0_3_80)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x3102 (* ?x3101 l_0_3_79)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3447 (* ?x3356 l_0_3_8)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3188 (* ?x3187 l_0_3_38)))
 (let ((?x3444 (* ?x3187 l_0_3_29)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3185 (* ?x3184 l_0_3_37)))
 (let ((?x3441 (* ?x3184 l_0_3_28)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3439 (* ?x3347 l_0_3_7)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3180 (* ?x3179 l_0_3_3)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3177 (* ?x3176 l_0_3_2)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3093 (* ?x3092 l_0_3_94)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3090 (* ?x3015 l_0_3_93)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3088 (* ?x2687 l_0_3_92)))
 (let ((?x3427 (- (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_91) ?x3088) ?x3090) ?x3093) (* (* 2.0 l_0_3_112) l_0_3_121))))
 (let ((?x3433 (- (- ?x3427 (* (* 2.0 l_0_3_113) l_0_3_122)) (* (* 2.0 l_0_3_114) l_0_3_123))))
 (let ((?x3440 (- (+ (+ (- ?x3433 (* (* 2.0 l_0_3_115) l_0_3_124)) ?x3177) ?x3180) ?x3439)))
 (let ((?x3451 (- (- (- (+ (- (+ ?x3440 ?x3441) ?x3185) ?x3444) ?x3188) ?x3447) (* (* 2.0 l_0_3_44) l_0_3_58))))
 (let ((?x3457 (+ (+ (+ (- ?x3451 (* (* 2.0 l_0_3_45) l_0_3_59)) ?x3102) ?x3105) ?x3108)))
 (= (+ ?x3457 ?x3111) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3203 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3200 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3197 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3194 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3191 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3564 (* ?x3187 l_0_3_33)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3562 (* ?x3184 l_0_3_32)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3557 (* ?x3556 l_0_3_3)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3542 (* ?x3541 l_0_3_2)))
 (let ((?x3174 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3171 (* ?x3092 l_0_3_98)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3169 (* ?x3015 l_0_3_97)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3167 (* ?x2687 l_0_3_96)))
 (let ((?x3540 (- (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_95) ?x3167) ?x3169) ?x3171) ?x3174)))
 (let ((?x3549 (- (- (- ?x3540 ?x3542) (* (* 2.0 l_0_3_116) l_0_3_121)) (* (* 2.0 l_0_3_117) l_0_3_122))))
 (let ((?x3555 (- (- ?x3549 (* (* 2.0 l_0_3_118) l_0_3_123)) (* (* 2.0 l_0_3_119) l_0_3_124))))
 (let ((?x3565 (+ (+ (- (- ?x3555 ?x3557) (* (* 2.0 l_0_3_120) l_0_3_125)) ?x3562) ?x3564)))
 (= (+ (+ (+ (+ (+ ?x3565 ?x3191) ?x3194) ?x3197) ?x3200) ?x3203) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3188 (* ?x3187 l_0_3_38)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3185 (* ?x3184 l_0_3_37)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3180 (* ?x3179 l_0_3_3)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3177 (* ?x3176 l_0_3_2)))
 (let ((?x3659 (* l_0_3_126 l_0_3_126)))
 (let ((?x3657 (* l_0_3_125 l_0_3_125)))
 (let ((?x3655 (* l_0_3_124 l_0_3_124)))
 (let ((?x3653 (* l_0_3_123 l_0_3_123)))
 (let ((?x3651 (* l_0_3_122 l_0_3_122)))
 (let ((?x3649 (* l_0_3_121 l_0_3_121)))
 (let ((?x3636 (- (* (* (- 1.0) l_0_3_100) l_0_3_100) (* (* 1.0 l_0_3_101) l_0_3_101))))
 (let ((?x3642 (- (- ?x3636 (* (* 1.0 l_0_3_102) l_0_3_102)) (* (* 1.0 l_0_3_103) l_0_3_103))))
 (let ((?x3648 (- (- ?x3642 (* (* 1.0 l_0_3_104) l_0_3_104)) (* (* 1.0 l_0_3_105) l_0_3_105))))
 (let ((?x3661 (- (- (- (- (- (- (- ?x3648 ?x3649) ?x3651) ?x3653) ?x3655) ?x3657) ?x3659) ?x3177)))
 (let ((?x3666 (+ (+ (+ (- ?x3661 ?x3180) ?x3185) ?x3188) (* 1.0 (* l_0_3_79 l_0_3_79)))))
 (let ((?x3670 (+ (+ ?x3666 (* 1.0 (* l_0_3_80 l_0_3_80))) (* 1.0 (* l_0_3_81 l_0_3_81)))))
 (let ((?x3674 (+ (+ ?x3670 (* 1.0 (* l_0_3_82 l_0_3_82))) (* 1.0 (* l_0_3_83 l_0_3_83)))))
 (= (+ ?x3674 (* 1.0 (* l_0_3_84 l_0_3_84))) 0.0)))))))))))))))))))))))
(assert
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x3030 (* ?x3029 l_0_3_81)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x3027 (* ?x3026 l_0_3_80)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x3024 (* ?x3023 l_0_3_79)))
 (let ((?x3742 (* l_0_3_6 l_0_3_6)))
 (let ((?x3740 (* l_0_3_5 l_0_3_5)))
 (let ((?x3738 (* l_0_3_4 l_0_3_4)))
 (let ((?x3736 (* l_0_3_27 l_0_3_27)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3734 (* ?x3733 l_0_3_39)))
 (let ((?x3731 (* l_0_3_26 l_0_3_26)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3729 (* ?x3728 l_0_3_38)))
 (let ((?x3726 (* l_0_3_25 l_0_3_25)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3724 (* ?x3723 l_0_3_37)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3721 (* ?x3720 l_0_3_6)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3718 (* ?x3179 l_0_3_5)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3716 (* ?x3176 l_0_3_4)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3016 (* ?x3015 l_0_3_90)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3013 (* ?x2687 l_0_3_89)))
 (let ((?x3719 (+ (+ (- (- (* (* (- 2.0) l_0_3_100) l_0_3_88) ?x3013) ?x3016) ?x3716) ?x3718)))
 (let ((?x3737 (+ (- (+ (- (+ (- (+ ?x3719 ?x3721) ?x3724) ?x3726) ?x3729) ?x3731) ?x3734) ?x3736)))
 (= (+ (+ (+ (- (- (- ?x3737 ?x3738) ?x3740) ?x3742) ?x3024) ?x3027) ?x3030) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x3111 (* ?x3110 l_0_3_82)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x3108 (* ?x3107 l_0_3_81)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x3105 (* ?x3104 l_0_3_80)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x3102 (* ?x3101 l_0_3_79)))
 (let ((?x3849 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3846 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3834 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x3831 (* ?x3830 l_0_3_40)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x3828 (* ?x3827 l_0_3_39)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x3825 (* ?x3824 l_0_3_38)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x3822 (* ?x3821 l_0_3_37)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3734 (* ?x3733 l_0_3_39)))
 (let ((?x3818 (* ?x3733 l_0_3_30)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3729 (* ?x3728 l_0_3_38)))
 (let ((?x3815 (* ?x3728 l_0_3_29)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3724 (* ?x3723 l_0_3_37)))
 (let ((?x3812 (* ?x3723 l_0_3_28)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3720 l_0_3_9)))
 (let ((?x3721 (* ?x3720 l_0_3_6)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3807 (* ?x3179 l_0_3_8)))
 (let ((?x3718 (* ?x3179 l_0_3_5)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3804 (* ?x3176 l_0_3_7)))
 (let ((?x3716 (* ?x3176 l_0_3_4)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3093 (* ?x3092 l_0_3_94)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3090 (* ?x3015 l_0_3_93)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3088 (* ?x2687 l_0_3_92)))
 (let ((?x2944 (* 2.0 l_0_3_100)))
 (let ((?x3086 (* ?x2944 l_0_3_91)))
 (let ((?x3789 (* 2.0 l_0_3_10)))
 (let ((?x3798 (* ?x3789 l_0_3_19)))
 (let ((?x3806 (+ (+ (+ (- (- (- (- ?x3798 ?x3086) ?x3088) ?x3090) ?x3093) ?x3716) ?x3804) ?x3718)))
 (let ((?x3817 (- (+ (- (+ (+ (+ (+ ?x3806 ?x3807) ?x3721) ?x3810) ?x3812) ?x3724) ?x3815) ?x3729)))
 (let ((?x3835 (- (- (- (- (- (- (+ ?x3817 ?x3818) ?x3734) ?x3822) ?x3825) ?x3828) ?x3831) ?x3834)))
 (let ((?x3841 (- (- ?x3835 (* (* 2.0 l_0_3_46) l_0_3_58)) (* (* 2.0 l_0_3_47) l_0_3_59))))
 (let ((?x3851 (+ (- (- (- ?x3841 (* (* 2.0 l_0_3_48) l_0_3_60)) ?x3846) ?x3849) ?x3102)))
 (= (+ (+ (+ ?x3851 ?x3105) ?x3108) ?x3111) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3203 (* (* 2.0 l_0_3_78) l_0_3_83)))
 (let ((?x3200 (* (* 2.0 l_0_3_77) l_0_3_82)))
 (let ((?x3197 (* (* 2.0 l_0_3_76) l_0_3_81)))
 (let ((?x3194 (* (* 2.0 l_0_3_75) l_0_3_80)))
 (let ((?x3191 (* (* 2.0 l_0_3_74) l_0_3_79)))
 (let ((?x3995 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3992 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3989 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3986 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3983 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3980 (* ?x3733 l_0_3_34)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3978 (* ?x3728 l_0_3_33)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3976 (* ?x3723 l_0_3_32)))
 (let ((?x3974 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3971 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x3968 (* ?x3965 l_0_3_6)))
 (let ((?x3966 (* ?x3965 l_0_3_18)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3963 (* ?x3556 l_0_3_5)))
 (let ((?x3961 (* ?x3556 l_0_3_17)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3959 (* ?x3541 l_0_3_4)))
 (let ((?x3948 (* ?x3541 l_0_3_16)))
 (let ((?x3174 (* (* 2.0 l_0_3_104) l_0_3_99)))
 (let ((?x3092 (* 2.0 l_0_3_103)))
 (let ((?x3171 (* ?x3092 l_0_3_98)))
 (let ((?x3015 (* 2.0 l_0_3_102)))
 (let ((?x3169 (* ?x3015 l_0_3_97)))
 (let ((?x2687 (* 2.0 l_0_3_101)))
 (let ((?x3167 (* ?x2687 l_0_3_96)))
 (let ((?x3540 (- (- (- (- (* (* (- 2.0) l_0_3_100) l_0_3_95) ?x3167) ?x3169) ?x3171) ?x3174)))
 (let ((?x3972 (+ (- (+ (- (+ (- (+ ?x3540 ?x3948) ?x3959) ?x3961) ?x3963) ?x3966) ?x3968) ?x3971)))
 (let ((?x3990 (- (- (- (+ (+ (+ (+ ?x3972 ?x3974) ?x3976) ?x3978) ?x3980) ?x3983) ?x3986) ?x3989)))
 (let ((?x4001 (+ (+ (+ (+ (+ (- (- ?x3990 ?x3992) ?x3995) ?x3191) ?x3194) ?x3197) ?x3200) ?x3203)))
 (= ?x4001 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3302 (* l_0_3_84 l_0_3_84)))
 (let ((?x3300 (* l_0_3_83 l_0_3_83)))
 (let ((?x3298 (* l_0_3_82 l_0_3_82)))
 (let ((?x3296 (* l_0_3_81 l_0_3_81)))
 (let ((?x3294 (* l_0_3_80 l_0_3_80)))
 (let ((?x3292 (* l_0_3_79 l_0_3_79)))
 (let ((?x4116 (* l_0_3_42 l_0_3_42)))
 (let ((?x4114 (* l_0_3_41 l_0_3_41)))
 (let ((?x4112 (* l_0_3_40 l_0_3_40)))
 (let ((?x4110 (* l_0_3_39 l_0_3_39)))
 (let ((?x4108 (* l_0_3_38 l_0_3_38)))
 (let ((?x4106 (* l_0_3_37 l_0_3_37)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3734 (* ?x3733 l_0_3_39)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3729 (* ?x3728 l_0_3_38)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3724 (* ?x3723 l_0_3_37)))
 (let ((?x4101 (* l_0_3_21 l_0_3_21)))
 (let ((?x4099 (* l_0_3_20 l_0_3_20)))
 (let ((?x4097 (* l_0_3_19 l_0_3_19)))
 (let ((?x4095 (* l_0_3_18 l_0_3_18)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3721 (* ?x3720 l_0_3_6)))
 (let ((?x4092 (* l_0_3_17 l_0_3_17)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3718 (* ?x3179 l_0_3_5)))
 (let ((?x4089 (* l_0_3_16 l_0_3_16)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3716 (* ?x3176 l_0_3_4)))
 (let ((?x3289 (* l_0_3_105 l_0_3_105)))
 (let ((?x3287 (* l_0_3_104 l_0_3_104)))
 (let ((?x3285 (* l_0_3_103 l_0_3_103)))
 (let ((?x3283 (* l_0_3_102 l_0_3_102)))
 (let ((?x4084 (- (- (* (- l_0_3_100) l_0_3_100) (* l_0_3_101 l_0_3_101)) ?x3283)))
 (let ((?x4093 (+ (- (+ (- (- (- (- ?x4084 ?x3285) ?x3287) ?x3289) ?x3716) ?x4089) ?x3718) ?x4092)))
 (let ((?x4104 (+ (+ (+ (+ (+ (+ (- ?x4093 ?x3721) ?x4095) ?x4097) ?x4099) ?x4101) ?x3724) ?x3729)))
 (let ((?x4117 (- (- (- (- (- (- (+ ?x4104 ?x3734) ?x4106) ?x4108) ?x4110) ?x4112) ?x4114) ?x4116)))
 (= (+ (+ (+ (+ (+ (+ ?x4117 ?x3292) ?x3294) ?x3296) ?x3298) ?x3300) ?x3302) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4196 (* l_0_3_9 l_0_3_9)))
 (let ((?x4194 (* l_0_3_8 l_0_3_8)))
 (let ((?x4192 (* l_0_3_7 l_0_3_7)))
 (let ((?x4178 (* l_0_3_31 l_0_3_31)))
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x3831 (* ?x3830 l_0_3_40)))
 (let ((?x4175 (* l_0_3_30 l_0_3_30)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x3828 (* ?x3827 l_0_3_39)))
 (let ((?x4172 (* l_0_3_29 l_0_3_29)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x3825 (* ?x3824 l_0_3_38)))
 (let ((?x4169 (* l_0_3_28 l_0_3_28)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x3822 (* ?x3821 l_0_3_37)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3720 l_0_3_9)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3807 (* ?x3179 l_0_3_8)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3804 (* ?x3176 l_0_3_7)))
 (let ((?x4165 (+ (- (* (* 2.0 l_0_3_10) l_0_3_19) (* l_0_3_10 l_0_3_10)) ?x3804)))
 (let ((?x4174 (- (+ (- (+ (- (+ (+ ?x4165 ?x3807) ?x3810) ?x3822) ?x4169) ?x3825) ?x4172) ?x3828)))
 (let ((?x4182 (- (+ (- (+ ?x4174 ?x4175) ?x3831) ?x4178) (* (* 2.0 l_0_3_49) l_0_3_58))))
 (let ((?x4188 (- (- ?x4182 (* (* 2.0 l_0_3_50) l_0_3_59)) (* (* 2.0 l_0_3_51) l_0_3_60))))
 (let ((?x4197 (- (- (- (- ?x4188 (* (* 2.0 l_0_3_52) l_0_3_61)) ?x4192) ?x4194) ?x4196)))
 (= ?x4197 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x3995 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3992 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3989 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3986 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3983 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x4267 (* ?x3830 l_0_3_35)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x4265 (* ?x3827 l_0_3_34)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x4263 (* ?x3824 l_0_3_33)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x4261 (* ?x3821 l_0_3_32)))
 (let ((?x3974 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3971 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x4257 (* ?x3965 l_0_3_9)))
 (let ((?x3966 (* ?x3965 l_0_3_18)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x4254 (* ?x3556 l_0_3_8)))
 (let ((?x3961 (* ?x3556 l_0_3_17)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x4251 (* ?x3541 l_0_3_7)))
 (let ((?x4253 (+ (- (+ (* (* (- 2.0) l_0_3_10) l_0_3_14) (* ?x3541 l_0_3_16)) ?x4251) ?x3961)))
 (let ((?x4264 (+ (+ (+ (+ (- (+ (- ?x4253 ?x4254) ?x3966) ?x4257) ?x3971) ?x3974) ?x4261) ?x4263)))
 (let ((?x4273 (- (- (- (- (- (+ (+ ?x4264 ?x4265) ?x4267) ?x3983) ?x3986) ?x3989) ?x3992) ?x3995)))
 (let ((?x4279 (- (- ?x4273 (* (* 2.0 l_0_3_53) l_0_3_58)) (* (* 2.0 l_0_3_54) l_0_3_59))))
 (let ((?x4285 (- (- ?x4279 (* (* 2.0 l_0_3_55) l_0_3_60)) (* (* 2.0 l_0_3_56) l_0_3_61))))
 (= (- ?x4285 (* (* 2.0 l_0_3_57) l_0_3_62)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x4393 (* l_0_3_63 l_0_3_63)))
 (let ((?x4391 (* l_0_3_62 l_0_3_62)))
 (let ((?x4389 (* l_0_3_61 l_0_3_61)))
 (let ((?x4387 (* l_0_3_60 l_0_3_60)))
 (let ((?x4385 (* l_0_3_59 l_0_3_59)))
 (let ((?x4383 (* l_0_3_58 l_0_3_58)))
 (let ((?x4116 (* l_0_3_42 l_0_3_42)))
 (let ((?x4114 (* l_0_3_41 l_0_3_41)))
 (let ((?x4112 (* l_0_3_40 l_0_3_40)))
 (let ((?x4110 (* l_0_3_39 l_0_3_39)))
 (let ((?x4108 (* l_0_3_38 l_0_3_38)))
 (let ((?x4106 (* l_0_3_37 l_0_3_37)))
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x3831 (* ?x3830 l_0_3_40)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x3828 (* ?x3827 l_0_3_39)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x3825 (* ?x3824 l_0_3_38)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x3822 (* ?x3821 l_0_3_37)))
 (let ((?x4101 (* l_0_3_21 l_0_3_21)))
 (let ((?x4099 (* l_0_3_20 l_0_3_20)))
 (let ((?x4097 (* l_0_3_19 l_0_3_19)))
 (let ((?x4095 (* l_0_3_18 l_0_3_18)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3720 l_0_3_9)))
 (let ((?x4092 (* l_0_3_17 l_0_3_17)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3807 (* ?x3179 l_0_3_8)))
 (let ((?x4089 (* l_0_3_16 l_0_3_16)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3804 (* ?x3176 l_0_3_7)))
 (let ((?x4367 (+ (- (+ (- (* (* (- 2.0) l_0_3_10) l_0_3_19) ?x3804) ?x4089) ?x3807) ?x4092)))
 (let ((?x4374 (+ (+ (+ (+ (+ (+ (- ?x4367 ?x3810) ?x4095) ?x4097) ?x4099) ?x4101) ?x3822) ?x3825)))
 (let ((?x4381 (- (- (- (- (- (+ (+ ?x4374 ?x3828) ?x3831) ?x4106) ?x4108) ?x4110) ?x4112) ?x4114)))
 (let ((?x4394 (- (- (- (- (- (- (- ?x4381 ?x4116) ?x4383) ?x4385) ?x4387) ?x4389) ?x4391) ?x4393)))
 (= ?x4394 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4458 (* l_0_3_36 l_0_3_36)))
 (let ((?x4456 (* l_0_3_35 l_0_3_35)))
 (let ((?x4454 (* l_0_3_34 l_0_3_34)))
 (let ((?x4452 (* l_0_3_33 l_0_3_33)))
 (let ((?x4450 (* l_0_3_32 l_0_3_32)))
 (let ((?x4448 (* l_0_3_15 l_0_3_15)))
 (let ((?x4446 (* l_0_3_14 l_0_3_14)))
 (let ((?x4444 (* l_0_3_13 l_0_3_13)))
 (let ((?x4447 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4444) ?x4446)))
 (= (+ (+ (+ (+ (+ (- ?x4447 ?x4448) ?x4450) ?x4452) ?x4454) ?x4456) ?x4458) 0.0)))))))))))
(assert
 (let ((?x3995 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3992 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3989 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3986 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3983 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3974 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3971 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x3966 (* ?x3965 l_0_3_18)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3961 (* ?x3556 l_0_3_17)))
 (let ((?x4488 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_16) ?x3961) ?x3966) ?x3971) ?x3974)))
 (= (+ (+ (+ (+ (+ ?x4488 ?x3983) ?x3986) ?x3989) ?x3992) ?x3995) 0.0))))))))))))))
(assert
 (let ((?x4116 (* l_0_3_42 l_0_3_42)))
 (let ((?x4114 (* l_0_3_41 l_0_3_41)))
 (let ((?x4112 (* l_0_3_40 l_0_3_40)))
 (let ((?x4110 (* l_0_3_39 l_0_3_39)))
 (let ((?x4108 (* l_0_3_38 l_0_3_38)))
 (let ((?x4106 (* l_0_3_37 l_0_3_37)))
 (let ((?x4101 (* l_0_3_21 l_0_3_21)))
 (let ((?x4099 (* l_0_3_20 l_0_3_20)))
 (let ((?x4097 (* l_0_3_19 l_0_3_19)))
 (let ((?x4095 (* l_0_3_18 l_0_3_18)))
 (let ((?x4513 (- (- (- (* (- l_0_3_16) l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x4095) ?x4097)))
 (let ((?x4520 (+ (+ (+ (+ (+ (- (- ?x4513 ?x4099) ?x4101) ?x4106) ?x4108) ?x4110) ?x4112) ?x4114)))
 (= (+ ?x4520 ?x4116) 0.0))))))))))))))
(assert
 (let ((?x2947 (* l_0_3_22 l_0_3_22)))
 (let ((?x2953 (* l_0_3_1 l_0_3_1)))
 (let ((?x4533 (- ?x2953 ?x2947)))
 (= ?x4533 0.0)))))
(assert
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x2762 (* ?x2761 l_0_3_95)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2755 (* ?x2754 l_0_3_74)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x2975 (* ?x2974 l_0_3_23)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4542 (* ?x3006 l_0_3_2)))
 (= (+ (- (- ?x4542 ?x2975) ?x2755) ?x2762) 0.0))))))))))
(assert
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3018 (* ?x2974 l_0_3_25)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3008 (* ?x3006 l_0_3_4)))
 (let ((?x4556 (- ?x3008 ?x3018)))
 (= ?x4556 0.0)))))))
(assert
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3095 (* ?x2974 l_0_3_28)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3084 (* ?x3006 l_0_3_7)))
 (let ((?x4564 (- ?x3084 ?x3095)))
 (= ?x4564 0.0)))))))
(assert
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3182 (* ?x2974 l_0_3_32)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4571 (* ?x3006 l_0_3_11)))
 (= (- ?x4571 ?x3182) 0.0))))))
(assert
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3020 (* ?x2974 l_0_3_37)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3007 (* ?x3006 l_0_3_16)))
 (= (- ?x3007 ?x3020) 0.0))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x4603 (* ?x4602 l_0_3_97)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x4600 (* ?x4599 l_0_3_96)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x4597 (* ?x4596 l_0_3_95)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x2762 (* ?x2761 l_0_3_95)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x4593 (* ?x3029 l_0_3_76)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x4591 (* ?x3026 l_0_3_75)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x4589 (* ?x3023 l_0_3_74)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2755 (* ?x2754 l_0_3_74)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3357 (* ?x3356 l_0_3_5)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3353 (* ?x3187 l_0_3_26)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3350 (* ?x3184 l_0_3_25)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3182 (* ?x2974 l_0_3_32)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3348 (* ?x3347 l_0_3_4)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4571 (* ?x3006 l_0_3_11)))
 (let ((?x4590 (- (+ (+ (- (- (- (+ ?x4571 ?x3348) ?x3182) ?x3350) ?x3353) ?x3357) ?x2755) ?x4589)))
 (= (+ (+ (+ (- (- (- ?x4590 ?x4591) ?x4593) ?x2762) ?x4597) ?x4600) ?x4603) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x4669 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x4666 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x4663 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x4660 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x4657 (* ?x3110 l_0_3_77)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x4655 (* ?x3107 l_0_3_76)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x4653 (* ?x3104 l_0_3_75)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x4651 (* ?x3101 l_0_3_74)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3447 (* ?x3356 l_0_3_8)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3444 (* ?x3187 l_0_3_29)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3441 (* ?x3184 l_0_3_28)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3182 (* ?x2974 l_0_3_32)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3439 (* ?x3347 l_0_3_7)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4571 (* ?x3006 l_0_3_11)))
 (let ((?x4650 (- (+ (- (- (- (+ ?x4571 ?x3439) ?x3182) ?x3441) ?x3444) ?x3447) (* (* 2.0 l_0_3_43) l_0_3_53))))
 (let ((?x4667 (+ (+ (+ (- (- (- (- ?x4650 ?x4651) ?x4653) ?x4655) ?x4657) ?x4660) ?x4663) ?x4666)))
 (= (+ ?x4667 ?x4669) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4743 (* l_0_3_99 l_0_3_99)))
 (let ((?x4741 (* l_0_3_98 l_0_3_98)))
 (let ((?x4739 (* l_0_3_97 l_0_3_97)))
 (let ((?x4737 (* l_0_3_96 l_0_3_96)))
 (let ((?x4735 (* l_0_3_95 l_0_3_95)))
 (let ((?x4733 (* l_0_3_78 l_0_3_78)))
 (let ((?x4731 (* l_0_3_77 l_0_3_77)))
 (let ((?x4729 (* l_0_3_76 l_0_3_76)))
 (let ((?x4727 (* l_0_3_75 l_0_3_75)))
 (let ((?x4725 (* l_0_3_74 l_0_3_74)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3564 (* ?x3187 l_0_3_33)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3562 (* ?x3184 l_0_3_32)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3557 (* ?x3556 l_0_3_3)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3542 (* ?x3541 l_0_3_2)))
 (let ((?x4732 (- (- (- (- (- (- (+ ?x3542 ?x3557) ?x3562) ?x3564) ?x4725) ?x4727) ?x4729) ?x4731)))
 (= (+ (+ (+ (+ (+ (- ?x4732 ?x4733) ?x4735) ?x4737) ?x4739) ?x4741) ?x4743) 0.0)))))))))))))))))))))
(assert
 (let ((?x3742 (* l_0_3_6 l_0_3_6)))
 (let ((?x3740 (* l_0_3_5 l_0_3_5)))
 (let ((?x3738 (* l_0_3_4 l_0_3_4)))
 (let ((?x3736 (* l_0_3_27 l_0_3_27)))
 (let ((?x4776 (+ (- (- (* (- l_0_3_25) l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3736) ?x3738)))
 (let ((?x4778 (+ (+ ?x4776 ?x3740) ?x3742)))
 (= ?x4778 0.0))))))))
(assert
 (let ((?x3849 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3846 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3834 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3818 (* ?x3733 l_0_3_30)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3815 (* ?x3728 l_0_3_29)))
 (let ((?x4787 (* (* (- 2.0) l_0_3_25) l_0_3_28)))
 (= (+ (+ (+ (- (- ?x4787 ?x3815) ?x3818) ?x3834) ?x3846) ?x3849) 0.0))))))))))
(assert
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3980 (* ?x3733 l_0_3_34)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3978 (* ?x3728 l_0_3_33)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3976 (* ?x3723 l_0_3_32)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x3968 (* ?x3965 l_0_3_6)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3963 (* ?x3556 l_0_3_5)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3959 (* ?x3541 l_0_3_4)))
 (let ((?x4806 (- (- (- (+ (+ ?x3959 ?x3963) ?x3968) ?x3976) ?x3978) ?x3980)))
 (= ?x4806 0.0)))))))))))))))
(assert
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3734 (* ?x3733 l_0_3_39)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3729 (* ?x3728 l_0_3_38)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3724 (* ?x3723 l_0_3_37)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3721 (* ?x3720 l_0_3_6)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3718 (* ?x3179 l_0_3_5)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3716 (* ?x3176 l_0_3_4)))
 (= (- (- (- (+ (+ ?x3716 ?x3718) ?x3721) ?x3724) ?x3729) ?x3734) 0.0))))))))))))))
(assert
 (let ((?x4196 (* l_0_3_9 l_0_3_9)))
 (let ((?x4194 (* l_0_3_8 l_0_3_8)))
 (let ((?x4192 (* l_0_3_7 l_0_3_7)))
 (let ((?x4178 (* l_0_3_31 l_0_3_31)))
 (let ((?x4175 (* l_0_3_30 l_0_3_30)))
 (let ((?x4172 (* l_0_3_29 l_0_3_29)))
 (let ((?x4835 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_28 l_0_3_28)) ?x4172) ?x4175)))
 (let ((?x4836 (- ?x4835 ?x4178)))
 (= (+ (+ (+ ?x4836 ?x4192) ?x4194) ?x4196) 0.0))))))))))
(assert
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x4267 (* ?x3830 l_0_3_35)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x4265 (* ?x3827 l_0_3_34)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x4263 (* ?x3824 l_0_3_33)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x4261 (* ?x3821 l_0_3_32)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x4257 (* ?x3965 l_0_3_9)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x4254 (* ?x3556 l_0_3_8)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x4251 (* ?x3541 l_0_3_7)))
 (let ((?x3789 (* 2.0 l_0_3_10)))
 (let ((?x4854 (* ?x3789 l_0_3_14)))
 (let ((?x4861 (- (- (- (- (+ (+ (+ ?x4854 ?x4251) ?x4254) ?x4257) ?x4261) ?x4263) ?x4265) ?x4267)))
 (= ?x4861 0.0)))))))))))))))))))
(assert
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x3831 (* ?x3830 l_0_3_40)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x3828 (* ?x3827 l_0_3_39)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x3825 (* ?x3824 l_0_3_38)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x3822 (* ?x3821 l_0_3_37)))
 (let ((?x3720 (* 2.0 l_0_3_18)))
 (let ((?x3810 (* ?x3720 l_0_3_9)))
 (let ((?x3179 (* 2.0 l_0_3_17)))
 (let ((?x3807 (* ?x3179 l_0_3_8)))
 (let ((?x3176 (* 2.0 l_0_3_16)))
 (let ((?x3804 (* ?x3176 l_0_3_7)))
 (let ((?x3789 (* 2.0 l_0_3_10)))
 (let ((?x3798 (* ?x3789 l_0_3_19)))
 (let ((?x4888 (- (- (- (- (+ (+ (+ ?x3798 ?x3804) ?x3807) ?x3810) ?x3822) ?x3825) ?x3828) ?x3831)))
 (= ?x4888 0.0)))))))))))))))))))
(assert
 (let ((?x4458 (* l_0_3_36 l_0_3_36)))
 (let ((?x4456 (* l_0_3_35 l_0_3_35)))
 (let ((?x4454 (* l_0_3_34 l_0_3_34)))
 (let ((?x4452 (* l_0_3_33 l_0_3_33)))
 (let ((?x4450 (* l_0_3_32 l_0_3_32)))
 (let ((?x4448 (* l_0_3_15 l_0_3_15)))
 (let ((?x4446 (* l_0_3_14 l_0_3_14)))
 (let ((?x4444 (* l_0_3_13 l_0_3_13)))
 (let ((?x4902 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4444) ?x4446)))
 (let ((?x4908 (- (- (- (- (- (+ ?x4902 ?x4448) ?x4450) ?x4452) ?x4454) ?x4456) ?x4458)))
 (= ?x4908 0.0))))))))))))
(assert
 (let ((?x3995 (* (* 2.0 l_0_3_36) l_0_3_41)))
 (let ((?x3992 (* (* 2.0 l_0_3_35) l_0_3_40)))
 (let ((?x3989 (* (* 2.0 l_0_3_34) l_0_3_39)))
 (let ((?x3986 (* (* 2.0 l_0_3_33) l_0_3_38)))
 (let ((?x3983 (* (* 2.0 l_0_3_32) l_0_3_37)))
 (let ((?x3974 (* (* 2.0 l_0_3_15) l_0_3_20)))
 (let ((?x3971 (* (* 2.0 l_0_3_14) l_0_3_19)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x3966 (* ?x3965 l_0_3_18)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3961 (* ?x3556 l_0_3_17)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3948 (* ?x3541 l_0_3_16)))
 (let ((?x4926 (- (- (- (+ (+ (+ (+ ?x3948 ?x3961) ?x3966) ?x3971) ?x3974) ?x3983) ?x3986) ?x3989)))
 (= (- (- ?x4926 ?x3992) ?x3995) 0.0))))))))))))))))
(assert
 (let ((?x4116 (* l_0_3_42 l_0_3_42)))
 (let ((?x4114 (* l_0_3_41 l_0_3_41)))
 (let ((?x4112 (* l_0_3_40 l_0_3_40)))
 (let ((?x4110 (* l_0_3_39 l_0_3_39)))
 (let ((?x4108 (* l_0_3_38 l_0_3_38)))
 (let ((?x4106 (* l_0_3_37 l_0_3_37)))
 (let ((?x4101 (* l_0_3_21 l_0_3_21)))
 (let ((?x4099 (* l_0_3_20 l_0_3_20)))
 (let ((?x4097 (* l_0_3_19 l_0_3_19)))
 (let ((?x4095 (* l_0_3_18 l_0_3_18)))
 (let ((?x4942 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x4095) ?x4097)))
 (let ((?x4949 (- (- (- (- (- (+ (+ ?x4942 ?x4099) ?x4101) ?x4106) ?x4108) ?x4110) ?x4112) ?x4114)))
 (= (- ?x4949 ?x4116) 0.0))))))))))))))
(assert
 (let ((?x4970 (* l_0_3_85 l_0_3_85)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x4968 (* ?x2761 l_0_3_88)))
 (let ((?x4966 (* l_0_3_64 l_0_3_64)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x4964 (* ?x2754 l_0_3_67)))
 (let ((?x2947 (* l_0_3_22 l_0_3_22)))
 (let ((?x2953 (* l_0_3_1 l_0_3_1)))
 (let ((?x4533 (- ?x2953 ?x2947)))
 (= (- (+ (+ (- ?x4533 ?x4964) ?x4966) ?x4968) ?x4970) 0.0)))))))))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x5002 (* ?x2767 l_0_3_89)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x5000 (* ?x2764 l_0_3_88)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x4968 (* ?x2761 l_0_3_88)))
 (let ((?x2816 (* ?x2761 l_0_3_86)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x4996 (* ?x2707 l_0_3_68)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x4994 (* ?x2704 l_0_3_67)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x4964 (* ?x2754 l_0_3_67)))
 (let ((?x2810 (* ?x2754 l_0_3_65)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x2975 (* ?x2974 l_0_3_23)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4542 (* ?x3006 l_0_3_2)))
 (let ((?x4993 (+ (+ (- (- ?x4542 (* (* 2.0 l_0_3_106) l_0_3_109)) ?x2975) ?x2810) ?x4964)))
 (= (+ (+ (- (- (- (- ?x4993 ?x4994) ?x4996) ?x2816) ?x4968) ?x5000) ?x5002) 0.0)))))))))))))))))))))
(assert
 (let ((?x5049 (* l_0_3_90 l_0_3_90)))
 (let ((?x5047 (* l_0_3_89 l_0_3_89)))
 (let ((?x5045 (* l_0_3_88 l_0_3_88)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x4968 (* ?x2761 l_0_3_88)))
 (let ((?x5042 (* l_0_3_69 l_0_3_69)))
 (let ((?x5040 (* l_0_3_68 l_0_3_68)))
 (let ((?x5038 (* l_0_3_67 l_0_3_67)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x4964 (* ?x2754 l_0_3_67)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3018 (* ?x2974 l_0_3_25)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3008 (* ?x3006 l_0_3_4)))
 (let ((?x4556 (- ?x3008 ?x3018)))
 (let ((?x5048 (+ (+ (- (- (- (- (+ ?x4556 ?x4964) ?x5038) ?x5040) ?x5042) ?x4968) ?x5045) ?x5047)))
 (= (+ ?x5048 ?x5049) 0.0))))))))))))))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x5085 (* ?x4602 l_0_3_93)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x5083 (* ?x4599 l_0_3_92)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x5081 (* ?x4596 l_0_3_91)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x5079 (* ?x2761 l_0_3_91)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x5077 (* ?x3029 l_0_3_72)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x5075 (* ?x3026 l_0_3_71)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x5073 (* ?x3023 l_0_3_70)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x5071 (* ?x2754 l_0_3_70)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3095 (* ?x2974 l_0_3_28)))
 (let ((?x3018 (* ?x2974 l_0_3_25)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3084 (* ?x3006 l_0_3_7)))
 (let ((?x3008 (* ?x3006 l_0_3_4)))
 (let ((?x5070 (- (- (- (+ ?x3008 ?x3084) ?x3018) ?x3095) (* (* 2.0 l_0_3_43) l_0_3_46))))
 (let ((?x5084 (+ (+ (- (- (- (- (+ ?x5070 ?x5071) ?x5073) ?x5075) ?x5077) ?x5079) ?x5081) ?x5083)))
 (= (+ ?x5084 ?x5085) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2820 (* l_0_3_87 l_0_3_87)))
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x5002 (* ?x2767 l_0_3_89)))
 (let ((?x2818 (* l_0_3_86 l_0_3_86)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x5000 (* ?x2764 l_0_3_88)))
 (let ((?x2814 (* l_0_3_66 l_0_3_66)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x4996 (* ?x2707 l_0_3_68)))
 (let ((?x2812 (* l_0_3_65 l_0_3_65)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x4994 (* ?x2704 l_0_3_67)))
 (let ((?x2702 (* l_0_3_3 l_0_3_3)))
 (let ((?x2700 (* l_0_3_24 l_0_3_24)))
 (let ((?x2698 (* l_0_3_23 l_0_3_23)))
 (let ((?x2696 (* l_0_3_2 l_0_3_2)))
 (let ((?x5136 (- (* (* (- 2.0) l_0_3_107) l_0_3_109) (* (* 2.0 l_0_3_108) l_0_3_110))))
 (let ((?x5143 (+ (+ (+ (+ (- (- (+ ?x5136 ?x2696) ?x2698) ?x2700) ?x2702) ?x4994) ?x2812) ?x4996)))
 (= (- (- (- (- (+ ?x5143 ?x2814) ?x5000) ?x2818) ?x5002) ?x2820) 0.0))))))))))))))))))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x5002 (* ?x2767 l_0_3_89)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x5000 (* ?x2764 l_0_3_88)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x4996 (* ?x2707 l_0_3_68)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x4994 (* ?x2704 l_0_3_67)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3357 (* ?x3356 l_0_3_5)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3353 (* ?x3187 l_0_3_26)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3350 (* ?x3184 l_0_3_25)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3348 (* ?x3347 l_0_3_4)))
 (let ((?x5181 (* l_0_3_111 l_0_3_111)))
 (let ((?x5182 (- (- (* (- l_0_3_109) l_0_3_109) (* l_0_3_110 l_0_3_110)) ?x5181)))
 (let ((?x5190 (+ (+ (+ (+ (- (- (+ ?x5182 ?x3348) ?x3350) ?x3353) ?x3357) ?x4994) ?x4996) (* 1.0 (* l_0_3_67 l_0_3_67)))))
 (let ((?x5194 (+ (+ ?x5190 (* 1.0 (* l_0_3_68 l_0_3_68))) (* 1.0 (* l_0_3_69 l_0_3_69)))))
 (let ((?x5202 (- (- (- (- ?x5194 ?x5000) ?x5002) (* (* 1.0 l_0_3_88) l_0_3_88)) (* (* 1.0 l_0_3_89) l_0_3_89))))
 (= (- ?x5202 (* (* 1.0 l_0_3_90) l_0_3_90)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x5085 (* ?x4602 l_0_3_93)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x5083 (* ?x4599 l_0_3_92)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x5081 (* ?x4596 l_0_3_91)))
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2898 (* ?x2767 l_0_3_92)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2896 (* ?x2764 l_0_3_91)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x5077 (* ?x3029 l_0_3_72)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x5075 (* ?x3026 l_0_3_71)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x5073 (* ?x3023 l_0_3_70)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2894 (* ?x2707 l_0_3_71)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2892 (* ?x2704 l_0_3_70)))
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3447 (* ?x3356 l_0_3_8)))
 (let ((?x3357 (* ?x3356 l_0_3_5)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3444 (* ?x3187 l_0_3_29)))
 (let ((?x3353 (* ?x3187 l_0_3_26)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3441 (* ?x3184 l_0_3_28)))
 (let ((?x3350 (* ?x3184 l_0_3_25)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3439 (* ?x3347 l_0_3_7)))
 (let ((?x3348 (* ?x3347 l_0_3_4)))
 (let ((?x697 (- (* (* (- 2.0) l_0_3_109) l_0_3_112) (* (* 2.0 l_0_3_110) l_0_3_113))))
 (let ((?x5230 (- (+ (+ (- ?x697 (* (* 2.0 l_0_3_111) l_0_3_114)) ?x3348) ?x3439) ?x3350)))
 (let ((?x5237 (- (+ (+ (- (- (- ?x5230 ?x3441) ?x3353) ?x3444) ?x3357) ?x3447) (* (* 2.0 l_0_3_44) l_0_3_46))))
 (let ((?x5242 (+ (+ (+ (- ?x5237 (* (* 2.0 l_0_3_45) l_0_3_47)) ?x2892) ?x2894) ?x5073)))
 (let ((?x5249 (- (- (- (- (- (+ (+ ?x5242 ?x5075) ?x5077) ?x2896) ?x2898) ?x5081) ?x5083) ?x5085)))
 (= ?x5249 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x4603 (* ?x4602 l_0_3_97)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x4600 (* ?x4599 l_0_3_96)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x4597 (* ?x4596 l_0_3_95)))
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2768 (* ?x2767 l_0_3_96)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2765 (* ?x2764 l_0_3_95)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x4593 (* ?x3029 l_0_3_76)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x4591 (* ?x3026 l_0_3_75)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x4589 (* ?x3023 l_0_3_74)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2759 (* ?x2707 l_0_3_75)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2757 (* ?x2704 l_0_3_74)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3564 (* ?x3187 l_0_3_33)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3562 (* ?x3184 l_0_3_32)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3557 (* ?x3556 l_0_3_3)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3542 (* ?x3541 l_0_3_2)))
 (let ((?x825 (- (+ (* (* (- 2.0) l_0_3_109) l_0_3_116) ?x3542) (* (* 2.0 l_0_3_110) l_0_3_117))))
 (let ((?x5268 (- (- (+ (- ?x825 (* (* 2.0 l_0_3_111) l_0_3_118)) ?x3557) ?x3562) ?x3564)))
 (let ((?x5275 (- (- (+ (+ (+ (+ (+ ?x5268 ?x2757) ?x2759) ?x4589) ?x4591) ?x4593) ?x2765) ?x2768)))
 (= (- (- (- ?x5275 ?x4597) ?x4600) ?x4603) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5049 (* l_0_3_90 l_0_3_90)))
 (let ((?x5047 (* l_0_3_89 l_0_3_89)))
 (let ((?x5045 (* l_0_3_88 l_0_3_88)))
 (let ((?x5042 (* l_0_3_69 l_0_3_69)))
 (let ((?x5040 (* l_0_3_68 l_0_3_68)))
 (let ((?x5038 (* l_0_3_67 l_0_3_67)))
 (let ((?x3742 (* l_0_3_6 l_0_3_6)))
 (let ((?x3740 (* l_0_3_5 l_0_3_5)))
 (let ((?x3738 (* l_0_3_4 l_0_3_4)))
 (let ((?x3736 (* l_0_3_27 l_0_3_27)))
 (let ((?x4776 (+ (- (- (* (- l_0_3_25) l_0_3_25) (* l_0_3_26 l_0_3_26)) ?x3736) ?x3738)))
 (let ((?x4778 (+ (+ ?x4776 ?x3740) ?x3742)))
 (= (- (- (- (+ (+ (+ ?x4778 ?x5038) ?x5040) ?x5042) ?x5045) ?x5047) ?x5049) 0.0))))))))))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x5085 (* ?x4602 l_0_3_93)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x5083 (* ?x4599 l_0_3_92)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x5081 (* ?x4596 l_0_3_91)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x5077 (* ?x3029 l_0_3_72)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x5075 (* ?x3026 l_0_3_71)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x5073 (* ?x3023 l_0_3_70)))
 (let ((?x3742 (* l_0_3_6 l_0_3_6)))
 (let ((?x3849 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3740 (* l_0_3_5 l_0_3_5)))
 (let ((?x3846 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x5310 (* l_0_3_48 l_0_3_48)))
 (let ((?x5308 (* l_0_3_47 l_0_3_47)))
 (let ((?x5306 (* l_0_3_46 l_0_3_46)))
 (let ((?x3738 (* l_0_3_4 l_0_3_4)))
 (let ((?x3834 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x3736 (* l_0_3_27 l_0_3_27)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3818 (* ?x3733 l_0_3_30)))
 (let ((?x3731 (* l_0_3_26 l_0_3_26)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3815 (* ?x3728 l_0_3_29)))
 (let ((?x5300 (- (- (* (* (- 2.0) l_0_3_25) l_0_3_28) (* l_0_3_25 l_0_3_25)) ?x3815)))
 (let ((?x5309 (- (- (+ (+ (- (- (- ?x5300 ?x3731) ?x3818) ?x3736) ?x3834) ?x3738) ?x5306) ?x5308)))
 (let ((?x5317 (+ (+ (+ (+ (+ (+ (- ?x5309 ?x5310) ?x3846) ?x3740) ?x3849) ?x3742) ?x5073) ?x5075)))
 (= (- (- (- (+ ?x5317 ?x5077) ?x5081) ?x5083) ?x5085) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x4602 (* 2.0 l_0_3_90)))
 (let ((?x4603 (* ?x4602 l_0_3_97)))
 (let ((?x4599 (* 2.0 l_0_3_89)))
 (let ((?x4600 (* ?x4599 l_0_3_96)))
 (let ((?x4596 (* 2.0 l_0_3_88)))
 (let ((?x4597 (* ?x4596 l_0_3_95)))
 (let ((?x3029 (* 2.0 l_0_3_69)))
 (let ((?x4593 (* ?x3029 l_0_3_76)))
 (let ((?x3026 (* 2.0 l_0_3_68)))
 (let ((?x4591 (* ?x3026 l_0_3_75)))
 (let ((?x3023 (* 2.0 l_0_3_67)))
 (let ((?x4589 (* ?x3023 l_0_3_74)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3980 (* ?x3733 l_0_3_34)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3978 (* ?x3728 l_0_3_33)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3976 (* ?x3723 l_0_3_32)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x3968 (* ?x3965 l_0_3_6)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3963 (* ?x3556 l_0_3_5)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3959 (* ?x3541 l_0_3_4)))
 (let ((?x4806 (- (- (- (+ (+ ?x3959 ?x3963) ?x3968) ?x3976) ?x3978) ?x3980)))
 (= (- (- (- (+ (+ (+ ?x4806 ?x4589) ?x4591) ?x4593) ?x4597) ?x4600) ?x4603) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x5394 (* l_0_3_94 l_0_3_94)))
 (let ((?x5392 (* l_0_3_93 l_0_3_93)))
 (let ((?x5390 (* l_0_3_92 l_0_3_92)))
 (let ((?x5388 (* l_0_3_91 l_0_3_91)))
 (let ((?x4196 (* l_0_3_9 l_0_3_9)))
 (let ((?x4194 (* l_0_3_8 l_0_3_8)))
 (let ((?x5384 (* l_0_3_73 l_0_3_73)))
 (let ((?x5382 (* l_0_3_72 l_0_3_72)))
 (let ((?x5380 (* l_0_3_71 l_0_3_71)))
 (let ((?x5378 (* l_0_3_70 l_0_3_70)))
 (let ((?x4192 (* l_0_3_7 l_0_3_7)))
 (let ((?x3849 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x3846 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x3834 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4178 (* l_0_3_31 l_0_3_31)))
 (let ((?x4175 (* l_0_3_30 l_0_3_30)))
 (let ((?x4172 (* l_0_3_29 l_0_3_29)))
 (let ((?x4169 (* l_0_3_28 l_0_3_28)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3818 (* ?x3733 l_0_3_30)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3815 (* ?x3728 l_0_3_29)))
 (let ((?x5362 (- (- (* l_0_3_10 l_0_3_10) (* (* 2.0 l_0_3_25) l_0_3_28)) ?x3815)))
 (let ((?x5370 (- (+ (- (- (- (- (- ?x5362 ?x3818) ?x4169) ?x4172) ?x4175) ?x4178) ?x3834) (* (* 2.0 l_0_3_46) l_0_3_49))))
 (let ((?x5374 (- (- ?x5370 (* (* 2.0 l_0_3_47) l_0_3_50)) (* (* 2.0 l_0_3_48) l_0_3_51))))
 (let ((?x5385 (+ (+ (+ (+ (+ (+ (+ ?x5374 ?x3846) ?x3849) ?x4192) ?x5378) ?x5380) ?x5382) ?x5384)))
 (= (- (- (- (- (+ (+ ?x5385 ?x4194) ?x4196) ?x5388) ?x5390) ?x5392) ?x5394) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4669 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x4666 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x4663 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x4660 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x4657 (* ?x3110 l_0_3_77)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x4655 (* ?x3107 l_0_3_76)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x4653 (* ?x3104 l_0_3_75)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x4651 (* ?x3101 l_0_3_74)))
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x4267 (* ?x3830 l_0_3_35)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x4265 (* ?x3827 l_0_3_34)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x4263 (* ?x3824 l_0_3_33)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x4261 (* ?x3821 l_0_3_32)))
 (let ((?x3733 (* 2.0 l_0_3_27)))
 (let ((?x3980 (* ?x3733 l_0_3_34)))
 (let ((?x3728 (* 2.0 l_0_3_26)))
 (let ((?x3978 (* ?x3728 l_0_3_33)))
 (let ((?x3723 (* 2.0 l_0_3_25)))
 (let ((?x3976 (* ?x3723 l_0_3_32)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x4257 (* ?x3965 l_0_3_9)))
 (let ((?x3968 (* ?x3965 l_0_3_6)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x4254 (* ?x3556 l_0_3_8)))
 (let ((?x3963 (* ?x3556 l_0_3_5)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x4251 (* ?x3541 l_0_3_7)))
 (let ((?x5428 (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) (* ?x3541 l_0_3_4)) ?x4251) ?x3963)))
 (let ((?x5435 (- (- (- (- (+ (+ (+ ?x5428 ?x4254) ?x3968) ?x4257) ?x3976) ?x3978) ?x3980) ?x4261)))
 (let ((?x5440 (- (- (- (- ?x5435 ?x4263) ?x4265) ?x4267) (* (* 2.0 l_0_3_46) l_0_3_53))))
 (let ((?x5444 (- (- ?x5440 (* (* 2.0 l_0_3_47) l_0_3_54)) (* (* 2.0 l_0_3_48) l_0_3_55))))
 (let ((?x5451 (- (- (- (+ (+ (+ (+ ?x5444 ?x4651) ?x4653) ?x4655) ?x4657) ?x4660) ?x4663) ?x4666)))
 (= (- ?x5451 ?x4669) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4743 (* l_0_3_99 l_0_3_99)))
 (let ((?x4741 (* l_0_3_98 l_0_3_98)))
 (let ((?x4739 (* l_0_3_97 l_0_3_97)))
 (let ((?x4737 (* l_0_3_96 l_0_3_96)))
 (let ((?x4735 (* l_0_3_95 l_0_3_95)))
 (let ((?x4733 (* l_0_3_78 l_0_3_78)))
 (let ((?x4731 (* l_0_3_77 l_0_3_77)))
 (let ((?x4729 (* l_0_3_76 l_0_3_76)))
 (let ((?x4727 (* l_0_3_75 l_0_3_75)))
 (let ((?x4725 (* l_0_3_74 l_0_3_74)))
 (let ((?x4458 (* l_0_3_36 l_0_3_36)))
 (let ((?x4456 (* l_0_3_35 l_0_3_35)))
 (let ((?x4454 (* l_0_3_34 l_0_3_34)))
 (let ((?x4452 (* l_0_3_33 l_0_3_33)))
 (let ((?x4450 (* l_0_3_32 l_0_3_32)))
 (let ((?x4448 (* l_0_3_15 l_0_3_15)))
 (let ((?x4446 (* l_0_3_14 l_0_3_14)))
 (let ((?x4444 (* l_0_3_13 l_0_3_13)))
 (let ((?x4902 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4444) ?x4446)))
 (let ((?x4908 (- (- (- (- (- (+ ?x4902 ?x4448) ?x4450) ?x4452) ?x4454) ?x4456) ?x4458)))
 (let ((?x5469 (- (- (+ (+ (+ (+ (+ ?x4908 ?x4725) ?x4727) ?x4729) ?x4731) ?x4733) ?x4735) ?x4737)))
 (= (- (- (- ?x5469 ?x4739) ?x4741) ?x4743) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x5079 (* ?x2761 l_0_3_91)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x5071 (* ?x2754 l_0_3_70)))
 (let ((?x5487 (* l_0_3_43 l_0_3_43)))
 (let ((?x2947 (* l_0_3_22 l_0_3_22)))
 (let ((?x2953 (* l_0_3_1 l_0_3_1)))
 (let ((?x4533 (- ?x2953 ?x2947)))
 (= (+ (- (- ?x4533 ?x5487) ?x5071) ?x5079) 0.0))))))))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2898 (* ?x2767 l_0_3_92)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2896 (* ?x2764 l_0_3_91)))
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x5079 (* ?x2761 l_0_3_91)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2894 (* ?x2707 l_0_3_71)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2892 (* ?x2704 l_0_3_70)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x5071 (* ?x2754 l_0_3_70)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x2975 (* ?x2974 l_0_3_23)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x4542 (* ?x3006 l_0_3_2)))
 (let ((?x5499 (- (- (- ?x4542 (* (* 2.0 l_0_3_106) l_0_3_112)) ?x2975) (* (* 2.0 l_0_3_43) l_0_3_44))))
 (= (+ (+ (- (- (- (+ ?x5499 ?x5071) ?x2892) ?x2894) ?x5079) ?x2896) ?x2898) 0.0)))))))))))))))))))
(assert
 (let ((?x5394 (* l_0_3_94 l_0_3_94)))
 (let ((?x5392 (* l_0_3_93 l_0_3_93)))
 (let ((?x5390 (* l_0_3_92 l_0_3_92)))
 (let ((?x5388 (* l_0_3_91 l_0_3_91)))
 (let ((?x5384 (* l_0_3_73 l_0_3_73)))
 (let ((?x5382 (* l_0_3_72 l_0_3_72)))
 (let ((?x5380 (* l_0_3_71 l_0_3_71)))
 (let ((?x5378 (* l_0_3_70 l_0_3_70)))
 (let ((?x2974 (* 2.0 l_0_3_22)))
 (let ((?x3095 (* ?x2974 l_0_3_28)))
 (let ((?x3006 (* 2.0 l_0_3_1)))
 (let ((?x3084 (* ?x3006 l_0_3_7)))
 (let ((?x4564 (- ?x3084 ?x3095)))
 (let ((?x5525 (- (- (- (- ?x4564 (* (* 2.0 l_0_3_43) l_0_3_49)) ?x5378) ?x5380) ?x5382)))
 (= (+ (+ (+ (+ (- ?x5525 ?x5384) ?x5388) ?x5390) ?x5392) ?x5394) 0.0))))))))))))))))
(assert
 (let ((?x3356 (* 2.0 l_0_3_3)))
 (let ((?x3447 (* ?x3356 l_0_3_8)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3444 (* ?x3187 l_0_3_29)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3441 (* ?x3184 l_0_3_28)))
 (let ((?x3347 (* 2.0 l_0_3_2)))
 (let ((?x3439 (* ?x3347 l_0_3_7)))
 (let ((?x1485 (* l_0_3_115 l_0_3_115)))
 (let ((?x1483 (* l_0_3_114 l_0_3_114)))
 (let ((?x1484 (- (- (* (- l_0_3_112) l_0_3_112) (* l_0_3_113 l_0_3_113)) ?x1483)))
 (let ((?x5541 (- (+ (- (- (+ (- ?x1484 ?x1485) ?x3439) ?x3441) ?x3444) ?x3447) (* (* 2.0 l_0_3_44) l_0_3_49))))
 (let ((?x5545 (+ (- ?x5541 (* (* 2.0 l_0_3_45) l_0_3_50)) (* 1.0 (* l_0_3_70 l_0_3_70)))))
 (let ((?x5549 (+ (+ ?x5545 (* 1.0 (* l_0_3_71 l_0_3_71))) (* 1.0 (* l_0_3_72 l_0_3_72)))))
 (let ((?x5554 (- (+ ?x5549 (* 1.0 (* l_0_3_73 l_0_3_73))) (* (* 1.0 l_0_3_91) l_0_3_91))))
 (let ((?x5560 (- (- ?x5554 (* (* 1.0 l_0_3_92) l_0_3_92)) (* (* 1.0 l_0_3_93) l_0_3_93))))
 (= (- ?x5560 (* (* 1.0 l_0_3_94) l_0_3_94)) 0.0))))))))))))))))))
(assert
 (let ((?x4669 (* (* 2.0 l_0_3_94) l_0_3_98)))
 (let ((?x4666 (* (* 2.0 l_0_3_93) l_0_3_97)))
 (let ((?x4663 (* (* 2.0 l_0_3_92) l_0_3_96)))
 (let ((?x4660 (* (* 2.0 l_0_3_91) l_0_3_95)))
 (let ((?x3110 (* 2.0 l_0_3_73)))
 (let ((?x4657 (* ?x3110 l_0_3_77)))
 (let ((?x3107 (* 2.0 l_0_3_72)))
 (let ((?x4655 (* ?x3107 l_0_3_76)))
 (let ((?x3104 (* 2.0 l_0_3_71)))
 (let ((?x4653 (* ?x3104 l_0_3_75)))
 (let ((?x3101 (* 2.0 l_0_3_70)))
 (let ((?x4651 (* ?x3101 l_0_3_74)))
 (let ((?x3187 (* 2.0 l_0_3_24)))
 (let ((?x3564 (* ?x3187 l_0_3_33)))
 (let ((?x3184 (* 2.0 l_0_3_23)))
 (let ((?x3562 (* ?x3184 l_0_3_32)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x3557 (* ?x3556 l_0_3_3)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x3542 (* ?x3541 l_0_3_2)))
 (let ((?x1564 (- (- ?x3542 (* (* 2.0 l_0_3_112) l_0_3_116)) (* (* 2.0 l_0_3_113) l_0_3_117))))
 (let ((?x5582 (- (- ?x1564 (* (* 2.0 l_0_3_114) l_0_3_118)) (* (* 2.0 l_0_3_115) l_0_3_119))))
 (let ((?x5587 (- (- (- (+ ?x5582 ?x3557) ?x3562) ?x3564) (* (* 2.0 l_0_3_44) l_0_3_53))))
 (let ((?x5592 (+ (+ (+ (- ?x5587 (* (* 2.0 l_0_3_45) l_0_3_54)) ?x4651) ?x4653) ?x4655)))
 (= (- (- (- (- (+ ?x5592 ?x4657) ?x4660) ?x4663) ?x4666) ?x4669) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4196 (* l_0_3_9 l_0_3_9)))
 (let ((?x4194 (* l_0_3_8 l_0_3_8)))
 (let ((?x4192 (* l_0_3_7 l_0_3_7)))
 (let ((?x5621 (* l_0_3_52 l_0_3_52)))
 (let ((?x5619 (* l_0_3_51 l_0_3_51)))
 (let ((?x5617 (* l_0_3_50 l_0_3_50)))
 (let ((?x5615 (* l_0_3_49 l_0_3_49)))
 (let ((?x4178 (* l_0_3_31 l_0_3_31)))
 (let ((?x4175 (* l_0_3_30 l_0_3_30)))
 (let ((?x4172 (* l_0_3_29 l_0_3_29)))
 (let ((?x4835 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_28 l_0_3_28)) ?x4172) ?x4175)))
 (let ((?x4836 (- ?x4835 ?x4178)))
 (let ((?x5625 (+ (+ (+ (- (- (- (- ?x4836 ?x5615) ?x5617) ?x5619) ?x5621) ?x4192) ?x4194) ?x4196)))
 (= ?x5625 0.0)))))))))))))))
(assert
 (let ((?x3830 (* 2.0 l_0_3_31)))
 (let ((?x4267 (* ?x3830 l_0_3_35)))
 (let ((?x3827 (* 2.0 l_0_3_30)))
 (let ((?x4265 (* ?x3827 l_0_3_34)))
 (let ((?x3824 (* 2.0 l_0_3_29)))
 (let ((?x4263 (* ?x3824 l_0_3_33)))
 (let ((?x3821 (* 2.0 l_0_3_28)))
 (let ((?x4261 (* ?x3821 l_0_3_32)))
 (let ((?x3965 (* 2.0 l_0_3_13)))
 (let ((?x4257 (* ?x3965 l_0_3_9)))
 (let ((?x3556 (* 2.0 l_0_3_12)))
 (let ((?x4254 (* ?x3556 l_0_3_8)))
 (let ((?x3541 (* 2.0 l_0_3_11)))
 (let ((?x4251 (* ?x3541 l_0_3_7)))
 (let ((?x3789 (* 2.0 l_0_3_10)))
 (let ((?x4854 (* ?x3789 l_0_3_14)))
 (let ((?x4861 (- (- (- (- (+ (+ (+ ?x4854 ?x4251) ?x4254) ?x4257) ?x4261) ?x4263) ?x4265) ?x4267)))
 (let ((?x5638 (- (- ?x4861 (* (* 2.0 l_0_3_49) l_0_3_53)) (* (* 2.0 l_0_3_50) l_0_3_54))))
 (let ((?x5642 (- (- ?x5638 (* (* 2.0 l_0_3_51) l_0_3_55)) (* (* 2.0 l_0_3_52) l_0_3_56))))
 (= ?x5642 0.0)))))))))))))))))))))
(assert
 (let ((?x5653 (* l_0_3_57 l_0_3_57)))
 (let ((?x1744 (* l_0_3_56 l_0_3_56)))
 (let ((?x1788 (* l_0_3_55 l_0_3_55)))
 (let ((?x1789 (* l_0_3_54 l_0_3_54)))
 (let ((?x1787 (* l_0_3_53 l_0_3_53)))
 (let ((?x4458 (* l_0_3_36 l_0_3_36)))
 (let ((?x4456 (* l_0_3_35 l_0_3_35)))
 (let ((?x4454 (* l_0_3_34 l_0_3_34)))
 (let ((?x4452 (* l_0_3_33 l_0_3_33)))
 (let ((?x4450 (* l_0_3_32 l_0_3_32)))
 (let ((?x4448 (* l_0_3_15 l_0_3_15)))
 (let ((?x4446 (* l_0_3_14 l_0_3_14)))
 (let ((?x4444 (* l_0_3_13 l_0_3_13)))
 (let ((?x4902 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x4444) ?x4446)))
 (let ((?x4908 (- (- (- (- (- (+ ?x4902 ?x4448) ?x4450) ?x4452) ?x4454) ?x4456) ?x4458)))
 (= (- (- (- (- (- ?x4908 ?x1787) ?x1789) ?x1788) ?x1744) ?x5653) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_3_64) l_0_3_64) (* l_0_3_85 l_0_3_85)) 0.0))
(assert
 (let ((?x2761 (* 2.0 l_0_3_85)))
 (let ((?x2816 (* ?x2761 l_0_3_86)))
 (let ((?x2754 (* 2.0 l_0_3_64)))
 (let ((?x2810 (* ?x2754 l_0_3_65)))
 (let ((?x5676 (+ (- (* (- l_0_3_106) l_0_3_106) ?x2810) (* 1.0 (* l_0_3_64 l_0_3_64)))))
 (= (- (+ ?x5676 ?x2816) (* (* 1.0 l_0_3_85) l_0_3_85)) 0.0)))))))
(assert
 (let ((?x2767 (* 2.0 l_0_3_87)))
 (let ((?x2768 (* ?x2767 l_0_3_96)))
 (let ((?x2764 (* 2.0 l_0_3_86)))
 (let ((?x2765 (* ?x2764 l_0_3_95)))
 (let ((?x2707 (* 2.0 l_0_3_66)))
 (let ((?x2759 (* ?x2707 l_0_3_75)))
 (let ((?x2704 (* 2.0 l_0_3_65)))
 (let ((?x2757 (* ?x2704 l_0_3_74)))
 (let ((?x1820 (- (* (* (- 2.0) l_0_3_107) l_0_3_116) (* (* 2.0 l_0_3_108) l_0_3_117))))
 (= (- (- (+ (+ ?x1820 ?x2757) ?x2759) ?x2765) ?x2768) 0.0)))))))))))
(assert
 (let ((?x5713 (* l_0_3_120 l_0_3_120)))
 (let ((?x5711 (* l_0_3_119 l_0_3_119)))
 (let ((?x5709 (* l_0_3_118 l_0_3_118)))
 (let ((?x5710 (- (- (* (- l_0_3_116) l_0_3_116) (* l_0_3_117 l_0_3_117)) ?x5709)))
 (let ((?x5718 (+ (+ (- (- ?x5710 ?x5711) ?x5713) (* 1.0 (* l_0_3_74 l_0_3_74))) (* 1.0 (* l_0_3_75 l_0_3_75)))))
 (let ((?x5722 (+ (+ ?x5718 (* 1.0 (* l_0_3_76 l_0_3_76))) (* 1.0 (* l_0_3_77 l_0_3_77)))))
 (let ((?x5727 (- (+ ?x5722 (* 1.0 (* l_0_3_78 l_0_3_78))) (* (* 1.0 l_0_3_95) l_0_3_95))))
 (let ((?x5733 (- (- ?x5727 (* (* 1.0 l_0_3_96) l_0_3_96)) (* (* 1.0 l_0_3_97) l_0_3_97))))
 (let ((?x5739 (- (- ?x5733 (* (* 1.0 l_0_3_98) l_0_3_98)) (* (* 1.0 l_0_3_99) l_0_3_99))))
 (= ?x5739 0.0)))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_22 0.0))
(assert
 (>= l_0_3_24 0.0))
(assert
 (>= l_0_3_27 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_42 0.0))
(assert
 (>= l_0_3_43 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_52 0.0))
(assert
 (>= l_0_3_57 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_64 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_69 0.0))
(assert
 (>= l_0_3_73 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_84 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_87 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (>= l_0_3_94 0.0))
(assert
 (>= l_0_3_99 0.0))
(assert
 (>= l_0_3_105 0.0))
(assert
 (>= l_0_3_106 0.0))
(assert
 (>= l_0_3_108 0.0))
(assert
 (>= l_0_3_111 0.0))
(assert
 (>= l_0_3_115 0.0))
(assert
 (>= l_0_3_120 0.0))
(assert
 (>= l_0_3_126 0.0))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5825 (* ?x5824 l_0_4_96)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5822 (* ?x5821 l_0_4_95)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x5819 (* ?x5818 l_0_4_95)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5816 (* ?x5815 l_0_4_75)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5813 (* ?x5812 l_0_4_74)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x5810 (* ?x5809 l_0_4_74)))
 (let ((?x5807 (* l_0_4_3 l_0_4_3)))
 (let ((?x5805 (* l_0_4_24 l_0_4_24)))
 (let ((?x5803 (* l_0_4_23 l_0_4_23)))
 (let ((?x5801 (* l_0_4_2 l_0_4_2)))
 (let ((?x5800 (- (* (* (- 2.0) l_0_4_106) l_0_4_116) (* (* 2.0 l_0_4_127) l_0_4_137))))
 (let ((?x5817 (- (- (+ (+ (- (- (+ ?x5800 ?x5801) ?x5803) ?x5805) ?x5807) ?x5810) ?x5813) ?x5816)))
 (= (+ (+ (+ (- ?x5817 ?x5819) ?x5822) ?x5825) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x5873 (* l_0_4_87 l_0_4_87)))
 (let ((?x5871 (* l_0_4_86 l_0_4_86)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x5869 (* ?x5818 l_0_4_86)))
 (let ((?x5867 (* l_0_4_66 l_0_4_66)))
 (let ((?x5865 (* l_0_4_65 l_0_4_65)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x5863 (* ?x5809 l_0_4_65)))
 (let ((?x5854 (- (* (* (- 2.0) l_0_4_106) l_0_4_107) (* (* 2.0 l_0_4_127) l_0_4_128))))
 (let ((?x5875 (+ (+ (+ (- (- (- (+ ?x5854 ?x5863) ?x5865) ?x5867) ?x5869) ?x5871) ?x5873) 1.0)))
 (= ?x5875 0.0))))))))))))
(assert
 (let ((?x5902 (* l_0_4_129 l_0_4_129)))
 (let ((?x5900 (* l_0_4_128 l_0_4_128)))
 (let ((?x5901 (- (- (- _a_0_ (* l_0_4_107 l_0_4_107)) (* l_0_4_108 l_0_4_108)) ?x5900)))
 (let ((?x5907 (+ (+ (- ?x5901 ?x5902) (* 1.0 (* l_0_4_65 l_0_4_65))) (* 1.0 (* l_0_4_66 l_0_4_66)))))
 (let ((?x5913 (- (- ?x5907 (* (* 1.0 l_0_4_86) l_0_4_86)) (* (* 1.0 l_0_4_87) l_0_4_87))))
 (= (- ?x5913 1.0) 0.0)))))))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5956 (* ?x5824 l_0_4_92)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5954 (* ?x5821 l_0_4_91)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5952 (* ?x5815 l_0_4_71)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5950 (* ?x5812 l_0_4_70)))
 (let ((?x5948 (* l_0_4_45 l_0_4_45)))
 (let ((?x5946 (* l_0_4_44 l_0_4_44)))
 (let ((?x5807 (* l_0_4_3 l_0_4_3)))
 (let ((?x5805 (* l_0_4_24 l_0_4_24)))
 (let ((?x5803 (* l_0_4_23 l_0_4_23)))
 (let ((?x5801 (* l_0_4_2 l_0_4_2)))
 (let ((?x5935 (- (* (* (- 2.0) l_0_4_107) l_0_4_112) (* (* 2.0 l_0_4_108) l_0_4_113))))
 (let ((?x5941 (- (- ?x5935 (* (* 2.0 l_0_4_128) l_0_4_133)) (* (* 2.0 l_0_4_129) l_0_4_134))))
 (let ((?x5951 (+ (- (- (+ (- (- (+ ?x5941 ?x5801) ?x5803) ?x5805) ?x5807) ?x5946) ?x5948) ?x5950)))
 (= (+ (- (- (+ ?x5951 ?x5952) ?x5954) ?x5956) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x6016 (* ?x5815 l_0_4_80)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x6014 (* ?x5812 l_0_4_79)))
 (let ((?x5807 (* l_0_4_3 l_0_4_3)))
 (let ((?x5805 (* l_0_4_24 l_0_4_24)))
 (let ((?x5803 (* l_0_4_23 l_0_4_23)))
 (let ((?x5801 (* l_0_4_2 l_0_4_2)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x5999 (* ?x5998 l_0_4_87)))
 (let ((?x2134 (* (- 2.0) l_0_4_100)))
 (let ((?x5997 (* ?x2134 l_0_4_86)))
 (let ((?x6005 (- (- (- ?x5997 ?x5999) (* (* 2.0 l_0_4_107) l_0_4_121)) (* (* 2.0 l_0_4_108) l_0_4_122))))
 (let ((?x6009 (- (- ?x6005 (* (* 2.0 l_0_4_128) l_0_4_142)) (* (* 2.0 l_0_4_129) l_0_4_143))))
 (let ((?x6018 (- (+ (+ (- (+ (+ (- ?x6009 ?x5801) ?x5803) ?x5805) ?x5807) ?x6014) ?x6016) 1.0)))
 (= ?x6018 0.0)))))))))))))))))
(assert
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x6054 (* ?x5809 l_0_4_79)))
 (let ((?x6052 (* l_0_4_22 l_0_4_22)))
 (let ((?x6053 (+ (+ (* (- l_0_4_1) l_0_4_1) (* (* 2.0 l_0_4_100) l_0_4_85)) ?x6052)))
 (= (- ?x6053 ?x6054) 0.0))))))
(assert
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x6016 (* ?x5815 l_0_4_80)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x6014 (* ?x5812 l_0_4_79)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x6054 (* ?x5809 l_0_4_79)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6082 (* ?x6081 l_0_4_23)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x5999 (* ?x5998 l_0_4_87)))
 (let ((?x6049 (* 2.0 l_0_4_100)))
 (let ((?x6050 (* ?x6049 l_0_4_85)))
 (let ((?x6075 (+ (+ (- (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x6050) (* ?x6049 l_0_4_86)) ?x5999)))
 (let ((?x6080 (- (- ?x6075 (* (* 2.0 l_0_4_106) l_0_4_121)) (* (* 2.0 l_0_4_127) l_0_4_142))))
 (= (- (- (+ (+ ?x6080 ?x6082) ?x6054) ?x6014) ?x6016) 0.0))))))))))))))))
(assert
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x6119 (* ?x6118 l_0_4_81)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x6116 (* ?x6115 l_0_4_80)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x6113 (* ?x6112 l_0_4_79)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x6054 (* ?x5809 l_0_4_79)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6109 (* ?x6081 l_0_4_37)))
 (let ((?x6107 (* ?x6081 l_0_4_25)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6105 (* ?x6104 l_0_4_90)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6102 (* ?x5998 l_0_4_89)))
 (let ((?x6049 (* 2.0 l_0_4_100)))
 (let ((?x6100 (* ?x6049 l_0_4_88)))
 (let ((?x6050 (* ?x6049 l_0_4_85)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x6097 (* ?x6095 l_0_4_4)))
 (let ((?x6096 (* ?x6095 l_0_4_16)))
 (let ((?x6110 (- (+ (+ (+ (+ (- (- ?x6096 ?x6097) ?x6050) ?x6100) ?x6102) ?x6105) ?x6107) ?x6109)))
 (= (- (- (- (+ ?x6110 ?x6054) ?x6113) ?x6116) ?x6119) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x6175 (* ?x6174 l_0_4_82)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x6172 (* ?x6171 l_0_4_81)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x6169 (* ?x6168 l_0_4_80)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x6166 (* ?x6165 l_0_4_79)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6109 (* ?x6081 l_0_4_37)))
 (let ((?x6159 (* ?x6081 l_0_4_28)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6157 (* ?x6156 l_0_4_94)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6154 (* ?x6104 l_0_4_93)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6152 (* ?x5998 l_0_4_92)))
 (let ((?x6049 (* 2.0 l_0_4_100)))
 (let ((?x6150 (* ?x6049 l_0_4_91)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x2295 (* ?x6095 l_0_4_7)))
 (let ((?x6096 (* ?x6095 l_0_4_16)))
 (let ((?x6161 (- (+ (+ (+ (+ (+ (- ?x6096 ?x2295) ?x6150) ?x6152) ?x6154) ?x6157) ?x6159) ?x6109)))
 (let ((?x6173 (- (- (- (- ?x6161 (* (* 2.0 l_0_4_43) l_0_4_58)) ?x6166) ?x6169) ?x6172)))
 (= (- ?x6173 ?x6175) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6245 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6242 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6239 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6236 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6233 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6230 (* ?x6229 l_0_4_38)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6227 (* ?x6226 l_0_4_37)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6224 (* ?x6081 l_0_4_32)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6222 (* ?x6221 l_0_4_3)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6219 (* ?x6218 l_0_4_2)))
 (let ((?x6216 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6213 (* ?x6156 l_0_4_98)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6211 (* ?x6104 l_0_4_97)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6209 (* ?x5998 l_0_4_96)))
 (let ((?x6208 (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_100) l_0_4_95))))
 (let ((?x6225 (+ (+ (+ (+ (+ (+ (+ ?x6208 ?x6209) ?x6211) ?x6213) ?x6216) ?x6219) ?x6222) ?x6224)))
 (let ((?x6246 (- (- (- (- (- (- (- ?x6225 ?x6227) ?x6230) ?x6233) ?x6236) ?x6239) ?x6242) ?x6245)))
 (= ?x6246 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6322 (* l_0_4_84 l_0_4_84)))
 (let ((?x6320 (* l_0_4_83 l_0_4_83)))
 (let ((?x6318 (* l_0_4_82 l_0_4_82)))
 (let ((?x6316 (* l_0_4_81 l_0_4_81)))
 (let ((?x6314 (* l_0_4_80 l_0_4_80)))
 (let ((?x6312 (* l_0_4_79 l_0_4_79)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6109 (* ?x6081 l_0_4_37)))
 (let ((?x6309 (* l_0_4_105 l_0_4_105)))
 (let ((?x6307 (* l_0_4_104 l_0_4_104)))
 (let ((?x6305 (* l_0_4_103 l_0_4_103)))
 (let ((?x6303 (* l_0_4_102 l_0_4_102)))
 (let ((?x6301 (* l_0_4_101 l_0_4_101)))
 (let ((?x6302 (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_16) (* l_0_4_100 l_0_4_100)) ?x6301)))
 (let ((?x6315 (- (- (+ (+ (+ (+ (+ ?x6302 ?x6303) ?x6305) ?x6307) ?x6309) ?x6109) ?x6312) ?x6314)))
 (= (- (- (- (- ?x6315 ?x6316) ?x6318) ?x6320) ?x6322) 0.0)))))))))))))))))
(assert
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x6119 (* ?x6118 l_0_4_81)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x6116 (* ?x6115 l_0_4_80)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x6113 (* ?x6112 l_0_4_79)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x6016 (* ?x5815 l_0_4_80)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x6014 (* ?x5812 l_0_4_79)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6380 (* ?x6379 l_0_4_5)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6230 (* ?x6229 l_0_4_38)))
 (let ((?x6376 (* ?x6229 l_0_4_26)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6227 (* ?x6226 l_0_4_37)))
 (let ((?x6373 (* ?x6226 l_0_4_25)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6371 (* ?x6370 l_0_4_4)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6222 (* ?x6221 l_0_4_3)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6219 (* ?x6218 l_0_4_2)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6105 (* ?x6104 l_0_4_90)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6102 (* ?x5998 l_0_4_89)))
 (let ((?x5999 (* ?x5998 l_0_4_87)))
 (let ((?x6049 (* 2.0 l_0_4_100)))
 (let ((?x6100 (* ?x6049 l_0_4_88)))
 (let ((?x2134 (* (- 2.0) l_0_4_100)))
 (let ((?x5997 (* ?x2134 l_0_4_86)))
 (let ((?x6352 (- (- (- (- (- ?x5997 ?x6100) ?x5999) ?x6102) ?x6105) (* (* 2.0 l_0_4_109) l_0_4_121))))
 (let ((?x6358 (- (- ?x6352 (* (* 2.0 l_0_4_110) l_0_4_122)) (* (* 2.0 l_0_4_111) l_0_4_123))))
 (let ((?x6364 (- (- ?x6358 (* (* 2.0 l_0_4_130) l_0_4_142)) (* (* 2.0 l_0_4_131) l_0_4_143))))
 (let ((?x6372 (- (+ (+ (- ?x6364 (* (* 2.0 l_0_4_132) l_0_4_144)) ?x6219) ?x6222) ?x6371)))
 (let ((?x6383 (+ (+ (- (- (+ (- (+ ?x6372 ?x6373) ?x6227) ?x6376) ?x6230) ?x6380) ?x6014) ?x6016)))
 (= (+ (+ (+ ?x6383 ?x6113) ?x6116) ?x6119) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x6175 (* ?x6174 l_0_4_82)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x6172 (* ?x6171 l_0_4_81)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x6169 (* ?x6168 l_0_4_80)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x6166 (* ?x6165 l_0_4_79)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6448 (* ?x6379 l_0_4_8)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6230 (* ?x6229 l_0_4_38)))
 (let ((?x6445 (* ?x6229 l_0_4_29)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6227 (* ?x6226 l_0_4_37)))
 (let ((?x6442 (* ?x6226 l_0_4_28)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6440 (* ?x6370 l_0_4_7)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6222 (* ?x6221 l_0_4_3)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6219 (* ?x6218 l_0_4_2)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6157 (* ?x6156 l_0_4_94)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6154 (* ?x6104 l_0_4_93)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6152 (* ?x5998 l_0_4_92)))
 (let ((?x6416 (- (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_91) ?x6152) ?x6154) ?x6157) (* (* 2.0 l_0_4_112) l_0_4_121))))
 (let ((?x6422 (- (- ?x6416 (* (* 2.0 l_0_4_113) l_0_4_122)) (* (* 2.0 l_0_4_114) l_0_4_123))))
 (let ((?x6428 (- (- ?x6422 (* (* 2.0 l_0_4_115) l_0_4_124)) (* (* 2.0 l_0_4_133) l_0_4_142))))
 (let ((?x6434 (- (- ?x6428 (* (* 2.0 l_0_4_134) l_0_4_143)) (* (* 2.0 l_0_4_135) l_0_4_144))))
 (let ((?x6441 (- (+ (+ (- ?x6434 (* (* 2.0 l_0_4_136) l_0_4_145)) ?x6219) ?x6222) ?x6440)))
 (let ((?x6452 (- (- (- (+ (- (+ ?x6441 ?x6442) ?x6227) ?x6445) ?x6230) ?x6448) (* (* 2.0 l_0_4_44) l_0_4_58))))
 (let ((?x6458 (+ (+ (+ (- ?x6452 (* (* 2.0 l_0_4_45) l_0_4_59)) ?x6166) ?x6169) ?x6172)))
 (= (+ ?x6458 ?x6175) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6245 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6242 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6239 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6236 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6233 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6522 (* ?x6229 l_0_4_33)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6520 (* ?x6226 l_0_4_32)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6500 (* ?x6499 l_0_4_3)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6485 (* ?x6484 l_0_4_2)))
 (let ((?x6216 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6213 (* ?x6156 l_0_4_98)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6211 (* ?x6104 l_0_4_97)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6209 (* ?x5998 l_0_4_96)))
 (let ((?x6483 (- (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_95) ?x6209) ?x6211) ?x6213) ?x6216)))
 (let ((?x6492 (- (- (- ?x6483 ?x6485) (* (* 2.0 l_0_4_116) l_0_4_121)) (* (* 2.0 l_0_4_117) l_0_4_122))))
 (let ((?x6498 (- (- ?x6492 (* (* 2.0 l_0_4_118) l_0_4_123)) (* (* 2.0 l_0_4_119) l_0_4_124))))
 (let ((?x6507 (- (- (- ?x6498 ?x6500) (* (* 2.0 l_0_4_120) l_0_4_125)) (* (* 2.0 l_0_4_137) l_0_4_142))))
 (let ((?x6513 (- (- ?x6507 (* (* 2.0 l_0_4_138) l_0_4_143)) (* (* 2.0 l_0_4_139) l_0_4_144))))
 (let ((?x6519 (- (- ?x6513 (* (* 2.0 l_0_4_140) l_0_4_145)) (* (* 2.0 l_0_4_141) l_0_4_146))))
 (let ((?x6528 (+ (+ (+ (+ (+ (+ (+ ?x6519 ?x6520) ?x6522) ?x6233) ?x6236) ?x6239) ?x6242) ?x6245)))
 (= ?x6528 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6230 (* ?x6229 l_0_4_38)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6227 (* ?x6226 l_0_4_37)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6222 (* ?x6221 l_0_4_3)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6219 (* ?x6218 l_0_4_2)))
 (let ((?x6596 (* l_0_4_147 l_0_4_147)))
 (let ((?x6594 (* l_0_4_146 l_0_4_146)))
 (let ((?x6592 (* l_0_4_145 l_0_4_145)))
 (let ((?x6590 (* l_0_4_144 l_0_4_144)))
 (let ((?x6588 (* l_0_4_143 l_0_4_143)))
 (let ((?x6586 (* l_0_4_142 l_0_4_142)))
 (let ((?x6584 (* l_0_4_126 l_0_4_126)))
 (let ((?x6582 (* l_0_4_125 l_0_4_125)))
 (let ((?x6580 (* l_0_4_124 l_0_4_124)))
 (let ((?x6578 (* l_0_4_123 l_0_4_123)))
 (let ((?x6576 (* l_0_4_122 l_0_4_122)))
 (let ((?x6574 (* l_0_4_121 l_0_4_121)))
 (let ((?x6561 (- (* (* (- 1.0) l_0_4_100) l_0_4_100) (* (* 1.0 l_0_4_101) l_0_4_101))))
 (let ((?x6567 (- (- ?x6561 (* (* 1.0 l_0_4_102) l_0_4_102)) (* (* 1.0 l_0_4_103) l_0_4_103))))
 (let ((?x6573 (- (- ?x6567 (* (* 1.0 l_0_4_104) l_0_4_104)) (* (* 1.0 l_0_4_105) l_0_4_105))))
 (let ((?x6587 (- (- (- (- (- (- (- ?x6573 ?x6574) ?x6576) ?x6578) ?x6580) ?x6582) ?x6584) ?x6586)))
 (let ((?x6599 (- (- (- (- (- (- (- ?x6587 ?x6588) ?x6590) ?x6592) ?x6594) ?x6596) ?x6219) ?x6222)))
 (let ((?x6605 (+ (+ (+ (+ ?x6599 ?x6227) ?x6230) (* 1.0 (* l_0_4_79 l_0_4_79))) (* 1.0 (* l_0_4_80 l_0_4_80)))))
 (let ((?x6609 (+ (+ ?x6605 (* 1.0 (* l_0_4_81 l_0_4_81))) (* 1.0 (* l_0_4_82 l_0_4_82)))))
 (let ((?x6613 (+ (+ ?x6609 (* 1.0 (* l_0_4_83 l_0_4_83))) (* 1.0 (* l_0_4_84 l_0_4_84)))))
 (= ?x6613 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x6119 (* ?x6118 l_0_4_81)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x6116 (* ?x6115 l_0_4_80)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x6113 (* ?x6112 l_0_4_79)))
 (let ((?x6642 (* l_0_4_6 l_0_4_6)))
 (let ((?x6640 (* l_0_4_5 l_0_4_5)))
 (let ((?x6638 (* l_0_4_4 l_0_4_4)))
 (let ((?x6636 (* l_0_4_27 l_0_4_27)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6634 (* ?x6633 l_0_4_39)))
 (let ((?x6631 (* l_0_4_26 l_0_4_26)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6629 (* ?x3391 l_0_4_38)))
 (let ((?x3387 (* l_0_4_25 l_0_4_25)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x3397 (* ?x3404 l_0_4_37)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x3405 (* ?x3409 l_0_4_6)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x3413 (* ?x6221 l_0_4_5)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x3416 (* ?x6218 l_0_4_4)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6105 (* ?x6104 l_0_4_90)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6102 (* ?x5998 l_0_4_89)))
 (let ((?x3414 (+ (+ (- (- (* (* (- 2.0) l_0_4_100) l_0_4_88) ?x6102) ?x6105) ?x3416) ?x3413)))
 (let ((?x6637 (+ (- (+ (- (+ (- (+ ?x3414 ?x3405) ?x3397) ?x3387) ?x6629) ?x6631) ?x6634) ?x6636)))
 (= (+ (+ (+ (- (- (- ?x6637 ?x6638) ?x6640) ?x6642) ?x6113) ?x6116) ?x6119) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x6175 (* ?x6174 l_0_4_82)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x6172 (* ?x6171 l_0_4_81)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x6169 (* ?x6168 l_0_4_80)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x6166 (* ?x6165 l_0_4_79)))
 (let ((?x6736 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6733 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6721 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x6718 (* ?x6717 l_0_4_40)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x6715 (* ?x6714 l_0_4_39)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x6712 (* ?x6711 l_0_4_38)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x6709 (* ?x6708 l_0_4_37)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6634 (* ?x6633 l_0_4_39)))
 (let ((?x6705 (* ?x6633 l_0_4_30)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6629 (* ?x3391 l_0_4_38)))
 (let ((?x6702 (* ?x3391 l_0_4_29)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x3397 (* ?x3404 l_0_4_37)))
 (let ((?x6699 (* ?x3404 l_0_4_28)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x6697 (* ?x3409 l_0_4_9)))
 (let ((?x3405 (* ?x3409 l_0_4_6)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6694 (* ?x6221 l_0_4_8)))
 (let ((?x3413 (* ?x6221 l_0_4_5)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6691 (* ?x6218 l_0_4_7)))
 (let ((?x3416 (* ?x6218 l_0_4_4)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6157 (* ?x6156 l_0_4_94)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6154 (* ?x6104 l_0_4_93)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6152 (* ?x5998 l_0_4_92)))
 (let ((?x6049 (* 2.0 l_0_4_100)))
 (let ((?x6150 (* ?x6049 l_0_4_91)))
 (let ((?x3484 (* 2.0 l_0_4_10)))
 (let ((?x6685 (* ?x3484 l_0_4_19)))
 (let ((?x6693 (+ (+ (+ (- (- (- (- ?x6685 ?x6150) ?x6152) ?x6154) ?x6157) ?x3416) ?x6691) ?x3413)))
 (let ((?x6704 (- (+ (- (+ (+ (+ (+ ?x6693 ?x6694) ?x3405) ?x6697) ?x6699) ?x3397) ?x6702) ?x6629)))
 (let ((?x6722 (- (- (- (- (- (- (+ ?x6704 ?x6705) ?x6634) ?x6709) ?x6712) ?x6715) ?x6718) ?x6721)))
 (let ((?x6728 (- (- ?x6722 (* (* 2.0 l_0_4_46) l_0_4_58)) (* (* 2.0 l_0_4_47) l_0_4_59))))
 (let ((?x6738 (+ (- (- (- ?x6728 (* (* 2.0 l_0_4_48) l_0_4_60)) ?x6733) ?x6736) ?x6166)))
 (= (+ (+ (+ ?x6738 ?x6169) ?x6172) ?x6175) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6245 (* (* 2.0 l_0_4_78) l_0_4_83)))
 (let ((?x6242 (* (* 2.0 l_0_4_77) l_0_4_82)))
 (let ((?x6239 (* (* 2.0 l_0_4_76) l_0_4_81)))
 (let ((?x6236 (* (* 2.0 l_0_4_75) l_0_4_80)))
 (let ((?x6233 (* (* 2.0 l_0_4_74) l_0_4_79)))
 (let ((?x6842 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6839 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6836 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6833 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6830 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6827 (* ?x6633 l_0_4_34)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6825 (* ?x3391 l_0_4_33)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x6823 (* ?x3404 l_0_4_32)))
 (let ((?x6821 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6818 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x6815 (* ?x6812 l_0_4_6)))
 (let ((?x6813 (* ?x6812 l_0_4_18)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6810 (* ?x6499 l_0_4_5)))
 (let ((?x6808 (* ?x6499 l_0_4_17)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6806 (* ?x6484 l_0_4_4)))
 (let ((?x3604 (* ?x6484 l_0_4_16)))
 (let ((?x6216 (* (* 2.0 l_0_4_104) l_0_4_99)))
 (let ((?x6156 (* 2.0 l_0_4_103)))
 (let ((?x6213 (* ?x6156 l_0_4_98)))
 (let ((?x6104 (* 2.0 l_0_4_102)))
 (let ((?x6211 (* ?x6104 l_0_4_97)))
 (let ((?x5998 (* 2.0 l_0_4_101)))
 (let ((?x6209 (* ?x5998 l_0_4_96)))
 (let ((?x6483 (- (- (- (- (* (* (- 2.0) l_0_4_100) l_0_4_95) ?x6209) ?x6211) ?x6213) ?x6216)))
 (let ((?x6819 (+ (- (+ (- (+ (- (+ ?x6483 ?x3604) ?x6806) ?x6808) ?x6810) ?x6813) ?x6815) ?x6818)))
 (let ((?x6837 (- (- (- (+ (+ (+ (+ ?x6819 ?x6821) ?x6823) ?x6825) ?x6827) ?x6830) ?x6833) ?x6836)))
 (let ((?x6848 (+ (+ (+ (+ (+ (- (- ?x6837 ?x6839) ?x6842) ?x6233) ?x6236) ?x6239) ?x6242) ?x6245)))
 (= ?x6848 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6322 (* l_0_4_84 l_0_4_84)))
 (let ((?x6320 (* l_0_4_83 l_0_4_83)))
 (let ((?x6318 (* l_0_4_82 l_0_4_82)))
 (let ((?x6316 (* l_0_4_81 l_0_4_81)))
 (let ((?x6314 (* l_0_4_80 l_0_4_80)))
 (let ((?x6312 (* l_0_4_79 l_0_4_79)))
 (let ((?x6940 (* l_0_4_42 l_0_4_42)))
 (let ((?x6938 (* l_0_4_41 l_0_4_41)))
 (let ((?x6936 (* l_0_4_40 l_0_4_40)))
 (let ((?x6934 (* l_0_4_39 l_0_4_39)))
 (let ((?x6932 (* l_0_4_38 l_0_4_38)))
 (let ((?x6930 (* l_0_4_37 l_0_4_37)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6634 (* ?x6633 l_0_4_39)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6629 (* ?x3391 l_0_4_38)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x3397 (* ?x3404 l_0_4_37)))
 (let ((?x6925 (* l_0_4_21 l_0_4_21)))
 (let ((?x6923 (* l_0_4_20 l_0_4_20)))
 (let ((?x6921 (* l_0_4_19 l_0_4_19)))
 (let ((?x6919 (* l_0_4_18 l_0_4_18)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x3405 (* ?x3409 l_0_4_6)))
 (let ((?x6916 (* l_0_4_17 l_0_4_17)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x3413 (* ?x6221 l_0_4_5)))
 (let ((?x6913 (* l_0_4_16 l_0_4_16)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x3416 (* ?x6218 l_0_4_4)))
 (let ((?x6309 (* l_0_4_105 l_0_4_105)))
 (let ((?x6307 (* l_0_4_104 l_0_4_104)))
 (let ((?x6305 (* l_0_4_103 l_0_4_103)))
 (let ((?x6303 (* l_0_4_102 l_0_4_102)))
 (let ((?x6908 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x6303)))
 (let ((?x6917 (+ (- (+ (- (- (- (- ?x6908 ?x6305) ?x6307) ?x6309) ?x3416) ?x6913) ?x3413) ?x6916)))
 (let ((?x6928 (+ (+ (+ (+ (+ (+ (- ?x6917 ?x3405) ?x6919) ?x6921) ?x6923) ?x6925) ?x3397) ?x6629)))
 (let ((?x6941 (- (- (- (- (- (- (+ ?x6928 ?x6634) ?x6930) ?x6932) ?x6934) ?x6936) ?x6938) ?x6940)))
 (= (+ (+ (+ (+ (+ (+ ?x6941 ?x6312) ?x6314) ?x6316) ?x6318) ?x6320) ?x6322) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7013 (* l_0_4_9 l_0_4_9)))
 (let ((?x7011 (* l_0_4_8 l_0_4_8)))
 (let ((?x7009 (* l_0_4_7 l_0_4_7)))
 (let ((?x6995 (* l_0_4_31 l_0_4_31)))
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x6718 (* ?x6717 l_0_4_40)))
 (let ((?x6992 (* l_0_4_30 l_0_4_30)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x6715 (* ?x6714 l_0_4_39)))
 (let ((?x6989 (* l_0_4_29 l_0_4_29)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x6712 (* ?x6711 l_0_4_38)))
 (let ((?x6986 (* l_0_4_28 l_0_4_28)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x6709 (* ?x6708 l_0_4_37)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x6697 (* ?x3409 l_0_4_9)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6694 (* ?x6221 l_0_4_8)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6691 (* ?x6218 l_0_4_7)))
 (let ((?x6982 (+ (- (* (* 2.0 l_0_4_10) l_0_4_19) (* l_0_4_10 l_0_4_10)) ?x6691)))
 (let ((?x6991 (- (+ (- (+ (- (+ (+ ?x6982 ?x6694) ?x6697) ?x6709) ?x6986) ?x6712) ?x6989) ?x6715)))
 (let ((?x6999 (- (+ (- (+ ?x6991 ?x6992) ?x6718) ?x6995) (* (* 2.0 l_0_4_49) l_0_4_58))))
 (let ((?x7005 (- (- ?x6999 (* (* 2.0 l_0_4_50) l_0_4_59)) (* (* 2.0 l_0_4_51) l_0_4_60))))
 (let ((?x7014 (- (- (- (- ?x7005 (* (* 2.0 l_0_4_52) l_0_4_61)) ?x7009) ?x7011) ?x7013)))
 (= ?x7014 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6842 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6839 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6836 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6833 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6830 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x7051 (* ?x6717 l_0_4_35)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x7049 (* ?x6714 l_0_4_34)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x7047 (* ?x6711 l_0_4_33)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x7045 (* ?x6708 l_0_4_32)))
 (let ((?x6821 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6818 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x7041 (* ?x6812 l_0_4_9)))
 (let ((?x6813 (* ?x6812 l_0_4_18)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x7038 (* ?x6499 l_0_4_8)))
 (let ((?x6808 (* ?x6499 l_0_4_17)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x7035 (* ?x6484 l_0_4_7)))
 (let ((?x7037 (+ (- (+ (* (* (- 2.0) l_0_4_10) l_0_4_14) (* ?x6484 l_0_4_16)) ?x7035) ?x6808)))
 (let ((?x7048 (+ (+ (+ (+ (- (+ (- ?x7037 ?x7038) ?x6813) ?x7041) ?x6818) ?x6821) ?x7045) ?x7047)))
 (let ((?x7057 (- (- (- (- (- (+ (+ ?x7048 ?x7049) ?x7051) ?x6830) ?x6833) ?x6836) ?x6839) ?x6842)))
 (let ((?x7063 (- (- ?x7057 (* (* 2.0 l_0_4_53) l_0_4_58)) (* (* 2.0 l_0_4_54) l_0_4_59))))
 (let ((?x7069 (- (- ?x7063 (* (* 2.0 l_0_4_55) l_0_4_60)) (* (* 2.0 l_0_4_56) l_0_4_61))))
 (= (- ?x7069 (* (* 2.0 l_0_4_57) l_0_4_62)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7137 (* l_0_4_63 l_0_4_63)))
 (let ((?x7135 (* l_0_4_62 l_0_4_62)))
 (let ((?x7133 (* l_0_4_61 l_0_4_61)))
 (let ((?x7131 (* l_0_4_60 l_0_4_60)))
 (let ((?x7129 (* l_0_4_59 l_0_4_59)))
 (let ((?x7127 (* l_0_4_58 l_0_4_58)))
 (let ((?x6940 (* l_0_4_42 l_0_4_42)))
 (let ((?x6938 (* l_0_4_41 l_0_4_41)))
 (let ((?x6936 (* l_0_4_40 l_0_4_40)))
 (let ((?x6934 (* l_0_4_39 l_0_4_39)))
 (let ((?x6932 (* l_0_4_38 l_0_4_38)))
 (let ((?x6930 (* l_0_4_37 l_0_4_37)))
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x6718 (* ?x6717 l_0_4_40)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x6715 (* ?x6714 l_0_4_39)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x6712 (* ?x6711 l_0_4_38)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x6709 (* ?x6708 l_0_4_37)))
 (let ((?x6925 (* l_0_4_21 l_0_4_21)))
 (let ((?x6923 (* l_0_4_20 l_0_4_20)))
 (let ((?x6921 (* l_0_4_19 l_0_4_19)))
 (let ((?x6919 (* l_0_4_18 l_0_4_18)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x6697 (* ?x3409 l_0_4_9)))
 (let ((?x6916 (* l_0_4_17 l_0_4_17)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6694 (* ?x6221 l_0_4_8)))
 (let ((?x6913 (* l_0_4_16 l_0_4_16)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6691 (* ?x6218 l_0_4_7)))
 (let ((?x7111 (+ (- (+ (- (* (* (- 2.0) l_0_4_10) l_0_4_19) ?x6691) ?x6913) ?x6694) ?x6916)))
 (let ((?x7118 (+ (+ (+ (+ (+ (+ (- ?x7111 ?x6697) ?x6919) ?x6921) ?x6923) ?x6925) ?x6709) ?x6712)))
 (let ((?x7125 (- (- (- (- (- (+ (+ ?x7118 ?x6715) ?x6718) ?x6930) ?x6932) ?x6934) ?x6936) ?x6938)))
 (let ((?x7138 (- (- (- (- (- (- (- ?x7125 ?x6940) ?x7127) ?x7129) ?x7131) ?x7133) ?x7135) ?x7137)))
 (= ?x7138 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7159 (* l_0_4_36 l_0_4_36)))
 (let ((?x7157 (* l_0_4_35 l_0_4_35)))
 (let ((?x7155 (* l_0_4_34 l_0_4_34)))
 (let ((?x7153 (* l_0_4_33 l_0_4_33)))
 (let ((?x7151 (* l_0_4_32 l_0_4_32)))
 (let ((?x7149 (* l_0_4_15 l_0_4_15)))
 (let ((?x7147 (* l_0_4_14 l_0_4_14)))
 (let ((?x7145 (* l_0_4_13 l_0_4_13)))
 (let ((?x7148 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x7145) ?x7147)))
 (= (+ (+ (+ (+ (+ (- ?x7148 ?x7149) ?x7151) ?x7153) ?x7155) ?x7157) ?x7159) 0.0)))))))))))
(assert
 (let ((?x6842 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6839 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6836 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6833 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6830 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6821 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6818 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x6813 (* ?x6812 l_0_4_18)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6808 (* ?x6499 l_0_4_17)))
 (let ((?x7179 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_16) ?x6808) ?x6813) ?x6818) ?x6821)))
 (= (+ (+ (+ (+ (+ ?x7179 ?x6830) ?x6833) ?x6836) ?x6839) ?x6842) 0.0))))))))))))))
(assert
 (let ((?x6940 (* l_0_4_42 l_0_4_42)))
 (let ((?x6938 (* l_0_4_41 l_0_4_41)))
 (let ((?x6936 (* l_0_4_40 l_0_4_40)))
 (let ((?x6934 (* l_0_4_39 l_0_4_39)))
 (let ((?x6932 (* l_0_4_38 l_0_4_38)))
 (let ((?x6930 (* l_0_4_37 l_0_4_37)))
 (let ((?x6925 (* l_0_4_21 l_0_4_21)))
 (let ((?x6923 (* l_0_4_20 l_0_4_20)))
 (let ((?x6921 (* l_0_4_19 l_0_4_19)))
 (let ((?x6919 (* l_0_4_18 l_0_4_18)))
 (let ((?x4205 (- (- (- (* (- l_0_4_16) l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x6919) ?x6921)))
 (let ((?x7194 (+ (+ (+ (+ (+ (- (- ?x4205 ?x6923) ?x6925) ?x6930) ?x6932) ?x6934) ?x6936) ?x6938)))
 (= (+ ?x7194 ?x6940) 0.0))))))))))))))
(assert
 (let ((?x6052 (* l_0_4_22 l_0_4_22)))
 (let ((?x6058 (* l_0_4_1 l_0_4_1)))
 (let ((?x4228 (- ?x6058 ?x6052)))
 (= ?x4228 0.0)))))
(assert
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x5819 (* ?x5818 l_0_4_95)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x5810 (* ?x5809 l_0_4_74)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6082 (* ?x6081 l_0_4_23)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x7212 (* ?x6095 l_0_4_2)))
 (= (+ (- (- ?x7212 ?x6082) ?x5810) ?x5819) 0.0))))))))))
(assert
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6107 (* ?x6081 l_0_4_25)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x6097 (* ?x6095 l_0_4_4)))
 (let ((?x4239 (- ?x6097 ?x6107)))
 (= ?x4239 0.0)))))))
(assert
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6159 (* ?x6081 l_0_4_28)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x2295 (* ?x6095 l_0_4_7)))
 (let ((?x4295 (- ?x2295 ?x6159)))
 (= ?x4295 0.0)))))))
(assert
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6224 (* ?x6081 l_0_4_32)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x4322 (* ?x6095 l_0_4_11)))
 (= (- ?x4322 ?x6224) 0.0))))))
(assert
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6109 (* ?x6081 l_0_4_37)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x6096 (* ?x6095 l_0_4_16)))
 (= (- ?x6096 ?x6109) 0.0))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7243 (* ?x7242 l_0_4_97)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7240 (* ?x7239 l_0_4_96)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7237 (* ?x7236 l_0_4_95)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x5819 (* ?x5818 l_0_4_95)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7233 (* ?x6118 l_0_4_76)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7231 (* ?x6115 l_0_4_75)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7229 (* ?x6112 l_0_4_74)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x5810 (* ?x5809 l_0_4_74)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6380 (* ?x6379 l_0_4_5)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6376 (* ?x6229 l_0_4_26)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6373 (* ?x6226 l_0_4_25)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6224 (* ?x6081 l_0_4_32)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6371 (* ?x6370 l_0_4_4)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x4322 (* ?x6095 l_0_4_11)))
 (let ((?x7230 (- (+ (+ (- (- (- (+ ?x4322 ?x6371) ?x6224) ?x6373) ?x6376) ?x6380) ?x5810) ?x7229)))
 (= (+ (+ (+ (- (- (- ?x7230 ?x7231) ?x7233) ?x5819) ?x7237) ?x7240) ?x7243) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x7285 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x7282 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x7279 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x7276 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x7273 (* ?x6174 l_0_4_77)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x7271 (* ?x6171 l_0_4_76)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x7269 (* ?x6168 l_0_4_75)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x7267 (* ?x6165 l_0_4_74)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6448 (* ?x6379 l_0_4_8)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6445 (* ?x6229 l_0_4_29)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6442 (* ?x6226 l_0_4_28)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6224 (* ?x6081 l_0_4_32)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6440 (* ?x6370 l_0_4_7)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x4322 (* ?x6095 l_0_4_11)))
 (let ((?x7266 (- (+ (- (- (- (+ ?x4322 ?x6440) ?x6224) ?x6442) ?x6445) ?x6448) (* (* 2.0 l_0_4_43) l_0_4_53))))
 (let ((?x7283 (+ (+ (+ (- (- (- (- ?x7266 ?x7267) ?x7269) ?x7271) ?x7273) ?x7276) ?x7279) ?x7282)))
 (= (+ ?x7283 ?x7285) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7316 (* l_0_4_99 l_0_4_99)))
 (let ((?x7314 (* l_0_4_98 l_0_4_98)))
 (let ((?x7312 (* l_0_4_97 l_0_4_97)))
 (let ((?x7310 (* l_0_4_96 l_0_4_96)))
 (let ((?x7308 (* l_0_4_95 l_0_4_95)))
 (let ((?x7306 (* l_0_4_78 l_0_4_78)))
 (let ((?x7304 (* l_0_4_77 l_0_4_77)))
 (let ((?x7302 (* l_0_4_76 l_0_4_76)))
 (let ((?x7300 (* l_0_4_75 l_0_4_75)))
 (let ((?x7298 (* l_0_4_74 l_0_4_74)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6522 (* ?x6229 l_0_4_33)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6520 (* ?x6226 l_0_4_32)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6500 (* ?x6499 l_0_4_3)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6485 (* ?x6484 l_0_4_2)))
 (let ((?x7305 (- (- (- (- (- (- (+ ?x6485 ?x6500) ?x6520) ?x6522) ?x7298) ?x7300) ?x7302) ?x7304)))
 (= (+ (+ (+ (+ (+ (- ?x7305 ?x7306) ?x7308) ?x7310) ?x7312) ?x7314) ?x7316) 0.0)))))))))))))))))))))
(assert
 (let ((?x6642 (* l_0_4_6 l_0_4_6)))
 (let ((?x6640 (* l_0_4_5 l_0_4_5)))
 (let ((?x6638 (* l_0_4_4 l_0_4_4)))
 (let ((?x6636 (* l_0_4_27 l_0_4_27)))
 (let ((?x7333 (+ (- (- (* (- l_0_4_25) l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6636) ?x6638)))
 (let ((?x7335 (+ (+ ?x7333 ?x6640) ?x6642)))
 (= ?x7335 0.0))))))))
(assert
 (let ((?x6736 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6733 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6721 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6705 (* ?x6633 l_0_4_30)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6702 (* ?x3391 l_0_4_29)))
 (let ((?x4504 (* (* (- 2.0) l_0_4_25) l_0_4_28)))
 (= (+ (+ (+ (- (- ?x4504 ?x6702) ?x6705) ?x6721) ?x6733) ?x6736) 0.0))))))))))
(assert
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6827 (* ?x6633 l_0_4_34)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6825 (* ?x3391 l_0_4_33)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x6823 (* ?x3404 l_0_4_32)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x6815 (* ?x6812 l_0_4_6)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6810 (* ?x6499 l_0_4_5)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6806 (* ?x6484 l_0_4_4)))
 (let ((?x4529 (- (- (- (+ (+ ?x6806 ?x6810) ?x6815) ?x6823) ?x6825) ?x6827)))
 (= ?x4529 0.0)))))))))))))))
(assert
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6634 (* ?x6633 l_0_4_39)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6629 (* ?x3391 l_0_4_38)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x3397 (* ?x3404 l_0_4_37)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x3405 (* ?x3409 l_0_4_6)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x3413 (* ?x6221 l_0_4_5)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x3416 (* ?x6218 l_0_4_4)))
 (= (- (- (- (+ (+ ?x3416 ?x3413) ?x3405) ?x3397) ?x6629) ?x6634) 0.0))))))))))))))
(assert
 (let ((?x7013 (* l_0_4_9 l_0_4_9)))
 (let ((?x7011 (* l_0_4_8 l_0_4_8)))
 (let ((?x7009 (* l_0_4_7 l_0_4_7)))
 (let ((?x6995 (* l_0_4_31 l_0_4_31)))
 (let ((?x6992 (* l_0_4_30 l_0_4_30)))
 (let ((?x6989 (* l_0_4_29 l_0_4_29)))
 (let ((?x7364 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_28 l_0_4_28)) ?x6989) ?x6992)))
 (let ((?x7365 (- ?x7364 ?x6995)))
 (= (+ (+ (+ ?x7365 ?x7009) ?x7011) ?x7013) 0.0))))))))))
(assert
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x7051 (* ?x6717 l_0_4_35)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x7049 (* ?x6714 l_0_4_34)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x7047 (* ?x6711 l_0_4_33)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x7045 (* ?x6708 l_0_4_32)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x7041 (* ?x6812 l_0_4_9)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x7038 (* ?x6499 l_0_4_8)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x7035 (* ?x6484 l_0_4_7)))
 (let ((?x3484 (* 2.0 l_0_4_10)))
 (let ((?x4679 (* ?x3484 l_0_4_14)))
 (let ((?x4631 (- (- (- (- (+ (+ (+ ?x4679 ?x7035) ?x7038) ?x7041) ?x7045) ?x7047) ?x7049) ?x7051)))
 (= ?x4631 0.0)))))))))))))))))))
(assert
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x6718 (* ?x6717 l_0_4_40)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x6715 (* ?x6714 l_0_4_39)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x6712 (* ?x6711 l_0_4_38)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x6709 (* ?x6708 l_0_4_37)))
 (let ((?x3409 (* 2.0 l_0_4_18)))
 (let ((?x6697 (* ?x3409 l_0_4_9)))
 (let ((?x6221 (* 2.0 l_0_4_17)))
 (let ((?x6694 (* ?x6221 l_0_4_8)))
 (let ((?x6218 (* 2.0 l_0_4_16)))
 (let ((?x6691 (* ?x6218 l_0_4_7)))
 (let ((?x3484 (* 2.0 l_0_4_10)))
 (let ((?x6685 (* ?x3484 l_0_4_19)))
 (let ((?x7374 (- (- (- (- (+ (+ (+ ?x6685 ?x6691) ?x6694) ?x6697) ?x6709) ?x6712) ?x6715) ?x6718)))
 (= ?x7374 0.0)))))))))))))))))))
(assert
 (let ((?x7159 (* l_0_4_36 l_0_4_36)))
 (let ((?x7157 (* l_0_4_35 l_0_4_35)))
 (let ((?x7155 (* l_0_4_34 l_0_4_34)))
 (let ((?x7153 (* l_0_4_33 l_0_4_33)))
 (let ((?x7151 (* l_0_4_32 l_0_4_32)))
 (let ((?x7149 (* l_0_4_15 l_0_4_15)))
 (let ((?x7147 (* l_0_4_14 l_0_4_14)))
 (let ((?x7145 (* l_0_4_13 l_0_4_13)))
 (let ((?x7387 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x7145) ?x7147)))
 (let ((?x7393 (- (- (- (- (- (+ ?x7387 ?x7149) ?x7151) ?x7153) ?x7155) ?x7157) ?x7159)))
 (= ?x7393 0.0))))))))))))
(assert
 (let ((?x6842 (* (* 2.0 l_0_4_36) l_0_4_41)))
 (let ((?x6839 (* (* 2.0 l_0_4_35) l_0_4_40)))
 (let ((?x6836 (* (* 2.0 l_0_4_34) l_0_4_39)))
 (let ((?x6833 (* (* 2.0 l_0_4_33) l_0_4_38)))
 (let ((?x6830 (* (* 2.0 l_0_4_32) l_0_4_37)))
 (let ((?x6821 (* (* 2.0 l_0_4_15) l_0_4_20)))
 (let ((?x6818 (* (* 2.0 l_0_4_14) l_0_4_19)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x6813 (* ?x6812 l_0_4_18)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6808 (* ?x6499 l_0_4_17)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x3604 (* ?x6484 l_0_4_16)))
 (let ((?x4759 (- (- (- (+ (+ (+ (+ ?x3604 ?x6808) ?x6813) ?x6818) ?x6821) ?x6830) ?x6833) ?x6836)))
 (= (- (- ?x4759 ?x6839) ?x6842) 0.0))))))))))))))))
(assert
 (let ((?x6940 (* l_0_4_42 l_0_4_42)))
 (let ((?x6938 (* l_0_4_41 l_0_4_41)))
 (let ((?x6936 (* l_0_4_40 l_0_4_40)))
 (let ((?x6934 (* l_0_4_39 l_0_4_39)))
 (let ((?x6932 (* l_0_4_38 l_0_4_38)))
 (let ((?x6930 (* l_0_4_37 l_0_4_37)))
 (let ((?x6925 (* l_0_4_21 l_0_4_21)))
 (let ((?x6923 (* l_0_4_20 l_0_4_20)))
 (let ((?x6921 (* l_0_4_19 l_0_4_19)))
 (let ((?x6919 (* l_0_4_18 l_0_4_18)))
 (let ((?x7407 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x6919) ?x6921)))
 (let ((?x7414 (- (- (- (- (- (+ (+ ?x7407 ?x6923) ?x6925) ?x6930) ?x6932) ?x6934) ?x6936) ?x6938)))
 (= (- ?x7414 ?x6940) 0.0))))))))))))))
(assert
 (let ((?x7433 (* l_0_4_85 l_0_4_85)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7431 (* ?x5818 l_0_4_88)))
 (let ((?x7429 (* l_0_4_64 l_0_4_64)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7427 (* ?x5809 l_0_4_67)))
 (let ((?x6052 (* l_0_4_22 l_0_4_22)))
 (let ((?x6058 (* l_0_4_1 l_0_4_1)))
 (let ((?x4228 (- ?x6058 ?x6052)))
 (= (- (+ (+ (- ?x4228 ?x7427) ?x7429) ?x7431) ?x7433) 0.0)))))))))))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x7467 (* ?x5824 l_0_4_89)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x7465 (* ?x5821 l_0_4_88)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7431 (* ?x5818 l_0_4_88)))
 (let ((?x5869 (* ?x5818 l_0_4_86)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x7461 (* ?x5815 l_0_4_68)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x7459 (* ?x5812 l_0_4_67)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7427 (* ?x5809 l_0_4_67)))
 (let ((?x5863 (* ?x5809 l_0_4_65)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6082 (* ?x6081 l_0_4_23)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x7212 (* ?x6095 l_0_4_2)))
 (let ((?x7455 (- (- ?x7212 (* (* 2.0 l_0_4_106) l_0_4_109)) (* (* 2.0 l_0_4_127) l_0_4_130))))
 (let ((?x7464 (- (- (- (- (+ (+ (- ?x7455 ?x6082) ?x5863) ?x7427) ?x7459) ?x7461) ?x5869) ?x7431)))
 (= (+ (+ ?x7464 ?x7465) ?x7467) 0.0))))))))))))))))))))))
(assert
 (let ((?x7504 (* l_0_4_90 l_0_4_90)))
 (let ((?x7502 (* l_0_4_89 l_0_4_89)))
 (let ((?x7500 (* l_0_4_88 l_0_4_88)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7431 (* ?x5818 l_0_4_88)))
 (let ((?x7497 (* l_0_4_69 l_0_4_69)))
 (let ((?x7495 (* l_0_4_68 l_0_4_68)))
 (let ((?x7493 (* l_0_4_67 l_0_4_67)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7427 (* ?x5809 l_0_4_67)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6107 (* ?x6081 l_0_4_25)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x6097 (* ?x6095 l_0_4_4)))
 (let ((?x4239 (- ?x6097 ?x6107)))
 (let ((?x7503 (+ (+ (- (- (- (- (+ ?x4239 ?x7427) ?x7493) ?x7495) ?x7497) ?x7431) ?x7500) ?x7502)))
 (= (+ ?x7503 ?x7504) 0.0))))))))))))))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7538 (* ?x7242 l_0_4_93)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7536 (* ?x7239 l_0_4_92)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7534 (* ?x7236 l_0_4_91)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7532 (* ?x5818 l_0_4_91)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7530 (* ?x6118 l_0_4_72)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7528 (* ?x6115 l_0_4_71)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7526 (* ?x6112 l_0_4_70)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7524 (* ?x5809 l_0_4_70)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6159 (* ?x6081 l_0_4_28)))
 (let ((?x6107 (* ?x6081 l_0_4_25)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x2295 (* ?x6095 l_0_4_7)))
 (let ((?x6097 (* ?x6095 l_0_4_4)))
 (let ((?x7523 (- (- (- (+ ?x6097 ?x2295) ?x6107) ?x6159) (* (* 2.0 l_0_4_43) l_0_4_46))))
 (let ((?x7537 (+ (+ (- (- (- (- (+ ?x7523 ?x7524) ?x7526) ?x7528) ?x7530) ?x7532) ?x7534) ?x7536)))
 (= (+ ?x7537 ?x7538) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5873 (* l_0_4_87 l_0_4_87)))
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x7467 (* ?x5824 l_0_4_89)))
 (let ((?x5871 (* l_0_4_86 l_0_4_86)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x7465 (* ?x5821 l_0_4_88)))
 (let ((?x5867 (* l_0_4_66 l_0_4_66)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x7461 (* ?x5815 l_0_4_68)))
 (let ((?x5865 (* l_0_4_65 l_0_4_65)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x7459 (* ?x5812 l_0_4_67)))
 (let ((?x5807 (* l_0_4_3 l_0_4_3)))
 (let ((?x5805 (* l_0_4_24 l_0_4_24)))
 (let ((?x5803 (* l_0_4_23 l_0_4_23)))
 (let ((?x5801 (* l_0_4_2 l_0_4_2)))
 (let ((?x7567 (- (* (* (- 2.0) l_0_4_107) l_0_4_109) (* (* 2.0 l_0_4_108) l_0_4_110))))
 (let ((?x7571 (- (- ?x7567 (* (* 2.0 l_0_4_128) l_0_4_130)) (* (* 2.0 l_0_4_129) l_0_4_131))))
 (let ((?x7578 (+ (+ (+ (+ (- (- (+ ?x7571 ?x5801) ?x5803) ?x5805) ?x5807) ?x7459) ?x5865) ?x7461)))
 (= (- (- (- (- (+ ?x7578 ?x5867) ?x7465) ?x5871) ?x7467) ?x5873) 0.0)))))))))))))))))))))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x7467 (* ?x5824 l_0_4_89)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x7465 (* ?x5821 l_0_4_88)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x7461 (* ?x5815 l_0_4_68)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x7459 (* ?x5812 l_0_4_67)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6380 (* ?x6379 l_0_4_5)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6376 (* ?x6229 l_0_4_26)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6373 (* ?x6226 l_0_4_25)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6371 (* ?x6370 l_0_4_4)))
 (let ((?x7607 (* l_0_4_132 l_0_4_132)))
 (let ((?x7605 (* l_0_4_131 l_0_4_131)))
 (let ((?x7603 (* l_0_4_130 l_0_4_130)))
 (let ((?x5027 (* l_0_4_111 l_0_4_111)))
 (let ((?x5029 (- (- (* (- l_0_4_109) l_0_4_109) (* l_0_4_110 l_0_4_110)) ?x5027)))
 (let ((?x7612 (+ (- (- (+ (- (- (- ?x5029 ?x7603) ?x7605) ?x7607) ?x6371) ?x6373) ?x6376) ?x6380)))
 (let ((?x7618 (+ (+ (+ (+ ?x7612 ?x7459) ?x7461) (* 1.0 (* l_0_4_67 l_0_4_67))) (* 1.0 (* l_0_4_68 l_0_4_68)))))
 (let ((?x7625 (- (- (- (+ ?x7618 (* 1.0 (* l_0_4_69 l_0_4_69))) ?x7465) ?x7467) (* (* 1.0 l_0_4_88) l_0_4_88))))
 (let ((?x7631 (- (- ?x7625 (* (* 1.0 l_0_4_89) l_0_4_89)) (* (* 1.0 l_0_4_90) l_0_4_90))))
 (= ?x7631 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7538 (* ?x7242 l_0_4_93)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7536 (* ?x7239 l_0_4_92)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7534 (* ?x7236 l_0_4_91)))
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5956 (* ?x5824 l_0_4_92)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5954 (* ?x5821 l_0_4_91)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7530 (* ?x6118 l_0_4_72)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7528 (* ?x6115 l_0_4_71)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7526 (* ?x6112 l_0_4_70)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5952 (* ?x5815 l_0_4_71)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5950 (* ?x5812 l_0_4_70)))
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6448 (* ?x6379 l_0_4_8)))
 (let ((?x6380 (* ?x6379 l_0_4_5)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6445 (* ?x6229 l_0_4_29)))
 (let ((?x6376 (* ?x6229 l_0_4_26)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6442 (* ?x6226 l_0_4_28)))
 (let ((?x6373 (* ?x6226 l_0_4_25)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6440 (* ?x6370 l_0_4_7)))
 (let ((?x6371 (* ?x6370 l_0_4_4)))
 (let ((?x7659 (- (* (* (- 2.0) l_0_4_109) l_0_4_112) (* (* 2.0 l_0_4_110) l_0_4_113))))
 (let ((?x7663 (- (- ?x7659 (* (* 2.0 l_0_4_111) l_0_4_114)) (* (* 2.0 l_0_4_130) l_0_4_133))))
 (let ((?x7667 (- (- ?x7663 (* (* 2.0 l_0_4_131) l_0_4_134)) (* (* 2.0 l_0_4_132) l_0_4_135))))
 (let ((?x7674 (+ (- (- (- (- (+ (+ ?x7667 ?x6371) ?x6440) ?x6373) ?x6442) ?x6376) ?x6445) ?x6380)))
 (let ((?x7679 (- (- (+ ?x7674 ?x6448) (* (* 2.0 l_0_4_44) l_0_4_46)) (* (* 2.0 l_0_4_45) l_0_4_47))))
 (let ((?x7686 (- (- (+ (+ (+ (+ (+ ?x7679 ?x5950) ?x5952) ?x7526) ?x7528) ?x7530) ?x5954) ?x5956)))
 (= (- (- (- ?x7686 ?x7534) ?x7536) ?x7538) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7243 (* ?x7242 l_0_4_97)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7240 (* ?x7239 l_0_4_96)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7237 (* ?x7236 l_0_4_95)))
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5825 (* ?x5824 l_0_4_96)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5822 (* ?x5821 l_0_4_95)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7233 (* ?x6118 l_0_4_76)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7231 (* ?x6115 l_0_4_75)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7229 (* ?x6112 l_0_4_74)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5816 (* ?x5815 l_0_4_75)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5813 (* ?x5812 l_0_4_74)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6522 (* ?x6229 l_0_4_33)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6520 (* ?x6226 l_0_4_32)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6500 (* ?x6499 l_0_4_3)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6485 (* ?x6484 l_0_4_2)))
 (let ((?x5170 (- (+ (* (* (- 2.0) l_0_4_109) l_0_4_116) ?x6485) (* (* 2.0 l_0_4_110) l_0_4_117))))
 (let ((?x7713 (- (+ (- ?x5170 (* (* 2.0 l_0_4_111) l_0_4_118)) ?x6500) (* (* 2.0 l_0_4_130) l_0_4_137))))
 (let ((?x7717 (- (- ?x7713 (* (* 2.0 l_0_4_131) l_0_4_138)) (* (* 2.0 l_0_4_132) l_0_4_139))))
 (let ((?x7724 (+ (+ (+ (+ (+ (- (- ?x7717 ?x6520) ?x6522) ?x5813) ?x5816) ?x7229) ?x7231) ?x7233)))
 (= (- (- (- (- (- ?x7724 ?x5822) ?x5825) ?x7237) ?x7240) ?x7243) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7504 (* l_0_4_90 l_0_4_90)))
 (let ((?x7502 (* l_0_4_89 l_0_4_89)))
 (let ((?x7500 (* l_0_4_88 l_0_4_88)))
 (let ((?x7497 (* l_0_4_69 l_0_4_69)))
 (let ((?x7495 (* l_0_4_68 l_0_4_68)))
 (let ((?x7493 (* l_0_4_67 l_0_4_67)))
 (let ((?x6642 (* l_0_4_6 l_0_4_6)))
 (let ((?x6640 (* l_0_4_5 l_0_4_5)))
 (let ((?x6638 (* l_0_4_4 l_0_4_4)))
 (let ((?x6636 (* l_0_4_27 l_0_4_27)))
 (let ((?x7333 (+ (- (- (* (- l_0_4_25) l_0_4_25) (* l_0_4_26 l_0_4_26)) ?x6636) ?x6638)))
 (let ((?x7335 (+ (+ ?x7333 ?x6640) ?x6642)))
 (= (- (- (- (+ (+ (+ ?x7335 ?x7493) ?x7495) ?x7497) ?x7500) ?x7502) ?x7504) 0.0))))))))))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7538 (* ?x7242 l_0_4_93)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7536 (* ?x7239 l_0_4_92)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7534 (* ?x7236 l_0_4_91)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7530 (* ?x6118 l_0_4_72)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7528 (* ?x6115 l_0_4_71)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7526 (* ?x6112 l_0_4_70)))
 (let ((?x6642 (* l_0_4_6 l_0_4_6)))
 (let ((?x6736 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6640 (* l_0_4_5 l_0_4_5)))
 (let ((?x6733 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7772 (* l_0_4_48 l_0_4_48)))
 (let ((?x7770 (* l_0_4_47 l_0_4_47)))
 (let ((?x7768 (* l_0_4_46 l_0_4_46)))
 (let ((?x6638 (* l_0_4_4 l_0_4_4)))
 (let ((?x6721 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6636 (* l_0_4_27 l_0_4_27)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6705 (* ?x6633 l_0_4_30)))
 (let ((?x6631 (* l_0_4_26 l_0_4_26)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6702 (* ?x3391 l_0_4_29)))
 (let ((?x7762 (- (- (* (* (- 2.0) l_0_4_25) l_0_4_28) (* l_0_4_25 l_0_4_25)) ?x6702)))
 (let ((?x7771 (- (- (+ (+ (- (- (- ?x7762 ?x6631) ?x6705) ?x6636) ?x6721) ?x6638) ?x7768) ?x7770)))
 (let ((?x7779 (+ (+ (+ (+ (+ (+ (- ?x7771 ?x7772) ?x6733) ?x6640) ?x6736) ?x6642) ?x7526) ?x7528)))
 (= (- (- (- (+ ?x7779 ?x7530) ?x7534) ?x7536) ?x7538) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7242 (* 2.0 l_0_4_90)))
 (let ((?x7243 (* ?x7242 l_0_4_97)))
 (let ((?x7239 (* 2.0 l_0_4_89)))
 (let ((?x7240 (* ?x7239 l_0_4_96)))
 (let ((?x7236 (* 2.0 l_0_4_88)))
 (let ((?x7237 (* ?x7236 l_0_4_95)))
 (let ((?x6118 (* 2.0 l_0_4_69)))
 (let ((?x7233 (* ?x6118 l_0_4_76)))
 (let ((?x6115 (* 2.0 l_0_4_68)))
 (let ((?x7231 (* ?x6115 l_0_4_75)))
 (let ((?x6112 (* 2.0 l_0_4_67)))
 (let ((?x7229 (* ?x6112 l_0_4_74)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6827 (* ?x6633 l_0_4_34)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6825 (* ?x3391 l_0_4_33)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x6823 (* ?x3404 l_0_4_32)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x6815 (* ?x6812 l_0_4_6)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6810 (* ?x6499 l_0_4_5)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6806 (* ?x6484 l_0_4_4)))
 (let ((?x4529 (- (- (- (+ (+ ?x6806 ?x6810) ?x6815) ?x6823) ?x6825) ?x6827)))
 (= (- (- (- (+ (+ (+ ?x4529 ?x7229) ?x7231) ?x7233) ?x7237) ?x7240) ?x7243) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7857 (* l_0_4_94 l_0_4_94)))
 (let ((?x7855 (* l_0_4_93 l_0_4_93)))
 (let ((?x7853 (* l_0_4_92 l_0_4_92)))
 (let ((?x7851 (* l_0_4_91 l_0_4_91)))
 (let ((?x7013 (* l_0_4_9 l_0_4_9)))
 (let ((?x7011 (* l_0_4_8 l_0_4_8)))
 (let ((?x7847 (* l_0_4_73 l_0_4_73)))
 (let ((?x7845 (* l_0_4_72 l_0_4_72)))
 (let ((?x7843 (* l_0_4_71 l_0_4_71)))
 (let ((?x7841 (* l_0_4_70 l_0_4_70)))
 (let ((?x7009 (* l_0_4_7 l_0_4_7)))
 (let ((?x6736 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x6733 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x6721 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x6995 (* l_0_4_31 l_0_4_31)))
 (let ((?x6992 (* l_0_4_30 l_0_4_30)))
 (let ((?x6989 (* l_0_4_29 l_0_4_29)))
 (let ((?x6986 (* l_0_4_28 l_0_4_28)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6705 (* ?x6633 l_0_4_30)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6702 (* ?x3391 l_0_4_29)))
 (let ((?x7825 (- (- (* l_0_4_10 l_0_4_10) (* (* 2.0 l_0_4_25) l_0_4_28)) ?x6702)))
 (let ((?x7833 (- (+ (- (- (- (- (- ?x7825 ?x6705) ?x6986) ?x6989) ?x6992) ?x6995) ?x6721) (* (* 2.0 l_0_4_46) l_0_4_49))))
 (let ((?x7837 (- (- ?x7833 (* (* 2.0 l_0_4_47) l_0_4_50)) (* (* 2.0 l_0_4_48) l_0_4_51))))
 (let ((?x7848 (+ (+ (+ (+ (+ (+ (+ ?x7837 ?x6733) ?x6736) ?x7009) ?x7841) ?x7843) ?x7845) ?x7847)))
 (= (- (- (- (- (+ (+ ?x7848 ?x7011) ?x7013) ?x7851) ?x7853) ?x7855) ?x7857) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7285 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x7282 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x7279 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x7276 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x7273 (* ?x6174 l_0_4_77)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x7271 (* ?x6171 l_0_4_76)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x7269 (* ?x6168 l_0_4_75)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x7267 (* ?x6165 l_0_4_74)))
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x7051 (* ?x6717 l_0_4_35)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x7049 (* ?x6714 l_0_4_34)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x7047 (* ?x6711 l_0_4_33)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x7045 (* ?x6708 l_0_4_32)))
 (let ((?x6633 (* 2.0 l_0_4_27)))
 (let ((?x6827 (* ?x6633 l_0_4_34)))
 (let ((?x3391 (* 2.0 l_0_4_26)))
 (let ((?x6825 (* ?x3391 l_0_4_33)))
 (let ((?x3404 (* 2.0 l_0_4_25)))
 (let ((?x6823 (* ?x3404 l_0_4_32)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x7041 (* ?x6812 l_0_4_9)))
 (let ((?x6815 (* ?x6812 l_0_4_6)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x7038 (* ?x6499 l_0_4_8)))
 (let ((?x6810 (* ?x6499 l_0_4_5)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x7035 (* ?x6484 l_0_4_7)))
 (let ((?x7905 (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) (* ?x6484 l_0_4_4)) ?x7035) ?x6810)))
 (let ((?x7912 (- (- (- (- (+ (+ (+ ?x7905 ?x7038) ?x6815) ?x7041) ?x6823) ?x6825) ?x6827) ?x7045)))
 (let ((?x7917 (- (- (- (- ?x7912 ?x7047) ?x7049) ?x7051) (* (* 2.0 l_0_4_46) l_0_4_53))))
 (let ((?x7921 (- (- ?x7917 (* (* 2.0 l_0_4_47) l_0_4_54)) (* (* 2.0 l_0_4_48) l_0_4_55))))
 (let ((?x7928 (- (- (- (+ (+ (+ (+ ?x7921 ?x7267) ?x7269) ?x7271) ?x7273) ?x7276) ?x7279) ?x7282)))
 (= (- ?x7928 ?x7285) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7316 (* l_0_4_99 l_0_4_99)))
 (let ((?x7314 (* l_0_4_98 l_0_4_98)))
 (let ((?x7312 (* l_0_4_97 l_0_4_97)))
 (let ((?x7310 (* l_0_4_96 l_0_4_96)))
 (let ((?x7308 (* l_0_4_95 l_0_4_95)))
 (let ((?x7306 (* l_0_4_78 l_0_4_78)))
 (let ((?x7304 (* l_0_4_77 l_0_4_77)))
 (let ((?x7302 (* l_0_4_76 l_0_4_76)))
 (let ((?x7300 (* l_0_4_75 l_0_4_75)))
 (let ((?x7298 (* l_0_4_74 l_0_4_74)))
 (let ((?x7159 (* l_0_4_36 l_0_4_36)))
 (let ((?x7157 (* l_0_4_35 l_0_4_35)))
 (let ((?x7155 (* l_0_4_34 l_0_4_34)))
 (let ((?x7153 (* l_0_4_33 l_0_4_33)))
 (let ((?x7151 (* l_0_4_32 l_0_4_32)))
 (let ((?x7149 (* l_0_4_15 l_0_4_15)))
 (let ((?x7147 (* l_0_4_14 l_0_4_14)))
 (let ((?x7145 (* l_0_4_13 l_0_4_13)))
 (let ((?x7387 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x7145) ?x7147)))
 (let ((?x7393 (- (- (- (- (- (+ ?x7387 ?x7149) ?x7151) ?x7153) ?x7155) ?x7157) ?x7159)))
 (let ((?x7950 (- (- (+ (+ (+ (+ (+ ?x7393 ?x7298) ?x7300) ?x7302) ?x7304) ?x7306) ?x7308) ?x7310)))
 (= (- (- (- ?x7950 ?x7312) ?x7314) ?x7316) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7532 (* ?x5818 l_0_4_91)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7524 (* ?x5809 l_0_4_70)))
 (let ((?x7970 (* l_0_4_43 l_0_4_43)))
 (let ((?x6052 (* l_0_4_22 l_0_4_22)))
 (let ((?x6058 (* l_0_4_1 l_0_4_1)))
 (let ((?x4228 (- ?x6058 ?x6052)))
 (= (+ (- (- ?x4228 ?x7970) ?x7524) ?x7532) 0.0))))))))))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5956 (* ?x5824 l_0_4_92)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5954 (* ?x5821 l_0_4_91)))
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x7532 (* ?x5818 l_0_4_91)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5952 (* ?x5815 l_0_4_71)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5950 (* ?x5812 l_0_4_70)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x7524 (* ?x5809 l_0_4_70)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6082 (* ?x6081 l_0_4_23)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x7212 (* ?x6095 l_0_4_2)))
 (let ((?x7981 (- (- ?x7212 (* (* 2.0 l_0_4_106) l_0_4_112)) (* (* 2.0 l_0_4_127) l_0_4_133))))
 (let ((?x7986 (- (+ (- (- ?x7981 ?x6082) (* (* 2.0 l_0_4_43) l_0_4_44)) ?x7524) ?x5950)))
 (= (+ (+ (- (- ?x7986 ?x5952) ?x7532) ?x5954) ?x5956) 0.0))))))))))))))))))))
(assert
 (let ((?x7857 (* l_0_4_94 l_0_4_94)))
 (let ((?x7855 (* l_0_4_93 l_0_4_93)))
 (let ((?x7853 (* l_0_4_92 l_0_4_92)))
 (let ((?x7851 (* l_0_4_91 l_0_4_91)))
 (let ((?x7847 (* l_0_4_73 l_0_4_73)))
 (let ((?x7845 (* l_0_4_72 l_0_4_72)))
 (let ((?x7843 (* l_0_4_71 l_0_4_71)))
 (let ((?x7841 (* l_0_4_70 l_0_4_70)))
 (let ((?x6081 (* 2.0 l_0_4_22)))
 (let ((?x6159 (* ?x6081 l_0_4_28)))
 (let ((?x6095 (* 2.0 l_0_4_1)))
 (let ((?x2295 (* ?x6095 l_0_4_7)))
 (let ((?x4295 (- ?x2295 ?x6159)))
 (let ((?x8008 (- (- (- (- ?x4295 (* (* 2.0 l_0_4_43) l_0_4_49)) ?x7841) ?x7843) ?x7845)))
 (= (+ (+ (+ (+ (- ?x8008 ?x7847) ?x7851) ?x7853) ?x7855) ?x7857) 0.0))))))))))))))))
(assert
 (let ((?x6379 (* 2.0 l_0_4_3)))
 (let ((?x6448 (* ?x6379 l_0_4_8)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6445 (* ?x6229 l_0_4_29)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6442 (* ?x6226 l_0_4_28)))
 (let ((?x6370 (* 2.0 l_0_4_2)))
 (let ((?x6440 (* ?x6370 l_0_4_7)))
 (let ((?x8031 (* l_0_4_136 l_0_4_136)))
 (let ((?x8029 (* l_0_4_135 l_0_4_135)))
 (let ((?x8027 (* l_0_4_134 l_0_4_134)))
 (let ((?x8025 (* l_0_4_133 l_0_4_133)))
 (let ((?x8023 (* l_0_4_115 l_0_4_115)))
 (let ((?x8021 (* l_0_4_114 l_0_4_114)))
 (let ((?x8022 (- (- (* (- l_0_4_112) l_0_4_112) (* l_0_4_113 l_0_4_113)) ?x8021)))
 (let ((?x8034 (- (+ (- (- (- (- (- ?x8022 ?x8023) ?x8025) ?x8027) ?x8029) ?x8031) ?x6440) ?x6442)))
 (let ((?x8040 (- (- (+ (- ?x8034 ?x6445) ?x6448) (* (* 2.0 l_0_4_44) l_0_4_49)) (* (* 2.0 l_0_4_45) l_0_4_50))))
 (let ((?x8044 (+ (+ ?x8040 (* 1.0 (* l_0_4_70 l_0_4_70))) (* 1.0 (* l_0_4_71 l_0_4_71)))))
 (let ((?x8048 (+ (+ ?x8044 (* 1.0 (* l_0_4_72 l_0_4_72))) (* 1.0 (* l_0_4_73 l_0_4_73)))))
 (let ((?x8054 (- (- ?x8048 (* (* 1.0 l_0_4_91) l_0_4_91)) (* (* 1.0 l_0_4_92) l_0_4_92))))
 (let ((?x8060 (- (- ?x8054 (* (* 1.0 l_0_4_93) l_0_4_93)) (* (* 1.0 l_0_4_94) l_0_4_94))))
 (= ?x8060 0.0)))))))))))))))))))))))
(assert
 (let ((?x7285 (* (* 2.0 l_0_4_94) l_0_4_98)))
 (let ((?x7282 (* (* 2.0 l_0_4_93) l_0_4_97)))
 (let ((?x7279 (* (* 2.0 l_0_4_92) l_0_4_96)))
 (let ((?x7276 (* (* 2.0 l_0_4_91) l_0_4_95)))
 (let ((?x6174 (* 2.0 l_0_4_73)))
 (let ((?x7273 (* ?x6174 l_0_4_77)))
 (let ((?x6171 (* 2.0 l_0_4_72)))
 (let ((?x7271 (* ?x6171 l_0_4_76)))
 (let ((?x6168 (* 2.0 l_0_4_71)))
 (let ((?x7269 (* ?x6168 l_0_4_75)))
 (let ((?x6165 (* 2.0 l_0_4_70)))
 (let ((?x7267 (* ?x6165 l_0_4_74)))
 (let ((?x6229 (* 2.0 l_0_4_24)))
 (let ((?x6522 (* ?x6229 l_0_4_33)))
 (let ((?x6226 (* 2.0 l_0_4_23)))
 (let ((?x6520 (* ?x6226 l_0_4_32)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x6500 (* ?x6499 l_0_4_3)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x6485 (* ?x6484 l_0_4_2)))
 (let ((?x1297 (- (- ?x6485 (* (* 2.0 l_0_4_112) l_0_4_116)) (* (* 2.0 l_0_4_113) l_0_4_117))))
 (let ((?x8095 (- (- ?x1297 (* (* 2.0 l_0_4_114) l_0_4_118)) (* (* 2.0 l_0_4_115) l_0_4_119))))
 (let ((?x8100 (- (- (+ ?x8095 ?x6500) (* (* 2.0 l_0_4_133) l_0_4_137)) (* (* 2.0 l_0_4_134) l_0_4_138))))
 (let ((?x8104 (- (- ?x8100 (* (* 2.0 l_0_4_135) l_0_4_139)) (* (* 2.0 l_0_4_136) l_0_4_140))))
 (let ((?x8110 (- (- (- (- ?x8104 ?x6520) ?x6522) (* (* 2.0 l_0_4_44) l_0_4_53)) (* (* 2.0 l_0_4_45) l_0_4_54))))
 (let ((?x8117 (- (- (- (+ (+ (+ (+ ?x8110 ?x7267) ?x7269) ?x7271) ?x7273) ?x7276) ?x7279) ?x7282)))
 (= (- ?x8117 ?x7285) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7013 (* l_0_4_9 l_0_4_9)))
 (let ((?x7011 (* l_0_4_8 l_0_4_8)))
 (let ((?x7009 (* l_0_4_7 l_0_4_7)))
 (let ((?x8161 (* l_0_4_52 l_0_4_52)))
 (let ((?x8159 (* l_0_4_51 l_0_4_51)))
 (let ((?x8157 (* l_0_4_50 l_0_4_50)))
 (let ((?x8155 (* l_0_4_49 l_0_4_49)))
 (let ((?x6995 (* l_0_4_31 l_0_4_31)))
 (let ((?x6992 (* l_0_4_30 l_0_4_30)))
 (let ((?x6989 (* l_0_4_29 l_0_4_29)))
 (let ((?x7364 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_28 l_0_4_28)) ?x6989) ?x6992)))
 (let ((?x7365 (- ?x7364 ?x6995)))
 (let ((?x8165 (+ (+ (+ (- (- (- (- ?x7365 ?x8155) ?x8157) ?x8159) ?x8161) ?x7009) ?x7011) ?x7013)))
 (= ?x8165 0.0)))))))))))))))
(assert
 (let ((?x6717 (* 2.0 l_0_4_31)))
 (let ((?x7051 (* ?x6717 l_0_4_35)))
 (let ((?x6714 (* 2.0 l_0_4_30)))
 (let ((?x7049 (* ?x6714 l_0_4_34)))
 (let ((?x6711 (* 2.0 l_0_4_29)))
 (let ((?x7047 (* ?x6711 l_0_4_33)))
 (let ((?x6708 (* 2.0 l_0_4_28)))
 (let ((?x7045 (* ?x6708 l_0_4_32)))
 (let ((?x6812 (* 2.0 l_0_4_13)))
 (let ((?x7041 (* ?x6812 l_0_4_9)))
 (let ((?x6499 (* 2.0 l_0_4_12)))
 (let ((?x7038 (* ?x6499 l_0_4_8)))
 (let ((?x6484 (* 2.0 l_0_4_11)))
 (let ((?x7035 (* ?x6484 l_0_4_7)))
 (let ((?x3484 (* 2.0 l_0_4_10)))
 (let ((?x4679 (* ?x3484 l_0_4_14)))
 (let ((?x4631 (- (- (- (- (+ (+ (+ ?x4679 ?x7035) ?x7038) ?x7041) ?x7045) ?x7047) ?x7049) ?x7051)))
 (let ((?x8181 (- (- ?x4631 (* (* 2.0 l_0_4_49) l_0_4_53)) (* (* 2.0 l_0_4_50) l_0_4_54))))
 (let ((?x8185 (- (- ?x8181 (* (* 2.0 l_0_4_51) l_0_4_55)) (* (* 2.0 l_0_4_52) l_0_4_56))))
 (= ?x8185 0.0)))))))))))))))))))))
(assert
 (let ((?x8202 (* l_0_4_57 l_0_4_57)))
 (let ((?x8200 (* l_0_4_56 l_0_4_56)))
 (let ((?x8198 (* l_0_4_55 l_0_4_55)))
 (let ((?x8196 (* l_0_4_54 l_0_4_54)))
 (let ((?x1491 (* l_0_4_53 l_0_4_53)))
 (let ((?x7159 (* l_0_4_36 l_0_4_36)))
 (let ((?x7157 (* l_0_4_35 l_0_4_35)))
 (let ((?x7155 (* l_0_4_34 l_0_4_34)))
 (let ((?x7153 (* l_0_4_33 l_0_4_33)))
 (let ((?x7151 (* l_0_4_32 l_0_4_32)))
 (let ((?x7149 (* l_0_4_15 l_0_4_15)))
 (let ((?x7147 (* l_0_4_14 l_0_4_14)))
 (let ((?x7145 (* l_0_4_13 l_0_4_13)))
 (let ((?x7387 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x7145) ?x7147)))
 (let ((?x7393 (- (- (- (- (- (+ ?x7387 ?x7149) ?x7151) ?x7153) ?x7155) ?x7157) ?x7159)))
 (= (- (- (- (- (- ?x7393 ?x1491) ?x8196) ?x8198) ?x8200) ?x8202) 0.0)))))))))))))))))
(assert
 (= (+ (* (- l_0_4_64) l_0_4_64) (* l_0_4_85 l_0_4_85)) 0.0))
(assert
 (let ((?x5818 (* 2.0 l_0_4_85)))
 (let ((?x5869 (* ?x5818 l_0_4_86)))
 (let ((?x5809 (* 2.0 l_0_4_64)))
 (let ((?x5863 (* ?x5809 l_0_4_65)))
 (let ((?x1104 (- (- (* (- l_0_4_106) l_0_4_106) (* l_0_4_127 l_0_4_127)) ?x5863)))
 (let ((?x1578 (- (+ (+ ?x1104 (* 1.0 (* l_0_4_64 l_0_4_64))) ?x5869) (* (* 1.0 l_0_4_85) l_0_4_85))))
 (= ?x1578 0.0))))))))
(assert
 (let ((?x5824 (* 2.0 l_0_4_87)))
 (let ((?x5825 (* ?x5824 l_0_4_96)))
 (let ((?x5821 (* 2.0 l_0_4_86)))
 (let ((?x5822 (* ?x5821 l_0_4_95)))
 (let ((?x5815 (* 2.0 l_0_4_66)))
 (let ((?x5816 (* ?x5815 l_0_4_75)))
 (let ((?x5812 (* 2.0 l_0_4_65)))
 (let ((?x5813 (* ?x5812 l_0_4_74)))
 (let ((?x8237 (- (* (* (- 2.0) l_0_4_107) l_0_4_116) (* (* 2.0 l_0_4_108) l_0_4_117))))
 (let ((?x8241 (- (- ?x8237 (* (* 2.0 l_0_4_128) l_0_4_137)) (* (* 2.0 l_0_4_129) l_0_4_138))))
 (= (- (- (+ (+ ?x8241 ?x5813) ?x5816) ?x5822) ?x5825) 0.0))))))))))))
(assert
 (let ((?x8285 (* l_0_4_141 l_0_4_141)))
 (let ((?x8283 (* l_0_4_140 l_0_4_140)))
 (let ((?x8281 (* l_0_4_139 l_0_4_139)))
 (let ((?x8279 (* l_0_4_138 l_0_4_138)))
 (let ((?x8277 (* l_0_4_137 l_0_4_137)))
 (let ((?x8275 (* l_0_4_120 l_0_4_120)))
 (let ((?x8273 (* l_0_4_119 l_0_4_119)))
 (let ((?x8271 (* l_0_4_118 l_0_4_118)))
 (let ((?x8272 (- (- (* (- l_0_4_116) l_0_4_116) (* l_0_4_117 l_0_4_117)) ?x8271)))
 (let ((?x8286 (- (- (- (- (- (- (- ?x8272 ?x8273) ?x8275) ?x8277) ?x8279) ?x8281) ?x8283) ?x8285)))
 (let ((?x8290 (+ (+ ?x8286 (* 1.0 (* l_0_4_74 l_0_4_74))) (* 1.0 (* l_0_4_75 l_0_4_75)))))
 (let ((?x8294 (+ (+ ?x8290 (* 1.0 (* l_0_4_76 l_0_4_76))) (* 1.0 (* l_0_4_77 l_0_4_77)))))
 (let ((?x8299 (- (+ ?x8294 (* 1.0 (* l_0_4_78 l_0_4_78))) (* (* 1.0 l_0_4_95) l_0_4_95))))
 (let ((?x8305 (- (- ?x8299 (* (* 1.0 l_0_4_96) l_0_4_96)) (* (* 1.0 l_0_4_97) l_0_4_97))))
 (let ((?x8311 (- (- ?x8305 (* (* 1.0 l_0_4_98) l_0_4_98)) (* (* 1.0 l_0_4_99) l_0_4_99))))
 (= ?x8311 0.0)))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_22 0.0))
(assert
 (>= l_0_4_24 0.0))
(assert
 (>= l_0_4_27 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_42 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_52 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_64 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_69 0.0))
(assert
 (>= l_0_4_73 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_106 0.0))
(assert
 (>= l_0_4_108 0.0))
(assert
 (>= l_0_4_111 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_120 0.0))
(assert
 (>= l_0_4_126 0.0))
(assert
 (>= l_0_4_127 0.0))
(assert
 (>= l_0_4_129 0.0))
(assert
 (>= l_0_4_132 0.0))
(assert
 (>= l_0_4_136 0.0))
(assert
 (>= l_0_4_141 0.0))
(assert
 (>= l_0_4_147 0.0))
(assert
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8386 (* ?x8385 l_0_5_80)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8383 (* ?x8382 l_0_5_79)))
 (let ((?x8380 (* l_0_5_3 l_0_5_3)))
 (let ((?x8378 (* l_0_5_24 l_0_5_24)))
 (let ((?x8376 (* l_0_5_23 l_0_5_23)))
 (let ((?x8374 (* l_0_5_2 l_0_5_2)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8366 (* ?x8365 l_0_5_87)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8364 (* ?x8363 l_0_5_86)))
 (let ((?x8373 (- (- (+ ?x8364 ?x8366) (* (* 2.0 l_0_5_107) l_0_5_121)) (* (* 2.0 l_0_5_108) l_0_5_122))))
 (let ((?x8388 (+ (- (- (- (+ (+ (- ?x8373 ?x8374) ?x8376) ?x8378) ?x8380) ?x8383) ?x8386) 1.0)))
 (= ?x8388 0.0))))))))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8442 (* ?x8441 l_0_5_96)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8439 (* ?x8438 l_0_5_95)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x8436 (* ?x8435 l_0_5_95)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8433 (* ?x8385 l_0_5_75)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8431 (* ?x8382 l_0_5_74)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8429 (* ?x8428 l_0_5_74)))
 (let ((?x8380 (* l_0_5_3 l_0_5_3)))
 (let ((?x8378 (* l_0_5_24 l_0_5_24)))
 (let ((?x8376 (* l_0_5_23 l_0_5_23)))
 (let ((?x8425 (- (+ (* (* (- 2.0) l_0_5_106) l_0_5_116) (* l_0_5_2 l_0_5_2)) ?x8376)))
 (let ((?x8440 (- (+ (+ (+ (- (+ (- ?x8425 ?x8378) ?x8380) ?x8429) ?x8431) ?x8433) ?x8436) ?x8439)))
 (= (- (- ?x8440 ?x8442) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x8460 (* l_0_5_108 l_0_5_108)))
 (let ((?x8464 (- (- (- (- _a_1_) (* l_0_5_107 l_0_5_107)) ?x8460) (* (* 1.0 l_0_5_65) l_0_5_65))))
 (let ((?x8470 (+ (- ?x8464 (* (* 1.0 l_0_5_66) l_0_5_66)) (* 1.0 (* l_0_5_86 l_0_5_86)))))
 (= (+ (+ ?x8470 (* 1.0 (* l_0_5_87 l_0_5_87))) 1.0) 0.0)))))
(assert
 (let ((?x8471 (* l_0_5_87 l_0_5_87)))
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8508 (* ?x8441 l_0_5_89)))
 (let ((?x8468 (* l_0_5_86 l_0_5_86)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8505 (* ?x8438 l_0_5_88)))
 (let ((?x8485 (* l_0_5_66 l_0_5_66)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8502 (* ?x8385 l_0_5_68)))
 (let ((?x8481 (* l_0_5_65 l_0_5_65)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8499 (* ?x8382 l_0_5_67)))
 (let ((?x8380 (* l_0_5_3 l_0_5_3)))
 (let ((?x8378 (* l_0_5_24 l_0_5_24)))
 (let ((?x8376 (* l_0_5_23 l_0_5_23)))
 (let ((?x8374 (* l_0_5_2 l_0_5_2)))
 (let ((?x8494 (- (- (- _a_2_) (* (* 2.0 l_0_5_107) l_0_5_109)) (* (* 2.0 l_0_5_108) l_0_5_110))))
 (let ((?x8503 (- (- (- (+ (- (- (+ ?x8494 ?x8374) ?x8376) ?x8378) ?x8380) ?x8499) ?x8481) ?x8502)))
 (= (+ (+ (+ (+ (- ?x8503 ?x8485) ?x8505) ?x8468) ?x8508) ?x8471) 0.0))))))))))))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8544 (* ?x8441 l_0_5_92)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8542 (* ?x8438 l_0_5_91)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8540 (* ?x8385 l_0_5_71)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8538 (* ?x8382 l_0_5_70)))
 (let ((?x8536 (* l_0_5_45 l_0_5_45)))
 (let ((?x8534 (* l_0_5_44 l_0_5_44)))
 (let ((?x8380 (* l_0_5_3 l_0_5_3)))
 (let ((?x8378 (* l_0_5_24 l_0_5_24)))
 (let ((?x8376 (* l_0_5_23 l_0_5_23)))
 (let ((?x8374 (* l_0_5_2 l_0_5_2)))
 (let ((?x8529 (- (* (* (- 2.0) l_0_5_107) l_0_5_112) (* (* 2.0 l_0_5_108) l_0_5_113))))
 (let ((?x8539 (- (- (- (+ (- (- (+ ?x8529 ?x8374) ?x8376) ?x8378) ?x8380) ?x8534) ?x8536) ?x8538)))
 (= (- (+ (+ (- ?x8539 ?x8540) ?x8542) ?x8544) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8584 (* ?x8428 l_0_5_79)))
 (let ((?x8582 (* l_0_5_22 l_0_5_22)))
 (let ((?x8583 (+ (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_100) l_0_5_85)) ?x8582)))
 (= (+ ?x8583 ?x8584) 0.0))))))
(assert
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8386 (* ?x8385 l_0_5_80)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8383 (* ?x8382 l_0_5_79)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8584 (* ?x8428 l_0_5_79)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8606 (* ?x8605 l_0_5_23)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8366 (* ?x8365 l_0_5_87)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8364 (* ?x8363 l_0_5_86)))
 (let ((?x8601 (- (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) (* ?x8363 l_0_5_85)) ?x8364) ?x8366)))
 (let ((?x8609 (+ (- (+ (- ?x8601 (* (* 2.0 l_0_5_106) l_0_5_121)) ?x8606) ?x8584) ?x8383)))
 (= (+ ?x8609 ?x8386) 0.0))))))))))))))))
(assert
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x8640 (* ?x8639 l_0_5_81)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x8637 (* ?x8636 l_0_5_80)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x8634 (* ?x8633 l_0_5_79)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8584 (* ?x8428 l_0_5_79)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8630 (* ?x8605 l_0_5_37)))
 (let ((?x8628 (* ?x8605 l_0_5_25)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8626 (* ?x8625 l_0_5_90)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8623 (* ?x8365 l_0_5_89)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8621 (* ?x8363 l_0_5_88)))
 (let ((?x8580 (* ?x8363 l_0_5_85)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x8618 (* ?x5920 l_0_5_4)))
 (let ((?x8617 (* ?x5920 l_0_5_16)))
 (let ((?x8631 (- (+ (- (- (- (+ (- ?x8617 ?x8618) ?x8580) ?x8621) ?x8623) ?x8626) ?x8628) ?x8630)))
 (= (+ (+ (+ (- ?x8631 ?x8584) ?x8634) ?x8637) ?x8640) 0.0))))))))))))))))))))))))
(assert
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x8698 (* ?x8697 l_0_5_82)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x8695 (* ?x8694 l_0_5_81)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x8692 (* ?x8691 l_0_5_80)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x8689 (* ?x8688 l_0_5_79)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8630 (* ?x8605 l_0_5_37)))
 (let ((?x8682 (* ?x8605 l_0_5_28)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8680 (* ?x8679 l_0_5_94)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8677 (* ?x8625 l_0_5_93)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8675 (* ?x8365 l_0_5_92)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8666 (* ?x8363 l_0_5_91)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x2089 (* ?x5920 l_0_5_7)))
 (let ((?x8617 (* ?x5920 l_0_5_16)))
 (let ((?x8684 (- (+ (- (- (- (- (- ?x8617 ?x2089) ?x8666) ?x8675) ?x8677) ?x8680) ?x8682) ?x8630)))
 (let ((?x8696 (+ (+ (+ (- ?x8684 (* (* 2.0 l_0_5_43) l_0_5_58)) ?x8689) ?x8692) ?x8695)))
 (= (+ ?x8696 ?x8698) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8763 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8760 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8757 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8754 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8751 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8748 (* ?x8747 l_0_5_38)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8745 (* ?x8744 l_0_5_37)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8742 (* ?x8605 l_0_5_32)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x8740 (* ?x8739 l_0_5_3)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x8737 (* ?x8736 l_0_5_2)))
 (let ((?x8734 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8731 (* ?x8679 l_0_5_98)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8729 (* ?x8625 l_0_5_97)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8720 (* ?x8365 l_0_5_96)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8716 (* ?x8363 l_0_5_95)))
 (let ((?x8732 (- (- (- (- (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x8716) ?x8720) ?x8729) ?x8731)))
 (let ((?x8752 (+ (- (- (+ (+ (+ (- ?x8732 ?x8734) ?x8737) ?x8740) ?x8742) ?x8745) ?x8748) ?x8751)))
 (= (+ (+ (+ (+ ?x8752 ?x8754) ?x8757) ?x8760) ?x8763) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8818 (* l_0_5_84 l_0_5_84)))
 (let ((?x8816 (* l_0_5_83 l_0_5_83)))
 (let ((?x8814 (* l_0_5_82 l_0_5_82)))
 (let ((?x8812 (* l_0_5_81 l_0_5_81)))
 (let ((?x8810 (* l_0_5_80 l_0_5_80)))
 (let ((?x8808 (* l_0_5_79 l_0_5_79)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8630 (* ?x8605 l_0_5_37)))
 (let ((?x8805 (* l_0_5_105 l_0_5_105)))
 (let ((?x8803 (* l_0_5_104 l_0_5_104)))
 (let ((?x8801 (* l_0_5_103 l_0_5_103)))
 (let ((?x8788 (* l_0_5_102 l_0_5_102)))
 (let ((?x2255 (* l_0_5_101 l_0_5_101)))
 (let ((?x8787 (- (- (* (* (- 2.0) l_0_5_1) l_0_5_16) (* l_0_5_100 l_0_5_100)) ?x2255)))
 (let ((?x8811 (+ (+ (+ (- (- (- (- ?x8787 ?x8788) ?x8801) ?x8803) ?x8805) ?x8630) ?x8808) ?x8810)))
 (= (+ (+ (+ (+ ?x8811 ?x8812) ?x8814) ?x8816) ?x8818) 0.0)))))))))))))))))
(assert
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x8640 (* ?x8639 l_0_5_81)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x8637 (* ?x8636 l_0_5_80)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x8634 (* ?x8633 l_0_5_79)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8386 (* ?x8385 l_0_5_80)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8383 (* ?x8382 l_0_5_79)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8860 (* ?x8859 l_0_5_5)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8748 (* ?x8747 l_0_5_38)))
 (let ((?x8856 (* ?x8747 l_0_5_26)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8745 (* ?x8744 l_0_5_37)))
 (let ((?x8853 (* ?x8744 l_0_5_25)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8851 (* ?x8850 l_0_5_4)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x8740 (* ?x8739 l_0_5_3)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x8737 (* ?x8736 l_0_5_2)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8626 (* ?x8625 l_0_5_90)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8623 (* ?x8365 l_0_5_89)))
 (let ((?x8366 (* ?x8365 l_0_5_87)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8621 (* ?x8363 l_0_5_88)))
 (let ((?x8364 (* ?x8363 l_0_5_86)))
 (let ((?x8841 (- (+ (+ (+ (+ ?x8364 ?x8621) ?x8366) ?x8623) ?x8626) (* (* 2.0 l_0_5_109) l_0_5_121))))
 (let ((?x8847 (- (- ?x8841 (* (* 2.0 l_0_5_110) l_0_5_122)) (* (* 2.0 l_0_5_111) l_0_5_123))))
 (let ((?x8858 (- (+ (- (+ (- (+ (+ ?x8847 ?x8737) ?x8740) ?x8851) ?x8853) ?x8745) ?x8856) ?x8748)))
 (= (- (- (- (- (- (- ?x8858 ?x8860) ?x8383) ?x8386) ?x8634) ?x8637) ?x8640) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x8698 (* ?x8697 l_0_5_82)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x8695 (* ?x8694 l_0_5_81)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x8692 (* ?x8691 l_0_5_80)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x8689 (* ?x8688 l_0_5_79)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8921 (* ?x8859 l_0_5_8)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8748 (* ?x8747 l_0_5_38)))
 (let ((?x8918 (* ?x8747 l_0_5_29)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8745 (* ?x8744 l_0_5_37)))
 (let ((?x8915 (* ?x8744 l_0_5_28)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8913 (* ?x8850 l_0_5_7)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x8740 (* ?x8739 l_0_5_3)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x8737 (* ?x8736 l_0_5_2)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8680 (* ?x8679 l_0_5_94)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8677 (* ?x8625 l_0_5_93)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8675 (* ?x8365 l_0_5_92)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8666 (* ?x8363 l_0_5_91)))
 (let ((?x8901 (- (+ (+ (+ ?x8666 ?x8675) ?x8677) ?x8680) (* (* 2.0 l_0_5_112) l_0_5_121))))
 (let ((?x8907 (- (- ?x8901 (* (* 2.0 l_0_5_113) l_0_5_122)) (* (* 2.0 l_0_5_114) l_0_5_123))))
 (let ((?x8914 (- (+ (+ (- ?x8907 (* (* 2.0 l_0_5_115) l_0_5_124)) ?x8737) ?x8740) ?x8913)))
 (let ((?x8925 (- (- (- (+ (- (+ ?x8914 ?x8915) ?x8745) ?x8918) ?x8748) ?x8921) (* (* 2.0 l_0_5_44) l_0_5_58))))
 (let ((?x8931 (- (- (- (- ?x8925 (* (* 2.0 l_0_5_45) l_0_5_59)) ?x8689) ?x8692) ?x8695)))
 (= (- ?x8931 ?x8698) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8763 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8760 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8757 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8754 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8751 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8990 (* ?x8747 l_0_5_33)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8988 (* ?x8744 l_0_5_32)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x8983 (* ?x8982 l_0_5_3)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x8968 (* ?x8967 l_0_5_2)))
 (let ((?x8734 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8731 (* ?x8679 l_0_5_98)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8729 (* ?x8625 l_0_5_97)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8720 (* ?x8365 l_0_5_96)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8716 (* ?x8363 l_0_5_95)))
 (let ((?x8966 (+ (+ (+ (+ ?x8716 ?x8720) ?x8729) ?x8731) ?x8734)))
 (let ((?x8975 (- (- (- ?x8966 ?x8968) (* (* 2.0 l_0_5_116) l_0_5_121)) (* (* 2.0 l_0_5_117) l_0_5_122))))
 (let ((?x8981 (- (- ?x8975 (* (* 2.0 l_0_5_118) l_0_5_123)) (* (* 2.0 l_0_5_119) l_0_5_124))))
 (let ((?x8991 (+ (+ (- (- ?x8981 ?x8983) (* (* 2.0 l_0_5_120) l_0_5_125)) ?x8988) ?x8990)))
 (= (- (- (- (- (- ?x8991 ?x8751) ?x8754) ?x8757) ?x8760) ?x8763) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8748 (* ?x8747 l_0_5_38)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8745 (* ?x8744 l_0_5_37)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x8740 (* ?x8739 l_0_5_3)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x8737 (* ?x8736 l_0_5_2)))
 (let ((?x9033 (* l_0_5_126 l_0_5_126)))
 (let ((?x9031 (* l_0_5_125 l_0_5_125)))
 (let ((?x9029 (* l_0_5_124 l_0_5_124)))
 (let ((?x9027 (* l_0_5_123 l_0_5_123)))
 (let ((?x9025 (* l_0_5_122 l_0_5_122)))
 (let ((?x9023 (* l_0_5_121 l_0_5_121)))
 (let ((?x9014 (+ (* 1.0 (* l_0_5_100 l_0_5_100)) (* 1.0 (* l_0_5_101 l_0_5_101)))))
 (let ((?x9018 (+ (+ ?x9014 (* 1.0 (* l_0_5_102 l_0_5_102))) (* 1.0 (* l_0_5_103 l_0_5_103)))))
 (let ((?x9022 (+ (+ ?x9018 (* 1.0 (* l_0_5_104 l_0_5_104))) (* 1.0 (* l_0_5_105 l_0_5_105)))))
 (let ((?x9035 (- (- (- (- (- (- (- ?x9022 ?x9023) ?x9025) ?x9027) ?x9029) ?x9031) ?x9033) ?x8737)))
 (let ((?x9041 (- (+ (+ (- ?x9035 ?x8740) ?x8745) ?x8748) (* (* 1.0 l_0_5_79) l_0_5_79))))
 (let ((?x9047 (- (- ?x9041 (* (* 1.0 l_0_5_80) l_0_5_80)) (* (* 1.0 l_0_5_81) l_0_5_81))))
 (let ((?x9053 (- (- ?x9047 (* (* 1.0 l_0_5_82) l_0_5_82)) (* (* 1.0 l_0_5_83) l_0_5_83))))
 (= (- ?x9053 (* (* 1.0 l_0_5_84) l_0_5_84)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x8640 (* ?x8639 l_0_5_81)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x8637 (* ?x8636 l_0_5_80)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x8634 (* ?x8633 l_0_5_79)))
 (let ((?x9088 (* l_0_5_6 l_0_5_6)))
 (let ((?x9086 (* l_0_5_5 l_0_5_5)))
 (let ((?x9084 (* l_0_5_4 l_0_5_4)))
 (let ((?x9082 (* l_0_5_27 l_0_5_27)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9080 (* ?x9079 l_0_5_39)))
 (let ((?x9077 (* l_0_5_26 l_0_5_26)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9075 (* ?x9074 l_0_5_38)))
 (let ((?x9072 (* l_0_5_25 l_0_5_25)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9070 (* ?x9069 l_0_5_37)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9067 (* ?x9066 l_0_5_6)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9064 (* ?x8739 l_0_5_5)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9062 (* ?x8736 l_0_5_4)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8626 (* ?x8625 l_0_5_90)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8623 (* ?x8365 l_0_5_89)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8621 (* ?x8363 l_0_5_88)))
 (let ((?x9073 (+ (- (+ (+ (+ (+ (+ ?x8621 ?x8623) ?x8626) ?x9062) ?x9064) ?x9067) ?x9070) ?x9072)))
 (let ((?x9089 (- (- (- (+ (- (+ (- ?x9073 ?x9075) ?x9077) ?x9080) ?x9082) ?x9084) ?x9086) ?x9088)))
 (= (- (- (- ?x9089 ?x8634) ?x8637) ?x8640) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x8698 (* ?x8697 l_0_5_82)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x8695 (* ?x8694 l_0_5_81)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x8692 (* ?x8691 l_0_5_80)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x8689 (* ?x8688 l_0_5_79)))
 (let ((?x9181 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9178 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9166 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9163 (* ?x9162 l_0_5_40)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9160 (* ?x9159 l_0_5_39)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9157 (* ?x9156 l_0_5_38)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9154 (* ?x9153 l_0_5_37)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9080 (* ?x9079 l_0_5_39)))
 (let ((?x9150 (* ?x9079 l_0_5_30)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9075 (* ?x9074 l_0_5_38)))
 (let ((?x9147 (* ?x9074 l_0_5_29)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9070 (* ?x9069 l_0_5_37)))
 (let ((?x9144 (* ?x9069 l_0_5_28)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9142 (* ?x9066 l_0_5_9)))
 (let ((?x9067 (* ?x9066 l_0_5_6)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9139 (* ?x8739 l_0_5_8)))
 (let ((?x9064 (* ?x8739 l_0_5_5)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9136 (* ?x8736 l_0_5_7)))
 (let ((?x9062 (* ?x8736 l_0_5_4)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8680 (* ?x8679 l_0_5_94)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8677 (* ?x8625 l_0_5_93)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8675 (* ?x8365 l_0_5_92)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8666 (* ?x8363 l_0_5_91)))
 (let ((?x9129 (* 2.0 l_0_5_10)))
 (let ((?x9130 (* ?x9129 l_0_5_19)))
 (let ((?x9138 (+ (+ (+ (+ (+ (+ (+ ?x9130 ?x8666) ?x8675) ?x8677) ?x8680) ?x9062) ?x9136) ?x9064)))
 (let ((?x9149 (- (+ (- (+ (+ (+ (+ ?x9138 ?x9139) ?x9067) ?x9142) ?x9144) ?x9070) ?x9147) ?x9075)))
 (let ((?x9167 (- (- (- (- (- (- (+ ?x9149 ?x9150) ?x9080) ?x9154) ?x9157) ?x9160) ?x9163) ?x9166)))
 (let ((?x9173 (- (- ?x9167 (* (* 2.0 l_0_5_46) l_0_5_58)) (* (* 2.0 l_0_5_47) l_0_5_59))))
 (let ((?x9183 (- (- (- (- ?x9173 (* (* 2.0 l_0_5_48) l_0_5_60)) ?x9178) ?x9181) ?x8689)))
 (= (- (- (- ?x9183 ?x8692) ?x8695) ?x8698) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8763 (* (* 2.0 l_0_5_78) l_0_5_83)))
 (let ((?x8760 (* (* 2.0 l_0_5_77) l_0_5_82)))
 (let ((?x8757 (* (* 2.0 l_0_5_76) l_0_5_81)))
 (let ((?x8754 (* (* 2.0 l_0_5_75) l_0_5_80)))
 (let ((?x8751 (* (* 2.0 l_0_5_74) l_0_5_79)))
 (let ((?x9279 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x9276 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x9273 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x9270 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x9267 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9264 (* ?x9079 l_0_5_34)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9262 (* ?x9074 l_0_5_33)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9260 (* ?x9069 l_0_5_32)))
 (let ((?x9258 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x9255 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9252 (* ?x9249 l_0_5_6)))
 (let ((?x9250 (* ?x9249 l_0_5_18)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9247 (* ?x8982 l_0_5_5)))
 (let ((?x9245 (* ?x8982 l_0_5_17)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9243 (* ?x8967 l_0_5_4)))
 (let ((?x9241 (* ?x8967 l_0_5_16)))
 (let ((?x8734 (* (* 2.0 l_0_5_104) l_0_5_99)))
 (let ((?x8679 (* 2.0 l_0_5_103)))
 (let ((?x8731 (* ?x8679 l_0_5_98)))
 (let ((?x8625 (* 2.0 l_0_5_102)))
 (let ((?x8729 (* ?x8625 l_0_5_97)))
 (let ((?x8365 (* 2.0 l_0_5_101)))
 (let ((?x8720 (* ?x8365 l_0_5_96)))
 (let ((?x8363 (* 2.0 l_0_5_100)))
 (let ((?x8716 (* ?x8363 l_0_5_95)))
 (let ((?x8966 (+ (+ (+ (+ ?x8716 ?x8720) ?x8729) ?x8731) ?x8734)))
 (let ((?x9256 (+ (- (+ (- (+ (- (+ ?x8966 ?x9241) ?x9243) ?x9245) ?x9247) ?x9250) ?x9252) ?x9255)))
 (let ((?x9274 (- (- (- (+ (+ (+ (+ ?x9256 ?x9258) ?x9260) ?x9262) ?x9264) ?x9267) ?x9270) ?x9273)))
 (let ((?x9285 (- (- (- (- (- (- (- ?x9274 ?x9276) ?x9279) ?x8751) ?x8754) ?x8757) ?x8760) ?x8763)))
 (= ?x9285 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8818 (* l_0_5_84 l_0_5_84)))
 (let ((?x8816 (* l_0_5_83 l_0_5_83)))
 (let ((?x8814 (* l_0_5_82 l_0_5_82)))
 (let ((?x8812 (* l_0_5_81 l_0_5_81)))
 (let ((?x8810 (* l_0_5_80 l_0_5_80)))
 (let ((?x8808 (* l_0_5_79 l_0_5_79)))
 (let ((?x9368 (* l_0_5_42 l_0_5_42)))
 (let ((?x9366 (* l_0_5_41 l_0_5_41)))
 (let ((?x9364 (* l_0_5_40 l_0_5_40)))
 (let ((?x9362 (* l_0_5_39 l_0_5_39)))
 (let ((?x9360 (* l_0_5_38 l_0_5_38)))
 (let ((?x9358 (* l_0_5_37 l_0_5_37)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9080 (* ?x9079 l_0_5_39)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9075 (* ?x9074 l_0_5_38)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9070 (* ?x9069 l_0_5_37)))
 (let ((?x9353 (* l_0_5_21 l_0_5_21)))
 (let ((?x9351 (* l_0_5_20 l_0_5_20)))
 (let ((?x9349 (* l_0_5_19 l_0_5_19)))
 (let ((?x9347 (* l_0_5_18 l_0_5_18)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9067 (* ?x9066 l_0_5_6)))
 (let ((?x9344 (* l_0_5_17 l_0_5_17)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9064 (* ?x8739 l_0_5_5)))
 (let ((?x9341 (* l_0_5_16 l_0_5_16)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9062 (* ?x8736 l_0_5_4)))
 (let ((?x8805 (* l_0_5_105 l_0_5_105)))
 (let ((?x8803 (* l_0_5_104 l_0_5_104)))
 (let ((?x8801 (* l_0_5_103 l_0_5_103)))
 (let ((?x8788 (* l_0_5_102 l_0_5_102)))
 (let ((?x9337 (+ (+ (+ (* l_0_5_100 l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x8788) ?x8801)))
 (let ((?x9346 (- (+ (- (+ (- (+ (+ ?x9337 ?x8803) ?x8805) ?x9062) ?x9341) ?x9064) ?x9344) ?x9067)))
 (let ((?x9357 (+ (+ (+ (+ (+ (+ (+ ?x9346 ?x9347) ?x9349) ?x9351) ?x9353) ?x9070) ?x9075) ?x9080)))
 (let ((?x9370 (- (- (- (- (- (- (- ?x9357 ?x9358) ?x9360) ?x9362) ?x9364) ?x9366) ?x9368) ?x8808)))
 (= (- (- (- (- (- ?x9370 ?x8810) ?x8812) ?x8814) ?x8816) ?x8818) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9425 (* l_0_5_9 l_0_5_9)))
 (let ((?x9423 (* l_0_5_8 l_0_5_8)))
 (let ((?x9421 (* l_0_5_7 l_0_5_7)))
 (let ((?x9407 (* l_0_5_31 l_0_5_31)))
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9163 (* ?x9162 l_0_5_40)))
 (let ((?x9404 (* l_0_5_30 l_0_5_30)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9160 (* ?x9159 l_0_5_39)))
 (let ((?x9401 (* l_0_5_29 l_0_5_29)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9157 (* ?x9156 l_0_5_38)))
 (let ((?x9398 (* l_0_5_28 l_0_5_28)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9154 (* ?x9153 l_0_5_37)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9142 (* ?x9066 l_0_5_9)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9139 (* ?x8739 l_0_5_8)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9136 (* ?x8736 l_0_5_7)))
 (let ((?x6759 (+ (- (* (* 2.0 l_0_5_10) l_0_5_19) (* l_0_5_10 l_0_5_10)) ?x9136)))
 (let ((?x9403 (- (+ (- (+ (- (+ (+ ?x6759 ?x9139) ?x9142) ?x9154) ?x9398) ?x9157) ?x9401) ?x9160)))
 (let ((?x9411 (- (+ (- (+ ?x9403 ?x9404) ?x9163) ?x9407) (* (* 2.0 l_0_5_49) l_0_5_58))))
 (let ((?x9417 (- (- ?x9411 (* (* 2.0 l_0_5_50) l_0_5_59)) (* (* 2.0 l_0_5_51) l_0_5_60))))
 (let ((?x9426 (- (- (- (- ?x9417 (* (* 2.0 l_0_5_52) l_0_5_61)) ?x9421) ?x9423) ?x9425)))
 (= ?x9426 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9279 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x9276 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x9273 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x9270 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x9267 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9481 (* ?x9162 l_0_5_35)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9479 (* ?x9159 l_0_5_34)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9477 (* ?x9156 l_0_5_33)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9475 (* ?x9153 l_0_5_32)))
 (let ((?x9258 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x9255 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9471 (* ?x9249 l_0_5_9)))
 (let ((?x9250 (* ?x9249 l_0_5_18)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9468 (* ?x8982 l_0_5_8)))
 (let ((?x9245 (* ?x8982 l_0_5_17)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9465 (* ?x8967 l_0_5_7)))
 (let ((?x9467 (+ (- (+ (* (* (- 2.0) l_0_5_10) l_0_5_14) (* ?x8967 l_0_5_16)) ?x9465) ?x9245)))
 (let ((?x9478 (+ (+ (+ (+ (- (+ (- ?x9467 ?x9468) ?x9250) ?x9471) ?x9255) ?x9258) ?x9475) ?x9477)))
 (let ((?x9487 (- (- (- (- (- (+ (+ ?x9478 ?x9479) ?x9481) ?x9267) ?x9270) ?x9273) ?x9276) ?x9279)))
 (let ((?x9493 (- (- ?x9487 (* (* 2.0 l_0_5_53) l_0_5_58)) (* (* 2.0 l_0_5_54) l_0_5_59))))
 (let ((?x9499 (- (- ?x9493 (* (* 2.0 l_0_5_55) l_0_5_60)) (* (* 2.0 l_0_5_56) l_0_5_61))))
 (= (- ?x9499 (* (* 2.0 l_0_5_57) l_0_5_62)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x9552 (* l_0_5_63 l_0_5_63)))
 (let ((?x9550 (* l_0_5_62 l_0_5_62)))
 (let ((?x9548 (* l_0_5_61 l_0_5_61)))
 (let ((?x9546 (* l_0_5_60 l_0_5_60)))
 (let ((?x9544 (* l_0_5_59 l_0_5_59)))
 (let ((?x9542 (* l_0_5_58 l_0_5_58)))
 (let ((?x9368 (* l_0_5_42 l_0_5_42)))
 (let ((?x9366 (* l_0_5_41 l_0_5_41)))
 (let ((?x9364 (* l_0_5_40 l_0_5_40)))
 (let ((?x9362 (* l_0_5_39 l_0_5_39)))
 (let ((?x9360 (* l_0_5_38 l_0_5_38)))
 (let ((?x9358 (* l_0_5_37 l_0_5_37)))
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9163 (* ?x9162 l_0_5_40)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9160 (* ?x9159 l_0_5_39)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9157 (* ?x9156 l_0_5_38)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9154 (* ?x9153 l_0_5_37)))
 (let ((?x9353 (* l_0_5_21 l_0_5_21)))
 (let ((?x9351 (* l_0_5_20 l_0_5_20)))
 (let ((?x9349 (* l_0_5_19 l_0_5_19)))
 (let ((?x9347 (* l_0_5_18 l_0_5_18)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9142 (* ?x9066 l_0_5_9)))
 (let ((?x9344 (* l_0_5_17 l_0_5_17)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9139 (* ?x8739 l_0_5_8)))
 (let ((?x9341 (* l_0_5_16 l_0_5_16)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9136 (* ?x8736 l_0_5_7)))
 (let ((?x9526 (+ (- (+ (- (* (* (- 2.0) l_0_5_10) l_0_5_19) ?x9136) ?x9341) ?x9139) ?x9344)))
 (let ((?x9533 (+ (+ (+ (+ (+ (+ (- ?x9526 ?x9142) ?x9347) ?x9349) ?x9351) ?x9353) ?x9154) ?x9157)))
 (let ((?x9540 (- (- (- (- (- (+ (+ ?x9533 ?x9160) ?x9163) ?x9358) ?x9360) ?x9362) ?x9364) ?x9366)))
 (let ((?x9553 (- (- (- (- (- (- (- ?x9540 ?x9368) ?x9542) ?x9544) ?x9546) ?x9548) ?x9550) ?x9552)))
 (= ?x9553 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9557 (* l_0_5_36 l_0_5_36)))
 (let ((?x7018 (* l_0_5_35 l_0_5_35)))
 (let ((?x7019 (* l_0_5_34 l_0_5_34)))
 (let ((?x7020 (* l_0_5_33 l_0_5_33)))
 (let ((?x3373 (* l_0_5_32 l_0_5_32)))
 (let ((?x3781 (* l_0_5_15 l_0_5_15)))
 (let ((?x3785 (* l_0_5_14 l_0_5_14)))
 (let ((?x3787 (* l_0_5_13 l_0_5_13)))
 (let ((?x3784 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3787) ?x3785)))
 (= (+ (+ (+ (+ (+ (- ?x3784 ?x3781) ?x3373) ?x7020) ?x7019) ?x7018) ?x9557) 0.0)))))))))))
(assert
 (let ((?x9279 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x9276 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x9273 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x9270 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x9267 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x9258 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x9255 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9250 (* ?x9249 l_0_5_18)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9245 (* ?x8982 l_0_5_17)))
 (let ((?x9576 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_16) ?x9245) ?x9250) ?x9255) ?x9258)))
 (= (+ (+ (+ (+ (+ ?x9576 ?x9267) ?x9270) ?x9273) ?x9276) ?x9279) 0.0))))))))))))))
(assert
 (let ((?x9368 (* l_0_5_42 l_0_5_42)))
 (let ((?x9366 (* l_0_5_41 l_0_5_41)))
 (let ((?x9364 (* l_0_5_40 l_0_5_40)))
 (let ((?x9362 (* l_0_5_39 l_0_5_39)))
 (let ((?x9360 (* l_0_5_38 l_0_5_38)))
 (let ((?x9358 (* l_0_5_37 l_0_5_37)))
 (let ((?x9353 (* l_0_5_21 l_0_5_21)))
 (let ((?x9351 (* l_0_5_20 l_0_5_20)))
 (let ((?x9349 (* l_0_5_19 l_0_5_19)))
 (let ((?x9347 (* l_0_5_18 l_0_5_18)))
 (let ((?x9600 (- (- (- (* (- l_0_5_16) l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x9347) ?x9349)))
 (let ((?x9607 (+ (+ (+ (+ (+ (- (- ?x9600 ?x9351) ?x9353) ?x9358) ?x9360) ?x9362) ?x9364) ?x9366)))
 (= (+ ?x9607 ?x9368) 0.0))))))))))))))
(assert
 (let ((?x8582 (* l_0_5_22 l_0_5_22)))
 (let ((?x8588 (* l_0_5_1 l_0_5_1)))
 (let ((?x9626 (- ?x8588 ?x8582)))
 (= ?x9626 0.0)))))
(assert
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x8436 (* ?x8435 l_0_5_95)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8429 (* ?x8428 l_0_5_74)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8606 (* ?x8605 l_0_5_23)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x9635 (* ?x5920 l_0_5_2)))
 (= (- (+ (- ?x9635 ?x8606) ?x8429) ?x8436) 0.0))))))))))
(assert
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8628 (* ?x8605 l_0_5_25)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x8618 (* ?x5920 l_0_5_4)))
 (let ((?x7101 (- ?x8618 ?x8628)))
 (= ?x7101 0.0)))))))
(assert
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8682 (* ?x8605 l_0_5_28)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x2089 (* ?x5920 l_0_5_7)))
 (let ((?x4014 (- ?x2089 ?x8682)))
 (= ?x4014 0.0)))))))
(assert
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8742 (* ?x8605 l_0_5_32)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x4050 (* ?x5920 l_0_5_11)))
 (= (- ?x4050 ?x8742) 0.0))))))
(assert
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8630 (* ?x8605 l_0_5_37)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x8617 (* ?x5920 l_0_5_16)))
 (= (- ?x8617 ?x8630) 0.0))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9663 (* ?x9662 l_0_5_97)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9660 (* ?x9659 l_0_5_96)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9657 (* ?x9656 l_0_5_95)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x8436 (* ?x8435 l_0_5_95)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9653 (* ?x8639 l_0_5_76)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9651 (* ?x8636 l_0_5_75)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9649 (* ?x8633 l_0_5_74)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x8429 (* ?x8428 l_0_5_74)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8860 (* ?x8859 l_0_5_5)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8856 (* ?x8747 l_0_5_26)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8853 (* ?x8744 l_0_5_25)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8742 (* ?x8605 l_0_5_32)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8851 (* ?x8850 l_0_5_4)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x4050 (* ?x5920 l_0_5_11)))
 (let ((?x9650 (+ (- (+ (- (- (- (+ ?x4050 ?x8851) ?x8742) ?x8853) ?x8856) ?x8860) ?x8429) ?x9649)))
 (= (- (- (- (+ (+ (+ ?x9650 ?x9651) ?x9653) ?x8436) ?x9657) ?x9660) ?x9663) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9712 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x9709 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x9706 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x9703 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x9700 (* ?x8697 l_0_5_77)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x9698 (* ?x8694 l_0_5_76)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x9696 (* ?x8691 l_0_5_75)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x9694 (* ?x8688 l_0_5_74)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8921 (* ?x8859 l_0_5_8)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8918 (* ?x8747 l_0_5_29)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8915 (* ?x8744 l_0_5_28)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8742 (* ?x8605 l_0_5_32)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8913 (* ?x8850 l_0_5_7)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x4050 (* ?x5920 l_0_5_11)))
 (let ((?x9693 (- (+ (- (- (- (+ ?x4050 ?x8913) ?x8742) ?x8915) ?x8918) ?x8921) (* (* 2.0 l_0_5_43) l_0_5_53))))
 (let ((?x9710 (- (- (- (+ (+ (+ (+ ?x9693 ?x9694) ?x9696) ?x9698) ?x9700) ?x9703) ?x9706) ?x9709)))
 (= (- ?x9710 ?x9712) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9762 (* l_0_5_99 l_0_5_99)))
 (let ((?x9760 (* l_0_5_98 l_0_5_98)))
 (let ((?x9758 (* l_0_5_97 l_0_5_97)))
 (let ((?x9756 (* l_0_5_96 l_0_5_96)))
 (let ((?x9754 (* l_0_5_95 l_0_5_95)))
 (let ((?x9752 (* l_0_5_78 l_0_5_78)))
 (let ((?x9750 (* l_0_5_77 l_0_5_77)))
 (let ((?x9748 (* l_0_5_76 l_0_5_76)))
 (let ((?x9746 (* l_0_5_75 l_0_5_75)))
 (let ((?x9744 (* l_0_5_74 l_0_5_74)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8990 (* ?x8747 l_0_5_33)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8988 (* ?x8744 l_0_5_32)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x8983 (* ?x8982 l_0_5_3)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x8968 (* ?x8967 l_0_5_2)))
 (let ((?x9751 (+ (+ (+ (+ (- (- (+ ?x8968 ?x8983) ?x8988) ?x8990) ?x9744) ?x9746) ?x9748) ?x9750)))
 (= (- (- (- (- (- (+ ?x9751 ?x9752) ?x9754) ?x9756) ?x9758) ?x9760) ?x9762) 0.0)))))))))))))))))))))
(assert
 (let ((?x9088 (* l_0_5_6 l_0_5_6)))
 (let ((?x9086 (* l_0_5_5 l_0_5_5)))
 (let ((?x9084 (* l_0_5_4 l_0_5_4)))
 (let ((?x9082 (* l_0_5_27 l_0_5_27)))
 (let ((?x9783 (+ (- (- (* (- l_0_5_25) l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9082) ?x9084)))
 (let ((?x9785 (+ (+ ?x9783 ?x9086) ?x9088)))
 (= ?x9785 0.0))))))))
(assert
 (let ((?x9181 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9178 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9166 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9150 (* ?x9079 l_0_5_30)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9147 (* ?x9074 l_0_5_29)))
 (let ((?x4351 (* (* (- 2.0) l_0_5_25) l_0_5_28)))
 (= (+ (+ (+ (- (- ?x4351 ?x9147) ?x9150) ?x9166) ?x9178) ?x9181) 0.0))))))))))
(assert
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9264 (* ?x9079 l_0_5_34)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9262 (* ?x9074 l_0_5_33)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9260 (* ?x9069 l_0_5_32)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9252 (* ?x9249 l_0_5_6)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9247 (* ?x8982 l_0_5_5)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9243 (* ?x8967 l_0_5_4)))
 (let ((?x9795 (- (- (- (+ (+ ?x9243 ?x9247) ?x9252) ?x9260) ?x9262) ?x9264)))
 (= ?x9795 0.0)))))))))))))))
(assert
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9080 (* ?x9079 l_0_5_39)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9075 (* ?x9074 l_0_5_38)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9070 (* ?x9069 l_0_5_37)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9067 (* ?x9066 l_0_5_6)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9064 (* ?x8739 l_0_5_5)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9062 (* ?x8736 l_0_5_4)))
 (= (- (- (- (+ (+ ?x9062 ?x9064) ?x9067) ?x9070) ?x9075) ?x9080) 0.0))))))))))))))
(assert
 (let ((?x9425 (* l_0_5_9 l_0_5_9)))
 (let ((?x9423 (* l_0_5_8 l_0_5_8)))
 (let ((?x9421 (* l_0_5_7 l_0_5_7)))
 (let ((?x9407 (* l_0_5_31 l_0_5_31)))
 (let ((?x9404 (* l_0_5_30 l_0_5_30)))
 (let ((?x9401 (* l_0_5_29 l_0_5_29)))
 (let ((?x9811 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_28 l_0_5_28)) ?x9401) ?x9404)))
 (let ((?x9812 (- ?x9811 ?x9407)))
 (= (+ (+ (+ ?x9812 ?x9421) ?x9423) ?x9425) 0.0))))))))))
(assert
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9481 (* ?x9162 l_0_5_35)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9479 (* ?x9159 l_0_5_34)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9477 (* ?x9156 l_0_5_33)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9475 (* ?x9153 l_0_5_32)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9471 (* ?x9249 l_0_5_9)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9468 (* ?x8982 l_0_5_8)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9465 (* ?x8967 l_0_5_7)))
 (let ((?x9129 (* 2.0 l_0_5_10)))
 (let ((?x4530 (* ?x9129 l_0_5_14)))
 (let ((?x9818 (- (- (- (- (+ (+ (+ ?x4530 ?x9465) ?x9468) ?x9471) ?x9475) ?x9477) ?x9479) ?x9481)))
 (= ?x9818 0.0)))))))))))))))))))
(assert
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9163 (* ?x9162 l_0_5_40)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9160 (* ?x9159 l_0_5_39)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9157 (* ?x9156 l_0_5_38)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9154 (* ?x9153 l_0_5_37)))
 (let ((?x9066 (* 2.0 l_0_5_18)))
 (let ((?x9142 (* ?x9066 l_0_5_9)))
 (let ((?x8739 (* 2.0 l_0_5_17)))
 (let ((?x9139 (* ?x8739 l_0_5_8)))
 (let ((?x8736 (* 2.0 l_0_5_16)))
 (let ((?x9136 (* ?x8736 l_0_5_7)))
 (let ((?x9129 (* 2.0 l_0_5_10)))
 (let ((?x9130 (* ?x9129 l_0_5_19)))
 (let ((?x9837 (- (- (- (- (+ (+ (+ ?x9130 ?x9136) ?x9139) ?x9142) ?x9154) ?x9157) ?x9160) ?x9163)))
 (= ?x9837 0.0)))))))))))))))))))
(assert
 (let ((?x9557 (* l_0_5_36 l_0_5_36)))
 (let ((?x7018 (* l_0_5_35 l_0_5_35)))
 (let ((?x7019 (* l_0_5_34 l_0_5_34)))
 (let ((?x7020 (* l_0_5_33 l_0_5_33)))
 (let ((?x3373 (* l_0_5_32 l_0_5_32)))
 (let ((?x3781 (* l_0_5_15 l_0_5_15)))
 (let ((?x3785 (* l_0_5_14 l_0_5_14)))
 (let ((?x3787 (* l_0_5_13 l_0_5_13)))
 (let ((?x9850 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3787) ?x3785)))
 (let ((?x9856 (- (- (- (- (- (+ ?x9850 ?x3781) ?x3373) ?x7020) ?x7019) ?x7018) ?x9557)))
 (= ?x9856 0.0))))))))))))
(assert
 (let ((?x9279 (* (* 2.0 l_0_5_36) l_0_5_41)))
 (let ((?x9276 (* (* 2.0 l_0_5_35) l_0_5_40)))
 (let ((?x9273 (* (* 2.0 l_0_5_34) l_0_5_39)))
 (let ((?x9270 (* (* 2.0 l_0_5_33) l_0_5_38)))
 (let ((?x9267 (* (* 2.0 l_0_5_32) l_0_5_37)))
 (let ((?x9258 (* (* 2.0 l_0_5_15) l_0_5_20)))
 (let ((?x9255 (* (* 2.0 l_0_5_14) l_0_5_19)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9250 (* ?x9249 l_0_5_18)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9245 (* ?x8982 l_0_5_17)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9241 (* ?x8967 l_0_5_16)))
 (let ((?x9867 (- (- (- (+ (+ (+ (+ ?x9241 ?x9245) ?x9250) ?x9255) ?x9258) ?x9267) ?x9270) ?x9273)))
 (= (- (- ?x9867 ?x9276) ?x9279) 0.0))))))))))))))))
(assert
 (let ((?x9368 (* l_0_5_42 l_0_5_42)))
 (let ((?x9366 (* l_0_5_41 l_0_5_41)))
 (let ((?x9364 (* l_0_5_40 l_0_5_40)))
 (let ((?x9362 (* l_0_5_39 l_0_5_39)))
 (let ((?x9360 (* l_0_5_38 l_0_5_38)))
 (let ((?x9358 (* l_0_5_37 l_0_5_37)))
 (let ((?x9353 (* l_0_5_21 l_0_5_21)))
 (let ((?x9351 (* l_0_5_20 l_0_5_20)))
 (let ((?x9349 (* l_0_5_19 l_0_5_19)))
 (let ((?x9347 (* l_0_5_18 l_0_5_18)))
 (let ((?x4828 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x9347) ?x9349)))
 (let ((?x9885 (- (- (- (- (- (+ (+ ?x4828 ?x9351) ?x9353) ?x9358) ?x9360) ?x9362) ?x9364) ?x9366)))
 (= (- ?x9885 ?x9368) 0.0))))))))))))))
(assert
 (let ((?x9902 (* l_0_5_85 l_0_5_85)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9900 (* ?x8435 l_0_5_88)))
 (let ((?x9898 (* l_0_5_64 l_0_5_64)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x7421 (* ?x8428 l_0_5_67)))
 (let ((?x8582 (* l_0_5_22 l_0_5_22)))
 (let ((?x8588 (* l_0_5_1 l_0_5_1)))
 (let ((?x9626 (- ?x8588 ?x8582)))
 (= (+ (- (- (+ ?x9626 ?x7421) ?x9898) ?x9900) ?x9902) 0.0)))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8508 (* ?x8441 l_0_5_89)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8505 (* ?x8438 l_0_5_88)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9900 (* ?x8435 l_0_5_88)))
 (let ((?x9925 (* ?x8435 l_0_5_86)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8502 (* ?x8385 l_0_5_68)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8499 (* ?x8382 l_0_5_67)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x7421 (* ?x8428 l_0_5_67)))
 (let ((?x9920 (* ?x8428 l_0_5_65)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8606 (* ?x8605 l_0_5_23)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x9635 (* ?x5920 l_0_5_2)))
 (let ((?x9922 (- (- (- (- ?x9635 (* (* 2.0 l_0_5_106) l_0_5_109)) ?x8606) ?x9920) ?x7421)))
 (= (- (- (+ (+ (+ (+ ?x9922 ?x8499) ?x8502) ?x9925) ?x9900) ?x8505) ?x8508) 0.0)))))))))))))))))))))
(assert
 (let ((?x9946 (* l_0_5_90 l_0_5_90)))
 (let ((?x9944 (* l_0_5_89 l_0_5_89)))
 (let ((?x9942 (* l_0_5_88 l_0_5_88)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9900 (* ?x8435 l_0_5_88)))
 (let ((?x9939 (* l_0_5_69 l_0_5_69)))
 (let ((?x9937 (* l_0_5_68 l_0_5_68)))
 (let ((?x9935 (* l_0_5_67 l_0_5_67)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x7421 (* ?x8428 l_0_5_67)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8628 (* ?x8605 l_0_5_25)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x8618 (* ?x5920 l_0_5_4)))
 (let ((?x7101 (- ?x8618 ?x8628)))
 (let ((?x9945 (- (- (+ (+ (+ (+ (- ?x7101 ?x7421) ?x9935) ?x9937) ?x9939) ?x9900) ?x9942) ?x9944)))
 (= (- ?x9945 ?x9946) 0.0))))))))))))))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9978 (* ?x9662 l_0_5_93)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9976 (* ?x9659 l_0_5_92)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9974 (* ?x9656 l_0_5_91)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9972 (* ?x8435 l_0_5_91)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9970 (* ?x8639 l_0_5_72)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9968 (* ?x8636 l_0_5_71)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9966 (* ?x8633 l_0_5_70)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x9964 (* ?x8428 l_0_5_70)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8682 (* ?x8605 l_0_5_28)))
 (let ((?x8628 (* ?x8605 l_0_5_25)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x2089 (* ?x5920 l_0_5_7)))
 (let ((?x8618 (* ?x5920 l_0_5_4)))
 (let ((?x9963 (- (- (- (+ ?x8618 ?x2089) ?x8628) ?x8682) (* (* 2.0 l_0_5_43) l_0_5_46))))
 (let ((?x9977 (- (- (+ (+ (+ (+ (- ?x9963 ?x9964) ?x9966) ?x9968) ?x9970) ?x9972) ?x9974) ?x9976)))
 (= (- ?x9977 ?x9978) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8508 (* ?x8441 l_0_5_89)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8505 (* ?x8438 l_0_5_88)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8502 (* ?x8385 l_0_5_68)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8499 (* ?x8382 l_0_5_67)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8860 (* ?x8859 l_0_5_5)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8856 (* ?x8747 l_0_5_26)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8853 (* ?x8744 l_0_5_25)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8851 (* ?x8850 l_0_5_4)))
 (let ((?x10011 (* l_0_5_111 l_0_5_111)))
 (let ((?x10012 (- (- (* (- l_0_5_109) l_0_5_109) (* l_0_5_110 l_0_5_110)) ?x10011)))
 (let ((?x10021 (- (- (- (+ (- (- (+ ?x10012 ?x8851) ?x8853) ?x8856) ?x8860) ?x8499) ?x8502) (* (* 1.0 l_0_5_67) l_0_5_67))))
 (let ((?x10027 (- (- ?x10021 (* (* 1.0 l_0_5_68) l_0_5_68)) (* (* 1.0 l_0_5_69) l_0_5_69))))
 (let ((?x10033 (+ (+ (+ (+ ?x10027 ?x8505) ?x8508) (* 1.0 (* l_0_5_88 l_0_5_88))) (* 1.0 (* l_0_5_89 l_0_5_89)))))
 (= (+ ?x10033 (* 1.0 (* l_0_5_90 l_0_5_90))) 0.0)))))))))))))))))))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9978 (* ?x9662 l_0_5_93)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9976 (* ?x9659 l_0_5_92)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9974 (* ?x9656 l_0_5_91)))
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8544 (* ?x8441 l_0_5_92)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8542 (* ?x8438 l_0_5_91)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9970 (* ?x8639 l_0_5_72)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9968 (* ?x8636 l_0_5_71)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9966 (* ?x8633 l_0_5_70)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8540 (* ?x8385 l_0_5_71)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8538 (* ?x8382 l_0_5_70)))
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8921 (* ?x8859 l_0_5_8)))
 (let ((?x8860 (* ?x8859 l_0_5_5)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8918 (* ?x8747 l_0_5_29)))
 (let ((?x8856 (* ?x8747 l_0_5_26)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8915 (* ?x8744 l_0_5_28)))
 (let ((?x8853 (* ?x8744 l_0_5_25)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8913 (* ?x8850 l_0_5_7)))
 (let ((?x8851 (* ?x8850 l_0_5_4)))
 (let ((?x10061 (- (* (* (- 2.0) l_0_5_109) l_0_5_112) (* (* 2.0 l_0_5_110) l_0_5_113))))
 (let ((?x10066 (- (+ (+ (- ?x10061 (* (* 2.0 l_0_5_111) l_0_5_114)) ?x8851) ?x8913) ?x8853)))
 (let ((?x10073 (- (+ (+ (- (- (- ?x10066 ?x8915) ?x8856) ?x8918) ?x8860) ?x8921) (* (* 2.0 l_0_5_44) l_0_5_46))))
 (let ((?x10078 (- (- (- (- ?x10073 (* (* 2.0 l_0_5_45) l_0_5_47)) ?x8538) ?x8540) ?x9966)))
 (let ((?x10085 (+ (+ (+ (+ (+ (- (- ?x10078 ?x9968) ?x9970) ?x8542) ?x8544) ?x9974) ?x9976) ?x9978)))
 (= ?x10085 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9663 (* ?x9662 l_0_5_97)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9660 (* ?x9659 l_0_5_96)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9657 (* ?x9656 l_0_5_95)))
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8442 (* ?x8441 l_0_5_96)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8439 (* ?x8438 l_0_5_95)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9653 (* ?x8639 l_0_5_76)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9651 (* ?x8636 l_0_5_75)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9649 (* ?x8633 l_0_5_74)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8433 (* ?x8385 l_0_5_75)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8431 (* ?x8382 l_0_5_74)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8990 (* ?x8747 l_0_5_33)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8988 (* ?x8744 l_0_5_32)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x8983 (* ?x8982 l_0_5_3)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x8968 (* ?x8967 l_0_5_2)))
 (let ((?x5095 (- (+ (* (* (- 2.0) l_0_5_109) l_0_5_116) ?x8968) (* (* 2.0 l_0_5_110) l_0_5_117))))
 (let ((?x7596 (- (- (+ (- ?x5095 (* (* 2.0 l_0_5_111) l_0_5_118)) ?x8983) ?x8988) ?x8990)))
 (let ((?x10112 (+ (+ (- (- (- (- (- ?x7596 ?x8431) ?x8433) ?x9649) ?x9651) ?x9653) ?x8439) ?x8442)))
 (= (+ (+ (+ ?x10112 ?x9657) ?x9660) ?x9663) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9946 (* l_0_5_90 l_0_5_90)))
 (let ((?x9944 (* l_0_5_89 l_0_5_89)))
 (let ((?x9942 (* l_0_5_88 l_0_5_88)))
 (let ((?x9939 (* l_0_5_69 l_0_5_69)))
 (let ((?x9937 (* l_0_5_68 l_0_5_68)))
 (let ((?x9935 (* l_0_5_67 l_0_5_67)))
 (let ((?x9088 (* l_0_5_6 l_0_5_6)))
 (let ((?x9086 (* l_0_5_5 l_0_5_5)))
 (let ((?x9084 (* l_0_5_4 l_0_5_4)))
 (let ((?x9082 (* l_0_5_27 l_0_5_27)))
 (let ((?x9783 (+ (- (- (* (- l_0_5_25) l_0_5_25) (* l_0_5_26 l_0_5_26)) ?x9082) ?x9084)))
 (let ((?x9785 (+ (+ ?x9783 ?x9086) ?x9088)))
 (= (+ (+ (+ (- (- (- ?x9785 ?x9935) ?x9937) ?x9939) ?x9942) ?x9944) ?x9946) 0.0))))))))))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9978 (* ?x9662 l_0_5_93)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9976 (* ?x9659 l_0_5_92)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9974 (* ?x9656 l_0_5_91)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9970 (* ?x8639 l_0_5_72)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9968 (* ?x8636 l_0_5_71)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9966 (* ?x8633 l_0_5_70)))
 (let ((?x9088 (* l_0_5_6 l_0_5_6)))
 (let ((?x9181 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9086 (* l_0_5_5 l_0_5_5)))
 (let ((?x9178 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10135 (* l_0_5_48 l_0_5_48)))
 (let ((?x10133 (* l_0_5_47 l_0_5_47)))
 (let ((?x10131 (* l_0_5_46 l_0_5_46)))
 (let ((?x9084 (* l_0_5_4 l_0_5_4)))
 (let ((?x9166 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9082 (* l_0_5_27 l_0_5_27)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9150 (* ?x9079 l_0_5_30)))
 (let ((?x9077 (* l_0_5_26 l_0_5_26)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9147 (* ?x9074 l_0_5_29)))
 (let ((?x5092 (- (- (* (* (- 2.0) l_0_5_25) l_0_5_28) (* l_0_5_25 l_0_5_25)) ?x9147)))
 (let ((?x10134 (- (- (+ (+ (- (- (- ?x5092 ?x9077) ?x9150) ?x9082) ?x9166) ?x9084) ?x10131) ?x10133)))
 (let ((?x10142 (- (- (+ (+ (+ (+ (- ?x10134 ?x10135) ?x9178) ?x9086) ?x9181) ?x9088) ?x9966) ?x9968)))
 (= (+ (+ (+ (- ?x10142 ?x9970) ?x9974) ?x9976) ?x9978) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x9662 (* 2.0 l_0_5_90)))
 (let ((?x9663 (* ?x9662 l_0_5_97)))
 (let ((?x9659 (* 2.0 l_0_5_89)))
 (let ((?x9660 (* ?x9659 l_0_5_96)))
 (let ((?x9656 (* 2.0 l_0_5_88)))
 (let ((?x9657 (* ?x9656 l_0_5_95)))
 (let ((?x8639 (* 2.0 l_0_5_69)))
 (let ((?x9653 (* ?x8639 l_0_5_76)))
 (let ((?x8636 (* 2.0 l_0_5_68)))
 (let ((?x9651 (* ?x8636 l_0_5_75)))
 (let ((?x8633 (* 2.0 l_0_5_67)))
 (let ((?x9649 (* ?x8633 l_0_5_74)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9264 (* ?x9079 l_0_5_34)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9262 (* ?x9074 l_0_5_33)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9260 (* ?x9069 l_0_5_32)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9252 (* ?x9249 l_0_5_6)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9247 (* ?x8982 l_0_5_5)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9243 (* ?x8967 l_0_5_4)))
 (let ((?x9795 (- (- (- (+ (+ ?x9243 ?x9247) ?x9252) ?x9260) ?x9262) ?x9264)))
 (= (+ (+ (+ (- (- (- ?x9795 ?x9649) ?x9651) ?x9653) ?x9657) ?x9660) ?x9663) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10215 (* l_0_5_94 l_0_5_94)))
 (let ((?x10213 (* l_0_5_93 l_0_5_93)))
 (let ((?x10211 (* l_0_5_92 l_0_5_92)))
 (let ((?x10209 (* l_0_5_91 l_0_5_91)))
 (let ((?x9425 (* l_0_5_9 l_0_5_9)))
 (let ((?x9423 (* l_0_5_8 l_0_5_8)))
 (let ((?x10205 (* l_0_5_73 l_0_5_73)))
 (let ((?x10203 (* l_0_5_72 l_0_5_72)))
 (let ((?x10201 (* l_0_5_71 l_0_5_71)))
 (let ((?x10199 (* l_0_5_70 l_0_5_70)))
 (let ((?x9421 (* l_0_5_7 l_0_5_7)))
 (let ((?x9181 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x9178 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x9166 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x9407 (* l_0_5_31 l_0_5_31)))
 (let ((?x9404 (* l_0_5_30 l_0_5_30)))
 (let ((?x9401 (* l_0_5_29 l_0_5_29)))
 (let ((?x9398 (* l_0_5_28 l_0_5_28)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9150 (* ?x9079 l_0_5_30)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9147 (* ?x9074 l_0_5_29)))
 (let ((?x10183 (- (- (* l_0_5_10 l_0_5_10) (* (* 2.0 l_0_5_25) l_0_5_28)) ?x9147)))
 (let ((?x10191 (- (+ (- (- (- (- (- ?x10183 ?x9150) ?x9398) ?x9401) ?x9404) ?x9407) ?x9166) (* (* 2.0 l_0_5_46) l_0_5_49))))
 (let ((?x10195 (- (- ?x10191 (* (* 2.0 l_0_5_47) l_0_5_50)) (* (* 2.0 l_0_5_48) l_0_5_51))))
 (let ((?x10206 (- (- (- (- (+ (+ (+ ?x10195 ?x9178) ?x9181) ?x9421) ?x10199) ?x10201) ?x10203) ?x10205)))
 (= (+ (+ (+ (+ (+ (+ ?x10206 ?x9423) ?x9425) ?x10209) ?x10211) ?x10213) ?x10215) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9712 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x9709 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x9706 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x9703 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x9700 (* ?x8697 l_0_5_77)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x9698 (* ?x8694 l_0_5_76)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x9696 (* ?x8691 l_0_5_75)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x9694 (* ?x8688 l_0_5_74)))
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9481 (* ?x9162 l_0_5_35)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9479 (* ?x9159 l_0_5_34)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9477 (* ?x9156 l_0_5_33)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9475 (* ?x9153 l_0_5_32)))
 (let ((?x9079 (* 2.0 l_0_5_27)))
 (let ((?x9264 (* ?x9079 l_0_5_34)))
 (let ((?x9074 (* 2.0 l_0_5_26)))
 (let ((?x9262 (* ?x9074 l_0_5_33)))
 (let ((?x9069 (* 2.0 l_0_5_25)))
 (let ((?x9260 (* ?x9069 l_0_5_32)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9471 (* ?x9249 l_0_5_9)))
 (let ((?x9252 (* ?x9249 l_0_5_6)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9468 (* ?x8982 l_0_5_8)))
 (let ((?x9247 (* ?x8982 l_0_5_5)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9465 (* ?x8967 l_0_5_7)))
 (let ((?x10255 (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) (* ?x8967 l_0_5_4)) ?x9465) ?x9247)))
 (let ((?x10262 (- (- (- (- (+ (+ (+ ?x10255 ?x9468) ?x9252) ?x9471) ?x9260) ?x9262) ?x9264) ?x9475)))
 (let ((?x10267 (- (- (- (- ?x10262 ?x9477) ?x9479) ?x9481) (* (* 2.0 l_0_5_46) l_0_5_53))))
 (let ((?x10271 (- (- ?x10267 (* (* 2.0 l_0_5_47) l_0_5_54)) (* (* 2.0 l_0_5_48) l_0_5_55))))
 (let ((?x10278 (+ (+ (+ (- (- (- (- ?x10271 ?x9694) ?x9696) ?x9698) ?x9700) ?x9703) ?x9706) ?x9709)))
 (= (+ ?x10278 ?x9712) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9762 (* l_0_5_99 l_0_5_99)))
 (let ((?x9760 (* l_0_5_98 l_0_5_98)))
 (let ((?x9758 (* l_0_5_97 l_0_5_97)))
 (let ((?x9756 (* l_0_5_96 l_0_5_96)))
 (let ((?x9754 (* l_0_5_95 l_0_5_95)))
 (let ((?x9752 (* l_0_5_78 l_0_5_78)))
 (let ((?x9750 (* l_0_5_77 l_0_5_77)))
 (let ((?x9748 (* l_0_5_76 l_0_5_76)))
 (let ((?x9746 (* l_0_5_75 l_0_5_75)))
 (let ((?x9744 (* l_0_5_74 l_0_5_74)))
 (let ((?x9557 (* l_0_5_36 l_0_5_36)))
 (let ((?x7018 (* l_0_5_35 l_0_5_35)))
 (let ((?x7019 (* l_0_5_34 l_0_5_34)))
 (let ((?x7020 (* l_0_5_33 l_0_5_33)))
 (let ((?x3373 (* l_0_5_32 l_0_5_32)))
 (let ((?x3781 (* l_0_5_15 l_0_5_15)))
 (let ((?x3785 (* l_0_5_14 l_0_5_14)))
 (let ((?x3787 (* l_0_5_13 l_0_5_13)))
 (let ((?x9850 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3787) ?x3785)))
 (let ((?x9856 (- (- (- (- (- (+ ?x9850 ?x3781) ?x3373) ?x7020) ?x7019) ?x7018) ?x9557)))
 (let ((?x1003 (+ (+ (- (- (- (- (- ?x9856 ?x9744) ?x9746) ?x9748) ?x9750) ?x9752) ?x9754) ?x9756)))
 (= (+ (+ (+ ?x1003 ?x9758) ?x9760) ?x9762) 0.0)))))))))))))))))))))))
(assert
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9972 (* ?x8435 l_0_5_91)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x9964 (* ?x8428 l_0_5_70)))
 (let ((?x934 (* l_0_5_43 l_0_5_43)))
 (let ((?x8582 (* l_0_5_22 l_0_5_22)))
 (let ((?x8588 (* l_0_5_1 l_0_5_1)))
 (let ((?x9626 (- ?x8588 ?x8582)))
 (= (- (+ (- ?x9626 ?x934) ?x9964) ?x9972) 0.0))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8544 (* ?x8441 l_0_5_92)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8542 (* ?x8438 l_0_5_91)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9972 (* ?x8435 l_0_5_91)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8540 (* ?x8385 l_0_5_71)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8538 (* ?x8382 l_0_5_70)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x9964 (* ?x8428 l_0_5_70)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8606 (* ?x8605 l_0_5_23)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x9635 (* ?x5920 l_0_5_2)))
 (let ((?x10333 (- (- (- ?x9635 (* (* 2.0 l_0_5_106) l_0_5_112)) ?x8606) (* (* 2.0 l_0_5_43) l_0_5_44))))
 (= (- (- (+ (+ (+ (- ?x10333 ?x9964) ?x8538) ?x8540) ?x9972) ?x8542) ?x8544) 0.0)))))))))))))))))))
(assert
 (let ((?x10215 (* l_0_5_94 l_0_5_94)))
 (let ((?x10213 (* l_0_5_93 l_0_5_93)))
 (let ((?x10211 (* l_0_5_92 l_0_5_92)))
 (let ((?x10209 (* l_0_5_91 l_0_5_91)))
 (let ((?x10205 (* l_0_5_73 l_0_5_73)))
 (let ((?x10203 (* l_0_5_72 l_0_5_72)))
 (let ((?x10201 (* l_0_5_71 l_0_5_71)))
 (let ((?x10199 (* l_0_5_70 l_0_5_70)))
 (let ((?x8605 (* 2.0 l_0_5_22)))
 (let ((?x8682 (* ?x8605 l_0_5_28)))
 (let ((?x5920 (* 2.0 l_0_5_1)))
 (let ((?x2089 (* ?x5920 l_0_5_7)))
 (let ((?x4014 (- ?x2089 ?x8682)))
 (let ((?x10362 (+ (+ (+ (- ?x4014 (* (* 2.0 l_0_5_43) l_0_5_49)) ?x10199) ?x10201) ?x10203)))
 (= (- (- (- (- (+ ?x10362 ?x10205) ?x10209) ?x10211) ?x10213) ?x10215) 0.0))))))))))))))))
(assert
 (let ((?x8859 (* 2.0 l_0_5_3)))
 (let ((?x8921 (* ?x8859 l_0_5_8)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8918 (* ?x8747 l_0_5_29)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8915 (* ?x8744 l_0_5_28)))
 (let ((?x8850 (* 2.0 l_0_5_2)))
 (let ((?x8913 (* ?x8850 l_0_5_7)))
 (let ((?x7805 (* l_0_5_115 l_0_5_115)))
 (let ((?x7804 (* l_0_5_114 l_0_5_114)))
 (let ((?x5260 (- (- (* (- l_0_5_112) l_0_5_112) (* l_0_5_113 l_0_5_113)) ?x7804)))
 (let ((?x7795 (- (+ (- (- (+ (- ?x5260 ?x7805) ?x8913) ?x8915) ?x8918) ?x8921) (* (* 2.0 l_0_5_44) l_0_5_49))))
 (let ((?x10375 (- (- ?x7795 (* (* 2.0 l_0_5_45) l_0_5_50)) (* (* 1.0 l_0_5_70) l_0_5_70))))
 (let ((?x10381 (- (- ?x10375 (* (* 1.0 l_0_5_71) l_0_5_71)) (* (* 1.0 l_0_5_72) l_0_5_72))))
 (let ((?x10386 (+ (- ?x10381 (* (* 1.0 l_0_5_73) l_0_5_73)) (* 1.0 (* l_0_5_91 l_0_5_91)))))
 (let ((?x10390 (+ (+ ?x10386 (* 1.0 (* l_0_5_92 l_0_5_92))) (* 1.0 (* l_0_5_93 l_0_5_93)))))
 (= (+ ?x10390 (* 1.0 (* l_0_5_94 l_0_5_94))) 0.0))))))))))))))))))
(assert
 (let ((?x9712 (* (* 2.0 l_0_5_94) l_0_5_98)))
 (let ((?x9709 (* (* 2.0 l_0_5_93) l_0_5_97)))
 (let ((?x9706 (* (* 2.0 l_0_5_92) l_0_5_96)))
 (let ((?x9703 (* (* 2.0 l_0_5_91) l_0_5_95)))
 (let ((?x8697 (* 2.0 l_0_5_73)))
 (let ((?x9700 (* ?x8697 l_0_5_77)))
 (let ((?x8694 (* 2.0 l_0_5_72)))
 (let ((?x9698 (* ?x8694 l_0_5_76)))
 (let ((?x8691 (* 2.0 l_0_5_71)))
 (let ((?x9696 (* ?x8691 l_0_5_75)))
 (let ((?x8688 (* 2.0 l_0_5_70)))
 (let ((?x9694 (* ?x8688 l_0_5_74)))
 (let ((?x8747 (* 2.0 l_0_5_24)))
 (let ((?x8990 (* ?x8747 l_0_5_33)))
 (let ((?x8744 (* 2.0 l_0_5_23)))
 (let ((?x8988 (* ?x8744 l_0_5_32)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x8983 (* ?x8982 l_0_5_3)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x8968 (* ?x8967 l_0_5_2)))
 (let ((?x10413 (- (- ?x8968 (* (* 2.0 l_0_5_112) l_0_5_116)) (* (* 2.0 l_0_5_113) l_0_5_117))))
 (let ((?x10417 (- (- ?x10413 (* (* 2.0 l_0_5_114) l_0_5_118)) (* (* 2.0 l_0_5_115) l_0_5_119))))
 (let ((?x10422 (- (- (- (+ ?x10417 ?x8983) ?x8988) ?x8990) (* (* 2.0 l_0_5_44) l_0_5_53))))
 (let ((?x10427 (- (- (- (- ?x10422 (* (* 2.0 l_0_5_45) l_0_5_54)) ?x9694) ?x9696) ?x9698)))
 (= (+ (+ (+ (+ (- ?x10427 ?x9700) ?x9703) ?x9706) ?x9709) ?x9712) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9425 (* l_0_5_9 l_0_5_9)))
 (let ((?x9423 (* l_0_5_8 l_0_5_8)))
 (let ((?x9421 (* l_0_5_7 l_0_5_7)))
 (let ((?x10461 (* l_0_5_52 l_0_5_52)))
 (let ((?x10459 (* l_0_5_51 l_0_5_51)))
 (let ((?x10457 (* l_0_5_50 l_0_5_50)))
 (let ((?x10455 (* l_0_5_49 l_0_5_49)))
 (let ((?x9407 (* l_0_5_31 l_0_5_31)))
 (let ((?x9404 (* l_0_5_30 l_0_5_30)))
 (let ((?x9401 (* l_0_5_29 l_0_5_29)))
 (let ((?x9811 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_28 l_0_5_28)) ?x9401) ?x9404)))
 (let ((?x9812 (- ?x9811 ?x9407)))
 (let ((?x10465 (+ (+ (+ (- (- (- (- ?x9812 ?x10455) ?x10457) ?x10459) ?x10461) ?x9421) ?x9423) ?x9425)))
 (= ?x10465 0.0)))))))))))))))
(assert
 (let ((?x9162 (* 2.0 l_0_5_31)))
 (let ((?x9481 (* ?x9162 l_0_5_35)))
 (let ((?x9159 (* 2.0 l_0_5_30)))
 (let ((?x9479 (* ?x9159 l_0_5_34)))
 (let ((?x9156 (* 2.0 l_0_5_29)))
 (let ((?x9477 (* ?x9156 l_0_5_33)))
 (let ((?x9153 (* 2.0 l_0_5_28)))
 (let ((?x9475 (* ?x9153 l_0_5_32)))
 (let ((?x9249 (* 2.0 l_0_5_13)))
 (let ((?x9471 (* ?x9249 l_0_5_9)))
 (let ((?x8982 (* 2.0 l_0_5_12)))
 (let ((?x9468 (* ?x8982 l_0_5_8)))
 (let ((?x8967 (* 2.0 l_0_5_11)))
 (let ((?x9465 (* ?x8967 l_0_5_7)))
 (let ((?x9129 (* 2.0 l_0_5_10)))
 (let ((?x4530 (* ?x9129 l_0_5_14)))
 (let ((?x9818 (- (- (- (- (+ (+ (+ ?x4530 ?x9465) ?x9468) ?x9471) ?x9475) ?x9477) ?x9479) ?x9481)))
 (let ((?x10484 (- (- ?x9818 (* (* 2.0 l_0_5_49) l_0_5_53)) (* (* 2.0 l_0_5_50) l_0_5_54))))
 (let ((?x10488 (- (- ?x10484 (* (* 2.0 l_0_5_51) l_0_5_55)) (* (* 2.0 l_0_5_52) l_0_5_56))))
 (= ?x10488 0.0)))))))))))))))))))))
(assert
 (let ((?x10510 (* l_0_5_57 l_0_5_57)))
 (let ((?x10508 (* l_0_5_56 l_0_5_56)))
 (let ((?x10506 (* l_0_5_55 l_0_5_55)))
 (let ((?x10504 (* l_0_5_54 l_0_5_54)))
 (let ((?x10502 (* l_0_5_53 l_0_5_53)))
 (let ((?x9557 (* l_0_5_36 l_0_5_36)))
 (let ((?x7018 (* l_0_5_35 l_0_5_35)))
 (let ((?x7019 (* l_0_5_34 l_0_5_34)))
 (let ((?x7020 (* l_0_5_33 l_0_5_33)))
 (let ((?x3373 (* l_0_5_32 l_0_5_32)))
 (let ((?x3781 (* l_0_5_15 l_0_5_15)))
 (let ((?x3785 (* l_0_5_14 l_0_5_14)))
 (let ((?x3787 (* l_0_5_13 l_0_5_13)))
 (let ((?x9850 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3787) ?x3785)))
 (let ((?x9856 (- (- (- (- (- (+ ?x9850 ?x3781) ?x3373) ?x7020) ?x7019) ?x7018) ?x9557)))
 (= (- (- (- (- (- ?x9856 ?x10502) ?x10504) ?x10506) ?x10508) ?x10510) 0.0)))))))))))))))))
(assert
 (= (- (* l_0_5_64 l_0_5_64) (* l_0_5_85 l_0_5_85)) 0.0))
(assert
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9925 (* ?x8435 l_0_5_86)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x9920 (* ?x8428 l_0_5_65)))
 (let ((?x10527 (- (+ (* (- l_0_5_106) l_0_5_106) ?x9920) (* (* 1.0 l_0_5_64) l_0_5_64))))
 (= (+ (- ?x10527 ?x9925) (* 1.0 (* l_0_5_85 l_0_5_85))) 0.0)))))))
(assert
 (let ((?x8471 (* l_0_5_87 l_0_5_87)))
 (let ((?x8468 (* l_0_5_86 l_0_5_86)))
 (let ((?x8435 (* 2.0 l_0_5_85)))
 (let ((?x9925 (* ?x8435 l_0_5_86)))
 (let ((?x8485 (* l_0_5_66 l_0_5_66)))
 (let ((?x8481 (* l_0_5_65 l_0_5_65)))
 (let ((?x8428 (* 2.0 l_0_5_64)))
 (let ((?x9920 (* ?x8428 l_0_5_65)))
 (let ((?x10541 (+ (+ (+ (- (* (* (- 2.0) l_0_5_106) l_0_5_107) ?x9920) ?x8481) ?x8485) ?x9925)))
 (= (- (- ?x10541 ?x8468) ?x8471) 0.0)))))))))))
(assert
 (let ((?x8441 (* 2.0 l_0_5_87)))
 (let ((?x8442 (* ?x8441 l_0_5_96)))
 (let ((?x8438 (* 2.0 l_0_5_86)))
 (let ((?x8439 (* ?x8438 l_0_5_95)))
 (let ((?x8385 (* 2.0 l_0_5_66)))
 (let ((?x8433 (* ?x8385 l_0_5_75)))
 (let ((?x8382 (* 2.0 l_0_5_65)))
 (let ((?x8431 (* ?x8382 l_0_5_74)))
 (let ((?x10557 (- (* (* (- 2.0) l_0_5_107) l_0_5_116) (* (* 2.0 l_0_5_108) l_0_5_117))))
 (= (+ (+ (- (- ?x10557 ?x8431) ?x8433) ?x8439) ?x8442) 0.0)))))))))))
(assert
 (let ((?x10578 (* l_0_5_120 l_0_5_120)))
 (let ((?x10576 (* l_0_5_119 l_0_5_119)))
 (let ((?x10574 (* l_0_5_118 l_0_5_118)))
 (let ((?x10575 (- (- (* (- l_0_5_116) l_0_5_116) (* l_0_5_117 l_0_5_117)) ?x10574)))
 (let ((?x10585 (- (- (- (- ?x10575 ?x10576) ?x10578) (* (* 1.0 l_0_5_74) l_0_5_74)) (* (* 1.0 l_0_5_75) l_0_5_75))))
 (let ((?x10591 (- (- ?x10585 (* (* 1.0 l_0_5_76) l_0_5_76)) (* (* 1.0 l_0_5_77) l_0_5_77))))
 (let ((?x10596 (+ (- ?x10591 (* (* 1.0 l_0_5_78) l_0_5_78)) (* 1.0 (* l_0_5_95 l_0_5_95)))))
 (let ((?x10600 (+ (+ ?x10596 (* 1.0 (* l_0_5_96 l_0_5_96))) (* 1.0 (* l_0_5_97 l_0_5_97)))))
 (let ((?x10604 (+ (+ ?x10600 (* 1.0 (* l_0_5_98 l_0_5_98))) (* 1.0 (* l_0_5_99 l_0_5_99)))))
 (= ?x10604 0.0)))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_22 0.0))
(assert
 (>= l_0_5_24 0.0))
(assert
 (>= l_0_5_27 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_42 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_52 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_64 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_69 0.0))
(assert
 (>= l_0_5_73 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_106 0.0))
(assert
 (>= l_0_5_108 0.0))
(assert
 (>= l_0_5_111 0.0))
(assert
 (>= l_0_5_115 0.0))
(assert
 (>= l_0_5_120 0.0))
(assert
 (>= l_0_5_126 0.0))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10678 (* ?x10677 l_0_6_96)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10675 (* ?x10674 l_0_6_95)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x10672 (* ?x10671 l_0_6_95)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10669 (* ?x10668 l_0_6_75)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10666 (* ?x10665 l_0_6_74)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10663 (* ?x10662 l_0_6_74)))
 (let ((?x10660 (* l_0_6_3 l_0_6_3)))
 (let ((?x10658 (* l_0_6_24 l_0_6_24)))
 (let ((?x10656 (* l_0_6_23 l_0_6_23)))
 (let ((?x10654 (* l_0_6_2 l_0_6_2)))
 (let ((?x10653 (- (* (* (- 2.0) l_0_6_106) l_0_6_116) (* (* 2.0 l_0_6_127) l_0_6_137))))
 (let ((?x10670 (+ (+ (- (+ (- (- (+ ?x10653 ?x10654) ?x10656) ?x10658) ?x10660) ?x10663) ?x10666) ?x10669)))
 (= (+ (- (- (+ ?x10670 ?x10672) ?x10675) ?x10678) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x10728 (* l_0_6_129 l_0_6_129)))
 (let ((?x10726 (* l_0_6_128 l_0_6_128)))
 (let ((?x10727 (- (- (- _a_1_ (* l_0_6_107 l_0_6_107)) (* l_0_6_108 l_0_6_108)) ?x10726)))
 (let ((?x10735 (- (- (- ?x10727 ?x10728) (* (* 1.0 l_0_6_65) l_0_6_65)) (* (* 1.0 l_0_6_66) l_0_6_66))))
 (let ((?x10741 (+ (+ ?x10735 (* 1.0 (* l_0_6_86 l_0_6_86))) (* 1.0 (* l_0_6_87 l_0_6_87)))))
 (= (- ?x10741 1.0) 0.0)))))))
(assert
 (let ((?x10739 (* l_0_6_87 l_0_6_87)))
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10785 (* ?x10677 l_0_6_89)))
 (let ((?x10736 (* l_0_6_86 l_0_6_86)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10782 (* ?x10674 l_0_6_88)))
 (let ((?x1142 (* l_0_6_66 l_0_6_66)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10779 (* ?x10668 l_0_6_68)))
 (let ((?x1137 (* l_0_6_65 l_0_6_65)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10776 (* ?x10665 l_0_6_67)))
 (let ((?x10660 (* l_0_6_3 l_0_6_3)))
 (let ((?x10658 (* l_0_6_24 l_0_6_24)))
 (let ((?x10656 (* l_0_6_23 l_0_6_23)))
 (let ((?x10654 (* l_0_6_2 l_0_6_2)))
 (let ((?x10765 (- (- _a_2_ (* (* 2.0 l_0_6_107) l_0_6_109)) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x10771 (- (- ?x10765 (* (* 2.0 l_0_6_128) l_0_6_130)) (* (* 2.0 l_0_6_129) l_0_6_131))))
 (let ((?x10780 (- (- (- (+ (- (- (+ ?x10771 ?x10654) ?x10656) ?x10658) ?x10660) ?x10776) ?x1137) ?x10779)))
 (= (+ (+ (+ (+ (- ?x10780 ?x1142) ?x10782) ?x10736) ?x10785) ?x10739) 0.0)))))))))))))))))))))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10812 (* ?x10677 l_0_6_92)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10810 (* ?x10674 l_0_6_91)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10808 (* ?x10668 l_0_6_71)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10806 (* ?x10665 l_0_6_70)))
 (let ((?x10804 (* l_0_6_45 l_0_6_45)))
 (let ((?x10802 (* l_0_6_44 l_0_6_44)))
 (let ((?x10660 (* l_0_6_3 l_0_6_3)))
 (let ((?x10658 (* l_0_6_24 l_0_6_24)))
 (let ((?x10656 (* l_0_6_23 l_0_6_23)))
 (let ((?x10654 (* l_0_6_2 l_0_6_2)))
 (let ((?x1141 (- (* (* (- 2.0) l_0_6_107) l_0_6_112) (* (* 2.0 l_0_6_108) l_0_6_113))))
 (let ((?x5476 (- (- ?x1141 (* (* 2.0 l_0_6_128) l_0_6_133)) (* (* 2.0 l_0_6_129) l_0_6_134))))
 (let ((?x10807 (- (- (- (+ (- (- (+ ?x5476 ?x10654) ?x10656) ?x10658) ?x10660) ?x10802) ?x10804) ?x10806)))
 (= (+ (+ (+ (- ?x10807 ?x10808) ?x10810) ?x10812) 1.0) 0.0)))))))))))))))))))
(assert
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10873 (* ?x10668 l_0_6_80)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10871 (* ?x10665 l_0_6_79)))
 (let ((?x10660 (* l_0_6_3 l_0_6_3)))
 (let ((?x10658 (* l_0_6_24 l_0_6_24)))
 (let ((?x10656 (* l_0_6_23 l_0_6_23)))
 (let ((?x10654 (* l_0_6_2 l_0_6_2)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10857 (* ?x10851 l_0_6_87)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x10850 (* ?x8134 l_0_6_86)))
 (let ((?x10862 (- (- (+ ?x10850 ?x10857) (* (* 2.0 l_0_6_107) l_0_6_121)) (* (* 2.0 l_0_6_108) l_0_6_122))))
 (let ((?x10866 (- (- ?x10862 (* (* 2.0 l_0_6_128) l_0_6_142)) (* (* 2.0 l_0_6_129) l_0_6_143))))
 (let ((?x10875 (- (- (- (- (+ (+ (- ?x10866 ?x10654) ?x10656) ?x10658) ?x10660) ?x10871) ?x10873) 1.0)))
 (= ?x10875 0.0)))))))))))))))))
(assert
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10912 (* ?x10662 l_0_6_79)))
 (let ((?x10910 (* l_0_6_22 l_0_6_22)))
 (let ((?x10911 (+ (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_100) l_0_6_85)) ?x10910)))
 (= (+ ?x10911 ?x10912) 0.0))))))
(assert
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10873 (* ?x10668 l_0_6_80)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10871 (* ?x10665 l_0_6_79)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10912 (* ?x10662 l_0_6_79)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10922 (* ?x10921 l_0_6_23)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10857 (* ?x10851 l_0_6_87)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x10850 (* ?x8134 l_0_6_86)))
 (let ((?x8135 (- (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) (* ?x8134 l_0_6_85)) ?x10850) ?x10857)))
 (let ((?x8151 (- (- ?x8135 (* (* 2.0 l_0_6_106) l_0_6_121)) (* (* 2.0 l_0_6_127) l_0_6_142))))
 (= (+ (+ (- (+ ?x8151 ?x10922) ?x10912) ?x10871) ?x10873) 0.0))))))))))))))))
(assert
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x10969 (* ?x10968 l_0_6_81)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x10966 (* ?x10965 l_0_6_80)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x10963 (* ?x10962 l_0_6_79)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10912 (* ?x10662 l_0_6_79)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10959 (* ?x10921 l_0_6_37)))
 (let ((?x10957 (* ?x10921 l_0_6_25)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10955 (* ?x10954 l_0_6_90)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10952 (* ?x10851 l_0_6_89)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x10950 (* ?x8134 l_0_6_88)))
 (let ((?x10908 (* ?x8134 l_0_6_85)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x10947 (* ?x10945 l_0_6_4)))
 (let ((?x10946 (* ?x10945 l_0_6_16)))
 (let ((?x10960 (- (+ (- (- (- (+ (- ?x10946 ?x10947) ?x10908) ?x10950) ?x10952) ?x10955) ?x10957) ?x10959)))
 (= (+ (+ (+ (- ?x10960 ?x10912) ?x10963) ?x10966) ?x10969) 0.0))))))))))))))))))))))))
(assert
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x11020 (* ?x11019 l_0_6_82)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x11017 (* ?x11016 l_0_6_81)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x11014 (* ?x11013 l_0_6_80)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x11011 (* ?x11010 l_0_6_79)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10959 (* ?x10921 l_0_6_37)))
 (let ((?x11004 (* ?x10921 l_0_6_28)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11002 (* ?x11001 l_0_6_94)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10999 (* ?x10954 l_0_6_93)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10997 (* ?x10851 l_0_6_92)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x5581 (* ?x8134 l_0_6_91)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x1559 (* ?x10945 l_0_6_7)))
 (let ((?x10946 (* ?x10945 l_0_6_16)))
 (let ((?x11006 (- (+ (- (- (- (- (- ?x10946 ?x1559) ?x5581) ?x10997) ?x10999) ?x11002) ?x11004) ?x10959)))
 (let ((?x11018 (+ (+ (+ (- ?x11006 (* (* 2.0 l_0_6_43) l_0_6_58)) ?x11011) ?x11014) ?x11017)))
 (= (+ ?x11018 ?x11020) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x11081 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11078 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11075 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11072 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11069 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11066 (* ?x11065 l_0_6_38)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11063 (* ?x11062 l_0_6_37)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11060 (* ?x10921 l_0_6_32)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11058 (* ?x11057 l_0_6_3)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11055 (* ?x11054 l_0_6_2)))
 (let ((?x11052 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11049 (* ?x11001 l_0_6_98)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x11047 (* ?x10954 l_0_6_97)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x11045 (* ?x10851 l_0_6_96)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x11043 (* ?x8134 l_0_6_95)))
 (let ((?x11050 (- (- (- (- (* (* (- 2.0) l_0_6_1) l_0_6_11) ?x11043) ?x11045) ?x11047) ?x11049)))
 (let ((?x11070 (+ (- (- (+ (+ (+ (- ?x11050 ?x11052) ?x11055) ?x11058) ?x11060) ?x11063) ?x11066) ?x11069)))
 (= (+ (+ (+ (+ ?x11070 ?x11072) ?x11075) ?x11078) ?x11081) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11150 (* l_0_6_84 l_0_6_84)))
 (let ((?x11148 (* l_0_6_83 l_0_6_83)))
 (let ((?x11146 (* l_0_6_82 l_0_6_82)))
 (let ((?x11144 (* l_0_6_81 l_0_6_81)))
 (let ((?x11142 (* l_0_6_80 l_0_6_80)))
 (let ((?x11140 (* l_0_6_79 l_0_6_79)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10959 (* ?x10921 l_0_6_37)))
 (let ((?x11137 (* l_0_6_105 l_0_6_105)))
 (let ((?x11135 (* l_0_6_104 l_0_6_104)))
 (let ((?x11133 (* l_0_6_103 l_0_6_103)))
 (let ((?x11120 (* l_0_6_102 l_0_6_102)))
 (let ((?x11117 (* l_0_6_101 l_0_6_101)))
 (let ((?x11119 (- (- (* (* (- 2.0) l_0_6_1) l_0_6_16) (* l_0_6_100 l_0_6_100)) ?x11117)))
 (let ((?x11143 (+ (+ (+ (- (- (- (- ?x11119 ?x11120) ?x11133) ?x11135) ?x11137) ?x10959) ?x11140) ?x11142)))
 (= (+ (+ (+ (+ ?x11143 ?x11144) ?x11146) ?x11148) ?x11150) 0.0)))))))))))))))))
(assert
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x10969 (* ?x10968 l_0_6_81)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x10966 (* ?x10965 l_0_6_80)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x10963 (* ?x10962 l_0_6_79)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10873 (* ?x10668 l_0_6_80)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10871 (* ?x10665 l_0_6_79)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11207 (* ?x11206 l_0_6_5)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11066 (* ?x11065 l_0_6_38)))
 (let ((?x11203 (* ?x11065 l_0_6_26)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11063 (* ?x11062 l_0_6_37)))
 (let ((?x11200 (* ?x11062 l_0_6_25)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11198 (* ?x11197 l_0_6_4)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11058 (* ?x11057 l_0_6_3)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11055 (* ?x11054 l_0_6_2)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10955 (* ?x10954 l_0_6_90)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10952 (* ?x10851 l_0_6_89)))
 (let ((?x10857 (* ?x10851 l_0_6_87)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x10950 (* ?x8134 l_0_6_88)))
 (let ((?x10850 (* ?x8134 l_0_6_86)))
 (let ((?x11179 (- (+ (+ (+ (+ ?x10850 ?x10950) ?x10857) ?x10952) ?x10955) (* (* 2.0 l_0_6_109) l_0_6_121))))
 (let ((?x11185 (- (- ?x11179 (* (* 2.0 l_0_6_110) l_0_6_122)) (* (* 2.0 l_0_6_111) l_0_6_123))))
 (let ((?x11191 (- (- ?x11185 (* (* 2.0 l_0_6_130) l_0_6_142)) (* (* 2.0 l_0_6_131) l_0_6_143))))
 (let ((?x11199 (- (+ (+ (- ?x11191 (* (* 2.0 l_0_6_132) l_0_6_144)) ?x11055) ?x11058) ?x11198)))
 (let ((?x11210 (- (- (- (- (+ (- (+ ?x11199 ?x11200) ?x11063) ?x11203) ?x11066) ?x11207) ?x10871) ?x10873)))
 (= (- (- (- ?x11210 ?x10963) ?x10966) ?x10969) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x11020 (* ?x11019 l_0_6_82)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x11017 (* ?x11016 l_0_6_81)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x11014 (* ?x11013 l_0_6_80)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x11011 (* ?x11010 l_0_6_79)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11266 (* ?x11206 l_0_6_8)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11066 (* ?x11065 l_0_6_38)))
 (let ((?x11263 (* ?x11065 l_0_6_29)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11063 (* ?x11062 l_0_6_37)))
 (let ((?x11260 (* ?x11062 l_0_6_28)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11258 (* ?x11197 l_0_6_7)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11058 (* ?x11057 l_0_6_3)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11055 (* ?x11054 l_0_6_2)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11002 (* ?x11001 l_0_6_94)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10999 (* ?x10954 l_0_6_93)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10997 (* ?x10851 l_0_6_92)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x5581 (* ?x8134 l_0_6_91)))
 (let ((?x11234 (- (+ (+ (+ ?x5581 ?x10997) ?x10999) ?x11002) (* (* 2.0 l_0_6_112) l_0_6_121))))
 (let ((?x11240 (- (- ?x11234 (* (* 2.0 l_0_6_113) l_0_6_122)) (* (* 2.0 l_0_6_114) l_0_6_123))))
 (let ((?x11246 (- (- ?x11240 (* (* 2.0 l_0_6_115) l_0_6_124)) (* (* 2.0 l_0_6_133) l_0_6_142))))
 (let ((?x11252 (- (- ?x11246 (* (* 2.0 l_0_6_134) l_0_6_143)) (* (* 2.0 l_0_6_135) l_0_6_144))))
 (let ((?x11259 (- (+ (+ (- ?x11252 (* (* 2.0 l_0_6_136) l_0_6_145)) ?x11055) ?x11058) ?x11258)))
 (let ((?x11270 (- (- (- (+ (- (+ ?x11259 ?x11260) ?x11063) ?x11263) ?x11066) ?x11266) (* (* 2.0 l_0_6_44) l_0_6_58))))
 (let ((?x11276 (- (- (- (- ?x11270 (* (* 2.0 l_0_6_45) l_0_6_59)) ?x11011) ?x11014) ?x11017)))
 (= (- ?x11276 ?x11020) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11081 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11078 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11075 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11072 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11069 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11352 (* ?x11065 l_0_6_33)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11350 (* ?x11062 l_0_6_32)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11330 (* ?x11329 l_0_6_3)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11315 (* ?x11314 l_0_6_2)))
 (let ((?x11052 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11049 (* ?x11001 l_0_6_98)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x11047 (* ?x10954 l_0_6_97)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x11045 (* ?x10851 l_0_6_96)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x11043 (* ?x8134 l_0_6_95)))
 (let ((?x11313 (+ (+ (+ (+ ?x11043 ?x11045) ?x11047) ?x11049) ?x11052)))
 (let ((?x11322 (- (- (- ?x11313 ?x11315) (* (* 2.0 l_0_6_116) l_0_6_121)) (* (* 2.0 l_0_6_117) l_0_6_122))))
 (let ((?x11328 (- (- ?x11322 (* (* 2.0 l_0_6_118) l_0_6_123)) (* (* 2.0 l_0_6_119) l_0_6_124))))
 (let ((?x11337 (- (- (- ?x11328 ?x11330) (* (* 2.0 l_0_6_120) l_0_6_125)) (* (* 2.0 l_0_6_137) l_0_6_142))))
 (let ((?x11343 (- (- ?x11337 (* (* 2.0 l_0_6_138) l_0_6_143)) (* (* 2.0 l_0_6_139) l_0_6_144))))
 (let ((?x11349 (- (- ?x11343 (* (* 2.0 l_0_6_140) l_0_6_145)) (* (* 2.0 l_0_6_141) l_0_6_146))))
 (let ((?x11358 (- (- (- (- (- (+ (+ ?x11349 ?x11350) ?x11352) ?x11069) ?x11072) ?x11075) ?x11078) ?x11081)))
 (= ?x11358 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11066 (* ?x11065 l_0_6_38)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11063 (* ?x11062 l_0_6_37)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11058 (* ?x11057 l_0_6_3)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11055 (* ?x11054 l_0_6_2)))
 (let ((?x11408 (* l_0_6_147 l_0_6_147)))
 (let ((?x11406 (* l_0_6_146 l_0_6_146)))
 (let ((?x11404 (* l_0_6_145 l_0_6_145)))
 (let ((?x11402 (* l_0_6_144 l_0_6_144)))
 (let ((?x11400 (* l_0_6_143 l_0_6_143)))
 (let ((?x11398 (* l_0_6_142 l_0_6_142)))
 (let ((?x11396 (* l_0_6_126 l_0_6_126)))
 (let ((?x11394 (* l_0_6_125 l_0_6_125)))
 (let ((?x11392 (* l_0_6_124 l_0_6_124)))
 (let ((?x11390 (* l_0_6_123 l_0_6_123)))
 (let ((?x11388 (* l_0_6_122 l_0_6_122)))
 (let ((?x11386 (* l_0_6_121 l_0_6_121)))
 (let ((?x8889 (+ (* 1.0 (* l_0_6_100 l_0_6_100)) (* 1.0 (* l_0_6_101 l_0_6_101)))))
 (let ((?x8880 (+ (+ ?x8889 (* 1.0 (* l_0_6_102 l_0_6_102))) (* 1.0 (* l_0_6_103 l_0_6_103)))))
 (let ((?x11385 (+ (+ ?x8880 (* 1.0 (* l_0_6_104 l_0_6_104))) (* 1.0 (* l_0_6_105 l_0_6_105)))))
 (let ((?x11399 (- (- (- (- (- (- (- ?x11385 ?x11386) ?x11388) ?x11390) ?x11392) ?x11394) ?x11396) ?x11398)))
 (let ((?x11411 (- (- (- (- (- (- (- ?x11399 ?x11400) ?x11402) ?x11404) ?x11406) ?x11408) ?x11055) ?x11058)))
 (let ((?x11419 (- (- (+ (+ ?x11411 ?x11063) ?x11066) (* (* 1.0 l_0_6_79) l_0_6_79)) (* (* 1.0 l_0_6_80) l_0_6_80))))
 (let ((?x11425 (- (- ?x11419 (* (* 1.0 l_0_6_81) l_0_6_81)) (* (* 1.0 l_0_6_82) l_0_6_82))))
 (let ((?x11431 (- (- ?x11425 (* (* 1.0 l_0_6_83) l_0_6_83)) (* (* 1.0 l_0_6_84) l_0_6_84))))
 (= ?x11431 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x10969 (* ?x10968 l_0_6_81)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x10966 (* ?x10965 l_0_6_80)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x10963 (* ?x10962 l_0_6_79)))
 (let ((?x11462 (* l_0_6_6 l_0_6_6)))
 (let ((?x11460 (* l_0_6_5 l_0_6_5)))
 (let ((?x11458 (* l_0_6_4 l_0_6_4)))
 (let ((?x11456 (* l_0_6_27 l_0_6_27)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11454 (* ?x11453 l_0_6_39)))
 (let ((?x11451 (* l_0_6_26 l_0_6_26)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11449 (* ?x11448 l_0_6_38)))
 (let ((?x11446 (* l_0_6_25 l_0_6_25)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11444 (* ?x11443 l_0_6_37)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11441 (* ?x11440 l_0_6_6)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11438 (* ?x11057 l_0_6_5)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x8958 (* ?x11054 l_0_6_4)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10955 (* ?x10954 l_0_6_90)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10952 (* ?x10851 l_0_6_89)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x10950 (* ?x8134 l_0_6_88)))
 (let ((?x11447 (+ (- (+ (+ (+ (+ (+ ?x10950 ?x10952) ?x10955) ?x8958) ?x11438) ?x11441) ?x11444) ?x11446)))
 (let ((?x11463 (- (- (- (+ (- (+ (- ?x11447 ?x11449) ?x11451) ?x11454) ?x11456) ?x11458) ?x11460) ?x11462)))
 (= (- (- (- ?x11463 ?x10963) ?x10966) ?x10969) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x11020 (* ?x11019 l_0_6_82)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x11017 (* ?x11016 l_0_6_81)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x11014 (* ?x11013 l_0_6_80)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x11011 (* ?x11010 l_0_6_79)))
 (let ((?x11556 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11553 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11541 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11538 (* ?x11537 l_0_6_40)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11535 (* ?x11534 l_0_6_39)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11532 (* ?x11531 l_0_6_38)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11529 (* ?x11528 l_0_6_37)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11454 (* ?x11453 l_0_6_39)))
 (let ((?x11525 (* ?x11453 l_0_6_30)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11449 (* ?x11448 l_0_6_38)))
 (let ((?x11522 (* ?x11448 l_0_6_29)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11444 (* ?x11443 l_0_6_37)))
 (let ((?x11519 (* ?x11443 l_0_6_28)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11517 (* ?x11440 l_0_6_9)))
 (let ((?x11441 (* ?x11440 l_0_6_6)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11514 (* ?x11057 l_0_6_8)))
 (let ((?x11438 (* ?x11057 l_0_6_5)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11511 (* ?x11054 l_0_6_7)))
 (let ((?x8958 (* ?x11054 l_0_6_4)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11002 (* ?x11001 l_0_6_94)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x10999 (* ?x10954 l_0_6_93)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x10997 (* ?x10851 l_0_6_92)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x5581 (* ?x8134 l_0_6_91)))
 (let ((?x11504 (* 2.0 l_0_6_10)))
 (let ((?x11505 (* ?x11504 l_0_6_19)))
 (let ((?x11513 (+ (+ (+ (+ (+ (+ (+ ?x11505 ?x5581) ?x10997) ?x10999) ?x11002) ?x8958) ?x11511) ?x11438)))
 (let ((?x11524 (- (+ (- (+ (+ (+ (+ ?x11513 ?x11514) ?x11441) ?x11517) ?x11519) ?x11444) ?x11522) ?x11449)))
 (let ((?x11542 (- (- (- (- (- (- (+ ?x11524 ?x11525) ?x11454) ?x11529) ?x11532) ?x11535) ?x11538) ?x11541)))
 (let ((?x11548 (- (- ?x11542 (* (* 2.0 l_0_6_46) l_0_6_58)) (* (* 2.0 l_0_6_47) l_0_6_59))))
 (let ((?x11558 (- (- (- (- ?x11548 (* (* 2.0 l_0_6_48) l_0_6_60)) ?x11553) ?x11556) ?x11011)))
 (= (- (- (- ?x11558 ?x11014) ?x11017) ?x11020) 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11081 (* (* 2.0 l_0_6_78) l_0_6_83)))
 (let ((?x11078 (* (* 2.0 l_0_6_77) l_0_6_82)))
 (let ((?x11075 (* (* 2.0 l_0_6_76) l_0_6_81)))
 (let ((?x11072 (* (* 2.0 l_0_6_75) l_0_6_80)))
 (let ((?x11069 (* (* 2.0 l_0_6_74) l_0_6_79)))
 (let ((?x11649 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11646 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11643 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11640 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11637 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11634 (* ?x11453 l_0_6_34)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11632 (* ?x11448 l_0_6_33)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11630 (* ?x11443 l_0_6_32)))
 (let ((?x11628 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11625 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11622 (* ?x11619 l_0_6_6)))
 (let ((?x11620 (* ?x11619 l_0_6_18)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11617 (* ?x11329 l_0_6_5)))
 (let ((?x11615 (* ?x11329 l_0_6_17)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11613 (* ?x11314 l_0_6_4)))
 (let ((?x11611 (* ?x11314 l_0_6_16)))
 (let ((?x11052 (* (* 2.0 l_0_6_104) l_0_6_99)))
 (let ((?x11001 (* 2.0 l_0_6_103)))
 (let ((?x11049 (* ?x11001 l_0_6_98)))
 (let ((?x10954 (* 2.0 l_0_6_102)))
 (let ((?x11047 (* ?x10954 l_0_6_97)))
 (let ((?x10851 (* 2.0 l_0_6_101)))
 (let ((?x11045 (* ?x10851 l_0_6_96)))
 (let ((?x8134 (* 2.0 l_0_6_100)))
 (let ((?x11043 (* ?x8134 l_0_6_95)))
 (let ((?x11313 (+ (+ (+ (+ ?x11043 ?x11045) ?x11047) ?x11049) ?x11052)))
 (let ((?x11626 (+ (- (+ (- (+ (- (+ ?x11313 ?x11611) ?x11613) ?x11615) ?x11617) ?x11620) ?x11622) ?x11625)))
 (let ((?x11644 (- (- (- (+ (+ (+ (+ ?x11626 ?x11628) ?x11630) ?x11632) ?x11634) ?x11637) ?x11640) ?x11643)))
 (let ((?x11655 (- (- (- (- (- (- (- ?x11644 ?x11646) ?x11649) ?x11069) ?x11072) ?x11075) ?x11078) ?x11081)))
 (= ?x11655 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11150 (* l_0_6_84 l_0_6_84)))
 (let ((?x11148 (* l_0_6_83 l_0_6_83)))
 (let ((?x11146 (* l_0_6_82 l_0_6_82)))
 (let ((?x11144 (* l_0_6_81 l_0_6_81)))
 (let ((?x11142 (* l_0_6_80 l_0_6_80)))
 (let ((?x11140 (* l_0_6_79 l_0_6_79)))
 (let ((?x11732 (* l_0_6_42 l_0_6_42)))
 (let ((?x11730 (* l_0_6_41 l_0_6_41)))
 (let ((?x11728 (* l_0_6_40 l_0_6_40)))
 (let ((?x11726 (* l_0_6_39 l_0_6_39)))
 (let ((?x11724 (* l_0_6_38 l_0_6_38)))
 (let ((?x11722 (* l_0_6_37 l_0_6_37)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11454 (* ?x11453 l_0_6_39)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11449 (* ?x11448 l_0_6_38)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11444 (* ?x11443 l_0_6_37)))
 (let ((?x11717 (* l_0_6_21 l_0_6_21)))
 (let ((?x11715 (* l_0_6_20 l_0_6_20)))
 (let ((?x11713 (* l_0_6_19 l_0_6_19)))
 (let ((?x11711 (* l_0_6_18 l_0_6_18)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11441 (* ?x11440 l_0_6_6)))
 (let ((?x11708 (* l_0_6_17 l_0_6_17)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11438 (* ?x11057 l_0_6_5)))
 (let ((?x11705 (* l_0_6_16 l_0_6_16)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x8958 (* ?x11054 l_0_6_4)))
 (let ((?x11137 (* l_0_6_105 l_0_6_105)))
 (let ((?x11135 (* l_0_6_104 l_0_6_104)))
 (let ((?x11133 (* l_0_6_103 l_0_6_103)))
 (let ((?x11120 (* l_0_6_102 l_0_6_102)))
 (let ((?x11701 (+ (+ (+ (* l_0_6_100 l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x11120) ?x11133)))
 (let ((?x11710 (- (+ (- (+ (- (+ (+ ?x11701 ?x11135) ?x11137) ?x8958) ?x11705) ?x11438) ?x11708) ?x11441)))
 (let ((?x11721 (+ (+ (+ (+ (+ (+ (+ ?x11710 ?x11711) ?x11713) ?x11715) ?x11717) ?x11444) ?x11449) ?x11454)))
 (let ((?x11734 (- (- (- (- (- (- (- ?x11721 ?x11722) ?x11724) ?x11726) ?x11728) ?x11730) ?x11732) ?x11140)))
 (= (- (- (- (- (- ?x11734 ?x11142) ?x11144) ?x11146) ?x11148) ?x11150) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11802 (* l_0_6_9 l_0_6_9)))
 (let ((?x11800 (* l_0_6_8 l_0_6_8)))
 (let ((?x11798 (* l_0_6_7 l_0_6_7)))
 (let ((?x11784 (* l_0_6_31 l_0_6_31)))
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11538 (* ?x11537 l_0_6_40)))
 (let ((?x11781 (* l_0_6_30 l_0_6_30)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11535 (* ?x11534 l_0_6_39)))
 (let ((?x11778 (* l_0_6_29 l_0_6_29)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11532 (* ?x11531 l_0_6_38)))
 (let ((?x11775 (* l_0_6_28 l_0_6_28)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11529 (* ?x11528 l_0_6_37)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11517 (* ?x11440 l_0_6_9)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11514 (* ?x11057 l_0_6_8)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11511 (* ?x11054 l_0_6_7)))
 (let ((?x11771 (+ (- (* (* 2.0 l_0_6_10) l_0_6_19) (* l_0_6_10 l_0_6_10)) ?x11511)))
 (let ((?x11780 (- (+ (- (+ (- (+ (+ ?x11771 ?x11514) ?x11517) ?x11529) ?x11775) ?x11532) ?x11778) ?x11535)))
 (let ((?x11788 (- (+ (- (+ ?x11780 ?x11781) ?x11538) ?x11784) (* (* 2.0 l_0_6_49) l_0_6_58))))
 (let ((?x11794 (- (- ?x11788 (* (* 2.0 l_0_6_50) l_0_6_59)) (* (* 2.0 l_0_6_51) l_0_6_60))))
 (let ((?x11803 (- (- (- (- ?x11794 (* (* 2.0 l_0_6_52) l_0_6_61)) ?x11798) ?x11800) ?x11802)))
 (= ?x11803 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11649 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11646 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11643 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11640 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11637 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11841 (* ?x11537 l_0_6_35)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11839 (* ?x11534 l_0_6_34)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11837 (* ?x11531 l_0_6_33)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11835 (* ?x11528 l_0_6_32)))
 (let ((?x11628 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11625 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11831 (* ?x11619 l_0_6_9)))
 (let ((?x11620 (* ?x11619 l_0_6_18)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11828 (* ?x11329 l_0_6_8)))
 (let ((?x11615 (* ?x11329 l_0_6_17)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11825 (* ?x11314 l_0_6_7)))
 (let ((?x11827 (+ (- (+ (* (* (- 2.0) l_0_6_10) l_0_6_14) (* ?x11314 l_0_6_16)) ?x11825) ?x11615)))
 (let ((?x11838 (+ (+ (+ (+ (- (+ (- ?x11827 ?x11828) ?x11620) ?x11831) ?x11625) ?x11628) ?x11835) ?x11837)))
 (let ((?x11847 (- (- (- (- (- (+ (+ ?x11838 ?x11839) ?x11841) ?x11637) ?x11640) ?x11643) ?x11646) ?x11649)))
 (let ((?x11853 (- (- ?x11847 (* (* 2.0 l_0_6_53) l_0_6_58)) (* (* 2.0 l_0_6_54) l_0_6_59))))
 (let ((?x11859 (- (- ?x11853 (* (* 2.0 l_0_6_55) l_0_6_60)) (* (* 2.0 l_0_6_56) l_0_6_61))))
 (= (- ?x11859 (* (* 2.0 l_0_6_57) l_0_6_62)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11916 (* l_0_6_63 l_0_6_63)))
 (let ((?x11914 (* l_0_6_62 l_0_6_62)))
 (let ((?x11912 (* l_0_6_61 l_0_6_61)))
 (let ((?x11910 (* l_0_6_60 l_0_6_60)))
 (let ((?x11908 (* l_0_6_59 l_0_6_59)))
 (let ((?x11906 (* l_0_6_58 l_0_6_58)))
 (let ((?x11732 (* l_0_6_42 l_0_6_42)))
 (let ((?x11730 (* l_0_6_41 l_0_6_41)))
 (let ((?x11728 (* l_0_6_40 l_0_6_40)))
 (let ((?x11726 (* l_0_6_39 l_0_6_39)))
 (let ((?x11724 (* l_0_6_38 l_0_6_38)))
 (let ((?x11722 (* l_0_6_37 l_0_6_37)))
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11538 (* ?x11537 l_0_6_40)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11535 (* ?x11534 l_0_6_39)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11532 (* ?x11531 l_0_6_38)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11529 (* ?x11528 l_0_6_37)))
 (let ((?x11717 (* l_0_6_21 l_0_6_21)))
 (let ((?x11715 (* l_0_6_20 l_0_6_20)))
 (let ((?x11713 (* l_0_6_19 l_0_6_19)))
 (let ((?x11711 (* l_0_6_18 l_0_6_18)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11517 (* ?x11440 l_0_6_9)))
 (let ((?x11708 (* l_0_6_17 l_0_6_17)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11514 (* ?x11057 l_0_6_8)))
 (let ((?x11705 (* l_0_6_16 l_0_6_16)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11511 (* ?x11054 l_0_6_7)))
 (let ((?x11890 (+ (- (+ (- (* (* (- 2.0) l_0_6_10) l_0_6_19) ?x11511) ?x11705) ?x11514) ?x11708)))
 (let ((?x11897 (+ (+ (+ (+ (+ (+ (- ?x11890 ?x11517) ?x11711) ?x11713) ?x11715) ?x11717) ?x11529) ?x11532)))
 (let ((?x11904 (- (- (- (- (- (+ (+ ?x11897 ?x11535) ?x11538) ?x11722) ?x11724) ?x11726) ?x11728) ?x11730)))
 (let ((?x11917 (- (- (- (- (- (- (- ?x11904 ?x11732) ?x11906) ?x11908) ?x11910) ?x11912) ?x11914) ?x11916)))
 (= ?x11917 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11927 (* l_0_6_36 l_0_6_36)))
 (let ((?x11925 (* l_0_6_35 l_0_6_35)))
 (let ((?x3513 (* l_0_6_34 l_0_6_34)))
 (let ((?x6768 (* l_0_6_33 l_0_6_33)))
 (let ((?x6765 (* l_0_6_32 l_0_6_32)))
 (let ((?x3519 (* l_0_6_15 l_0_6_15)))
 (let ((?x3477 (* l_0_6_14 l_0_6_14)))
 (let ((?x6791 (* l_0_6_13 l_0_6_13)))
 (let ((?x9431 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x6791) ?x3477)))
 (= (+ (+ (+ (+ (+ (- ?x9431 ?x3519) ?x6765) ?x6768) ?x3513) ?x11925) ?x11927) 0.0)))))))))))
(assert
 (let ((?x11649 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11646 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11643 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11640 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11637 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11628 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11625 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11620 (* ?x11619 l_0_6_18)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11615 (* ?x11329 l_0_6_17)))
 (let ((?x11947 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_16) ?x11615) ?x11620) ?x11625) ?x11628)))
 (= (+ (+ (+ (+ (+ ?x11947 ?x11637) ?x11640) ?x11643) ?x11646) ?x11649) 0.0))))))))))))))
(assert
 (let ((?x11732 (* l_0_6_42 l_0_6_42)))
 (let ((?x11730 (* l_0_6_41 l_0_6_41)))
 (let ((?x11728 (* l_0_6_40 l_0_6_40)))
 (let ((?x11726 (* l_0_6_39 l_0_6_39)))
 (let ((?x11724 (* l_0_6_38 l_0_6_38)))
 (let ((?x11722 (* l_0_6_37 l_0_6_37)))
 (let ((?x11717 (* l_0_6_21 l_0_6_21)))
 (let ((?x11715 (* l_0_6_20 l_0_6_20)))
 (let ((?x11713 (* l_0_6_19 l_0_6_19)))
 (let ((?x11711 (* l_0_6_18 l_0_6_18)))
 (let ((?x11969 (- (- (- (* (- l_0_6_16) l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x11711) ?x11713)))
 (let ((?x11976 (+ (+ (+ (+ (+ (- (- ?x11969 ?x11715) ?x11717) ?x11722) ?x11724) ?x11726) ?x11728) ?x11730)))
 (= (+ ?x11976 ?x11732) 0.0))))))))))))))
(assert
 (let ((?x10910 (* l_0_6_22 l_0_6_22)))
 (let ((?x10916 (* l_0_6_1 l_0_6_1)))
 (let ((?x11995 (- ?x10916 ?x10910)))
 (= ?x11995 0.0)))))
(assert
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x10672 (* ?x10671 l_0_6_95)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10663 (* ?x10662 l_0_6_74)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10922 (* ?x10921 l_0_6_23)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x12004 (* ?x10945 l_0_6_2)))
 (= (- (+ (- ?x12004 ?x10922) ?x10663) ?x10672) 0.0))))))))))
(assert
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10957 (* ?x10921 l_0_6_25)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x10947 (* ?x10945 l_0_6_4)))
 (let ((?x9520 (- ?x10947 ?x10957)))
 (= ?x9520 0.0)))))))
(assert
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11004 (* ?x10921 l_0_6_28)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x1559 (* ?x10945 l_0_6_7)))
 (let ((?x6965 (- ?x1559 ?x11004)))
 (= ?x6965 0.0)))))))
(assert
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11060 (* ?x10921 l_0_6_32)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x6958 (* ?x10945 l_0_6_11)))
 (= (- ?x6958 ?x11060) 0.0))))))
(assert
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10959 (* ?x10921 l_0_6_37)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x10946 (* ?x10945 l_0_6_16)))
 (= (- ?x10946 ?x10959) 0.0))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12046 (* ?x12045 l_0_6_97)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12043 (* ?x12042 l_0_6_96)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12040 (* ?x12039 l_0_6_95)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x10672 (* ?x10671 l_0_6_95)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12036 (* ?x10968 l_0_6_76)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12034 (* ?x10965 l_0_6_75)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12032 (* ?x10962 l_0_6_74)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x10663 (* ?x10662 l_0_6_74)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11207 (* ?x11206 l_0_6_5)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11203 (* ?x11065 l_0_6_26)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11200 (* ?x11062 l_0_6_25)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11060 (* ?x10921 l_0_6_32)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11198 (* ?x11197 l_0_6_4)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x6958 (* ?x10945 l_0_6_11)))
 (let ((?x12033 (+ (- (+ (- (- (- (+ ?x6958 ?x11198) ?x11060) ?x11200) ?x11203) ?x11207) ?x10663) ?x12032)))
 (= (- (- (- (+ (+ (+ ?x12033 ?x12034) ?x12036) ?x10672) ?x12040) ?x12043) ?x12046) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x12090 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x12087 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x12084 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x12081 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x12078 (* ?x11019 l_0_6_77)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x12076 (* ?x11016 l_0_6_76)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x12074 (* ?x11013 l_0_6_75)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x12072 (* ?x11010 l_0_6_74)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11266 (* ?x11206 l_0_6_8)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11263 (* ?x11065 l_0_6_29)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11260 (* ?x11062 l_0_6_28)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11060 (* ?x10921 l_0_6_32)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11258 (* ?x11197 l_0_6_7)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x6958 (* ?x10945 l_0_6_11)))
 (let ((?x12071 (- (+ (- (- (- (+ ?x6958 ?x11258) ?x11060) ?x11260) ?x11263) ?x11266) (* (* 2.0 l_0_6_43) l_0_6_53))))
 (let ((?x12088 (- (- (- (+ (+ (+ (+ ?x12071 ?x12072) ?x12074) ?x12076) ?x12078) ?x12081) ?x12084) ?x12087)))
 (= (- ?x12088 ?x12090) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x12131 (* l_0_6_99 l_0_6_99)))
 (let ((?x12129 (* l_0_6_98 l_0_6_98)))
 (let ((?x12127 (* l_0_6_97 l_0_6_97)))
 (let ((?x12125 (* l_0_6_96 l_0_6_96)))
 (let ((?x12123 (* l_0_6_95 l_0_6_95)))
 (let ((?x12121 (* l_0_6_78 l_0_6_78)))
 (let ((?x12119 (* l_0_6_77 l_0_6_77)))
 (let ((?x12117 (* l_0_6_76 l_0_6_76)))
 (let ((?x12115 (* l_0_6_75 l_0_6_75)))
 (let ((?x12113 (* l_0_6_74 l_0_6_74)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11352 (* ?x11065 l_0_6_33)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11350 (* ?x11062 l_0_6_32)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11330 (* ?x11329 l_0_6_3)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11315 (* ?x11314 l_0_6_2)))
 (let ((?x12120 (+ (+ (+ (+ (- (- (+ ?x11315 ?x11330) ?x11350) ?x11352) ?x12113) ?x12115) ?x12117) ?x12119)))
 (= (- (- (- (- (- (+ ?x12120 ?x12121) ?x12123) ?x12125) ?x12127) ?x12129) ?x12131) 0.0)))))))))))))))))))))
(assert
 (let ((?x11462 (* l_0_6_6 l_0_6_6)))
 (let ((?x11460 (* l_0_6_5 l_0_6_5)))
 (let ((?x11458 (* l_0_6_4 l_0_6_4)))
 (let ((?x11456 (* l_0_6_27 l_0_6_27)))
 (let ((?x12146 (+ (- (- (* (- l_0_6_25) l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x11456) ?x11458)))
 (let ((?x12148 (+ (+ ?x12146 ?x11460) ?x11462)))
 (= ?x12148 0.0))))))))
(assert
 (let ((?x11556 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11553 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11541 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11525 (* ?x11453 l_0_6_30)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11522 (* ?x11448 l_0_6_29)))
 (let ((?x8450 (* (* (- 2.0) l_0_6_25) l_0_6_28)))
 (= (+ (+ (+ (- (- ?x8450 ?x11522) ?x11525) ?x11541) ?x11553) ?x11556) 0.0))))))))))
(assert
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11634 (* ?x11453 l_0_6_34)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11632 (* ?x11448 l_0_6_33)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11630 (* ?x11443 l_0_6_32)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11622 (* ?x11619 l_0_6_6)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11617 (* ?x11329 l_0_6_5)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11613 (* ?x11314 l_0_6_4)))
 (let ((?x9681 (- (- (- (+ (+ ?x11613 ?x11617) ?x11622) ?x11630) ?x11632) ?x11634)))
 (= ?x9681 0.0)))))))))))))))
(assert
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11454 (* ?x11453 l_0_6_39)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11449 (* ?x11448 l_0_6_38)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11444 (* ?x11443 l_0_6_37)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11441 (* ?x11440 l_0_6_6)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11438 (* ?x11057 l_0_6_5)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x8958 (* ?x11054 l_0_6_4)))
 (= (- (- (- (+ (+ ?x8958 ?x11438) ?x11441) ?x11444) ?x11449) ?x11454) 0.0))))))))))))))
(assert
 (let ((?x11802 (* l_0_6_9 l_0_6_9)))
 (let ((?x11800 (* l_0_6_8 l_0_6_8)))
 (let ((?x11798 (* l_0_6_7 l_0_6_7)))
 (let ((?x11784 (* l_0_6_31 l_0_6_31)))
 (let ((?x11781 (* l_0_6_30 l_0_6_30)))
 (let ((?x11778 (* l_0_6_29 l_0_6_29)))
 (let ((?x12166 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_28 l_0_6_28)) ?x11778) ?x11781)))
 (let ((?x12167 (- ?x12166 ?x11784)))
 (= (+ (+ (+ ?x12167 ?x11798) ?x11800) ?x11802) 0.0))))))))))
(assert
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11841 (* ?x11537 l_0_6_35)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11839 (* ?x11534 l_0_6_34)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11837 (* ?x11531 l_0_6_33)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11835 (* ?x11528 l_0_6_32)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11831 (* ?x11619 l_0_6_9)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11828 (* ?x11329 l_0_6_8)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11825 (* ?x11314 l_0_6_7)))
 (let ((?x11504 (* 2.0 l_0_6_10)))
 (let ((?x4327 (* ?x11504 l_0_6_14)))
 (let ((?x12174 (- (- (- (- (+ (+ (+ ?x4327 ?x11825) ?x11828) ?x11831) ?x11835) ?x11837) ?x11839) ?x11841)))
 (= ?x12174 0.0)))))))))))))))))))
(assert
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11538 (* ?x11537 l_0_6_40)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11535 (* ?x11534 l_0_6_39)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11532 (* ?x11531 l_0_6_38)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11529 (* ?x11528 l_0_6_37)))
 (let ((?x11440 (* 2.0 l_0_6_18)))
 (let ((?x11517 (* ?x11440 l_0_6_9)))
 (let ((?x11057 (* 2.0 l_0_6_17)))
 (let ((?x11514 (* ?x11057 l_0_6_8)))
 (let ((?x11054 (* 2.0 l_0_6_16)))
 (let ((?x11511 (* ?x11054 l_0_6_7)))
 (let ((?x11504 (* 2.0 l_0_6_10)))
 (let ((?x11505 (* ?x11504 l_0_6_19)))
 (let ((?x12192 (- (- (- (- (+ (+ (+ ?x11505 ?x11511) ?x11514) ?x11517) ?x11529) ?x11532) ?x11535) ?x11538)))
 (= ?x12192 0.0)))))))))))))))))))
(assert
 (let ((?x11927 (* l_0_6_36 l_0_6_36)))
 (let ((?x11925 (* l_0_6_35 l_0_6_35)))
 (let ((?x3513 (* l_0_6_34 l_0_6_34)))
 (let ((?x6768 (* l_0_6_33 l_0_6_33)))
 (let ((?x6765 (* l_0_6_32 l_0_6_32)))
 (let ((?x3519 (* l_0_6_15 l_0_6_15)))
 (let ((?x3477 (* l_0_6_14 l_0_6_14)))
 (let ((?x6791 (* l_0_6_13 l_0_6_13)))
 (let ((?x12205 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x6791) ?x3477)))
 (let ((?x12211 (- (- (- (- (- (+ ?x12205 ?x3519) ?x6765) ?x6768) ?x3513) ?x11925) ?x11927)))
 (= ?x12211 0.0))))))))))))
(assert
 (let ((?x11649 (* (* 2.0 l_0_6_36) l_0_6_41)))
 (let ((?x11646 (* (* 2.0 l_0_6_35) l_0_6_40)))
 (let ((?x11643 (* (* 2.0 l_0_6_34) l_0_6_39)))
 (let ((?x11640 (* (* 2.0 l_0_6_33) l_0_6_38)))
 (let ((?x11637 (* (* 2.0 l_0_6_32) l_0_6_37)))
 (let ((?x11628 (* (* 2.0 l_0_6_15) l_0_6_20)))
 (let ((?x11625 (* (* 2.0 l_0_6_14) l_0_6_19)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11620 (* ?x11619 l_0_6_18)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11615 (* ?x11329 l_0_6_17)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11611 (* ?x11314 l_0_6_16)))
 (let ((?x9878 (- (- (- (+ (+ (+ (+ ?x11611 ?x11615) ?x11620) ?x11625) ?x11628) ?x11637) ?x11640) ?x11643)))
 (= (- (- ?x9878 ?x11646) ?x11649) 0.0))))))))))))))))
(assert
 (let ((?x11732 (* l_0_6_42 l_0_6_42)))
 (let ((?x11730 (* l_0_6_41 l_0_6_41)))
 (let ((?x11728 (* l_0_6_40 l_0_6_40)))
 (let ((?x11726 (* l_0_6_39 l_0_6_39)))
 (let ((?x11724 (* l_0_6_38 l_0_6_38)))
 (let ((?x11722 (* l_0_6_37 l_0_6_37)))
 (let ((?x11717 (* l_0_6_21 l_0_6_21)))
 (let ((?x11715 (* l_0_6_20 l_0_6_20)))
 (let ((?x11713 (* l_0_6_19 l_0_6_19)))
 (let ((?x11711 (* l_0_6_18 l_0_6_18)))
 (let ((?x12221 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x11711) ?x11713)))
 (let ((?x12228 (- (- (- (- (- (+ (+ ?x12221 ?x11715) ?x11717) ?x11722) ?x11724) ?x11726) ?x11728) ?x11730)))
 (= (- ?x12228 ?x11732) 0.0))))))))))))))
(assert
 (let ((?x12243 (* l_0_6_85 l_0_6_85)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12241 (* ?x10671 l_0_6_88)))
 (let ((?x12239 (* l_0_6_64 l_0_6_64)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x9907 (* ?x10662 l_0_6_67)))
 (let ((?x10910 (* l_0_6_22 l_0_6_22)))
 (let ((?x10916 (* l_0_6_1 l_0_6_1)))
 (let ((?x11995 (- ?x10916 ?x10910)))
 (= (+ (- (- (+ ?x11995 ?x9907) ?x12239) ?x12241) ?x12243) 0.0)))))))))))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10785 (* ?x10677 l_0_6_89)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10782 (* ?x10674 l_0_6_88)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12241 (* ?x10671 l_0_6_88)))
 (let ((?x12268 (* ?x10671 l_0_6_86)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10779 (* ?x10668 l_0_6_68)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10776 (* ?x10665 l_0_6_67)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x9907 (* ?x10662 l_0_6_67)))
 (let ((?x12263 (* ?x10662 l_0_6_65)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10922 (* ?x10921 l_0_6_23)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x12004 (* ?x10945 l_0_6_2)))
 (let ((?x12261 (- (- ?x12004 (* (* 2.0 l_0_6_106) l_0_6_109)) (* (* 2.0 l_0_6_127) l_0_6_130))))
 (let ((?x12270 (+ (+ (+ (+ (- (- (- ?x12261 ?x10922) ?x12263) ?x9907) ?x10776) ?x10779) ?x12268) ?x12241)))
 (= (- (- ?x12270 ?x10782) ?x10785) 0.0))))))))))))))))))))))
(assert
 (let ((?x12293 (* l_0_6_90 l_0_6_90)))
 (let ((?x12291 (* l_0_6_89 l_0_6_89)))
 (let ((?x12289 (* l_0_6_88 l_0_6_88)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12241 (* ?x10671 l_0_6_88)))
 (let ((?x12286 (* l_0_6_69 l_0_6_69)))
 (let ((?x12284 (* l_0_6_68 l_0_6_68)))
 (let ((?x7482 (* l_0_6_67 l_0_6_67)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x9907 (* ?x10662 l_0_6_67)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10957 (* ?x10921 l_0_6_25)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x10947 (* ?x10945 l_0_6_4)))
 (let ((?x9520 (- ?x10947 ?x10957)))
 (let ((?x12292 (- (- (+ (+ (+ (+ (- ?x9520 ?x9907) ?x7482) ?x12284) ?x12286) ?x12241) ?x12289) ?x12291)))
 (= (- ?x12292 ?x12293) 0.0))))))))))))))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12326 (* ?x12045 l_0_6_93)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12324 (* ?x12042 l_0_6_92)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12322 (* ?x12039 l_0_6_91)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12320 (* ?x10671 l_0_6_91)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12318 (* ?x10968 l_0_6_72)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12316 (* ?x10965 l_0_6_71)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12314 (* ?x10962 l_0_6_70)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x12312 (* ?x10662 l_0_6_70)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11004 (* ?x10921 l_0_6_28)))
 (let ((?x10957 (* ?x10921 l_0_6_25)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x1559 (* ?x10945 l_0_6_7)))
 (let ((?x10947 (* ?x10945 l_0_6_4)))
 (let ((?x12311 (- (- (- (+ ?x10947 ?x1559) ?x10957) ?x11004) (* (* 2.0 l_0_6_43) l_0_6_46))))
 (let ((?x12325 (- (- (+ (+ (+ (+ (- ?x12311 ?x12312) ?x12314) ?x12316) ?x12318) ?x12320) ?x12322) ?x12324)))
 (= (- ?x12325 ?x12326) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10785 (* ?x10677 l_0_6_89)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10782 (* ?x10674 l_0_6_88)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10779 (* ?x10668 l_0_6_68)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10776 (* ?x10665 l_0_6_67)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11207 (* ?x11206 l_0_6_5)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11203 (* ?x11065 l_0_6_26)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11200 (* ?x11062 l_0_6_25)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11198 (* ?x11197 l_0_6_4)))
 (let ((?x12366 (* l_0_6_132 l_0_6_132)))
 (let ((?x12364 (* l_0_6_131 l_0_6_131)))
 (let ((?x12362 (* l_0_6_130 l_0_6_130)))
 (let ((?x12360 (* l_0_6_111 l_0_6_111)))
 (let ((?x12361 (- (- (* (- l_0_6_109) l_0_6_109) (* l_0_6_110 l_0_6_110)) ?x12360)))
 (let ((?x12371 (+ (- (- (+ (- (- (- ?x12361 ?x12362) ?x12364) ?x12366) ?x11198) ?x11200) ?x11203) ?x11207)))
 (let ((?x12379 (- (- (- (- ?x12371 ?x10776) ?x10779) (* (* 1.0 l_0_6_67) l_0_6_67)) (* (* 1.0 l_0_6_68) l_0_6_68))))
 (let ((?x12386 (+ (+ (+ (- ?x12379 (* (* 1.0 l_0_6_69) l_0_6_69)) ?x10782) ?x10785) (* 1.0 (* l_0_6_88 l_0_6_88)))))
 (let ((?x12390 (+ (+ ?x12386 (* 1.0 (* l_0_6_89 l_0_6_89))) (* 1.0 (* l_0_6_90 l_0_6_90)))))
 (= ?x12390 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12326 (* ?x12045 l_0_6_93)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12324 (* ?x12042 l_0_6_92)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12322 (* ?x12039 l_0_6_91)))
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10812 (* ?x10677 l_0_6_92)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10810 (* ?x10674 l_0_6_91)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12318 (* ?x10968 l_0_6_72)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12316 (* ?x10965 l_0_6_71)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12314 (* ?x10962 l_0_6_70)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10808 (* ?x10668 l_0_6_71)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10806 (* ?x10665 l_0_6_70)))
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11266 (* ?x11206 l_0_6_8)))
 (let ((?x11207 (* ?x11206 l_0_6_5)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11263 (* ?x11065 l_0_6_29)))
 (let ((?x11203 (* ?x11065 l_0_6_26)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11260 (* ?x11062 l_0_6_28)))
 (let ((?x11200 (* ?x11062 l_0_6_25)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11258 (* ?x11197 l_0_6_7)))
 (let ((?x11198 (* ?x11197 l_0_6_4)))
 (let ((?x12412 (- (* (* (- 2.0) l_0_6_109) l_0_6_112) (* (* 2.0 l_0_6_110) l_0_6_113))))
 (let ((?x12416 (- (- ?x12412 (* (* 2.0 l_0_6_111) l_0_6_114)) (* (* 2.0 l_0_6_130) l_0_6_133))))
 (let ((?x12420 (- (- ?x12416 (* (* 2.0 l_0_6_131) l_0_6_134)) (* (* 2.0 l_0_6_132) l_0_6_135))))
 (let ((?x12427 (+ (- (- (- (- (+ (+ ?x12420 ?x11198) ?x11258) ?x11200) ?x11260) ?x11203) ?x11263) ?x11207)))
 (let ((?x12432 (- (- (+ ?x12427 ?x11266) (* (* 2.0 l_0_6_44) l_0_6_46)) (* (* 2.0 l_0_6_45) l_0_6_47))))
 (let ((?x12439 (+ (+ (- (- (- (- (- ?x12432 ?x10806) ?x10808) ?x12314) ?x12316) ?x12318) ?x10810) ?x10812)))
 (= (+ (+ (+ ?x12439 ?x12322) ?x12324) ?x12326) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12046 (* ?x12045 l_0_6_97)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12043 (* ?x12042 l_0_6_96)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12040 (* ?x12039 l_0_6_95)))
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10678 (* ?x10677 l_0_6_96)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10675 (* ?x10674 l_0_6_95)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12036 (* ?x10968 l_0_6_76)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12034 (* ?x10965 l_0_6_75)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12032 (* ?x10962 l_0_6_74)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10669 (* ?x10668 l_0_6_75)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10666 (* ?x10665 l_0_6_74)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11352 (* ?x11065 l_0_6_33)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11350 (* ?x11062 l_0_6_32)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11330 (* ?x11329 l_0_6_3)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11315 (* ?x11314 l_0_6_2)))
 (let ((?x12465 (- (+ (* (* (- 2.0) l_0_6_109) l_0_6_116) ?x11315) (* (* 2.0 l_0_6_110) l_0_6_117))))
 (let ((?x12470 (- (+ (- ?x12465 (* (* 2.0 l_0_6_111) l_0_6_118)) ?x11330) (* (* 2.0 l_0_6_130) l_0_6_137))))
 (let ((?x12474 (- (- ?x12470 (* (* 2.0 l_0_6_131) l_0_6_138)) (* (* 2.0 l_0_6_132) l_0_6_139))))
 (let ((?x12481 (- (- (- (- (- (- (- ?x12474 ?x11350) ?x11352) ?x10666) ?x10669) ?x12032) ?x12034) ?x12036)))
 (= (+ (+ (+ (+ (+ ?x12481 ?x10675) ?x10678) ?x12040) ?x12043) ?x12046) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12293 (* l_0_6_90 l_0_6_90)))
 (let ((?x12291 (* l_0_6_89 l_0_6_89)))
 (let ((?x12289 (* l_0_6_88 l_0_6_88)))
 (let ((?x12286 (* l_0_6_69 l_0_6_69)))
 (let ((?x12284 (* l_0_6_68 l_0_6_68)))
 (let ((?x7482 (* l_0_6_67 l_0_6_67)))
 (let ((?x11462 (* l_0_6_6 l_0_6_6)))
 (let ((?x11460 (* l_0_6_5 l_0_6_5)))
 (let ((?x11458 (* l_0_6_4 l_0_6_4)))
 (let ((?x11456 (* l_0_6_27 l_0_6_27)))
 (let ((?x12146 (+ (- (- (* (- l_0_6_25) l_0_6_25) (* l_0_6_26 l_0_6_26)) ?x11456) ?x11458)))
 (let ((?x12148 (+ (+ ?x12146 ?x11460) ?x11462)))
 (= (+ (+ (+ (- (- (- ?x12148 ?x7482) ?x12284) ?x12286) ?x12289) ?x12291) ?x12293) 0.0))))))))))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12326 (* ?x12045 l_0_6_93)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12324 (* ?x12042 l_0_6_92)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12322 (* ?x12039 l_0_6_91)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12318 (* ?x10968 l_0_6_72)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12316 (* ?x10965 l_0_6_71)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12314 (* ?x10962 l_0_6_70)))
 (let ((?x11462 (* l_0_6_6 l_0_6_6)))
 (let ((?x11556 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11460 (* l_0_6_5 l_0_6_5)))
 (let ((?x11553 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x12524 (* l_0_6_48 l_0_6_48)))
 (let ((?x12522 (* l_0_6_47 l_0_6_47)))
 (let ((?x12520 (* l_0_6_46 l_0_6_46)))
 (let ((?x11458 (* l_0_6_4 l_0_6_4)))
 (let ((?x11541 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11456 (* l_0_6_27 l_0_6_27)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11525 (* ?x11453 l_0_6_30)))
 (let ((?x11451 (* l_0_6_26 l_0_6_26)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11522 (* ?x11448 l_0_6_29)))
 (let ((?x7708 (- (- (* (* (- 2.0) l_0_6_25) l_0_6_28) (* l_0_6_25 l_0_6_25)) ?x11522)))
 (let ((?x12523 (- (- (+ (+ (- (- (- ?x7708 ?x11451) ?x11525) ?x11456) ?x11541) ?x11458) ?x12520) ?x12522)))
 (let ((?x12531 (- (- (+ (+ (+ (+ (- ?x12523 ?x12524) ?x11553) ?x11460) ?x11556) ?x11462) ?x12314) ?x12316)))
 (= (+ (+ (+ (- ?x12531 ?x12318) ?x12322) ?x12324) ?x12326) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x12045 (* 2.0 l_0_6_90)))
 (let ((?x12046 (* ?x12045 l_0_6_97)))
 (let ((?x12042 (* 2.0 l_0_6_89)))
 (let ((?x12043 (* ?x12042 l_0_6_96)))
 (let ((?x12039 (* 2.0 l_0_6_88)))
 (let ((?x12040 (* ?x12039 l_0_6_95)))
 (let ((?x10968 (* 2.0 l_0_6_69)))
 (let ((?x12036 (* ?x10968 l_0_6_76)))
 (let ((?x10965 (* 2.0 l_0_6_68)))
 (let ((?x12034 (* ?x10965 l_0_6_75)))
 (let ((?x10962 (* 2.0 l_0_6_67)))
 (let ((?x12032 (* ?x10962 l_0_6_74)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11634 (* ?x11453 l_0_6_34)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11632 (* ?x11448 l_0_6_33)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11630 (* ?x11443 l_0_6_32)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11622 (* ?x11619 l_0_6_6)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11617 (* ?x11329 l_0_6_5)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11613 (* ?x11314 l_0_6_4)))
 (let ((?x9681 (- (- (- (+ (+ ?x11613 ?x11617) ?x11622) ?x11630) ?x11632) ?x11634)))
 (= (+ (+ (+ (- (- (- ?x9681 ?x12032) ?x12034) ?x12036) ?x12040) ?x12043) ?x12046) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12606 (* l_0_6_94 l_0_6_94)))
 (let ((?x12604 (* l_0_6_93 l_0_6_93)))
 (let ((?x12602 (* l_0_6_92 l_0_6_92)))
 (let ((?x12600 (* l_0_6_91 l_0_6_91)))
 (let ((?x11802 (* l_0_6_9 l_0_6_9)))
 (let ((?x11800 (* l_0_6_8 l_0_6_8)))
 (let ((?x12596 (* l_0_6_73 l_0_6_73)))
 (let ((?x12594 (* l_0_6_72 l_0_6_72)))
 (let ((?x12592 (* l_0_6_71 l_0_6_71)))
 (let ((?x12590 (* l_0_6_70 l_0_6_70)))
 (let ((?x11798 (* l_0_6_7 l_0_6_7)))
 (let ((?x11556 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x11553 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x11541 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x11784 (* l_0_6_31 l_0_6_31)))
 (let ((?x11781 (* l_0_6_30 l_0_6_30)))
 (let ((?x11778 (* l_0_6_29 l_0_6_29)))
 (let ((?x11775 (* l_0_6_28 l_0_6_28)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11525 (* ?x11453 l_0_6_30)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11522 (* ?x11448 l_0_6_29)))
 (let ((?x12574 (- (- (* l_0_6_10 l_0_6_10) (* (* 2.0 l_0_6_25) l_0_6_28)) ?x11522)))
 (let ((?x12582 (- (+ (- (- (- (- (- ?x12574 ?x11525) ?x11775) ?x11778) ?x11781) ?x11784) ?x11541) (* (* 2.0 l_0_6_46) l_0_6_49))))
 (let ((?x12586 (- (- ?x12582 (* (* 2.0 l_0_6_47) l_0_6_50)) (* (* 2.0 l_0_6_48) l_0_6_51))))
 (let ((?x12597 (- (- (- (- (+ (+ (+ ?x12586 ?x11553) ?x11556) ?x11798) ?x12590) ?x12592) ?x12594) ?x12596)))
 (= (+ (+ (+ (+ (+ (+ ?x12597 ?x11800) ?x11802) ?x12600) ?x12602) ?x12604) ?x12606) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x12090 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x12087 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x12084 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x12081 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x12078 (* ?x11019 l_0_6_77)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x12076 (* ?x11016 l_0_6_76)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x12074 (* ?x11013 l_0_6_75)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x12072 (* ?x11010 l_0_6_74)))
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11841 (* ?x11537 l_0_6_35)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11839 (* ?x11534 l_0_6_34)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11837 (* ?x11531 l_0_6_33)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11835 (* ?x11528 l_0_6_32)))
 (let ((?x11453 (* 2.0 l_0_6_27)))
 (let ((?x11634 (* ?x11453 l_0_6_34)))
 (let ((?x11448 (* 2.0 l_0_6_26)))
 (let ((?x11632 (* ?x11448 l_0_6_33)))
 (let ((?x11443 (* 2.0 l_0_6_25)))
 (let ((?x11630 (* ?x11443 l_0_6_32)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11831 (* ?x11619 l_0_6_9)))
 (let ((?x11622 (* ?x11619 l_0_6_6)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11828 (* ?x11329 l_0_6_8)))
 (let ((?x11617 (* ?x11329 l_0_6_5)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11825 (* ?x11314 l_0_6_7)))
 (let ((?x12646 (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) (* ?x11314 l_0_6_4)) ?x11825) ?x11617)))
 (let ((?x12653 (- (- (- (- (+ (+ (+ ?x12646 ?x11828) ?x11622) ?x11831) ?x11630) ?x11632) ?x11634) ?x11835)))
 (let ((?x12658 (- (- (- (- ?x12653 ?x11837) ?x11839) ?x11841) (* (* 2.0 l_0_6_46) l_0_6_53))))
 (let ((?x12662 (- (- ?x12658 (* (* 2.0 l_0_6_47) l_0_6_54)) (* (* 2.0 l_0_6_48) l_0_6_55))))
 (let ((?x12669 (+ (+ (+ (- (- (- (- ?x12662 ?x12072) ?x12074) ?x12076) ?x12078) ?x12081) ?x12084) ?x12087)))
 (= (+ ?x12669 ?x12090) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12131 (* l_0_6_99 l_0_6_99)))
 (let ((?x12129 (* l_0_6_98 l_0_6_98)))
 (let ((?x12127 (* l_0_6_97 l_0_6_97)))
 (let ((?x12125 (* l_0_6_96 l_0_6_96)))
 (let ((?x12123 (* l_0_6_95 l_0_6_95)))
 (let ((?x12121 (* l_0_6_78 l_0_6_78)))
 (let ((?x12119 (* l_0_6_77 l_0_6_77)))
 (let ((?x12117 (* l_0_6_76 l_0_6_76)))
 (let ((?x12115 (* l_0_6_75 l_0_6_75)))
 (let ((?x12113 (* l_0_6_74 l_0_6_74)))
 (let ((?x11927 (* l_0_6_36 l_0_6_36)))
 (let ((?x11925 (* l_0_6_35 l_0_6_35)))
 (let ((?x3513 (* l_0_6_34 l_0_6_34)))
 (let ((?x6768 (* l_0_6_33 l_0_6_33)))
 (let ((?x6765 (* l_0_6_32 l_0_6_32)))
 (let ((?x3519 (* l_0_6_15 l_0_6_15)))
 (let ((?x3477 (* l_0_6_14 l_0_6_14)))
 (let ((?x6791 (* l_0_6_13 l_0_6_13)))
 (let ((?x12205 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x6791) ?x3477)))
 (let ((?x12211 (- (- (- (- (- (+ ?x12205 ?x3519) ?x6765) ?x6768) ?x3513) ?x11925) ?x11927)))
 (let ((?x10253 (+ (+ (- (- (- (- (- ?x12211 ?x12113) ?x12115) ?x12117) ?x12119) ?x12121) ?x12123) ?x12125)))
 (= (+ (+ (+ ?x10253 ?x12127) ?x12129) ?x12131) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12320 (* ?x10671 l_0_6_91)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x12312 (* ?x10662 l_0_6_70)))
 (let ((?x802 (* l_0_6_43 l_0_6_43)))
 (let ((?x10910 (* l_0_6_22 l_0_6_22)))
 (let ((?x10916 (* l_0_6_1 l_0_6_1)))
 (let ((?x11995 (- ?x10916 ?x10910)))
 (= (- (+ (- ?x11995 ?x802) ?x12312) ?x12320) 0.0))))))))))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10812 (* ?x10677 l_0_6_92)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10810 (* ?x10674 l_0_6_91)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12320 (* ?x10671 l_0_6_91)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10808 (* ?x10668 l_0_6_71)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10806 (* ?x10665 l_0_6_70)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x12312 (* ?x10662 l_0_6_70)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x10922 (* ?x10921 l_0_6_23)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x12004 (* ?x10945 l_0_6_2)))
 (let ((?x12726 (- (- ?x12004 (* (* 2.0 l_0_6_106) l_0_6_112)) (* (* 2.0 l_0_6_127) l_0_6_133))))
 (let ((?x12731 (+ (- (- (- ?x12726 ?x10922) (* (* 2.0 l_0_6_43) l_0_6_44)) ?x12312) ?x10806)))
 (= (- (- (+ (+ ?x12731 ?x10808) ?x12320) ?x10810) ?x10812) 0.0))))))))))))))))))))
(assert
 (let ((?x12606 (* l_0_6_94 l_0_6_94)))
 (let ((?x12604 (* l_0_6_93 l_0_6_93)))
 (let ((?x12602 (* l_0_6_92 l_0_6_92)))
 (let ((?x12600 (* l_0_6_91 l_0_6_91)))
 (let ((?x12596 (* l_0_6_73 l_0_6_73)))
 (let ((?x12594 (* l_0_6_72 l_0_6_72)))
 (let ((?x12592 (* l_0_6_71 l_0_6_71)))
 (let ((?x12590 (* l_0_6_70 l_0_6_70)))
 (let ((?x10921 (* 2.0 l_0_6_22)))
 (let ((?x11004 (* ?x10921 l_0_6_28)))
 (let ((?x10945 (* 2.0 l_0_6_1)))
 (let ((?x1559 (* ?x10945 l_0_6_7)))
 (let ((?x6965 (- ?x1559 ?x11004)))
 (let ((?x12763 (+ (+ (+ (- ?x6965 (* (* 2.0 l_0_6_43) l_0_6_49)) ?x12590) ?x12592) ?x12594)))
 (= (- (- (- (- (+ ?x12763 ?x12596) ?x12600) ?x12602) ?x12604) ?x12606) 0.0))))))))))))))))
(assert
 (let ((?x11206 (* 2.0 l_0_6_3)))
 (let ((?x11266 (* ?x11206 l_0_6_8)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11263 (* ?x11065 l_0_6_29)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11260 (* ?x11062 l_0_6_28)))
 (let ((?x11197 (* 2.0 l_0_6_2)))
 (let ((?x11258 (* ?x11197 l_0_6_7)))
 (let ((?x12787 (* l_0_6_136 l_0_6_136)))
 (let ((?x12785 (* l_0_6_135 l_0_6_135)))
 (let ((?x12783 (* l_0_6_134 l_0_6_134)))
 (let ((?x12781 (* l_0_6_133 l_0_6_133)))
 (let ((?x12779 (* l_0_6_115 l_0_6_115)))
 (let ((?x12777 (* l_0_6_114 l_0_6_114)))
 (let ((?x12778 (- (- (* (- l_0_6_112) l_0_6_112) (* l_0_6_113 l_0_6_113)) ?x12777)))
 (let ((?x12790 (- (+ (- (- (- (- (- ?x12778 ?x12779) ?x12781) ?x12783) ?x12785) ?x12787) ?x11258) ?x11260)))
 (let ((?x12796 (- (- (+ (- ?x12790 ?x11263) ?x11266) (* (* 2.0 l_0_6_44) l_0_6_49)) (* (* 2.0 l_0_6_45) l_0_6_50))))
 (let ((?x12802 (- (- ?x12796 (* (* 1.0 l_0_6_70) l_0_6_70)) (* (* 1.0 l_0_6_71) l_0_6_71))))
 (let ((?x12808 (- (- ?x12802 (* (* 1.0 l_0_6_72) l_0_6_72)) (* (* 1.0 l_0_6_73) l_0_6_73))))
 (let ((?x12812 (+ (+ ?x12808 (* 1.0 (* l_0_6_91 l_0_6_91))) (* 1.0 (* l_0_6_92 l_0_6_92)))))
 (let ((?x12816 (+ (+ ?x12812 (* 1.0 (* l_0_6_93 l_0_6_93))) (* 1.0 (* l_0_6_94 l_0_6_94)))))
 (= ?x12816 0.0)))))))))))))))))))))))
(assert
 (let ((?x12090 (* (* 2.0 l_0_6_94) l_0_6_98)))
 (let ((?x12087 (* (* 2.0 l_0_6_93) l_0_6_97)))
 (let ((?x12084 (* (* 2.0 l_0_6_92) l_0_6_96)))
 (let ((?x12081 (* (* 2.0 l_0_6_91) l_0_6_95)))
 (let ((?x11019 (* 2.0 l_0_6_73)))
 (let ((?x12078 (* ?x11019 l_0_6_77)))
 (let ((?x11016 (* 2.0 l_0_6_72)))
 (let ((?x12076 (* ?x11016 l_0_6_76)))
 (let ((?x11013 (* 2.0 l_0_6_71)))
 (let ((?x12074 (* ?x11013 l_0_6_75)))
 (let ((?x11010 (* 2.0 l_0_6_70)))
 (let ((?x12072 (* ?x11010 l_0_6_74)))
 (let ((?x11065 (* 2.0 l_0_6_24)))
 (let ((?x11352 (* ?x11065 l_0_6_33)))
 (let ((?x11062 (* 2.0 l_0_6_23)))
 (let ((?x11350 (* ?x11062 l_0_6_32)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11330 (* ?x11329 l_0_6_3)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11315 (* ?x11314 l_0_6_2)))
 (let ((?x12843 (- (- ?x11315 (* (* 2.0 l_0_6_112) l_0_6_116)) (* (* 2.0 l_0_6_113) l_0_6_117))))
 (let ((?x12847 (- (- ?x12843 (* (* 2.0 l_0_6_114) l_0_6_118)) (* (* 2.0 l_0_6_115) l_0_6_119))))
 (let ((?x12852 (- (- (+ ?x12847 ?x11330) (* (* 2.0 l_0_6_133) l_0_6_137)) (* (* 2.0 l_0_6_134) l_0_6_138))))
 (let ((?x12856 (- (- ?x12852 (* (* 2.0 l_0_6_135) l_0_6_139)) (* (* 2.0 l_0_6_136) l_0_6_140))))
 (let ((?x12862 (- (- (- (- ?x12856 ?x11350) ?x11352) (* (* 2.0 l_0_6_44) l_0_6_53)) (* (* 2.0 l_0_6_45) l_0_6_54))))
 (let ((?x12869 (+ (+ (+ (- (- (- (- ?x12862 ?x12072) ?x12074) ?x12076) ?x12078) ?x12081) ?x12084) ?x12087)))
 (= (+ ?x12869 ?x12090) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11802 (* l_0_6_9 l_0_6_9)))
 (let ((?x11800 (* l_0_6_8 l_0_6_8)))
 (let ((?x11798 (* l_0_6_7 l_0_6_7)))
 (let ((?x12909 (* l_0_6_52 l_0_6_52)))
 (let ((?x12907 (* l_0_6_51 l_0_6_51)))
 (let ((?x12905 (* l_0_6_50 l_0_6_50)))
 (let ((?x12901 (* l_0_6_49 l_0_6_49)))
 (let ((?x11784 (* l_0_6_31 l_0_6_31)))
 (let ((?x11781 (* l_0_6_30 l_0_6_30)))
 (let ((?x11778 (* l_0_6_29 l_0_6_29)))
 (let ((?x12166 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_28 l_0_6_28)) ?x11778) ?x11781)))
 (let ((?x12167 (- ?x12166 ?x11784)))
 (let ((?x12913 (+ (+ (+ (- (- (- (- ?x12167 ?x12901) ?x12905) ?x12907) ?x12909) ?x11798) ?x11800) ?x11802)))
 (= ?x12913 0.0)))))))))))))))
(assert
 (let ((?x11537 (* 2.0 l_0_6_31)))
 (let ((?x11841 (* ?x11537 l_0_6_35)))
 (let ((?x11534 (* 2.0 l_0_6_30)))
 (let ((?x11839 (* ?x11534 l_0_6_34)))
 (let ((?x11531 (* 2.0 l_0_6_29)))
 (let ((?x11837 (* ?x11531 l_0_6_33)))
 (let ((?x11528 (* 2.0 l_0_6_28)))
 (let ((?x11835 (* ?x11528 l_0_6_32)))
 (let ((?x11619 (* 2.0 l_0_6_13)))
 (let ((?x11831 (* ?x11619 l_0_6_9)))
 (let ((?x11329 (* 2.0 l_0_6_12)))
 (let ((?x11828 (* ?x11329 l_0_6_8)))
 (let ((?x11314 (* 2.0 l_0_6_11)))
 (let ((?x11825 (* ?x11314 l_0_6_7)))
 (let ((?x11504 (* 2.0 l_0_6_10)))
 (let ((?x4327 (* ?x11504 l_0_6_14)))
 (let ((?x12174 (- (- (- (- (+ (+ (+ ?x4327 ?x11825) ?x11828) ?x11831) ?x11835) ?x11837) ?x11839) ?x11841)))
 (let ((?x12932 (- (- ?x12174 (* (* 2.0 l_0_6_49) l_0_6_53)) (* (* 2.0 l_0_6_50) l_0_6_54))))
 (let ((?x12936 (- (- ?x12932 (* (* 2.0 l_0_6_51) l_0_6_55)) (* (* 2.0 l_0_6_52) l_0_6_56))))
 (= ?x12936 0.0)))))))))))))))))))))
(assert
 (let ((?x12955 (* l_0_6_57 l_0_6_57)))
 (let ((?x12953 (* l_0_6_56 l_0_6_56)))
 (let ((?x12951 (* l_0_6_55 l_0_6_55)))
 (let ((?x12949 (* l_0_6_54 l_0_6_54)))
 (let ((?x12947 (* l_0_6_53 l_0_6_53)))
 (let ((?x11927 (* l_0_6_36 l_0_6_36)))
 (let ((?x11925 (* l_0_6_35 l_0_6_35)))
 (let ((?x3513 (* l_0_6_34 l_0_6_34)))
 (let ((?x6768 (* l_0_6_33 l_0_6_33)))
 (let ((?x6765 (* l_0_6_32 l_0_6_32)))
 (let ((?x3519 (* l_0_6_15 l_0_6_15)))
 (let ((?x3477 (* l_0_6_14 l_0_6_14)))
 (let ((?x6791 (* l_0_6_13 l_0_6_13)))
 (let ((?x12205 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x6791) ?x3477)))
 (let ((?x12211 (- (- (- (- (- (+ ?x12205 ?x3519) ?x6765) ?x6768) ?x3513) ?x11925) ?x11927)))
 (= (- (- (- (- (- ?x12211 ?x12947) ?x12949) ?x12951) ?x12953) ?x12955) 0.0)))))))))))))))))
(assert
 (= (- (* l_0_6_64 l_0_6_64) (* l_0_6_85 l_0_6_85)) 0.0))
(assert
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12268 (* ?x10671 l_0_6_86)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x12263 (* ?x10662 l_0_6_65)))
 (let ((?x12969 (+ (- (* (- l_0_6_106) l_0_6_106) (* l_0_6_127 l_0_6_127)) ?x12263)))
 (let ((?x12975 (+ (- (- ?x12969 (* (* 1.0 l_0_6_64) l_0_6_64)) ?x12268) (* 1.0 (* l_0_6_85 l_0_6_85)))))
 (= ?x12975 0.0))))))))
(assert
 (let ((?x10739 (* l_0_6_87 l_0_6_87)))
 (let ((?x10736 (* l_0_6_86 l_0_6_86)))
 (let ((?x10671 (* 2.0 l_0_6_85)))
 (let ((?x12268 (* ?x10671 l_0_6_86)))
 (let ((?x1142 (* l_0_6_66 l_0_6_66)))
 (let ((?x1137 (* l_0_6_65 l_0_6_65)))
 (let ((?x10662 (* 2.0 l_0_6_64)))
 (let ((?x12263 (* ?x10662 l_0_6_65)))
 (let ((?x12985 (- (* (* (- 2.0) l_0_6_106) l_0_6_107) (* (* 2.0 l_0_6_127) l_0_6_128))))
 (= (- (- (+ (+ (+ (- ?x12985 ?x12263) ?x1137) ?x1142) ?x12268) ?x10736) ?x10739) 0.0)))))))))))
(assert
 (let ((?x10677 (* 2.0 l_0_6_87)))
 (let ((?x10678 (* ?x10677 l_0_6_96)))
 (let ((?x10674 (* 2.0 l_0_6_86)))
 (let ((?x10675 (* ?x10674 l_0_6_95)))
 (let ((?x10668 (* 2.0 l_0_6_66)))
 (let ((?x10669 (* ?x10668 l_0_6_75)))
 (let ((?x10665 (* 2.0 l_0_6_65)))
 (let ((?x10666 (* ?x10665 l_0_6_74)))
 (let ((?x13010 (- (* (* (- 2.0) l_0_6_107) l_0_6_116) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x13014 (- (- ?x13010 (* (* 2.0 l_0_6_128) l_0_6_137)) (* (* 2.0 l_0_6_129) l_0_6_138))))
 (= (+ (+ (- (- ?x13014 ?x10666) ?x10669) ?x10675) ?x10678) 0.0))))))))))))
(assert
 (let ((?x13059 (* l_0_6_141 l_0_6_141)))
 (let ((?x13057 (* l_0_6_140 l_0_6_140)))
 (let ((?x13055 (* l_0_6_139 l_0_6_139)))
 (let ((?x13053 (* l_0_6_138 l_0_6_138)))
 (let ((?x13051 (* l_0_6_137 l_0_6_137)))
 (let ((?x13049 (* l_0_6_120 l_0_6_120)))
 (let ((?x13047 (* l_0_6_119 l_0_6_119)))
 (let ((?x13045 (* l_0_6_118 l_0_6_118)))
 (let ((?x13046 (- (- (* (- l_0_6_116) l_0_6_116) (* l_0_6_117 l_0_6_117)) ?x13045)))
 (let ((?x13060 (- (- (- (- (- (- (- ?x13046 ?x13047) ?x13049) ?x13051) ?x13053) ?x13055) ?x13057) ?x13059)))
 (let ((?x13066 (- (- ?x13060 (* (* 1.0 l_0_6_74) l_0_6_74)) (* (* 1.0 l_0_6_75) l_0_6_75))))
 (let ((?x13072 (- (- ?x13066 (* (* 1.0 l_0_6_76) l_0_6_76)) (* (* 1.0 l_0_6_77) l_0_6_77))))
 (let ((?x13077 (+ (- ?x13072 (* (* 1.0 l_0_6_78) l_0_6_78)) (* 1.0 (* l_0_6_95 l_0_6_95)))))
 (let ((?x13081 (+ (+ ?x13077 (* 1.0 (* l_0_6_96 l_0_6_96))) (* 1.0 (* l_0_6_97 l_0_6_97)))))
 (let ((?x13085 (+ (+ ?x13081 (* 1.0 (* l_0_6_98 l_0_6_98))) (* 1.0 (* l_0_6_99 l_0_6_99)))))
 (= ?x13085 0.0)))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_22 0.0))
(assert
 (>= l_0_6_24 0.0))
(assert
 (>= l_0_6_27 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_42 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_52 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_64 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_69 0.0))
(assert
 (>= l_0_6_73 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (>= l_0_6_126 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_129 0.0))
(assert
 (>= l_0_6_132 0.0))
(assert
 (>= l_0_6_136 0.0))
(assert
 (>= l_0_6_141 0.0))
(assert
 (>= l_0_6_147 0.0))
(check-sat)
(get-model)