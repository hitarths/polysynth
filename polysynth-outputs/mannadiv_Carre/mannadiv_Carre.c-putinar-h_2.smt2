(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_40 () Real)
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (= (- l_0_0_1) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- 1.0 (* l_0_2_46 l_0_2_46)) 0.0))
(assert
 (let ((?x532 (* l_0_2_60 l_0_2_60)))
 (let ((?x530 (* l_0_2_59 l_0_2_59)))
 (let ((?x528 (* l_0_2_58 l_0_2_58)))
 (let ((?x526 (* l_0_2_57 l_0_2_57)))
 (let ((?x524 (* l_0_2_56 l_0_2_56)))
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (= (- (- (- (- (- ?x523 ?x524) ?x526) ?x528) ?x530) ?x532) 0.0))))))))))
(assert
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x571 l_0_2_17)))
 (let ((?x568 (* l_0_2_15 l_0_2_15)))
 (let ((?x569 (* 2.0 ?x568)))
 (let ((?x565 (* l_0_2_14 l_0_2_14)))
 (let ((?x566 (* 2.0 ?x565)))
 (let ((?x562 (* l_0_2_13 l_0_2_13)))
 (let ((?x563 (* 2.0 ?x562)))
 (let ((?x559 (* l_0_2_12 l_0_2_12)))
 (let ((?x560 (* 2.0 ?x559)))
 (let ((?x556 (* l_0_2_11 l_0_2_11)))
 (let ((?x557 (* 2.0 ?x556)))
 (let ((?x554 (* 2.0 l_0_2_1)))
 (let ((?x555 (* ?x554 l_0_2_2)))
 (let ((?x576 (- (- (+ (+ (+ (+ (+ ?x555 ?x557) ?x560) ?x563) ?x566) ?x569) ?x572) (* (* 2.0 l_0_2_26) l_0_2_26))))
 (let ((?x582 (- (- ?x576 (* (* 2.0 l_0_2_27) l_0_2_27)) (* (* 2.0 l_0_2_28) l_0_2_28))))
 (let ((?x588 (- (- ?x582 (* (* 2.0 l_0_2_29) l_0_2_29)) (* (* 2.0 l_0_2_30) l_0_2_30))))
 (= ?x588 0.0)))))))))))))))))))
(assert
 (let ((?x624 (* l_0_2_30 l_0_2_30)))
 (let ((?x618 (* l_0_2_29 l_0_2_29)))
 (let ((?x612 (* l_0_2_28 l_0_2_28)))
 (let ((?x606 (* l_0_2_27 l_0_2_27)))
 (let ((?x600 (* l_0_2_26 l_0_2_26)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x637 (* ?x571 l_0_2_19)))
 (let ((?x568 (* l_0_2_15 l_0_2_15)))
 (let ((?x565 (* l_0_2_14 l_0_2_14)))
 (let ((?x562 (* l_0_2_13 l_0_2_13)))
 (let ((?x559 (* l_0_2_12 l_0_2_12)))
 (let ((?x633 (- (- (* (* 2.0 l_0_2_1) l_0_2_4) (* l_0_2_11 l_0_2_11)) ?x559)))
 (let ((?x641 (+ (+ (+ (- (- (- (- ?x633 ?x562) ?x565) ?x568) ?x637) ?x600) ?x606) ?x612)))
 (= (+ (+ ?x641 ?x618) ?x624) 0.0)))))))))))))))
(assert
 (let ((?x624 (* l_0_2_30 l_0_2_30)))
 (let ((?x618 (* l_0_2_29 l_0_2_29)))
 (let ((?x612 (* l_0_2_28 l_0_2_28)))
 (let ((?x606 (* l_0_2_27 l_0_2_27)))
 (let ((?x600 (* l_0_2_26 l_0_2_26)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x682 (* ?x571 l_0_2_22)))
 (let ((?x568 (* l_0_2_15 l_0_2_15)))
 (let ((?x565 (* l_0_2_14 l_0_2_14)))
 (let ((?x562 (* l_0_2_13 l_0_2_13)))
 (let ((?x559 (* l_0_2_12 l_0_2_12)))
 (let ((?x678 (+ (+ (* (* 2.0 l_0_2_1) l_0_2_7) (* l_0_2_11 l_0_2_11)) ?x559)))
 (let ((?x686 (- (- (- (- (+ (+ (+ ?x678 ?x562) ?x565) ?x568) ?x682) ?x600) ?x606) ?x612)))
 (let ((?x694 (- (- (- (- ?x686 ?x618) ?x624) (* (* 1.0 l_0_2_41) l_0_2_41)) (* (* 1.0 l_0_2_42) l_0_2_42))))
 (let ((?x700 (- (- ?x694 (* (* 1.0 l_0_2_43) l_0_2_43)) (* (* 1.0 l_0_2_44) l_0_2_44))))
 (= (- ?x700 (* (* 1.0 l_0_2_45) l_0_2_45)) 0.0)))))))))))))))))
(assert
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x746 (* ?x571 l_0_2_26)))
 (let ((?x747 (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x746)))
 (= ?x747 0.0)))))
(assert
 (let ((?x764 (* l_0_2_3 l_0_2_3)))
 (let ((?x762 (* l_0_2_2 l_0_2_2)))
 (let ((?x765 (+ (+ (- (* (- l_0_2_17) l_0_2_17) (* l_0_2_18 l_0_2_18)) ?x762) ?x764)))
 (= ?x765 0.0)))))
(assert
 (let ((?x785 (* 2.0 l_0_2_3)))
 (let ((?x786 (* ?x785 l_0_2_5)))
 (let ((?x782 (* 2.0 l_0_2_2)))
 (let ((?x783 (* ?x782 l_0_2_4)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x780 (* ?x779 l_0_2_20)))
 (let ((?x773 (* (- 2.0) l_0_2_17)))
 (let ((?x778 (* ?x773 l_0_2_19)))
 (= (+ (+ (- ?x778 ?x780) ?x783) ?x786) 0.0))))))))))
(assert
 (let ((?x785 (* 2.0 l_0_2_3)))
 (let ((?x809 (* ?x785 l_0_2_8)))
 (let ((?x782 (* 2.0 l_0_2_2)))
 (let ((?x807 (* ?x782 l_0_2_7)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x800 (* ?x779 l_0_2_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_17) l_0_2_22) ?x800) ?x807) ?x809) 0.0))))))))
(assert
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x835 (* ?x779 l_0_2_27)))
 (let ((?x832 (* 2.0 l_0_2_17)))
 (let ((?x833 (* ?x832 l_0_2_26)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x830 (* ?x824 l_0_2_3)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x823 (* ?x821 l_0_2_2)))
 (= (- (- (+ ?x823 ?x830) ?x833) ?x835) 0.0))))))))))
(assert
 (let ((?x866 (* l_0_2_6 l_0_2_6)))
 (let ((?x864 (* l_0_2_5 l_0_2_5)))
 (let ((?x862 (* l_0_2_4 l_0_2_4)))
 (let ((?x860 (* l_0_2_21 l_0_2_21)))
 (let ((?x863 (+ (- (- (* (- l_0_2_19) l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x860) ?x862)))
 (= (+ (+ ?x863 ?x864) ?x866) 0.0)))))))
(assert
 (let ((?x898 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x895 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x892 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x889 (* ?x888 l_0_2_24)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x886 (* ?x885 l_0_2_23)))
 (let ((?x896 (+ (+ (- (- (* (* (- 2.0) l_0_2_19) l_0_2_22) ?x886) ?x889) ?x892) ?x895)))
 (= (+ ?x896 ?x898) 0.0))))))))))
(assert
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x935 (* ?x888 l_0_2_28)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x933 (* ?x885 l_0_2_27)))
 (let ((?x930 (* 2.0 l_0_2_19)))
 (let ((?x931 (* ?x930 l_0_2_26)))
 (let ((?x921 (* 2.0 l_0_2_13)))
 (let ((?x928 (* ?x921 l_0_2_6)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x918 (* ?x824 l_0_2_5)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x916 (* ?x821 l_0_2_4)))
 (= (- (- (- (+ (+ ?x916 ?x918) ?x928) ?x931) ?x933) ?x935) 0.0))))))))))))))
(assert
 (let ((?x982 (* l_0_2_9 l_0_2_9)))
 (let ((?x980 (* l_0_2_8 l_0_2_8)))
 (let ((?x978 (* l_0_2_7 l_0_2_7)))
 (let ((?x740 (* l_0_2_45 l_0_2_45)))
 (let ((?x736 (* l_0_2_44 l_0_2_44)))
 (let ((?x732 (* l_0_2_43 l_0_2_43)))
 (let ((?x728 (* l_0_2_42 l_0_2_42)))
 (let ((?x724 (* l_0_2_41 l_0_2_41)))
 (let ((?x971 (* l_0_2_25 l_0_2_25)))
 (let ((?x969 (* l_0_2_24 l_0_2_24)))
 (let ((?x967 (* l_0_2_23 l_0_2_23)))
 (let ((?x970 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x967) ?x969)))
 (let ((?x972 (- ?x970 ?x971)))
 (let ((?x981 (+ (+ (+ (+ (+ (+ (+ ?x972 ?x724) ?x728) ?x732) ?x736) ?x740) ?x978) ?x980)))
 (= (+ ?x981 ?x982) 0.0))))))))))))))))
(assert
 (let ((?x1015 (* 2.0 l_0_2_25)))
 (let ((?x1016 (* ?x1015 l_0_2_29)))
 (let ((?x1012 (* 2.0 l_0_2_24)))
 (let ((?x1013 (* ?x1012 l_0_2_28)))
 (let ((?x1009 (* 2.0 l_0_2_23)))
 (let ((?x1010 (* ?x1009 l_0_2_27)))
 (let ((?x1006 (* 2.0 l_0_2_22)))
 (let ((?x1007 (* ?x1006 l_0_2_26)))
 (let ((?x921 (* 2.0 l_0_2_13)))
 (let ((?x1004 (* ?x921 l_0_2_9)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x1002 (* ?x824 l_0_2_8)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x1000 (* ?x821 l_0_2_7)))
 (let ((?x1008 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x1000) ?x1002) ?x1004) ?x1007)))
 (let ((?x1017 (- (- (- ?x1008 ?x1010) ?x1013) ?x1016)))
 (= ?x1017 0.0))))))))))))))))))
(assert
 (let ((?x624 (* l_0_2_30 l_0_2_30)))
 (let ((?x618 (* l_0_2_29 l_0_2_29)))
 (let ((?x612 (* l_0_2_28 l_0_2_28)))
 (let ((?x606 (* l_0_2_27 l_0_2_27)))
 (let ((?x600 (* l_0_2_26 l_0_2_26)))
 (let ((?x568 (* l_0_2_15 l_0_2_15)))
 (let ((?x565 (* l_0_2_14 l_0_2_14)))
 (let ((?x562 (* l_0_2_13 l_0_2_13)))
 (let ((?x1055 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x562) ?x565)))
 (= (- (- (- (- (- (+ ?x1055 ?x568) ?x600) ?x606) ?x612) ?x618) ?x624) 0.0)))))))))))
(assert
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x1075 (* 2.0 ?x521)))
 (let ((?x1080 (- (- ?x1075 (* (* 2.0 l_0_2_16) l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_47))))
 (= ?x1080 0.0)))))
(assert
 (let ((?x1102 (* l_0_2_48 l_0_2_48)))
 (let ((?x1100 (* l_0_2_47 l_0_2_47)))
 (let ((?x1099 (- (* (* 4.0 l_0_2_1) l_0_2_2) (* (* 4.0 l_0_2_16) l_0_2_17))))
 (= (- (- ?x1099 ?x1100) ?x1102) 0.0)))))
(assert
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x571 l_0_2_17)))
 (let ((?x1122 (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) (* (* 4.0 l_0_2_1) l_0_2_4))))
 (let ((?x1128 (- (- (+ ?x1122 ?x572) (* (* 4.0 l_0_2_16) l_0_2_19)) (* (* 2.0 l_0_2_47) l_0_2_49))))
 (= (- ?x1128 (* (* 2.0 l_0_2_48) l_0_2_50)) 0.0))))))
(assert
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1162 (* ?x1161 l_0_2_32)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x572 (* ?x571 l_0_2_17)))
 (let ((?x554 (* 2.0 l_0_2_1)))
 (let ((?x555 (* ?x554 l_0_2_2)))
 (let ((?x1160 (- (- (+ ?x555 (* (* 4.0 l_0_2_1) l_0_2_7)) ?x572) (* (* 4.0 l_0_2_16) l_0_2_22))))
 (let ((?x1167 (- (- (- ?x1160 ?x1162) (* (* 2.0 l_0_2_47) l_0_2_52)) (* (* 2.0 l_0_2_48) l_0_2_53))))
 (= ?x1167 0.0))))))))))
(assert
 (let ((?x1199 (- (* (* 4.0 l_0_2_1) l_0_2_11) (* (* 4.0 l_0_2_16) l_0_2_26))))
 (let ((?x1203 (- (- ?x1199 (* (* 2.0 l_0_2_47) l_0_2_56)) (* (* 2.0 l_0_2_48) l_0_2_57))))
 (= ?x1203 0.0))))
(assert
 (let ((?x1226 (- (* (* (- 2.0) l_0_2_17) l_0_2_17) (* (* 2.0 l_0_2_18) l_0_2_18))))
 (let ((?x1230 (+ (+ ?x1226 (* 2.0 (* l_0_2_2 l_0_2_2))) (* 2.0 (* l_0_2_3 l_0_2_3)))))
 (= ?x1230 0.0))))
(assert
 (let ((?x764 (* l_0_2_3 l_0_2_3)))
 (let ((?x762 (* l_0_2_2 l_0_2_2)))
 (let ((?x760 (* l_0_2_18 l_0_2_18)))
 (let ((?x1248 (- (+ (* (* (- 4.0) l_0_2_17) l_0_2_19) (* l_0_2_17 l_0_2_17)) (* (* 4.0 l_0_2_18) l_0_2_20))))
 (let ((?x1256 (+ (- (+ (+ ?x1248 ?x760) (* (* 4.0 l_0_2_2) l_0_2_4)) ?x762) (* (* 4.0 l_0_2_3) l_0_2_5))))
 (= (- ?x1256 ?x764) 0.0)))))))
(assert
 (let ((?x764 (* l_0_2_3 l_0_2_3)))
 (let ((?x762 (* l_0_2_2 l_0_2_2)))
 (let ((?x760 (* l_0_2_18 l_0_2_18)))
 (let ((?x1278 (- (- (* (* (- 4.0) l_0_2_17) l_0_2_22) (* l_0_2_17 l_0_2_17)) (* (* 4.0 l_0_2_18) l_0_2_23))))
 (let ((?x1284 (+ (+ (+ (- ?x1278 ?x760) (* (* 4.0 l_0_2_2) l_0_2_7)) ?x762) (* (* 4.0 l_0_2_3) l_0_2_8))))
 (let ((?x1291 (- (- (+ ?x1284 ?x764) (* (* 1.0 l_0_2_32) l_0_2_32)) (* (* 1.0 l_0_2_33) l_0_2_33))))
 (= ?x1291 0.0))))))))
(assert
 (let ((?x1323 (+ (* (* 4.0 l_0_2_11) l_0_2_2) (* (* 4.0 l_0_2_12) l_0_2_3))))
 (let ((?x1328 (- (- ?x1323 (* (* 4.0 l_0_2_17) l_0_2_26)) (* (* 4.0 l_0_2_18) l_0_2_27))))
 (= ?x1328 0.0))))
(assert
 (let ((?x866 (* l_0_2_6 l_0_2_6)))
 (let ((?x1358 (* 2.0 ?x866)))
 (let ((?x864 (* l_0_2_5 l_0_2_5)))
 (let ((?x1356 (* 2.0 ?x864)))
 (let ((?x862 (* l_0_2_4 l_0_2_4)))
 (let ((?x1354 (* 2.0 ?x862)))
 (let ((?x785 (* 2.0 l_0_2_3)))
 (let ((?x786 (* ?x785 l_0_2_5)))
 (let ((?x782 (* 2.0 l_0_2_2)))
 (let ((?x783 (* ?x782 l_0_2_4)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x780 (* ?x779 l_0_2_20)))
 (let ((?x1347 (- (+ (* (* 2.0 l_0_2_17) l_0_2_19) ?x780) (* (* 2.0 l_0_2_19) l_0_2_19))))
 (let ((?x1352 (- (- (- ?x1347 ?x783) (* (* 2.0 l_0_2_20) l_0_2_20)) (* (* 2.0 l_0_2_21) l_0_2_21))))
 (= (+ (+ (+ (- ?x1352 ?x786) ?x1354) ?x1356) ?x1358) 0.0))))))))))))))))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1408 (* ?x1407 l_0_2_35)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1405 (* ?x1404 l_0_2_34)))
 (let ((?x785 (* 2.0 l_0_2_3)))
 (let ((?x809 (* ?x785 l_0_2_8)))
 (let ((?x786 (* ?x785 l_0_2_5)))
 (let ((?x782 (* 2.0 l_0_2_2)))
 (let ((?x807 (* ?x782 l_0_2_7)))
 (let ((?x783 (* ?x782 l_0_2_4)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x800 (* ?x779 l_0_2_23)))
 (let ((?x780 (* ?x779 l_0_2_20)))
 (let ((?x832 (* 2.0 l_0_2_17)))
 (let ((?x1387 (* ?x832 l_0_2_22)))
 (let ((?x773 (* (- 2.0) l_0_2_17)))
 (let ((?x778 (* ?x773 l_0_2_19)))
 (let ((?x1393 (- (+ (- (+ ?x778 ?x1387) ?x780) ?x800) (* (* 4.0 l_0_2_19) l_0_2_22))))
 (let ((?x1401 (- (- (- (+ ?x1393 ?x783) ?x807) (* (* 4.0 l_0_2_20) l_0_2_23)) (* (* 4.0 l_0_2_21) l_0_2_24))))
 (let ((?x1412 (+ (- (- (- (+ ?x1401 ?x786) ?x809) ?x1405) ?x1408) (* (* 4.0 l_0_2_4) l_0_2_7))))
 (let ((?x1418 (+ (+ ?x1412 (* (* 4.0 l_0_2_5) l_0_2_8)) (* (* 4.0 l_0_2_6) l_0_2_9))))
 (= ?x1418 0.0)))))))))))))))))))))))
(assert
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x835 (* ?x779 l_0_2_27)))
 (let ((?x832 (* 2.0 l_0_2_17)))
 (let ((?x833 (* ?x832 l_0_2_26)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x830 (* ?x824 l_0_2_3)))
 (let ((?x1464 (+ (* (* (- 2.0) l_0_2_11) l_0_2_2) (* (* 4.0 l_0_2_11) l_0_2_4))))
 (let ((?x1475 (+ (+ (- ?x1464 ?x830) (* (* 4.0 l_0_2_12) l_0_2_5)) (* (* 4.0 l_0_2_13) l_0_2_6))))
 (let ((?x1481 (- (- (+ (+ ?x1475 ?x833) ?x835) (* (* 4.0 l_0_2_19) l_0_2_26)) (* (* 4.0 l_0_2_20) l_0_2_27))))
 (= (- ?x1481 (* (* 4.0 l_0_2_21) l_0_2_28)) 0.0)))))))))))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1531 (* ?x1407 l_0_2_38)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1529 (* ?x1404 l_0_2_37)))
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1162 (* ?x1161 l_0_2_32)))
 (let ((?x785 (* 2.0 l_0_2_3)))
 (let ((?x809 (* ?x785 l_0_2_8)))
 (let ((?x782 (* 2.0 l_0_2_2)))
 (let ((?x807 (* ?x782 l_0_2_7)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x800 (* ?x779 l_0_2_23)))
 (let ((?x832 (* 2.0 l_0_2_17)))
 (let ((?x1387 (* ?x832 l_0_2_22)))
 (let ((?x1520 (- (+ (- (- (* 2.0 (* l_0_2_10 l_0_2_10)) ?x1387) ?x800) ?x807) (* (* 2.0 l_0_2_22) l_0_2_22))))
 (let ((?x1524 (- (- ?x1520 (* (* 2.0 l_0_2_23) l_0_2_23)) (* (* 2.0 l_0_2_24) l_0_2_24))))
 (let ((?x1530 (- (+ (+ (- ?x1524 (* (* 2.0 l_0_2_25) l_0_2_25)) ?x809) ?x1162) ?x1529)))
 (let ((?x1536 (+ (+ (- ?x1530 ?x1531) (* 2.0 (* l_0_2_7 l_0_2_7))) (* 2.0 (* l_0_2_8 l_0_2_8)))))
 (= (+ ?x1536 (* 2.0 (* l_0_2_9 l_0_2_9))) 0.0))))))))))))))))))))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1611 (* ?x1407 l_0_2_42)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1609 (* ?x1404 l_0_2_41)))
 (let ((?x779 (* 2.0 l_0_2_18)))
 (let ((?x835 (* ?x779 l_0_2_27)))
 (let ((?x832 (* 2.0 l_0_2_17)))
 (let ((?x833 (* ?x832 l_0_2_26)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x830 (* ?x824 l_0_2_3)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x823 (* ?x821 l_0_2_2)))
 (let ((?x1589 (+ (+ (* (* 4.0 l_0_2_10) l_0_2_14) ?x823) (* (* 4.0 l_0_2_11) l_0_2_7))))
 (let ((?x1594 (+ (+ (+ ?x1589 ?x830) (* (* 4.0 l_0_2_12) l_0_2_8)) (* (* 4.0 l_0_2_13) l_0_2_9))))
 (let ((?x1602 (- (- (- (- ?x1594 ?x833) ?x835) (* (* 4.0 l_0_2_22) l_0_2_26)) (* (* 4.0 l_0_2_23) l_0_2_27))))
 (let ((?x1608 (- (- ?x1602 (* (* 4.0 l_0_2_24) l_0_2_28)) (* (* 4.0 l_0_2_25) l_0_2_29))))
 (= (- (- ?x1608 ?x1609) ?x1611) 0.0))))))))))))))))))
(assert
 (let ((?x522 (* l_0_2_16 l_0_2_16)))
 (let ((?x521 (* l_0_2_1 l_0_2_1)))
 (let ((?x523 (- ?x521 ?x522)))
 (let ((?x1660 (- (- ?x523 (* (* 1.0 l_0_2_31) l_0_2_31)) (* (* 2.0 l_0_2_46) l_0_2_52))))
 (= ?x1660 0.0))))))
(assert
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1676 (* ?x1161 l_0_2_34)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x682 (* ?x571 l_0_2_22)))
 (let ((?x637 (* ?x571 l_0_2_19)))
 (let ((?x554 (* 2.0 l_0_2_1)))
 (let ((?x668 (* ?x554 l_0_2_7)))
 (let ((?x631 (* ?x554 l_0_2_4)))
 (let ((?x1680 (- (- (+ (- (- ?x631 ?x668) ?x637) ?x682) ?x1676) (* (* 2.0 l_0_2_49) l_0_2_52))))
 (let ((?x1686 (- (- ?x1680 (* (* 2.0 l_0_2_50) l_0_2_53)) (* (* 2.0 l_0_2_51) l_0_2_54))))
 (= ?x1686 0.0))))))))))))
(assert
 (let ((?x1730 (* l_0_2_55 l_0_2_55)))
 (let ((?x1728 (* l_0_2_54 l_0_2_54)))
 (let ((?x1726 (* l_0_2_53 l_0_2_53)))
 (let ((?x1724 (* l_0_2_52 l_0_2_52)))
 (let ((?x1662 (* l_0_2_31 l_0_2_31)))
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1721 (* ?x1161 l_0_2_37)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x682 (* ?x571 l_0_2_22)))
 (let ((?x554 (* 2.0 l_0_2_1)))
 (let ((?x668 (* ?x554 l_0_2_7)))
 (let ((?x1731 (- (- (- (- (+ (- (- ?x668 ?x682) ?x1721) ?x1662) ?x1724) ?x1726) ?x1728) ?x1730)))
 (= ?x1731 0.0))))))))))))))
(assert
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1755 (* ?x1161 l_0_2_41)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x746 (* ?x571 l_0_2_26)))
 (let ((?x747 (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x746)))
 (let ((?x1762 (- (- (- ?x747 ?x1755) (* (* 2.0 l_0_2_52) l_0_2_56)) (* (* 2.0 l_0_2_53) l_0_2_57))))
 (let ((?x1768 (- (- ?x1762 (* (* 2.0 l_0_2_54) l_0_2_58)) (* (* 2.0 l_0_2_55) l_0_2_59))))
 (= ?x1768 0.0)))))))))
(assert
 (let ((?x866 (* l_0_2_6 l_0_2_6)))
 (let ((?x898 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x864 (* l_0_2_5 l_0_2_5)))
 (let ((?x895 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x862 (* l_0_2_4 l_0_2_4)))
 (let ((?x892 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x860 (* l_0_2_21 l_0_2_21)))
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x889 (* ?x888 l_0_2_24)))
 (let ((?x858 (* l_0_2_20 l_0_2_20)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x886 (* ?x885 l_0_2_23)))
 (let ((?x1803 (+ (- (* (* 2.0 l_0_2_19) l_0_2_22) (* l_0_2_19 l_0_2_19)) ?x886)))
 (let ((?x1809 (- (- (+ (- ?x1803 ?x858) ?x889) ?x860) (* (* 1.0 l_0_2_34) l_0_2_34))))
 (let ((?x1815 (- (- ?x1809 (* (* 1.0 l_0_2_35) l_0_2_35)) (* (* 1.0 l_0_2_36) l_0_2_36))))
 (= (+ (- (+ (- (+ (- ?x1815 ?x892) ?x862) ?x895) ?x864) ?x898) ?x866) 0.0)))))))))))))))))
(assert
 (let ((?x982 (* l_0_2_9 l_0_2_9)))
 (let ((?x980 (* l_0_2_8 l_0_2_8)))
 (let ((?x978 (* l_0_2_7 l_0_2_7)))
 (let ((?x898 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x895 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x892 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x1875 (* 2.0 l_0_2_36)))
 (let ((?x1876 (* ?x1875 l_0_2_39)))
 (let ((?x1872 (* 2.0 l_0_2_35)))
 (let ((?x1873 (* ?x1872 l_0_2_38)))
 (let ((?x1869 (* 2.0 l_0_2_34)))
 (let ((?x1870 (* ?x1869 l_0_2_37)))
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1676 (* ?x1161 l_0_2_34)))
 (let ((?x971 (* l_0_2_25 l_0_2_25)))
 (let ((?x969 (* l_0_2_24 l_0_2_24)))
 (let ((?x967 (* l_0_2_23 l_0_2_23)))
 (let ((?x965 (* l_0_2_22 l_0_2_22)))
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x889 (* ?x888 l_0_2_24)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x886 (* ?x885 l_0_2_23)))
 (let ((?x1862 (- (- (* (- l_0_2_10) l_0_2_10) (* (* 2.0 l_0_2_19) l_0_2_22)) ?x886)))
 (let ((?x1871 (- (+ (+ (+ (+ (+ (- ?x1862 ?x889) ?x965) ?x967) ?x969) ?x971) ?x1676) ?x1870)))
 (let ((?x1882 (- (- (+ (+ (+ (- (- ?x1871 ?x1873) ?x1876) ?x892) ?x895) ?x898) ?x978) ?x980)))
 (= (- ?x1882 ?x982) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x1875 (* 2.0 l_0_2_36)))
 (let ((?x1944 (* ?x1875 l_0_2_43)))
 (let ((?x1872 (* 2.0 l_0_2_35)))
 (let ((?x1942 (* ?x1872 l_0_2_42)))
 (let ((?x1869 (* 2.0 l_0_2_34)))
 (let ((?x1940 (* ?x1869 l_0_2_41)))
 (let ((?x1015 (* 2.0 l_0_2_25)))
 (let ((?x1016 (* ?x1015 l_0_2_29)))
 (let ((?x1012 (* 2.0 l_0_2_24)))
 (let ((?x1013 (* ?x1012 l_0_2_28)))
 (let ((?x1009 (* 2.0 l_0_2_23)))
 (let ((?x1010 (* ?x1009 l_0_2_27)))
 (let ((?x1006 (* 2.0 l_0_2_22)))
 (let ((?x1007 (* ?x1006 l_0_2_26)))
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x935 (* ?x888 l_0_2_28)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x933 (* ?x885 l_0_2_27)))
 (let ((?x930 (* 2.0 l_0_2_19)))
 (let ((?x931 (* ?x930 l_0_2_26)))
 (let ((?x921 (* 2.0 l_0_2_13)))
 (let ((?x1004 (* ?x921 l_0_2_9)))
 (let ((?x928 (* ?x921 l_0_2_6)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x1002 (* ?x824 l_0_2_8)))
 (let ((?x918 (* ?x824 l_0_2_5)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x1000 (* ?x821 l_0_2_7)))
 (let ((?x1929 (+ (- (+ (* (* (- 2.0) l_0_2_10) l_0_2_14) (* ?x821 l_0_2_4)) ?x1000) ?x918)))
 (let ((?x1936 (+ (- (- (- (- (+ (- ?x1929 ?x1002) ?x928) ?x1004) ?x931) ?x933) ?x935) ?x1007)))
 (= (- (- (- (+ (+ (+ ?x1936 ?x1010) ?x1013) ?x1016) ?x1940) ?x1942) ?x1944) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x982 (* l_0_2_9 l_0_2_9)))
 (let ((?x980 (* l_0_2_8 l_0_2_8)))
 (let ((?x978 (* l_0_2_7 l_0_2_7)))
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1721 (* ?x1161 l_0_2_37)))
 (let ((?x971 (* l_0_2_25 l_0_2_25)))
 (let ((?x969 (* l_0_2_24 l_0_2_24)))
 (let ((?x967 (* l_0_2_23 l_0_2_23)))
 (let ((?x970 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_22 l_0_2_22)) ?x967) ?x969)))
 (let ((?x972 (- ?x970 ?x971)))
 (let ((?x1995 (- (- (+ ?x972 ?x1721) (* (* 1.0 l_0_2_37) l_0_2_37)) (* (* 1.0 l_0_2_38) l_0_2_38))))
 (let ((?x2001 (- (- ?x1995 (* (* 1.0 l_0_2_39) l_0_2_39)) (* (* 1.0 l_0_2_40) l_0_2_40))))
 (= (+ (+ (+ ?x2001 ?x978) ?x980) ?x982) 0.0))))))))))))))
(assert
 (let ((?x2036 (* (* 2.0 l_0_2_40) l_0_2_44)))
 (let ((?x2033 (* (* 2.0 l_0_2_39) l_0_2_43)))
 (let ((?x2030 (* (* 2.0 l_0_2_38) l_0_2_42)))
 (let ((?x2027 (* (* 2.0 l_0_2_37) l_0_2_41)))
 (let ((?x1161 (* 2.0 l_0_2_31)))
 (let ((?x1755 (* ?x1161 l_0_2_41)))
 (let ((?x1015 (* 2.0 l_0_2_25)))
 (let ((?x1016 (* ?x1015 l_0_2_29)))
 (let ((?x1012 (* 2.0 l_0_2_24)))
 (let ((?x1013 (* ?x1012 l_0_2_28)))
 (let ((?x1009 (* 2.0 l_0_2_23)))
 (let ((?x1010 (* ?x1009 l_0_2_27)))
 (let ((?x1006 (* 2.0 l_0_2_22)))
 (let ((?x1007 (* ?x1006 l_0_2_26)))
 (let ((?x921 (* 2.0 l_0_2_13)))
 (let ((?x1004 (* ?x921 l_0_2_9)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x1002 (* ?x824 l_0_2_8)))
 (let ((?x821 (* 2.0 l_0_2_11)))
 (let ((?x1000 (* ?x821 l_0_2_7)))
 (let ((?x1008 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x1000) ?x1002) ?x1004) ?x1007)))
 (let ((?x1017 (- (- (- ?x1008 ?x1010) ?x1013) ?x1016)))
 (= (- (- (- (- (+ ?x1017 ?x1755) ?x2027) ?x2030) ?x2033) ?x2036) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2069 (- (+ (* (- l_0_2_1) l_0_2_1) (* l_0_2_16 l_0_2_16)) (* (* 2.0 l_0_2_46) l_0_2_49))))
 (= ?x2069 0.0)))
(assert
 (let ((?x2088 (* l_0_2_51 l_0_2_51)))
 (let ((?x2086 (* l_0_2_50 l_0_2_50)))
 (let ((?x2084 (* l_0_2_49 l_0_2_49)))
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x637 (* ?x571 l_0_2_19)))
 (let ((?x2089 (- (- (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x637) ?x2084) ?x2086) ?x2088)))
 (= ?x2089 0.0))))))))
(assert
 (let ((?x571 (* 2.0 l_0_2_16)))
 (let ((?x746 (* ?x571 l_0_2_26)))
 (let ((?x2106 (- (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x746) (* (* 2.0 l_0_2_49) l_0_2_56))))
 (let ((?x2110 (- (- ?x2106 (* (* 2.0 l_0_2_50) l_0_2_57)) (* (* 2.0 l_0_2_51) l_0_2_58))))
 (= ?x2110 0.0))))))
(assert
 (let ((?x866 (* l_0_2_6 l_0_2_6)))
 (let ((?x864 (* l_0_2_5 l_0_2_5)))
 (let ((?x862 (* l_0_2_4 l_0_2_4)))
 (let ((?x860 (* l_0_2_21 l_0_2_21)))
 (let ((?x2136 (- (+ (+ (* l_0_2_19 l_0_2_19) (* l_0_2_20 l_0_2_20)) ?x860) ?x862)))
 (= (- (- ?x2136 ?x864) ?x866) 0.0)))))))
(assert
 (let ((?x888 (* 2.0 l_0_2_21)))
 (let ((?x935 (* ?x888 l_0_2_28)))
 (let ((?x885 (* 2.0 l_0_2_20)))
 (let ((?x933 (* ?x885 l_0_2_27)))
 (let ((?x930 (* 2.0 l_0_2_19)))
 (let ((?x931 (* ?x930 l_0_2_26)))
 (let ((?x921 (* 2.0 l_0_2_13)))
 (let ((?x928 (* ?x921 l_0_2_6)))
 (let ((?x824 (* 2.0 l_0_2_12)))
 (let ((?x918 (* ?x824 l_0_2_5)))
 (let ((?x2150 (+ (+ (- (- (* (* (- 2.0) l_0_2_11) l_0_2_4) ?x918) ?x928) ?x931) ?x933)))
 (= (+ ?x2150 ?x935) 0.0)))))))))))))
(assert
 (= (+ (* l_0_2_32 l_0_2_32) (* l_0_2_33 l_0_2_33)) 0.0))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1408 (* ?x1407 l_0_2_35)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1405 (* ?x1404 l_0_2_34)))
 (= (+ ?x1405 ?x1408) 0.0))))))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1531 (* ?x1407 l_0_2_38)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1529 (* ?x1404 l_0_2_37)))
 (= (+ ?x1529 ?x1531) 0.0))))))
(assert
 (let ((?x1407 (* 2.0 l_0_2_33)))
 (let ((?x1611 (* ?x1407 l_0_2_42)))
 (let ((?x1404 (* 2.0 l_0_2_32)))
 (let ((?x1609 (* ?x1404 l_0_2_41)))
 (= (+ ?x1609 ?x1611) 0.0))))))
(assert
 (let ((?x1839 (* l_0_2_36 l_0_2_36)))
 (= (+ (+ (* l_0_2_34 l_0_2_34) (* l_0_2_35 l_0_2_35)) ?x1839) 0.0)))
(assert
 (let ((?x1875 (* 2.0 l_0_2_36)))
 (let ((?x1876 (* ?x1875 l_0_2_39)))
 (let ((?x1872 (* 2.0 l_0_2_35)))
 (let ((?x1873 (* ?x1872 l_0_2_38)))
 (let ((?x1869 (* 2.0 l_0_2_34)))
 (let ((?x1870 (* ?x1869 l_0_2_37)))
 (= (+ (+ ?x1870 ?x1873) ?x1876) 0.0))))))))
(assert
 (let ((?x1875 (* 2.0 l_0_2_36)))
 (let ((?x1944 (* ?x1875 l_0_2_43)))
 (let ((?x1872 (* 2.0 l_0_2_35)))
 (let ((?x1942 (* ?x1872 l_0_2_42)))
 (let ((?x1869 (* 2.0 l_0_2_34)))
 (let ((?x1940 (* ?x1869 l_0_2_41)))
 (= (+ (+ ?x1940 ?x1942) ?x1944) 0.0))))))))
(assert
 (let ((?x2019 (* l_0_2_40 l_0_2_40)))
 (let ((?x2015 (* l_0_2_39 l_0_2_39)))
 (let ((?x2193 (+ (+ (+ (* l_0_2_37 l_0_2_37) (* l_0_2_38 l_0_2_38)) ?x2015) ?x2019)))
 (= ?x2193 0.0)))))
(assert
 (let ((?x2036 (* (* 2.0 l_0_2_40) l_0_2_44)))
 (let ((?x2033 (* (* 2.0 l_0_2_39) l_0_2_43)))
 (let ((?x2030 (* (* 2.0 l_0_2_38) l_0_2_42)))
 (let ((?x2027 (* (* 2.0 l_0_2_37) l_0_2_41)))
 (= (+ (+ (+ ?x2027 ?x2030) ?x2033) ?x2036) 0.0))))))
(assert
 (= (* (* (- 2.0) l_0_2_46) l_0_2_56) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_16 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (>= l_0_2_40 0.0))
(assert
 (>= l_0_2_45 0.0))
(assert
 (>= l_0_2_46 0.0))
(assert
 (>= l_0_2_48 0.0))
(assert
 (>= l_0_2_51 0.0))
(assert
 (>= l_0_2_55 0.0))
(assert
 (>= l_0_2_60 0.0))
(assert
 (= (- (- (- _a_0_) (* l_0_3_76 l_0_3_76)) 1.0) 0.0))
(assert
 (let ((?x2258 (* l_0_3_90 l_0_3_90)))
 (let ((?x2256 (* l_0_3_89 l_0_3_89)))
 (let ((?x2254 (* l_0_3_88 l_0_3_88)))
 (let ((?x2252 (* l_0_3_87 l_0_3_87)))
 (let ((?x2250 (* l_0_3_86 l_0_3_86)))
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x2248 (* ?x2247 l_0_3_71)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x2245 (* ?x2244 l_0_3_56)))
 (let ((?x2249 (+ (- (- (* l_0_3_1 l_0_3_1) (* l_0_3_16 l_0_3_16)) ?x2245) ?x2248)))
 (= (- (- (- (- (- (- ?x2249 ?x2250) ?x2252) ?x2254) ?x2256) ?x2258) 1.0) 0.0))))))))))))
(assert
 (let ((?x2294 (* l_0_3_61 l_0_3_61)))
 (let ((?x2298 (- (+ (- (- _a_2_) (* l_0_3_46 l_0_3_46)) ?x2294) (* (* 2.0 l_0_3_76) l_0_3_86))))
 (= (- ?x2298 2.0) 0.0))))
(assert
 (let ((?x2322 (+ (- (+ (- _a_1_) (* l_0_3_1 l_0_3_1)) (* l_0_3_16 l_0_3_16)) (* 1.0 (* l_0_3_31 l_0_3_31)))))
 (= (- ?x2322 (* (* 2.0 l_0_3_76) l_0_3_82)) 0.0)))
(assert
 (let ((?x2345 (- (+ (* (- l_0_3_1) l_0_3_1) (* l_0_3_16 l_0_3_16)) (* (* 2.0 l_0_3_76) l_0_3_79))))
 (= (+ ?x2345 1.0) 0.0)))
(assert
 (let ((?x2423 (* l_0_3_75 l_0_3_75)))
 (let ((?x2421 (* l_0_3_74 l_0_3_74)))
 (let ((?x2419 (* l_0_3_73 l_0_3_73)))
 (let ((?x2417 (* l_0_3_72 l_0_3_72)))
 (let ((?x2415 (* l_0_3_71 l_0_3_71)))
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x2413 (* ?x2412 l_0_3_72)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x2410 (* ?x2409 l_0_3_71)))
 (let ((?x2407 (* l_0_3_60 l_0_3_60)))
 (let ((?x2405 (* l_0_3_59 l_0_3_59)))
 (let ((?x2403 (* l_0_3_58 l_0_3_58)))
 (let ((?x2401 (* l_0_3_57 l_0_3_57)))
 (let ((?x2399 (* l_0_3_56 l_0_3_56)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x2397 (* ?x2396 l_0_3_57)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x2394 (* ?x2393 l_0_3_56)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2376 (* ?x2375 l_0_3_17)))
 (let ((?x2372 (* l_0_3_15 l_0_3_15)))
 (let ((?x2373 (* 2.0 ?x2372)))
 (let ((?x2369 (* l_0_3_14 l_0_3_14)))
 (let ((?x2370 (* 2.0 ?x2369)))
 (let ((?x2366 (* l_0_3_13 l_0_3_13)))
 (let ((?x2367 (* 2.0 ?x2366)))
 (let ((?x2363 (* l_0_3_12 l_0_3_12)))
 (let ((?x2364 (* 2.0 ?x2363)))
 (let ((?x2360 (* l_0_3_11 l_0_3_11)))
 (let ((?x2361 (* 2.0 ?x2360)))
 (let ((?x2356 (* 2.0 l_0_3_1)))
 (let ((?x2359 (* ?x2356 l_0_3_2)))
 (let ((?x2380 (- (- (+ (+ (+ (+ (+ ?x2359 ?x2361) ?x2364) ?x2367) ?x2370) ?x2373) ?x2376) (* (* 2.0 l_0_3_26) l_0_3_26))))
 (let ((?x2386 (- (- ?x2380 (* (* 2.0 l_0_3_27) l_0_3_27)) (* (* 2.0 l_0_3_28) l_0_3_28))))
 (let ((?x2392 (- (- ?x2386 (* (* 2.0 l_0_3_29) l_0_3_29)) (* (* 2.0 l_0_3_30) l_0_3_30))))
 (let ((?x2408 (+ (+ (+ (+ (+ (- (- ?x2392 ?x2394) ?x2397) ?x2399) ?x2401) ?x2403) ?x2405) ?x2407)))
 (let ((?x2424 (- (- (- (- (- (+ (+ ?x2408 ?x2410) ?x2413) ?x2415) ?x2417) ?x2419) ?x2421) ?x2423)))
 (= ?x2424 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2526 (* 2.0 l_0_3_66)))
 (let ((?x2527 (* ?x2526 l_0_3_73)))
 (let ((?x2523 (* 2.0 l_0_3_65)))
 (let ((?x2524 (* ?x2523 l_0_3_72)))
 (let ((?x2520 (* 2.0 l_0_3_64)))
 (let ((?x2521 (* ?x2520 l_0_3_71)))
 (let ((?x2517 (* 2.0 l_0_3_51)))
 (let ((?x2518 (* ?x2517 l_0_3_58)))
 (let ((?x2514 (* 2.0 l_0_3_50)))
 (let ((?x2515 (* ?x2514 l_0_3_57)))
 (let ((?x2511 (* 2.0 l_0_3_49)))
 (let ((?x2512 (* ?x2511 l_0_3_56)))
 (let ((?x2459 (* l_0_3_30 l_0_3_30)))
 (let ((?x2453 (* l_0_3_29 l_0_3_29)))
 (let ((?x2447 (* l_0_3_28 l_0_3_28)))
 (let ((?x2441 (* l_0_3_27 l_0_3_27)))
 (let ((?x2435 (* l_0_3_26 l_0_3_26)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2504 (* ?x2375 l_0_3_19)))
 (let ((?x2372 (* l_0_3_15 l_0_3_15)))
 (let ((?x2369 (* l_0_3_14 l_0_3_14)))
 (let ((?x2366 (* l_0_3_13 l_0_3_13)))
 (let ((?x2363 (* l_0_3_12 l_0_3_12)))
 (let ((?x2500 (- (- (* (* 2.0 l_0_3_1) l_0_3_4) (* l_0_3_11 l_0_3_11)) ?x2363)))
 (let ((?x2508 (+ (+ (+ (- (- (- (- ?x2500 ?x2366) ?x2369) ?x2372) ?x2504) ?x2435) ?x2441) ?x2447)))
 (let ((?x2525 (+ (+ (- (- (- (+ (+ ?x2508 ?x2453) ?x2459) ?x2512) ?x2515) ?x2518) ?x2521) ?x2524)))
 (= (+ ?x2525 ?x2527) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x2636 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x2633 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x2630 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x2627 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x2624 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2621 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2618 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2615 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2459 (* l_0_3_30 l_0_3_30)))
 (let ((?x2453 (* l_0_3_29 l_0_3_29)))
 (let ((?x2447 (* l_0_3_28 l_0_3_28)))
 (let ((?x2441 (* l_0_3_27 l_0_3_27)))
 (let ((?x2435 (* l_0_3_26 l_0_3_26)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2592 (* ?x2375 l_0_3_22)))
 (let ((?x2372 (* l_0_3_15 l_0_3_15)))
 (let ((?x2369 (* l_0_3_14 l_0_3_14)))
 (let ((?x2366 (* l_0_3_13 l_0_3_13)))
 (let ((?x2363 (* l_0_3_12 l_0_3_12)))
 (let ((?x2577 (+ (+ (* (* 2.0 l_0_3_1) l_0_3_7) (* l_0_3_11 l_0_3_11)) ?x2363)))
 (let ((?x2596 (- (- (- (- (+ (+ (+ ?x2577 ?x2366) ?x2369) ?x2372) ?x2592) ?x2435) ?x2441) ?x2447)))
 (let ((?x2604 (+ (+ (- (- ?x2596 ?x2453) ?x2459) (* 1.0 (* l_0_3_41 l_0_3_41))) (* 1.0 (* l_0_3_42 l_0_3_42)))))
 (let ((?x2610 (+ (+ ?x2604 (* 1.0 (* l_0_3_43 l_0_3_43))) (* 1.0 (* l_0_3_44 l_0_3_44)))))
 (let ((?x2622 (- (- (- (+ ?x2610 (* 1.0 (* l_0_3_45 l_0_3_45))) ?x2615) ?x2618) ?x2621)))
 (= (+ (+ (+ (+ (- ?x2622 ?x2624) ?x2627) ?x2630) ?x2633) ?x2636) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2423 (* l_0_3_75 l_0_3_75)))
 (let ((?x2421 (* l_0_3_74 l_0_3_74)))
 (let ((?x2419 (* l_0_3_73 l_0_3_73)))
 (let ((?x2417 (* l_0_3_72 l_0_3_72)))
 (let ((?x2415 (* l_0_3_71 l_0_3_71)))
 (let ((?x2407 (* l_0_3_60 l_0_3_60)))
 (let ((?x2405 (* l_0_3_59 l_0_3_59)))
 (let ((?x2403 (* l_0_3_58 l_0_3_58)))
 (let ((?x2401 (* l_0_3_57 l_0_3_57)))
 (let ((?x2399 (* l_0_3_56 l_0_3_56)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2694 (* ?x2375 l_0_3_26)))
 (let ((?x2695 (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x2694)))
 (let ((?x2702 (+ (+ (- (- (- (- (- ?x2695 ?x2399) ?x2401) ?x2403) ?x2405) ?x2407) ?x2415) ?x2417)))
 (= (+ (+ (+ ?x2702 ?x2419) ?x2421) ?x2423) 0.0))))))))))))))))
(assert
 (let ((?x2739 (* l_0_3_3 l_0_3_3)))
 (let ((?x2737 (* l_0_3_2 l_0_3_2)))
 (let ((?x2740 (+ (+ (- (* (- l_0_3_17) l_0_3_17) (* l_0_3_18 l_0_3_18)) ?x2737) ?x2739)))
 (= ?x2740 0.0)))))
(assert
 (let ((?x2760 (* 2.0 l_0_3_3)))
 (let ((?x2761 (* ?x2760 l_0_3_5)))
 (let ((?x2757 (* 2.0 l_0_3_2)))
 (let ((?x2758 (* ?x2757 l_0_3_4)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2755 (* ?x2754 l_0_3_20)))
 (let ((?x2748 (* (- 2.0) l_0_3_17)))
 (let ((?x2753 (* ?x2748 l_0_3_19)))
 (= (+ (+ (- ?x2753 ?x2755) ?x2758) ?x2761) 0.0))))))))))
(assert
 (let ((?x2760 (* 2.0 l_0_3_3)))
 (let ((?x2784 (* ?x2760 l_0_3_8)))
 (let ((?x2757 (* 2.0 l_0_3_2)))
 (let ((?x2782 (* ?x2757 l_0_3_7)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2775 (* ?x2754 l_0_3_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x2775) ?x2782) ?x2784) 0.0))))))))
(assert
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2810 (* ?x2754 l_0_3_27)))
 (let ((?x2807 (* 2.0 l_0_3_17)))
 (let ((?x2808 (* ?x2807 l_0_3_26)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2805 (* ?x2799 l_0_3_3)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2798 (* ?x2796 l_0_3_2)))
 (= (- (- (+ ?x2798 ?x2805) ?x2808) ?x2810) 0.0))))))))))
(assert
 (let ((?x2841 (* l_0_3_6 l_0_3_6)))
 (let ((?x2839 (* l_0_3_5 l_0_3_5)))
 (let ((?x2837 (* l_0_3_4 l_0_3_4)))
 (let ((?x2835 (* l_0_3_21 l_0_3_21)))
 (let ((?x2838 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2835) ?x2837)))
 (= (+ (+ ?x2838 ?x2839) ?x2841) 0.0)))))))
(assert
 (let ((?x2873 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2870 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2867 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2864 (* ?x2863 l_0_3_24)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2861 (* ?x2860 l_0_3_23)))
 (let ((?x2871 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x2861) ?x2864) ?x2867) ?x2870)))
 (= (+ ?x2871 ?x2873) 0.0))))))))))
(assert
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2910 (* ?x2863 l_0_3_28)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2908 (* ?x2860 l_0_3_27)))
 (let ((?x2905 (* 2.0 l_0_3_19)))
 (let ((?x2906 (* ?x2905 l_0_3_26)))
 (let ((?x2896 (* 2.0 l_0_3_13)))
 (let ((?x2903 (* ?x2896 l_0_3_6)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2893 (* ?x2799 l_0_3_5)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2891 (* ?x2796 l_0_3_4)))
 (= (- (- (- (+ (+ ?x2891 ?x2893) ?x2903) ?x2906) ?x2908) ?x2910) 0.0))))))))))))))
(assert
 (let ((?x2957 (* l_0_3_9 l_0_3_9)))
 (let ((?x2955 (* l_0_3_8 l_0_3_8)))
 (let ((?x2953 (* l_0_3_7 l_0_3_7)))
 (let ((?x2611 (* l_0_3_45 l_0_3_45)))
 (let ((?x2608 (* l_0_3_44 l_0_3_44)))
 (let ((?x2605 (* l_0_3_43 l_0_3_43)))
 (let ((?x2602 (* l_0_3_42 l_0_3_42)))
 (let ((?x2599 (* l_0_3_41 l_0_3_41)))
 (let ((?x2946 (* l_0_3_25 l_0_3_25)))
 (let ((?x2944 (* l_0_3_24 l_0_3_24)))
 (let ((?x2942 (* l_0_3_23 l_0_3_23)))
 (let ((?x2945 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2942) ?x2944)))
 (let ((?x2947 (- ?x2945 ?x2946)))
 (let ((?x2956 (+ (+ (- (- (- (- (- ?x2947 ?x2599) ?x2602) ?x2605) ?x2608) ?x2611) ?x2953) ?x2955)))
 (= (+ ?x2956 ?x2957) 0.0))))))))))))))))
(assert
 (let ((?x3009 (* 2.0 l_0_3_25)))
 (let ((?x3010 (* ?x3009 l_0_3_29)))
 (let ((?x3006 (* 2.0 l_0_3_24)))
 (let ((?x3007 (* ?x3006 l_0_3_28)))
 (let ((?x3003 (* 2.0 l_0_3_23)))
 (let ((?x3004 (* ?x3003 l_0_3_27)))
 (let ((?x3000 (* 2.0 l_0_3_22)))
 (let ((?x3001 (* ?x3000 l_0_3_26)))
 (let ((?x2896 (* 2.0 l_0_3_13)))
 (let ((?x2998 (* ?x2896 l_0_3_9)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2996 (* ?x2799 l_0_3_8)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2994 (* ?x2796 l_0_3_7)))
 (let ((?x3002 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2994) ?x2996) ?x2998) ?x3001)))
 (let ((?x3011 (- (- (- ?x3002 ?x3004) ?x3007) ?x3010)))
 (= ?x3011 0.0))))))))))))))))))
(assert
 (let ((?x2459 (* l_0_3_30 l_0_3_30)))
 (let ((?x2453 (* l_0_3_29 l_0_3_29)))
 (let ((?x2447 (* l_0_3_28 l_0_3_28)))
 (let ((?x2441 (* l_0_3_27 l_0_3_27)))
 (let ((?x2435 (* l_0_3_26 l_0_3_26)))
 (let ((?x2372 (* l_0_3_15 l_0_3_15)))
 (let ((?x2369 (* l_0_3_14 l_0_3_14)))
 (let ((?x2366 (* l_0_3_13 l_0_3_13)))
 (let ((?x3049 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x2366) ?x2369)))
 (= (- (- (- (- (- (+ ?x3049 ?x2372) ?x2435) ?x2441) ?x2447) ?x2453) ?x2459) 0.0)))))))))))
(assert
 (let ((?x2294 (* l_0_3_61 l_0_3_61)))
 (let ((?x2292 (* l_0_3_46 l_0_3_46)))
 (let ((?x2241 (* l_0_3_1 l_0_3_1)))
 (let ((?x3069 (* 2.0 ?x2241)))
 (let ((?x3075 (- (- (+ (- ?x3069 (* (* 2.0 l_0_3_16) l_0_3_16)) ?x2292) ?x2294) (* (* 2.0 l_0_3_76) l_0_3_77))))
 (= ?x3075 0.0)))))))
(assert
 (let ((?x3103 (* l_0_3_78 l_0_3_78)))
 (let ((?x3101 (* l_0_3_77 l_0_3_77)))
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x3099 (* ?x2247 l_0_3_62)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x3097 (* ?x2244 l_0_3_47)))
 (let ((?x3096 (- (* (* 4.0 l_0_3_1) l_0_3_2) (* (* 4.0 l_0_3_16) l_0_3_17))))
 (= (- (- (- (+ ?x3096 ?x3097) ?x3099) ?x3101) ?x3103) 0.0)))))))))
(assert
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x3137 (* ?x2247 l_0_3_64)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x3135 (* ?x2244 l_0_3_49)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2376 (* ?x2375 l_0_3_17)))
 (let ((?x3131 (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) (* (* 4.0 l_0_3_1) l_0_3_4))))
 (let ((?x3138 (- (+ (- (+ ?x3131 ?x2376) (* (* 4.0 l_0_3_16) l_0_3_19)) ?x3135) ?x3137)))
 (let ((?x3144 (- (- ?x3138 (* (* 2.0 l_0_3_77) l_0_3_79)) (* (* 2.0 l_0_3_78) l_0_3_80))))
 (= ?x3144 0.0)))))))))))
(assert
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x3189 (* ?x2247 l_0_3_67)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x3187 (* ?x2244 l_0_3_52)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3185 (* ?x3184 l_0_3_32)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2376 (* ?x2375 l_0_3_17)))
 (let ((?x2356 (* 2.0 l_0_3_1)))
 (let ((?x2359 (* ?x2356 l_0_3_2)))
 (let ((?x3183 (- (- (+ ?x2359 (* (* 4.0 l_0_3_1) l_0_3_7)) ?x2376) (* (* 4.0 l_0_3_16) l_0_3_22))))
 (let ((?x3192 (- (- (+ (+ ?x3183 ?x3185) ?x3187) ?x3189) (* (* 2.0 l_0_3_77) l_0_3_82))))
 (= (- ?x3192 (* (* 2.0 l_0_3_78) l_0_3_83)) 0.0))))))))))))))
(assert
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x2248 (* ?x2247 l_0_3_71)))
 (let ((?x3099 (* ?x2247 l_0_3_62)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x2245 (* ?x2244 l_0_3_56)))
 (let ((?x3097 (* ?x2244 l_0_3_47)))
 (let ((?x3231 (- (* (* 4.0 l_0_3_1) l_0_3_11) (* (* 4.0 l_0_3_16) l_0_3_26))))
 (let ((?x3237 (- (- (+ (+ (- ?x3231 ?x3097) ?x2245) ?x3099) ?x2248) (* (* 2.0 l_0_3_77) l_0_3_86))))
 (= (- ?x3237 (* (* 2.0 l_0_3_78) l_0_3_87)) 0.0))))))))))
(assert
 (let ((?x3282 (* l_0_3_63 l_0_3_63)))
 (let ((?x3280 (* l_0_3_62 l_0_3_62)))
 (let ((?x3278 (* l_0_3_48 l_0_3_48)))
 (let ((?x3276 (* l_0_3_47 l_0_3_47)))
 (let ((?x3271 (- (* (* (- 2.0) l_0_3_17) l_0_3_17) (* (* 2.0 l_0_3_18) l_0_3_18))))
 (let ((?x3275 (+ (+ ?x3271 (* 2.0 (* l_0_3_2 l_0_3_2))) (* 2.0 (* l_0_3_3 l_0_3_3)))))
 (= (- (- (+ (+ ?x3275 ?x3276) ?x3278) ?x3280) ?x3282) 0.0))))))))
(assert
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x3326 (* ?x2412 l_0_3_65)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x3324 (* ?x2409 l_0_3_64)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x3322 (* ?x2396 l_0_3_50)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x3320 (* ?x2393 l_0_3_49)))
 (let ((?x2739 (* l_0_3_3 l_0_3_3)))
 (let ((?x2737 (* l_0_3_2 l_0_3_2)))
 (let ((?x2735 (* l_0_3_18 l_0_3_18)))
 (let ((?x3310 (- (+ (* (* (- 4.0) l_0_3_17) l_0_3_19) (* l_0_3_17 l_0_3_17)) (* (* 4.0 l_0_3_18) l_0_3_20))))
 (let ((?x3318 (+ (- (+ (+ ?x3310 ?x2735) (* (* 4.0 l_0_3_2) l_0_3_4)) ?x2737) (* (* 4.0 l_0_3_3) l_0_3_5))))
 (= (- (- (+ (+ (- ?x3318 ?x2739) ?x3320) ?x3322) ?x3324) ?x3326) 0.0)))))))))))))))
(assert
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x3385 (* ?x2412 l_0_3_68)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x3383 (* ?x2409 l_0_3_67)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x3381 (* ?x2396 l_0_3_53)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x3379 (* ?x2393 l_0_3_52)))
 (let ((?x2739 (* l_0_3_3 l_0_3_3)))
 (let ((?x2737 (* l_0_3_2 l_0_3_2)))
 (let ((?x2735 (* l_0_3_18 l_0_3_18)))
 (let ((?x3365 (- (- (* (* (- 4.0) l_0_3_17) l_0_3_22) (* l_0_3_17 l_0_3_17)) (* (* 4.0 l_0_3_18) l_0_3_23))))
 (let ((?x3371 (+ (+ (+ (- ?x3365 ?x2735) (* (* 4.0 l_0_3_2) l_0_3_7)) ?x2737) (* (* 4.0 l_0_3_3) l_0_3_8))))
 (let ((?x3378 (+ (+ (+ ?x3371 ?x2739) (* 1.0 (* l_0_3_32 l_0_3_32))) (* 1.0 (* l_0_3_33 l_0_3_33)))))
 (= (- (- (+ (+ ?x3378 ?x3379) ?x3381) ?x3383) ?x3385) 0.0))))))))))))))))
(assert
 (let ((?x3282 (* l_0_3_63 l_0_3_63)))
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x2413 (* ?x2412 l_0_3_72)))
 (let ((?x3280 (* l_0_3_62 l_0_3_62)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x2410 (* ?x2409 l_0_3_71)))
 (let ((?x3278 (* l_0_3_48 l_0_3_48)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x2397 (* ?x2396 l_0_3_57)))
 (let ((?x3276 (* l_0_3_47 l_0_3_47)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x2394 (* ?x2393 l_0_3_56)))
 (let ((?x3430 (+ (* (* 4.0 l_0_3_11) l_0_3_2) (* (* 4.0 l_0_3_12) l_0_3_3))))
 (let ((?x3435 (- (- ?x3430 (* (* 4.0 l_0_3_17) l_0_3_26)) (* (* 4.0 l_0_3_18) l_0_3_27))))
 (let ((?x3442 (- (+ (- (- (+ (- (+ ?x3435 ?x2394) ?x3276) ?x2397) ?x3278) ?x2410) ?x3280) ?x2413)))
 (= (+ ?x3442 ?x3282) 0.0)))))))))))))))))
(assert
 (let ((?x3501 (* l_0_3_66 l_0_3_66)))
 (let ((?x3499 (* l_0_3_65 l_0_3_65)))
 (let ((?x3497 (* l_0_3_64 l_0_3_64)))
 (let ((?x2841 (* l_0_3_6 l_0_3_6)))
 (let ((?x3495 (* 2.0 ?x2841)))
 (let ((?x3493 (* l_0_3_51 l_0_3_51)))
 (let ((?x3491 (* l_0_3_50 l_0_3_50)))
 (let ((?x2839 (* l_0_3_5 l_0_3_5)))
 (let ((?x3489 (* 2.0 ?x2839)))
 (let ((?x3487 (* l_0_3_49 l_0_3_49)))
 (let ((?x2837 (* l_0_3_4 l_0_3_4)))
 (let ((?x3485 (* 2.0 ?x2837)))
 (let ((?x2760 (* 2.0 l_0_3_3)))
 (let ((?x2761 (* ?x2760 l_0_3_5)))
 (let ((?x2757 (* 2.0 l_0_3_2)))
 (let ((?x2758 (* ?x2757 l_0_3_4)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2755 (* ?x2754 l_0_3_20)))
 (let ((?x3478 (- (+ (* (* 2.0 l_0_3_17) l_0_3_19) ?x2755) (* (* 2.0 l_0_3_19) l_0_3_19))))
 (let ((?x3483 (- (- (- ?x3478 ?x2758) (* (* 2.0 l_0_3_20) l_0_3_20)) (* (* 2.0 l_0_3_21) l_0_3_21))))
 (let ((?x3496 (+ (+ (+ (+ (+ (+ (- ?x3483 ?x2761) ?x3485) ?x3487) ?x3489) ?x3491) ?x3493) ?x3495)))
 (= (- (- (- ?x3496 ?x3497) ?x3499) ?x3501) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2526 (* 2.0 l_0_3_66)))
 (let ((?x3581 (* ?x2526 l_0_3_69)))
 (let ((?x2523 (* 2.0 l_0_3_65)))
 (let ((?x3579 (* ?x2523 l_0_3_68)))
 (let ((?x2520 (* 2.0 l_0_3_64)))
 (let ((?x3577 (* ?x2520 l_0_3_67)))
 (let ((?x2517 (* 2.0 l_0_3_51)))
 (let ((?x3572 (* ?x2517 l_0_3_54)))
 (let ((?x2514 (* 2.0 l_0_3_50)))
 (let ((?x3570 (* ?x2514 l_0_3_53)))
 (let ((?x2511 (* 2.0 l_0_3_49)))
 (let ((?x3565 (* ?x2511 l_0_3_52)))
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3560 (* ?x3559 l_0_3_35)))
 (let ((?x2760 (* 2.0 l_0_3_3)))
 (let ((?x2784 (* ?x2760 l_0_3_8)))
 (let ((?x2761 (* ?x2760 l_0_3_5)))
 (let ((?x2757 (* 2.0 l_0_3_2)))
 (let ((?x2782 (* ?x2757 l_0_3_7)))
 (let ((?x2758 (* ?x2757 l_0_3_4)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2775 (* ?x2754 l_0_3_23)))
 (let ((?x2755 (* ?x2754 l_0_3_20)))
 (let ((?x2807 (* 2.0 l_0_3_17)))
 (let ((?x3539 (* ?x2807 l_0_3_22)))
 (let ((?x2748 (* (- 2.0) l_0_3_17)))
 (let ((?x2753 (* ?x2748 l_0_3_19)))
 (let ((?x3545 (- (+ (- (+ ?x2753 ?x3539) ?x2755) ?x2775) (* (* 4.0 l_0_3_19) l_0_3_22))))
 (let ((?x3553 (- (- (- (+ ?x3545 ?x2758) ?x2782) (* (* 4.0 l_0_3_20) l_0_3_23)) (* (* 4.0 l_0_3_21) l_0_3_24))))
 (let ((?x3561 (+ (+ (- (+ ?x3553 ?x2761) ?x2784) (* (* 2.0 l_0_3_32) l_0_3_34)) ?x3560)))
 (let ((?x3569 (+ (+ (+ ?x3561 (* (* 4.0 l_0_3_4) l_0_3_7)) ?x3565) (* (* 4.0 l_0_3_5) l_0_3_8))))
 (let ((?x3578 (- (+ (+ (+ ?x3569 ?x3570) ?x3572) (* (* 4.0 l_0_3_6) l_0_3_9)) ?x3577)))
 (= (- (- ?x3578 ?x3579) ?x3581) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2526 (* 2.0 l_0_3_66)))
 (let ((?x2527 (* ?x2526 l_0_3_73)))
 (let ((?x2523 (* 2.0 l_0_3_65)))
 (let ((?x2524 (* ?x2523 l_0_3_72)))
 (let ((?x2520 (* 2.0 l_0_3_64)))
 (let ((?x2521 (* ?x2520 l_0_3_71)))
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x3326 (* ?x2412 l_0_3_65)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x3324 (* ?x2409 l_0_3_64)))
 (let ((?x2517 (* 2.0 l_0_3_51)))
 (let ((?x2518 (* ?x2517 l_0_3_58)))
 (let ((?x2514 (* 2.0 l_0_3_50)))
 (let ((?x2515 (* ?x2514 l_0_3_57)))
 (let ((?x2511 (* 2.0 l_0_3_49)))
 (let ((?x2512 (* ?x2511 l_0_3_56)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x3322 (* ?x2396 l_0_3_50)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x3320 (* ?x2393 l_0_3_49)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2810 (* ?x2754 l_0_3_27)))
 (let ((?x2807 (* 2.0 l_0_3_17)))
 (let ((?x2808 (* ?x2807 l_0_3_26)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2805 (* ?x2799 l_0_3_3)))
 (let ((?x3658 (+ (* (* (- 2.0) l_0_3_11) l_0_3_2) (* (* 4.0 l_0_3_11) l_0_3_4))))
 (let ((?x3664 (+ (+ (- ?x3658 ?x2805) (* (* 4.0 l_0_3_12) l_0_3_5)) (* (* 4.0 l_0_3_13) l_0_3_6))))
 (let ((?x3670 (- (- (+ (+ ?x3664 ?x2808) ?x2810) (* (* 4.0 l_0_3_19) l_0_3_26)) (* (* 4.0 l_0_3_20) l_0_3_27))))
 (let ((?x3675 (+ (- (- (- ?x3670 (* (* 4.0 l_0_3_21) l_0_3_28)) ?x3320) ?x3322) ?x2512)))
 (let ((?x3682 (- (- (- (+ (+ (+ (+ ?x3675 ?x2515) ?x2518) ?x3324) ?x3326) ?x2521) ?x2524) ?x2527)))
 (= ?x3682 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3765 (* l_0_3_70 l_0_3_70)))
 (let ((?x3761 (* l_0_3_69 l_0_3_69)))
 (let ((?x3759 (* l_0_3_68 l_0_3_68)))
 (let ((?x3757 (* l_0_3_67 l_0_3_67)))
 (let ((?x3755 (* l_0_3_55 l_0_3_55)))
 (let ((?x3753 (* l_0_3_54 l_0_3_54)))
 (let ((?x3751 (* l_0_3_53 l_0_3_53)))
 (let ((?x3749 (* l_0_3_52 l_0_3_52)))
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3747 (* ?x3559 l_0_3_38)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3185 (* ?x3184 l_0_3_32)))
 (let ((?x2760 (* 2.0 l_0_3_3)))
 (let ((?x2784 (* ?x2760 l_0_3_8)))
 (let ((?x2757 (* 2.0 l_0_3_2)))
 (let ((?x2782 (* ?x2757 l_0_3_7)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2775 (* ?x2754 l_0_3_23)))
 (let ((?x2807 (* 2.0 l_0_3_17)))
 (let ((?x3539 (* ?x2807 l_0_3_22)))
 (let ((?x3736 (- (+ (- (- (* 2.0 (* l_0_3_10 l_0_3_10)) ?x3539) ?x2775) ?x2782) (* (* 2.0 l_0_3_22) l_0_3_22))))
 (let ((?x3740 (- (- ?x3736 (* (* 2.0 l_0_3_23) l_0_3_23)) (* (* 2.0 l_0_3_24) l_0_3_24))))
 (let ((?x3746 (+ (- (+ (- ?x3740 (* (* 2.0 l_0_3_25) l_0_3_25)) ?x2784) ?x3185) (* (* 2.0 l_0_3_32) l_0_3_37))))
 (let ((?x3760 (- (- (+ (+ (+ (+ (+ ?x3746 ?x3747) ?x3749) ?x3751) ?x3753) ?x3755) ?x3757) ?x3759)))
 (let ((?x3768 (+ (- (+ (- ?x3760 ?x3761) (* 2.0 (* l_0_3_7 l_0_3_7))) ?x3765) (* 2.0 (* l_0_3_8 l_0_3_8)))))
 (= (+ ?x3768 (* 2.0 (* l_0_3_9 l_0_3_9))) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x2636 (* (* 2.0 l_0_3_70) l_0_3_74)))
 (let ((?x2633 (* (* 2.0 l_0_3_69) l_0_3_73)))
 (let ((?x2630 (* (* 2.0 l_0_3_68) l_0_3_72)))
 (let ((?x2627 (* (* 2.0 l_0_3_67) l_0_3_71)))
 (let ((?x2412 (* 2.0 l_0_3_63)))
 (let ((?x3385 (* ?x2412 l_0_3_68)))
 (let ((?x2409 (* 2.0 l_0_3_62)))
 (let ((?x3383 (* ?x2409 l_0_3_67)))
 (let ((?x2624 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2621 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2618 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2615 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2396 (* 2.0 l_0_3_48)))
 (let ((?x3381 (* ?x2396 l_0_3_53)))
 (let ((?x2393 (* 2.0 l_0_3_47)))
 (let ((?x3379 (* ?x2393 l_0_3_52)))
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3859 (* ?x3559 l_0_3_42)))
 (let ((?x2754 (* 2.0 l_0_3_18)))
 (let ((?x2810 (* ?x2754 l_0_3_27)))
 (let ((?x2807 (* 2.0 l_0_3_17)))
 (let ((?x2808 (* ?x2807 l_0_3_26)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2805 (* ?x2799 l_0_3_3)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2798 (* ?x2796 l_0_3_2)))
 (let ((?x3837 (+ (+ (* (* 4.0 l_0_3_10) l_0_3_14) ?x2798) (* (* 4.0 l_0_3_11) l_0_3_7))))
 (let ((?x3842 (+ (+ (+ ?x3837 ?x2805) (* (* 4.0 l_0_3_12) l_0_3_8)) (* (* 4.0 l_0_3_13) l_0_3_9))))
 (let ((?x3850 (- (- (- (- ?x3842 ?x2808) ?x2810) (* (* 4.0 l_0_3_22) l_0_3_26)) (* (* 4.0 l_0_3_23) l_0_3_27))))
 (let ((?x3856 (- (- ?x3850 (* (* 4.0 l_0_3_24) l_0_3_28)) (* (* 4.0 l_0_3_25) l_0_3_29))))
 (let ((?x3862 (- (- (+ (+ ?x3856 (* (* 2.0 l_0_3_32) l_0_3_41)) ?x3859) ?x3379) ?x3381)))
 (let ((?x3869 (- (+ (+ (+ (+ (+ (+ ?x3862 ?x2615) ?x2618) ?x2621) ?x2624) ?x3383) ?x3385) ?x2627)))
 (= (- (- (- ?x3869 ?x2630) ?x2633) ?x2636) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3935 (* ?x3184 l_0_3_34)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2592 (* ?x2375 l_0_3_22)))
 (let ((?x2504 (* ?x2375 l_0_3_19)))
 (let ((?x2356 (* 2.0 l_0_3_1)))
 (let ((?x2573 (* ?x2356 l_0_3_7)))
 (let ((?x2498 (* ?x2356 l_0_3_4)))
 (let ((?x3939 (- (+ (+ (- (- ?x2498 ?x2573) ?x2504) ?x2592) ?x3935) (* (* 2.0 l_0_3_79) l_0_3_82))))
 (let ((?x3945 (- (- ?x3939 (* (* 2.0 l_0_3_80) l_0_3_83)) (* (* 2.0 l_0_3_81) l_0_3_84))))
 (= ?x3945 0.0))))))))))))
(assert
 (let ((?x3964 (* l_0_3_85 l_0_3_85)))
 (let ((?x3962 (* l_0_3_84 l_0_3_84)))
 (let ((?x3960 (* l_0_3_83 l_0_3_83)))
 (let ((?x3958 (* l_0_3_82 l_0_3_82)))
 (let ((?x2320 (* l_0_3_31 l_0_3_31)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3955 (* ?x3184 l_0_3_37)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2592 (* ?x2375 l_0_3_22)))
 (let ((?x2356 (* 2.0 l_0_3_1)))
 (let ((?x2573 (* ?x2356 l_0_3_7)))
 (let ((?x3965 (- (- (- (- (- (+ (- ?x2573 ?x2592) ?x3955) ?x2320) ?x3958) ?x3960) ?x3962) ?x3964)))
 (= ?x3965 0.0))))))))))))))
(assert
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x3189 (* ?x2247 l_0_3_67)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x3187 (* ?x2244 l_0_3_52)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3977 (* ?x3184 l_0_3_41)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2694 (* ?x2375 l_0_3_26)))
 (let ((?x2695 (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x2694)))
 (let ((?x3983 (- (+ (- (+ ?x2695 ?x3977) ?x3187) ?x3189) (* (* 2.0 l_0_3_82) l_0_3_86))))
 (let ((?x3989 (- (- ?x3983 (* (* 2.0 l_0_3_83) l_0_3_87)) (* (* 2.0 l_0_3_84) l_0_3_88))))
 (= (- ?x3989 (* (* 2.0 l_0_3_85) l_0_3_89)) 0.0)))))))))))))
(assert
 (let ((?x2841 (* l_0_3_6 l_0_3_6)))
 (let ((?x2873 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2839 (* l_0_3_5 l_0_3_5)))
 (let ((?x2870 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2837 (* l_0_3_4 l_0_3_4)))
 (let ((?x2867 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2835 (* l_0_3_21 l_0_3_21)))
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2864 (* ?x2863 l_0_3_24)))
 (let ((?x2833 (* l_0_3_20 l_0_3_20)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2861 (* ?x2860 l_0_3_23)))
 (let ((?x667 (+ (- (* (* 2.0 l_0_3_19) l_0_3_22) (* l_0_3_19 l_0_3_19)) ?x2861)))
 (let ((?x4008 (+ (- (+ (- ?x667 ?x2833) ?x2864) ?x2835) (* 1.0 (* l_0_3_34 l_0_3_34)))))
 (let ((?x4014 (+ (+ ?x4008 (* 1.0 (* l_0_3_35 l_0_3_35))) (* 1.0 (* l_0_3_36 l_0_3_36)))))
 (= (+ (- (+ (- (+ (- ?x4014 ?x2867) ?x2837) ?x2870) ?x2839) ?x2873) ?x2841) 0.0)))))))))))))))))
(assert
 (let ((?x2957 (* l_0_3_9 l_0_3_9)))
 (let ((?x2955 (* l_0_3_8 l_0_3_8)))
 (let ((?x2953 (* l_0_3_7 l_0_3_7)))
 (let ((?x2873 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2870 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2867 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4052 (* 2.0 l_0_3_36)))
 (let ((?x4053 (* ?x4052 l_0_3_39)))
 (let ((?x4049 (* 2.0 l_0_3_35)))
 (let ((?x4050 (* ?x4049 l_0_3_38)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3935 (* ?x3184 l_0_3_34)))
 (let ((?x2946 (* l_0_3_25 l_0_3_25)))
 (let ((?x2944 (* l_0_3_24 l_0_3_24)))
 (let ((?x2942 (* l_0_3_23 l_0_3_23)))
 (let ((?x2940 (* l_0_3_22 l_0_3_22)))
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2864 (* ?x2863 l_0_3_24)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2861 (* ?x2860 l_0_3_23)))
 (let ((?x4039 (- (- (* (- l_0_3_10) l_0_3_10) (* (* 2.0 l_0_3_19) l_0_3_22)) ?x2861)))
 (let ((?x4048 (+ (- (+ (+ (+ (+ (- ?x4039 ?x2864) ?x2940) ?x2942) ?x2944) ?x2946) ?x3935) (* (* 2.0 l_0_3_34) l_0_3_37))))
 (let ((?x4059 (- (- (+ (+ (+ (+ (+ ?x4048 ?x4050) ?x4053) ?x2867) ?x2870) ?x2873) ?x2953) ?x2955)))
 (= (- ?x4059 ?x2957) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2526 (* 2.0 l_0_3_66)))
 (let ((?x3581 (* ?x2526 l_0_3_69)))
 (let ((?x2523 (* 2.0 l_0_3_65)))
 (let ((?x3579 (* ?x2523 l_0_3_68)))
 (let ((?x2520 (* 2.0 l_0_3_64)))
 (let ((?x3577 (* ?x2520 l_0_3_67)))
 (let ((?x2517 (* 2.0 l_0_3_51)))
 (let ((?x3572 (* ?x2517 l_0_3_54)))
 (let ((?x2514 (* 2.0 l_0_3_50)))
 (let ((?x3570 (* ?x2514 l_0_3_53)))
 (let ((?x2511 (* 2.0 l_0_3_49)))
 (let ((?x3565 (* ?x2511 l_0_3_52)))
 (let ((?x4052 (* 2.0 l_0_3_36)))
 (let ((?x4100 (* ?x4052 l_0_3_43)))
 (let ((?x4049 (* 2.0 l_0_3_35)))
 (let ((?x4098 (* ?x4049 l_0_3_42)))
 (let ((?x3009 (* 2.0 l_0_3_25)))
 (let ((?x3010 (* ?x3009 l_0_3_29)))
 (let ((?x3006 (* 2.0 l_0_3_24)))
 (let ((?x3007 (* ?x3006 l_0_3_28)))
 (let ((?x3003 (* 2.0 l_0_3_23)))
 (let ((?x3004 (* ?x3003 l_0_3_27)))
 (let ((?x3000 (* 2.0 l_0_3_22)))
 (let ((?x3001 (* ?x3000 l_0_3_26)))
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2910 (* ?x2863 l_0_3_28)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2908 (* ?x2860 l_0_3_27)))
 (let ((?x2905 (* 2.0 l_0_3_19)))
 (let ((?x2906 (* ?x2905 l_0_3_26)))
 (let ((?x2896 (* 2.0 l_0_3_13)))
 (let ((?x2998 (* ?x2896 l_0_3_9)))
 (let ((?x2903 (* ?x2896 l_0_3_6)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2996 (* ?x2799 l_0_3_8)))
 (let ((?x2893 (* ?x2799 l_0_3_5)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2994 (* ?x2796 l_0_3_7)))
 (let ((?x4085 (+ (- (+ (* (* (- 2.0) l_0_3_10) l_0_3_14) (* ?x2796 l_0_3_4)) ?x2994) ?x2893)))
 (let ((?x4092 (+ (- (- (- (- (+ (- ?x4085 ?x2996) ?x2903) ?x2998) ?x2906) ?x2908) ?x2910) ?x3001)))
 (let ((?x4097 (+ (+ (+ (+ ?x4092 ?x3004) ?x3007) ?x3010) (* (* 2.0 l_0_3_34) l_0_3_41))))
 (let ((?x4106 (+ (+ (- (- (- (+ (+ ?x4097 ?x4098) ?x4100) ?x3565) ?x3570) ?x3572) ?x3577) ?x3579)))
 (= (+ ?x4106 ?x3581) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2957 (* l_0_3_9 l_0_3_9)))
 (let ((?x2955 (* l_0_3_8 l_0_3_8)))
 (let ((?x2953 (* l_0_3_7 l_0_3_7)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3955 (* ?x3184 l_0_3_37)))
 (let ((?x2946 (* l_0_3_25 l_0_3_25)))
 (let ((?x2944 (* l_0_3_24 l_0_3_24)))
 (let ((?x2942 (* l_0_3_23 l_0_3_23)))
 (let ((?x2945 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_22 l_0_3_22)) ?x2942) ?x2944)))
 (let ((?x2947 (- ?x2945 ?x2946)))
 (let ((?x4123 (+ (+ (- ?x2947 ?x3955) (* 1.0 (* l_0_3_37 l_0_3_37))) (* 1.0 (* l_0_3_38 l_0_3_38)))))
 (let ((?x4129 (+ (+ ?x4123 (* 1.0 (* l_0_3_39 l_0_3_39))) (* 1.0 (* l_0_3_40 l_0_3_40)))))
 (= (+ (+ (+ ?x4129 ?x2953) ?x2955) ?x2957) 0.0))))))))))))))
(assert
 (let ((?x3765 (* l_0_3_70 l_0_3_70)))
 (let ((?x3761 (* l_0_3_69 l_0_3_69)))
 (let ((?x3759 (* l_0_3_68 l_0_3_68)))
 (let ((?x3757 (* l_0_3_67 l_0_3_67)))
 (let ((?x3755 (* l_0_3_55 l_0_3_55)))
 (let ((?x3753 (* l_0_3_54 l_0_3_54)))
 (let ((?x3751 (* l_0_3_53 l_0_3_53)))
 (let ((?x3749 (* l_0_3_52 l_0_3_52)))
 (let ((?x4147 (* (* 2.0 l_0_3_40) l_0_3_44)))
 (let ((?x4144 (* (* 2.0 l_0_3_39) l_0_3_43)))
 (let ((?x4141 (* (* 2.0 l_0_3_38) l_0_3_42)))
 (let ((?x3184 (* 2.0 l_0_3_31)))
 (let ((?x3977 (* ?x3184 l_0_3_41)))
 (let ((?x3009 (* 2.0 l_0_3_25)))
 (let ((?x3010 (* ?x3009 l_0_3_29)))
 (let ((?x3006 (* 2.0 l_0_3_24)))
 (let ((?x3007 (* ?x3006 l_0_3_28)))
 (let ((?x3003 (* 2.0 l_0_3_23)))
 (let ((?x3004 (* ?x3003 l_0_3_27)))
 (let ((?x3000 (* 2.0 l_0_3_22)))
 (let ((?x3001 (* ?x3000 l_0_3_26)))
 (let ((?x2896 (* 2.0 l_0_3_13)))
 (let ((?x2998 (* ?x2896 l_0_3_9)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2996 (* ?x2799 l_0_3_8)))
 (let ((?x2796 (* 2.0 l_0_3_11)))
 (let ((?x2994 (* ?x2796 l_0_3_7)))
 (let ((?x3002 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2994) ?x2996) ?x2998) ?x3001)))
 (let ((?x3011 (- (- (- ?x3002 ?x3004) ?x3007) ?x3010)))
 (let ((?x4145 (+ (+ (+ (- ?x3011 ?x3977) (* (* 2.0 l_0_3_37) l_0_3_41)) ?x4141) ?x4144)))
 (let ((?x4154 (+ (+ (- (- (- (- (+ ?x4145 ?x4147) ?x3749) ?x3751) ?x3753) ?x3755) ?x3757) ?x3759)))
 (= (+ (+ ?x4154 ?x3761) ?x3765) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x1150 (* l_0_3_81 l_0_3_81)))
 (let ((?x1146 (* l_0_3_80 l_0_3_80)))
 (let ((?x1151 (* l_0_3_79 l_0_3_79)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2504 (* ?x2375 l_0_3_19)))
 (let ((?x1140 (- (- (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x2504) ?x1151) ?x1146) ?x1150)))
 (= ?x1140 0.0))))))))
(assert
 (let ((?x2247 (* 2.0 l_0_3_61)))
 (let ((?x3137 (* ?x2247 l_0_3_64)))
 (let ((?x2244 (* 2.0 l_0_3_46)))
 (let ((?x3135 (* ?x2244 l_0_3_49)))
 (let ((?x2375 (* 2.0 l_0_3_16)))
 (let ((?x2694 (* ?x2375 l_0_3_26)))
 (let ((?x4184 (- (+ (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x2694) ?x3135) ?x3137) (* (* 2.0 l_0_3_79) l_0_3_86))))
 (let ((?x4188 (- (- ?x4184 (* (* 2.0 l_0_3_80) l_0_3_87)) (* (* 2.0 l_0_3_81) l_0_3_88))))
 (= ?x4188 0.0))))))))))
(assert
 (let ((?x2841 (* l_0_3_6 l_0_3_6)))
 (let ((?x2839 (* l_0_3_5 l_0_3_5)))
 (let ((?x2837 (* l_0_3_4 l_0_3_4)))
 (let ((?x2835 (* l_0_3_21 l_0_3_21)))
 (let ((?x4195 (- (+ (+ (* l_0_3_19 l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x2835) ?x2837)))
 (= (- (- ?x4195 ?x2839) ?x2841) 0.0)))))))
(assert
 (let ((?x3501 (* l_0_3_66 l_0_3_66)))
 (let ((?x3499 (* l_0_3_65 l_0_3_65)))
 (let ((?x3497 (* l_0_3_64 l_0_3_64)))
 (let ((?x3493 (* l_0_3_51 l_0_3_51)))
 (let ((?x3491 (* l_0_3_50 l_0_3_50)))
 (let ((?x3487 (* l_0_3_49 l_0_3_49)))
 (let ((?x2863 (* 2.0 l_0_3_21)))
 (let ((?x2910 (* ?x2863 l_0_3_28)))
 (let ((?x2860 (* 2.0 l_0_3_20)))
 (let ((?x2908 (* ?x2860 l_0_3_27)))
 (let ((?x2905 (* 2.0 l_0_3_19)))
 (let ((?x2906 (* ?x2905 l_0_3_26)))
 (let ((?x2896 (* 2.0 l_0_3_13)))
 (let ((?x2903 (* ?x2896 l_0_3_6)))
 (let ((?x2799 (* 2.0 l_0_3_12)))
 (let ((?x2893 (* ?x2799 l_0_3_5)))
 (let ((?x1263 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x2893) ?x2903) ?x2906) ?x2908)))
 (let ((?x1220 (+ (+ (+ (- (- (- (+ ?x1263 ?x2910) ?x3487) ?x3491) ?x3493) ?x3497) ?x3499) ?x3501)))
 (= ?x1220 0.0))))))))))))))))))))
(assert
 (= (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) 0.0))
(assert
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3560 (* ?x3559 l_0_3_35)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_34) ?x3560) 0.0))))
(assert
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3747 (* ?x3559 l_0_3_38)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_37) ?x3747) 0.0))))
(assert
 (let ((?x3559 (* 2.0 l_0_3_33)))
 (let ((?x3859 (* ?x3559 l_0_3_42)))
 (= (- (* (* (- 2.0) l_0_3_32) l_0_3_41) ?x3859) 0.0))))
(assert
 (let ((?x4012 (* l_0_3_36 l_0_3_36)))
 (= (- (- (* (- l_0_3_34) l_0_3_34) (* l_0_3_35 l_0_3_35)) ?x4012) 0.0)))
(assert
 (let ((?x4052 (* 2.0 l_0_3_36)))
 (let ((?x4053 (* ?x4052 l_0_3_39)))
 (let ((?x4049 (* 2.0 l_0_3_35)))
 (let ((?x4050 (* ?x4049 l_0_3_38)))
 (= (- (- (* (* (- 2.0) l_0_3_34) l_0_3_37) ?x4050) ?x4053) 0.0))))))
(assert
 (let ((?x4052 (* 2.0 l_0_3_36)))
 (let ((?x4100 (* ?x4052 l_0_3_43)))
 (let ((?x4049 (* 2.0 l_0_3_35)))
 (let ((?x4098 (* ?x4049 l_0_3_42)))
 (= (- (- (* (* (- 2.0) l_0_3_34) l_0_3_41) ?x4098) ?x4100) 0.0))))))
(assert
 (let ((?x4127 (* l_0_3_40 l_0_3_40)))
 (let ((?x4124 (* l_0_3_39 l_0_3_39)))
 (let ((?x4230 (- (- (- (* (- l_0_3_37) l_0_3_37) (* l_0_3_38 l_0_3_38)) ?x4124) ?x4127)))
 (= ?x4230 0.0)))))
(assert
 (let ((?x4147 (* (* 2.0 l_0_3_40) l_0_3_44)))
 (let ((?x4144 (* (* 2.0 l_0_3_39) l_0_3_43)))
 (let ((?x4141 (* (* 2.0 l_0_3_38) l_0_3_42)))
 (= (- (- (- (* (* (- 2.0) l_0_3_37) l_0_3_41) ?x4141) ?x4144) ?x4147) 0.0)))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (>= l_0_3_76 0.0))
(assert
 (>= l_0_3_78 0.0))
(assert
 (>= l_0_3_81 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (let ((?x4288 (* l_0_4_90 l_0_4_90)))
 (let ((?x4286 (* l_0_4_89 l_0_4_89)))
 (let ((?x4284 (* l_0_4_88 l_0_4_88)))
 (let ((?x4282 (* l_0_4_87 l_0_4_87)))
 (let ((?x4280 (* l_0_4_86 l_0_4_86)))
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x4278 (* ?x4277 l_0_4_71)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x4275 (* ?x4274 l_0_4_56)))
 (let ((?x4272 (* l_0_4_16 l_0_4_16)))
 (let ((?x4270 (* l_0_4_105 l_0_4_105)))
 (let ((?x4268 (* l_0_4_104 l_0_4_104)))
 (let ((?x4266 (* l_0_4_103 l_0_4_103)))
 (let ((?x4264 (* l_0_4_102 l_0_4_102)))
 (let ((?x4267 (- (- (- (* l_0_4_1 l_0_4_1) (* l_0_4_101 l_0_4_101)) ?x4264) ?x4266)))
 (let ((?x4283 (- (- (+ (- (- (- (- ?x4267 ?x4268) ?x4270) ?x4272) ?x4275) ?x4278) ?x4280) ?x4282)))
 (= (+ (- (- (- ?x4283 ?x4284) ?x4286) ?x4288) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x4320 (* l_0_4_61 l_0_4_61)))
 (let ((?x4318 (* l_0_4_46 l_0_4_46)))
 (let ((?x4324 (- (+ (- (- _a_2_ (* (* 2.0 l_0_4_101) l_0_4_91)) ?x4318) ?x4320) (* (* 2.0 l_0_4_76) l_0_4_86))))
 (= (+ ?x4324 2.0) 0.0)))))
(assert
 (let ((?x1576 (+ (- (- _a_0_ (* l_0_4_76 l_0_4_76)) (* l_0_4_91 l_0_4_91)) 1.0)))
 (= ?x1576 0.0)))
(assert
 (let ((?x4343 (+ (- (+ _a_1_ (* l_0_4_1 l_0_4_1)) (* l_0_4_16 l_0_4_16)) (* 1.0 (* l_0_4_31 l_0_4_31)))))
 (let ((?x4348 (- (- ?x4343 (* (* 2.0 l_0_4_76) l_0_4_82)) (* (* 2.0 l_0_4_91) l_0_4_97))))
 (= ?x4348 0.0))))
(assert
 (let ((?x1635 (- (+ (* (- l_0_4_1) l_0_4_1) (* l_0_4_16 l_0_4_16)) (* (* 2.0 l_0_4_76) l_0_4_79))))
 (= (- (- ?x1635 (* (* 2.0 l_0_4_91) l_0_4_94)) 1.0) 0.0)))
(assert
 (let ((?x4436 (* l_0_4_75 l_0_4_75)))
 (let ((?x4434 (* l_0_4_74 l_0_4_74)))
 (let ((?x4432 (* l_0_4_73 l_0_4_73)))
 (let ((?x4430 (* l_0_4_72 l_0_4_72)))
 (let ((?x4428 (* l_0_4_71 l_0_4_71)))
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x4426 (* ?x4425 l_0_4_72)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x4423 (* ?x4422 l_0_4_71)))
 (let ((?x4420 (* l_0_4_60 l_0_4_60)))
 (let ((?x4418 (* l_0_4_59 l_0_4_59)))
 (let ((?x4416 (* l_0_4_58 l_0_4_58)))
 (let ((?x4414 (* l_0_4_57 l_0_4_57)))
 (let ((?x4412 (* l_0_4_56 l_0_4_56)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x4410 (* ?x4409 l_0_4_57)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x4407 (* ?x4406 l_0_4_56)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4389 (* ?x4388 l_0_4_17)))
 (let ((?x4371 (* 2.0 l_0_4_1)))
 (let ((?x4372 (* ?x4371 l_0_4_2)))
 (let ((?x4378 (+ (+ ?x4372 (* 2.0 (* l_0_4_11 l_0_4_11))) (* 2.0 (* l_0_4_12 l_0_4_12)))))
 (let ((?x4384 (+ (+ ?x4378 (* 2.0 (* l_0_4_13 l_0_4_13))) (* 2.0 (* l_0_4_14 l_0_4_14)))))
 (let ((?x4393 (- (- (+ ?x4384 (* 2.0 (* l_0_4_15 l_0_4_15))) ?x4389) (* (* 2.0 l_0_4_26) l_0_4_26))))
 (let ((?x4399 (- (- ?x4393 (* (* 2.0 l_0_4_27) l_0_4_27)) (* (* 2.0 l_0_4_28) l_0_4_28))))
 (let ((?x4405 (- (- ?x4399 (* (* 2.0 l_0_4_29) l_0_4_29)) (* (* 2.0 l_0_4_30) l_0_4_30))))
 (let ((?x4421 (+ (+ (+ (+ (+ (- (- ?x4405 ?x4407) ?x4410) ?x4412) ?x4414) ?x4416) ?x4418) ?x4420)))
 (let ((?x4437 (- (- (- (- (- (+ (+ ?x4421 ?x4423) ?x4426) ?x4428) ?x4430) ?x4432) ?x4434) ?x4436)))
 (= ?x4437 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x4517 (* 2.0 l_0_4_66)))
 (let ((?x4518 (* ?x4517 l_0_4_73)))
 (let ((?x4514 (* 2.0 l_0_4_65)))
 (let ((?x4515 (* ?x4514 l_0_4_72)))
 (let ((?x4511 (* 2.0 l_0_4_64)))
 (let ((?x4512 (* ?x4511 l_0_4_71)))
 (let ((?x4508 (* 2.0 l_0_4_51)))
 (let ((?x4509 (* ?x4508 l_0_4_58)))
 (let ((?x4505 (* 2.0 l_0_4_50)))
 (let ((?x4506 (* ?x4505 l_0_4_57)))
 (let ((?x4502 (* 2.0 l_0_4_49)))
 (let ((?x4503 (* ?x4502 l_0_4_56)))
 (let ((?x1697 (* l_0_4_30 l_0_4_30)))
 (let ((?x1691 (* l_0_4_29 l_0_4_29)))
 (let ((?x1688 (* l_0_4_28 l_0_4_28)))
 (let ((?x1667 (* l_0_4_27 l_0_4_27)))
 (let ((?x4447 (* l_0_4_26 l_0_4_26)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4495 (* ?x4388 l_0_4_19)))
 (let ((?x4385 (* l_0_4_15 l_0_4_15)))
 (let ((?x4382 (* l_0_4_14 l_0_4_14)))
 (let ((?x4379 (* l_0_4_13 l_0_4_13)))
 (let ((?x4376 (* l_0_4_12 l_0_4_12)))
 (let ((?x4491 (- (- (* (* 2.0 l_0_4_1) l_0_4_4) (* l_0_4_11 l_0_4_11)) ?x4376)))
 (let ((?x4499 (+ (+ (+ (- (- (- (- ?x4491 ?x4379) ?x4382) ?x4385) ?x4495) ?x4447) ?x1667) ?x1688)))
 (let ((?x4516 (+ (+ (- (- (- (+ (+ ?x4499 ?x1691) ?x1697) ?x4503) ?x4506) ?x4509) ?x4512) ?x4515)))
 (= (+ ?x4516 ?x4518) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4599 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x4596 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x4593 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x4590 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x4587 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x4584 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x4581 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x4578 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x1697 (* l_0_4_30 l_0_4_30)))
 (let ((?x1691 (* l_0_4_29 l_0_4_29)))
 (let ((?x1688 (* l_0_4_28 l_0_4_28)))
 (let ((?x1667 (* l_0_4_27 l_0_4_27)))
 (let ((?x4447 (* l_0_4_26 l_0_4_26)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4555 (* ?x4388 l_0_4_22)))
 (let ((?x4385 (* l_0_4_15 l_0_4_15)))
 (let ((?x4382 (* l_0_4_14 l_0_4_14)))
 (let ((?x4379 (* l_0_4_13 l_0_4_13)))
 (let ((?x4376 (* l_0_4_12 l_0_4_12)))
 (let ((?x4551 (+ (+ (* (* 2.0 l_0_4_1) l_0_4_7) (* l_0_4_11 l_0_4_11)) ?x4376)))
 (let ((?x4559 (- (- (- (- (+ (+ (+ ?x4551 ?x4379) ?x4382) ?x4385) ?x4555) ?x4447) ?x1667) ?x1688)))
 (let ((?x4567 (+ (+ (- (- ?x4559 ?x1691) ?x1697) (* 1.0 (* l_0_4_41 l_0_4_41))) (* 1.0 (* l_0_4_42 l_0_4_42)))))
 (let ((?x4573 (+ (+ ?x4567 (* 1.0 (* l_0_4_43 l_0_4_43))) (* 1.0 (* l_0_4_44 l_0_4_44)))))
 (let ((?x4585 (- (- (- (+ ?x4573 (* 1.0 (* l_0_4_45 l_0_4_45))) ?x4578) ?x4581) ?x4584)))
 (= (+ (+ (+ (+ (- ?x4585 ?x4587) ?x4590) ?x4593) ?x4596) ?x4599) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x4436 (* l_0_4_75 l_0_4_75)))
 (let ((?x4434 (* l_0_4_74 l_0_4_74)))
 (let ((?x4432 (* l_0_4_73 l_0_4_73)))
 (let ((?x4430 (* l_0_4_72 l_0_4_72)))
 (let ((?x4428 (* l_0_4_71 l_0_4_71)))
 (let ((?x4420 (* l_0_4_60 l_0_4_60)))
 (let ((?x4418 (* l_0_4_59 l_0_4_59)))
 (let ((?x4416 (* l_0_4_58 l_0_4_58)))
 (let ((?x4414 (* l_0_4_57 l_0_4_57)))
 (let ((?x4412 (* l_0_4_56 l_0_4_56)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4633 (* ?x4388 l_0_4_26)))
 (let ((?x4371 (* 2.0 l_0_4_1)))
 (let ((?x1849 (* ?x4371 l_0_4_11)))
 (let ((?x4654 (+ (- (- (- (- (- (- ?x1849 ?x4633) ?x4412) ?x4414) ?x4416) ?x4418) ?x4420) ?x4428)))
 (= (+ (+ (+ (+ ?x4654 ?x4430) ?x4432) ?x4434) ?x4436) 0.0)))))))))))))))))
(assert
 (let ((?x1919 (* l_0_4_3 l_0_4_3)))
 (let ((?x1911 (* l_0_4_2 l_0_4_2)))
 (let ((?x1921 (+ (+ (- (* (- l_0_4_17) l_0_4_17) (* l_0_4_18 l_0_4_18)) ?x1911) ?x1919)))
 (= ?x1921 0.0)))))
(assert
 (let ((?x1856 (* 2.0 l_0_4_3)))
 (let ((?x1852 (* ?x1856 l_0_4_5)))
 (let ((?x1832 (* 2.0 l_0_4_2)))
 (let ((?x1836 (* ?x1832 l_0_4_4)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x875 (* ?x1888 l_0_4_20)))
 (let ((?x1910 (* (- 2.0) l_0_4_17)))
 (let ((?x1890 (* ?x1910 l_0_4_19)))
 (= (+ (+ (- ?x1890 ?x875) ?x1836) ?x1852) 0.0))))))))))
(assert
 (let ((?x1856 (* 2.0 l_0_4_3)))
 (let ((?x4682 (* ?x1856 l_0_4_8)))
 (let ((?x1832 (* 2.0 l_0_4_2)))
 (let ((?x4680 (* ?x1832 l_0_4_7)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4678 (* ?x1888 l_0_4_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x4678) ?x4680) ?x4682) 0.0))))))))
(assert
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4701 (* ?x1888 l_0_4_27)))
 (let ((?x4698 (* 2.0 l_0_4_17)))
 (let ((?x4699 (* ?x4698 l_0_4_26)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x4696 (* ?x4690 l_0_4_3)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x4689 (* ?x1959 l_0_4_2)))
 (= (- (- (+ ?x4689 ?x4696) ?x4699) ?x4701) 0.0))))))))))
(assert
 (let ((?x4729 (* l_0_4_6 l_0_4_6)))
 (let ((?x4727 (* l_0_4_5 l_0_4_5)))
 (let ((?x4725 (* l_0_4_4 l_0_4_4)))
 (let ((?x4723 (* l_0_4_21 l_0_4_21)))
 (let ((?x4726 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4723) ?x4725)))
 (= (+ (+ ?x4726 ?x4727) ?x4729) 0.0)))))))
(assert
 (let ((?x4756 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4753 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4750 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4747 (* ?x4746 l_0_4_24)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4744 (* ?x4743 l_0_4_23)))
 (let ((?x4754 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x4744) ?x4747) ?x4750) ?x4753)))
 (= (+ ?x4754 ?x4756) 0.0))))))))))
(assert
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4787 (* ?x4746 l_0_4_28)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4785 (* ?x4743 l_0_4_27)))
 (let ((?x4782 (* 2.0 l_0_4_19)))
 (let ((?x4783 (* ?x4782 l_0_4_26)))
 (let ((?x4773 (* 2.0 l_0_4_13)))
 (let ((?x4780 (* ?x4773 l_0_4_6)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x4770 (* ?x4690 l_0_4_5)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x1979 (* ?x1959 l_0_4_4)))
 (= (- (- (- (+ (+ ?x1979 ?x4770) ?x4780) ?x4783) ?x4785) ?x4787) 0.0))))))))))))))
(assert
 (let ((?x4826 (* l_0_4_9 l_0_4_9)))
 (let ((?x4824 (* l_0_4_8 l_0_4_8)))
 (let ((?x4822 (* l_0_4_7 l_0_4_7)))
 (let ((?x4574 (* l_0_4_45 l_0_4_45)))
 (let ((?x4571 (* l_0_4_44 l_0_4_44)))
 (let ((?x4568 (* l_0_4_43 l_0_4_43)))
 (let ((?x4565 (* l_0_4_42 l_0_4_42)))
 (let ((?x4562 (* l_0_4_41 l_0_4_41)))
 (let ((?x4815 (* l_0_4_25 l_0_4_25)))
 (let ((?x4813 (* l_0_4_24 l_0_4_24)))
 (let ((?x4811 (* l_0_4_23 l_0_4_23)))
 (let ((?x4814 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4811) ?x4813)))
 (let ((?x4816 (- ?x4814 ?x4815)))
 (let ((?x4825 (+ (+ (- (- (- (- (- ?x4816 ?x4562) ?x4565) ?x4568) ?x4571) ?x4574) ?x4822) ?x4824)))
 (= (+ ?x4825 ?x4826) 0.0))))))))))))))))
(assert
 (let ((?x4844 (* 2.0 l_0_4_25)))
 (let ((?x4845 (* ?x4844 l_0_4_29)))
 (let ((?x4841 (* 2.0 l_0_4_24)))
 (let ((?x4842 (* ?x4841 l_0_4_28)))
 (let ((?x4838 (* 2.0 l_0_4_23)))
 (let ((?x4839 (* ?x4838 l_0_4_27)))
 (let ((?x2055 (* 2.0 l_0_4_22)))
 (let ((?x2049 (* ?x2055 l_0_4_26)))
 (let ((?x4773 (* 2.0 l_0_4_13)))
 (let ((?x2060 (* ?x4773 l_0_4_9)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x2076 (* ?x4690 l_0_4_8)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x2079 (* ?x1959 l_0_4_7)))
 (let ((?x4837 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x2079) ?x2076) ?x2060) ?x2049)))
 (let ((?x4846 (- (- (- ?x4837 ?x4839) ?x4842) ?x4845)))
 (= ?x4846 0.0))))))))))))))))))
(assert
 (let ((?x1697 (* l_0_4_30 l_0_4_30)))
 (let ((?x1691 (* l_0_4_29 l_0_4_29)))
 (let ((?x1688 (* l_0_4_28 l_0_4_28)))
 (let ((?x1667 (* l_0_4_27 l_0_4_27)))
 (let ((?x4447 (* l_0_4_26 l_0_4_26)))
 (let ((?x4385 (* l_0_4_15 l_0_4_15)))
 (let ((?x4382 (* l_0_4_14 l_0_4_14)))
 (let ((?x4379 (* l_0_4_13 l_0_4_13)))
 (let ((?x2129 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x4379) ?x4382)))
 (= (- (- (- (- (- (+ ?x2129 ?x4385) ?x4447) ?x1667) ?x1688) ?x1691) ?x1697) 0.0)))))))))))
(assert
 (let ((?x4320 (* l_0_4_61 l_0_4_61)))
 (let ((?x4318 (* l_0_4_46 l_0_4_46)))
 (let ((?x4261 (* l_0_4_1 l_0_4_1)))
 (let ((?x2160 (* 2.0 ?x4261)))
 (let ((?x4887 (- (- (+ (- ?x2160 (* (* 2.0 l_0_4_16) l_0_4_16)) ?x4318) ?x4320) (* (* 2.0 l_0_4_76) l_0_4_77))))
 (= (- ?x4887 (* (* 2.0 l_0_4_91) l_0_4_92)) 0.0)))))))
(assert
 (let ((?x4928 (* l_0_4_93 l_0_4_93)))
 (let ((?x4926 (* l_0_4_92 l_0_4_92)))
 (let ((?x4924 (* l_0_4_78 l_0_4_78)))
 (let ((?x4922 (* l_0_4_77 l_0_4_77)))
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x4920 (* ?x4277 l_0_4_62)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x4918 (* ?x4274 l_0_4_47)))
 (let ((?x4917 (- (* (* 4.0 l_0_4_1) l_0_4_2) (* (* 4.0 l_0_4_16) l_0_4_17))))
 (= (- (- (- (- (- (+ ?x4917 ?x4918) ?x4920) ?x4922) ?x4924) ?x4926) ?x4928) 0.0)))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x4966 (* ?x4277 l_0_4_64)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x4964 (* ?x4274 l_0_4_49)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4389 (* ?x4388 l_0_4_17)))
 (let ((?x4960 (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) (* (* 4.0 l_0_4_1) l_0_4_4))))
 (let ((?x4967 (- (+ (- (+ ?x4960 ?x4389) (* (* 4.0 l_0_4_16) l_0_4_19)) ?x4964) ?x4966)))
 (let ((?x4973 (- (- ?x4967 (* (* 2.0 l_0_4_77) l_0_4_79)) (* (* 2.0 l_0_4_78) l_0_4_80))))
 (let ((?x4979 (- (- ?x4973 (* (* 2.0 l_0_4_92) l_0_4_94)) (* (* 2.0 l_0_4_93) l_0_4_95))))
 (= ?x4979 0.0))))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x5010 (* ?x4277 l_0_4_67)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x5008 (* ?x4274 l_0_4_52)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5006 (* ?x5005 l_0_4_32)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4389 (* ?x4388 l_0_4_17)))
 (let ((?x4371 (* 2.0 l_0_4_1)))
 (let ((?x4372 (* ?x4371 l_0_4_2)))
 (let ((?x5004 (- (- (+ ?x4372 (* (* 4.0 l_0_4_1) l_0_4_7)) ?x4389) (* (* 4.0 l_0_4_16) l_0_4_22))))
 (let ((?x5013 (- (- (+ (+ ?x5004 ?x5006) ?x5008) ?x5010) (* (* 2.0 l_0_4_77) l_0_4_82))))
 (let ((?x5017 (- (- ?x5013 (* (* 2.0 l_0_4_78) l_0_4_83)) (* (* 2.0 l_0_4_92) l_0_4_97))))
 (= (- ?x5017 (* (* 2.0 l_0_4_93) l_0_4_98)) 0.0)))))))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x4278 (* ?x4277 l_0_4_71)))
 (let ((?x4920 (* ?x4277 l_0_4_62)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x4275 (* ?x4274 l_0_4_56)))
 (let ((?x4918 (* ?x4274 l_0_4_47)))
 (let ((?x2353 (- (* (* 4.0 l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x5040 (- (- ?x2353 (* (* 2.0 l_0_4_102) l_0_4_93)) (* (* 4.0 l_0_4_16) l_0_4_26))))
 (let ((?x5046 (- (- (+ (+ (- ?x5040 ?x4918) ?x4275) ?x4920) ?x4278) (* (* 2.0 l_0_4_77) l_0_4_86))))
 (= (- ?x5046 (* (* 2.0 l_0_4_78) l_0_4_87)) 0.0)))))))))))
(assert
 (let ((?x5076 (* l_0_4_63 l_0_4_63)))
 (let ((?x5074 (* l_0_4_62 l_0_4_62)))
 (let ((?x5072 (* l_0_4_48 l_0_4_48)))
 (let ((?x5070 (* l_0_4_47 l_0_4_47)))
 (let ((?x5065 (- (* (* (- 2.0) l_0_4_17) l_0_4_17) (* (* 2.0 l_0_4_18) l_0_4_18))))
 (let ((?x5069 (+ (+ ?x5065 (* 2.0 (* l_0_4_2 l_0_4_2))) (* 2.0 (* l_0_4_3 l_0_4_3)))))
 (= (- (- (+ (+ ?x5069 ?x5070) ?x5072) ?x5074) ?x5076) 0.0))))))))
(assert
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x5114 (* ?x4425 l_0_4_65)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x5112 (* ?x4422 l_0_4_64)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x5110 (* ?x4409 l_0_4_50)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x5108 (* ?x4406 l_0_4_49)))
 (let ((?x1919 (* l_0_4_3 l_0_4_3)))
 (let ((?x1911 (* l_0_4_2 l_0_4_2)))
 (let ((?x1899 (* l_0_4_18 l_0_4_18)))
 (let ((?x5098 (- (+ (* (* (- 4.0) l_0_4_17) l_0_4_19) (* l_0_4_17 l_0_4_17)) (* (* 4.0 l_0_4_18) l_0_4_20))))
 (let ((?x5106 (+ (- (+ (+ ?x5098 ?x1899) (* (* 4.0 l_0_4_2) l_0_4_4)) ?x1911) (* (* 4.0 l_0_4_3) l_0_4_5))))
 (= (- (- (+ (+ (- ?x5106 ?x1919) ?x5108) ?x5110) ?x5112) ?x5114) 0.0)))))))))))))))
(assert
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x5148 (* ?x4425 l_0_4_68)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x5146 (* ?x4422 l_0_4_67)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x5144 (* ?x4409 l_0_4_53)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x5142 (* ?x4406 l_0_4_52)))
 (let ((?x1919 (* l_0_4_3 l_0_4_3)))
 (let ((?x1911 (* l_0_4_2 l_0_4_2)))
 (let ((?x1899 (* l_0_4_18 l_0_4_18)))
 (let ((?x2565 (- (- (* (* (- 4.0) l_0_4_17) l_0_4_22) (* l_0_4_17 l_0_4_17)) (* (* 4.0 l_0_4_18) l_0_4_23))))
 (let ((?x5134 (+ (+ (+ (- ?x2565 ?x1899) (* (* 4.0 l_0_4_2) l_0_4_7)) ?x1911) (* (* 4.0 l_0_4_3) l_0_4_8))))
 (let ((?x5141 (+ (+ (+ ?x5134 ?x1919) (* 1.0 (* l_0_4_32 l_0_4_32))) (* 1.0 (* l_0_4_33 l_0_4_33)))))
 (= (- (- (+ (+ ?x5141 ?x5142) ?x5144) ?x5146) ?x5148) 0.0))))))))))))))))
(assert
 (let ((?x5076 (* l_0_4_63 l_0_4_63)))
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x4426 (* ?x4425 l_0_4_72)))
 (let ((?x5074 (* l_0_4_62 l_0_4_62)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x4423 (* ?x4422 l_0_4_71)))
 (let ((?x5072 (* l_0_4_48 l_0_4_48)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x4410 (* ?x4409 l_0_4_57)))
 (let ((?x5070 (* l_0_4_47 l_0_4_47)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x4407 (* ?x4406 l_0_4_56)))
 (let ((?x5181 (+ (* (* 4.0 l_0_4_11) l_0_4_2) (* (* 4.0 l_0_4_12) l_0_4_3))))
 (let ((?x5186 (- (- ?x5181 (* (* 4.0 l_0_4_17) l_0_4_26)) (* (* 4.0 l_0_4_18) l_0_4_27))))
 (let ((?x5193 (- (+ (- (- (+ (- (+ ?x5186 ?x4407) ?x5070) ?x4410) ?x5072) ?x4423) ?x5074) ?x4426)))
 (= (+ ?x5193 ?x5076) 0.0)))))))))))))))))
(assert
 (let ((?x5233 (* l_0_4_66 l_0_4_66)))
 (let ((?x5231 (* l_0_4_65 l_0_4_65)))
 (let ((?x5229 (* l_0_4_64 l_0_4_64)))
 (let ((?x5225 (* l_0_4_51 l_0_4_51)))
 (let ((?x5223 (* l_0_4_50 l_0_4_50)))
 (let ((?x5219 (* l_0_4_49 l_0_4_49)))
 (let ((?x1856 (* 2.0 l_0_4_3)))
 (let ((?x1852 (* ?x1856 l_0_4_5)))
 (let ((?x1832 (* 2.0 l_0_4_2)))
 (let ((?x1836 (* ?x1832 l_0_4_4)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x875 (* ?x1888 l_0_4_20)))
 (let ((?x2728 (- (+ (* (* 2.0 l_0_4_17) l_0_4_19) ?x875) (* (* 2.0 l_0_4_19) l_0_4_19))))
 (let ((?x5215 (- (- (- ?x2728 ?x1836) (* (* 2.0 l_0_4_20) l_0_4_20)) (* (* 2.0 l_0_4_21) l_0_4_21))))
 (let ((?x5222 (+ (+ (+ (- ?x5215 ?x1852) (* 2.0 (* l_0_4_4 l_0_4_4))) ?x5219) (* 2.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x5230 (- (+ (+ (+ ?x5222 ?x5223) ?x5225) (* 2.0 (* l_0_4_6 l_0_4_6))) ?x5229)))
 (= (- (- ?x5230 ?x5231) ?x5233) 0.0))))))))))))))))))
(assert
 (let ((?x4517 (* 2.0 l_0_4_66)))
 (let ((?x5294 (* ?x4517 l_0_4_69)))
 (let ((?x4514 (* 2.0 l_0_4_65)))
 (let ((?x5292 (* ?x4514 l_0_4_68)))
 (let ((?x4511 (* 2.0 l_0_4_64)))
 (let ((?x5290 (* ?x4511 l_0_4_67)))
 (let ((?x4508 (* 2.0 l_0_4_51)))
 (let ((?x5285 (* ?x4508 l_0_4_54)))
 (let ((?x4505 (* 2.0 l_0_4_50)))
 (let ((?x5283 (* ?x4505 l_0_4_53)))
 (let ((?x4502 (* 2.0 l_0_4_49)))
 (let ((?x5278 (* ?x4502 l_0_4_52)))
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5273 (* ?x5272 l_0_4_35)))
 (let ((?x1856 (* 2.0 l_0_4_3)))
 (let ((?x4682 (* ?x1856 l_0_4_8)))
 (let ((?x1852 (* ?x1856 l_0_4_5)))
 (let ((?x1832 (* 2.0 l_0_4_2)))
 (let ((?x4680 (* ?x1832 l_0_4_7)))
 (let ((?x1836 (* ?x1832 l_0_4_4)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4678 (* ?x1888 l_0_4_23)))
 (let ((?x875 (* ?x1888 l_0_4_20)))
 (let ((?x4698 (* 2.0 l_0_4_17)))
 (let ((?x5252 (* ?x4698 l_0_4_22)))
 (let ((?x1910 (* (- 2.0) l_0_4_17)))
 (let ((?x1890 (* ?x1910 l_0_4_19)))
 (let ((?x5258 (- (+ (- (+ ?x1890 ?x5252) ?x875) ?x4678) (* (* 4.0 l_0_4_19) l_0_4_22))))
 (let ((?x5266 (- (- (- (+ ?x5258 ?x1836) ?x4680) (* (* 4.0 l_0_4_20) l_0_4_23)) (* (* 4.0 l_0_4_21) l_0_4_24))))
 (let ((?x5274 (+ (+ (- (+ ?x5266 ?x1852) ?x4682) (* (* 2.0 l_0_4_32) l_0_4_34)) ?x5273)))
 (let ((?x5282 (+ (+ (+ ?x5274 (* (* 4.0 l_0_4_4) l_0_4_7)) ?x5278) (* (* 4.0 l_0_4_5) l_0_4_8))))
 (let ((?x5291 (- (+ (+ (+ ?x5282 ?x5283) ?x5285) (* (* 4.0 l_0_4_6) l_0_4_9)) ?x5290)))
 (= (- (- ?x5291 ?x5292) ?x5294) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4517 (* 2.0 l_0_4_66)))
 (let ((?x4518 (* ?x4517 l_0_4_73)))
 (let ((?x4514 (* 2.0 l_0_4_65)))
 (let ((?x4515 (* ?x4514 l_0_4_72)))
 (let ((?x4511 (* 2.0 l_0_4_64)))
 (let ((?x4512 (* ?x4511 l_0_4_71)))
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x5114 (* ?x4425 l_0_4_65)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x5112 (* ?x4422 l_0_4_64)))
 (let ((?x4508 (* 2.0 l_0_4_51)))
 (let ((?x4509 (* ?x4508 l_0_4_58)))
 (let ((?x4505 (* 2.0 l_0_4_50)))
 (let ((?x4506 (* ?x4505 l_0_4_57)))
 (let ((?x4502 (* 2.0 l_0_4_49)))
 (let ((?x4503 (* ?x4502 l_0_4_56)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x5110 (* ?x4409 l_0_4_50)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x5108 (* ?x4406 l_0_4_49)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4701 (* ?x1888 l_0_4_27)))
 (let ((?x4698 (* 2.0 l_0_4_17)))
 (let ((?x4699 (* ?x4698 l_0_4_26)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x4696 (* ?x4690 l_0_4_3)))
 (let ((?x5334 (+ (* (* (- 2.0) l_0_4_11) l_0_4_2) (* (* 4.0 l_0_4_11) l_0_4_4))))
 (let ((?x5340 (+ (+ (- ?x5334 ?x4696) (* (* 4.0 l_0_4_12) l_0_4_5)) (* (* 4.0 l_0_4_13) l_0_4_6))))
 (let ((?x5346 (- (- (+ (+ ?x5340 ?x4699) ?x4701) (* (* 4.0 l_0_4_19) l_0_4_26)) (* (* 4.0 l_0_4_20) l_0_4_27))))
 (let ((?x5351 (+ (- (- (- ?x5346 (* (* 4.0 l_0_4_21) l_0_4_28)) ?x5108) ?x5110) ?x4503)))
 (let ((?x5358 (- (- (- (+ (+ (+ (+ ?x5351 ?x4506) ?x4509) ?x5112) ?x5114) ?x4512) ?x4515) ?x4518)))
 (= ?x5358 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5392 (* l_0_4_70 l_0_4_70)))
 (let ((?x5388 (* l_0_4_69 l_0_4_69)))
 (let ((?x5386 (* l_0_4_68 l_0_4_68)))
 (let ((?x5384 (* l_0_4_67 l_0_4_67)))
 (let ((?x5382 (* l_0_4_55 l_0_4_55)))
 (let ((?x5380 (* l_0_4_54 l_0_4_54)))
 (let ((?x5378 (* l_0_4_53 l_0_4_53)))
 (let ((?x5376 (* l_0_4_52 l_0_4_52)))
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5374 (* ?x5272 l_0_4_38)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5006 (* ?x5005 l_0_4_32)))
 (let ((?x1856 (* 2.0 l_0_4_3)))
 (let ((?x4682 (* ?x1856 l_0_4_8)))
 (let ((?x1832 (* 2.0 l_0_4_2)))
 (let ((?x4680 (* ?x1832 l_0_4_7)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4678 (* ?x1888 l_0_4_23)))
 (let ((?x4698 (* 2.0 l_0_4_17)))
 (let ((?x5252 (* ?x4698 l_0_4_22)))
 (let ((?x3173 (- (+ (- (- (* 2.0 (* l_0_4_10 l_0_4_10)) ?x5252) ?x4678) ?x4680) (* (* 2.0 l_0_4_22) l_0_4_22))))
 (let ((?x3172 (- (- ?x3173 (* (* 2.0 l_0_4_23) l_0_4_23)) (* (* 2.0 l_0_4_24) l_0_4_24))))
 (let ((?x5373 (+ (- (+ (- ?x3172 (* (* 2.0 l_0_4_25) l_0_4_25)) ?x4682) ?x5006) (* (* 2.0 l_0_4_32) l_0_4_37))))
 (let ((?x5387 (- (- (+ (+ (+ (+ (+ ?x5373 ?x5374) ?x5376) ?x5378) ?x5380) ?x5382) ?x5384) ?x5386)))
 (let ((?x5395 (+ (- (+ (- ?x5387 ?x5388) (* 2.0 (* l_0_4_7 l_0_4_7))) ?x5392) (* 2.0 (* l_0_4_8 l_0_4_8)))))
 (= (+ ?x5395 (* 2.0 (* l_0_4_9 l_0_4_9))) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4599 (* (* 2.0 l_0_4_70) l_0_4_74)))
 (let ((?x4596 (* (* 2.0 l_0_4_69) l_0_4_73)))
 (let ((?x4593 (* (* 2.0 l_0_4_68) l_0_4_72)))
 (let ((?x4590 (* (* 2.0 l_0_4_67) l_0_4_71)))
 (let ((?x4425 (* 2.0 l_0_4_63)))
 (let ((?x5148 (* ?x4425 l_0_4_68)))
 (let ((?x4422 (* 2.0 l_0_4_62)))
 (let ((?x5146 (* ?x4422 l_0_4_67)))
 (let ((?x4587 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x4584 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x4581 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x4578 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4409 (* 2.0 l_0_4_48)))
 (let ((?x5144 (* ?x4409 l_0_4_53)))
 (let ((?x4406 (* 2.0 l_0_4_47)))
 (let ((?x5142 (* ?x4406 l_0_4_52)))
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5439 (* ?x5272 l_0_4_42)))
 (let ((?x1888 (* 2.0 l_0_4_18)))
 (let ((?x4701 (* ?x1888 l_0_4_27)))
 (let ((?x4698 (* 2.0 l_0_4_17)))
 (let ((?x4699 (* ?x4698 l_0_4_26)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x4696 (* ?x4690 l_0_4_3)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x4689 (* ?x1959 l_0_4_2)))
 (let ((?x5417 (+ (+ (* (* 4.0 l_0_4_10) l_0_4_14) ?x4689) (* (* 4.0 l_0_4_11) l_0_4_7))))
 (let ((?x5422 (+ (+ (+ ?x5417 ?x4696) (* (* 4.0 l_0_4_12) l_0_4_8)) (* (* 4.0 l_0_4_13) l_0_4_9))))
 (let ((?x5430 (- (- (- (- ?x5422 ?x4699) ?x4701) (* (* 4.0 l_0_4_22) l_0_4_26)) (* (* 4.0 l_0_4_23) l_0_4_27))))
 (let ((?x5436 (- (- ?x5430 (* (* 4.0 l_0_4_24) l_0_4_28)) (* (* 4.0 l_0_4_25) l_0_4_29))))
 (let ((?x5442 (- (- (+ (+ ?x5436 (* (* 2.0 l_0_4_32) l_0_4_41)) ?x5439) ?x5142) ?x5144)))
 (let ((?x5449 (- (+ (+ (+ (+ (+ (+ ?x5442 ?x4578) ?x4581) ?x4584) ?x4587) ?x5146) ?x5148) ?x4590)))
 (= (- (- (- ?x5449 ?x4593) ?x4596) ?x4599) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x3409 (* ?x5005 l_0_4_34)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4555 (* ?x4388 l_0_4_22)))
 (let ((?x4495 (* ?x4388 l_0_4_19)))
 (let ((?x4371 (* 2.0 l_0_4_1)))
 (let ((?x4549 (* ?x4371 l_0_4_7)))
 (let ((?x4489 (* ?x4371 l_0_4_4)))
 (let ((?x3413 (- (+ (+ (- (- ?x4489 ?x4549) ?x4495) ?x4555) ?x3409) (* (* 2.0 l_0_4_79) l_0_4_82))))
 (let ((?x5487 (- (- ?x3413 (* (* 2.0 l_0_4_80) l_0_4_83)) (* (* 2.0 l_0_4_81) l_0_4_84))))
 (let ((?x5493 (- (- ?x5487 (* (* 2.0 l_0_4_94) l_0_4_97)) (* (* 2.0 l_0_4_95) l_0_4_98))))
 (= (- ?x5493 (* (* 2.0 l_0_4_96) l_0_4_99)) 0.0)))))))))))))
(assert
 (let ((?x5531 (* l_0_4_99 l_0_4_99)))
 (let ((?x5529 (* l_0_4_98 l_0_4_98)))
 (let ((?x5527 (* l_0_4_97 l_0_4_97)))
 (let ((?x5525 (* l_0_4_85 l_0_4_85)))
 (let ((?x5523 (* l_0_4_84 l_0_4_84)))
 (let ((?x5521 (* l_0_4_83 l_0_4_83)))
 (let ((?x5519 (* l_0_4_82 l_0_4_82)))
 (let ((?x4341 (* l_0_4_31 l_0_4_31)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5516 (* ?x5005 l_0_4_37)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4555 (* ?x4388 l_0_4_22)))
 (let ((?x5515 (- (- (* (* 2.0 l_0_4_1) l_0_4_7) (* l_0_4_100 l_0_4_100)) ?x4555)))
 (let ((?x5528 (- (- (- (- (- (- (+ ?x5515 ?x5516) ?x4341) ?x5519) ?x5521) ?x5523) ?x5525) ?x5527)))
 (= (- (- ?x5528 ?x5529) ?x5531) 0.0))))))))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x5010 (* ?x4277 l_0_4_67)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x5008 (* ?x4274 l_0_4_52)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5555 (* ?x5005 l_0_4_41)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4633 (* ?x4388 l_0_4_26)))
 (let ((?x4371 (* 2.0 l_0_4_1)))
 (let ((?x1849 (* ?x4371 l_0_4_11)))
 (let ((?x5548 (- (- ?x1849 (* (* 2.0 l_0_4_100) l_0_4_104)) (* (* 2.0 l_0_4_101) l_0_4_97))))
 (let ((?x5553 (- (- ?x5548 (* (* 2.0 l_0_4_102) l_0_4_98)) (* (* 2.0 l_0_4_103) l_0_4_99))))
 (let ((?x5561 (- (+ (- (+ (- ?x5553 ?x4633) ?x5555) ?x5008) ?x5010) (* (* 2.0 l_0_4_82) l_0_4_86))))
 (let ((?x5567 (- (- ?x5561 (* (* 2.0 l_0_4_83) l_0_4_87)) (* (* 2.0 l_0_4_84) l_0_4_88))))
 (= (- ?x5567 (* (* 2.0 l_0_4_85) l_0_4_89)) 0.0))))))))))))))))
(assert
 (let ((?x4729 (* l_0_4_6 l_0_4_6)))
 (let ((?x4756 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4727 (* l_0_4_5 l_0_4_5)))
 (let ((?x4753 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4725 (* l_0_4_4 l_0_4_4)))
 (let ((?x4750 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4723 (* l_0_4_21 l_0_4_21)))
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4747 (* ?x4746 l_0_4_24)))
 (let ((?x4721 (* l_0_4_20 l_0_4_20)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4744 (* ?x4743 l_0_4_23)))
 (let ((?x5591 (+ (- (* (* 2.0 l_0_4_19) l_0_4_22) (* l_0_4_19 l_0_4_19)) ?x4744)))
 (let ((?x5597 (+ (- (+ (- ?x5591 ?x4721) ?x4747) ?x4723) (* 1.0 (* l_0_4_34 l_0_4_34)))))
 (let ((?x5603 (+ (+ ?x5597 (* 1.0 (* l_0_4_35 l_0_4_35))) (* 1.0 (* l_0_4_36 l_0_4_36)))))
 (= (+ (- (+ (- (+ (- ?x5603 ?x4750) ?x4725) ?x4753) ?x4727) ?x4756) ?x4729) 0.0)))))))))))))))))
(assert
 (let ((?x4826 (* l_0_4_9 l_0_4_9)))
 (let ((?x4824 (* l_0_4_8 l_0_4_8)))
 (let ((?x4822 (* l_0_4_7 l_0_4_7)))
 (let ((?x4756 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x4753 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x4750 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5643 (* 2.0 l_0_4_36)))
 (let ((?x5644 (* ?x5643 l_0_4_39)))
 (let ((?x5640 (* 2.0 l_0_4_35)))
 (let ((?x5641 (* ?x5640 l_0_4_38)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x3409 (* ?x5005 l_0_4_34)))
 (let ((?x4815 (* l_0_4_25 l_0_4_25)))
 (let ((?x4813 (* l_0_4_24 l_0_4_24)))
 (let ((?x4811 (* l_0_4_23 l_0_4_23)))
 (let ((?x4809 (* l_0_4_22 l_0_4_22)))
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4747 (* ?x4746 l_0_4_24)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4744 (* ?x4743 l_0_4_23)))
 (let ((?x5630 (- (- (* (- l_0_4_10) l_0_4_10) (* (* 2.0 l_0_4_19) l_0_4_22)) ?x4744)))
 (let ((?x5639 (+ (- (+ (+ (+ (+ (- ?x5630 ?x4747) ?x4809) ?x4811) ?x4813) ?x4815) ?x3409) (* (* 2.0 l_0_4_34) l_0_4_37))))
 (let ((?x5650 (- (- (+ (+ (+ (+ (+ ?x5639 ?x5641) ?x5644) ?x4750) ?x4753) ?x4756) ?x4822) ?x4824)))
 (= (- ?x5650 ?x4826) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4517 (* 2.0 l_0_4_66)))
 (let ((?x5294 (* ?x4517 l_0_4_69)))
 (let ((?x4514 (* 2.0 l_0_4_65)))
 (let ((?x5292 (* ?x4514 l_0_4_68)))
 (let ((?x4511 (* 2.0 l_0_4_64)))
 (let ((?x5290 (* ?x4511 l_0_4_67)))
 (let ((?x4508 (* 2.0 l_0_4_51)))
 (let ((?x5285 (* ?x4508 l_0_4_54)))
 (let ((?x4505 (* 2.0 l_0_4_50)))
 (let ((?x5283 (* ?x4505 l_0_4_53)))
 (let ((?x4502 (* 2.0 l_0_4_49)))
 (let ((?x5278 (* ?x4502 l_0_4_52)))
 (let ((?x5643 (* 2.0 l_0_4_36)))
 (let ((?x5696 (* ?x5643 l_0_4_43)))
 (let ((?x5640 (* 2.0 l_0_4_35)))
 (let ((?x5694 (* ?x5640 l_0_4_42)))
 (let ((?x4844 (* 2.0 l_0_4_25)))
 (let ((?x4845 (* ?x4844 l_0_4_29)))
 (let ((?x4841 (* 2.0 l_0_4_24)))
 (let ((?x4842 (* ?x4841 l_0_4_28)))
 (let ((?x4838 (* 2.0 l_0_4_23)))
 (let ((?x4839 (* ?x4838 l_0_4_27)))
 (let ((?x2055 (* 2.0 l_0_4_22)))
 (let ((?x2049 (* ?x2055 l_0_4_26)))
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4787 (* ?x4746 l_0_4_28)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4785 (* ?x4743 l_0_4_27)))
 (let ((?x4782 (* 2.0 l_0_4_19)))
 (let ((?x4783 (* ?x4782 l_0_4_26)))
 (let ((?x4773 (* 2.0 l_0_4_13)))
 (let ((?x2060 (* ?x4773 l_0_4_9)))
 (let ((?x4780 (* ?x4773 l_0_4_6)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x2076 (* ?x4690 l_0_4_8)))
 (let ((?x4770 (* ?x4690 l_0_4_5)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x2079 (* ?x1959 l_0_4_7)))
 (let ((?x5681 (+ (- (+ (* (* (- 2.0) l_0_4_10) l_0_4_14) (* ?x1959 l_0_4_4)) ?x2079) ?x4770)))
 (let ((?x5688 (+ (- (- (- (- (+ (- ?x5681 ?x2076) ?x4780) ?x2060) ?x4783) ?x4785) ?x4787) ?x2049)))
 (let ((?x5693 (+ (+ (+ (+ ?x5688 ?x4839) ?x4842) ?x4845) (* (* 2.0 l_0_4_34) l_0_4_41))))
 (let ((?x5702 (+ (+ (- (- (- (+ (+ ?x5693 ?x5694) ?x5696) ?x5278) ?x5283) ?x5285) ?x5290) ?x5292)))
 (= (+ ?x5702 ?x5294) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4826 (* l_0_4_9 l_0_4_9)))
 (let ((?x4824 (* l_0_4_8 l_0_4_8)))
 (let ((?x4822 (* l_0_4_7 l_0_4_7)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5516 (* ?x5005 l_0_4_37)))
 (let ((?x4815 (* l_0_4_25 l_0_4_25)))
 (let ((?x4813 (* l_0_4_24 l_0_4_24)))
 (let ((?x4811 (* l_0_4_23 l_0_4_23)))
 (let ((?x4814 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_22 l_0_4_22)) ?x4811) ?x4813)))
 (let ((?x4816 (- ?x4814 ?x4815)))
 (let ((?x3820 (+ (+ (- ?x4816 ?x5516) (* 1.0 (* l_0_4_37 l_0_4_37))) (* 1.0 (* l_0_4_38 l_0_4_38)))))
 (let ((?x3809 (+ (+ ?x3820 (* 1.0 (* l_0_4_39 l_0_4_39))) (* 1.0 (* l_0_4_40 l_0_4_40)))))
 (= (+ (+ (+ ?x3809 ?x4822) ?x4824) ?x4826) 0.0))))))))))))))
(assert
 (let ((?x5392 (* l_0_4_70 l_0_4_70)))
 (let ((?x5388 (* l_0_4_69 l_0_4_69)))
 (let ((?x5386 (* l_0_4_68 l_0_4_68)))
 (let ((?x5384 (* l_0_4_67 l_0_4_67)))
 (let ((?x5382 (* l_0_4_55 l_0_4_55)))
 (let ((?x5380 (* l_0_4_54 l_0_4_54)))
 (let ((?x5378 (* l_0_4_53 l_0_4_53)))
 (let ((?x5376 (* l_0_4_52 l_0_4_52)))
 (let ((?x5722 (* (* 2.0 l_0_4_40) l_0_4_44)))
 (let ((?x5719 (* (* 2.0 l_0_4_39) l_0_4_43)))
 (let ((?x5716 (* (* 2.0 l_0_4_38) l_0_4_42)))
 (let ((?x5005 (* 2.0 l_0_4_31)))
 (let ((?x5555 (* ?x5005 l_0_4_41)))
 (let ((?x4844 (* 2.0 l_0_4_25)))
 (let ((?x4845 (* ?x4844 l_0_4_29)))
 (let ((?x4841 (* 2.0 l_0_4_24)))
 (let ((?x4842 (* ?x4841 l_0_4_28)))
 (let ((?x4838 (* 2.0 l_0_4_23)))
 (let ((?x4839 (* ?x4838 l_0_4_27)))
 (let ((?x2055 (* 2.0 l_0_4_22)))
 (let ((?x2049 (* ?x2055 l_0_4_26)))
 (let ((?x4773 (* 2.0 l_0_4_13)))
 (let ((?x2060 (* ?x4773 l_0_4_9)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x2076 (* ?x4690 l_0_4_8)))
 (let ((?x1959 (* 2.0 l_0_4_11)))
 (let ((?x2079 (* ?x1959 l_0_4_7)))
 (let ((?x4837 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x2079) ?x2076) ?x2060) ?x2049)))
 (let ((?x4846 (- (- (- ?x4837 ?x4839) ?x4842) ?x4845)))
 (let ((?x5720 (+ (+ (+ (- ?x4846 ?x5555) (* (* 2.0 l_0_4_37) l_0_4_41)) ?x5716) ?x5719)))
 (let ((?x5729 (+ (+ (- (- (- (- (+ ?x5720 ?x5722) ?x5376) ?x5378) ?x5380) ?x5382) ?x5384) ?x5386)))
 (= (+ (+ ?x5729 ?x5388) ?x5392) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5766 (* l_0_4_96 l_0_4_96)))
 (let ((?x5764 (* l_0_4_95 l_0_4_95)))
 (let ((?x5762 (* l_0_4_94 l_0_4_94)))
 (let ((?x5760 (* l_0_4_81 l_0_4_81)))
 (let ((?x5758 (* l_0_4_80 l_0_4_80)))
 (let ((?x5756 (* l_0_4_79 l_0_4_79)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4495 (* ?x4388 l_0_4_19)))
 (let ((?x5761 (- (- (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x4495) ?x5756) ?x5758) ?x5760)))
 (= (- (- (- ?x5761 ?x5762) ?x5764) ?x5766) 0.0)))))))))))
(assert
 (let ((?x4277 (* 2.0 l_0_4_61)))
 (let ((?x4966 (* ?x4277 l_0_4_64)))
 (let ((?x4274 (* 2.0 l_0_4_46)))
 (let ((?x4964 (* ?x4274 l_0_4_49)))
 (let ((?x4388 (* 2.0 l_0_4_16)))
 (let ((?x4633 (* ?x4388 l_0_4_26)))
 (let ((?x5782 (- (* (* (- 2.0) l_0_4_1) l_0_4_11) (* (* 2.0 l_0_4_101) l_0_4_94))))
 (let ((?x5786 (- (- ?x5782 (* (* 2.0 l_0_4_102) l_0_4_95)) (* (* 2.0 l_0_4_103) l_0_4_96))))
 (let ((?x5791 (- (+ (- (+ ?x5786 ?x4633) ?x4964) ?x4966) (* (* 2.0 l_0_4_79) l_0_4_86))))
 (let ((?x5795 (- (- ?x5791 (* (* 2.0 l_0_4_80) l_0_4_87)) (* (* 2.0 l_0_4_81) l_0_4_88))))
 (= ?x5795 0.0))))))))))))
(assert
 (let ((?x4729 (* l_0_4_6 l_0_4_6)))
 (let ((?x4727 (* l_0_4_5 l_0_4_5)))
 (let ((?x4725 (* l_0_4_4 l_0_4_4)))
 (let ((?x4723 (* l_0_4_21 l_0_4_21)))
 (let ((?x5817 (- (+ (+ (* l_0_4_19 l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x4723) ?x4725)))
 (= (- (- ?x5817 ?x4727) ?x4729) 0.0)))))))
(assert
 (let ((?x5233 (* l_0_4_66 l_0_4_66)))
 (let ((?x5231 (* l_0_4_65 l_0_4_65)))
 (let ((?x5229 (* l_0_4_64 l_0_4_64)))
 (let ((?x5225 (* l_0_4_51 l_0_4_51)))
 (let ((?x5223 (* l_0_4_50 l_0_4_50)))
 (let ((?x5219 (* l_0_4_49 l_0_4_49)))
 (let ((?x4746 (* 2.0 l_0_4_21)))
 (let ((?x4787 (* ?x4746 l_0_4_28)))
 (let ((?x4743 (* 2.0 l_0_4_20)))
 (let ((?x4785 (* ?x4743 l_0_4_27)))
 (let ((?x4782 (* 2.0 l_0_4_19)))
 (let ((?x4783 (* ?x4782 l_0_4_26)))
 (let ((?x4773 (* 2.0 l_0_4_13)))
 (let ((?x4780 (* ?x4773 l_0_4_6)))
 (let ((?x4690 (* 2.0 l_0_4_12)))
 (let ((?x4770 (* ?x4690 l_0_4_5)))
 (let ((?x5823 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x4770) ?x4780) ?x4783) ?x4785)))
 (let ((?x5830 (+ (+ (+ (- (- (- (+ ?x5823 ?x4787) ?x5219) ?x5223) ?x5225) ?x5229) ?x5231) ?x5233)))
 (= ?x5830 0.0))))))))))))))))))))
(assert
 (= (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) 0.0))
(assert
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5273 (* ?x5272 l_0_4_35)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_34) ?x5273) 0.0))))
(assert
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5374 (* ?x5272 l_0_4_38)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_37) ?x5374) 0.0))))
(assert
 (let ((?x5272 (* 2.0 l_0_4_33)))
 (let ((?x5439 (* ?x5272 l_0_4_42)))
 (= (- (* (* (- 2.0) l_0_4_32) l_0_4_41) ?x5439) 0.0))))
(assert
 (let ((?x5601 (* l_0_4_36 l_0_4_36)))
 (= (- (- (* (- l_0_4_34) l_0_4_34) (* l_0_4_35 l_0_4_35)) ?x5601) 0.0)))
(assert
 (let ((?x5643 (* 2.0 l_0_4_36)))
 (let ((?x5644 (* ?x5643 l_0_4_39)))
 (let ((?x5640 (* 2.0 l_0_4_35)))
 (let ((?x5641 (* ?x5640 l_0_4_38)))
 (= (- (- (* (* (- 2.0) l_0_4_34) l_0_4_37) ?x5641) ?x5644) 0.0))))))
(assert
 (let ((?x5643 (* 2.0 l_0_4_36)))
 (let ((?x5696 (* ?x5643 l_0_4_43)))
 (let ((?x5640 (* 2.0 l_0_4_35)))
 (let ((?x5694 (* ?x5640 l_0_4_42)))
 (= (- (- (* (* (- 2.0) l_0_4_34) l_0_4_41) ?x5694) ?x5696) 0.0))))))
(assert
 (let ((?x3813 (* l_0_4_40 l_0_4_40)))
 (let ((?x3817 (* l_0_4_39 l_0_4_39)))
 (let ((?x5847 (- (- (- (* (- l_0_4_37) l_0_4_37) (* l_0_4_38 l_0_4_38)) ?x3817) ?x3813)))
 (= ?x5847 0.0)))))
(assert
 (let ((?x5722 (* (* 2.0 l_0_4_40) l_0_4_44)))
 (let ((?x5719 (* (* 2.0 l_0_4_39) l_0_4_43)))
 (let ((?x5716 (* (* 2.0 l_0_4_38) l_0_4_42)))
 (= (- (- (- (* (* (- 2.0) l_0_4_37) l_0_4_41) ?x5716) ?x5719) ?x5722) 0.0)))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_91 0.0))
(assert
 (>= l_0_4_93 0.0))
(assert
 (>= l_0_4_96 0.0))
(assert
 (>= l_0_4_100 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (= (* (- l_0_5_76) l_0_5_76) 0.0))
(assert
 (let ((?x5904 (* l_0_5_90 l_0_5_90)))
 (let ((?x5902 (* l_0_5_89 l_0_5_89)))
 (let ((?x5900 (* l_0_5_88 l_0_5_88)))
 (let ((?x5898 (* l_0_5_87 l_0_5_87)))
 (let ((?x5896 (* l_0_5_86 l_0_5_86)))
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x5894 (* ?x5893 l_0_5_71)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x5891 (* ?x5890 l_0_5_56)))
 (let ((?x5888 (* l_0_5_16 l_0_5_16)))
 (let ((?x5886 (* l_0_5_1 l_0_5_1)))
 (let ((?x5889 (- ?x5886 ?x5888)))
 (let ((?x5905 (- (- (- (- (- (- (+ ?x5889 ?x5891) ?x5894) ?x5896) ?x5898) ?x5900) ?x5902) ?x5904)))
 (= (- ?x5905 1.0) 0.0)))))))))))))))
(assert
 (let ((?x5933 (* l_0_5_61 l_0_5_61)))
 (let ((?x5931 (* l_0_5_46 l_0_5_46)))
 (let ((?x5886 (* l_0_5_1 l_0_5_1)))
 (let ((?x5927 (* 2.0 ?x5886)))
 (let ((?x5937 (- (+ (- (- ?x5927 (* (* 2.0 l_0_5_16) l_0_5_16)) ?x5931) ?x5933) (* (* 2.0 l_0_5_76) l_0_5_77))))
 (= (- ?x5937 2.0) 0.0)))))))
(assert
 (let ((?x5888 (* l_0_5_16 l_0_5_16)))
 (let ((?x5886 (* l_0_5_1 l_0_5_1)))
 (let ((?x5889 (- ?x5886 ?x5888)))
 (let ((?x5957 (- (+ ?x5889 (* 1.0 (* l_0_5_31 l_0_5_31))) (* (* 2.0 l_0_5_76) l_0_5_82))))
 (= (- ?x5957 1.0) 0.0))))))
(assert
 (let ((?x5971 (- (+ (* (- l_0_5_1) l_0_5_1) (* l_0_5_16 l_0_5_16)) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= (+ ?x5971 1.0) 0.0)))
(assert
 (let ((?x6048 (* l_0_5_75 l_0_5_75)))
 (let ((?x6046 (* l_0_5_74 l_0_5_74)))
 (let ((?x6044 (* l_0_5_73 l_0_5_73)))
 (let ((?x6042 (* l_0_5_72 l_0_5_72)))
 (let ((?x6040 (* l_0_5_71 l_0_5_71)))
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6038 (* ?x6037 l_0_5_72)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6035 (* ?x6034 l_0_5_71)))
 (let ((?x6032 (* l_0_5_60 l_0_5_60)))
 (let ((?x6030 (* l_0_5_59 l_0_5_59)))
 (let ((?x6028 (* l_0_5_58 l_0_5_58)))
 (let ((?x6026 (* l_0_5_57 l_0_5_57)))
 (let ((?x6024 (* l_0_5_56 l_0_5_56)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6022 (* ?x6021 l_0_5_57)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6019 (* ?x6018 l_0_5_56)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6001 (* ?x5928 l_0_5_17)))
 (let ((?x5982 (* 2.0 l_0_5_1)))
 (let ((?x5985 (* ?x5982 l_0_5_2)))
 (let ((?x5991 (+ (+ ?x5985 (* 2.0 (* l_0_5_11 l_0_5_11))) (* 2.0 (* l_0_5_12 l_0_5_12)))))
 (let ((?x5997 (+ (+ ?x5991 (* 2.0 (* l_0_5_13 l_0_5_13))) (* 2.0 (* l_0_5_14 l_0_5_14)))))
 (let ((?x6005 (- (- (+ ?x5997 (* 2.0 (* l_0_5_15 l_0_5_15))) ?x6001) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x6011 (- (- ?x6005 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x6017 (- (- ?x6011 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x6033 (- (- (- (- (- (+ (+ ?x6017 ?x6019) ?x6022) ?x6024) ?x6026) ?x6028) ?x6030) ?x6032)))
 (let ((?x6049 (+ (+ (+ (+ (+ (- (- ?x6033 ?x6035) ?x6038) ?x6040) ?x6042) ?x6044) ?x6046) ?x6048)))
 (= ?x6049 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6127 (* ?x6126 l_0_5_73)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6124 (* ?x6123 l_0_5_72)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6121 (* ?x6120 l_0_5_71)))
 (let ((?x6117 (* 2.0 l_0_5_51)))
 (let ((?x6118 (* ?x6117 l_0_5_58)))
 (let ((?x6114 (* 2.0 l_0_5_50)))
 (let ((?x6115 (* ?x6114 l_0_5_57)))
 (let ((?x6111 (* 2.0 l_0_5_49)))
 (let ((?x6112 (* ?x6111 l_0_5_56)))
 (let ((?x4193 (* l_0_5_30 l_0_5_30)))
 (let ((?x1175 (* l_0_5_29 l_0_5_29)))
 (let ((?x4190 (* l_0_5_28 l_0_5_28)))
 (let ((?x1138 (* l_0_5_27 l_0_5_27)))
 (let ((?x4175 (* l_0_5_26 l_0_5_26)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6104 (* ?x5928 l_0_5_19)))
 (let ((?x5998 (* l_0_5_15 l_0_5_15)))
 (let ((?x5995 (* l_0_5_14 l_0_5_14)))
 (let ((?x5992 (* l_0_5_13 l_0_5_13)))
 (let ((?x5989 (* l_0_5_12 l_0_5_12)))
 (let ((?x6100 (- (- (* (* 2.0 l_0_5_1) l_0_5_4) (* l_0_5_11 l_0_5_11)) ?x5989)))
 (let ((?x6108 (+ (+ (+ (- (- (- (- ?x6100 ?x5992) ?x5995) ?x5998) ?x6104) ?x4175) ?x1138) ?x4190)))
 (let ((?x6125 (- (- (+ (+ (+ (+ (+ ?x6108 ?x1175) ?x4193) ?x6112) ?x6115) ?x6118) ?x6121) ?x6124)))
 (= (- ?x6125 ?x6127) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x6211 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6208 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6205 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6202 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6199 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6196 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6193 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6190 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x4193 (* l_0_5_30 l_0_5_30)))
 (let ((?x1175 (* l_0_5_29 l_0_5_29)))
 (let ((?x4190 (* l_0_5_28 l_0_5_28)))
 (let ((?x1138 (* l_0_5_27 l_0_5_27)))
 (let ((?x4175 (* l_0_5_26 l_0_5_26)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6167 (* ?x5928 l_0_5_22)))
 (let ((?x5998 (* l_0_5_15 l_0_5_15)))
 (let ((?x5995 (* l_0_5_14 l_0_5_14)))
 (let ((?x5992 (* l_0_5_13 l_0_5_13)))
 (let ((?x5989 (* l_0_5_12 l_0_5_12)))
 (let ((?x6163 (+ (+ (* (* 2.0 l_0_5_1) l_0_5_7) (* l_0_5_11 l_0_5_11)) ?x5989)))
 (let ((?x6171 (- (- (- (- (+ (+ (+ ?x6163 ?x5992) ?x5995) ?x5998) ?x6167) ?x4175) ?x1138) ?x4190)))
 (let ((?x6179 (+ (+ (- (- ?x6171 ?x1175) ?x4193) (* 1.0 (* l_0_5_41 l_0_5_41))) (* 1.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x6185 (+ (+ ?x6179 (* 1.0 (* l_0_5_43 l_0_5_43))) (* 1.0 (* l_0_5_44 l_0_5_44)))))
 (let ((?x6197 (+ (+ (+ (+ ?x6185 (* 1.0 (* l_0_5_45 l_0_5_45))) ?x6190) ?x6193) ?x6196)))
 (= (- (- (- (- (+ ?x6197 ?x6199) ?x6202) ?x6205) ?x6208) ?x6211) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6048 (* l_0_5_75 l_0_5_75)))
 (let ((?x6046 (* l_0_5_74 l_0_5_74)))
 (let ((?x6044 (* l_0_5_73 l_0_5_73)))
 (let ((?x6042 (* l_0_5_72 l_0_5_72)))
 (let ((?x6040 (* l_0_5_71 l_0_5_71)))
 (let ((?x6032 (* l_0_5_60 l_0_5_60)))
 (let ((?x6030 (* l_0_5_59 l_0_5_59)))
 (let ((?x6028 (* l_0_5_58 l_0_5_58)))
 (let ((?x6026 (* l_0_5_57 l_0_5_57)))
 (let ((?x6024 (* l_0_5_56 l_0_5_56)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6271 (* ?x5928 l_0_5_26)))
 (let ((?x6272 (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6271)))
 (let ((?x6279 (- (- (+ (+ (+ (+ (+ ?x6272 ?x6024) ?x6026) ?x6028) ?x6030) ?x6032) ?x6040) ?x6042)))
 (= (- (- (- ?x6279 ?x6044) ?x6046) ?x6048) 0.0))))))))))))))))
(assert
 (let ((?x1440 (* l_0_5_3 l_0_5_3)))
 (let ((?x4235 (* l_0_5_2 l_0_5_2)))
 (let ((?x1444 (+ (+ (- (* (- l_0_5_17) l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x4235) ?x1440)))
 (= ?x1444 0.0)))))
(assert
 (let ((?x6301 (* 2.0 l_0_5_3)))
 (let ((?x6302 (* ?x6301 l_0_5_5)))
 (let ((?x6298 (* 2.0 l_0_5_2)))
 (let ((?x6299 (* ?x6298 l_0_5_4)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6296 (* ?x6295 l_0_5_20)))
 (let ((?x1494 (* (- 2.0) l_0_5_17)))
 (let ((?x6294 (* ?x1494 l_0_5_19)))
 (= (+ (+ (- ?x6294 ?x6296) ?x6299) ?x6302) 0.0))))))))))
(assert
 (let ((?x6301 (* 2.0 l_0_5_3)))
 (let ((?x6325 (* ?x6301 l_0_5_8)))
 (let ((?x6298 (* 2.0 l_0_5_2)))
 (let ((?x6323 (* ?x6298 l_0_5_7)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6316 (* ?x6295 l_0_5_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x6316) ?x6323) ?x6325) 0.0))))))))
(assert
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6338 (* ?x6295 l_0_5_27)))
 (let ((?x6335 (* 2.0 l_0_5_17)))
 (let ((?x6336 (* ?x6335 l_0_5_26)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x6333 (* ?x1499 l_0_5_3)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x4299 (* ?x4296 l_0_5_2)))
 (= (- (- (+ ?x4299 ?x6333) ?x6336) ?x6338) 0.0))))))))))
(assert
 (let ((?x6368 (* l_0_5_6 l_0_5_6)))
 (let ((?x6366 (* l_0_5_5 l_0_5_5)))
 (let ((?x6364 (* l_0_5_4 l_0_5_4)))
 (let ((?x6362 (* l_0_5_21 l_0_5_21)))
 (let ((?x6365 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6362) ?x6364)))
 (= (+ (+ ?x6365 ?x6366) ?x6368) 0.0)))))))
(assert
 (let ((?x6394 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6391 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6388 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6385 (* ?x6384 l_0_5_24)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6382 (* ?x6381 l_0_5_23)))
 (let ((?x6392 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x6382) ?x6385) ?x6388) ?x6391)))
 (= (+ ?x6392 ?x6394) 0.0))))))))))
(assert
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6411 (* ?x6384 l_0_5_28)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6409 (* ?x6381 l_0_5_27)))
 (let ((?x6406 (* 2.0 l_0_5_19)))
 (let ((?x6407 (* ?x6406 l_0_5_26)))
 (let ((?x1566 (* 2.0 l_0_5_13)))
 (let ((?x1570 (* ?x1566 l_0_5_6)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x1569 (* ?x1499 l_0_5_5)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x4308 (* ?x4296 l_0_5_4)))
 (= (- (- (- (+ (+ ?x4308 ?x1569) ?x1570) ?x6407) ?x6409) ?x6411) 0.0))))))))))))))
(assert
 (let ((?x6445 (* l_0_5_9 l_0_5_9)))
 (let ((?x6443 (* l_0_5_8 l_0_5_8)))
 (let ((?x6441 (* l_0_5_7 l_0_5_7)))
 (let ((?x6186 (* l_0_5_45 l_0_5_45)))
 (let ((?x6183 (* l_0_5_44 l_0_5_44)))
 (let ((?x6180 (* l_0_5_43 l_0_5_43)))
 (let ((?x6177 (* l_0_5_42 l_0_5_42)))
 (let ((?x6174 (* l_0_5_41 l_0_5_41)))
 (let ((?x6434 (* l_0_5_25 l_0_5_25)))
 (let ((?x6432 (* l_0_5_24 l_0_5_24)))
 (let ((?x6430 (* l_0_5_23 l_0_5_23)))
 (let ((?x6433 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6430) ?x6432)))
 (let ((?x6435 (- ?x6433 ?x6434)))
 (let ((?x6444 (+ (+ (- (- (- (- (- ?x6435 ?x6174) ?x6177) ?x6180) ?x6183) ?x6186) ?x6441) ?x6443)))
 (= (+ ?x6444 ?x6445) 0.0))))))))))))))))
(assert
 (let ((?x6465 (* 2.0 l_0_5_25)))
 (let ((?x6466 (* ?x6465 l_0_5_29)))
 (let ((?x6462 (* 2.0 l_0_5_24)))
 (let ((?x6463 (* ?x6462 l_0_5_28)))
 (let ((?x6459 (* 2.0 l_0_5_23)))
 (let ((?x6460 (* ?x6459 l_0_5_27)))
 (let ((?x6456 (* 2.0 l_0_5_22)))
 (let ((?x6457 (* ?x6456 l_0_5_26)))
 (let ((?x1566 (* 2.0 l_0_5_13)))
 (let ((?x4364 (* ?x1566 l_0_5_9)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x4369 (* ?x1499 l_0_5_8)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x1645 (* ?x4296 l_0_5_7)))
 (let ((?x6458 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x1645) ?x4369) ?x4364) ?x6457)))
 (let ((?x6467 (- (- (- ?x6458 ?x6460) ?x6463) ?x6466)))
 (= ?x6467 0.0))))))))))))))))))
(assert
 (let ((?x4193 (* l_0_5_30 l_0_5_30)))
 (let ((?x1175 (* l_0_5_29 l_0_5_29)))
 (let ((?x4190 (* l_0_5_28 l_0_5_28)))
 (let ((?x1138 (* l_0_5_27 l_0_5_27)))
 (let ((?x4175 (* l_0_5_26 l_0_5_26)))
 (let ((?x5998 (* l_0_5_15 l_0_5_15)))
 (let ((?x5995 (* l_0_5_14 l_0_5_14)))
 (let ((?x5992 (* l_0_5_13 l_0_5_13)))
 (let ((?x6495 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x5992) ?x5995)))
 (= (- (- (- (- (- (+ ?x6495 ?x5998) ?x4175) ?x1138) ?x4190) ?x1175) ?x4193) 0.0)))))))))))
(assert
 (let ((?x6506 (* l_0_5_78 l_0_5_78)))
 (let ((?x4474 (* l_0_5_77 l_0_5_77)))
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x1743 (* ?x5893 l_0_5_62)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x1738 (* ?x5890 l_0_5_47)))
 (let ((?x4451 (- (* (* 4.0 l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_16) l_0_5_17))))
 (= (- (- (+ (- ?x4451 ?x1738) ?x1743) ?x4474) ?x6506) 0.0)))))))))
(assert
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x6535 (* ?x5893 l_0_5_64)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x6533 (* ?x5890 l_0_5_49)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6001 (* ?x5928 l_0_5_17)))
 (let ((?x6529 (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_1) l_0_5_4))))
 (let ((?x6536 (+ (- (- (+ ?x6529 ?x6001) (* (* 4.0 l_0_5_16) l_0_5_19)) ?x6533) ?x6535)))
 (let ((?x6542 (- (- ?x6536 (* (* 2.0 l_0_5_77) l_0_5_79)) (* (* 2.0 l_0_5_78) l_0_5_80))))
 (= ?x6542 0.0)))))))))))
(assert
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x6568 (* ?x5893 l_0_5_67)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x6566 (* ?x5890 l_0_5_52)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x6564 (* ?x6563 l_0_5_32)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6001 (* ?x5928 l_0_5_17)))
 (let ((?x5982 (* 2.0 l_0_5_1)))
 (let ((?x5985 (* ?x5982 l_0_5_2)))
 (let ((?x6562 (- (- (+ ?x5985 (* (* 4.0 l_0_5_1) l_0_5_7)) ?x6001) (* (* 4.0 l_0_5_16) l_0_5_22))))
 (let ((?x6571 (- (+ (- (+ ?x6562 ?x6564) ?x6566) ?x6568) (* (* 2.0 l_0_5_77) l_0_5_82))))
 (= (- ?x6571 (* (* 2.0 l_0_5_78) l_0_5_83)) 0.0))))))))))))))
(assert
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x5894 (* ?x5893 l_0_5_71)))
 (let ((?x1743 (* ?x5893 l_0_5_62)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x5891 (* ?x5890 l_0_5_56)))
 (let ((?x1738 (* ?x5890 l_0_5_47)))
 (let ((?x6604 (- (* (* 4.0 l_0_5_1) l_0_5_11) (* (* 4.0 l_0_5_16) l_0_5_26))))
 (let ((?x6610 (- (+ (- (- (+ ?x6604 ?x1738) ?x5891) ?x1743) ?x5894) (* (* 2.0 l_0_5_77) l_0_5_86))))
 (= (- ?x6610 (* (* 2.0 l_0_5_78) l_0_5_87)) 0.0))))))))))
(assert
 (let ((?x6642 (* l_0_5_63 l_0_5_63)))
 (let ((?x6640 (* l_0_5_62 l_0_5_62)))
 (let ((?x6638 (* l_0_5_48 l_0_5_48)))
 (let ((?x6636 (* l_0_5_47 l_0_5_47)))
 (let ((?x6631 (- (* (* (- 2.0) l_0_5_17) l_0_5_17) (* (* 2.0 l_0_5_18) l_0_5_18))))
 (let ((?x6635 (+ (+ ?x6631 (* 2.0 (* l_0_5_2 l_0_5_2))) (* 2.0 (* l_0_5_3 l_0_5_3)))))
 (= (+ (+ (- (- ?x6635 ?x6636) ?x6638) ?x6640) ?x6642) 0.0))))))))
(assert
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6682 (* ?x6037 l_0_5_65)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6680 (* ?x6034 l_0_5_64)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6678 (* ?x6021 l_0_5_50)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6676 (* ?x6018 l_0_5_49)))
 (let ((?x1440 (* l_0_5_3 l_0_5_3)))
 (let ((?x4235 (* l_0_5_2 l_0_5_2)))
 (let ((?x4236 (* l_0_5_18 l_0_5_18)))
 (let ((?x6666 (- (+ (* (* (- 4.0) l_0_5_17) l_0_5_19) (* l_0_5_17 l_0_5_17)) (* (* 4.0 l_0_5_18) l_0_5_20))))
 (let ((?x6674 (+ (- (+ (+ ?x6666 ?x4236) (* (* 4.0 l_0_5_2) l_0_5_4)) ?x4235) (* (* 4.0 l_0_5_3) l_0_5_5))))
 (= (+ (+ (- (- (- ?x6674 ?x1440) ?x6676) ?x6678) ?x6680) ?x6682) 0.0)))))))))))))))
(assert
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6725 (* ?x6037 l_0_5_68)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6723 (* ?x6034 l_0_5_67)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6721 (* ?x6021 l_0_5_53)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6719 (* ?x6018 l_0_5_52)))
 (let ((?x1440 (* l_0_5_3 l_0_5_3)))
 (let ((?x4235 (* l_0_5_2 l_0_5_2)))
 (let ((?x4236 (* l_0_5_18 l_0_5_18)))
 (let ((?x6705 (- (- (* (* (- 4.0) l_0_5_17) l_0_5_22) (* l_0_5_17 l_0_5_17)) (* (* 4.0 l_0_5_18) l_0_5_23))))
 (let ((?x6711 (+ (+ (+ (- ?x6705 ?x4236) (* (* 4.0 l_0_5_2) l_0_5_7)) ?x4235) (* (* 4.0 l_0_5_3) l_0_5_8))))
 (let ((?x6718 (+ (+ (+ ?x6711 ?x1440) (* 1.0 (* l_0_5_32 l_0_5_32))) (* 1.0 (* l_0_5_33 l_0_5_33)))))
 (= (+ (+ (- (- ?x6718 ?x6719) ?x6721) ?x6723) ?x6725) 0.0))))))))))))))))
(assert
 (let ((?x6642 (* l_0_5_63 l_0_5_63)))
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6038 (* ?x6037 l_0_5_72)))
 (let ((?x6640 (* l_0_5_62 l_0_5_62)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6035 (* ?x6034 l_0_5_71)))
 (let ((?x6638 (* l_0_5_48 l_0_5_48)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6022 (* ?x6021 l_0_5_57)))
 (let ((?x6636 (* l_0_5_47 l_0_5_47)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6019 (* ?x6018 l_0_5_56)))
 (let ((?x6754 (+ (* (* 4.0 l_0_5_11) l_0_5_2) (* (* 4.0 l_0_5_12) l_0_5_3))))
 (let ((?x6759 (- (- ?x6754 (* (* 4.0 l_0_5_17) l_0_5_26)) (* (* 4.0 l_0_5_18) l_0_5_27))))
 (let ((?x6766 (+ (- (+ (+ (- (+ (- ?x6759 ?x6019) ?x6636) ?x6022) ?x6638) ?x6035) ?x6640) ?x6038)))
 (= (- ?x6766 ?x6642) 0.0)))))))))))))))))
(assert
 (let ((?x6816 (* l_0_5_66 l_0_5_66)))
 (let ((?x6814 (* l_0_5_65 l_0_5_65)))
 (let ((?x6812 (* l_0_5_64 l_0_5_64)))
 (let ((?x6368 (* l_0_5_6 l_0_5_6)))
 (let ((?x6810 (* 2.0 ?x6368)))
 (let ((?x6808 (* l_0_5_51 l_0_5_51)))
 (let ((?x6806 (* l_0_5_50 l_0_5_50)))
 (let ((?x6366 (* l_0_5_5 l_0_5_5)))
 (let ((?x6804 (* 2.0 ?x6366)))
 (let ((?x6802 (* l_0_5_49 l_0_5_49)))
 (let ((?x6364 (* l_0_5_4 l_0_5_4)))
 (let ((?x6800 (* 2.0 ?x6364)))
 (let ((?x6301 (* 2.0 l_0_5_3)))
 (let ((?x6302 (* ?x6301 l_0_5_5)))
 (let ((?x6298 (* 2.0 l_0_5_2)))
 (let ((?x6299 (* ?x6298 l_0_5_4)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6296 (* ?x6295 l_0_5_20)))
 (let ((?x6793 (- (+ (* (* 2.0 l_0_5_17) l_0_5_19) ?x6296) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x6798 (- (- (- ?x6793 ?x6299) (* (* 2.0 l_0_5_20) l_0_5_20)) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x6811 (+ (- (- (+ (- (+ (- ?x6798 ?x6302) ?x6800) ?x6802) ?x6804) ?x6806) ?x6808) ?x6810)))
 (= (+ (+ (+ ?x6811 ?x6812) ?x6814) ?x6816) 0.0)))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6872 (* ?x6126 l_0_5_69)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6870 (* ?x6123 l_0_5_68)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6868 (* ?x6120 l_0_5_67)))
 (let ((?x6117 (* 2.0 l_0_5_51)))
 (let ((?x6863 (* ?x6117 l_0_5_54)))
 (let ((?x6114 (* 2.0 l_0_5_50)))
 (let ((?x6861 (* ?x6114 l_0_5_53)))
 (let ((?x6111 (* 2.0 l_0_5_49)))
 (let ((?x6856 (* ?x6111 l_0_5_52)))
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x6851 (* ?x6850 l_0_5_35)))
 (let ((?x6301 (* 2.0 l_0_5_3)))
 (let ((?x6325 (* ?x6301 l_0_5_8)))
 (let ((?x6302 (* ?x6301 l_0_5_5)))
 (let ((?x6298 (* 2.0 l_0_5_2)))
 (let ((?x6323 (* ?x6298 l_0_5_7)))
 (let ((?x6299 (* ?x6298 l_0_5_4)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6316 (* ?x6295 l_0_5_23)))
 (let ((?x6296 (* ?x6295 l_0_5_20)))
 (let ((?x6335 (* 2.0 l_0_5_17)))
 (let ((?x4902 (* ?x6335 l_0_5_22)))
 (let ((?x1494 (* (- 2.0) l_0_5_17)))
 (let ((?x6294 (* ?x1494 l_0_5_19)))
 (let ((?x6836 (- (+ (- (+ ?x6294 ?x4902) ?x6296) ?x6316) (* (* 4.0 l_0_5_19) l_0_5_22))))
 (let ((?x6844 (- (- (- (+ ?x6836 ?x6299) ?x6323) (* (* 4.0 l_0_5_20) l_0_5_23)) (* (* 4.0 l_0_5_21) l_0_5_24))))
 (let ((?x6852 (+ (+ (- (+ ?x6844 ?x6302) ?x6325) (* (* 2.0 l_0_5_32) l_0_5_34)) ?x6851)))
 (let ((?x6860 (+ (- (+ ?x6852 (* (* 4.0 l_0_5_4) l_0_5_7)) ?x6856) (* (* 4.0 l_0_5_5) l_0_5_8))))
 (let ((?x6869 (+ (+ (- (- ?x6860 ?x6861) ?x6863) (* (* 4.0 l_0_5_6) l_0_5_9)) ?x6868)))
 (= (+ (+ ?x6869 ?x6870) ?x6872) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6127 (* ?x6126 l_0_5_73)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6124 (* ?x6123 l_0_5_72)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6121 (* ?x6120 l_0_5_71)))
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6682 (* ?x6037 l_0_5_65)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6680 (* ?x6034 l_0_5_64)))
 (let ((?x6117 (* 2.0 l_0_5_51)))
 (let ((?x6118 (* ?x6117 l_0_5_58)))
 (let ((?x6114 (* 2.0 l_0_5_50)))
 (let ((?x6115 (* ?x6114 l_0_5_57)))
 (let ((?x6111 (* 2.0 l_0_5_49)))
 (let ((?x6112 (* ?x6111 l_0_5_56)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6678 (* ?x6021 l_0_5_50)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6676 (* ?x6018 l_0_5_49)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6338 (* ?x6295 l_0_5_27)))
 (let ((?x6335 (* 2.0 l_0_5_17)))
 (let ((?x6336 (* ?x6335 l_0_5_26)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x6333 (* ?x1499 l_0_5_3)))
 (let ((?x6910 (+ (* (* (- 2.0) l_0_5_11) l_0_5_2) (* (* 4.0 l_0_5_11) l_0_5_4))))
 (let ((?x6916 (+ (+ (- ?x6910 ?x6333) (* (* 4.0 l_0_5_12) l_0_5_5)) (* (* 4.0 l_0_5_13) l_0_5_6))))
 (let ((?x6922 (- (- (+ (+ ?x6916 ?x6336) ?x6338) (* (* 4.0 l_0_5_19) l_0_5_26)) (* (* 4.0 l_0_5_20) l_0_5_27))))
 (let ((?x6927 (- (+ (+ (- ?x6922 (* (* 4.0 l_0_5_21) l_0_5_28)) ?x6676) ?x6678) ?x6112)))
 (let ((?x6934 (+ (+ (+ (- (- (- (- ?x6927 ?x6115) ?x6118) ?x6680) ?x6682) ?x6121) ?x6124) ?x6127)))
 (= ?x6934 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x6971 (* l_0_5_70 l_0_5_70)))
 (let ((?x6967 (* l_0_5_69 l_0_5_69)))
 (let ((?x6965 (* l_0_5_68 l_0_5_68)))
 (let ((?x6963 (* l_0_5_67 l_0_5_67)))
 (let ((?x6961 (* l_0_5_55 l_0_5_55)))
 (let ((?x6959 (* l_0_5_54 l_0_5_54)))
 (let ((?x6957 (* l_0_5_53 l_0_5_53)))
 (let ((?x6955 (* l_0_5_52 l_0_5_52)))
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x6953 (* ?x6850 l_0_5_38)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x6564 (* ?x6563 l_0_5_32)))
 (let ((?x6301 (* 2.0 l_0_5_3)))
 (let ((?x6325 (* ?x6301 l_0_5_8)))
 (let ((?x6298 (* 2.0 l_0_5_2)))
 (let ((?x6323 (* ?x6298 l_0_5_7)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6316 (* ?x6295 l_0_5_23)))
 (let ((?x6335 (* 2.0 l_0_5_17)))
 (let ((?x4902 (* ?x6335 l_0_5_22)))
 (let ((?x2450 (- (+ (- (- (* 2.0 (* l_0_5_10 l_0_5_10)) ?x4902) ?x6316) ?x6323) (* (* 2.0 l_0_5_22) l_0_5_22))))
 (let ((?x6946 (- (- ?x2450 (* (* 2.0 l_0_5_23) l_0_5_23)) (* (* 2.0 l_0_5_24) l_0_5_24))))
 (let ((?x6952 (+ (- (+ (- ?x6946 (* (* 2.0 l_0_5_25) l_0_5_25)) ?x6325) ?x6564) (* (* 2.0 l_0_5_32) l_0_5_37))))
 (let ((?x6966 (+ (+ (- (- (- (- (+ ?x6952 ?x6953) ?x6955) ?x6957) ?x6959) ?x6961) ?x6963) ?x6965)))
 (let ((?x6974 (+ (+ (+ (+ ?x6966 ?x6967) (* 2.0 (* l_0_5_7 l_0_5_7))) ?x6971) (* 2.0 (* l_0_5_8 l_0_5_8)))))
 (= (+ ?x6974 (* 2.0 (* l_0_5_9 l_0_5_9))) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6211 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x6208 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x6205 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x6202 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x6037 (* 2.0 l_0_5_63)))
 (let ((?x6725 (* ?x6037 l_0_5_68)))
 (let ((?x6034 (* 2.0 l_0_5_62)))
 (let ((?x6723 (* ?x6034 l_0_5_67)))
 (let ((?x6199 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x6196 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x6193 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x6190 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x6021 (* 2.0 l_0_5_48)))
 (let ((?x6721 (* ?x6021 l_0_5_53)))
 (let ((?x6018 (* 2.0 l_0_5_47)))
 (let ((?x6719 (* ?x6018 l_0_5_52)))
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x7018 (* ?x6850 l_0_5_42)))
 (let ((?x6295 (* 2.0 l_0_5_18)))
 (let ((?x6338 (* ?x6295 l_0_5_27)))
 (let ((?x6335 (* 2.0 l_0_5_17)))
 (let ((?x6336 (* ?x6335 l_0_5_26)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x6333 (* ?x1499 l_0_5_3)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x4299 (* ?x4296 l_0_5_2)))
 (let ((?x6996 (+ (+ (* (* 4.0 l_0_5_10) l_0_5_14) ?x4299) (* (* 4.0 l_0_5_11) l_0_5_7))))
 (let ((?x7001 (+ (+ (+ ?x6996 ?x6333) (* (* 4.0 l_0_5_12) l_0_5_8)) (* (* 4.0 l_0_5_13) l_0_5_9))))
 (let ((?x7009 (- (- (- (- ?x7001 ?x6336) ?x6338) (* (* 4.0 l_0_5_22) l_0_5_26)) (* (* 4.0 l_0_5_23) l_0_5_27))))
 (let ((?x7015 (- (- ?x7009 (* (* 4.0 l_0_5_24) l_0_5_28)) (* (* 4.0 l_0_5_25) l_0_5_29))))
 (let ((?x7021 (+ (+ (+ (+ ?x7015 (* (* 2.0 l_0_5_32) l_0_5_41)) ?x7018) ?x6719) ?x6721)))
 (let ((?x7028 (+ (- (- (- (- (- (- ?x7021 ?x6190) ?x6193) ?x6196) ?x6199) ?x6723) ?x6725) ?x6202)))
 (= (+ (+ (+ ?x7028 ?x6205) ?x6208) ?x6211) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x5170 (* ?x6563 l_0_5_34)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6167 (* ?x5928 l_0_5_22)))
 (let ((?x6104 (* ?x5928 l_0_5_19)))
 (let ((?x5982 (* 2.0 l_0_5_1)))
 (let ((?x6161 (* ?x5982 l_0_5_7)))
 (let ((?x1271 (* ?x5982 l_0_5_4)))
 (let ((?x5161 (- (+ (+ (- (- ?x1271 ?x6161) ?x6104) ?x6167) ?x5170) (* (* 2.0 l_0_5_79) l_0_5_82))))
 (let ((?x7066 (- (- ?x5161 (* (* 2.0 l_0_5_80) l_0_5_83)) (* (* 2.0 l_0_5_81) l_0_5_84))))
 (= ?x7066 0.0))))))))))))
(assert
 (let ((?x7084 (* l_0_5_85 l_0_5_85)))
 (let ((?x7082 (* l_0_5_84 l_0_5_84)))
 (let ((?x7080 (* l_0_5_83 l_0_5_83)))
 (let ((?x7078 (* l_0_5_82 l_0_5_82)))
 (let ((?x1111 (* l_0_5_31 l_0_5_31)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x7075 (* ?x6563 l_0_5_37)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6167 (* ?x5928 l_0_5_22)))
 (let ((?x5982 (* 2.0 l_0_5_1)))
 (let ((?x6161 (* ?x5982 l_0_5_7)))
 (let ((?x7085 (- (- (- (- (- (+ (- ?x6161 ?x6167) ?x7075) ?x1111) ?x7078) ?x7080) ?x7082) ?x7084)))
 (= ?x7085 0.0))))))))))))))
(assert
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x6568 (* ?x5893 l_0_5_67)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x6566 (* ?x5890 l_0_5_52)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x5242 (* ?x6563 l_0_5_41)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6271 (* ?x5928 l_0_5_26)))
 (let ((?x6272 (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x6271)))
 (let ((?x5243 (- (- (+ (+ ?x6272 ?x5242) ?x6566) ?x6568) (* (* 2.0 l_0_5_82) l_0_5_86))))
 (let ((?x7102 (- (- ?x5243 (* (* 2.0 l_0_5_83) l_0_5_87)) (* (* 2.0 l_0_5_84) l_0_5_88))))
 (= (- ?x7102 (* (* 2.0 l_0_5_85) l_0_5_89)) 0.0)))))))))))))
(assert
 (let ((?x6368 (* l_0_5_6 l_0_5_6)))
 (let ((?x6394 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6366 (* l_0_5_5 l_0_5_5)))
 (let ((?x6391 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6364 (* l_0_5_4 l_0_5_4)))
 (let ((?x6388 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x6362 (* l_0_5_21 l_0_5_21)))
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6385 (* ?x6384 l_0_5_24)))
 (let ((?x6360 (* l_0_5_20 l_0_5_20)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6382 (* ?x6381 l_0_5_23)))
 (let ((?x7116 (+ (- (* (* 2.0 l_0_5_19) l_0_5_22) (* l_0_5_19 l_0_5_19)) ?x6382)))
 (let ((?x7122 (+ (- (+ (- ?x7116 ?x6360) ?x6385) ?x6362) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x7128 (+ (+ ?x7122 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (= (+ (- (+ (- (+ (- ?x7128 ?x6388) ?x6364) ?x6391) ?x6366) ?x6394) ?x6368) 0.0)))))))))))))))))
(assert
 (let ((?x6445 (* l_0_5_9 l_0_5_9)))
 (let ((?x6443 (* l_0_5_8 l_0_5_8)))
 (let ((?x6441 (* l_0_5_7 l_0_5_7)))
 (let ((?x6394 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x6391 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x6388 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7166 (* 2.0 l_0_5_36)))
 (let ((?x7167 (* ?x7166 l_0_5_39)))
 (let ((?x7163 (* 2.0 l_0_5_35)))
 (let ((?x7164 (* ?x7163 l_0_5_38)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x5170 (* ?x6563 l_0_5_34)))
 (let ((?x6434 (* l_0_5_25 l_0_5_25)))
 (let ((?x6432 (* l_0_5_24 l_0_5_24)))
 (let ((?x6430 (* l_0_5_23 l_0_5_23)))
 (let ((?x6428 (* l_0_5_22 l_0_5_22)))
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6385 (* ?x6384 l_0_5_24)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6382 (* ?x6381 l_0_5_23)))
 (let ((?x7153 (- (- (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_19) l_0_5_22)) ?x6382)))
 (let ((?x7162 (+ (- (+ (+ (+ (+ (- ?x7153 ?x6385) ?x6428) ?x6430) ?x6432) ?x6434) ?x5170) (* (* 2.0 l_0_5_34) l_0_5_37))))
 (let ((?x7173 (- (- (+ (+ (+ (+ (+ ?x7162 ?x7164) ?x7167) ?x6388) ?x6391) ?x6394) ?x6441) ?x6443)))
 (= (- ?x7173 ?x6445) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x6126 (* 2.0 l_0_5_66)))
 (let ((?x6872 (* ?x6126 l_0_5_69)))
 (let ((?x6123 (* 2.0 l_0_5_65)))
 (let ((?x6870 (* ?x6123 l_0_5_68)))
 (let ((?x6120 (* 2.0 l_0_5_64)))
 (let ((?x6868 (* ?x6120 l_0_5_67)))
 (let ((?x6117 (* 2.0 l_0_5_51)))
 (let ((?x6863 (* ?x6117 l_0_5_54)))
 (let ((?x6114 (* 2.0 l_0_5_50)))
 (let ((?x6861 (* ?x6114 l_0_5_53)))
 (let ((?x6111 (* 2.0 l_0_5_49)))
 (let ((?x6856 (* ?x6111 l_0_5_52)))
 (let ((?x7166 (* 2.0 l_0_5_36)))
 (let ((?x7217 (* ?x7166 l_0_5_43)))
 (let ((?x7163 (* 2.0 l_0_5_35)))
 (let ((?x7215 (* ?x7163 l_0_5_42)))
 (let ((?x6465 (* 2.0 l_0_5_25)))
 (let ((?x6466 (* ?x6465 l_0_5_29)))
 (let ((?x6462 (* 2.0 l_0_5_24)))
 (let ((?x6463 (* ?x6462 l_0_5_28)))
 (let ((?x6459 (* 2.0 l_0_5_23)))
 (let ((?x6460 (* ?x6459 l_0_5_27)))
 (let ((?x6456 (* 2.0 l_0_5_22)))
 (let ((?x6457 (* ?x6456 l_0_5_26)))
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6411 (* ?x6384 l_0_5_28)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6409 (* ?x6381 l_0_5_27)))
 (let ((?x6406 (* 2.0 l_0_5_19)))
 (let ((?x6407 (* ?x6406 l_0_5_26)))
 (let ((?x1566 (* 2.0 l_0_5_13)))
 (let ((?x4364 (* ?x1566 l_0_5_9)))
 (let ((?x1570 (* ?x1566 l_0_5_6)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x4369 (* ?x1499 l_0_5_8)))
 (let ((?x1569 (* ?x1499 l_0_5_5)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x1645 (* ?x4296 l_0_5_7)))
 (let ((?x7202 (+ (- (+ (* (* (- 2.0) l_0_5_10) l_0_5_14) (* ?x4296 l_0_5_4)) ?x1645) ?x1569)))
 (let ((?x7209 (+ (- (- (- (- (+ (- ?x7202 ?x4369) ?x1570) ?x4364) ?x6407) ?x6409) ?x6411) ?x6457)))
 (let ((?x7214 (+ (+ (+ (+ ?x7209 ?x6460) ?x6463) ?x6466) (* (* 2.0 l_0_5_34) l_0_5_41))))
 (let ((?x7223 (- (- (+ (+ (+ (+ (+ ?x7214 ?x7215) ?x7217) ?x6856) ?x6861) ?x6863) ?x6868) ?x6870)))
 (= (- ?x7223 ?x6872) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6445 (* l_0_5_9 l_0_5_9)))
 (let ((?x6443 (* l_0_5_8 l_0_5_8)))
 (let ((?x6441 (* l_0_5_7 l_0_5_7)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x7075 (* ?x6563 l_0_5_37)))
 (let ((?x6434 (* l_0_5_25 l_0_5_25)))
 (let ((?x6432 (* l_0_5_24 l_0_5_24)))
 (let ((?x6430 (* l_0_5_23 l_0_5_23)))
 (let ((?x6433 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_22 l_0_5_22)) ?x6430) ?x6432)))
 (let ((?x6435 (- ?x6433 ?x6434)))
 (let ((?x7243 (+ (+ (- ?x6435 ?x7075) (* 1.0 (* l_0_5_37 l_0_5_37))) (* 1.0 (* l_0_5_38 l_0_5_38)))))
 (let ((?x7249 (+ (+ ?x7243 (* 1.0 (* l_0_5_39 l_0_5_39))) (* 1.0 (* l_0_5_40 l_0_5_40)))))
 (= (+ (+ (+ ?x7249 ?x6441) ?x6443) ?x6445) 0.0))))))))))))))
(assert
 (let ((?x6971 (* l_0_5_70 l_0_5_70)))
 (let ((?x6967 (* l_0_5_69 l_0_5_69)))
 (let ((?x6965 (* l_0_5_68 l_0_5_68)))
 (let ((?x6963 (* l_0_5_67 l_0_5_67)))
 (let ((?x6961 (* l_0_5_55 l_0_5_55)))
 (let ((?x6959 (* l_0_5_54 l_0_5_54)))
 (let ((?x6957 (* l_0_5_53 l_0_5_53)))
 (let ((?x6955 (* l_0_5_52 l_0_5_52)))
 (let ((?x7266 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x7263 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x7260 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x6563 (* 2.0 l_0_5_31)))
 (let ((?x5242 (* ?x6563 l_0_5_41)))
 (let ((?x6465 (* 2.0 l_0_5_25)))
 (let ((?x6466 (* ?x6465 l_0_5_29)))
 (let ((?x6462 (* 2.0 l_0_5_24)))
 (let ((?x6463 (* ?x6462 l_0_5_28)))
 (let ((?x6459 (* 2.0 l_0_5_23)))
 (let ((?x6460 (* ?x6459 l_0_5_27)))
 (let ((?x6456 (* 2.0 l_0_5_22)))
 (let ((?x6457 (* ?x6456 l_0_5_26)))
 (let ((?x1566 (* 2.0 l_0_5_13)))
 (let ((?x4364 (* ?x1566 l_0_5_9)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x4369 (* ?x1499 l_0_5_8)))
 (let ((?x4296 (* 2.0 l_0_5_11)))
 (let ((?x1645 (* ?x4296 l_0_5_7)))
 (let ((?x6458 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x1645) ?x4369) ?x4364) ?x6457)))
 (let ((?x6467 (- (- (- ?x6458 ?x6460) ?x6463) ?x6466)))
 (let ((?x7264 (+ (+ (+ (- ?x6467 ?x5242) (* (* 2.0 l_0_5_37) l_0_5_41)) ?x7260) ?x7263)))
 (let ((?x7273 (- (- (+ (+ (+ (+ (+ ?x7264 ?x7266) ?x6955) ?x6957) ?x6959) ?x6961) ?x6963) ?x6965)))
 (= (- (- ?x7273 ?x6967) ?x6971) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3259 (* l_0_5_81 l_0_5_81)))
 (let ((?x3293 (* l_0_5_80 l_0_5_80)))
 (let ((?x3292 (* l_0_5_79 l_0_5_79)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6104 (* ?x5928 l_0_5_19)))
 (let ((?x3255 (- (- (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x6104) ?x3292) ?x3293) ?x3259)))
 (= ?x3255 0.0))))))))
(assert
 (let ((?x5893 (* 2.0 l_0_5_61)))
 (let ((?x6535 (* ?x5893 l_0_5_64)))
 (let ((?x5890 (* 2.0 l_0_5_46)))
 (let ((?x6533 (* ?x5890 l_0_5_49)))
 (let ((?x5928 (* 2.0 l_0_5_16)))
 (let ((?x6271 (* ?x5928 l_0_5_26)))
 (let ((?x7303 (- (- (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x6271) ?x6533) ?x6535) (* (* 2.0 l_0_5_79) l_0_5_86))))
 (let ((?x7307 (- (- ?x7303 (* (* 2.0 l_0_5_80) l_0_5_87)) (* (* 2.0 l_0_5_81) l_0_5_88))))
 (= ?x7307 0.0))))))))))
(assert
 (let ((?x6368 (* l_0_5_6 l_0_5_6)))
 (let ((?x6366 (* l_0_5_5 l_0_5_5)))
 (let ((?x6364 (* l_0_5_4 l_0_5_4)))
 (let ((?x6362 (* l_0_5_21 l_0_5_21)))
 (let ((?x7316 (- (+ (+ (* l_0_5_19 l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x6362) ?x6364)))
 (= (- (- ?x7316 ?x6366) ?x6368) 0.0)))))))
(assert
 (let ((?x6816 (* l_0_5_66 l_0_5_66)))
 (let ((?x6814 (* l_0_5_65 l_0_5_65)))
 (let ((?x6812 (* l_0_5_64 l_0_5_64)))
 (let ((?x6808 (* l_0_5_51 l_0_5_51)))
 (let ((?x6806 (* l_0_5_50 l_0_5_50)))
 (let ((?x6802 (* l_0_5_49 l_0_5_49)))
 (let ((?x6384 (* 2.0 l_0_5_21)))
 (let ((?x6411 (* ?x6384 l_0_5_28)))
 (let ((?x6381 (* 2.0 l_0_5_20)))
 (let ((?x6409 (* ?x6381 l_0_5_27)))
 (let ((?x6406 (* 2.0 l_0_5_19)))
 (let ((?x6407 (* ?x6406 l_0_5_26)))
 (let ((?x1566 (* 2.0 l_0_5_13)))
 (let ((?x1570 (* ?x1566 l_0_5_6)))
 (let ((?x1499 (* 2.0 l_0_5_12)))
 (let ((?x1569 (* ?x1499 l_0_5_5)))
 (let ((?x7330 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x1569) ?x1570) ?x6407) ?x6409)))
 (let ((?x7337 (- (- (- (+ (+ (+ (+ ?x7330 ?x6411) ?x6802) ?x6806) ?x6808) ?x6812) ?x6814) ?x6816)))
 (= ?x7337 0.0))))))))))))))))))))
(assert
 (= (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) 0.0))
(assert
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x6851 (* ?x6850 l_0_5_35)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_34) ?x6851) 0.0))))
(assert
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x6953 (* ?x6850 l_0_5_38)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_37) ?x6953) 0.0))))
(assert
 (let ((?x6850 (* 2.0 l_0_5_33)))
 (let ((?x7018 (* ?x6850 l_0_5_42)))
 (= (- (* (* (- 2.0) l_0_5_32) l_0_5_41) ?x7018) 0.0))))
(assert
 (let ((?x7126 (* l_0_5_36 l_0_5_36)))
 (= (- (- (* (- l_0_5_34) l_0_5_34) (* l_0_5_35 l_0_5_35)) ?x7126) 0.0)))
(assert
 (let ((?x7166 (* 2.0 l_0_5_36)))
 (let ((?x7167 (* ?x7166 l_0_5_39)))
 (let ((?x7163 (* 2.0 l_0_5_35)))
 (let ((?x7164 (* ?x7163 l_0_5_38)))
 (= (- (- (* (* (- 2.0) l_0_5_34) l_0_5_37) ?x7164) ?x7167) 0.0))))))
(assert
 (let ((?x7166 (* 2.0 l_0_5_36)))
 (let ((?x7217 (* ?x7166 l_0_5_43)))
 (let ((?x7163 (* 2.0 l_0_5_35)))
 (let ((?x7215 (* ?x7163 l_0_5_42)))
 (= (- (- (* (* (- 2.0) l_0_5_34) l_0_5_41) ?x7215) ?x7217) 0.0))))))
(assert
 (let ((?x7247 (* l_0_5_40 l_0_5_40)))
 (let ((?x7244 (* l_0_5_39 l_0_5_39)))
 (let ((?x3530 (- (- (- (* (- l_0_5_37) l_0_5_37) (* l_0_5_38 l_0_5_38)) ?x7244) ?x7247)))
 (= ?x3530 0.0)))))
(assert
 (let ((?x7266 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x7263 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x7260 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (= (- (- (- (* (* (- 2.0) l_0_5_37) l_0_5_41) ?x7260) ?x7263) ?x7266) 0.0)))))
(assert
 (let ((?x7387 (- (- (* l_0_5_46 l_0_5_46) (* l_0_5_61 l_0_5_61)) (* (* 2.0 l_0_5_76) l_0_5_86))))
 (= ?x7387 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (let ((?x7453 (* l_0_6_90 l_0_6_90)))
 (let ((?x7451 (* l_0_6_89 l_0_6_89)))
 (let ((?x7449 (* l_0_6_88 l_0_6_88)))
 (let ((?x7447 (* l_0_6_87 l_0_6_87)))
 (let ((?x7445 (* l_0_6_86 l_0_6_86)))
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x7443 (* ?x7442 l_0_6_71)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x7440 (* ?x7439 l_0_6_56)))
 (let ((?x7437 (* l_0_6_16 l_0_6_16)))
 (let ((?x7435 (* l_0_6_105 l_0_6_105)))
 (let ((?x7433 (* l_0_6_104 l_0_6_104)))
 (let ((?x7431 (* l_0_6_103 l_0_6_103)))
 (let ((?x7429 (* l_0_6_102 l_0_6_102)))
 (let ((?x7432 (- (- (- (* l_0_6_1 l_0_6_1) (* l_0_6_101 l_0_6_101)) ?x7429) ?x7431)))
 (let ((?x7448 (- (- (- (+ (- (- (- ?x7432 ?x7433) ?x7435) ?x7437) ?x7440) ?x7443) ?x7445) ?x7447)))
 (= (+ (- (- (- ?x7448 ?x7449) ?x7451) ?x7453) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x3714 (* l_0_6_61 l_0_6_61)))
 (let ((?x5585 (* l_0_6_46 l_0_6_46)))
 (let ((?x7426 (* l_0_6_1 l_0_6_1)))
 (let ((?x5582 (* 2.0 ?x7426)))
 (let ((?x7480 (- (+ (- (- ?x5582 (* (* 2.0 l_0_6_16) l_0_6_16)) ?x5585) ?x3714) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (+ (- ?x7480 (* (* 2.0 l_0_6_91) l_0_6_92)) 2.0) 0.0)))))))
(assert
 (= (- (* (- l_0_6_76) l_0_6_76) (* l_0_6_91 l_0_6_91)) 0.0))
(assert
 (let ((?x7503 (+ (- (* l_0_6_1 l_0_6_1) (* l_0_6_16 l_0_6_16)) (* 1.0 (* l_0_6_31 l_0_6_31)))))
 (let ((?x7507 (- (- ?x7503 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= (+ ?x7507 1.0) 0.0))))
(assert
 (let ((?x7523 (- (+ (* (- l_0_6_1) l_0_6_1) (* l_0_6_16 l_0_6_16)) (* (* 2.0 l_0_6_76) l_0_6_79))))
 (= (- (- ?x7523 (* (* 2.0 l_0_6_91) l_0_6_94)) 1.0) 0.0)))
(assert
 (let ((?x7601 (* l_0_6_75 l_0_6_75)))
 (let ((?x7599 (* l_0_6_74 l_0_6_74)))
 (let ((?x7597 (* l_0_6_73 l_0_6_73)))
 (let ((?x7595 (* l_0_6_72 l_0_6_72)))
 (let ((?x7593 (* l_0_6_71 l_0_6_71)))
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x7591 (* ?x7590 l_0_6_72)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x7588 (* ?x7587 l_0_6_71)))
 (let ((?x7585 (* l_0_6_60 l_0_6_60)))
 (let ((?x7583 (* l_0_6_59 l_0_6_59)))
 (let ((?x7581 (* l_0_6_58 l_0_6_58)))
 (let ((?x7579 (* l_0_6_57 l_0_6_57)))
 (let ((?x7577 (* l_0_6_56 l_0_6_56)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x7575 (* ?x7574 l_0_6_57)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x7572 (* ?x7571 l_0_6_56)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7554 (* ?x3642 l_0_6_17)))
 (let ((?x7551 (* l_0_6_15 l_0_6_15)))
 (let ((?x7552 (* 2.0 ?x7551)))
 (let ((?x7548 (* l_0_6_14 l_0_6_14)))
 (let ((?x7549 (* 2.0 ?x7548)))
 (let ((?x7545 (* l_0_6_13 l_0_6_13)))
 (let ((?x7546 (* 2.0 ?x7545)))
 (let ((?x7542 (* l_0_6_12 l_0_6_12)))
 (let ((?x7543 (* 2.0 ?x7542)))
 (let ((?x7539 (* l_0_6_11 l_0_6_11)))
 (let ((?x7540 (* 2.0 ?x7539)))
 (let ((?x5661 (* 2.0 l_0_6_1)))
 (let ((?x7538 (* ?x5661 l_0_6_2)))
 (let ((?x7558 (- (- (+ (+ (+ (+ (+ ?x7538 ?x7540) ?x7543) ?x7546) ?x7549) ?x7552) ?x7554) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x7564 (- (- ?x7558 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x7570 (- (- ?x7564 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (let ((?x7586 (- (- (- (- (- (+ (+ ?x7570 ?x7572) ?x7575) ?x7577) ?x7579) ?x7581) ?x7583) ?x7585)))
 (let ((?x7602 (+ (+ (+ (+ (+ (- (- ?x7586 ?x7588) ?x7591) ?x7593) ?x7595) ?x7597) ?x7599) ?x7601)))
 (= ?x7602 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7663 (* 2.0 l_0_6_66)))
 (let ((?x7664 (* ?x7663 l_0_6_73)))
 (let ((?x7660 (* 2.0 l_0_6_65)))
 (let ((?x7661 (* ?x7660 l_0_6_72)))
 (let ((?x7657 (* 2.0 l_0_6_64)))
 (let ((?x7658 (* ?x7657 l_0_6_71)))
 (let ((?x7654 (* 2.0 l_0_6_51)))
 (let ((?x7655 (* ?x7654 l_0_6_58)))
 (let ((?x7651 (* 2.0 l_0_6_50)))
 (let ((?x7652 (* ?x7651 l_0_6_57)))
 (let ((?x7648 (* 2.0 l_0_6_49)))
 (let ((?x7649 (* ?x7648 l_0_6_56)))
 (let ((?x4799 (* l_0_6_30 l_0_6_30)))
 (let ((?x3797 (* l_0_6_29 l_0_6_29)))
 (let ((?x3787 (* l_0_6_28 l_0_6_28)))
 (let ((?x5674 (* l_0_6_27 l_0_6_27)))
 (let ((?x5672 (* l_0_6_26 l_0_6_26)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x3889 (* ?x3642 l_0_6_19)))
 (let ((?x7551 (* l_0_6_15 l_0_6_15)))
 (let ((?x7548 (* l_0_6_14 l_0_6_14)))
 (let ((?x7545 (* l_0_6_13 l_0_6_13)))
 (let ((?x7542 (* l_0_6_12 l_0_6_12)))
 (let ((?x3892 (- (- (* (* 2.0 l_0_6_1) l_0_6_4) (* l_0_6_11 l_0_6_11)) ?x7542)))
 (let ((?x7645 (+ (+ (+ (- (- (- (- ?x3892 ?x7545) ?x7548) ?x7551) ?x3889) ?x5672) ?x5674) ?x3787)))
 (let ((?x7662 (- (- (+ (+ (+ (+ (+ ?x7645 ?x3797) ?x4799) ?x7649) ?x7652) ?x7655) ?x7658) ?x7661)))
 (= (- ?x7662 ?x7664) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7753 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x7750 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x7747 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x7744 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x7741 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x7738 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x7735 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x7732 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x4799 (* l_0_6_30 l_0_6_30)))
 (let ((?x3797 (* l_0_6_29 l_0_6_29)))
 (let ((?x3787 (* l_0_6_28 l_0_6_28)))
 (let ((?x5674 (* l_0_6_27 l_0_6_27)))
 (let ((?x5672 (* l_0_6_26 l_0_6_26)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7709 (* ?x3642 l_0_6_22)))
 (let ((?x7551 (* l_0_6_15 l_0_6_15)))
 (let ((?x7548 (* l_0_6_14 l_0_6_14)))
 (let ((?x7545 (* l_0_6_13 l_0_6_13)))
 (let ((?x7542 (* l_0_6_12 l_0_6_12)))
 (let ((?x7705 (+ (+ (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_11 l_0_6_11)) ?x7542)))
 (let ((?x7713 (- (- (- (- (+ (+ (+ ?x7705 ?x7545) ?x7548) ?x7551) ?x7709) ?x5672) ?x5674) ?x3787)))
 (let ((?x7721 (+ (+ (- (- ?x7713 ?x3797) ?x4799) (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x7727 (+ (+ ?x7721 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x7739 (+ (+ (+ (+ ?x7727 (* 1.0 (* l_0_6_45 l_0_6_45))) ?x7732) ?x7735) ?x7738)))
 (= (- (- (- (- (+ ?x7739 ?x7741) ?x7744) ?x7747) ?x7750) ?x7753) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7601 (* l_0_6_75 l_0_6_75)))
 (let ((?x7599 (* l_0_6_74 l_0_6_74)))
 (let ((?x7597 (* l_0_6_73 l_0_6_73)))
 (let ((?x7595 (* l_0_6_72 l_0_6_72)))
 (let ((?x7593 (* l_0_6_71 l_0_6_71)))
 (let ((?x7585 (* l_0_6_60 l_0_6_60)))
 (let ((?x7583 (* l_0_6_59 l_0_6_59)))
 (let ((?x7581 (* l_0_6_58 l_0_6_58)))
 (let ((?x7579 (* l_0_6_57 l_0_6_57)))
 (let ((?x7577 (* l_0_6_56 l_0_6_56)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7809 (* ?x3642 l_0_6_26)))
 (let ((?x5661 (* 2.0 l_0_6_1)))
 (let ((?x7808 (* ?x5661 l_0_6_11)))
 (let ((?x7816 (- (+ (+ (+ (+ (+ (- ?x7808 ?x7809) ?x7577) ?x7579) ?x7581) ?x7583) ?x7585) ?x7593)))
 (= (- (- (- (- ?x7816 ?x7595) ?x7597) ?x7599) ?x7601) 0.0)))))))))))))))))
(assert
 (let ((?x7837 (* l_0_6_3 l_0_6_3)))
 (let ((?x7835 (* l_0_6_2 l_0_6_2)))
 (let ((?x7838 (+ (+ (- (* (- l_0_6_17) l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x7835) ?x7837)))
 (= ?x7838 0.0)))))
(assert
 (let ((?x7858 (* 2.0 l_0_6_3)))
 (let ((?x7859 (* ?x7858 l_0_6_5)))
 (let ((?x7855 (* 2.0 l_0_6_2)))
 (let ((?x7856 (* ?x7855 l_0_6_4)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7853 (* ?x7852 l_0_6_20)))
 (let ((?x7846 (* (- 2.0) l_0_6_17)))
 (let ((?x7851 (* ?x7846 l_0_6_19)))
 (= (+ (+ (- ?x7851 ?x7853) ?x7856) ?x7859) 0.0))))))))))
(assert
 (let ((?x7858 (* 2.0 l_0_6_3)))
 (let ((?x7878 (* ?x7858 l_0_6_8)))
 (let ((?x7855 (* 2.0 l_0_6_2)))
 (let ((?x7876 (* ?x7855 l_0_6_7)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7874 (* ?x7852 l_0_6_23)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x7874) ?x7876) ?x7878) 0.0))))))))
(assert
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7891 (* ?x7852 l_0_6_27)))
 (let ((?x7888 (* 2.0 l_0_6_17)))
 (let ((?x7889 (* ?x7888 l_0_6_26)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x592 (* ?x5816 l_0_6_3)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x3968 (* ?x5807 l_0_6_2)))
 (= (- (- (+ ?x3968 ?x592) ?x7889) ?x7891) 0.0))))))))))
(assert
 (let ((?x7921 (* l_0_6_6 l_0_6_6)))
 (let ((?x7919 (* l_0_6_5 l_0_6_5)))
 (let ((?x7917 (* l_0_6_4 l_0_6_4)))
 (let ((?x7915 (* l_0_6_21 l_0_6_21)))
 (let ((?x7918 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7915) ?x7917)))
 (= (+ (+ ?x7918 ?x7919) ?x7921) 0.0)))))))
(assert
 (let ((?x7951 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7948 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7945 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7942 (* ?x7941 l_0_6_24)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7939 (* ?x7938 l_0_6_23)))
 (let ((?x7949 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x7939) ?x7942) ?x7945) ?x7948)))
 (= (+ ?x7949 ?x7951) 0.0))))))))))
(assert
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7983 (* ?x7941 l_0_6_28)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7981 (* ?x7938 l_0_6_27)))
 (let ((?x7978 (* 2.0 l_0_6_19)))
 (let ((?x7979 (* ?x7978 l_0_6_26)))
 (let ((?x7969 (* 2.0 l_0_6_13)))
 (let ((?x7976 (* ?x7969 l_0_6_6)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x7966 (* ?x5816 l_0_6_5)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x7964 (* ?x5807 l_0_6_4)))
 (= (- (- (- (+ (+ ?x7964 ?x7966) ?x7976) ?x7979) ?x7981) ?x7983) 0.0))))))))))))))
(assert
 (let ((?x8028 (* l_0_6_9 l_0_6_9)))
 (let ((?x8026 (* l_0_6_8 l_0_6_8)))
 (let ((?x8024 (* l_0_6_7 l_0_6_7)))
 (let ((?x7728 (* l_0_6_45 l_0_6_45)))
 (let ((?x7725 (* l_0_6_44 l_0_6_44)))
 (let ((?x7722 (* l_0_6_43 l_0_6_43)))
 (let ((?x7719 (* l_0_6_42 l_0_6_42)))
 (let ((?x7716 (* l_0_6_41 l_0_6_41)))
 (let ((?x8017 (* l_0_6_25 l_0_6_25)))
 (let ((?x8015 (* l_0_6_24 l_0_6_24)))
 (let ((?x8013 (* l_0_6_23 l_0_6_23)))
 (let ((?x8016 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8013) ?x8015)))
 (let ((?x8018 (- ?x8016 ?x8017)))
 (let ((?x8027 (+ (+ (- (- (- (- (- ?x8018 ?x7716) ?x7719) ?x7722) ?x7725) ?x7728) ?x8024) ?x8026)))
 (= (+ ?x8027 ?x8028) 0.0))))))))))))))))
(assert
 (let ((?x8060 (* 2.0 l_0_6_25)))
 (let ((?x8061 (* ?x8060 l_0_6_29)))
 (let ((?x8057 (* 2.0 l_0_6_24)))
 (let ((?x8058 (* ?x8057 l_0_6_28)))
 (let ((?x8054 (* 2.0 l_0_6_23)))
 (let ((?x8055 (* ?x8054 l_0_6_27)))
 (let ((?x8051 (* 2.0 l_0_6_22)))
 (let ((?x8052 (* ?x8051 l_0_6_26)))
 (let ((?x7969 (* 2.0 l_0_6_13)))
 (let ((?x8049 (* ?x7969 l_0_6_9)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x8047 (* ?x5816 l_0_6_8)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x8045 (* ?x5807 l_0_6_7)))
 (let ((?x8053 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x8045) ?x8047) ?x8049) ?x8052)))
 (let ((?x8062 (- (- (- ?x8053 ?x8055) ?x8058) ?x8061)))
 (= ?x8062 0.0))))))))))))))))))
(assert
 (let ((?x4799 (* l_0_6_30 l_0_6_30)))
 (let ((?x3797 (* l_0_6_29 l_0_6_29)))
 (let ((?x3787 (* l_0_6_28 l_0_6_28)))
 (let ((?x5674 (* l_0_6_27 l_0_6_27)))
 (let ((?x5672 (* l_0_6_26 l_0_6_26)))
 (let ((?x7551 (* l_0_6_15 l_0_6_15)))
 (let ((?x7548 (* l_0_6_14 l_0_6_14)))
 (let ((?x7545 (* l_0_6_13 l_0_6_13)))
 (let ((?x8097 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7545) ?x7548)))
 (= (- (- (- (- (- (+ ?x8097 ?x7551) ?x5672) ?x5674) ?x3787) ?x3797) ?x4799) 0.0)))))))))))
(assert
 (let ((?x8125 (* l_0_6_93 l_0_6_93)))
 (let ((?x8123 (* l_0_6_92 l_0_6_92)))
 (let ((?x8121 (* l_0_6_78 l_0_6_78)))
 (let ((?x8119 (* l_0_6_77 l_0_6_77)))
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x8117 (* ?x7442 l_0_6_62)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x8115 (* ?x7439 l_0_6_47)))
 (let ((?x8114 (- (* (* 4.0 l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_16) l_0_6_17))))
 (= (- (- (- (- (+ (- ?x8114 ?x8115) ?x8117) ?x8119) ?x8121) ?x8123) ?x8125) 0.0)))))))))))
(assert
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x8157 (* ?x7442 l_0_6_64)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x8155 (* ?x7439 l_0_6_49)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7554 (* ?x3642 l_0_6_17)))
 (let ((?x8151 (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_1) l_0_6_4))))
 (let ((?x8158 (+ (- (- (+ ?x8151 ?x7554) (* (* 4.0 l_0_6_16) l_0_6_19)) ?x8155) ?x8157)))
 (let ((?x8164 (- (- ?x8158 (* (* 2.0 l_0_6_77) l_0_6_79)) (* (* 2.0 l_0_6_78) l_0_6_80))))
 (let ((?x8170 (- (- ?x8164 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x8170 0.0))))))))))))
(assert
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x8197 (* ?x7442 l_0_6_67)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x8195 (* ?x7439 l_0_6_52)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x5925 (* ?x5924 l_0_6_32)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7554 (* ?x3642 l_0_6_17)))
 (let ((?x5661 (* 2.0 l_0_6_1)))
 (let ((?x7538 (* ?x5661 l_0_6_2)))
 (let ((?x4160 (- (- (+ ?x7538 (* (* 4.0 l_0_6_1) l_0_6_7)) ?x7554) (* (* 4.0 l_0_6_16) l_0_6_22))))
 (let ((?x8200 (- (+ (- (+ ?x4160 ?x5925) ?x8195) ?x8197) (* (* 2.0 l_0_6_77) l_0_6_82))))
 (let ((?x8204 (- (- ?x8200 (* (* 2.0 l_0_6_78) l_0_6_83)) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (- ?x8204 (* (* 2.0 l_0_6_93) l_0_6_98)) 0.0)))))))))))))))
(assert
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x7443 (* ?x7442 l_0_6_71)))
 (let ((?x8117 (* ?x7442 l_0_6_62)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x7440 (* ?x7439 l_0_6_56)))
 (let ((?x8115 (* ?x7439 l_0_6_47)))
 (let ((?x8231 (- (* (* 4.0 l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x8236 (- (- ?x8231 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 4.0 l_0_6_16) l_0_6_26))))
 (let ((?x8242 (- (+ (- (- (+ ?x8236 ?x8115) ?x7440) ?x8117) ?x7443) (* (* 2.0 l_0_6_77) l_0_6_86))))
 (= (- ?x8242 (* (* 2.0 l_0_6_78) l_0_6_87)) 0.0)))))))))))
(assert
 (let ((?x8276 (* l_0_6_63 l_0_6_63)))
 (let ((?x8274 (* l_0_6_62 l_0_6_62)))
 (let ((?x8272 (* l_0_6_48 l_0_6_48)))
 (let ((?x8270 (* l_0_6_47 l_0_6_47)))
 (let ((?x7837 (* l_0_6_3 l_0_6_3)))
 (let ((?x8268 (* 2.0 ?x7837)))
 (let ((?x7835 (* l_0_6_2 l_0_6_2)))
 (let ((?x8266 (* 2.0 ?x7835)))
 (let ((?x8265 (- (* (* (- 2.0) l_0_6_17) l_0_6_17) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (= (+ (+ (- (- (+ (+ ?x8265 ?x8266) ?x8268) ?x8270) ?x8272) ?x8274) ?x8276) 0.0)))))))))))
(assert
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x8303 (* ?x7590 l_0_6_65)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x8301 (* ?x7587 l_0_6_64)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x8299 (* ?x7574 l_0_6_50)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x8297 (* ?x7571 l_0_6_49)))
 (let ((?x7837 (* l_0_6_3 l_0_6_3)))
 (let ((?x7835 (* l_0_6_2 l_0_6_2)))
 (let ((?x7833 (* l_0_6_18 l_0_6_18)))
 (let ((?x8287 (- (+ (* (* (- 4.0) l_0_6_17) l_0_6_19) (* l_0_6_17 l_0_6_17)) (* (* 4.0 l_0_6_18) l_0_6_20))))
 (let ((?x8295 (+ (- (+ (+ ?x8287 ?x7833) (* (* 4.0 l_0_6_2) l_0_6_4)) ?x7835) (* (* 4.0 l_0_6_3) l_0_6_5))))
 (= (+ (+ (- (- (- ?x8295 ?x7837) ?x8297) ?x8299) ?x8301) ?x8303) 0.0)))))))))))))))
(assert
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x8347 (* ?x7590 l_0_6_68)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x8345 (* ?x7587 l_0_6_67)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x8343 (* ?x7574 l_0_6_53)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x8341 (* ?x7571 l_0_6_52)))
 (let ((?x7837 (* l_0_6_3 l_0_6_3)))
 (let ((?x7835 (* l_0_6_2 l_0_6_2)))
 (let ((?x7833 (* l_0_6_18 l_0_6_18)))
 (let ((?x8327 (- (- (* (* (- 4.0) l_0_6_17) l_0_6_22) (* l_0_6_17 l_0_6_17)) (* (* 4.0 l_0_6_18) l_0_6_23))))
 (let ((?x8333 (+ (+ (+ (- ?x8327 ?x7833) (* (* 4.0 l_0_6_2) l_0_6_7)) ?x7835) (* (* 4.0 l_0_6_3) l_0_6_8))))
 (let ((?x8340 (+ (+ (+ ?x8333 ?x7837) (* 1.0 (* l_0_6_32 l_0_6_32))) (* 1.0 (* l_0_6_33 l_0_6_33)))))
 (= (+ (+ (- (- ?x8340 ?x8341) ?x8343) ?x8345) ?x8347) 0.0))))))))))))))))
(assert
 (let ((?x8276 (* l_0_6_63 l_0_6_63)))
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x7591 (* ?x7590 l_0_6_72)))
 (let ((?x8274 (* l_0_6_62 l_0_6_62)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x7588 (* ?x7587 l_0_6_71)))
 (let ((?x8272 (* l_0_6_48 l_0_6_48)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x7575 (* ?x7574 l_0_6_57)))
 (let ((?x8270 (* l_0_6_47 l_0_6_47)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x7572 (* ?x7571 l_0_6_56)))
 (let ((?x8374 (+ (* (* 4.0 l_0_6_11) l_0_6_2) (* (* 4.0 l_0_6_12) l_0_6_3))))
 (let ((?x8379 (- (- ?x8374 (* (* 4.0 l_0_6_17) l_0_6_26)) (* (* 4.0 l_0_6_18) l_0_6_27))))
 (let ((?x8386 (+ (- (+ (+ (- (+ (- ?x8379 ?x7572) ?x8270) ?x7575) ?x8272) ?x7588) ?x8274) ?x7591)))
 (= (- ?x8386 ?x8276) 0.0)))))))))))))))))
(assert
 (let ((?x8434 (* l_0_6_66 l_0_6_66)))
 (let ((?x8432 (* l_0_6_65 l_0_6_65)))
 (let ((?x8430 (* l_0_6_64 l_0_6_64)))
 (let ((?x8426 (* l_0_6_51 l_0_6_51)))
 (let ((?x8424 (* l_0_6_50 l_0_6_50)))
 (let ((?x7919 (* l_0_6_5 l_0_6_5)))
 (let ((?x8422 (* 2.0 ?x7919)))
 (let ((?x8420 (* l_0_6_49 l_0_6_49)))
 (let ((?x7917 (* l_0_6_4 l_0_6_4)))
 (let ((?x8418 (* 2.0 ?x7917)))
 (let ((?x7858 (* 2.0 l_0_6_3)))
 (let ((?x7859 (* ?x7858 l_0_6_5)))
 (let ((?x7855 (* 2.0 l_0_6_2)))
 (let ((?x7856 (* ?x7855 l_0_6_4)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7853 (* ?x7852 l_0_6_20)))
 (let ((?x8411 (- (+ (* (* 2.0 l_0_6_17) l_0_6_19) ?x7853) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x8416 (- (- (- ?x8411 ?x7856) (* (* 2.0 l_0_6_20) l_0_6_20)) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (let ((?x8429 (+ (- (- (+ (- (+ (- ?x8416 ?x7859) ?x8418) ?x8420) ?x8422) ?x8424) ?x8426) (* 2.0 (* l_0_6_6 l_0_6_6)))))
 (= (+ (+ (+ ?x8429 ?x8430) ?x8432) ?x8434) 0.0)))))))))))))))))))))
(assert
 (let ((?x7663 (* 2.0 l_0_6_66)))
 (let ((?x8502 (* ?x7663 l_0_6_69)))
 (let ((?x7660 (* 2.0 l_0_6_65)))
 (let ((?x8500 (* ?x7660 l_0_6_68)))
 (let ((?x7657 (* 2.0 l_0_6_64)))
 (let ((?x8498 (* ?x7657 l_0_6_67)))
 (let ((?x7654 (* 2.0 l_0_6_51)))
 (let ((?x8493 (* ?x7654 l_0_6_54)))
 (let ((?x7651 (* 2.0 l_0_6_50)))
 (let ((?x8491 (* ?x7651 l_0_6_53)))
 (let ((?x7648 (* 2.0 l_0_6_49)))
 (let ((?x8486 (* ?x7648 l_0_6_52)))
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8481 (* ?x8480 l_0_6_35)))
 (let ((?x7858 (* 2.0 l_0_6_3)))
 (let ((?x7878 (* ?x7858 l_0_6_8)))
 (let ((?x7859 (* ?x7858 l_0_6_5)))
 (let ((?x7855 (* 2.0 l_0_6_2)))
 (let ((?x7876 (* ?x7855 l_0_6_7)))
 (let ((?x7856 (* ?x7855 l_0_6_4)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7874 (* ?x7852 l_0_6_23)))
 (let ((?x7853 (* ?x7852 l_0_6_20)))
 (let ((?x7888 (* 2.0 l_0_6_17)))
 (let ((?x1545 (* ?x7888 l_0_6_22)))
 (let ((?x7846 (* (- 2.0) l_0_6_17)))
 (let ((?x7851 (* ?x7846 l_0_6_19)))
 (let ((?x8466 (- (+ (- (+ ?x7851 ?x1545) ?x7853) ?x7874) (* (* 4.0 l_0_6_19) l_0_6_22))))
 (let ((?x8474 (- (- (- (+ ?x8466 ?x7856) ?x7876) (* (* 4.0 l_0_6_20) l_0_6_23)) (* (* 4.0 l_0_6_21) l_0_6_24))))
 (let ((?x8482 (+ (+ (- (+ ?x8474 ?x7859) ?x7878) (* (* 2.0 l_0_6_32) l_0_6_34)) ?x8481)))
 (let ((?x8490 (+ (- (+ ?x8482 (* (* 4.0 l_0_6_4) l_0_6_7)) ?x8486) (* (* 4.0 l_0_6_5) l_0_6_8))))
 (let ((?x8499 (+ (+ (- (- ?x8490 ?x8491) ?x8493) (* (* 4.0 l_0_6_6) l_0_6_9)) ?x8498)))
 (= (+ (+ ?x8499 ?x8500) ?x8502) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7663 (* 2.0 l_0_6_66)))
 (let ((?x7664 (* ?x7663 l_0_6_73)))
 (let ((?x7660 (* 2.0 l_0_6_65)))
 (let ((?x7661 (* ?x7660 l_0_6_72)))
 (let ((?x7657 (* 2.0 l_0_6_64)))
 (let ((?x7658 (* ?x7657 l_0_6_71)))
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x8303 (* ?x7590 l_0_6_65)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x8301 (* ?x7587 l_0_6_64)))
 (let ((?x7654 (* 2.0 l_0_6_51)))
 (let ((?x7655 (* ?x7654 l_0_6_58)))
 (let ((?x7651 (* 2.0 l_0_6_50)))
 (let ((?x7652 (* ?x7651 l_0_6_57)))
 (let ((?x7648 (* 2.0 l_0_6_49)))
 (let ((?x7649 (* ?x7648 l_0_6_56)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x8299 (* ?x7574 l_0_6_50)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x8297 (* ?x7571 l_0_6_49)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7891 (* ?x7852 l_0_6_27)))
 (let ((?x7888 (* 2.0 l_0_6_17)))
 (let ((?x7889 (* ?x7888 l_0_6_26)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x592 (* ?x5816 l_0_6_3)))
 (let ((?x8544 (+ (* (* (- 2.0) l_0_6_11) l_0_6_2) (* (* 4.0 l_0_6_11) l_0_6_4))))
 (let ((?x8560 (+ (+ (- ?x8544 ?x592) (* (* 4.0 l_0_6_12) l_0_6_5)) (* (* 4.0 l_0_6_13) l_0_6_6))))
 (let ((?x8566 (- (- (+ (+ ?x8560 ?x7889) ?x7891) (* (* 4.0 l_0_6_19) l_0_6_26)) (* (* 4.0 l_0_6_20) l_0_6_27))))
 (let ((?x8571 (- (+ (+ (- ?x8566 (* (* 4.0 l_0_6_21) l_0_6_28)) ?x8297) ?x8299) ?x7649)))
 (let ((?x8578 (+ (+ (+ (- (- (- (- ?x8571 ?x7652) ?x7655) ?x8301) ?x8303) ?x7658) ?x7661) ?x7664)))
 (= ?x8578 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8028 (* l_0_6_9 l_0_6_9)))
 (let ((?x8624 (* 2.0 ?x8028)))
 (let ((?x8026 (* l_0_6_8 l_0_6_8)))
 (let ((?x8622 (* 2.0 ?x8026)))
 (let ((?x8620 (* l_0_6_70 l_0_6_70)))
 (let ((?x8024 (* l_0_6_7 l_0_6_7)))
 (let ((?x8618 (* 2.0 ?x8024)))
 (let ((?x8616 (* l_0_6_69 l_0_6_69)))
 (let ((?x8614 (* l_0_6_68 l_0_6_68)))
 (let ((?x8612 (* l_0_6_67 l_0_6_67)))
 (let ((?x8610 (* l_0_6_55 l_0_6_55)))
 (let ((?x8608 (* l_0_6_54 l_0_6_54)))
 (let ((?x8606 (* l_0_6_53 l_0_6_53)))
 (let ((?x8604 (* l_0_6_52 l_0_6_52)))
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8602 (* ?x8480 l_0_6_38)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x5925 (* ?x5924 l_0_6_32)))
 (let ((?x7858 (* 2.0 l_0_6_3)))
 (let ((?x7878 (* ?x7858 l_0_6_8)))
 (let ((?x7855 (* 2.0 l_0_6_2)))
 (let ((?x7876 (* ?x7855 l_0_6_7)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7874 (* ?x7852 l_0_6_23)))
 (let ((?x7888 (* 2.0 l_0_6_17)))
 (let ((?x1545 (* ?x7888 l_0_6_22)))
 (let ((?x8010 (* l_0_6_10 l_0_6_10)))
 (let ((?x4604 (* 2.0 ?x8010)))
 (let ((?x6520 (- (+ (- (- ?x4604 ?x1545) ?x7874) ?x7876) (* (* 2.0 l_0_6_22) l_0_6_22))))
 (let ((?x6229 (- (- ?x6520 (* (* 2.0 l_0_6_23) l_0_6_23)) (* (* 2.0 l_0_6_24) l_0_6_24))))
 (let ((?x8601 (+ (- (+ (- ?x6229 (* (* 2.0 l_0_6_25) l_0_6_25)) ?x7878) ?x5925) (* (* 2.0 l_0_6_32) l_0_6_37))))
 (let ((?x8615 (+ (+ (- (- (- (- (+ ?x8601 ?x8602) ?x8604) ?x8606) ?x8608) ?x8610) ?x8612) ?x8614)))
 (= (+ (+ (+ (+ (+ ?x8615 ?x8616) ?x8618) ?x8620) ?x8622) ?x8624) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7753 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x7750 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x7747 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x7744 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x7590 (* 2.0 l_0_6_63)))
 (let ((?x8347 (* ?x7590 l_0_6_68)))
 (let ((?x7587 (* 2.0 l_0_6_62)))
 (let ((?x8345 (* ?x7587 l_0_6_67)))
 (let ((?x7741 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x7738 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x7735 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x7732 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x7574 (* 2.0 l_0_6_48)))
 (let ((?x8343 (* ?x7574 l_0_6_53)))
 (let ((?x7571 (* 2.0 l_0_6_47)))
 (let ((?x8341 (* ?x7571 l_0_6_52)))
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8658 (* ?x8480 l_0_6_42)))
 (let ((?x7852 (* 2.0 l_0_6_18)))
 (let ((?x7891 (* ?x7852 l_0_6_27)))
 (let ((?x7888 (* 2.0 l_0_6_17)))
 (let ((?x7889 (* ?x7888 l_0_6_26)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x592 (* ?x5816 l_0_6_3)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x3968 (* ?x5807 l_0_6_2)))
 (let ((?x8636 (+ (+ (* (* 4.0 l_0_6_10) l_0_6_14) ?x3968) (* (* 4.0 l_0_6_11) l_0_6_7))))
 (let ((?x8641 (+ (+ (+ ?x8636 ?x592) (* (* 4.0 l_0_6_12) l_0_6_8)) (* (* 4.0 l_0_6_13) l_0_6_9))))
 (let ((?x8649 (- (- (- (- ?x8641 ?x7889) ?x7891) (* (* 4.0 l_0_6_22) l_0_6_26)) (* (* 4.0 l_0_6_23) l_0_6_27))))
 (let ((?x8655 (- (- ?x8649 (* (* 4.0 l_0_6_24) l_0_6_28)) (* (* 4.0 l_0_6_25) l_0_6_29))))
 (let ((?x8661 (+ (+ (+ (+ ?x8655 (* (* 2.0 l_0_6_32) l_0_6_41)) ?x8658) ?x8341) ?x8343)))
 (let ((?x8668 (+ (- (- (- (- (- (- ?x8661 ?x7732) ?x7735) ?x7738) ?x7741) ?x8345) ?x8347) ?x7744)))
 (= (+ (+ (+ ?x8668 ?x7747) ?x7750) ?x7753) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x1897 (* ?x5924 l_0_6_34)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7709 (* ?x3642 l_0_6_22)))
 (let ((?x3889 (* ?x3642 l_0_6_19)))
 (let ((?x5661 (* 2.0 l_0_6_1)))
 (let ((?x7703 (* ?x5661 l_0_6_7)))
 (let ((?x3818 (* ?x5661 l_0_6_4)))
 (let ((?x6689 (- (+ (+ (- (- ?x3818 ?x7703) ?x3889) ?x7709) ?x1897) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x8697 (- (- ?x6689 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x8703 (- (- ?x8697 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x8703 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0)))))))))))))
(assert
 (let ((?x8729 (* l_0_6_99 l_0_6_99)))
 (let ((?x8727 (* l_0_6_98 l_0_6_98)))
 (let ((?x8725 (* l_0_6_97 l_0_6_97)))
 (let ((?x8723 (* l_0_6_85 l_0_6_85)))
 (let ((?x8721 (* l_0_6_84 l_0_6_84)))
 (let ((?x8719 (* l_0_6_83 l_0_6_83)))
 (let ((?x8717 (* l_0_6_82 l_0_6_82)))
 (let ((?x5623 (* l_0_6_31 l_0_6_31)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x8714 (* ?x5924 l_0_6_37)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7709 (* ?x3642 l_0_6_22)))
 (let ((?x8713 (- (- (* (* 2.0 l_0_6_1) l_0_6_7) (* l_0_6_100 l_0_6_100)) ?x7709)))
 (let ((?x8726 (- (- (- (- (- (- (+ ?x8713 ?x8714) ?x5623) ?x8717) ?x8719) ?x8721) ?x8723) ?x8725)))
 (= (- (- ?x8726 ?x8727) ?x8729) 0.0))))))))))))))))
(assert
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x8197 (* ?x7442 l_0_6_67)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x8195 (* ?x7439 l_0_6_52)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x8753 (* ?x5924 l_0_6_41)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7809 (* ?x3642 l_0_6_26)))
 (let ((?x5661 (* 2.0 l_0_6_1)))
 (let ((?x7808 (* ?x5661 l_0_6_11)))
 (let ((?x8746 (- (- ?x7808 (* (* 2.0 l_0_6_100) l_0_6_104)) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x8751 (- (- ?x8746 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x8759 (- (- (+ (+ (- ?x8751 ?x7809) ?x8753) ?x8195) ?x8197) (* (* 2.0 l_0_6_82) l_0_6_86))))
 (let ((?x8765 (- (- ?x8759 (* (* 2.0 l_0_6_83) l_0_6_87)) (* (* 2.0 l_0_6_84) l_0_6_88))))
 (= (- ?x8765 (* (* 2.0 l_0_6_85) l_0_6_89)) 0.0))))))))))))))))
(assert
 (let ((?x7921 (* l_0_6_6 l_0_6_6)))
 (let ((?x7951 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7919 (* l_0_6_5 l_0_6_5)))
 (let ((?x7948 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7917 (* l_0_6_4 l_0_6_4)))
 (let ((?x7945 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x7915 (* l_0_6_21 l_0_6_21)))
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7942 (* ?x7941 l_0_6_24)))
 (let ((?x7913 (* l_0_6_20 l_0_6_20)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7939 (* ?x7938 l_0_6_23)))
 (let ((?x8785 (+ (- (* (* 2.0 l_0_6_19) l_0_6_22) (* l_0_6_19 l_0_6_19)) ?x7939)))
 (let ((?x8791 (+ (- (+ (- ?x8785 ?x7913) ?x7942) ?x7915) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x8797 (+ (+ ?x8791 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (= (+ (- (+ (- (+ (- ?x8797 ?x7945) ?x7917) ?x7948) ?x7919) ?x7951) ?x7921) 0.0)))))))))))))))))
(assert
 (let ((?x8028 (* l_0_6_9 l_0_6_9)))
 (let ((?x8026 (* l_0_6_8 l_0_6_8)))
 (let ((?x8024 (* l_0_6_7 l_0_6_7)))
 (let ((?x7951 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x7948 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x7945 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x8837 (* 2.0 l_0_6_36)))
 (let ((?x8838 (* ?x8837 l_0_6_39)))
 (let ((?x8834 (* 2.0 l_0_6_35)))
 (let ((?x8835 (* ?x8834 l_0_6_38)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x1897 (* ?x5924 l_0_6_34)))
 (let ((?x8017 (* l_0_6_25 l_0_6_25)))
 (let ((?x8015 (* l_0_6_24 l_0_6_24)))
 (let ((?x8013 (* l_0_6_23 l_0_6_23)))
 (let ((?x8011 (* l_0_6_22 l_0_6_22)))
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7942 (* ?x7941 l_0_6_24)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7939 (* ?x7938 l_0_6_23)))
 (let ((?x8824 (- (- (* (- l_0_6_10) l_0_6_10) (* (* 2.0 l_0_6_19) l_0_6_22)) ?x7939)))
 (let ((?x8833 (+ (- (+ (+ (+ (+ (- ?x8824 ?x7942) ?x8011) ?x8013) ?x8015) ?x8017) ?x1897) (* (* 2.0 l_0_6_34) l_0_6_37))))
 (let ((?x8844 (- (- (+ (+ (+ (+ (+ ?x8833 ?x8835) ?x8838) ?x7945) ?x7948) ?x7951) ?x8024) ?x8026)))
 (= (- ?x8844 ?x8028) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7663 (* 2.0 l_0_6_66)))
 (let ((?x8502 (* ?x7663 l_0_6_69)))
 (let ((?x7660 (* 2.0 l_0_6_65)))
 (let ((?x8500 (* ?x7660 l_0_6_68)))
 (let ((?x7657 (* 2.0 l_0_6_64)))
 (let ((?x8498 (* ?x7657 l_0_6_67)))
 (let ((?x7654 (* 2.0 l_0_6_51)))
 (let ((?x8493 (* ?x7654 l_0_6_54)))
 (let ((?x7651 (* 2.0 l_0_6_50)))
 (let ((?x8491 (* ?x7651 l_0_6_53)))
 (let ((?x7648 (* 2.0 l_0_6_49)))
 (let ((?x8486 (* ?x7648 l_0_6_52)))
 (let ((?x8837 (* 2.0 l_0_6_36)))
 (let ((?x8892 (* ?x8837 l_0_6_43)))
 (let ((?x8834 (* 2.0 l_0_6_35)))
 (let ((?x8890 (* ?x8834 l_0_6_42)))
 (let ((?x8060 (* 2.0 l_0_6_25)))
 (let ((?x8061 (* ?x8060 l_0_6_29)))
 (let ((?x8057 (* 2.0 l_0_6_24)))
 (let ((?x8058 (* ?x8057 l_0_6_28)))
 (let ((?x8054 (* 2.0 l_0_6_23)))
 (let ((?x8055 (* ?x8054 l_0_6_27)))
 (let ((?x8051 (* 2.0 l_0_6_22)))
 (let ((?x8052 (* ?x8051 l_0_6_26)))
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7983 (* ?x7941 l_0_6_28)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7981 (* ?x7938 l_0_6_27)))
 (let ((?x7978 (* 2.0 l_0_6_19)))
 (let ((?x7979 (* ?x7978 l_0_6_26)))
 (let ((?x7969 (* 2.0 l_0_6_13)))
 (let ((?x8049 (* ?x7969 l_0_6_9)))
 (let ((?x7976 (* ?x7969 l_0_6_6)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x8047 (* ?x5816 l_0_6_8)))
 (let ((?x7966 (* ?x5816 l_0_6_5)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x8045 (* ?x5807 l_0_6_7)))
 (let ((?x8877 (+ (- (+ (* (* (- 2.0) l_0_6_10) l_0_6_14) (* ?x5807 l_0_6_4)) ?x8045) ?x7966)))
 (let ((?x8884 (+ (- (- (- (- (+ (- ?x8877 ?x8047) ?x7976) ?x8049) ?x7979) ?x7981) ?x7983) ?x8052)))
 (let ((?x8889 (+ (+ (+ (+ ?x8884 ?x8055) ?x8058) ?x8061) (* (* 2.0 l_0_6_34) l_0_6_41))))
 (let ((?x8898 (- (- (+ (+ (+ (+ (+ ?x8889 ?x8890) ?x8892) ?x8486) ?x8491) ?x8493) ?x8498) ?x8500)))
 (= (- ?x8898 ?x8502) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8028 (* l_0_6_9 l_0_6_9)))
 (let ((?x8026 (* l_0_6_8 l_0_6_8)))
 (let ((?x8024 (* l_0_6_7 l_0_6_7)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x8714 (* ?x5924 l_0_6_37)))
 (let ((?x8017 (* l_0_6_25 l_0_6_25)))
 (let ((?x8015 (* l_0_6_24 l_0_6_24)))
 (let ((?x8013 (* l_0_6_23 l_0_6_23)))
 (let ((?x8016 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_22 l_0_6_22)) ?x8013) ?x8015)))
 (let ((?x8018 (- ?x8016 ?x8017)))
 (let ((?x2486 (+ (+ (- ?x8018 ?x8714) (* 1.0 (* l_0_6_37 l_0_6_37))) (* 1.0 (* l_0_6_38 l_0_6_38)))))
 (let ((?x8906 (+ (+ ?x2486 (* 1.0 (* l_0_6_39 l_0_6_39))) (* 1.0 (* l_0_6_40 l_0_6_40)))))
 (= (+ (+ (+ ?x8906 ?x8024) ?x8026) ?x8028) 0.0))))))))))))))
(assert
 (let ((?x8620 (* l_0_6_70 l_0_6_70)))
 (let ((?x8616 (* l_0_6_69 l_0_6_69)))
 (let ((?x8614 (* l_0_6_68 l_0_6_68)))
 (let ((?x8612 (* l_0_6_67 l_0_6_67)))
 (let ((?x8610 (* l_0_6_55 l_0_6_55)))
 (let ((?x8608 (* l_0_6_54 l_0_6_54)))
 (let ((?x8606 (* l_0_6_53 l_0_6_53)))
 (let ((?x8604 (* l_0_6_52 l_0_6_52)))
 (let ((?x8927 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x8924 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x8921 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x5924 (* 2.0 l_0_6_31)))
 (let ((?x8753 (* ?x5924 l_0_6_41)))
 (let ((?x8060 (* 2.0 l_0_6_25)))
 (let ((?x8061 (* ?x8060 l_0_6_29)))
 (let ((?x8057 (* 2.0 l_0_6_24)))
 (let ((?x8058 (* ?x8057 l_0_6_28)))
 (let ((?x8054 (* 2.0 l_0_6_23)))
 (let ((?x8055 (* ?x8054 l_0_6_27)))
 (let ((?x8051 (* 2.0 l_0_6_22)))
 (let ((?x8052 (* ?x8051 l_0_6_26)))
 (let ((?x7969 (* 2.0 l_0_6_13)))
 (let ((?x8049 (* ?x7969 l_0_6_9)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x8047 (* ?x5816 l_0_6_8)))
 (let ((?x5807 (* 2.0 l_0_6_11)))
 (let ((?x8045 (* ?x5807 l_0_6_7)))
 (let ((?x8053 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x8045) ?x8047) ?x8049) ?x8052)))
 (let ((?x8062 (- (- (- ?x8053 ?x8055) ?x8058) ?x8061)))
 (let ((?x8925 (+ (+ (+ (- ?x8062 ?x8753) (* (* 2.0 l_0_6_37) l_0_6_41)) ?x8921) ?x8924)))
 (let ((?x8934 (- (- (+ (+ (+ (+ (+ ?x8925 ?x8927) ?x8604) ?x8606) ?x8608) ?x8610) ?x8612) ?x8614)))
 (= (- (- ?x8934 ?x8616) ?x8620) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8970 (* l_0_6_96 l_0_6_96)))
 (let ((?x8968 (* l_0_6_95 l_0_6_95)))
 (let ((?x8966 (* l_0_6_94 l_0_6_94)))
 (let ((?x8964 (* l_0_6_81 l_0_6_81)))
 (let ((?x8962 (* l_0_6_80 l_0_6_80)))
 (let ((?x8960 (* l_0_6_79 l_0_6_79)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x3889 (* ?x3642 l_0_6_19)))
 (let ((?x8965 (- (- (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x3889) ?x8960) ?x8962) ?x8964)))
 (= (- (- (- ?x8965 ?x8966) ?x8968) ?x8970) 0.0)))))))))))
(assert
 (let ((?x7442 (* 2.0 l_0_6_61)))
 (let ((?x8157 (* ?x7442 l_0_6_64)))
 (let ((?x7439 (* 2.0 l_0_6_46)))
 (let ((?x8155 (* ?x7439 l_0_6_49)))
 (let ((?x3642 (* 2.0 l_0_6_16)))
 (let ((?x7809 (* ?x3642 l_0_6_26)))
 (let ((?x8990 (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_101) l_0_6_94))))
 (let ((?x8994 (- (- ?x8990 (* (* 2.0 l_0_6_102) l_0_6_95)) (* (* 2.0 l_0_6_103) l_0_6_96))))
 (let ((?x8999 (- (- (+ (+ ?x8994 ?x7809) ?x8155) ?x8157) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x9003 (- (- ?x8999 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x9003 0.0))))))))))))
(assert
 (let ((?x7921 (* l_0_6_6 l_0_6_6)))
 (let ((?x7919 (* l_0_6_5 l_0_6_5)))
 (let ((?x7917 (* l_0_6_4 l_0_6_4)))
 (let ((?x7915 (* l_0_6_21 l_0_6_21)))
 (let ((?x5196 (- (+ (+ (* l_0_6_19 l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x7915) ?x7917)))
 (= (- (- ?x5196 ?x7919) ?x7921) 0.0)))))))
(assert
 (let ((?x8434 (* l_0_6_66 l_0_6_66)))
 (let ((?x8432 (* l_0_6_65 l_0_6_65)))
 (let ((?x8430 (* l_0_6_64 l_0_6_64)))
 (let ((?x8426 (* l_0_6_51 l_0_6_51)))
 (let ((?x8424 (* l_0_6_50 l_0_6_50)))
 (let ((?x8420 (* l_0_6_49 l_0_6_49)))
 (let ((?x7941 (* 2.0 l_0_6_21)))
 (let ((?x7983 (* ?x7941 l_0_6_28)))
 (let ((?x7938 (* 2.0 l_0_6_20)))
 (let ((?x7981 (* ?x7938 l_0_6_27)))
 (let ((?x7978 (* 2.0 l_0_6_19)))
 (let ((?x7979 (* ?x7978 l_0_6_26)))
 (let ((?x7969 (* 2.0 l_0_6_13)))
 (let ((?x7976 (* ?x7969 l_0_6_6)))
 (let ((?x5816 (* 2.0 l_0_6_12)))
 (let ((?x7966 (* ?x5816 l_0_6_5)))
 (let ((?x2794 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x7966) ?x7976) ?x7979) ?x7981)))
 (let ((?x9033 (- (- (- (+ (+ (+ (+ ?x2794 ?x7983) ?x8420) ?x8424) ?x8426) ?x8430) ?x8432) ?x8434)))
 (= ?x9033 0.0))))))))))))))))))))
(assert
 (= (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) 0.0))
(assert
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8481 (* ?x8480 l_0_6_35)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_34) ?x8481) 0.0))))
(assert
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8602 (* ?x8480 l_0_6_38)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_37) ?x8602) 0.0))))
(assert
 (let ((?x8480 (* 2.0 l_0_6_33)))
 (let ((?x8658 (* ?x8480 l_0_6_42)))
 (= (- (* (* (- 2.0) l_0_6_32) l_0_6_41) ?x8658) 0.0))))
(assert
 (let ((?x8795 (* l_0_6_36 l_0_6_36)))
 (= (- (- (* (- l_0_6_34) l_0_6_34) (* l_0_6_35 l_0_6_35)) ?x8795) 0.0)))
(assert
 (let ((?x8837 (* 2.0 l_0_6_36)))
 (let ((?x8838 (* ?x8837 l_0_6_39)))
 (let ((?x8834 (* 2.0 l_0_6_35)))
 (let ((?x8835 (* ?x8834 l_0_6_38)))
 (= (- (- (* (* (- 2.0) l_0_6_34) l_0_6_37) ?x8835) ?x8838) 0.0))))))
(assert
 (let ((?x8837 (* 2.0 l_0_6_36)))
 (let ((?x8892 (* ?x8837 l_0_6_43)))
 (let ((?x8834 (* 2.0 l_0_6_35)))
 (let ((?x8890 (* ?x8834 l_0_6_42)))
 (= (- (- (* (* (- 2.0) l_0_6_34) l_0_6_41) ?x8890) ?x8892) 0.0))))))
(assert
 (let ((?x8904 (* l_0_6_40 l_0_6_40)))
 (let ((?x2470 (* l_0_6_39 l_0_6_39)))
 (let ((?x6373 (- (- (- (* (- l_0_6_37) l_0_6_37) (* l_0_6_38 l_0_6_38)) ?x2470) ?x8904)))
 (= ?x6373 0.0)))))
(assert
 (let ((?x8927 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x8924 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x8921 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (= (- (- (- (* (* (- 2.0) l_0_6_37) l_0_6_41) ?x8921) ?x8924) ?x8927) 0.0)))))
(assert
 (let ((?x3714 (* l_0_6_61 l_0_6_61)))
 (let ((?x3156 (- (+ (* (* (- 2.0) l_0_6_101) l_0_6_91) (* l_0_6_46 l_0_6_46)) ?x3714)))
 (= (- ?x3156 (* (* 2.0 l_0_6_76) l_0_6_86)) 0.0))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(check-sat)
(get-model)