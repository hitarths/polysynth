(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_156 () Real)
(declare-fun l_0_11_155 () Real)
(declare-fun l_0_11_154 () Real)
(declare-fun l_0_11_141 () Real)
(declare-fun l_0_11_140 () Real)
(declare-fun l_0_11_139 () Real)
(declare-fun l_0_11_126 () Real)
(declare-fun l_0_11_125 () Real)
(declare-fun l_0_11_124 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_153 () Real)
(declare-fun l_0_11_152 () Real)
(declare-fun l_0_11_138 () Real)
(declare-fun l_0_11_137 () Real)
(declare-fun l_0_11_123 () Real)
(declare-fun l_0_11_122 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_162 () Real)
(declare-fun l_0_11_161 () Real)
(declare-fun l_0_11_147 () Real)
(declare-fun l_0_11_146 () Real)
(declare-fun l_0_11_132 () Real)
(declare-fun l_0_11_131 () Real)
(declare-fun l_0_11_117 () Real)
(declare-fun l_0_11_116 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_158 () Real)
(declare-fun l_0_11_157 () Real)
(declare-fun l_0_11_143 () Real)
(declare-fun l_0_11_142 () Real)
(declare-fun l_0_11_128 () Real)
(declare-fun l_0_11_127 () Real)
(declare-fun l_0_11_113 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_151 () Real)
(declare-fun l_0_11_136 () Real)
(declare-fun l_0_11_121 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_159 () Real)
(declare-fun l_0_11_144 () Real)
(declare-fun l_0_11_129 () Real)
(declare-fun l_0_11_114 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_160 () Real)
(declare-fun l_0_11_145 () Real)
(declare-fun l_0_11_130 () Real)
(declare-fun l_0_11_115 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_164 () Real)
(declare-fun l_0_11_163 () Real)
(declare-fun l_0_11_149 () Real)
(declare-fun l_0_11_148 () Real)
(declare-fun l_0_11_134 () Real)
(declare-fun l_0_11_133 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_119 () Real)
(declare-fun l_0_11_118 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_165 () Real)
(declare-fun l_0_11_150 () Real)
(declare-fun l_0_11_135 () Real)
(declare-fun l_0_11_120 () Real)
(declare-fun l_0_11_105 () Real)
(assert
 (= (- 1.0 l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x1028 (- (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7)))
 (= (- ?x1028 l_0_3_8) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (let ((?x1068 (- (- (- (- (- (- l_0_4_10) l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6)))
 (= (- (- (- ?x1068 l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (let ((?x1161 (* (* 4.0 l_0_5_63) l_0_5_63)))
 (let ((?x1155 (* (* 4.0 l_0_5_62) l_0_5_62)))
 (let ((?x1148 (* l_0_5_51 l_0_5_51)))
 (let ((?x1149 (* 3.0 ?x1148)))
 (let ((?x1145 (* l_0_5_50 l_0_5_50)))
 (let ((?x1146 (* 3.0 ?x1145)))
 (let ((?x1141 (* l_0_5_49 l_0_5_49)))
 (let ((?x1143 (* 3.0 ?x1141)))
 (let ((?x1138 (* l_0_5_48 l_0_5_48)))
 (let ((?x1139 (* 4.0 ?x1138)))
 (let ((?x1131 (* l_0_5_47 l_0_5_47)))
 (let ((?x1133 (* 4.0 ?x1131)))
 (let ((?x1120 (- (* (* (- 24.0) l_0_5_17) l_0_5_19) (* (* 24.0 l_0_5_18) l_0_5_20))))
 (let ((?x1126 (+ (+ ?x1120 (* (* 24.0 l_0_5_32) l_0_5_34)) (* (* 24.0 l_0_5_33) l_0_5_35))))
 (let ((?x1137 (- (+ (- ?x1126 (* (* 12.0 l_0_5_47) l_0_5_49)) ?x1133) (* (* 12.0 l_0_5_48) l_0_5_50))))
 (let ((?x1153 (+ (+ (+ (+ (+ ?x1137 ?x1139) ?x1143) ?x1146) ?x1149) (* (* 12.0 l_0_5_62) l_0_5_64))))
 (let ((?x1165 (- (- (+ (- ?x1153 ?x1155) (* (* 12.0 l_0_5_63) l_0_5_65)) ?x1161) (* (* 3.0 l_0_5_64) l_0_5_64))))
 (let ((?x1171 (- (- ?x1165 (* (* 3.0 l_0_5_65) l_0_5_65)) (* (* 3.0 l_0_5_66) l_0_5_66))))
 (= (+ ?x1171 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x1309 (* l_0_5_96 l_0_5_96)))
 (let ((?x1307 (* l_0_5_95 l_0_5_95)))
 (let ((?x1305 (* l_0_5_94 l_0_5_94)))
 (let ((?x1244 (- (* (* (- 12.0) l_0_5_17) l_0_5_17) (* (* 12.0 l_0_5_18) l_0_5_18))))
 (let ((?x1250 (- (- ?x1244 (* (* 1.0 l_0_5_19) l_0_5_19)) (* (* 1.0 l_0_5_20) l_0_5_20))))
 (let ((?x1256 (+ (- ?x1250 (* (* 1.0 l_0_5_21) l_0_5_21)) (* 12.0 (* l_0_5_32 l_0_5_32)))))
 (let ((?x1262 (+ (+ ?x1256 (* 12.0 (* l_0_5_33 l_0_5_33))) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x1268 (+ (+ ?x1262 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x1274 (- (+ ?x1268 (* (* 6.0 l_0_5_47) l_0_5_49)) (* (* 6.0 l_0_5_47) l_0_5_47))))
 (let ((?x1279 (- (+ ?x1274 (* (* 6.0 l_0_5_48) l_0_5_50)) (* (* 6.0 l_0_5_48) l_0_5_48))))
 (let ((?x1285 (- (- ?x1279 (* (* 1.0 l_0_5_49) l_0_5_49)) (* (* 1.0 l_0_5_50) l_0_5_50))))
 (let ((?x1291 (- (- ?x1285 (* (* 1.0 l_0_5_51) l_0_5_51)) (* (* 6.0 l_0_5_62) l_0_5_64))))
 (let ((?x1296 (- (+ ?x1291 (* 6.0 (* l_0_5_62 l_0_5_62))) (* (* 6.0 l_0_5_63) l_0_5_65))))
 (let ((?x1300 (+ (+ ?x1296 (* 6.0 (* l_0_5_63 l_0_5_63))) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x1304 (+ (+ ?x1300 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (+ (- (- (- ?x1304 ?x1305) ?x1307) ?x1309) 6.0) 0.0)))))))))))))))))
(assert
 (let ((?x1138 (* l_0_5_48 l_0_5_48)))
 (let ((?x1414 (* 3.0 ?x1138)))
 (let ((?x1131 (* l_0_5_47 l_0_5_47)))
 (let ((?x1409 (* 3.0 ?x1131)))
 (let ((?x1399 (- (* (* (- 2.0) l_0_5_17) l_0_5_19) (* (* 2.0 l_0_5_18) l_0_5_20))))
 (let ((?x1405 (+ (+ ?x1399 (* (* 2.0 l_0_5_32) l_0_5_34)) (* (* 2.0 l_0_5_33) l_0_5_35))))
 (let ((?x1413 (- (+ (- ?x1405 (* (* 2.0 l_0_5_47) l_0_5_49)) ?x1409) (* (* 2.0 l_0_5_48) l_0_5_50))))
 (let ((?x1421 (- (+ (+ ?x1413 ?x1414) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 3.0 l_0_5_62) l_0_5_62))))
 (let ((?x1427 (- (+ ?x1421 (* (* 2.0 l_0_5_63) l_0_5_65)) (* (* 3.0 l_0_5_63) l_0_5_63))))
 (let ((?x1433 (- (- ?x1427 (* (* 2.0 l_0_5_92) l_0_5_94)) (* (* 2.0 l_0_5_93) l_0_5_95))))
 (= (+ ?x1433 3.0) 0.0))))))))))))
(assert
 (let ((?x1487 (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) (* (* 2.0 l_0_5_31) l_0_5_32))))
 (let ((?x1493 (- (- ?x1487 (* (* 2.0 l_0_5_46) l_0_5_47)) (* (* 4.0 l_0_5_47) l_0_5_47))))
 (let ((?x1499 (+ (- ?x1493 (* (* 4.0 l_0_5_48) l_0_5_48)) (* (* 2.0 l_0_5_61) l_0_5_62))))
 (let ((?x1501 (+ (+ ?x1499 (* 4.0 (* l_0_5_62 l_0_5_62))) (* 4.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- ?x1501 (* (* 2.0 l_0_5_91) l_0_5_92)) 4.0) 0.0))))))
(assert
 (let ((?x1558 (* l_0_5_76 l_0_5_76)))
 (let ((?x1556 (* (* 4.0 l_0_5_61) l_0_5_61)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1553 (* ?x1552 l_0_5_67)))
 (let ((?x1549 (* l_0_5_46 l_0_5_46)))
 (let ((?x1550 (* 4.0 ?x1549)))
 (let ((?x1551 (+ (- (* (- l_0_5_1) l_0_5_1) (* (* 8.0 l_0_5_46) l_0_5_52)) ?x1550)))
 (= (+ (- (+ ?x1551 ?x1553) ?x1556) ?x1558) 0.0)))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1610 (* ?x1609 l_0_5_77)))
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x1607 (* ?x1606 l_0_5_68)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x1604 (* ?x1603 l_0_5_67)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1599 (* ?x1552 l_0_5_62)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x1597 (* ?x1596 l_0_5_53)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x1594 (* ?x1593 l_0_5_52)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1589 (* ?x1546 l_0_5_47)))
 (let ((?x1586 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 2.0 l_0_5_16) l_0_5_22))))
 (let ((?x1592 (- (+ (+ ?x1586 (* (* 2.0 l_0_5_31) l_0_5_37)) ?x1589) (* (* 2.0 l_0_5_46) l_0_5_52))))
 (let ((?x1602 (+ (- (- (- ?x1592 ?x1594) ?x1597) ?x1599) (* (* 2.0 l_0_5_61) l_0_5_67))))
 (let ((?x1613 (- (+ (+ (+ ?x1602 ?x1604) ?x1607) ?x1610) (* (* 2.0 l_0_5_91) l_0_5_97))))
 (= ?x1613 0.0))))))))))))))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1693 (* ?x1609 l_0_5_79)))
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x1691 (* ?x1690 l_0_5_69)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x1688 (* ?x1687 l_0_5_68)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x1685 (* ?x1684 l_0_5_67)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1679 (* ?x1552 l_0_5_64)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x1677 (* ?x1676 l_0_5_54)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x1674 (* ?x1673 l_0_5_53)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x1671 (* ?x1670 l_0_5_52)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1665 (* ?x1546 l_0_5_49)))
 (let ((?x1669 (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x1665) (* (* 6.0 l_0_5_46) l_0_5_52))))
 (let ((?x1683 (- (- (- (- (- ?x1669 ?x1671) ?x1674) ?x1677) ?x1679) (* (* 6.0 l_0_5_61) l_0_5_67))))
 (= (+ (+ (+ (+ ?x1683 ?x1685) ?x1688) ?x1691) ?x1693) 0.0))))))))))))))))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1768 (* ?x1609 l_0_5_82)))
 (let ((?x1765 (* l_0_5_70 l_0_5_70)))
 (let ((?x1766 (* 4.0 ?x1765)))
 (let ((?x1762 (* l_0_5_69 l_0_5_69)))
 (let ((?x1763 (* 4.0 ?x1762)))
 (let ((?x1759 (* l_0_5_68 l_0_5_68)))
 (let ((?x1760 (* 4.0 ?x1759)))
 (let ((?x1756 (* l_0_5_67 l_0_5_67)))
 (let ((?x1757 (* 4.0 ?x1756)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1553 (* ?x1552 l_0_5_67)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1547 (* ?x1546 l_0_5_52)))
 (let ((?x1745 (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x1547) (* (* 4.0 l_0_5_52) l_0_5_52))))
 (let ((?x1751 (- (- ?x1745 (* (* 4.0 l_0_5_53) l_0_5_53)) (* (* 4.0 l_0_5_54) l_0_5_54))))
 (let ((?x1761 (+ (+ (- (- ?x1751 (* (* 4.0 l_0_5_55) l_0_5_55)) ?x1553) ?x1757) ?x1760)))
 (= (+ (+ (+ ?x1761 ?x1763) ?x1766) ?x1768) 0.0)))))))))))))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1842 (* ?x1609 l_0_5_86)))
 (let ((?x1768 (* ?x1609 l_0_5_82)))
 (let ((?x1839 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x1836 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x1833 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x1830 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1827 (* ?x1552 l_0_5_71)))
 (let ((?x1825 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x1822 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x1819 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x1816 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1813 (* ?x1546 l_0_5_56)))
 (let ((?x1809 (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 8.0 l_0_5_16) l_0_5_22))))
 (let ((?x1820 (- (- (+ (- ?x1809 (* (* 8.0 l_0_5_31) l_0_5_37)) ?x1813) ?x1816) ?x1819)))
 (let ((?x1840 (+ (+ (+ (+ (- (- (- ?x1820 ?x1822) ?x1825) ?x1827) ?x1830) ?x1833) ?x1836) ?x1839)))
 (= (+ (- ?x1840 ?x1768) ?x1842) 0.0))))))))))))))))))))
(assert
 (let ((?x1929 (* l_0_5_78 l_0_5_78)))
 (let ((?x1927 (* l_0_5_77 l_0_5_77)))
 (let ((?x1161 (* (* 4.0 l_0_5_63) l_0_5_63)))
 (let ((?x1155 (* (* 4.0 l_0_5_62) l_0_5_62)))
 (let ((?x1138 (* l_0_5_48 l_0_5_48)))
 (let ((?x1139 (* 4.0 ?x1138)))
 (let ((?x1131 (* l_0_5_47 l_0_5_47)))
 (let ((?x1133 (* 4.0 ?x1131)))
 (let ((?x1909 (* l_0_5_3 l_0_5_3)))
 (let ((?x1907 (* l_0_5_2 l_0_5_2)))
 (let ((?x1906 (- (* (* (- 2.0) l_0_5_17) l_0_5_22) (* (* 2.0 l_0_5_18) l_0_5_23))))
 (let ((?x1914 (+ (+ (- (- ?x1906 ?x1907) ?x1909) (* (* 2.0 l_0_5_32) l_0_5_37)) (* (* 2.0 l_0_5_33) l_0_5_38))))
 (let ((?x1919 (- (+ (- ?x1914 (* (* 2.0 l_0_5_47) l_0_5_52)) ?x1133) (* (* 2.0 l_0_5_48) l_0_5_53))))
 (let ((?x1925 (+ (- (+ (+ ?x1919 ?x1139) (* (* 2.0 l_0_5_62) l_0_5_67)) ?x1155) (* (* 2.0 l_0_5_63) l_0_5_68))))
 (let ((?x1932 (- (+ (+ (- ?x1925 ?x1161) ?x1927) ?x1929) (* (* 2.0 l_0_5_92) l_0_5_97))))
 (= (- ?x1932 (* (* 2.0 l_0_5_93) l_0_5_98)) 0.0)))))))))))))))))
(assert
 (let ((?x2048 (* 2.0 l_0_5_78)))
 (let ((?x2049 (* ?x2048 l_0_5_80)))
 (let ((?x2045 (* 2.0 l_0_5_77)))
 (let ((?x2046 (* ?x2045 l_0_5_79)))
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2032 (* ?x1606 l_0_5_65)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2028 (* ?x1603 l_0_5_64)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2015 (* ?x1596 l_0_5_50)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2011 (* ?x1593 l_0_5_49)))
 (let ((?x1992 (- (* (* (- 2.0) l_0_5_19) l_0_5_22) (* (* 2.0 l_0_5_2) l_0_5_4))))
 (let ((?x1998 (- (- ?x1992 (* (* 2.0 l_0_5_20) l_0_5_23)) (* (* 2.0 l_0_5_21) l_0_5_24))))
 (let ((?x2004 (+ (- ?x1998 (* (* 2.0 l_0_5_3) l_0_5_5)) (* (* 2.0 l_0_5_34) l_0_5_37))))
 (let ((?x2010 (+ (+ ?x2004 (* (* 2.0 l_0_5_35) l_0_5_38)) (* (* 2.0 l_0_5_36) l_0_5_39))))
 (let ((?x2018 (+ (+ (+ (+ ?x2010 ?x2011) (* (* 6.0 l_0_5_47) l_0_5_52)) ?x2015) (* (* 6.0 l_0_5_48) l_0_5_53))))
 (let ((?x2024 (- (- ?x2018 (* (* 2.0 l_0_5_49) l_0_5_52)) (* (* 2.0 l_0_5_50) l_0_5_53))))
 (let ((?x2031 (- (- (- ?x2024 (* (* 2.0 l_0_5_51) l_0_5_54)) ?x2028) (* (* 6.0 l_0_5_62) l_0_5_67))))
 (let ((?x2038 (+ (- (- ?x2031 ?x2032) (* (* 6.0 l_0_5_63) l_0_5_68)) (* (* 2.0 l_0_5_64) l_0_5_67))))
 (let ((?x2044 (+ (+ ?x2038 (* (* 2.0 l_0_5_65) l_0_5_68)) (* (* 2.0 l_0_5_66) l_0_5_69))))
 (let ((?x2056 (- (- (+ (+ ?x2044 ?x2046) ?x2049) (* (* 2.0 l_0_5_94) l_0_5_97)) (* (* 2.0 l_0_5_95) l_0_5_98))))
 (= (- ?x2056 (* (* 2.0 l_0_5_96) l_0_5_99)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x2222 (* l_0_5_99 l_0_5_99)))
 (let ((?x2220 (* l_0_5_98 l_0_5_98)))
 (let ((?x2218 (* l_0_5_97 l_0_5_97)))
 (let ((?x2048 (* 2.0 l_0_5_78)))
 (let ((?x2216 (* ?x2048 l_0_5_83)))
 (let ((?x2045 (* 2.0 l_0_5_77)))
 (let ((?x2214 (* ?x2045 l_0_5_82)))
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x1607 (* ?x1606 l_0_5_68)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x1604 (* ?x1603 l_0_5_67)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x1597 (* ?x1596 l_0_5_53)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x1594 (* ?x1593 l_0_5_52)))
 (let ((?x2166 (- (- (* (- l_0_5_100) l_0_5_100) (* (* 2.0 l_0_5_2) l_0_5_7)) (* (* 1.0 l_0_5_22) l_0_5_22))))
 (let ((?x2172 (- (- ?x2166 (* (* 1.0 l_0_5_23) l_0_5_23)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x2177 (- (- ?x2172 (* (* 1.0 l_0_5_25) l_0_5_25)) (* (* 2.0 l_0_5_3) l_0_5_8))))
 (let ((?x2183 (+ (+ ?x2177 (* 1.0 (* l_0_5_37 l_0_5_37))) (* 1.0 (* l_0_5_38 l_0_5_38)))))
 (let ((?x2189 (+ (+ ?x2183 (* 1.0 (* l_0_5_39 l_0_5_39))) (* 1.0 (* l_0_5_40 l_0_5_40)))))
 (let ((?x2197 (- (- (+ (+ ?x2189 ?x1594) ?x1597) (* (* 1.0 l_0_5_52) l_0_5_52)) (* (* 1.0 l_0_5_53) l_0_5_53))))
 (let ((?x2203 (- (- ?x2197 (* (* 1.0 l_0_5_54) l_0_5_54)) (* (* 1.0 l_0_5_55) l_0_5_55))))
 (let ((?x2209 (+ (+ (- (- ?x2203 ?x1604) ?x1607) (* 1.0 (* l_0_5_67 l_0_5_67))) (* 1.0 (* l_0_5_68 l_0_5_68)))))
 (let ((?x2213 (+ (+ ?x2209 (* 1.0 (* l_0_5_69 l_0_5_69))) (* 1.0 (* l_0_5_70 l_0_5_70)))))
 (= (- (- (- (+ (+ ?x2213 ?x2214) ?x2216) ?x2218) ?x2220) ?x2222) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2048 (* 2.0 l_0_5_78)))
 (let ((?x2381 (* ?x2048 l_0_5_87)))
 (let ((?x2216 (* ?x2048 l_0_5_83)))
 (let ((?x2045 (* 2.0 l_0_5_77)))
 (let ((?x2378 (* ?x2045 l_0_5_86)))
 (let ((?x2214 (* ?x2045 l_0_5_82)))
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2363 (* ?x1606 l_0_5_72)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2361 (* ?x1603 l_0_5_71)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2347 (* ?x1596 l_0_5_57)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2345 (* ?x1593 l_0_5_56)))
 (let ((?x2296 (- (* (* (- 2.0) l_0_5_100) l_0_5_104) (* (* 2.0 l_0_5_101) l_0_5_97))))
 (let ((?x2302 (- (- ?x2296 (* (* 2.0 l_0_5_102) l_0_5_98)) (* (* 2.0 l_0_5_103) l_0_5_99))))
 (let ((?x2308 (- (- ?x2302 (* (* 2.0 l_0_5_11) l_0_5_2)) (* (* 2.0 l_0_5_12) l_0_5_3))))
 (let ((?x2314 (+ (+ ?x2308 (* (* 8.0 l_0_5_17) l_0_5_22)) (* (* 8.0 l_0_5_18) l_0_5_23))))
 (let ((?x2320 (- (- ?x2314 (* (* 2.0 l_0_5_22) l_0_5_26)) (* (* 2.0 l_0_5_23) l_0_5_27))))
 (let ((?x2326 (- (- ?x2320 (* (* 2.0 l_0_5_24) l_0_5_28)) (* (* 2.0 l_0_5_25) l_0_5_29))))
 (let ((?x2332 (- (- ?x2326 (* (* 8.0 l_0_5_32) l_0_5_37)) (* (* 8.0 l_0_5_33) l_0_5_38))))
 (let ((?x2338 (+ (+ ?x2332 (* (* 2.0 l_0_5_37) l_0_5_41)) (* (* 2.0 l_0_5_38) l_0_5_42))))
 (let ((?x2344 (+ (+ ?x2338 (* (* 2.0 l_0_5_39) l_0_5_43)) (* (* 2.0 l_0_5_40) l_0_5_44))))
 (let ((?x2354 (- (- (+ (+ ?x2344 ?x2345) ?x2347) (* (* 2.0 l_0_5_52) l_0_5_56)) (* (* 2.0 l_0_5_53) l_0_5_57))))
 (let ((?x2360 (- (- ?x2354 (* (* 2.0 l_0_5_54) l_0_5_58)) (* (* 2.0 l_0_5_55) l_0_5_59))))
 (let ((?x2370 (+ (+ (- (- ?x2360 ?x2361) ?x2363) (* (* 2.0 l_0_5_67) l_0_5_71)) (* (* 2.0 l_0_5_68) l_0_5_72))))
 (let ((?x2376 (+ (+ ?x2370 (* (* 2.0 l_0_5_69) l_0_5_73)) (* (* 2.0 l_0_5_70) l_0_5_74))))
 (= (+ (- (+ (- ?x2376 ?x2214) ?x2378) ?x2216) ?x2381) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x2590 (* l_0_5_81 l_0_5_81)))
 (let ((?x2588 (* l_0_5_80 l_0_5_80)))
 (let ((?x2586 (* l_0_5_79 l_0_5_79)))
 (let ((?x2584 (* (* 4.0 l_0_5_66) l_0_5_66)))
 (let ((?x2578 (* (* 4.0 l_0_5_65) l_0_5_65)))
 (let ((?x2572 (* (* 4.0 l_0_5_64) l_0_5_64)))
 (let ((?x2562 (* l_0_5_6 l_0_5_6)))
 (let ((?x1148 (* l_0_5_51 l_0_5_51)))
 (let ((?x2560 (* 4.0 ?x1148)))
 (let ((?x1145 (* l_0_5_50 l_0_5_50)))
 (let ((?x2555 (* 4.0 ?x1145)))
 (let ((?x2550 (* l_0_5_5 l_0_5_5)))
 (let ((?x1141 (* l_0_5_49 l_0_5_49)))
 (let ((?x2548 (* 4.0 ?x1141)))
 (let ((?x2539 (* l_0_5_4 l_0_5_4)))
 (let ((?x2534 (- (* (* (- 24.0) l_0_5_17) l_0_5_22) (* (* 24.0 l_0_5_18) l_0_5_23))))
 (let ((?x2538 (+ (+ ?x2534 (* (* 24.0 l_0_5_32) l_0_5_37)) (* (* 24.0 l_0_5_33) l_0_5_38))))
 (let ((?x2544 (- (- (- ?x2538 ?x2539) (* (* 12.0 l_0_5_47) l_0_5_52)) (* (* 12.0 l_0_5_48) l_0_5_53))))
 (let ((?x2554 (+ (- (+ (+ ?x2544 (* (* 6.0 l_0_5_49) l_0_5_52)) ?x2548) ?x2550) (* (* 6.0 l_0_5_50) l_0_5_53))))
 (let ((?x2563 (- (+ (+ (+ ?x2554 ?x2555) (* (* 6.0 l_0_5_51) l_0_5_54)) ?x2560) ?x2562)))
 (let ((?x2567 (+ (+ ?x2563 (* (* 12.0 l_0_5_62) l_0_5_67)) (* (* 12.0 l_0_5_63) l_0_5_68))))
 (let ((?x2576 (- (- (- ?x2567 (* (* 6.0 l_0_5_64) l_0_5_67)) ?x2572) (* (* 6.0 l_0_5_65) l_0_5_68))))
 (let ((?x2587 (+ (- (- (- ?x2576 ?x2578) (* (* 6.0 l_0_5_66) l_0_5_69)) ?x2584) ?x2586)))
 (= (+ (+ ?x2587 ?x2588) ?x2590) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2701 (* 2.0 l_0_5_81)))
 (let ((?x2702 (* ?x2701 l_0_5_84)))
 (let ((?x2698 (* 2.0 l_0_5_80)))
 (let ((?x2699 (* ?x2698 l_0_5_83)))
 (let ((?x2695 (* 2.0 l_0_5_79)))
 (let ((?x2696 (* ?x2695 l_0_5_82)))
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x1691 (* ?x1690 l_0_5_69)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x1688 (* ?x1687 l_0_5_68)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x1685 (* ?x1684 l_0_5_67)))
 (let ((?x1792 (* l_0_5_55 l_0_5_55)))
 (let ((?x2675 (* 3.0 ?x1792)))
 (let ((?x1786 (* l_0_5_54 l_0_5_54)))
 (let ((?x2673 (* 3.0 ?x1786)))
 (let ((?x1780 (* l_0_5_53 l_0_5_53)))
 (let ((?x2671 (* 3.0 ?x1780)))
 (let ((?x1774 (* l_0_5_52 l_0_5_52)))
 (let ((?x2669 (* 3.0 ?x1774)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x1677 (* ?x1676 l_0_5_54)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x1674 (* ?x1673 l_0_5_53)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x1671 (* ?x1670 l_0_5_52)))
 (let ((?x2666 (- (+ (* (* (- 2.0) l_0_5_4) l_0_5_7) ?x1671) (* (* 2.0 l_0_5_5) l_0_5_8))))
 (let ((?x2679 (- (+ (+ (+ (+ (+ (+ ?x2666 ?x1674) ?x1677) ?x2669) ?x2671) ?x2673) ?x2675) (* (* 2.0 l_0_5_6) l_0_5_9))))
 (let ((?x2685 (- (- (- (- ?x2679 ?x1685) ?x1688) ?x1691) (* (* 3.0 l_0_5_67) l_0_5_67))))
 (let ((?x2691 (- (- ?x2685 (* (* 3.0 l_0_5_68) l_0_5_68)) (* (* 3.0 l_0_5_69) l_0_5_69))))
 (let ((?x2703 (+ (+ (+ (- ?x2691 (* (* 3.0 l_0_5_70) l_0_5_70)) ?x2696) ?x2699) ?x2702)))
 (= ?x2703 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x2701 (* 2.0 l_0_5_81)))
 (let ((?x2829 (* ?x2701 l_0_5_88)))
 (let ((?x2702 (* ?x2701 l_0_5_84)))
 (let ((?x2698 (* 2.0 l_0_5_80)))
 (let ((?x2826 (* ?x2698 l_0_5_87)))
 (let ((?x2699 (* ?x2698 l_0_5_83)))
 (let ((?x2695 (* 2.0 l_0_5_79)))
 (let ((?x2823 (* ?x2695 l_0_5_86)))
 (let ((?x2696 (* ?x2695 l_0_5_82)))
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x2808 (* ?x1690 l_0_5_73)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x2806 (* ?x1687 l_0_5_72)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x2804 (* ?x1684 l_0_5_71)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x2790 (* ?x1676 l_0_5_58)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x2788 (* ?x1673 l_0_5_57)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x2786 (* ?x1670 l_0_5_56)))
 (let ((?x2764 (- (* (* (- 2.0) l_0_5_11) l_0_5_4) (* (* 2.0 l_0_5_12) l_0_5_5))))
 (let ((?x2770 (+ (- ?x2764 (* (* 2.0 l_0_5_13) l_0_5_6)) (* (* 8.0 l_0_5_19) l_0_5_22))))
 (let ((?x2776 (+ (+ ?x2770 (* (* 8.0 l_0_5_20) l_0_5_23)) (* (* 8.0 l_0_5_21) l_0_5_24))))
 (let ((?x2782 (- (- ?x2776 (* (* 8.0 l_0_5_34) l_0_5_37)) (* (* 8.0 l_0_5_35) l_0_5_38))))
 (let ((?x2791 (+ (+ (+ (- ?x2782 (* (* 8.0 l_0_5_36) l_0_5_39)) ?x2786) ?x2788) ?x2790)))
 (let ((?x2797 (+ (+ ?x2791 (* (* 6.0 l_0_5_52) l_0_5_56)) (* (* 6.0 l_0_5_53) l_0_5_57))))
 (let ((?x2803 (+ (+ ?x2797 (* (* 6.0 l_0_5_54) l_0_5_58)) (* (* 6.0 l_0_5_55) l_0_5_59))))
 (let ((?x2812 (- (- (- (- ?x2803 ?x2804) ?x2806) ?x2808) (* (* 6.0 l_0_5_67) l_0_5_71))))
 (let ((?x2818 (- (- ?x2812 (* (* 6.0 l_0_5_68) l_0_5_72)) (* (* 6.0 l_0_5_69) l_0_5_73))))
 (let ((?x2825 (- (+ (- (- ?x2818 (* (* 6.0 l_0_5_70) l_0_5_74)) ?x2696) ?x2823) ?x2699)))
 (= (+ (- (+ ?x2825 ?x2826) ?x2702) ?x2829) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x2966 (* l_0_5_9 l_0_5_9)))
 (let ((?x2964 (* l_0_5_85 l_0_5_85)))
 (let ((?x2962 (* l_0_5_84 l_0_5_84)))
 (let ((?x2960 (* l_0_5_83 l_0_5_83)))
 (let ((?x2958 (* l_0_5_82 l_0_5_82)))
 (let ((?x2956 (* l_0_5_8 l_0_5_8)))
 (let ((?x2954 (* (* 4.0 l_0_5_70) l_0_5_70)))
 (let ((?x2951 (* l_0_5_7 l_0_5_7)))
 (let ((?x2949 (* (* 4.0 l_0_5_69) l_0_5_69)))
 (let ((?x2946 (* (* 4.0 l_0_5_68) l_0_5_68)))
 (let ((?x2943 (* (* 4.0 l_0_5_67) l_0_5_67)))
 (let ((?x1792 (* l_0_5_55 l_0_5_55)))
 (let ((?x1793 (* 4.0 ?x1792)))
 (let ((?x1786 (* l_0_5_54 l_0_5_54)))
 (let ((?x1787 (* 4.0 ?x1786)))
 (let ((?x1780 (* l_0_5_53 l_0_5_53)))
 (let ((?x1781 (* 4.0 ?x1780)))
 (let ((?x2939 (+ (+ (* (- l_0_5_10) l_0_5_10) (* 4.0 (* l_0_5_52 l_0_5_52))) ?x1781)))
 (let ((?x2955 (- (- (- (- (- (+ (+ ?x2939 ?x1787) ?x1793) ?x2943) ?x2946) ?x2949) ?x2951) ?x2954)))
 (= (- (+ (+ (+ (+ (- ?x2955 ?x2956) ?x2958) ?x2960) ?x2962) ?x2964) ?x2966) 0.0)))))))))))))))))))))
(assert
 (let ((?x2964 (* l_0_5_85 l_0_5_85)))
 (let ((?x3054 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x2962 (* l_0_5_84 l_0_5_84)))
 (let ((?x3050 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x2960 (* l_0_5_83 l_0_5_83)))
 (let ((?x3046 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x2958 (* l_0_5_82 l_0_5_82)))
 (let ((?x3042 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x1839 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x1836 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x1833 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x1830 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x1825 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x1822 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x1819 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x1816 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x2246 (* l_0_5_25 l_0_5_25)))
 (let ((?x3019 (* 4.0 ?x2246)))
 (let ((?x2242 (* l_0_5_24 l_0_5_24)))
 (let ((?x3017 (* 4.0 ?x2242)))
 (let ((?x2238 (* l_0_5_23 l_0_5_23)))
 (let ((?x3015 (* 4.0 ?x2238)))
 (let ((?x2234 (* l_0_5_22 l_0_5_22)))
 (let ((?x3013 (* 4.0 ?x2234)))
 (let ((?x3008 (- (* (* (- 2.0) l_0_5_10) l_0_5_14) (* (* 2.0 l_0_5_11) l_0_5_7))))
 (let ((?x3012 (- (- ?x3008 (* (* 2.0 l_0_5_12) l_0_5_8)) (* (* 2.0 l_0_5_13) l_0_5_9))))
 (let ((?x3023 (- (+ (+ (+ (+ ?x3012 ?x3013) ?x3015) ?x3017) ?x3019) (* (* 4.0 l_0_5_37) l_0_5_37))))
 (let ((?x3029 (- (- ?x3023 (* (* 4.0 l_0_5_38) l_0_5_38)) (* (* 4.0 l_0_5_39) l_0_5_39))))
 (let ((?x3035 (+ (+ (+ (- ?x3029 (* (* 4.0 l_0_5_40) l_0_5_40)) ?x1816) ?x1819) ?x1822)))
 (let ((?x3044 (- (+ (- (- (- (- (+ ?x3035 ?x1825) ?x1830) ?x1833) ?x1836) ?x1839) ?x3042) ?x2958)))
 (= (- (+ (- (+ (- (+ ?x3044 ?x3046) ?x2960) ?x3050) ?x2962) ?x3054) ?x2964) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3213 (* l_0_5_90 l_0_5_90)))
 (let ((?x3211 (* l_0_5_89 l_0_5_89)))
 (let ((?x3209 (* l_0_5_88 l_0_5_88)))
 (let ((?x3207 (* l_0_5_87 l_0_5_87)))
 (let ((?x3205 (* l_0_5_86 l_0_5_86)))
 (let ((?x3054 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x3050 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x3046 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x3042 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x3199 (* (* 4.0 l_0_5_75) l_0_5_75)))
 (let ((?x3196 (* (* 4.0 l_0_5_74) l_0_5_74)))
 (let ((?x3193 (* (* 4.0 l_0_5_73) l_0_5_73)))
 (let ((?x3190 (* (* 4.0 l_0_5_72) l_0_5_72)))
 (let ((?x3187 (* (* 4.0 l_0_5_71) l_0_5_71)))
 (let ((?x3183 (* l_0_5_60 l_0_5_60)))
 (let ((?x3184 (* 4.0 ?x3183)))
 (let ((?x3180 (* l_0_5_59 l_0_5_59)))
 (let ((?x3181 (* 4.0 ?x3180)))
 (let ((?x3177 (* l_0_5_58 l_0_5_58)))
 (let ((?x3178 (* 4.0 ?x3177)))
 (let ((?x3174 (* l_0_5_57 l_0_5_57)))
 (let ((?x3175 (* 4.0 ?x3174)))
 (let ((?x3171 (* l_0_5_56 l_0_5_56)))
 (let ((?x3172 (* 4.0 ?x3171)))
 (let ((?x3145 (* l_0_5_15 l_0_5_15)))
 (let ((?x3143 (* l_0_5_14 l_0_5_14)))
 (let ((?x3141 (* l_0_5_13 l_0_5_13)))
 (let ((?x3144 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x3141) ?x3143)))
 (let ((?x3152 (+ (+ (- ?x3144 ?x3145) (* (* 8.0 l_0_5_22) l_0_5_26)) (* (* 8.0 l_0_5_23) l_0_5_27))))
 (let ((?x3158 (+ (+ ?x3152 (* (* 8.0 l_0_5_24) l_0_5_28)) (* (* 8.0 l_0_5_25) l_0_5_29))))
 (let ((?x3164 (- (- ?x3158 (* (* 8.0 l_0_5_37) l_0_5_41)) (* (* 8.0 l_0_5_38) l_0_5_42))))
 (let ((?x3170 (- (- ?x3164 (* (* 8.0 l_0_5_39) l_0_5_43)) (* (* 8.0 l_0_5_40) l_0_5_44))))
 (let ((?x3191 (- (- (+ (+ (+ (+ (+ ?x3170 ?x3172) ?x3175) ?x3178) ?x3181) ?x3184) ?x3187) ?x3190)))
 (let ((?x3204 (- (- (- (- (- (- (- ?x3191 ?x3193) ?x3196) ?x3199) ?x3042) ?x3046) ?x3050) ?x3054)))
 (= (+ (+ (+ (+ (+ ?x3204 ?x3205) ?x3207) ?x3209) ?x3211) ?x3213) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3317 (* l_0_5_91 l_0_5_91)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1599 (* ?x1552 l_0_5_62)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1589 (* ?x1546 l_0_5_47)))
 (let ((?x3309 (+ (* (* (- 1.0) l_0_5_16) l_0_5_16) (* 1.0 (* l_0_5_31 l_0_5_31)))))
 (let ((?x3316 (+ (+ (- (- ?x3309 ?x1589) (* (* 1.0 l_0_5_46) l_0_5_46)) ?x1599) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (= (- ?x3316 ?x3317) 0.0)))))))))
(assert
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2032 (* ?x1606 l_0_5_65)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2028 (* ?x1603 l_0_5_64)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2015 (* ?x1596 l_0_5_50)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2011 (* ?x1593 l_0_5_49)))
 (let ((?x3340 (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_31) l_0_5_34))))
 (let ((?x3344 (- (+ ?x3340 (* (* 6.0 l_0_5_46) l_0_5_47)) (* (* 2.0 l_0_5_46) l_0_5_49))))
 (let ((?x3350 (+ (- (- (- ?x3344 ?x2011) ?x2015) (* (* 6.0 l_0_5_61) l_0_5_62)) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (= (- (+ (+ ?x3350 ?x2028) ?x2032) (* (* 2.0 l_0_5_91) l_0_5_94)) 0.0)))))))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1610 (* ?x1609 l_0_5_77)))
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2363 (* ?x1606 l_0_5_72)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2361 (* ?x1603 l_0_5_71)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2347 (* ?x1596 l_0_5_57)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2345 (* ?x1593 l_0_5_56)))
 (let ((?x3397 (+ (* (* (- 2.0) l_0_5_101) l_0_5_91) (* (* 8.0 l_0_5_16) l_0_5_17))))
 (let ((?x3401 (- (- ?x3397 (* (* 2.0 l_0_5_16) l_0_5_26)) (* (* 8.0 l_0_5_31) l_0_5_32))))
 (let ((?x3405 (- (+ ?x3401 (* (* 2.0 l_0_5_31) l_0_5_41)) (* (* 2.0 l_0_5_46) l_0_5_56))))
 (let ((?x3410 (+ (+ (- (- ?x3405 ?x2345) ?x2347) (* (* 2.0 l_0_5_61) l_0_5_71)) ?x2361)))
 (= (- (+ ?x3410 ?x2363) ?x1610) 0.0))))))))))))))))
(assert
 (let ((?x3471 (* l_0_5_93 l_0_5_93)))
 (let ((?x3469 (* l_0_5_92 l_0_5_92)))
 (let ((?x3454 (- (* (* (- 1.0) l_0_5_17) l_0_5_17) (* (* 1.0 l_0_5_18) l_0_5_18))))
 (let ((?x3458 (+ (+ ?x3454 (* 1.0 (* l_0_5_32 l_0_5_32))) (* 1.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3464 (- (- ?x3458 (* (* 1.0 l_0_5_47) l_0_5_47)) (* (* 1.0 l_0_5_48) l_0_5_48))))
 (let ((?x3468 (+ (+ ?x3464 (* 1.0 (* l_0_5_62 l_0_5_62))) (* 1.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- ?x3468 ?x3469) ?x3471) 0.0))))))))
(assert
 (let ((?x1929 (* l_0_5_78 l_0_5_78)))
 (let ((?x1927 (* l_0_5_77 l_0_5_77)))
 (let ((?x3499 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x3504 (+ (- ?x3499 (* (* 2.0 l_0_5_17) l_0_5_26)) (* 4.0 (* l_0_5_17 l_0_5_17)))))
 (let ((?x3508 (+ (- ?x3504 (* (* 2.0 l_0_5_18) l_0_5_27)) (* 4.0 (* l_0_5_18 l_0_5_18)))))
 (let ((?x3513 (- (+ ?x3508 (* (* 2.0 l_0_5_32) l_0_5_41)) (* (* 4.0 l_0_5_32) l_0_5_32))))
 (let ((?x3518 (- (+ ?x3513 (* (* 2.0 l_0_5_33) l_0_5_42)) (* (* 4.0 l_0_5_33) l_0_5_33))))
 (let ((?x3522 (- (- ?x3518 (* (* 2.0 l_0_5_47) l_0_5_56)) (* (* 2.0 l_0_5_48) l_0_5_57))))
 (let ((?x3526 (+ (+ ?x3522 (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (= (- (- ?x3526 ?x1927) ?x1929) 0.0)))))))))))
(assert
 (let ((?x2048 (* 2.0 l_0_5_78)))
 (let ((?x2049 (* ?x2048 l_0_5_80)))
 (let ((?x2045 (* 2.0 l_0_5_77)))
 (let ((?x2046 (* ?x2045 l_0_5_79)))
 (let ((?x3597 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x3601 (+ (- ?x3597 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 8.0 l_0_5_17) l_0_5_19))))
 (let ((?x3606 (- (+ ?x3601 (* (* 8.0 l_0_5_18) l_0_5_20)) (* (* 2.0 l_0_5_19) l_0_5_26))))
 (let ((?x3610 (- (- ?x3606 (* (* 2.0 l_0_5_20) l_0_5_27)) (* (* 2.0 l_0_5_21) l_0_5_28))))
 (let ((?x3614 (- (- ?x3610 (* (* 8.0 l_0_5_32) l_0_5_34)) (* (* 8.0 l_0_5_33) l_0_5_35))))
 (let ((?x3618 (+ (+ ?x3614 (* (* 2.0 l_0_5_34) l_0_5_41)) (* (* 2.0 l_0_5_35) l_0_5_42))))
 (let ((?x3622 (+ (+ ?x3618 (* (* 2.0 l_0_5_36) l_0_5_43)) (* (* 6.0 l_0_5_47) l_0_5_56))))
 (let ((?x3626 (- (+ ?x3622 (* (* 6.0 l_0_5_48) l_0_5_57)) (* (* 2.0 l_0_5_49) l_0_5_56))))
 (let ((?x3630 (- (- ?x3626 (* (* 2.0 l_0_5_50) l_0_5_57)) (* (* 2.0 l_0_5_51) l_0_5_58))))
 (let ((?x3634 (- (- ?x3630 (* (* 6.0 l_0_5_62) l_0_5_71)) (* (* 6.0 l_0_5_63) l_0_5_72))))
 (let ((?x3638 (+ (+ ?x3634 (* (* 2.0 l_0_5_64) l_0_5_71)) (* (* 2.0 l_0_5_65) l_0_5_72))))
 (= (- (- (+ ?x3638 (* (* 2.0 l_0_5_66) l_0_5_73)) ?x2046) ?x2049) 0.0)))))))))))))))))
(assert
 (let ((?x2048 (* 2.0 l_0_5_78)))
 (let ((?x2381 (* ?x2048 l_0_5_87)))
 (let ((?x2045 (* 2.0 l_0_5_77)))
 (let ((?x2378 (* ?x2045 l_0_5_86)))
 (let ((?x3744 (* l_0_5_105 l_0_5_105)))
 (let ((?x3742 (* l_0_5_104 l_0_5_104)))
 (let ((?x3740 (* l_0_5_103 l_0_5_103)))
 (let ((?x3741 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x3740)))
 (let ((?x3749 (+ (+ (- (- ?x3741 ?x3742) ?x3744) (* (* 8.0 l_0_5_17) l_0_5_26)) (* (* 8.0 l_0_5_18) l_0_5_27))))
 (let ((?x3755 (- (- ?x3749 (* (* 1.0 l_0_5_26) l_0_5_26)) (* (* 1.0 l_0_5_27) l_0_5_27))))
 (let ((?x3761 (- (- ?x3755 (* (* 1.0 l_0_5_28) l_0_5_28)) (* (* 1.0 l_0_5_29) l_0_5_29))))
 (let ((?x3766 (- (- ?x3761 (* (* 1.0 l_0_5_30) l_0_5_30)) (* (* 8.0 l_0_5_32) l_0_5_41))))
 (let ((?x3771 (+ (- ?x3766 (* (* 8.0 l_0_5_33) l_0_5_42)) (* 1.0 (* l_0_5_41 l_0_5_41)))))
 (let ((?x3777 (+ (+ ?x3771 (* 1.0 (* l_0_5_42 l_0_5_42))) (* 1.0 (* l_0_5_43 l_0_5_43)))))
 (let ((?x3783 (+ (+ ?x3777 (* 1.0 (* l_0_5_44 l_0_5_44))) (* 1.0 (* l_0_5_45 l_0_5_45)))))
 (let ((?x3789 (- (- ?x3783 (* (* 1.0 l_0_5_56) l_0_5_56)) (* (* 1.0 l_0_5_57) l_0_5_57))))
 (let ((?x3795 (- (- ?x3789 (* (* 1.0 l_0_5_58) l_0_5_58)) (* (* 1.0 l_0_5_59) l_0_5_59))))
 (let ((?x3800 (+ (- ?x3795 (* (* 1.0 l_0_5_60) l_0_5_60)) (* 1.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x3804 (+ (+ ?x3800 (* 1.0 (* l_0_5_72 l_0_5_72))) (* 1.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x3808 (+ (+ ?x3804 (* 1.0 (* l_0_5_74 l_0_5_74))) (* 1.0 (* l_0_5_75 l_0_5_75)))))
 (= (- (- ?x3808 ?x2378) ?x2381) 0.0))))))))))))))))))))))
(assert
 (let ((?x3901 (+ (* (* (- 12.0) l_0_5_16) l_0_5_16) (* 12.0 (* l_0_5_31 l_0_5_31)))))
 (let ((?x3905 (+ (- ?x3901 (* (* 6.0 l_0_5_46) l_0_5_46)) (* 6.0 (* l_0_5_61 l_0_5_61)))))
 (= ?x3905 0.0))))
(assert
 (let ((?x3923 (+ (* (* (- 24.0) l_0_5_16) l_0_5_17) (* (* 24.0 l_0_5_31) l_0_5_32))))
 (let ((?x3928 (+ (- ?x3923 (* (* 12.0 l_0_5_46) l_0_5_47)) (* (* 6.0 l_0_5_46) l_0_5_49))))
 (let ((?x3934 (- (- ?x3928 (* (* 4.0 l_0_5_49) l_0_5_49)) (* (* 4.0 l_0_5_50) l_0_5_50))))
 (let ((?x3940 (+ (- ?x3934 (* (* 4.0 l_0_5_51) l_0_5_51)) (* (* 12.0 l_0_5_61) l_0_5_62))))
 (let ((?x3943 (+ (- ?x3940 (* (* 6.0 l_0_5_61) l_0_5_64)) (* 4.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x3945 (+ (+ ?x3943 (* 4.0 (* l_0_5_65 l_0_5_65))) (* 4.0 (* l_0_5_66 l_0_5_66)))))
 (= ?x3945 0.0))))))))
(assert
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1599 (* ?x1552 l_0_5_62)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1589 (* ?x1546 l_0_5_47)))
 (let ((?x3984 (+ (* (* (- 24.0) l_0_5_16) l_0_5_19) (* (* 24.0 l_0_5_31) l_0_5_34))))
 (let ((?x3990 (+ (- (- (+ ?x3984 ?x1589) (* (* 12.0 l_0_5_46) l_0_5_49)) ?x1599) (* (* 12.0 l_0_5_61) l_0_5_64))))
 (= ?x3990 0.0))))))))
(assert
 (let ((?x4007 (+ (* (* (- 24.0) l_0_5_16) l_0_5_22) (* (* 24.0 l_0_5_31) l_0_5_37))))
 (let ((?x4011 (+ (- ?x4007 (* (* 12.0 l_0_5_46) l_0_5_52)) (* (* 12.0 l_0_5_61) l_0_5_67))))
 (= ?x4011 0.0))))
(assert
 (let ((?x4028 (+ (* (* (- 24.0) l_0_5_16) l_0_5_26) (* (* 24.0 l_0_5_31) l_0_5_41))))
 (let ((?x4032 (+ (- ?x4028 (* (* 12.0 l_0_5_46) l_0_5_56)) (* (* 12.0 l_0_5_61) l_0_5_71))))
 (= ?x4032 0.0))))
(assert
 (let ((?x2590 (* l_0_5_81 l_0_5_81)))
 (let ((?x2588 (* l_0_5_80 l_0_5_80)))
 (let ((?x2586 (* l_0_5_79 l_0_5_79)))
 (let ((?x4049 (- (* (* (- 24.0) l_0_5_17) l_0_5_26) (* (* 24.0 l_0_5_18) l_0_5_27))))
 (let ((?x4053 (+ (+ ?x4049 (* 4.0 (* l_0_5_19 l_0_5_19))) (* 4.0 (* l_0_5_20 l_0_5_20)))))
 (let ((?x4057 (+ (+ ?x4053 (* 4.0 (* l_0_5_21 l_0_5_21))) (* (* 24.0 l_0_5_32) l_0_5_41))))
 (let ((?x4062 (- (+ ?x4057 (* (* 24.0 l_0_5_33) l_0_5_42)) (* (* 4.0 l_0_5_34) l_0_5_34))))
 (let ((?x4068 (- (- ?x4062 (* (* 4.0 l_0_5_35) l_0_5_35)) (* (* 4.0 l_0_5_36) l_0_5_36))))
 (let ((?x4072 (- (- ?x4068 (* (* 12.0 l_0_5_47) l_0_5_56)) (* (* 12.0 l_0_5_48) l_0_5_57))))
 (let ((?x4076 (+ (+ ?x4072 (* (* 6.0 l_0_5_49) l_0_5_56)) (* (* 6.0 l_0_5_50) l_0_5_57))))
 (let ((?x4080 (+ (+ ?x4076 (* (* 6.0 l_0_5_51) l_0_5_58)) (* (* 12.0 l_0_5_62) l_0_5_71))))
 (let ((?x4084 (- (+ ?x4080 (* (* 12.0 l_0_5_63) l_0_5_72)) (* (* 6.0 l_0_5_64) l_0_5_71))))
 (let ((?x4088 (- (- ?x4084 (* (* 6.0 l_0_5_65) l_0_5_72)) (* (* 6.0 l_0_5_66) l_0_5_73))))
 (= (- (- (- ?x4088 ?x2586) ?x2588) ?x2590) 0.0)))))))))))))))
(assert
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2032 (* ?x1606 l_0_5_65)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2028 (* ?x1603 l_0_5_64)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2015 (* ?x1596 l_0_5_50)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2011 (* ?x1593 l_0_5_49)))
 (let ((?x4174 (- (* (* (- 12.0) l_0_5_19) l_0_5_19) (* (* 12.0 l_0_5_20) l_0_5_20))))
 (let ((?x4179 (+ (- ?x4174 (* (* 12.0 l_0_5_21) l_0_5_21)) (* 12.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x4183 (+ (+ ?x4179 (* 12.0 (* l_0_5_35 l_0_5_35))) (* 12.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x4189 (- (- (+ (+ ?x4183 ?x2011) ?x2015) (* (* 6.0 l_0_5_49) l_0_5_49)) (* (* 6.0 l_0_5_50) l_0_5_50))))
 (let ((?x4195 (+ (- (- (- ?x4189 (* (* 6.0 l_0_5_51) l_0_5_51)) ?x2028) ?x2032) (* 6.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x4199 (+ (+ ?x4195 (* 6.0 (* l_0_5_65 l_0_5_65))) (* 6.0 (* l_0_5_66 l_0_5_66)))))
 (= ?x4199 0.0))))))))))))))))
(assert
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x1607 (* ?x1606 l_0_5_68)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x1604 (* ?x1603 l_0_5_67)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x1597 (* ?x1596 l_0_5_53)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x1594 (* ?x1593 l_0_5_52)))
 (let ((?x4245 (- (* (* (- 24.0) l_0_5_19) l_0_5_22) (* (* 24.0 l_0_5_20) l_0_5_23))))
 (let ((?x4251 (+ (- ?x4245 (* (* 24.0 l_0_5_21) l_0_5_24)) (* (* 24.0 l_0_5_34) l_0_5_37))))
 (let ((?x4257 (+ (+ ?x4251 (* (* 24.0 l_0_5_35) l_0_5_38)) (* (* 24.0 l_0_5_36) l_0_5_39))))
 (let ((?x4265 (- (- (+ (+ ?x4257 ?x1594) ?x1597) (* (* 12.0 l_0_5_49) l_0_5_52)) (* (* 12.0 l_0_5_50) l_0_5_53))))
 (let ((?x4273 (+ (- (- (- ?x4265 (* (* 12.0 l_0_5_51) l_0_5_54)) ?x1604) ?x1607) (* (* 12.0 l_0_5_64) l_0_5_67))))
 (let ((?x4279 (+ (+ ?x4273 (* (* 12.0 l_0_5_65) l_0_5_68)) (* (* 12.0 l_0_5_66) l_0_5_69))))
 (= ?x4279 0.0))))))))))))))))
(assert
 (let ((?x1606 (* 8.0 l_0_5_63)))
 (let ((?x2363 (* ?x1606 l_0_5_72)))
 (let ((?x1603 (* 8.0 l_0_5_62)))
 (let ((?x2361 (* ?x1603 l_0_5_71)))
 (let ((?x1596 (* 8.0 l_0_5_48)))
 (let ((?x2347 (* ?x1596 l_0_5_57)))
 (let ((?x1593 (* 8.0 l_0_5_47)))
 (let ((?x2345 (* ?x1593 l_0_5_56)))
 (let ((?x4322 (- (* (* (- 24.0) l_0_5_19) l_0_5_26) (* (* 24.0 l_0_5_20) l_0_5_27))))
 (let ((?x4326 (+ (- ?x4322 (* (* 24.0 l_0_5_21) l_0_5_28)) (* (* 24.0 l_0_5_34) l_0_5_41))))
 (let ((?x4330 (+ (+ ?x4326 (* (* 24.0 l_0_5_35) l_0_5_42)) (* (* 24.0 l_0_5_36) l_0_5_43))))
 (let ((?x4336 (- (- (+ (+ ?x4330 ?x2345) ?x2347) (* (* 12.0 l_0_5_49) l_0_5_56)) (* (* 12.0 l_0_5_50) l_0_5_57))))
 (let ((?x4342 (+ (- (- (- ?x4336 (* (* 12.0 l_0_5_51) l_0_5_58)) ?x2361) ?x2363) (* (* 12.0 l_0_5_64) l_0_5_71))))
 (let ((?x4346 (+ (+ ?x4342 (* (* 12.0 l_0_5_65) l_0_5_72)) (* (* 12.0 l_0_5_66) l_0_5_73))))
 (= ?x4346 0.0))))))))))))))))
(assert
 (let ((?x1765 (* l_0_5_70 l_0_5_70)))
 (let ((?x4420 (* 6.0 ?x1765)))
 (let ((?x1762 (* l_0_5_69 l_0_5_69)))
 (let ((?x4418 (* 6.0 ?x1762)))
 (let ((?x1759 (* l_0_5_68 l_0_5_68)))
 (let ((?x4416 (* 6.0 ?x1759)))
 (let ((?x1756 (* l_0_5_67 l_0_5_67)))
 (let ((?x4414 (* 6.0 ?x1756)))
 (let ((?x2187 (* l_0_5_40 l_0_5_40)))
 (let ((?x4404 (* 12.0 ?x2187)))
 (let ((?x2184 (* l_0_5_39 l_0_5_39)))
 (let ((?x4402 (* 12.0 ?x2184)))
 (let ((?x2181 (* l_0_5_38 l_0_5_38)))
 (let ((?x4400 (* 12.0 ?x2181)))
 (let ((?x2178 (* l_0_5_37 l_0_5_37)))
 (let ((?x4398 (* 12.0 ?x2178)))
 (let ((?x4391 (- (* (* (- 12.0) l_0_5_22) l_0_5_22) (* (* 12.0 l_0_5_23) l_0_5_23))))
 (let ((?x4397 (- (- ?x4391 (* (* 12.0 l_0_5_24) l_0_5_24)) (* (* 12.0 l_0_5_25) l_0_5_25))))
 (let ((?x4407 (- (+ (+ (+ (+ ?x4397 ?x4398) ?x4400) ?x4402) ?x4404) (* (* 6.0 l_0_5_52) l_0_5_52))))
 (let ((?x4411 (- (- ?x4407 (* (* 6.0 l_0_5_53) l_0_5_53)) (* (* 6.0 l_0_5_54) l_0_5_54))))
 (let ((?x4419 (+ (+ (+ (- ?x4411 (* (* 6.0 l_0_5_55) l_0_5_55)) ?x4414) ?x4416) ?x4418)))
 (= (+ ?x4419 ?x4420) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4466 (- (* (* (- 24.0) l_0_5_22) l_0_5_26) (* (* 24.0 l_0_5_23) l_0_5_27))))
 (let ((?x4472 (- (- ?x4466 (* (* 24.0 l_0_5_24) l_0_5_28)) (* (* 24.0 l_0_5_25) l_0_5_29))))
 (let ((?x4478 (+ (+ ?x4472 (* (* 24.0 l_0_5_37) l_0_5_41)) (* (* 24.0 l_0_5_38) l_0_5_42))))
 (let ((?x4484 (+ (+ ?x4478 (* (* 24.0 l_0_5_39) l_0_5_43)) (* (* 24.0 l_0_5_40) l_0_5_44))))
 (let ((?x4490 (- (- ?x4484 (* (* 12.0 l_0_5_52) l_0_5_56)) (* (* 12.0 l_0_5_53) l_0_5_57))))
 (let ((?x4496 (- (- ?x4490 (* (* 12.0 l_0_5_54) l_0_5_58)) (* (* 12.0 l_0_5_55) l_0_5_59))))
 (let ((?x4502 (+ (+ ?x4496 (* (* 12.0 l_0_5_67) l_0_5_71)) (* (* 12.0 l_0_5_68) l_0_5_72))))
 (let ((?x4508 (+ (+ ?x4502 (* (* 12.0 l_0_5_69) l_0_5_73)) (* (* 12.0 l_0_5_70) l_0_5_74))))
 (= ?x4508 0.0))))))))))
(assert
 (let ((?x4555 (- (* (* (- 12.0) l_0_5_26) l_0_5_26) (* (* 12.0 l_0_5_27) l_0_5_27))))
 (let ((?x4572 (- (- ?x4555 (* (* 12.0 l_0_5_28) l_0_5_28)) (* (* 12.0 l_0_5_29) l_0_5_29))))
 (let ((?x4577 (+ (- ?x4572 (* (* 12.0 l_0_5_30) l_0_5_30)) (* 12.0 (* l_0_5_41 l_0_5_41)))))
 (let ((?x4581 (+ (+ ?x4577 (* 12.0 (* l_0_5_42 l_0_5_42))) (* 12.0 (* l_0_5_43 l_0_5_43)))))
 (let ((?x4585 (+ (+ ?x4581 (* 12.0 (* l_0_5_44 l_0_5_44))) (* 12.0 (* l_0_5_45 l_0_5_45)))))
 (let ((?x4591 (- (- ?x4585 (* (* 6.0 l_0_5_56) l_0_5_56)) (* (* 6.0 l_0_5_57) l_0_5_57))))
 (let ((?x4597 (- (- ?x4591 (* (* 6.0 l_0_5_58) l_0_5_58)) (* (* 6.0 l_0_5_59) l_0_5_59))))
 (let ((?x4602 (+ (- ?x4597 (* (* 6.0 l_0_5_60) l_0_5_60)) (* 6.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x4606 (+ (+ ?x4602 (* 6.0 (* l_0_5_72 l_0_5_72))) (* 6.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x4610 (+ (+ ?x4606 (* 6.0 (* l_0_5_74 l_0_5_74))) (* 6.0 (* l_0_5_75 l_0_5_75)))))
 (= ?x4610 0.0))))))))))))
(assert
 (let ((?x1558 (* l_0_5_76 l_0_5_76)))
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1827 (* ?x1552 l_0_5_71)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1813 (* ?x1546 l_0_5_56)))
 (let ((?x4675 (- (* 4.0 (* l_0_5_16 l_0_5_16)) (* (* 4.0 l_0_5_31) l_0_5_31))))
 (= (- (+ (- ?x4675 ?x1813) ?x1827) ?x1558) 0.0))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1693 (* ?x1609 l_0_5_79)))
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x2808 (* ?x1690 l_0_5_73)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x2806 (* ?x1687 l_0_5_72)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x2804 (* ?x1684 l_0_5_71)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x2790 (* ?x1676 l_0_5_58)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x2788 (* ?x1673 l_0_5_57)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x2786 (* ?x1670 l_0_5_56)))
 (let ((?x4698 (- (* (* 8.0 l_0_5_16) l_0_5_19) (* (* 8.0 l_0_5_31) l_0_5_34))))
 (let ((?x4703 (- (- (- (+ ?x4698 (* (* 6.0 l_0_5_46) l_0_5_56)) ?x2786) ?x2788) ?x2790)))
 (let ((?x4708 (+ (+ (+ (- ?x4703 (* (* 6.0 l_0_5_61) l_0_5_71)) ?x2804) ?x2806) ?x2808)))
 (= (- ?x4708 ?x1693) 0.0)))))))))))))))))))
(assert
 (let ((?x1609 (* 2.0 l_0_5_76)))
 (let ((?x1842 (* ?x1609 l_0_5_86)))
 (let ((?x4747 (- (* (* 8.0 l_0_5_16) l_0_5_26) (* (* 8.0 l_0_5_31) l_0_5_41))))
 (let ((?x4753 (- (- ?x4747 (* (* 4.0 l_0_5_56) l_0_5_56)) (* (* 4.0 l_0_5_57) l_0_5_57))))
 (let ((?x4759 (- (- ?x4753 (* (* 4.0 l_0_5_58) l_0_5_58)) (* (* 4.0 l_0_5_59) l_0_5_59))))
 (let ((?x4763 (+ (- ?x4759 (* (* 4.0 l_0_5_60) l_0_5_60)) (* 4.0 (* l_0_5_71 l_0_5_71)))))
 (let ((?x4765 (+ (+ ?x4763 (* 4.0 (* l_0_5_72 l_0_5_72))) (* 4.0 (* l_0_5_73 l_0_5_73)))))
 (let ((?x4767 (+ (+ ?x4765 (* 4.0 (* l_0_5_74 l_0_5_74))) (* 4.0 (* l_0_5_75 l_0_5_75)))))
 (= (- ?x4767 ?x1842) 0.0))))))))))
(assert
 (let ((?x2701 (* 2.0 l_0_5_81)))
 (let ((?x2829 (* ?x2701 l_0_5_88)))
 (let ((?x2698 (* 2.0 l_0_5_80)))
 (let ((?x2826 (* ?x2698 l_0_5_87)))
 (let ((?x2695 (* 2.0 l_0_5_79)))
 (let ((?x2823 (* ?x2695 l_0_5_86)))
 (let ((?x4806 (+ (* (* 8.0 l_0_5_19) l_0_5_26) (* (* 8.0 l_0_5_20) l_0_5_27))))
 (let ((?x4810 (- (+ ?x4806 (* (* 8.0 l_0_5_21) l_0_5_28)) (* (* 8.0 l_0_5_34) l_0_5_41))))
 (let ((?x4814 (- (- ?x4810 (* (* 8.0 l_0_5_35) l_0_5_42)) (* (* 8.0 l_0_5_36) l_0_5_43))))
 (let ((?x4818 (+ (+ ?x4814 (* 3.0 (* l_0_5_56 l_0_5_56))) (* 3.0 (* l_0_5_57 l_0_5_57)))))
 (let ((?x4822 (+ (+ ?x4818 (* 3.0 (* l_0_5_58 l_0_5_58))) (* 3.0 (* l_0_5_59 l_0_5_59)))))
 (let ((?x4827 (- (+ ?x4822 (* 3.0 (* l_0_5_60 l_0_5_60))) (* (* 3.0 l_0_5_71) l_0_5_71))))
 (let ((?x4833 (- (- ?x4827 (* (* 3.0 l_0_5_72) l_0_5_72)) (* (* 3.0 l_0_5_73) l_0_5_73))))
 (let ((?x4839 (- (- ?x4833 (* (* 3.0 l_0_5_74) l_0_5_74)) (* (* 3.0 l_0_5_75) l_0_5_75))))
 (= (- (- (- ?x4839 ?x2823) ?x2826) ?x2829) 0.0))))))))))))))))
(assert
 (let ((?x3213 (* l_0_5_90 l_0_5_90)))
 (let ((?x3211 (* l_0_5_89 l_0_5_89)))
 (let ((?x3209 (* l_0_5_88 l_0_5_88)))
 (let ((?x3207 (* l_0_5_87 l_0_5_87)))
 (let ((?x3205 (* l_0_5_86 l_0_5_86)))
 (let ((?x4913 (+ (* 4.0 (* l_0_5_26 l_0_5_26)) (* 4.0 (* l_0_5_27 l_0_5_27)))))
 (let ((?x4917 (+ (+ ?x4913 (* 4.0 (* l_0_5_28 l_0_5_28))) (* 4.0 (* l_0_5_29 l_0_5_29)))))
 (let ((?x4922 (- (+ ?x4917 (* 4.0 (* l_0_5_30 l_0_5_30))) (* (* 4.0 l_0_5_41) l_0_5_41))))
 (let ((?x4928 (- (- ?x4922 (* (* 4.0 l_0_5_42) l_0_5_42)) (* (* 4.0 l_0_5_43) l_0_5_43))))
 (let ((?x4934 (- (- ?x4928 (* (* 4.0 l_0_5_44) l_0_5_44)) (* (* 4.0 l_0_5_45) l_0_5_45))))
 (= (- (- (- (- (- ?x4934 ?x3205) ?x3207) ?x3209) ?x3211) ?x3213) 0.0))))))))))))
(assert
 (let ((?x1556 (* (* 4.0 l_0_5_61) l_0_5_61)))
 (let ((?x1549 (* l_0_5_46 l_0_5_46)))
 (let ((?x1550 (* 4.0 ?x1549)))
 (= (- ?x1550 ?x1556) 0.0)))))
(assert
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1679 (* ?x1552 l_0_5_64)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1665 (* ?x1546 l_0_5_49)))
 (= (- ?x1665 ?x1679) 0.0))))))
(assert
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1553 (* ?x1552 l_0_5_67)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1547 (* ?x1546 l_0_5_52)))
 (= (- ?x1547 ?x1553) 0.0))))))
(assert
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1827 (* ?x1552 l_0_5_71)))
 (let ((?x1546 (* 8.0 l_0_5_46)))
 (let ((?x1813 (* ?x1546 l_0_5_56)))
 (= (- ?x1813 ?x1827) 0.0))))))
(assert
 (let ((?x2584 (* (* 4.0 l_0_5_66) l_0_5_66)))
 (let ((?x2578 (* (* 4.0 l_0_5_65) l_0_5_65)))
 (let ((?x2572 (* (* 4.0 l_0_5_64) l_0_5_64)))
 (let ((?x1148 (* l_0_5_51 l_0_5_51)))
 (let ((?x2560 (* 4.0 ?x1148)))
 (let ((?x1145 (* l_0_5_50 l_0_5_50)))
 (let ((?x2555 (* 4.0 ?x1145)))
 (let ((?x1141 (* l_0_5_49 l_0_5_49)))
 (let ((?x2548 (* 4.0 ?x1141)))
 (= (- (- (- (+ (+ ?x2548 ?x2555) ?x2560) ?x2572) ?x2578) ?x2584) 0.0)))))))))))
(assert
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x1691 (* ?x1690 l_0_5_69)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x1688 (* ?x1687 l_0_5_68)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x1685 (* ?x1684 l_0_5_67)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x1677 (* ?x1676 l_0_5_54)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x1674 (* ?x1673 l_0_5_53)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x1671 (* ?x1670 l_0_5_52)))
 (= (- (- (- (+ (+ ?x1671 ?x1674) ?x1677) ?x1685) ?x1688) ?x1691) 0.0))))))))))))))
(assert
 (let ((?x1690 (* 8.0 l_0_5_66)))
 (let ((?x2808 (* ?x1690 l_0_5_73)))
 (let ((?x1687 (* 8.0 l_0_5_65)))
 (let ((?x2806 (* ?x1687 l_0_5_72)))
 (let ((?x1684 (* 8.0 l_0_5_64)))
 (let ((?x2804 (* ?x1684 l_0_5_71)))
 (let ((?x1676 (* 8.0 l_0_5_51)))
 (let ((?x2790 (* ?x1676 l_0_5_58)))
 (let ((?x1673 (* 8.0 l_0_5_50)))
 (let ((?x2788 (* ?x1673 l_0_5_57)))
 (let ((?x1670 (* 8.0 l_0_5_49)))
 (let ((?x2786 (* ?x1670 l_0_5_56)))
 (= (- (- (- (+ (+ ?x2786 ?x2788) ?x2790) ?x2804) ?x2806) ?x2808) 0.0))))))))))))))
(assert
 (let ((?x2954 (* (* 4.0 l_0_5_70) l_0_5_70)))
 (let ((?x2949 (* (* 4.0 l_0_5_69) l_0_5_69)))
 (let ((?x2946 (* (* 4.0 l_0_5_68) l_0_5_68)))
 (let ((?x2943 (* (* 4.0 l_0_5_67) l_0_5_67)))
 (let ((?x1792 (* l_0_5_55 l_0_5_55)))
 (let ((?x1793 (* 4.0 ?x1792)))
 (let ((?x1786 (* l_0_5_54 l_0_5_54)))
 (let ((?x1787 (* 4.0 ?x1786)))
 (let ((?x1780 (* l_0_5_53 l_0_5_53)))
 (let ((?x1781 (* 4.0 ?x1780)))
 (let ((?x1774 (* l_0_5_52 l_0_5_52)))
 (let ((?x1775 (* 4.0 ?x1774)))
 (let ((?x5057 (- (- (- (- (+ (+ (+ ?x1775 ?x1781) ?x1787) ?x1793) ?x2943) ?x2946) ?x2949) ?x2954)))
 (= ?x5057 0.0)))))))))))))))
(assert
 (let ((?x1839 (* (* 8.0 l_0_5_70) l_0_5_74)))
 (let ((?x1836 (* (* 8.0 l_0_5_69) l_0_5_73)))
 (let ((?x1833 (* (* 8.0 l_0_5_68) l_0_5_72)))
 (let ((?x1830 (* (* 8.0 l_0_5_67) l_0_5_71)))
 (let ((?x1825 (* (* 8.0 l_0_5_55) l_0_5_59)))
 (let ((?x1822 (* (* 8.0 l_0_5_54) l_0_5_58)))
 (let ((?x1819 (* (* 8.0 l_0_5_53) l_0_5_57)))
 (let ((?x1816 (* (* 8.0 l_0_5_52) l_0_5_56)))
 (let ((?x5076 (- (- (- (- (+ (+ (+ ?x1816 ?x1819) ?x1822) ?x1825) ?x1830) ?x1833) ?x1836) ?x1839)))
 (= ?x5076 0.0)))))))))))
(assert
 (let ((?x3199 (* (* 4.0 l_0_5_75) l_0_5_75)))
 (let ((?x3196 (* (* 4.0 l_0_5_74) l_0_5_74)))
 (let ((?x3193 (* (* 4.0 l_0_5_73) l_0_5_73)))
 (let ((?x3190 (* (* 4.0 l_0_5_72) l_0_5_72)))
 (let ((?x3187 (* (* 4.0 l_0_5_71) l_0_5_71)))
 (let ((?x3183 (* l_0_5_60 l_0_5_60)))
 (let ((?x3184 (* 4.0 ?x3183)))
 (let ((?x3180 (* l_0_5_59 l_0_5_59)))
 (let ((?x3181 (* 4.0 ?x3180)))
 (let ((?x3177 (* l_0_5_58 l_0_5_58)))
 (let ((?x3178 (* 4.0 ?x3177)))
 (let ((?x3174 (* l_0_5_57 l_0_5_57)))
 (let ((?x3175 (* 4.0 ?x3174)))
 (let ((?x3171 (* l_0_5_56 l_0_5_56)))
 (let ((?x3172 (* 4.0 ?x3171)))
 (let ((?x5094 (- (- (- (+ (+ (+ (+ ?x3172 ?x3175) ?x3178) ?x3181) ?x3184) ?x3187) ?x3190) ?x3193)))
 (= (- (- ?x5094 ?x3196) ?x3199) 0.0))))))))))))))))))
(assert
 (let ((?x1552 (* 8.0 l_0_5_61)))
 (let ((?x1679 (* ?x1552 l_0_5_64)))
 (let ((?x1549 (* l_0_5_46 l_0_5_46)))
 (let ((?x5112 (* 3.0 ?x1549)))
 (let ((?x5117 (- (+ (+ (* (* (- 8.0) l_0_5_46) l_0_5_49) ?x5112) ?x1679) (* (* 3.0 l_0_5_61) l_0_5_61))))
 (= ?x5117 0.0)))))))
(assert
 (let ((?x5129 (+ (* (* (- 4.0) l_0_5_46) l_0_5_46) (* 4.0 (* l_0_5_61 l_0_5_61)))))
 (= ?x5129 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x5189 (* l_0_6_63 l_0_6_63)))
 (let ((?x5190 (* 4.0 ?x5189)))
 (let ((?x5186 (* l_0_6_62 l_0_6_62)))
 (let ((?x5187 (* 4.0 ?x5186)))
 (let ((?x5170 (- (* (* (- 2.0) l_0_6_106) l_0_6_107) (* (* 2.0 l_0_6_16) l_0_6_17))))
 (let ((?x5176 (- (+ ?x5170 (* (* 2.0 l_0_6_31) l_0_6_32)) (* (* 2.0 l_0_6_46) l_0_6_47))))
 (let ((?x5182 (- (- ?x5176 (* (* 4.0 l_0_6_47) l_0_6_47)) (* (* 4.0 l_0_6_48) l_0_6_48))))
 (let ((?x5194 (- (+ (+ (+ ?x5182 (* (* 2.0 l_0_6_61) l_0_6_62)) ?x5187) ?x5190) (* (* 2.0 l_0_6_91) l_0_6_92))))
 (= (+ ?x5194 4.0) 0.0))))))))))
(assert
 (let ((?x5274 (* (* 4.0 l_0_6_63) l_0_6_63)))
 (let ((?x5268 (* (* 4.0 l_0_6_62) l_0_6_62)))
 (let ((?x5220 (* l_0_6_48 l_0_6_48)))
 (let ((?x5221 (* 4.0 ?x5220)))
 (let ((?x5214 (* l_0_6_47 l_0_6_47)))
 (let ((?x5215 (* 4.0 ?x5214)))
 (let ((?x5240 (- (* (* (- 24.0) l_0_6_17) l_0_6_19) (* (* 24.0 l_0_6_18) l_0_6_20))))
 (let ((?x5246 (+ (+ ?x5240 (* (* 24.0 l_0_6_32) l_0_6_34)) (* (* 24.0 l_0_6_33) l_0_6_35))))
 (let ((?x5253 (- (+ (- ?x5246 (* (* 12.0 l_0_6_47) l_0_6_49)) ?x5215) (* (* 12.0 l_0_6_48) l_0_6_50))))
 (let ((?x5260 (+ (+ (+ ?x5253 ?x5221) (* 3.0 (* l_0_6_49 l_0_6_49))) (* 3.0 (* l_0_6_50 l_0_6_50)))))
 (let ((?x5266 (+ (+ ?x5260 (* 3.0 (* l_0_6_51 l_0_6_51))) (* (* 12.0 l_0_6_62) l_0_6_64))))
 (let ((?x5278 (- (- (+ (- ?x5266 ?x5268) (* (* 12.0 l_0_6_63) l_0_6_65)) ?x5274) (* (* 3.0 l_0_6_64) l_0_6_64))))
 (let ((?x5284 (- (- ?x5278 (* (* 3.0 l_0_6_65) l_0_6_65)) (* (* 3.0 l_0_6_66) l_0_6_66))))
 (= (- ?x5284 4.0) 0.0)))))))))))))))
(assert
 (let ((?x5432 (* l_0_6_96 l_0_6_96)))
 (let ((?x5430 (* l_0_6_95 l_0_6_95)))
 (let ((?x5428 (* l_0_6_94 l_0_6_94)))
 (let ((?x5189 (* l_0_6_63 l_0_6_63)))
 (let ((?x5420 (* 6.0 ?x5189)))
 (let ((?x5186 (* l_0_6_62 l_0_6_62)))
 (let ((?x5415 (* 6.0 ?x5186)))
 (let ((?x5381 (* l_0_6_33 l_0_6_33)))
 (let ((?x5382 (* 12.0 ?x5381)))
 (let ((?x5378 (* l_0_6_32 l_0_6_32)))
 (let ((?x5379 (* 12.0 ?x5378)))
 (let ((?x5361 (* l_0_6_111 l_0_6_111)))
 (let ((?x5362 (- (- (* (- l_0_6_109) l_0_6_109) (* l_0_6_110 l_0_6_110)) ?x5361)))
 (let ((?x5368 (- (- ?x5362 (* (* 12.0 l_0_6_17) l_0_6_17)) (* (* 12.0 l_0_6_18) l_0_6_18))))
 (let ((?x5374 (- (- ?x5368 (* (* 1.0 l_0_6_19) l_0_6_19)) (* (* 1.0 l_0_6_20) l_0_6_20))))
 (let ((?x5386 (+ (+ (+ (- ?x5374 (* (* 1.0 l_0_6_21) l_0_6_21)) ?x5379) ?x5382) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x5392 (+ (+ ?x5386 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x5397 (- (+ ?x5392 (* (* 6.0 l_0_6_47) l_0_6_49)) (* (* 6.0 l_0_6_47) l_0_6_47))))
 (let ((?x5402 (- (+ ?x5397 (* (* 6.0 l_0_6_48) l_0_6_50)) (* (* 6.0 l_0_6_48) l_0_6_48))))
 (let ((?x5408 (- (- ?x5402 (* (* 1.0 l_0_6_49) l_0_6_49)) (* (* 1.0 l_0_6_50) l_0_6_50))))
 (let ((?x5414 (- (- ?x5408 (* (* 1.0 l_0_6_51) l_0_6_51)) (* (* 6.0 l_0_6_62) l_0_6_64))))
 (let ((?x5423 (+ (+ (- (+ ?x5414 ?x5415) (* (* 6.0 l_0_6_63) l_0_6_65)) ?x5420) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x5427 (+ (+ ?x5423 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (+ (- (- (- ?x5427 ?x5428) ?x5430) ?x5432) 6.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x5518 (- (* (* (- 2.0) l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x5524 (- (- ?x5518 (* (* 2.0 l_0_6_17) l_0_6_19)) (* (* 2.0 l_0_6_18) l_0_6_20))))
 (let ((?x5530 (+ (+ ?x5524 (* (* 2.0 l_0_6_32) l_0_6_34)) (* (* 2.0 l_0_6_33) l_0_6_35))))
 (let ((?x5535 (+ (- ?x5530 (* (* 2.0 l_0_6_47) l_0_6_49)) (* 3.0 (* l_0_6_47 l_0_6_47)))))
 (let ((?x5540 (+ (- ?x5535 (* (* 2.0 l_0_6_48) l_0_6_50)) (* 3.0 (* l_0_6_48 l_0_6_48)))))
 (let ((?x5546 (- (+ ?x5540 (* (* 2.0 l_0_6_62) l_0_6_64)) (* (* 3.0 l_0_6_62) l_0_6_62))))
 (let ((?x5552 (- (+ ?x5546 (* (* 2.0 l_0_6_63) l_0_6_65)) (* (* 3.0 l_0_6_63) l_0_6_63))))
 (let ((?x5558 (- (- ?x5552 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= (- ?x5558 3.0) 0.0))))))))))
(assert
 (let ((?x5657 (* l_0_6_93 l_0_6_93)))
 (let ((?x5655 (* l_0_6_92 l_0_6_92)))
 (let ((?x5637 (- (- (* (- l_0_6_107) l_0_6_107) (* l_0_6_108 l_0_6_108)) (* (* 1.0 l_0_6_17) l_0_6_17))))
 (let ((?x5642 (+ (- ?x5637 (* (* 1.0 l_0_6_18) l_0_6_18)) (* 1.0 (* l_0_6_32 l_0_6_32)))))
 (let ((?x5647 (- (+ ?x5642 (* 1.0 (* l_0_6_33 l_0_6_33))) (* (* 1.0 l_0_6_47) l_0_6_47))))
 (let ((?x5652 (+ (- ?x5647 (* (* 1.0 l_0_6_48) l_0_6_48)) (* 1.0 (* l_0_6_62 l_0_6_62)))))
 (let ((?x5659 (+ (- (- (+ ?x5652 (* 1.0 (* l_0_6_63 l_0_6_63))) ?x5655) ?x5657) 1.0)))
 (= ?x5659 0.0)))))))))
(assert
 (let ((?x5702 (* l_0_6_76 l_0_6_76)))
 (let ((?x5700 (* (* 4.0 l_0_6_61) l_0_6_61)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5697 (* ?x5696 l_0_6_67)))
 (let ((?x5693 (* l_0_6_46 l_0_6_46)))
 (let ((?x5694 (* 4.0 ?x5693)))
 (let ((?x5695 (+ (- (* (- l_0_6_1) l_0_6_1) (* (* 8.0 l_0_6_46) l_0_6_52)) ?x5694)))
 (= (+ (- (+ ?x5695 ?x5697) ?x5700) ?x5702) 0.0)))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5755 (* ?x5754 l_0_6_77)))
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x5752 (* ?x5751 l_0_6_68)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x5749 (* ?x5748 l_0_6_67)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5744 (* ?x5696 l_0_6_62)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x5742 (* ?x5741 l_0_6_53)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x5739 (* ?x5738 l_0_6_52)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5734 (* ?x5690 l_0_6_47)))
 (let ((?x5729 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_106) l_0_6_112))))
 (let ((?x5733 (+ (- ?x5729 (* (* 2.0 l_0_6_16) l_0_6_22)) (* (* 2.0 l_0_6_31) l_0_6_37))))
 (let ((?x5743 (- (- (- (+ ?x5733 ?x5734) (* (* 2.0 l_0_6_46) l_0_6_52)) ?x5739) ?x5742)))
 (let ((?x5753 (+ (+ (+ (- ?x5743 ?x5744) (* (* 2.0 l_0_6_61) l_0_6_67)) ?x5749) ?x5752)))
 (= (- (+ ?x5753 ?x5755) (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0))))))))))))))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5844 (* ?x5754 l_0_6_79)))
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x5842 (* ?x5841 l_0_6_69)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x5839 (* ?x5838 l_0_6_68)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x5836 (* ?x5835 l_0_6_67)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5830 (* ?x5696 l_0_6_64)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x5828 (* ?x5827 l_0_6_54)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x5825 (* ?x5824 l_0_6_53)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x5822 (* ?x5821 l_0_6_52)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5816 (* ?x5690 l_0_6_49)))
 (let ((?x5820 (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x5816) (* (* 6.0 l_0_6_46) l_0_6_52))))
 (let ((?x5834 (- (- (- (- (- ?x5820 ?x5822) ?x5825) ?x5828) ?x5830) (* (* 6.0 l_0_6_61) l_0_6_67))))
 (= (+ (+ (+ (+ ?x5834 ?x5836) ?x5839) ?x5842) ?x5844) 0.0))))))))))))))))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5919 (* ?x5754 l_0_6_82)))
 (let ((?x5916 (* l_0_6_70 l_0_6_70)))
 (let ((?x5917 (* 4.0 ?x5916)))
 (let ((?x5913 (* l_0_6_69 l_0_6_69)))
 (let ((?x5914 (* 4.0 ?x5913)))
 (let ((?x5910 (* l_0_6_68 l_0_6_68)))
 (let ((?x5911 (* 4.0 ?x5910)))
 (let ((?x5907 (* l_0_6_67 l_0_6_67)))
 (let ((?x5908 (* 4.0 ?x5907)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5697 (* ?x5696 l_0_6_67)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5691 (* ?x5690 l_0_6_52)))
 (let ((?x5896 (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x5691) (* (* 4.0 l_0_6_52) l_0_6_52))))
 (let ((?x5902 (- (- ?x5896 (* (* 4.0 l_0_6_53) l_0_6_53)) (* (* 4.0 l_0_6_54) l_0_6_54))))
 (let ((?x5912 (+ (+ (- (- ?x5902 (* (* 4.0 l_0_6_55) l_0_6_55)) ?x5697) ?x5908) ?x5911)))
 (= (+ (+ (+ ?x5912 ?x5914) ?x5917) ?x5919) 0.0)))))))))))))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5993 (* ?x5754 l_0_6_86)))
 (let ((?x5919 (* ?x5754 l_0_6_82)))
 (let ((?x5990 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x5987 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x5984 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x5981 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5978 (* ?x5696 l_0_6_71)))
 (let ((?x5976 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x5973 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x5970 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x5967 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5964 (* ?x5690 l_0_6_56)))
 (let ((?x5960 (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 8.0 l_0_6_16) l_0_6_22))))
 (let ((?x5971 (- (- (+ (- ?x5960 (* (* 8.0 l_0_6_31) l_0_6_37)) ?x5964) ?x5967) ?x5970)))
 (let ((?x5991 (+ (+ (+ (+ (- (- (- ?x5971 ?x5973) ?x5976) ?x5978) ?x5981) ?x5984) ?x5987) ?x5990)))
 (= (+ (- ?x5991 ?x5919) ?x5993) 0.0))))))))))))))))))))
(assert
 (let ((?x6084 (* l_0_6_78 l_0_6_78)))
 (let ((?x6082 (* l_0_6_77 l_0_6_77)))
 (let ((?x5274 (* (* 4.0 l_0_6_63) l_0_6_63)))
 (let ((?x5268 (* (* 4.0 l_0_6_62) l_0_6_62)))
 (let ((?x5220 (* l_0_6_48 l_0_6_48)))
 (let ((?x5221 (* 4.0 ?x5220)))
 (let ((?x5214 (* l_0_6_47 l_0_6_47)))
 (let ((?x5215 (* 4.0 ?x5214)))
 (let ((?x6064 (* l_0_6_3 l_0_6_3)))
 (let ((?x6062 (* l_0_6_2 l_0_6_2)))
 (let ((?x6057 (- (* (* (- 2.0) l_0_6_107) l_0_6_112) (* (* 2.0 l_0_6_108) l_0_6_113))))
 (let ((?x6061 (- (- ?x6057 (* (* 2.0 l_0_6_17) l_0_6_22)) (* (* 2.0 l_0_6_18) l_0_6_23))))
 (let ((?x6069 (+ (+ (- (- ?x6061 ?x6062) ?x6064) (* (* 2.0 l_0_6_32) l_0_6_37)) (* (* 2.0 l_0_6_33) l_0_6_38))))
 (let ((?x6074 (- (+ (- ?x6069 (* (* 2.0 l_0_6_47) l_0_6_52)) ?x5215) (* (* 2.0 l_0_6_48) l_0_6_53))))
 (let ((?x6080 (+ (- (+ (+ ?x6074 ?x5221) (* (* 2.0 l_0_6_62) l_0_6_67)) ?x5268) (* (* 2.0 l_0_6_63) l_0_6_68))))
 (let ((?x6087 (- (+ (+ (- ?x6080 ?x5274) ?x6082) ?x6084) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (- ?x6087 (* (* 2.0 l_0_6_93) l_0_6_98)) 0.0))))))))))))))))))
(assert
 (let ((?x6232 (* 2.0 l_0_6_78)))
 (let ((?x6233 (* ?x6232 l_0_6_80)))
 (let ((?x6229 (* 2.0 l_0_6_77)))
 (let ((?x6230 (* ?x6229 l_0_6_79)))
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6216 (* ?x5751 l_0_6_65)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6212 (* ?x5748 l_0_6_64)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6199 (* ?x5741 l_0_6_50)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6195 (* ?x5738 l_0_6_49)))
 (let ((?x6167 (- (* (* (- 2.0) l_0_6_109) l_0_6_112) (* (* 2.0 l_0_6_110) l_0_6_113))))
 (let ((?x6173 (- (- ?x6167 (* (* 2.0 l_0_6_111) l_0_6_114)) (* (* 2.0 l_0_6_19) l_0_6_22))))
 (let ((?x6179 (- (- ?x6173 (* (* 2.0 l_0_6_2) l_0_6_4)) (* (* 2.0 l_0_6_20) l_0_6_23))))
 (let ((?x6185 (- (- ?x6179 (* (* 2.0 l_0_6_21) l_0_6_24)) (* (* 2.0 l_0_6_3) l_0_6_5))))
 (let ((?x6191 (+ (+ ?x6185 (* (* 2.0 l_0_6_34) l_0_6_37)) (* (* 2.0 l_0_6_35) l_0_6_38))))
 (let ((?x6198 (+ (+ (+ ?x6191 (* (* 2.0 l_0_6_36) l_0_6_39)) ?x6195) (* (* 6.0 l_0_6_47) l_0_6_52))))
 (let ((?x6205 (- (+ (+ ?x6198 ?x6199) (* (* 6.0 l_0_6_48) l_0_6_53)) (* (* 2.0 l_0_6_49) l_0_6_52))))
 (let ((?x6211 (- (- ?x6205 (* (* 2.0 l_0_6_50) l_0_6_53)) (* (* 2.0 l_0_6_51) l_0_6_54))))
 (let ((?x6219 (- (- (- (- ?x6211 ?x6212) (* (* 6.0 l_0_6_62) l_0_6_67)) ?x6216) (* (* 6.0 l_0_6_63) l_0_6_68))))
 (let ((?x6225 (+ (+ ?x6219 (* (* 2.0 l_0_6_64) l_0_6_67)) (* (* 2.0 l_0_6_65) l_0_6_68))))
 (let ((?x6237 (- (+ (+ (+ ?x6225 (* (* 2.0 l_0_6_66) l_0_6_69)) ?x6230) ?x6233) (* (* 2.0 l_0_6_94) l_0_6_97))))
 (let ((?x6243 (- (- ?x6237 (* (* 2.0 l_0_6_95) l_0_6_98)) (* (* 2.0 l_0_6_96) l_0_6_99))))
 (= ?x6243 0.0))))))))))))))))))))))))))
(assert
 (let ((?x6432 (* l_0_6_99 l_0_6_99)))
 (let ((?x6430 (* l_0_6_98 l_0_6_98)))
 (let ((?x6428 (* l_0_6_97 l_0_6_97)))
 (let ((?x6232 (* 2.0 l_0_6_78)))
 (let ((?x6426 (* ?x6232 l_0_6_83)))
 (let ((?x6229 (* 2.0 l_0_6_77)))
 (let ((?x6424 (* ?x6229 l_0_6_82)))
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x5752 (* ?x5751 l_0_6_68)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x5749 (* ?x5748 l_0_6_67)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x5742 (* ?x5741 l_0_6_53)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x5739 (* ?x5738 l_0_6_52)))
 (let ((?x6370 (* l_0_6_115 l_0_6_115)))
 (let ((?x6368 (* l_0_6_114 l_0_6_114)))
 (let ((?x6366 (* l_0_6_113 l_0_6_113)))
 (let ((?x6367 (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_112 l_0_6_112)) ?x6366)))
 (let ((?x6376 (- (- (- (- ?x6367 ?x6368) ?x6370) (* (* 2.0 l_0_6_2) l_0_6_7)) (* (* 1.0 l_0_6_22) l_0_6_22))))
 (let ((?x6382 (- (- ?x6376 (* (* 1.0 l_0_6_23) l_0_6_23)) (* (* 1.0 l_0_6_24) l_0_6_24))))
 (let ((?x6387 (- (- ?x6382 (* (* 1.0 l_0_6_25) l_0_6_25)) (* (* 2.0 l_0_6_3) l_0_6_8))))
 (let ((?x6393 (+ (+ ?x6387 (* 1.0 (* l_0_6_37 l_0_6_37))) (* 1.0 (* l_0_6_38 l_0_6_38)))))
 (let ((?x6399 (+ (+ ?x6393 (* 1.0 (* l_0_6_39 l_0_6_39))) (* 1.0 (* l_0_6_40 l_0_6_40)))))
 (let ((?x6407 (- (- (+ (+ ?x6399 ?x5739) ?x5742) (* (* 1.0 l_0_6_52) l_0_6_52)) (* (* 1.0 l_0_6_53) l_0_6_53))))
 (let ((?x6413 (- (- ?x6407 (* (* 1.0 l_0_6_54) l_0_6_54)) (* (* 1.0 l_0_6_55) l_0_6_55))))
 (let ((?x6419 (+ (+ (- (- ?x6413 ?x5749) ?x5752) (* 1.0 (* l_0_6_67 l_0_6_67))) (* 1.0 (* l_0_6_68 l_0_6_68)))))
 (let ((?x6423 (+ (+ ?x6419 (* 1.0 (* l_0_6_69 l_0_6_69))) (* 1.0 (* l_0_6_70 l_0_6_70)))))
 (= (- (- (- (+ (+ ?x6423 ?x6424) ?x6426) ?x6428) ?x6430) ?x6432) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x6232 (* 2.0 l_0_6_78)))
 (let ((?x6615 (* ?x6232 l_0_6_87)))
 (let ((?x6426 (* ?x6232 l_0_6_83)))
 (let ((?x6229 (* 2.0 l_0_6_77)))
 (let ((?x6612 (* ?x6229 l_0_6_86)))
 (let ((?x6424 (* ?x6229 l_0_6_82)))
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6597 (* ?x5751 l_0_6_72)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6595 (* ?x5748 l_0_6_71)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6581 (* ?x5741 l_0_6_57)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6579 (* ?x5738 l_0_6_56)))
 (let ((?x6518 (- (* (* (- 2.0) l_0_6_100) l_0_6_104) (* (* 2.0 l_0_6_101) l_0_6_97))))
 (let ((?x6524 (- (- ?x6518 (* (* 2.0 l_0_6_102) l_0_6_98)) (* (* 2.0 l_0_6_103) l_0_6_99))))
 (let ((?x6530 (- (- ?x6524 (* (* 2.0 l_0_6_11) l_0_6_2)) (* (* 2.0 l_0_6_112) l_0_6_116))))
 (let ((?x6536 (- (- ?x6530 (* (* 2.0 l_0_6_113) l_0_6_117)) (* (* 2.0 l_0_6_114) l_0_6_118))))
 (let ((?x6542 (- (- ?x6536 (* (* 2.0 l_0_6_115) l_0_6_119)) (* (* 2.0 l_0_6_12) l_0_6_3))))
 (let ((?x6548 (+ (+ ?x6542 (* (* 8.0 l_0_6_17) l_0_6_22)) (* (* 8.0 l_0_6_18) l_0_6_23))))
 (let ((?x6554 (- (- ?x6548 (* (* 2.0 l_0_6_22) l_0_6_26)) (* (* 2.0 l_0_6_23) l_0_6_27))))
 (let ((?x6560 (- (- ?x6554 (* (* 2.0 l_0_6_24) l_0_6_28)) (* (* 2.0 l_0_6_25) l_0_6_29))))
 (let ((?x6566 (- (- ?x6560 (* (* 8.0 l_0_6_32) l_0_6_37)) (* (* 8.0 l_0_6_33) l_0_6_38))))
 (let ((?x6572 (+ (+ ?x6566 (* (* 2.0 l_0_6_37) l_0_6_41)) (* (* 2.0 l_0_6_38) l_0_6_42))))
 (let ((?x6578 (+ (+ ?x6572 (* (* 2.0 l_0_6_39) l_0_6_43)) (* (* 2.0 l_0_6_40) l_0_6_44))))
 (let ((?x6588 (- (- (+ (+ ?x6578 ?x6579) ?x6581) (* (* 2.0 l_0_6_52) l_0_6_56)) (* (* 2.0 l_0_6_53) l_0_6_57))))
 (let ((?x6594 (- (- ?x6588 (* (* 2.0 l_0_6_54) l_0_6_58)) (* (* 2.0 l_0_6_55) l_0_6_59))))
 (let ((?x6604 (+ (+ (- (- ?x6594 ?x6595) ?x6597) (* (* 2.0 l_0_6_67) l_0_6_71)) (* (* 2.0 l_0_6_68) l_0_6_72))))
 (let ((?x6610 (+ (+ ?x6604 (* (* 2.0 l_0_6_69) l_0_6_73)) (* (* 2.0 l_0_6_70) l_0_6_74))))
 (= (+ (- (+ (- ?x6610 ?x6424) ?x6612) ?x6426) ?x6615) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6848 (* l_0_6_81 l_0_6_81)))
 (let ((?x6846 (* l_0_6_80 l_0_6_80)))
 (let ((?x6844 (* l_0_6_79 l_0_6_79)))
 (let ((?x6842 (* (* 4.0 l_0_6_66) l_0_6_66)))
 (let ((?x6836 (* (* 4.0 l_0_6_65) l_0_6_65)))
 (let ((?x6830 (* (* 4.0 l_0_6_64) l_0_6_64)))
 (let ((?x6820 (* l_0_6_6 l_0_6_6)))
 (let ((?x5261 (* l_0_6_51 l_0_6_51)))
 (let ((?x6818 (* 4.0 ?x5261)))
 (let ((?x5258 (* l_0_6_50 l_0_6_50)))
 (let ((?x6813 (* 4.0 ?x5258)))
 (let ((?x6808 (* l_0_6_5 l_0_6_5)))
 (let ((?x5255 (* l_0_6_49 l_0_6_49)))
 (let ((?x6806 (* 4.0 ?x5255)))
 (let ((?x6797 (* l_0_6_4 l_0_6_4)))
 (let ((?x6792 (- (* (* (- 24.0) l_0_6_17) l_0_6_22) (* (* 24.0 l_0_6_18) l_0_6_23))))
 (let ((?x6796 (+ (+ ?x6792 (* (* 24.0 l_0_6_32) l_0_6_37)) (* (* 24.0 l_0_6_33) l_0_6_38))))
 (let ((?x6802 (- (- (- ?x6796 ?x6797) (* (* 12.0 l_0_6_47) l_0_6_52)) (* (* 12.0 l_0_6_48) l_0_6_53))))
 (let ((?x6812 (+ (- (+ (+ ?x6802 (* (* 6.0 l_0_6_49) l_0_6_52)) ?x6806) ?x6808) (* (* 6.0 l_0_6_50) l_0_6_53))))
 (let ((?x6821 (- (+ (+ (+ ?x6812 ?x6813) (* (* 6.0 l_0_6_51) l_0_6_54)) ?x6818) ?x6820)))
 (let ((?x6825 (+ (+ ?x6821 (* (* 12.0 l_0_6_62) l_0_6_67)) (* (* 12.0 l_0_6_63) l_0_6_68))))
 (let ((?x6834 (- (- (- ?x6825 (* (* 6.0 l_0_6_64) l_0_6_67)) ?x6830) (* (* 6.0 l_0_6_65) l_0_6_68))))
 (let ((?x6845 (+ (- (- (- ?x6834 ?x6836) (* (* 6.0 l_0_6_66) l_0_6_69)) ?x6842) ?x6844)))
 (= (+ (+ ?x6845 ?x6846) ?x6848) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x6959 (* 2.0 l_0_6_81)))
 (let ((?x6960 (* ?x6959 l_0_6_84)))
 (let ((?x6956 (* 2.0 l_0_6_80)))
 (let ((?x6957 (* ?x6956 l_0_6_83)))
 (let ((?x6953 (* 2.0 l_0_6_79)))
 (let ((?x6954 (* ?x6953 l_0_6_82)))
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x5842 (* ?x5841 l_0_6_69)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x5839 (* ?x5838 l_0_6_68)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x5836 (* ?x5835 l_0_6_67)))
 (let ((?x5943 (* l_0_6_55 l_0_6_55)))
 (let ((?x6933 (* 3.0 ?x5943)))
 (let ((?x5937 (* l_0_6_54 l_0_6_54)))
 (let ((?x6931 (* 3.0 ?x5937)))
 (let ((?x5931 (* l_0_6_53 l_0_6_53)))
 (let ((?x6929 (* 3.0 ?x5931)))
 (let ((?x5925 (* l_0_6_52 l_0_6_52)))
 (let ((?x6927 (* 3.0 ?x5925)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x5828 (* ?x5827 l_0_6_54)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x5825 (* ?x5824 l_0_6_53)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x5822 (* ?x5821 l_0_6_52)))
 (let ((?x6924 (- (+ (* (* (- 2.0) l_0_6_4) l_0_6_7) ?x5822) (* (* 2.0 l_0_6_5) l_0_6_8))))
 (let ((?x6937 (- (+ (+ (+ (+ (+ (+ ?x6924 ?x5825) ?x5828) ?x6927) ?x6929) ?x6931) ?x6933) (* (* 2.0 l_0_6_6) l_0_6_9))))
 (let ((?x6943 (- (- (- (- ?x6937 ?x5836) ?x5839) ?x5842) (* (* 3.0 l_0_6_67) l_0_6_67))))
 (let ((?x6949 (- (- ?x6943 (* (* 3.0 l_0_6_68) l_0_6_68)) (* (* 3.0 l_0_6_69) l_0_6_69))))
 (let ((?x6961 (+ (+ (+ (- ?x6949 (* (* 3.0 l_0_6_70) l_0_6_70)) ?x6954) ?x6957) ?x6960)))
 (= ?x6961 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x6959 (* 2.0 l_0_6_81)))
 (let ((?x7087 (* ?x6959 l_0_6_88)))
 (let ((?x6960 (* ?x6959 l_0_6_84)))
 (let ((?x6956 (* 2.0 l_0_6_80)))
 (let ((?x7084 (* ?x6956 l_0_6_87)))
 (let ((?x6957 (* ?x6956 l_0_6_83)))
 (let ((?x6953 (* 2.0 l_0_6_79)))
 (let ((?x7081 (* ?x6953 l_0_6_86)))
 (let ((?x6954 (* ?x6953 l_0_6_82)))
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x7066 (* ?x5841 l_0_6_73)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x7064 (* ?x5838 l_0_6_72)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x7062 (* ?x5835 l_0_6_71)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x7048 (* ?x5827 l_0_6_58)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x7046 (* ?x5824 l_0_6_57)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x7044 (* ?x5821 l_0_6_56)))
 (let ((?x7022 (- (* (* (- 2.0) l_0_6_11) l_0_6_4) (* (* 2.0 l_0_6_12) l_0_6_5))))
 (let ((?x7028 (+ (- ?x7022 (* (* 2.0 l_0_6_13) l_0_6_6)) (* (* 8.0 l_0_6_19) l_0_6_22))))
 (let ((?x7034 (+ (+ ?x7028 (* (* 8.0 l_0_6_20) l_0_6_23)) (* (* 8.0 l_0_6_21) l_0_6_24))))
 (let ((?x7040 (- (- ?x7034 (* (* 8.0 l_0_6_34) l_0_6_37)) (* (* 8.0 l_0_6_35) l_0_6_38))))
 (let ((?x7049 (+ (+ (+ (- ?x7040 (* (* 8.0 l_0_6_36) l_0_6_39)) ?x7044) ?x7046) ?x7048)))
 (let ((?x7055 (+ (+ ?x7049 (* (* 6.0 l_0_6_52) l_0_6_56)) (* (* 6.0 l_0_6_53) l_0_6_57))))
 (let ((?x7061 (+ (+ ?x7055 (* (* 6.0 l_0_6_54) l_0_6_58)) (* (* 6.0 l_0_6_55) l_0_6_59))))
 (let ((?x7070 (- (- (- (- ?x7061 ?x7062) ?x7064) ?x7066) (* (* 6.0 l_0_6_67) l_0_6_71))))
 (let ((?x7076 (- (- ?x7070 (* (* 6.0 l_0_6_68) l_0_6_72)) (* (* 6.0 l_0_6_69) l_0_6_73))))
 (let ((?x7083 (- (+ (- (- ?x7076 (* (* 6.0 l_0_6_70) l_0_6_74)) ?x6954) ?x7081) ?x6957)))
 (= (+ (- (+ ?x7083 ?x7084) ?x6960) ?x7087) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x7224 (* l_0_6_9 l_0_6_9)))
 (let ((?x7222 (* l_0_6_85 l_0_6_85)))
 (let ((?x7220 (* l_0_6_84 l_0_6_84)))
 (let ((?x7218 (* l_0_6_83 l_0_6_83)))
 (let ((?x7216 (* l_0_6_82 l_0_6_82)))
 (let ((?x7214 (* l_0_6_8 l_0_6_8)))
 (let ((?x7212 (* (* 4.0 l_0_6_70) l_0_6_70)))
 (let ((?x7209 (* l_0_6_7 l_0_6_7)))
 (let ((?x7207 (* (* 4.0 l_0_6_69) l_0_6_69)))
 (let ((?x7204 (* (* 4.0 l_0_6_68) l_0_6_68)))
 (let ((?x7201 (* (* 4.0 l_0_6_67) l_0_6_67)))
 (let ((?x5943 (* l_0_6_55 l_0_6_55)))
 (let ((?x5944 (* 4.0 ?x5943)))
 (let ((?x5937 (* l_0_6_54 l_0_6_54)))
 (let ((?x5938 (* 4.0 ?x5937)))
 (let ((?x5931 (* l_0_6_53 l_0_6_53)))
 (let ((?x5932 (* 4.0 ?x5931)))
 (let ((?x7197 (+ (+ (* (- l_0_6_10) l_0_6_10) (* 4.0 (* l_0_6_52 l_0_6_52))) ?x5932)))
 (let ((?x7213 (- (- (- (- (- (+ (+ ?x7197 ?x5938) ?x5944) ?x7201) ?x7204) ?x7207) ?x7209) ?x7212)))
 (= (- (+ (+ (+ (+ (- ?x7213 ?x7214) ?x7216) ?x7218) ?x7220) ?x7222) ?x7224) 0.0)))))))))))))))))))))
(assert
 (let ((?x7222 (* l_0_6_85 l_0_6_85)))
 (let ((?x7312 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x7220 (* l_0_6_84 l_0_6_84)))
 (let ((?x7308 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x7218 (* l_0_6_83 l_0_6_83)))
 (let ((?x7304 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x7216 (* l_0_6_82 l_0_6_82)))
 (let ((?x7300 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x5990 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x5987 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x5984 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x5981 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x5976 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x5973 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x5970 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x5967 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x6468 (* l_0_6_25 l_0_6_25)))
 (let ((?x7277 (* 4.0 ?x6468)))
 (let ((?x6464 (* l_0_6_24 l_0_6_24)))
 (let ((?x7275 (* 4.0 ?x6464)))
 (let ((?x6460 (* l_0_6_23 l_0_6_23)))
 (let ((?x7273 (* 4.0 ?x6460)))
 (let ((?x6456 (* l_0_6_22 l_0_6_22)))
 (let ((?x7271 (* 4.0 ?x6456)))
 (let ((?x7266 (- (* (* (- 2.0) l_0_6_10) l_0_6_14) (* (* 2.0 l_0_6_11) l_0_6_7))))
 (let ((?x7270 (- (- ?x7266 (* (* 2.0 l_0_6_12) l_0_6_8)) (* (* 2.0 l_0_6_13) l_0_6_9))))
 (let ((?x7281 (- (+ (+ (+ (+ ?x7270 ?x7271) ?x7273) ?x7275) ?x7277) (* (* 4.0 l_0_6_37) l_0_6_37))))
 (let ((?x7287 (- (- ?x7281 (* (* 4.0 l_0_6_38) l_0_6_38)) (* (* 4.0 l_0_6_39) l_0_6_39))))
 (let ((?x7293 (+ (+ (+ (- ?x7287 (* (* 4.0 l_0_6_40) l_0_6_40)) ?x5967) ?x5970) ?x5973)))
 (let ((?x7302 (- (+ (- (- (- (- (+ ?x7293 ?x5976) ?x5981) ?x5984) ?x5987) ?x5990) ?x7300) ?x7216)))
 (= (- (+ (- (+ (- (+ ?x7302 ?x7304) ?x7218) ?x7308) ?x7220) ?x7312) ?x7222) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x7471 (* l_0_6_90 l_0_6_90)))
 (let ((?x7469 (* l_0_6_89 l_0_6_89)))
 (let ((?x7467 (* l_0_6_88 l_0_6_88)))
 (let ((?x7465 (* l_0_6_87 l_0_6_87)))
 (let ((?x7463 (* l_0_6_86 l_0_6_86)))
 (let ((?x7312 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x7308 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x7304 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x7300 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x7457 (* (* 4.0 l_0_6_75) l_0_6_75)))
 (let ((?x7454 (* (* 4.0 l_0_6_74) l_0_6_74)))
 (let ((?x7451 (* (* 4.0 l_0_6_73) l_0_6_73)))
 (let ((?x7448 (* (* 4.0 l_0_6_72) l_0_6_72)))
 (let ((?x7445 (* (* 4.0 l_0_6_71) l_0_6_71)))
 (let ((?x7441 (* l_0_6_60 l_0_6_60)))
 (let ((?x7442 (* 4.0 ?x7441)))
 (let ((?x7438 (* l_0_6_59 l_0_6_59)))
 (let ((?x7439 (* 4.0 ?x7438)))
 (let ((?x7435 (* l_0_6_58 l_0_6_58)))
 (let ((?x7436 (* 4.0 ?x7435)))
 (let ((?x7432 (* l_0_6_57 l_0_6_57)))
 (let ((?x7433 (* 4.0 ?x7432)))
 (let ((?x7429 (* l_0_6_56 l_0_6_56)))
 (let ((?x7430 (* 4.0 ?x7429)))
 (let ((?x7403 (* l_0_6_15 l_0_6_15)))
 (let ((?x7401 (* l_0_6_14 l_0_6_14)))
 (let ((?x7399 (* l_0_6_13 l_0_6_13)))
 (let ((?x7402 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x7399) ?x7401)))
 (let ((?x7410 (+ (+ (- ?x7402 ?x7403) (* (* 8.0 l_0_6_22) l_0_6_26)) (* (* 8.0 l_0_6_23) l_0_6_27))))
 (let ((?x7416 (+ (+ ?x7410 (* (* 8.0 l_0_6_24) l_0_6_28)) (* (* 8.0 l_0_6_25) l_0_6_29))))
 (let ((?x7422 (- (- ?x7416 (* (* 8.0 l_0_6_37) l_0_6_41)) (* (* 8.0 l_0_6_38) l_0_6_42))))
 (let ((?x7428 (- (- ?x7422 (* (* 8.0 l_0_6_39) l_0_6_43)) (* (* 8.0 l_0_6_40) l_0_6_44))))
 (let ((?x7449 (- (- (+ (+ (+ (+ (+ ?x7428 ?x7430) ?x7433) ?x7436) ?x7439) ?x7442) ?x7445) ?x7448)))
 (let ((?x7462 (- (- (- (- (- (- (- ?x7449 ?x7451) ?x7454) ?x7457) ?x7300) ?x7304) ?x7308) ?x7312)))
 (= (+ (+ (+ (+ (+ ?x7462 ?x7463) ?x7465) ?x7467) ?x7469) ?x7471) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7578 (* l_0_6_91 l_0_6_91)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5744 (* ?x5696 l_0_6_62)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5734 (* ?x5690 l_0_6_47)))
 (let ((?x7567 (- (* (- l_0_6_106) l_0_6_106) (* (* 1.0 l_0_6_16) l_0_6_16))))
 (let ((?x7574 (- (- (+ ?x7567 (* 1.0 (* l_0_6_31 l_0_6_31))) ?x5734) (* (* 1.0 l_0_6_46) l_0_6_46))))
 (= (- (+ (+ ?x7574 ?x5744) (* 1.0 (* l_0_6_61 l_0_6_61))) ?x7578) 0.0)))))))))
(assert
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6216 (* ?x5751 l_0_6_65)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6212 (* ?x5748 l_0_6_64)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6199 (* ?x5741 l_0_6_50)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6195 (* ?x5738 l_0_6_49)))
 (let ((?x7605 (- (* (* (- 2.0) l_0_6_106) l_0_6_109) (* (* 2.0 l_0_6_16) l_0_6_19))))
 (let ((?x7609 (+ (+ ?x7605 (* (* 2.0 l_0_6_31) l_0_6_34)) (* (* 6.0 l_0_6_46) l_0_6_47))))
 (let ((?x7615 (- (- (- (- ?x7609 (* (* 2.0 l_0_6_46) l_0_6_49)) ?x6195) ?x6199) (* (* 6.0 l_0_6_61) l_0_6_62))))
 (let ((?x7621 (- (+ (+ (+ ?x7615 (* (* 2.0 l_0_6_61) l_0_6_64)) ?x6212) ?x6216) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= ?x7621 0.0))))))))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5755 (* ?x5754 l_0_6_77)))
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6597 (* ?x5751 l_0_6_72)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6595 (* ?x5748 l_0_6_71)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6581 (* ?x5741 l_0_6_57)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6579 (* ?x5738 l_0_6_56)))
 (let ((?x7665 (- (* (* (- 2.0) l_0_6_101) l_0_6_91) (* (* 2.0 l_0_6_106) l_0_6_116))))
 (let ((?x7669 (- (+ ?x7665 (* (* 8.0 l_0_6_16) l_0_6_17)) (* (* 2.0 l_0_6_16) l_0_6_26))))
 (let ((?x7673 (+ (- ?x7669 (* (* 8.0 l_0_6_31) l_0_6_32)) (* (* 2.0 l_0_6_31) l_0_6_41))))
 (let ((?x7679 (+ (- (- (- ?x7673 (* (* 2.0 l_0_6_46) l_0_6_56)) ?x6579) ?x6581) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (= (- (+ (+ ?x7679 ?x6595) ?x6597) ?x5755) 0.0))))))))))))))))
(assert
 (let ((?x6084 (* l_0_6_78 l_0_6_78)))
 (let ((?x6082 (* l_0_6_77 l_0_6_77)))
 (let ((?x7728 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x7733 (- (- ?x7728 (* (* 2.0 l_0_6_107) l_0_6_116)) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x7737 (+ (- ?x7733 (* (* 2.0 l_0_6_17) l_0_6_26)) (* 4.0 (* l_0_6_17 l_0_6_17)))))
 (let ((?x7741 (+ (- ?x7737 (* (* 2.0 l_0_6_18) l_0_6_27)) (* 4.0 (* l_0_6_18 l_0_6_18)))))
 (let ((?x7746 (- (+ ?x7741 (* (* 2.0 l_0_6_32) l_0_6_41)) (* (* 4.0 l_0_6_32) l_0_6_32))))
 (let ((?x7751 (- (+ ?x7746 (* (* 2.0 l_0_6_33) l_0_6_42)) (* (* 4.0 l_0_6_33) l_0_6_33))))
 (let ((?x7755 (- (- ?x7751 (* (* 2.0 l_0_6_47) l_0_6_56)) (* (* 2.0 l_0_6_48) l_0_6_57))))
 (let ((?x7759 (+ (+ ?x7755 (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (= (- (- ?x7759 ?x6082) ?x6084) 0.0))))))))))))
(assert
 (let ((?x6232 (* 2.0 l_0_6_78)))
 (let ((?x6233 (* ?x6232 l_0_6_80)))
 (let ((?x6229 (* 2.0 l_0_6_77)))
 (let ((?x6230 (* ?x6229 l_0_6_79)))
 (let ((?x7840 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x7845 (- (- ?x7840 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_109) l_0_6_116))))
 (let ((?x7849 (- (- ?x7845 (* (* 2.0 l_0_6_110) l_0_6_117)) (* (* 2.0 l_0_6_111) l_0_6_118))))
 (let ((?x7853 (+ (+ ?x7849 (* (* 8.0 l_0_6_17) l_0_6_19)) (* (* 8.0 l_0_6_18) l_0_6_20))))
 (let ((?x7857 (- (- ?x7853 (* (* 2.0 l_0_6_19) l_0_6_26)) (* (* 2.0 l_0_6_20) l_0_6_27))))
 (let ((?x7861 (- (- ?x7857 (* (* 2.0 l_0_6_21) l_0_6_28)) (* (* 8.0 l_0_6_32) l_0_6_34))))
 (let ((?x7865 (+ (- ?x7861 (* (* 8.0 l_0_6_33) l_0_6_35)) (* (* 2.0 l_0_6_34) l_0_6_41))))
 (let ((?x7869 (+ (+ ?x7865 (* (* 2.0 l_0_6_35) l_0_6_42)) (* (* 2.0 l_0_6_36) l_0_6_43))))
 (let ((?x7873 (+ (+ ?x7869 (* (* 6.0 l_0_6_47) l_0_6_56)) (* (* 6.0 l_0_6_48) l_0_6_57))))
 (let ((?x7877 (- (- ?x7873 (* (* 2.0 l_0_6_49) l_0_6_56)) (* (* 2.0 l_0_6_50) l_0_6_57))))
 (let ((?x7881 (- (- ?x7877 (* (* 2.0 l_0_6_51) l_0_6_58)) (* (* 6.0 l_0_6_62) l_0_6_71))))
 (let ((?x7885 (+ (- ?x7881 (* (* 6.0 l_0_6_63) l_0_6_72)) (* (* 2.0 l_0_6_64) l_0_6_71))))
 (let ((?x7889 (+ (+ ?x7885 (* (* 2.0 l_0_6_65) l_0_6_72)) (* (* 2.0 l_0_6_66) l_0_6_73))))
 (= (- (- ?x7889 ?x6230) ?x6233) 0.0)))))))))))))))))))
(assert
 (let ((?x6232 (* 2.0 l_0_6_78)))
 (let ((?x6615 (* ?x6232 l_0_6_87)))
 (let ((?x6229 (* 2.0 l_0_6_77)))
 (let ((?x6612 (* ?x6229 l_0_6_86)))
 (let ((?x8005 (* l_0_6_120 l_0_6_120)))
 (let ((?x8003 (* l_0_6_119 l_0_6_119)))
 (let ((?x8001 (* l_0_6_118 l_0_6_118)))
 (let ((?x7999 (* l_0_6_117 l_0_6_117)))
 (let ((?x7997 (* l_0_6_116 l_0_6_116)))
 (let ((?x7995 (* l_0_6_105 l_0_6_105)))
 (let ((?x981 (* l_0_6_104 l_0_6_104)))
 (let ((?x1009 (* l_0_6_103 l_0_6_103)))
 (let ((?x1006 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x1009)))
 (let ((?x8006 (- (- (- (- (- (- (- ?x1006 ?x981) ?x7995) ?x7997) ?x7999) ?x8001) ?x8003) ?x8005)))
 (let ((?x8010 (+ (+ ?x8006 (* (* 8.0 l_0_6_17) l_0_6_26)) (* (* 8.0 l_0_6_18) l_0_6_27))))
 (let ((?x8016 (- (- ?x8010 (* (* 1.0 l_0_6_26) l_0_6_26)) (* (* 1.0 l_0_6_27) l_0_6_27))))
 (let ((?x8022 (- (- ?x8016 (* (* 1.0 l_0_6_28) l_0_6_28)) (* (* 1.0 l_0_6_29) l_0_6_29))))
 (let ((?x8027 (- (- ?x8022 (* (* 1.0 l_0_6_30) l_0_6_30)) (* (* 8.0 l_0_6_32) l_0_6_41))))
 (let ((?x8032 (+ (- ?x8027 (* (* 8.0 l_0_6_33) l_0_6_42)) (* 1.0 (* l_0_6_41 l_0_6_41)))))
 (let ((?x8038 (+ (+ ?x8032 (* 1.0 (* l_0_6_42 l_0_6_42))) (* 1.0 (* l_0_6_43 l_0_6_43)))))
 (let ((?x8044 (+ (+ ?x8038 (* 1.0 (* l_0_6_44 l_0_6_44))) (* 1.0 (* l_0_6_45 l_0_6_45)))))
 (let ((?x8050 (- (- ?x8044 (* (* 1.0 l_0_6_56) l_0_6_56)) (* (* 1.0 l_0_6_57) l_0_6_57))))
 (let ((?x8056 (- (- ?x8050 (* (* 1.0 l_0_6_58) l_0_6_58)) (* (* 1.0 l_0_6_59) l_0_6_59))))
 (let ((?x8061 (+ (- ?x8056 (* (* 1.0 l_0_6_60) l_0_6_60)) (* 1.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x8065 (+ (+ ?x8061 (* 1.0 (* l_0_6_72 l_0_6_72))) (* 1.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x8069 (+ (+ ?x8065 (* 1.0 (* l_0_6_74 l_0_6_74))) (* 1.0 (* l_0_6_75 l_0_6_75)))))
 (= (- (- ?x8069 ?x6612) ?x6615) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8104 (+ (* (* (- 12.0) l_0_6_16) l_0_6_16) (* 12.0 (* l_0_6_31 l_0_6_31)))))
 (let ((?x8108 (+ (- ?x8104 (* (* 6.0 l_0_6_46) l_0_6_46)) (* 6.0 (* l_0_6_61 l_0_6_61)))))
 (= ?x8108 0.0))))
(assert
 (let ((?x8124 (+ (* (* (- 24.0) l_0_6_16) l_0_6_17) (* (* 24.0 l_0_6_31) l_0_6_32))))
 (let ((?x8129 (+ (- ?x8124 (* (* 12.0 l_0_6_46) l_0_6_47)) (* (* 6.0 l_0_6_46) l_0_6_49))))
 (let ((?x8135 (- (- ?x8129 (* (* 4.0 l_0_6_49) l_0_6_49)) (* (* 4.0 l_0_6_50) l_0_6_50))))
 (let ((?x8141 (+ (- ?x8135 (* (* 4.0 l_0_6_51) l_0_6_51)) (* (* 12.0 l_0_6_61) l_0_6_62))))
 (let ((?x8144 (+ (- ?x8141 (* (* 6.0 l_0_6_61) l_0_6_64)) (* 4.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x8146 (+ (+ ?x8144 (* 4.0 (* l_0_6_65 l_0_6_65))) (* 4.0 (* l_0_6_66 l_0_6_66)))))
 (= ?x8146 0.0))))))))
(assert
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5744 (* ?x5696 l_0_6_62)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5734 (* ?x5690 l_0_6_47)))
 (let ((?x8171 (+ (* (* (- 24.0) l_0_6_16) l_0_6_19) (* (* 24.0 l_0_6_31) l_0_6_34))))
 (let ((?x8177 (+ (- (- (+ ?x8171 ?x5734) (* (* 12.0 l_0_6_46) l_0_6_49)) ?x5744) (* (* 12.0 l_0_6_61) l_0_6_64))))
 (= ?x8177 0.0))))))))
(assert
 (let ((?x8188 (+ (* (* (- 24.0) l_0_6_16) l_0_6_22) (* (* 24.0 l_0_6_31) l_0_6_37))))
 (let ((?x8192 (+ (- ?x8188 (* (* 12.0 l_0_6_46) l_0_6_52)) (* (* 12.0 l_0_6_61) l_0_6_67))))
 (= ?x8192 0.0))))
(assert
 (let ((?x8209 (+ (* (* (- 24.0) l_0_6_16) l_0_6_26) (* (* 24.0 l_0_6_31) l_0_6_41))))
 (let ((?x8213 (+ (- ?x8209 (* (* 12.0 l_0_6_46) l_0_6_56)) (* (* 12.0 l_0_6_61) l_0_6_71))))
 (= ?x8213 0.0))))
(assert
 (let ((?x6848 (* l_0_6_81 l_0_6_81)))
 (let ((?x6846 (* l_0_6_80 l_0_6_80)))
 (let ((?x6844 (* l_0_6_79 l_0_6_79)))
 (let ((?x8230 (- (* (* (- 24.0) l_0_6_17) l_0_6_26) (* (* 24.0 l_0_6_18) l_0_6_27))))
 (let ((?x8234 (+ (+ ?x8230 (* 4.0 (* l_0_6_19 l_0_6_19))) (* 4.0 (* l_0_6_20 l_0_6_20)))))
 (let ((?x8238 (+ (+ ?x8234 (* 4.0 (* l_0_6_21 l_0_6_21))) (* (* 24.0 l_0_6_32) l_0_6_41))))
 (let ((?x8243 (- (+ ?x8238 (* (* 24.0 l_0_6_33) l_0_6_42)) (* (* 4.0 l_0_6_34) l_0_6_34))))
 (let ((?x8249 (- (- ?x8243 (* (* 4.0 l_0_6_35) l_0_6_35)) (* (* 4.0 l_0_6_36) l_0_6_36))))
 (let ((?x8253 (- (- ?x8249 (* (* 12.0 l_0_6_47) l_0_6_56)) (* (* 12.0 l_0_6_48) l_0_6_57))))
 (let ((?x8257 (+ (+ ?x8253 (* (* 6.0 l_0_6_49) l_0_6_56)) (* (* 6.0 l_0_6_50) l_0_6_57))))
 (let ((?x8261 (+ (+ ?x8257 (* (* 6.0 l_0_6_51) l_0_6_58)) (* (* 12.0 l_0_6_62) l_0_6_71))))
 (let ((?x8265 (- (+ ?x8261 (* (* 12.0 l_0_6_63) l_0_6_72)) (* (* 6.0 l_0_6_64) l_0_6_71))))
 (let ((?x8269 (- (- ?x8265 (* (* 6.0 l_0_6_65) l_0_6_72)) (* (* 6.0 l_0_6_66) l_0_6_73))))
 (= (- (- (- ?x8269 ?x6844) ?x6846) ?x6848) 0.0)))))))))))))))
(assert
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6216 (* ?x5751 l_0_6_65)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6212 (* ?x5748 l_0_6_64)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6199 (* ?x5741 l_0_6_50)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6195 (* ?x5738 l_0_6_49)))
 (let ((?x1358 (- (* (* (- 12.0) l_0_6_19) l_0_6_19) (* (* 12.0 l_0_6_20) l_0_6_20))))
 (let ((?x8294 (+ (- ?x1358 (* (* 12.0 l_0_6_21) l_0_6_21)) (* 12.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x8298 (+ (+ ?x8294 (* 12.0 (* l_0_6_35 l_0_6_35))) (* 12.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x8304 (- (- (+ (+ ?x8298 ?x6195) ?x6199) (* (* 6.0 l_0_6_49) l_0_6_49)) (* (* 6.0 l_0_6_50) l_0_6_50))))
 (let ((?x8310 (+ (- (- (- ?x8304 (* (* 6.0 l_0_6_51) l_0_6_51)) ?x6212) ?x6216) (* 6.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x8314 (+ (+ ?x8310 (* 6.0 (* l_0_6_65 l_0_6_65))) (* 6.0 (* l_0_6_66 l_0_6_66)))))
 (= ?x8314 0.0))))))))))))))))
(assert
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x5752 (* ?x5751 l_0_6_68)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x5749 (* ?x5748 l_0_6_67)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x5742 (* ?x5741 l_0_6_53)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x5739 (* ?x5738 l_0_6_52)))
 (let ((?x8353 (- (* (* (- 24.0) l_0_6_19) l_0_6_22) (* (* 24.0 l_0_6_20) l_0_6_23))))
 (let ((?x8359 (+ (- ?x8353 (* (* 24.0 l_0_6_21) l_0_6_24)) (* (* 24.0 l_0_6_34) l_0_6_37))))
 (let ((?x8365 (+ (+ ?x8359 (* (* 24.0 l_0_6_35) l_0_6_38)) (* (* 24.0 l_0_6_36) l_0_6_39))))
 (let ((?x8373 (- (- (+ (+ ?x8365 ?x5739) ?x5742) (* (* 12.0 l_0_6_49) l_0_6_52)) (* (* 12.0 l_0_6_50) l_0_6_53))))
 (let ((?x8381 (+ (- (- (- ?x8373 (* (* 12.0 l_0_6_51) l_0_6_54)) ?x5749) ?x5752) (* (* 12.0 l_0_6_64) l_0_6_67))))
 (let ((?x8387 (+ (+ ?x8381 (* (* 12.0 l_0_6_65) l_0_6_68)) (* (* 12.0 l_0_6_66) l_0_6_69))))
 (= ?x8387 0.0))))))))))))))))
(assert
 (let ((?x5751 (* 8.0 l_0_6_63)))
 (let ((?x6597 (* ?x5751 l_0_6_72)))
 (let ((?x5748 (* 8.0 l_0_6_62)))
 (let ((?x6595 (* ?x5748 l_0_6_71)))
 (let ((?x5741 (* 8.0 l_0_6_48)))
 (let ((?x6581 (* ?x5741 l_0_6_57)))
 (let ((?x5738 (* 8.0 l_0_6_47)))
 (let ((?x6579 (* ?x5738 l_0_6_56)))
 (let ((?x1536 (- (* (* (- 24.0) l_0_6_19) l_0_6_26) (* (* 24.0 l_0_6_20) l_0_6_27))))
 (let ((?x8414 (+ (- ?x1536 (* (* 24.0 l_0_6_21) l_0_6_28)) (* (* 24.0 l_0_6_34) l_0_6_41))))
 (let ((?x8418 (+ (+ ?x8414 (* (* 24.0 l_0_6_35) l_0_6_42)) (* (* 24.0 l_0_6_36) l_0_6_43))))
 (let ((?x8424 (- (- (+ (+ ?x8418 ?x6579) ?x6581) (* (* 12.0 l_0_6_49) l_0_6_56)) (* (* 12.0 l_0_6_50) l_0_6_57))))
 (let ((?x8430 (+ (- (- (- ?x8424 (* (* 12.0 l_0_6_51) l_0_6_58)) ?x6595) ?x6597) (* (* 12.0 l_0_6_64) l_0_6_71))))
 (let ((?x8434 (+ (+ ?x8430 (* (* 12.0 l_0_6_65) l_0_6_72)) (* (* 12.0 l_0_6_66) l_0_6_73))))
 (= ?x8434 0.0))))))))))))))))
(assert
 (let ((?x5916 (* l_0_6_70 l_0_6_70)))
 (let ((?x8481 (* 6.0 ?x5916)))
 (let ((?x5913 (* l_0_6_69 l_0_6_69)))
 (let ((?x8479 (* 6.0 ?x5913)))
 (let ((?x5910 (* l_0_6_68 l_0_6_68)))
 (let ((?x8477 (* 6.0 ?x5910)))
 (let ((?x5907 (* l_0_6_67 l_0_6_67)))
 (let ((?x8475 (* 6.0 ?x5907)))
 (let ((?x6397 (* l_0_6_40 l_0_6_40)))
 (let ((?x8465 (* 12.0 ?x6397)))
 (let ((?x6394 (* l_0_6_39 l_0_6_39)))
 (let ((?x8463 (* 12.0 ?x6394)))
 (let ((?x6391 (* l_0_6_38 l_0_6_38)))
 (let ((?x8461 (* 12.0 ?x6391)))
 (let ((?x6388 (* l_0_6_37 l_0_6_37)))
 (let ((?x8459 (* 12.0 ?x6388)))
 (let ((?x8452 (- (* (* (- 12.0) l_0_6_22) l_0_6_22) (* (* 12.0 l_0_6_23) l_0_6_23))))
 (let ((?x8458 (- (- ?x8452 (* (* 12.0 l_0_6_24) l_0_6_24)) (* (* 12.0 l_0_6_25) l_0_6_25))))
 (let ((?x8468 (- (+ (+ (+ (+ ?x8458 ?x8459) ?x8461) ?x8463) ?x8465) (* (* 6.0 l_0_6_52) l_0_6_52))))
 (let ((?x8472 (- (- ?x8468 (* (* 6.0 l_0_6_53) l_0_6_53)) (* (* 6.0 l_0_6_54) l_0_6_54))))
 (let ((?x8480 (+ (+ (+ (- ?x8472 (* (* 6.0 l_0_6_55) l_0_6_55)) ?x8475) ?x8477) ?x8479)))
 (= (+ ?x8480 ?x8481) 0.0)))))))))))))))))))))))
(assert
 (let ((?x8508 (- (* (* (- 24.0) l_0_6_22) l_0_6_26) (* (* 24.0 l_0_6_23) l_0_6_27))))
 (let ((?x8514 (- (- ?x8508 (* (* 24.0 l_0_6_24) l_0_6_28)) (* (* 24.0 l_0_6_25) l_0_6_29))))
 (let ((?x8520 (+ (+ ?x8514 (* (* 24.0 l_0_6_37) l_0_6_41)) (* (* 24.0 l_0_6_38) l_0_6_42))))
 (let ((?x8526 (+ (+ ?x8520 (* (* 24.0 l_0_6_39) l_0_6_43)) (* (* 24.0 l_0_6_40) l_0_6_44))))
 (let ((?x8532 (- (- ?x8526 (* (* 12.0 l_0_6_52) l_0_6_56)) (* (* 12.0 l_0_6_53) l_0_6_57))))
 (let ((?x8538 (- (- ?x8532 (* (* 12.0 l_0_6_54) l_0_6_58)) (* (* 12.0 l_0_6_55) l_0_6_59))))
 (let ((?x8544 (+ (+ ?x8538 (* (* 12.0 l_0_6_67) l_0_6_71)) (* (* 12.0 l_0_6_68) l_0_6_72))))
 (let ((?x8550 (+ (+ ?x8544 (* (* 12.0 l_0_6_69) l_0_6_73)) (* (* 12.0 l_0_6_70) l_0_6_74))))
 (= ?x8550 0.0))))))))))
(assert
 (let ((?x8577 (- (* (* (- 12.0) l_0_6_26) l_0_6_26) (* (* 12.0 l_0_6_27) l_0_6_27))))
 (let ((?x8594 (- (- ?x8577 (* (* 12.0 l_0_6_28) l_0_6_28)) (* (* 12.0 l_0_6_29) l_0_6_29))))
 (let ((?x8599 (+ (- ?x8594 (* (* 12.0 l_0_6_30) l_0_6_30)) (* 12.0 (* l_0_6_41 l_0_6_41)))))
 (let ((?x8603 (+ (+ ?x8599 (* 12.0 (* l_0_6_42 l_0_6_42))) (* 12.0 (* l_0_6_43 l_0_6_43)))))
 (let ((?x8607 (+ (+ ?x8603 (* 12.0 (* l_0_6_44 l_0_6_44))) (* 12.0 (* l_0_6_45 l_0_6_45)))))
 (let ((?x8613 (- (- ?x8607 (* (* 6.0 l_0_6_56) l_0_6_56)) (* (* 6.0 l_0_6_57) l_0_6_57))))
 (let ((?x8619 (- (- ?x8613 (* (* 6.0 l_0_6_58) l_0_6_58)) (* (* 6.0 l_0_6_59) l_0_6_59))))
 (let ((?x8624 (+ (- ?x8619 (* (* 6.0 l_0_6_60) l_0_6_60)) (* 6.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x8628 (+ (+ ?x8624 (* 6.0 (* l_0_6_72 l_0_6_72))) (* 6.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x8632 (+ (+ ?x8628 (* 6.0 (* l_0_6_74 l_0_6_74))) (* 6.0 (* l_0_6_75 l_0_6_75)))))
 (= ?x8632 0.0))))))))))))
(assert
 (let ((?x5702 (* l_0_6_76 l_0_6_76)))
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5978 (* ?x5696 l_0_6_71)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5964 (* ?x5690 l_0_6_56)))
 (let ((?x8653 (- (* 4.0 (* l_0_6_16 l_0_6_16)) (* (* 4.0 l_0_6_31) l_0_6_31))))
 (= (- (+ (- ?x8653 ?x5964) ?x5978) ?x5702) 0.0))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5844 (* ?x5754 l_0_6_79)))
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x7066 (* ?x5841 l_0_6_73)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x7064 (* ?x5838 l_0_6_72)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x7062 (* ?x5835 l_0_6_71)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x7048 (* ?x5827 l_0_6_58)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x7046 (* ?x5824 l_0_6_57)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x7044 (* ?x5821 l_0_6_56)))
 (let ((?x8665 (- (* (* 8.0 l_0_6_16) l_0_6_19) (* (* 8.0 l_0_6_31) l_0_6_34))))
 (let ((?x8670 (- (- (- (+ ?x8665 (* (* 6.0 l_0_6_46) l_0_6_56)) ?x7044) ?x7046) ?x7048)))
 (let ((?x8675 (+ (+ (+ (- ?x8670 (* (* 6.0 l_0_6_61) l_0_6_71)) ?x7062) ?x7064) ?x7066)))
 (= (- ?x8675 ?x5844) 0.0)))))))))))))))))))
(assert
 (let ((?x5754 (* 2.0 l_0_6_76)))
 (let ((?x5993 (* ?x5754 l_0_6_86)))
 (let ((?x8691 (- (* (* 8.0 l_0_6_16) l_0_6_26) (* (* 8.0 l_0_6_31) l_0_6_41))))
 (let ((?x8697 (- (- ?x8691 (* (* 4.0 l_0_6_56) l_0_6_56)) (* (* 4.0 l_0_6_57) l_0_6_57))))
 (let ((?x8703 (- (- ?x8697 (* (* 4.0 l_0_6_58) l_0_6_58)) (* (* 4.0 l_0_6_59) l_0_6_59))))
 (let ((?x8707 (+ (- ?x8703 (* (* 4.0 l_0_6_60) l_0_6_60)) (* 4.0 (* l_0_6_71 l_0_6_71)))))
 (let ((?x8709 (+ (+ ?x8707 (* 4.0 (* l_0_6_72 l_0_6_72))) (* 4.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x8711 (+ (+ ?x8709 (* 4.0 (* l_0_6_74 l_0_6_74))) (* 4.0 (* l_0_6_75 l_0_6_75)))))
 (= (- ?x8711 ?x5993) 0.0))))))))))
(assert
 (let ((?x6959 (* 2.0 l_0_6_81)))
 (let ((?x7087 (* ?x6959 l_0_6_88)))
 (let ((?x6956 (* 2.0 l_0_6_80)))
 (let ((?x7084 (* ?x6956 l_0_6_87)))
 (let ((?x6953 (* 2.0 l_0_6_79)))
 (let ((?x7081 (* ?x6953 l_0_6_86)))
 (let ((?x8725 (+ (* (* 8.0 l_0_6_19) l_0_6_26) (* (* 8.0 l_0_6_20) l_0_6_27))))
 (let ((?x8729 (- (+ ?x8725 (* (* 8.0 l_0_6_21) l_0_6_28)) (* (* 8.0 l_0_6_34) l_0_6_41))))
 (let ((?x8733 (- (- ?x8729 (* (* 8.0 l_0_6_35) l_0_6_42)) (* (* 8.0 l_0_6_36) l_0_6_43))))
 (let ((?x8737 (+ (+ ?x8733 (* 3.0 (* l_0_6_56 l_0_6_56))) (* 3.0 (* l_0_6_57 l_0_6_57)))))
 (let ((?x8741 (+ (+ ?x8737 (* 3.0 (* l_0_6_58 l_0_6_58))) (* 3.0 (* l_0_6_59 l_0_6_59)))))
 (let ((?x8746 (- (+ ?x8741 (* 3.0 (* l_0_6_60 l_0_6_60))) (* (* 3.0 l_0_6_71) l_0_6_71))))
 (let ((?x8752 (- (- ?x8746 (* (* 3.0 l_0_6_72) l_0_6_72)) (* (* 3.0 l_0_6_73) l_0_6_73))))
 (let ((?x8758 (- (- ?x8752 (* (* 3.0 l_0_6_74) l_0_6_74)) (* (* 3.0 l_0_6_75) l_0_6_75))))
 (= (- (- (- ?x8758 ?x7081) ?x7084) ?x7087) 0.0))))))))))))))))
(assert
 (let ((?x7471 (* l_0_6_90 l_0_6_90)))
 (let ((?x7469 (* l_0_6_89 l_0_6_89)))
 (let ((?x7467 (* l_0_6_88 l_0_6_88)))
 (let ((?x7465 (* l_0_6_87 l_0_6_87)))
 (let ((?x7463 (* l_0_6_86 l_0_6_86)))
 (let ((?x1090 (* l_0_6_30 l_0_6_30)))
 (let ((?x8792 (* 4.0 ?x1090)))
 (let ((?x1087 (* l_0_6_29 l_0_6_29)))
 (let ((?x8790 (* 4.0 ?x1087)))
 (let ((?x8090 (* l_0_6_28 l_0_6_28)))
 (let ((?x8788 (* 4.0 ?x8090)))
 (let ((?x8086 (* l_0_6_27 l_0_6_27)))
 (let ((?x8786 (* 4.0 ?x8086)))
 (let ((?x1047 (* l_0_6_26 l_0_6_26)))
 (let ((?x8785 (* 4.0 ?x1047)))
 (let ((?x8796 (- (+ (+ (+ (+ ?x8785 ?x8786) ?x8788) ?x8790) ?x8792) (* (* 4.0 l_0_6_41) l_0_6_41))))
 (let ((?x8802 (- (- ?x8796 (* (* 4.0 l_0_6_42) l_0_6_42)) (* (* 4.0 l_0_6_43) l_0_6_43))))
 (let ((?x8808 (- (- ?x8802 (* (* 4.0 l_0_6_44) l_0_6_44)) (* (* 4.0 l_0_6_45) l_0_6_45))))
 (= (- (- (- (- (- ?x8808 ?x7463) ?x7465) ?x7467) ?x7469) ?x7471) 0.0))))))))))))))))))))
(assert
 (let ((?x5700 (* (* 4.0 l_0_6_61) l_0_6_61)))
 (let ((?x5693 (* l_0_6_46 l_0_6_46)))
 (let ((?x5694 (* 4.0 ?x5693)))
 (= (- ?x5694 ?x5700) 0.0)))))
(assert
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5830 (* ?x5696 l_0_6_64)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5816 (* ?x5690 l_0_6_49)))
 (= (- ?x5816 ?x5830) 0.0))))))
(assert
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5697 (* ?x5696 l_0_6_67)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5691 (* ?x5690 l_0_6_52)))
 (= (- ?x5691 ?x5697) 0.0))))))
(assert
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5978 (* ?x5696 l_0_6_71)))
 (let ((?x5690 (* 8.0 l_0_6_46)))
 (let ((?x5964 (* ?x5690 l_0_6_56)))
 (= (- ?x5964 ?x5978) 0.0))))))
(assert
 (let ((?x6842 (* (* 4.0 l_0_6_66) l_0_6_66)))
 (let ((?x6836 (* (* 4.0 l_0_6_65) l_0_6_65)))
 (let ((?x6830 (* (* 4.0 l_0_6_64) l_0_6_64)))
 (let ((?x5261 (* l_0_6_51 l_0_6_51)))
 (let ((?x6818 (* 4.0 ?x5261)))
 (let ((?x5258 (* l_0_6_50 l_0_6_50)))
 (let ((?x6813 (* 4.0 ?x5258)))
 (let ((?x5255 (* l_0_6_49 l_0_6_49)))
 (let ((?x6806 (* 4.0 ?x5255)))
 (= (- (- (- (+ (+ ?x6806 ?x6813) ?x6818) ?x6830) ?x6836) ?x6842) 0.0)))))))))))
(assert
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x5842 (* ?x5841 l_0_6_69)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x5839 (* ?x5838 l_0_6_68)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x5836 (* ?x5835 l_0_6_67)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x5828 (* ?x5827 l_0_6_54)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x5825 (* ?x5824 l_0_6_53)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x5822 (* ?x5821 l_0_6_52)))
 (= (- (- (- (+ (+ ?x5822 ?x5825) ?x5828) ?x5836) ?x5839) ?x5842) 0.0))))))))))))))
(assert
 (let ((?x5841 (* 8.0 l_0_6_66)))
 (let ((?x7066 (* ?x5841 l_0_6_73)))
 (let ((?x5838 (* 8.0 l_0_6_65)))
 (let ((?x7064 (* ?x5838 l_0_6_72)))
 (let ((?x5835 (* 8.0 l_0_6_64)))
 (let ((?x7062 (* ?x5835 l_0_6_71)))
 (let ((?x5827 (* 8.0 l_0_6_51)))
 (let ((?x7048 (* ?x5827 l_0_6_58)))
 (let ((?x5824 (* 8.0 l_0_6_50)))
 (let ((?x7046 (* ?x5824 l_0_6_57)))
 (let ((?x5821 (* 8.0 l_0_6_49)))
 (let ((?x7044 (* ?x5821 l_0_6_56)))
 (= (- (- (- (+ (+ ?x7044 ?x7046) ?x7048) ?x7062) ?x7064) ?x7066) 0.0))))))))))))))
(assert
 (let ((?x7212 (* (* 4.0 l_0_6_70) l_0_6_70)))
 (let ((?x7207 (* (* 4.0 l_0_6_69) l_0_6_69)))
 (let ((?x7204 (* (* 4.0 l_0_6_68) l_0_6_68)))
 (let ((?x7201 (* (* 4.0 l_0_6_67) l_0_6_67)))
 (let ((?x5943 (* l_0_6_55 l_0_6_55)))
 (let ((?x5944 (* 4.0 ?x5943)))
 (let ((?x5937 (* l_0_6_54 l_0_6_54)))
 (let ((?x5938 (* 4.0 ?x5937)))
 (let ((?x5931 (* l_0_6_53 l_0_6_53)))
 (let ((?x5932 (* 4.0 ?x5931)))
 (let ((?x5925 (* l_0_6_52 l_0_6_52)))
 (let ((?x5926 (* 4.0 ?x5925)))
 (let ((?x8889 (- (- (- (- (+ (+ (+ ?x5926 ?x5932) ?x5938) ?x5944) ?x7201) ?x7204) ?x7207) ?x7212)))
 (= ?x8889 0.0)))))))))))))))
(assert
 (let ((?x5990 (* (* 8.0 l_0_6_70) l_0_6_74)))
 (let ((?x5987 (* (* 8.0 l_0_6_69) l_0_6_73)))
 (let ((?x5984 (* (* 8.0 l_0_6_68) l_0_6_72)))
 (let ((?x5981 (* (* 8.0 l_0_6_67) l_0_6_71)))
 (let ((?x5976 (* (* 8.0 l_0_6_55) l_0_6_59)))
 (let ((?x5973 (* (* 8.0 l_0_6_54) l_0_6_58)))
 (let ((?x5970 (* (* 8.0 l_0_6_53) l_0_6_57)))
 (let ((?x5967 (* (* 8.0 l_0_6_52) l_0_6_56)))
 (let ((?x8904 (- (- (- (- (+ (+ (+ ?x5967 ?x5970) ?x5973) ?x5976) ?x5981) ?x5984) ?x5987) ?x5990)))
 (= ?x8904 0.0)))))))))))
(assert
 (let ((?x7457 (* (* 4.0 l_0_6_75) l_0_6_75)))
 (let ((?x7454 (* (* 4.0 l_0_6_74) l_0_6_74)))
 (let ((?x7451 (* (* 4.0 l_0_6_73) l_0_6_73)))
 (let ((?x7448 (* (* 4.0 l_0_6_72) l_0_6_72)))
 (let ((?x7445 (* (* 4.0 l_0_6_71) l_0_6_71)))
 (let ((?x7441 (* l_0_6_60 l_0_6_60)))
 (let ((?x7442 (* 4.0 ?x7441)))
 (let ((?x7438 (* l_0_6_59 l_0_6_59)))
 (let ((?x7439 (* 4.0 ?x7438)))
 (let ((?x7435 (* l_0_6_58 l_0_6_58)))
 (let ((?x7436 (* 4.0 ?x7435)))
 (let ((?x7432 (* l_0_6_57 l_0_6_57)))
 (let ((?x7433 (* 4.0 ?x7432)))
 (let ((?x7429 (* l_0_6_56 l_0_6_56)))
 (let ((?x7430 (* 4.0 ?x7429)))
 (let ((?x8922 (- (- (- (+ (+ (+ (+ ?x7430 ?x7433) ?x7436) ?x7439) ?x7442) ?x7445) ?x7448) ?x7451)))
 (= (- (- ?x8922 ?x7454) ?x7457) 0.0))))))))))))))))))
(assert
 (let ((?x5696 (* 8.0 l_0_6_61)))
 (let ((?x5830 (* ?x5696 l_0_6_64)))
 (let ((?x5693 (* l_0_6_46 l_0_6_46)))
 (let ((?x2622 (* 3.0 ?x5693)))
 (let ((?x2610 (- (+ (+ (* (* (- 8.0) l_0_6_46) l_0_6_49) ?x2622) ?x5830) (* (* 3.0 l_0_6_61) l_0_6_61))))
 (= ?x2610 0.0)))))))
(assert
 (let ((?x2641 (+ (* (* (- 4.0) l_0_6_46) l_0_6_46) (* 4.0 (* l_0_6_61 l_0_6_61)))))
 (= ?x2641 0.0)))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (let ((?x8962 (* l_0_7_93 l_0_7_93)))
 (let ((?x8960 (* l_0_7_92 l_0_7_92)))
 (let ((?x8941 (- (- _a_0_ (* (* 1.0 l_0_7_17) l_0_7_17)) (* (* 1.0 l_0_7_18) l_0_7_18))))
 (let ((?x8947 (+ (+ ?x8941 (* 1.0 (* l_0_7_32 l_0_7_32))) (* 1.0 (* l_0_7_33 l_0_7_33)))))
 (let ((?x8953 (- (- ?x8947 (* (* 1.0 l_0_7_47) l_0_7_47)) (* (* 1.0 l_0_7_48) l_0_7_48))))
 (let ((?x8959 (+ (+ ?x8953 (* 1.0 (* l_0_7_62 l_0_7_62))) (* 1.0 (* l_0_7_63 l_0_7_63)))))
 (= (- (- ?x8959 ?x8960) ?x8962) 0.0))))))))
(assert
 (let ((?x9022 (* l_0_7_78 l_0_7_78)))
 (let ((?x9020 (* l_0_7_77 l_0_7_77)))
 (let ((?x2643 (* l_0_7_18 l_0_7_18)))
 (let ((?x8994 (* 4.0 ?x2643)))
 (let ((?x8965 (* l_0_7_17 l_0_7_17)))
 (let ((?x8989 (* 4.0 ?x8965)))
 (let ((?x8985 (- (- _a_1_ (* (* 2.0 l_0_7_101) l_0_7_92)) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x8993 (- (+ (- ?x8985 (* (* 2.0 l_0_7_17) l_0_7_26)) ?x8989) (* (* 2.0 l_0_7_18) l_0_7_27))))
 (let ((?x9001 (- (+ (+ ?x8993 ?x8994) (* (* 2.0 l_0_7_32) l_0_7_41)) (* (* 4.0 l_0_7_32) l_0_7_32))))
 (let ((?x9007 (- (+ ?x9001 (* (* 2.0 l_0_7_33) l_0_7_42)) (* (* 4.0 l_0_7_33) l_0_7_33))))
 (let ((?x9013 (- (- ?x9007 (* (* 2.0 l_0_7_47) l_0_7_56)) (* (* 2.0 l_0_7_48) l_0_7_57))))
 (let ((?x9019 (+ (+ ?x9013 (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (= (+ (+ ?x9019 ?x9020) ?x9022) 0.0))))))))))))))
(assert
 (let ((?x9022 (* l_0_7_78 l_0_7_78)))
 (let ((?x9020 (* l_0_7_77 l_0_7_77)))
 (let ((?x9072 (* (* 4.0 l_0_7_63) l_0_7_63)))
 (let ((?x9067 (* (* 4.0 l_0_7_62) l_0_7_62)))
 (let ((?x8975 (* l_0_7_48 l_0_7_48)))
 (let ((?x9062 (* 4.0 ?x8975)))
 (let ((?x8971 (* l_0_7_47 l_0_7_47)))
 (let ((?x9058 (* 4.0 ?x8971)))
 (let ((?x9050 (* l_0_7_3 l_0_7_3)))
 (let ((?x9048 (* l_0_7_2 l_0_7_2)))
 (let ((?x9047 (- (- _a_2_ (* (* 2.0 l_0_7_17) l_0_7_22)) (* (* 2.0 l_0_7_18) l_0_7_23))))
 (let ((?x9055 (+ (+ (- (- ?x9047 ?x9048) ?x9050) (* (* 2.0 l_0_7_32) l_0_7_37)) (* (* 2.0 l_0_7_33) l_0_7_38))))
 (let ((?x9061 (- (+ (- ?x9055 (* (* 2.0 l_0_7_47) l_0_7_52)) ?x9058) (* (* 2.0 l_0_7_48) l_0_7_53))))
 (let ((?x9070 (+ (- (+ (+ ?x9061 ?x9062) (* (* 2.0 l_0_7_62) l_0_7_67)) ?x9067) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (let ((?x9078 (- (- (- (- ?x9070 ?x9072) ?x9020) ?x9022) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x9078 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0)))))))))))))))))
(assert
 (let ((?x9114 (* l_0_7_76 l_0_7_76)))
 (let ((?x9112 (* (* 4.0 l_0_7_61) l_0_7_61)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9109 (* ?x9108 l_0_7_67)))
 (let ((?x9105 (* l_0_7_46 l_0_7_46)))
 (let ((?x9106 (* 4.0 ?x9105)))
 (let ((?x9107 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 8.0 l_0_7_46) l_0_7_52)) ?x9106)))
 (= (- (- (+ ?x9107 ?x9109) ?x9112) ?x9114) 0.0)))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9156 (* ?x9155 l_0_7_77)))
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9153 (* ?x9152 l_0_7_68)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9150 (* ?x9149 l_0_7_67)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9144 (* ?x9108 l_0_7_62)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9142 (* ?x9141 l_0_7_53)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9139 (* ?x9138 l_0_7_52)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9133 (* ?x2929 l_0_7_47)))
 (let ((?x2993 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_16) l_0_7_22))))
 (let ((?x9137 (- (+ (+ ?x2993 (* (* 2.0 l_0_7_31) l_0_7_37)) ?x9133) (* (* 2.0 l_0_7_46) l_0_7_52))))
 (let ((?x9148 (+ (- (- (- ?x9137 ?x9139) ?x9142) ?x9144) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (let ((?x9160 (- (- (+ (+ ?x9148 ?x9150) ?x9153) ?x9156) (* (* 2.0 l_0_7_91) l_0_7_97))))
 (= ?x9160 0.0))))))))))))))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9225 (* ?x9155 l_0_7_79)))
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9223 (* ?x9222 l_0_7_69)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9220 (* ?x9219 l_0_7_68)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9217 (* ?x9216 l_0_7_67)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9211 (* ?x9108 l_0_7_64)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9209 (* ?x9208 l_0_7_54)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9206 (* ?x9205 l_0_7_53)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9203 (* ?x9202 l_0_7_52)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9197 (* ?x2929 l_0_7_49)))
 (let ((?x9201 (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x9197) (* (* 6.0 l_0_7_46) l_0_7_52))))
 (let ((?x9215 (- (- (- (- (- ?x9201 ?x9203) ?x9206) ?x9209) ?x9211) (* (* 6.0 l_0_7_61) l_0_7_67))))
 (= (- (+ (+ (+ ?x9215 ?x9217) ?x9220) ?x9223) ?x9225) 0.0))))))))))))))))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9285 (* ?x9155 l_0_7_82)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9109 (* ?x9108 l_0_7_67)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9103 (* ?x2929 l_0_7_52)))
 (let ((?x9262 (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x9103) (* (* 4.0 l_0_7_52) l_0_7_52))))
 (let ((?x9268 (- (- ?x9262 (* (* 4.0 l_0_7_53) l_0_7_53)) (* (* 4.0 l_0_7_54) l_0_7_54))))
 (let ((?x9275 (+ (- (- ?x9268 (* (* 4.0 l_0_7_55) l_0_7_55)) ?x9109) (* 4.0 (* l_0_7_67 l_0_7_67)))))
 (let ((?x9281 (+ (+ ?x9275 (* 4.0 (* l_0_7_68 l_0_7_68))) (* 4.0 (* l_0_7_69 l_0_7_69)))))
 (= (- (+ ?x9281 (* 4.0 (* l_0_7_70 l_0_7_70))) ?x9285) 0.0))))))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9349 (* ?x9155 l_0_7_86)))
 (let ((?x9285 (* ?x9155 l_0_7_82)))
 (let ((?x9346 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x9343 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x9340 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x9337 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9334 (* ?x9108 l_0_7_71)))
 (let ((?x9332 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x9329 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x9326 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x9323 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9320 (* ?x2929 l_0_7_56)))
 (let ((?x9316 (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 8.0 l_0_7_16) l_0_7_22))))
 (let ((?x9327 (- (- (+ (- ?x9316 (* (* 8.0 l_0_7_31) l_0_7_37)) ?x9320) ?x9323) ?x9326)))
 (let ((?x9347 (+ (+ (+ (+ (- (- (- ?x9327 ?x9329) ?x9332) ?x9334) ?x9337) ?x9340) ?x9343) ?x9346)))
 (= (- (+ ?x9347 ?x9285) ?x9349) 0.0))))))))))))))))))))
(assert
 (let ((?x9458 (* 2.0 l_0_7_78)))
 (let ((?x9459 (* ?x9458 l_0_7_80)))
 (let ((?x9455 (* 2.0 l_0_7_77)))
 (let ((?x9456 (* ?x9455 l_0_7_79)))
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9441 (* ?x9152 l_0_7_65)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9436 (* ?x9149 l_0_7_64)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9422 (* ?x9141 l_0_7_50)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9417 (* ?x9138 l_0_7_49)))
 (let ((?x9398 (- (* (* (- 2.0) l_0_7_19) l_0_7_22) (* (* 2.0 l_0_7_2) l_0_7_4))))
 (let ((?x9404 (- (- ?x9398 (* (* 2.0 l_0_7_20) l_0_7_23)) (* (* 2.0 l_0_7_21) l_0_7_24))))
 (let ((?x9410 (+ (- ?x9404 (* (* 2.0 l_0_7_3) l_0_7_5)) (* (* 2.0 l_0_7_34) l_0_7_37))))
 (let ((?x9416 (+ (+ ?x9410 (* (* 2.0 l_0_7_35) l_0_7_38)) (* (* 2.0 l_0_7_36) l_0_7_39))))
 (let ((?x9426 (+ (+ (+ (+ ?x9416 ?x9417) (* (* 6.0 l_0_7_47) l_0_7_52)) ?x9422) (* (* 6.0 l_0_7_48) l_0_7_53))))
 (let ((?x9432 (- (- ?x9426 (* (* 2.0 l_0_7_49) l_0_7_52)) (* (* 2.0 l_0_7_50) l_0_7_53))))
 (let ((?x9440 (- (- (- ?x9432 (* (* 2.0 l_0_7_51) l_0_7_54)) ?x9436) (* (* 6.0 l_0_7_62) l_0_7_67))))
 (let ((?x9448 (+ (- (- ?x9440 ?x9441) (* (* 6.0 l_0_7_63) l_0_7_68)) (* (* 2.0 l_0_7_64) l_0_7_67))))
 (let ((?x9454 (+ (+ ?x9448 (* (* 2.0 l_0_7_65) l_0_7_68)) (* (* 2.0 l_0_7_66) l_0_7_69))))
 (let ((?x9466 (- (- (- (- ?x9454 ?x9456) ?x9459) (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x9466 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9557 (* l_0_7_99 l_0_7_99)))
 (let ((?x9555 (* l_0_7_98 l_0_7_98)))
 (let ((?x9553 (* l_0_7_97 l_0_7_97)))
 (let ((?x9458 (* 2.0 l_0_7_78)))
 (let ((?x9551 (* ?x9458 l_0_7_83)))
 (let ((?x9455 (* 2.0 l_0_7_77)))
 (let ((?x9549 (* ?x9455 l_0_7_82)))
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9153 (* ?x9152 l_0_7_68)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9150 (* ?x9149 l_0_7_67)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9142 (* ?x9141 l_0_7_53)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9139 (* ?x9138 l_0_7_52)))
 (let ((?x9501 (- (- (* (- l_0_7_100) l_0_7_100) (* (* 2.0 l_0_7_2) l_0_7_7)) (* (* 1.0 l_0_7_22) l_0_7_22))))
 (let ((?x9507 (- (- ?x9501 (* (* 1.0 l_0_7_23) l_0_7_23)) (* (* 1.0 l_0_7_24) l_0_7_24))))
 (let ((?x9512 (- (- ?x9507 (* (* 1.0 l_0_7_25) l_0_7_25)) (* (* 2.0 l_0_7_3) l_0_7_8))))
 (let ((?x9518 (+ (+ ?x9512 (* 1.0 (* l_0_7_37 l_0_7_37))) (* 1.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x9524 (+ (+ ?x9518 (* 1.0 (* l_0_7_39 l_0_7_39))) (* 1.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x9532 (- (- (+ (+ ?x9524 ?x9139) ?x9142) (* (* 1.0 l_0_7_52) l_0_7_52)) (* (* 1.0 l_0_7_53) l_0_7_53))))
 (let ((?x9538 (- (- ?x9532 (* (* 1.0 l_0_7_54) l_0_7_54)) (* (* 1.0 l_0_7_55) l_0_7_55))))
 (let ((?x9544 (+ (+ (- (- ?x9538 ?x9150) ?x9153) (* 1.0 (* l_0_7_67 l_0_7_67))) (* 1.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x9548 (+ (+ ?x9544 (* 1.0 (* l_0_7_69 l_0_7_69))) (* 1.0 (* l_0_7_70 l_0_7_70)))))
 (= (- (- (- (- (- ?x9548 ?x9549) ?x9551) ?x9553) ?x9555) ?x9557) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9458 (* 2.0 l_0_7_78)))
 (let ((?x9654 (* ?x9458 l_0_7_87)))
 (let ((?x9551 (* ?x9458 l_0_7_83)))
 (let ((?x9455 (* 2.0 l_0_7_77)))
 (let ((?x9651 (* ?x9455 l_0_7_86)))
 (let ((?x9549 (* ?x9455 l_0_7_82)))
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9636 (* ?x9152 l_0_7_72)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9634 (* ?x9149 l_0_7_71)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9620 (* ?x9141 l_0_7_57)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9138 l_0_7_56)))
 (let ((?x3584 (- (* (* (- 2.0) l_0_7_100) l_0_7_104) (* (* 2.0 l_0_7_101) l_0_7_97))))
 (let ((?x9575 (- (- ?x3584 (* (* 2.0 l_0_7_102) l_0_7_98)) (* (* 2.0 l_0_7_103) l_0_7_99))))
 (let ((?x9581 (- (- ?x9575 (* (* 2.0 l_0_7_11) l_0_7_2)) (* (* 2.0 l_0_7_12) l_0_7_3))))
 (let ((?x9587 (+ (+ ?x9581 (* (* 8.0 l_0_7_17) l_0_7_22)) (* (* 8.0 l_0_7_18) l_0_7_23))))
 (let ((?x9593 (- (- ?x9587 (* (* 2.0 l_0_7_22) l_0_7_26)) (* (* 2.0 l_0_7_23) l_0_7_27))))
 (let ((?x9599 (- (- ?x9593 (* (* 2.0 l_0_7_24) l_0_7_28)) (* (* 2.0 l_0_7_25) l_0_7_29))))
 (let ((?x9605 (- (- ?x9599 (* (* 8.0 l_0_7_32) l_0_7_37)) (* (* 8.0 l_0_7_33) l_0_7_38))))
 (let ((?x9611 (+ (+ ?x9605 (* (* 2.0 l_0_7_37) l_0_7_41)) (* (* 2.0 l_0_7_38) l_0_7_42))))
 (let ((?x9617 (+ (+ ?x9611 (* (* 2.0 l_0_7_39) l_0_7_43)) (* (* 2.0 l_0_7_40) l_0_7_44))))
 (let ((?x9627 (- (- (+ (+ ?x9617 ?x9618) ?x9620) (* (* 2.0 l_0_7_52) l_0_7_56)) (* (* 2.0 l_0_7_53) l_0_7_57))))
 (let ((?x9633 (- (- ?x9627 (* (* 2.0 l_0_7_54) l_0_7_58)) (* (* 2.0 l_0_7_55) l_0_7_59))))
 (let ((?x9643 (+ (+ (- (- ?x9633 ?x9634) ?x9636) (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x9649 (+ (+ ?x9643 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (= (- (+ (- (+ ?x9649 ?x9549) ?x9651) ?x9551) ?x9654) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9791 (* l_0_7_81 l_0_7_81)))
 (let ((?x9789 (* l_0_7_80 l_0_7_80)))
 (let ((?x9787 (* l_0_7_79 l_0_7_79)))
 (let ((?x9785 (* (* 4.0 l_0_7_66) l_0_7_66)))
 (let ((?x9779 (* (* 4.0 l_0_7_65) l_0_7_65)))
 (let ((?x9773 (* (* 4.0 l_0_7_64) l_0_7_64)))
 (let ((?x9761 (* l_0_7_6 l_0_7_6)))
 (let ((?x9758 (* l_0_7_51 l_0_7_51)))
 (let ((?x9759 (* 4.0 ?x9758)))
 (let ((?x9752 (* l_0_7_50 l_0_7_50)))
 (let ((?x9753 (* 4.0 ?x9752)))
 (let ((?x9747 (* l_0_7_5 l_0_7_5)))
 (let ((?x9744 (* l_0_7_49 l_0_7_49)))
 (let ((?x9745 (* 4.0 ?x9744)))
 (let ((?x9733 (* l_0_7_4 l_0_7_4)))
 (let ((?x9726 (- (* (* (- 24.0) l_0_7_17) l_0_7_22) (* (* 24.0 l_0_7_18) l_0_7_23))))
 (let ((?x9732 (+ (+ ?x9726 (* (* 24.0 l_0_7_32) l_0_7_37)) (* (* 24.0 l_0_7_33) l_0_7_38))))
 (let ((?x9740 (- (- (- ?x9732 ?x9733) (* (* 12.0 l_0_7_47) l_0_7_52)) (* (* 12.0 l_0_7_48) l_0_7_53))))
 (let ((?x9751 (+ (- (+ (+ ?x9740 (* (* 6.0 l_0_7_49) l_0_7_52)) ?x9745) ?x9747) (* (* 6.0 l_0_7_50) l_0_7_53))))
 (let ((?x9762 (- (+ (+ (+ ?x9751 ?x9753) (* (* 6.0 l_0_7_51) l_0_7_54)) ?x9759) ?x9761)))
 (let ((?x9768 (+ (+ ?x9762 (* (* 12.0 l_0_7_62) l_0_7_67)) (* (* 12.0 l_0_7_63) l_0_7_68))))
 (let ((?x9777 (- (- (- ?x9768 (* (* 6.0 l_0_7_64) l_0_7_67)) ?x9773) (* (* 6.0 l_0_7_65) l_0_7_68))))
 (let ((?x9788 (- (- (- (- ?x9777 ?x9779) (* (* 6.0 l_0_7_66) l_0_7_69)) ?x9785) ?x9787)))
 (= (- (- ?x9788 ?x9789) ?x9791) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9838 (* 2.0 l_0_7_81)))
 (let ((?x9839 (* ?x9838 l_0_7_84)))
 (let ((?x9835 (* 2.0 l_0_7_80)))
 (let ((?x9836 (* ?x9835 l_0_7_83)))
 (let ((?x9832 (* 2.0 l_0_7_79)))
 (let ((?x9833 (* ?x9832 l_0_7_82)))
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9223 (* ?x9222 l_0_7_69)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9220 (* ?x9219 l_0_7_68)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9217 (* ?x9216 l_0_7_67)))
 (let ((?x3236 (* l_0_7_55 l_0_7_55)))
 (let ((?x9812 (* 3.0 ?x3236)))
 (let ((?x3230 (* l_0_7_54 l_0_7_54)))
 (let ((?x3881 (* 3.0 ?x3230)))
 (let ((?x3221 (* l_0_7_53 l_0_7_53)))
 (let ((?x3883 (* 3.0 ?x3221)))
 (let ((?x9291 (* l_0_7_52 l_0_7_52)))
 (let ((?x3843 (* 3.0 ?x9291)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9209 (* ?x9208 l_0_7_54)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9206 (* ?x9205 l_0_7_53)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9203 (* ?x9202 l_0_7_52)))
 (let ((?x3831 (- (+ (* (* (- 2.0) l_0_7_4) l_0_7_7) ?x9203) (* (* 2.0 l_0_7_5) l_0_7_8))))
 (let ((?x9816 (- (+ (+ (+ (+ (+ (+ ?x3831 ?x9206) ?x9209) ?x3843) ?x3883) ?x3881) ?x9812) (* (* 2.0 l_0_7_6) l_0_7_9))))
 (let ((?x9822 (- (- (- (- ?x9816 ?x9217) ?x9220) ?x9223) (* (* 3.0 l_0_7_67) l_0_7_67))))
 (let ((?x9828 (- (- ?x9822 (* (* 3.0 l_0_7_68) l_0_7_68)) (* (* 3.0 l_0_7_69) l_0_7_69))))
 (let ((?x9840 (- (- (- (- ?x9828 (* (* 3.0 l_0_7_70) l_0_7_70)) ?x9833) ?x9836) ?x9839)))
 (= ?x9840 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9838 (* 2.0 l_0_7_81)))
 (let ((?x9923 (* ?x9838 l_0_7_88)))
 (let ((?x9839 (* ?x9838 l_0_7_84)))
 (let ((?x9835 (* 2.0 l_0_7_80)))
 (let ((?x9920 (* ?x9835 l_0_7_87)))
 (let ((?x9836 (* ?x9835 l_0_7_83)))
 (let ((?x9832 (* 2.0 l_0_7_79)))
 (let ((?x9917 (* ?x9832 l_0_7_86)))
 (let ((?x9833 (* ?x9832 l_0_7_82)))
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9902 (* ?x9222 l_0_7_73)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9900 (* ?x9219 l_0_7_72)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9898 (* ?x9216 l_0_7_71)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9884 (* ?x9208 l_0_7_58)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9882 (* ?x9205 l_0_7_57)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9880 (* ?x9202 l_0_7_56)))
 (let ((?x4125 (- (* (* (- 2.0) l_0_7_11) l_0_7_4) (* (* 2.0 l_0_7_12) l_0_7_5))))
 (let ((?x4127 (+ (- ?x4125 (* (* 2.0 l_0_7_13) l_0_7_6)) (* (* 8.0 l_0_7_19) l_0_7_22))))
 (let ((?x4093 (+ (+ ?x4127 (* (* 8.0 l_0_7_20) l_0_7_23)) (* (* 8.0 l_0_7_21) l_0_7_24))))
 (let ((?x4155 (- (- ?x4093 (* (* 8.0 l_0_7_34) l_0_7_37)) (* (* 8.0 l_0_7_35) l_0_7_38))))
 (let ((?x9885 (+ (+ (+ (- ?x4155 (* (* 8.0 l_0_7_36) l_0_7_39)) ?x9880) ?x9882) ?x9884)))
 (let ((?x9891 (+ (+ ?x9885 (* (* 6.0 l_0_7_52) l_0_7_56)) (* (* 6.0 l_0_7_53) l_0_7_57))))
 (let ((?x9897 (+ (+ ?x9891 (* (* 6.0 l_0_7_54) l_0_7_58)) (* (* 6.0 l_0_7_55) l_0_7_59))))
 (let ((?x9906 (- (- (- (- ?x9897 ?x9898) ?x9900) ?x9902) (* (* 6.0 l_0_7_67) l_0_7_71))))
 (let ((?x9912 (- (- ?x9906 (* (* 6.0 l_0_7_68) l_0_7_72)) (* (* 6.0 l_0_7_69) l_0_7_73))))
 (let ((?x9919 (+ (- (+ (- ?x9912 (* (* 6.0 l_0_7_70) l_0_7_74)) ?x9833) ?x9917) ?x9836)))
 (= (- (+ (- ?x9919 ?x9920) ?x9839) ?x9923) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9992 (* l_0_7_9 l_0_7_9)))
 (let ((?x9990 (* l_0_7_85 l_0_7_85)))
 (let ((?x9988 (* l_0_7_84 l_0_7_84)))
 (let ((?x9986 (* l_0_7_83 l_0_7_83)))
 (let ((?x9984 (* l_0_7_82 l_0_7_82)))
 (let ((?x9982 (* l_0_7_8 l_0_7_8)))
 (let ((?x9980 (* (* 4.0 l_0_7_70) l_0_7_70)))
 (let ((?x9977 (* l_0_7_7 l_0_7_7)))
 (let ((?x9975 (* (* 4.0 l_0_7_69) l_0_7_69)))
 (let ((?x9972 (* (* 4.0 l_0_7_68) l_0_7_68)))
 (let ((?x9969 (* (* 4.0 l_0_7_67) l_0_7_67)))
 (let ((?x3236 (* l_0_7_55 l_0_7_55)))
 (let ((?x3237 (* 4.0 ?x3236)))
 (let ((?x3230 (* l_0_7_54 l_0_7_54)))
 (let ((?x3227 (* 4.0 ?x3230)))
 (let ((?x3221 (* l_0_7_53 l_0_7_53)))
 (let ((?x3223 (* 4.0 ?x3221)))
 (let ((?x9965 (+ (+ (* (- l_0_7_10) l_0_7_10) (* 4.0 (* l_0_7_52 l_0_7_52))) ?x3223)))
 (let ((?x9981 (- (- (- (- (- (+ (+ ?x9965 ?x3227) ?x3237) ?x9969) ?x9972) ?x9975) ?x9977) ?x9980)))
 (= (- (- (- (- (- (- ?x9981 ?x9982) ?x9984) ?x9986) ?x9988) ?x9990) ?x9992) 0.0)))))))))))))))))))))
(assert
 (let ((?x9990 (* l_0_7_85 l_0_7_85)))
 (let ((?x10048 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x9988 (* l_0_7_84 l_0_7_84)))
 (let ((?x10044 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x9986 (* l_0_7_83 l_0_7_83)))
 (let ((?x10040 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x9984 (* l_0_7_82 l_0_7_82)))
 (let ((?x10036 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x9346 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x9343 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x9340 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x9337 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x9332 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x9329 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x9326 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x9323 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x3568 (* l_0_7_25 l_0_7_25)))
 (let ((?x10013 (* 4.0 ?x3568)))
 (let ((?x3547 (* l_0_7_24 l_0_7_24)))
 (let ((?x10011 (* 4.0 ?x3547)))
 (let ((?x3561 (* l_0_7_23 l_0_7_23)))
 (let ((?x10009 (* 4.0 ?x3561)))
 (let ((?x3558 (* l_0_7_22 l_0_7_22)))
 (let ((?x10007 (* 4.0 ?x3558)))
 (let ((?x10002 (- (* (* (- 2.0) l_0_7_10) l_0_7_14) (* (* 2.0 l_0_7_11) l_0_7_7))))
 (let ((?x10006 (- (- ?x10002 (* (* 2.0 l_0_7_12) l_0_7_8)) (* (* 2.0 l_0_7_13) l_0_7_9))))
 (let ((?x10017 (- (+ (+ (+ (+ ?x10006 ?x10007) ?x10009) ?x10011) ?x10013) (* (* 4.0 l_0_7_37) l_0_7_37))))
 (let ((?x10023 (- (- ?x10017 (* (* 4.0 l_0_7_38) l_0_7_38)) (* (* 4.0 l_0_7_39) l_0_7_39))))
 (let ((?x10029 (+ (+ (+ (- ?x10023 (* (* 4.0 l_0_7_40) l_0_7_40)) ?x9323) ?x9326) ?x9329)))
 (let ((?x10038 (+ (- (- (- (- (- (+ ?x10029 ?x9332) ?x9337) ?x9340) ?x9343) ?x9346) ?x10036) ?x9984)))
 (= (+ (- (+ (- (+ (- ?x10038 ?x10040) ?x9986) ?x10044) ?x9988) ?x10048) ?x9990) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x10116 (* l_0_7_90 l_0_7_90)))
 (let ((?x10114 (* l_0_7_89 l_0_7_89)))
 (let ((?x10112 (* l_0_7_88 l_0_7_88)))
 (let ((?x10110 (* l_0_7_87 l_0_7_87)))
 (let ((?x10108 (* l_0_7_86 l_0_7_86)))
 (let ((?x10048 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x10044 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x10040 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x10036 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x10102 (* (* 4.0 l_0_7_75) l_0_7_75)))
 (let ((?x10099 (* (* 4.0 l_0_7_74) l_0_7_74)))
 (let ((?x10096 (* (* 4.0 l_0_7_73) l_0_7_73)))
 (let ((?x10093 (* (* 4.0 l_0_7_72) l_0_7_72)))
 (let ((?x10090 (* (* 4.0 l_0_7_71) l_0_7_71)))
 (let ((?x10086 (* l_0_7_60 l_0_7_60)))
 (let ((?x10087 (* 4.0 ?x10086)))
 (let ((?x10083 (* l_0_7_59 l_0_7_59)))
 (let ((?x10084 (* 4.0 ?x10083)))
 (let ((?x10080 (* l_0_7_58 l_0_7_58)))
 (let ((?x10081 (* 4.0 ?x10080)))
 (let ((?x10077 (* l_0_7_57 l_0_7_57)))
 (let ((?x10078 (* 4.0 ?x10077)))
 (let ((?x10074 (* l_0_7_56 l_0_7_56)))
 (let ((?x10075 (* 4.0 ?x10074)))
 (let ((?x4629 (* l_0_7_15 l_0_7_15)))
 (let ((?x4640 (* l_0_7_14 l_0_7_14)))
 (let ((?x4655 (* l_0_7_13 l_0_7_13)))
 (let ((?x4641 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x4655) ?x4640)))
 (let ((?x4550 (+ (+ (- ?x4641 ?x4629) (* (* 8.0 l_0_7_22) l_0_7_26)) (* (* 8.0 l_0_7_23) l_0_7_27))))
 (let ((?x10061 (+ (+ ?x4550 (* (* 8.0 l_0_7_24) l_0_7_28)) (* (* 8.0 l_0_7_25) l_0_7_29))))
 (let ((?x10067 (- (- ?x10061 (* (* 8.0 l_0_7_37) l_0_7_41)) (* (* 8.0 l_0_7_38) l_0_7_42))))
 (let ((?x10073 (- (- ?x10067 (* (* 8.0 l_0_7_39) l_0_7_43)) (* (* 8.0 l_0_7_40) l_0_7_44))))
 (let ((?x10094 (- (- (+ (+ (+ (+ (+ ?x10073 ?x10075) ?x10078) ?x10081) ?x10084) ?x10087) ?x10090) ?x10093)))
 (let ((?x10107 (+ (+ (+ (+ (- (- (- ?x10094 ?x10096) ?x10099) ?x10102) ?x10036) ?x10040) ?x10044) ?x10048)))
 (= (- (- (- (- (- ?x10107 ?x10108) ?x10110) ?x10112) ?x10114) ?x10116) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10158 (* l_0_7_91 l_0_7_91)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9144 (* ?x9108 l_0_7_62)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9133 (* ?x2929 l_0_7_47)))
 (let ((?x10150 (+ (* (* (- 1.0) l_0_7_16) l_0_7_16) (* 1.0 (* l_0_7_31 l_0_7_31)))))
 (let ((?x10157 (+ (+ (- (- ?x10150 ?x9133) (* (* 1.0 l_0_7_46) l_0_7_46)) ?x9144) (* 1.0 (* l_0_7_61 l_0_7_61)))))
 (= (- ?x10157 ?x10158) 0.0)))))))))
(assert
 (let ((?x8957 (* l_0_7_63 l_0_7_63)))
 (let ((?x9095 (* 4.0 ?x8957)))
 (let ((?x8954 (* l_0_7_62 l_0_7_62)))
 (let ((?x2906 (* 4.0 ?x8954)))
 (let ((?x10175 (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) (* (* 2.0 l_0_7_31) l_0_7_32))))
 (let ((?x10180 (- (- ?x10175 (* (* 2.0 l_0_7_46) l_0_7_47)) (* (* 4.0 l_0_7_47) l_0_7_47))))
 (let ((?x10185 (+ (- ?x10180 (* (* 4.0 l_0_7_48) l_0_7_48)) (* (* 2.0 l_0_7_61) l_0_7_62))))
 (= (- (+ (+ ?x10185 ?x2906) ?x9095) (* (* 2.0 l_0_7_91) l_0_7_92)) 0.0)))))))))
(assert
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9441 (* ?x9152 l_0_7_65)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9436 (* ?x9149 l_0_7_64)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9422 (* ?x9141 l_0_7_50)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9417 (* ?x9138 l_0_7_49)))
 (let ((?x10218 (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) (* (* 2.0 l_0_7_31) l_0_7_34))))
 (let ((?x10222 (- (+ ?x10218 (* (* 6.0 l_0_7_46) l_0_7_47)) (* (* 2.0 l_0_7_46) l_0_7_49))))
 (let ((?x10228 (+ (- (- (- ?x10222 ?x9417) ?x9422) (* (* 6.0 l_0_7_61) l_0_7_62)) (* (* 2.0 l_0_7_61) l_0_7_64))))
 (= (- (+ (+ ?x10228 ?x9436) ?x9441) (* (* 2.0 l_0_7_91) l_0_7_94)) 0.0)))))))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9156 (* ?x9155 l_0_7_77)))
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9636 (* ?x9152 l_0_7_72)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9634 (* ?x9149 l_0_7_71)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9620 (* ?x9141 l_0_7_57)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9138 l_0_7_56)))
 (let ((?x4851 (+ (* (* (- 2.0) l_0_7_101) l_0_7_91) (* (* 8.0 l_0_7_16) l_0_7_17))))
 (let ((?x4896 (- (- ?x4851 (* (* 2.0 l_0_7_16) l_0_7_26)) (* (* 8.0 l_0_7_31) l_0_7_32))))
 (let ((?x10245 (- (+ ?x4896 (* (* 2.0 l_0_7_31) l_0_7_41)) (* (* 2.0 l_0_7_46) l_0_7_56))))
 (let ((?x10250 (+ (+ (- (- ?x10245 ?x9618) ?x9620) (* (* 2.0 l_0_7_61) l_0_7_71)) ?x9634)))
 (= (+ (+ ?x10250 ?x9636) ?x9156) 0.0))))))))))))))))
(assert
 (let ((?x10269 (- (* (* (- 2.0) l_0_7_17) l_0_7_19) (* (* 2.0 l_0_7_18) l_0_7_20))))
 (let ((?x10273 (+ (+ ?x10269 (* (* 2.0 l_0_7_32) l_0_7_34)) (* (* 2.0 l_0_7_33) l_0_7_35))))
 (let ((?x10277 (+ (- ?x10273 (* (* 2.0 l_0_7_47) l_0_7_49)) (* 3.0 (* l_0_7_47 l_0_7_47)))))
 (let ((?x10281 (+ (- ?x10277 (* (* 2.0 l_0_7_48) l_0_7_50)) (* 3.0 (* l_0_7_48 l_0_7_48)))))
 (let ((?x10286 (- (+ ?x10281 (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 3.0 l_0_7_62) l_0_7_62))))
 (let ((?x10291 (- (+ ?x10286 (* (* 2.0 l_0_7_63) l_0_7_65)) (* (* 3.0 l_0_7_63) l_0_7_63))))
 (let ((?x10295 (- (- ?x10291 (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= ?x10295 0.0)))))))))
(assert
 (let ((?x10411 (* l_0_7_96 l_0_7_96)))
 (let ((?x10409 (* l_0_7_95 l_0_7_95)))
 (let ((?x10407 (* l_0_7_94 l_0_7_94)))
 (let ((?x10353 (- (* (* (- 12.0) l_0_7_17) l_0_7_17) (* (* 12.0 l_0_7_18) l_0_7_18))))
 (let ((?x10359 (- (- ?x10353 (* (* 1.0 l_0_7_19) l_0_7_19)) (* (* 1.0 l_0_7_20) l_0_7_20))))
 (let ((?x10364 (+ (- ?x10359 (* (* 1.0 l_0_7_21) l_0_7_21)) (* 12.0 (* l_0_7_32 l_0_7_32)))))
 (let ((?x10369 (+ (+ ?x10364 (* 12.0 (* l_0_7_33 l_0_7_33))) (* 1.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x10375 (+ (+ ?x10369 (* 1.0 (* l_0_7_35 l_0_7_35))) (* 1.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x10379 (- (+ ?x10375 (* (* 6.0 l_0_7_47) l_0_7_49)) (* (* 6.0 l_0_7_47) l_0_7_47))))
 (let ((?x10383 (- (+ ?x10379 (* (* 6.0 l_0_7_48) l_0_7_50)) (* (* 6.0 l_0_7_48) l_0_7_48))))
 (let ((?x10389 (- (- ?x10383 (* (* 1.0 l_0_7_49) l_0_7_49)) (* (* 1.0 l_0_7_50) l_0_7_50))))
 (let ((?x10394 (- (- ?x10389 (* (* 1.0 l_0_7_51) l_0_7_51)) (* (* 6.0 l_0_7_62) l_0_7_64))))
 (let ((?x10398 (- (+ ?x10394 (* 6.0 (* l_0_7_62 l_0_7_62))) (* (* 6.0 l_0_7_63) l_0_7_65))))
 (let ((?x10402 (+ (+ ?x10398 (* 6.0 (* l_0_7_63 l_0_7_63))) (* 1.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x10406 (+ (+ ?x10402 (* 1.0 (* l_0_7_65 l_0_7_65))) (* 1.0 (* l_0_7_66 l_0_7_66)))))
 (= (- (- (- ?x10406 ?x10407) ?x10409) ?x10411) 0.0)))))))))))))))))
(assert
 (let ((?x9458 (* 2.0 l_0_7_78)))
 (let ((?x9459 (* ?x9458 l_0_7_80)))
 (let ((?x9455 (* 2.0 l_0_7_77)))
 (let ((?x9456 (* ?x9455 l_0_7_79)))
 (let ((?x10469 (- (* (* (- 2.0) l_0_7_101) l_0_7_94) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x10473 (+ (- ?x10469 (* (* 2.0 l_0_7_103) l_0_7_96)) (* (* 8.0 l_0_7_17) l_0_7_19))))
 (let ((?x10478 (- (+ ?x10473 (* (* 8.0 l_0_7_18) l_0_7_20)) (* (* 2.0 l_0_7_19) l_0_7_26))))
 (let ((?x10482 (- (- ?x10478 (* (* 2.0 l_0_7_20) l_0_7_27)) (* (* 2.0 l_0_7_21) l_0_7_28))))
 (let ((?x10486 (- (- ?x10482 (* (* 8.0 l_0_7_32) l_0_7_34)) (* (* 8.0 l_0_7_33) l_0_7_35))))
 (let ((?x10490 (+ (+ ?x10486 (* (* 2.0 l_0_7_34) l_0_7_41)) (* (* 2.0 l_0_7_35) l_0_7_42))))
 (let ((?x10494 (+ (+ ?x10490 (* (* 2.0 l_0_7_36) l_0_7_43)) (* (* 6.0 l_0_7_47) l_0_7_56))))
 (let ((?x10498 (- (+ ?x10494 (* (* 6.0 l_0_7_48) l_0_7_57)) (* (* 2.0 l_0_7_49) l_0_7_56))))
 (let ((?x10502 (- (- ?x10498 (* (* 2.0 l_0_7_50) l_0_7_57)) (* (* 2.0 l_0_7_51) l_0_7_58))))
 (let ((?x10506 (- (- ?x10502 (* (* 6.0 l_0_7_62) l_0_7_71)) (* (* 6.0 l_0_7_63) l_0_7_72))))
 (let ((?x10510 (+ (+ ?x10506 (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (= (+ (+ (+ ?x10510 (* (* 2.0 l_0_7_66) l_0_7_73)) ?x9456) ?x9459) 0.0)))))))))))))))))
(assert
 (let ((?x9458 (* 2.0 l_0_7_78)))
 (let ((?x9654 (* ?x9458 l_0_7_87)))
 (let ((?x9455 (* 2.0 l_0_7_77)))
 (let ((?x9651 (* ?x9455 l_0_7_86)))
 (let ((?x10560 (* l_0_7_105 l_0_7_105)))
 (let ((?x10558 (* l_0_7_104 l_0_7_104)))
 (let ((?x10556 (* l_0_7_103 l_0_7_103)))
 (let ((?x10557 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x10556)))
 (let ((?x10565 (+ (+ (- (- ?x10557 ?x10558) ?x10560) (* (* 8.0 l_0_7_17) l_0_7_26)) (* (* 8.0 l_0_7_18) l_0_7_27))))
 (let ((?x10571 (- (- ?x10565 (* (* 1.0 l_0_7_26) l_0_7_26)) (* (* 1.0 l_0_7_27) l_0_7_27))))
 (let ((?x10577 (- (- ?x10571 (* (* 1.0 l_0_7_28) l_0_7_28)) (* (* 1.0 l_0_7_29) l_0_7_29))))
 (let ((?x10582 (- (- ?x10577 (* (* 1.0 l_0_7_30) l_0_7_30)) (* (* 8.0 l_0_7_32) l_0_7_41))))
 (let ((?x10587 (+ (- ?x10582 (* (* 8.0 l_0_7_33) l_0_7_42)) (* 1.0 (* l_0_7_41 l_0_7_41)))))
 (let ((?x10593 (+ (+ ?x10587 (* 1.0 (* l_0_7_42 l_0_7_42))) (* 1.0 (* l_0_7_43 l_0_7_43)))))
 (let ((?x10599 (+ (+ ?x10593 (* 1.0 (* l_0_7_44 l_0_7_44))) (* 1.0 (* l_0_7_45 l_0_7_45)))))
 (let ((?x10605 (- (- ?x10599 (* (* 1.0 l_0_7_56) l_0_7_56)) (* (* 1.0 l_0_7_57) l_0_7_57))))
 (let ((?x10611 (- (- ?x10605 (* (* 1.0 l_0_7_58) l_0_7_58)) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (let ((?x10616 (+ (- ?x10611 (* (* 1.0 l_0_7_60) l_0_7_60)) (* 1.0 (* l_0_7_71 l_0_7_71)))))
 (let ((?x10620 (+ (+ ?x10616 (* 1.0 (* l_0_7_72 l_0_7_72))) (* 1.0 (* l_0_7_73 l_0_7_73)))))
 (let ((?x10624 (+ (+ ?x10620 (* 1.0 (* l_0_7_74 l_0_7_74))) (* 1.0 (* l_0_7_75 l_0_7_75)))))
 (= (+ (+ ?x10624 ?x9651) ?x9654) 0.0))))))))))))))))))))))
(assert
 (let ((?x5311 (+ (* (* (- 12.0) l_0_7_16) l_0_7_16) (* 12.0 (* l_0_7_31 l_0_7_31)))))
 (let ((?x5337 (+ (- ?x5311 (* (* 6.0 l_0_7_46) l_0_7_46)) (* 6.0 (* l_0_7_61 l_0_7_61)))))
 (= ?x5337 0.0))))
(assert
 (let ((?x4001 (* l_0_7_66 l_0_7_66)))
 (let ((?x3999 (* 4.0 ?x4001)))
 (let ((?x3959 (* l_0_7_65 l_0_7_65)))
 (let ((?x3963 (* 4.0 ?x3959)))
 (let ((?x3956 (* l_0_7_64 l_0_7_64)))
 (let ((?x3957 (* 4.0 ?x3956)))
 (let ((?x10664 (+ (* (* (- 24.0) l_0_7_16) l_0_7_17) (* (* 24.0 l_0_7_31) l_0_7_32))))
 (let ((?x10669 (+ (- ?x10664 (* (* 12.0 l_0_7_46) l_0_7_47)) (* (* 6.0 l_0_7_46) l_0_7_49))))
 (let ((?x10675 (- (- ?x10669 (* (* 4.0 l_0_7_49) l_0_7_49)) (* (* 4.0 l_0_7_50) l_0_7_50))))
 (let ((?x10681 (+ (- ?x10675 (* (* 4.0 l_0_7_51) l_0_7_51)) (* (* 12.0 l_0_7_61) l_0_7_62))))
 (let ((?x10686 (+ (+ (+ (- ?x10681 (* (* 6.0 l_0_7_61) l_0_7_64)) ?x3957) ?x3963) ?x3999)))
 (= ?x10686 0.0)))))))))))))
(assert
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9144 (* ?x9108 l_0_7_62)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9133 (* ?x2929 l_0_7_47)))
 (let ((?x10703 (+ (* (* (- 24.0) l_0_7_16) l_0_7_19) (* (* 24.0 l_0_7_31) l_0_7_34))))
 (let ((?x10709 (+ (- (- (+ ?x10703 ?x9133) (* (* 12.0 l_0_7_46) l_0_7_49)) ?x9144) (* (* 12.0 l_0_7_61) l_0_7_64))))
 (= ?x10709 0.0))))))))
(assert
 (let ((?x10717 (+ (* (* (- 24.0) l_0_7_16) l_0_7_22) (* (* 24.0 l_0_7_31) l_0_7_37))))
 (let ((?x10721 (+ (- ?x10717 (* (* 12.0 l_0_7_46) l_0_7_52)) (* (* 12.0 l_0_7_61) l_0_7_67))))
 (= ?x10721 0.0))))
(assert
 (let ((?x10736 (+ (* (* (- 24.0) l_0_7_16) l_0_7_26) (* (* 24.0 l_0_7_31) l_0_7_41))))
 (let ((?x10740 (+ (- ?x10736 (* (* 12.0 l_0_7_46) l_0_7_56)) (* (* 12.0 l_0_7_61) l_0_7_71))))
 (= ?x10740 0.0))))
(assert
 (let ((?x9072 (* (* 4.0 l_0_7_63) l_0_7_63)))
 (let ((?x9067 (* (* 4.0 l_0_7_62) l_0_7_62)))
 (let ((?x8975 (* l_0_7_48 l_0_7_48)))
 (let ((?x9062 (* 4.0 ?x8975)))
 (let ((?x8971 (* l_0_7_47 l_0_7_47)))
 (let ((?x9058 (* 4.0 ?x8971)))
 (let ((?x10757 (- (* (* (- 24.0) l_0_7_17) l_0_7_19) (* (* 24.0 l_0_7_18) l_0_7_20))))
 (let ((?x10761 (+ (+ ?x10757 (* (* 24.0 l_0_7_32) l_0_7_34)) (* (* 24.0 l_0_7_33) l_0_7_35))))
 (let ((?x10766 (- (+ (- ?x10761 (* (* 12.0 l_0_7_47) l_0_7_49)) ?x9058) (* (* 12.0 l_0_7_48) l_0_7_50))))
 (let ((?x10771 (+ (+ (+ ?x10766 ?x9062) (* 3.0 (* l_0_7_49 l_0_7_49))) (* 3.0 (* l_0_7_50 l_0_7_50)))))
 (let ((?x10775 (+ (+ ?x10771 (* 3.0 (* l_0_7_51 l_0_7_51))) (* (* 12.0 l_0_7_62) l_0_7_64))))
 (let ((?x10782 (- (- (+ (- ?x10775 ?x9067) (* (* 12.0 l_0_7_63) l_0_7_65)) ?x9072) (* (* 3.0 l_0_7_64) l_0_7_64))))
 (let ((?x10788 (- (- ?x10782 (* (* 3.0 l_0_7_65) l_0_7_65)) (* (* 3.0 l_0_7_66) l_0_7_66))))
 (= ?x10788 0.0)))))))))))))))
(assert
 (let ((?x9791 (* l_0_7_81 l_0_7_81)))
 (let ((?x9789 (* l_0_7_80 l_0_7_80)))
 (let ((?x9787 (* l_0_7_79 l_0_7_79)))
 (let ((?x10425 (* l_0_7_21 l_0_7_21)))
 (let ((?x10823 (* 4.0 ?x10425)))
 (let ((?x2645 (* l_0_7_20 l_0_7_20)))
 (let ((?x10821 (* 4.0 ?x2645)))
 (let ((?x10420 (* l_0_7_19 l_0_7_19)))
 (let ((?x10819 (* 4.0 ?x10420)))
 (let ((?x10818 (- (* (* (- 24.0) l_0_7_17) l_0_7_26) (* (* 24.0 l_0_7_18) l_0_7_27))))
 (let ((?x10826 (+ (+ (+ (+ ?x10818 ?x10819) ?x10821) ?x10823) (* (* 24.0 l_0_7_32) l_0_7_41))))
 (let ((?x10831 (- (+ ?x10826 (* (* 24.0 l_0_7_33) l_0_7_42)) (* (* 4.0 l_0_7_34) l_0_7_34))))
 (let ((?x10837 (- (- ?x10831 (* (* 4.0 l_0_7_35) l_0_7_35)) (* (* 4.0 l_0_7_36) l_0_7_36))))
 (let ((?x10841 (- (- ?x10837 (* (* 12.0 l_0_7_47) l_0_7_56)) (* (* 12.0 l_0_7_48) l_0_7_57))))
 (let ((?x10845 (+ (+ ?x10841 (* (* 6.0 l_0_7_49) l_0_7_56)) (* (* 6.0 l_0_7_50) l_0_7_57))))
 (let ((?x10849 (+ (+ ?x10845 (* (* 6.0 l_0_7_51) l_0_7_58)) (* (* 12.0 l_0_7_62) l_0_7_71))))
 (let ((?x10853 (- (+ ?x10849 (* (* 12.0 l_0_7_63) l_0_7_72)) (* (* 6.0 l_0_7_64) l_0_7_71))))
 (let ((?x10857 (- (- ?x10853 (* (* 6.0 l_0_7_65) l_0_7_72)) (* (* 6.0 l_0_7_66) l_0_7_73))))
 (= (+ (+ (+ ?x10857 ?x9787) ?x9789) ?x9791) 0.0))))))))))))))))))))
(assert
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9441 (* ?x9152 l_0_7_65)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9436 (* ?x9149 l_0_7_64)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9422 (* ?x9141 l_0_7_50)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9417 (* ?x9138 l_0_7_49)))
 (let ((?x5591 (- (* (* (- 12.0) l_0_7_19) l_0_7_19) (* (* 12.0 l_0_7_20) l_0_7_20))))
 (let ((?x5611 (+ (- ?x5591 (* (* 12.0 l_0_7_21) l_0_7_21)) (* 12.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x5619 (+ (+ ?x5611 (* 12.0 (* l_0_7_35 l_0_7_35))) (* 12.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x10886 (- (- (+ (+ ?x5619 ?x9417) ?x9422) (* (* 6.0 l_0_7_49) l_0_7_49)) (* (* 6.0 l_0_7_50) l_0_7_50))))
 (let ((?x10892 (+ (- (- (- ?x10886 (* (* 6.0 l_0_7_51) l_0_7_51)) ?x9436) ?x9441) (* 6.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x10896 (+ (+ ?x10892 (* 6.0 (* l_0_7_65 l_0_7_65))) (* 6.0 (* l_0_7_66 l_0_7_66)))))
 (= ?x10896 0.0))))))))))))))))
(assert
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9153 (* ?x9152 l_0_7_68)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9150 (* ?x9149 l_0_7_67)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9142 (* ?x9141 l_0_7_53)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9139 (* ?x9138 l_0_7_52)))
 (let ((?x10934 (- (* (* (- 24.0) l_0_7_19) l_0_7_22) (* (* 24.0 l_0_7_20) l_0_7_23))))
 (let ((?x10940 (+ (- ?x10934 (* (* 24.0 l_0_7_21) l_0_7_24)) (* (* 24.0 l_0_7_34) l_0_7_37))))
 (let ((?x10946 (+ (+ ?x10940 (* (* 24.0 l_0_7_35) l_0_7_38)) (* (* 24.0 l_0_7_36) l_0_7_39))))
 (let ((?x10954 (- (- (+ (+ ?x10946 ?x9139) ?x9142) (* (* 12.0 l_0_7_49) l_0_7_52)) (* (* 12.0 l_0_7_50) l_0_7_53))))
 (let ((?x10962 (+ (- (- (- ?x10954 (* (* 12.0 l_0_7_51) l_0_7_54)) ?x9150) ?x9153) (* (* 12.0 l_0_7_64) l_0_7_67))))
 (let ((?x10968 (+ (+ ?x10962 (* (* 12.0 l_0_7_65) l_0_7_68)) (* (* 12.0 l_0_7_66) l_0_7_69))))
 (= ?x10968 0.0))))))))))))))))
(assert
 (let ((?x9152 (* 8.0 l_0_7_63)))
 (let ((?x9636 (* ?x9152 l_0_7_72)))
 (let ((?x9149 (* 8.0 l_0_7_62)))
 (let ((?x9634 (* ?x9149 l_0_7_71)))
 (let ((?x9141 (* 8.0 l_0_7_48)))
 (let ((?x9620 (* ?x9141 l_0_7_57)))
 (let ((?x9138 (* 8.0 l_0_7_47)))
 (let ((?x9618 (* ?x9138 l_0_7_56)))
 (let ((?x10997 (- (* (* (- 24.0) l_0_7_19) l_0_7_26) (* (* 24.0 l_0_7_20) l_0_7_27))))
 (let ((?x11001 (+ (- ?x10997 (* (* 24.0 l_0_7_21) l_0_7_28)) (* (* 24.0 l_0_7_34) l_0_7_41))))
 (let ((?x11005 (+ (+ ?x11001 (* (* 24.0 l_0_7_35) l_0_7_42)) (* (* 24.0 l_0_7_36) l_0_7_43))))
 (let ((?x11011 (- (- (+ (+ ?x11005 ?x9618) ?x9620) (* (* 12.0 l_0_7_49) l_0_7_56)) (* (* 12.0 l_0_7_50) l_0_7_57))))
 (let ((?x11017 (+ (- (- (- ?x11011 (* (* 12.0 l_0_7_51) l_0_7_58)) ?x9634) ?x9636) (* (* 12.0 l_0_7_64) l_0_7_71))))
 (let ((?x11021 (+ (+ ?x11017 (* (* 12.0 l_0_7_65) l_0_7_72)) (* (* 12.0 l_0_7_66) l_0_7_73))))
 (= ?x11021 0.0))))))))))))))))
(assert
 (let ((?x11040 (- (* (* (- 12.0) l_0_7_22) l_0_7_22) (* (* 12.0 l_0_7_23) l_0_7_23))))
 (let ((?x11046 (- (- ?x11040 (* (* 12.0 l_0_7_24) l_0_7_24)) (* (* 12.0 l_0_7_25) l_0_7_25))))
 (let ((?x11050 (+ (+ ?x11046 (* 12.0 (* l_0_7_37 l_0_7_37))) (* 12.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x11054 (+ (+ ?x11050 (* 12.0 (* l_0_7_39 l_0_7_39))) (* 12.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x11058 (- (- ?x11054 (* (* 6.0 l_0_7_52) l_0_7_52)) (* (* 6.0 l_0_7_53) l_0_7_53))))
 (let ((?x11062 (- (- ?x11058 (* (* 6.0 l_0_7_54) l_0_7_54)) (* (* 6.0 l_0_7_55) l_0_7_55))))
 (let ((?x11066 (+ (+ ?x11062 (* 6.0 (* l_0_7_67 l_0_7_67))) (* 6.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x11070 (+ (+ ?x11066 (* 6.0 (* l_0_7_69 l_0_7_69))) (* 6.0 (* l_0_7_70 l_0_7_70)))))
 (= ?x11070 0.0))))))))))
(assert
 (let ((?x11105 (- (* (* (- 24.0) l_0_7_22) l_0_7_26) (* (* 24.0 l_0_7_23) l_0_7_27))))
 (let ((?x11111 (- (- ?x11105 (* (* 24.0 l_0_7_24) l_0_7_28)) (* (* 24.0 l_0_7_25) l_0_7_29))))
 (let ((?x11117 (+ (+ ?x11111 (* (* 24.0 l_0_7_37) l_0_7_41)) (* (* 24.0 l_0_7_38) l_0_7_42))))
 (let ((?x11123 (+ (+ ?x11117 (* (* 24.0 l_0_7_39) l_0_7_43)) (* (* 24.0 l_0_7_40) l_0_7_44))))
 (let ((?x11129 (- (- ?x11123 (* (* 12.0 l_0_7_52) l_0_7_56)) (* (* 12.0 l_0_7_53) l_0_7_57))))
 (let ((?x11135 (- (- ?x11129 (* (* 12.0 l_0_7_54) l_0_7_58)) (* (* 12.0 l_0_7_55) l_0_7_59))))
 (let ((?x11141 (+ (+ ?x11135 (* (* 12.0 l_0_7_67) l_0_7_71)) (* (* 12.0 l_0_7_68) l_0_7_72))))
 (let ((?x11147 (+ (+ ?x11141 (* (* 12.0 l_0_7_69) l_0_7_73)) (* (* 12.0 l_0_7_70) l_0_7_74))))
 (= ?x11147 0.0))))))))))
(assert
 (let ((?x4849 (* l_0_7_75 l_0_7_75)))
 (let ((?x11228 (* 6.0 ?x4849)))
 (let ((?x4770 (* l_0_7_74 l_0_7_74)))
 (let ((?x11226 (* 6.0 ?x4770)))
 (let ((?x4799 (* l_0_7_73 l_0_7_73)))
 (let ((?x11224 (* 6.0 ?x4799)))
 (let ((?x10136 (* l_0_7_72 l_0_7_72)))
 (let ((?x11222 (* 6.0 ?x10136)))
 (let ((?x4792 (* l_0_7_71 l_0_7_71)))
 (let ((?x11220 (* 6.0 ?x4792)))
 (let ((?x10597 (* l_0_7_45 l_0_7_45)))
 (let ((?x11203 (* 12.0 ?x10597)))
 (let ((?x10594 (* l_0_7_44 l_0_7_44)))
 (let ((?x11201 (* 12.0 ?x10594)))
 (let ((?x10591 (* l_0_7_43 l_0_7_43)))
 (let ((?x11199 (* 12.0 ?x10591)))
 (let ((?x10588 (* l_0_7_42 l_0_7_42)))
 (let ((?x11197 (* 12.0 ?x10588)))
 (let ((?x10585 (* l_0_7_41 l_0_7_41)))
 (let ((?x11195 (* 12.0 ?x10585)))
 (let ((?x11174 (- (* (* (- 12.0) l_0_7_26) l_0_7_26) (* (* 12.0 l_0_7_27) l_0_7_27))))
 (let ((?x11191 (- (- ?x11174 (* (* 12.0 l_0_7_28) l_0_7_28)) (* (* 12.0 l_0_7_29) l_0_7_29))))
 (let ((?x11200 (+ (+ (+ (- ?x11191 (* (* 12.0 l_0_7_30) l_0_7_30)) ?x11195) ?x11197) ?x11199)))
 (let ((?x11210 (- (- (+ (+ ?x11200 ?x11201) ?x11203) (* (* 6.0 l_0_7_56) l_0_7_56)) (* (* 6.0 l_0_7_57) l_0_7_57))))
 (let ((?x11216 (- (- ?x11210 (* (* 6.0 l_0_7_58) l_0_7_58)) (* (* 6.0 l_0_7_59) l_0_7_59))))
 (let ((?x11225 (+ (+ (+ (- ?x11216 (* (* 6.0 l_0_7_60) l_0_7_60)) ?x11220) ?x11222) ?x11224)))
 (= (+ (+ ?x11225 ?x11226) ?x11228) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9114 (* l_0_7_76 l_0_7_76)))
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9334 (* ?x9108 l_0_7_71)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9320 (* ?x2929 l_0_7_56)))
 (let ((?x11244 (- (* 4.0 (* l_0_7_16 l_0_7_16)) (* (* 4.0 l_0_7_31) l_0_7_31))))
 (= (+ (+ (- ?x11244 ?x9320) ?x9334) ?x9114) 0.0))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9225 (* ?x9155 l_0_7_79)))
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9902 (* ?x9222 l_0_7_73)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9900 (* ?x9219 l_0_7_72)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9898 (* ?x9216 l_0_7_71)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9884 (* ?x9208 l_0_7_58)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9882 (* ?x9205 l_0_7_57)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9880 (* ?x9202 l_0_7_56)))
 (let ((?x6092 (- (* (* 8.0 l_0_7_16) l_0_7_19) (* (* 8.0 l_0_7_31) l_0_7_34))))
 (let ((?x6120 (- (- (- (+ ?x6092 (* (* 6.0 l_0_7_46) l_0_7_56)) ?x9880) ?x9882) ?x9884)))
 (let ((?x6150 (+ (+ (+ (- ?x6120 (* (* 6.0 l_0_7_61) l_0_7_71)) ?x9898) ?x9900) ?x9902)))
 (= (+ ?x6150 ?x9225) 0.0)))))))))))))))))))
(assert
 (let ((?x9155 (* 2.0 l_0_7_76)))
 (let ((?x9349 (* ?x9155 l_0_7_86)))
 (let ((?x4849 (* l_0_7_75 l_0_7_75)))
 (let ((?x4850 (* 4.0 ?x4849)))
 (let ((?x4770 (* l_0_7_74 l_0_7_74)))
 (let ((?x4774 (* 4.0 ?x4770)))
 (let ((?x4799 (* l_0_7_73 l_0_7_73)))
 (let ((?x4778 (* 4.0 ?x4799)))
 (let ((?x10136 (* l_0_7_72 l_0_7_72)))
 (let ((?x10137 (* 4.0 ?x10136)))
 (let ((?x4792 (* l_0_7_71 l_0_7_71)))
 (let ((?x4793 (* 4.0 ?x4792)))
 (let ((?x11264 (- (* (* 8.0 l_0_7_16) l_0_7_26) (* (* 8.0 l_0_7_31) l_0_7_41))))
 (let ((?x11270 (- (- ?x11264 (* (* 4.0 l_0_7_56) l_0_7_56)) (* (* 4.0 l_0_7_57) l_0_7_57))))
 (let ((?x11276 (- (- ?x11270 (* (* 4.0 l_0_7_58) l_0_7_58)) (* (* 4.0 l_0_7_59) l_0_7_59))))
 (let ((?x11282 (+ (+ (+ (- ?x11276 (* (* 4.0 l_0_7_60) l_0_7_60)) ?x4793) ?x10137) ?x4778)))
 (= (+ (+ (+ ?x11282 ?x4774) ?x4850) ?x9349) 0.0))))))))))))))))))
(assert
 (let ((?x9838 (* 2.0 l_0_7_81)))
 (let ((?x9923 (* ?x9838 l_0_7_88)))
 (let ((?x9835 (* 2.0 l_0_7_80)))
 (let ((?x9920 (* ?x9835 l_0_7_87)))
 (let ((?x9832 (* 2.0 l_0_7_79)))
 (let ((?x9917 (* ?x9832 l_0_7_86)))
 (let ((?x10086 (* l_0_7_60 l_0_7_60)))
 (let ((?x11307 (* 3.0 ?x10086)))
 (let ((?x10083 (* l_0_7_59 l_0_7_59)))
 (let ((?x11305 (* 3.0 ?x10083)))
 (let ((?x10080 (* l_0_7_58 l_0_7_58)))
 (let ((?x11303 (* 3.0 ?x10080)))
 (let ((?x10077 (* l_0_7_57 l_0_7_57)))
 (let ((?x11301 (* 3.0 ?x10077)))
 (let ((?x10074 (* l_0_7_56 l_0_7_56)))
 (let ((?x11299 (* 3.0 ?x10074)))
 (let ((?x6314 (+ (* (* 8.0 l_0_7_19) l_0_7_26) (* (* 8.0 l_0_7_20) l_0_7_27))))
 (let ((?x6311 (- (+ ?x6314 (* (* 8.0 l_0_7_21) l_0_7_28)) (* (* 8.0 l_0_7_34) l_0_7_41))))
 (let ((?x11298 (- (- ?x6311 (* (* 8.0 l_0_7_35) l_0_7_42)) (* (* 8.0 l_0_7_36) l_0_7_43))))
 (let ((?x11311 (- (+ (+ (+ (+ (+ ?x11298 ?x11299) ?x11301) ?x11303) ?x11305) ?x11307) (* (* 3.0 l_0_7_71) l_0_7_71))))
 (let ((?x11317 (- (- ?x11311 (* (* 3.0 l_0_7_72) l_0_7_72)) (* (* 3.0 l_0_7_73) l_0_7_73))))
 (let ((?x11323 (- (- ?x11317 (* (* 3.0 l_0_7_74) l_0_7_74)) (* (* 3.0 l_0_7_75) l_0_7_75))))
 (= (+ (+ (+ ?x11323 ?x9917) ?x9920) ?x9923) 0.0))))))))))))))))))))))))
(assert
 (let ((?x10116 (* l_0_7_90 l_0_7_90)))
 (let ((?x10114 (* l_0_7_89 l_0_7_89)))
 (let ((?x10112 (* l_0_7_88 l_0_7_88)))
 (let ((?x10110 (* l_0_7_87 l_0_7_87)))
 (let ((?x10108 (* l_0_7_86 l_0_7_86)))
 (let ((?x5291 (* l_0_7_30 l_0_7_30)))
 (let ((?x11345 (* 4.0 ?x5291)))
 (let ((?x5230 (* l_0_7_29 l_0_7_29)))
 (let ((?x11343 (* 4.0 ?x5230)))
 (let ((?x10643 (* l_0_7_28 l_0_7_28)))
 (let ((?x11341 (* 4.0 ?x10643)))
 (let ((?x10639 (* l_0_7_27 l_0_7_27)))
 (let ((?x6462 (* 4.0 ?x10639)))
 (let ((?x10635 (* l_0_7_26 l_0_7_26)))
 (let ((?x6459 (* 4.0 ?x10635)))
 (let ((?x11349 (- (+ (+ (+ (+ ?x6459 ?x6462) ?x11341) ?x11343) ?x11345) (* (* 4.0 l_0_7_41) l_0_7_41))))
 (let ((?x11355 (- (- ?x11349 (* (* 4.0 l_0_7_42) l_0_7_42)) (* (* 4.0 l_0_7_43) l_0_7_43))))
 (let ((?x11361 (- (- ?x11355 (* (* 4.0 l_0_7_44) l_0_7_44)) (* (* 4.0 l_0_7_45) l_0_7_45))))
 (= (+ (+ (+ (+ (+ ?x11361 ?x10108) ?x10110) ?x10112) ?x10114) ?x10116) 0.0))))))))))))))))))))
(assert
 (let ((?x9112 (* (* 4.0 l_0_7_61) l_0_7_61)))
 (let ((?x9105 (* l_0_7_46 l_0_7_46)))
 (let ((?x9106 (* 4.0 ?x9105)))
 (= (- ?x9106 ?x9112) 0.0)))))
(assert
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9211 (* ?x9108 l_0_7_64)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9197 (* ?x2929 l_0_7_49)))
 (= (- ?x9197 ?x9211) 0.0))))))
(assert
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9109 (* ?x9108 l_0_7_67)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9103 (* ?x2929 l_0_7_52)))
 (= (- ?x9103 ?x9109) 0.0))))))
(assert
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9334 (* ?x9108 l_0_7_71)))
 (let ((?x2929 (* 8.0 l_0_7_46)))
 (let ((?x9320 (* ?x2929 l_0_7_56)))
 (= (- ?x9320 ?x9334) 0.0))))))
(assert
 (let ((?x9785 (* (* 4.0 l_0_7_66) l_0_7_66)))
 (let ((?x9779 (* (* 4.0 l_0_7_65) l_0_7_65)))
 (let ((?x9773 (* (* 4.0 l_0_7_64) l_0_7_64)))
 (let ((?x9758 (* l_0_7_51 l_0_7_51)))
 (let ((?x9759 (* 4.0 ?x9758)))
 (let ((?x9752 (* l_0_7_50 l_0_7_50)))
 (let ((?x9753 (* 4.0 ?x9752)))
 (let ((?x9744 (* l_0_7_49 l_0_7_49)))
 (let ((?x9745 (* 4.0 ?x9744)))
 (= (- (- (- (+ (+ ?x9745 ?x9753) ?x9759) ?x9773) ?x9779) ?x9785) 0.0)))))))))))
(assert
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9223 (* ?x9222 l_0_7_69)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9220 (* ?x9219 l_0_7_68)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9217 (* ?x9216 l_0_7_67)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9209 (* ?x9208 l_0_7_54)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9206 (* ?x9205 l_0_7_53)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9203 (* ?x9202 l_0_7_52)))
 (= (- (- (- (+ (+ ?x9203 ?x9206) ?x9209) ?x9217) ?x9220) ?x9223) 0.0))))))))))))))
(assert
 (let ((?x9222 (* 8.0 l_0_7_66)))
 (let ((?x9902 (* ?x9222 l_0_7_73)))
 (let ((?x9219 (* 8.0 l_0_7_65)))
 (let ((?x9900 (* ?x9219 l_0_7_72)))
 (let ((?x9216 (* 8.0 l_0_7_64)))
 (let ((?x9898 (* ?x9216 l_0_7_71)))
 (let ((?x9208 (* 8.0 l_0_7_51)))
 (let ((?x9884 (* ?x9208 l_0_7_58)))
 (let ((?x9205 (* 8.0 l_0_7_50)))
 (let ((?x9882 (* ?x9205 l_0_7_57)))
 (let ((?x9202 (* 8.0 l_0_7_49)))
 (let ((?x9880 (* ?x9202 l_0_7_56)))
 (= (- (- (- (+ (+ ?x9880 ?x9882) ?x9884) ?x9898) ?x9900) ?x9902) 0.0))))))))))))))
(assert
 (let ((?x9980 (* (* 4.0 l_0_7_70) l_0_7_70)))
 (let ((?x9975 (* (* 4.0 l_0_7_69) l_0_7_69)))
 (let ((?x9972 (* (* 4.0 l_0_7_68) l_0_7_68)))
 (let ((?x9969 (* (* 4.0 l_0_7_67) l_0_7_67)))
 (let ((?x3236 (* l_0_7_55 l_0_7_55)))
 (let ((?x3237 (* 4.0 ?x3236)))
 (let ((?x3230 (* l_0_7_54 l_0_7_54)))
 (let ((?x3227 (* 4.0 ?x3230)))
 (let ((?x3221 (* l_0_7_53 l_0_7_53)))
 (let ((?x3223 (* 4.0 ?x3221)))
 (let ((?x9291 (* l_0_7_52 l_0_7_52)))
 (let ((?x9292 (* 4.0 ?x9291)))
 (let ((?x11439 (- (- (- (- (+ (+ (+ ?x9292 ?x3223) ?x3227) ?x3237) ?x9969) ?x9972) ?x9975) ?x9980)))
 (= ?x11439 0.0)))))))))))))))
(assert
 (let ((?x9346 (* (* 8.0 l_0_7_70) l_0_7_74)))
 (let ((?x9343 (* (* 8.0 l_0_7_69) l_0_7_73)))
 (let ((?x9340 (* (* 8.0 l_0_7_68) l_0_7_72)))
 (let ((?x9337 (* (* 8.0 l_0_7_67) l_0_7_71)))
 (let ((?x9332 (* (* 8.0 l_0_7_55) l_0_7_59)))
 (let ((?x9329 (* (* 8.0 l_0_7_54) l_0_7_58)))
 (let ((?x9326 (* (* 8.0 l_0_7_53) l_0_7_57)))
 (let ((?x9323 (* (* 8.0 l_0_7_52) l_0_7_56)))
 (let ((?x11454 (- (- (- (- (+ (+ (+ ?x9323 ?x9326) ?x9329) ?x9332) ?x9337) ?x9340) ?x9343) ?x9346)))
 (= ?x11454 0.0)))))))))))
(assert
 (let ((?x10102 (* (* 4.0 l_0_7_75) l_0_7_75)))
 (let ((?x10099 (* (* 4.0 l_0_7_74) l_0_7_74)))
 (let ((?x10096 (* (* 4.0 l_0_7_73) l_0_7_73)))
 (let ((?x10093 (* (* 4.0 l_0_7_72) l_0_7_72)))
 (let ((?x10090 (* (* 4.0 l_0_7_71) l_0_7_71)))
 (let ((?x10086 (* l_0_7_60 l_0_7_60)))
 (let ((?x10087 (* 4.0 ?x10086)))
 (let ((?x10083 (* l_0_7_59 l_0_7_59)))
 (let ((?x10084 (* 4.0 ?x10083)))
 (let ((?x10080 (* l_0_7_58 l_0_7_58)))
 (let ((?x10081 (* 4.0 ?x10080)))
 (let ((?x10077 (* l_0_7_57 l_0_7_57)))
 (let ((?x10078 (* 4.0 ?x10077)))
 (let ((?x10074 (* l_0_7_56 l_0_7_56)))
 (let ((?x10075 (* 4.0 ?x10074)))
 (let ((?x11472 (- (- (- (+ (+ (+ (+ ?x10075 ?x10078) ?x10081) ?x10084) ?x10087) ?x10090) ?x10093) ?x10096)))
 (= (- (- ?x11472 ?x10099) ?x10102) 0.0))))))))))))))))))
(assert
 (let ((?x9108 (* 8.0 l_0_7_61)))
 (let ((?x9211 (* ?x9108 l_0_7_64)))
 (let ((?x9105 (* l_0_7_46 l_0_7_46)))
 (let ((?x11476 (* 3.0 ?x9105)))
 (let ((?x11481 (- (+ (+ (* (* (- 8.0) l_0_7_46) l_0_7_49) ?x11476) ?x9211) (* (* 3.0 l_0_7_61) l_0_7_61))))
 (= ?x11481 0.0)))))))
(assert
 (let ((?x11492 (+ (* (* (- 4.0) l_0_7_46) l_0_7_46) (* 4.0 (* l_0_7_61 l_0_7_61)))))
 (= ?x11492 0.0)))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (let ((?x11560 (* l_0_8_93 l_0_8_93)))
 (let ((?x11558 (* l_0_8_92 l_0_8_92)))
 (let ((?x11532 (* l_0_8_108 l_0_8_108)))
 (let ((?x11536 (- (- (- (* (- 4.0) _a_3_) (* l_0_8_107 l_0_8_107)) ?x11532) (* (* 1.0 l_0_8_17) l_0_8_17))))
 (let ((?x11542 (+ (- ?x11536 (* (* 1.0 l_0_8_18) l_0_8_18)) (* 1.0 (* l_0_8_32 l_0_8_32)))))
 (let ((?x11548 (- (+ ?x11542 (* 1.0 (* l_0_8_33 l_0_8_33))) (* (* 1.0 l_0_8_47) l_0_8_47))))
 (let ((?x11554 (+ (- ?x11548 (* (* 1.0 l_0_8_48) l_0_8_48)) (* 1.0 (* l_0_8_62 l_0_8_62)))))
 (let ((?x11563 (+ (- (- (+ ?x11554 (* 1.0 (* l_0_8_63 l_0_8_63))) ?x11558) ?x11560) 13.0)))
 (= ?x11563 0.0))))))))))
(assert
 (let ((?x11664 (* l_0_8_96 l_0_8_96)))
 (let ((?x11662 (* l_0_8_95 l_0_8_95)))
 (let ((?x11660 (* l_0_8_94 l_0_8_94)))
 (let ((?x11592 (* l_0_8_111 l_0_8_111)))
 (let ((?x11593 (- (- (* (- l_0_8_109) l_0_8_109) (* l_0_8_110 l_0_8_110)) ?x11592)))
 (let ((?x11599 (- (- ?x11593 (* (* 12.0 l_0_8_17) l_0_8_17)) (* (* 12.0 l_0_8_18) l_0_8_18))))
 (let ((?x11605 (- (- ?x11599 (* (* 1.0 l_0_8_19) l_0_8_19)) (* (* 1.0 l_0_8_20) l_0_8_20))))
 (let ((?x11610 (+ (- ?x11605 (* (* 1.0 l_0_8_21) l_0_8_21)) (* 12.0 (* l_0_8_32 l_0_8_32)))))
 (let ((?x11615 (+ (+ ?x11610 (* 12.0 (* l_0_8_33 l_0_8_33))) (* 1.0 (* l_0_8_34 l_0_8_34)))))
 (let ((?x11621 (+ (+ ?x11615 (* 1.0 (* l_0_8_35 l_0_8_35))) (* 1.0 (* l_0_8_36 l_0_8_36)))))
 (let ((?x11626 (- (+ ?x11621 (* (* 6.0 l_0_8_47) l_0_8_49)) (* (* 6.0 l_0_8_47) l_0_8_47))))
 (let ((?x11631 (- (+ ?x11626 (* (* 6.0 l_0_8_48) l_0_8_50)) (* (* 6.0 l_0_8_48) l_0_8_48))))
 (let ((?x11637 (- (- ?x11631 (* (* 1.0 l_0_8_49) l_0_8_49)) (* (* 1.0 l_0_8_50) l_0_8_50))))
 (let ((?x11643 (- (- ?x11637 (* (* 1.0 l_0_8_51) l_0_8_51)) (* (* 6.0 l_0_8_62) l_0_8_64))))
 (let ((?x11648 (- (+ ?x11643 (* 6.0 (* l_0_8_62 l_0_8_62))) (* (* 6.0 l_0_8_63) l_0_8_65))))
 (let ((?x11653 (+ (+ ?x11648 (* 6.0 (* l_0_8_63 l_0_8_63))) (* 1.0 (* l_0_8_64 l_0_8_64)))))
 (let ((?x11659 (+ (+ ?x11653 (* 1.0 (* l_0_8_65 l_0_8_65))) (* 1.0 (* l_0_8_66 l_0_8_66)))))
 (= (+ (- (- (- ?x11659 ?x11660) ?x11662) ?x11664) 12.0) 0.0)))))))))))))))))))
(assert
 (let ((?x6666 (- (- (* (- 4.0) _a_4_) (* (* 2.0 l_0_8_107) l_0_8_109)) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x6712 (- (- ?x6666 (* (* 2.0 l_0_8_17) l_0_8_19)) (* (* 2.0 l_0_8_18) l_0_8_20))))
 (let ((?x6768 (+ (+ ?x6712 (* (* 2.0 l_0_8_32) l_0_8_34)) (* (* 2.0 l_0_8_33) l_0_8_35))))
 (let ((?x11702 (+ (- ?x6768 (* (* 2.0 l_0_8_47) l_0_8_49)) (* 3.0 (* l_0_8_47 l_0_8_47)))))
 (let ((?x11707 (+ (- ?x11702 (* (* 2.0 l_0_8_48) l_0_8_50)) (* 3.0 (* l_0_8_48 l_0_8_48)))))
 (let ((?x11713 (- (+ ?x11707 (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 3.0 l_0_8_62) l_0_8_62))))
 (let ((?x11719 (- (+ ?x11713 (* (* 2.0 l_0_8_63) l_0_8_65)) (* (* 3.0 l_0_8_63) l_0_8_63))))
 (let ((?x11725 (- (- ?x11719 (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= (+ ?x11725 24.0) 0.0))))))))))
(assert
 (let ((?x11802 (* l_0_8_78 l_0_8_78)))
 (let ((?x11800 (* l_0_8_77 l_0_8_77)))
 (let ((?x11769 (- (- (* (- 4.0) _a_5_) (* (* 2.0 l_0_8_101) l_0_8_92)) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x11773 (- (- ?x11769 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x11777 (+ (- ?x11773 (* (* 2.0 l_0_8_17) l_0_8_26)) (* 4.0 (* l_0_8_17 l_0_8_17)))))
 (let ((?x11781 (+ (- ?x11777 (* (* 2.0 l_0_8_18) l_0_8_27)) (* 4.0 (* l_0_8_18 l_0_8_18)))))
 (let ((?x11786 (- (+ ?x11781 (* (* 2.0 l_0_8_32) l_0_8_41)) (* (* 4.0 l_0_8_32) l_0_8_32))))
 (let ((?x11791 (- (+ ?x11786 (* (* 2.0 l_0_8_33) l_0_8_42)) (* (* 4.0 l_0_8_33) l_0_8_33))))
 (let ((?x11795 (- (- ?x11791 (* (* 2.0 l_0_8_47) l_0_8_56)) (* (* 2.0 l_0_8_48) l_0_8_57))))
 (let ((?x11799 (+ (+ ?x11795 (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (= (+ (+ ?x11799 ?x11800) ?x11802) 0.0))))))))))))
(assert
 (let ((?x11845 (* l_0_8_76 l_0_8_76)))
 (let ((?x11843 (* (* 4.0 l_0_8_61) l_0_8_61)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11840 (* ?x11839 l_0_8_67)))
 (let ((?x11836 (* l_0_8_46 l_0_8_46)))
 (let ((?x11837 (* 4.0 ?x11836)))
 (let ((?x11838 (+ (- (* (- l_0_8_1) l_0_8_1) (* (* 8.0 l_0_8_46) l_0_8_52)) ?x11837)))
 (= (- (- (+ ?x11838 ?x11840) ?x11843) ?x11845) 0.0)))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x11895 (* ?x11894 l_0_8_77)))
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x11892 (* ?x11891 l_0_8_68)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x11889 (* ?x11888 l_0_8_67)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11883 (* ?x11839 l_0_8_62)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x11881 (* ?x11880 l_0_8_53)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x11878 (* ?x11877 l_0_8_52)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11872 (* ?x7153 l_0_8_47)))
 (let ((?x11865 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_106) l_0_8_112))))
 (let ((?x11871 (+ (- ?x11865 (* (* 2.0 l_0_8_16) l_0_8_22)) (* (* 2.0 l_0_8_31) l_0_8_37))))
 (let ((?x11882 (- (- (- (+ ?x11871 ?x11872) (* (* 2.0 l_0_8_46) l_0_8_52)) ?x11878) ?x11881)))
 (let ((?x11893 (+ (+ (+ (- ?x11882 ?x11883) (* (* 2.0 l_0_8_61) l_0_8_67)) ?x11889) ?x11892)))
 (= (- (- ?x11893 ?x11895) (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0))))))))))))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x11962 (* ?x11894 l_0_8_79)))
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x11960 (* ?x11959 l_0_8_69)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x11957 (* ?x11956 l_0_8_68)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x11954 (* ?x11953 l_0_8_67)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11948 (* ?x11839 l_0_8_64)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x11946 (* ?x11945 l_0_8_54)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x11943 (* ?x11942 l_0_8_53)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x11940 (* ?x11939 l_0_8_52)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11934 (* ?x7153 l_0_8_49)))
 (let ((?x11938 (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x11934) (* (* 6.0 l_0_8_46) l_0_8_52))))
 (let ((?x11952 (- (- (- (- (- ?x11938 ?x11940) ?x11943) ?x11946) ?x11948) (* (* 6.0 l_0_8_61) l_0_8_67))))
 (= (- (+ (+ (+ ?x11952 ?x11954) ?x11957) ?x11960) ?x11962) 0.0))))))))))))))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x12013 (* ?x11894 l_0_8_82)))
 (let ((?x12010 (* l_0_8_70 l_0_8_70)))
 (let ((?x12011 (* 4.0 ?x12010)))
 (let ((?x12007 (* l_0_8_69 l_0_8_69)))
 (let ((?x12008 (* 4.0 ?x12007)))
 (let ((?x12004 (* l_0_8_68 l_0_8_68)))
 (let ((?x12005 (* 4.0 ?x12004)))
 (let ((?x12001 (* l_0_8_67 l_0_8_67)))
 (let ((?x12002 (* 4.0 ?x12001)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11840 (* ?x11839 l_0_8_67)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11834 (* ?x7153 l_0_8_52)))
 (let ((?x11990 (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x11834) (* (* 4.0 l_0_8_52) l_0_8_52))))
 (let ((?x11996 (- (- ?x11990 (* (* 4.0 l_0_8_53) l_0_8_53)) (* (* 4.0 l_0_8_54) l_0_8_54))))
 (let ((?x12006 (+ (+ (- (- ?x11996 (* (* 4.0 l_0_8_55) l_0_8_55)) ?x11840) ?x12002) ?x12005)))
 (= (- (+ (+ ?x12006 ?x12008) ?x12011) ?x12013) 0.0)))))))))))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x12070 (* ?x11894 l_0_8_86)))
 (let ((?x12013 (* ?x11894 l_0_8_82)))
 (let ((?x12067 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12064 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12061 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x12058 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x12055 (* ?x11839 l_0_8_71)))
 (let ((?x12053 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x12050 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x12047 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x12044 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x12041 (* ?x7153 l_0_8_56)))
 (let ((?x12037 (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 8.0 l_0_8_16) l_0_8_22))))
 (let ((?x12048 (- (- (+ (- ?x12037 (* (* 8.0 l_0_8_31) l_0_8_37)) ?x12041) ?x12044) ?x12047)))
 (let ((?x12068 (+ (+ (+ (+ (- (- (- ?x12048 ?x12050) ?x12053) ?x12055) ?x12058) ?x12061) ?x12064) ?x12067)))
 (= (- (+ ?x12068 ?x12013) ?x12070) 0.0))))))))))))))))))))
(assert
 (let ((?x11802 (* l_0_8_78 l_0_8_78)))
 (let ((?x11800 (* l_0_8_77 l_0_8_77)))
 (let ((?x12141 (* (* 4.0 l_0_8_63) l_0_8_63)))
 (let ((?x12136 (* (* 4.0 l_0_8_62) l_0_8_62)))
 (let ((?x11576 (* l_0_8_48 l_0_8_48)))
 (let ((?x12131 (* 4.0 ?x11576)))
 (let ((?x6667 (* l_0_8_47 l_0_8_47)))
 (let ((?x12127 (* 4.0 ?x6667)))
 (let ((?x12119 (* l_0_8_3 l_0_8_3)))
 (let ((?x12117 (* l_0_8_2 l_0_8_2)))
 (let ((?x12112 (- (* (* (- 2.0) l_0_8_107) l_0_8_112) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x12116 (- (- ?x12112 (* (* 2.0 l_0_8_17) l_0_8_22)) (* (* 2.0 l_0_8_18) l_0_8_23))))
 (let ((?x12124 (+ (+ (- (- ?x12116 ?x12117) ?x12119) (* (* 2.0 l_0_8_32) l_0_8_37)) (* (* 2.0 l_0_8_33) l_0_8_38))))
 (let ((?x12130 (- (+ (- ?x12124 (* (* 2.0 l_0_8_47) l_0_8_52)) ?x12127) (* (* 2.0 l_0_8_48) l_0_8_53))))
 (let ((?x12139 (+ (- (+ (+ ?x12130 ?x12131) (* (* 2.0 l_0_8_62) l_0_8_67)) ?x12136) (* (* 2.0 l_0_8_63) l_0_8_68))))
 (let ((?x12146 (- (- (- (- ?x12139 ?x12141) ?x11800) ?x11802) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x12146 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0))))))))))))))))))
(assert
 (let ((?x12263 (* 2.0 l_0_8_78)))
 (let ((?x12264 (* ?x12263 l_0_8_80)))
 (let ((?x12260 (* 2.0 l_0_8_77)))
 (let ((?x12261 (* ?x12260 l_0_8_79)))
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12247 (* ?x11891 l_0_8_65)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12243 (* ?x11888 l_0_8_64)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12230 (* ?x11880 l_0_8_50)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12226 (* ?x11877 l_0_8_49)))
 (let ((?x7597 (- (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x12204 (- (- ?x7597 (* (* 2.0 l_0_8_111) l_0_8_114)) (* (* 2.0 l_0_8_19) l_0_8_22))))
 (let ((?x12210 (- (- ?x12204 (* (* 2.0 l_0_8_2) l_0_8_4)) (* (* 2.0 l_0_8_20) l_0_8_23))))
 (let ((?x12216 (- (- ?x12210 (* (* 2.0 l_0_8_21) l_0_8_24)) (* (* 2.0 l_0_8_3) l_0_8_5))))
 (let ((?x12222 (+ (+ ?x12216 (* (* 2.0 l_0_8_34) l_0_8_37)) (* (* 2.0 l_0_8_35) l_0_8_38))))
 (let ((?x12229 (+ (+ (+ ?x12222 (* (* 2.0 l_0_8_36) l_0_8_39)) ?x12226) (* (* 6.0 l_0_8_47) l_0_8_52))))
 (let ((?x12236 (- (+ (+ ?x12229 ?x12230) (* (* 6.0 l_0_8_48) l_0_8_53)) (* (* 2.0 l_0_8_49) l_0_8_52))))
 (let ((?x12242 (- (- ?x12236 (* (* 2.0 l_0_8_50) l_0_8_53)) (* (* 2.0 l_0_8_51) l_0_8_54))))
 (let ((?x12250 (- (- (- (- ?x12242 ?x12243) (* (* 6.0 l_0_8_62) l_0_8_67)) ?x12247) (* (* 6.0 l_0_8_63) l_0_8_68))))
 (let ((?x12256 (+ (+ ?x12250 (* (* 2.0 l_0_8_64) l_0_8_67)) (* (* 2.0 l_0_8_65) l_0_8_68))))
 (let ((?x12268 (- (- (- (+ ?x12256 (* (* 2.0 l_0_8_66) l_0_8_69)) ?x12261) ?x12264) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x12274 (- (- ?x12268 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x12274 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12389 (* l_0_8_99 l_0_8_99)))
 (let ((?x12387 (* l_0_8_98 l_0_8_98)))
 (let ((?x12385 (* l_0_8_97 l_0_8_97)))
 (let ((?x12263 (* 2.0 l_0_8_78)))
 (let ((?x12383 (* ?x12263 l_0_8_83)))
 (let ((?x12260 (* 2.0 l_0_8_77)))
 (let ((?x12381 (* ?x12260 l_0_8_82)))
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x11892 (* ?x11891 l_0_8_68)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x11889 (* ?x11888 l_0_8_67)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x11881 (* ?x11880 l_0_8_53)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x11878 (* ?x11877 l_0_8_52)))
 (let ((?x12327 (* l_0_8_115 l_0_8_115)))
 (let ((?x12325 (* l_0_8_114 l_0_8_114)))
 (let ((?x12323 (* l_0_8_113 l_0_8_113)))
 (let ((?x12324 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x12323)))
 (let ((?x12333 (- (- (- (- ?x12324 ?x12325) ?x12327) (* (* 2.0 l_0_8_2) l_0_8_7)) (* (* 1.0 l_0_8_22) l_0_8_22))))
 (let ((?x12339 (- (- ?x12333 (* (* 1.0 l_0_8_23) l_0_8_23)) (* (* 1.0 l_0_8_24) l_0_8_24))))
 (let ((?x12344 (- (- ?x12339 (* (* 1.0 l_0_8_25) l_0_8_25)) (* (* 2.0 l_0_8_3) l_0_8_8))))
 (let ((?x12350 (+ (+ ?x12344 (* 1.0 (* l_0_8_37 l_0_8_37))) (* 1.0 (* l_0_8_38 l_0_8_38)))))
 (let ((?x12356 (+ (+ ?x12350 (* 1.0 (* l_0_8_39 l_0_8_39))) (* 1.0 (* l_0_8_40 l_0_8_40)))))
 (let ((?x12364 (- (- (+ (+ ?x12356 ?x11878) ?x11881) (* (* 1.0 l_0_8_52) l_0_8_52)) (* (* 1.0 l_0_8_53) l_0_8_53))))
 (let ((?x12370 (- (- ?x12364 (* (* 1.0 l_0_8_54) l_0_8_54)) (* (* 1.0 l_0_8_55) l_0_8_55))))
 (let ((?x12376 (+ (+ (- (- ?x12370 ?x11889) ?x11892) (* 1.0 (* l_0_8_67 l_0_8_67))) (* 1.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x12380 (+ (+ ?x12376 (* 1.0 (* l_0_8_69 l_0_8_69))) (* 1.0 (* l_0_8_70 l_0_8_70)))))
 (= (- (- (- (- (- ?x12380 ?x12381) ?x12383) ?x12385) ?x12387) ?x12389) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x12263 (* 2.0 l_0_8_78)))
 (let ((?x12510 (* ?x12263 l_0_8_87)))
 (let ((?x12383 (* ?x12263 l_0_8_83)))
 (let ((?x12260 (* 2.0 l_0_8_77)))
 (let ((?x12507 (* ?x12260 l_0_8_86)))
 (let ((?x12381 (* ?x12260 l_0_8_82)))
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12492 (* ?x11891 l_0_8_72)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12490 (* ?x11888 l_0_8_71)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12476 (* ?x11880 l_0_8_57)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12474 (* ?x11877 l_0_8_56)))
 (let ((?x12414 (- (* (* (- 2.0) l_0_8_100) l_0_8_104) (* (* 2.0 l_0_8_101) l_0_8_97))))
 (let ((?x12419 (- (- ?x12414 (* (* 2.0 l_0_8_102) l_0_8_98)) (* (* 2.0 l_0_8_103) l_0_8_99))))
 (let ((?x12425 (- (- ?x12419 (* (* 2.0 l_0_8_11) l_0_8_2)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x12431 (- (- ?x12425 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x12437 (- (- ?x12431 (* (* 2.0 l_0_8_115) l_0_8_119)) (* (* 2.0 l_0_8_12) l_0_8_3))))
 (let ((?x12443 (+ (+ ?x12437 (* (* 8.0 l_0_8_17) l_0_8_22)) (* (* 8.0 l_0_8_18) l_0_8_23))))
 (let ((?x12449 (- (- ?x12443 (* (* 2.0 l_0_8_22) l_0_8_26)) (* (* 2.0 l_0_8_23) l_0_8_27))))
 (let ((?x12455 (- (- ?x12449 (* (* 2.0 l_0_8_24) l_0_8_28)) (* (* 2.0 l_0_8_25) l_0_8_29))))
 (let ((?x12461 (- (- ?x12455 (* (* 8.0 l_0_8_32) l_0_8_37)) (* (* 8.0 l_0_8_33) l_0_8_38))))
 (let ((?x12467 (+ (+ ?x12461 (* (* 2.0 l_0_8_37) l_0_8_41)) (* (* 2.0 l_0_8_38) l_0_8_42))))
 (let ((?x12473 (+ (+ ?x12467 (* (* 2.0 l_0_8_39) l_0_8_43)) (* (* 2.0 l_0_8_40) l_0_8_44))))
 (let ((?x12483 (- (- (+ (+ ?x12473 ?x12474) ?x12476) (* (* 2.0 l_0_8_52) l_0_8_56)) (* (* 2.0 l_0_8_53) l_0_8_57))))
 (let ((?x12489 (- (- ?x12483 (* (* 2.0 l_0_8_54) l_0_8_58)) (* (* 2.0 l_0_8_55) l_0_8_59))))
 (let ((?x12499 (+ (+ (- (- ?x12489 ?x12490) ?x12492) (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x12505 (+ (+ ?x12499 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (= (- (+ (- (+ ?x12505 ?x12381) ?x12507) ?x12383) ?x12510) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x12636 (* l_0_8_81 l_0_8_81)))
 (let ((?x12634 (* l_0_8_80 l_0_8_80)))
 (let ((?x12632 (* l_0_8_79 l_0_8_79)))
 (let ((?x12630 (* (* 4.0 l_0_8_66) l_0_8_66)))
 (let ((?x12624 (* (* 4.0 l_0_8_65) l_0_8_65)))
 (let ((?x12618 (* (* 4.0 l_0_8_64) l_0_8_64)))
 (let ((?x12606 (* l_0_8_6 l_0_8_6)))
 (let ((?x6749 (* l_0_8_51 l_0_8_51)))
 (let ((?x12604 (* 4.0 ?x6749)))
 (let ((?x6747 (* l_0_8_50 l_0_8_50)))
 (let ((?x12599 (* 4.0 ?x6747)))
 (let ((?x12594 (* l_0_8_5 l_0_8_5)))
 (let ((?x6740 (* l_0_8_49 l_0_8_49)))
 (let ((?x12592 (* 4.0 ?x6740)))
 (let ((?x12581 (* l_0_8_4 l_0_8_4)))
 (let ((?x1198 (- (* (* (- 24.0) l_0_8_17) l_0_8_22) (* (* 24.0 l_0_8_18) l_0_8_23))))
 (let ((?x12580 (+ (+ ?x1198 (* (* 24.0 l_0_8_32) l_0_8_37)) (* (* 24.0 l_0_8_33) l_0_8_38))))
 (let ((?x12588 (- (- (- ?x12580 ?x12581) (* (* 12.0 l_0_8_47) l_0_8_52)) (* (* 12.0 l_0_8_48) l_0_8_53))))
 (let ((?x12598 (+ (- (+ (+ ?x12588 (* (* 6.0 l_0_8_49) l_0_8_52)) ?x12592) ?x12594) (* (* 6.0 l_0_8_50) l_0_8_53))))
 (let ((?x12607 (- (+ (+ (+ ?x12598 ?x12599) (* (* 6.0 l_0_8_51) l_0_8_54)) ?x12604) ?x12606)))
 (let ((?x12613 (+ (+ ?x12607 (* (* 12.0 l_0_8_62) l_0_8_67)) (* (* 12.0 l_0_8_63) l_0_8_68))))
 (let ((?x12622 (- (- (- ?x12613 (* (* 6.0 l_0_8_64) l_0_8_67)) ?x12618) (* (* 6.0 l_0_8_65) l_0_8_68))))
 (let ((?x12633 (- (- (- (- ?x12622 ?x12624) (* (* 6.0 l_0_8_66) l_0_8_69)) ?x12630) ?x12632)))
 (= (- (- ?x12633 ?x12634) ?x12636) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x12691 (* 2.0 l_0_8_81)))
 (let ((?x12692 (* ?x12691 l_0_8_84)))
 (let ((?x12688 (* 2.0 l_0_8_80)))
 (let ((?x12689 (* ?x12688 l_0_8_83)))
 (let ((?x12685 (* 2.0 l_0_8_79)))
 (let ((?x12686 (* ?x12685 l_0_8_82)))
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x11960 (* ?x11959 l_0_8_69)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x11957 (* ?x11956 l_0_8_68)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x11954 (* ?x11953 l_0_8_67)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x11946 (* ?x11945 l_0_8_54)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x11943 (* ?x11942 l_0_8_53)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x11940 (* ?x11939 l_0_8_52)))
 (let ((?x12656 (- (+ (* (* (- 2.0) l_0_8_4) l_0_8_7) ?x11940) (* (* 2.0 l_0_8_5) l_0_8_8))))
 (let ((?x12662 (+ (+ (+ (+ ?x12656 ?x11943) ?x11946) (* 3.0 (* l_0_8_52 l_0_8_52))) (* 3.0 (* l_0_8_53 l_0_8_53)))))
 (let ((?x12666 (+ (+ ?x12662 (* 3.0 (* l_0_8_54 l_0_8_54))) (* 3.0 (* l_0_8_55 l_0_8_55)))))
 (let ((?x12672 (- (- (- (- ?x12666 (* (* 2.0 l_0_8_6) l_0_8_9)) ?x11954) ?x11957) ?x11960)))
 (let ((?x12678 (- (- ?x12672 (* (* 3.0 l_0_8_67) l_0_8_67)) (* (* 3.0 l_0_8_68) l_0_8_68))))
 (let ((?x12684 (- (- ?x12678 (* (* 3.0 l_0_8_69) l_0_8_69)) (* (* 3.0 l_0_8_70) l_0_8_70))))
 (= (- (- (- ?x12684 ?x12686) ?x12689) ?x12692) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12691 (* 2.0 l_0_8_81)))
 (let ((?x12775 (* ?x12691 l_0_8_88)))
 (let ((?x12692 (* ?x12691 l_0_8_84)))
 (let ((?x12688 (* 2.0 l_0_8_80)))
 (let ((?x12772 (* ?x12688 l_0_8_87)))
 (let ((?x12689 (* ?x12688 l_0_8_83)))
 (let ((?x12685 (* 2.0 l_0_8_79)))
 (let ((?x12769 (* ?x12685 l_0_8_86)))
 (let ((?x12686 (* ?x12685 l_0_8_82)))
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x12754 (* ?x11959 l_0_8_73)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x12752 (* ?x11956 l_0_8_72)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x12750 (* ?x11953 l_0_8_71)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x12736 (* ?x11945 l_0_8_58)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x12734 (* ?x11942 l_0_8_57)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x12732 (* ?x11939 l_0_8_56)))
 (let ((?x1515 (- (* (* (- 2.0) l_0_8_11) l_0_8_4) (* (* 2.0 l_0_8_12) l_0_8_5))))
 (let ((?x12716 (+ (- ?x1515 (* (* 2.0 l_0_8_13) l_0_8_6)) (* (* 8.0 l_0_8_19) l_0_8_22))))
 (let ((?x12722 (+ (+ ?x12716 (* (* 8.0 l_0_8_20) l_0_8_23)) (* (* 8.0 l_0_8_21) l_0_8_24))))
 (let ((?x12728 (- (- ?x12722 (* (* 8.0 l_0_8_34) l_0_8_37)) (* (* 8.0 l_0_8_35) l_0_8_38))))
 (let ((?x12737 (+ (+ (+ (- ?x12728 (* (* 8.0 l_0_8_36) l_0_8_39)) ?x12732) ?x12734) ?x12736)))
 (let ((?x12743 (+ (+ ?x12737 (* (* 6.0 l_0_8_52) l_0_8_56)) (* (* 6.0 l_0_8_53) l_0_8_57))))
 (let ((?x12749 (+ (+ ?x12743 (* (* 6.0 l_0_8_54) l_0_8_58)) (* (* 6.0 l_0_8_55) l_0_8_59))))
 (let ((?x12758 (- (- (- (- ?x12749 ?x12750) ?x12752) ?x12754) (* (* 6.0 l_0_8_67) l_0_8_71))))
 (let ((?x12764 (- (- ?x12758 (* (* 6.0 l_0_8_68) l_0_8_72)) (* (* 6.0 l_0_8_69) l_0_8_73))))
 (let ((?x12771 (+ (- (+ (- ?x12764 (* (* 6.0 l_0_8_70) l_0_8_74)) ?x12686) ?x12769) ?x12689)))
 (= (- (+ (- ?x12771 ?x12772) ?x12692) ?x12775) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x12838 (* l_0_8_9 l_0_8_9)))
 (let ((?x12836 (* l_0_8_85 l_0_8_85)))
 (let ((?x12834 (* l_0_8_84 l_0_8_84)))
 (let ((?x12832 (* l_0_8_83 l_0_8_83)))
 (let ((?x12830 (* l_0_8_82 l_0_8_82)))
 (let ((?x12828 (* l_0_8_8 l_0_8_8)))
 (let ((?x12826 (* (* 4.0 l_0_8_70) l_0_8_70)))
 (let ((?x12823 (* l_0_8_7 l_0_8_7)))
 (let ((?x12821 (* (* 4.0 l_0_8_69) l_0_8_69)))
 (let ((?x12818 (* (* 4.0 l_0_8_68) l_0_8_68)))
 (let ((?x12815 (* (* 4.0 l_0_8_67) l_0_8_67)))
 (let ((?x7388 (* l_0_8_55 l_0_8_55)))
 (let ((?x7386 (* 4.0 ?x7388)))
 (let ((?x7376 (* l_0_8_54 l_0_8_54)))
 (let ((?x7377 (* 4.0 ?x7376)))
 (let ((?x7369 (* l_0_8_53 l_0_8_53)))
 (let ((?x7371 (* 4.0 ?x7369)))
 (let ((?x12811 (+ (+ (* (- l_0_8_10) l_0_8_10) (* 4.0 (* l_0_8_52 l_0_8_52))) ?x7371)))
 (let ((?x12827 (- (- (- (- (- (+ (+ ?x12811 ?x7377) ?x7386) ?x12815) ?x12818) ?x12821) ?x12823) ?x12826)))
 (= (- (- (- (- (- (- ?x12827 ?x12828) ?x12830) ?x12832) ?x12834) ?x12836) ?x12838) 0.0)))))))))))))))))))))
(assert
 (let ((?x12836 (* l_0_8_85 l_0_8_85)))
 (let ((?x12887 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x12834 (* l_0_8_84 l_0_8_84)))
 (let ((?x12883 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x12832 (* l_0_8_83 l_0_8_83)))
 (let ((?x12879 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x12830 (* l_0_8_82 l_0_8_82)))
 (let ((?x12875 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x12067 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12064 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12061 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x12058 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x12053 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x12050 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x12047 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x12044 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x8561 (- (* (* (- 2.0) l_0_8_10) l_0_8_14) (* (* 2.0 l_0_8_11) l_0_8_7))))
 (let ((?x1799 (- (- ?x8561 (* (* 2.0 l_0_8_12) l_0_8_8)) (* (* 2.0 l_0_8_13) l_0_8_9))))
 (let ((?x1865 (+ (+ ?x1799 (* 4.0 (* l_0_8_22 l_0_8_22))) (* 4.0 (* l_0_8_23 l_0_8_23)))))
 (let ((?x12853 (+ (+ ?x1865 (* 4.0 (* l_0_8_24 l_0_8_24))) (* 4.0 (* l_0_8_25 l_0_8_25)))))
 (let ((?x12859 (- (- ?x12853 (* (* 4.0 l_0_8_37) l_0_8_37)) (* (* 4.0 l_0_8_38) l_0_8_38))))
 (let ((?x12865 (- (- ?x12859 (* (* 4.0 l_0_8_39) l_0_8_39)) (* (* 4.0 l_0_8_40) l_0_8_40))))
 (let ((?x12872 (- (- (- (+ (+ (+ (+ ?x12865 ?x12044) ?x12047) ?x12050) ?x12053) ?x12058) ?x12061) ?x12064)))
 (let ((?x12885 (+ (- (+ (- (+ (- (- ?x12872 ?x12067) ?x12875) ?x12830) ?x12879) ?x12832) ?x12883) ?x12834)))
 (= (+ (- ?x12885 ?x12887) ?x12836) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12968 (* l_0_8_90 l_0_8_90)))
 (let ((?x12966 (* l_0_8_89 l_0_8_89)))
 (let ((?x12964 (* l_0_8_88 l_0_8_88)))
 (let ((?x12962 (* l_0_8_87 l_0_8_87)))
 (let ((?x12960 (* l_0_8_86 l_0_8_86)))
 (let ((?x12887 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x12883 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x12879 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x12875 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x12954 (* (* 4.0 l_0_8_75) l_0_8_75)))
 (let ((?x12951 (* (* 4.0 l_0_8_74) l_0_8_74)))
 (let ((?x12948 (* (* 4.0 l_0_8_73) l_0_8_73)))
 (let ((?x12945 (* (* 4.0 l_0_8_72) l_0_8_72)))
 (let ((?x12942 (* (* 4.0 l_0_8_71) l_0_8_71)))
 (let ((?x12938 (* l_0_8_60 l_0_8_60)))
 (let ((?x12939 (* 4.0 ?x12938)))
 (let ((?x12935 (* l_0_8_59 l_0_8_59)))
 (let ((?x12936 (* 4.0 ?x12935)))
 (let ((?x12932 (* l_0_8_58 l_0_8_58)))
 (let ((?x12933 (* 4.0 ?x12932)))
 (let ((?x12929 (* l_0_8_57 l_0_8_57)))
 (let ((?x12930 (* 4.0 ?x12929)))
 (let ((?x12926 (* l_0_8_56 l_0_8_56)))
 (let ((?x12927 (* 4.0 ?x12926)))
 (let ((?x8641 (* l_0_8_15 l_0_8_15)))
 (let ((?x1946 (* l_0_8_14 l_0_8_14)))
 (let ((?x1976 (* l_0_8_13 l_0_8_13)))
 (let ((?x1956 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x1976) ?x1946)))
 (let ((?x12907 (+ (+ (- ?x1956 ?x8641) (* (* 8.0 l_0_8_22) l_0_8_26)) (* (* 8.0 l_0_8_23) l_0_8_27))))
 (let ((?x12913 (+ (+ ?x12907 (* (* 8.0 l_0_8_24) l_0_8_28)) (* (* 8.0 l_0_8_25) l_0_8_29))))
 (let ((?x12919 (- (- ?x12913 (* (* 8.0 l_0_8_37) l_0_8_41)) (* (* 8.0 l_0_8_38) l_0_8_42))))
 (let ((?x12925 (- (- ?x12919 (* (* 8.0 l_0_8_39) l_0_8_43)) (* (* 8.0 l_0_8_40) l_0_8_44))))
 (let ((?x12946 (- (- (+ (+ (+ (+ (+ ?x12925 ?x12927) ?x12930) ?x12933) ?x12936) ?x12939) ?x12942) ?x12945)))
 (let ((?x12959 (+ (+ (+ (+ (- (- (- ?x12946 ?x12948) ?x12951) ?x12954) ?x12875) ?x12879) ?x12883) ?x12887)))
 (= (- (- (- (- (- ?x12959 ?x12960) ?x12962) ?x12964) ?x12966) ?x12968) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13026 (* l_0_8_91 l_0_8_91)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11883 (* ?x11839 l_0_8_62)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11872 (* ?x7153 l_0_8_47)))
 (let ((?x13015 (- (* (- l_0_8_106) l_0_8_106) (* (* 1.0 l_0_8_16) l_0_8_16))))
 (let ((?x13022 (- (- (+ ?x13015 (* 1.0 (* l_0_8_31 l_0_8_31))) ?x11872) (* (* 1.0 l_0_8_46) l_0_8_46))))
 (= (- (+ (+ ?x13022 ?x11883) (* 1.0 (* l_0_8_61 l_0_8_61))) ?x13026) 0.0)))))))))
(assert
 (let ((?x2240 (- (* (* (- 2.0) l_0_8_106) l_0_8_107) (* (* 2.0 l_0_8_16) l_0_8_17))))
 (let ((?x2401 (- (+ ?x2240 (* (* 2.0 l_0_8_31) l_0_8_32)) (* (* 2.0 l_0_8_46) l_0_8_47))))
 (let ((?x13038 (- (- ?x2401 (* (* 4.0 l_0_8_47) l_0_8_47)) (* (* 4.0 l_0_8_48) l_0_8_48))))
 (let ((?x13041 (+ (+ ?x13038 (* (* 2.0 l_0_8_61) l_0_8_62)) (* 4.0 (* l_0_8_62 l_0_8_62)))))
 (let ((?x13044 (- (+ ?x13041 (* 4.0 (* l_0_8_63 l_0_8_63))) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= ?x13044 0.0)))))))
(assert
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12247 (* ?x11891 l_0_8_65)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12243 (* ?x11888 l_0_8_64)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12230 (* ?x11880 l_0_8_50)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12226 (* ?x11877 l_0_8_49)))
 (let ((?x13065 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 2.0 l_0_8_16) l_0_8_19))))
 (let ((?x13069 (+ (+ ?x13065 (* (* 2.0 l_0_8_31) l_0_8_34)) (* (* 6.0 l_0_8_46) l_0_8_47))))
 (let ((?x13075 (- (- (- (- ?x13069 (* (* 2.0 l_0_8_46) l_0_8_49)) ?x12226) ?x12230) (* (* 6.0 l_0_8_61) l_0_8_62))))
 (let ((?x13081 (- (+ (+ (+ ?x13075 (* (* 2.0 l_0_8_61) l_0_8_64)) ?x12243) ?x12247) (* (* 2.0 l_0_8_91) l_0_8_94))))
 (= ?x13081 0.0))))))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x11895 (* ?x11894 l_0_8_77)))
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12492 (* ?x11891 l_0_8_72)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12490 (* ?x11888 l_0_8_71)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12476 (* ?x11880 l_0_8_57)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12474 (* ?x11877 l_0_8_56)))
 (let ((?x13118 (- (* (* (- 2.0) l_0_8_101) l_0_8_91) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x13122 (- (+ ?x13118 (* (* 8.0 l_0_8_16) l_0_8_17)) (* (* 2.0 l_0_8_16) l_0_8_26))))
 (let ((?x13126 (+ (- ?x13122 (* (* 8.0 l_0_8_31) l_0_8_32)) (* (* 2.0 l_0_8_31) l_0_8_41))))
 (let ((?x13132 (+ (- (- (- ?x13126 (* (* 2.0 l_0_8_46) l_0_8_56)) ?x12474) ?x12476) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= (+ (+ (+ ?x13132 ?x12490) ?x12492) ?x11895) 0.0))))))))))))))))
(assert
 (let ((?x12263 (* 2.0 l_0_8_78)))
 (let ((?x12264 (* ?x12263 l_0_8_80)))
 (let ((?x12260 (* 2.0 l_0_8_77)))
 (let ((?x12261 (* ?x12260 l_0_8_79)))
 (let ((?x8864 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x13162 (- (- ?x8864 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x13166 (- (- ?x13162 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x13170 (+ (+ ?x13166 (* (* 8.0 l_0_8_17) l_0_8_19)) (* (* 8.0 l_0_8_18) l_0_8_20))))
 (let ((?x13174 (- (- ?x13170 (* (* 2.0 l_0_8_19) l_0_8_26)) (* (* 2.0 l_0_8_20) l_0_8_27))))
 (let ((?x13178 (- (- ?x13174 (* (* 2.0 l_0_8_21) l_0_8_28)) (* (* 8.0 l_0_8_32) l_0_8_34))))
 (let ((?x13182 (+ (- ?x13178 (* (* 8.0 l_0_8_33) l_0_8_35)) (* (* 2.0 l_0_8_34) l_0_8_41))))
 (let ((?x13186 (+ (+ ?x13182 (* (* 2.0 l_0_8_35) l_0_8_42)) (* (* 2.0 l_0_8_36) l_0_8_43))))
 (let ((?x13190 (+ (+ ?x13186 (* (* 6.0 l_0_8_47) l_0_8_56)) (* (* 6.0 l_0_8_48) l_0_8_57))))
 (let ((?x13194 (- (- ?x13190 (* (* 2.0 l_0_8_49) l_0_8_56)) (* (* 2.0 l_0_8_50) l_0_8_57))))
 (let ((?x13198 (- (- ?x13194 (* (* 2.0 l_0_8_51) l_0_8_58)) (* (* 6.0 l_0_8_62) l_0_8_71))))
 (let ((?x13202 (+ (- ?x13198 (* (* 6.0 l_0_8_63) l_0_8_72)) (* (* 2.0 l_0_8_64) l_0_8_71))))
 (let ((?x13206 (+ (+ ?x13202 (* (* 2.0 l_0_8_65) l_0_8_72)) (* (* 2.0 l_0_8_66) l_0_8_73))))
 (= (+ (+ ?x13206 ?x12261) ?x12264) 0.0)))))))))))))))))))
(assert
 (let ((?x12263 (* 2.0 l_0_8_78)))
 (let ((?x12510 (* ?x12263 l_0_8_87)))
 (let ((?x12260 (* 2.0 l_0_8_77)))
 (let ((?x12507 (* ?x12260 l_0_8_86)))
 (let ((?x13271 (* l_0_8_120 l_0_8_120)))
 (let ((?x13269 (* l_0_8_119 l_0_8_119)))
 (let ((?x13267 (* l_0_8_118 l_0_8_118)))
 (let ((?x13265 (* l_0_8_117 l_0_8_117)))
 (let ((?x13263 (* l_0_8_116 l_0_8_116)))
 (let ((?x13261 (* l_0_8_105 l_0_8_105)))
 (let ((?x13259 (* l_0_8_104 l_0_8_104)))
 (let ((?x13257 (* l_0_8_103 l_0_8_103)))
 (let ((?x13258 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x13257)))
 (let ((?x13272 (- (- (- (- (- (- (- ?x13258 ?x13259) ?x13261) ?x13263) ?x13265) ?x13267) ?x13269) ?x13271)))
 (let ((?x13276 (+ (+ ?x13272 (* (* 8.0 l_0_8_17) l_0_8_26)) (* (* 8.0 l_0_8_18) l_0_8_27))))
 (let ((?x13282 (- (- ?x13276 (* (* 1.0 l_0_8_26) l_0_8_26)) (* (* 1.0 l_0_8_27) l_0_8_27))))
 (let ((?x13288 (- (- ?x13282 (* (* 1.0 l_0_8_28) l_0_8_28)) (* (* 1.0 l_0_8_29) l_0_8_29))))
 (let ((?x13293 (- (- ?x13288 (* (* 1.0 l_0_8_30) l_0_8_30)) (* (* 8.0 l_0_8_32) l_0_8_41))))
 (let ((?x13298 (+ (- ?x13293 (* (* 8.0 l_0_8_33) l_0_8_42)) (* 1.0 (* l_0_8_41 l_0_8_41)))))
 (let ((?x13304 (+ (+ ?x13298 (* 1.0 (* l_0_8_42 l_0_8_42))) (* 1.0 (* l_0_8_43 l_0_8_43)))))
 (let ((?x13310 (+ (+ ?x13304 (* 1.0 (* l_0_8_44 l_0_8_44))) (* 1.0 (* l_0_8_45 l_0_8_45)))))
 (let ((?x13316 (- (- ?x13310 (* (* 1.0 l_0_8_56) l_0_8_56)) (* (* 1.0 l_0_8_57) l_0_8_57))))
 (let ((?x13322 (- (- ?x13316 (* (* 1.0 l_0_8_58) l_0_8_58)) (* (* 1.0 l_0_8_59) l_0_8_59))))
 (let ((?x13327 (+ (- ?x13322 (* (* 1.0 l_0_8_60) l_0_8_60)) (* 1.0 (* l_0_8_71 l_0_8_71)))))
 (let ((?x13331 (+ (+ ?x13327 (* 1.0 (* l_0_8_72 l_0_8_72))) (* 1.0 (* l_0_8_73 l_0_8_73)))))
 (let ((?x13335 (+ (+ ?x13331 (* 1.0 (* l_0_8_74 l_0_8_74))) (* 1.0 (* l_0_8_75 l_0_8_75)))))
 (= (+ (+ ?x13335 ?x12507) ?x12510) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x2862 (+ (* (* (- 12.0) l_0_8_16) l_0_8_16) (* 12.0 (* l_0_8_31 l_0_8_31)))))
 (let ((?x13366 (+ (- ?x2862 (* (* 6.0 l_0_8_46) l_0_8_46)) (* 6.0 (* l_0_8_61 l_0_8_61)))))
 (= ?x13366 0.0))))
(assert
 (let ((?x13384 (+ (* (* (- 24.0) l_0_8_16) l_0_8_17) (* (* 24.0 l_0_8_31) l_0_8_32))))
 (let ((?x13389 (+ (- ?x13384 (* (* 12.0 l_0_8_46) l_0_8_47)) (* (* 6.0 l_0_8_46) l_0_8_49))))
 (let ((?x13395 (- (- ?x13389 (* (* 4.0 l_0_8_49) l_0_8_49)) (* (* 4.0 l_0_8_50) l_0_8_50))))
 (let ((?x13401 (+ (- ?x13395 (* (* 4.0 l_0_8_51) l_0_8_51)) (* (* 12.0 l_0_8_61) l_0_8_62))))
 (let ((?x13404 (+ (- ?x13401 (* (* 6.0 l_0_8_61) l_0_8_64)) (* 4.0 (* l_0_8_64 l_0_8_64)))))
 (let ((?x13406 (+ (+ ?x13404 (* 4.0 (* l_0_8_65 l_0_8_65))) (* 4.0 (* l_0_8_66 l_0_8_66)))))
 (= ?x13406 0.0))))))))
(assert
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11883 (* ?x11839 l_0_8_62)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11872 (* ?x7153 l_0_8_47)))
 (let ((?x13439 (+ (* (* (- 24.0) l_0_8_16) l_0_8_19) (* (* 24.0 l_0_8_31) l_0_8_34))))
 (let ((?x13445 (+ (- (- (+ ?x13439 ?x11872) (* (* 12.0 l_0_8_46) l_0_8_49)) ?x11883) (* (* 12.0 l_0_8_61) l_0_8_64))))
 (= ?x13445 0.0))))))))
(assert
 (let ((?x13457 (+ (* (* (- 24.0) l_0_8_16) l_0_8_22) (* (* 24.0 l_0_8_31) l_0_8_37))))
 (let ((?x13461 (+ (- ?x13457 (* (* 12.0 l_0_8_46) l_0_8_52)) (* (* 12.0 l_0_8_61) l_0_8_67))))
 (= ?x13461 0.0))))
(assert
 (let ((?x13478 (+ (* (* (- 24.0) l_0_8_16) l_0_8_26) (* (* 24.0 l_0_8_31) l_0_8_41))))
 (let ((?x13482 (+ (- ?x13478 (* (* 12.0 l_0_8_46) l_0_8_56)) (* (* 12.0 l_0_8_61) l_0_8_71))))
 (= ?x13482 0.0))))
(assert
 (let ((?x12141 (* (* 4.0 l_0_8_63) l_0_8_63)))
 (let ((?x12136 (* (* 4.0 l_0_8_62) l_0_8_62)))
 (let ((?x6749 (* l_0_8_51 l_0_8_51)))
 (let ((?x13512 (* 3.0 ?x6749)))
 (let ((?x6747 (* l_0_8_50 l_0_8_50)))
 (let ((?x13510 (* 3.0 ?x6747)))
 (let ((?x6740 (* l_0_8_49 l_0_8_49)))
 (let ((?x13508 (* 3.0 ?x6740)))
 (let ((?x11576 (* l_0_8_48 l_0_8_48)))
 (let ((?x12131 (* 4.0 ?x11576)))
 (let ((?x6667 (* l_0_8_47 l_0_8_47)))
 (let ((?x12127 (* 4.0 ?x6667)))
 (let ((?x13497 (- (* (* (- 24.0) l_0_8_17) l_0_8_19) (* (* 24.0 l_0_8_18) l_0_8_20))))
 (let ((?x13501 (+ (+ ?x13497 (* (* 24.0 l_0_8_32) l_0_8_34)) (* (* 24.0 l_0_8_33) l_0_8_35))))
 (let ((?x13506 (- (+ (- ?x13501 (* (* 12.0 l_0_8_47) l_0_8_49)) ?x12127) (* (* 12.0 l_0_8_48) l_0_8_50))))
 (let ((?x13515 (+ (+ (+ (+ (+ ?x13506 ?x12131) ?x13508) ?x13510) ?x13512) (* (* 12.0 l_0_8_62) l_0_8_64))))
 (let ((?x13522 (- (- (+ (- ?x13515 ?x12136) (* (* 12.0 l_0_8_63) l_0_8_65)) ?x12141) (* (* 3.0 l_0_8_64) l_0_8_64))))
 (let ((?x13528 (- (- ?x13522 (* (* 3.0 l_0_8_65) l_0_8_65)) (* (* 3.0 l_0_8_66) l_0_8_66))))
 (= ?x13528 0.0))))))))))))))))))))
(assert
 (let ((?x12636 (* l_0_8_81 l_0_8_81)))
 (let ((?x12634 (* l_0_8_80 l_0_8_80)))
 (let ((?x12632 (* l_0_8_79 l_0_8_79)))
 (let ((?x6723 (* l_0_8_21 l_0_8_21)))
 (let ((?x9168 (* 4.0 ?x6723)))
 (let ((?x6710 (* l_0_8_20 l_0_8_20)))
 (let ((?x9175 (* 4.0 ?x6710)))
 (let ((?x6702 (* l_0_8_19 l_0_8_19)))
 (let ((?x3063 (* 4.0 ?x6702)))
 (let ((?x3078 (- (* (* (- 24.0) l_0_8_17) l_0_8_26) (* (* 24.0 l_0_8_18) l_0_8_27))))
 (let ((?x3085 (+ (+ (+ (+ ?x3078 ?x3063) ?x9175) ?x9168) (* (* 24.0 l_0_8_32) l_0_8_41))))
 (let ((?x13549 (- (+ ?x3085 (* (* 24.0 l_0_8_33) l_0_8_42)) (* (* 4.0 l_0_8_34) l_0_8_34))))
 (let ((?x13555 (- (- ?x13549 (* (* 4.0 l_0_8_35) l_0_8_35)) (* (* 4.0 l_0_8_36) l_0_8_36))))
 (let ((?x13559 (- (- ?x13555 (* (* 12.0 l_0_8_47) l_0_8_56)) (* (* 12.0 l_0_8_48) l_0_8_57))))
 (let ((?x13563 (+ (+ ?x13559 (* (* 6.0 l_0_8_49) l_0_8_56)) (* (* 6.0 l_0_8_50) l_0_8_57))))
 (let ((?x13567 (+ (+ ?x13563 (* (* 6.0 l_0_8_51) l_0_8_58)) (* (* 12.0 l_0_8_62) l_0_8_71))))
 (let ((?x13571 (- (+ ?x13567 (* (* 12.0 l_0_8_63) l_0_8_72)) (* (* 6.0 l_0_8_64) l_0_8_71))))
 (let ((?x13575 (- (- ?x13571 (* (* 6.0 l_0_8_65) l_0_8_72)) (* (* 6.0 l_0_8_66) l_0_8_73))))
 (= (+ (+ (+ ?x13575 ?x12632) ?x12634) ?x12636) 0.0))))))))))))))))))))
(assert
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12247 (* ?x11891 l_0_8_65)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12243 (* ?x11888 l_0_8_64)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12230 (* ?x11880 l_0_8_50)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12226 (* ?x11877 l_0_8_49)))
 (let ((?x13603 (- (* (* (- 12.0) l_0_8_19) l_0_8_19) (* (* 12.0 l_0_8_20) l_0_8_20))))
 (let ((?x13608 (+ (- ?x13603 (* (* 12.0 l_0_8_21) l_0_8_21)) (* 12.0 (* l_0_8_34 l_0_8_34)))))
 (let ((?x13612 (+ (+ ?x13608 (* 12.0 (* l_0_8_35 l_0_8_35))) (* 12.0 (* l_0_8_36 l_0_8_36)))))
 (let ((?x13618 (- (- (+ (+ ?x13612 ?x12226) ?x12230) (* (* 6.0 l_0_8_49) l_0_8_49)) (* (* 6.0 l_0_8_50) l_0_8_50))))
 (let ((?x13624 (+ (- (- (- ?x13618 (* (* 6.0 l_0_8_51) l_0_8_51)) ?x12243) ?x12247) (* 6.0 (* l_0_8_64 l_0_8_64)))))
 (let ((?x13628 (+ (+ ?x13624 (* 6.0 (* l_0_8_65 l_0_8_65))) (* 6.0 (* l_0_8_66 l_0_8_66)))))
 (= ?x13628 0.0))))))))))))))))
(assert
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x11892 (* ?x11891 l_0_8_68)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x11889 (* ?x11888 l_0_8_67)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x11881 (* ?x11880 l_0_8_53)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x11878 (* ?x11877 l_0_8_52)))
 (let ((?x13665 (- (* (* (- 24.0) l_0_8_19) l_0_8_22) (* (* 24.0 l_0_8_20) l_0_8_23))))
 (let ((?x13671 (+ (- ?x13665 (* (* 24.0 l_0_8_21) l_0_8_24)) (* (* 24.0 l_0_8_34) l_0_8_37))))
 (let ((?x13677 (+ (+ ?x13671 (* (* 24.0 l_0_8_35) l_0_8_38)) (* (* 24.0 l_0_8_36) l_0_8_39))))
 (let ((?x13685 (- (- (+ (+ ?x13677 ?x11878) ?x11881) (* (* 12.0 l_0_8_49) l_0_8_52)) (* (* 12.0 l_0_8_50) l_0_8_53))))
 (let ((?x13693 (+ (- (- (- ?x13685 (* (* 12.0 l_0_8_51) l_0_8_54)) ?x11889) ?x11892) (* (* 12.0 l_0_8_64) l_0_8_67))))
 (let ((?x13699 (+ (+ ?x13693 (* (* 12.0 l_0_8_65) l_0_8_68)) (* (* 12.0 l_0_8_66) l_0_8_69))))
 (= ?x13699 0.0))))))))))))))))
(assert
 (let ((?x11891 (* 8.0 l_0_8_63)))
 (let ((?x12492 (* ?x11891 l_0_8_72)))
 (let ((?x11888 (* 8.0 l_0_8_62)))
 (let ((?x12490 (* ?x11888 l_0_8_71)))
 (let ((?x11880 (* 8.0 l_0_8_48)))
 (let ((?x12476 (* ?x11880 l_0_8_57)))
 (let ((?x11877 (* 8.0 l_0_8_47)))
 (let ((?x12474 (* ?x11877 l_0_8_56)))
 (let ((?x13729 (- (* (* (- 24.0) l_0_8_19) l_0_8_26) (* (* 24.0 l_0_8_20) l_0_8_27))))
 (let ((?x13733 (+ (- ?x13729 (* (* 24.0 l_0_8_21) l_0_8_28)) (* (* 24.0 l_0_8_34) l_0_8_41))))
 (let ((?x13737 (+ (+ ?x13733 (* (* 24.0 l_0_8_35) l_0_8_42)) (* (* 24.0 l_0_8_36) l_0_8_43))))
 (let ((?x13743 (- (- (+ (+ ?x13737 ?x12474) ?x12476) (* (* 12.0 l_0_8_49) l_0_8_56)) (* (* 12.0 l_0_8_50) l_0_8_57))))
 (let ((?x13749 (+ (- (- (- ?x13743 (* (* 12.0 l_0_8_51) l_0_8_58)) ?x12490) ?x12492) (* (* 12.0 l_0_8_64) l_0_8_71))))
 (let ((?x13753 (+ (+ ?x13749 (* (* 12.0 l_0_8_65) l_0_8_72)) (* (* 12.0 l_0_8_66) l_0_8_73))))
 (= ?x13753 0.0))))))))))))))))
(assert
 (let ((?x13768 (- (* (* (- 12.0) l_0_8_22) l_0_8_22) (* (* 12.0 l_0_8_23) l_0_8_23))))
 (let ((?x13774 (- (- ?x13768 (* (* 12.0 l_0_8_24) l_0_8_24)) (* (* 12.0 l_0_8_25) l_0_8_25))))
 (let ((?x13778 (+ (+ ?x13774 (* 12.0 (* l_0_8_37 l_0_8_37))) (* 12.0 (* l_0_8_38 l_0_8_38)))))
 (let ((?x13782 (+ (+ ?x13778 (* 12.0 (* l_0_8_39 l_0_8_39))) (* 12.0 (* l_0_8_40 l_0_8_40)))))
 (let ((?x13786 (- (- ?x13782 (* (* 6.0 l_0_8_52) l_0_8_52)) (* (* 6.0 l_0_8_53) l_0_8_53))))
 (let ((?x13790 (- (- ?x13786 (* (* 6.0 l_0_8_54) l_0_8_54)) (* (* 6.0 l_0_8_55) l_0_8_55))))
 (let ((?x13794 (+ (+ ?x13790 (* 6.0 (* l_0_8_67 l_0_8_67))) (* 6.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x13798 (+ (+ ?x13794 (* 6.0 (* l_0_8_69 l_0_8_69))) (* 6.0 (* l_0_8_70 l_0_8_70)))))
 (= ?x13798 0.0))))))))))
(assert
 (let ((?x13832 (- (* (* (- 24.0) l_0_8_22) l_0_8_26) (* (* 24.0 l_0_8_23) l_0_8_27))))
 (let ((?x13838 (- (- ?x13832 (* (* 24.0 l_0_8_24) l_0_8_28)) (* (* 24.0 l_0_8_25) l_0_8_29))))
 (let ((?x13844 (+ (+ ?x13838 (* (* 24.0 l_0_8_37) l_0_8_41)) (* (* 24.0 l_0_8_38) l_0_8_42))))
 (let ((?x13850 (+ (+ ?x13844 (* (* 24.0 l_0_8_39) l_0_8_43)) (* (* 24.0 l_0_8_40) l_0_8_44))))
 (let ((?x13856 (- (- ?x13850 (* (* 12.0 l_0_8_52) l_0_8_56)) (* (* 12.0 l_0_8_53) l_0_8_57))))
 (let ((?x13862 (- (- ?x13856 (* (* 12.0 l_0_8_54) l_0_8_58)) (* (* 12.0 l_0_8_55) l_0_8_59))))
 (let ((?x13868 (+ (+ ?x13862 (* (* 12.0 l_0_8_67) l_0_8_71)) (* (* 12.0 l_0_8_68) l_0_8_72))))
 (let ((?x13874 (+ (+ ?x13868 (* (* 12.0 l_0_8_69) l_0_8_73)) (* (* 12.0 l_0_8_70) l_0_8_74))))
 (= ?x13874 0.0))))))))))
(assert
 (let ((?x8770 (* l_0_8_75 l_0_8_75)))
 (let ((?x13960 (* 6.0 ?x8770)))
 (let ((?x2264 (* l_0_8_74 l_0_8_74)))
 (let ((?x13958 (* 6.0 ?x2264)))
 (let ((?x8768 (* l_0_8_73 l_0_8_73)))
 (let ((?x13956 (* 6.0 ?x8768)))
 (let ((?x12995 (* l_0_8_72 l_0_8_72)))
 (let ((?x13954 (* 6.0 ?x12995)))
 (let ((?x8765 (* l_0_8_71 l_0_8_71)))
 (let ((?x13952 (* 6.0 ?x8765)))
 (let ((?x13308 (* l_0_8_45 l_0_8_45)))
 (let ((?x13935 (* 12.0 ?x13308)))
 (let ((?x13305 (* l_0_8_44 l_0_8_44)))
 (let ((?x13933 (* 12.0 ?x13305)))
 (let ((?x13302 (* l_0_8_43 l_0_8_43)))
 (let ((?x13931 (* 12.0 ?x13302)))
 (let ((?x13299 (* l_0_8_42 l_0_8_42)))
 (let ((?x13929 (* 12.0 ?x13299)))
 (let ((?x13296 (* l_0_8_41 l_0_8_41)))
 (let ((?x13927 (* 12.0 ?x13296)))
 (let ((?x13906 (- (* (* (- 12.0) l_0_8_26) l_0_8_26) (* (* 12.0 l_0_8_27) l_0_8_27))))
 (let ((?x13923 (- (- ?x13906 (* (* 12.0 l_0_8_28) l_0_8_28)) (* (* 12.0 l_0_8_29) l_0_8_29))))
 (let ((?x13932 (+ (+ (+ (- ?x13923 (* (* 12.0 l_0_8_30) l_0_8_30)) ?x13927) ?x13929) ?x13931)))
 (let ((?x13942 (- (- (+ (+ ?x13932 ?x13933) ?x13935) (* (* 6.0 l_0_8_56) l_0_8_56)) (* (* 6.0 l_0_8_57) l_0_8_57))))
 (let ((?x13948 (- (- ?x13942 (* (* 6.0 l_0_8_58) l_0_8_58)) (* (* 6.0 l_0_8_59) l_0_8_59))))
 (let ((?x13957 (+ (+ (+ (- ?x13948 (* (* 6.0 l_0_8_60) l_0_8_60)) ?x13952) ?x13954) ?x13956)))
 (= (+ (+ ?x13957 ?x13958) ?x13960) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x11845 (* l_0_8_76 l_0_8_76)))
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x12055 (* ?x11839 l_0_8_71)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x12041 (* ?x7153 l_0_8_56)))
 (let ((?x2395 (* l_0_8_16 l_0_8_16)))
 (let ((?x13971 (* 4.0 ?x2395)))
 (let ((?x13977 (+ (+ (- (- ?x13971 (* (* 4.0 l_0_8_31) l_0_8_31)) ?x12041) ?x12055) ?x11845)))
 (= ?x13977 0.0))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x11962 (* ?x11894 l_0_8_79)))
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x12754 (* ?x11959 l_0_8_73)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x12752 (* ?x11956 l_0_8_72)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x12750 (* ?x11953 l_0_8_71)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x12736 (* ?x11945 l_0_8_58)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x12734 (* ?x11942 l_0_8_57)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x12732 (* ?x11939 l_0_8_56)))
 (let ((?x13982 (- (* (* 8.0 l_0_8_16) l_0_8_19) (* (* 8.0 l_0_8_31) l_0_8_34))))
 (let ((?x13987 (- (- (- (+ ?x13982 (* (* 6.0 l_0_8_46) l_0_8_56)) ?x12732) ?x12734) ?x12736)))
 (let ((?x13992 (+ (+ (+ (- ?x13987 (* (* 6.0 l_0_8_61) l_0_8_71)) ?x12750) ?x12752) ?x12754)))
 (= (+ ?x13992 ?x11962) 0.0)))))))))))))))))))
(assert
 (let ((?x11894 (* 2.0 l_0_8_76)))
 (let ((?x12070 (* ?x11894 l_0_8_86)))
 (let ((?x8770 (* l_0_8_75 l_0_8_75)))
 (let ((?x8771 (* 4.0 ?x8770)))
 (let ((?x2264 (* l_0_8_74 l_0_8_74)))
 (let ((?x2251 (* 4.0 ?x2264)))
 (let ((?x8768 (* l_0_8_73 l_0_8_73)))
 (let ((?x12999 (* 4.0 ?x8768)))
 (let ((?x12995 (* l_0_8_72 l_0_8_72)))
 (let ((?x12996 (* 4.0 ?x12995)))
 (let ((?x8765 (* l_0_8_71 l_0_8_71)))
 (let ((?x2225 (* 4.0 ?x8765)))
 (let ((?x14015 (- (* (* 8.0 l_0_8_16) l_0_8_26) (* (* 8.0 l_0_8_31) l_0_8_41))))
 (let ((?x14021 (- (- ?x14015 (* (* 4.0 l_0_8_56) l_0_8_56)) (* (* 4.0 l_0_8_57) l_0_8_57))))
 (let ((?x14027 (- (- ?x14021 (* (* 4.0 l_0_8_58) l_0_8_58)) (* (* 4.0 l_0_8_59) l_0_8_59))))
 (let ((?x14033 (+ (+ (+ (- ?x14027 (* (* 4.0 l_0_8_60) l_0_8_60)) ?x2225) ?x12996) ?x12999)))
 (= (+ (+ (+ ?x14033 ?x2251) ?x8771) ?x12070) 0.0))))))))))))))))))
(assert
 (let ((?x12691 (* 2.0 l_0_8_81)))
 (let ((?x12775 (* ?x12691 l_0_8_88)))
 (let ((?x12688 (* 2.0 l_0_8_80)))
 (let ((?x12772 (* ?x12688 l_0_8_87)))
 (let ((?x12685 (* 2.0 l_0_8_79)))
 (let ((?x12769 (* ?x12685 l_0_8_86)))
 (let ((?x12938 (* l_0_8_60 l_0_8_60)))
 (let ((?x14060 (* 3.0 ?x12938)))
 (let ((?x12935 (* l_0_8_59 l_0_8_59)))
 (let ((?x14058 (* 3.0 ?x12935)))
 (let ((?x12932 (* l_0_8_58 l_0_8_58)))
 (let ((?x14056 (* 3.0 ?x12932)))
 (let ((?x12929 (* l_0_8_57 l_0_8_57)))
 (let ((?x14054 (* 3.0 ?x12929)))
 (let ((?x12926 (* l_0_8_56 l_0_8_56)))
 (let ((?x14052 (* 3.0 ?x12926)))
 (let ((?x9679 (+ (* (* 8.0 l_0_8_19) l_0_8_26) (* (* 8.0 l_0_8_20) l_0_8_27))))
 (let ((?x9676 (- (+ ?x9679 (* (* 8.0 l_0_8_21) l_0_8_28)) (* (* 8.0 l_0_8_34) l_0_8_41))))
 (let ((?x14051 (- (- ?x9676 (* (* 8.0 l_0_8_35) l_0_8_42)) (* (* 8.0 l_0_8_36) l_0_8_43))))
 (let ((?x14064 (- (+ (+ (+ (+ (+ ?x14051 ?x14052) ?x14054) ?x14056) ?x14058) ?x14060) (* (* 3.0 l_0_8_71) l_0_8_71))))
 (let ((?x14070 (- (- ?x14064 (* (* 3.0 l_0_8_72) l_0_8_72)) (* (* 3.0 l_0_8_73) l_0_8_73))))
 (let ((?x14076 (- (- ?x14070 (* (* 3.0 l_0_8_74) l_0_8_74)) (* (* 3.0 l_0_8_75) l_0_8_75))))
 (= (+ (+ (+ ?x14076 ?x12769) ?x12772) ?x12775) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12968 (* l_0_8_90 l_0_8_90)))
 (let ((?x12966 (* l_0_8_89 l_0_8_89)))
 (let ((?x12964 (* l_0_8_88 l_0_8_88)))
 (let ((?x12962 (* l_0_8_87 l_0_8_87)))
 (let ((?x12960 (* l_0_8_86 l_0_8_86)))
 (let ((?x13356 (* l_0_8_30 l_0_8_30)))
 (let ((?x14093 (* 4.0 ?x13356)))
 (let ((?x2747 (* l_0_8_29 l_0_8_29)))
 (let ((?x9721 (* 4.0 ?x2747)))
 (let ((?x13353 (* l_0_8_28 l_0_8_28)))
 (let ((?x3871 (* 4.0 ?x13353)))
 (let ((?x13349 (* l_0_8_27 l_0_8_27)))
 (let ((?x9796 (* 4.0 ?x13349)))
 (let ((?x9036 (* l_0_8_26 l_0_8_26)))
 (let ((?x9799 (* 4.0 ?x9036)))
 (let ((?x14097 (- (+ (+ (+ (+ ?x9799 ?x9796) ?x3871) ?x9721) ?x14093) (* (* 4.0 l_0_8_41) l_0_8_41))))
 (let ((?x14103 (- (- ?x14097 (* (* 4.0 l_0_8_42) l_0_8_42)) (* (* 4.0 l_0_8_43) l_0_8_43))))
 (let ((?x14109 (- (- ?x14103 (* (* 4.0 l_0_8_44) l_0_8_44)) (* (* 4.0 l_0_8_45) l_0_8_45))))
 (= (+ (+ (+ (+ (+ ?x14109 ?x12960) ?x12962) ?x12964) ?x12966) ?x12968) 0.0))))))))))))))))))))
(assert
 (let ((?x11843 (* (* 4.0 l_0_8_61) l_0_8_61)))
 (let ((?x11836 (* l_0_8_46 l_0_8_46)))
 (let ((?x11837 (* 4.0 ?x11836)))
 (= (- ?x11837 ?x11843) 0.0)))))
(assert
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11948 (* ?x11839 l_0_8_64)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11934 (* ?x7153 l_0_8_49)))
 (= (- ?x11934 ?x11948) 0.0))))))
(assert
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11840 (* ?x11839 l_0_8_67)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x11834 (* ?x7153 l_0_8_52)))
 (= (- ?x11834 ?x11840) 0.0))))))
(assert
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x12055 (* ?x11839 l_0_8_71)))
 (let ((?x7153 (* 8.0 l_0_8_46)))
 (let ((?x12041 (* ?x7153 l_0_8_56)))
 (= (- ?x12041 ?x12055) 0.0))))))
(assert
 (let ((?x12630 (* (* 4.0 l_0_8_66) l_0_8_66)))
 (let ((?x12624 (* (* 4.0 l_0_8_65) l_0_8_65)))
 (let ((?x12618 (* (* 4.0 l_0_8_64) l_0_8_64)))
 (let ((?x6749 (* l_0_8_51 l_0_8_51)))
 (let ((?x12604 (* 4.0 ?x6749)))
 (let ((?x6747 (* l_0_8_50 l_0_8_50)))
 (let ((?x12599 (* 4.0 ?x6747)))
 (let ((?x6740 (* l_0_8_49 l_0_8_49)))
 (let ((?x12592 (* 4.0 ?x6740)))
 (= (- (- (- (+ (+ ?x12592 ?x12599) ?x12604) ?x12618) ?x12624) ?x12630) 0.0)))))))))))
(assert
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x11960 (* ?x11959 l_0_8_69)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x11957 (* ?x11956 l_0_8_68)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x11954 (* ?x11953 l_0_8_67)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x11946 (* ?x11945 l_0_8_54)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x11943 (* ?x11942 l_0_8_53)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x11940 (* ?x11939 l_0_8_52)))
 (= (- (- (- (+ (+ ?x11940 ?x11943) ?x11946) ?x11954) ?x11957) ?x11960) 0.0))))))))))))))
(assert
 (let ((?x11959 (* 8.0 l_0_8_66)))
 (let ((?x12754 (* ?x11959 l_0_8_73)))
 (let ((?x11956 (* 8.0 l_0_8_65)))
 (let ((?x12752 (* ?x11956 l_0_8_72)))
 (let ((?x11953 (* 8.0 l_0_8_64)))
 (let ((?x12750 (* ?x11953 l_0_8_71)))
 (let ((?x11945 (* 8.0 l_0_8_51)))
 (let ((?x12736 (* ?x11945 l_0_8_58)))
 (let ((?x11942 (* 8.0 l_0_8_50)))
 (let ((?x12734 (* ?x11942 l_0_8_57)))
 (let ((?x11939 (* 8.0 l_0_8_49)))
 (let ((?x12732 (* ?x11939 l_0_8_56)))
 (= (- (- (- (+ (+ ?x12732 ?x12734) ?x12736) ?x12750) ?x12752) ?x12754) 0.0))))))))))))))
(assert
 (let ((?x12826 (* (* 4.0 l_0_8_70) l_0_8_70)))
 (let ((?x12821 (* (* 4.0 l_0_8_69) l_0_8_69)))
 (let ((?x12818 (* (* 4.0 l_0_8_68) l_0_8_68)))
 (let ((?x12815 (* (* 4.0 l_0_8_67) l_0_8_67)))
 (let ((?x7388 (* l_0_8_55 l_0_8_55)))
 (let ((?x7386 (* 4.0 ?x7388)))
 (let ((?x7376 (* l_0_8_54 l_0_8_54)))
 (let ((?x7377 (* 4.0 ?x7376)))
 (let ((?x7369 (* l_0_8_53 l_0_8_53)))
 (let ((?x7371 (* 4.0 ?x7369)))
 (let ((?x12019 (* l_0_8_52 l_0_8_52)))
 (let ((?x12020 (* 4.0 ?x12019)))
 (let ((?x14183 (- (- (- (- (+ (+ (+ ?x12020 ?x7371) ?x7377) ?x7386) ?x12815) ?x12818) ?x12821) ?x12826)))
 (= ?x14183 0.0)))))))))))))))
(assert
 (let ((?x12067 (* (* 8.0 l_0_8_70) l_0_8_74)))
 (let ((?x12064 (* (* 8.0 l_0_8_69) l_0_8_73)))
 (let ((?x12061 (* (* 8.0 l_0_8_68) l_0_8_72)))
 (let ((?x12058 (* (* 8.0 l_0_8_67) l_0_8_71)))
 (let ((?x12053 (* (* 8.0 l_0_8_55) l_0_8_59)))
 (let ((?x12050 (* (* 8.0 l_0_8_54) l_0_8_58)))
 (let ((?x12047 (* (* 8.0 l_0_8_53) l_0_8_57)))
 (let ((?x12044 (* (* 8.0 l_0_8_52) l_0_8_56)))
 (let ((?x3828 (- (- (- (- (+ (+ (+ ?x12044 ?x12047) ?x12050) ?x12053) ?x12058) ?x12061) ?x12064) ?x12067)))
 (= ?x3828 0.0)))))))))))
(assert
 (let ((?x12954 (* (* 4.0 l_0_8_75) l_0_8_75)))
 (let ((?x12951 (* (* 4.0 l_0_8_74) l_0_8_74)))
 (let ((?x12948 (* (* 4.0 l_0_8_73) l_0_8_73)))
 (let ((?x12945 (* (* 4.0 l_0_8_72) l_0_8_72)))
 (let ((?x12942 (* (* 4.0 l_0_8_71) l_0_8_71)))
 (let ((?x12938 (* l_0_8_60 l_0_8_60)))
 (let ((?x12939 (* 4.0 ?x12938)))
 (let ((?x12935 (* l_0_8_59 l_0_8_59)))
 (let ((?x12936 (* 4.0 ?x12935)))
 (let ((?x12932 (* l_0_8_58 l_0_8_58)))
 (let ((?x12933 (* 4.0 ?x12932)))
 (let ((?x12929 (* l_0_8_57 l_0_8_57)))
 (let ((?x12930 (* 4.0 ?x12929)))
 (let ((?x12926 (* l_0_8_56 l_0_8_56)))
 (let ((?x12927 (* 4.0 ?x12926)))
 (let ((?x14191 (- (- (- (+ (+ (+ (+ ?x12927 ?x12930) ?x12933) ?x12936) ?x12939) ?x12942) ?x12945) ?x12948)))
 (= (- (- ?x14191 ?x12951) ?x12954) 0.0))))))))))))))))))
(assert
 (let ((?x11839 (* 8.0 l_0_8_61)))
 (let ((?x11948 (* ?x11839 l_0_8_64)))
 (let ((?x4134 (+ (* (* (- 8.0) l_0_8_46) l_0_8_49) (* 3.0 (* l_0_8_46 l_0_8_46)))))
 (= (- (+ ?x4134 ?x11948) (* (* 3.0 l_0_8_61) l_0_8_61)) 0.0)))))
(assert
 (let ((?x7169 (* l_0_8_61 l_0_8_61)))
 (let ((?x11853 (* 4.0 ?x7169)))
 (= (+ (* (* (- 4.0) l_0_8_46) l_0_8_46) ?x11853) 0.0))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (let ((?x14330 (* l_0_9_96 l_0_9_96)))
 (let ((?x14328 (* l_0_9_95 l_0_9_95)))
 (let ((?x14326 (* l_0_9_94 l_0_9_94)))
 (let ((?x14254 (* l_0_9_126 l_0_9_126)))
 (let ((?x14252 (* l_0_9_125 l_0_9_125)))
 (let ((?x14250 (* l_0_9_124 l_0_9_124)))
 (let ((?x14248 (* l_0_9_111 l_0_9_111)))
 (let ((?x14249 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x14248)))
 (let ((?x14258 (- (- (- (- ?x14249 ?x14250) ?x14252) ?x14254) (* (* 12.0 l_0_9_17) l_0_9_17))))
 (let ((?x14264 (- (- ?x14258 (* (* 12.0 l_0_9_18) l_0_9_18)) (* (* 1.0 l_0_9_19) l_0_9_19))))
 (let ((?x14270 (- (- ?x14264 (* (* 1.0 l_0_9_20) l_0_9_20)) (* (* 1.0 l_0_9_21) l_0_9_21))))
 (let ((?x14276 (+ (+ ?x14270 (* 12.0 (* l_0_9_32 l_0_9_32))) (* 12.0 (* l_0_9_33 l_0_9_33)))))
 (let ((?x14282 (+ (+ ?x14276 (* 1.0 (* l_0_9_34 l_0_9_34))) (* 1.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x14288 (+ (+ ?x14282 (* 1.0 (* l_0_9_36 l_0_9_36))) (* (* 6.0 l_0_9_47) l_0_9_49))))
 (let ((?x14293 (+ (- ?x14288 (* (* 6.0 l_0_9_47) l_0_9_47)) (* (* 6.0 l_0_9_48) l_0_9_50))))
 (let ((?x14298 (- (- ?x14293 (* (* 6.0 l_0_9_48) l_0_9_48)) (* (* 1.0 l_0_9_49) l_0_9_49))))
 (let ((?x14304 (- (- ?x14298 (* (* 1.0 l_0_9_50) l_0_9_50)) (* (* 1.0 l_0_9_51) l_0_9_51))))
 (let ((?x14310 (+ (- ?x14304 (* (* 6.0 l_0_9_62) l_0_9_64)) (* 6.0 (* l_0_9_62 l_0_9_62)))))
 (let ((?x14316 (+ (- ?x14310 (* (* 6.0 l_0_9_63) l_0_9_65)) (* 6.0 (* l_0_9_63 l_0_9_63)))))
 (let ((?x14322 (+ (+ ?x14316 (* 1.0 (* l_0_9_64 l_0_9_64))) (* 1.0 (* l_0_9_65 l_0_9_65)))))
 (let ((?x14331 (- (- (- (+ ?x14322 (* 1.0 (* l_0_9_66 l_0_9_66))) ?x14326) ?x14328) ?x14330)))
 (= (- ?x14331 12.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x14367 (* l_0_9_48 l_0_9_48)))
 (let ((?x14434 (* 3.0 ?x14367)))
 (let ((?x14361 (* l_0_9_47 l_0_9_47)))
 (let ((?x14429 (* 3.0 ?x14361)))
 (let ((?x14407 (- (- (* 4.0 _a_4_) (* (* 2.0 l_0_9_107) l_0_9_109)) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x14413 (- (- ?x14407 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x14419 (- (- ?x14413 (* (* 2.0 l_0_9_17) l_0_9_19)) (* (* 2.0 l_0_9_18) l_0_9_20))))
 (let ((?x14425 (+ (+ ?x14419 (* (* 2.0 l_0_9_32) l_0_9_34)) (* (* 2.0 l_0_9_33) l_0_9_35))))
 (let ((?x14433 (- (+ (- ?x14425 (* (* 2.0 l_0_9_47) l_0_9_49)) ?x14429) (* (* 2.0 l_0_9_48) l_0_9_50))))
 (let ((?x14441 (- (+ (+ ?x14433 ?x14434) (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 3.0 l_0_9_62) l_0_9_62))))
 (let ((?x14447 (- (+ ?x14441 (* (* 2.0 l_0_9_63) l_0_9_65)) (* (* 3.0 l_0_9_63) l_0_9_63))))
 (let ((?x14453 (- (- ?x14447 (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= (- ?x14453 24.0) 0.0))))))))))))))
(assert
 (let ((?x14503 (* l_0_9_93 l_0_9_93)))
 (let ((?x14501 (* l_0_9_92 l_0_9_92)))
 (let ((?x14479 (* l_0_9_123 l_0_9_123)))
 (let ((?x14477 (* l_0_9_122 l_0_9_122)))
 (let ((?x14475 (* l_0_9_108 l_0_9_108)))
 (let ((?x14480 (- (- (- (- (* 4.0 _a_3_) (* l_0_9_107 l_0_9_107)) ?x14475) ?x14477) ?x14479)))
 (let ((?x14486 (- (- ?x14480 (* (* 1.0 l_0_9_17) l_0_9_17)) (* (* 1.0 l_0_9_18) l_0_9_18))))
 (let ((?x14490 (+ (+ ?x14486 (* 1.0 (* l_0_9_32 l_0_9_32))) (* 1.0 (* l_0_9_33 l_0_9_33)))))
 (let ((?x14496 (- (- ?x14490 (* (* 1.0 l_0_9_47) l_0_9_47)) (* (* 1.0 l_0_9_48) l_0_9_48))))
 (let ((?x14500 (+ (+ ?x14496 (* 1.0 (* l_0_9_62 l_0_9_62))) (* 1.0 (* l_0_9_63 l_0_9_63)))))
 (= (- (- (- ?x14500 ?x14501) ?x14503) 13.0) 0.0))))))))))))
(assert
 (let ((?x14559 (* l_0_9_78 l_0_9_78)))
 (let ((?x14557 (* l_0_9_77 l_0_9_77)))
 (let ((?x9875 (* l_0_9_18 l_0_9_18)))
 (let ((?x14537 (* 4.0 ?x9875)))
 (let ((?x14346 (* l_0_9_17 l_0_9_17)))
 (let ((?x14533 (* 4.0 ?x14346)))
 (let ((?x14522 (- (- (* 4.0 _a_5_) (* (* 2.0 l_0_9_101) l_0_9_92)) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x14526 (- (- ?x14522 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x14530 (- (- ?x14526 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x14536 (- (+ (- ?x14530 (* (* 2.0 l_0_9_17) l_0_9_26)) ?x14533) (* (* 2.0 l_0_9_18) l_0_9_27))))
 (let ((?x14543 (- (+ (+ ?x14536 ?x14537) (* (* 2.0 l_0_9_32) l_0_9_41)) (* (* 4.0 l_0_9_32) l_0_9_32))))
 (let ((?x14548 (- (+ ?x14543 (* (* 2.0 l_0_9_33) l_0_9_42)) (* (* 4.0 l_0_9_33) l_0_9_33))))
 (let ((?x14552 (- (- ?x14548 (* (* 2.0 l_0_9_47) l_0_9_56)) (* (* 2.0 l_0_9_48) l_0_9_57))))
 (let ((?x14556 (+ (+ ?x14552 (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (= (+ (+ ?x14556 ?x14557) ?x14559) 0.0))))))))))))))))
(assert
 (let ((?x14605 (* l_0_9_76 l_0_9_76)))
 (let ((?x14603 (* (* 4.0 l_0_9_61) l_0_9_61)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14600 (* ?x14599 l_0_9_67)))
 (let ((?x14596 (* l_0_9_46 l_0_9_46)))
 (let ((?x14597 (* 4.0 ?x14596)))
 (let ((?x14598 (+ (- (* (- l_0_9_1) l_0_9_1) (* (* 8.0 l_0_9_46) l_0_9_52)) ?x14597)))
 (= (- (- (+ ?x14598 ?x14600) ?x14603) ?x14605) 0.0)))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14660 (* ?x14659 l_0_9_77)))
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x14657 (* ?x14656 l_0_9_68)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14654 (* ?x14653 l_0_9_67)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14648 (* ?x14599 l_0_9_62)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14646 (* ?x14645 l_0_9_53)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14643 (* ?x14642 l_0_9_52)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14637 (* ?x14593 l_0_9_47)))
 (let ((?x14627 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_106) l_0_9_112))))
 (let ((?x14633 (- (- ?x14627 (* (* 2.0 l_0_9_121) l_0_9_127)) (* (* 2.0 l_0_9_16) l_0_9_22))))
 (let ((?x14641 (- (+ (+ ?x14633 (* (* 2.0 l_0_9_31) l_0_9_37)) ?x14637) (* (* 2.0 l_0_9_46) l_0_9_52))))
 (let ((?x14652 (+ (- (- (- ?x14641 ?x14643) ?x14646) ?x14648) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x14664 (- (- (+ (+ ?x14652 ?x14654) ?x14657) ?x14660) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= ?x14664 0.0)))))))))))))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14715 (* ?x14659 l_0_9_79)))
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x14713 (* ?x14712 l_0_9_69)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x14710 (* ?x14709 l_0_9_68)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x14707 (* ?x14706 l_0_9_67)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14701 (* ?x14599 l_0_9_64)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x14699 (* ?x14698 l_0_9_54)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x14696 (* ?x14695 l_0_9_53)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x14693 (* ?x14692 l_0_9_52)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x4948 (* ?x14593 l_0_9_49)))
 (let ((?x14691 (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x4948) (* (* 6.0 l_0_9_46) l_0_9_52))))
 (let ((?x14705 (- (- (- (- (- ?x14691 ?x14693) ?x14696) ?x14699) ?x14701) (* (* 6.0 l_0_9_61) l_0_9_67))))
 (= (- (+ (+ (+ ?x14705 ?x14707) ?x14710) ?x14713) ?x14715) 0.0))))))))))))))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14767 (* ?x14659 l_0_9_82)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14600 (* ?x14599 l_0_9_67)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14594 (* ?x14593 l_0_9_52)))
 (let ((?x14744 (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x14594) (* (* 4.0 l_0_9_52) l_0_9_52))))
 (let ((?x14750 (- (- ?x14744 (* (* 4.0 l_0_9_53) l_0_9_53)) (* (* 4.0 l_0_9_54) l_0_9_54))))
 (let ((?x14757 (+ (- (- ?x14750 (* (* 4.0 l_0_9_55) l_0_9_55)) ?x14600) (* 4.0 (* l_0_9_67 l_0_9_67)))))
 (let ((?x14763 (+ (+ ?x14757 (* 4.0 (* l_0_9_68 l_0_9_68))) (* 4.0 (* l_0_9_69 l_0_9_69)))))
 (= (- (+ ?x14763 (* 4.0 (* l_0_9_70 l_0_9_70))) ?x14767) 0.0))))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14830 (* ?x14659 l_0_9_86)))
 (let ((?x14767 (* ?x14659 l_0_9_82)))
 (let ((?x14827 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x14824 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x14821 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x14818 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14815 (* ?x14599 l_0_9_71)))
 (let ((?x14813 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x14810 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x14807 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x14804 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14801 (* ?x14593 l_0_9_56)))
 (let ((?x14797 (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 8.0 l_0_9_16) l_0_9_22))))
 (let ((?x14808 (- (- (+ (- ?x14797 (* (* 8.0 l_0_9_31) l_0_9_37)) ?x14801) ?x14804) ?x14807)))
 (let ((?x14828 (+ (+ (+ (+ (- (- (- ?x14808 ?x14810) ?x14813) ?x14815) ?x14818) ?x14821) ?x14824) ?x14827)))
 (= (- (+ ?x14828 ?x14767) ?x14830) 0.0))))))))))))))))))))
(assert
 (let ((?x14559 (* l_0_9_78 l_0_9_78)))
 (let ((?x14557 (* l_0_9_77 l_0_9_77)))
 (let ((?x14887 (* (* 4.0 l_0_9_63) l_0_9_63)))
 (let ((?x14882 (* (* 4.0 l_0_9_62) l_0_9_62)))
 (let ((?x14367 (* l_0_9_48 l_0_9_48)))
 (let ((?x14877 (* 4.0 ?x14367)))
 (let ((?x14361 (* l_0_9_47 l_0_9_47)))
 (let ((?x14873 (* 4.0 ?x14361)))
 (let ((?x14865 (* l_0_9_3 l_0_9_3)))
 (let ((?x14863 (* l_0_9_2 l_0_9_2)))
 (let ((?x14854 (- (* (* (- 2.0) l_0_9_107) l_0_9_112) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x14858 (- (- ?x14854 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x14862 (- (- ?x14858 (* (* 2.0 l_0_9_17) l_0_9_22)) (* (* 2.0 l_0_9_18) l_0_9_23))))
 (let ((?x14870 (+ (+ (- (- ?x14862 ?x14863) ?x14865) (* (* 2.0 l_0_9_32) l_0_9_37)) (* (* 2.0 l_0_9_33) l_0_9_38))))
 (let ((?x14876 (- (+ (- ?x14870 (* (* 2.0 l_0_9_47) l_0_9_52)) ?x14873) (* (* 2.0 l_0_9_48) l_0_9_53))))
 (let ((?x14885 (+ (- (+ (+ ?x14876 ?x14877) (* (* 2.0 l_0_9_62) l_0_9_67)) ?x14882) (* (* 2.0 l_0_9_63) l_0_9_68))))
 (let ((?x14892 (- (- (- (- ?x14885 ?x14887) ?x14557) ?x14559) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x14892 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0)))))))))))))))))))
(assert
 (let ((?x15018 (* 2.0 l_0_9_78)))
 (let ((?x15019 (* ?x15018 l_0_9_80)))
 (let ((?x15015 (* 2.0 l_0_9_77)))
 (let ((?x15016 (* ?x15015 l_0_9_79)))
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15002 (* ?x14656 l_0_9_65)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14998 (* ?x14653 l_0_9_64)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14985 (* ?x14645 l_0_9_50)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14981 (* ?x14642 l_0_9_49)))
 (let ((?x14944 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x14950 (- (- ?x14944 (* (* 2.0 l_0_9_111) l_0_9_114)) (* (* 2.0 l_0_9_124) l_0_9_127))))
 (let ((?x14956 (- (- ?x14950 (* (* 2.0 l_0_9_125) l_0_9_128)) (* (* 2.0 l_0_9_126) l_0_9_129))))
 (let ((?x14962 (- (- ?x14956 (* (* 2.0 l_0_9_19) l_0_9_22)) (* (* 2.0 l_0_9_2) l_0_9_4))))
 (let ((?x14968 (- (- ?x14962 (* (* 2.0 l_0_9_20) l_0_9_23)) (* (* 2.0 l_0_9_21) l_0_9_24))))
 (let ((?x14974 (+ (- ?x14968 (* (* 2.0 l_0_9_3) l_0_9_5)) (* (* 2.0 l_0_9_34) l_0_9_37))))
 (let ((?x14980 (+ (+ ?x14974 (* (* 2.0 l_0_9_35) l_0_9_38)) (* (* 2.0 l_0_9_36) l_0_9_39))))
 (let ((?x14988 (+ (+ (+ (+ ?x14980 ?x14981) (* (* 6.0 l_0_9_47) l_0_9_52)) ?x14985) (* (* 6.0 l_0_9_48) l_0_9_53))))
 (let ((?x14994 (- (- ?x14988 (* (* 2.0 l_0_9_49) l_0_9_52)) (* (* 2.0 l_0_9_50) l_0_9_53))))
 (let ((?x15001 (- (- (- ?x14994 (* (* 2.0 l_0_9_51) l_0_9_54)) ?x14998) (* (* 6.0 l_0_9_62) l_0_9_67))))
 (let ((?x15008 (+ (- (- ?x15001 ?x15002) (* (* 6.0 l_0_9_63) l_0_9_68)) (* (* 2.0 l_0_9_64) l_0_9_67))))
 (let ((?x15014 (+ (+ ?x15008 (* (* 2.0 l_0_9_65) l_0_9_68)) (* (* 2.0 l_0_9_66) l_0_9_69))))
 (let ((?x15026 (- (- (- (- ?x15014 ?x15016) ?x15019) (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x15026 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15166 (* l_0_9_99 l_0_9_99)))
 (let ((?x15164 (* l_0_9_98 l_0_9_98)))
 (let ((?x15162 (* l_0_9_97 l_0_9_97)))
 (let ((?x15018 (* 2.0 l_0_9_78)))
 (let ((?x15160 (* ?x15018 l_0_9_83)))
 (let ((?x15015 (* 2.0 l_0_9_77)))
 (let ((?x15158 (* ?x15015 l_0_9_82)))
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x14657 (* ?x14656 l_0_9_68)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14654 (* ?x14653 l_0_9_67)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14646 (* ?x14645 l_0_9_53)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14643 (* ?x14642 l_0_9_52)))
 (let ((?x15104 (* l_0_9_130 l_0_9_130)))
 (let ((?x15102 (* l_0_9_129 l_0_9_129)))
 (let ((?x15100 (* l_0_9_128 l_0_9_128)))
 (let ((?x15098 (* l_0_9_127 l_0_9_127)))
 (let ((?x15096 (* l_0_9_115 l_0_9_115)))
 (let ((?x15094 (* l_0_9_114 l_0_9_114)))
 (let ((?x15092 (* l_0_9_113 l_0_9_113)))
 (let ((?x15093 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x15092)))
 (let ((?x15107 (- (- (- (- (- (- (- ?x15093 ?x15094) ?x15096) ?x15098) ?x15100) ?x15102) ?x15104) (* (* 2.0 l_0_9_2) l_0_9_7))))
 (let ((?x15113 (- (- ?x15107 (* (* 1.0 l_0_9_22) l_0_9_22)) (* (* 1.0 l_0_9_23) l_0_9_23))))
 (let ((?x15119 (- (- ?x15113 (* (* 1.0 l_0_9_24) l_0_9_24)) (* (* 1.0 l_0_9_25) l_0_9_25))))
 (let ((?x15124 (+ (- ?x15119 (* (* 2.0 l_0_9_3) l_0_9_8)) (* 1.0 (* l_0_9_37 l_0_9_37)))))
 (let ((?x15130 (+ (+ ?x15124 (* 1.0 (* l_0_9_38 l_0_9_38))) (* 1.0 (* l_0_9_39 l_0_9_39)))))
 (let ((?x15138 (- (+ (+ (+ ?x15130 (* 1.0 (* l_0_9_40 l_0_9_40))) ?x14643) ?x14646) (* (* 1.0 l_0_9_52) l_0_9_52))))
 (let ((?x15144 (- (- ?x15138 (* (* 1.0 l_0_9_53) l_0_9_53)) (* (* 1.0 l_0_9_54) l_0_9_54))))
 (let ((?x15151 (+ (- (- (- ?x15144 (* (* 1.0 l_0_9_55) l_0_9_55)) ?x14654) ?x14657) (* 1.0 (* l_0_9_67 l_0_9_67)))))
 (let ((?x15155 (+ (+ ?x15151 (* 1.0 (* l_0_9_68 l_0_9_68))) (* 1.0 (* l_0_9_69 l_0_9_69)))))
 (let ((?x15163 (- (- (- (+ ?x15155 (* 1.0 (* l_0_9_70 l_0_9_70))) ?x15158) ?x15160) ?x15162)))
 (= (- (- ?x15163 ?x15164) ?x15166) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15018 (* 2.0 l_0_9_78)))
 (let ((?x15292 (* ?x15018 l_0_9_87)))
 (let ((?x15160 (* ?x15018 l_0_9_83)))
 (let ((?x15015 (* 2.0 l_0_9_77)))
 (let ((?x15289 (* ?x15015 l_0_9_86)))
 (let ((?x15158 (* ?x15015 l_0_9_82)))
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15274 (* ?x14656 l_0_9_72)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x15272 (* ?x14653 l_0_9_71)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x15258 (* ?x14645 l_0_9_57)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x15256 (* ?x14642 l_0_9_56)))
 (let ((?x15184 (- (* (* (- 2.0) l_0_9_100) l_0_9_104) (* (* 2.0 l_0_9_101) l_0_9_97))))
 (let ((?x15189 (- (- ?x15184 (* (* 2.0 l_0_9_102) l_0_9_98)) (* (* 2.0 l_0_9_103) l_0_9_99))))
 (let ((?x15195 (- (- ?x15189 (* (* 2.0 l_0_9_11) l_0_9_2)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x15201 (- (- ?x15195 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x15207 (- (- ?x15201 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_12) l_0_9_3))))
 (let ((?x15213 (- (- ?x15207 (* (* 2.0 l_0_9_127) l_0_9_131)) (* (* 2.0 l_0_9_128) l_0_9_132))))
 (let ((?x15219 (- (- ?x15213 (* (* 2.0 l_0_9_129) l_0_9_133)) (* (* 2.0 l_0_9_130) l_0_9_134))))
 (let ((?x15225 (+ (+ ?x15219 (* (* 8.0 l_0_9_17) l_0_9_22)) (* (* 8.0 l_0_9_18) l_0_9_23))))
 (let ((?x15231 (- (- ?x15225 (* (* 2.0 l_0_9_22) l_0_9_26)) (* (* 2.0 l_0_9_23) l_0_9_27))))
 (let ((?x15237 (- (- ?x15231 (* (* 2.0 l_0_9_24) l_0_9_28)) (* (* 2.0 l_0_9_25) l_0_9_29))))
 (let ((?x15243 (- (- ?x15237 (* (* 8.0 l_0_9_32) l_0_9_37)) (* (* 8.0 l_0_9_33) l_0_9_38))))
 (let ((?x15249 (+ (+ ?x15243 (* (* 2.0 l_0_9_37) l_0_9_41)) (* (* 2.0 l_0_9_38) l_0_9_42))))
 (let ((?x15255 (+ (+ ?x15249 (* (* 2.0 l_0_9_39) l_0_9_43)) (* (* 2.0 l_0_9_40) l_0_9_44))))
 (let ((?x15265 (- (- (+ (+ ?x15255 ?x15256) ?x15258) (* (* 2.0 l_0_9_52) l_0_9_56)) (* (* 2.0 l_0_9_53) l_0_9_57))))
 (let ((?x15271 (- (- ?x15265 (* (* 2.0 l_0_9_54) l_0_9_58)) (* (* 2.0 l_0_9_55) l_0_9_59))))
 (let ((?x15281 (+ (+ (- (- ?x15271 ?x15272) ?x15274) (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x15287 (+ (+ ?x15281 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (= (- (+ (- (+ ?x15287 ?x15158) ?x15289) ?x15160) ?x15292) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15420 (* l_0_9_81 l_0_9_81)))
 (let ((?x15418 (* l_0_9_80 l_0_9_80)))
 (let ((?x15416 (* l_0_9_79 l_0_9_79)))
 (let ((?x15414 (* (* 4.0 l_0_9_66) l_0_9_66)))
 (let ((?x15408 (* (* 4.0 l_0_9_65) l_0_9_65)))
 (let ((?x15402 (* (* 4.0 l_0_9_64) l_0_9_64)))
 (let ((?x15390 (* l_0_9_6 l_0_9_6)))
 (let ((?x4303 (* l_0_9_51 l_0_9_51)))
 (let ((?x15388 (* 4.0 ?x4303)))
 (let ((?x4298 (* l_0_9_50 l_0_9_50)))
 (let ((?x15383 (* 4.0 ?x4298)))
 (let ((?x15378 (* l_0_9_5 l_0_9_5)))
 (let ((?x4282 (* l_0_9_49 l_0_9_49)))
 (let ((?x15376 (* 4.0 ?x4282)))
 (let ((?x15365 (* l_0_9_4 l_0_9_4)))
 (let ((?x11159 (- (* (* (- 24.0) l_0_9_17) l_0_9_22) (* (* 24.0 l_0_9_18) l_0_9_23))))
 (let ((?x15364 (+ (+ ?x11159 (* (* 24.0 l_0_9_32) l_0_9_37)) (* (* 24.0 l_0_9_33) l_0_9_38))))
 (let ((?x15372 (- (- (- ?x15364 ?x15365) (* (* 12.0 l_0_9_47) l_0_9_52)) (* (* 12.0 l_0_9_48) l_0_9_53))))
 (let ((?x15382 (+ (- (+ (+ ?x15372 (* (* 6.0 l_0_9_49) l_0_9_52)) ?x15376) ?x15378) (* (* 6.0 l_0_9_50) l_0_9_53))))
 (let ((?x15391 (- (+ (+ (+ ?x15382 ?x15383) (* (* 6.0 l_0_9_51) l_0_9_54)) ?x15388) ?x15390)))
 (let ((?x15397 (+ (+ ?x15391 (* (* 12.0 l_0_9_62) l_0_9_67)) (* (* 12.0 l_0_9_63) l_0_9_68))))
 (let ((?x15406 (- (- (- ?x15397 (* (* 6.0 l_0_9_64) l_0_9_67)) ?x15402) (* (* 6.0 l_0_9_65) l_0_9_68))))
 (let ((?x15417 (- (- (- (- ?x15406 ?x15408) (* (* 6.0 l_0_9_66) l_0_9_69)) ?x15414) ?x15416)))
 (= (- (- ?x15417 ?x15418) ?x15420) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x15473 (* 2.0 l_0_9_81)))
 (let ((?x15474 (* ?x15473 l_0_9_84)))
 (let ((?x15470 (* 2.0 l_0_9_80)))
 (let ((?x15471 (* ?x15470 l_0_9_83)))
 (let ((?x15467 (* 2.0 l_0_9_79)))
 (let ((?x15468 (* ?x15467 l_0_9_82)))
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x14713 (* ?x14712 l_0_9_69)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x14710 (* ?x14709 l_0_9_68)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x14707 (* ?x14706 l_0_9_67)))
 (let ((?x10327 (* l_0_9_55 l_0_9_55)))
 (let ((?x15447 (* 3.0 ?x10327)))
 (let ((?x10318 (* l_0_9_54 l_0_9_54)))
 (let ((?x15445 (* 3.0 ?x10318)))
 (let ((?x1798 (* l_0_9_53 l_0_9_53)))
 (let ((?x15443 (* 3.0 ?x1798)))
 (let ((?x14773 (* l_0_9_52 l_0_9_52)))
 (let ((?x15441 (* 3.0 ?x14773)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x14699 (* ?x14698 l_0_9_54)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x14696 (* ?x14695 l_0_9_53)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x14693 (* ?x14692 l_0_9_52)))
 (let ((?x6022 (- (+ (* (* (- 2.0) l_0_9_4) l_0_9_7) ?x14693) (* (* 2.0 l_0_9_5) l_0_9_8))))
 (let ((?x15451 (- (+ (+ (+ (+ (+ (+ ?x6022 ?x14696) ?x14699) ?x15441) ?x15443) ?x15445) ?x15447) (* (* 2.0 l_0_9_6) l_0_9_9))))
 (let ((?x15457 (- (- (- (- ?x15451 ?x14707) ?x14710) ?x14713) (* (* 3.0 l_0_9_67) l_0_9_67))))
 (let ((?x15463 (- (- ?x15457 (* (* 3.0 l_0_9_68) l_0_9_68)) (* (* 3.0 l_0_9_69) l_0_9_69))))
 (let ((?x15475 (- (- (- (- ?x15463 (* (* 3.0 l_0_9_70) l_0_9_70)) ?x15468) ?x15471) ?x15474)))
 (= ?x15475 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15473 (* 2.0 l_0_9_81)))
 (let ((?x15572 (* ?x15473 l_0_9_88)))
 (let ((?x15474 (* ?x15473 l_0_9_84)))
 (let ((?x15470 (* 2.0 l_0_9_80)))
 (let ((?x15569 (* ?x15470 l_0_9_87)))
 (let ((?x15471 (* ?x15470 l_0_9_83)))
 (let ((?x15467 (* 2.0 l_0_9_79)))
 (let ((?x15566 (* ?x15467 l_0_9_86)))
 (let ((?x15468 (* ?x15467 l_0_9_82)))
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x15551 (* ?x14712 l_0_9_73)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x15549 (* ?x14709 l_0_9_72)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x15547 (* ?x14706 l_0_9_71)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x15533 (* ?x14698 l_0_9_58)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x15531 (* ?x14695 l_0_9_57)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x15529 (* ?x14692 l_0_9_56)))
 (let ((?x15507 (- (* (* (- 2.0) l_0_9_11) l_0_9_4) (* (* 2.0 l_0_9_12) l_0_9_5))))
 (let ((?x15513 (+ (- ?x15507 (* (* 2.0 l_0_9_13) l_0_9_6)) (* (* 8.0 l_0_9_19) l_0_9_22))))
 (let ((?x15519 (+ (+ ?x15513 (* (* 8.0 l_0_9_20) l_0_9_23)) (* (* 8.0 l_0_9_21) l_0_9_24))))
 (let ((?x15525 (- (- ?x15519 (* (* 8.0 l_0_9_34) l_0_9_37)) (* (* 8.0 l_0_9_35) l_0_9_38))))
 (let ((?x15534 (+ (+ (+ (- ?x15525 (* (* 8.0 l_0_9_36) l_0_9_39)) ?x15529) ?x15531) ?x15533)))
 (let ((?x15540 (+ (+ ?x15534 (* (* 6.0 l_0_9_52) l_0_9_56)) (* (* 6.0 l_0_9_53) l_0_9_57))))
 (let ((?x15546 (+ (+ ?x15540 (* (* 6.0 l_0_9_54) l_0_9_58)) (* (* 6.0 l_0_9_55) l_0_9_59))))
 (let ((?x15555 (- (- (- (- ?x15546 ?x15547) ?x15549) ?x15551) (* (* 6.0 l_0_9_67) l_0_9_71))))
 (let ((?x15561 (- (- ?x15555 (* (* 6.0 l_0_9_68) l_0_9_72)) (* (* 6.0 l_0_9_69) l_0_9_73))))
 (let ((?x15568 (+ (- (+ (- ?x15561 (* (* 6.0 l_0_9_70) l_0_9_74)) ?x15468) ?x15566) ?x15471)))
 (= (- (+ (- ?x15568 ?x15569) ?x15474) ?x15572) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15664 (* l_0_9_9 l_0_9_9)))
 (let ((?x15662 (* l_0_9_85 l_0_9_85)))
 (let ((?x15660 (* l_0_9_84 l_0_9_84)))
 (let ((?x15658 (* l_0_9_83 l_0_9_83)))
 (let ((?x15656 (* l_0_9_82 l_0_9_82)))
 (let ((?x15654 (* l_0_9_8 l_0_9_8)))
 (let ((?x15652 (* (* 4.0 l_0_9_70) l_0_9_70)))
 (let ((?x15649 (* l_0_9_7 l_0_9_7)))
 (let ((?x15647 (* (* 4.0 l_0_9_69) l_0_9_69)))
 (let ((?x15644 (* (* 4.0 l_0_9_68) l_0_9_68)))
 (let ((?x15641 (* (* 4.0 l_0_9_67) l_0_9_67)))
 (let ((?x10327 (* l_0_9_55 l_0_9_55)))
 (let ((?x10329 (* 4.0 ?x10327)))
 (let ((?x10318 (* l_0_9_54 l_0_9_54)))
 (let ((?x10313 (* 4.0 ?x10318)))
 (let ((?x1798 (* l_0_9_53 l_0_9_53)))
 (let ((?x10301 (* 4.0 ?x1798)))
 (let ((?x15637 (+ (+ (* (- l_0_9_10) l_0_9_10) (* 4.0 (* l_0_9_52 l_0_9_52))) ?x10301)))
 (let ((?x15653 (- (- (- (- (- (+ (+ ?x15637 ?x10313) ?x10329) ?x15641) ?x15644) ?x15647) ?x15649) ?x15652)))
 (= (- (- (- (- (- (- ?x15653 ?x15654) ?x15656) ?x15658) ?x15660) ?x15662) ?x15664) 0.0)))))))))))))))))))))
(assert
 (let ((?x15662 (* l_0_9_85 l_0_9_85)))
 (let ((?x15726 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x15660 (* l_0_9_84 l_0_9_84)))
 (let ((?x15722 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x15658 (* l_0_9_83 l_0_9_83)))
 (let ((?x15718 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x15656 (* l_0_9_82 l_0_9_82)))
 (let ((?x15714 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x14827 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x14824 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x14821 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x14818 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x14813 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x14810 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x14807 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x14804 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x15680 (- (* (* (- 2.0) l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_11) l_0_9_7))))
 (let ((?x15684 (- (- ?x15680 (* (* 2.0 l_0_9_12) l_0_9_8)) (* (* 2.0 l_0_9_13) l_0_9_9))))
 (let ((?x15688 (+ (+ ?x15684 (* 4.0 (* l_0_9_22 l_0_9_22))) (* 4.0 (* l_0_9_23 l_0_9_23)))))
 (let ((?x15692 (+ (+ ?x15688 (* 4.0 (* l_0_9_24 l_0_9_24))) (* 4.0 (* l_0_9_25 l_0_9_25)))))
 (let ((?x15698 (- (- ?x15692 (* (* 4.0 l_0_9_37) l_0_9_37)) (* (* 4.0 l_0_9_38) l_0_9_38))))
 (let ((?x15704 (- (- ?x15698 (* (* 4.0 l_0_9_39) l_0_9_39)) (* (* 4.0 l_0_9_40) l_0_9_40))))
 (let ((?x15711 (- (- (- (+ (+ (+ (+ ?x15704 ?x14804) ?x14807) ?x14810) ?x14813) ?x14818) ?x14821) ?x14824)))
 (let ((?x15724 (+ (- (+ (- (+ (- (- ?x15711 ?x14827) ?x15714) ?x15656) ?x15718) ?x15658) ?x15722) ?x15660)))
 (= (+ (- ?x15724 ?x15726) ?x15662) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x15840 (* l_0_9_90 l_0_9_90)))
 (let ((?x15838 (* l_0_9_89 l_0_9_89)))
 (let ((?x15836 (* l_0_9_88 l_0_9_88)))
 (let ((?x15834 (* l_0_9_87 l_0_9_87)))
 (let ((?x15832 (* l_0_9_86 l_0_9_86)))
 (let ((?x15726 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x15722 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x15718 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x15714 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x15826 (* (* 4.0 l_0_9_75) l_0_9_75)))
 (let ((?x15823 (* (* 4.0 l_0_9_74) l_0_9_74)))
 (let ((?x15820 (* (* 4.0 l_0_9_73) l_0_9_73)))
 (let ((?x15817 (* (* 4.0 l_0_9_72) l_0_9_72)))
 (let ((?x15814 (* (* 4.0 l_0_9_71) l_0_9_71)))
 (let ((?x15810 (* l_0_9_60 l_0_9_60)))
 (let ((?x15811 (* 4.0 ?x15810)))
 (let ((?x15807 (* l_0_9_59 l_0_9_59)))
 (let ((?x15808 (* 4.0 ?x15807)))
 (let ((?x15804 (* l_0_9_58 l_0_9_58)))
 (let ((?x15805 (* 4.0 ?x15804)))
 (let ((?x15801 (* l_0_9_57 l_0_9_57)))
 (let ((?x15802 (* 4.0 ?x15801)))
 (let ((?x15798 (* l_0_9_56 l_0_9_56)))
 (let ((?x15799 (* 4.0 ?x15798)))
 (let ((?x15772 (* l_0_9_15 l_0_9_15)))
 (let ((?x15770 (* l_0_9_14 l_0_9_14)))
 (let ((?x15768 (* l_0_9_13 l_0_9_13)))
 (let ((?x15771 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15768) ?x15770)))
 (let ((?x15779 (+ (+ (- ?x15771 ?x15772) (* (* 8.0 l_0_9_22) l_0_9_26)) (* (* 8.0 l_0_9_23) l_0_9_27))))
 (let ((?x15785 (+ (+ ?x15779 (* (* 8.0 l_0_9_24) l_0_9_28)) (* (* 8.0 l_0_9_25) l_0_9_29))))
 (let ((?x15791 (- (- ?x15785 (* (* 8.0 l_0_9_37) l_0_9_41)) (* (* 8.0 l_0_9_38) l_0_9_42))))
 (let ((?x15797 (- (- ?x15791 (* (* 8.0 l_0_9_39) l_0_9_43)) (* (* 8.0 l_0_9_40) l_0_9_44))))
 (let ((?x15818 (- (- (+ (+ (+ (+ (+ ?x15797 ?x15799) ?x15802) ?x15805) ?x15808) ?x15811) ?x15814) ?x15817)))
 (let ((?x15831 (+ (+ (+ (+ (- (- (- ?x15818 ?x15820) ?x15823) ?x15826) ?x15714) ?x15718) ?x15722) ?x15726)))
 (= (- (- (- (- (- ?x15831 ?x15832) ?x15834) ?x15836) ?x15838) ?x15840) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6756 (* l_0_9_91 l_0_9_91)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14648 (* ?x14599 l_0_9_62)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14637 (* ?x14593 l_0_9_47)))
 (let ((?x11670 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_121 l_0_9_121)) (* (* 1.0 l_0_9_16) l_0_9_16))))
 (let ((?x6859 (- (- (+ ?x11670 (* 1.0 (* l_0_9_31 l_0_9_31))) ?x14637) (* (* 1.0 l_0_9_46) l_0_9_46))))
 (= (- (+ (+ ?x6859 ?x14648) (* 1.0 (* l_0_9_61 l_0_9_61))) ?x6756) 0.0)))))))))
(assert
 (let ((?x14314 (* l_0_9_63 l_0_9_63)))
 (let ((?x14925 (* 4.0 ?x14314)))
 (let ((?x14308 (* l_0_9_62 l_0_9_62)))
 (let ((?x14918 (* 4.0 ?x14308)))
 (let ((?x15870 (- (* (* (- 2.0) l_0_9_106) l_0_9_107) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x15874 (+ (- ?x15870 (* (* 2.0 l_0_9_16) l_0_9_17)) (* (* 2.0 l_0_9_31) l_0_9_32))))
 (let ((?x15879 (- (- ?x15874 (* (* 2.0 l_0_9_46) l_0_9_47)) (* (* 4.0 l_0_9_47) l_0_9_47))))
 (let ((?x15884 (+ (- ?x15879 (* (* 4.0 l_0_9_48) l_0_9_48)) (* (* 2.0 l_0_9_61) l_0_9_62))))
 (= (- (+ (+ ?x15884 ?x14918) ?x14925) (* (* 2.0 l_0_9_91) l_0_9_92)) 0.0))))))))))
(assert
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15002 (* ?x14656 l_0_9_65)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14998 (* ?x14653 l_0_9_64)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14985 (* ?x14645 l_0_9_50)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14981 (* ?x14642 l_0_9_49)))
 (let ((?x6986 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x15897 (+ (- ?x6986 (* (* 2.0 l_0_9_16) l_0_9_19)) (* (* 2.0 l_0_9_31) l_0_9_34))))
 (let ((?x15901 (- (+ ?x15897 (* (* 6.0 l_0_9_46) l_0_9_47)) (* (* 2.0 l_0_9_46) l_0_9_49))))
 (let ((?x15907 (+ (- (- (- ?x15901 ?x14981) ?x14985) (* (* 6.0 l_0_9_61) l_0_9_62)) (* (* 2.0 l_0_9_61) l_0_9_64))))
 (= (- (+ (+ ?x15907 ?x14998) ?x15002) (* (* 2.0 l_0_9_91) l_0_9_94)) 0.0))))))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14660 (* ?x14659 l_0_9_77)))
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15274 (* ?x14656 l_0_9_72)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x15272 (* ?x14653 l_0_9_71)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x15258 (* ?x14645 l_0_9_57)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x15256 (* ?x14642 l_0_9_56)))
 (let ((?x11815 (- (* (* (- 2.0) l_0_9_101) l_0_9_91) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x7145 (+ (- ?x11815 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 8.0 l_0_9_16) l_0_9_17))))
 (let ((?x15934 (- (- ?x7145 (* (* 2.0 l_0_9_16) l_0_9_26)) (* (* 8.0 l_0_9_31) l_0_9_32))))
 (let ((?x15938 (- (+ ?x15934 (* (* 2.0 l_0_9_31) l_0_9_41)) (* (* 2.0 l_0_9_46) l_0_9_56))))
 (let ((?x15943 (+ (+ (- (- ?x15938 ?x15256) ?x15258) (* (* 2.0 l_0_9_61) l_0_9_71)) ?x15272)))
 (= (+ (+ ?x15943 ?x15274) ?x14660) 0.0)))))))))))))))))
(assert
 (let ((?x15018 (* 2.0 l_0_9_78)))
 (let ((?x15019 (* ?x15018 l_0_9_80)))
 (let ((?x15015 (* 2.0 l_0_9_77)))
 (let ((?x15016 (* ?x15015 l_0_9_79)))
 (let ((?x7238 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x7182 (- (- ?x7238 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x11926 (- (- ?x7182 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x15962 (- (- ?x11926 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x15966 (+ (- ?x15962 (* (* 2.0 l_0_9_126) l_0_9_133)) (* (* 8.0 l_0_9_17) l_0_9_19))))
 (let ((?x15970 (- (+ ?x15966 (* (* 8.0 l_0_9_18) l_0_9_20)) (* (* 2.0 l_0_9_19) l_0_9_26))))
 (let ((?x15974 (- (- ?x15970 (* (* 2.0 l_0_9_20) l_0_9_27)) (* (* 2.0 l_0_9_21) l_0_9_28))))
 (let ((?x15978 (- (- ?x15974 (* (* 8.0 l_0_9_32) l_0_9_34)) (* (* 8.0 l_0_9_33) l_0_9_35))))
 (let ((?x15982 (+ (+ ?x15978 (* (* 2.0 l_0_9_34) l_0_9_41)) (* (* 2.0 l_0_9_35) l_0_9_42))))
 (let ((?x15986 (+ (+ ?x15982 (* (* 2.0 l_0_9_36) l_0_9_43)) (* (* 6.0 l_0_9_47) l_0_9_56))))
 (let ((?x15990 (- (+ ?x15986 (* (* 6.0 l_0_9_48) l_0_9_57)) (* (* 2.0 l_0_9_49) l_0_9_56))))
 (let ((?x15994 (- (- ?x15990 (* (* 2.0 l_0_9_50) l_0_9_57)) (* (* 2.0 l_0_9_51) l_0_9_58))))
 (let ((?x15998 (- (- ?x15994 (* (* 6.0 l_0_9_62) l_0_9_71)) (* (* 6.0 l_0_9_63) l_0_9_72))))
 (let ((?x16002 (+ (+ ?x15998 (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (= (+ (+ (+ ?x16002 (* (* 2.0 l_0_9_66) l_0_9_73)) ?x15016) ?x15019) 0.0))))))))))))))))))))
(assert
 (let ((?x15018 (* 2.0 l_0_9_78)))
 (let ((?x15292 (* ?x15018 l_0_9_87)))
 (let ((?x15015 (* 2.0 l_0_9_77)))
 (let ((?x15289 (* ?x15015 l_0_9_86)))
 (let ((?x16052 (* l_0_9_135 l_0_9_135)))
 (let ((?x16050 (* l_0_9_134 l_0_9_134)))
 (let ((?x16048 (* l_0_9_133 l_0_9_133)))
 (let ((?x16046 (* l_0_9_132 l_0_9_132)))
 (let ((?x16044 (* l_0_9_131 l_0_9_131)))
 (let ((?x16042 (* l_0_9_120 l_0_9_120)))
 (let ((?x16040 (* l_0_9_119 l_0_9_119)))
 (let ((?x16038 (* l_0_9_118 l_0_9_118)))
 (let ((?x16036 (* l_0_9_117 l_0_9_117)))
 (let ((?x16034 (* l_0_9_116 l_0_9_116)))
 (let ((?x16032 (* l_0_9_105 l_0_9_105)))
 (let ((?x16030 (* l_0_9_104 l_0_9_104)))
 (let ((?x16028 (* l_0_9_103 l_0_9_103)))
 (let ((?x16029 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x16028)))
 (let ((?x16043 (- (- (- (- (- (- (- ?x16029 ?x16030) ?x16032) ?x16034) ?x16036) ?x16038) ?x16040) ?x16042)))
 (let ((?x16055 (+ (- (- (- (- (- ?x16043 ?x16044) ?x16046) ?x16048) ?x16050) ?x16052) (* (* 8.0 l_0_9_17) l_0_9_26))))
 (let ((?x16060 (- (+ ?x16055 (* (* 8.0 l_0_9_18) l_0_9_27)) (* (* 1.0 l_0_9_26) l_0_9_26))))
 (let ((?x16066 (- (- ?x16060 (* (* 1.0 l_0_9_27) l_0_9_27)) (* (* 1.0 l_0_9_28) l_0_9_28))))
 (let ((?x16072 (- (- ?x16066 (* (* 1.0 l_0_9_29) l_0_9_29)) (* (* 1.0 l_0_9_30) l_0_9_30))))
 (let ((?x16076 (- (- ?x16072 (* (* 8.0 l_0_9_32) l_0_9_41)) (* (* 8.0 l_0_9_33) l_0_9_42))))
 (let ((?x16082 (+ (+ ?x16076 (* 1.0 (* l_0_9_41 l_0_9_41))) (* 1.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x16088 (+ (+ ?x16082 (* 1.0 (* l_0_9_43 l_0_9_43))) (* 1.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x16094 (- (+ ?x16088 (* 1.0 (* l_0_9_45 l_0_9_45))) (* (* 1.0 l_0_9_56) l_0_9_56))))
 (let ((?x16100 (- (- ?x16094 (* (* 1.0 l_0_9_57) l_0_9_57)) (* (* 1.0 l_0_9_58) l_0_9_58))))
 (let ((?x16106 (- (- ?x16100 (* (* 1.0 l_0_9_59) l_0_9_59)) (* (* 1.0 l_0_9_60) l_0_9_60))))
 (let ((?x16110 (+ (+ ?x16106 (* 1.0 (* l_0_9_71 l_0_9_71))) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x16114 (+ (+ ?x16110 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (= (+ (+ (+ ?x16114 (* 1.0 (* l_0_9_75 l_0_9_75))) ?x15289) ?x15292) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x14617 (* l_0_9_61 l_0_9_61)))
 (let ((?x16162 (* 6.0 ?x14617)))
 (let ((?x6764 (* l_0_9_31 l_0_9_31)))
 (let ((?x16158 (* 12.0 ?x6764)))
 (let ((?x16161 (- (+ (* (* (- 12.0) l_0_9_16) l_0_9_16) ?x16158) (* (* 6.0 l_0_9_46) l_0_9_46))))
 (= (+ ?x16161 ?x16162) 0.0)))))))
(assert
 (let ((?x16178 (+ (* (* (- 24.0) l_0_9_16) l_0_9_17) (* (* 24.0 l_0_9_31) l_0_9_32))))
 (let ((?x16183 (+ (- ?x16178 (* (* 12.0 l_0_9_46) l_0_9_47)) (* (* 6.0 l_0_9_46) l_0_9_49))))
 (let ((?x16189 (- (- ?x16183 (* (* 4.0 l_0_9_49) l_0_9_49)) (* (* 4.0 l_0_9_50) l_0_9_50))))
 (let ((?x16195 (+ (- ?x16189 (* (* 4.0 l_0_9_51) l_0_9_51)) (* (* 12.0 l_0_9_61) l_0_9_62))))
 (let ((?x16198 (+ (- ?x16195 (* (* 6.0 l_0_9_61) l_0_9_64)) (* 4.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x16200 (+ (+ ?x16198 (* 4.0 (* l_0_9_65 l_0_9_65))) (* 4.0 (* l_0_9_66 l_0_9_66)))))
 (= ?x16200 0.0))))))))
(assert
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14648 (* ?x14599 l_0_9_62)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14637 (* ?x14593 l_0_9_47)))
 (let ((?x16232 (+ (* (* (- 24.0) l_0_9_16) l_0_9_19) (* (* 24.0 l_0_9_31) l_0_9_34))))
 (let ((?x16238 (+ (- (- (+ ?x16232 ?x14637) (* (* 12.0 l_0_9_46) l_0_9_49)) ?x14648) (* (* 12.0 l_0_9_61) l_0_9_64))))
 (= ?x16238 0.0))))))))
(assert
 (let ((?x16253 (+ (* (* (- 24.0) l_0_9_16) l_0_9_22) (* (* 24.0 l_0_9_31) l_0_9_37))))
 (let ((?x16257 (+ (- ?x16253 (* (* 12.0 l_0_9_46) l_0_9_52)) (* (* 12.0 l_0_9_61) l_0_9_67))))
 (= ?x16257 0.0))))
(assert
 (let ((?x16272 (+ (* (* (- 24.0) l_0_9_16) l_0_9_26) (* (* 24.0 l_0_9_31) l_0_9_41))))
 (let ((?x16276 (+ (- ?x16272 (* (* 12.0 l_0_9_46) l_0_9_56)) (* (* 12.0 l_0_9_61) l_0_9_71))))
 (= ?x16276 0.0))))
(assert
 (let ((?x14887 (* (* 4.0 l_0_9_63) l_0_9_63)))
 (let ((?x14882 (* (* 4.0 l_0_9_62) l_0_9_62)))
 (let ((?x14367 (* l_0_9_48 l_0_9_48)))
 (let ((?x14877 (* 4.0 ?x14367)))
 (let ((?x14361 (* l_0_9_47 l_0_9_47)))
 (let ((?x14873 (* 4.0 ?x14361)))
 (let ((?x16291 (- (* (* (- 24.0) l_0_9_17) l_0_9_19) (* (* 24.0 l_0_9_18) l_0_9_20))))
 (let ((?x16295 (+ (+ ?x16291 (* (* 24.0 l_0_9_32) l_0_9_34)) (* (* 24.0 l_0_9_33) l_0_9_35))))
 (let ((?x16300 (- (+ (- ?x16295 (* (* 12.0 l_0_9_47) l_0_9_49)) ?x14873) (* (* 12.0 l_0_9_48) l_0_9_50))))
 (let ((?x16305 (+ (+ (+ ?x16300 ?x14877) (* 3.0 (* l_0_9_49 l_0_9_49))) (* 3.0 (* l_0_9_50 l_0_9_50)))))
 (let ((?x16309 (+ (+ ?x16305 (* 3.0 (* l_0_9_51 l_0_9_51))) (* (* 12.0 l_0_9_62) l_0_9_64))))
 (let ((?x16316 (- (- (+ (- ?x16309 ?x14882) (* (* 12.0 l_0_9_63) l_0_9_65)) ?x14887) (* (* 3.0 l_0_9_64) l_0_9_64))))
 (let ((?x16322 (- (- ?x16316 (* (* 3.0 l_0_9_65) l_0_9_65)) (* (* 3.0 l_0_9_66) l_0_9_66))))
 (= ?x16322 0.0)))))))))))))))
(assert
 (let ((?x15420 (* l_0_9_81 l_0_9_81)))
 (let ((?x15418 (* l_0_9_80 l_0_9_80)))
 (let ((?x15416 (* l_0_9_79 l_0_9_79)))
 (let ((?x9933 (* l_0_9_21 l_0_9_21)))
 (let ((?x16360 (* 4.0 ?x9933)))
 (let ((?x4211 (* l_0_9_20 l_0_9_20)))
 (let ((?x16358 (* 4.0 ?x4211)))
 (let ((?x14353 (* l_0_9_19 l_0_9_19)))
 (let ((?x16356 (* 4.0 ?x14353)))
 (let ((?x16355 (- (* (* (- 24.0) l_0_9_17) l_0_9_26) (* (* 24.0 l_0_9_18) l_0_9_27))))
 (let ((?x16363 (+ (+ (+ (+ ?x16355 ?x16356) ?x16358) ?x16360) (* (* 24.0 l_0_9_32) l_0_9_41))))
 (let ((?x16368 (- (+ ?x16363 (* (* 24.0 l_0_9_33) l_0_9_42)) (* (* 4.0 l_0_9_34) l_0_9_34))))
 (let ((?x16374 (- (- ?x16368 (* (* 4.0 l_0_9_35) l_0_9_35)) (* (* 4.0 l_0_9_36) l_0_9_36))))
 (let ((?x16378 (- (- ?x16374 (* (* 12.0 l_0_9_47) l_0_9_56)) (* (* 12.0 l_0_9_48) l_0_9_57))))
 (let ((?x16382 (+ (+ ?x16378 (* (* 6.0 l_0_9_49) l_0_9_56)) (* (* 6.0 l_0_9_50) l_0_9_57))))
 (let ((?x16386 (+ (+ ?x16382 (* (* 6.0 l_0_9_51) l_0_9_58)) (* (* 12.0 l_0_9_62) l_0_9_71))))
 (let ((?x16390 (- (+ ?x16386 (* (* 12.0 l_0_9_63) l_0_9_72)) (* (* 6.0 l_0_9_64) l_0_9_71))))
 (let ((?x16394 (- (- ?x16390 (* (* 6.0 l_0_9_65) l_0_9_72)) (* (* 6.0 l_0_9_66) l_0_9_73))))
 (= (+ (+ (+ ?x16394 ?x15416) ?x15418) ?x15420) 0.0))))))))))))))))))))
(assert
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15002 (* ?x14656 l_0_9_65)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14998 (* ?x14653 l_0_9_64)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14985 (* ?x14645 l_0_9_50)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14981 (* ?x14642 l_0_9_49)))
 (let ((?x16430 (- (* (* (- 12.0) l_0_9_19) l_0_9_19) (* (* 12.0 l_0_9_20) l_0_9_20))))
 (let ((?x16435 (+ (- ?x16430 (* (* 12.0 l_0_9_21) l_0_9_21)) (* 12.0 (* l_0_9_34 l_0_9_34)))))
 (let ((?x16439 (+ (+ ?x16435 (* 12.0 (* l_0_9_35 l_0_9_35))) (* 12.0 (* l_0_9_36 l_0_9_36)))))
 (let ((?x16445 (- (- (+ (+ ?x16439 ?x14981) ?x14985) (* (* 6.0 l_0_9_49) l_0_9_49)) (* (* 6.0 l_0_9_50) l_0_9_50))))
 (let ((?x16451 (+ (- (- (- ?x16445 (* (* 6.0 l_0_9_51) l_0_9_51)) ?x14998) ?x15002) (* 6.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x16455 (+ (+ ?x16451 (* 6.0 (* l_0_9_65 l_0_9_65))) (* 6.0 (* l_0_9_66 l_0_9_66)))))
 (= ?x16455 0.0))))))))))))))))
(assert
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x14657 (* ?x14656 l_0_9_68)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x14654 (* ?x14653 l_0_9_67)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x14646 (* ?x14645 l_0_9_53)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x14643 (* ?x14642 l_0_9_52)))
 (let ((?x16499 (- (* (* (- 24.0) l_0_9_19) l_0_9_22) (* (* 24.0 l_0_9_20) l_0_9_23))))
 (let ((?x16505 (+ (- ?x16499 (* (* 24.0 l_0_9_21) l_0_9_24)) (* (* 24.0 l_0_9_34) l_0_9_37))))
 (let ((?x16511 (+ (+ ?x16505 (* (* 24.0 l_0_9_35) l_0_9_38)) (* (* 24.0 l_0_9_36) l_0_9_39))))
 (let ((?x16519 (- (- (+ (+ ?x16511 ?x14643) ?x14646) (* (* 12.0 l_0_9_49) l_0_9_52)) (* (* 12.0 l_0_9_50) l_0_9_53))))
 (let ((?x16527 (+ (- (- (- ?x16519 (* (* 12.0 l_0_9_51) l_0_9_54)) ?x14654) ?x14657) (* (* 12.0 l_0_9_64) l_0_9_67))))
 (let ((?x16533 (+ (+ ?x16527 (* (* 12.0 l_0_9_65) l_0_9_68)) (* (* 12.0 l_0_9_66) l_0_9_69))))
 (= ?x16533 0.0))))))))))))))))
(assert
 (let ((?x14656 (* 8.0 l_0_9_63)))
 (let ((?x15274 (* ?x14656 l_0_9_72)))
 (let ((?x14653 (* 8.0 l_0_9_62)))
 (let ((?x15272 (* ?x14653 l_0_9_71)))
 (let ((?x14645 (* 8.0 l_0_9_48)))
 (let ((?x15258 (* ?x14645 l_0_9_57)))
 (let ((?x14642 (* 8.0 l_0_9_47)))
 (let ((?x15256 (* ?x14642 l_0_9_56)))
 (let ((?x16562 (- (* (* (- 24.0) l_0_9_19) l_0_9_26) (* (* 24.0 l_0_9_20) l_0_9_27))))
 (let ((?x16575 (+ (- ?x16562 (* (* 24.0 l_0_9_21) l_0_9_28)) (* (* 24.0 l_0_9_34) l_0_9_41))))
 (let ((?x16579 (+ (+ ?x16575 (* (* 24.0 l_0_9_35) l_0_9_42)) (* (* 24.0 l_0_9_36) l_0_9_43))))
 (let ((?x16585 (- (- (+ (+ ?x16579 ?x15256) ?x15258) (* (* 12.0 l_0_9_49) l_0_9_56)) (* (* 12.0 l_0_9_50) l_0_9_57))))
 (let ((?x16591 (+ (- (- (- ?x16585 (* (* 12.0 l_0_9_51) l_0_9_58)) ?x15272) ?x15274) (* (* 12.0 l_0_9_64) l_0_9_71))))
 (let ((?x16595 (+ (+ ?x16591 (* (* 12.0 l_0_9_65) l_0_9_72)) (* (* 12.0 l_0_9_66) l_0_9_73))))
 (= ?x16595 0.0))))))))))))))))
(assert
 (let ((?x16624 (- (* (* (- 12.0) l_0_9_22) l_0_9_22) (* (* 12.0 l_0_9_23) l_0_9_23))))
 (let ((?x16630 (- (- ?x16624 (* (* 12.0 l_0_9_24) l_0_9_24)) (* (* 12.0 l_0_9_25) l_0_9_25))))
 (let ((?x16634 (+ (+ ?x16630 (* 12.0 (* l_0_9_37 l_0_9_37))) (* 12.0 (* l_0_9_38 l_0_9_38)))))
 (let ((?x16638 (+ (+ ?x16634 (* 12.0 (* l_0_9_39 l_0_9_39))) (* 12.0 (* l_0_9_40 l_0_9_40)))))
 (let ((?x16642 (- (- ?x16638 (* (* 6.0 l_0_9_52) l_0_9_52)) (* (* 6.0 l_0_9_53) l_0_9_53))))
 (let ((?x16646 (- (- ?x16642 (* (* 6.0 l_0_9_54) l_0_9_54)) (* (* 6.0 l_0_9_55) l_0_9_55))))
 (let ((?x16650 (+ (+ ?x16646 (* 6.0 (* l_0_9_67 l_0_9_67))) (* 6.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x16654 (+ (+ ?x16650 (* 6.0 (* l_0_9_69 l_0_9_69))) (* 6.0 (* l_0_9_70 l_0_9_70)))))
 (= ?x16654 0.0))))))))))
(assert
 (let ((?x16693 (- (* (* (- 24.0) l_0_9_22) l_0_9_26) (* (* 24.0 l_0_9_23) l_0_9_27))))
 (let ((?x16699 (- (- ?x16693 (* (* 24.0 l_0_9_24) l_0_9_28)) (* (* 24.0 l_0_9_25) l_0_9_29))))
 (let ((?x16705 (+ (+ ?x16699 (* (* 24.0 l_0_9_37) l_0_9_41)) (* (* 24.0 l_0_9_38) l_0_9_42))))
 (let ((?x16711 (+ (+ ?x16705 (* (* 24.0 l_0_9_39) l_0_9_43)) (* (* 24.0 l_0_9_40) l_0_9_44))))
 (let ((?x16717 (- (- ?x16711 (* (* 12.0 l_0_9_52) l_0_9_56)) (* (* 12.0 l_0_9_53) l_0_9_57))))
 (let ((?x16723 (- (- ?x16717 (* (* 12.0 l_0_9_54) l_0_9_58)) (* (* 12.0 l_0_9_55) l_0_9_59))))
 (let ((?x16729 (+ (+ ?x16723 (* (* 12.0 l_0_9_67) l_0_9_71)) (* (* 12.0 l_0_9_68) l_0_9_72))))
 (let ((?x16735 (+ (+ ?x16729 (* (* 12.0 l_0_9_69) l_0_9_73)) (* (* 12.0 l_0_9_70) l_0_9_74))))
 (= ?x16735 0.0))))))))))
(assert
 (let ((?x11695 (* l_0_9_75 l_0_9_75)))
 (let ((?x16813 (* 6.0 ?x11695)))
 (let ((?x6743 (* l_0_9_74 l_0_9_74)))
 (let ((?x16811 (* 6.0 ?x6743)))
 (let ((?x11687 (* l_0_9_73 l_0_9_73)))
 (let ((?x16809 (* 6.0 ?x11687)))
 (let ((?x11682 (* l_0_9_72 l_0_9_72)))
 (let ((?x16807 (* 6.0 ?x11682)))
 (let ((?x6698 (* l_0_9_71 l_0_9_71)))
 (let ((?x16805 (* 6.0 ?x6698)))
 (let ((?x16089 (* l_0_9_45 l_0_9_45)))
 (let ((?x16788 (* 12.0 ?x16089)))
 (let ((?x16086 (* l_0_9_44 l_0_9_44)))
 (let ((?x16786 (* 12.0 ?x16086)))
 (let ((?x16083 (* l_0_9_43 l_0_9_43)))
 (let ((?x16784 (* 12.0 ?x16083)))
 (let ((?x16080 (* l_0_9_42 l_0_9_42)))
 (let ((?x16782 (* 12.0 ?x16080)))
 (let ((?x16077 (* l_0_9_41 l_0_9_41)))
 (let ((?x16780 (* 12.0 ?x16077)))
 (let ((?x16770 (- (* (* (- 12.0) l_0_9_26) l_0_9_26) (* (* 12.0 l_0_9_27) l_0_9_27))))
 (let ((?x16776 (- (- ?x16770 (* (* 12.0 l_0_9_28) l_0_9_28)) (* (* 12.0 l_0_9_29) l_0_9_29))))
 (let ((?x16785 (+ (+ (+ (- ?x16776 (* (* 12.0 l_0_9_30) l_0_9_30)) ?x16780) ?x16782) ?x16784)))
 (let ((?x16795 (- (- (+ (+ ?x16785 ?x16786) ?x16788) (* (* 6.0 l_0_9_56) l_0_9_56)) (* (* 6.0 l_0_9_57) l_0_9_57))))
 (let ((?x16801 (- (- ?x16795 (* (* 6.0 l_0_9_58) l_0_9_58)) (* (* 6.0 l_0_9_59) l_0_9_59))))
 (let ((?x16810 (+ (+ (+ (- ?x16801 (* (* 6.0 l_0_9_60) l_0_9_60)) ?x16805) ?x16807) ?x16809)))
 (= (+ (+ ?x16810 ?x16811) ?x16813) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x14605 (* l_0_9_76 l_0_9_76)))
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14815 (* ?x14599 l_0_9_71)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14801 (* ?x14593 l_0_9_56)))
 (let ((?x15865 (* l_0_9_16 l_0_9_16)))
 (let ((?x1354 (* 4.0 ?x15865)))
 (let ((?x8159 (+ (+ (- (- ?x1354 (* (* 4.0 l_0_9_31) l_0_9_31)) ?x14801) ?x14815) ?x14605)))
 (= ?x8159 0.0))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14715 (* ?x14659 l_0_9_79)))
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x15551 (* ?x14712 l_0_9_73)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x15549 (* ?x14709 l_0_9_72)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x15547 (* ?x14706 l_0_9_71)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x15533 (* ?x14698 l_0_9_58)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x15531 (* ?x14695 l_0_9_57)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x15529 (* ?x14692 l_0_9_56)))
 (let ((?x12697 (- (* (* 8.0 l_0_9_16) l_0_9_19) (* (* 8.0 l_0_9_31) l_0_9_34))))
 (let ((?x12567 (- (- (- (+ ?x12697 (* (* 6.0 l_0_9_46) l_0_9_56)) ?x15529) ?x15531) ?x15533)))
 (let ((?x7947 (+ (+ (+ (- ?x12567 (* (* 6.0 l_0_9_61) l_0_9_71)) ?x15547) ?x15549) ?x15551)))
 (= (+ ?x7947 ?x14715) 0.0)))))))))))))))))))
(assert
 (let ((?x14659 (* 2.0 l_0_9_76)))
 (let ((?x14830 (* ?x14659 l_0_9_86)))
 (let ((?x11695 (* l_0_9_75 l_0_9_75)))
 (let ((?x15857 (* 4.0 ?x11695)))
 (let ((?x6743 (* l_0_9_74 l_0_9_74)))
 (let ((?x11694 (* 4.0 ?x6743)))
 (let ((?x11687 (* l_0_9_73 l_0_9_73)))
 (let ((?x11689 (* 4.0 ?x11687)))
 (let ((?x11682 (* l_0_9_72 l_0_9_72)))
 (let ((?x6708 (* 4.0 ?x11682)))
 (let ((?x6698 (* l_0_9_71 l_0_9_71)))
 (let ((?x11678 (* 4.0 ?x6698)))
 (let ((?x12541 (- (* (* 8.0 l_0_9_16) l_0_9_26) (* (* 8.0 l_0_9_31) l_0_9_41))))
 (let ((?x8110 (- (- ?x12541 (* (* 4.0 l_0_9_56) l_0_9_56)) (* (* 4.0 l_0_9_57) l_0_9_57))))
 (let ((?x16829 (- (- ?x8110 (* (* 4.0 l_0_9_58) l_0_9_58)) (* (* 4.0 l_0_9_59) l_0_9_59))))
 (let ((?x16835 (+ (+ (+ (- ?x16829 (* (* 4.0 l_0_9_60) l_0_9_60)) ?x11678) ?x6708) ?x11689)))
 (= (+ (+ (+ ?x16835 ?x11694) ?x15857) ?x14830) 0.0))))))))))))))))))
(assert
 (let ((?x15473 (* 2.0 l_0_9_81)))
 (let ((?x15572 (* ?x15473 l_0_9_88)))
 (let ((?x15470 (* 2.0 l_0_9_80)))
 (let ((?x15569 (* ?x15470 l_0_9_87)))
 (let ((?x15467 (* 2.0 l_0_9_79)))
 (let ((?x15566 (* ?x15467 l_0_9_86)))
 (let ((?x15810 (* l_0_9_60 l_0_9_60)))
 (let ((?x16861 (* 3.0 ?x15810)))
 (let ((?x15807 (* l_0_9_59 l_0_9_59)))
 (let ((?x16859 (* 3.0 ?x15807)))
 (let ((?x15804 (* l_0_9_58 l_0_9_58)))
 (let ((?x16857 (* 3.0 ?x15804)))
 (let ((?x15801 (* l_0_9_57 l_0_9_57)))
 (let ((?x8274 (* 3.0 ?x15801)))
 (let ((?x15798 (* l_0_9_56 l_0_9_56)))
 (let ((?x8337 (* 3.0 ?x15798)))
 (let ((?x8280 (+ (* (* 8.0 l_0_9_19) l_0_9_26) (* (* 8.0 l_0_9_20) l_0_9_27))))
 (let ((?x8324 (- (+ ?x8280 (* (* 8.0 l_0_9_21) l_0_9_28)) (* (* 8.0 l_0_9_34) l_0_9_41))))
 (let ((?x8340 (- (- ?x8324 (* (* 8.0 l_0_9_35) l_0_9_42)) (* (* 8.0 l_0_9_36) l_0_9_43))))
 (let ((?x16865 (- (+ (+ (+ (+ (+ ?x8340 ?x8337) ?x8274) ?x16857) ?x16859) ?x16861) (* (* 3.0 l_0_9_71) l_0_9_71))))
 (let ((?x16871 (- (- ?x16865 (* (* 3.0 l_0_9_72) l_0_9_72)) (* (* 3.0 l_0_9_73) l_0_9_73))))
 (let ((?x16877 (- (- ?x16871 (* (* 3.0 l_0_9_74) l_0_9_74)) (* (* 3.0 l_0_9_75) l_0_9_75))))
 (= (+ (+ (+ ?x16877 ?x15566) ?x15569) ?x15572) 0.0))))))))))))))))))))))))
(assert
 (let ((?x15840 (* l_0_9_90 l_0_9_90)))
 (let ((?x15838 (* l_0_9_89 l_0_9_89)))
 (let ((?x15836 (* l_0_9_88 l_0_9_88)))
 (let ((?x15834 (* l_0_9_87 l_0_9_87)))
 (let ((?x15832 (* l_0_9_86 l_0_9_86)))
 (let ((?x12295 (* l_0_9_30 l_0_9_30)))
 (let ((?x16892 (* 4.0 ?x12295)))
 (let ((?x12291 (* l_0_9_29 l_0_9_29)))
 (let ((?x12802 (* 4.0 ?x12291)))
 (let ((?x16144 (* l_0_9_28 l_0_9_28)))
 (let ((?x6746 (* 4.0 ?x16144)))
 (let ((?x16140 (* l_0_9_27 l_0_9_27)))
 (let ((?x6752 (* 4.0 ?x16140)))
 (let ((?x7697 (* l_0_9_26 l_0_9_26)))
 (let ((?x1658 (* 4.0 ?x7697)))
 (let ((?x16896 (- (+ (+ (+ (+ ?x1658 ?x6752) ?x6746) ?x12802) ?x16892) (* (* 4.0 l_0_9_41) l_0_9_41))))
 (let ((?x16902 (- (- ?x16896 (* (* 4.0 l_0_9_42) l_0_9_42)) (* (* 4.0 l_0_9_43) l_0_9_43))))
 (let ((?x16908 (- (- ?x16902 (* (* 4.0 l_0_9_44) l_0_9_44)) (* (* 4.0 l_0_9_45) l_0_9_45))))
 (= (+ (+ (+ (+ (+ ?x16908 ?x15832) ?x15834) ?x15836) ?x15838) ?x15840) 0.0))))))))))))))))))))
(assert
 (let ((?x14603 (* (* 4.0 l_0_9_61) l_0_9_61)))
 (let ((?x14596 (* l_0_9_46 l_0_9_46)))
 (let ((?x14597 (* 4.0 ?x14596)))
 (= (- ?x14597 ?x14603) 0.0)))))
(assert
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14701 (* ?x14599 l_0_9_64)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x4948 (* ?x14593 l_0_9_49)))
 (= (- ?x4948 ?x14701) 0.0))))))
(assert
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14600 (* ?x14599 l_0_9_67)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14594 (* ?x14593 l_0_9_52)))
 (= (- ?x14594 ?x14600) 0.0))))))
(assert
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14815 (* ?x14599 l_0_9_71)))
 (let ((?x14593 (* 8.0 l_0_9_46)))
 (let ((?x14801 (* ?x14593 l_0_9_56)))
 (= (- ?x14801 ?x14815) 0.0))))))
(assert
 (let ((?x15414 (* (* 4.0 l_0_9_66) l_0_9_66)))
 (let ((?x15408 (* (* 4.0 l_0_9_65) l_0_9_65)))
 (let ((?x15402 (* (* 4.0 l_0_9_64) l_0_9_64)))
 (let ((?x4303 (* l_0_9_51 l_0_9_51)))
 (let ((?x15388 (* 4.0 ?x4303)))
 (let ((?x4298 (* l_0_9_50 l_0_9_50)))
 (let ((?x15383 (* 4.0 ?x4298)))
 (let ((?x4282 (* l_0_9_49 l_0_9_49)))
 (let ((?x15376 (* 4.0 ?x4282)))
 (= (- (- (- (+ (+ ?x15376 ?x15383) ?x15388) ?x15402) ?x15408) ?x15414) 0.0)))))))))))
(assert
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x14713 (* ?x14712 l_0_9_69)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x14710 (* ?x14709 l_0_9_68)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x14707 (* ?x14706 l_0_9_67)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x14699 (* ?x14698 l_0_9_54)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x14696 (* ?x14695 l_0_9_53)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x14693 (* ?x14692 l_0_9_52)))
 (= (- (- (- (+ (+ ?x14693 ?x14696) ?x14699) ?x14707) ?x14710) ?x14713) 0.0))))))))))))))
(assert
 (let ((?x14712 (* 8.0 l_0_9_66)))
 (let ((?x15551 (* ?x14712 l_0_9_73)))
 (let ((?x14709 (* 8.0 l_0_9_65)))
 (let ((?x15549 (* ?x14709 l_0_9_72)))
 (let ((?x14706 (* 8.0 l_0_9_64)))
 (let ((?x15547 (* ?x14706 l_0_9_71)))
 (let ((?x14698 (* 8.0 l_0_9_51)))
 (let ((?x15533 (* ?x14698 l_0_9_58)))
 (let ((?x14695 (* 8.0 l_0_9_50)))
 (let ((?x15531 (* ?x14695 l_0_9_57)))
 (let ((?x14692 (* 8.0 l_0_9_49)))
 (let ((?x15529 (* ?x14692 l_0_9_56)))
 (= (- (- (- (+ (+ ?x15529 ?x15531) ?x15533) ?x15547) ?x15549) ?x15551) 0.0))))))))))))))
(assert
 (let ((?x15652 (* (* 4.0 l_0_9_70) l_0_9_70)))
 (let ((?x15647 (* (* 4.0 l_0_9_69) l_0_9_69)))
 (let ((?x15644 (* (* 4.0 l_0_9_68) l_0_9_68)))
 (let ((?x15641 (* (* 4.0 l_0_9_67) l_0_9_67)))
 (let ((?x10327 (* l_0_9_55 l_0_9_55)))
 (let ((?x10329 (* 4.0 ?x10327)))
 (let ((?x10318 (* l_0_9_54 l_0_9_54)))
 (let ((?x10313 (* 4.0 ?x10318)))
 (let ((?x1798 (* l_0_9_53 l_0_9_53)))
 (let ((?x10301 (* 4.0 ?x1798)))
 (let ((?x14773 (* l_0_9_52 l_0_9_52)))
 (let ((?x14774 (* 4.0 ?x14773)))
 (let ((?x16986 (- (- (- (- (+ (+ (+ ?x14774 ?x10301) ?x10313) ?x10329) ?x15641) ?x15644) ?x15647) ?x15652)))
 (= ?x16986 0.0)))))))))))))))
(assert
 (let ((?x14827 (* (* 8.0 l_0_9_70) l_0_9_74)))
 (let ((?x14824 (* (* 8.0 l_0_9_69) l_0_9_73)))
 (let ((?x14821 (* (* 8.0 l_0_9_68) l_0_9_72)))
 (let ((?x14818 (* (* 8.0 l_0_9_67) l_0_9_71)))
 (let ((?x14813 (* (* 8.0 l_0_9_55) l_0_9_59)))
 (let ((?x14810 (* (* 8.0 l_0_9_54) l_0_9_58)))
 (let ((?x14807 (* (* 8.0 l_0_9_53) l_0_9_57)))
 (let ((?x14804 (* (* 8.0 l_0_9_52) l_0_9_56)))
 (let ((?x17000 (- (- (- (- (+ (+ (+ ?x14804 ?x14807) ?x14810) ?x14813) ?x14818) ?x14821) ?x14824) ?x14827)))
 (= ?x17000 0.0)))))))))))
(assert
 (let ((?x15826 (* (* 4.0 l_0_9_75) l_0_9_75)))
 (let ((?x15823 (* (* 4.0 l_0_9_74) l_0_9_74)))
 (let ((?x15820 (* (* 4.0 l_0_9_73) l_0_9_73)))
 (let ((?x15817 (* (* 4.0 l_0_9_72) l_0_9_72)))
 (let ((?x15814 (* (* 4.0 l_0_9_71) l_0_9_71)))
 (let ((?x15810 (* l_0_9_60 l_0_9_60)))
 (let ((?x15811 (* 4.0 ?x15810)))
 (let ((?x15807 (* l_0_9_59 l_0_9_59)))
 (let ((?x15808 (* 4.0 ?x15807)))
 (let ((?x15804 (* l_0_9_58 l_0_9_58)))
 (let ((?x15805 (* 4.0 ?x15804)))
 (let ((?x15801 (* l_0_9_57 l_0_9_57)))
 (let ((?x15802 (* 4.0 ?x15801)))
 (let ((?x15798 (* l_0_9_56 l_0_9_56)))
 (let ((?x15799 (* 4.0 ?x15798)))
 (let ((?x17019 (- (- (- (+ (+ (+ (+ ?x15799 ?x15802) ?x15805) ?x15808) ?x15811) ?x15814) ?x15817) ?x15820)))
 (= (- (- ?x17019 ?x15823) ?x15826) 0.0))))))))))))))))))
(assert
 (let ((?x14599 (* 8.0 l_0_9_61)))
 (let ((?x14701 (* ?x14599 l_0_9_64)))
 (let ((?x14596 (* l_0_9_46 l_0_9_46)))
 (let ((?x17024 (* 3.0 ?x14596)))
 (let ((?x17029 (- (+ (+ (* (* (- 8.0) l_0_9_46) l_0_9_49) ?x17024) ?x14701) (* (* 3.0 l_0_9_61) l_0_9_61))))
 (= ?x17029 0.0)))))))
(assert
 (let ((?x17040 (+ (* (* (- 4.0) l_0_9_46) l_0_9_46) (* 4.0 (* l_0_9_61 l_0_9_61)))))
 (= ?x17040 0.0)))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (let ((?x17123 (* l_0_10_93 l_0_10_93)))
 (let ((?x17121 (* l_0_10_92 l_0_10_92)))
 (let ((?x17095 (* l_0_10_138 l_0_10_138)))
 (let ((?x17093 (* l_0_10_137 l_0_10_137)))
 (let ((?x17091 (* l_0_10_123 l_0_10_123)))
 (let ((?x17089 (* l_0_10_122 l_0_10_122)))
 (let ((?x17087 (* l_0_10_108 l_0_10_108)))
 (let ((?x17090 (- (- (- (* (- 4.0) _a_0_) (* l_0_10_107 l_0_10_107)) ?x17087) ?x17089)))
 (let ((?x17099 (- (- (- (- ?x17090 ?x17091) ?x17093) ?x17095) (* (* 1.0 l_0_10_17) l_0_10_17))))
 (let ((?x17105 (+ (- ?x17099 (* (* 1.0 l_0_10_18) l_0_10_18)) (* 1.0 (* l_0_10_32 l_0_10_32)))))
 (let ((?x17111 (- (+ ?x17105 (* 1.0 (* l_0_10_33 l_0_10_33))) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (let ((?x17117 (+ (- ?x17111 (* (* 1.0 l_0_10_48) l_0_10_48)) (* 1.0 (* l_0_10_62 l_0_10_62)))))
 (= (- (- (+ ?x17117 (* 1.0 (* l_0_10_63 l_0_10_63))) ?x17121) ?x17123) 0.0))))))))))))))
(assert
 (let ((?x17195 (* (* 4.0 l_0_10_63) l_0_10_63)))
 (let ((?x17189 (* (* 4.0 l_0_10_62) l_0_10_62)))
 (let ((?x17182 (* l_0_10_51 l_0_10_51)))
 (let ((?x17183 (* 3.0 ?x17182)))
 (let ((?x17179 (* l_0_10_50 l_0_10_50)))
 (let ((?x17180 (* 3.0 ?x17179)))
 (let ((?x17176 (* l_0_10_49 l_0_10_49)))
 (let ((?x17177 (* 3.0 ?x17176)))
 (let ((?x17141 (* l_0_10_48 l_0_10_48)))
 (let ((?x17174 (* 4.0 ?x17141)))
 (let ((?x17137 (* l_0_10_47 l_0_10_47)))
 (let ((?x17169 (* 4.0 ?x17137)))
 (let ((?x17159 (- (* (* (- 24.0) l_0_10_17) l_0_10_19) (* (* 24.0 l_0_10_18) l_0_10_20))))
 (let ((?x17165 (+ (+ ?x17159 (* (* 24.0 l_0_10_32) l_0_10_34)) (* (* 24.0 l_0_10_33) l_0_10_35))))
 (let ((?x17173 (- (+ (- ?x17165 (* (* 12.0 l_0_10_47) l_0_10_49)) ?x17169) (* (* 12.0 l_0_10_48) l_0_10_50))))
 (let ((?x17187 (+ (+ (+ (+ (+ ?x17173 ?x17174) ?x17177) ?x17180) ?x17183) (* (* 12.0 l_0_10_62) l_0_10_64))))
 (let ((?x17199 (- (- (+ (- ?x17187 ?x17189) (* (* 12.0 l_0_10_63) l_0_10_65)) ?x17195) (* (* 3.0 l_0_10_64) l_0_10_64))))
 (let ((?x17205 (- (- ?x17199 (* (* 3.0 l_0_10_65) l_0_10_65)) (* (* 3.0 l_0_10_66) l_0_10_66))))
 (= (- ?x17205 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x17309 (* l_0_10_96 l_0_10_96)))
 (let ((?x17307 (* l_0_10_95 l_0_10_95)))
 (let ((?x17305 (* l_0_10_94 l_0_10_94)))
 (let ((?x17240 (* l_0_10_141 l_0_10_141)))
 (let ((?x17238 (* l_0_10_140 l_0_10_140)))
 (let ((?x17236 (* l_0_10_139 l_0_10_139)))
 (let ((?x17234 (* l_0_10_126 l_0_10_126)))
 (let ((?x17232 (* l_0_10_125 l_0_10_125)))
 (let ((?x17230 (* l_0_10_124 l_0_10_124)))
 (let ((?x17228 (* l_0_10_111 l_0_10_111)))
 (let ((?x17229 (- (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_110 l_0_10_110)) ?x17228)))
 (let ((?x17244 (- (- (- (- (- (- (- ?x17229 ?x17230) ?x17232) ?x17234) ?x17236) ?x17238) ?x17240) (* (* 12.0 l_0_10_17) l_0_10_17))))
 (let ((?x17250 (- (- ?x17244 (* (* 12.0 l_0_10_18) l_0_10_18)) (* (* 1.0 l_0_10_19) l_0_10_19))))
 (let ((?x17256 (- (- ?x17250 (* (* 1.0 l_0_10_20) l_0_10_20)) (* (* 1.0 l_0_10_21) l_0_10_21))))
 (let ((?x17260 (+ (+ ?x17256 (* 12.0 (* l_0_10_32 l_0_10_32))) (* 12.0 (* l_0_10_33 l_0_10_33)))))
 (let ((?x17266 (+ (+ ?x17260 (* 1.0 (* l_0_10_34 l_0_10_34))) (* 1.0 (* l_0_10_35 l_0_10_35)))))
 (let ((?x17272 (+ (+ ?x17266 (* 1.0 (* l_0_10_36 l_0_10_36))) (* (* 6.0 l_0_10_47) l_0_10_49))))
 (let ((?x17277 (+ (- ?x17272 (* (* 6.0 l_0_10_47) l_0_10_47)) (* (* 6.0 l_0_10_48) l_0_10_50))))
 (let ((?x17282 (- (- ?x17277 (* (* 6.0 l_0_10_48) l_0_10_48)) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x17288 (- (- ?x17282 (* (* 1.0 l_0_10_50) l_0_10_50)) (* (* 1.0 l_0_10_51) l_0_10_51))))
 (let ((?x17293 (+ (- ?x17288 (* (* 6.0 l_0_10_62) l_0_10_64)) (* 6.0 (* l_0_10_62 l_0_10_62)))))
 (let ((?x17298 (+ (- ?x17293 (* (* 6.0 l_0_10_63) l_0_10_65)) (* 6.0 (* l_0_10_63 l_0_10_63)))))
 (let ((?x17302 (+ (+ ?x17298 (* 1.0 (* l_0_10_64 l_0_10_64))) (* 1.0 (* l_0_10_65 l_0_10_65)))))
 (let ((?x17310 (- (- (- (+ ?x17302 (* 1.0 (* l_0_10_66 l_0_10_66))) ?x17305) ?x17307) ?x17309)))
 (= (- ?x17310 6.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x17141 (* l_0_10_48 l_0_10_48)))
 (let ((?x17398 (* 3.0 ?x17141)))
 (let ((?x17137 (* l_0_10_47 l_0_10_47)))
 (let ((?x17393 (* 3.0 ?x17137)))
 (let ((?x17365 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x17371 (- (- ?x17365 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x17377 (- (- ?x17371 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x17383 (- (- ?x17377 (* (* 2.0 l_0_10_17) l_0_10_19)) (* (* 2.0 l_0_10_18) l_0_10_20))))
 (let ((?x17389 (+ (+ ?x17383 (* (* 2.0 l_0_10_32) l_0_10_34)) (* (* 2.0 l_0_10_33) l_0_10_35))))
 (let ((?x17397 (- (+ (- ?x17389 (* (* 2.0 l_0_10_47) l_0_10_49)) ?x17393) (* (* 2.0 l_0_10_48) l_0_10_50))))
 (let ((?x17405 (- (+ (+ ?x17397 ?x17398) (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 3.0 l_0_10_62) l_0_10_62))))
 (let ((?x17411 (- (+ ?x17405 (* (* 2.0 l_0_10_63) l_0_10_65)) (* (* 3.0 l_0_10_63) l_0_10_63))))
 (let ((?x17417 (- (- ?x17411 (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= (- ?x17417 3.0) 0.0)))))))))))))))
(assert
 (let ((?x17500 (* l_0_10_78 l_0_10_78)))
 (let ((?x17498 (* l_0_10_77 l_0_10_77)))
 (let ((?x17458 (- (- (* (- 4.0) _a_1_) (* (* 2.0 l_0_10_101) l_0_10_92)) (* (* 2.0 l_0_10_102) l_0_10_93))))
 (let ((?x17463 (- (- ?x17458 (* (* 2.0 l_0_10_107) l_0_10_116)) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x17467 (- (- ?x17463 (* (* 2.0 l_0_10_122) l_0_10_131)) (* (* 2.0 l_0_10_123) l_0_10_132))))
 (let ((?x17471 (- (- ?x17467 (* (* 2.0 l_0_10_137) l_0_10_146)) (* (* 2.0 l_0_10_138) l_0_10_147))))
 (let ((?x17475 (+ (- ?x17471 (* (* 2.0 l_0_10_17) l_0_10_26)) (* 4.0 (* l_0_10_17 l_0_10_17)))))
 (let ((?x17479 (+ (- ?x17475 (* (* 2.0 l_0_10_18) l_0_10_27)) (* 4.0 (* l_0_10_18 l_0_10_18)))))
 (let ((?x17484 (- (+ ?x17479 (* (* 2.0 l_0_10_32) l_0_10_41)) (* (* 4.0 l_0_10_32) l_0_10_32))))
 (let ((?x17489 (- (+ ?x17484 (* (* 2.0 l_0_10_33) l_0_10_42)) (* (* 4.0 l_0_10_33) l_0_10_33))))
 (let ((?x17493 (- (- ?x17489 (* (* 2.0 l_0_10_47) l_0_10_56)) (* (* 2.0 l_0_10_48) l_0_10_57))))
 (let ((?x17497 (+ (+ ?x17493 (* (* 2.0 l_0_10_62) l_0_10_71)) (* (* 2.0 l_0_10_63) l_0_10_72))))
 (= (+ (+ ?x17497 ?x17498) ?x17500) 0.0))))))))))))))
(assert
 (let ((?x17500 (* l_0_10_78 l_0_10_78)))
 (let ((?x17498 (* l_0_10_77 l_0_10_77)))
 (let ((?x17195 (* (* 4.0 l_0_10_63) l_0_10_63)))
 (let ((?x17189 (* (* 4.0 l_0_10_62) l_0_10_62)))
 (let ((?x17141 (* l_0_10_48 l_0_10_48)))
 (let ((?x17174 (* 4.0 ?x17141)))
 (let ((?x17137 (* l_0_10_47 l_0_10_47)))
 (let ((?x17169 (* 4.0 ?x17137)))
 (let ((?x17556 (* l_0_10_3 l_0_10_3)))
 (let ((?x17554 (* l_0_10_2 l_0_10_2)))
 (let ((?x13219 (- (- (* (- 4.0) _a_2_) (* (* 2.0 l_0_10_107) l_0_10_112)) (* (* 2.0 l_0_10_108) l_0_10_113))))
 (let ((?x13211 (- (- ?x13219 (* (* 2.0 l_0_10_122) l_0_10_127)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x2650 (- (- ?x13211 (* (* 2.0 l_0_10_137) l_0_10_142)) (* (* 2.0 l_0_10_138) l_0_10_143))))
 (let ((?x17553 (- (- ?x2650 (* (* 2.0 l_0_10_17) l_0_10_22)) (* (* 2.0 l_0_10_18) l_0_10_23))))
 (let ((?x17561 (+ (+ (- (- ?x17553 ?x17554) ?x17556) (* (* 2.0 l_0_10_32) l_0_10_37)) (* (* 2.0 l_0_10_33) l_0_10_38))))
 (let ((?x17566 (- (+ (- ?x17561 (* (* 2.0 l_0_10_47) l_0_10_52)) ?x17169) (* (* 2.0 l_0_10_48) l_0_10_53))))
 (let ((?x17572 (+ (- (+ (+ ?x17566 ?x17174) (* (* 2.0 l_0_10_62) l_0_10_67)) ?x17189) (* (* 2.0 l_0_10_63) l_0_10_68))))
 (let ((?x17577 (- (- (- (- ?x17572 ?x17195) ?x17498) ?x17500) (* (* 2.0 l_0_10_92) l_0_10_97))))
 (= (- ?x17577 (* (* 2.0 l_0_10_93) l_0_10_98)) 0.0))))))))))))))))))))
(assert
 (let ((?x17118 (* l_0_10_63 l_0_10_63)))
 (let ((?x1963 (* 4.0 ?x17118)))
 (let ((?x17115 (* l_0_10_62 l_0_10_62)))
 (let ((?x8678 (* 4.0 ?x17115)))
 (let ((?x17631 (- (* (* (- 2.0) l_0_10_106) l_0_10_107) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x17637 (- (- ?x17631 (* (* 2.0 l_0_10_136) l_0_10_137)) (* (* 2.0 l_0_10_16) l_0_10_17))))
 (let ((?x17643 (- (+ ?x17637 (* (* 2.0 l_0_10_31) l_0_10_32)) (* (* 2.0 l_0_10_46) l_0_10_47))))
 (let ((?x17649 (- (- ?x17643 (* (* 4.0 l_0_10_47) l_0_10_47)) (* (* 4.0 l_0_10_48) l_0_10_48))))
 (let ((?x17657 (- (+ (+ (+ ?x17649 (* (* 2.0 l_0_10_61) l_0_10_62)) ?x8678) ?x1963) (* (* 2.0 l_0_10_91) l_0_10_92))))
 (= (+ ?x17657 4.0) 0.0)))))))))))
(assert
 (let ((?x17671 (* l_0_10_76 l_0_10_76)))
 (let ((?x17669 (* (* 4.0 l_0_10_61) l_0_10_61)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x2915 (* ?x13452 l_0_10_67)))
 (let ((?x13468 (* l_0_10_46 l_0_10_46)))
 (let ((?x7244 (* 4.0 ?x13468)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x13465 (* ?x13533 l_0_10_52)))
 (let ((?x17672 (- (- (+ (+ (- (* (- l_0_10_1) l_0_10_1) ?x13465) ?x7244) ?x2915) ?x17669) ?x17671)))
 (= ?x17672 0.0)))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17721 (* ?x17720 l_0_10_77)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17718 (* ?x17717 l_0_10_68)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17715 (* ?x17714 l_0_10_67)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17710 (* ?x13452 l_0_10_62)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17708 (* ?x17707 l_0_10_53)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17705 (* ?x17704 l_0_10_52)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17700 (* ?x13533 l_0_10_47)))
 (let ((?x17691 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_106) l_0_10_112))))
 (let ((?x17695 (- (- ?x17691 (* (* 2.0 l_0_10_121) l_0_10_127)) (* (* 2.0 l_0_10_136) l_0_10_142))))
 (let ((?x17699 (+ (- ?x17695 (* (* 2.0 l_0_10_16) l_0_10_22)) (* (* 2.0 l_0_10_31) l_0_10_37))))
 (let ((?x17709 (- (- (- (+ ?x17699 ?x17700) (* (* 2.0 l_0_10_46) l_0_10_52)) ?x17705) ?x17708)))
 (let ((?x17719 (+ (+ (+ (- ?x17709 ?x17710) (* (* 2.0 l_0_10_61) l_0_10_67)) ?x17715) ?x17718)))
 (= (- (- ?x17719 ?x17721) (* (* 2.0 l_0_10_91) l_0_10_97)) 0.0)))))))))))))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17769 (* ?x17720 l_0_10_79)))
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x17767 (* ?x17766 l_0_10_69)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x17764 (* ?x17763 l_0_10_68)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x17761 (* ?x17760 l_0_10_67)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17755 (* ?x13452 l_0_10_64)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x17753 (* ?x17752 l_0_10_54)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x17750 (* ?x17749 l_0_10_53)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x17747 (* ?x17746 l_0_10_52)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x3229 (* ?x13533 l_0_10_49)))
 (let ((?x17745 (+ (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x3229) (* (* 6.0 l_0_10_46) l_0_10_52))))
 (let ((?x17759 (- (- (- (- (- ?x17745 ?x17747) ?x17750) ?x17753) ?x17755) (* (* 6.0 l_0_10_61) l_0_10_67))))
 (= (- (+ (+ (+ ?x17759 ?x17761) ?x17764) ?x17767) ?x17769) 0.0))))))))))))))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17824 (* ?x17720 l_0_10_82)))
 (let ((?x17821 (* l_0_10_70 l_0_10_70)))
 (let ((?x17822 (* 4.0 ?x17821)))
 (let ((?x17818 (* l_0_10_69 l_0_10_69)))
 (let ((?x17819 (* 4.0 ?x17818)))
 (let ((?x17815 (* l_0_10_68 l_0_10_68)))
 (let ((?x17816 (* 4.0 ?x17815)))
 (let ((?x17812 (* l_0_10_67 l_0_10_67)))
 (let ((?x17813 (* 4.0 ?x17812)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x2915 (* ?x13452 l_0_10_67)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x13465 (* ?x13533 l_0_10_52)))
 (let ((?x17801 (- (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x13465) (* (* 4.0 l_0_10_52) l_0_10_52))))
 (let ((?x17807 (- (- ?x17801 (* (* 4.0 l_0_10_53) l_0_10_53)) (* (* 4.0 l_0_10_54) l_0_10_54))))
 (let ((?x17817 (+ (+ (- (- ?x17807 (* (* 4.0 l_0_10_55) l_0_10_55)) ?x2915) ?x17813) ?x17816)))
 (= (- (+ (+ ?x17817 ?x17819) ?x17822) ?x17824) 0.0)))))))))))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17884 (* ?x17720 l_0_10_86)))
 (let ((?x17824 (* ?x17720 l_0_10_82)))
 (let ((?x17881 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x17878 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x17875 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x17872 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17869 (* ?x13452 l_0_10_71)))
 (let ((?x17867 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x17864 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x17861 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x17858 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17855 (* ?x13533 l_0_10_56)))
 (let ((?x17851 (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 8.0 l_0_10_16) l_0_10_22))))
 (let ((?x17862 (- (- (+ (- ?x17851 (* (* 8.0 l_0_10_31) l_0_10_37)) ?x17855) ?x17858) ?x17861)))
 (let ((?x17882 (+ (+ (+ (+ (- (- (- ?x17862 ?x17864) ?x17867) ?x17869) ?x17872) ?x17875) ?x17878) ?x17881)))
 (= (- (+ ?x17882 ?x17824) ?x17884) 0.0))))))))))))))))))))
(assert
 (let ((?x18001 (* 2.0 l_0_10_78)))
 (let ((?x18002 (* ?x18001 l_0_10_80)))
 (let ((?x17998 (* 2.0 l_0_10_77)))
 (let ((?x17999 (* ?x17998 l_0_10_79)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17985 (* ?x17717 l_0_10_65)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17981 (* ?x17714 l_0_10_64)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17968 (* ?x17707 l_0_10_50)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17964 (* ?x17704 l_0_10_49)))
 (let ((?x3284 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_110) l_0_10_113))))
 (let ((?x3302 (- (- ?x3284 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_124) l_0_10_127))))
 (let ((?x17930 (- (- ?x3302 (* (* 2.0 l_0_10_125) l_0_10_128)) (* (* 2.0 l_0_10_126) l_0_10_129))))
 (let ((?x17936 (- (- ?x17930 (* (* 2.0 l_0_10_139) l_0_10_142)) (* (* 2.0 l_0_10_140) l_0_10_143))))
 (let ((?x17942 (- (- ?x17936 (* (* 2.0 l_0_10_141) l_0_10_144)) (* (* 2.0 l_0_10_19) l_0_10_22))))
 (let ((?x17948 (- (- ?x17942 (* (* 2.0 l_0_10_2) l_0_10_4)) (* (* 2.0 l_0_10_20) l_0_10_23))))
 (let ((?x17954 (- (- ?x17948 (* (* 2.0 l_0_10_21) l_0_10_24)) (* (* 2.0 l_0_10_3) l_0_10_5))))
 (let ((?x17960 (+ (+ ?x17954 (* (* 2.0 l_0_10_34) l_0_10_37)) (* (* 2.0 l_0_10_35) l_0_10_38))))
 (let ((?x17967 (+ (+ (+ ?x17960 (* (* 2.0 l_0_10_36) l_0_10_39)) ?x17964) (* (* 6.0 l_0_10_47) l_0_10_52))))
 (let ((?x17974 (- (+ (+ ?x17967 ?x17968) (* (* 6.0 l_0_10_48) l_0_10_53)) (* (* 2.0 l_0_10_49) l_0_10_52))))
 (let ((?x17980 (- (- ?x17974 (* (* 2.0 l_0_10_50) l_0_10_53)) (* (* 2.0 l_0_10_51) l_0_10_54))))
 (let ((?x17988 (- (- (- (- ?x17980 ?x17981) (* (* 6.0 l_0_10_62) l_0_10_67)) ?x17985) (* (* 6.0 l_0_10_63) l_0_10_68))))
 (let ((?x17994 (+ (+ ?x17988 (* (* 2.0 l_0_10_64) l_0_10_67)) (* (* 2.0 l_0_10_65) l_0_10_68))))
 (let ((?x18006 (- (- (- (+ ?x17994 (* (* 2.0 l_0_10_66) l_0_10_69)) ?x17999) ?x18002) (* (* 2.0 l_0_10_94) l_0_10_97))))
 (let ((?x18012 (- (- ?x18006 (* (* 2.0 l_0_10_95) l_0_10_98)) (* (* 2.0 l_0_10_96) l_0_10_99))))
 (= ?x18012 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x18141 (* l_0_10_99 l_0_10_99)))
 (let ((?x18139 (* l_0_10_98 l_0_10_98)))
 (let ((?x18137 (* l_0_10_97 l_0_10_97)))
 (let ((?x18001 (* 2.0 l_0_10_78)))
 (let ((?x18135 (* ?x18001 l_0_10_83)))
 (let ((?x17998 (* 2.0 l_0_10_77)))
 (let ((?x18133 (* ?x17998 l_0_10_82)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17718 (* ?x17717 l_0_10_68)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17715 (* ?x17714 l_0_10_67)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17708 (* ?x17707 l_0_10_53)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17705 (* ?x17704 l_0_10_52)))
 (let ((?x18079 (* l_0_10_145 l_0_10_145)))
 (let ((?x18077 (* l_0_10_144 l_0_10_144)))
 (let ((?x18075 (* l_0_10_143 l_0_10_143)))
 (let ((?x18073 (* l_0_10_142 l_0_10_142)))
 (let ((?x18071 (* l_0_10_130 l_0_10_130)))
 (let ((?x18069 (* l_0_10_129 l_0_10_129)))
 (let ((?x18067 (* l_0_10_128 l_0_10_128)))
 (let ((?x18065 (* l_0_10_127 l_0_10_127)))
 (let ((?x18063 (* l_0_10_115 l_0_10_115)))
 (let ((?x18061 (* l_0_10_114 l_0_10_114)))
 (let ((?x18059 (* l_0_10_113 l_0_10_113)))
 (let ((?x18060 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_112 l_0_10_112)) ?x18059)))
 (let ((?x18074 (- (- (- (- (- (- (- ?x18060 ?x18061) ?x18063) ?x18065) ?x18067) ?x18069) ?x18071) ?x18073)))
 (let ((?x18082 (- (- (- (- ?x18074 ?x18075) ?x18077) ?x18079) (* (* 2.0 l_0_10_2) l_0_10_7))))
 (let ((?x18088 (- (- ?x18082 (* (* 1.0 l_0_10_22) l_0_10_22)) (* (* 1.0 l_0_10_23) l_0_10_23))))
 (let ((?x18094 (- (- ?x18088 (* (* 1.0 l_0_10_24) l_0_10_24)) (* (* 1.0 l_0_10_25) l_0_10_25))))
 (let ((?x18099 (+ (- ?x18094 (* (* 2.0 l_0_10_3) l_0_10_8)) (* 1.0 (* l_0_10_37 l_0_10_37)))))
 (let ((?x18105 (+ (+ ?x18099 (* 1.0 (* l_0_10_38 l_0_10_38))) (* 1.0 (* l_0_10_39 l_0_10_39)))))
 (let ((?x18113 (- (+ (+ (+ ?x18105 (* 1.0 (* l_0_10_40 l_0_10_40))) ?x17705) ?x17708) (* (* 1.0 l_0_10_52) l_0_10_52))))
 (let ((?x18119 (- (- ?x18113 (* (* 1.0 l_0_10_53) l_0_10_53)) (* (* 1.0 l_0_10_54) l_0_10_54))))
 (let ((?x18126 (+ (- (- (- ?x18119 (* (* 1.0 l_0_10_55) l_0_10_55)) ?x17715) ?x17718) (* 1.0 (* l_0_10_67 l_0_10_67)))))
 (let ((?x18130 (+ (+ ?x18126 (* 1.0 (* l_0_10_68 l_0_10_68))) (* 1.0 (* l_0_10_69 l_0_10_69)))))
 (let ((?x18138 (- (- (- (+ ?x18130 (* 1.0 (* l_0_10_70 l_0_10_70))) ?x18133) ?x18135) ?x18137)))
 (= (- (- ?x18138 ?x18139) ?x18141) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18001 (* 2.0 l_0_10_78)))
 (let ((?x18313 (* ?x18001 l_0_10_87)))
 (let ((?x18135 (* ?x18001 l_0_10_83)))
 (let ((?x17998 (* 2.0 l_0_10_77)))
 (let ((?x18310 (* ?x17998 l_0_10_86)))
 (let ((?x18133 (* ?x17998 l_0_10_82)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x18295 (* ?x17717 l_0_10_72)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x18293 (* ?x17714 l_0_10_71)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x18279 (* ?x17707 l_0_10_57)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x18277 (* ?x17704 l_0_10_56)))
 (let ((?x18193 (- (* (* (- 2.0) l_0_10_100) l_0_10_104) (* (* 2.0 l_0_10_101) l_0_10_97))))
 (let ((?x18198 (- (- ?x18193 (* (* 2.0 l_0_10_102) l_0_10_98)) (* (* 2.0 l_0_10_103) l_0_10_99))))
 (let ((?x18204 (- (- ?x18198 (* (* 2.0 l_0_10_11) l_0_10_2)) (* (* 2.0 l_0_10_112) l_0_10_116))))
 (let ((?x18210 (- (- ?x18204 (* (* 2.0 l_0_10_113) l_0_10_117)) (* (* 2.0 l_0_10_114) l_0_10_118))))
 (let ((?x18216 (- (- ?x18210 (* (* 2.0 l_0_10_115) l_0_10_119)) (* (* 2.0 l_0_10_12) l_0_10_3))))
 (let ((?x18222 (- (- ?x18216 (* (* 2.0 l_0_10_127) l_0_10_131)) (* (* 2.0 l_0_10_128) l_0_10_132))))
 (let ((?x18228 (- (- ?x18222 (* (* 2.0 l_0_10_129) l_0_10_133)) (* (* 2.0 l_0_10_130) l_0_10_134))))
 (let ((?x18234 (- (- ?x18228 (* (* 2.0 l_0_10_142) l_0_10_146)) (* (* 2.0 l_0_10_143) l_0_10_147))))
 (let ((?x18240 (- (- ?x18234 (* (* 2.0 l_0_10_144) l_0_10_148)) (* (* 2.0 l_0_10_145) l_0_10_149))))
 (let ((?x18246 (+ (+ ?x18240 (* (* 8.0 l_0_10_17) l_0_10_22)) (* (* 8.0 l_0_10_18) l_0_10_23))))
 (let ((?x18252 (- (- ?x18246 (* (* 2.0 l_0_10_22) l_0_10_26)) (* (* 2.0 l_0_10_23) l_0_10_27))))
 (let ((?x18258 (- (- ?x18252 (* (* 2.0 l_0_10_24) l_0_10_28)) (* (* 2.0 l_0_10_25) l_0_10_29))))
 (let ((?x18264 (- (- ?x18258 (* (* 8.0 l_0_10_32) l_0_10_37)) (* (* 8.0 l_0_10_33) l_0_10_38))))
 (let ((?x18270 (+ (+ ?x18264 (* (* 2.0 l_0_10_37) l_0_10_41)) (* (* 2.0 l_0_10_38) l_0_10_42))))
 (let ((?x18276 (+ (+ ?x18270 (* (* 2.0 l_0_10_39) l_0_10_43)) (* (* 2.0 l_0_10_40) l_0_10_44))))
 (let ((?x18286 (- (- (+ (+ ?x18276 ?x18277) ?x18279) (* (* 2.0 l_0_10_52) l_0_10_56)) (* (* 2.0 l_0_10_53) l_0_10_57))))
 (let ((?x18292 (- (- ?x18286 (* (* 2.0 l_0_10_54) l_0_10_58)) (* (* 2.0 l_0_10_55) l_0_10_59))))
 (let ((?x18302 (+ (+ (- (- ?x18292 ?x18293) ?x18295) (* (* 2.0 l_0_10_67) l_0_10_71)) (* (* 2.0 l_0_10_68) l_0_10_72))))
 (let ((?x18308 (+ (+ ?x18302 (* (* 2.0 l_0_10_69) l_0_10_73)) (* (* 2.0 l_0_10_70) l_0_10_74))))
 (= (- (+ (- (+ ?x18308 ?x18133) ?x18310) ?x18135) ?x18313) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18497 (* l_0_10_81 l_0_10_81)))
 (let ((?x18495 (* l_0_10_80 l_0_10_80)))
 (let ((?x18493 (* l_0_10_79 l_0_10_79)))
 (let ((?x18491 (* (* 4.0 l_0_10_66) l_0_10_66)))
 (let ((?x18485 (* (* 4.0 l_0_10_65) l_0_10_65)))
 (let ((?x18479 (* (* 4.0 l_0_10_64) l_0_10_64)))
 (let ((?x18469 (* l_0_10_6 l_0_10_6)))
 (let ((?x17182 (* l_0_10_51 l_0_10_51)))
 (let ((?x18467 (* 4.0 ?x17182)))
 (let ((?x17179 (* l_0_10_50 l_0_10_50)))
 (let ((?x18462 (* 4.0 ?x17179)))
 (let ((?x18457 (* l_0_10_5 l_0_10_5)))
 (let ((?x17176 (* l_0_10_49 l_0_10_49)))
 (let ((?x18455 (* 4.0 ?x17176)))
 (let ((?x18446 (* l_0_10_4 l_0_10_4)))
 (let ((?x18441 (- (* (* (- 24.0) l_0_10_17) l_0_10_22) (* (* 24.0 l_0_10_18) l_0_10_23))))
 (let ((?x18445 (+ (+ ?x18441 (* (* 24.0 l_0_10_32) l_0_10_37)) (* (* 24.0 l_0_10_33) l_0_10_38))))
 (let ((?x18451 (- (- (- ?x18445 ?x18446) (* (* 12.0 l_0_10_47) l_0_10_52)) (* (* 12.0 l_0_10_48) l_0_10_53))))
 (let ((?x18461 (+ (- (+ (+ ?x18451 (* (* 6.0 l_0_10_49) l_0_10_52)) ?x18455) ?x18457) (* (* 6.0 l_0_10_50) l_0_10_53))))
 (let ((?x18470 (- (+ (+ (+ ?x18461 ?x18462) (* (* 6.0 l_0_10_51) l_0_10_54)) ?x18467) ?x18469)))
 (let ((?x18474 (+ (+ ?x18470 (* (* 12.0 l_0_10_62) l_0_10_67)) (* (* 12.0 l_0_10_63) l_0_10_68))))
 (let ((?x18483 (- (- (- ?x18474 (* (* 6.0 l_0_10_64) l_0_10_67)) ?x18479) (* (* 6.0 l_0_10_65) l_0_10_68))))
 (let ((?x18494 (- (- (- (- ?x18483 ?x18485) (* (* 6.0 l_0_10_66) l_0_10_69)) ?x18491) ?x18493)))
 (= (- (- ?x18494 ?x18495) ?x18497) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x18534 (* 2.0 l_0_10_81)))
 (let ((?x18535 (* ?x18534 l_0_10_84)))
 (let ((?x18531 (* 2.0 l_0_10_80)))
 (let ((?x18532 (* ?x18531 l_0_10_83)))
 (let ((?x18528 (* 2.0 l_0_10_79)))
 (let ((?x18529 (* ?x18528 l_0_10_82)))
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x17767 (* ?x17766 l_0_10_69)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x17764 (* ?x17763 l_0_10_68)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x17761 (* ?x17760 l_0_10_67)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x17753 (* ?x17752 l_0_10_54)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x17750 (* ?x17749 l_0_10_53)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x17747 (* ?x17746 l_0_10_52)))
 (let ((?x14343 (- (+ (* (* (- 2.0) l_0_10_4) l_0_10_7) ?x17747) (* (* 2.0 l_0_10_5) l_0_10_8))))
 (let ((?x14350 (+ (+ (+ (+ ?x14343 ?x17750) ?x17753) (* 3.0 (* l_0_10_52 l_0_10_52))) (* 3.0 (* l_0_10_53 l_0_10_53)))))
 (let ((?x14371 (+ (+ ?x14350 (* 3.0 (* l_0_10_54 l_0_10_54))) (* 3.0 (* l_0_10_55 l_0_10_55)))))
 (let ((?x18515 (- (- (- (- ?x14371 (* (* 2.0 l_0_10_6) l_0_10_9)) ?x17761) ?x17764) ?x17767)))
 (let ((?x18521 (- (- ?x18515 (* (* 3.0 l_0_10_67) l_0_10_67)) (* (* 3.0 l_0_10_68) l_0_10_68))))
 (let ((?x18527 (- (- ?x18521 (* (* 3.0 l_0_10_69) l_0_10_69)) (* (* 3.0 l_0_10_70) l_0_10_70))))
 (= (- (- (- ?x18527 ?x18529) ?x18532) ?x18535) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18534 (* 2.0 l_0_10_81)))
 (let ((?x18627 (* ?x18534 l_0_10_88)))
 (let ((?x18535 (* ?x18534 l_0_10_84)))
 (let ((?x18531 (* 2.0 l_0_10_80)))
 (let ((?x18624 (* ?x18531 l_0_10_87)))
 (let ((?x18532 (* ?x18531 l_0_10_83)))
 (let ((?x18528 (* 2.0 l_0_10_79)))
 (let ((?x18621 (* ?x18528 l_0_10_86)))
 (let ((?x18529 (* ?x18528 l_0_10_82)))
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x18606 (* ?x17766 l_0_10_73)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x18604 (* ?x17763 l_0_10_72)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x18602 (* ?x17760 l_0_10_71)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x18588 (* ?x17752 l_0_10_58)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x18586 (* ?x17749 l_0_10_57)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x18584 (* ?x17746 l_0_10_56)))
 (let ((?x18562 (- (* (* (- 2.0) l_0_10_11) l_0_10_4) (* (* 2.0 l_0_10_12) l_0_10_5))))
 (let ((?x18568 (+ (- ?x18562 (* (* 2.0 l_0_10_13) l_0_10_6)) (* (* 8.0 l_0_10_19) l_0_10_22))))
 (let ((?x18574 (+ (+ ?x18568 (* (* 8.0 l_0_10_20) l_0_10_23)) (* (* 8.0 l_0_10_21) l_0_10_24))))
 (let ((?x18580 (- (- ?x18574 (* (* 8.0 l_0_10_34) l_0_10_37)) (* (* 8.0 l_0_10_35) l_0_10_38))))
 (let ((?x18589 (+ (+ (+ (- ?x18580 (* (* 8.0 l_0_10_36) l_0_10_39)) ?x18584) ?x18586) ?x18588)))
 (let ((?x18595 (+ (+ ?x18589 (* (* 6.0 l_0_10_52) l_0_10_56)) (* (* 6.0 l_0_10_53) l_0_10_57))))
 (let ((?x18601 (+ (+ ?x18595 (* (* 6.0 l_0_10_54) l_0_10_58)) (* (* 6.0 l_0_10_55) l_0_10_59))))
 (let ((?x18610 (- (- (- (- ?x18601 ?x18602) ?x18604) ?x18606) (* (* 6.0 l_0_10_67) l_0_10_71))))
 (let ((?x18616 (- (- ?x18610 (* (* 6.0 l_0_10_68) l_0_10_72)) (* (* 6.0 l_0_10_69) l_0_10_73))))
 (let ((?x18623 (+ (- (+ (- ?x18616 (* (* 6.0 l_0_10_70) l_0_10_74)) ?x18529) ?x18621) ?x18532)))
 (= (- (+ (- ?x18623 ?x18624) ?x18535) ?x18627) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x18685 (* l_0_10_9 l_0_10_9)))
 (let ((?x18683 (* l_0_10_85 l_0_10_85)))
 (let ((?x18681 (* l_0_10_84 l_0_10_84)))
 (let ((?x18679 (* l_0_10_83 l_0_10_83)))
 (let ((?x18677 (* l_0_10_82 l_0_10_82)))
 (let ((?x18675 (* l_0_10_8 l_0_10_8)))
 (let ((?x18673 (* (* 4.0 l_0_10_70) l_0_10_70)))
 (let ((?x18670 (* l_0_10_7 l_0_10_7)))
 (let ((?x18668 (* (* 4.0 l_0_10_69) l_0_10_69)))
 (let ((?x18665 (* (* 4.0 l_0_10_68) l_0_10_68)))
 (let ((?x18662 (* (* 4.0 l_0_10_67) l_0_10_67)))
 (let ((?x13718 (* l_0_10_55 l_0_10_55)))
 (let ((?x3262 (* 4.0 ?x13718)))
 (let ((?x13709 (* l_0_10_54 l_0_10_54)))
 (let ((?x13710 (* 4.0 ?x13709)))
 (let ((?x13707 (* l_0_10_53 l_0_10_53)))
 (let ((?x13706 (* 4.0 ?x13707)))
 (let ((?x17830 (* l_0_10_52 l_0_10_52)))
 (let ((?x17831 (* 4.0 ?x17830)))
 (let ((?x18663 (- (+ (+ (+ (+ (* (- l_0_10_10) l_0_10_10) ?x17831) ?x13706) ?x13710) ?x3262) ?x18662)))
 (let ((?x18680 (- (- (- (- (- (- (- ?x18663 ?x18665) ?x18668) ?x18670) ?x18673) ?x18675) ?x18677) ?x18679)))
 (= (- (- (- ?x18680 ?x18681) ?x18683) ?x18685) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18683 (* l_0_10_85 l_0_10_85)))
 (let ((?x18740 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x18681 (* l_0_10_84 l_0_10_84)))
 (let ((?x18736 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x18679 (* l_0_10_83 l_0_10_83)))
 (let ((?x18732 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x18677 (* l_0_10_82 l_0_10_82)))
 (let ((?x18728 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x17881 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x17878 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x17875 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x17872 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x17867 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x17864 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x17861 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x17858 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x18694 (- (* (* (- 2.0) l_0_10_10) l_0_10_14) (* (* 2.0 l_0_10_11) l_0_10_7))))
 (let ((?x18698 (- (- ?x18694 (* (* 2.0 l_0_10_12) l_0_10_8)) (* (* 2.0 l_0_10_13) l_0_10_9))))
 (let ((?x18702 (+ (+ ?x18698 (* 4.0 (* l_0_10_22 l_0_10_22))) (* 4.0 (* l_0_10_23 l_0_10_23)))))
 (let ((?x18706 (+ (+ ?x18702 (* 4.0 (* l_0_10_24 l_0_10_24))) (* 4.0 (* l_0_10_25 l_0_10_25)))))
 (let ((?x18712 (- (- ?x18706 (* (* 4.0 l_0_10_37) l_0_10_37)) (* (* 4.0 l_0_10_38) l_0_10_38))))
 (let ((?x18718 (- (- ?x18712 (* (* 4.0 l_0_10_39) l_0_10_39)) (* (* 4.0 l_0_10_40) l_0_10_40))))
 (let ((?x18725 (- (- (- (+ (+ (+ (+ ?x18718 ?x17858) ?x17861) ?x17864) ?x17867) ?x17872) ?x17875) ?x17878)))
 (let ((?x18738 (+ (- (+ (- (+ (- (- ?x18725 ?x17881) ?x18728) ?x18677) ?x18732) ?x18679) ?x18736) ?x18681)))
 (= (+ (- ?x18738 ?x18740) ?x18683) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x18828 (* l_0_10_90 l_0_10_90)))
 (let ((?x18826 (* l_0_10_89 l_0_10_89)))
 (let ((?x18824 (* l_0_10_88 l_0_10_88)))
 (let ((?x18822 (* l_0_10_87 l_0_10_87)))
 (let ((?x18820 (* l_0_10_86 l_0_10_86)))
 (let ((?x18740 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x18736 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x18732 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x18728 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x18814 (* (* 4.0 l_0_10_75) l_0_10_75)))
 (let ((?x18811 (* (* 4.0 l_0_10_74) l_0_10_74)))
 (let ((?x18808 (* (* 4.0 l_0_10_73) l_0_10_73)))
 (let ((?x18805 (* (* 4.0 l_0_10_72) l_0_10_72)))
 (let ((?x18802 (* (* 4.0 l_0_10_71) l_0_10_71)))
 (let ((?x18798 (* l_0_10_60 l_0_10_60)))
 (let ((?x18799 (* 4.0 ?x18798)))
 (let ((?x18795 (* l_0_10_59 l_0_10_59)))
 (let ((?x18796 (* 4.0 ?x18795)))
 (let ((?x18792 (* l_0_10_58 l_0_10_58)))
 (let ((?x18793 (* 4.0 ?x18792)))
 (let ((?x18789 (* l_0_10_57 l_0_10_57)))
 (let ((?x18790 (* 4.0 ?x18789)))
 (let ((?x18786 (* l_0_10_56 l_0_10_56)))
 (let ((?x18787 (* 4.0 ?x18786)))
 (let ((?x18760 (* l_0_10_15 l_0_10_15)))
 (let ((?x18758 (* l_0_10_14 l_0_10_14)))
 (let ((?x18756 (* l_0_10_13 l_0_10_13)))
 (let ((?x18757 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x18756)))
 (let ((?x18767 (+ (+ (- (- ?x18757 ?x18758) ?x18760) (* (* 8.0 l_0_10_22) l_0_10_26)) (* (* 8.0 l_0_10_23) l_0_10_27))))
 (let ((?x18773 (+ (+ ?x18767 (* (* 8.0 l_0_10_24) l_0_10_28)) (* (* 8.0 l_0_10_25) l_0_10_29))))
 (let ((?x18779 (- (- ?x18773 (* (* 8.0 l_0_10_37) l_0_10_41)) (* (* 8.0 l_0_10_38) l_0_10_42))))
 (let ((?x18785 (- (- ?x18779 (* (* 8.0 l_0_10_39) l_0_10_43)) (* (* 8.0 l_0_10_40) l_0_10_44))))
 (let ((?x18806 (- (- (+ (+ (+ (+ (+ ?x18785 ?x18787) ?x18790) ?x18793) ?x18796) ?x18799) ?x18802) ?x18805)))
 (let ((?x18819 (+ (+ (+ (+ (- (- (- ?x18806 ?x18808) ?x18811) ?x18814) ?x18728) ?x18732) ?x18736) ?x18740)))
 (= (- (- (- (- (- ?x18819 ?x18820) ?x18822) ?x18824) ?x18826) ?x18828) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18872 (* l_0_10_91 l_0_10_91)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17710 (* ?x13452 l_0_10_62)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17700 (* ?x13533 l_0_10_47)))
 (let ((?x18857 (* l_0_10_136 l_0_10_136)))
 (let ((?x18858 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_121 l_0_10_121)) ?x18857)))
 (let ((?x18864 (+ (- ?x18858 (* (* 1.0 l_0_10_16) l_0_10_16)) (* 1.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x18871 (+ (+ (- (- ?x18864 ?x17700) (* (* 1.0 l_0_10_46) l_0_10_46)) ?x17710) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (= (- ?x18871 ?x18872) 0.0)))))))))))
(assert
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17985 (* ?x17717 l_0_10_65)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17981 (* ?x17714 l_0_10_64)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17968 (* ?x17707 l_0_10_50)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17964 (* ?x17704 l_0_10_49)))
 (let ((?x18895 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x18899 (- (- ?x18895 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 2.0 l_0_10_16) l_0_10_19))))
 (let ((?x18903 (+ (+ ?x18899 (* (* 2.0 l_0_10_31) l_0_10_34)) (* (* 6.0 l_0_10_46) l_0_10_47))))
 (let ((?x18909 (- (- (- (- ?x18903 (* (* 2.0 l_0_10_46) l_0_10_49)) ?x17964) ?x17968) (* (* 6.0 l_0_10_61) l_0_10_62))))
 (let ((?x18915 (- (+ (+ (+ ?x18909 (* (* 2.0 l_0_10_61) l_0_10_64)) ?x17981) ?x17985) (* (* 2.0 l_0_10_91) l_0_10_94))))
 (= ?x18915 0.0)))))))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17721 (* ?x17720 l_0_10_77)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x18295 (* ?x17717 l_0_10_72)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x18293 (* ?x17714 l_0_10_71)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x18279 (* ?x17707 l_0_10_57)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x18277 (* ?x17704 l_0_10_56)))
 (let ((?x18943 (- (* (* (- 2.0) l_0_10_101) l_0_10_91) (* (* 2.0 l_0_10_106) l_0_10_116))))
 (let ((?x18947 (- (- ?x18943 (* (* 2.0 l_0_10_121) l_0_10_131)) (* (* 2.0 l_0_10_136) l_0_10_146))))
 (let ((?x18951 (- (+ ?x18947 (* (* 8.0 l_0_10_16) l_0_10_17)) (* (* 2.0 l_0_10_16) l_0_10_26))))
 (let ((?x18955 (+ (- ?x18951 (* (* 8.0 l_0_10_31) l_0_10_32)) (* (* 2.0 l_0_10_31) l_0_10_41))))
 (let ((?x18961 (+ (- (- (- ?x18955 (* (* 2.0 l_0_10_46) l_0_10_56)) ?x18277) ?x18279) (* (* 2.0 l_0_10_61) l_0_10_71))))
 (= (+ (+ (+ ?x18961 ?x18293) ?x18295) ?x17721) 0.0)))))))))))))))))
(assert
 (let ((?x18001 (* 2.0 l_0_10_78)))
 (let ((?x18002 (* ?x18001 l_0_10_80)))
 (let ((?x17998 (* 2.0 l_0_10_77)))
 (let ((?x17999 (* ?x17998 l_0_10_79)))
 (let ((?x5211 (- (* (* (- 2.0) l_0_10_101) l_0_10_94) (* (* 2.0 l_0_10_102) l_0_10_95))))
 (let ((?x15067 (- (- ?x5211 (* (* 2.0 l_0_10_103) l_0_10_96)) (* (* 2.0 l_0_10_109) l_0_10_116))))
 (let ((?x15037 (- (- ?x15067 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x5472 (- (- ?x15037 (* (* 2.0 l_0_10_124) l_0_10_131)) (* (* 2.0 l_0_10_125) l_0_10_132))))
 (let ((?x18979 (- (- ?x5472 (* (* 2.0 l_0_10_126) l_0_10_133)) (* (* 2.0 l_0_10_139) l_0_10_146))))
 (let ((?x18983 (- (- ?x18979 (* (* 2.0 l_0_10_140) l_0_10_147)) (* (* 2.0 l_0_10_141) l_0_10_148))))
 (let ((?x18987 (+ (+ ?x18983 (* (* 8.0 l_0_10_17) l_0_10_19)) (* (* 8.0 l_0_10_18) l_0_10_20))))
 (let ((?x18991 (- (- ?x18987 (* (* 2.0 l_0_10_19) l_0_10_26)) (* (* 2.0 l_0_10_20) l_0_10_27))))
 (let ((?x18995 (- (- ?x18991 (* (* 2.0 l_0_10_21) l_0_10_28)) (* (* 8.0 l_0_10_32) l_0_10_34))))
 (let ((?x18999 (+ (- ?x18995 (* (* 8.0 l_0_10_33) l_0_10_35)) (* (* 2.0 l_0_10_34) l_0_10_41))))
 (let ((?x19003 (+ (+ ?x18999 (* (* 2.0 l_0_10_35) l_0_10_42)) (* (* 2.0 l_0_10_36) l_0_10_43))))
 (let ((?x19007 (+ (+ ?x19003 (* (* 6.0 l_0_10_47) l_0_10_56)) (* (* 6.0 l_0_10_48) l_0_10_57))))
 (let ((?x19011 (- (- ?x19007 (* (* 2.0 l_0_10_49) l_0_10_56)) (* (* 2.0 l_0_10_50) l_0_10_57))))
 (let ((?x19015 (- (- ?x19011 (* (* 2.0 l_0_10_51) l_0_10_58)) (* (* 6.0 l_0_10_62) l_0_10_71))))
 (let ((?x19019 (+ (- ?x19015 (* (* 6.0 l_0_10_63) l_0_10_72)) (* (* 2.0 l_0_10_64) l_0_10_71))))
 (let ((?x19023 (+ (+ ?x19019 (* (* 2.0 l_0_10_65) l_0_10_72)) (* (* 2.0 l_0_10_66) l_0_10_73))))
 (= (+ (+ ?x19023 ?x17999) ?x18002) 0.0))))))))))))))))))))))
(assert
 (let ((?x18001 (* 2.0 l_0_10_78)))
 (let ((?x18313 (* ?x18001 l_0_10_87)))
 (let ((?x17998 (* 2.0 l_0_10_77)))
 (let ((?x18310 (* ?x17998 l_0_10_86)))
 (let ((?x19085 (* l_0_10_150 l_0_10_150)))
 (let ((?x19083 (* l_0_10_149 l_0_10_149)))
 (let ((?x19081 (* l_0_10_148 l_0_10_148)))
 (let ((?x19079 (* l_0_10_147 l_0_10_147)))
 (let ((?x19077 (* l_0_10_146 l_0_10_146)))
 (let ((?x19075 (* l_0_10_135 l_0_10_135)))
 (let ((?x19073 (* l_0_10_134 l_0_10_134)))
 (let ((?x19071 (* l_0_10_133 l_0_10_133)))
 (let ((?x19069 (* l_0_10_132 l_0_10_132)))
 (let ((?x19067 (* l_0_10_131 l_0_10_131)))
 (let ((?x19065 (* l_0_10_120 l_0_10_120)))
 (let ((?x19063 (* l_0_10_119 l_0_10_119)))
 (let ((?x19061 (* l_0_10_118 l_0_10_118)))
 (let ((?x19059 (* l_0_10_117 l_0_10_117)))
 (let ((?x19057 (* l_0_10_116 l_0_10_116)))
 (let ((?x19055 (* l_0_10_105 l_0_10_105)))
 (let ((?x19053 (* l_0_10_104 l_0_10_104)))
 (let ((?x19051 (* l_0_10_103 l_0_10_103)))
 (let ((?x19052 (- (- (* (- l_0_10_101) l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x19051)))
 (let ((?x19066 (- (- (- (- (- (- (- ?x19052 ?x19053) ?x19055) ?x19057) ?x19059) ?x19061) ?x19063) ?x19065)))
 (let ((?x19080 (- (- (- (- (- (- (- ?x19066 ?x19067) ?x19069) ?x19071) ?x19073) ?x19075) ?x19077) ?x19079)))
 (let ((?x19088 (+ (- (- (- ?x19080 ?x19081) ?x19083) ?x19085) (* (* 8.0 l_0_10_17) l_0_10_26))))
 (let ((?x19093 (- (+ ?x19088 (* (* 8.0 l_0_10_18) l_0_10_27)) (* (* 1.0 l_0_10_26) l_0_10_26))))
 (let ((?x19099 (- (- ?x19093 (* (* 1.0 l_0_10_27) l_0_10_27)) (* (* 1.0 l_0_10_28) l_0_10_28))))
 (let ((?x19105 (- (- ?x19099 (* (* 1.0 l_0_10_29) l_0_10_29)) (* (* 1.0 l_0_10_30) l_0_10_30))))
 (let ((?x19109 (- (- ?x19105 (* (* 8.0 l_0_10_32) l_0_10_41)) (* (* 8.0 l_0_10_33) l_0_10_42))))
 (let ((?x19115 (+ (+ ?x19109 (* 1.0 (* l_0_10_41 l_0_10_41))) (* 1.0 (* l_0_10_42 l_0_10_42)))))
 (let ((?x19121 (+ (+ ?x19115 (* 1.0 (* l_0_10_43 l_0_10_43))) (* 1.0 (* l_0_10_44 l_0_10_44)))))
 (let ((?x19127 (- (+ ?x19121 (* 1.0 (* l_0_10_45 l_0_10_45))) (* (* 1.0 l_0_10_56) l_0_10_56))))
 (let ((?x19133 (- (- ?x19127 (* (* 1.0 l_0_10_57) l_0_10_57)) (* (* 1.0 l_0_10_58) l_0_10_58))))
 (let ((?x19139 (- (- ?x19133 (* (* 1.0 l_0_10_59) l_0_10_59)) (* (* 1.0 l_0_10_60) l_0_10_60))))
 (let ((?x19143 (+ (+ ?x19139 (* 1.0 (* l_0_10_71 l_0_10_71))) (* 1.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x19147 (+ (+ ?x19143 (* 1.0 (* l_0_10_73 l_0_10_73))) (* 1.0 (* l_0_10_74 l_0_10_74)))))
 (= (+ (+ (+ ?x19147 (* 1.0 (* l_0_10_75 l_0_10_75))) ?x18310) ?x18313) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x18862 (* l_0_10_31 l_0_10_31)))
 (let ((?x15483 (* 12.0 ?x18862)))
 (let ((?x19185 (- (+ (* (* (- 12.0) l_0_10_16) l_0_10_16) ?x15483) (* (* 6.0 l_0_10_46) l_0_10_46))))
 (= (+ ?x19185 (* 6.0 (* l_0_10_61 l_0_10_61))) 0.0)))))
(assert
 (let ((?x12988 (* l_0_10_66 l_0_10_66)))
 (let ((?x4364 (* 4.0 ?x12988)))
 (let ((?x12983 (* l_0_10_65 l_0_10_65)))
 (let ((?x14387 (* 4.0 ?x12983)))
 (let ((?x12978 (* l_0_10_64 l_0_10_64)))
 (let ((?x4305 (* 4.0 ?x12978)))
 (let ((?x19205 (+ (* (* (- 24.0) l_0_10_16) l_0_10_17) (* (* 24.0 l_0_10_31) l_0_10_32))))
 (let ((?x19210 (+ (- ?x19205 (* (* 12.0 l_0_10_46) l_0_10_47)) (* (* 6.0 l_0_10_46) l_0_10_49))))
 (let ((?x19216 (- (- ?x19210 (* (* 4.0 l_0_10_49) l_0_10_49)) (* (* 4.0 l_0_10_50) l_0_10_50))))
 (let ((?x19222 (+ (- ?x19216 (* (* 4.0 l_0_10_51) l_0_10_51)) (* (* 12.0 l_0_10_61) l_0_10_62))))
 (let ((?x19227 (+ (+ (+ (- ?x19222 (* (* 6.0 l_0_10_61) l_0_10_64)) ?x4305) ?x14387) ?x4364)))
 (= ?x19227 0.0)))))))))))))
(assert
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17710 (* ?x13452 l_0_10_62)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17700 (* ?x13533 l_0_10_47)))
 (let ((?x19256 (+ (* (* (- 24.0) l_0_10_16) l_0_10_19) (* (* 24.0 l_0_10_31) l_0_10_34))))
 (let ((?x19262 (+ (- (- (+ ?x19256 ?x17700) (* (* 12.0 l_0_10_46) l_0_10_49)) ?x17710) (* (* 12.0 l_0_10_61) l_0_10_64))))
 (= ?x19262 0.0))))))))
(assert
 (let ((?x19271 (+ (* (* (- 24.0) l_0_10_16) l_0_10_22) (* (* 24.0 l_0_10_31) l_0_10_37))))
 (let ((?x19275 (+ (- ?x19271 (* (* 12.0 l_0_10_46) l_0_10_52)) (* (* 12.0 l_0_10_61) l_0_10_67))))
 (= ?x19275 0.0))))
(assert
 (let ((?x19290 (+ (* (* (- 24.0) l_0_10_16) l_0_10_26) (* (* 24.0 l_0_10_31) l_0_10_41))))
 (let ((?x19294 (+ (- ?x19290 (* (* 12.0 l_0_10_46) l_0_10_56)) (* (* 12.0 l_0_10_61) l_0_10_71))))
 (= ?x19294 0.0))))
(assert
 (let ((?x18497 (* l_0_10_81 l_0_10_81)))
 (let ((?x18495 (* l_0_10_80 l_0_10_80)))
 (let ((?x18493 (* l_0_10_79 l_0_10_79)))
 (let ((?x13032 (* l_0_10_21 l_0_10_21)))
 (let ((?x19314 (* 4.0 ?x13032)))
 (let ((?x13031 (* l_0_10_20 l_0_10_20)))
 (let ((?x19312 (* 4.0 ?x13031)))
 (let ((?x8777 (* l_0_10_19 l_0_10_19)))
 (let ((?x19310 (* 4.0 ?x8777)))
 (let ((?x19309 (- (* (* (- 24.0) l_0_10_17) l_0_10_26) (* (* 24.0 l_0_10_18) l_0_10_27))))
 (let ((?x19317 (+ (+ (+ (+ ?x19309 ?x19310) ?x19312) ?x19314) (* (* 24.0 l_0_10_32) l_0_10_41))))
 (let ((?x19322 (- (+ ?x19317 (* (* 24.0 l_0_10_33) l_0_10_42)) (* (* 4.0 l_0_10_34) l_0_10_34))))
 (let ((?x19328 (- (- ?x19322 (* (* 4.0 l_0_10_35) l_0_10_35)) (* (* 4.0 l_0_10_36) l_0_10_36))))
 (let ((?x19332 (- (- ?x19328 (* (* 12.0 l_0_10_47) l_0_10_56)) (* (* 12.0 l_0_10_48) l_0_10_57))))
 (let ((?x19336 (+ (+ ?x19332 (* (* 6.0 l_0_10_49) l_0_10_56)) (* (* 6.0 l_0_10_50) l_0_10_57))))
 (let ((?x19340 (+ (+ ?x19336 (* (* 6.0 l_0_10_51) l_0_10_58)) (* (* 12.0 l_0_10_62) l_0_10_71))))
 (let ((?x19344 (- (+ ?x19340 (* (* 12.0 l_0_10_63) l_0_10_72)) (* (* 6.0 l_0_10_64) l_0_10_71))))
 (let ((?x19348 (- (- ?x19344 (* (* 6.0 l_0_10_65) l_0_10_72)) (* (* 6.0 l_0_10_66) l_0_10_73))))
 (= (+ (+ (+ ?x19348 ?x18493) ?x18495) ?x18497) 0.0))))))))))))))))))))
(assert
 (let ((?x12988 (* l_0_10_66 l_0_10_66)))
 (let ((?x19426 (* 6.0 ?x12988)))
 (let ((?x12983 (* l_0_10_65 l_0_10_65)))
 (let ((?x19424 (* 6.0 ?x12983)))
 (let ((?x12978 (* l_0_10_64 l_0_10_64)))
 (let ((?x19422 (* 6.0 ?x12978)))
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17985 (* ?x17717 l_0_10_65)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17981 (* ?x17714 l_0_10_64)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17968 (* ?x17707 l_0_10_50)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17964 (* ?x17704 l_0_10_49)))
 (let ((?x17267 (* l_0_10_36 l_0_10_36)))
 (let ((?x19410 (* 12.0 ?x17267)))
 (let ((?x17264 (* l_0_10_35 l_0_10_35)))
 (let ((?x19408 (* 12.0 ?x17264)))
 (let ((?x17261 (* l_0_10_34 l_0_10_34)))
 (let ((?x19406 (* 12.0 ?x17261)))
 (let ((?x19402 (- (* (* (- 12.0) l_0_10_19) l_0_10_19) (* (* 12.0 l_0_10_20) l_0_10_20))))
 (let ((?x19411 (+ (+ (+ (- ?x19402 (* (* 12.0 l_0_10_21) l_0_10_21)) ?x19406) ?x19408) ?x19410)))
 (let ((?x19417 (- (- (+ (+ ?x19411 ?x17964) ?x17968) (* (* 6.0 l_0_10_49) l_0_10_49)) (* (* 6.0 l_0_10_50) l_0_10_50))))
 (let ((?x19423 (+ (- (- (- ?x19417 (* (* 6.0 l_0_10_51) l_0_10_51)) ?x17981) ?x17985) ?x19422)))
 (= (+ (+ ?x19423 ?x19424) ?x19426) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x17718 (* ?x17717 l_0_10_68)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x17715 (* ?x17714 l_0_10_67)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x17708 (* ?x17707 l_0_10_53)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x17705 (* ?x17704 l_0_10_52)))
 (let ((?x19463 (- (* (* (- 24.0) l_0_10_19) l_0_10_22) (* (* 24.0 l_0_10_20) l_0_10_23))))
 (let ((?x19469 (+ (- ?x19463 (* (* 24.0 l_0_10_21) l_0_10_24)) (* (* 24.0 l_0_10_34) l_0_10_37))))
 (let ((?x19475 (+ (+ ?x19469 (* (* 24.0 l_0_10_35) l_0_10_38)) (* (* 24.0 l_0_10_36) l_0_10_39))))
 (let ((?x19483 (- (- (+ (+ ?x19475 ?x17705) ?x17708) (* (* 12.0 l_0_10_49) l_0_10_52)) (* (* 12.0 l_0_10_50) l_0_10_53))))
 (let ((?x19491 (+ (- (- (- ?x19483 (* (* 12.0 l_0_10_51) l_0_10_54)) ?x17715) ?x17718) (* (* 12.0 l_0_10_64) l_0_10_67))))
 (let ((?x19497 (+ (+ ?x19491 (* (* 12.0 l_0_10_65) l_0_10_68)) (* (* 12.0 l_0_10_66) l_0_10_69))))
 (= ?x19497 0.0))))))))))))))))
(assert
 (let ((?x17717 (* 8.0 l_0_10_63)))
 (let ((?x18295 (* ?x17717 l_0_10_72)))
 (let ((?x17714 (* 8.0 l_0_10_62)))
 (let ((?x18293 (* ?x17714 l_0_10_71)))
 (let ((?x17707 (* 8.0 l_0_10_48)))
 (let ((?x18279 (* ?x17707 l_0_10_57)))
 (let ((?x17704 (* 8.0 l_0_10_47)))
 (let ((?x18277 (* ?x17704 l_0_10_56)))
 (let ((?x19522 (- (* (* (- 24.0) l_0_10_19) l_0_10_26) (* (* 24.0 l_0_10_20) l_0_10_27))))
 (let ((?x19535 (+ (- ?x19522 (* (* 24.0 l_0_10_21) l_0_10_28)) (* (* 24.0 l_0_10_34) l_0_10_41))))
 (let ((?x19539 (+ (+ ?x19535 (* (* 24.0 l_0_10_35) l_0_10_42)) (* (* 24.0 l_0_10_36) l_0_10_43))))
 (let ((?x19545 (- (- (+ (+ ?x19539 ?x18277) ?x18279) (* (* 12.0 l_0_10_49) l_0_10_56)) (* (* 12.0 l_0_10_50) l_0_10_57))))
 (let ((?x19551 (+ (- (- (- ?x19545 (* (* 12.0 l_0_10_51) l_0_10_58)) ?x18293) ?x18295) (* (* 12.0 l_0_10_64) l_0_10_71))))
 (let ((?x19555 (+ (+ ?x19551 (* (* 12.0 l_0_10_65) l_0_10_72)) (* (* 12.0 l_0_10_66) l_0_10_73))))
 (= ?x19555 0.0))))))))))))))))
(assert
 (let ((?x18106 (* l_0_10_40 l_0_10_40)))
 (let ((?x19592 (* 12.0 ?x18106)))
 (let ((?x18103 (* l_0_10_39 l_0_10_39)))
 (let ((?x19590 (* 12.0 ?x18103)))
 (let ((?x18100 (* l_0_10_38 l_0_10_38)))
 (let ((?x19588 (* 12.0 ?x18100)))
 (let ((?x18097 (* l_0_10_37 l_0_10_37)))
 (let ((?x19586 (* 12.0 ?x18097)))
 (let ((?x19579 (- (* (* (- 12.0) l_0_10_22) l_0_10_22) (* (* 12.0 l_0_10_23) l_0_10_23))))
 (let ((?x19585 (- (- ?x19579 (* (* 12.0 l_0_10_24) l_0_10_24)) (* (* 12.0 l_0_10_25) l_0_10_25))))
 (let ((?x19595 (- (+ (+ (+ (+ ?x19585 ?x19586) ?x19588) ?x19590) ?x19592) (* (* 6.0 l_0_10_52) l_0_10_52))))
 (let ((?x19599 (- (- ?x19595 (* (* 6.0 l_0_10_53) l_0_10_53)) (* (* 6.0 l_0_10_54) l_0_10_54))))
 (let ((?x19603 (+ (- ?x19599 (* (* 6.0 l_0_10_55) l_0_10_55)) (* 6.0 (* l_0_10_67 l_0_10_67)))))
 (let ((?x19607 (+ (+ ?x19603 (* 6.0 (* l_0_10_68 l_0_10_68))) (* 6.0 (* l_0_10_69 l_0_10_69)))))
 (= (+ ?x19607 (* 6.0 (* l_0_10_70 l_0_10_70))) 0.0))))))))))))))))
(assert
 (let ((?x19623 (- (* (* (- 24.0) l_0_10_22) l_0_10_26) (* (* 24.0 l_0_10_23) l_0_10_27))))
 (let ((?x19629 (- (- ?x19623 (* (* 24.0 l_0_10_24) l_0_10_28)) (* (* 24.0 l_0_10_25) l_0_10_29))))
 (let ((?x19635 (+ (+ ?x19629 (* (* 24.0 l_0_10_37) l_0_10_41)) (* (* 24.0 l_0_10_38) l_0_10_42))))
 (let ((?x19641 (+ (+ ?x19635 (* (* 24.0 l_0_10_39) l_0_10_43)) (* (* 24.0 l_0_10_40) l_0_10_44))))
 (let ((?x19647 (- (- ?x19641 (* (* 12.0 l_0_10_52) l_0_10_56)) (* (* 12.0 l_0_10_53) l_0_10_57))))
 (let ((?x19653 (- (- ?x19647 (* (* 12.0 l_0_10_54) l_0_10_58)) (* (* 12.0 l_0_10_55) l_0_10_59))))
 (let ((?x19659 (+ (+ ?x19653 (* (* 12.0 l_0_10_67) l_0_10_71)) (* (* 12.0 l_0_10_68) l_0_10_72))))
 (let ((?x19665 (+ (+ ?x19659 (* (* 12.0 l_0_10_69) l_0_10_73)) (* (* 12.0 l_0_10_70) l_0_10_74))))
 (= ?x19665 0.0))))))))))
(assert
 (let ((?x19122 (* l_0_10_45 l_0_10_45)))
 (let ((?x19729 (* 12.0 ?x19122)))
 (let ((?x19119 (* l_0_10_44 l_0_10_44)))
 (let ((?x19727 (* 12.0 ?x19119)))
 (let ((?x19116 (* l_0_10_43 l_0_10_43)))
 (let ((?x19725 (* 12.0 ?x19116)))
 (let ((?x19113 (* l_0_10_42 l_0_10_42)))
 (let ((?x19723 (* 12.0 ?x19113)))
 (let ((?x19110 (* l_0_10_41 l_0_10_41)))
 (let ((?x19721 (* 12.0 ?x19110)))
 (let ((?x19700 (- (* (* (- 12.0) l_0_10_26) l_0_10_26) (* (* 12.0 l_0_10_27) l_0_10_27))))
 (let ((?x19717 (- (- ?x19700 (* (* 12.0 l_0_10_28) l_0_10_28)) (* (* 12.0 l_0_10_29) l_0_10_29))))
 (let ((?x19726 (+ (+ (+ (- ?x19717 (* (* 12.0 l_0_10_30) l_0_10_30)) ?x19721) ?x19723) ?x19725)))
 (let ((?x19736 (- (- (+ (+ ?x19726 ?x19727) ?x19729) (* (* 6.0 l_0_10_56) l_0_10_56)) (* (* 6.0 l_0_10_57) l_0_10_57))))
 (let ((?x19742 (- (- ?x19736 (* (* 6.0 l_0_10_58) l_0_10_58)) (* (* 6.0 l_0_10_59) l_0_10_59))))
 (let ((?x19747 (+ (- ?x19742 (* (* 6.0 l_0_10_60) l_0_10_60)) (* 6.0 (* l_0_10_71 l_0_10_71)))))
 (let ((?x19751 (+ (+ ?x19747 (* 6.0 (* l_0_10_72 l_0_10_72))) (* 6.0 (* l_0_10_73 l_0_10_73)))))
 (let ((?x19755 (+ (+ ?x19751 (* 6.0 (* l_0_10_74 l_0_10_74))) (* 6.0 (* l_0_10_75 l_0_10_75)))))
 (= ?x19755 0.0))))))))))))))))))))
(assert
 (let ((?x17671 (* l_0_10_76 l_0_10_76)))
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17869 (* ?x13452 l_0_10_71)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17855 (* ?x13533 l_0_10_56)))
 (let ((?x18880 (* l_0_10_16 l_0_10_16)))
 (let ((?x6646 (* 4.0 ?x18880)))
 (let ((?x19783 (+ (+ (- (- ?x6646 (* (* 4.0 l_0_10_31) l_0_10_31)) ?x17855) ?x17869) ?x17671)))
 (= ?x19783 0.0))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17769 (* ?x17720 l_0_10_79)))
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x18606 (* ?x17766 l_0_10_73)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x18604 (* ?x17763 l_0_10_72)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x18602 (* ?x17760 l_0_10_71)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x18588 (* ?x17752 l_0_10_58)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x18586 (* ?x17749 l_0_10_57)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x18584 (* ?x17746 l_0_10_56)))
 (let ((?x15760 (- (* (* 8.0 l_0_10_16) l_0_10_19) (* (* 8.0 l_0_10_31) l_0_10_34))))
 (let ((?x11458 (- (- (- (+ ?x15760 (* (* 6.0 l_0_10_46) l_0_10_56)) ?x18584) ?x18586) ?x18588)))
 (let ((?x6652 (+ (+ (+ (- ?x11458 (* (* 6.0 l_0_10_61) l_0_10_71)) ?x18602) ?x18604) ?x18606)))
 (= (+ ?x6652 ?x17769) 0.0)))))))))))))))))))
(assert
 (let ((?x17720 (* 2.0 l_0_10_76)))
 (let ((?x17884 (* ?x17720 l_0_10_86)))
 (let ((?x15042 (* l_0_10_75 l_0_10_75)))
 (let ((?x3277 (* 4.0 ?x15042)))
 (let ((?x15040 (* l_0_10_74 l_0_10_74)))
 (let ((?x5101 (* 4.0 ?x15040)))
 (let ((?x15038 (* l_0_10_73 l_0_10_73)))
 (let ((?x10543 (* 4.0 ?x15038)))
 (let ((?x15035 (* l_0_10_72 l_0_10_72)))
 (let ((?x15036 (* 4.0 ?x15035)))
 (let ((?x10452 (* l_0_10_71 l_0_10_71)))
 (let ((?x10524 (* 4.0 ?x10452)))
 (let ((?x19809 (- (* (* 8.0 l_0_10_16) l_0_10_26) (* (* 8.0 l_0_10_31) l_0_10_41))))
 (let ((?x19815 (- (- ?x19809 (* (* 4.0 l_0_10_56) l_0_10_56)) (* (* 4.0 l_0_10_57) l_0_10_57))))
 (let ((?x19821 (- (- ?x19815 (* (* 4.0 l_0_10_58) l_0_10_58)) (* (* 4.0 l_0_10_59) l_0_10_59))))
 (let ((?x19827 (+ (+ (+ (- ?x19821 (* (* 4.0 l_0_10_60) l_0_10_60)) ?x10524) ?x15036) ?x10543)))
 (= (+ (+ (+ ?x19827 ?x5101) ?x3277) ?x17884) 0.0))))))))))))))))))
(assert
 (let ((?x18534 (* 2.0 l_0_10_81)))
 (let ((?x18627 (* ?x18534 l_0_10_88)))
 (let ((?x18531 (* 2.0 l_0_10_80)))
 (let ((?x18624 (* ?x18531 l_0_10_87)))
 (let ((?x18528 (* 2.0 l_0_10_79)))
 (let ((?x18621 (* ?x18528 l_0_10_86)))
 (let ((?x18798 (* l_0_10_60 l_0_10_60)))
 (let ((?x19858 (* 3.0 ?x18798)))
 (let ((?x18795 (* l_0_10_59 l_0_10_59)))
 (let ((?x19856 (* 3.0 ?x18795)))
 (let ((?x18792 (* l_0_10_58 l_0_10_58)))
 (let ((?x19854 (* 3.0 ?x18792)))
 (let ((?x18789 (* l_0_10_57 l_0_10_57)))
 (let ((?x19852 (* 3.0 ?x18789)))
 (let ((?x18786 (* l_0_10_56 l_0_10_56)))
 (let ((?x19850 (* 3.0 ?x18786)))
 (let ((?x19841 (+ (* (* 8.0 l_0_10_19) l_0_10_26) (* (* 8.0 l_0_10_20) l_0_10_27))))
 (let ((?x19845 (- (+ ?x19841 (* (* 8.0 l_0_10_21) l_0_10_28)) (* (* 8.0 l_0_10_34) l_0_10_41))))
 (let ((?x19849 (- (- ?x19845 (* (* 8.0 l_0_10_35) l_0_10_42)) (* (* 8.0 l_0_10_36) l_0_10_43))))
 (let ((?x19862 (- (+ (+ (+ (+ (+ ?x19849 ?x19850) ?x19852) ?x19854) ?x19856) ?x19858) (* (* 3.0 l_0_10_71) l_0_10_71))))
 (let ((?x19868 (- (- ?x19862 (* (* 3.0 l_0_10_72) l_0_10_72)) (* (* 3.0 l_0_10_73) l_0_10_73))))
 (let ((?x19874 (- (- ?x19868 (* (* 3.0 l_0_10_74) l_0_10_74)) (* (* 3.0 l_0_10_75) l_0_10_75))))
 (= (+ (+ (+ ?x19874 ?x18621) ?x18624) ?x18627) 0.0))))))))))))))))))))))))
(assert
 (let ((?x18828 (* l_0_10_90 l_0_10_90)))
 (let ((?x18826 (* l_0_10_89 l_0_10_89)))
 (let ((?x18824 (* l_0_10_88 l_0_10_88)))
 (let ((?x18822 (* l_0_10_87 l_0_10_87)))
 (let ((?x18820 (* l_0_10_86 l_0_10_86)))
 (let ((?x19171 (* l_0_10_30 l_0_10_30)))
 (let ((?x19901 (* 4.0 ?x19171)))
 (let ((?x6037 (* l_0_10_29 l_0_10_29)))
 (let ((?x19899 (* 4.0 ?x6037)))
 (let ((?x5952 (* l_0_10_28 l_0_10_28)))
 (let ((?x19897 (* 4.0 ?x5952)))
 (let ((?x19165 (* l_0_10_27 l_0_10_27)))
 (let ((?x19895 (* 4.0 ?x19165)))
 (let ((?x6010 (* l_0_10_26 l_0_10_26)))
 (let ((?x11752 (* 4.0 ?x6010)))
 (let ((?x19905 (- (+ (+ (+ (+ ?x11752 ?x19895) ?x19897) ?x19899) ?x19901) (* (* 4.0 l_0_10_41) l_0_10_41))))
 (let ((?x19911 (- (- ?x19905 (* (* 4.0 l_0_10_42) l_0_10_42)) (* (* 4.0 l_0_10_43) l_0_10_43))))
 (let ((?x19917 (- (- ?x19911 (* (* 4.0 l_0_10_44) l_0_10_44)) (* (* 4.0 l_0_10_45) l_0_10_45))))
 (= (+ (+ (+ (+ (+ ?x19917 ?x18820) ?x18822) ?x18824) ?x18826) ?x18828) 0.0))))))))))))))))))))
(assert
 (let ((?x17669 (* (* 4.0 l_0_10_61) l_0_10_61)))
 (let ((?x13468 (* l_0_10_46 l_0_10_46)))
 (let ((?x7244 (* 4.0 ?x13468)))
 (= (- ?x7244 ?x17669) 0.0)))))
(assert
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17755 (* ?x13452 l_0_10_64)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x3229 (* ?x13533 l_0_10_49)))
 (= (- ?x3229 ?x17755) 0.0))))))
(assert
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x2915 (* ?x13452 l_0_10_67)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x13465 (* ?x13533 l_0_10_52)))
 (= (- ?x13465 ?x2915) 0.0))))))
(assert
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17869 (* ?x13452 l_0_10_71)))
 (let ((?x13533 (* 8.0 l_0_10_46)))
 (let ((?x17855 (* ?x13533 l_0_10_56)))
 (= (- ?x17855 ?x17869) 0.0))))))
(assert
 (let ((?x18491 (* (* 4.0 l_0_10_66) l_0_10_66)))
 (let ((?x18485 (* (* 4.0 l_0_10_65) l_0_10_65)))
 (let ((?x18479 (* (* 4.0 l_0_10_64) l_0_10_64)))
 (let ((?x17182 (* l_0_10_51 l_0_10_51)))
 (let ((?x18467 (* 4.0 ?x17182)))
 (let ((?x17179 (* l_0_10_50 l_0_10_50)))
 (let ((?x18462 (* 4.0 ?x17179)))
 (let ((?x17176 (* l_0_10_49 l_0_10_49)))
 (let ((?x18455 (* 4.0 ?x17176)))
 (= (- (- (- (+ (+ ?x18455 ?x18462) ?x18467) ?x18479) ?x18485) ?x18491) 0.0)))))))))))
(assert
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x17767 (* ?x17766 l_0_10_69)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x17764 (* ?x17763 l_0_10_68)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x17761 (* ?x17760 l_0_10_67)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x17753 (* ?x17752 l_0_10_54)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x17750 (* ?x17749 l_0_10_53)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x17747 (* ?x17746 l_0_10_52)))
 (= (- (- (- (+ (+ ?x17747 ?x17750) ?x17753) ?x17761) ?x17764) ?x17767) 0.0))))))))))))))
(assert
 (let ((?x17766 (* 8.0 l_0_10_66)))
 (let ((?x18606 (* ?x17766 l_0_10_73)))
 (let ((?x17763 (* 8.0 l_0_10_65)))
 (let ((?x18604 (* ?x17763 l_0_10_72)))
 (let ((?x17760 (* 8.0 l_0_10_64)))
 (let ((?x18602 (* ?x17760 l_0_10_71)))
 (let ((?x17752 (* 8.0 l_0_10_51)))
 (let ((?x18588 (* ?x17752 l_0_10_58)))
 (let ((?x17749 (* 8.0 l_0_10_50)))
 (let ((?x18586 (* ?x17749 l_0_10_57)))
 (let ((?x17746 (* 8.0 l_0_10_49)))
 (let ((?x18584 (* ?x17746 l_0_10_56)))
 (= (- (- (- (+ (+ ?x18584 ?x18586) ?x18588) ?x18602) ?x18604) ?x18606) 0.0))))))))))))))
(assert
 (let ((?x18673 (* (* 4.0 l_0_10_70) l_0_10_70)))
 (let ((?x18668 (* (* 4.0 l_0_10_69) l_0_10_69)))
 (let ((?x18665 (* (* 4.0 l_0_10_68) l_0_10_68)))
 (let ((?x18662 (* (* 4.0 l_0_10_67) l_0_10_67)))
 (let ((?x13718 (* l_0_10_55 l_0_10_55)))
 (let ((?x3262 (* 4.0 ?x13718)))
 (let ((?x13709 (* l_0_10_54 l_0_10_54)))
 (let ((?x13710 (* 4.0 ?x13709)))
 (let ((?x13707 (* l_0_10_53 l_0_10_53)))
 (let ((?x13706 (* 4.0 ?x13707)))
 (let ((?x17830 (* l_0_10_52 l_0_10_52)))
 (let ((?x17831 (* 4.0 ?x17830)))
 (let ((?x19989 (- (- (- (- (+ (+ (+ ?x17831 ?x13706) ?x13710) ?x3262) ?x18662) ?x18665) ?x18668) ?x18673)))
 (= ?x19989 0.0)))))))))))))))
(assert
 (let ((?x17881 (* (* 8.0 l_0_10_70) l_0_10_74)))
 (let ((?x17878 (* (* 8.0 l_0_10_69) l_0_10_73)))
 (let ((?x17875 (* (* 8.0 l_0_10_68) l_0_10_72)))
 (let ((?x17872 (* (* 8.0 l_0_10_67) l_0_10_71)))
 (let ((?x17867 (* (* 8.0 l_0_10_55) l_0_10_59)))
 (let ((?x17864 (* (* 8.0 l_0_10_54) l_0_10_58)))
 (let ((?x17861 (* (* 8.0 l_0_10_53) l_0_10_57)))
 (let ((?x17858 (* (* 8.0 l_0_10_52) l_0_10_56)))
 (let ((?x20004 (- (- (- (- (+ (+ (+ ?x17858 ?x17861) ?x17864) ?x17867) ?x17872) ?x17875) ?x17878) ?x17881)))
 (= ?x20004 0.0)))))))))))
(assert
 (let ((?x18814 (* (* 4.0 l_0_10_75) l_0_10_75)))
 (let ((?x18811 (* (* 4.0 l_0_10_74) l_0_10_74)))
 (let ((?x18808 (* (* 4.0 l_0_10_73) l_0_10_73)))
 (let ((?x18805 (* (* 4.0 l_0_10_72) l_0_10_72)))
 (let ((?x18802 (* (* 4.0 l_0_10_71) l_0_10_71)))
 (let ((?x18798 (* l_0_10_60 l_0_10_60)))
 (let ((?x18799 (* 4.0 ?x18798)))
 (let ((?x18795 (* l_0_10_59 l_0_10_59)))
 (let ((?x18796 (* 4.0 ?x18795)))
 (let ((?x18792 (* l_0_10_58 l_0_10_58)))
 (let ((?x18793 (* 4.0 ?x18792)))
 (let ((?x18789 (* l_0_10_57 l_0_10_57)))
 (let ((?x18790 (* 4.0 ?x18789)))
 (let ((?x18786 (* l_0_10_56 l_0_10_56)))
 (let ((?x18787 (* 4.0 ?x18786)))
 (let ((?x20022 (- (- (- (+ (+ (+ (+ ?x18787 ?x18790) ?x18793) ?x18796) ?x18799) ?x18802) ?x18805) ?x18808)))
 (= (- (- ?x20022 ?x18811) ?x18814) 0.0))))))))))))))))))
(assert
 (let ((?x13452 (* 8.0 l_0_10_61)))
 (let ((?x17755 (* ?x13452 l_0_10_64)))
 (let ((?x13468 (* l_0_10_46 l_0_10_46)))
 (let ((?x15956 (* 3.0 ?x13468)))
 (let ((?x11851 (- (+ (+ (* (* (- 8.0) l_0_10_46) l_0_10_49) ?x15956) ?x17755) (* (* 3.0 l_0_10_61) l_0_10_61))))
 (= ?x11851 0.0)))))))
(assert
 (let ((?x13537 (* l_0_10_61 l_0_10_61)))
 (let ((?x17682 (* 4.0 ?x13537)))
 (= (+ (* (* (- 4.0) l_0_10_46) l_0_10_46) ?x17682) 0.0))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (let ((?x20126 (* (* 4.0 l_0_11_63) l_0_11_63)))
 (let ((?x20120 (* (* 4.0 l_0_11_62) l_0_11_62)))
 (let ((?x20113 (* l_0_11_51 l_0_11_51)))
 (let ((?x20114 (* 3.0 ?x20113)))
 (let ((?x20110 (* l_0_11_50 l_0_11_50)))
 (let ((?x20111 (* 3.0 ?x20110)))
 (let ((?x20107 (* l_0_11_49 l_0_11_49)))
 (let ((?x20108 (* 3.0 ?x20107)))
 (let ((?x20104 (* l_0_11_48 l_0_11_48)))
 (let ((?x20105 (* 4.0 ?x20104)))
 (let ((?x20098 (* l_0_11_47 l_0_11_47)))
 (let ((?x20099 (* 4.0 ?x20098)))
 (let ((?x20088 (- (* (* (- 24.0) l_0_11_17) l_0_11_19) (* (* 24.0 l_0_11_18) l_0_11_20))))
 (let ((?x20094 (+ (+ ?x20088 (* (* 24.0 l_0_11_32) l_0_11_34)) (* (* 24.0 l_0_11_33) l_0_11_35))))
 (let ((?x20103 (- (+ (- ?x20094 (* (* 12.0 l_0_11_47) l_0_11_49)) ?x20099) (* (* 12.0 l_0_11_48) l_0_11_50))))
 (let ((?x20118 (+ (+ (+ (+ (+ ?x20103 ?x20105) ?x20108) ?x20111) ?x20114) (* (* 12.0 l_0_11_62) l_0_11_64))))
 (let ((?x20130 (- (- (+ (- ?x20118 ?x20120) (* (* 12.0 l_0_11_63) l_0_11_65)) ?x20126) (* (* 3.0 l_0_11_64) l_0_11_64))))
 (let ((?x20136 (- (- ?x20130 (* (* 3.0 l_0_11_65) l_0_11_65)) (* (* 3.0 l_0_11_66) l_0_11_66))))
 (= (+ ?x20136 4.0) 0.0))))))))))))))))))))
(assert
 (let ((?x20272 (* l_0_11_96 l_0_11_96)))
 (let ((?x20270 (* l_0_11_95 l_0_11_95)))
 (let ((?x20268 (* l_0_11_94 l_0_11_94)))
 (let ((?x20166 (* l_0_11_63 l_0_11_63)))
 (let ((?x20260 (* 6.0 ?x20166)))
 (let ((?x20161 (* l_0_11_62 l_0_11_62)))
 (let ((?x20255 (* 6.0 ?x20161)))
 (let ((?x20221 (* l_0_11_33 l_0_11_33)))
 (let ((?x20222 (* 12.0 ?x20221)))
 (let ((?x20218 (* l_0_11_32 l_0_11_32)))
 (let ((?x20219 (* 12.0 ?x20218)))
 (let ((?x20201 (* l_0_11_156 l_0_11_156)))
 (let ((?x20199 (* l_0_11_155 l_0_11_155)))
 (let ((?x20197 (* l_0_11_154 l_0_11_154)))
 (let ((?x20195 (* l_0_11_141 l_0_11_141)))
 (let ((?x20193 (* l_0_11_140 l_0_11_140)))
 (let ((?x20191 (* l_0_11_139 l_0_11_139)))
 (let ((?x20189 (* l_0_11_126 l_0_11_126)))
 (let ((?x20187 (* l_0_11_125 l_0_11_125)))
 (let ((?x20185 (* l_0_11_124 l_0_11_124)))
 (let ((?x20183 (* l_0_11_111 l_0_11_111)))
 (let ((?x20184 (- (- (* (- l_0_11_109) l_0_11_109) (* l_0_11_110 l_0_11_110)) ?x20183)))
 (let ((?x20198 (- (- (- (- (- (- (- ?x20184 ?x20185) ?x20187) ?x20189) ?x20191) ?x20193) ?x20195) ?x20197)))
 (let ((?x20208 (- (- (- (- ?x20198 ?x20199) ?x20201) (* (* 12.0 l_0_11_17) l_0_11_17)) (* (* 12.0 l_0_11_18) l_0_11_18))))
 (let ((?x20214 (- (- ?x20208 (* (* 1.0 l_0_11_19) l_0_11_19)) (* (* 1.0 l_0_11_20) l_0_11_20))))
 (let ((?x20226 (+ (+ (+ (- ?x20214 (* (* 1.0 l_0_11_21) l_0_11_21)) ?x20219) ?x20222) (* 1.0 (* l_0_11_34 l_0_11_34)))))
 (let ((?x20232 (+ (+ ?x20226 (* 1.0 (* l_0_11_35 l_0_11_35))) (* 1.0 (* l_0_11_36 l_0_11_36)))))
 (let ((?x20237 (- (+ ?x20232 (* (* 6.0 l_0_11_47) l_0_11_49)) (* (* 6.0 l_0_11_47) l_0_11_47))))
 (let ((?x20242 (- (+ ?x20237 (* (* 6.0 l_0_11_48) l_0_11_50)) (* (* 6.0 l_0_11_48) l_0_11_48))))
 (let ((?x20248 (- (- ?x20242 (* (* 1.0 l_0_11_49) l_0_11_49)) (* (* 1.0 l_0_11_50) l_0_11_50))))
 (let ((?x20254 (- (- ?x20248 (* (* 1.0 l_0_11_51) l_0_11_51)) (* (* 6.0 l_0_11_62) l_0_11_64))))
 (let ((?x20263 (+ (+ (- (+ ?x20254 ?x20255) (* (* 6.0 l_0_11_63) l_0_11_65)) ?x20260) (* 1.0 (* l_0_11_64 l_0_11_64)))))
 (let ((?x20267 (+ (+ ?x20263 (* 1.0 (* l_0_11_65 l_0_11_65))) (* 1.0 (* l_0_11_66 l_0_11_66)))))
 (= (+ (- (- (- ?x20267 ?x20268) ?x20270) ?x20272) 6.0) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x20104 (* l_0_11_48 l_0_11_48)))
 (let ((?x20384 (* 3.0 ?x20104)))
 (let ((?x20098 (* l_0_11_47 l_0_11_47)))
 (let ((?x20379 (* 3.0 ?x20098)))
 (let ((?x20345 (- (* (* (- 2.0) l_0_11_107) l_0_11_109) (* (* 2.0 l_0_11_108) l_0_11_110))))
 (let ((?x20351 (- (- ?x20345 (* (* 2.0 l_0_11_122) l_0_11_124)) (* (* 2.0 l_0_11_123) l_0_11_125))))
 (let ((?x20357 (- (- ?x20351 (* (* 2.0 l_0_11_137) l_0_11_139)) (* (* 2.0 l_0_11_138) l_0_11_140))))
 (let ((?x20363 (- (- ?x20357 (* (* 2.0 l_0_11_152) l_0_11_154)) (* (* 2.0 l_0_11_153) l_0_11_155))))
 (let ((?x20369 (- (- ?x20363 (* (* 2.0 l_0_11_17) l_0_11_19)) (* (* 2.0 l_0_11_18) l_0_11_20))))
 (let ((?x20375 (+ (+ ?x20369 (* (* 2.0 l_0_11_32) l_0_11_34)) (* (* 2.0 l_0_11_33) l_0_11_35))))
 (let ((?x20383 (- (+ (- ?x20375 (* (* 2.0 l_0_11_47) l_0_11_49)) ?x20379) (* (* 2.0 l_0_11_48) l_0_11_50))))
 (let ((?x20391 (- (+ (+ ?x20383 ?x20384) (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 3.0 l_0_11_62) l_0_11_62))))
 (let ((?x20397 (- (+ ?x20391 (* (* 2.0 l_0_11_63) l_0_11_65)) (* (* 3.0 l_0_11_63) l_0_11_63))))
 (let ((?x20403 (- (- ?x20397 (* (* 2.0 l_0_11_92) l_0_11_94)) (* (* 2.0 l_0_11_93) l_0_11_95))))
 (= (+ ?x20403 3.0) 0.0))))))))))))))))
(assert
 (let ((?x20491 (* l_0_11_93 l_0_11_93)))
 (let ((?x20489 (* l_0_11_92 l_0_11_92)))
 (let ((?x20467 (* l_0_11_153 l_0_11_153)))
 (let ((?x20465 (* l_0_11_152 l_0_11_152)))
 (let ((?x20463 (* l_0_11_138 l_0_11_138)))
 (let ((?x20461 (* l_0_11_137 l_0_11_137)))
 (let ((?x20459 (* l_0_11_123 l_0_11_123)))
 (let ((?x7714 (* l_0_11_122 l_0_11_122)))
 (let ((?x12302 (* l_0_11_108 l_0_11_108)))
 (let ((?x20458 (- (- (- (* 4.0 _a_0_) (* l_0_11_107 l_0_11_107)) ?x12302) ?x7714)))
 (let ((?x20471 (- (- (- (- (- (- ?x20458 ?x20459) ?x20461) ?x20463) ?x20465) ?x20467) (* (* 1.0 l_0_11_17) l_0_11_17))))
 (let ((?x20476 (+ (- ?x20471 (* (* 1.0 l_0_11_18) l_0_11_18)) (* 1.0 (* l_0_11_32 l_0_11_32)))))
 (let ((?x20481 (- (+ ?x20476 (* 1.0 (* l_0_11_33 l_0_11_33))) (* (* 1.0 l_0_11_47) l_0_11_47))))
 (let ((?x20486 (+ (- ?x20481 (* (* 1.0 l_0_11_48) l_0_11_48)) (* 1.0 (* l_0_11_62 l_0_11_62)))))
 (= (- (- (+ ?x20486 (* 1.0 (* l_0_11_63 l_0_11_63))) ?x20489) ?x20491) 0.0))))))))))))))))
(assert
 (let ((?x20548 (* l_0_11_78 l_0_11_78)))
 (let ((?x20546 (* l_0_11_77 l_0_11_77)))
 (let ((?x12030 (* l_0_11_18 l_0_11_18)))
 (let ((?x20526 (* 4.0 ?x12030)))
 (let ((?x7506 (* l_0_11_17 l_0_11_17)))
 (let ((?x20522 (* 4.0 ?x7506)))
 (let ((?x16223 (- (- (* 4.0 _a_1_) (* (* 2.0 l_0_11_101) l_0_11_92)) (* (* 2.0 l_0_11_102) l_0_11_93))))
 (let ((?x20507 (- (- ?x16223 (* (* 2.0 l_0_11_107) l_0_11_116)) (* (* 2.0 l_0_11_108) l_0_11_117))))
 (let ((?x20511 (- (- ?x20507 (* (* 2.0 l_0_11_122) l_0_11_131)) (* (* 2.0 l_0_11_123) l_0_11_132))))
 (let ((?x20515 (- (- ?x20511 (* (* 2.0 l_0_11_137) l_0_11_146)) (* (* 2.0 l_0_11_138) l_0_11_147))))
 (let ((?x20519 (- (- ?x20515 (* (* 2.0 l_0_11_152) l_0_11_161)) (* (* 2.0 l_0_11_153) l_0_11_162))))
 (let ((?x20525 (- (+ (- ?x20519 (* (* 2.0 l_0_11_17) l_0_11_26)) ?x20522) (* (* 2.0 l_0_11_18) l_0_11_27))))
 (let ((?x20532 (- (+ (+ ?x20525 ?x20526) (* (* 2.0 l_0_11_32) l_0_11_41)) (* (* 4.0 l_0_11_32) l_0_11_32))))
 (let ((?x20537 (- (+ ?x20532 (* (* 2.0 l_0_11_33) l_0_11_42)) (* (* 4.0 l_0_11_33) l_0_11_33))))
 (let ((?x20541 (- (- ?x20537 (* (* 2.0 l_0_11_47) l_0_11_56)) (* (* 2.0 l_0_11_48) l_0_11_57))))
 (let ((?x20545 (+ (+ ?x20541 (* (* 2.0 l_0_11_62) l_0_11_71)) (* (* 2.0 l_0_11_63) l_0_11_72))))
 (= (+ (+ ?x20545 ?x20546) ?x20548) 0.0))))))))))))))))))
(assert
 (let ((?x20548 (* l_0_11_78 l_0_11_78)))
 (let ((?x20546 (* l_0_11_77 l_0_11_77)))
 (let ((?x20126 (* (* 4.0 l_0_11_63) l_0_11_63)))
 (let ((?x20120 (* (* 4.0 l_0_11_62) l_0_11_62)))
 (let ((?x20104 (* l_0_11_48 l_0_11_48)))
 (let ((?x20105 (* 4.0 ?x20104)))
 (let ((?x20098 (* l_0_11_47 l_0_11_47)))
 (let ((?x20099 (* 4.0 ?x20098)))
 (let ((?x20577 (* l_0_11_3 l_0_11_3)))
 (let ((?x20575 (* l_0_11_2 l_0_11_2)))
 (let ((?x16248 (- (- (* 4.0 _a_2_) (* (* 2.0 l_0_11_107) l_0_11_112)) (* (* 2.0 l_0_11_108) l_0_11_113))))
 (let ((?x20562 (- (- ?x16248 (* (* 2.0 l_0_11_122) l_0_11_127)) (* (* 2.0 l_0_11_123) l_0_11_128))))
 (let ((?x20566 (- (- ?x20562 (* (* 2.0 l_0_11_137) l_0_11_142)) (* (* 2.0 l_0_11_138) l_0_11_143))))
 (let ((?x20570 (- (- ?x20566 (* (* 2.0 l_0_11_152) l_0_11_157)) (* (* 2.0 l_0_11_153) l_0_11_158))))
 (let ((?x20574 (- (- ?x20570 (* (* 2.0 l_0_11_17) l_0_11_22)) (* (* 2.0 l_0_11_18) l_0_11_23))))
 (let ((?x20582 (+ (+ (- (- ?x20574 ?x20575) ?x20577) (* (* 2.0 l_0_11_32) l_0_11_37)) (* (* 2.0 l_0_11_33) l_0_11_38))))
 (let ((?x20587 (- (+ (- ?x20582 (* (* 2.0 l_0_11_47) l_0_11_52)) ?x20099) (* (* 2.0 l_0_11_48) l_0_11_53))))
 (let ((?x20593 (+ (- (+ (+ ?x20587 ?x20105) (* (* 2.0 l_0_11_62) l_0_11_67)) ?x20120) (* (* 2.0 l_0_11_63) l_0_11_68))))
 (let ((?x20598 (- (- (- (- ?x20593 ?x20126) ?x20546) ?x20548) (* (* 2.0 l_0_11_92) l_0_11_97))))
 (= (- ?x20598 (* (* 2.0 l_0_11_93) l_0_11_98)) 0.0)))))))))))))))))))))
(assert
 (let ((?x20166 (* l_0_11_63 l_0_11_63)))
 (let ((?x20167 (* 4.0 ?x20166)))
 (let ((?x20161 (* l_0_11_62 l_0_11_62)))
 (let ((?x20162 (* 4.0 ?x20161)))
 (let ((?x20646 (- (* (* (- 2.0) l_0_11_106) l_0_11_107) (* (* 2.0 l_0_11_121) l_0_11_122))))
 (let ((?x20652 (- (- ?x20646 (* (* 2.0 l_0_11_136) l_0_11_137)) (* (* 2.0 l_0_11_151) l_0_11_152))))
 (let ((?x20658 (+ (- ?x20652 (* (* 2.0 l_0_11_16) l_0_11_17)) (* (* 2.0 l_0_11_31) l_0_11_32))))
 (let ((?x20664 (- (- ?x20658 (* (* 2.0 l_0_11_46) l_0_11_47)) (* (* 4.0 l_0_11_47) l_0_11_47))))
 (let ((?x20670 (+ (- ?x20664 (* (* 4.0 l_0_11_48) l_0_11_48)) (* (* 2.0 l_0_11_61) l_0_11_62))))
 (let ((?x20676 (- (- (+ (+ ?x20670 ?x20162) ?x20167) (* (* 2.0 l_0_11_91) l_0_11_92)) 4.0)))
 (= ?x20676 0.0))))))))))))
(assert
 (let ((?x20711 (* l_0_11_76 l_0_11_76)))
 (let ((?x20709 (* (* 4.0 l_0_11_61) l_0_11_61)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20706 (* ?x16678 l_0_11_67)))
 (let ((?x12547 (* l_0_11_46 l_0_11_46)))
 (let ((?x1085 (* 4.0 ?x12547)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x16670 (* ?x1040 l_0_11_52)))
 (let ((?x20712 (- (- (+ (+ (- (* (- l_0_11_1) l_0_11_1) ?x16670) ?x1085) ?x20706) ?x20709) ?x20711)))
 (= ?x20712 0.0)))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20759 (* ?x20758 l_0_11_77)))
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x20756 (* ?x20755 l_0_11_68)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x20753 (* ?x20752 l_0_11_67)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20748 (* ?x16678 l_0_11_62)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x20746 (* ?x20745 l_0_11_53)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x20743 (* ?x20742 l_0_11_52)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20738 (* ?x1040 l_0_11_47)))
 (let ((?x20727 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_106) l_0_11_112))))
 (let ((?x20731 (- (- ?x20727 (* (* 2.0 l_0_11_121) l_0_11_127)) (* (* 2.0 l_0_11_136) l_0_11_142))))
 (let ((?x20735 (- (- ?x20731 (* (* 2.0 l_0_11_151) l_0_11_157)) (* (* 2.0 l_0_11_16) l_0_11_22))))
 (let ((?x20741 (- (+ (+ ?x20735 (* (* 2.0 l_0_11_31) l_0_11_37)) ?x20738) (* (* 2.0 l_0_11_46) l_0_11_52))))
 (let ((?x20751 (+ (- (- (- ?x20741 ?x20743) ?x20746) ?x20748) (* (* 2.0 l_0_11_61) l_0_11_67))))
 (let ((?x20762 (- (- (+ (+ ?x20751 ?x20753) ?x20756) ?x20759) (* (* 2.0 l_0_11_91) l_0_11_97))))
 (= ?x20762 0.0))))))))))))))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20813 (* ?x20758 l_0_11_79)))
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x20811 (* ?x20810 l_0_11_69)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x20808 (* ?x20807 l_0_11_68)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x20805 (* ?x20804 l_0_11_67)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20799 (* ?x16678 l_0_11_64)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x20797 (* ?x20796 l_0_11_54)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x20794 (* ?x20793 l_0_11_53)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x20791 (* ?x20790 l_0_11_52)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20785 (* ?x1040 l_0_11_49)))
 (let ((?x20789 (+ (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x20785) (* (* 6.0 l_0_11_46) l_0_11_52))))
 (let ((?x20803 (- (- (- (- (- ?x20789 ?x20791) ?x20794) ?x20797) ?x20799) (* (* 6.0 l_0_11_61) l_0_11_67))))
 (= (- (+ (+ (+ ?x20803 ?x20805) ?x20808) ?x20811) ?x20813) 0.0))))))))))))))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20866 (* ?x20758 l_0_11_82)))
 (let ((?x20863 (* l_0_11_70 l_0_11_70)))
 (let ((?x20864 (* 4.0 ?x20863)))
 (let ((?x20860 (* l_0_11_69 l_0_11_69)))
 (let ((?x20861 (* 4.0 ?x20860)))
 (let ((?x20857 (* l_0_11_68 l_0_11_68)))
 (let ((?x20858 (* 4.0 ?x20857)))
 (let ((?x20854 (* l_0_11_67 l_0_11_67)))
 (let ((?x20855 (* 4.0 ?x20854)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20706 (* ?x16678 l_0_11_67)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x16670 (* ?x1040 l_0_11_52)))
 (let ((?x20843 (- (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x16670) (* (* 4.0 l_0_11_52) l_0_11_52))))
 (let ((?x20849 (- (- ?x20843 (* (* 4.0 l_0_11_53) l_0_11_53)) (* (* 4.0 l_0_11_54) l_0_11_54))))
 (let ((?x20859 (+ (+ (- (- ?x20849 (* (* 4.0 l_0_11_55) l_0_11_55)) ?x20706) ?x20855) ?x20858)))
 (= (- (+ (+ ?x20859 ?x20861) ?x20864) ?x20866) 0.0)))))))))))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20936 (* ?x20758 l_0_11_86)))
 (let ((?x20866 (* ?x20758 l_0_11_82)))
 (let ((?x20933 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x20930 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x20927 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x20924 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20921 (* ?x16678 l_0_11_71)))
 (let ((?x20919 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x20916 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x20913 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x20910 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20907 (* ?x1040 l_0_11_56)))
 (let ((?x20903 (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) (* (* 8.0 l_0_11_16) l_0_11_22))))
 (let ((?x20914 (- (- (+ (- ?x20903 (* (* 8.0 l_0_11_31) l_0_11_37)) ?x20907) ?x20910) ?x20913)))
 (let ((?x20934 (+ (+ (+ (+ (- (- (- ?x20914 ?x20916) ?x20919) ?x20921) ?x20924) ?x20927) ?x20930) ?x20933)))
 (= (- (+ ?x20934 ?x20866) ?x20936) 0.0))))))))))))))))))))
(assert
 (let ((?x21071 (* 2.0 l_0_11_78)))
 (let ((?x21072 (* ?x21071 l_0_11_80)))
 (let ((?x21068 (* 2.0 l_0_11_77)))
 (let ((?x21069 (* ?x21068 l_0_11_79)))
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21055 (* ?x20755 l_0_11_65)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21051 (* ?x20752 l_0_11_64)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21038 (* ?x20745 l_0_11_50)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21034 (* ?x20742 l_0_11_49)))
 (let ((?x20979 (- (* (* (- 2.0) l_0_11_109) l_0_11_112) (* (* 2.0 l_0_11_110) l_0_11_113))))
 (let ((?x20985 (- (- ?x20979 (* (* 2.0 l_0_11_111) l_0_11_114)) (* (* 2.0 l_0_11_124) l_0_11_127))))
 (let ((?x20991 (- (- ?x20985 (* (* 2.0 l_0_11_125) l_0_11_128)) (* (* 2.0 l_0_11_126) l_0_11_129))))
 (let ((?x20997 (- (- ?x20991 (* (* 2.0 l_0_11_139) l_0_11_142)) (* (* 2.0 l_0_11_140) l_0_11_143))))
 (let ((?x21003 (- (- ?x20997 (* (* 2.0 l_0_11_141) l_0_11_144)) (* (* 2.0 l_0_11_154) l_0_11_157))))
 (let ((?x21009 (- (- ?x21003 (* (* 2.0 l_0_11_155) l_0_11_158)) (* (* 2.0 l_0_11_156) l_0_11_159))))
 (let ((?x21015 (- (- ?x21009 (* (* 2.0 l_0_11_19) l_0_11_22)) (* (* 2.0 l_0_11_2) l_0_11_4))))
 (let ((?x21021 (- (- ?x21015 (* (* 2.0 l_0_11_20) l_0_11_23)) (* (* 2.0 l_0_11_21) l_0_11_24))))
 (let ((?x21027 (+ (- ?x21021 (* (* 2.0 l_0_11_3) l_0_11_5)) (* (* 2.0 l_0_11_34) l_0_11_37))))
 (let ((?x21033 (+ (+ ?x21027 (* (* 2.0 l_0_11_35) l_0_11_38)) (* (* 2.0 l_0_11_36) l_0_11_39))))
 (let ((?x21041 (+ (+ (+ (+ ?x21033 ?x21034) (* (* 6.0 l_0_11_47) l_0_11_52)) ?x21038) (* (* 6.0 l_0_11_48) l_0_11_53))))
 (let ((?x21047 (- (- ?x21041 (* (* 2.0 l_0_11_49) l_0_11_52)) (* (* 2.0 l_0_11_50) l_0_11_53))))
 (let ((?x21054 (- (- (- ?x21047 (* (* 2.0 l_0_11_51) l_0_11_54)) ?x21051) (* (* 6.0 l_0_11_62) l_0_11_67))))
 (let ((?x21061 (+ (- (- ?x21054 ?x21055) (* (* 6.0 l_0_11_63) l_0_11_68)) (* (* 2.0 l_0_11_64) l_0_11_67))))
 (let ((?x21067 (+ (+ ?x21061 (* (* 2.0 l_0_11_65) l_0_11_68)) (* (* 2.0 l_0_11_66) l_0_11_69))))
 (let ((?x21079 (- (- (- (- ?x21067 ?x21069) ?x21072) (* (* 2.0 l_0_11_94) l_0_11_97)) (* (* 2.0 l_0_11_95) l_0_11_98))))
 (= (- ?x21079 (* (* 2.0 l_0_11_96) l_0_11_99)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x21266 (* l_0_11_99 l_0_11_99)))
 (let ((?x21264 (* l_0_11_98 l_0_11_98)))
 (let ((?x21262 (* l_0_11_97 l_0_11_97)))
 (let ((?x21071 (* 2.0 l_0_11_78)))
 (let ((?x21260 (* ?x21071 l_0_11_83)))
 (let ((?x21068 (* 2.0 l_0_11_77)))
 (let ((?x21258 (* ?x21068 l_0_11_82)))
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x20756 (* ?x20755 l_0_11_68)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x20753 (* ?x20752 l_0_11_67)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x20746 (* ?x20745 l_0_11_53)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x20743 (* ?x20742 l_0_11_52)))
 (let ((?x21204 (* l_0_11_160 l_0_11_160)))
 (let ((?x21202 (* l_0_11_159 l_0_11_159)))
 (let ((?x21200 (* l_0_11_158 l_0_11_158)))
 (let ((?x21198 (* l_0_11_157 l_0_11_157)))
 (let ((?x21196 (* l_0_11_145 l_0_11_145)))
 (let ((?x21194 (* l_0_11_144 l_0_11_144)))
 (let ((?x21192 (* l_0_11_143 l_0_11_143)))
 (let ((?x21190 (* l_0_11_142 l_0_11_142)))
 (let ((?x21188 (* l_0_11_130 l_0_11_130)))
 (let ((?x21186 (* l_0_11_129 l_0_11_129)))
 (let ((?x21184 (* l_0_11_128 l_0_11_128)))
 (let ((?x21182 (* l_0_11_127 l_0_11_127)))
 (let ((?x21180 (* l_0_11_115 l_0_11_115)))
 (let ((?x21178 (* l_0_11_114 l_0_11_114)))
 (let ((?x21176 (* l_0_11_113 l_0_11_113)))
 (let ((?x21177 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_112 l_0_11_112)) ?x21176)))
 (let ((?x21191 (- (- (- (- (- (- (- ?x21177 ?x21178) ?x21180) ?x21182) ?x21184) ?x21186) ?x21188) ?x21190)))
 (let ((?x21205 (- (- (- (- (- (- (- ?x21191 ?x21192) ?x21194) ?x21196) ?x21198) ?x21200) ?x21202) ?x21204)))
 (let ((?x21210 (- (- ?x21205 (* (* 2.0 l_0_11_2) l_0_11_7)) (* (* 1.0 l_0_11_22) l_0_11_22))))
 (let ((?x21216 (- (- ?x21210 (* (* 1.0 l_0_11_23) l_0_11_23)) (* (* 1.0 l_0_11_24) l_0_11_24))))
 (let ((?x21221 (- (- ?x21216 (* (* 1.0 l_0_11_25) l_0_11_25)) (* (* 2.0 l_0_11_3) l_0_11_8))))
 (let ((?x21227 (+ (+ ?x21221 (* 1.0 (* l_0_11_37 l_0_11_37))) (* 1.0 (* l_0_11_38 l_0_11_38)))))
 (let ((?x21233 (+ (+ ?x21227 (* 1.0 (* l_0_11_39 l_0_11_39))) (* 1.0 (* l_0_11_40 l_0_11_40)))))
 (let ((?x21241 (- (- (+ (+ ?x21233 ?x20743) ?x20746) (* (* 1.0 l_0_11_52) l_0_11_52)) (* (* 1.0 l_0_11_53) l_0_11_53))))
 (let ((?x21247 (- (- ?x21241 (* (* 1.0 l_0_11_54) l_0_11_54)) (* (* 1.0 l_0_11_55) l_0_11_55))))
 (let ((?x21253 (+ (+ (- (- ?x21247 ?x20753) ?x20756) (* 1.0 (* l_0_11_67 l_0_11_67))) (* 1.0 (* l_0_11_68 l_0_11_68)))))
 (let ((?x21257 (+ (+ ?x21253 (* 1.0 (* l_0_11_69 l_0_11_69))) (* 1.0 (* l_0_11_70 l_0_11_70)))))
 (= (- (- (- (- (- ?x21257 ?x21258) ?x21260) ?x21262) ?x21264) ?x21266) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21071 (* 2.0 l_0_11_78)))
 (let ((?x21424 (* ?x21071 l_0_11_87)))
 (let ((?x21260 (* ?x21071 l_0_11_83)))
 (let ((?x21068 (* 2.0 l_0_11_77)))
 (let ((?x21421 (* ?x21068 l_0_11_86)))
 (let ((?x21258 (* ?x21068 l_0_11_82)))
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21406 (* ?x20755 l_0_11_72)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21404 (* ?x20752 l_0_11_71)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21390 (* ?x20745 l_0_11_57)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21388 (* ?x20742 l_0_11_56)))
 (let ((?x21292 (- (* (* (- 2.0) l_0_11_100) l_0_11_104) (* (* 2.0 l_0_11_101) l_0_11_97))))
 (let ((?x21297 (- (- ?x21292 (* (* 2.0 l_0_11_102) l_0_11_98)) (* (* 2.0 l_0_11_103) l_0_11_99))))
 (let ((?x21303 (- (- ?x21297 (* (* 2.0 l_0_11_11) l_0_11_2)) (* (* 2.0 l_0_11_112) l_0_11_116))))
 (let ((?x21309 (- (- ?x21303 (* (* 2.0 l_0_11_113) l_0_11_117)) (* (* 2.0 l_0_11_114) l_0_11_118))))
 (let ((?x21315 (- (- ?x21309 (* (* 2.0 l_0_11_115) l_0_11_119)) (* (* 2.0 l_0_11_12) l_0_11_3))))
 (let ((?x21321 (- (- ?x21315 (* (* 2.0 l_0_11_127) l_0_11_131)) (* (* 2.0 l_0_11_128) l_0_11_132))))
 (let ((?x21327 (- (- ?x21321 (* (* 2.0 l_0_11_129) l_0_11_133)) (* (* 2.0 l_0_11_130) l_0_11_134))))
 (let ((?x21333 (- (- ?x21327 (* (* 2.0 l_0_11_142) l_0_11_146)) (* (* 2.0 l_0_11_143) l_0_11_147))))
 (let ((?x21339 (- (- ?x21333 (* (* 2.0 l_0_11_144) l_0_11_148)) (* (* 2.0 l_0_11_145) l_0_11_149))))
 (let ((?x21345 (- (- ?x21339 (* (* 2.0 l_0_11_157) l_0_11_161)) (* (* 2.0 l_0_11_158) l_0_11_162))))
 (let ((?x21351 (- (- ?x21345 (* (* 2.0 l_0_11_159) l_0_11_163)) (* (* 2.0 l_0_11_160) l_0_11_164))))
 (let ((?x21357 (+ (+ ?x21351 (* (* 8.0 l_0_11_17) l_0_11_22)) (* (* 8.0 l_0_11_18) l_0_11_23))))
 (let ((?x21363 (- (- ?x21357 (* (* 2.0 l_0_11_22) l_0_11_26)) (* (* 2.0 l_0_11_23) l_0_11_27))))
 (let ((?x21369 (- (- ?x21363 (* (* 2.0 l_0_11_24) l_0_11_28)) (* (* 2.0 l_0_11_25) l_0_11_29))))
 (let ((?x21375 (- (- ?x21369 (* (* 8.0 l_0_11_32) l_0_11_37)) (* (* 8.0 l_0_11_33) l_0_11_38))))
 (let ((?x21381 (+ (+ ?x21375 (* (* 2.0 l_0_11_37) l_0_11_41)) (* (* 2.0 l_0_11_38) l_0_11_42))))
 (let ((?x21387 (+ (+ ?x21381 (* (* 2.0 l_0_11_39) l_0_11_43)) (* (* 2.0 l_0_11_40) l_0_11_44))))
 (let ((?x21397 (- (- (+ (+ ?x21387 ?x21388) ?x21390) (* (* 2.0 l_0_11_52) l_0_11_56)) (* (* 2.0 l_0_11_53) l_0_11_57))))
 (let ((?x21403 (- (- ?x21397 (* (* 2.0 l_0_11_54) l_0_11_58)) (* (* 2.0 l_0_11_55) l_0_11_59))))
 (let ((?x21413 (+ (+ (- (- ?x21403 ?x21404) ?x21406) (* (* 2.0 l_0_11_67) l_0_11_71)) (* (* 2.0 l_0_11_68) l_0_11_72))))
 (let ((?x21419 (+ (+ ?x21413 (* (* 2.0 l_0_11_69) l_0_11_73)) (* (* 2.0 l_0_11_70) l_0_11_74))))
 (= (- (+ (- (+ ?x21419 ?x21258) ?x21421) ?x21260) ?x21424) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21542 (* l_0_11_81 l_0_11_81)))
 (let ((?x21540 (* l_0_11_80 l_0_11_80)))
 (let ((?x21538 (* l_0_11_79 l_0_11_79)))
 (let ((?x21536 (* (* 4.0 l_0_11_66) l_0_11_66)))
 (let ((?x21530 (* (* 4.0 l_0_11_65) l_0_11_65)))
 (let ((?x21524 (* (* 4.0 l_0_11_64) l_0_11_64)))
 (let ((?x21514 (* l_0_11_6 l_0_11_6)))
 (let ((?x20113 (* l_0_11_51 l_0_11_51)))
 (let ((?x21512 (* 4.0 ?x20113)))
 (let ((?x20110 (* l_0_11_50 l_0_11_50)))
 (let ((?x21507 (* 4.0 ?x20110)))
 (let ((?x21502 (* l_0_11_5 l_0_11_5)))
 (let ((?x20107 (* l_0_11_49 l_0_11_49)))
 (let ((?x21500 (* 4.0 ?x20107)))
 (let ((?x21491 (* l_0_11_4 l_0_11_4)))
 (let ((?x21486 (- (* (* (- 24.0) l_0_11_17) l_0_11_22) (* (* 24.0 l_0_11_18) l_0_11_23))))
 (let ((?x21490 (+ (+ ?x21486 (* (* 24.0 l_0_11_32) l_0_11_37)) (* (* 24.0 l_0_11_33) l_0_11_38))))
 (let ((?x21496 (- (- (- ?x21490 ?x21491) (* (* 12.0 l_0_11_47) l_0_11_52)) (* (* 12.0 l_0_11_48) l_0_11_53))))
 (let ((?x21506 (+ (- (+ (+ ?x21496 (* (* 6.0 l_0_11_49) l_0_11_52)) ?x21500) ?x21502) (* (* 6.0 l_0_11_50) l_0_11_53))))
 (let ((?x21515 (- (+ (+ (+ ?x21506 ?x21507) (* (* 6.0 l_0_11_51) l_0_11_54)) ?x21512) ?x21514)))
 (let ((?x21519 (+ (+ ?x21515 (* (* 12.0 l_0_11_62) l_0_11_67)) (* (* 12.0 l_0_11_63) l_0_11_68))))
 (let ((?x21528 (- (- (- ?x21519 (* (* 6.0 l_0_11_64) l_0_11_67)) ?x21524) (* (* 6.0 l_0_11_65) l_0_11_68))))
 (let ((?x21539 (- (- (- (- ?x21528 ?x21530) (* (* 6.0 l_0_11_66) l_0_11_69)) ?x21536) ?x21538)))
 (= (- (- ?x21539 ?x21540) ?x21542) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x21631 (* 2.0 l_0_11_81)))
 (let ((?x21632 (* ?x21631 l_0_11_84)))
 (let ((?x21628 (* 2.0 l_0_11_80)))
 (let ((?x21629 (* ?x21628 l_0_11_83)))
 (let ((?x21625 (* 2.0 l_0_11_79)))
 (let ((?x21626 (* ?x21625 l_0_11_82)))
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x20811 (* ?x20810 l_0_11_69)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x20808 (* ?x20807 l_0_11_68)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x20805 (* ?x20804 l_0_11_67)))
 (let ((?x20880 (* l_0_11_55 l_0_11_55)))
 (let ((?x21605 (* 3.0 ?x20880)))
 (let ((?x16856 (* l_0_11_54 l_0_11_54)))
 (let ((?x21603 (* 3.0 ?x16856)))
 (let ((?x16848 (* l_0_11_53 l_0_11_53)))
 (let ((?x21601 (* 3.0 ?x16848)))
 (let ((?x20872 (* l_0_11_52 l_0_11_52)))
 (let ((?x21599 (* 3.0 ?x20872)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x20797 (* ?x20796 l_0_11_54)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x20794 (* ?x20793 l_0_11_53)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x20791 (* ?x20790 l_0_11_52)))
 (let ((?x21596 (- (+ (* (* (- 2.0) l_0_11_4) l_0_11_7) ?x20791) (* (* 2.0 l_0_11_5) l_0_11_8))))
 (let ((?x21609 (- (+ (+ (+ (+ (+ (+ ?x21596 ?x20794) ?x20797) ?x21599) ?x21601) ?x21603) ?x21605) (* (* 2.0 l_0_11_6) l_0_11_9))))
 (let ((?x21615 (- (- (- (- ?x21609 ?x20805) ?x20808) ?x20811) (* (* 3.0 l_0_11_67) l_0_11_67))))
 (let ((?x21621 (- (- ?x21615 (* (* 3.0 l_0_11_68) l_0_11_68)) (* (* 3.0 l_0_11_69) l_0_11_69))))
 (let ((?x21633 (- (- (- (- ?x21621 (* (* 3.0 l_0_11_70) l_0_11_70)) ?x21626) ?x21629) ?x21632)))
 (= ?x21633 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x21631 (* 2.0 l_0_11_81)))
 (let ((?x21715 (* ?x21631 l_0_11_88)))
 (let ((?x21632 (* ?x21631 l_0_11_84)))
 (let ((?x21628 (* 2.0 l_0_11_80)))
 (let ((?x21712 (* ?x21628 l_0_11_87)))
 (let ((?x21629 (* ?x21628 l_0_11_83)))
 (let ((?x21625 (* 2.0 l_0_11_79)))
 (let ((?x21709 (* ?x21625 l_0_11_86)))
 (let ((?x21626 (* ?x21625 l_0_11_82)))
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x21694 (* ?x20810 l_0_11_73)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x21692 (* ?x20807 l_0_11_72)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x21690 (* ?x20804 l_0_11_71)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x21676 (* ?x20796 l_0_11_58)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x21674 (* ?x20793 l_0_11_57)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x21672 (* ?x20790 l_0_11_56)))
 (let ((?x13488 (- (* (* (- 2.0) l_0_11_11) l_0_11_4) (* (* 2.0 l_0_11_12) l_0_11_5))))
 (let ((?x21656 (+ (- ?x13488 (* (* 2.0 l_0_11_13) l_0_11_6)) (* (* 8.0 l_0_11_19) l_0_11_22))))
 (let ((?x21662 (+ (+ ?x21656 (* (* 8.0 l_0_11_20) l_0_11_23)) (* (* 8.0 l_0_11_21) l_0_11_24))))
 (let ((?x21668 (- (- ?x21662 (* (* 8.0 l_0_11_34) l_0_11_37)) (* (* 8.0 l_0_11_35) l_0_11_38))))
 (let ((?x21677 (+ (+ (+ (- ?x21668 (* (* 8.0 l_0_11_36) l_0_11_39)) ?x21672) ?x21674) ?x21676)))
 (let ((?x21683 (+ (+ ?x21677 (* (* 6.0 l_0_11_52) l_0_11_56)) (* (* 6.0 l_0_11_53) l_0_11_57))))
 (let ((?x21689 (+ (+ ?x21683 (* (* 6.0 l_0_11_54) l_0_11_58)) (* (* 6.0 l_0_11_55) l_0_11_59))))
 (let ((?x21698 (- (- (- (- ?x21689 ?x21690) ?x21692) ?x21694) (* (* 6.0 l_0_11_67) l_0_11_71))))
 (let ((?x21704 (- (- ?x21698 (* (* 6.0 l_0_11_68) l_0_11_72)) (* (* 6.0 l_0_11_69) l_0_11_73))))
 (let ((?x21711 (+ (- (+ (- ?x21704 (* (* 6.0 l_0_11_70) l_0_11_74)) ?x21626) ?x21709) ?x21629)))
 (= (- (+ (- ?x21711 ?x21712) ?x21632) ?x21715) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x21773 (* l_0_11_9 l_0_11_9)))
 (let ((?x21771 (* l_0_11_85 l_0_11_85)))
 (let ((?x21769 (* l_0_11_84 l_0_11_84)))
 (let ((?x21767 (* l_0_11_83 l_0_11_83)))
 (let ((?x21765 (* l_0_11_82 l_0_11_82)))
 (let ((?x21763 (* l_0_11_8 l_0_11_8)))
 (let ((?x21761 (* (* 4.0 l_0_11_70) l_0_11_70)))
 (let ((?x21758 (* l_0_11_7 l_0_11_7)))
 (let ((?x21756 (* (* 4.0 l_0_11_69) l_0_11_69)))
 (let ((?x21753 (* (* 4.0 l_0_11_68) l_0_11_68)))
 (let ((?x21750 (* (* 4.0 l_0_11_67) l_0_11_67)))
 (let ((?x20880 (* l_0_11_55 l_0_11_55)))
 (let ((?x20881 (* 4.0 ?x20880)))
 (let ((?x16856 (* l_0_11_54 l_0_11_54)))
 (let ((?x16852 (* 4.0 ?x16856)))
 (let ((?x16848 (* l_0_11_53 l_0_11_53)))
 (let ((?x16849 (* 4.0 ?x16848)))
 (let ((?x20872 (* l_0_11_52 l_0_11_52)))
 (let ((?x20873 (* 4.0 ?x20872)))
 (let ((?x21751 (- (+ (+ (+ (+ (* (- l_0_11_10) l_0_11_10) ?x20873) ?x16849) ?x16852) ?x20881) ?x21750)))
 (let ((?x21768 (- (- (- (- (- (- (- ?x21751 ?x21753) ?x21756) ?x21758) ?x21761) ?x21763) ?x21765) ?x21767)))
 (= (- (- (- ?x21768 ?x21769) ?x21771) ?x21773) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21771 (* l_0_11_85 l_0_11_85)))
 (let ((?x21832 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x21769 (* l_0_11_84 l_0_11_84)))
 (let ((?x21828 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x21767 (* l_0_11_83 l_0_11_83)))
 (let ((?x21824 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x21765 (* l_0_11_82 l_0_11_82)))
 (let ((?x21820 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x20933 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x20930 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x20927 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x20924 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x20919 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x20916 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x20913 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x20910 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x12892 (* l_0_11_25 l_0_11_25)))
 (let ((?x21797 (* 4.0 ?x12892)))
 (let ((?x12974 (* l_0_11_24 l_0_11_24)))
 (let ((?x21795 (* 4.0 ?x12974)))
 (let ((?x17216 (* l_0_11_23 l_0_11_23)))
 (let ((?x21793 (* 4.0 ?x17216)))
 (let ((?x17211 (* l_0_11_22 l_0_11_22)))
 (let ((?x21791 (* 4.0 ?x17211)))
 (let ((?x21786 (- (* (* (- 2.0) l_0_11_10) l_0_11_14) (* (* 2.0 l_0_11_11) l_0_11_7))))
 (let ((?x21790 (- (- ?x21786 (* (* 2.0 l_0_11_12) l_0_11_8)) (* (* 2.0 l_0_11_13) l_0_11_9))))
 (let ((?x21801 (- (+ (+ (+ (+ ?x21790 ?x21791) ?x21793) ?x21795) ?x21797) (* (* 4.0 l_0_11_37) l_0_11_37))))
 (let ((?x21807 (- (- ?x21801 (* (* 4.0 l_0_11_38) l_0_11_38)) (* (* 4.0 l_0_11_39) l_0_11_39))))
 (let ((?x21813 (+ (+ (+ (- ?x21807 (* (* 4.0 l_0_11_40) l_0_11_40)) ?x20910) ?x20913) ?x20916)))
 (let ((?x21822 (+ (- (- (- (- (- (+ ?x21813 ?x20919) ?x20924) ?x20927) ?x20930) ?x20933) ?x21820) ?x21765)))
 (= (+ (- (+ (- (+ (- ?x21822 ?x21824) ?x21767) ?x21828) ?x21769) ?x21832) ?x21771) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x21938 (* l_0_11_90 l_0_11_90)))
 (let ((?x21936 (* l_0_11_89 l_0_11_89)))
 (let ((?x21934 (* l_0_11_88 l_0_11_88)))
 (let ((?x21932 (* l_0_11_87 l_0_11_87)))
 (let ((?x21930 (* l_0_11_86 l_0_11_86)))
 (let ((?x21832 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x21828 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x21824 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x21820 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x21924 (* (* 4.0 l_0_11_75) l_0_11_75)))
 (let ((?x21921 (* (* 4.0 l_0_11_74) l_0_11_74)))
 (let ((?x21918 (* (* 4.0 l_0_11_73) l_0_11_73)))
 (let ((?x21915 (* (* 4.0 l_0_11_72) l_0_11_72)))
 (let ((?x21912 (* (* 4.0 l_0_11_71) l_0_11_71)))
 (let ((?x21908 (* l_0_11_60 l_0_11_60)))
 (let ((?x21909 (* 4.0 ?x21908)))
 (let ((?x21905 (* l_0_11_59 l_0_11_59)))
 (let ((?x21906 (* 4.0 ?x21905)))
 (let ((?x21902 (* l_0_11_58 l_0_11_58)))
 (let ((?x21903 (* 4.0 ?x21902)))
 (let ((?x21899 (* l_0_11_57 l_0_11_57)))
 (let ((?x21900 (* 4.0 ?x21899)))
 (let ((?x21896 (* l_0_11_56 l_0_11_56)))
 (let ((?x21897 (* 4.0 ?x21896)))
 (let ((?x21870 (* l_0_11_15 l_0_11_15)))
 (let ((?x21868 (* l_0_11_14 l_0_11_14)))
 (let ((?x21866 (* l_0_11_13 l_0_11_13)))
 (let ((?x21867 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x21866)))
 (let ((?x21877 (+ (+ (- (- ?x21867 ?x21868) ?x21870) (* (* 8.0 l_0_11_22) l_0_11_26)) (* (* 8.0 l_0_11_23) l_0_11_27))))
 (let ((?x21883 (+ (+ ?x21877 (* (* 8.0 l_0_11_24) l_0_11_28)) (* (* 8.0 l_0_11_25) l_0_11_29))))
 (let ((?x21889 (- (- ?x21883 (* (* 8.0 l_0_11_37) l_0_11_41)) (* (* 8.0 l_0_11_38) l_0_11_42))))
 (let ((?x21895 (- (- ?x21889 (* (* 8.0 l_0_11_39) l_0_11_43)) (* (* 8.0 l_0_11_40) l_0_11_44))))
 (let ((?x21916 (- (- (+ (+ (+ (+ (+ ?x21895 ?x21897) ?x21900) ?x21903) ?x21906) ?x21909) ?x21912) ?x21915)))
 (let ((?x21929 (+ (+ (+ (+ (- (- (- ?x21916 ?x21918) ?x21921) ?x21924) ?x21820) ?x21824) ?x21828) ?x21832)))
 (= (- (- (- (- (- ?x21929 ?x21930) ?x21932) ?x21934) ?x21936) ?x21938) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21979 (* l_0_11_91 l_0_11_91)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20748 (* ?x16678 l_0_11_62)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20738 (* ?x1040 l_0_11_47)))
 (let ((?x21964 (* l_0_11_151 l_0_11_151)))
 (let ((?x18051 (* l_0_11_136 l_0_11_136)))
 (let ((?x21963 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_121 l_0_11_121)) ?x18051)))
 (let ((?x21971 (+ (- (- ?x21963 ?x21964) (* (* 1.0 l_0_11_16) l_0_11_16)) (* 1.0 (* l_0_11_31 l_0_11_31)))))
 (let ((?x21978 (+ (+ (- (- ?x21971 ?x20738) (* (* 1.0 l_0_11_46) l_0_11_46)) ?x20748) (* 1.0 (* l_0_11_61 l_0_11_61)))))
 (= (- ?x21978 ?x21979) 0.0))))))))))))
(assert
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21055 (* ?x20755 l_0_11_65)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21051 (* ?x20752 l_0_11_64)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21038 (* ?x20745 l_0_11_50)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21034 (* ?x20742 l_0_11_49)))
 (let ((?x22001 (- (* (* (- 2.0) l_0_11_106) l_0_11_109) (* (* 2.0 l_0_11_121) l_0_11_124))))
 (let ((?x22005 (- (- ?x22001 (* (* 2.0 l_0_11_136) l_0_11_139)) (* (* 2.0 l_0_11_151) l_0_11_154))))
 (let ((?x22009 (+ (- ?x22005 (* (* 2.0 l_0_11_16) l_0_11_19)) (* (* 2.0 l_0_11_31) l_0_11_34))))
 (let ((?x22013 (- (+ ?x22009 (* (* 6.0 l_0_11_46) l_0_11_47)) (* (* 2.0 l_0_11_46) l_0_11_49))))
 (let ((?x22019 (+ (- (- (- ?x22013 ?x21034) ?x21038) (* (* 6.0 l_0_11_61) l_0_11_62)) (* (* 2.0 l_0_11_61) l_0_11_64))))
 (= (- (+ (+ ?x22019 ?x21051) ?x21055) (* (* 2.0 l_0_11_91) l_0_11_94)) 0.0)))))))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20759 (* ?x20758 l_0_11_77)))
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21406 (* ?x20755 l_0_11_72)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21404 (* ?x20752 l_0_11_71)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21390 (* ?x20745 l_0_11_57)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21388 (* ?x20742 l_0_11_56)))
 (let ((?x22043 (- (* (* (- 2.0) l_0_11_101) l_0_11_91) (* (* 2.0 l_0_11_106) l_0_11_116))))
 (let ((?x22047 (- (- ?x22043 (* (* 2.0 l_0_11_121) l_0_11_131)) (* (* 2.0 l_0_11_136) l_0_11_146))))
 (let ((?x22051 (+ (- ?x22047 (* (* 2.0 l_0_11_151) l_0_11_161)) (* (* 8.0 l_0_11_16) l_0_11_17))))
 (let ((?x22055 (- (- ?x22051 (* (* 2.0 l_0_11_16) l_0_11_26)) (* (* 8.0 l_0_11_31) l_0_11_32))))
 (let ((?x22059 (- (+ ?x22055 (* (* 2.0 l_0_11_31) l_0_11_41)) (* (* 2.0 l_0_11_46) l_0_11_56))))
 (let ((?x22064 (+ (+ (- (- ?x22059 ?x21388) ?x21390) (* (* 2.0 l_0_11_61) l_0_11_71)) ?x21404)))
 (= (+ (+ ?x22064 ?x21406) ?x20759) 0.0))))))))))))))))))
(assert
 (let ((?x21071 (* 2.0 l_0_11_78)))
 (let ((?x21072 (* ?x21071 l_0_11_80)))
 (let ((?x21068 (* 2.0 l_0_11_77)))
 (let ((?x21069 (* ?x21068 l_0_11_79)))
 (let ((?x22102 (- (* (* (- 2.0) l_0_11_101) l_0_11_94) (* (* 2.0 l_0_11_102) l_0_11_95))))
 (let ((?x22107 (- (- ?x22102 (* (* 2.0 l_0_11_103) l_0_11_96)) (* (* 2.0 l_0_11_109) l_0_11_116))))
 (let ((?x22111 (- (- ?x22107 (* (* 2.0 l_0_11_110) l_0_11_117)) (* (* 2.0 l_0_11_111) l_0_11_118))))
 (let ((?x22115 (- (- ?x22111 (* (* 2.0 l_0_11_124) l_0_11_131)) (* (* 2.0 l_0_11_125) l_0_11_132))))
 (let ((?x22119 (- (- ?x22115 (* (* 2.0 l_0_11_126) l_0_11_133)) (* (* 2.0 l_0_11_139) l_0_11_146))))
 (let ((?x22123 (- (- ?x22119 (* (* 2.0 l_0_11_140) l_0_11_147)) (* (* 2.0 l_0_11_141) l_0_11_148))))
 (let ((?x22127 (- (- ?x22123 (* (* 2.0 l_0_11_154) l_0_11_161)) (* (* 2.0 l_0_11_155) l_0_11_162))))
 (let ((?x22131 (+ (- ?x22127 (* (* 2.0 l_0_11_156) l_0_11_163)) (* (* 8.0 l_0_11_17) l_0_11_19))))
 (let ((?x22135 (- (+ ?x22131 (* (* 8.0 l_0_11_18) l_0_11_20)) (* (* 2.0 l_0_11_19) l_0_11_26))))
 (let ((?x22139 (- (- ?x22135 (* (* 2.0 l_0_11_20) l_0_11_27)) (* (* 2.0 l_0_11_21) l_0_11_28))))
 (let ((?x22143 (- (- ?x22139 (* (* 8.0 l_0_11_32) l_0_11_34)) (* (* 8.0 l_0_11_33) l_0_11_35))))
 (let ((?x22147 (+ (+ ?x22143 (* (* 2.0 l_0_11_34) l_0_11_41)) (* (* 2.0 l_0_11_35) l_0_11_42))))
 (let ((?x22151 (+ (+ ?x22147 (* (* 2.0 l_0_11_36) l_0_11_43)) (* (* 6.0 l_0_11_47) l_0_11_56))))
 (let ((?x22155 (- (+ ?x22151 (* (* 6.0 l_0_11_48) l_0_11_57)) (* (* 2.0 l_0_11_49) l_0_11_56))))
 (let ((?x22159 (- (- ?x22155 (* (* 2.0 l_0_11_50) l_0_11_57)) (* (* 2.0 l_0_11_51) l_0_11_58))))
 (let ((?x22163 (- (- ?x22159 (* (* 6.0 l_0_11_62) l_0_11_71)) (* (* 6.0 l_0_11_63) l_0_11_72))))
 (let ((?x22167 (+ (+ ?x22163 (* (* 2.0 l_0_11_64) l_0_11_71)) (* (* 2.0 l_0_11_65) l_0_11_72))))
 (= (+ (+ (+ ?x22167 (* (* 2.0 l_0_11_66) l_0_11_73)) ?x21069) ?x21072) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21071 (* 2.0 l_0_11_78)))
 (let ((?x21424 (* ?x21071 l_0_11_87)))
 (let ((?x21068 (* 2.0 l_0_11_77)))
 (let ((?x21421 (* ?x21068 l_0_11_86)))
 (let ((?x22215 (* l_0_11_165 l_0_11_165)))
 (let ((?x22213 (* l_0_11_164 l_0_11_164)))
 (let ((?x22211 (* l_0_11_163 l_0_11_163)))
 (let ((?x22209 (* l_0_11_162 l_0_11_162)))
 (let ((?x22207 (* l_0_11_161 l_0_11_161)))
 (let ((?x22205 (* l_0_11_150 l_0_11_150)))
 (let ((?x22203 (* l_0_11_149 l_0_11_149)))
 (let ((?x22201 (* l_0_11_148 l_0_11_148)))
 (let ((?x22199 (* l_0_11_147 l_0_11_147)))
 (let ((?x22197 (* l_0_11_146 l_0_11_146)))
 (let ((?x22195 (* l_0_11_135 l_0_11_135)))
 (let ((?x22193 (* l_0_11_134 l_0_11_134)))
 (let ((?x18422 (* l_0_11_133 l_0_11_133)))
 (let ((?x14345 (* l_0_11_132 l_0_11_132)))
 (let ((?x18419 (* l_0_11_131 l_0_11_131)))
 (let ((?x18392 (* l_0_11_120 l_0_11_120)))
 (let ((?x18384 (* l_0_11_119 l_0_11_119)))
 (let ((?x18342 (* l_0_11_118 l_0_11_118)))
 (let ((?x18322 (* l_0_11_117 l_0_11_117)))
 (let ((?x14198 (* l_0_11_116 l_0_11_116)))
 (let ((?x18408 (* l_0_11_105 l_0_11_105)))
 (let ((?x18388 (* l_0_11_104 l_0_11_104)))
 (let ((?x18351 (* l_0_11_103 l_0_11_103)))
 (let ((?x18354 (- (- (* (- l_0_11_101) l_0_11_101) (* l_0_11_102 l_0_11_102)) ?x18351)))
 (let ((?x18394 (- (- (- (- (- (- (- ?x18354 ?x18388) ?x18408) ?x14198) ?x18322) ?x18342) ?x18384) ?x18392)))
 (let ((?x22200 (- (- (- (- (- (- (- ?x18394 ?x18419) ?x14345) ?x18422) ?x22193) ?x22195) ?x22197) ?x22199)))
 (let ((?x22214 (- (- (- (- (- (- (- ?x22200 ?x22201) ?x22203) ?x22205) ?x22207) ?x22209) ?x22211) ?x22213)))
 (let ((?x22220 (+ (+ (- ?x22214 ?x22215) (* (* 8.0 l_0_11_17) l_0_11_26)) (* (* 8.0 l_0_11_18) l_0_11_27))))
 (let ((?x22226 (- (- ?x22220 (* (* 1.0 l_0_11_26) l_0_11_26)) (* (* 1.0 l_0_11_27) l_0_11_27))))
 (let ((?x22232 (- (- ?x22226 (* (* 1.0 l_0_11_28) l_0_11_28)) (* (* 1.0 l_0_11_29) l_0_11_29))))
 (let ((?x22237 (- (- ?x22232 (* (* 1.0 l_0_11_30) l_0_11_30)) (* (* 8.0 l_0_11_32) l_0_11_41))))
 (let ((?x22242 (+ (- ?x22237 (* (* 8.0 l_0_11_33) l_0_11_42)) (* 1.0 (* l_0_11_41 l_0_11_41)))))
 (let ((?x22248 (+ (+ ?x22242 (* 1.0 (* l_0_11_42 l_0_11_42))) (* 1.0 (* l_0_11_43 l_0_11_43)))))
 (let ((?x22254 (+ (+ ?x22248 (* 1.0 (* l_0_11_44 l_0_11_44))) (* 1.0 (* l_0_11_45 l_0_11_45)))))
 (let ((?x22260 (- (- ?x22254 (* (* 1.0 l_0_11_56) l_0_11_56)) (* (* 1.0 l_0_11_57) l_0_11_57))))
 (let ((?x22266 (- (- ?x22260 (* (* 1.0 l_0_11_58) l_0_11_58)) (* (* 1.0 l_0_11_59) l_0_11_59))))
 (let ((?x22271 (+ (- ?x22266 (* (* 1.0 l_0_11_60) l_0_11_60)) (* 1.0 (* l_0_11_71 l_0_11_71)))))
 (let ((?x22275 (+ (+ ?x22271 (* 1.0 (* l_0_11_72 l_0_11_72))) (* 1.0 (* l_0_11_73 l_0_11_73)))))
 (let ((?x22279 (+ (+ ?x22275 (* 1.0 (* l_0_11_74 l_0_11_74))) (* 1.0 (* l_0_11_75 l_0_11_75)))))
 (= (+ (+ ?x22279 ?x21421) ?x21424) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21969 (* l_0_11_31 l_0_11_31)))
 (let ((?x22322 (* 12.0 ?x21969)))
 (let ((?x22325 (- (+ (* (* (- 12.0) l_0_11_16) l_0_11_16) ?x22322) (* (* 6.0 l_0_11_46) l_0_11_46))))
 (= (+ ?x22325 (* 6.0 (* l_0_11_61 l_0_11_61))) 0.0)))))
(assert
 (let ((?x12022 (* l_0_11_66 l_0_11_66)))
 (let ((?x17628 (* 4.0 ?x12022)))
 (let ((?x20174 (* l_0_11_65 l_0_11_65)))
 (let ((?x9086 (* 4.0 ?x20174)))
 (let ((?x7337 (* l_0_11_64 l_0_11_64)))
 (let ((?x17608 (* 4.0 ?x7337)))
 (let ((?x22345 (+ (* (* (- 24.0) l_0_11_16) l_0_11_17) (* (* 24.0 l_0_11_31) l_0_11_32))))
 (let ((?x22350 (+ (- ?x22345 (* (* 12.0 l_0_11_46) l_0_11_47)) (* (* 6.0 l_0_11_46) l_0_11_49))))
 (let ((?x22356 (- (- ?x22350 (* (* 4.0 l_0_11_49) l_0_11_49)) (* (* 4.0 l_0_11_50) l_0_11_50))))
 (let ((?x22362 (+ (- ?x22356 (* (* 4.0 l_0_11_51) l_0_11_51)) (* (* 12.0 l_0_11_61) l_0_11_62))))
 (let ((?x22367 (+ (+ (+ (- ?x22362 (* (* 6.0 l_0_11_61) l_0_11_64)) ?x17608) ?x9086) ?x17628)))
 (= ?x22367 0.0)))))))))))))
(assert
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20748 (* ?x16678 l_0_11_62)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20738 (* ?x1040 l_0_11_47)))
 (let ((?x22386 (+ (* (* (- 24.0) l_0_11_16) l_0_11_19) (* (* 24.0 l_0_11_31) l_0_11_34))))
 (let ((?x22392 (+ (- (- (+ ?x22386 ?x20738) (* (* 12.0 l_0_11_46) l_0_11_49)) ?x20748) (* (* 12.0 l_0_11_61) l_0_11_64))))
 (= ?x22392 0.0))))))))
(assert
 (let ((?x22408 (+ (* (* (- 24.0) l_0_11_16) l_0_11_22) (* (* 24.0 l_0_11_31) l_0_11_37))))
 (let ((?x22412 (+ (- ?x22408 (* (* 12.0 l_0_11_46) l_0_11_52)) (* (* 12.0 l_0_11_61) l_0_11_67))))
 (= ?x22412 0.0))))
(assert
 (let ((?x22427 (+ (* (* (- 24.0) l_0_11_16) l_0_11_26) (* (* 24.0 l_0_11_31) l_0_11_41))))
 (let ((?x22431 (+ (- ?x22427 (* (* 12.0 l_0_11_46) l_0_11_56)) (* (* 12.0 l_0_11_61) l_0_11_71))))
 (= ?x22431 0.0))))
(assert
 (let ((?x21542 (* l_0_11_81 l_0_11_81)))
 (let ((?x21540 (* l_0_11_80 l_0_11_80)))
 (let ((?x21538 (* l_0_11_79 l_0_11_79)))
 (let ((?x12155 (* l_0_11_21 l_0_11_21)))
 (let ((?x22451 (* 4.0 ?x12155)))
 (let ((?x20298 (* l_0_11_20 l_0_11_20)))
 (let ((?x22449 (* 4.0 ?x20298)))
 (let ((?x12154 (* l_0_11_19 l_0_11_19)))
 (let ((?x22447 (* 4.0 ?x12154)))
 (let ((?x22446 (- (* (* (- 24.0) l_0_11_17) l_0_11_26) (* (* 24.0 l_0_11_18) l_0_11_27))))
 (let ((?x22454 (+ (+ (+ (+ ?x22446 ?x22447) ?x22449) ?x22451) (* (* 24.0 l_0_11_32) l_0_11_41))))
 (let ((?x22459 (- (+ ?x22454 (* (* 24.0 l_0_11_33) l_0_11_42)) (* (* 4.0 l_0_11_34) l_0_11_34))))
 (let ((?x22465 (- (- ?x22459 (* (* 4.0 l_0_11_35) l_0_11_35)) (* (* 4.0 l_0_11_36) l_0_11_36))))
 (let ((?x22469 (- (- ?x22465 (* (* 12.0 l_0_11_47) l_0_11_56)) (* (* 12.0 l_0_11_48) l_0_11_57))))
 (let ((?x22473 (+ (+ ?x22469 (* (* 6.0 l_0_11_49) l_0_11_56)) (* (* 6.0 l_0_11_50) l_0_11_57))))
 (let ((?x22477 (+ (+ ?x22473 (* (* 6.0 l_0_11_51) l_0_11_58)) (* (* 12.0 l_0_11_62) l_0_11_71))))
 (let ((?x22481 (- (+ ?x22477 (* (* 12.0 l_0_11_63) l_0_11_72)) (* (* 6.0 l_0_11_64) l_0_11_71))))
 (let ((?x22485 (- (- ?x22481 (* (* 6.0 l_0_11_65) l_0_11_72)) (* (* 6.0 l_0_11_66) l_0_11_73))))
 (= (+ (+ (+ ?x22485 ?x21538) ?x21540) ?x21542) 0.0))))))))))))))))))))
(assert
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21055 (* ?x20755 l_0_11_65)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21051 (* ?x20752 l_0_11_64)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21038 (* ?x20745 l_0_11_50)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21034 (* ?x20742 l_0_11_49)))
 (let ((?x20230 (* l_0_11_36 l_0_11_36)))
 (let ((?x22530 (* 12.0 ?x20230)))
 (let ((?x20227 (* l_0_11_35 l_0_11_35)))
 (let ((?x22528 (* 12.0 ?x20227)))
 (let ((?x20224 (* l_0_11_34 l_0_11_34)))
 (let ((?x22526 (* 12.0 ?x20224)))
 (let ((?x22522 (- (* (* (- 12.0) l_0_11_19) l_0_11_19) (* (* 12.0 l_0_11_20) l_0_11_20))))
 (let ((?x22531 (+ (+ (+ (- ?x22522 (* (* 12.0 l_0_11_21) l_0_11_21)) ?x22526) ?x22528) ?x22530)))
 (let ((?x22537 (- (- (+ (+ ?x22531 ?x21034) ?x21038) (* (* 6.0 l_0_11_49) l_0_11_49)) (* (* 6.0 l_0_11_50) l_0_11_50))))
 (let ((?x22543 (+ (- (- (- ?x22537 (* (* 6.0 l_0_11_51) l_0_11_51)) ?x21051) ?x21055) (* 6.0 (* l_0_11_64 l_0_11_64)))))
 (let ((?x22547 (+ (+ ?x22543 (* 6.0 (* l_0_11_65 l_0_11_65))) (* 6.0 (* l_0_11_66 l_0_11_66)))))
 (= ?x22547 0.0)))))))))))))))))))))
(assert
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x20756 (* ?x20755 l_0_11_68)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x20753 (* ?x20752 l_0_11_67)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x20746 (* ?x20745 l_0_11_53)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x20743 (* ?x20742 l_0_11_52)))
 (let ((?x22589 (- (* (* (- 24.0) l_0_11_19) l_0_11_22) (* (* 24.0 l_0_11_20) l_0_11_23))))
 (let ((?x22595 (+ (- ?x22589 (* (* 24.0 l_0_11_21) l_0_11_24)) (* (* 24.0 l_0_11_34) l_0_11_37))))
 (let ((?x22601 (+ (+ ?x22595 (* (* 24.0 l_0_11_35) l_0_11_38)) (* (* 24.0 l_0_11_36) l_0_11_39))))
 (let ((?x22609 (- (- (+ (+ ?x22601 ?x20743) ?x20746) (* (* 12.0 l_0_11_49) l_0_11_52)) (* (* 12.0 l_0_11_50) l_0_11_53))))
 (let ((?x22617 (+ (- (- (- ?x22609 (* (* 12.0 l_0_11_51) l_0_11_54)) ?x20753) ?x20756) (* (* 12.0 l_0_11_64) l_0_11_67))))
 (let ((?x22623 (+ (+ ?x22617 (* (* 12.0 l_0_11_65) l_0_11_68)) (* (* 12.0 l_0_11_66) l_0_11_69))))
 (= ?x22623 0.0))))))))))))))))
(assert
 (let ((?x20755 (* 8.0 l_0_11_63)))
 (let ((?x21406 (* ?x20755 l_0_11_72)))
 (let ((?x20752 (* 8.0 l_0_11_62)))
 (let ((?x21404 (* ?x20752 l_0_11_71)))
 (let ((?x20745 (* 8.0 l_0_11_48)))
 (let ((?x21390 (* ?x20745 l_0_11_57)))
 (let ((?x20742 (* 8.0 l_0_11_47)))
 (let ((?x21388 (* ?x20742 l_0_11_56)))
 (let ((?x18745 (- (* (* (- 24.0) l_0_11_19) l_0_11_26) (* (* 24.0 l_0_11_20) l_0_11_27))))
 (let ((?x14741 (+ (- ?x18745 (* (* 24.0 l_0_11_21) l_0_11_28)) (* (* 24.0 l_0_11_34) l_0_11_41))))
 (let ((?x22652 (+ (+ ?x14741 (* (* 24.0 l_0_11_35) l_0_11_42)) (* (* 24.0 l_0_11_36) l_0_11_43))))
 (let ((?x22658 (- (- (+ (+ ?x22652 ?x21388) ?x21390) (* (* 12.0 l_0_11_49) l_0_11_56)) (* (* 12.0 l_0_11_50) l_0_11_57))))
 (let ((?x22664 (+ (- (- (- ?x22658 (* (* 12.0 l_0_11_51) l_0_11_58)) ?x21404) ?x21406) (* (* 12.0 l_0_11_64) l_0_11_71))))
 (let ((?x22668 (+ (+ ?x22664 (* (* 12.0 l_0_11_65) l_0_11_72)) (* (* 12.0 l_0_11_66) l_0_11_73))))
 (= ?x22668 0.0))))))))))))))))
(assert
 (let ((?x21231 (* l_0_11_40 l_0_11_40)))
 (let ((?x22706 (* 12.0 ?x21231)))
 (let ((?x21228 (* l_0_11_39 l_0_11_39)))
 (let ((?x22704 (* 12.0 ?x21228)))
 (let ((?x21225 (* l_0_11_38 l_0_11_38)))
 (let ((?x22702 (* 12.0 ?x21225)))
 (let ((?x21222 (* l_0_11_37 l_0_11_37)))
 (let ((?x22700 (* 12.0 ?x21222)))
 (let ((?x22693 (- (* (* (- 12.0) l_0_11_22) l_0_11_22) (* (* 12.0 l_0_11_23) l_0_11_23))))
 (let ((?x22699 (- (- ?x22693 (* (* 12.0 l_0_11_24) l_0_11_24)) (* (* 12.0 l_0_11_25) l_0_11_25))))
 (let ((?x22709 (- (+ (+ (+ (+ ?x22699 ?x22700) ?x22702) ?x22704) ?x22706) (* (* 6.0 l_0_11_52) l_0_11_52))))
 (let ((?x22713 (- (- ?x22709 (* (* 6.0 l_0_11_53) l_0_11_53)) (* (* 6.0 l_0_11_54) l_0_11_54))))
 (let ((?x22717 (+ (- ?x22713 (* (* 6.0 l_0_11_55) l_0_11_55)) (* 6.0 (* l_0_11_67 l_0_11_67)))))
 (let ((?x22721 (+ (+ ?x22717 (* 6.0 (* l_0_11_68 l_0_11_68))) (* 6.0 (* l_0_11_69 l_0_11_69)))))
 (= (+ ?x22721 (* 6.0 (* l_0_11_70 l_0_11_70))) 0.0))))))))))))))))
(assert
 (let ((?x22762 (- (* (* (- 24.0) l_0_11_22) l_0_11_26) (* (* 24.0 l_0_11_23) l_0_11_27))))
 (let ((?x22768 (- (- ?x22762 (* (* 24.0 l_0_11_24) l_0_11_28)) (* (* 24.0 l_0_11_25) l_0_11_29))))
 (let ((?x22774 (+ (+ ?x22768 (* (* 24.0 l_0_11_37) l_0_11_41)) (* (* 24.0 l_0_11_38) l_0_11_42))))
 (let ((?x22780 (+ (+ ?x22774 (* (* 24.0 l_0_11_39) l_0_11_43)) (* (* 24.0 l_0_11_40) l_0_11_44))))
 (let ((?x22786 (- (- ?x22780 (* (* 12.0 l_0_11_52) l_0_11_56)) (* (* 12.0 l_0_11_53) l_0_11_57))))
 (let ((?x22792 (- (- ?x22786 (* (* 12.0 l_0_11_54) l_0_11_58)) (* (* 12.0 l_0_11_55) l_0_11_59))))
 (let ((?x22798 (+ (+ ?x22792 (* (* 12.0 l_0_11_67) l_0_11_71)) (* (* 12.0 l_0_11_68) l_0_11_72))))
 (let ((?x22804 (+ (+ ?x22798 (* (* 12.0 l_0_11_69) l_0_11_73)) (* (* 12.0 l_0_11_70) l_0_11_74))))
 (= ?x22804 0.0))))))))))
(assert
 (let ((?x18162 (* l_0_11_75 l_0_11_75)))
 (let ((?x22882 (* 6.0 ?x18162)))
 (let ((?x9674 (* l_0_11_74 l_0_11_74)))
 (let ((?x22880 (* 6.0 ?x9674)))
 (let ((?x14048 (* l_0_11_73 l_0_11_73)))
 (let ((?x22878 (* 6.0 ?x14048)))
 (let ((?x14047 (* l_0_11_72 l_0_11_72)))
 (let ((?x22876 (* 6.0 ?x14047)))
 (let ((?x3709 (* l_0_11_71 l_0_11_71)))
 (let ((?x22874 (* 6.0 ?x3709)))
 (let ((?x22252 (* l_0_11_45 l_0_11_45)))
 (let ((?x22857 (* 12.0 ?x22252)))
 (let ((?x22249 (* l_0_11_44 l_0_11_44)))
 (let ((?x22855 (* 12.0 ?x22249)))
 (let ((?x22246 (* l_0_11_43 l_0_11_43)))
 (let ((?x22853 (* 12.0 ?x22246)))
 (let ((?x22243 (* l_0_11_42 l_0_11_42)))
 (let ((?x22851 (* 12.0 ?x22243)))
 (let ((?x22240 (* l_0_11_41 l_0_11_41)))
 (let ((?x22849 (* 12.0 ?x22240)))
 (let ((?x18886 (- (* (* (- 12.0) l_0_11_26) l_0_11_26) (* (* 12.0 l_0_11_27) l_0_11_27))))
 (let ((?x22845 (- (- ?x18886 (* (* 12.0 l_0_11_28) l_0_11_28)) (* (* 12.0 l_0_11_29) l_0_11_29))))
 (let ((?x22854 (+ (+ (+ (- ?x22845 (* (* 12.0 l_0_11_30) l_0_11_30)) ?x22849) ?x22851) ?x22853)))
 (let ((?x22864 (- (- (+ (+ ?x22854 ?x22855) ?x22857) (* (* 6.0 l_0_11_56) l_0_11_56)) (* (* 6.0 l_0_11_57) l_0_11_57))))
 (let ((?x22870 (- (- ?x22864 (* (* 6.0 l_0_11_58) l_0_11_58)) (* (* 6.0 l_0_11_59) l_0_11_59))))
 (let ((?x22879 (+ (+ (+ (- ?x22870 (* (* 6.0 l_0_11_60) l_0_11_60)) ?x22874) ?x22876) ?x22878)))
 (= (+ (+ ?x22879 ?x22880) ?x22882) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x20711 (* l_0_11_76 l_0_11_76)))
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20921 (* ?x16678 l_0_11_71)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20907 (* ?x1040 l_0_11_56)))
 (let ((?x9706 (* l_0_11_16 l_0_11_16)))
 (let ((?x5303 (* 4.0 ?x9706)))
 (let ((?x22897 (+ (+ (- (- ?x5303 (* (* 4.0 l_0_11_31) l_0_11_31)) ?x20907) ?x20921) ?x20711)))
 (= ?x22897 0.0))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20813 (* ?x20758 l_0_11_79)))
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x21694 (* ?x20810 l_0_11_73)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x21692 (* ?x20807 l_0_11_72)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x21690 (* ?x20804 l_0_11_71)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x21676 (* ?x20796 l_0_11_58)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x21674 (* ?x20793 l_0_11_57)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x21672 (* ?x20790 l_0_11_56)))
 (let ((?x15060 (- (* (* 8.0 l_0_11_16) l_0_11_19) (* (* 8.0 l_0_11_31) l_0_11_34))))
 (let ((?x22906 (- (- (- (+ ?x15060 (* (* 6.0 l_0_11_46) l_0_11_56)) ?x21672) ?x21674) ?x21676)))
 (let ((?x22911 (+ (+ (+ (- ?x22906 (* (* 6.0 l_0_11_61) l_0_11_71)) ?x21690) ?x21692) ?x21694)))
 (= (+ ?x22911 ?x20813) 0.0)))))))))))))))))))
(assert
 (let ((?x20758 (* 2.0 l_0_11_76)))
 (let ((?x20936 (* ?x20758 l_0_11_86)))
 (let ((?x18162 (* l_0_11_75 l_0_11_75)))
 (let ((?x3433 (* 4.0 ?x18162)))
 (let ((?x9674 (* l_0_11_74 l_0_11_74)))
 (let ((?x18159 (* 4.0 ?x9674)))
 (let ((?x14048 (* l_0_11_73 l_0_11_73)))
 (let ((?x18157 (* 4.0 ?x14048)))
 (let ((?x14047 (* l_0_11_72 l_0_11_72)))
 (let ((?x3713 (* 4.0 ?x14047)))
 (let ((?x3709 (* l_0_11_71 l_0_11_71)))
 (let ((?x13980 (* 4.0 ?x3709)))
 (let ((?x2899 (- (* (* 8.0 l_0_11_16) l_0_11_26) (* (* 8.0 l_0_11_31) l_0_11_41))))
 (let ((?x22930 (- (- ?x2899 (* (* 4.0 l_0_11_56) l_0_11_56)) (* (* 4.0 l_0_11_57) l_0_11_57))))
 (let ((?x22936 (- (- ?x22930 (* (* 4.0 l_0_11_58) l_0_11_58)) (* (* 4.0 l_0_11_59) l_0_11_59))))
 (let ((?x22942 (+ (+ (+ (- ?x22936 (* (* 4.0 l_0_11_60) l_0_11_60)) ?x13980) ?x3713) ?x18157)))
 (= (+ (+ (+ ?x22942 ?x18159) ?x3433) ?x20936) 0.0))))))))))))))))))
(assert
 (let ((?x21631 (* 2.0 l_0_11_81)))
 (let ((?x21715 (* ?x21631 l_0_11_88)))
 (let ((?x21628 (* 2.0 l_0_11_80)))
 (let ((?x21712 (* ?x21628 l_0_11_87)))
 (let ((?x21625 (* 2.0 l_0_11_79)))
 (let ((?x21709 (* ?x21625 l_0_11_86)))
 (let ((?x21908 (* l_0_11_60 l_0_11_60)))
 (let ((?x22977 (* 3.0 ?x21908)))
 (let ((?x21905 (* l_0_11_59 l_0_11_59)))
 (let ((?x22975 (* 3.0 ?x21905)))
 (let ((?x21902 (* l_0_11_58 l_0_11_58)))
 (let ((?x22973 (* 3.0 ?x21902)))
 (let ((?x21899 (* l_0_11_57 l_0_11_57)))
 (let ((?x22971 (* 3.0 ?x21899)))
 (let ((?x21896 (* l_0_11_56 l_0_11_56)))
 (let ((?x22969 (* 3.0 ?x21896)))
 (let ((?x5587 (+ (* (* 8.0 l_0_11_19) l_0_11_26) (* (* 8.0 l_0_11_20) l_0_11_27))))
 (let ((?x22964 (- (+ ?x5587 (* (* 8.0 l_0_11_21) l_0_11_28)) (* (* 8.0 l_0_11_34) l_0_11_41))))
 (let ((?x22968 (- (- ?x22964 (* (* 8.0 l_0_11_35) l_0_11_42)) (* (* 8.0 l_0_11_36) l_0_11_43))))
 (let ((?x22981 (- (+ (+ (+ (+ (+ ?x22968 ?x22969) ?x22971) ?x22973) ?x22975) ?x22977) (* (* 3.0 l_0_11_71) l_0_11_71))))
 (let ((?x22987 (- (- ?x22981 (* (* 3.0 l_0_11_72) l_0_11_72)) (* (* 3.0 l_0_11_73) l_0_11_73))))
 (let ((?x22993 (- (- ?x22987 (* (* 3.0 l_0_11_74) l_0_11_74)) (* (* 3.0 l_0_11_75) l_0_11_75))))
 (= (+ (+ (+ ?x22993 ?x21709) ?x21712) ?x21715) 0.0))))))))))))))))))))))))
(assert
 (let ((?x21938 (* l_0_11_90 l_0_11_90)))
 (let ((?x21936 (* l_0_11_89 l_0_11_89)))
 (let ((?x21934 (* l_0_11_88 l_0_11_88)))
 (let ((?x21932 (* l_0_11_87 l_0_11_87)))
 (let ((?x21930 (* l_0_11_86 l_0_11_86)))
 (let ((?x4859 (* l_0_11_30 l_0_11_30)))
 (let ((?x23030 (* 4.0 ?x4859)))
 (let ((?x22304 (* l_0_11_29 l_0_11_29)))
 (let ((?x23028 (* 4.0 ?x22304)))
 (let ((?x14579 (* l_0_11_28 l_0_11_28)))
 (let ((?x23026 (* 4.0 ?x14579)))
 (let ((?x22300 (* l_0_11_27 l_0_11_27)))
 (let ((?x10981 (* 4.0 ?x22300)))
 (let ((?x22296 (* l_0_11_26 l_0_11_26)))
 (let ((?x10976 (* 4.0 ?x22296)))
 (let ((?x23034 (- (+ (+ (+ (+ ?x10976 ?x10981) ?x23026) ?x23028) ?x23030) (* (* 4.0 l_0_11_41) l_0_11_41))))
 (let ((?x23040 (- (- ?x23034 (* (* 4.0 l_0_11_42) l_0_11_42)) (* (* 4.0 l_0_11_43) l_0_11_43))))
 (let ((?x23046 (- (- ?x23040 (* (* 4.0 l_0_11_44) l_0_11_44)) (* (* 4.0 l_0_11_45) l_0_11_45))))
 (= (+ (+ (+ (+ (+ ?x23046 ?x21930) ?x21932) ?x21934) ?x21936) ?x21938) 0.0))))))))))))))))))))
(assert
 (let ((?x20709 (* (* 4.0 l_0_11_61) l_0_11_61)))
 (let ((?x12547 (* l_0_11_46 l_0_11_46)))
 (let ((?x1085 (* 4.0 ?x12547)))
 (= (- ?x1085 ?x20709) 0.0)))))
(assert
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20799 (* ?x16678 l_0_11_64)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20785 (* ?x1040 l_0_11_49)))
 (= (- ?x20785 ?x20799) 0.0))))))
(assert
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20706 (* ?x16678 l_0_11_67)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x16670 (* ?x1040 l_0_11_52)))
 (= (- ?x16670 ?x20706) 0.0))))))
(assert
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20921 (* ?x16678 l_0_11_71)))
 (let ((?x1040 (* 8.0 l_0_11_46)))
 (let ((?x20907 (* ?x1040 l_0_11_56)))
 (= (- ?x20907 ?x20921) 0.0))))))
(assert
 (let ((?x21536 (* (* 4.0 l_0_11_66) l_0_11_66)))
 (let ((?x21530 (* (* 4.0 l_0_11_65) l_0_11_65)))
 (let ((?x21524 (* (* 4.0 l_0_11_64) l_0_11_64)))
 (let ((?x20113 (* l_0_11_51 l_0_11_51)))
 (let ((?x21512 (* 4.0 ?x20113)))
 (let ((?x20110 (* l_0_11_50 l_0_11_50)))
 (let ((?x21507 (* 4.0 ?x20110)))
 (let ((?x20107 (* l_0_11_49 l_0_11_49)))
 (let ((?x21500 (* 4.0 ?x20107)))
 (= (- (- (- (+ (+ ?x21500 ?x21507) ?x21512) ?x21524) ?x21530) ?x21536) 0.0)))))))))))
(assert
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x20811 (* ?x20810 l_0_11_69)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x20808 (* ?x20807 l_0_11_68)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x20805 (* ?x20804 l_0_11_67)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x20797 (* ?x20796 l_0_11_54)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x20794 (* ?x20793 l_0_11_53)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x20791 (* ?x20790 l_0_11_52)))
 (= (- (- (- (+ (+ ?x20791 ?x20794) ?x20797) ?x20805) ?x20808) ?x20811) 0.0))))))))))))))
(assert
 (let ((?x20810 (* 8.0 l_0_11_66)))
 (let ((?x21694 (* ?x20810 l_0_11_73)))
 (let ((?x20807 (* 8.0 l_0_11_65)))
 (let ((?x21692 (* ?x20807 l_0_11_72)))
 (let ((?x20804 (* 8.0 l_0_11_64)))
 (let ((?x21690 (* ?x20804 l_0_11_71)))
 (let ((?x20796 (* 8.0 l_0_11_51)))
 (let ((?x21676 (* ?x20796 l_0_11_58)))
 (let ((?x20793 (* 8.0 l_0_11_50)))
 (let ((?x21674 (* ?x20793 l_0_11_57)))
 (let ((?x20790 (* 8.0 l_0_11_49)))
 (let ((?x21672 (* ?x20790 l_0_11_56)))
 (= (- (- (- (+ (+ ?x21672 ?x21674) ?x21676) ?x21690) ?x21692) ?x21694) 0.0))))))))))))))
(assert
 (let ((?x21761 (* (* 4.0 l_0_11_70) l_0_11_70)))
 (let ((?x21756 (* (* 4.0 l_0_11_69) l_0_11_69)))
 (let ((?x21753 (* (* 4.0 l_0_11_68) l_0_11_68)))
 (let ((?x21750 (* (* 4.0 l_0_11_67) l_0_11_67)))
 (let ((?x20880 (* l_0_11_55 l_0_11_55)))
 (let ((?x20881 (* 4.0 ?x20880)))
 (let ((?x16856 (* l_0_11_54 l_0_11_54)))
 (let ((?x16852 (* 4.0 ?x16856)))
 (let ((?x16848 (* l_0_11_53 l_0_11_53)))
 (let ((?x16849 (* 4.0 ?x16848)))
 (let ((?x20872 (* l_0_11_52 l_0_11_52)))
 (let ((?x20873 (* 4.0 ?x20872)))
 (let ((?x23135 (- (- (- (- (+ (+ (+ ?x20873 ?x16849) ?x16852) ?x20881) ?x21750) ?x21753) ?x21756) ?x21761)))
 (= ?x23135 0.0)))))))))))))))
(assert
 (let ((?x20933 (* (* 8.0 l_0_11_70) l_0_11_74)))
 (let ((?x20930 (* (* 8.0 l_0_11_69) l_0_11_73)))
 (let ((?x20927 (* (* 8.0 l_0_11_68) l_0_11_72)))
 (let ((?x20924 (* (* 8.0 l_0_11_67) l_0_11_71)))
 (let ((?x20919 (* (* 8.0 l_0_11_55) l_0_11_59)))
 (let ((?x20916 (* (* 8.0 l_0_11_54) l_0_11_58)))
 (let ((?x20913 (* (* 8.0 l_0_11_53) l_0_11_57)))
 (let ((?x20910 (* (* 8.0 l_0_11_52) l_0_11_56)))
 (let ((?x5579 (- (- (- (- (+ (+ (+ ?x20910 ?x20913) ?x20916) ?x20919) ?x20924) ?x20927) ?x20930) ?x20933)))
 (= ?x5579 0.0)))))))))))
(assert
 (let ((?x21924 (* (* 4.0 l_0_11_75) l_0_11_75)))
 (let ((?x21921 (* (* 4.0 l_0_11_74) l_0_11_74)))
 (let ((?x21918 (* (* 4.0 l_0_11_73) l_0_11_73)))
 (let ((?x21915 (* (* 4.0 l_0_11_72) l_0_11_72)))
 (let ((?x21912 (* (* 4.0 l_0_11_71) l_0_11_71)))
 (let ((?x21908 (* l_0_11_60 l_0_11_60)))
 (let ((?x21909 (* 4.0 ?x21908)))
 (let ((?x21905 (* l_0_11_59 l_0_11_59)))
 (let ((?x21906 (* 4.0 ?x21905)))
 (let ((?x21902 (* l_0_11_58 l_0_11_58)))
 (let ((?x21903 (* 4.0 ?x21902)))
 (let ((?x21899 (* l_0_11_57 l_0_11_57)))
 (let ((?x21900 (* 4.0 ?x21899)))
 (let ((?x21896 (* l_0_11_56 l_0_11_56)))
 (let ((?x21897 (* 4.0 ?x21896)))
 (let ((?x5855 (- (- (- (+ (+ (+ (+ ?x21897 ?x21900) ?x21903) ?x21906) ?x21909) ?x21912) ?x21915) ?x21918)))
 (= (- (- ?x5855 ?x21921) ?x21924) 0.0))))))))))))))))))
(assert
 (let ((?x16678 (* 8.0 l_0_11_61)))
 (let ((?x20799 (* ?x16678 l_0_11_64)))
 (let ((?x12547 (* l_0_11_46 l_0_11_46)))
 (let ((?x19157 (* 3.0 ?x12547)))
 (let ((?x23145 (- (+ (+ (* (* (- 8.0) l_0_11_46) l_0_11_49) ?x19157) ?x20799) (* (* 3.0 l_0_11_61) l_0_11_61))))
 (= ?x23145 0.0)))))))
(assert
 (let ((?x20722 (* l_0_11_61 l_0_11_61)))
 (let ((?x20723 (* 4.0 ?x20722)))
 (= (+ (* (* (- 4.0) l_0_11_46) l_0_11_46) ?x20723) 0.0))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_91 0.0))
(assert
 (>= l_0_11_93 0.0))
(assert
 (>= l_0_11_96 0.0))
(assert
 (>= l_0_11_100 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_106 0.0))
(assert
 (>= l_0_11_108 0.0))
(assert
 (>= l_0_11_111 0.0))
(assert
 (>= l_0_11_115 0.0))
(assert
 (>= l_0_11_120 0.0))
(assert
 (>= l_0_11_121 0.0))
(assert
 (>= l_0_11_123 0.0))
(assert
 (>= l_0_11_126 0.0))
(assert
 (>= l_0_11_130 0.0))
(assert
 (>= l_0_11_135 0.0))
(assert
 (>= l_0_11_136 0.0))
(assert
 (>= l_0_11_138 0.0))
(assert
 (>= l_0_11_141 0.0))
(assert
 (>= l_0_11_145 0.0))
(assert
 (>= l_0_11_150 0.0))
(assert
 (>= l_0_11_151 0.0))
(assert
 (>= l_0_11_153 0.0))
(assert
 (>= l_0_11_156 0.0))
(assert
 (>= l_0_11_160 0.0))
(assert
 (>= l_0_11_165 0.0))
(check-sat)
(get-model)