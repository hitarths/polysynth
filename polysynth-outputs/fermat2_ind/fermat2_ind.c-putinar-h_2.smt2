(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_27 () Real)
(declare-fun l_0_1_26 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_25 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_28 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_29 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_30 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun _a_4_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_75 () Real)
(assert
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x814 (* l_0_0_13 l_0_0_13)))
 (let ((?x811 (* 4.0 l_0_0_10)))
 (let ((?x812 (* ?x811 l_0_0_7)))
 (let ((?x813 (+ (- (* (* 2.0 l_0_0_1) l_0_0_4) (* l_0_0_1 l_0_0_1)) ?x812)))
 (let ((?x822 (+ (- (- (+ ?x813 ?x814) (* (* 2.0 l_0_0_19) l_0_0_22)) ?x819) 1.0)))
 (= ?x822 0.0))))))))
(assert
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x871 (* 2.0 ?x819)))
 (let ((?x872 (+ (- (* 1.0 (* l_0_0_1 l_0_0_1)) (* l_0_0_19 l_0_0_19)) ?x871)))
 (= (- ?x872 1.0) 0.0)))))
(assert
 (let ((?x905 (* 2.0 l_0_0_7)))
 (let ((?x906 (* ?x905 l_0_0_8)))
 (let ((?x903 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x894 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x888 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x811 (* 4.0 l_0_0_10)))
 (let ((?x885 (* ?x811 l_0_0_8)))
 (let ((?x889 (+ (+ (- (* (* (- 2.0) l_0_0_1) l_0_0_2) (* ?x811 l_0_0_7)) ?x885) ?x888)))
 (let ((?x898 (- (+ (+ ?x889 (* (* 2.0 l_0_0_13) l_0_0_14)) ?x894) (* (* 2.0 l_0_0_20) l_0_0_22))))
 (= (- (+ (- ?x898 (* (* 2.0 l_0_0_21) l_0_0_23)) ?x903) ?x906) 0.0)))))))))))
(assert
 (let ((?x971 (* l_0_0_24 l_0_0_24)))
 (let ((?x969 (* l_0_0_23 l_0_0_23)))
 (let ((?x967 (* l_0_0_22 l_0_0_22)))
 (let ((?x890 (* 2.0 l_0_0_13)))
 (let ((?x965 (* ?x890 l_0_0_16)))
 (let ((?x962 (* l_0_0_12 l_0_0_12)))
 (let ((?x963 (* 2.0 ?x962)))
 (let ((?x959 (* l_0_0_11 l_0_0_11)))
 (let ((?x960 (* 2.0 ?x959)))
 (let ((?x956 (* l_0_0_10 l_0_0_10)))
 (let ((?x957 (* 2.0 ?x956)))
 (let ((?x953 (* 2.0 l_0_0_10)))
 (let ((?x954 (* ?x953 l_0_0_7)))
 (let ((?x964 (+ (+ (+ (- (* (* (- 2.0) l_0_0_1) l_0_0_4) ?x954) ?x957) ?x960) ?x963)))
 (let ((?x975 (+ (- (- (- (+ ?x964 ?x965) ?x967) ?x969) ?x971) (* 1.0 (* l_0_0_4 l_0_0_4)))))
 (let ((?x981 (+ (+ ?x975 (* 1.0 (* l_0_0_5 l_0_0_5))) (* 1.0 (* l_0_0_6 l_0_0_6)))))
 (= ?x981 0.0))))))))))))))))))
(assert
 (let ((?x1022 (* l_0_0_9 l_0_0_9)))
 (let ((?x1020 (* l_0_0_8 l_0_0_8)))
 (let ((?x1018 (* l_0_0_3 l_0_0_3)))
 (let ((?x1016 (* l_0_0_2 l_0_0_2)))
 (let ((?x1014 (* l_0_0_15 l_0_0_15)))
 (let ((?x1012 (* l_0_0_14 l_0_0_14)))
 (let ((?x890 (* 2.0 l_0_0_13)))
 (let ((?x965 (* ?x890 l_0_0_16)))
 (let ((?x888 (* (* 4.0 l_0_0_11) l_0_0_9)))
 (let ((?x811 (* 4.0 l_0_0_10)))
 (let ((?x885 (* ?x811 l_0_0_8)))
 (let ((?x953 (* 2.0 l_0_0_10)))
 (let ((?x954 (* ?x953 l_0_0_7)))
 (let ((?x1019 (- (- (+ (+ (- (- (- ?x954 ?x885) ?x888) ?x965) ?x1012) ?x1014) ?x1016) ?x1018)))
 (= (- (- ?x1019 ?x1020) ?x1022) 0.0))))))))))))))))
(assert
 (let ((?x903 (* (* 2.0 l_0_0_3) l_0_0_5)))
 (let ((?x894 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (let ((?x1064 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1061 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1052 (* 2.0 l_0_0_11)))
 (let ((?x1053 (* ?x1052 l_0_0_9)))
 (let ((?x1051 (- (* (* (- 2.0) l_0_0_10) l_0_0_8) (* (* 2.0 l_0_0_10) l_0_0_10))))
 (let ((?x1059 (- (- (- ?x1051 ?x1053) (* ?x1052 l_0_0_11)) (* (* 2.0 l_0_0_12) l_0_0_12))))
 (= (- (- (+ (+ ?x1059 ?x1061) ?x1064) ?x894) ?x903) 0.0))))))))))
(assert
 (let ((?x979 (* l_0_0_6 l_0_0_6)))
 (let ((?x976 (* l_0_0_5 l_0_0_5)))
 (let ((?x973 (* l_0_0_4 l_0_0_4)))
 (let ((?x1108 (* l_0_0_18 l_0_0_18)))
 (let ((?x1106 (* l_0_0_17 l_0_0_17)))
 (let ((?x1104 (* l_0_0_16 l_0_0_16)))
 (let ((?x962 (* l_0_0_12 l_0_0_12)))
 (let ((?x1105 (+ (- (- (* (- l_0_0_10) l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x962) ?x1104)))
 (= (- (- (- (+ (+ ?x1105 ?x1106) ?x1108) ?x973) ?x976) ?x979) 0.0))))))))))
(assert
 (let ((?x1137 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1135 (- (* (* 2.0 l_0_0_1) l_0_0_2) (* (* 2.0 l_0_0_19) l_0_0_20))))
 (= (- (+ ?x1135 ?x1137) (* (* 2.0 l_0_0_7) l_0_0_7)) 0.0))))
(assert
 (let ((?x1022 (* l_0_0_9 l_0_0_9)))
 (let ((?x1171 (* 2.0 ?x1022)))
 (let ((?x1020 (* l_0_0_8 l_0_0_8)))
 (let ((?x1169 (* 2.0 ?x1020)))
 (let ((?x819 (* l_0_0_7 l_0_0_7)))
 (let ((?x1137 (* (* 4.0 l_0_0_7) l_0_0_8)))
 (let ((?x1163 (* l_0_0_21 l_0_0_21)))
 (let ((?x1161 (* l_0_0_20 l_0_0_20)))
 (let ((?x1162 (- (+ (* (- l_0_0_13) l_0_0_13) (* 1.0 (* l_0_0_2 l_0_0_2))) ?x1161)))
 (let ((?x1168 (+ (- (+ (- ?x1162 ?x1163) (* 1.0 (* l_0_0_3 l_0_0_3))) ?x1137) ?x819)))
 (= (+ (+ ?x1168 ?x1169) ?x1171) 0.0))))))))))))
(assert
 (let ((?x905 (* 2.0 l_0_0_7)))
 (let ((?x906 (* ?x905 l_0_0_8)))
 (let ((?x1195 (- (+ (* (* (- 2.0) l_0_0_13) l_0_0_14) ?x906) (* (* 2.0 l_0_0_8) l_0_0_8))))
 (= (- ?x1195 (* (* 2.0 l_0_0_9) l_0_0_9)) 0.0)))))
(assert
 (let ((?x1022 (* l_0_0_9 l_0_0_9)))
 (let ((?x1020 (* l_0_0_8 l_0_0_8)))
 (let ((?x1213 (+ (+ (- (* (- l_0_0_14) l_0_0_14) (* l_0_0_15 l_0_0_15)) ?x1020) ?x1022)))
 (= ?x1213 0.0)))))
(assert
 (let ((?x1064 (* (* 2.0 l_0_0_15) l_0_0_17)))
 (let ((?x1061 (* (* 2.0 l_0_0_14) l_0_0_16)))
 (let ((?x1052 (* 2.0 l_0_0_11)))
 (let ((?x1053 (* ?x1052 l_0_0_9)))
 (= (- (- (+ (* (* 2.0 l_0_0_10) l_0_0_8) ?x1053) ?x1061) ?x1064) 0.0))))))
(assert
 (let ((?x1108 (* l_0_0_18 l_0_0_18)))
 (let ((?x1106 (* l_0_0_17 l_0_0_17)))
 (let ((?x1104 (* l_0_0_16 l_0_0_16)))
 (let ((?x962 (* l_0_0_12 l_0_0_12)))
 (let ((?x1236 (- (+ (+ (* l_0_0_10 l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x962) ?x1104)))
 (= (- (- ?x1236 ?x1106) ?x1108) 0.0)))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_19 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_24 0.0))
(assert
 (let ((?x1284 (* l_0_1_9 l_0_1_9)))
 (let ((?x1285 (* 2.0 ?x1284)))
 (let ((?x1281 (* l_0_1_8 l_0_1_8)))
 (let ((?x1282 (* 2.0 ?x1281)))
 (let ((?x1279 (* l_0_1_7 l_0_1_7)))
 (let ((?x1277 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x1271 (* l_0_1_27 l_0_1_27)))
 (let ((?x1269 (* l_0_1_26 l_0_1_26)))
 (let ((?x1267 (* l_0_1_21 l_0_1_21)))
 (let ((?x1265 (* l_0_1_20 l_0_1_20)))
 (let ((?x1266 (- (+ (* (- l_0_1_13) l_0_1_13) (* 1.0 (* l_0_1_2 l_0_1_2))) ?x1265)))
 (let ((?x1275 (+ (- (- (- ?x1266 ?x1267) ?x1269) ?x1271) (* 1.0 (* l_0_1_3 l_0_1_3)))))
 (= (+ (+ (+ (- ?x1275 ?x1277) ?x1279) ?x1282) ?x1285) 0.0))))))))))))))
(assert
 (let ((?x1277 (* (* 4.0 l_0_1_7) l_0_1_8)))
 (let ((?x1317 (- (* (* 2.0 l_0_1_1) l_0_1_2) (* (* 2.0 l_0_1_19) l_0_1_20))))
 (let ((?x1324 (- (+ (- ?x1317 (* (* 2.0 l_0_1_25) l_0_1_26)) ?x1277) (* (* 2.0 l_0_1_7) l_0_1_7))))
 (= ?x1324 0.0)))))
(assert
 (let ((?x1279 (* l_0_1_7 l_0_1_7)))
 (let ((?x1341 (* 2.0 ?x1279)))
 (let ((?x1353 (* l_0_1_25 l_0_1_25)))
 (let ((?x1354 (- (- (* 1.0 (* l_0_1_1 l_0_1_1)) (* l_0_1_19 l_0_1_19)) ?x1353)))
 (= (+ ?x1354 ?x1341) 0.0))))))
(assert
 (let ((?x1279 (* l_0_1_7 l_0_1_7)))
 (let ((?x1289 (* l_0_1_13 l_0_1_13)))
 (let ((?x1366 (* 4.0 l_0_1_10)))
 (let ((?x1367 (* ?x1366 l_0_1_7)))
 (let ((?x1368 (+ (- (* (* 2.0 l_0_1_1) l_0_1_4) (* l_0_1_1 l_0_1_1)) ?x1367)))
 (let ((?x1373 (- (- (+ ?x1368 ?x1289) (* (* 2.0 l_0_1_19) l_0_1_22)) (* (* 2.0 l_0_1_25) l_0_1_28))))
 (= (- ?x1373 ?x1279) 0.0))))))))
(assert
 (let ((?x1322 (* 2.0 l_0_1_7)))
 (let ((?x1432 (* ?x1322 l_0_1_8)))
 (let ((?x1430 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x1415 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x1409 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x1366 (* 4.0 l_0_1_10)))
 (let ((?x1406 (* ?x1366 l_0_1_8)))
 (let ((?x1410 (+ (+ (- (* (* (- 2.0) l_0_1_1) l_0_1_2) (* ?x1366 l_0_1_7)) ?x1406) ?x1409)))
 (let ((?x1419 (- (+ (+ ?x1410 (* (* 2.0 l_0_1_13) l_0_1_14)) ?x1415) (* (* 2.0 l_0_1_20) l_0_1_22))))
 (let ((?x1425 (- (- ?x1419 (* (* 2.0 l_0_1_21) l_0_1_23)) (* (* 2.0 l_0_1_26) l_0_1_28))))
 (= (- (+ (- ?x1425 (* (* 2.0 l_0_1_27) l_0_1_29)) ?x1430) ?x1432) 0.0))))))))))))
(assert
 (let ((?x1511 (* l_0_1_30 l_0_1_30)))
 (let ((?x1509 (* l_0_1_29 l_0_1_29)))
 (let ((?x1507 (* l_0_1_28 l_0_1_28)))
 (let ((?x1505 (* l_0_1_24 l_0_1_24)))
 (let ((?x1503 (* l_0_1_23 l_0_1_23)))
 (let ((?x1501 (* l_0_1_22 l_0_1_22)))
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1499 (* ?x1411 l_0_1_16)))
 (let ((?x1496 (* l_0_1_12 l_0_1_12)))
 (let ((?x1497 (* 2.0 ?x1496)))
 (let ((?x1493 (* l_0_1_11 l_0_1_11)))
 (let ((?x1494 (* 2.0 ?x1493)))
 (let ((?x1490 (* l_0_1_10 l_0_1_10)))
 (let ((?x1491 (* 2.0 ?x1490)))
 (let ((?x1487 (* 2.0 l_0_1_10)))
 (let ((?x1488 (* ?x1487 l_0_1_7)))
 (let ((?x1498 (+ (+ (+ (- (* (* (- 2.0) l_0_1_1) l_0_1_4) ?x1488) ?x1491) ?x1494) ?x1497)))
 (let ((?x1512 (- (- (- (- (- (- (+ ?x1498 ?x1499) ?x1501) ?x1503) ?x1505) ?x1507) ?x1509) ?x1511)))
 (let ((?x1518 (+ (+ ?x1512 (* 1.0 (* l_0_1_4 l_0_1_4))) (* 1.0 (* l_0_1_5 l_0_1_5)))))
 (= (+ ?x1518 (* 1.0 (* l_0_1_6 l_0_1_6))) 0.0)))))))))))))))))))))
(assert
 (let ((?x1284 (* l_0_1_9 l_0_1_9)))
 (let ((?x1281 (* l_0_1_8 l_0_1_8)))
 (let ((?x1273 (* l_0_1_3 l_0_1_3)))
 (let ((?x1262 (* l_0_1_2 l_0_1_2)))
 (let ((?x1563 (* l_0_1_15 l_0_1_15)))
 (let ((?x1561 (* l_0_1_14 l_0_1_14)))
 (let ((?x1411 (* 2.0 l_0_1_13)))
 (let ((?x1499 (* ?x1411 l_0_1_16)))
 (let ((?x1409 (* (* 4.0 l_0_1_11) l_0_1_9)))
 (let ((?x1366 (* 4.0 l_0_1_10)))
 (let ((?x1406 (* ?x1366 l_0_1_8)))
 (let ((?x1487 (* 2.0 l_0_1_10)))
 (let ((?x1488 (* ?x1487 l_0_1_7)))
 (let ((?x1566 (- (- (+ (+ (- (- (- ?x1488 ?x1406) ?x1409) ?x1499) ?x1561) ?x1563) ?x1262) ?x1273)))
 (= (- (- ?x1566 ?x1281) ?x1284) 0.0))))))))))))))))
(assert
 (let ((?x1430 (* (* 2.0 l_0_1_3) l_0_1_5)))
 (let ((?x1415 (* (* 2.0 l_0_1_2) l_0_1_4)))
 (let ((?x1612 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x1609 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x1600 (* 2.0 l_0_1_11)))
 (let ((?x1601 (* ?x1600 l_0_1_9)))
 (let ((?x1599 (- (* (* (- 2.0) l_0_1_10) l_0_1_8) (* (* 2.0 l_0_1_10) l_0_1_10))))
 (let ((?x1607 (- (- (- ?x1599 ?x1601) (* ?x1600 l_0_1_11)) (* (* 2.0 l_0_1_12) l_0_1_12))))
 (= (- (- (+ (+ ?x1607 ?x1609) ?x1612) ?x1415) ?x1430) 0.0))))))))))
(assert
 (let ((?x1519 (* l_0_1_6 l_0_1_6)))
 (let ((?x1516 (* l_0_1_5 l_0_1_5)))
 (let ((?x1513 (* l_0_1_4 l_0_1_4)))
 (let ((?x1656 (* l_0_1_18 l_0_1_18)))
 (let ((?x1654 (* l_0_1_17 l_0_1_17)))
 (let ((?x1652 (* l_0_1_16 l_0_1_16)))
 (let ((?x1496 (* l_0_1_12 l_0_1_12)))
 (let ((?x1653 (+ (- (- (* (- l_0_1_10) l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1496) ?x1652)))
 (= (- (- (- (+ (+ ?x1653 ?x1654) ?x1656) ?x1513) ?x1516) ?x1519) 0.0))))))))))
(assert
 (let ((?x1322 (* 2.0 l_0_1_7)))
 (let ((?x1432 (* ?x1322 l_0_1_8)))
 (let ((?x1686 (- (+ (* (* (- 2.0) l_0_1_13) l_0_1_14) ?x1432) (* (* 2.0 l_0_1_8) l_0_1_8))))
 (= (- ?x1686 (* (* 2.0 l_0_1_9) l_0_1_9)) 0.0)))))
(assert
 (let ((?x1284 (* l_0_1_9 l_0_1_9)))
 (let ((?x1281 (* l_0_1_8 l_0_1_8)))
 (let ((?x1706 (+ (+ (- (* (- l_0_1_14) l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x1281) ?x1284)))
 (= ?x1706 0.0)))))
(assert
 (let ((?x1612 (* (* 2.0 l_0_1_15) l_0_1_17)))
 (let ((?x1609 (* (* 2.0 l_0_1_14) l_0_1_16)))
 (let ((?x1600 (* 2.0 l_0_1_11)))
 (let ((?x1601 (* ?x1600 l_0_1_9)))
 (= (- (- (+ (* (* 2.0 l_0_1_10) l_0_1_8) ?x1601) ?x1609) ?x1612) 0.0))))))
(assert
 (let ((?x1656 (* l_0_1_18 l_0_1_18)))
 (let ((?x1654 (* l_0_1_17 l_0_1_17)))
 (let ((?x1652 (* l_0_1_16 l_0_1_16)))
 (let ((?x1496 (* l_0_1_12 l_0_1_12)))
 (let ((?x1727 (- (+ (+ (* l_0_1_10 l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1496) ?x1652)))
 (= (- (- ?x1727 ?x1654) ?x1656) 0.0)))))))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (>= l_0_1_25 0.0))
(assert
 (>= l_0_1_27 0.0))
(assert
 (>= l_0_1_30 0.0))
(assert
 (let ((?x1772 (* l_0_2_7 l_0_2_7)))
 (let ((?x1761 (* l_0_2_13 l_0_2_13)))
 (let ((?x1758 (* 4.0 l_0_2_10)))
 (let ((?x1759 (* ?x1758 l_0_2_7)))
 (let ((?x1760 (+ (- (* (* 2.0 l_0_2_1) l_0_2_4) (* l_0_2_1 l_0_2_1)) ?x1759)))
 (let ((?x1768 (- (- (+ ?x1760 ?x1761) (* (* 2.0 l_0_2_19) l_0_2_22)) (* (* 2.0 l_0_2_25) l_0_2_28))))
 (= (- (- ?x1768 (* (* 2.0 l_0_2_31) l_0_2_34)) ?x1772) 0.0))))))))
(assert
 (let ((?x1836 (* l_0_2_9 l_0_2_9)))
 (let ((?x1837 (* 2.0 ?x1836)))
 (let ((?x1833 (* l_0_2_8 l_0_2_8)))
 (let ((?x1834 (* 2.0 ?x1833)))
 (let ((?x1772 (* l_0_2_7 l_0_2_7)))
 (let ((?x1830 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x1827 (* l_0_2_33 l_0_2_33)))
 (let ((?x1825 (* l_0_2_32 l_0_2_32)))
 (let ((?x1820 (* l_0_2_27 l_0_2_27)))
 (let ((?x1818 (* l_0_2_26 l_0_2_26)))
 (let ((?x1816 (* l_0_2_21 l_0_2_21)))
 (let ((?x1814 (* l_0_2_20 l_0_2_20)))
 (let ((?x1815 (- (+ (* (- l_0_2_13) l_0_2_13) (* 1.0 (* l_0_2_2 l_0_2_2))) ?x1814)))
 (let ((?x1824 (+ (- (- (- ?x1815 ?x1816) ?x1818) ?x1820) (* 1.0 (* l_0_2_3 l_0_2_3)))))
 (= (+ (+ (+ (- (- (- ?x1824 ?x1825) ?x1827) ?x1830) ?x1772) ?x1834) ?x1837) 0.0))))))))))))))))
(assert
 (let ((?x1830 (* (* 4.0 l_0_2_7) l_0_2_8)))
 (let ((?x1875 (- (* (* 2.0 l_0_2_1) l_0_2_2) (* (* 2.0 l_0_2_19) l_0_2_20))))
 (let ((?x1879 (- (- ?x1875 (* (* 2.0 l_0_2_25) l_0_2_26)) (* (* 2.0 l_0_2_31) l_0_2_32))))
 (= (- (+ ?x1879 ?x1830) (* (* 2.0 l_0_2_7) l_0_2_7)) 0.0)))))
(assert
 (let ((?x1772 (* l_0_2_7 l_0_2_7)))
 (let ((?x1906 (* 2.0 ?x1772)))
 (let ((?x1919 (* l_0_2_31 l_0_2_31)))
 (let ((?x1917 (* l_0_2_25 l_0_2_25)))
 (let ((?x1918 (- (- (* 1.0 (* l_0_2_1 l_0_2_1)) (* l_0_2_19 l_0_2_19)) ?x1917)))
 (= (+ (- ?x1918 ?x1919) ?x1906) 0.0)))))))
(assert
 (let ((?x1881 (* 2.0 l_0_2_7)))
 (let ((?x1968 (* ?x1881 l_0_2_8)))
 (let ((?x1960 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x1945 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x1939 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x1758 (* 4.0 l_0_2_10)))
 (let ((?x1936 (* ?x1758 l_0_2_8)))
 (let ((?x1940 (+ (+ (- (* (* (- 2.0) l_0_2_1) l_0_2_2) (* ?x1758 l_0_2_7)) ?x1936) ?x1939)))
 (let ((?x1949 (- (+ (+ ?x1940 (* (* 2.0 l_0_2_13) l_0_2_14)) ?x1945) (* (* 2.0 l_0_2_20) l_0_2_22))))
 (let ((?x1955 (- (- ?x1949 (* (* 2.0 l_0_2_21) l_0_2_23)) (* (* 2.0 l_0_2_26) l_0_2_28))))
 (let ((?x1964 (- (+ (- ?x1955 (* (* 2.0 l_0_2_27) l_0_2_29)) ?x1960) (* (* 2.0 l_0_2_32) l_0_2_34))))
 (= (- (- ?x1964 (* (* 2.0 l_0_2_33) l_0_2_35)) ?x1968) 0.0)))))))))))))
(assert
 (let ((?x2065 (* l_0_2_36 l_0_2_36)))
 (let ((?x2063 (* l_0_2_35 l_0_2_35)))
 (let ((?x2061 (* l_0_2_34 l_0_2_34)))
 (let ((?x2059 (* l_0_2_30 l_0_2_30)))
 (let ((?x2057 (* l_0_2_29 l_0_2_29)))
 (let ((?x2055 (* l_0_2_28 l_0_2_28)))
 (let ((?x2053 (* l_0_2_24 l_0_2_24)))
 (let ((?x2051 (* l_0_2_23 l_0_2_23)))
 (let ((?x2049 (* l_0_2_22 l_0_2_22)))
 (let ((?x1941 (* 2.0 l_0_2_13)))
 (let ((?x2047 (* ?x1941 l_0_2_16)))
 (let ((?x2044 (* l_0_2_12 l_0_2_12)))
 (let ((?x2045 (* 2.0 ?x2044)))
 (let ((?x2041 (* l_0_2_11 l_0_2_11)))
 (let ((?x2042 (* 2.0 ?x2041)))
 (let ((?x2038 (* l_0_2_10 l_0_2_10)))
 (let ((?x2039 (* 2.0 ?x2038)))
 (let ((?x2035 (* 2.0 l_0_2_10)))
 (let ((?x2036 (* ?x2035 l_0_2_7)))
 (let ((?x2046 (+ (+ (+ (- (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x2036) ?x2039) ?x2042) ?x2045)))
 (let ((?x2060 (- (- (- (- (- (- (+ ?x2046 ?x2047) ?x2049) ?x2051) ?x2053) ?x2055) ?x2057) ?x2059)))
 (let ((?x2069 (+ (- (- (- ?x2060 ?x2061) ?x2063) ?x2065) (* 1.0 (* l_0_2_4 l_0_2_4)))))
 (let ((?x2075 (+ (+ ?x2069 (* 1.0 (* l_0_2_5 l_0_2_5))) (* 1.0 (* l_0_2_6 l_0_2_6)))))
 (= ?x2075 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1836 (* l_0_2_9 l_0_2_9)))
 (let ((?x1833 (* l_0_2_8 l_0_2_8)))
 (let ((?x1822 (* l_0_2_3 l_0_2_3)))
 (let ((?x1811 (* l_0_2_2 l_0_2_2)))
 (let ((?x2126 (* l_0_2_15 l_0_2_15)))
 (let ((?x2124 (* l_0_2_14 l_0_2_14)))
 (let ((?x1941 (* 2.0 l_0_2_13)))
 (let ((?x2047 (* ?x1941 l_0_2_16)))
 (let ((?x1939 (* (* 4.0 l_0_2_11) l_0_2_9)))
 (let ((?x1758 (* 4.0 l_0_2_10)))
 (let ((?x1936 (* ?x1758 l_0_2_8)))
 (let ((?x2035 (* 2.0 l_0_2_10)))
 (let ((?x2036 (* ?x2035 l_0_2_7)))
 (let ((?x2129 (- (- (+ (+ (- (- (- ?x2036 ?x1936) ?x1939) ?x2047) ?x2124) ?x2126) ?x1811) ?x1822)))
 (= (- (- ?x2129 ?x1833) ?x1836) 0.0))))))))))))))))
(assert
 (let ((?x1960 (* (* 2.0 l_0_2_3) l_0_2_5)))
 (let ((?x1945 (* (* 2.0 l_0_2_2) l_0_2_4)))
 (let ((?x2170 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2167 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2158 (* 2.0 l_0_2_11)))
 (let ((?x2159 (* ?x2158 l_0_2_9)))
 (let ((?x2157 (- (* (* (- 2.0) l_0_2_10) l_0_2_8) (* (* 2.0 l_0_2_10) l_0_2_10))))
 (let ((?x2165 (- (- (- ?x2157 ?x2159) (* ?x2158 l_0_2_11)) (* (* 2.0 l_0_2_12) l_0_2_12))))
 (= (- (- (+ (+ ?x2165 ?x2167) ?x2170) ?x1945) ?x1960) 0.0))))))))))
(assert
 (let ((?x2073 (* l_0_2_6 l_0_2_6)))
 (let ((?x2070 (* l_0_2_5 l_0_2_5)))
 (let ((?x2067 (* l_0_2_4 l_0_2_4)))
 (let ((?x2214 (* l_0_2_18 l_0_2_18)))
 (let ((?x2212 (* l_0_2_17 l_0_2_17)))
 (let ((?x2210 (* l_0_2_16 l_0_2_16)))
 (let ((?x2044 (* l_0_2_12 l_0_2_12)))
 (let ((?x2211 (+ (- (- (* (- l_0_2_10) l_0_2_10) (* l_0_2_11 l_0_2_11)) ?x2044) ?x2210)))
 (= (- (- (- (+ (+ ?x2211 ?x2212) ?x2214) ?x2067) ?x2070) ?x2073) 0.0))))))))))
(assert
 (let ((?x1881 (* 2.0 l_0_2_7)))
 (let ((?x1968 (* ?x1881 l_0_2_8)))
 (let ((?x2244 (- (+ (* (* (- 2.0) l_0_2_13) l_0_2_14) ?x1968) (* (* 2.0 l_0_2_8) l_0_2_8))))
 (= (- ?x2244 (* (* 2.0 l_0_2_9) l_0_2_9)) 0.0)))))
(assert
 (let ((?x1836 (* l_0_2_9 l_0_2_9)))
 (let ((?x1833 (* l_0_2_8 l_0_2_8)))
 (let ((?x2262 (+ (+ (- (* (- l_0_2_14) l_0_2_14) (* l_0_2_15 l_0_2_15)) ?x1833) ?x1836)))
 (= ?x2262 0.0)))))
(assert
 (let ((?x2170 (* (* 2.0 l_0_2_15) l_0_2_17)))
 (let ((?x2167 (* (* 2.0 l_0_2_14) l_0_2_16)))
 (let ((?x2158 (* 2.0 l_0_2_11)))
 (let ((?x2159 (* ?x2158 l_0_2_9)))
 (= (- (- (+ (* (* 2.0 l_0_2_10) l_0_2_8) ?x2159) ?x2167) ?x2170) 0.0))))))
(assert
 (let ((?x2214 (* l_0_2_18 l_0_2_18)))
 (let ((?x2212 (* l_0_2_17 l_0_2_17)))
 (let ((?x2210 (* l_0_2_16 l_0_2_16)))
 (let ((?x2044 (* l_0_2_12 l_0_2_12)))
 (let ((?x2285 (- (+ (+ (* l_0_2_10 l_0_2_10) (* l_0_2_11 l_0_2_11)) ?x2044) ?x2210)))
 (= (- (- ?x2285 ?x2212) ?x2214) 0.0)))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_9 0.0))
(assert
 (>= l_0_2_12 0.0))
(assert
 (>= l_0_2_13 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_18 0.0))
(assert
 (>= l_0_2_19 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_24 0.0))
(assert
 (>= l_0_2_25 0.0))
(assert
 (>= l_0_2_27 0.0))
(assert
 (>= l_0_2_30 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_33 0.0))
(assert
 (>= l_0_2_36 0.0))
(assert
 (let ((?x2328 (* l_0_3_63 l_0_3_63)))
 (let ((?x2326 (* l_0_3_62 l_0_3_62)))
 (let ((?x2319 (+ (* 1.0 (* l_0_3_2 l_0_3_2)) (* 1.0 (* l_0_3_3 l_0_3_3)))))
 (let ((?x2325 (- (- ?x2319 (* (* 1.0 l_0_3_47) l_0_3_47)) (* (* 1.0 l_0_3_48) l_0_3_48))))
 (= (+ (- (- ?x2325 ?x2326) ?x2328) 1.0) 0.0))))))
(assert
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x2371 (* ?x2370 l_0_3_42)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x2368 (* ?x2367 l_0_3_41)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x2365 (* ?x2362 l_0_3_31)))
 (let ((?x2363 (* ?x2362 l_0_3_41)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x2360 (* ?x2359 l_0_3_27)))
 (let ((?x2353 (* l_0_3_16 l_0_3_16)))
 (let ((?x2354 (* 4.0 ?x2353)))
 (let ((?x2355 (+ (- (* (- l_0_3_1) l_0_3_1) (* (* 4.0 l_0_3_16) l_0_3_26)) ?x2354)))
 (let ((?x2366 (- (+ (+ (+ ?x2355 (* (* 2.0 l_0_3_17) l_0_3_26)) ?x2360) ?x2363) ?x2365)))
 (= (- (- ?x2366 ?x2368) ?x2371) 0.0)))))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x2433 (* ?x2432 l_0_3_56)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x2430 (* ?x2429 l_0_3_42)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x2427 (* ?x2426 l_0_3_41)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2424 (* ?x2423 l_0_3_32)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x2421 (* ?x2420 l_0_3_27)))
 (let ((?x2417 (* 4.0 l_0_3_17)))
 (let ((?x2418 (* ?x2417 l_0_3_26)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2415 (* ?x2414 l_0_3_17)))
 (let ((?x2409 (* 2.0 l_0_3_1)))
 (let ((?x2411 (* ?x2409 l_0_3_2)))
 (let ((?x2428 (+ (- (- (- (+ (- (* ?x2409 l_0_3_11) ?x2411) ?x2415) ?x2418) ?x2421) ?x2424) ?x2427)))
 (= (- (- (+ ?x2428 ?x2430) ?x2433) (* (* 2.0 l_0_3_61) l_0_3_71)) 0.0)))))))))))))))))))
(assert
 (let ((?x2511 (* 4.0 l_0_3_36)))
 (let ((?x2512 (* ?x2511 l_0_3_43)))
 (let ((?x2508 (* 4.0 l_0_3_35)))
 (let ((?x2509 (* ?x2508 l_0_3_42)))
 (let ((?x2505 (* 4.0 l_0_3_34)))
 (let ((?x2506 (* ?x2505 l_0_3_41)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x2363 (* ?x2362 l_0_3_41)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2502 (* ?x2423 l_0_3_34)))
 (let ((?x2499 (* 4.0 l_0_3_21)))
 (let ((?x2500 (* ?x2499 l_0_3_28)))
 (let ((?x2496 (* 4.0 l_0_3_20)))
 (let ((?x2497 (* ?x2496 l_0_3_27)))
 (let ((?x2493 (* 4.0 l_0_3_19)))
 (let ((?x2494 (* ?x2493 l_0_3_26)))
 (let ((?x2350 (* 4.0 l_0_3_16)))
 (let ((?x2351 (* ?x2350 l_0_3_26)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2490 (* ?x2414 l_0_3_19)))
 (let ((?x2498 (- (- (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x2490) ?x2351) ?x2494) ?x2497)))
 (= (+ (+ (+ (- (- (- ?x2498 ?x2500) ?x2502) ?x2363) ?x2506) ?x2509) ?x2512) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x2433 (* ?x2432 l_0_3_56)))
 (let ((?x2586 (* 4.0 l_0_3_40)))
 (let ((?x2587 (* ?x2586 l_0_3_44)))
 (let ((?x2583 (* 4.0 l_0_3_39)))
 (let ((?x2584 (* ?x2583 l_0_3_43)))
 (let ((?x2580 (* 4.0 l_0_3_38)))
 (let ((?x2581 (* ?x2580 l_0_3_42)))
 (let ((?x2577 (* 4.0 l_0_3_37)))
 (let ((?x2578 (* ?x2577 l_0_3_41)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2575 (* ?x2423 l_0_3_41)))
 (let ((?x2573 (* ?x2423 l_0_3_37)))
 (let ((?x2571 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x2568 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x2565 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x2562 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2559 (* ?x2414 l_0_3_26)))
 (let ((?x2563 (- (+ (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) (* ?x2414 l_0_3_22)) ?x2559) ?x2562)))
 (let ((?x2582 (+ (+ (- (- (- (- (- ?x2563 ?x2565) ?x2568) ?x2571) ?x2573) ?x2575) ?x2578) ?x2581)))
 (= (+ (+ (+ ?x2582 ?x2584) ?x2587) ?x2433) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2672 (* l_0_3_45 l_0_3_45)))
 (let ((?x2673 (* 2.0 ?x2672)))
 (let ((?x2669 (* l_0_3_44 l_0_3_44)))
 (let ((?x2670 (* 2.0 ?x2669)))
 (let ((?x2666 (* l_0_3_43 l_0_3_43)))
 (let ((?x2667 (* 2.0 ?x2666)))
 (let ((?x2663 (* l_0_3_42 l_0_3_42)))
 (let ((?x2664 (* 2.0 ?x2663)))
 (let ((?x2660 (* l_0_3_41 l_0_3_41)))
 (let ((?x2661 (* 2.0 ?x2660)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2575 (* ?x2423 l_0_3_41)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2559 (* ?x2414 l_0_3_26)))
 (let ((?x2646 (- (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x2559) (* (* 2.0 l_0_3_26) l_0_3_26))))
 (let ((?x2652 (- (- ?x2646 (* (* 2.0 l_0_3_27) l_0_3_27)) (* (* 2.0 l_0_3_28) l_0_3_28))))
 (let ((?x2658 (- (- ?x2652 (* (* 2.0 l_0_3_29) l_0_3_29)) (* (* 2.0 l_0_3_30) l_0_3_30))))
 (= (+ (+ (+ (+ (+ (- ?x2658 ?x2575) ?x2661) ?x2664) ?x2667) ?x2670) ?x2673) 0.0)))))))))))))))))))
(assert
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x2732 (* ?x2731 l_0_3_57)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x2729 (* ?x2728 l_0_3_56)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x2726 (* ?x2429 l_0_3_33)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x2724 (* ?x2426 l_0_3_32)))
 (let ((?x2317 (* l_0_3_3 l_0_3_3)))
 (let ((?x2315 (* l_0_3_2 l_0_3_2)))
 (let ((?x2719 (* l_0_3_18 l_0_3_18)))
 (let ((?x2720 (* 4.0 ?x2719)))
 (let ((?x2716 (* l_0_3_17 l_0_3_17)))
 (let ((?x2717 (* 4.0 ?x2716)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2714 (* ?x2713 l_0_3_3)))
 (let ((?x2722 (- (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x2714) ?x2717) ?x2720) ?x2315)))
 (let ((?x2736 (- (- (- (- (- (- ?x2722 ?x2317) ?x2724) ?x2726) ?x2729) ?x2732) (* (* 2.0 l_0_3_62) l_0_3_71))))
 (= (- ?x2736 (* (* 2.0 l_0_3_63) l_0_3_72)) 0.0))))))))))))))))))))
(assert
 (let ((?x2828 (* 2.0 l_0_3_51)))
 (let ((?x2829 (* ?x2828 l_0_3_58)))
 (let ((?x2825 (* 2.0 l_0_3_50)))
 (let ((?x2826 (* ?x2825 l_0_3_57)))
 (let ((?x2822 (* 2.0 l_0_3_49)))
 (let ((?x2823 (* ?x2822 l_0_3_56)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x2430 (* ?x2429 l_0_3_42)))
 (let ((?x2818 (* 8.0 l_0_3_33)))
 (let ((?x2819 (* ?x2818 l_0_3_35)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x2427 (* ?x2426 l_0_3_41)))
 (let ((?x2814 (* 8.0 l_0_3_32)))
 (let ((?x2815 (* ?x2814 l_0_3_34)))
 (let ((?x2811 (* 2.0 l_0_3_3)))
 (let ((?x2812 (* ?x2811 l_0_3_5)))
 (let ((?x2808 (* 2.0 l_0_3_2)))
 (let ((?x2809 (* ?x2808 l_0_3_4)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x2421 (* ?x2420 l_0_3_27)))
 (let ((?x2804 (* 8.0 l_0_3_18)))
 (let ((?x2805 (* ?x2804 l_0_3_20)))
 (let ((?x2417 (* 4.0 l_0_3_17)))
 (let ((?x2418 (* ?x2417 l_0_3_26)))
 (let ((?x2800 (* 8.0 l_0_3_17)))
 (let ((?x2801 (* ?x2800 l_0_3_19)))
 (let ((?x2797 (* 2.0 l_0_3_13)))
 (let ((?x2798 (* ?x2797 l_0_3_6)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2795 (* ?x2713 l_0_3_5)))
 (let ((?x2803 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x2795) ?x2798) ?x2801) ?x2418)))
 (let ((?x2820 (- (- (- (- (- (+ (+ ?x2803 ?x2805) ?x2421) ?x2809) ?x2812) ?x2815) ?x2427) ?x2819)))
 (let ((?x2833 (- (- (- (- (- ?x2820 ?x2430) ?x2823) ?x2826) ?x2829) (* (* 2.0 l_0_3_64) l_0_3_71))))
 (let ((?x2839 (- (- ?x2833 (* (* 2.0 l_0_3_65) l_0_3_72)) (* (* 2.0 l_0_3_66) l_0_3_73))))
 (= ?x2839 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2959 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2956 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2953 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2950 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x2732 (* ?x2731 l_0_3_57)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x2729 (* ?x2728 l_0_3_56)))
 (let ((?x2818 (* 8.0 l_0_3_33)))
 (let ((?x2945 (* ?x2818 l_0_3_42)))
 (let ((?x2943 (* ?x2818 l_0_3_38)))
 (let ((?x2814 (* 8.0 l_0_3_32)))
 (let ((?x2941 (* ?x2814 l_0_3_41)))
 (let ((?x2939 (* ?x2814 l_0_3_37)))
 (let ((?x2811 (* 2.0 l_0_3_3)))
 (let ((?x2937 (* ?x2811 l_0_3_8)))
 (let ((?x2808 (* 2.0 l_0_3_2)))
 (let ((?x2935 (* ?x2808 l_0_3_7)))
 (let ((?x2804 (* 8.0 l_0_3_18)))
 (let ((?x2933 (* ?x2804 l_0_3_27)))
 (let ((?x2931 (* ?x2804 l_0_3_23)))
 (let ((?x2800 (* 8.0 l_0_3_17)))
 (let ((?x2929 (* ?x2800 l_0_3_26)))
 (let ((?x2927 (* ?x2800 l_0_3_22)))
 (let ((?x2797 (* 2.0 l_0_3_13)))
 (let ((?x2925 (* ?x2797 l_0_3_9)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2923 (* ?x2713 l_0_3_8)))
 (let ((?x2711 (* 2.0 l_0_3_11)))
 (let ((?x2921 (* ?x2711 l_0_3_7)))
 (let ((?x2928 (+ (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x2921) ?x2923) ?x2925) ?x2927)))
 (let ((?x2942 (- (- (- (- (+ (+ (+ ?x2928 ?x2929) ?x2931) ?x2933) ?x2935) ?x2937) ?x2939) ?x2941)))
 (let ((?x2957 (- (- (- (+ (+ (- (- ?x2942 ?x2943) ?x2945) ?x2729) ?x2732) ?x2950) ?x2953) ?x2956)))
 (let ((?x2966 (- (- (- ?x2957 ?x2959) (* (* 2.0 l_0_3_67) l_0_3_71)) (* (* 2.0 l_0_3_68) l_0_3_72))))
 (let ((?x2972 (- (- ?x2966 (* (* 2.0 l_0_3_69) l_0_3_73)) (* (* 2.0 l_0_3_70) l_0_3_74))))
 (= ?x2972 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3118 (* l_0_3_75 l_0_3_75)))
 (let ((?x3116 (* l_0_3_74 l_0_3_74)))
 (let ((?x3114 (* l_0_3_73 l_0_3_73)))
 (let ((?x3112 (* l_0_3_72 l_0_3_72)))
 (let ((?x3110 (* l_0_3_71 l_0_3_71)))
 (let ((?x2818 (* 8.0 l_0_3_33)))
 (let ((?x2945 (* ?x2818 l_0_3_42)))
 (let ((?x2814 (* 8.0 l_0_3_32)))
 (let ((?x2941 (* ?x2814 l_0_3_41)))
 (let ((?x2804 (* 8.0 l_0_3_18)))
 (let ((?x2933 (* ?x2804 l_0_3_27)))
 (let ((?x2800 (* 8.0 l_0_3_17)))
 (let ((?x2929 (* ?x2800 l_0_3_26)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2714 (* ?x2713 l_0_3_3)))
 (let ((?x3077 (+ (* (* (- 2.0) l_0_3_11) l_0_3_2) (* 1.0 (* l_0_3_11 l_0_3_11)))))
 (let ((?x3084 (+ (+ (- ?x3077 ?x2714) (* 1.0 (* l_0_3_12 l_0_3_12))) (* 1.0 (* l_0_3_13 l_0_3_13)))))
 (let ((?x3090 (+ (+ ?x3084 (* 1.0 (* l_0_3_14 l_0_3_14))) (* 1.0 (* l_0_3_15 l_0_3_15)))))
 (let ((?x3097 (- (- (- (+ (+ ?x3090 ?x2929) ?x2933) ?x2941) ?x2945) (* (* 1.0 l_0_3_56) l_0_3_56))))
 (let ((?x3103 (- (- ?x3097 (* (* 1.0 l_0_3_57) l_0_3_57)) (* (* 1.0 l_0_3_58) l_0_3_58))))
 (let ((?x3109 (- (- ?x3103 (* (* 1.0 l_0_3_59) l_0_3_59)) (* (* 1.0 l_0_3_60) l_0_3_60))))
 (= (- (- (- (- (- ?x3109 ?x3110) ?x3112) ?x3114) ?x3116) ?x3118) 0.0)))))))))))))))))))))))
(assert
 (let ((?x3196 (* l_0_3_6 l_0_3_6)))
 (let ((?x3194 (* l_0_3_5 l_0_3_5)))
 (let ((?x3192 (* l_0_3_4 l_0_3_4)))
 (let ((?x2511 (* 4.0 l_0_3_36)))
 (let ((?x3190 (* ?x2511 l_0_3_36)))
 (let ((?x2512 (* ?x2511 l_0_3_43)))
 (let ((?x2508 (* 4.0 l_0_3_35)))
 (let ((?x3187 (* ?x2508 l_0_3_35)))
 (let ((?x2509 (* ?x2508 l_0_3_42)))
 (let ((?x2505 (* 4.0 l_0_3_34)))
 (let ((?x3184 (* ?x2505 l_0_3_34)))
 (let ((?x2506 (* ?x2505 l_0_3_41)))
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x2371 (* ?x2370 l_0_3_42)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x2368 (* ?x2367 l_0_3_41)))
 (let ((?x3178 (* l_0_3_21 l_0_3_21)))
 (let ((?x3179 (* 4.0 ?x3178)))
 (let ((?x2499 (* 4.0 l_0_3_21)))
 (let ((?x2500 (* ?x2499 l_0_3_28)))
 (let ((?x3174 (* l_0_3_20 l_0_3_20)))
 (let ((?x3175 (* 4.0 ?x3174)))
 (let ((?x2496 (* 4.0 l_0_3_20)))
 (let ((?x2497 (* ?x2496 l_0_3_27)))
 (let ((?x3170 (* l_0_3_19 l_0_3_19)))
 (let ((?x3171 (* 4.0 ?x3170)))
 (let ((?x2493 (* 4.0 l_0_3_19)))
 (let ((?x2494 (* ?x2493 l_0_3_26)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x2360 (* ?x2359 l_0_3_27)))
 (let ((?x3173 (+ (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_26) ?x2360) ?x2494) ?x3171) ?x2497)))
 (let ((?x3185 (- (- (+ (+ (+ (+ (+ ?x3173 ?x3175) ?x2500) ?x3179) ?x2368) ?x2371) ?x2506) ?x3184)))
 (let ((?x3197 (- (- (- (- (- (- (- ?x3185 ?x2509) ?x3187) ?x2512) ?x3190) ?x3192) ?x3194) ?x3196)))
 (= ?x3197 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3296 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2828 (* 2.0 l_0_3_51)))
 (let ((?x2829 (* ?x2828 l_0_3_58)))
 (let ((?x2825 (* 2.0 l_0_3_50)))
 (let ((?x2826 (* ?x2825 l_0_3_57)))
 (let ((?x3291 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2822 (* 2.0 l_0_3_49)))
 (let ((?x2823 (* ?x2822 l_0_3_56)))
 (let ((?x2586 (* 4.0 l_0_3_40)))
 (let ((?x2587 (* ?x2586 l_0_3_44)))
 (let ((?x3286 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2583 (* 4.0 l_0_3_39)))
 (let ((?x2584 (* ?x2583 l_0_3_43)))
 (let ((?x2580 (* 4.0 l_0_3_38)))
 (let ((?x2581 (* ?x2580 l_0_3_42)))
 (let ((?x2577 (* 4.0 l_0_3_37)))
 (let ((?x2578 (* ?x2577 l_0_3_41)))
 (let ((?x3277 (* 8.0 l_0_3_36)))
 (let ((?x3280 (* ?x3277 l_0_3_43)))
 (let ((?x3278 (* ?x3277 l_0_3_39)))
 (let ((?x3272 (* 8.0 l_0_3_35)))
 (let ((?x3275 (* ?x3272 l_0_3_42)))
 (let ((?x3273 (* ?x3272 l_0_3_38)))
 (let ((?x3267 (* 8.0 l_0_3_34)))
 (let ((?x3270 (* ?x3267 l_0_3_41)))
 (let ((?x3268 (* ?x3267 l_0_3_37)))
 (let ((?x2571 (* (* 4.0 l_0_3_25) l_0_3_29)))
 (let ((?x2568 (* (* 4.0 l_0_3_24) l_0_3_28)))
 (let ((?x2565 (* (* 4.0 l_0_3_23) l_0_3_27)))
 (let ((?x2562 (* (* 4.0 l_0_3_22) l_0_3_26)))
 (let ((?x3258 (* 8.0 l_0_3_21)))
 (let ((?x3261 (* ?x3258 l_0_3_28)))
 (let ((?x3259 (* ?x3258 l_0_3_24)))
 (let ((?x3253 (* 8.0 l_0_3_20)))
 (let ((?x3256 (* ?x3253 l_0_3_27)))
 (let ((?x3254 (* ?x3253 l_0_3_23)))
 (let ((?x3249 (* 8.0 l_0_3_19)))
 (let ((?x3251 (* ?x3249 l_0_3_26)))
 (let ((?x3250 (* ?x3249 l_0_3_22)))
 (let ((?x3264 (+ (+ (+ (+ (+ (+ (+ ?x3250 ?x3251) ?x3254) ?x3256) ?x3259) ?x3261) ?x2562) ?x2565)))
 (let ((?x3279 (- (- (- (- (- (+ (+ ?x3264 ?x2568) ?x2571) ?x3268) ?x3270) ?x3273) ?x3275) ?x3278)))
 (let ((?x3289 (+ (- (- (- (- (- (- ?x3279 ?x3280) ?x2578) ?x2581) ?x2584) ?x3286) ?x2587) ?x2823)))
 (= (- (+ (+ (- ?x3289 ?x3291) ?x2826) ?x2829) ?x3296) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3277 (* 8.0 l_0_3_36)))
 (let ((?x3280 (* ?x3277 l_0_3_43)))
 (let ((?x3272 (* 8.0 l_0_3_35)))
 (let ((?x3275 (* ?x3272 l_0_3_42)))
 (let ((?x3267 (* 8.0 l_0_3_34)))
 (let ((?x3270 (* ?x3267 l_0_3_41)))
 (let ((?x2701 (* l_0_3_30 l_0_3_30)))
 (let ((?x2702 (* 2.0 ?x2701)))
 (let ((?x2695 (* l_0_3_29 l_0_3_29)))
 (let ((?x2696 (* 2.0 ?x2695)))
 (let ((?x2689 (* l_0_3_28 l_0_3_28)))
 (let ((?x2690 (* 2.0 ?x2689)))
 (let ((?x2683 (* l_0_3_27 l_0_3_27)))
 (let ((?x2684 (* 2.0 ?x2683)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x2678 (* 2.0 ?x2677)))
 (let ((?x3258 (* 8.0 l_0_3_21)))
 (let ((?x3261 (* ?x3258 l_0_3_28)))
 (let ((?x3253 (* 8.0 l_0_3_20)))
 (let ((?x3256 (* ?x3253 l_0_3_27)))
 (let ((?x3249 (* 8.0 l_0_3_19)))
 (let ((?x3251 (* ?x3249 l_0_3_26)))
 (let ((?x2797 (* 2.0 l_0_3_13)))
 (let ((?x2798 (* ?x2797 l_0_3_6)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2795 (* ?x2713 l_0_3_5)))
 (let ((?x3383 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x2795) ?x2798) ?x3251) ?x3256)))
 (let ((?x3390 (- (+ (+ (+ (+ (+ (+ ?x3383 ?x3261) ?x2678) ?x2684) ?x2690) ?x2696) ?x2702) ?x3270)))
 (let ((?x3398 (- (- (- (- ?x3390 ?x3275) ?x3280) (* (* 2.0 l_0_3_41) l_0_3_41)) (* (* 2.0 l_0_3_42) l_0_3_42))))
 (let ((?x3404 (- (- ?x3398 (* (* 2.0 l_0_3_43) l_0_3_43)) (* (* 2.0 l_0_3_44) l_0_3_44))))
 (= (- ?x3404 (* (* 2.0 l_0_3_45) l_0_3_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3500 (* l_0_3_9 l_0_3_9)))
 (let ((?x3498 (* l_0_3_8 l_0_3_8)))
 (let ((?x3496 (* l_0_3_7 l_0_3_7)))
 (let ((?x2959 (* (* 2.0 l_0_3_55) l_0_3_59)))
 (let ((?x2956 (* (* 2.0 l_0_3_54) l_0_3_58)))
 (let ((?x2953 (* (* 2.0 l_0_3_53) l_0_3_57)))
 (let ((?x2950 (* (* 2.0 l_0_3_52) l_0_3_56)))
 (let ((?x2586 (* 4.0 l_0_3_40)))
 (let ((?x3490 (* ?x2586 l_0_3_40)))
 (let ((?x3488 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x2583 (* 4.0 l_0_3_39)))
 (let ((?x3485 (* ?x2583 l_0_3_39)))
 (let ((?x3483 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x2580 (* 4.0 l_0_3_38)))
 (let ((?x3480 (* ?x2580 l_0_3_38)))
 (let ((?x3478 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x2577 (* 4.0 l_0_3_37)))
 (let ((?x3475 (* ?x2577 l_0_3_37)))
 (let ((?x3473 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x3469 (* l_0_3_25 l_0_3_25)))
 (let ((?x3470 (* 4.0 ?x3469)))
 (let ((?x3467 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3463 (* l_0_3_24 l_0_3_24)))
 (let ((?x3464 (* 4.0 ?x3463)))
 (let ((?x3461 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3457 (* l_0_3_23 l_0_3_23)))
 (let ((?x3458 (* 4.0 ?x3457)))
 (let ((?x3455 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3451 (* l_0_3_22 l_0_3_22)))
 (let ((?x3452 (* 4.0 ?x3451)))
 (let ((?x3453 (+ (+ (* (- l_0_3_10) l_0_3_10) (* (* 8.0 l_0_3_22) l_0_3_26)) ?x3452)))
 (let ((?x3474 (- (+ (+ (+ (+ (+ (+ ?x3453 ?x3455) ?x3458) ?x3461) ?x3464) ?x3467) ?x3470) ?x3473)))
 (let ((?x3491 (- (- (- (- (- (- (- ?x3474 ?x3475) ?x3478) ?x3480) ?x3483) ?x3485) ?x3488) ?x3490)))
 (let ((?x3501 (- (- (- (+ (+ (+ (+ ?x3491 ?x2950) ?x2953) ?x2956) ?x2959) ?x3496) ?x3498) ?x3500)))
 (= ?x3501 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3146 (* l_0_3_60 l_0_3_60)))
 (let ((?x3142 (* l_0_3_59 l_0_3_59)))
 (let ((?x3138 (* l_0_3_58 l_0_3_58)))
 (let ((?x3134 (* l_0_3_57 l_0_3_57)))
 (let ((?x3130 (* l_0_3_56 l_0_3_56)))
 (let ((?x3602 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x3599 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x3596 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x3593 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x3590 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x3488 (* (* 8.0 l_0_3_40) l_0_3_44)))
 (let ((?x3483 (* (* 8.0 l_0_3_39) l_0_3_43)))
 (let ((?x3478 (* (* 8.0 l_0_3_38) l_0_3_42)))
 (let ((?x3473 (* (* 8.0 l_0_3_37) l_0_3_41)))
 (let ((?x2701 (* l_0_3_30 l_0_3_30)))
 (let ((?x3583 (* 4.0 ?x2701)))
 (let ((?x2695 (* l_0_3_29 l_0_3_29)))
 (let ((?x3581 (* 4.0 ?x2695)))
 (let ((?x2689 (* l_0_3_28 l_0_3_28)))
 (let ((?x3579 (* 4.0 ?x2689)))
 (let ((?x2683 (* l_0_3_27 l_0_3_27)))
 (let ((?x3577 (* 4.0 ?x2683)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x3575 (* 4.0 ?x2677)))
 (let ((?x3467 (* (* 8.0 l_0_3_25) l_0_3_29)))
 (let ((?x3461 (* (* 8.0 l_0_3_24) l_0_3_28)))
 (let ((?x3455 (* (* 8.0 l_0_3_23) l_0_3_27)))
 (let ((?x3449 (* (* 8.0 l_0_3_22) l_0_3_26)))
 (let ((?x2797 (* 2.0 l_0_3_13)))
 (let ((?x2925 (* ?x2797 l_0_3_9)))
 (let ((?x2713 (* 2.0 l_0_3_12)))
 (let ((?x2923 (* ?x2713 l_0_3_8)))
 (let ((?x2711 (* 2.0 l_0_3_11)))
 (let ((?x2921 (* ?x2711 l_0_3_7)))
 (let ((?x3571 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x2921) ?x2923) ?x2925) ?x3449)))
 (let ((?x3582 (+ (+ (+ (+ (+ (+ (+ ?x3571 ?x3455) ?x3461) ?x3467) ?x3575) ?x3577) ?x3579) ?x3581)))
 (let ((?x3594 (- (- (- (- (- (- (+ ?x3582 ?x3583) ?x3473) ?x3478) ?x3483) ?x3488) ?x3590) ?x3593)))
 (let ((?x3607 (+ (+ (+ (+ (- (- (- ?x3594 ?x3596) ?x3599) ?x3602) ?x3130) ?x3134) ?x3138) ?x3142)))
 (= (+ ?x3607 ?x3146) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3602 (* (* 4.0 l_0_3_45) l_0_3_45)))
 (let ((?x3599 (* (* 4.0 l_0_3_44) l_0_3_44)))
 (let ((?x3596 (* (* 4.0 l_0_3_43) l_0_3_43)))
 (let ((?x3593 (* (* 4.0 l_0_3_42) l_0_3_42)))
 (let ((?x3590 (* (* 4.0 l_0_3_41) l_0_3_41)))
 (let ((?x2701 (* l_0_3_30 l_0_3_30)))
 (let ((?x3583 (* 4.0 ?x2701)))
 (let ((?x2695 (* l_0_3_29 l_0_3_29)))
 (let ((?x3581 (* 4.0 ?x2695)))
 (let ((?x2689 (* l_0_3_28 l_0_3_28)))
 (let ((?x3579 (* 4.0 ?x2689)))
 (let ((?x2683 (* l_0_3_27 l_0_3_27)))
 (let ((?x3577 (* 4.0 ?x2683)))
 (let ((?x2677 (* l_0_3_26 l_0_3_26)))
 (let ((?x3575 (* 4.0 ?x2677)))
 (let ((?x3088 (* l_0_3_15 l_0_3_15)))
 (let ((?x3085 (* l_0_3_14 l_0_3_14)))
 (let ((?x3082 (* l_0_3_13 l_0_3_13)))
 (let ((?x3663 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x3082) ?x3085)))
 (let ((?x3670 (- (+ (+ (+ (+ (+ (- ?x3663 ?x3088) ?x3575) ?x3577) ?x3579) ?x3581) ?x3583) ?x3590)))
 (= (- (- (- (- ?x3670 ?x3593) ?x3596) ?x3599) ?x3602) 0.0))))))))))))))))))))))
(assert
 (let ((?x3719 (* l_0_3_61 l_0_3_61)))
 (let ((?x2758 (* l_0_3_33 l_0_3_33)))
 (let ((?x2752 (* l_0_3_32 l_0_3_32)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x3712 (* ?x2362 l_0_3_32)))
 (let ((?x2719 (* l_0_3_18 l_0_3_18)))
 (let ((?x2716 (* l_0_3_17 l_0_3_17)))
 (let ((?x2350 (* 4.0 l_0_3_16)))
 (let ((?x3708 (* ?x2350 l_0_3_17)))
 (let ((?x3713 (+ (+ (+ (- (* 1.0 (* l_0_3_1 l_0_3_1)) ?x3708) ?x2716) ?x2719) ?x3712)))
 (let ((?x3720 (- (- (- (- ?x3713 ?x2752) ?x2758) (* (* 1.0 l_0_3_46) l_0_3_46)) ?x3719)))
 (= ?x3720 0.0)))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x3751 (* ?x2432 l_0_3_47)))
 (let ((?x2758 (* l_0_3_33 l_0_3_33)))
 (let ((?x3749 (* 2.0 ?x2758)))
 (let ((?x2752 (* l_0_3_32 l_0_3_32)))
 (let ((?x3747 (* 2.0 ?x2752)))
 (let ((?x2409 (* 2.0 l_0_3_1)))
 (let ((?x2411 (* ?x2409 l_0_3_2)))
 (let ((?x3746 (- (- ?x2411 (* (* 2.0 l_0_3_17) l_0_3_17)) (* (* 2.0 l_0_3_18) l_0_3_18))))
 (let ((?x3754 (- (- (+ (+ ?x3746 ?x3747) ?x3749) ?x3751) (* (* 2.0 l_0_3_61) l_0_3_62))))
 (= ?x3754 0.0))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x3791 (* ?x2432 l_0_3_49)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x3789 (* ?x2429 l_0_3_35)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x3787 (* ?x2426 l_0_3_34)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x3712 (* ?x2362 l_0_3_32)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x3784 (* ?x2420 l_0_3_20)))
 (let ((?x2417 (* 4.0 l_0_3_17)))
 (let ((?x3782 (* ?x2417 l_0_3_19)))
 (let ((?x2350 (* 4.0 l_0_3_16)))
 (let ((?x3708 (* ?x2350 l_0_3_17)))
 (let ((?x3786 (- (- (- (+ (* (* 2.0 l_0_3_1) l_0_3_4) ?x3708) ?x3782) ?x3784) ?x3712)))
 (let ((?x3794 (- (- (+ (+ ?x3786 ?x3787) ?x3789) ?x3791) (* (* 2.0 l_0_3_61) l_0_3_64))))
 (= ?x3794 0.0))))))))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x3840 (* ?x2432 l_0_3_52)))
 (let ((?x3751 (* ?x2432 l_0_3_47)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x3837 (* ?x2429 l_0_3_38)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x3835 (* ?x2426 l_0_3_37)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2424 (* ?x2423 l_0_3_32)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x3832 (* ?x2420 l_0_3_23)))
 (let ((?x2417 (* 4.0 l_0_3_17)))
 (let ((?x3830 (* ?x2417 l_0_3_22)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2415 (* ?x2414 l_0_3_17)))
 (let ((?x3834 (- (- (- (+ (* (* 2.0 l_0_3_1) l_0_3_7) ?x2415) ?x3830) ?x3832) ?x2424)))
 (let ((?x3843 (- (- (+ (+ (+ ?x3834 ?x3835) ?x3837) ?x3751) ?x3840) (* (* 2.0 l_0_3_61) l_0_3_67))))
 (= ?x3843 0.0)))))))))))))))))))
(assert
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x3884 (* ?x2731 l_0_3_50)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x3882 (* ?x2728 l_0_3_49)))
 (let ((?x2811 (* 2.0 l_0_3_3)))
 (let ((?x2812 (* ?x2811 l_0_3_5)))
 (let ((?x2808 (* 2.0 l_0_3_2)))
 (let ((?x2809 (* ?x2808 l_0_3_4)))
 (let ((?x2719 (* l_0_3_18 l_0_3_18)))
 (let ((?x3761 (* 2.0 ?x2719)))
 (let ((?x2716 (* l_0_3_17 l_0_3_17)))
 (let ((?x3756 (* 2.0 ?x2716)))
 (let ((?x3879 (- (+ (+ (+ ?x3756 ?x3761) ?x2809) ?x2812) (* (* 2.0 l_0_3_32) l_0_3_32))))
 (let ((?x3887 (- (- (- (- ?x3879 (* (* 2.0 l_0_3_33) l_0_3_33)) ?x3882) ?x3884) (* (* 2.0 l_0_3_62) l_0_3_64))))
 (= (- ?x3887 (* (* 2.0 l_0_3_63) l_0_3_65)) 0.0))))))))))))))))
(assert
 (let ((?x2337 (* l_0_3_48 l_0_3_48)))
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x3933 (* ?x2731 l_0_3_53)))
 (let ((?x2333 (* l_0_3_47 l_0_3_47)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x3930 (* ?x2728 l_0_3_52)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x2726 (* ?x2429 l_0_3_33)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x2724 (* ?x2426 l_0_3_32)))
 (let ((?x2811 (* 2.0 l_0_3_3)))
 (let ((?x2937 (* ?x2811 l_0_3_8)))
 (let ((?x2808 (* 2.0 l_0_3_2)))
 (let ((?x2935 (* ?x2808 l_0_3_7)))
 (let ((?x2719 (* l_0_3_18 l_0_3_18)))
 (let ((?x2720 (* 4.0 ?x2719)))
 (let ((?x2716 (* l_0_3_17 l_0_3_17)))
 (let ((?x2717 (* 4.0 ?x2716)))
 (let ((?x3932 (+ (- (- (- (+ (+ (+ ?x2717 ?x2720) ?x2935) ?x2937) ?x2724) ?x2726) ?x3930) ?x2333)))
 (let ((?x3939 (- (- (+ (- ?x3932 ?x3933) ?x2337) (* (* 2.0 l_0_3_62) l_0_3_67)) (* (* 2.0 l_0_3_63) l_0_3_68))))
 (= ?x3939 0.0))))))))))))))))))))))
(assert
 (let ((?x3999 (* l_0_3_66 l_0_3_66)))
 (let ((?x3997 (* l_0_3_65 l_0_3_65)))
 (let ((?x3995 (* l_0_3_64 l_0_3_64)))
 (let ((?x2758 (* l_0_3_33 l_0_3_33)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x3789 (* ?x2429 l_0_3_35)))
 (let ((?x2752 (* l_0_3_32 l_0_3_32)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x3787 (* ?x2426 l_0_3_34)))
 (let ((?x2719 (* l_0_3_18 l_0_3_18)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x3784 (* ?x2420 l_0_3_20)))
 (let ((?x3974 (+ (- (* (* 4.0 l_0_3_17) l_0_3_19) (* l_0_3_17 l_0_3_17)) ?x3784)))
 (let ((?x3981 (+ (+ (- (+ (- (- ?x3974 ?x2719) ?x3787) ?x2752) ?x3789) ?x2758) (* 1.0 (* l_0_3_4 l_0_3_4)))))
 (let ((?x3986 (+ (- ?x3981 (* (* 1.0 l_0_3_49) l_0_3_49)) (* 1.0 (* l_0_3_5 l_0_3_5)))))
 (let ((?x3992 (- (- ?x3986 (* (* 1.0 l_0_3_50) l_0_3_50)) (* (* 1.0 l_0_3_51) l_0_3_51))))
 (let ((?x4000 (- (- (- (+ ?x3992 (* 1.0 (* l_0_3_6 l_0_3_6))) ?x3995) ?x3997) ?x3999)))
 (= ?x4000 0.0)))))))))))))))))))
(assert
 (let ((?x3296 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x2828 (* 2.0 l_0_3_51)))
 (let ((?x4059 (* ?x2828 l_0_3_54)))
 (let ((?x2825 (* 2.0 l_0_3_50)))
 (let ((?x4057 (* ?x2825 l_0_3_53)))
 (let ((?x3291 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x2822 (* 2.0 l_0_3_49)))
 (let ((?x4054 (* ?x2822 l_0_3_52)))
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x3884 (* ?x2731 l_0_3_50)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x3882 (* ?x2728 l_0_3_49)))
 (let ((?x3286 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x2429 (* 4.0 l_0_3_33)))
 (let ((?x3837 (* ?x2429 l_0_3_38)))
 (let ((?x2818 (* 8.0 l_0_3_33)))
 (let ((?x2819 (* ?x2818 l_0_3_35)))
 (let ((?x2426 (* 4.0 l_0_3_32)))
 (let ((?x3835 (* ?x2426 l_0_3_37)))
 (let ((?x2814 (* 8.0 l_0_3_32)))
 (let ((?x2815 (* ?x2814 l_0_3_34)))
 (let ((?x2420 (* 4.0 l_0_3_18)))
 (let ((?x3832 (* ?x2420 l_0_3_23)))
 (let ((?x2804 (* 8.0 l_0_3_18)))
 (let ((?x2805 (* ?x2804 l_0_3_20)))
 (let ((?x2417 (* 4.0 l_0_3_17)))
 (let ((?x3830 (* ?x2417 l_0_3_22)))
 (let ((?x2800 (* 8.0 l_0_3_17)))
 (let ((?x2801 (* ?x2800 l_0_3_19)))
 (let ((?x4050 (- (- (- (- (+ (+ (+ ?x2801 ?x3830) ?x2805) ?x3832) ?x2815) ?x3835) ?x2819) ?x3837)))
 (let ((?x4060 (- (- (+ (- (+ (+ (+ ?x4050 ?x3286) ?x3882) ?x3884) ?x4054) ?x3291) ?x4057) ?x4059)))
 (let ((?x4065 (- (- (+ ?x4060 ?x3296) (* (* 2.0 l_0_3_64) l_0_3_67)) (* (* 2.0 l_0_3_65) l_0_3_68))))
 (= (- ?x4065 (* (* 2.0 l_0_3_66) l_0_3_69)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4149 (* l_0_3_70 l_0_3_70)))
 (let ((?x4145 (* l_0_3_69 l_0_3_69)))
 (let ((?x4143 (* l_0_3_68 l_0_3_68)))
 (let ((?x4141 (* l_0_3_67 l_0_3_67)))
 (let ((?x2731 (* 2.0 l_0_3_48)))
 (let ((?x3933 (* ?x2731 l_0_3_53)))
 (let ((?x2728 (* 2.0 l_0_3_47)))
 (let ((?x3930 (* ?x2728 l_0_3_52)))
 (let ((?x2818 (* 8.0 l_0_3_33)))
 (let ((?x2943 (* ?x2818 l_0_3_38)))
 (let ((?x2814 (* 8.0 l_0_3_32)))
 (let ((?x2939 (* ?x2814 l_0_3_37)))
 (let ((?x2804 (* 8.0 l_0_3_18)))
 (let ((?x2931 (* ?x2804 l_0_3_23)))
 (let ((?x2800 (* 8.0 l_0_3_17)))
 (let ((?x2927 (* ?x2800 l_0_3_22)))
 (let ((?x4126 (- (- (+ (+ (* 1.0 (* l_0_3_10 l_0_3_10)) ?x2927) ?x2931) ?x2939) ?x2943)))
 (let ((?x4134 (- (- (+ (+ ?x4126 ?x3930) ?x3933) (* (* 1.0 l_0_3_52) l_0_3_52)) (* (* 1.0 l_0_3_53) l_0_3_53))))
 (let ((?x4140 (- (- ?x4134 (* (* 1.0 l_0_3_54) l_0_3_54)) (* (* 1.0 l_0_3_55) l_0_3_55))))
 (let ((?x4148 (+ (- (- (- ?x4140 ?x4141) ?x4143) ?x4145) (* 1.0 (* l_0_3_7 l_0_3_7)))))
 (let ((?x4154 (+ (+ (- ?x4148 ?x4149) (* 1.0 (* l_0_3_8 l_0_3_8))) (* 1.0 (* l_0_3_9 l_0_3_9)))))
 (= ?x4154 0.0)))))))))))))))))))))))
(assert
 (let ((?x3229 (* l_0_3_36 l_0_3_36)))
 (let ((?x3219 (* l_0_3_35 l_0_3_35)))
 (let ((?x3209 (* l_0_3_34 l_0_3_34)))
 (let ((?x2390 (* l_0_3_31 l_0_3_31)))
 (let ((?x3178 (* l_0_3_21 l_0_3_21)))
 (let ((?x3174 (* l_0_3_20 l_0_3_20)))
 (let ((?x4197 (+ (+ (+ (* (- l_0_3_16) l_0_3_16) (* l_0_3_19 l_0_3_19)) ?x3174) ?x3178)))
 (= (- (- (- (+ ?x4197 ?x2390) ?x3209) ?x3219) ?x3229) 0.0)))))))))
(assert
 (let ((?x3229 (* l_0_3_36 l_0_3_36)))
 (let ((?x4243 (* 2.0 ?x3229)))
 (let ((?x3219 (* l_0_3_35 l_0_3_35)))
 (let ((?x4241 (* 2.0 ?x3219)))
 (let ((?x3209 (* l_0_3_34 l_0_3_34)))
 (let ((?x4239 (* 2.0 ?x3209)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x4237 (* ?x2362 l_0_3_34)))
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4235 (* ?x4234 l_0_3_32)))
 (let ((?x4224 (+ (* (* (- 2.0) l_0_3_16) l_0_3_17) (* (* 4.0 l_0_3_16) l_0_3_19))))
 (let ((?x4230 (- (- ?x4224 (* (* 2.0 l_0_3_19) l_0_3_19)) (* (* 2.0 l_0_3_20) l_0_3_20))))
 (let ((?x4240 (+ (- (+ (- ?x4230 (* (* 2.0 l_0_3_21) l_0_3_21)) ?x4235) ?x4237) ?x4239)))
 (= (+ (+ ?x4240 ?x4241) ?x4243) 0.0)))))))))))))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4280 (* ?x4234 l_0_3_34)))
 (= (+ (* (* (- 2.0) l_0_3_16) l_0_3_19) ?x4280) 0.0))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4284 (* ?x4234 l_0_3_37)))
 (= (+ (* (* (- 2.0) l_0_3_16) l_0_3_22) ?x4284) 0.0))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4292 (* ?x4234 l_0_3_41)))
 (= (+ (* (* (- 2.0) l_0_3_16) l_0_3_26) ?x4292) 0.0))))
(assert
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x4311 (* ?x2370 l_0_3_35)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x4309 (* ?x2367 l_0_3_34)))
 (let ((?x3178 (* l_0_3_21 l_0_3_21)))
 (let ((?x4259 (* 2.0 ?x3178)))
 (let ((?x3174 (* l_0_3_20 l_0_3_20)))
 (let ((?x4254 (* 2.0 ?x3174)))
 (let ((?x3170 (* l_0_3_19 l_0_3_19)))
 (let ((?x4249 (* 2.0 ?x3170)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x4300 (* ?x2359 l_0_3_20)))
 (let ((?x4308 (+ (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_19) ?x4300) ?x4249) ?x4254) ?x4259)))
 (let ((?x4318 (- (- (+ (+ ?x4308 ?x4309) ?x4311) (* (* 2.0 l_0_3_34) l_0_3_34)) (* (* 2.0 l_0_3_35) l_0_3_35))))
 (= (- ?x4318 (* (* 2.0 l_0_3_36) l_0_3_36)) 0.0))))))))))))))))
(assert
 (let ((?x4028 (* l_0_3_51 l_0_3_51)))
 (let ((?x4024 (* l_0_3_50 l_0_3_50)))
 (let ((?x4019 (* l_0_3_49 l_0_3_49)))
 (let ((?x2511 (* 4.0 l_0_3_36)))
 (let ((?x3190 (* ?x2511 l_0_3_36)))
 (let ((?x4368 (* ?x2511 l_0_3_39)))
 (let ((?x2508 (* 4.0 l_0_3_35)))
 (let ((?x3187 (* ?x2508 l_0_3_35)))
 (let ((?x4365 (* ?x2508 l_0_3_38)))
 (let ((?x2505 (* 4.0 l_0_3_34)))
 (let ((?x3184 (* ?x2505 l_0_3_34)))
 (let ((?x4362 (* ?x2505 l_0_3_37)))
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x4360 (* ?x2370 l_0_3_38)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x4358 (* ?x2367 l_0_3_37)))
 (let ((?x3178 (* l_0_3_21 l_0_3_21)))
 (let ((?x3179 (* 4.0 ?x3178)))
 (let ((?x2499 (* 4.0 l_0_3_21)))
 (let ((?x4355 (* ?x2499 l_0_3_24)))
 (let ((?x3174 (* l_0_3_20 l_0_3_20)))
 (let ((?x3175 (* 4.0 ?x3174)))
 (let ((?x2496 (* 4.0 l_0_3_20)))
 (let ((?x4352 (* ?x2496 l_0_3_23)))
 (let ((?x3170 (* l_0_3_19 l_0_3_19)))
 (let ((?x3171 (* 4.0 ?x3170)))
 (let ((?x2493 (* 4.0 l_0_3_19)))
 (let ((?x4349 (* ?x2493 l_0_3_22)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x4347 (* ?x2359 l_0_3_23)))
 (let ((?x4353 (+ (+ (+ (- (* (* (- 2.0) l_0_3_17) l_0_3_22) ?x4347) ?x4349) ?x3171) ?x4352)))
 (let ((?x4364 (- (- (+ (+ (+ (+ (+ ?x4353 ?x3175) ?x4355) ?x3179) ?x4358) ?x4360) ?x4362) ?x3184)))
 (let ((?x4373 (+ (+ (+ (- (- (- (- ?x4364 ?x4365) ?x3187) ?x4368) ?x3190) ?x4019) ?x4024) ?x4028)))
 (= ?x4373 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3229 (* l_0_3_36 l_0_3_36)))
 (let ((?x3219 (* l_0_3_35 l_0_3_35)))
 (let ((?x3209 (* l_0_3_34 l_0_3_34)))
 (let ((?x3178 (* l_0_3_21 l_0_3_21)))
 (let ((?x4420 (+ (- (- (* (- l_0_3_19) l_0_3_19) (* l_0_3_20 l_0_3_20)) ?x3178) ?x3209)))
 (= (+ (+ ?x4420 ?x3219) ?x3229) 0.0)))))))
(assert
 (let ((?x4319 (* 2.0 l_0_3_36)))
 (let ((?x4440 (* ?x4319 l_0_3_39)))
 (let ((?x4316 (* 2.0 l_0_3_35)))
 (let ((?x4438 (* ?x4316 l_0_3_38)))
 (let ((?x4313 (* 2.0 l_0_3_34)))
 (let ((?x4436 (* ?x4313 l_0_3_37)))
 (let ((?x4231 (* 2.0 l_0_3_21)))
 (let ((?x4434 (* ?x4231 l_0_3_24)))
 (let ((?x4228 (* 2.0 l_0_3_20)))
 (let ((?x4432 (* ?x4228 l_0_3_23)))
 (let ((?x4439 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_22) ?x4432) ?x4434) ?x4436) ?x4438)))
 (= (+ ?x4439 ?x4440) 0.0)))))))))))))
(assert
 (let ((?x4319 (* 2.0 l_0_3_36)))
 (let ((?x4469 (* ?x4319 l_0_3_43)))
 (let ((?x4316 (* 2.0 l_0_3_35)))
 (let ((?x4467 (* ?x4316 l_0_3_42)))
 (let ((?x4313 (* 2.0 l_0_3_34)))
 (let ((?x4465 (* ?x4313 l_0_3_41)))
 (let ((?x4231 (* 2.0 l_0_3_21)))
 (let ((?x4457 (* ?x4231 l_0_3_28)))
 (let ((?x4228 (* 2.0 l_0_3_20)))
 (let ((?x4455 (* ?x4228 l_0_3_27)))
 (let ((?x4468 (+ (+ (- (- (* (* (- 2.0) l_0_3_19) l_0_3_26) ?x4455) ?x4457) ?x4465) ?x4467)))
 (= (+ ?x4468 ?x4469) 0.0)))))))))))))
(assert
 (let ((?x3549 (* l_0_3_40 l_0_3_40)))
 (let ((?x3538 (* l_0_3_39 l_0_3_39)))
 (let ((?x3527 (* l_0_3_38 l_0_3_38)))
 (let ((?x3516 (* l_0_3_37 l_0_3_37)))
 (let ((?x3469 (* l_0_3_25 l_0_3_25)))
 (let ((?x3463 (* l_0_3_24 l_0_3_24)))
 (let ((?x4493 (- (- (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x3463) ?x3469)))
 (= (+ (+ (+ (+ ?x4493 ?x3516) ?x3527) ?x3538) ?x3549) 0.0)))))))))
(assert
 (let ((?x4535 (* 2.0 l_0_3_40)))
 (let ((?x4536 (* ?x4535 l_0_3_44)))
 (let ((?x4532 (* 2.0 l_0_3_39)))
 (let ((?x4533 (* ?x4532 l_0_3_43)))
 (let ((?x4529 (* 2.0 l_0_3_38)))
 (let ((?x4530 (* ?x4529 l_0_3_42)))
 (let ((?x4526 (* 2.0 l_0_3_37)))
 (let ((?x4527 (* ?x4526 l_0_3_41)))
 (let ((?x4523 (* 2.0 l_0_3_25)))
 (let ((?x4524 (* ?x4523 l_0_3_29)))
 (let ((?x4520 (* 2.0 l_0_3_24)))
 (let ((?x4521 (* ?x4520 l_0_3_28)))
 (let ((?x4517 (* 2.0 l_0_3_23)))
 (let ((?x4518 (* ?x4517 l_0_3_27)))
 (let ((?x4528 (+ (- (- (- (* (* (- 2.0) l_0_3_22) l_0_3_26) ?x4518) ?x4521) ?x4524) ?x4527)))
 (= (+ (+ (+ ?x4528 ?x4530) ?x4533) ?x4536) 0.0)))))))))))))))))
(assert
 (let ((?x2672 (* l_0_3_45 l_0_3_45)))
 (let ((?x2669 (* l_0_3_44 l_0_3_44)))
 (let ((?x2666 (* l_0_3_43 l_0_3_43)))
 (let ((?x2663 (* l_0_3_42 l_0_3_42)))
 (let ((?x2660 (* l_0_3_41 l_0_3_41)))
 (let ((?x2701 (* l_0_3_30 l_0_3_30)))
 (let ((?x2695 (* l_0_3_29 l_0_3_29)))
 (let ((?x2689 (* l_0_3_28 l_0_3_28)))
 (let ((?x4559 (- (- (- (* (- l_0_3_26) l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x2689) ?x2695)))
 (= (+ (+ (+ (+ (+ (- ?x4559 ?x2701) ?x2660) ?x2663) ?x2666) ?x2669) ?x2672) 0.0)))))))))))
(assert
 (= (- (* l_0_3_16 l_0_3_16) (* l_0_3_31 l_0_3_31)) 0.0))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4235 (* ?x4234 l_0_3_32)))
 (let ((?x4596 (- (* (* 2.0 l_0_3_16) l_0_3_17) (* (* 2.0 l_0_3_16) l_0_3_16))))
 (= (+ (- ?x4596 ?x4235) (* 2.0 (* l_0_3_31 l_0_3_31))) 0.0)))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4280 (* ?x4234 l_0_3_34)))
 (= (- (* (* 2.0 l_0_3_16) l_0_3_19) ?x4280) 0.0))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4284 (* ?x4234 l_0_3_37)))
 (= (- (* (* 2.0 l_0_3_16) l_0_3_22) ?x4284) 0.0))))
(assert
 (let ((?x4234 (* 2.0 l_0_3_31)))
 (let ((?x4292 (* ?x4234 l_0_3_41)))
 (= (- (* (* 2.0 l_0_3_16) l_0_3_26) ?x4292) 0.0))))
(assert
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x4311 (* ?x2370 l_0_3_35)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x4309 (* ?x2367 l_0_3_34)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x4237 (* ?x2362 l_0_3_34)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x4300 (* ?x2359 l_0_3_20)))
 (let ((?x2353 (* l_0_3_16 l_0_3_16)))
 (let ((?x4601 (* 2.0 ?x2353)))
 (let ((?x4634 (+ (+ (* (* (- 4.0) l_0_3_16) l_0_3_19) ?x4601) (* (* 2.0 l_0_3_17) l_0_3_19))))
 (let ((?x4639 (- (- (+ (+ ?x4634 ?x4300) ?x4237) (* (* 2.0 l_0_3_31) l_0_3_31)) ?x4309)))
 (= (- ?x4639 ?x4311) 0.0))))))))))))))
(assert
 (let ((?x3735 (* l_0_3_46 l_0_3_46)))
 (let ((?x2370 (* 2.0 l_0_3_33)))
 (let ((?x4360 (* ?x2370 l_0_3_38)))
 (let ((?x2367 (* 2.0 l_0_3_32)))
 (let ((?x4358 (* ?x2367 l_0_3_37)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x2365 (* ?x2362 l_0_3_31)))
 (let ((?x4658 (* ?x2362 l_0_3_37)))
 (let ((?x2359 (* 2.0 l_0_3_18)))
 (let ((?x4347 (* ?x2359 l_0_3_23)))
 (let ((?x2353 (* l_0_3_16 l_0_3_16)))
 (let ((?x2354 (* 4.0 ?x2353)))
 (let ((?x4656 (+ (+ (* (* (- 4.0) l_0_3_16) l_0_3_22) ?x2354) (* (* 2.0 l_0_3_17) l_0_3_22))))
 (= (+ (- (- (- (+ (+ ?x4656 ?x4347) ?x4658) ?x2365) ?x4358) ?x4360) ?x3735) 0.0)))))))))))))))
(assert
 (let ((?x4319 (* 2.0 l_0_3_36)))
 (let ((?x4440 (* ?x4319 l_0_3_39)))
 (let ((?x4316 (* 2.0 l_0_3_35)))
 (let ((?x4438 (* ?x4316 l_0_3_38)))
 (let ((?x4313 (* 2.0 l_0_3_34)))
 (let ((?x4436 (* ?x4313 l_0_3_37)))
 (let ((?x4231 (* 2.0 l_0_3_21)))
 (let ((?x4434 (* ?x4231 l_0_3_24)))
 (let ((?x4228 (* 2.0 l_0_3_20)))
 (let ((?x4432 (* ?x4228 l_0_3_23)))
 (let ((?x4682 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_22) ?x4432) ?x4434) ?x4436) ?x4438)))
 (= (- ?x4682 ?x4440) 0.0)))))))))))))
(assert
 (let ((?x4319 (* 2.0 l_0_3_36)))
 (let ((?x4469 (* ?x4319 l_0_3_43)))
 (let ((?x4316 (* 2.0 l_0_3_35)))
 (let ((?x4467 (* ?x4316 l_0_3_42)))
 (let ((?x4313 (* 2.0 l_0_3_34)))
 (let ((?x4465 (* ?x4313 l_0_3_41)))
 (let ((?x4231 (* 2.0 l_0_3_21)))
 (let ((?x4457 (* ?x4231 l_0_3_28)))
 (let ((?x4228 (* 2.0 l_0_3_20)))
 (let ((?x4455 (* ?x4228 l_0_3_27)))
 (let ((?x4701 (- (- (+ (+ (* (* 2.0 l_0_3_19) l_0_3_26) ?x4455) ?x4457) ?x4465) ?x4467)))
 (= (- ?x4701 ?x4469) 0.0)))))))))))))
(assert
 (let ((?x3549 (* l_0_3_40 l_0_3_40)))
 (let ((?x3538 (* l_0_3_39 l_0_3_39)))
 (let ((?x3527 (* l_0_3_38 l_0_3_38)))
 (let ((?x3516 (* l_0_3_37 l_0_3_37)))
 (let ((?x3469 (* l_0_3_25 l_0_3_25)))
 (let ((?x3463 (* l_0_3_24 l_0_3_24)))
 (let ((?x4718 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x3463) ?x3469)))
 (= (- (- (- (- ?x4718 ?x3516) ?x3527) ?x3538) ?x3549) 0.0)))))))))
(assert
 (let ((?x4535 (* 2.0 l_0_3_40)))
 (let ((?x4536 (* ?x4535 l_0_3_44)))
 (let ((?x4532 (* 2.0 l_0_3_39)))
 (let ((?x4533 (* ?x4532 l_0_3_43)))
 (let ((?x4529 (* 2.0 l_0_3_38)))
 (let ((?x4530 (* ?x4529 l_0_3_42)))
 (let ((?x4526 (* 2.0 l_0_3_37)))
 (let ((?x4527 (* ?x4526 l_0_3_41)))
 (let ((?x4523 (* 2.0 l_0_3_25)))
 (let ((?x4524 (* ?x4523 l_0_3_29)))
 (let ((?x4520 (* 2.0 l_0_3_24)))
 (let ((?x4521 (* ?x4520 l_0_3_28)))
 (let ((?x4517 (* 2.0 l_0_3_23)))
 (let ((?x4518 (* ?x4517 l_0_3_27)))
 (let ((?x4737 (- (+ (+ (+ (* (* 2.0 l_0_3_22) l_0_3_26) ?x4518) ?x4521) ?x4524) ?x4527)))
 (= (- (- (- ?x4737 ?x4530) ?x4533) ?x4536) 0.0)))))))))))))))))
(assert
 (let ((?x2672 (* l_0_3_45 l_0_3_45)))
 (let ((?x2669 (* l_0_3_44 l_0_3_44)))
 (let ((?x2666 (* l_0_3_43 l_0_3_43)))
 (let ((?x2663 (* l_0_3_42 l_0_3_42)))
 (let ((?x2660 (* l_0_3_41 l_0_3_41)))
 (let ((?x2701 (* l_0_3_30 l_0_3_30)))
 (let ((?x2695 (* l_0_3_29 l_0_3_29)))
 (let ((?x2689 (* l_0_3_28 l_0_3_28)))
 (let ((?x4760 (+ (+ (+ (* l_0_3_26 l_0_3_26) (* l_0_3_27 l_0_3_27)) ?x2689) ?x2695)))
 (= (- (- (- (- (- (+ ?x4760 ?x2701) ?x2660) ?x2663) ?x2666) ?x2669) ?x2672) 0.0)))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x3791 (* ?x2432 l_0_3_49)))
 (let ((?x2511 (* 4.0 l_0_3_36)))
 (let ((?x4368 (* ?x2511 l_0_3_39)))
 (let ((?x2508 (* 4.0 l_0_3_35)))
 (let ((?x4365 (* ?x2508 l_0_3_38)))
 (let ((?x2505 (* 4.0 l_0_3_34)))
 (let ((?x4362 (* ?x2505 l_0_3_37)))
 (let ((?x2362 (* 4.0 l_0_3_31)))
 (let ((?x4658 (* ?x2362 l_0_3_37)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2502 (* ?x2423 l_0_3_34)))
 (let ((?x2499 (* 4.0 l_0_3_21)))
 (let ((?x4355 (* ?x2499 l_0_3_24)))
 (let ((?x2496 (* 4.0 l_0_3_20)))
 (let ((?x4352 (* ?x2496 l_0_3_23)))
 (let ((?x2493 (* 4.0 l_0_3_19)))
 (let ((?x4349 (* ?x2493 l_0_3_22)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2490 (* ?x2414 l_0_3_19)))
 (let ((?x4788 (- (- (- (+ ?x2490 (* (* 4.0 l_0_3_16) l_0_3_22)) ?x4349) ?x4352) ?x4355)))
 (= (+ (+ (+ (+ (- (- ?x4788 ?x2502) ?x4658) ?x4362) ?x4365) ?x4368) ?x3791) 0.0)))))))))))))))))))))))
(assert
 (let ((?x2828 (* 2.0 l_0_3_51)))
 (let ((?x4059 (* ?x2828 l_0_3_54)))
 (let ((?x2825 (* 2.0 l_0_3_50)))
 (let ((?x4057 (* ?x2825 l_0_3_53)))
 (let ((?x2822 (* 2.0 l_0_3_49)))
 (let ((?x4054 (* ?x2822 l_0_3_52)))
 (let ((?x3277 (* 8.0 l_0_3_36)))
 (let ((?x3278 (* ?x3277 l_0_3_39)))
 (let ((?x3272 (* 8.0 l_0_3_35)))
 (let ((?x3273 (* ?x3272 l_0_3_38)))
 (let ((?x3267 (* 8.0 l_0_3_34)))
 (let ((?x3268 (* ?x3267 l_0_3_37)))
 (let ((?x3469 (* l_0_3_25 l_0_3_25)))
 (let ((?x4823 (* 2.0 ?x3469)))
 (let ((?x3463 (* l_0_3_24 l_0_3_24)))
 (let ((?x4821 (* 2.0 ?x3463)))
 (let ((?x3457 (* l_0_3_23 l_0_3_23)))
 (let ((?x4819 (* 2.0 ?x3457)))
 (let ((?x3451 (* l_0_3_22 l_0_3_22)))
 (let ((?x4817 (* 2.0 ?x3451)))
 (let ((?x3258 (* 8.0 l_0_3_21)))
 (let ((?x3259 (* ?x3258 l_0_3_24)))
 (let ((?x3253 (* 8.0 l_0_3_20)))
 (let ((?x3254 (* ?x3253 l_0_3_23)))
 (let ((?x3249 (* 8.0 l_0_3_19)))
 (let ((?x3250 (* ?x3249 l_0_3_22)))
 (let ((?x4825 (- (+ (+ (+ (+ (+ (+ ?x3250 ?x3254) ?x3259) ?x4817) ?x4819) ?x4821) ?x4823) ?x3268)))
 (let ((?x4831 (- (- (- (- ?x4825 ?x3273) ?x3278) (* (* 2.0 l_0_3_37) l_0_3_37)) (* (* 2.0 l_0_3_38) l_0_3_38))))
 (let ((?x4835 (- (- ?x4831 (* (* 2.0 l_0_3_39) l_0_3_39)) (* (* 2.0 l_0_3_40) l_0_3_40))))
 (= (+ (+ (+ ?x4835 ?x4054) ?x4057) ?x4059) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x2432 (* 2.0 l_0_3_46)))
 (let ((?x3840 (* ?x2432 l_0_3_52)))
 (let ((?x3549 (* l_0_3_40 l_0_3_40)))
 (let ((?x4862 (* 2.0 ?x3549)))
 (let ((?x3538 (* l_0_3_39 l_0_3_39)))
 (let ((?x4857 (* 2.0 ?x3538)))
 (let ((?x3527 (* l_0_3_38 l_0_3_38)))
 (let ((?x4852 (* 2.0 ?x3527)))
 (let ((?x3516 (* l_0_3_37 l_0_3_37)))
 (let ((?x4847 (* 2.0 ?x3516)))
 (let ((?x2423 (* 8.0 l_0_3_31)))
 (let ((?x2573 (* ?x2423 l_0_3_37)))
 (let ((?x2414 (* 8.0 l_0_3_16)))
 (let ((?x2557 (* ?x2414 l_0_3_22)))
 (let ((?x4872 (- (- ?x2557 (* (* 2.0 l_0_3_22) l_0_3_22)) (* (* 2.0 l_0_3_23) l_0_3_23))))
 (let ((?x4876 (- (- ?x4872 (* (* 2.0 l_0_3_24) l_0_3_24)) (* (* 2.0 l_0_3_25) l_0_3_25))))
 (= (+ (+ (+ (+ (+ (- ?x4876 ?x2573) ?x4847) ?x4852) ?x4857) ?x4862) ?x3840) 0.0))))))))))))))))))
(assert
 (let ((?x4174 (* l_0_3_55 l_0_3_55)))
 (let ((?x4170 (* l_0_3_54 l_0_3_54)))
 (let ((?x4166 (* l_0_3_53 l_0_3_53)))
 (let ((?x4162 (* l_0_3_52 l_0_3_52)))
 (let ((?x2586 (* 4.0 l_0_3_40)))
 (let ((?x3490 (* ?x2586 l_0_3_40)))
 (let ((?x2583 (* 4.0 l_0_3_39)))
 (let ((?x3485 (* ?x2583 l_0_3_39)))
 (let ((?x2580 (* 4.0 l_0_3_38)))
 (let ((?x3480 (* ?x2580 l_0_3_38)))
 (let ((?x2577 (* 4.0 l_0_3_37)))
 (let ((?x3475 (* ?x2577 l_0_3_37)))
 (let ((?x3469 (* l_0_3_25 l_0_3_25)))
 (let ((?x3470 (* 4.0 ?x3469)))
 (let ((?x3463 (* l_0_3_24 l_0_3_24)))
 (let ((?x3464 (* 4.0 ?x3463)))
 (let ((?x3457 (* l_0_3_23 l_0_3_23)))
 (let ((?x3458 (* 4.0 ?x3457)))
 (let ((?x3451 (* l_0_3_22 l_0_3_22)))
 (let ((?x3452 (* 4.0 ?x3451)))
 (let ((?x4910 (- (- (- (- (+ (+ (+ ?x3452 ?x3458) ?x3464) ?x3470) ?x3475) ?x3480) ?x3485) ?x3490)))
 (= (+ (+ (+ (+ ?x4910 ?x4162) ?x4166) ?x4170) ?x4174) 0.0)))))))))))))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_16 0.0))
(assert
 (>= l_0_3_18 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_25 0.0))
(assert
 (>= l_0_3_30 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_33 0.0))
(assert
 (>= l_0_3_36 0.0))
(assert
 (>= l_0_3_40 0.0))
(assert
 (>= l_0_3_45 0.0))
(assert
 (>= l_0_3_46 0.0))
(assert
 (>= l_0_3_48 0.0))
(assert
 (>= l_0_3_51 0.0))
(assert
 (>= l_0_3_55 0.0))
(assert
 (>= l_0_3_60 0.0))
(assert
 (>= l_0_3_61 0.0))
(assert
 (>= l_0_3_63 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_70 0.0))
(assert
 (>= l_0_3_75 0.0))
(assert
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x4977 (* ?x4976 l_0_4_57)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x4974 (* ?x4973 l_0_4_56)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x4971 (* ?x4970 l_0_4_33)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x4968 (* ?x4967 l_0_4_32)))
 (let ((?x4965 (* l_0_4_3 l_0_4_3)))
 (let ((?x4963 (* l_0_4_2 l_0_4_2)))
 (let ((?x4960 (* l_0_4_18 l_0_4_18)))
 (let ((?x4961 (* 4.0 ?x4960)))
 (let ((?x4957 (* l_0_4_17 l_0_4_17)))
 (let ((?x4958 (* 4.0 ?x4957)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x4955 (* ?x4954 l_0_4_3)))
 (let ((?x4964 (- (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x4955) ?x4958) ?x4961) ?x4963)))
 (let ((?x4981 (- (+ (+ (- (- (- ?x4964 ?x4965) ?x4968) ?x4971) ?x4974) ?x4977) (* (* 2.0 l_0_4_77) l_0_4_86))))
 (= (+ (- ?x4981 (* (* 2.0 l_0_4_78) l_0_4_87)) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x5039 (* l_0_4_78 l_0_4_78)))
 (let ((?x5037 (* l_0_4_77 l_0_4_77)))
 (let ((?x5030 (+ (* 1.0 (* l_0_4_2 l_0_4_2)) (* 1.0 (* l_0_4_3 l_0_4_3)))))
 (let ((?x5036 (+ (+ ?x5030 (* 1.0 (* l_0_4_47 l_0_4_47))) (* 1.0 (* l_0_4_48 l_0_4_48)))))
 (= (- (- (- ?x5036 ?x5037) ?x5039) 1.0) 0.0))))))
(assert
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x5076 (* ?x5075 l_0_4_42)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x5073 (* ?x5072 l_0_4_41)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x5070 (* ?x5067 l_0_4_31)))
 (let ((?x5068 (* ?x5067 l_0_4_41)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x5065 (* ?x5064 l_0_4_27)))
 (let ((?x5058 (* l_0_4_16 l_0_4_16)))
 (let ((?x5059 (* 4.0 ?x5058)))
 (let ((?x5060 (+ (- (* (- l_0_4_1) l_0_4_1) (* (* 4.0 l_0_4_16) l_0_4_26)) ?x5059)))
 (let ((?x5071 (- (+ (+ (+ ?x5060 (* (* 2.0 l_0_4_17) l_0_4_26)) ?x5065) ?x5068) ?x5070)))
 (= (- (- ?x5071 ?x5073) ?x5076) 0.0)))))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x5135 (* ?x5134 l_0_4_56)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x5132 (* ?x4970 l_0_4_42)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x5130 (* ?x4967 l_0_4_41)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5128 (* ?x5127 l_0_4_32)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x5125 (* ?x5124 l_0_4_27)))
 (let ((?x5121 (* 4.0 l_0_4_17)))
 (let ((?x5122 (* ?x5121 l_0_4_26)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5119 (* ?x5118 l_0_4_17)))
 (let ((?x5114 (* 2.0 l_0_4_1)))
 (let ((?x5116 (* ?x5114 l_0_4_2)))
 (let ((?x5131 (+ (- (- (- (+ (- (* ?x5114 l_0_4_11) ?x5116) ?x5119) ?x5122) ?x5125) ?x5128) ?x5130)))
 (= (- (+ (+ ?x5131 ?x5132) ?x5135) (* (* 2.0 l_0_4_76) l_0_4_86)) 0.0)))))))))))))))))))
(assert
 (let ((?x5209 (* 4.0 l_0_4_36)))
 (let ((?x5210 (* ?x5209 l_0_4_43)))
 (let ((?x5206 (* 4.0 l_0_4_35)))
 (let ((?x5207 (* ?x5206 l_0_4_42)))
 (let ((?x5203 (* 4.0 l_0_4_34)))
 (let ((?x5204 (* ?x5203 l_0_4_41)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x5068 (* ?x5067 l_0_4_41)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5200 (* ?x5127 l_0_4_34)))
 (let ((?x5197 (* 4.0 l_0_4_21)))
 (let ((?x5198 (* ?x5197 l_0_4_28)))
 (let ((?x5194 (* 4.0 l_0_4_20)))
 (let ((?x5195 (* ?x5194 l_0_4_27)))
 (let ((?x5191 (* 4.0 l_0_4_19)))
 (let ((?x5192 (* ?x5191 l_0_4_26)))
 (let ((?x5055 (* 4.0 l_0_4_16)))
 (let ((?x5056 (* ?x5055 l_0_4_26)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5188 (* ?x5118 l_0_4_19)))
 (let ((?x5196 (- (- (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x5188) ?x5056) ?x5192) ?x5195)))
 (= (+ (+ (+ (- (- (- ?x5196 ?x5198) ?x5200) ?x5068) ?x5204) ?x5207) ?x5210) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x5135 (* ?x5134 l_0_4_56)))
 (let ((?x5284 (* 4.0 l_0_4_40)))
 (let ((?x5285 (* ?x5284 l_0_4_44)))
 (let ((?x5281 (* 4.0 l_0_4_39)))
 (let ((?x5282 (* ?x5281 l_0_4_43)))
 (let ((?x5278 (* 4.0 l_0_4_38)))
 (let ((?x5279 (* ?x5278 l_0_4_42)))
 (let ((?x5275 (* 4.0 l_0_4_37)))
 (let ((?x5276 (* ?x5275 l_0_4_41)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5273 (* ?x5127 l_0_4_41)))
 (let ((?x5271 (* ?x5127 l_0_4_37)))
 (let ((?x5269 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x5266 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x5263 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x5260 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5257 (* ?x5118 l_0_4_26)))
 (let ((?x5261 (- (+ (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) (* ?x5118 l_0_4_22)) ?x5257) ?x5260)))
 (let ((?x5280 (+ (+ (- (- (- (- (- ?x5261 ?x5263) ?x5266) ?x5269) ?x5271) ?x5273) ?x5276) ?x5279)))
 (let ((?x5290 (- (- (+ (+ ?x5280 ?x5282) ?x5285) ?x5135) (* (* 2.0 l_0_4_61) l_0_4_71))))
 (= ?x5290 0.0))))))))))))))))))))))))
(assert
 (let ((?x5382 (* l_0_4_45 l_0_4_45)))
 (let ((?x5383 (* 2.0 ?x5382)))
 (let ((?x5379 (* l_0_4_44 l_0_4_44)))
 (let ((?x5380 (* 2.0 ?x5379)))
 (let ((?x5376 (* l_0_4_43 l_0_4_43)))
 (let ((?x5377 (* 2.0 ?x5376)))
 (let ((?x5373 (* l_0_4_42 l_0_4_42)))
 (let ((?x5374 (* 2.0 ?x5373)))
 (let ((?x5370 (* l_0_4_41 l_0_4_41)))
 (let ((?x5371 (* 2.0 ?x5370)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5273 (* ?x5127 l_0_4_41)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5257 (* ?x5118 l_0_4_26)))
 (let ((?x5356 (- (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x5257) (* (* 2.0 l_0_4_26) l_0_4_26))))
 (let ((?x5362 (- (- ?x5356 (* (* 2.0 l_0_4_27) l_0_4_27)) (* (* 2.0 l_0_4_28) l_0_4_28))))
 (let ((?x5368 (- (- ?x5362 (* (* 2.0 l_0_4_29) l_0_4_29)) (* (* 2.0 l_0_4_30) l_0_4_30))))
 (= (+ (+ (+ (+ (+ (- ?x5368 ?x5273) ?x5371) ?x5374) ?x5377) ?x5380) ?x5383) 0.0)))))))))))))))))))
(assert
 (let ((?x5455 (* 2.0 l_0_4_51)))
 (let ((?x5456 (* ?x5455 l_0_4_58)))
 (let ((?x5452 (* 2.0 l_0_4_50)))
 (let ((?x5453 (* ?x5452 l_0_4_57)))
 (let ((?x5449 (* 2.0 l_0_4_49)))
 (let ((?x5450 (* ?x5449 l_0_4_56)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x5132 (* ?x4970 l_0_4_42)))
 (let ((?x5445 (* 8.0 l_0_4_33)))
 (let ((?x5446 (* ?x5445 l_0_4_35)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x5130 (* ?x4967 l_0_4_41)))
 (let ((?x5441 (* 8.0 l_0_4_32)))
 (let ((?x5442 (* ?x5441 l_0_4_34)))
 (let ((?x5438 (* 2.0 l_0_4_3)))
 (let ((?x5439 (* ?x5438 l_0_4_5)))
 (let ((?x5435 (* 2.0 l_0_4_2)))
 (let ((?x5436 (* ?x5435 l_0_4_4)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x5125 (* ?x5124 l_0_4_27)))
 (let ((?x5431 (* 8.0 l_0_4_18)))
 (let ((?x5432 (* ?x5431 l_0_4_20)))
 (let ((?x5121 (* 4.0 l_0_4_17)))
 (let ((?x5122 (* ?x5121 l_0_4_26)))
 (let ((?x5427 (* 8.0 l_0_4_17)))
 (let ((?x5428 (* ?x5427 l_0_4_19)))
 (let ((?x5424 (* 2.0 l_0_4_13)))
 (let ((?x5425 (* ?x5424 l_0_4_6)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x5422 (* ?x4954 l_0_4_5)))
 (let ((?x5430 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x5422) ?x5425) ?x5428) ?x5122)))
 (let ((?x5447 (- (- (- (- (- (+ (+ ?x5430 ?x5432) ?x5125) ?x5436) ?x5439) ?x5442) ?x5130) ?x5446)))
 (let ((?x5460 (- (+ (+ (+ (- ?x5447 ?x5132) ?x5450) ?x5453) ?x5456) (* (* 2.0 l_0_4_79) l_0_4_86))))
 (let ((?x5466 (- (- ?x5460 (* (* 2.0 l_0_4_80) l_0_4_87)) (* (* 2.0 l_0_4_81) l_0_4_88))))
 (= ?x5466 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5575 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5572 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5569 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5566 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x4977 (* ?x4976 l_0_4_57)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x4974 (* ?x4973 l_0_4_56)))
 (let ((?x5445 (* 8.0 l_0_4_33)))
 (let ((?x5561 (* ?x5445 l_0_4_42)))
 (let ((?x5559 (* ?x5445 l_0_4_38)))
 (let ((?x5441 (* 8.0 l_0_4_32)))
 (let ((?x5557 (* ?x5441 l_0_4_41)))
 (let ((?x5555 (* ?x5441 l_0_4_37)))
 (let ((?x5438 (* 2.0 l_0_4_3)))
 (let ((?x5553 (* ?x5438 l_0_4_8)))
 (let ((?x5435 (* 2.0 l_0_4_2)))
 (let ((?x5551 (* ?x5435 l_0_4_7)))
 (let ((?x5431 (* 8.0 l_0_4_18)))
 (let ((?x5549 (* ?x5431 l_0_4_27)))
 (let ((?x5547 (* ?x5431 l_0_4_23)))
 (let ((?x5427 (* 8.0 l_0_4_17)))
 (let ((?x5545 (* ?x5427 l_0_4_26)))
 (let ((?x5543 (* ?x5427 l_0_4_22)))
 (let ((?x5424 (* 2.0 l_0_4_13)))
 (let ((?x5541 (* ?x5424 l_0_4_9)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x5539 (* ?x4954 l_0_4_8)))
 (let ((?x4952 (* 2.0 l_0_4_11)))
 (let ((?x5537 (* ?x4952 l_0_4_7)))
 (let ((?x5544 (+ (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x5537) ?x5539) ?x5541) ?x5543)))
 (let ((?x5558 (- (- (- (- (+ (+ (+ ?x5544 ?x5545) ?x5547) ?x5549) ?x5551) ?x5553) ?x5555) ?x5557)))
 (let ((?x5573 (+ (+ (+ (- (- (- (- ?x5558 ?x5559) ?x5561) ?x4974) ?x4977) ?x5566) ?x5569) ?x5572)))
 (let ((?x5582 (- (- (+ ?x5573 ?x5575) (* (* 2.0 l_0_4_62) l_0_4_71)) (* (* 2.0 l_0_4_63) l_0_4_72))))
 (let ((?x5588 (- (- ?x5582 (* (* 2.0 l_0_4_82) l_0_4_86)) (* (* 2.0 l_0_4_83) l_0_4_87))))
 (let ((?x5594 (- (- ?x5588 (* (* 2.0 l_0_4_84) l_0_4_88)) (* (* 2.0 l_0_4_85) l_0_4_89))))
 (= ?x5594 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5757 (* l_0_4_90 l_0_4_90)))
 (let ((?x5755 (* l_0_4_89 l_0_4_89)))
 (let ((?x5753 (* l_0_4_88 l_0_4_88)))
 (let ((?x5751 (* l_0_4_87 l_0_4_87)))
 (let ((?x5749 (* l_0_4_86 l_0_4_86)))
 (let ((?x5445 (* 8.0 l_0_4_33)))
 (let ((?x5561 (* ?x5445 l_0_4_42)))
 (let ((?x5441 (* 8.0 l_0_4_32)))
 (let ((?x5557 (* ?x5441 l_0_4_41)))
 (let ((?x5431 (* 8.0 l_0_4_18)))
 (let ((?x5549 (* ?x5431 l_0_4_27)))
 (let ((?x5427 (* 8.0 l_0_4_17)))
 (let ((?x5545 (* ?x5427 l_0_4_26)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x4955 (* ?x4954 l_0_4_3)))
 (let ((?x5716 (+ (* (* (- 2.0) l_0_4_11) l_0_4_2) (* 1.0 (* l_0_4_11 l_0_4_11)))))
 (let ((?x5723 (+ (+ (- ?x5716 ?x4955) (* 1.0 (* l_0_4_12 l_0_4_12))) (* 1.0 (* l_0_4_13 l_0_4_13)))))
 (let ((?x5729 (+ (+ ?x5723 (* 1.0 (* l_0_4_14 l_0_4_14))) (* 1.0 (* l_0_4_15 l_0_4_15)))))
 (let ((?x5736 (+ (- (- (+ (+ ?x5729 ?x5545) ?x5549) ?x5557) ?x5561) (* 1.0 (* l_0_4_56 l_0_4_56)))))
 (let ((?x5742 (+ (+ ?x5736 (* 1.0 (* l_0_4_57 l_0_4_57))) (* 1.0 (* l_0_4_58 l_0_4_58)))))
 (let ((?x5748 (+ (+ ?x5742 (* 1.0 (* l_0_4_59 l_0_4_59))) (* 1.0 (* l_0_4_60 l_0_4_60)))))
 (= (- (- (- (- (- ?x5748 ?x5749) ?x5751) ?x5753) ?x5755) ?x5757) 0.0)))))))))))))))))))))))
(assert
 (let ((?x5829 (* l_0_4_6 l_0_4_6)))
 (let ((?x5827 (* l_0_4_5 l_0_4_5)))
 (let ((?x5825 (* l_0_4_4 l_0_4_4)))
 (let ((?x5209 (* 4.0 l_0_4_36)))
 (let ((?x5823 (* ?x5209 l_0_4_36)))
 (let ((?x5210 (* ?x5209 l_0_4_43)))
 (let ((?x5206 (* 4.0 l_0_4_35)))
 (let ((?x5820 (* ?x5206 l_0_4_35)))
 (let ((?x5207 (* ?x5206 l_0_4_42)))
 (let ((?x5203 (* 4.0 l_0_4_34)))
 (let ((?x5817 (* ?x5203 l_0_4_34)))
 (let ((?x5204 (* ?x5203 l_0_4_41)))
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x5076 (* ?x5075 l_0_4_42)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x5073 (* ?x5072 l_0_4_41)))
 (let ((?x5811 (* l_0_4_21 l_0_4_21)))
 (let ((?x5812 (* 4.0 ?x5811)))
 (let ((?x5197 (* 4.0 l_0_4_21)))
 (let ((?x5198 (* ?x5197 l_0_4_28)))
 (let ((?x5807 (* l_0_4_20 l_0_4_20)))
 (let ((?x5808 (* 4.0 ?x5807)))
 (let ((?x5194 (* 4.0 l_0_4_20)))
 (let ((?x5195 (* ?x5194 l_0_4_27)))
 (let ((?x5803 (* l_0_4_19 l_0_4_19)))
 (let ((?x5804 (* 4.0 ?x5803)))
 (let ((?x5191 (* 4.0 l_0_4_19)))
 (let ((?x5192 (* ?x5191 l_0_4_26)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x5065 (* ?x5064 l_0_4_27)))
 (let ((?x5806 (+ (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_26) ?x5065) ?x5192) ?x5804) ?x5195)))
 (let ((?x5818 (- (- (+ (+ (+ (+ (+ ?x5806 ?x5808) ?x5198) ?x5812) ?x5073) ?x5076) ?x5204) ?x5817)))
 (let ((?x5830 (- (- (- (- (- (- (- ?x5818 ?x5207) ?x5820) ?x5210) ?x5823) ?x5825) ?x5827) ?x5829)))
 (= ?x5830 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5929 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5455 (* 2.0 l_0_4_51)))
 (let ((?x5456 (* ?x5455 l_0_4_58)))
 (let ((?x5452 (* 2.0 l_0_4_50)))
 (let ((?x5453 (* ?x5452 l_0_4_57)))
 (let ((?x5924 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5449 (* 2.0 l_0_4_49)))
 (let ((?x5450 (* ?x5449 l_0_4_56)))
 (let ((?x5284 (* 4.0 l_0_4_40)))
 (let ((?x5285 (* ?x5284 l_0_4_44)))
 (let ((?x5919 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x5281 (* 4.0 l_0_4_39)))
 (let ((?x5282 (* ?x5281 l_0_4_43)))
 (let ((?x5278 (* 4.0 l_0_4_38)))
 (let ((?x5279 (* ?x5278 l_0_4_42)))
 (let ((?x5275 (* 4.0 l_0_4_37)))
 (let ((?x5276 (* ?x5275 l_0_4_41)))
 (let ((?x5910 (* 8.0 l_0_4_36)))
 (let ((?x5913 (* ?x5910 l_0_4_43)))
 (let ((?x5911 (* ?x5910 l_0_4_39)))
 (let ((?x5905 (* 8.0 l_0_4_35)))
 (let ((?x5908 (* ?x5905 l_0_4_42)))
 (let ((?x5906 (* ?x5905 l_0_4_38)))
 (let ((?x5900 (* 8.0 l_0_4_34)))
 (let ((?x5903 (* ?x5900 l_0_4_41)))
 (let ((?x5901 (* ?x5900 l_0_4_37)))
 (let ((?x5269 (* (* 4.0 l_0_4_25) l_0_4_29)))
 (let ((?x5266 (* (* 4.0 l_0_4_24) l_0_4_28)))
 (let ((?x5263 (* (* 4.0 l_0_4_23) l_0_4_27)))
 (let ((?x5260 (* (* 4.0 l_0_4_22) l_0_4_26)))
 (let ((?x5891 (* 8.0 l_0_4_21)))
 (let ((?x5894 (* ?x5891 l_0_4_28)))
 (let ((?x5892 (* ?x5891 l_0_4_24)))
 (let ((?x5886 (* 8.0 l_0_4_20)))
 (let ((?x5889 (* ?x5886 l_0_4_27)))
 (let ((?x5887 (* ?x5886 l_0_4_23)))
 (let ((?x5882 (* 8.0 l_0_4_19)))
 (let ((?x5884 (* ?x5882 l_0_4_26)))
 (let ((?x5883 (* ?x5882 l_0_4_22)))
 (let ((?x5897 (+ (+ (+ (+ (+ (+ (+ ?x5883 ?x5884) ?x5887) ?x5889) ?x5892) ?x5894) ?x5260) ?x5263)))
 (let ((?x5912 (- (- (- (- (- (+ (+ ?x5897 ?x5266) ?x5269) ?x5901) ?x5903) ?x5906) ?x5908) ?x5911)))
 (let ((?x5922 (- (- (- (- (- (- (- ?x5912 ?x5913) ?x5276) ?x5279) ?x5282) ?x5919) ?x5285) ?x5450)))
 (let ((?x5933 (- (- (- (- (- ?x5922 ?x5924) ?x5453) ?x5456) ?x5929) (* (* 2.0 l_0_4_64) l_0_4_71))))
 (let ((?x5939 (- (- ?x5933 (* (* 2.0 l_0_4_65) l_0_4_72)) (* (* 2.0 l_0_4_66) l_0_4_73))))
 (= ?x5939 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5910 (* 8.0 l_0_4_36)))
 (let ((?x5913 (* ?x5910 l_0_4_43)))
 (let ((?x5905 (* 8.0 l_0_4_35)))
 (let ((?x5908 (* ?x5905 l_0_4_42)))
 (let ((?x5900 (* 8.0 l_0_4_34)))
 (let ((?x5903 (* ?x5900 l_0_4_41)))
 (let ((?x5411 (* l_0_4_30 l_0_4_30)))
 (let ((?x5412 (* 2.0 ?x5411)))
 (let ((?x5405 (* l_0_4_29 l_0_4_29)))
 (let ((?x5406 (* 2.0 ?x5405)))
 (let ((?x5399 (* l_0_4_28 l_0_4_28)))
 (let ((?x5400 (* 2.0 ?x5399)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x5394 (* 2.0 ?x5393)))
 (let ((?x5387 (* l_0_4_26 l_0_4_26)))
 (let ((?x5388 (* 2.0 ?x5387)))
 (let ((?x5891 (* 8.0 l_0_4_21)))
 (let ((?x5894 (* ?x5891 l_0_4_28)))
 (let ((?x5886 (* 8.0 l_0_4_20)))
 (let ((?x5889 (* ?x5886 l_0_4_27)))
 (let ((?x5882 (* 8.0 l_0_4_19)))
 (let ((?x5884 (* ?x5882 l_0_4_26)))
 (let ((?x5424 (* 2.0 l_0_4_13)))
 (let ((?x5425 (* ?x5424 l_0_4_6)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x5422 (* ?x4954 l_0_4_5)))
 (let ((?x5975 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x5422) ?x5425) ?x5884) ?x5889)))
 (let ((?x5982 (- (+ (+ (+ (+ (+ (+ ?x5975 ?x5894) ?x5388) ?x5394) ?x5400) ?x5406) ?x5412) ?x5903)))
 (let ((?x5990 (- (- (- (- ?x5982 ?x5908) ?x5913) (* (* 2.0 l_0_4_41) l_0_4_41)) (* (* 2.0 l_0_4_42) l_0_4_42))))
 (let ((?x5996 (- (- ?x5990 (* (* 2.0 l_0_4_43) l_0_4_43)) (* (* 2.0 l_0_4_44) l_0_4_44))))
 (= (- ?x5996 (* (* 2.0 l_0_4_45) l_0_4_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x6062 (* l_0_4_9 l_0_4_9)))
 (let ((?x6060 (* l_0_4_8 l_0_4_8)))
 (let ((?x6055 (* l_0_4_7 l_0_4_7)))
 (let ((?x5575 (* (* 2.0 l_0_4_55) l_0_4_59)))
 (let ((?x5572 (* (* 2.0 l_0_4_54) l_0_4_58)))
 (let ((?x5569 (* (* 2.0 l_0_4_53) l_0_4_57)))
 (let ((?x5566 (* (* 2.0 l_0_4_52) l_0_4_56)))
 (let ((?x5284 (* 4.0 l_0_4_40)))
 (let ((?x6040 (* ?x5284 l_0_4_40)))
 (let ((?x6038 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x5281 (* 4.0 l_0_4_39)))
 (let ((?x6035 (* ?x5281 l_0_4_39)))
 (let ((?x6033 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x5278 (* 4.0 l_0_4_38)))
 (let ((?x6030 (* ?x5278 l_0_4_38)))
 (let ((?x6028 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x5275 (* 4.0 l_0_4_37)))
 (let ((?x6025 (* ?x5275 l_0_4_37)))
 (let ((?x6023 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x6019 (* l_0_4_25 l_0_4_25)))
 (let ((?x6020 (* 4.0 ?x6019)))
 (let ((?x6017 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6013 (* l_0_4_24 l_0_4_24)))
 (let ((?x6014 (* 4.0 ?x6013)))
 (let ((?x6011 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6007 (* l_0_4_23 l_0_4_23)))
 (let ((?x6008 (* 4.0 ?x6007)))
 (let ((?x6005 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x1184 (* l_0_4_22 l_0_4_22)))
 (let ((?x1150 (* 4.0 ?x1184)))
 (let ((?x1151 (+ (+ (* (- l_0_4_10) l_0_4_10) (* (* 8.0 l_0_4_22) l_0_4_26)) ?x1150)))
 (let ((?x6024 (- (+ (+ (+ (+ (+ (+ ?x1151 ?x6005) ?x6008) ?x6011) ?x6014) ?x6017) ?x6020) ?x6023)))
 (let ((?x6041 (- (- (- (- (- (- (- ?x6024 ?x6025) ?x6028) ?x6030) ?x6033) ?x6035) ?x6038) ?x6040)))
 (let ((?x6048 (- (- (- (- (- ?x6041 ?x5566) ?x5569) ?x5572) ?x5575) (* (* 2.0 l_0_4_67) l_0_4_71))))
 (let ((?x6054 (- (- ?x6048 (* (* 2.0 l_0_4_68) l_0_4_72)) (* (* 2.0 l_0_4_69) l_0_4_73))))
 (let ((?x6063 (- (- (- (- ?x6054 ?x6055) (* (* 2.0 l_0_4_70) l_0_4_74)) ?x6060) ?x6062)))
 (= ?x6063 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6143 (* l_0_4_75 l_0_4_75)))
 (let ((?x6141 (* l_0_4_74 l_0_4_74)))
 (let ((?x6139 (* l_0_4_73 l_0_4_73)))
 (let ((?x6137 (* l_0_4_72 l_0_4_72)))
 (let ((?x6135 (* l_0_4_71 l_0_4_71)))
 (let ((?x5746 (* l_0_4_60 l_0_4_60)))
 (let ((?x5743 (* l_0_4_59 l_0_4_59)))
 (let ((?x5740 (* l_0_4_58 l_0_4_58)))
 (let ((?x5737 (* l_0_4_57 l_0_4_57)))
 (let ((?x5734 (* l_0_4_56 l_0_4_56)))
 (let ((?x6128 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6125 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6122 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6119 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6116 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x6038 (* (* 8.0 l_0_4_40) l_0_4_44)))
 (let ((?x6033 (* (* 8.0 l_0_4_39) l_0_4_43)))
 (let ((?x6028 (* (* 8.0 l_0_4_38) l_0_4_42)))
 (let ((?x6023 (* (* 8.0 l_0_4_37) l_0_4_41)))
 (let ((?x5411 (* l_0_4_30 l_0_4_30)))
 (let ((?x6109 (* 4.0 ?x5411)))
 (let ((?x5405 (* l_0_4_29 l_0_4_29)))
 (let ((?x6107 (* 4.0 ?x5405)))
 (let ((?x5399 (* l_0_4_28 l_0_4_28)))
 (let ((?x6105 (* 4.0 ?x5399)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x6103 (* 4.0 ?x5393)))
 (let ((?x5387 (* l_0_4_26 l_0_4_26)))
 (let ((?x6101 (* 4.0 ?x5387)))
 (let ((?x6017 (* (* 8.0 l_0_4_25) l_0_4_29)))
 (let ((?x6011 (* (* 8.0 l_0_4_24) l_0_4_28)))
 (let ((?x6005 (* (* 8.0 l_0_4_23) l_0_4_27)))
 (let ((?x1182 (* (* 8.0 l_0_4_22) l_0_4_26)))
 (let ((?x5424 (* 2.0 l_0_4_13)))
 (let ((?x5541 (* ?x5424 l_0_4_9)))
 (let ((?x4954 (* 2.0 l_0_4_12)))
 (let ((?x5539 (* ?x4954 l_0_4_8)))
 (let ((?x4952 (* 2.0 l_0_4_11)))
 (let ((?x5537 (* ?x4952 l_0_4_7)))
 (let ((?x6097 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x5537) ?x5539) ?x5541) ?x1182)))
 (let ((?x6108 (+ (+ (+ (+ (+ (+ (+ ?x6097 ?x6005) ?x6011) ?x6017) ?x6101) ?x6103) ?x6105) ?x6107)))
 (let ((?x6120 (- (- (- (- (- (- (+ ?x6108 ?x6109) ?x6023) ?x6028) ?x6033) ?x6038) ?x6116) ?x6119)))
 (let ((?x6133 (- (- (- (- (- (- (- ?x6120 ?x6122) ?x6125) ?x6128) ?x5734) ?x5737) ?x5740) ?x5743)))
 (= (- (- (- (- (- (- ?x6133 ?x5746) ?x6135) ?x6137) ?x6139) ?x6141) ?x6143) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6128 (* (* 4.0 l_0_4_45) l_0_4_45)))
 (let ((?x6125 (* (* 4.0 l_0_4_44) l_0_4_44)))
 (let ((?x6122 (* (* 4.0 l_0_4_43) l_0_4_43)))
 (let ((?x6119 (* (* 4.0 l_0_4_42) l_0_4_42)))
 (let ((?x6116 (* (* 4.0 l_0_4_41) l_0_4_41)))
 (let ((?x5411 (* l_0_4_30 l_0_4_30)))
 (let ((?x6109 (* 4.0 ?x5411)))
 (let ((?x5405 (* l_0_4_29 l_0_4_29)))
 (let ((?x6107 (* 4.0 ?x5405)))
 (let ((?x5399 (* l_0_4_28 l_0_4_28)))
 (let ((?x6105 (* 4.0 ?x5399)))
 (let ((?x5393 (* l_0_4_27 l_0_4_27)))
 (let ((?x6103 (* 4.0 ?x5393)))
 (let ((?x5387 (* l_0_4_26 l_0_4_26)))
 (let ((?x6101 (* 4.0 ?x5387)))
 (let ((?x5727 (* l_0_4_15 l_0_4_15)))
 (let ((?x5724 (* l_0_4_14 l_0_4_14)))
 (let ((?x5721 (* l_0_4_13 l_0_4_13)))
 (let ((?x1586 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x5721) ?x5724)))
 (let ((?x1476 (- (+ (+ (+ (+ (+ (- ?x1586 ?x5727) ?x6101) ?x6103) ?x6105) ?x6107) ?x6109) ?x6116)))
 (= (- (- (- (- ?x1476 ?x6119) ?x6122) ?x6125) ?x6128) 0.0))))))))))))))))))))))
(assert
 (let ((?x6161 (* l_0_4_76 l_0_4_76)))
 (let ((?x5004 (* l_0_4_33 l_0_4_33)))
 (let ((?x4998 (* l_0_4_32 l_0_4_32)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x6154 (* ?x5067 l_0_4_32)))
 (let ((?x4960 (* l_0_4_18 l_0_4_18)))
 (let ((?x4957 (* l_0_4_17 l_0_4_17)))
 (let ((?x5055 (* 4.0 l_0_4_16)))
 (let ((?x1673 (* ?x5055 l_0_4_17)))
 (let ((?x6155 (+ (+ (+ (- (* 1.0 (* l_0_4_1 l_0_4_1)) ?x1673) ?x4957) ?x4960) ?x6154)))
 (let ((?x6162 (- (+ (- (- ?x6155 ?x4998) ?x5004) (* 1.0 (* l_0_4_46 l_0_4_46))) ?x6161)))
 (= ?x6162 0.0)))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x6184 (* ?x5134 l_0_4_47)))
 (let ((?x5004 (* l_0_4_33 l_0_4_33)))
 (let ((?x6182 (* 2.0 ?x5004)))
 (let ((?x4998 (* l_0_4_32 l_0_4_32)))
 (let ((?x6180 (* 2.0 ?x4998)))
 (let ((?x5114 (* 2.0 l_0_4_1)))
 (let ((?x5116 (* ?x5114 l_0_4_2)))
 (let ((?x6179 (- (- ?x5116 (* (* 2.0 l_0_4_17) l_0_4_17)) (* (* 2.0 l_0_4_18) l_0_4_18))))
 (let ((?x6187 (- (+ (+ (+ ?x6179 ?x6180) ?x6182) ?x6184) (* (* 2.0 l_0_4_76) l_0_4_77))))
 (= ?x6187 0.0))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x6204 (* ?x5134 l_0_4_49)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x6202 (* ?x4970 l_0_4_35)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x1798 (* ?x4967 l_0_4_34)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x6154 (* ?x5067 l_0_4_32)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x1800 (* ?x5124 l_0_4_20)))
 (let ((?x5121 (* 4.0 l_0_4_17)))
 (let ((?x1799 (* ?x5121 l_0_4_19)))
 (let ((?x5055 (* 4.0 l_0_4_16)))
 (let ((?x1673 (* ?x5055 l_0_4_17)))
 (let ((?x1797 (- (- (- (+ (* (* 2.0 l_0_4_1) l_0_4_4) ?x1673) ?x1799) ?x1800) ?x6154)))
 (let ((?x6207 (- (+ (+ (+ ?x1797 ?x1798) ?x6202) ?x6204) (* (* 2.0 l_0_4_76) l_0_4_79))))
 (= ?x6207 0.0))))))))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x6235 (* ?x5134 l_0_4_52)))
 (let ((?x6184 (* ?x5134 l_0_4_47)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x6232 (* ?x4970 l_0_4_38)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x6230 (* ?x4967 l_0_4_37)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5128 (* ?x5127 l_0_4_32)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x6227 (* ?x5124 l_0_4_23)))
 (let ((?x5121 (* 4.0 l_0_4_17)))
 (let ((?x6225 (* ?x5121 l_0_4_22)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5119 (* ?x5118 l_0_4_17)))
 (let ((?x6229 (- (- (- (+ (* (* 2.0 l_0_4_1) l_0_4_7) ?x5119) ?x6225) ?x6227) ?x5128)))
 (let ((?x6238 (- (+ (- (+ (+ ?x6229 ?x6230) ?x6232) ?x6184) ?x6235) (* (* 2.0 l_0_4_61) l_0_4_62))))
 (= (- ?x6238 (* (* 2.0 l_0_4_76) l_0_4_82)) 0.0)))))))))))))))))))
(assert
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x6264 (* ?x4976 l_0_4_50)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x6262 (* ?x4973 l_0_4_49)))
 (let ((?x5438 (* 2.0 l_0_4_3)))
 (let ((?x5439 (* ?x5438 l_0_4_5)))
 (let ((?x5435 (* 2.0 l_0_4_2)))
 (let ((?x5436 (* ?x5435 l_0_4_4)))
 (let ((?x4960 (* l_0_4_18 l_0_4_18)))
 (let ((?x6191 (* 2.0 ?x4960)))
 (let ((?x4957 (* l_0_4_17 l_0_4_17)))
 (let ((?x1782 (* 2.0 ?x4957)))
 (let ((?x6259 (- (+ (+ (+ ?x1782 ?x6191) ?x5436) ?x5439) (* (* 2.0 l_0_4_32) l_0_4_32))))
 (let ((?x6267 (- (+ (+ (- ?x6259 (* (* 2.0 l_0_4_33) l_0_4_33)) ?x6262) ?x6264) (* (* 2.0 l_0_4_77) l_0_4_79))))
 (= (- ?x6267 (* (* 2.0 l_0_4_78) l_0_4_80)) 0.0))))))))))))))))
(assert
 (let ((?x6296 (* l_0_4_63 l_0_4_63)))
 (let ((?x6294 (* l_0_4_62 l_0_4_62)))
 (let ((?x5034 (* l_0_4_48 l_0_4_48)))
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x6291 (* ?x4976 l_0_4_53)))
 (let ((?x5031 (* l_0_4_47 l_0_4_47)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x6288 (* ?x4973 l_0_4_52)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x4971 (* ?x4970 l_0_4_33)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x4968 (* ?x4967 l_0_4_32)))
 (let ((?x5438 (* 2.0 l_0_4_3)))
 (let ((?x5553 (* ?x5438 l_0_4_8)))
 (let ((?x5435 (* 2.0 l_0_4_2)))
 (let ((?x5551 (* ?x5435 l_0_4_7)))
 (let ((?x4960 (* l_0_4_18 l_0_4_18)))
 (let ((?x4961 (* 4.0 ?x4960)))
 (let ((?x4957 (* l_0_4_17 l_0_4_17)))
 (let ((?x4958 (* 4.0 ?x4957)))
 (let ((?x6290 (- (+ (- (- (+ (+ (+ ?x4958 ?x4961) ?x5551) ?x5553) ?x4968) ?x4971) ?x6288) ?x5031)))
 (let ((?x6299 (- (- (- (- (+ ?x6290 ?x6291) ?x5034) ?x6294) ?x6296) (* (* 2.0 l_0_4_77) l_0_4_82))))
 (= (- ?x6299 (* (* 2.0 l_0_4_78) l_0_4_83)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x6336 (* l_0_4_81 l_0_4_81)))
 (let ((?x6334 (* l_0_4_80 l_0_4_80)))
 (let ((?x6332 (* l_0_4_79 l_0_4_79)))
 (let ((?x5004 (* l_0_4_33 l_0_4_33)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x6202 (* ?x4970 l_0_4_35)))
 (let ((?x4998 (* l_0_4_32 l_0_4_32)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x1798 (* ?x4967 l_0_4_34)))
 (let ((?x4960 (* l_0_4_18 l_0_4_18)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x1800 (* ?x5124 l_0_4_20)))
 (let ((?x6311 (+ (- (* (* 4.0 l_0_4_17) l_0_4_19) (* l_0_4_17 l_0_4_17)) ?x1800)))
 (let ((?x6318 (+ (+ (- (+ (- (- ?x6311 ?x4960) ?x1798) ?x4998) ?x6202) ?x5004) (* 1.0 (* l_0_4_4 l_0_4_4)))))
 (let ((?x6323 (+ (+ ?x6318 (* 1.0 (* l_0_4_49 l_0_4_49))) (* 1.0 (* l_0_4_5 l_0_4_5)))))
 (let ((?x6329 (+ (+ ?x6323 (* 1.0 (* l_0_4_50 l_0_4_50))) (* 1.0 (* l_0_4_51 l_0_4_51)))))
 (let ((?x6337 (- (- (- (+ ?x6329 (* 1.0 (* l_0_4_6 l_0_4_6))) ?x6332) ?x6334) ?x6336)))
 (= ?x6337 0.0)))))))))))))))))))
(assert
 (let ((?x5929 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x5455 (* 2.0 l_0_4_51)))
 (let ((?x6359 (* ?x5455 l_0_4_54)))
 (let ((?x5452 (* 2.0 l_0_4_50)))
 (let ((?x6357 (* ?x5452 l_0_4_53)))
 (let ((?x5924 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x5449 (* 2.0 l_0_4_49)))
 (let ((?x6354 (* ?x5449 l_0_4_52)))
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x6264 (* ?x4976 l_0_4_50)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x6262 (* ?x4973 l_0_4_49)))
 (let ((?x5919 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x4970 (* 4.0 l_0_4_33)))
 (let ((?x6232 (* ?x4970 l_0_4_38)))
 (let ((?x5445 (* 8.0 l_0_4_33)))
 (let ((?x5446 (* ?x5445 l_0_4_35)))
 (let ((?x4967 (* 4.0 l_0_4_32)))
 (let ((?x6230 (* ?x4967 l_0_4_37)))
 (let ((?x5441 (* 8.0 l_0_4_32)))
 (let ((?x5442 (* ?x5441 l_0_4_34)))
 (let ((?x5124 (* 4.0 l_0_4_18)))
 (let ((?x6227 (* ?x5124 l_0_4_23)))
 (let ((?x5431 (* 8.0 l_0_4_18)))
 (let ((?x5432 (* ?x5431 l_0_4_20)))
 (let ((?x5121 (* 4.0 l_0_4_17)))
 (let ((?x6225 (* ?x5121 l_0_4_22)))
 (let ((?x5427 (* 8.0 l_0_4_17)))
 (let ((?x5428 (* ?x5427 l_0_4_19)))
 (let ((?x6350 (- (- (- (- (+ (+ (+ ?x5428 ?x6225) ?x5432) ?x6227) ?x5442) ?x6230) ?x5446) ?x6232)))
 (let ((?x6360 (+ (+ (+ (+ (- (- (+ ?x6350 ?x5919) ?x6262) ?x6264) ?x6354) ?x5924) ?x6357) ?x6359)))
 (let ((?x6365 (- (- (+ ?x6360 ?x5929) (* (* 2.0 l_0_4_62) l_0_4_64)) (* (* 2.0 l_0_4_63) l_0_4_65))))
 (let ((?x6369 (- (- ?x6365 (* (* 2.0 l_0_4_79) l_0_4_82)) (* (* 2.0 l_0_4_80) l_0_4_83))))
 (= (- ?x6369 (* (* 2.0 l_0_4_81) l_0_4_84)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6415 (* l_0_4_85 l_0_4_85)))
 (let ((?x6413 (* l_0_4_84 l_0_4_84)))
 (let ((?x6411 (* l_0_4_83 l_0_4_83)))
 (let ((?x6409 (* l_0_4_82 l_0_4_82)))
 (let ((?x4976 (* 2.0 l_0_4_48)))
 (let ((?x6291 (* ?x4976 l_0_4_53)))
 (let ((?x4973 (* 2.0 l_0_4_47)))
 (let ((?x6288 (* ?x4973 l_0_4_52)))
 (let ((?x5445 (* 8.0 l_0_4_33)))
 (let ((?x5559 (* ?x5445 l_0_4_38)))
 (let ((?x5441 (* 8.0 l_0_4_32)))
 (let ((?x5555 (* ?x5441 l_0_4_37)))
 (let ((?x5431 (* 8.0 l_0_4_18)))
 (let ((?x5547 (* ?x5431 l_0_4_23)))
 (let ((?x5427 (* 8.0 l_0_4_17)))
 (let ((?x5543 (* ?x5427 l_0_4_22)))
 (let ((?x6386 (- (- (+ (+ (* 1.0 (* l_0_4_10 l_0_4_10)) ?x5543) ?x5547) ?x5555) ?x5559)))
 (let ((?x6394 (+ (+ (- (- ?x6386 ?x6288) ?x6291) (* 1.0 (* l_0_4_52 l_0_4_52))) (* 1.0 (* l_0_4_53 l_0_4_53)))))
 (let ((?x6400 (+ (+ ?x6394 (* 1.0 (* l_0_4_54 l_0_4_54))) (* 1.0 (* l_0_4_55 l_0_4_55)))))
 (let ((?x6404 (- (- ?x6400 (* (* 2.0 l_0_4_62) l_0_4_67)) (* (* 2.0 l_0_4_63) l_0_4_68))))
 (let ((?x6408 (+ (+ ?x6404 (* 1.0 (* l_0_4_7 l_0_4_7))) (* 1.0 (* l_0_4_8 l_0_4_8)))))
 (let ((?x6418 (+ (- (- (- (- ?x6408 ?x6409) ?x6411) ?x6413) ?x6415) (* 1.0 (* l_0_4_9 l_0_4_9)))))
 (= ?x6418 0.0))))))))))))))))))))))))
(assert
 (let ((?x5862 (* l_0_4_36 l_0_4_36)))
 (let ((?x5852 (* l_0_4_35 l_0_4_35)))
 (let ((?x5842 (* l_0_4_34 l_0_4_34)))
 (let ((?x5095 (* l_0_4_31 l_0_4_31)))
 (let ((?x5811 (* l_0_4_21 l_0_4_21)))
 (let ((?x5807 (* l_0_4_20 l_0_4_20)))
 (let ((?x6440 (+ (+ (+ (* (- l_0_4_16) l_0_4_16) (* l_0_4_19 l_0_4_19)) ?x5807) ?x5811)))
 (= (- (- (- (+ ?x6440 ?x5095) ?x5842) ?x5852) ?x5862) 0.0)))))))))
(assert
 (let ((?x5862 (* l_0_4_36 l_0_4_36)))
 (let ((?x6483 (* 2.0 ?x5862)))
 (let ((?x5852 (* l_0_4_35 l_0_4_35)))
 (let ((?x6481 (* 2.0 ?x5852)))
 (let ((?x5842 (* l_0_4_34 l_0_4_34)))
 (let ((?x6479 (* 2.0 ?x5842)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x6477 (* ?x5067 l_0_4_34)))
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6475 (* ?x6474 l_0_4_32)))
 (let ((?x6464 (+ (* (* (- 2.0) l_0_4_16) l_0_4_17) (* (* 4.0 l_0_4_16) l_0_4_19))))
 (let ((?x6470 (- (- ?x6464 (* (* 2.0 l_0_4_19) l_0_4_19)) (* (* 2.0 l_0_4_20) l_0_4_20))))
 (let ((?x6480 (+ (- (+ (- ?x6470 (* (* 2.0 l_0_4_21) l_0_4_21)) ?x6475) ?x6477) ?x6479)))
 (= (+ (+ ?x6480 ?x6481) ?x6483) 0.0)))))))))))))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6512 (* ?x6474 l_0_4_34)))
 (= (+ (* (* (- 2.0) l_0_4_16) l_0_4_19) ?x6512) 0.0))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x2401 (* ?x6474 l_0_4_37)))
 (= (+ (* (* (- 2.0) l_0_4_16) l_0_4_22) ?x2401) 0.0))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6521 (* ?x6474 l_0_4_41)))
 (= (+ (* (* (- 2.0) l_0_4_16) l_0_4_26) ?x6521) 0.0))))
(assert
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x6540 (* ?x5075 l_0_4_35)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x6538 (* ?x5072 l_0_4_34)))
 (let ((?x5811 (* l_0_4_21 l_0_4_21)))
 (let ((?x6494 (* 2.0 ?x5811)))
 (let ((?x5807 (* l_0_4_20 l_0_4_20)))
 (let ((?x2382 (* 2.0 ?x5807)))
 (let ((?x5803 (* l_0_4_19 l_0_4_19)))
 (let ((?x6489 (* 2.0 ?x5803)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x6529 (* ?x5064 l_0_4_20)))
 (let ((?x6537 (+ (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_19) ?x6529) ?x6489) ?x2382) ?x6494)))
 (let ((?x6547 (- (- (+ (+ ?x6537 ?x6538) ?x6540) (* (* 2.0 l_0_4_34) l_0_4_34)) (* (* 2.0 l_0_4_35) l_0_4_35))))
 (= (- ?x6547 (* (* 2.0 l_0_4_36) l_0_4_36)) 0.0))))))))))))))))
(assert
 (let ((?x6601 (* l_0_4_66 l_0_4_66)))
 (let ((?x6599 (* l_0_4_65 l_0_4_65)))
 (let ((?x6597 (* l_0_4_64 l_0_4_64)))
 (let ((?x6327 (* l_0_4_51 l_0_4_51)))
 (let ((?x6324 (* l_0_4_50 l_0_4_50)))
 (let ((?x6319 (* l_0_4_49 l_0_4_49)))
 (let ((?x5209 (* 4.0 l_0_4_36)))
 (let ((?x5823 (* ?x5209 l_0_4_36)))
 (let ((?x6591 (* ?x5209 l_0_4_39)))
 (let ((?x5206 (* 4.0 l_0_4_35)))
 (let ((?x5820 (* ?x5206 l_0_4_35)))
 (let ((?x6588 (* ?x5206 l_0_4_38)))
 (let ((?x5203 (* 4.0 l_0_4_34)))
 (let ((?x5817 (* ?x5203 l_0_4_34)))
 (let ((?x6585 (* ?x5203 l_0_4_37)))
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x6583 (* ?x5075 l_0_4_38)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x6581 (* ?x5072 l_0_4_37)))
 (let ((?x5811 (* l_0_4_21 l_0_4_21)))
 (let ((?x5812 (* 4.0 ?x5811)))
 (let ((?x5197 (* 4.0 l_0_4_21)))
 (let ((?x6578 (* ?x5197 l_0_4_24)))
 (let ((?x5807 (* l_0_4_20 l_0_4_20)))
 (let ((?x5808 (* 4.0 ?x5807)))
 (let ((?x5194 (* 4.0 l_0_4_20)))
 (let ((?x6575 (* ?x5194 l_0_4_23)))
 (let ((?x5803 (* l_0_4_19 l_0_4_19)))
 (let ((?x5804 (* 4.0 ?x5803)))
 (let ((?x5191 (* 4.0 l_0_4_19)))
 (let ((?x6572 (* ?x5191 l_0_4_22)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x6570 (* ?x5064 l_0_4_23)))
 (let ((?x6576 (+ (+ (+ (- (* (* (- 2.0) l_0_4_17) l_0_4_22) ?x6570) ?x6572) ?x5804) ?x6575)))
 (let ((?x6587 (- (- (+ (+ (+ (+ (+ ?x6576 ?x5808) ?x6578) ?x5812) ?x6581) ?x6583) ?x6585) ?x5817)))
 (let ((?x6596 (- (- (- (- (- (- (- ?x6587 ?x6588) ?x5820) ?x6591) ?x5823) ?x6319) ?x6324) ?x6327)))
 (= (- (- (- ?x6596 ?x6597) ?x6599) ?x6601) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5862 (* l_0_4_36 l_0_4_36)))
 (let ((?x5852 (* l_0_4_35 l_0_4_35)))
 (let ((?x5842 (* l_0_4_34 l_0_4_34)))
 (let ((?x5811 (* l_0_4_21 l_0_4_21)))
 (let ((?x6618 (+ (- (- (* (- l_0_4_19) l_0_4_19) (* l_0_4_20 l_0_4_20)) ?x5811) ?x5842)))
 (= (+ (+ ?x6618 ?x5852) ?x5862) 0.0)))))))
(assert
 (let ((?x6548 (* 2.0 l_0_4_36)))
 (let ((?x6633 (* ?x6548 l_0_4_39)))
 (let ((?x6545 (* 2.0 l_0_4_35)))
 (let ((?x6631 (* ?x6545 l_0_4_38)))
 (let ((?x6542 (* 2.0 l_0_4_34)))
 (let ((?x6629 (* ?x6542 l_0_4_37)))
 (let ((?x6471 (* 2.0 l_0_4_21)))
 (let ((?x6627 (* ?x6471 l_0_4_24)))
 (let ((?x6468 (* 2.0 l_0_4_20)))
 (let ((?x6625 (* ?x6468 l_0_4_23)))
 (let ((?x6632 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_22) ?x6625) ?x6627) ?x6629) ?x6631)))
 (= (+ ?x6632 ?x6633) 0.0)))))))))))))
(assert
 (let ((?x6548 (* 2.0 l_0_4_36)))
 (let ((?x6649 (* ?x6548 l_0_4_43)))
 (let ((?x6545 (* 2.0 l_0_4_35)))
 (let ((?x6647 (* ?x6545 l_0_4_42)))
 (let ((?x6542 (* 2.0 l_0_4_34)))
 (let ((?x6645 (* ?x6542 l_0_4_41)))
 (let ((?x6471 (* 2.0 l_0_4_21)))
 (let ((?x6643 (* ?x6471 l_0_4_28)))
 (let ((?x6468 (* 2.0 l_0_4_20)))
 (let ((?x2686 (* ?x6468 l_0_4_27)))
 (let ((?x6648 (+ (+ (- (- (* (* (- 2.0) l_0_4_19) l_0_4_26) ?x2686) ?x6643) ?x6645) ?x6647)))
 (= (+ ?x6648 ?x6649) 0.0)))))))))))))
(assert
 (let ((?x1294 (* l_0_4_40 l_0_4_40)))
 (let ((?x6088 (* l_0_4_39 l_0_4_39)))
 (let ((?x1230 (* l_0_4_38 l_0_4_38)))
 (let ((?x1226 (* l_0_4_37 l_0_4_37)))
 (let ((?x6019 (* l_0_4_25 l_0_4_25)))
 (let ((?x6013 (* l_0_4_24 l_0_4_24)))
 (let ((?x6673 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6013) ?x6019)))
 (= (+ (+ (+ (+ ?x6673 ?x1226) ?x1230) ?x6088) ?x1294) 0.0)))))))))
(assert
 (let ((?x6712 (* 2.0 l_0_4_40)))
 (let ((?x6713 (* ?x6712 l_0_4_44)))
 (let ((?x6709 (* 2.0 l_0_4_39)))
 (let ((?x6710 (* ?x6709 l_0_4_43)))
 (let ((?x6706 (* 2.0 l_0_4_38)))
 (let ((?x6707 (* ?x6706 l_0_4_42)))
 (let ((?x6703 (* 2.0 l_0_4_37)))
 (let ((?x6704 (* ?x6703 l_0_4_41)))
 (let ((?x6700 (* 2.0 l_0_4_25)))
 (let ((?x6701 (* ?x6700 l_0_4_29)))
 (let ((?x6697 (* 2.0 l_0_4_24)))
 (let ((?x6698 (* ?x6697 l_0_4_28)))
 (let ((?x6694 (* 2.0 l_0_4_23)))
 (let ((?x6695 (* ?x6694 l_0_4_27)))
 (let ((?x6705 (+ (- (- (- (* (* (- 2.0) l_0_4_22) l_0_4_26) ?x6695) ?x6698) ?x6701) ?x6704)))
 (= (+ (+ (+ ?x6705 ?x6707) ?x6710) ?x6713) 0.0)))))))))))))))))
(assert
 (let ((?x5382 (* l_0_4_45 l_0_4_45)))
 (let ((?x5379 (* l_0_4_44 l_0_4_44)))
 (let ((?x5376 (* l_0_4_43 l_0_4_43)))
 (let ((?x5373 (* l_0_4_42 l_0_4_42)))
 (let ((?x5370 (* l_0_4_41 l_0_4_41)))
 (let ((?x5411 (* l_0_4_30 l_0_4_30)))
 (let ((?x5405 (* l_0_4_29 l_0_4_29)))
 (let ((?x5399 (* l_0_4_28 l_0_4_28)))
 (let ((?x2707 (- (- (- (* (- l_0_4_26) l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x5399) ?x5405)))
 (= (+ (+ (+ (+ (+ (- ?x2707 ?x5411) ?x5370) ?x5373) ?x5376) ?x5379) ?x5382) 0.0)))))))))))
(assert
 (= (- (* l_0_4_16 l_0_4_16) (* l_0_4_31 l_0_4_31)) 0.0))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6475 (* ?x6474 l_0_4_32)))
 (let ((?x6762 (- (* (* 2.0 l_0_4_16) l_0_4_17) (* (* 2.0 l_0_4_16) l_0_4_16))))
 (= (+ (- ?x6762 ?x6475) (* 2.0 (* l_0_4_31 l_0_4_31))) 0.0)))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6512 (* ?x6474 l_0_4_34)))
 (= (- (* (* 2.0 l_0_4_16) l_0_4_19) ?x6512) 0.0))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x2401 (* ?x6474 l_0_4_37)))
 (= (- (* (* 2.0 l_0_4_16) l_0_4_22) ?x2401) 0.0))))
(assert
 (let ((?x6474 (* 2.0 l_0_4_31)))
 (let ((?x6521 (* ?x6474 l_0_4_41)))
 (= (- (* (* 2.0 l_0_4_16) l_0_4_26) ?x6521) 0.0))))
(assert
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x6540 (* ?x5075 l_0_4_35)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x6538 (* ?x5072 l_0_4_34)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x6477 (* ?x5067 l_0_4_34)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x6529 (* ?x5064 l_0_4_20)))
 (let ((?x5058 (* l_0_4_16 l_0_4_16)))
 (let ((?x2757 (* 2.0 ?x5058)))
 (let ((?x2774 (+ (+ (* (* (- 4.0) l_0_4_16) l_0_4_19) ?x2757) (* (* 2.0 l_0_4_17) l_0_4_19))))
 (let ((?x2784 (- (- (+ (+ ?x2774 ?x6529) ?x6477) (* (* 2.0 l_0_4_31) l_0_4_31)) ?x6538)))
 (= (- ?x2784 ?x6540) 0.0))))))))))))))
(assert
 (let ((?x6800 (* l_0_4_61 l_0_4_61)))
 (let ((?x6158 (* l_0_4_46 l_0_4_46)))
 (let ((?x5075 (* 2.0 l_0_4_33)))
 (let ((?x6583 (* ?x5075 l_0_4_38)))
 (let ((?x5072 (* 2.0 l_0_4_32)))
 (let ((?x6581 (* ?x5072 l_0_4_37)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x5070 (* ?x5067 l_0_4_31)))
 (let ((?x6794 (* ?x5067 l_0_4_37)))
 (let ((?x5064 (* 2.0 l_0_4_18)))
 (let ((?x6570 (* ?x5064 l_0_4_23)))
 (let ((?x5058 (* l_0_4_16 l_0_4_16)))
 (let ((?x5059 (* 4.0 ?x5058)))
 (let ((?x6792 (+ (+ (* (* (- 4.0) l_0_4_16) l_0_4_22) ?x5059) (* (* 2.0 l_0_4_17) l_0_4_22))))
 (let ((?x6801 (- (- (- (- (- (+ (+ ?x6792 ?x6570) ?x6794) ?x5070) ?x6581) ?x6583) ?x6158) ?x6800)))
 (= ?x6801 0.0)))))))))))))))))
(assert
 (let ((?x6548 (* 2.0 l_0_4_36)))
 (let ((?x6633 (* ?x6548 l_0_4_39)))
 (let ((?x6545 (* 2.0 l_0_4_35)))
 (let ((?x6631 (* ?x6545 l_0_4_38)))
 (let ((?x6542 (* 2.0 l_0_4_34)))
 (let ((?x6629 (* ?x6542 l_0_4_37)))
 (let ((?x6471 (* 2.0 l_0_4_21)))
 (let ((?x6627 (* ?x6471 l_0_4_24)))
 (let ((?x6468 (* 2.0 l_0_4_20)))
 (let ((?x6625 (* ?x6468 l_0_4_23)))
 (let ((?x6809 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_22) ?x6625) ?x6627) ?x6629) ?x6631)))
 (= (- ?x6809 ?x6633) 0.0)))))))))))))
(assert
 (let ((?x6548 (* 2.0 l_0_4_36)))
 (let ((?x6649 (* ?x6548 l_0_4_43)))
 (let ((?x6545 (* 2.0 l_0_4_35)))
 (let ((?x6647 (* ?x6545 l_0_4_42)))
 (let ((?x6542 (* 2.0 l_0_4_34)))
 (let ((?x6645 (* ?x6542 l_0_4_41)))
 (let ((?x6471 (* 2.0 l_0_4_21)))
 (let ((?x6643 (* ?x6471 l_0_4_28)))
 (let ((?x6468 (* 2.0 l_0_4_20)))
 (let ((?x2686 (* ?x6468 l_0_4_27)))
 (let ((?x6815 (- (- (+ (+ (* (* 2.0 l_0_4_19) l_0_4_26) ?x2686) ?x6643) ?x6645) ?x6647)))
 (= (- ?x6815 ?x6649) 0.0)))))))))))))
(assert
 (let ((?x1294 (* l_0_4_40 l_0_4_40)))
 (let ((?x6088 (* l_0_4_39 l_0_4_39)))
 (let ((?x1230 (* l_0_4_38 l_0_4_38)))
 (let ((?x1226 (* l_0_4_37 l_0_4_37)))
 (let ((?x6019 (* l_0_4_25 l_0_4_25)))
 (let ((?x6013 (* l_0_4_24 l_0_4_24)))
 (let ((?x2998 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x6013) ?x6019)))
 (= (- (- (- (- ?x2998 ?x1226) ?x1230) ?x6088) ?x1294) 0.0)))))))))
(assert
 (let ((?x6712 (* 2.0 l_0_4_40)))
 (let ((?x6713 (* ?x6712 l_0_4_44)))
 (let ((?x6709 (* 2.0 l_0_4_39)))
 (let ((?x6710 (* ?x6709 l_0_4_43)))
 (let ((?x6706 (* 2.0 l_0_4_38)))
 (let ((?x6707 (* ?x6706 l_0_4_42)))
 (let ((?x6703 (* 2.0 l_0_4_37)))
 (let ((?x6704 (* ?x6703 l_0_4_41)))
 (let ((?x6700 (* 2.0 l_0_4_25)))
 (let ((?x6701 (* ?x6700 l_0_4_29)))
 (let ((?x6697 (* 2.0 l_0_4_24)))
 (let ((?x6698 (* ?x6697 l_0_4_28)))
 (let ((?x6694 (* 2.0 l_0_4_23)))
 (let ((?x6695 (* ?x6694 l_0_4_27)))
 (let ((?x6833 (- (+ (+ (+ (* (* 2.0 l_0_4_22) l_0_4_26) ?x6695) ?x6698) ?x6701) ?x6704)))
 (= (- (- (- ?x6833 ?x6707) ?x6710) ?x6713) 0.0)))))))))))))))))
(assert
 (let ((?x5382 (* l_0_4_45 l_0_4_45)))
 (let ((?x5379 (* l_0_4_44 l_0_4_44)))
 (let ((?x5376 (* l_0_4_43 l_0_4_43)))
 (let ((?x5373 (* l_0_4_42 l_0_4_42)))
 (let ((?x5370 (* l_0_4_41 l_0_4_41)))
 (let ((?x5411 (* l_0_4_30 l_0_4_30)))
 (let ((?x5405 (* l_0_4_29 l_0_4_29)))
 (let ((?x5399 (* l_0_4_28 l_0_4_28)))
 (let ((?x6843 (+ (+ (+ (* l_0_4_26 l_0_4_26) (* l_0_4_27 l_0_4_27)) ?x5399) ?x5405)))
 (= (- (- (- (- (- (+ ?x6843 ?x5411) ?x5370) ?x5373) ?x5376) ?x5379) ?x5382) 0.0)))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x6204 (* ?x5134 l_0_4_49)))
 (let ((?x5209 (* 4.0 l_0_4_36)))
 (let ((?x6591 (* ?x5209 l_0_4_39)))
 (let ((?x5206 (* 4.0 l_0_4_35)))
 (let ((?x6588 (* ?x5206 l_0_4_38)))
 (let ((?x5203 (* 4.0 l_0_4_34)))
 (let ((?x6585 (* ?x5203 l_0_4_37)))
 (let ((?x5067 (* 4.0 l_0_4_31)))
 (let ((?x6794 (* ?x5067 l_0_4_37)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5200 (* ?x5127 l_0_4_34)))
 (let ((?x5197 (* 4.0 l_0_4_21)))
 (let ((?x6578 (* ?x5197 l_0_4_24)))
 (let ((?x5194 (* 4.0 l_0_4_20)))
 (let ((?x6575 (* ?x5194 l_0_4_23)))
 (let ((?x5191 (* 4.0 l_0_4_19)))
 (let ((?x6572 (* ?x5191 l_0_4_22)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5188 (* ?x5118 l_0_4_19)))
 (let ((?x6859 (- (- (- (+ ?x5188 (* (* 4.0 l_0_4_16) l_0_4_22)) ?x6572) ?x6575) ?x6578)))
 (let ((?x6867 (- (- (+ (+ (+ (- (- ?x6859 ?x5200) ?x6794) ?x6585) ?x6588) ?x6591) ?x6204) (* (* 2.0 l_0_4_61) l_0_4_64))))
 (= ?x6867 0.0))))))))))))))))))))))))
(assert
 (let ((?x5455 (* 2.0 l_0_4_51)))
 (let ((?x6359 (* ?x5455 l_0_4_54)))
 (let ((?x5452 (* 2.0 l_0_4_50)))
 (let ((?x6357 (* ?x5452 l_0_4_53)))
 (let ((?x5449 (* 2.0 l_0_4_49)))
 (let ((?x6354 (* ?x5449 l_0_4_52)))
 (let ((?x5910 (* 8.0 l_0_4_36)))
 (let ((?x5911 (* ?x5910 l_0_4_39)))
 (let ((?x5905 (* 8.0 l_0_4_35)))
 (let ((?x5906 (* ?x5905 l_0_4_38)))
 (let ((?x5900 (* 8.0 l_0_4_34)))
 (let ((?x5901 (* ?x5900 l_0_4_37)))
 (let ((?x6019 (* l_0_4_25 l_0_4_25)))
 (let ((?x6881 (* 2.0 ?x6019)))
 (let ((?x6013 (* l_0_4_24 l_0_4_24)))
 (let ((?x6879 (* 2.0 ?x6013)))
 (let ((?x6007 (* l_0_4_23 l_0_4_23)))
 (let ((?x6877 (* 2.0 ?x6007)))
 (let ((?x1184 (* l_0_4_22 l_0_4_22)))
 (let ((?x6875 (* 2.0 ?x1184)))
 (let ((?x5891 (* 8.0 l_0_4_21)))
 (let ((?x5892 (* ?x5891 l_0_4_24)))
 (let ((?x5886 (* 8.0 l_0_4_20)))
 (let ((?x5887 (* ?x5886 l_0_4_23)))
 (let ((?x5882 (* 8.0 l_0_4_19)))
 (let ((?x5883 (* ?x5882 l_0_4_22)))
 (let ((?x6883 (- (+ (+ (+ (+ (+ (+ ?x5883 ?x5887) ?x5892) ?x6875) ?x6877) ?x6879) ?x6881) ?x5901)))
 (let ((?x6889 (- (- (- (- ?x6883 ?x5906) ?x5911) (* (* 2.0 l_0_4_37) l_0_4_37)) (* (* 2.0 l_0_4_38) l_0_4_38))))
 (let ((?x6893 (- (- ?x6889 (* (* 2.0 l_0_4_39) l_0_4_39)) (* (* 2.0 l_0_4_40) l_0_4_40))))
 (let ((?x6898 (- (- (- (- ?x6893 ?x6354) ?x6357) ?x6359) (* (* 2.0 l_0_4_64) l_0_4_67))))
 (let ((?x6902 (- (- ?x6898 (* (* 2.0 l_0_4_65) l_0_4_68)) (* (* 2.0 l_0_4_66) l_0_4_69))))
 (= ?x6902 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5134 (* 2.0 l_0_4_46)))
 (let ((?x6235 (* ?x5134 l_0_4_52)))
 (let ((?x1294 (* l_0_4_40 l_0_4_40)))
 (let ((?x3212 (* 2.0 ?x1294)))
 (let ((?x6088 (* l_0_4_39 l_0_4_39)))
 (let ((?x3204 (* 2.0 ?x6088)))
 (let ((?x1230 (* l_0_4_38 l_0_4_38)))
 (let ((?x6905 (* 2.0 ?x1230)))
 (let ((?x1226 (* l_0_4_37 l_0_4_37)))
 (let ((?x3203 (* 2.0 ?x1226)))
 (let ((?x5127 (* 8.0 l_0_4_31)))
 (let ((?x5271 (* ?x5127 l_0_4_37)))
 (let ((?x5118 (* 8.0 l_0_4_16)))
 (let ((?x5255 (* ?x5118 l_0_4_22)))
 (let ((?x6917 (- (- ?x5255 (* (* 2.0 l_0_4_22) l_0_4_22)) (* (* 2.0 l_0_4_23) l_0_4_23))))
 (let ((?x6921 (- (- ?x6917 (* (* 2.0 l_0_4_24) l_0_4_24)) (* (* 2.0 l_0_4_25) l_0_4_25))))
 (let ((?x6929 (- (- (+ (+ (+ (+ (- ?x6921 ?x5271) ?x3203) ?x6905) ?x3204) ?x3212) ?x6235) (* (* 2.0 l_0_4_61) l_0_4_67))))
 (= ?x6929 0.0)))))))))))))))))))
(assert
 (let ((?x6950 (* l_0_4_70 l_0_4_70)))
 (let ((?x6948 (* l_0_4_69 l_0_4_69)))
 (let ((?x6946 (* l_0_4_68 l_0_4_68)))
 (let ((?x6944 (* l_0_4_67 l_0_4_67)))
 (let ((?x6398 (* l_0_4_55 l_0_4_55)))
 (let ((?x6395 (* l_0_4_54 l_0_4_54)))
 (let ((?x6392 (* l_0_4_53 l_0_4_53)))
 (let ((?x6389 (* l_0_4_52 l_0_4_52)))
 (let ((?x5284 (* 4.0 l_0_4_40)))
 (let ((?x6040 (* ?x5284 l_0_4_40)))
 (let ((?x5281 (* 4.0 l_0_4_39)))
 (let ((?x6035 (* ?x5281 l_0_4_39)))
 (let ((?x5278 (* 4.0 l_0_4_38)))
 (let ((?x6030 (* ?x5278 l_0_4_38)))
 (let ((?x5275 (* 4.0 l_0_4_37)))
 (let ((?x6025 (* ?x5275 l_0_4_37)))
 (let ((?x6019 (* l_0_4_25 l_0_4_25)))
 (let ((?x6020 (* 4.0 ?x6019)))
 (let ((?x6013 (* l_0_4_24 l_0_4_24)))
 (let ((?x6014 (* 4.0 ?x6013)))
 (let ((?x6007 (* l_0_4_23 l_0_4_23)))
 (let ((?x6008 (* 4.0 ?x6007)))
 (let ((?x1184 (* l_0_4_22 l_0_4_22)))
 (let ((?x1150 (* 4.0 ?x1184)))
 (let ((?x6939 (- (- (- (- (+ (+ (+ ?x1150 ?x6008) ?x6014) ?x6020) ?x6025) ?x6030) ?x6035) ?x6040)))
 (let ((?x6949 (- (- (- (- (- (- (- ?x6939 ?x6389) ?x6392) ?x6395) ?x6398) ?x6944) ?x6946) ?x6948)))
 (= (- ?x6949 ?x6950) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_16 0.0))
(assert
 (>= l_0_4_18 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_25 0.0))
(assert
 (>= l_0_4_30 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_33 0.0))
(assert
 (>= l_0_4_36 0.0))
(assert
 (>= l_0_4_40 0.0))
(assert
 (>= l_0_4_45 0.0))
(assert
 (>= l_0_4_46 0.0))
(assert
 (>= l_0_4_48 0.0))
(assert
 (>= l_0_4_51 0.0))
(assert
 (>= l_0_4_55 0.0))
(assert
 (>= l_0_4_60 0.0))
(assert
 (>= l_0_4_61 0.0))
(assert
 (>= l_0_4_63 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_70 0.0))
(assert
 (>= l_0_4_75 0.0))
(assert
 (>= l_0_4_76 0.0))
(assert
 (>= l_0_4_78 0.0))
(assert
 (>= l_0_4_81 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (let ((?x7036 (* l_0_5_96 l_0_5_96)))
 (let ((?x7034 (* l_0_5_95 l_0_5_95)))
 (let ((?x7032 (* l_0_5_94 l_0_5_94)))
 (let ((?x7030 (* l_0_5_81 l_0_5_81)))
 (let ((?x7028 (* l_0_5_80 l_0_5_80)))
 (let ((?x7026 (* l_0_5_79 l_0_5_79)))
 (let ((?x7006 (* l_0_5_33 l_0_5_33)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7004 (* ?x7003 l_0_5_35)))
 (let ((?x7001 (* l_0_5_32 l_0_5_32)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x6999 (* ?x6998 l_0_5_34)))
 (let ((?x6996 (* l_0_5_18 l_0_5_18)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x6994 (* ?x6993 l_0_5_20)))
 (let ((?x6995 (+ (- (* (* 4.0 l_0_5_17) l_0_5_19) (* l_0_5_17 l_0_5_17)) ?x6994)))
 (let ((?x7010 (+ (+ (- (+ (- (- ?x6995 ?x6996) ?x6999) ?x7001) ?x7004) ?x7006) (* 1.0 (* l_0_5_4 l_0_5_4)))))
 (let ((?x7016 (+ (+ ?x7010 (* 1.0 (* l_0_5_49 l_0_5_49))) (* 1.0 (* l_0_5_5 l_0_5_5)))))
 (let ((?x7022 (+ (+ ?x7016 (* 1.0 (* l_0_5_50 l_0_5_50))) (* 1.0 (* l_0_5_51 l_0_5_51)))))
 (let ((?x7031 (- (- (- (+ ?x7022 (* 1.0 (* l_0_5_6 l_0_5_6))) ?x7026) ?x7028) ?x7030)))
 (= (+ (- (- (- ?x7031 ?x7032) ?x7034) ?x7036) 1.0) 0.0))))))))))))))))))))))
(assert
 (let ((?x7082 (* l_0_5_91 l_0_5_91)))
 (let ((?x7080 (* l_0_5_76 l_0_5_76)))
 (let ((?x7006 (* l_0_5_33 l_0_5_33)))
 (let ((?x7001 (* l_0_5_32 l_0_5_32)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x7073 (* ?x7072 l_0_5_32)))
 (let ((?x6996 (* l_0_5_18 l_0_5_18)))
 (let ((?x6991 (* l_0_5_17 l_0_5_17)))
 (let ((?x7067 (* 4.0 l_0_5_16)))
 (let ((?x7068 (* ?x7067 l_0_5_17)))
 (let ((?x7069 (- (+ (* (- _a_0_) _a_0_) (* 1.0 (* l_0_5_1 l_0_5_1))) ?x7068)))
 (let ((?x7079 (+ (- (- (+ (+ (+ ?x7069 ?x6991) ?x6996) ?x7073) ?x7001) ?x7006) (* 1.0 (* l_0_5_46 l_0_5_46)))))
 (= (- (- ?x7079 ?x7080) ?x7082) 0.0))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x7123 (* ?x7122 l_0_5_47)))
 (let ((?x7006 (* l_0_5_33 l_0_5_33)))
 (let ((?x7120 (* 2.0 ?x7006)))
 (let ((?x7001 (* l_0_5_32 l_0_5_32)))
 (let ((?x7118 (* 2.0 ?x7001)))
 (let ((?x7109 (* 2.0 l_0_5_1)))
 (let ((?x7110 (* ?x7109 l_0_5_2)))
 (let ((?x7114 (- (+ (+ (* (* (- 2.0) _a_0_) _a_1_) (* 2.0 _a_0_)) ?x7110) (* (* 2.0 l_0_5_17) l_0_5_17))))
 (let ((?x7124 (+ (+ (+ (- ?x7114 (* (* 2.0 l_0_5_18) l_0_5_18)) ?x7118) ?x7120) ?x7123)))
 (let ((?x7130 (- (- ?x7124 (* (* 2.0 l_0_5_76) l_0_5_77)) (* (* 2.0 l_0_5_91) l_0_5_92))))
 (= (+ ?x7130 4.0) 0.0)))))))))))))
(assert
 (let ((?x7181 (* l_0_5_93 l_0_5_93)))
 (let ((?x7179 (* l_0_5_92 l_0_5_92)))
 (let ((?x7177 (* l_0_5_78 l_0_5_78)))
 (let ((?x7175 (* l_0_5_77 l_0_5_77)))
 (let ((?x7165 (+ (+ (* (- _a_1_) _a_1_) (* 2.0 _a_1_)) (* 1.0 (* l_0_5_2 l_0_5_2)))))
 (let ((?x7171 (+ (+ ?x7165 (* 1.0 (* l_0_5_3 l_0_5_3))) (* 1.0 (* l_0_5_47 l_0_5_47)))))
 (let ((?x7180 (- (- (- (+ ?x7171 (* 1.0 (* l_0_5_48 l_0_5_48))) ?x7175) ?x7177) ?x7179)))
 (= (- ?x7180 ?x7181) 0.0)))))))))
(assert
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7214 (* ?x7213 l_0_5_50)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7211 (* ?x7210 l_0_5_49)))
 (let ((?x7201 (* 2.0 l_0_5_3)))
 (let ((?x7202 (* ?x7201 l_0_5_5)))
 (let ((?x7198 (* 2.0 l_0_5_2)))
 (let ((?x7199 (* ?x7198 l_0_5_4)))
 (let ((?x6996 (* l_0_5_18 l_0_5_18)))
 (let ((?x7143 (* 2.0 ?x6996)))
 (let ((?x6991 (* l_0_5_17 l_0_5_17)))
 (let ((?x7138 (* 2.0 ?x6991)))
 (let ((?x7206 (- (+ (+ (+ ?x7138 ?x7143) ?x7199) ?x7202) (* (* 2.0 l_0_5_32) l_0_5_32))))
 (let ((?x7218 (- (+ (+ (- ?x7206 (* (* 2.0 l_0_5_33) l_0_5_33)) ?x7211) ?x7214) (* (* 2.0 l_0_5_77) l_0_5_79))))
 (let ((?x7224 (- (- ?x7218 (* (* 2.0 l_0_5_78) l_0_5_80)) (* (* 2.0 l_0_5_92) l_0_5_94))))
 (= (- (- ?x7224 (* (* 2.0 l_0_5_93) l_0_5_95)) 2.0) 0.0)))))))))))))))))
(assert
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7275 (* ?x7213 l_0_5_57)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7273 (* ?x7210 l_0_5_56)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7271 (* ?x7003 l_0_5_33)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x7269 (* ?x6998 l_0_5_32)))
 (let ((?x7166 (* l_0_5_3 l_0_5_3)))
 (let ((?x7163 (* l_0_5_2 l_0_5_2)))
 (let ((?x6996 (* l_0_5_18 l_0_5_18)))
 (let ((?x7265 (* 4.0 ?x6996)))
 (let ((?x6991 (* l_0_5_17 l_0_5_17)))
 (let ((?x7263 (* 4.0 ?x6991)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7261 (* ?x7260 l_0_5_3)))
 (let ((?x7257 (* 2.0 l_0_5_11)))
 (let ((?x7258 (* ?x7257 l_0_5_2)))
 (let ((?x7256 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x7270 (- (- (- (+ (+ (+ (+ ?x7256 ?x7258) ?x7261) ?x7263) ?x7265) ?x7163) ?x7166) ?x7269)))
 (let ((?x7278 (- (+ (+ (- ?x7270 ?x7271) ?x7273) ?x7275) (* (* 2.0 l_0_5_77) l_0_5_86))))
 (= (- (- ?x7278 (* (* 2.0 l_0_5_78) l_0_5_87)) 4.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7332 (* l_0_5_63 l_0_5_63)))
 (let ((?x7330 (* l_0_5_62 l_0_5_62)))
 (let ((?x7172 (* l_0_5_48 l_0_5_48)))
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7327 (* ?x7213 l_0_5_53)))
 (let ((?x7169 (* l_0_5_47 l_0_5_47)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7324 (* ?x7210 l_0_5_52)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7271 (* ?x7003 l_0_5_33)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x7269 (* ?x6998 l_0_5_32)))
 (let ((?x7201 (* 2.0 l_0_5_3)))
 (let ((?x7320 (* ?x7201 l_0_5_8)))
 (let ((?x7198 (* 2.0 l_0_5_2)))
 (let ((?x7318 (* ?x7198 l_0_5_7)))
 (let ((?x6996 (* l_0_5_18 l_0_5_18)))
 (let ((?x7265 (* 4.0 ?x6996)))
 (let ((?x6991 (* l_0_5_17 l_0_5_17)))
 (let ((?x7263 (* 4.0 ?x6991)))
 (let ((?x7326 (- (+ (- (- (+ (+ (+ ?x7263 ?x7265) ?x7318) ?x7320) ?x7269) ?x7271) ?x7324) ?x7169)))
 (let ((?x7335 (- (- (- (- (+ ?x7326 ?x7327) ?x7172) ?x7330) ?x7332) (* (* 2.0 l_0_5_77) l_0_5_82))))
 (let ((?x7339 (- (- ?x7335 (* (* 2.0 l_0_5_78) l_0_5_83)) (* (* 2.0 l_0_5_92) l_0_5_97))))
 (= (- (- ?x7339 (* (* 2.0 l_0_5_93) l_0_5_98)) 4.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x7382 (* ?x7207 l_0_5_42)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x7380 (* ?x7204 l_0_5_41)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x7378 (* ?x7072 l_0_5_31)))
 (let ((?x7376 (* ?x7072 l_0_5_41)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x7374 (* ?x7115 l_0_5_27)))
 (let ((?x7369 (* l_0_5_16 l_0_5_16)))
 (let ((?x7370 (* 4.0 ?x7369)))
 (let ((?x7371 (+ (- (* (- l_0_5_1) l_0_5_1) (* (* 4.0 l_0_5_16) l_0_5_26)) ?x7370)))
 (let ((?x7379 (- (+ (+ (+ ?x7371 (* (* 2.0 l_0_5_17) l_0_5_26)) ?x7374) ?x7376) ?x7378)))
 (= (- (- ?x7379 ?x7380) ?x7382) 0.0)))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x7416 (* ?x7122 l_0_5_56)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7414 (* ?x7003 l_0_5_42)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x7412 (* ?x6998 l_0_5_41)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7410 (* ?x7409 l_0_5_32)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x7407 (* ?x6993 l_0_5_27)))
 (let ((?x6989 (* 4.0 l_0_5_17)))
 (let ((?x7405 (* ?x6989 l_0_5_26)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7403 (* ?x7402 l_0_5_17)))
 (let ((?x7109 (* 2.0 l_0_5_1)))
 (let ((?x7110 (* ?x7109 l_0_5_2)))
 (let ((?x7401 (- (- (* ?x7109 l_0_5_11) ?x7110) (* (* 2.0 l_0_5_101) l_0_5_91))))
 (let ((?x7417 (+ (+ (+ (- (- (- (+ ?x7401 ?x7403) ?x7405) ?x7407) ?x7410) ?x7412) ?x7414) ?x7416)))
 (= (- ?x7417 (* (* 2.0 l_0_5_76) l_0_5_86)) 0.0))))))))))))))))))))
(assert
 (let ((?x7471 (* 4.0 l_0_5_36)))
 (let ((?x7472 (* ?x7471 l_0_5_43)))
 (let ((?x7468 (* 4.0 l_0_5_35)))
 (let ((?x7469 (* ?x7468 l_0_5_42)))
 (let ((?x7465 (* 4.0 l_0_5_34)))
 (let ((?x7466 (* ?x7465 l_0_5_41)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x7376 (* ?x7072 l_0_5_41)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7462 (* ?x7409 l_0_5_34)))
 (let ((?x7459 (* 4.0 l_0_5_21)))
 (let ((?x7460 (* ?x7459 l_0_5_28)))
 (let ((?x7456 (* 4.0 l_0_5_20)))
 (let ((?x7457 (* ?x7456 l_0_5_27)))
 (let ((?x7453 (* 4.0 l_0_5_19)))
 (let ((?x7454 (* ?x7453 l_0_5_26)))
 (let ((?x7067 (* 4.0 l_0_5_16)))
 (let ((?x3763 (* ?x7067 l_0_5_26)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7450 (* ?x7402 l_0_5_19)))
 (let ((?x7458 (- (- (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x7450) ?x3763) ?x7454) ?x7457)))
 (= (+ (+ (+ (- (- (- ?x7458 ?x7460) ?x7462) ?x7376) ?x7466) ?x7469) ?x7472) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x7416 (* ?x7122 l_0_5_56)))
 (let ((?x7531 (* 4.0 l_0_5_40)))
 (let ((?x7532 (* ?x7531 l_0_5_44)))
 (let ((?x7528 (* 4.0 l_0_5_39)))
 (let ((?x7529 (* ?x7528 l_0_5_43)))
 (let ((?x7525 (* 4.0 l_0_5_38)))
 (let ((?x7526 (* ?x7525 l_0_5_42)))
 (let ((?x7522 (* 4.0 l_0_5_37)))
 (let ((?x7523 (* ?x7522 l_0_5_41)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7520 (* ?x7409 l_0_5_41)))
 (let ((?x7518 (* ?x7409 l_0_5_37)))
 (let ((?x7516 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x7513 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x7510 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x7507 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7497 (* ?x7402 l_0_5_26)))
 (let ((?x7508 (- (+ (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) (* ?x7402 l_0_5_22)) ?x7497) ?x7507)))
 (let ((?x7527 (+ (+ (- (- (- (- (- ?x7508 ?x7510) ?x7513) ?x7516) ?x7518) ?x7520) ?x7523) ?x7526)))
 (let ((?x7537 (- (- (+ (+ ?x7527 ?x7529) ?x7532) ?x7416) (* (* 2.0 l_0_5_61) l_0_5_71))))
 (= ?x7537 0.0))))))))))))))))))))))))
(assert
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7520 (* ?x7409 l_0_5_41)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7497 (* ?x7402 l_0_5_26)))
 (let ((?x7587 (- (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x7497) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x7593 (- (- ?x7587 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x7599 (- (- ?x7593 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x7606 (+ (+ (- ?x7599 ?x7520) (* 2.0 (* l_0_5_41 l_0_5_41))) (* 2.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x7612 (+ (+ ?x7606 (* 2.0 (* l_0_5_43 l_0_5_43))) (* 2.0 (* l_0_5_44 l_0_5_44)))))
 (= (+ ?x7612 (* 2.0 (* l_0_5_45 l_0_5_45))) 0.0)))))))))))
(assert
 (let ((?x7660 (* 2.0 l_0_5_51)))
 (let ((?x7661 (* ?x7660 l_0_5_58)))
 (let ((?x7657 (* 2.0 l_0_5_50)))
 (let ((?x7658 (* ?x7657 l_0_5_57)))
 (let ((?x7654 (* 2.0 l_0_5_49)))
 (let ((?x7655 (* ?x7654 l_0_5_56)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7414 (* ?x7003 l_0_5_42)))
 (let ((?x7650 (* 8.0 l_0_5_33)))
 (let ((?x7651 (* ?x7650 l_0_5_35)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x7412 (* ?x6998 l_0_5_41)))
 (let ((?x7646 (* 8.0 l_0_5_32)))
 (let ((?x7647 (* ?x7646 l_0_5_34)))
 (let ((?x7201 (* 2.0 l_0_5_3)))
 (let ((?x7202 (* ?x7201 l_0_5_5)))
 (let ((?x7198 (* 2.0 l_0_5_2)))
 (let ((?x7199 (* ?x7198 l_0_5_4)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x7407 (* ?x6993 l_0_5_27)))
 (let ((?x7640 (* 8.0 l_0_5_18)))
 (let ((?x7641 (* ?x7640 l_0_5_20)))
 (let ((?x6989 (* 4.0 l_0_5_17)))
 (let ((?x7405 (* ?x6989 l_0_5_26)))
 (let ((?x7636 (* 8.0 l_0_5_17)))
 (let ((?x7637 (* ?x7636 l_0_5_19)))
 (let ((?x7633 (* 2.0 l_0_5_13)))
 (let ((?x7634 (* ?x7633 l_0_5_6)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7631 (* ?x7260 l_0_5_5)))
 (let ((?x4040 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x7630 (+ (- ?x4040 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 2.0 l_0_5_11) l_0_5_4))))
 (let ((?x7644 (- (+ (+ (+ (+ (+ (+ ?x7630 ?x7631) ?x7634) ?x7637) ?x7405) ?x7641) ?x7407) ?x7199)))
 (let ((?x7659 (+ (+ (- (- (- (- (- ?x7644 ?x7202) ?x7647) ?x7412) ?x7651) ?x7414) ?x7655) ?x7658)))
 (let ((?x7668 (- (- (+ ?x7659 ?x7661) (* (* 2.0 l_0_5_79) l_0_5_86)) (* (* 2.0 l_0_5_80) l_0_5_87))))
 (= (- ?x7668 (* (* 2.0 l_0_5_81) l_0_5_88)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7763 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7760 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7757 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7754 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7275 (* ?x7213 l_0_5_57)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7273 (* ?x7210 l_0_5_56)))
 (let ((?x7650 (* 8.0 l_0_5_33)))
 (let ((?x7749 (* ?x7650 l_0_5_42)))
 (let ((?x7747 (* ?x7650 l_0_5_38)))
 (let ((?x7646 (* 8.0 l_0_5_32)))
 (let ((?x7745 (* ?x7646 l_0_5_41)))
 (let ((?x7743 (* ?x7646 l_0_5_37)))
 (let ((?x7201 (* 2.0 l_0_5_3)))
 (let ((?x7320 (* ?x7201 l_0_5_8)))
 (let ((?x7198 (* 2.0 l_0_5_2)))
 (let ((?x7318 (* ?x7198 l_0_5_7)))
 (let ((?x7640 (* 8.0 l_0_5_18)))
 (let ((?x7739 (* ?x7640 l_0_5_27)))
 (let ((?x7737 (* ?x7640 l_0_5_23)))
 (let ((?x7636 (* 8.0 l_0_5_17)))
 (let ((?x7735 (* ?x7636 l_0_5_26)))
 (let ((?x7733 (* ?x7636 l_0_5_22)))
 (let ((?x7633 (* 2.0 l_0_5_13)))
 (let ((?x7731 (* ?x7633 l_0_5_9)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7729 (* ?x7260 l_0_5_8)))
 (let ((?x7257 (* 2.0 l_0_5_11)))
 (let ((?x7727 (* ?x7257 l_0_5_7)))
 (let ((?x7720 (- (* (* 2.0 l_0_5_10) l_0_5_14) (* (* 2.0 l_0_5_100) l_0_5_104))))
 (let ((?x7724 (- (- ?x7720 (* (* 2.0 l_0_5_101) l_0_5_97)) (* (* 2.0 l_0_5_102) l_0_5_98))))
 (let ((?x7732 (+ (+ (+ (- ?x7724 (* (* 2.0 l_0_5_103) l_0_5_99)) ?x7727) ?x7729) ?x7731)))
 (let ((?x7744 (- (- (- (+ (+ (+ (+ ?x7732 ?x7733) ?x7735) ?x7737) ?x7739) ?x7318) ?x7320) ?x7743)))
 (let ((?x7758 (+ (+ (- (- (- (- (- ?x7744 ?x7745) ?x7747) ?x7749) ?x7273) ?x7275) ?x7754) ?x7757)))
 (let ((?x7770 (- (- (+ (+ ?x7758 ?x7760) ?x7763) (* (* 2.0 l_0_5_62) l_0_5_71)) (* (* 2.0 l_0_5_63) l_0_5_72))))
 (let ((?x7776 (- (- ?x7770 (* (* 2.0 l_0_5_82) l_0_5_86)) (* (* 2.0 l_0_5_83) l_0_5_87))))
 (let ((?x7782 (- (- ?x7776 (* (* 2.0 l_0_5_84) l_0_5_88)) (* (* 2.0 l_0_5_85) l_0_5_89))))
 (= ?x7782 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7883 (* l_0_5_90 l_0_5_90)))
 (let ((?x7881 (* l_0_5_89 l_0_5_89)))
 (let ((?x7879 (* l_0_5_88 l_0_5_88)))
 (let ((?x7877 (* l_0_5_87 l_0_5_87)))
 (let ((?x7875 (* l_0_5_86 l_0_5_86)))
 (let ((?x7650 (* 8.0 l_0_5_33)))
 (let ((?x7749 (* ?x7650 l_0_5_42)))
 (let ((?x7646 (* 8.0 l_0_5_32)))
 (let ((?x7745 (* ?x7646 l_0_5_41)))
 (let ((?x7640 (* 8.0 l_0_5_18)))
 (let ((?x7739 (* ?x7640 l_0_5_27)))
 (let ((?x7636 (* 8.0 l_0_5_17)))
 (let ((?x7735 (* ?x7636 l_0_5_26)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7261 (* ?x7260 l_0_5_3)))
 (let ((?x7257 (* 2.0 l_0_5_11)))
 (let ((?x7258 (* ?x7257 l_0_5_2)))
 (let ((?x7837 (* l_0_5_105 l_0_5_105)))
 (let ((?x7835 (* l_0_5_104 l_0_5_104)))
 (let ((?x7833 (* l_0_5_103 l_0_5_103)))
 (let ((?x7834 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x7833)))
 (let ((?x7842 (+ (- (- (- ?x7834 ?x7835) ?x7837) ?x7258) (* 1.0 (* l_0_5_11 l_0_5_11)))))
 (let ((?x7849 (+ (+ (- ?x7842 ?x7261) (* 1.0 (* l_0_5_12 l_0_5_12))) (* 1.0 (* l_0_5_13 l_0_5_13)))))
 (let ((?x7855 (+ (+ ?x7849 (* 1.0 (* l_0_5_14 l_0_5_14))) (* 1.0 (* l_0_5_15 l_0_5_15)))))
 (let ((?x7862 (+ (- (- (+ (+ ?x7855 ?x7735) ?x7739) ?x7745) ?x7749) (* 1.0 (* l_0_5_56 l_0_5_56)))))
 (let ((?x7868 (+ (+ ?x7862 (* 1.0 (* l_0_5_57 l_0_5_57))) (* 1.0 (* l_0_5_58 l_0_5_58)))))
 (let ((?x7874 (+ (+ ?x7868 (* 1.0 (* l_0_5_59 l_0_5_59))) (* 1.0 (* l_0_5_60 l_0_5_60)))))
 (= (- (- (- (- (- ?x7874 ?x7875) ?x7877) ?x7879) ?x7881) ?x7883) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7023 (* l_0_5_6 l_0_5_6)))
 (let ((?x7014 (* l_0_5_5 l_0_5_5)))
 (let ((?x7008 (* l_0_5_4 l_0_5_4)))
 (let ((?x7471 (* 4.0 l_0_5_36)))
 (let ((?x7939 (* ?x7471 l_0_5_36)))
 (let ((?x7472 (* ?x7471 l_0_5_43)))
 (let ((?x7468 (* 4.0 l_0_5_35)))
 (let ((?x7936 (* ?x7468 l_0_5_35)))
 (let ((?x7469 (* ?x7468 l_0_5_42)))
 (let ((?x7465 (* 4.0 l_0_5_34)))
 (let ((?x7933 (* ?x7465 l_0_5_34)))
 (let ((?x7466 (* ?x7465 l_0_5_41)))
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x7382 (* ?x7207 l_0_5_42)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x7380 (* ?x7204 l_0_5_41)))
 (let ((?x7927 (* l_0_5_21 l_0_5_21)))
 (let ((?x7928 (* 4.0 ?x7927)))
 (let ((?x7459 (* 4.0 l_0_5_21)))
 (let ((?x7460 (* ?x7459 l_0_5_28)))
 (let ((?x7923 (* l_0_5_20 l_0_5_20)))
 (let ((?x7924 (* 4.0 ?x7923)))
 (let ((?x7456 (* 4.0 l_0_5_20)))
 (let ((?x7457 (* ?x7456 l_0_5_27)))
 (let ((?x7919 (* l_0_5_19 l_0_5_19)))
 (let ((?x7920 (* 4.0 ?x7919)))
 (let ((?x7453 (* 4.0 l_0_5_19)))
 (let ((?x7454 (* ?x7453 l_0_5_26)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x7374 (* ?x7115 l_0_5_27)))
 (let ((?x7922 (+ (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_26) ?x7374) ?x7454) ?x7920) ?x7457)))
 (let ((?x7934 (- (- (+ (+ (+ (+ (+ ?x7922 ?x7924) ?x7460) ?x7928) ?x7380) ?x7382) ?x7466) ?x7933)))
 (let ((?x7943 (- (- (- (- (- (- (- ?x7934 ?x7469) ?x7936) ?x7472) ?x7939) ?x7008) ?x7014) ?x7023)))
 (= ?x7943 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7989 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7660 (* 2.0 l_0_5_51)))
 (let ((?x7661 (* ?x7660 l_0_5_58)))
 (let ((?x7657 (* 2.0 l_0_5_50)))
 (let ((?x7658 (* ?x7657 l_0_5_57)))
 (let ((?x7984 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x7654 (* 2.0 l_0_5_49)))
 (let ((?x7655 (* ?x7654 l_0_5_56)))
 (let ((?x7531 (* 4.0 l_0_5_40)))
 (let ((?x7532 (* ?x7531 l_0_5_44)))
 (let ((?x7979 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7528 (* 4.0 l_0_5_39)))
 (let ((?x7529 (* ?x7528 l_0_5_43)))
 (let ((?x7525 (* 4.0 l_0_5_38)))
 (let ((?x7526 (* ?x7525 l_0_5_42)))
 (let ((?x7522 (* 4.0 l_0_5_37)))
 (let ((?x7523 (* ?x7522 l_0_5_41)))
 (let ((?x7970 (* 8.0 l_0_5_36)))
 (let ((?x7973 (* ?x7970 l_0_5_43)))
 (let ((?x7971 (* ?x7970 l_0_5_39)))
 (let ((?x7965 (* 8.0 l_0_5_35)))
 (let ((?x7968 (* ?x7965 l_0_5_42)))
 (let ((?x7966 (* ?x7965 l_0_5_38)))
 (let ((?x7960 (* 8.0 l_0_5_34)))
 (let ((?x7963 (* ?x7960 l_0_5_41)))
 (let ((?x7961 (* ?x7960 l_0_5_37)))
 (let ((?x7516 (* (* 4.0 l_0_5_25) l_0_5_29)))
 (let ((?x7513 (* (* 4.0 l_0_5_24) l_0_5_28)))
 (let ((?x7510 (* (* 4.0 l_0_5_23) l_0_5_27)))
 (let ((?x7507 (* (* 4.0 l_0_5_22) l_0_5_26)))
 (let ((?x7951 (* 8.0 l_0_5_21)))
 (let ((?x7954 (* ?x7951 l_0_5_28)))
 (let ((?x7952 (* ?x7951 l_0_5_24)))
 (let ((?x4453 (* 8.0 l_0_5_20)))
 (let ((?x4451 (* ?x4453 l_0_5_27)))
 (let ((?x4448 (* ?x4453 l_0_5_23)))
 (let ((?x4477 (* 8.0 l_0_5_19)))
 (let ((?x4480 (* ?x4477 l_0_5_26)))
 (let ((?x4479 (* ?x4477 l_0_5_22)))
 (let ((?x7957 (+ (+ (+ (+ (+ (+ (+ ?x4479 ?x4480) ?x4448) ?x4451) ?x7952) ?x7954) ?x7507) ?x7510)))
 (let ((?x7972 (- (- (- (- (- (+ (+ ?x7957 ?x7513) ?x7516) ?x7961) ?x7963) ?x7966) ?x7968) ?x7971)))
 (let ((?x7982 (- (- (- (- (- (- (- ?x7972 ?x7973) ?x7523) ?x7526) ?x7529) ?x7979) ?x7532) ?x7655)))
 (let ((?x7993 (- (- (- (- (- ?x7982 ?x7984) ?x7658) ?x7661) ?x7989) (* (* 2.0 l_0_5_64) l_0_5_71))))
 (let ((?x7999 (- (- ?x7993 (* (* 2.0 l_0_5_65) l_0_5_72)) (* (* 2.0 l_0_5_66) l_0_5_73))))
 (= ?x7999 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7970 (* 8.0 l_0_5_36)))
 (let ((?x7973 (* ?x7970 l_0_5_43)))
 (let ((?x7965 (* 8.0 l_0_5_35)))
 (let ((?x7968 (* ?x7965 l_0_5_42)))
 (let ((?x7960 (* 8.0 l_0_5_34)))
 (let ((?x7963 (* ?x7960 l_0_5_41)))
 (let ((?x4027 (* l_0_5_30 l_0_5_30)))
 (let ((?x4030 (* 2.0 ?x4027)))
 (let ((?x4018 (* l_0_5_29 l_0_5_29)))
 (let ((?x4021 (* 2.0 ?x4018)))
 (let ((?x4008 (* l_0_5_28 l_0_5_28)))
 (let ((?x4009 (* 2.0 ?x4008)))
 (let ((?x4007 (* l_0_5_27 l_0_5_27)))
 (let ((?x7623 (* 2.0 ?x4007)))
 (let ((?x7618 (* l_0_5_26 l_0_5_26)))
 (let ((?x7619 (* 2.0 ?x7618)))
 (let ((?x7951 (* 8.0 l_0_5_21)))
 (let ((?x7954 (* ?x7951 l_0_5_28)))
 (let ((?x4453 (* 8.0 l_0_5_20)))
 (let ((?x4451 (* ?x4453 l_0_5_27)))
 (let ((?x4477 (* 8.0 l_0_5_19)))
 (let ((?x4480 (* ?x4477 l_0_5_26)))
 (let ((?x7633 (* 2.0 l_0_5_13)))
 (let ((?x7634 (* ?x7633 l_0_5_6)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7631 (* ?x7260 l_0_5_5)))
 (let ((?x8044 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x7631) ?x7634) ?x4480) ?x4451)))
 (let ((?x8051 (- (+ (+ (+ (+ (+ (+ ?x8044 ?x7954) ?x7619) ?x7623) ?x4009) ?x4021) ?x4030) ?x7963)))
 (let ((?x8059 (- (- (- (- ?x8051 ?x7968) ?x7973) (* (* 2.0 l_0_5_41) l_0_5_41)) (* (* 2.0 l_0_5_42) l_0_5_42))))
 (let ((?x8065 (- (- ?x8059 (* (* 2.0 l_0_5_43) l_0_5_43)) (* (* 2.0 l_0_5_44) l_0_5_44))))
 (= (- ?x8065 (* (* 2.0 l_0_5_45) l_0_5_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8124 (* l_0_5_9 l_0_5_9)))
 (let ((?x8122 (* l_0_5_8 l_0_5_8)))
 (let ((?x8117 (* l_0_5_7 l_0_5_7)))
 (let ((?x7763 (* (* 2.0 l_0_5_55) l_0_5_59)))
 (let ((?x7760 (* (* 2.0 l_0_5_54) l_0_5_58)))
 (let ((?x7757 (* (* 2.0 l_0_5_53) l_0_5_57)))
 (let ((?x7754 (* (* 2.0 l_0_5_52) l_0_5_56)))
 (let ((?x7531 (* 4.0 l_0_5_40)))
 (let ((?x8102 (* ?x7531 l_0_5_40)))
 (let ((?x8100 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x7528 (* 4.0 l_0_5_39)))
 (let ((?x8097 (* ?x7528 l_0_5_39)))
 (let ((?x8095 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x7525 (* 4.0 l_0_5_38)))
 (let ((?x8092 (* ?x7525 l_0_5_38)))
 (let ((?x8090 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x7522 (* 4.0 l_0_5_37)))
 (let ((?x8087 (* ?x7522 l_0_5_37)))
 (let ((?x8085 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x8081 (* l_0_5_25 l_0_5_25)))
 (let ((?x8082 (* 4.0 ?x8081)))
 (let ((?x8079 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x8075 (* l_0_5_24 l_0_5_24)))
 (let ((?x8076 (* 4.0 ?x8075)))
 (let ((?x4753 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x4756 (* l_0_5_23 l_0_5_23)))
 (let ((?x4757 (* 4.0 ?x4756)))
 (let ((?x4773 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x4783 (* l_0_5_22 l_0_5_22)))
 (let ((?x4780 (* 4.0 ?x4783)))
 (let ((?x4782 (+ (+ (* (- l_0_5_10) l_0_5_10) (* (* 8.0 l_0_5_22) l_0_5_26)) ?x4780)))
 (let ((?x8086 (- (+ (+ (+ (+ (+ (+ ?x4782 ?x4773) ?x4757) ?x4753) ?x8076) ?x8079) ?x8082) ?x8085)))
 (let ((?x8103 (- (- (- (- (- (- (- ?x8086 ?x8087) ?x8090) ?x8092) ?x8095) ?x8097) ?x8100) ?x8102)))
 (let ((?x8110 (- (- (- (- (- ?x8103 ?x7754) ?x7757) ?x7760) ?x7763) (* (* 2.0 l_0_5_67) l_0_5_71))))
 (let ((?x8116 (- (- ?x8110 (* (* 2.0 l_0_5_68) l_0_5_72)) (* (* 2.0 l_0_5_69) l_0_5_73))))
 (let ((?x8125 (- (- (- (- ?x8116 ?x8117) (* (* 2.0 l_0_5_70) l_0_5_74)) ?x8122) ?x8124)))
 (= ?x8125 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8244 (* l_0_5_75 l_0_5_75)))
 (let ((?x8242 (* l_0_5_74 l_0_5_74)))
 (let ((?x8240 (* l_0_5_73 l_0_5_73)))
 (let ((?x8238 (* l_0_5_72 l_0_5_72)))
 (let ((?x8236 (* l_0_5_71 l_0_5_71)))
 (let ((?x7872 (* l_0_5_60 l_0_5_60)))
 (let ((?x7869 (* l_0_5_59 l_0_5_59)))
 (let ((?x7866 (* l_0_5_58 l_0_5_58)))
 (let ((?x7863 (* l_0_5_57 l_0_5_57)))
 (let ((?x7860 (* l_0_5_56 l_0_5_56)))
 (let ((?x8229 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x8226 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x8223 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x8220 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x8217 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x8100 (* (* 8.0 l_0_5_40) l_0_5_44)))
 (let ((?x8095 (* (* 8.0 l_0_5_39) l_0_5_43)))
 (let ((?x8090 (* (* 8.0 l_0_5_38) l_0_5_42)))
 (let ((?x8085 (* (* 8.0 l_0_5_37) l_0_5_41)))
 (let ((?x4027 (* l_0_5_30 l_0_5_30)))
 (let ((?x8210 (* 4.0 ?x4027)))
 (let ((?x4018 (* l_0_5_29 l_0_5_29)))
 (let ((?x8208 (* 4.0 ?x4018)))
 (let ((?x4008 (* l_0_5_28 l_0_5_28)))
 (let ((?x8206 (* 4.0 ?x4008)))
 (let ((?x4007 (* l_0_5_27 l_0_5_27)))
 (let ((?x8204 (* 4.0 ?x4007)))
 (let ((?x7618 (* l_0_5_26 l_0_5_26)))
 (let ((?x8202 (* 4.0 ?x7618)))
 (let ((?x8079 (* (* 8.0 l_0_5_25) l_0_5_29)))
 (let ((?x4753 (* (* 8.0 l_0_5_24) l_0_5_28)))
 (let ((?x4773 (* (* 8.0 l_0_5_23) l_0_5_27)))
 (let ((?x4802 (* (* 8.0 l_0_5_22) l_0_5_26)))
 (let ((?x7633 (* 2.0 l_0_5_13)))
 (let ((?x7731 (* ?x7633 l_0_5_9)))
 (let ((?x7260 (* 2.0 l_0_5_12)))
 (let ((?x7729 (* ?x7260 l_0_5_8)))
 (let ((?x7257 (* 2.0 l_0_5_11)))
 (let ((?x7727 (* ?x7257 l_0_5_7)))
 (let ((?x8198 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x7727) ?x7729) ?x7731) ?x4802)))
 (let ((?x8209 (+ (+ (+ (+ (+ (+ (+ ?x8198 ?x4773) ?x4753) ?x8079) ?x8202) ?x8204) ?x8206) ?x8208)))
 (let ((?x8221 (- (- (- (- (- (- (+ ?x8209 ?x8210) ?x8085) ?x8090) ?x8095) ?x8100) ?x8217) ?x8220)))
 (let ((?x8234 (- (- (- (- (- (- (- ?x8221 ?x8223) ?x8226) ?x8229) ?x7860) ?x7863) ?x7866) ?x7869)))
 (= (- (- (- (- (- (- ?x8234 ?x7872) ?x8236) ?x8238) ?x8240) ?x8242) ?x8244) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8229 (* (* 4.0 l_0_5_45) l_0_5_45)))
 (let ((?x8226 (* (* 4.0 l_0_5_44) l_0_5_44)))
 (let ((?x8223 (* (* 4.0 l_0_5_43) l_0_5_43)))
 (let ((?x8220 (* (* 4.0 l_0_5_42) l_0_5_42)))
 (let ((?x8217 (* (* 4.0 l_0_5_41) l_0_5_41)))
 (let ((?x4027 (* l_0_5_30 l_0_5_30)))
 (let ((?x8210 (* 4.0 ?x4027)))
 (let ((?x4018 (* l_0_5_29 l_0_5_29)))
 (let ((?x8208 (* 4.0 ?x4018)))
 (let ((?x4008 (* l_0_5_28 l_0_5_28)))
 (let ((?x8206 (* 4.0 ?x4008)))
 (let ((?x4007 (* l_0_5_27 l_0_5_27)))
 (let ((?x8204 (* 4.0 ?x4007)))
 (let ((?x7618 (* l_0_5_26 l_0_5_26)))
 (let ((?x8202 (* 4.0 ?x7618)))
 (let ((?x7853 (* l_0_5_15 l_0_5_15)))
 (let ((?x7850 (* l_0_5_14 l_0_5_14)))
 (let ((?x7847 (* l_0_5_13 l_0_5_13)))
 (let ((?x5085 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x7847) ?x7850)))
 (let ((?x8260 (- (+ (+ (+ (+ (+ (- ?x5085 ?x7853) ?x8202) ?x8204) ?x8206) ?x8208) ?x8210) ?x8217)))
 (= (- (- (- (- ?x8260 ?x8220) ?x8223) ?x8226) ?x8229) 0.0))))))))))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x5301 (* ?x7122 l_0_5_49)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x7004 (* ?x7003 l_0_5_35)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x6999 (* ?x6998 l_0_5_34)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x7073 (* ?x7072 l_0_5_32)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x6994 (* ?x6993 l_0_5_20)))
 (let ((?x6989 (* 4.0 l_0_5_17)))
 (let ((?x6990 (* ?x6989 l_0_5_19)))
 (let ((?x7067 (* 4.0 l_0_5_16)))
 (let ((?x7068 (* ?x7067 l_0_5_17)))
 (let ((?x5306 (- (- (- (+ (* (* 2.0 l_0_5_1) l_0_5_4) ?x7068) ?x6990) ?x6994) ?x7073)))
 (let ((?x5243 (- (+ (+ (+ ?x5306 ?x6999) ?x7004) ?x5301) (* (* 2.0 l_0_5_76) l_0_5_79))))
 (= (- ?x5243 (* (* 2.0 l_0_5_91) l_0_5_94)) 0.0))))))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x8285 (* ?x7122 l_0_5_52)))
 (let ((?x7123 (* ?x7122 l_0_5_47)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x8282 (* ?x7003 l_0_5_38)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x8280 (* ?x6998 l_0_5_37)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7410 (* ?x7409 l_0_5_32)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x8277 (* ?x6993 l_0_5_23)))
 (let ((?x6989 (* 4.0 l_0_5_17)))
 (let ((?x8275 (* ?x6989 l_0_5_22)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7403 (* ?x7402 l_0_5_17)))
 (let ((?x8279 (- (- (- (+ (* (* 2.0 l_0_5_1) l_0_5_7) ?x7403) ?x8275) ?x8277) ?x7410)))
 (let ((?x8288 (- (+ (- (+ (+ ?x8279 ?x8280) ?x8282) ?x7123) ?x8285) (* (* 2.0 l_0_5_61) l_0_5_62))))
 (let ((?x8292 (- (- ?x8288 (* (* 2.0 l_0_5_76) l_0_5_82)) (* (* 2.0 l_0_5_91) l_0_5_97))))
 (= ?x8292 0.0))))))))))))))))))))
(assert
 (let ((?x7989 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x7660 (* 2.0 l_0_5_51)))
 (let ((?x8328 (* ?x7660 l_0_5_54)))
 (let ((?x7657 (* 2.0 l_0_5_50)))
 (let ((?x8326 (* ?x7657 l_0_5_53)))
 (let ((?x7984 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x7654 (* 2.0 l_0_5_49)))
 (let ((?x8323 (* ?x7654 l_0_5_52)))
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7214 (* ?x7213 l_0_5_50)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7211 (* ?x7210 l_0_5_49)))
 (let ((?x7979 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x7003 (* 4.0 l_0_5_33)))
 (let ((?x8282 (* ?x7003 l_0_5_38)))
 (let ((?x7650 (* 8.0 l_0_5_33)))
 (let ((?x7651 (* ?x7650 l_0_5_35)))
 (let ((?x6998 (* 4.0 l_0_5_32)))
 (let ((?x8280 (* ?x6998 l_0_5_37)))
 (let ((?x7646 (* 8.0 l_0_5_32)))
 (let ((?x7647 (* ?x7646 l_0_5_34)))
 (let ((?x6993 (* 4.0 l_0_5_18)))
 (let ((?x8277 (* ?x6993 l_0_5_23)))
 (let ((?x7640 (* 8.0 l_0_5_18)))
 (let ((?x7641 (* ?x7640 l_0_5_20)))
 (let ((?x6989 (* 4.0 l_0_5_17)))
 (let ((?x8275 (* ?x6989 l_0_5_22)))
 (let ((?x7636 (* 8.0 l_0_5_17)))
 (let ((?x7637 (* ?x7636 l_0_5_19)))
 (let ((?x8319 (- (- (- (- (+ (+ (+ ?x7637 ?x8275) ?x7641) ?x8277) ?x7647) ?x8280) ?x7651) ?x8282)))
 (let ((?x8329 (+ (+ (+ (+ (- (- (+ ?x8319 ?x7979) ?x7211) ?x7214) ?x8323) ?x7984) ?x8326) ?x8328)))
 (let ((?x8334 (- (- (+ ?x8329 ?x7989) (* (* 2.0 l_0_5_62) l_0_5_64)) (* (* 2.0 l_0_5_63) l_0_5_65))))
 (let ((?x8338 (- (- ?x8334 (* (* 2.0 l_0_5_79) l_0_5_82)) (* (* 2.0 l_0_5_80) l_0_5_83))))
 (let ((?x8343 (- (- ?x8338 (* (* 2.0 l_0_5_81) l_0_5_84)) (* (* 2.0 l_0_5_94) l_0_5_97))))
 (let ((?x8349 (- (- ?x8343 (* (* 2.0 l_0_5_95) l_0_5_98)) (* (* 2.0 l_0_5_96) l_0_5_99))))
 (= ?x8349 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8402 (* l_0_5_99 l_0_5_99)))
 (let ((?x8400 (* l_0_5_98 l_0_5_98)))
 (let ((?x8398 (* l_0_5_97 l_0_5_97)))
 (let ((?x8394 (* l_0_5_85 l_0_5_85)))
 (let ((?x8392 (* l_0_5_84 l_0_5_84)))
 (let ((?x8390 (* l_0_5_83 l_0_5_83)))
 (let ((?x8388 (* l_0_5_82 l_0_5_82)))
 (let ((?x7213 (* 2.0 l_0_5_48)))
 (let ((?x7327 (* ?x7213 l_0_5_53)))
 (let ((?x7210 (* 2.0 l_0_5_47)))
 (let ((?x7324 (* ?x7210 l_0_5_52)))
 (let ((?x7650 (* 8.0 l_0_5_33)))
 (let ((?x7747 (* ?x7650 l_0_5_38)))
 (let ((?x7646 (* 8.0 l_0_5_32)))
 (let ((?x7743 (* ?x7646 l_0_5_37)))
 (let ((?x7640 (* 8.0 l_0_5_18)))
 (let ((?x7737 (* ?x7640 l_0_5_23)))
 (let ((?x7636 (* 8.0 l_0_5_17)))
 (let ((?x7733 (* ?x7636 l_0_5_22)))
 (let ((?x5769 (+ (- (* 1.0 (* l_0_5_10 l_0_5_10)) (* l_0_5_100 l_0_5_100)) ?x7733)))
 (let ((?x8370 (+ (- (- (- (- (+ ?x5769 ?x7737) ?x7743) ?x7747) ?x7324) ?x7327) (* 1.0 (* l_0_5_52 l_0_5_52)))))
 (let ((?x8376 (+ (+ ?x8370 (* 1.0 (* l_0_5_53 l_0_5_53))) (* 1.0 (* l_0_5_54 l_0_5_54)))))
 (let ((?x8381 (- (+ ?x8376 (* 1.0 (* l_0_5_55 l_0_5_55))) (* (* 2.0 l_0_5_62) l_0_5_67))))
 (let ((?x8385 (+ (- ?x8381 (* (* 2.0 l_0_5_63) l_0_5_68)) (* 1.0 (* l_0_5_7 l_0_5_7)))))
 (let ((?x8393 (- (- (- (+ ?x8385 (* 1.0 (* l_0_5_8 l_0_5_8))) ?x8388) ?x8390) ?x8392)))
 (let ((?x8401 (- (- (+ (- ?x8393 ?x8394) (* 1.0 (* l_0_5_9 l_0_5_9))) ?x8398) ?x8400)))
 (= (- ?x8401 ?x8402) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4583 (* l_0_5_36 l_0_5_36)))
 (let ((?x4546 (* l_0_5_35 l_0_5_35)))
 (let ((?x4504 (* l_0_5_34 l_0_5_34)))
 (let ((?x7392 (* l_0_5_31 l_0_5_31)))
 (let ((?x7927 (* l_0_5_21 l_0_5_21)))
 (let ((?x7923 (* l_0_5_20 l_0_5_20)))
 (let ((?x8428 (+ (+ (+ (* (- l_0_5_16) l_0_5_16) (* l_0_5_19 l_0_5_19)) ?x7923) ?x7927)))
 (= (- (- (- (+ ?x8428 ?x7392) ?x4504) ?x4546) ?x4583) 0.0)))))))))
(assert
 (let ((?x4583 (* l_0_5_36 l_0_5_36)))
 (let ((?x8461 (* 2.0 ?x4583)))
 (let ((?x4546 (* l_0_5_35 l_0_5_35)))
 (let ((?x8459 (* 2.0 ?x4546)))
 (let ((?x4504 (* l_0_5_34 l_0_5_34)))
 (let ((?x8457 (* 2.0 ?x4504)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x8455 (* ?x7072 l_0_5_34)))
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8453 (* ?x8452 l_0_5_32)))
 (let ((?x8442 (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) (* (* 4.0 l_0_5_16) l_0_5_19))))
 (let ((?x8448 (- (- ?x8442 (* (* 2.0 l_0_5_19) l_0_5_19)) (* (* 2.0 l_0_5_20) l_0_5_20))))
 (let ((?x8458 (+ (- (+ (- ?x8448 (* (* 2.0 l_0_5_21) l_0_5_21)) ?x8453) ?x8455) ?x8457)))
 (= (+ (+ ?x8458 ?x8459) ?x8461) 0.0)))))))))))))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8486 (* ?x8452 l_0_5_34)))
 (= (+ (* (* (- 2.0) l_0_5_16) l_0_5_19) ?x8486) 0.0))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8492 (* ?x8452 l_0_5_37)))
 (= (+ (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x8492) 0.0))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8500 (* ?x8452 l_0_5_41)))
 (= (+ (* (* (- 2.0) l_0_5_16) l_0_5_26) ?x8500) 0.0))))
(assert
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x8515 (* ?x7207 l_0_5_35)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x8513 (* ?x7204 l_0_5_34)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x8508 (* ?x7115 l_0_5_20)))
 (let ((?x8510 (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_19) ?x8508) (* 2.0 (* l_0_5_19 l_0_5_19)))))
 (let ((?x8512 (+ (+ ?x8510 (* 2.0 (* l_0_5_20 l_0_5_20))) (* 2.0 (* l_0_5_21 l_0_5_21)))))
 (let ((?x8522 (- (- (+ (+ ?x8512 ?x8513) ?x8515) (* (* 2.0 l_0_5_34) l_0_5_34)) (* (* 2.0 l_0_5_35) l_0_5_35))))
 (= (- ?x8522 (* (* 2.0 l_0_5_36) l_0_5_36)) 0.0)))))))))))
(assert
 (let ((?x8575 (* l_0_5_66 l_0_5_66)))
 (let ((?x8573 (* l_0_5_65 l_0_5_65)))
 (let ((?x8571 (* l_0_5_64 l_0_5_64)))
 (let ((?x7020 (* l_0_5_51 l_0_5_51)))
 (let ((?x7017 (* l_0_5_50 l_0_5_50)))
 (let ((?x7011 (* l_0_5_49 l_0_5_49)))
 (let ((?x7471 (* 4.0 l_0_5_36)))
 (let ((?x7939 (* ?x7471 l_0_5_36)))
 (let ((?x8565 (* ?x7471 l_0_5_39)))
 (let ((?x7468 (* 4.0 l_0_5_35)))
 (let ((?x7936 (* ?x7468 l_0_5_35)))
 (let ((?x8562 (* ?x7468 l_0_5_38)))
 (let ((?x7465 (* 4.0 l_0_5_34)))
 (let ((?x7933 (* ?x7465 l_0_5_34)))
 (let ((?x8559 (* ?x7465 l_0_5_37)))
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x8557 (* ?x7207 l_0_5_38)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x8555 (* ?x7204 l_0_5_37)))
 (let ((?x7927 (* l_0_5_21 l_0_5_21)))
 (let ((?x7928 (* 4.0 ?x7927)))
 (let ((?x7459 (* 4.0 l_0_5_21)))
 (let ((?x8552 (* ?x7459 l_0_5_24)))
 (let ((?x7923 (* l_0_5_20 l_0_5_20)))
 (let ((?x7924 (* 4.0 ?x7923)))
 (let ((?x7456 (* 4.0 l_0_5_20)))
 (let ((?x8549 (* ?x7456 l_0_5_23)))
 (let ((?x7919 (* l_0_5_19 l_0_5_19)))
 (let ((?x7920 (* 4.0 ?x7919)))
 (let ((?x7453 (* 4.0 l_0_5_19)))
 (let ((?x8546 (* ?x7453 l_0_5_22)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x8544 (* ?x7115 l_0_5_23)))
 (let ((?x8550 (+ (+ (+ (- (* (* (- 2.0) l_0_5_17) l_0_5_22) ?x8544) ?x8546) ?x7920) ?x8549)))
 (let ((?x8561 (- (- (+ (+ (+ (+ (+ ?x8550 ?x7924) ?x8552) ?x7928) ?x8555) ?x8557) ?x8559) ?x7933)))
 (let ((?x8570 (- (- (- (- (- (- (- ?x8561 ?x8562) ?x7936) ?x8565) ?x7939) ?x7011) ?x7017) ?x7020)))
 (= (- (- (- ?x8570 ?x8571) ?x8573) ?x8575) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4583 (* l_0_5_36 l_0_5_36)))
 (let ((?x4546 (* l_0_5_35 l_0_5_35)))
 (let ((?x4504 (* l_0_5_34 l_0_5_34)))
 (let ((?x7927 (* l_0_5_21 l_0_5_21)))
 (let ((?x8610 (+ (- (- (* (- l_0_5_19) l_0_5_19) (* l_0_5_20 l_0_5_20)) ?x7927) ?x4504)))
 (= (+ (+ ?x8610 ?x4546) ?x4583) 0.0)))))))
(assert
 (let ((?x8523 (* 2.0 l_0_5_36)))
 (let ((?x8627 (* ?x8523 l_0_5_39)))
 (let ((?x8520 (* 2.0 l_0_5_35)))
 (let ((?x8625 (* ?x8520 l_0_5_38)))
 (let ((?x8517 (* 2.0 l_0_5_34)))
 (let ((?x8623 (* ?x8517 l_0_5_37)))
 (let ((?x8449 (* 2.0 l_0_5_21)))
 (let ((?x8621 (* ?x8449 l_0_5_24)))
 (let ((?x8446 (* 2.0 l_0_5_20)))
 (let ((?x8619 (* ?x8446 l_0_5_23)))
 (let ((?x8626 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_22) ?x8619) ?x8621) ?x8623) ?x8625)))
 (= (+ ?x8626 ?x8627) 0.0)))))))))))))
(assert
 (let ((?x8523 (* 2.0 l_0_5_36)))
 (let ((?x999 (* ?x8523 l_0_5_43)))
 (let ((?x8520 (* 2.0 l_0_5_35)))
 (let ((?x927 (* ?x8520 l_0_5_42)))
 (let ((?x8517 (* 2.0 l_0_5_34)))
 (let ((?x5317 (* ?x8517 l_0_5_41)))
 (let ((?x8449 (* 2.0 l_0_5_21)))
 (let ((?x5305 (* ?x8449 l_0_5_28)))
 (let ((?x8446 (* 2.0 l_0_5_20)))
 (let ((?x932 (* ?x8446 l_0_5_27)))
 (let ((?x990 (+ (+ (- (- (* (* (- 2.0) l_0_5_19) l_0_5_26) ?x932) ?x5305) ?x5317) ?x927)))
 (= (+ ?x990 ?x999) 0.0)))))))))))))
(assert
 (let ((?x4846 (* l_0_5_40 l_0_5_40)))
 (let ((?x3322 (* l_0_5_39 l_0_5_39)))
 (let ((?x8147 (* l_0_5_38 l_0_5_38)))
 (let ((?x8136 (* l_0_5_37 l_0_5_37)))
 (let ((?x8081 (* l_0_5_25 l_0_5_25)))
 (let ((?x8075 (* l_0_5_24 l_0_5_24)))
 (let ((?x8653 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x8075) ?x8081)))
 (= (+ (+ (+ (+ ?x8653 ?x8136) ?x8147) ?x3322) ?x4846) 0.0)))))))))
(assert
 (let ((?x8688 (* 2.0 l_0_5_40)))
 (let ((?x8689 (* ?x8688 l_0_5_44)))
 (let ((?x8685 (* 2.0 l_0_5_39)))
 (let ((?x8686 (* ?x8685 l_0_5_43)))
 (let ((?x8682 (* 2.0 l_0_5_38)))
 (let ((?x8683 (* ?x8682 l_0_5_42)))
 (let ((?x8679 (* 2.0 l_0_5_37)))
 (let ((?x8680 (* ?x8679 l_0_5_41)))
 (let ((?x8676 (* 2.0 l_0_5_25)))
 (let ((?x8677 (* ?x8676 l_0_5_29)))
 (let ((?x8673 (* 2.0 l_0_5_24)))
 (let ((?x8674 (* ?x8673 l_0_5_28)))
 (let ((?x8670 (* 2.0 l_0_5_23)))
 (let ((?x8671 (* ?x8670 l_0_5_27)))
 (let ((?x8681 (+ (- (- (- (* (* (- 2.0) l_0_5_22) l_0_5_26) ?x8671) ?x8674) ?x8677) ?x8680)))
 (= (+ (+ (+ ?x8681 ?x8683) ?x8686) ?x8689) 0.0)))))))))))))))))
(assert
 (let ((?x7613 (* l_0_5_45 l_0_5_45)))
 (let ((?x7610 (* l_0_5_44 l_0_5_44)))
 (let ((?x7607 (* l_0_5_43 l_0_5_43)))
 (let ((?x7604 (* l_0_5_42 l_0_5_42)))
 (let ((?x7601 (* l_0_5_41 l_0_5_41)))
 (let ((?x4027 (* l_0_5_30 l_0_5_30)))
 (let ((?x4018 (* l_0_5_29 l_0_5_29)))
 (let ((?x4008 (* l_0_5_28 l_0_5_28)))
 (let ((?x8712 (- (- (- (* (- l_0_5_26) l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x4008) ?x4018)))
 (= (+ (+ (+ (+ (+ (- ?x8712 ?x4027) ?x7601) ?x7604) ?x7607) ?x7610) ?x7613) 0.0)))))))))))
(assert
 (= (- (* l_0_5_16 l_0_5_16) (* l_0_5_31 l_0_5_31)) 0.0))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8453 (* ?x8452 l_0_5_32)))
 (let ((?x8752 (- (* (* 2.0 l_0_5_16) l_0_5_17) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (= (+ (- ?x8752 ?x8453) (* 2.0 (* l_0_5_31 l_0_5_31))) 0.0)))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8486 (* ?x8452 l_0_5_34)))
 (= (- (* (* 2.0 l_0_5_16) l_0_5_19) ?x8486) 0.0))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8492 (* ?x8452 l_0_5_37)))
 (= (- (* (* 2.0 l_0_5_16) l_0_5_22) ?x8492) 0.0))))
(assert
 (let ((?x8452 (* 2.0 l_0_5_31)))
 (let ((?x8500 (* ?x8452 l_0_5_41)))
 (= (- (* (* 2.0 l_0_5_16) l_0_5_26) ?x8500) 0.0))))
(assert
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x8515 (* ?x7207 l_0_5_35)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x8513 (* ?x7204 l_0_5_34)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x8455 (* ?x7072 l_0_5_34)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x8508 (* ?x7115 l_0_5_20)))
 (let ((?x7369 (* l_0_5_16 l_0_5_16)))
 (let ((?x857 (* 2.0 ?x7369)))
 (let ((?x8783 (+ (+ (* (* (- 4.0) l_0_5_16) l_0_5_19) ?x857) (* (* 2.0 l_0_5_17) l_0_5_19))))
 (let ((?x8788 (- (- (+ (+ ?x8783 ?x8508) ?x8455) (* (* 2.0 l_0_5_31) l_0_5_31)) ?x8513)))
 (= (- ?x8788 ?x8515) 0.0))))))))))))))
(assert
 (let ((?x8801 (* l_0_5_61 l_0_5_61)))
 (let ((?x7077 (* l_0_5_46 l_0_5_46)))
 (let ((?x7207 (* 2.0 l_0_5_33)))
 (let ((?x8557 (* ?x7207 l_0_5_38)))
 (let ((?x7204 (* 2.0 l_0_5_32)))
 (let ((?x8555 (* ?x7204 l_0_5_37)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x7378 (* ?x7072 l_0_5_31)))
 (let ((?x8795 (* ?x7072 l_0_5_37)))
 (let ((?x7115 (* 2.0 l_0_5_18)))
 (let ((?x8544 (* ?x7115 l_0_5_23)))
 (let ((?x7369 (* l_0_5_16 l_0_5_16)))
 (let ((?x7370 (* 4.0 ?x7369)))
 (let ((?x1215 (+ (+ (* (* (- 4.0) l_0_5_16) l_0_5_22) ?x7370) (* (* 2.0 l_0_5_17) l_0_5_22))))
 (let ((?x8802 (- (- (- (- (- (+ (+ ?x1215 ?x8544) ?x8795) ?x7378) ?x8555) ?x8557) ?x7077) ?x8801)))
 (= ?x8802 0.0)))))))))))))))))
(assert
 (let ((?x8523 (* 2.0 l_0_5_36)))
 (let ((?x8627 (* ?x8523 l_0_5_39)))
 (let ((?x8520 (* 2.0 l_0_5_35)))
 (let ((?x8625 (* ?x8520 l_0_5_38)))
 (let ((?x8517 (* 2.0 l_0_5_34)))
 (let ((?x8623 (* ?x8517 l_0_5_37)))
 (let ((?x8449 (* 2.0 l_0_5_21)))
 (let ((?x8621 (* ?x8449 l_0_5_24)))
 (let ((?x8446 (* 2.0 l_0_5_20)))
 (let ((?x8619 (* ?x8446 l_0_5_23)))
 (let ((?x8814 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_22) ?x8619) ?x8621) ?x8623) ?x8625)))
 (= (- ?x8814 ?x8627) 0.0)))))))))))))
(assert
 (let ((?x8523 (* 2.0 l_0_5_36)))
 (let ((?x999 (* ?x8523 l_0_5_43)))
 (let ((?x8520 (* 2.0 l_0_5_35)))
 (let ((?x927 (* ?x8520 l_0_5_42)))
 (let ((?x8517 (* 2.0 l_0_5_34)))
 (let ((?x5317 (* ?x8517 l_0_5_41)))
 (let ((?x8449 (* 2.0 l_0_5_21)))
 (let ((?x5305 (* ?x8449 l_0_5_28)))
 (let ((?x8446 (* 2.0 l_0_5_20)))
 (let ((?x932 (* ?x8446 l_0_5_27)))
 (let ((?x8823 (- (- (+ (+ (* (* 2.0 l_0_5_19) l_0_5_26) ?x932) ?x5305) ?x5317) ?x927)))
 (= (- ?x8823 ?x999) 0.0)))))))))))))
(assert
 (let ((?x4846 (* l_0_5_40 l_0_5_40)))
 (let ((?x3322 (* l_0_5_39 l_0_5_39)))
 (let ((?x8147 (* l_0_5_38 l_0_5_38)))
 (let ((?x8136 (* l_0_5_37 l_0_5_37)))
 (let ((?x8081 (* l_0_5_25 l_0_5_25)))
 (let ((?x8075 (* l_0_5_24 l_0_5_24)))
 (let ((?x1394 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x8075) ?x8081)))
 (= (- (- (- (- ?x1394 ?x8136) ?x8147) ?x3322) ?x4846) 0.0)))))))))
(assert
 (let ((?x8688 (* 2.0 l_0_5_40)))
 (let ((?x8689 (* ?x8688 l_0_5_44)))
 (let ((?x8685 (* 2.0 l_0_5_39)))
 (let ((?x8686 (* ?x8685 l_0_5_43)))
 (let ((?x8682 (* 2.0 l_0_5_38)))
 (let ((?x8683 (* ?x8682 l_0_5_42)))
 (let ((?x8679 (* 2.0 l_0_5_37)))
 (let ((?x8680 (* ?x8679 l_0_5_41)))
 (let ((?x8676 (* 2.0 l_0_5_25)))
 (let ((?x8677 (* ?x8676 l_0_5_29)))
 (let ((?x8673 (* 2.0 l_0_5_24)))
 (let ((?x8674 (* ?x8673 l_0_5_28)))
 (let ((?x8670 (* 2.0 l_0_5_23)))
 (let ((?x8671 (* ?x8670 l_0_5_27)))
 (let ((?x8844 (- (+ (+ (+ (* (* 2.0 l_0_5_22) l_0_5_26) ?x8671) ?x8674) ?x8677) ?x8680)))
 (= (- (- (- ?x8844 ?x8683) ?x8686) ?x8689) 0.0)))))))))))))))))
(assert
 (let ((?x7613 (* l_0_5_45 l_0_5_45)))
 (let ((?x7610 (* l_0_5_44 l_0_5_44)))
 (let ((?x7607 (* l_0_5_43 l_0_5_43)))
 (let ((?x7604 (* l_0_5_42 l_0_5_42)))
 (let ((?x7601 (* l_0_5_41 l_0_5_41)))
 (let ((?x4027 (* l_0_5_30 l_0_5_30)))
 (let ((?x4018 (* l_0_5_29 l_0_5_29)))
 (let ((?x4008 (* l_0_5_28 l_0_5_28)))
 (let ((?x5603 (+ (+ (+ (* l_0_5_26 l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x4008) ?x4018)))
 (= (- (- (- (- (- (+ ?x5603 ?x4027) ?x7601) ?x7604) ?x7607) ?x7610) ?x7613) 0.0)))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x5301 (* ?x7122 l_0_5_49)))
 (let ((?x7471 (* 4.0 l_0_5_36)))
 (let ((?x8565 (* ?x7471 l_0_5_39)))
 (let ((?x7468 (* 4.0 l_0_5_35)))
 (let ((?x8562 (* ?x7468 l_0_5_38)))
 (let ((?x7465 (* 4.0 l_0_5_34)))
 (let ((?x8559 (* ?x7465 l_0_5_37)))
 (let ((?x7072 (* 4.0 l_0_5_31)))
 (let ((?x8795 (* ?x7072 l_0_5_37)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7462 (* ?x7409 l_0_5_34)))
 (let ((?x7459 (* 4.0 l_0_5_21)))
 (let ((?x8552 (* ?x7459 l_0_5_24)))
 (let ((?x7456 (* 4.0 l_0_5_20)))
 (let ((?x8549 (* ?x7456 l_0_5_23)))
 (let ((?x7453 (* 4.0 l_0_5_19)))
 (let ((?x8546 (* ?x7453 l_0_5_22)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7450 (* ?x7402 l_0_5_19)))
 (let ((?x6081 (- (- (- (+ ?x7450 (* (* 4.0 l_0_5_16) l_0_5_22)) ?x8546) ?x8549) ?x8552)))
 (let ((?x8871 (- (- (+ (+ (+ (- (- ?x6081 ?x7462) ?x8795) ?x8559) ?x8562) ?x8565) ?x5301) (* (* 2.0 l_0_5_61) l_0_5_64))))
 (= ?x8871 0.0))))))))))))))))))))))))
(assert
 (let ((?x7660 (* 2.0 l_0_5_51)))
 (let ((?x8328 (* ?x7660 l_0_5_54)))
 (let ((?x7657 (* 2.0 l_0_5_50)))
 (let ((?x8326 (* ?x7657 l_0_5_53)))
 (let ((?x7654 (* 2.0 l_0_5_49)))
 (let ((?x8323 (* ?x7654 l_0_5_52)))
 (let ((?x7970 (* 8.0 l_0_5_36)))
 (let ((?x7971 (* ?x7970 l_0_5_39)))
 (let ((?x7965 (* 8.0 l_0_5_35)))
 (let ((?x7966 (* ?x7965 l_0_5_38)))
 (let ((?x7960 (* 8.0 l_0_5_34)))
 (let ((?x7961 (* ?x7960 l_0_5_37)))
 (let ((?x7951 (* 8.0 l_0_5_21)))
 (let ((?x7952 (* ?x7951 l_0_5_24)))
 (let ((?x4453 (* 8.0 l_0_5_20)))
 (let ((?x4448 (* ?x4453 l_0_5_23)))
 (let ((?x4477 (* 8.0 l_0_5_19)))
 (let ((?x4479 (* ?x4477 l_0_5_22)))
 (let ((?x8892 (+ (+ (+ (+ ?x4479 ?x4448) ?x7952) (* 2.0 (* l_0_5_22 l_0_5_22))) (* 2.0 (* l_0_5_23 l_0_5_23)))))
 (let ((?x8896 (+ (+ ?x8892 (* 2.0 (* l_0_5_24 l_0_5_24))) (* 2.0 (* l_0_5_25 l_0_5_25)))))
 (let ((?x8901 (- (- (- (- ?x8896 ?x7961) ?x7966) ?x7971) (* (* 2.0 l_0_5_37) l_0_5_37))))
 (let ((?x8905 (- (- ?x8901 (* (* 2.0 l_0_5_38) l_0_5_38)) (* (* 2.0 l_0_5_39) l_0_5_39))))
 (let ((?x8910 (- (- (- (- ?x8905 (* (* 2.0 l_0_5_40) l_0_5_40)) ?x8323) ?x8326) ?x8328)))
 (let ((?x8914 (- (- ?x8910 (* (* 2.0 l_0_5_64) l_0_5_67)) (* (* 2.0 l_0_5_65) l_0_5_68))))
 (= (- ?x8914 (* (* 2.0 l_0_5_66) l_0_5_69)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7122 (* 2.0 l_0_5_46)))
 (let ((?x8285 (* ?x7122 l_0_5_52)))
 (let ((?x4846 (* l_0_5_40 l_0_5_40)))
 (let ((?x8923 (* 2.0 ?x4846)))
 (let ((?x3322 (* l_0_5_39 l_0_5_39)))
 (let ((?x1668 (* 2.0 ?x3322)))
 (let ((?x8147 (* l_0_5_38 l_0_5_38)))
 (let ((?x1627 (* 2.0 ?x8147)))
 (let ((?x8136 (* l_0_5_37 l_0_5_37)))
 (let ((?x1628 (* 2.0 ?x8136)))
 (let ((?x7409 (* 8.0 l_0_5_31)))
 (let ((?x7518 (* ?x7409 l_0_5_37)))
 (let ((?x7402 (* 8.0 l_0_5_16)))
 (let ((?x7494 (* ?x7402 l_0_5_22)))
 (let ((?x8955 (- (- ?x7494 (* (* 2.0 l_0_5_22) l_0_5_22)) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x8959 (- (- ?x8955 (* (* 2.0 l_0_5_24) l_0_5_24)) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x8967 (- (- (+ (+ (+ (+ (- ?x8959 ?x7518) ?x1628) ?x1627) ?x1668) ?x8923) ?x8285) (* (* 2.0 l_0_5_61) l_0_5_67))))
 (= ?x8967 0.0)))))))))))))))))))
(assert
 (let ((?x8978 (* l_0_5_70 l_0_5_70)))
 (let ((?x8976 (* l_0_5_69 l_0_5_69)))
 (let ((?x8974 (* l_0_5_68 l_0_5_68)))
 (let ((?x8972 (* l_0_5_67 l_0_5_67)))
 (let ((?x8377 (* l_0_5_55 l_0_5_55)))
 (let ((?x8374 (* l_0_5_54 l_0_5_54)))
 (let ((?x8371 (* l_0_5_53 l_0_5_53)))
 (let ((?x8368 (* l_0_5_52 l_0_5_52)))
 (let ((?x7531 (* 4.0 l_0_5_40)))
 (let ((?x8102 (* ?x7531 l_0_5_40)))
 (let ((?x7528 (* 4.0 l_0_5_39)))
 (let ((?x8097 (* ?x7528 l_0_5_39)))
 (let ((?x7525 (* 4.0 l_0_5_38)))
 (let ((?x8092 (* ?x7525 l_0_5_38)))
 (let ((?x7522 (* 4.0 l_0_5_37)))
 (let ((?x8087 (* ?x7522 l_0_5_37)))
 (let ((?x8081 (* l_0_5_25 l_0_5_25)))
 (let ((?x8082 (* 4.0 ?x8081)))
 (let ((?x8075 (* l_0_5_24 l_0_5_24)))
 (let ((?x8076 (* 4.0 ?x8075)))
 (let ((?x4756 (* l_0_5_23 l_0_5_23)))
 (let ((?x4757 (* 4.0 ?x4756)))
 (let ((?x4783 (* l_0_5_22 l_0_5_22)))
 (let ((?x4780 (* 4.0 ?x4783)))
 (let ((?x1581 (- (- (- (- (+ (+ (+ ?x4780 ?x4757) ?x8076) ?x8082) ?x8087) ?x8092) ?x8097) ?x8102)))
 (let ((?x8977 (- (- (- (- (- (- (- ?x1581 ?x8368) ?x8371) ?x8374) ?x8377) ?x8972) ?x8974) ?x8976)))
 (= (- ?x8977 ?x8978) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9041 (* ?x9040 l_0_6_57)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9038 (* ?x9037 l_0_6_56)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9035 (* ?x9034 l_0_6_33)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9032 (* ?x9031 l_0_6_32)))
 (let ((?x9029 (* l_0_6_3 l_0_6_3)))
 (let ((?x9027 (* l_0_6_2 l_0_6_2)))
 (let ((?x9024 (* l_0_6_18 l_0_6_18)))
 (let ((?x9025 (* 4.0 ?x9024)))
 (let ((?x9021 (* l_0_6_17 l_0_6_17)))
 (let ((?x9022 (* 4.0 ?x9021)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9019 (* ?x9018 l_0_6_3)))
 (let ((?x9015 (* 2.0 l_0_6_11)))
 (let ((?x9016 (* ?x9015 l_0_6_2)))
 (let ((?x9008 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x9014 (- (- ?x9008 (* (* 2.0 l_0_6_107) l_0_6_116)) (* (* 2.0 l_0_6_108) l_0_6_117))))
 (let ((?x9033 (- (- (- (+ (+ (+ (+ ?x9014 ?x9016) ?x9019) ?x9022) ?x9025) ?x9027) ?x9029) ?x9032)))
 (let ((?x9045 (- (+ (+ (- ?x9033 ?x9035) ?x9038) ?x9041) (* (* 2.0 l_0_6_77) l_0_6_86))))
 (= (+ (- ?x9045 (* (* 2.0 l_0_6_78) l_0_6_87)) 4.0) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9118 (* l_0_6_63 l_0_6_63)))
 (let ((?x9116 (* l_0_6_62 l_0_6_62)))
 (let ((?x9114 (* l_0_6_48 l_0_6_48)))
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9112 (* ?x9040 l_0_6_53)))
 (let ((?x9110 (* l_0_6_47 l_0_6_47)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9108 (* ?x9037 l_0_6_52)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9035 (* ?x9034 l_0_6_33)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9032 (* ?x9031 l_0_6_32)))
 (let ((?x9103 (* 2.0 l_0_6_3)))
 (let ((?x9104 (* ?x9103 l_0_6_8)))
 (let ((?x9100 (* 2.0 l_0_6_2)))
 (let ((?x9101 (* ?x9100 l_0_6_7)))
 (let ((?x9024 (* l_0_6_18 l_0_6_18)))
 (let ((?x9025 (* 4.0 ?x9024)))
 (let ((?x9021 (* l_0_6_17 l_0_6_17)))
 (let ((?x9022 (* 4.0 ?x9021)))
 (let ((?x9097 (- (* (* (- 2.0) l_0_6_107) l_0_6_112) (* (* 2.0 l_0_6_108) l_0_6_113))))
 (let ((?x9109 (+ (- (- (+ (+ (+ (+ ?x9097 ?x9022) ?x9025) ?x9101) ?x9104) ?x9032) ?x9035) ?x9108)))
 (let ((?x9121 (- (- (- (- (+ (- ?x9109 ?x9110) ?x9112) ?x9114) ?x9116) ?x9118) (* (* 2.0 l_0_6_77) l_0_6_82))))
 (let ((?x9126 (- (- ?x9121 (* (* 2.0 l_0_6_78) l_0_6_83)) (* (* 2.0 l_0_6_92) l_0_6_97))))
 (= (+ (- ?x9126 (* (* 2.0 l_0_6_93) l_0_6_98)) 4.0) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x9173 (* ?x9172 l_0_6_47)))
 (let ((?x2015 (* l_0_6_33 l_0_6_33)))
 (let ((?x9170 (* 2.0 ?x2015)))
 (let ((?x2009 (* l_0_6_32 l_0_6_32)))
 (let ((?x9168 (* 2.0 ?x2009)))
 (let ((?x9156 (* 2.0 l_0_6_1)))
 (let ((?x9157 (* ?x9156 l_0_6_2)))
 (let ((?x9161 (- (+ (- (* (* 2.0 _a_0_) _a_1_) (* 2.0 _a_0_)) ?x9157) (* (* 2.0 l_0_6_106) l_0_6_107))))
 (let ((?x9167 (- (- ?x9161 (* (* 2.0 l_0_6_17) l_0_6_17)) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (let ((?x9177 (- (+ (+ (+ ?x9167 ?x9168) ?x9170) ?x9173) (* (* 2.0 l_0_6_76) l_0_6_77))))
 (= (- (- ?x9177 (* (* 2.0 l_0_6_91) l_0_6_92)) 4.0) 0.0)))))))))))))
(assert
 (let ((?x9265 (* l_0_6_96 l_0_6_96)))
 (let ((?x9263 (* l_0_6_95 l_0_6_95)))
 (let ((?x9261 (* l_0_6_94 l_0_6_94)))
 (let ((?x9259 (* l_0_6_81 l_0_6_81)))
 (let ((?x9257 (* l_0_6_80 l_0_6_80)))
 (let ((?x9255 (* l_0_6_79 l_0_6_79)))
 (let ((?x2015 (* l_0_6_33 l_0_6_33)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9234 (* ?x9034 l_0_6_35)))
 (let ((?x2009 (* l_0_6_32 l_0_6_32)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9231 (* ?x9031 l_0_6_34)))
 (let ((?x9024 (* l_0_6_18 l_0_6_18)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x9228 (* ?x9227 l_0_6_20)))
 (let ((?x9021 (* l_0_6_17 l_0_6_17)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x9224 (* ?x9223 l_0_6_19)))
 (let ((?x9221 (* l_0_6_111 l_0_6_111)))
 (let ((?x9222 (- (- (* (- l_0_6_109) l_0_6_109) (* l_0_6_110 l_0_6_110)) ?x9221)))
 (let ((?x9235 (- (+ (- (- (+ (- (+ ?x9222 ?x9224) ?x9021) ?x9228) ?x9024) ?x9231) ?x2009) ?x9234)))
 (let ((?x9242 (+ (+ (+ ?x9235 ?x2015) (* 1.0 (* l_0_6_4 l_0_6_4))) (* 1.0 (* l_0_6_49 l_0_6_49)))))
 (let ((?x9248 (+ (+ ?x9242 (* 1.0 (* l_0_6_5 l_0_6_5))) (* 1.0 (* l_0_6_50 l_0_6_50)))))
 (let ((?x9254 (+ (+ ?x9248 (* 1.0 (* l_0_6_51 l_0_6_51))) (* 1.0 (* l_0_6_6 l_0_6_6)))))
 (let ((?x9267 (- (- (- (- (- (- (- ?x9254 ?x9255) ?x9257) ?x9259) ?x9261) ?x9263) ?x9265) 1.0)))
 (= ?x9267 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9321 (* l_0_6_91 l_0_6_91)))
 (let ((?x9319 (* l_0_6_76 l_0_6_76)))
 (let ((?x2015 (* l_0_6_33 l_0_6_33)))
 (let ((?x2009 (* l_0_6_32 l_0_6_32)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x9312 (* ?x9311 l_0_6_32)))
 (let ((?x9024 (* l_0_6_18 l_0_6_18)))
 (let ((?x9021 (* l_0_6_17 l_0_6_17)))
 (let ((?x9306 (* 4.0 l_0_6_16)))
 (let ((?x9307 (* ?x9306 l_0_6_17)))
 (let ((?x9304 (* l_0_6_106 l_0_6_106)))
 (let ((?x9308 (- (- (+ (* _a_0_ _a_0_) (* 1.0 (* l_0_6_1 l_0_6_1))) ?x9304) ?x9307)))
 (let ((?x9318 (+ (- (- (+ (+ (+ ?x9308 ?x9021) ?x9024) ?x9312) ?x2009) ?x2015) (* 1.0 (* l_0_6_46 l_0_6_46)))))
 (= (- (- ?x9318 ?x9319) ?x9321) 0.0)))))))))))))))
(assert
 (let ((?x9369 (* l_0_6_93 l_0_6_93)))
 (let ((?x9367 (* l_0_6_92 l_0_6_92)))
 (let ((?x9365 (* l_0_6_78 l_0_6_78)))
 (let ((?x9363 (* l_0_6_77 l_0_6_77)))
 (let ((?x9353 (* l_0_6_108 l_0_6_108)))
 (let ((?x9351 (* l_0_6_107 l_0_6_107)))
 (let ((?x9356 (+ (- (- (+ (* (- 2.0) _a_1_) (* _a_1_ _a_1_)) ?x9351) ?x9353) (* 1.0 (* l_0_6_2 l_0_6_2)))))
 (let ((?x9360 (+ (+ ?x9356 (* 1.0 (* l_0_6_3 l_0_6_3))) (* 1.0 (* l_0_6_47 l_0_6_47)))))
 (let ((?x9368 (- (- (- (+ ?x9360 (* 1.0 (* l_0_6_48 l_0_6_48))) ?x9363) ?x9365) ?x9367)))
 (= (- ?x9368 ?x9369) 0.0)))))))))))
(assert
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9396 (* ?x9040 l_0_6_50)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9394 (* ?x9037 l_0_6_49)))
 (let ((?x9103 (* 2.0 l_0_6_3)))
 (let ((?x9386 (* ?x9103 l_0_6_5)))
 (let ((?x9100 (* 2.0 l_0_6_2)))
 (let ((?x9384 (* ?x9100 l_0_6_4)))
 (let ((?x9024 (* l_0_6_18 l_0_6_18)))
 (let ((?x6245 (* 2.0 ?x9024)))
 (let ((?x9021 (* l_0_6_17 l_0_6_17)))
 (let ((?x9192 (* 2.0 ?x9021)))
 (let ((?x9381 (- (* (* (- 2.0) l_0_6_107) l_0_6_109) (* (* 2.0 l_0_6_108) l_0_6_110))))
 (let ((?x9390 (- (+ (+ (+ (+ ?x9381 ?x9192) ?x6245) ?x9384) ?x9386) (* (* 2.0 l_0_6_32) l_0_6_32))))
 (let ((?x9399 (- (+ (+ (- ?x9390 (* (* 2.0 l_0_6_33) l_0_6_33)) ?x9394) ?x9396) (* (* 2.0 l_0_6_77) l_0_6_79))))
 (let ((?x9403 (- (- ?x9399 (* (* 2.0 l_0_6_78) l_0_6_80)) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (+ (- ?x9403 (* (* 2.0 l_0_6_93) l_0_6_95)) 2.0) 0.0))))))))))))))))))
(assert
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x9436 (* ?x9391 l_0_6_42)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x9434 (* ?x9388 l_0_6_41)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x9432 (* ?x9311 l_0_6_31)))
 (let ((?x9430 (* ?x9311 l_0_6_41)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x9428 (* ?x9165 l_0_6_27)))
 (let ((?x9423 (* l_0_6_16 l_0_6_16)))
 (let ((?x9424 (* 4.0 ?x9423)))
 (let ((?x9425 (+ (- (* (- l_0_6_1) l_0_6_1) (* (* 4.0 l_0_6_16) l_0_6_26)) ?x9424)))
 (let ((?x9433 (- (+ (+ (+ ?x9425 (* (* 2.0 l_0_6_17) l_0_6_26)) ?x9428) ?x9430) ?x9432)))
 (= (- (- ?x9433 ?x9434) ?x9436) 0.0)))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x9477 (* ?x9172 l_0_6_56)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9475 (* ?x9034 l_0_6_42)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9473 (* ?x9031 l_0_6_41)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9471 (* ?x9470 l_0_6_32)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x9468 (* ?x9227 l_0_6_27)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x9466 (* ?x9223 l_0_6_26)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x9464 (* ?x9463 l_0_6_17)))
 (let ((?x9156 (* 2.0 l_0_6_1)))
 (let ((?x9157 (* ?x9156 l_0_6_2)))
 (let ((?x9460 (- (- (* ?x9156 l_0_6_11) ?x9157) (* (* 2.0 l_0_6_101) l_0_6_91))))
 (let ((?x9469 (- (- (+ (- ?x9460 (* (* 2.0 l_0_6_106) l_0_6_116)) ?x9464) ?x9466) ?x9468)))
 (let ((?x9480 (- (+ (+ (+ (- ?x9469 ?x9471) ?x9473) ?x9475) ?x9477) (* (* 2.0 l_0_6_76) l_0_6_86))))
 (= ?x9480 0.0)))))))))))))))))))))
(assert
 (let ((?x9536 (* 4.0 l_0_6_36)))
 (let ((?x9537 (* ?x9536 l_0_6_43)))
 (let ((?x9533 (* 4.0 l_0_6_35)))
 (let ((?x9534 (* ?x9533 l_0_6_42)))
 (let ((?x9530 (* 4.0 l_0_6_34)))
 (let ((?x9531 (* ?x9530 l_0_6_41)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x9430 (* ?x9311 l_0_6_41)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9527 (* ?x9470 l_0_6_34)))
 (let ((?x9524 (* 4.0 l_0_6_21)))
 (let ((?x9525 (* ?x9524 l_0_6_28)))
 (let ((?x9521 (* 4.0 l_0_6_20)))
 (let ((?x9522 (* ?x9521 l_0_6_27)))
 (let ((?x9518 (* 4.0 l_0_6_19)))
 (let ((?x9519 (* ?x9518 l_0_6_26)))
 (let ((?x9306 (* 4.0 l_0_6_16)))
 (let ((?x9421 (* ?x9306 l_0_6_26)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x9515 (* ?x9463 l_0_6_19)))
 (let ((?x9523 (- (- (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x9515) ?x9421) ?x9519) ?x9522)))
 (= (+ (+ (+ (- (- (- ?x9523 ?x9525) ?x9527) ?x9430) ?x9531) ?x9534) ?x9537) 0.0)))))))))))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x9477 (* ?x9172 l_0_6_56)))
 (let ((?x9578 (* 4.0 l_0_6_40)))
 (let ((?x9579 (* ?x9578 l_0_6_44)))
 (let ((?x9575 (* 4.0 l_0_6_39)))
 (let ((?x9576 (* ?x9575 l_0_6_43)))
 (let ((?x9572 (* 4.0 l_0_6_38)))
 (let ((?x9573 (* ?x9572 l_0_6_42)))
 (let ((?x9569 (* 4.0 l_0_6_37)))
 (let ((?x9570 (* ?x9569 l_0_6_41)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9567 (* ?x9470 l_0_6_41)))
 (let ((?x9565 (* ?x9470 l_0_6_37)))
 (let ((?x9563 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x9560 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x9557 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x9554 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x6660 (* ?x9463 l_0_6_26)))
 (let ((?x9555 (- (+ (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) (* ?x9463 l_0_6_22)) ?x6660) ?x9554)))
 (let ((?x9574 (+ (+ (- (- (- (- (- ?x9555 ?x9557) ?x9560) ?x9563) ?x9565) ?x9567) ?x9570) ?x9573)))
 (let ((?x9584 (- (- (+ (+ ?x9574 ?x9576) ?x9579) ?x9477) (* (* 2.0 l_0_6_61) l_0_6_71))))
 (= ?x9584 0.0))))))))))))))))))))))))
(assert
 (let ((?x9651 (* l_0_6_45 l_0_6_45)))
 (let ((?x9652 (* 2.0 ?x9651)))
 (let ((?x9648 (* l_0_6_44 l_0_6_44)))
 (let ((?x9649 (* 2.0 ?x9648)))
 (let ((?x9645 (* l_0_6_43 l_0_6_43)))
 (let ((?x9646 (* 2.0 ?x9645)))
 (let ((?x9642 (* l_0_6_42 l_0_6_42)))
 (let ((?x9643 (* 2.0 ?x9642)))
 (let ((?x9639 (* l_0_6_41 l_0_6_41)))
 (let ((?x9640 (* 2.0 ?x9639)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9567 (* ?x9470 l_0_6_41)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x6660 (* ?x9463 l_0_6_26)))
 (let ((?x9625 (- (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) ?x6660) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x9631 (- (- ?x9625 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x9637 (- (- ?x9631 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (= (+ (+ (+ (+ (+ (- ?x9637 ?x9567) ?x9640) ?x9643) ?x9646) ?x9649) ?x9652) 0.0)))))))))))))))))))
(assert
 (let ((?x9720 (* 2.0 l_0_6_51)))
 (let ((?x9721 (* ?x9720 l_0_6_58)))
 (let ((?x9717 (* 2.0 l_0_6_50)))
 (let ((?x9718 (* ?x9717 l_0_6_57)))
 (let ((?x9714 (* 2.0 l_0_6_49)))
 (let ((?x9715 (* ?x9714 l_0_6_56)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9475 (* ?x9034 l_0_6_42)))
 (let ((?x9710 (* 8.0 l_0_6_33)))
 (let ((?x9711 (* ?x9710 l_0_6_35)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9473 (* ?x9031 l_0_6_41)))
 (let ((?x9706 (* 8.0 l_0_6_32)))
 (let ((?x9707 (* ?x9706 l_0_6_34)))
 (let ((?x9103 (* 2.0 l_0_6_3)))
 (let ((?x9386 (* ?x9103 l_0_6_5)))
 (let ((?x9100 (* 2.0 l_0_6_2)))
 (let ((?x9384 (* ?x9100 l_0_6_4)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x9468 (* ?x9227 l_0_6_27)))
 (let ((?x9700 (* 8.0 l_0_6_18)))
 (let ((?x9701 (* ?x9700 l_0_6_20)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x9466 (* ?x9223 l_0_6_26)))
 (let ((?x9696 (* 8.0 l_0_6_17)))
 (let ((?x9697 (* ?x9696 l_0_6_19)))
 (let ((?x9693 (* 2.0 l_0_6_13)))
 (let ((?x9694 (* ?x9693 l_0_6_6)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9691 (* ?x9018 l_0_6_5)))
 (let ((?x9676 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x9682 (- (- ?x9676 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_109) l_0_6_116))))
 (let ((?x9687 (- (+ ?x9682 (* (* 2.0 l_0_6_11) l_0_6_4)) (* (* 2.0 l_0_6_110) l_0_6_117))))
 (let ((?x9698 (+ (+ (+ (- ?x9687 (* (* 2.0 l_0_6_111) l_0_6_118)) ?x9691) ?x9694) ?x9697)))
 (let ((?x9709 (- (- (- (- (+ (+ (+ ?x9698 ?x9466) ?x9701) ?x9468) ?x9384) ?x9386) ?x9707) ?x9473)))
 (let ((?x9725 (- (+ (+ (+ (- (- ?x9709 ?x9711) ?x9475) ?x9715) ?x9718) ?x9721) (* (* 2.0 l_0_6_79) l_0_6_86))))
 (let ((?x9731 (- (- ?x9725 (* (* 2.0 l_0_6_80) l_0_6_87)) (* (* 2.0 l_0_6_81) l_0_6_88))))
 (= ?x9731 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9842 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9839 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9836 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9833 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9041 (* ?x9040 l_0_6_57)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9038 (* ?x9037 l_0_6_56)))
 (let ((?x9710 (* 8.0 l_0_6_33)))
 (let ((?x9828 (* ?x9710 l_0_6_42)))
 (let ((?x9826 (* ?x9710 l_0_6_38)))
 (let ((?x9706 (* 8.0 l_0_6_32)))
 (let ((?x9824 (* ?x9706 l_0_6_41)))
 (let ((?x9822 (* ?x9706 l_0_6_37)))
 (let ((?x9103 (* 2.0 l_0_6_3)))
 (let ((?x9104 (* ?x9103 l_0_6_8)))
 (let ((?x9100 (* 2.0 l_0_6_2)))
 (let ((?x9101 (* ?x9100 l_0_6_7)))
 (let ((?x9700 (* 8.0 l_0_6_18)))
 (let ((?x9818 (* ?x9700 l_0_6_27)))
 (let ((?x9816 (* ?x9700 l_0_6_23)))
 (let ((?x9696 (* 8.0 l_0_6_17)))
 (let ((?x9814 (* ?x9696 l_0_6_26)))
 (let ((?x9812 (* ?x9696 l_0_6_22)))
 (let ((?x9693 (* 2.0 l_0_6_13)))
 (let ((?x9810 (* ?x9693 l_0_6_9)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9808 (* ?x9018 l_0_6_8)))
 (let ((?x9015 (* 2.0 l_0_6_11)))
 (let ((?x9794 (* ?x9015 l_0_6_7)))
 (let ((?x9787 (- (* (* 2.0 l_0_6_10) l_0_6_14) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x9791 (- (- ?x9787 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x9798 (- (+ (- ?x9791 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x9794) (* (* 2.0 l_0_6_112) l_0_6_116))))
 (let ((?x9804 (- (- ?x9798 (* (* 2.0 l_0_6_113) l_0_6_117)) (* (* 2.0 l_0_6_114) l_0_6_118))))
 (let ((?x9813 (+ (+ (+ (- ?x9804 (* (* 2.0 l_0_6_115) l_0_6_119)) ?x9808) ?x9810) ?x9812)))
 (let ((?x9825 (- (- (- (- (+ (+ (+ ?x9813 ?x9814) ?x9816) ?x9818) ?x9101) ?x9104) ?x9822) ?x9824)))
 (let ((?x9840 (+ (+ (+ (- (- (- (- ?x9825 ?x9826) ?x9828) ?x9038) ?x9041) ?x9833) ?x9836) ?x9839)))
 (let ((?x9849 (- (- (+ ?x9840 ?x9842) (* (* 2.0 l_0_6_62) l_0_6_71)) (* (* 2.0 l_0_6_63) l_0_6_72))))
 (let ((?x9855 (- (- ?x9849 (* (* 2.0 l_0_6_82) l_0_6_86)) (* (* 2.0 l_0_6_83) l_0_6_87))))
 (let ((?x9861 (- (- ?x9855 (* (* 2.0 l_0_6_84) l_0_6_88)) (* (* 2.0 l_0_6_85) l_0_6_89))))
 (= ?x9861 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10007 (* l_0_6_90 l_0_6_90)))
 (let ((?x10005 (* l_0_6_89 l_0_6_89)))
 (let ((?x10003 (* l_0_6_88 l_0_6_88)))
 (let ((?x10001 (* l_0_6_87 l_0_6_87)))
 (let ((?x9999 (* l_0_6_86 l_0_6_86)))
 (let ((?x9710 (* 8.0 l_0_6_33)))
 (let ((?x9828 (* ?x9710 l_0_6_42)))
 (let ((?x9706 (* 8.0 l_0_6_32)))
 (let ((?x9824 (* ?x9706 l_0_6_41)))
 (let ((?x9700 (* 8.0 l_0_6_18)))
 (let ((?x9818 (* ?x9700 l_0_6_27)))
 (let ((?x9696 (* 8.0 l_0_6_17)))
 (let ((?x9814 (* ?x9696 l_0_6_26)))
 (let ((?x9969 (* l_0_6_120 l_0_6_120)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9019 (* ?x9018 l_0_6_3)))
 (let ((?x9963 (* l_0_6_119 l_0_6_119)))
 (let ((?x9961 (* l_0_6_118 l_0_6_118)))
 (let ((?x9959 (* l_0_6_117 l_0_6_117)))
 (let ((?x9957 (* l_0_6_116 l_0_6_116)))
 (let ((?x9015 (* 2.0 l_0_6_11)))
 (let ((?x9016 (* ?x9015 l_0_6_2)))
 (let ((?x9951 (* l_0_6_105 l_0_6_105)))
 (let ((?x9949 (* l_0_6_104 l_0_6_104)))
 (let ((?x9947 (* l_0_6_103 l_0_6_103)))
 (let ((?x9948 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x9947)))
 (let ((?x9956 (+ (- (- (- ?x9948 ?x9949) ?x9951) ?x9016) (* 1.0 (* l_0_6_11 l_0_6_11)))))
 (let ((?x9968 (+ (- (- (- (- (- ?x9956 ?x9957) ?x9959) ?x9961) ?x9963) ?x9019) (* 1.0 (* l_0_6_12 l_0_6_12)))))
 (let ((?x9976 (+ (+ (- ?x9968 ?x9969) (* 1.0 (* l_0_6_13 l_0_6_13))) (* 1.0 (* l_0_6_14 l_0_6_14)))))
 (let ((?x9982 (- (+ (+ (+ ?x9976 (* 1.0 (* l_0_6_15 l_0_6_15))) ?x9814) ?x9818) ?x9824)))
 (let ((?x9989 (+ (+ (- ?x9982 ?x9828) (* 1.0 (* l_0_6_56 l_0_6_56))) (* 1.0 (* l_0_6_57 l_0_6_57)))))
 (let ((?x9995 (+ (+ ?x9989 (* 1.0 (* l_0_6_58 l_0_6_58))) (* 1.0 (* l_0_6_59 l_0_6_59)))))
 (let ((?x10004 (- (- (- (+ ?x9995 (* 1.0 (* l_0_6_60 l_0_6_60))) ?x9999) ?x10001) ?x10003)))
 (= (- (- ?x10004 ?x10005) ?x10007) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9252 (* l_0_6_6 l_0_6_6)))
 (let ((?x9243 (* l_0_6_5 l_0_6_5)))
 (let ((?x9237 (* l_0_6_4 l_0_6_4)))
 (let ((?x9536 (* 4.0 l_0_6_36)))
 (let ((?x10068 (* ?x9536 l_0_6_36)))
 (let ((?x9537 (* ?x9536 l_0_6_43)))
 (let ((?x9533 (* 4.0 l_0_6_35)))
 (let ((?x10065 (* ?x9533 l_0_6_35)))
 (let ((?x9534 (* ?x9533 l_0_6_42)))
 (let ((?x9530 (* 4.0 l_0_6_34)))
 (let ((?x10062 (* ?x9530 l_0_6_34)))
 (let ((?x9531 (* ?x9530 l_0_6_41)))
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x9436 (* ?x9391 l_0_6_42)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x9434 (* ?x9388 l_0_6_41)))
 (let ((?x10056 (* l_0_6_21 l_0_6_21)))
 (let ((?x10057 (* 4.0 ?x10056)))
 (let ((?x9524 (* 4.0 l_0_6_21)))
 (let ((?x9525 (* ?x9524 l_0_6_28)))
 (let ((?x10052 (* l_0_6_20 l_0_6_20)))
 (let ((?x10053 (* 4.0 ?x10052)))
 (let ((?x9521 (* 4.0 l_0_6_20)))
 (let ((?x9522 (* ?x9521 l_0_6_27)))
 (let ((?x10048 (* l_0_6_19 l_0_6_19)))
 (let ((?x10049 (* 4.0 ?x10048)))
 (let ((?x9518 (* 4.0 l_0_6_19)))
 (let ((?x9519 (* ?x9518 l_0_6_26)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x9428 (* ?x9165 l_0_6_27)))
 (let ((?x10051 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_26) ?x9428) ?x9519) ?x10049) ?x9522)))
 (let ((?x10063 (- (- (+ (+ (+ (+ (+ ?x10051 ?x10053) ?x9525) ?x10057) ?x9434) ?x9436) ?x9531) ?x10062)))
 (let ((?x10072 (- (- (- (- (- (- (- ?x10063 ?x9534) ?x10065) ?x9537) ?x10068) ?x9237) ?x9243) ?x9252)))
 (= ?x10072 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10138 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9720 (* 2.0 l_0_6_51)))
 (let ((?x9721 (* ?x9720 l_0_6_58)))
 (let ((?x9717 (* 2.0 l_0_6_50)))
 (let ((?x9718 (* ?x9717 l_0_6_57)))
 (let ((?x10133 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x9714 (* 2.0 l_0_6_49)))
 (let ((?x9715 (* ?x9714 l_0_6_56)))
 (let ((?x9578 (* 4.0 l_0_6_40)))
 (let ((?x9579 (* ?x9578 l_0_6_44)))
 (let ((?x10128 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x9575 (* 4.0 l_0_6_39)))
 (let ((?x9576 (* ?x9575 l_0_6_43)))
 (let ((?x9572 (* 4.0 l_0_6_38)))
 (let ((?x9573 (* ?x9572 l_0_6_42)))
 (let ((?x9569 (* 4.0 l_0_6_37)))
 (let ((?x9570 (* ?x9569 l_0_6_41)))
 (let ((?x10119 (* 8.0 l_0_6_36)))
 (let ((?x10122 (* ?x10119 l_0_6_43)))
 (let ((?x10120 (* ?x10119 l_0_6_39)))
 (let ((?x10114 (* 8.0 l_0_6_35)))
 (let ((?x10117 (* ?x10114 l_0_6_42)))
 (let ((?x10115 (* ?x10114 l_0_6_38)))
 (let ((?x10109 (* 8.0 l_0_6_34)))
 (let ((?x10112 (* ?x10109 l_0_6_41)))
 (let ((?x10110 (* ?x10109 l_0_6_37)))
 (let ((?x9563 (* (* 4.0 l_0_6_25) l_0_6_29)))
 (let ((?x9560 (* (* 4.0 l_0_6_24) l_0_6_28)))
 (let ((?x9557 (* (* 4.0 l_0_6_23) l_0_6_27)))
 (let ((?x9554 (* (* 4.0 l_0_6_22) l_0_6_26)))
 (let ((?x10100 (* 8.0 l_0_6_21)))
 (let ((?x10103 (* ?x10100 l_0_6_28)))
 (let ((?x10101 (* ?x10100 l_0_6_24)))
 (let ((?x10095 (* 8.0 l_0_6_20)))
 (let ((?x10098 (* ?x10095 l_0_6_27)))
 (let ((?x10096 (* ?x10095 l_0_6_23)))
 (let ((?x1227 (* 8.0 l_0_6_19)))
 (let ((?x10093 (* ?x1227 l_0_6_26)))
 (let ((?x3411 (* ?x1227 l_0_6_22)))
 (let ((?x10106 (+ (+ (+ (+ (+ (+ (+ ?x3411 ?x10093) ?x10096) ?x10098) ?x10101) ?x10103) ?x9554) ?x9557)))
 (let ((?x10121 (- (- (- (- (- (+ (+ ?x10106 ?x9560) ?x9563) ?x10110) ?x10112) ?x10115) ?x10117) ?x10120)))
 (let ((?x10131 (- (- (- (- (- (- (- ?x10121 ?x10122) ?x9570) ?x9573) ?x9576) ?x10128) ?x9579) ?x9715)))
 (let ((?x10142 (- (- (- (- (- ?x10131 ?x10133) ?x9718) ?x9721) ?x10138) (* (* 2.0 l_0_6_64) l_0_6_71))))
 (let ((?x10148 (- (- ?x10142 (* (* 2.0 l_0_6_65) l_0_6_72)) (* (* 2.0 l_0_6_66) l_0_6_73))))
 (= ?x10148 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10119 (* 8.0 l_0_6_36)))
 (let ((?x10122 (* ?x10119 l_0_6_43)))
 (let ((?x10114 (* 8.0 l_0_6_35)))
 (let ((?x10117 (* ?x10114 l_0_6_42)))
 (let ((?x10109 (* 8.0 l_0_6_34)))
 (let ((?x10112 (* ?x10109 l_0_6_41)))
 (let ((?x10100 (* 8.0 l_0_6_21)))
 (let ((?x10103 (* ?x10100 l_0_6_28)))
 (let ((?x10095 (* 8.0 l_0_6_20)))
 (let ((?x10098 (* ?x10095 l_0_6_27)))
 (let ((?x1227 (* 8.0 l_0_6_19)))
 (let ((?x10093 (* ?x1227 l_0_6_26)))
 (let ((?x9693 (* 2.0 l_0_6_13)))
 (let ((?x9694 (* ?x9693 l_0_6_6)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9691 (* ?x9018 l_0_6_5)))
 (let ((?x7054 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x9691) ?x9694) ?x10093) ?x10098)))
 (let ((?x7051 (+ (+ (+ ?x7054 ?x10103) (* 2.0 (* l_0_6_26 l_0_6_26))) (* 2.0 (* l_0_6_27 l_0_6_27)))))
 (let ((?x3337 (+ (+ ?x7051 (* 2.0 (* l_0_6_28 l_0_6_28))) (* 2.0 (* l_0_6_29 l_0_6_29)))))
 (let ((?x10181 (- (- (- (+ ?x3337 (* 2.0 (* l_0_6_30 l_0_6_30))) ?x10112) ?x10117) ?x10122)))
 (let ((?x10187 (- (- ?x10181 (* (* 2.0 l_0_6_41) l_0_6_41)) (* (* 2.0 l_0_6_42) l_0_6_42))))
 (let ((?x10193 (- (- ?x10187 (* (* 2.0 l_0_6_43) l_0_6_43)) (* (* 2.0 l_0_6_44) l_0_6_44))))
 (= (- ?x10193 (* (* 2.0 l_0_6_45) l_0_6_45)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x10256 (* l_0_6_9 l_0_6_9)))
 (let ((?x10254 (* l_0_6_8 l_0_6_8)))
 (let ((?x10249 (* l_0_6_7 l_0_6_7)))
 (let ((?x9842 (* (* 2.0 l_0_6_55) l_0_6_59)))
 (let ((?x9839 (* (* 2.0 l_0_6_54) l_0_6_58)))
 (let ((?x9836 (* (* 2.0 l_0_6_53) l_0_6_57)))
 (let ((?x9833 (* (* 2.0 l_0_6_52) l_0_6_56)))
 (let ((?x9578 (* 4.0 l_0_6_40)))
 (let ((?x10234 (* ?x9578 l_0_6_40)))
 (let ((?x10232 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x9575 (* 4.0 l_0_6_39)))
 (let ((?x10229 (* ?x9575 l_0_6_39)))
 (let ((?x10227 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x9572 (* 4.0 l_0_6_38)))
 (let ((?x10224 (* ?x9572 l_0_6_38)))
 (let ((?x10222 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x9569 (* 4.0 l_0_6_37)))
 (let ((?x10219 (* ?x9569 l_0_6_37)))
 (let ((?x10217 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x10213 (* l_0_6_25 l_0_6_25)))
 (let ((?x10214 (* 4.0 ?x10213)))
 (let ((?x10211 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x10207 (* l_0_6_24 l_0_6_24)))
 (let ((?x10208 (* 4.0 ?x10207)))
 (let ((?x10205 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x10201 (* l_0_6_23 l_0_6_23)))
 (let ((?x10202 (* 4.0 ?x10201)))
 (let ((?x10199 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x3511 (* l_0_6_22 l_0_6_22)))
 (let ((?x3512 (* 4.0 ?x3511)))
 (let ((?x7235 (+ (+ (* (- l_0_6_10) l_0_6_10) (* (* 8.0 l_0_6_22) l_0_6_26)) ?x3512)))
 (let ((?x10218 (- (+ (+ (+ (+ (+ (+ ?x7235 ?x10199) ?x10202) ?x10205) ?x10208) ?x10211) ?x10214) ?x10217)))
 (let ((?x10235 (- (- (- (- (- (- (- ?x10218 ?x10219) ?x10222) ?x10224) ?x10227) ?x10229) ?x10232) ?x10234)))
 (let ((?x10242 (- (- (- (- (- ?x10235 ?x9833) ?x9836) ?x9839) ?x9842) (* (* 2.0 l_0_6_67) l_0_6_71))))
 (let ((?x10248 (- (- ?x10242 (* (* 2.0 l_0_6_68) l_0_6_72)) (* (* 2.0 l_0_6_69) l_0_6_73))))
 (let ((?x10257 (- (- (- (- ?x10248 ?x10249) (* (* 2.0 l_0_6_70) l_0_6_74)) ?x10254) ?x10256)))
 (= ?x10257 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10341 (* l_0_6_75 l_0_6_75)))
 (let ((?x10339 (* l_0_6_74 l_0_6_74)))
 (let ((?x10337 (* l_0_6_73 l_0_6_73)))
 (let ((?x10335 (* l_0_6_72 l_0_6_72)))
 (let ((?x10333 (* l_0_6_71 l_0_6_71)))
 (let ((?x9996 (* l_0_6_60 l_0_6_60)))
 (let ((?x9993 (* l_0_6_59 l_0_6_59)))
 (let ((?x9990 (* l_0_6_58 l_0_6_58)))
 (let ((?x9987 (* l_0_6_57 l_0_6_57)))
 (let ((?x9984 (* l_0_6_56 l_0_6_56)))
 (let ((?x10326 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x10323 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x10320 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x10317 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x10314 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x10232 (* (* 8.0 l_0_6_40) l_0_6_44)))
 (let ((?x10227 (* (* 8.0 l_0_6_39) l_0_6_43)))
 (let ((?x10222 (* (* 8.0 l_0_6_38) l_0_6_42)))
 (let ((?x10217 (* (* 8.0 l_0_6_37) l_0_6_41)))
 (let ((?x9671 (* l_0_6_30 l_0_6_30)))
 (let ((?x10307 (* 4.0 ?x9671)))
 (let ((?x6782 (* l_0_6_29 l_0_6_29)))
 (let ((?x10305 (* 4.0 ?x6782)))
 (let ((?x6779 (* l_0_6_28 l_0_6_28)))
 (let ((?x10303 (* 4.0 ?x6779)))
 (let ((?x6776 (* l_0_6_27 l_0_6_27)))
 (let ((?x10301 (* 4.0 ?x6776)))
 (let ((?x9656 (* l_0_6_26 l_0_6_26)))
 (let ((?x10299 (* 4.0 ?x9656)))
 (let ((?x10211 (* (* 8.0 l_0_6_25) l_0_6_29)))
 (let ((?x10205 (* (* 8.0 l_0_6_24) l_0_6_28)))
 (let ((?x10199 (* (* 8.0 l_0_6_23) l_0_6_27)))
 (let ((?x3630 (* (* 8.0 l_0_6_22) l_0_6_26)))
 (let ((?x9693 (* 2.0 l_0_6_13)))
 (let ((?x9810 (* ?x9693 l_0_6_9)))
 (let ((?x9018 (* 2.0 l_0_6_12)))
 (let ((?x9808 (* ?x9018 l_0_6_8)))
 (let ((?x9015 (* 2.0 l_0_6_11)))
 (let ((?x9794 (* ?x9015 l_0_6_7)))
 (let ((?x10295 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x9794) ?x9808) ?x9810) ?x3630)))
 (let ((?x10306 (+ (+ (+ (+ (+ (+ (+ ?x10295 ?x10199) ?x10205) ?x10211) ?x10299) ?x10301) ?x10303) ?x10305)))
 (let ((?x10318 (- (- (- (- (- (- (+ ?x10306 ?x10307) ?x10217) ?x10222) ?x10227) ?x10232) ?x10314) ?x10317)))
 (let ((?x10331 (- (- (- (- (- (- (- ?x10318 ?x10320) ?x10323) ?x10326) ?x9984) ?x9987) ?x9990) ?x9993)))
 (= (- (- (- (- (- (- ?x10331 ?x9996) ?x10333) ?x10335) ?x10337) ?x10339) ?x10341) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10326 (* (* 4.0 l_0_6_45) l_0_6_45)))
 (let ((?x10323 (* (* 4.0 l_0_6_44) l_0_6_44)))
 (let ((?x10320 (* (* 4.0 l_0_6_43) l_0_6_43)))
 (let ((?x10317 (* (* 4.0 l_0_6_42) l_0_6_42)))
 (let ((?x10314 (* (* 4.0 l_0_6_41) l_0_6_41)))
 (let ((?x9671 (* l_0_6_30 l_0_6_30)))
 (let ((?x10307 (* 4.0 ?x9671)))
 (let ((?x6782 (* l_0_6_29 l_0_6_29)))
 (let ((?x10305 (* 4.0 ?x6782)))
 (let ((?x6779 (* l_0_6_28 l_0_6_28)))
 (let ((?x10303 (* 4.0 ?x6779)))
 (let ((?x6776 (* l_0_6_27 l_0_6_27)))
 (let ((?x10301 (* 4.0 ?x6776)))
 (let ((?x9656 (* l_0_6_26 l_0_6_26)))
 (let ((?x10299 (* 4.0 ?x9656)))
 (let ((?x9977 (* l_0_6_15 l_0_6_15)))
 (let ((?x9974 (* l_0_6_14 l_0_6_14)))
 (let ((?x9971 (* l_0_6_13 l_0_6_13)))
 (let ((?x4002 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x9971) ?x9974)))
 (let ((?x7573 (- (+ (+ (+ (+ (+ (- ?x4002 ?x9977) ?x10299) ?x10301) ?x10303) ?x10305) ?x10307) ?x10314)))
 (= (- (- (- (- ?x7573 ?x10317) ?x10320) ?x10323) ?x10326) 0.0))))))))))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x2874 (* ?x9172 l_0_6_49)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x9234 (* ?x9034 l_0_6_35)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x9231 (* ?x9031 l_0_6_34)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x9312 (* ?x9311 l_0_6_32)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x9228 (* ?x9227 l_0_6_20)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x9224 (* ?x9223 l_0_6_19)))
 (let ((?x9306 (* 4.0 l_0_6_16)))
 (let ((?x9307 (* ?x9306 l_0_6_17)))
 (let ((?x7708 (- (* (* 2.0 l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_106) l_0_6_109))))
 (let ((?x2875 (+ (+ (+ (- (- (- (+ ?x7708 ?x9307) ?x9224) ?x9228) ?x9312) ?x9231) ?x9234) ?x2874)))
 (let ((?x3857 (- (- ?x2875 (* (* 2.0 l_0_6_76) l_0_6_79)) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= ?x3857 0.0)))))))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x10372 (* ?x9172 l_0_6_52)))
 (let ((?x9173 (* ?x9172 l_0_6_47)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x10369 (* ?x9034 l_0_6_38)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x10367 (* ?x9031 l_0_6_37)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9471 (* ?x9470 l_0_6_32)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x10364 (* ?x9227 l_0_6_23)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x10362 (* ?x9223 l_0_6_22)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x9464 (* ?x9463 l_0_6_17)))
 (let ((?x10360 (- (* (* 2.0 l_0_6_1) l_0_6_7) (* (* 2.0 l_0_6_106) l_0_6_112))))
 (let ((?x10371 (- (+ (+ (- (- (- (+ ?x10360 ?x9464) ?x10362) ?x10364) ?x9471) ?x10367) ?x10369) ?x9173)))
 (let ((?x10377 (- (- (+ ?x10371 ?x10372) (* (* 2.0 l_0_6_61) l_0_6_62)) (* (* 2.0 l_0_6_76) l_0_6_82))))
 (= (- ?x10377 (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0))))))))))))))))))))
(assert
 (let ((?x10138 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x9720 (* 2.0 l_0_6_51)))
 (let ((?x10424 (* ?x9720 l_0_6_54)))
 (let ((?x9717 (* 2.0 l_0_6_50)))
 (let ((?x10422 (* ?x9717 l_0_6_53)))
 (let ((?x10133 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x9714 (* 2.0 l_0_6_49)))
 (let ((?x10419 (* ?x9714 l_0_6_52)))
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9396 (* ?x9040 l_0_6_50)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9394 (* ?x9037 l_0_6_49)))
 (let ((?x10128 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x9034 (* 4.0 l_0_6_33)))
 (let ((?x10369 (* ?x9034 l_0_6_38)))
 (let ((?x9710 (* 8.0 l_0_6_33)))
 (let ((?x9711 (* ?x9710 l_0_6_35)))
 (let ((?x9031 (* 4.0 l_0_6_32)))
 (let ((?x10367 (* ?x9031 l_0_6_37)))
 (let ((?x9706 (* 8.0 l_0_6_32)))
 (let ((?x9707 (* ?x9706 l_0_6_34)))
 (let ((?x9227 (* 4.0 l_0_6_18)))
 (let ((?x10364 (* ?x9227 l_0_6_23)))
 (let ((?x9700 (* 8.0 l_0_6_18)))
 (let ((?x9701 (* ?x9700 l_0_6_20)))
 (let ((?x9223 (* 4.0 l_0_6_17)))
 (let ((?x10362 (* ?x9223 l_0_6_22)))
 (let ((?x9696 (* 8.0 l_0_6_17)))
 (let ((?x9697 (* ?x9696 l_0_6_19)))
 (let ((?x10405 (- (* (* (- 2.0) l_0_6_109) l_0_6_112) (* (* 2.0 l_0_6_110) l_0_6_113))))
 (let ((?x10410 (+ (+ (+ (- ?x10405 (* (* 2.0 l_0_6_111) l_0_6_114)) ?x9697) ?x10362) ?x9701)))
 (let ((?x10417 (- (+ (- (- (- (- (+ ?x10410 ?x10364) ?x9707) ?x10367) ?x9711) ?x10369) ?x10128) ?x9394)))
 (let ((?x10428 (- (+ (+ (+ (+ (+ (- ?x10417 ?x9396) ?x10419) ?x10133) ?x10422) ?x10424) ?x10138) (* (* 2.0 l_0_6_62) l_0_6_64))))
 (let ((?x10432 (- (- ?x10428 (* (* 2.0 l_0_6_63) l_0_6_65)) (* (* 2.0 l_0_6_79) l_0_6_82))))
 (let ((?x10436 (- (- ?x10432 (* (* 2.0 l_0_6_80) l_0_6_83)) (* (* 2.0 l_0_6_81) l_0_6_84))))
 (let ((?x10442 (- (- ?x10436 (* (* 2.0 l_0_6_94) l_0_6_97)) (* (* 2.0 l_0_6_95) l_0_6_98))))
 (= (- ?x10442 (* (* 2.0 l_0_6_96) l_0_6_99)) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10517 (* l_0_6_99 l_0_6_99)))
 (let ((?x10515 (* l_0_6_98 l_0_6_98)))
 (let ((?x10513 (* l_0_6_97 l_0_6_97)))
 (let ((?x10509 (* l_0_6_85 l_0_6_85)))
 (let ((?x10507 (* l_0_6_84 l_0_6_84)))
 (let ((?x10505 (* l_0_6_83 l_0_6_83)))
 (let ((?x10503 (* l_0_6_82 l_0_6_82)))
 (let ((?x9040 (* 2.0 l_0_6_48)))
 (let ((?x9112 (* ?x9040 l_0_6_53)))
 (let ((?x9037 (* 2.0 l_0_6_47)))
 (let ((?x9108 (* ?x9037 l_0_6_52)))
 (let ((?x9710 (* 8.0 l_0_6_33)))
 (let ((?x9826 (* ?x9710 l_0_6_38)))
 (let ((?x9706 (* 8.0 l_0_6_32)))
 (let ((?x9822 (* ?x9706 l_0_6_37)))
 (let ((?x9700 (* 8.0 l_0_6_18)))
 (let ((?x9816 (* ?x9700 l_0_6_23)))
 (let ((?x9696 (* 8.0 l_0_6_17)))
 (let ((?x9812 (* ?x9696 l_0_6_22)))
 (let ((?x10475 (* l_0_6_115 l_0_6_115)))
 (let ((?x10473 (* l_0_6_114 l_0_6_114)))
 (let ((?x10471 (* l_0_6_113 l_0_6_113)))
 (let ((?x10469 (* l_0_6_112 l_0_6_112)))
 (let ((?x10470 (- (- (* 1.0 (* l_0_6_10 l_0_6_10)) (* l_0_6_100 l_0_6_100)) ?x10469)))
 (let ((?x10480 (- (- (+ (+ (- (- (- ?x10470 ?x10471) ?x10473) ?x10475) ?x9812) ?x9816) ?x9822) ?x9826)))
 (let ((?x10488 (+ (+ (- (- ?x10480 ?x9108) ?x9112) (* 1.0 (* l_0_6_52 l_0_6_52))) (* 1.0 (* l_0_6_53 l_0_6_53)))))
 (let ((?x10494 (+ (+ ?x10488 (* 1.0 (* l_0_6_54 l_0_6_54))) (* 1.0 (* l_0_6_55 l_0_6_55)))))
 (let ((?x10498 (- (- ?x10494 (* (* 2.0 l_0_6_62) l_0_6_67)) (* (* 2.0 l_0_6_63) l_0_6_68))))
 (let ((?x10502 (+ (+ ?x10498 (* 1.0 (* l_0_6_7 l_0_6_7))) (* 1.0 (* l_0_6_8 l_0_6_8)))))
 (let ((?x10512 (+ (- (- (- (- ?x10502 ?x10503) ?x10505) ?x10507) ?x10509) (* 1.0 (* l_0_6_9 l_0_6_9)))))
 (= (- (- (- ?x10512 ?x10513) ?x10515) ?x10517) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x3363 (* l_0_6_36 l_0_6_36)))
 (let ((?x3349 (* l_0_6_35 l_0_6_35)))
 (let ((?x3341 (* l_0_6_34 l_0_6_34)))
 (let ((?x9444 (* l_0_6_31 l_0_6_31)))
 (let ((?x10056 (* l_0_6_21 l_0_6_21)))
 (let ((?x10052 (* l_0_6_20 l_0_6_20)))
 (let ((?x10546 (+ (+ (+ (* (- l_0_6_16) l_0_6_16) (* l_0_6_19 l_0_6_19)) ?x10052) ?x10056)))
 (= (- (- (- (+ ?x10546 ?x9444) ?x3341) ?x3349) ?x3363) 0.0)))))))))
(assert
 (let ((?x3363 (* l_0_6_36 l_0_6_36)))
 (let ((?x10589 (* 2.0 ?x3363)))
 (let ((?x3349 (* l_0_6_35 l_0_6_35)))
 (let ((?x10587 (* 2.0 ?x3349)))
 (let ((?x3341 (* l_0_6_34 l_0_6_34)))
 (let ((?x10585 (* 2.0 ?x3341)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x10583 (* ?x9311 l_0_6_34)))
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10581 (* ?x10580 l_0_6_32)))
 (let ((?x10570 (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) (* (* 4.0 l_0_6_16) l_0_6_19))))
 (let ((?x10576 (- (- ?x10570 (* (* 2.0 l_0_6_19) l_0_6_19)) (* (* 2.0 l_0_6_20) l_0_6_20))))
 (let ((?x10586 (+ (- (+ (- ?x10576 (* (* 2.0 l_0_6_21) l_0_6_21)) ?x10581) ?x10583) ?x10585)))
 (= (+ (+ ?x10586 ?x10587) ?x10589) 0.0)))))))))))))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10617 (* ?x10580 l_0_6_34)))
 (= (+ (* (* (- 2.0) l_0_6_16) l_0_6_19) ?x10617) 0.0))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x4705 (* ?x10580 l_0_6_37)))
 (= (+ (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x4705) 0.0))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10630 (* ?x10580 l_0_6_41)))
 (= (+ (* (* (- 2.0) l_0_6_16) l_0_6_26) ?x10630) 0.0))))
(assert
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x10645 (* ?x9391 l_0_6_35)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x10643 (* ?x9388 l_0_6_34)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x10634 (* ?x9165 l_0_6_20)))
 (let ((?x10640 (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_19) ?x10634) (* 2.0 (* l_0_6_19 l_0_6_19)))))
 (let ((?x10642 (+ (+ ?x10640 (* 2.0 (* l_0_6_20 l_0_6_20))) (* 2.0 (* l_0_6_21 l_0_6_21)))))
 (let ((?x10652 (- (- (+ (+ ?x10642 ?x10643) ?x10645) (* (* 2.0 l_0_6_34) l_0_6_34)) (* (* 2.0 l_0_6_35) l_0_6_35))))
 (= (- ?x10652 (* (* 2.0 l_0_6_36) l_0_6_36)) 0.0)))))))))))
(assert
 (let ((?x10709 (* l_0_6_66 l_0_6_66)))
 (let ((?x10707 (* l_0_6_65 l_0_6_65)))
 (let ((?x10705 (* l_0_6_64 l_0_6_64)))
 (let ((?x9249 (* l_0_6_51 l_0_6_51)))
 (let ((?x9246 (* l_0_6_50 l_0_6_50)))
 (let ((?x9240 (* l_0_6_49 l_0_6_49)))
 (let ((?x9536 (* 4.0 l_0_6_36)))
 (let ((?x10068 (* ?x9536 l_0_6_36)))
 (let ((?x10699 (* ?x9536 l_0_6_39)))
 (let ((?x9533 (* 4.0 l_0_6_35)))
 (let ((?x10065 (* ?x9533 l_0_6_35)))
 (let ((?x10696 (* ?x9533 l_0_6_38)))
 (let ((?x9530 (* 4.0 l_0_6_34)))
 (let ((?x10062 (* ?x9530 l_0_6_34)))
 (let ((?x10693 (* ?x9530 l_0_6_37)))
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x10691 (* ?x9391 l_0_6_38)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x10689 (* ?x9388 l_0_6_37)))
 (let ((?x10056 (* l_0_6_21 l_0_6_21)))
 (let ((?x10057 (* 4.0 ?x10056)))
 (let ((?x9524 (* 4.0 l_0_6_21)))
 (let ((?x10686 (* ?x9524 l_0_6_24)))
 (let ((?x10052 (* l_0_6_20 l_0_6_20)))
 (let ((?x10053 (* 4.0 ?x10052)))
 (let ((?x9521 (* 4.0 l_0_6_20)))
 (let ((?x10683 (* ?x9521 l_0_6_23)))
 (let ((?x10048 (* l_0_6_19 l_0_6_19)))
 (let ((?x10049 (* 4.0 ?x10048)))
 (let ((?x9518 (* 4.0 l_0_6_19)))
 (let ((?x10680 (* ?x9518 l_0_6_22)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x10678 (* ?x9165 l_0_6_23)))
 (let ((?x10684 (+ (+ (+ (- (* (* (- 2.0) l_0_6_17) l_0_6_22) ?x10678) ?x10680) ?x10049) ?x10683)))
 (let ((?x10695 (- (- (+ (+ (+ (+ (+ ?x10684 ?x10053) ?x10686) ?x10057) ?x10689) ?x10691) ?x10693) ?x10062)))
 (let ((?x10704 (- (- (- (- (- (- (- ?x10695 ?x10696) ?x10065) ?x10699) ?x10068) ?x9240) ?x9246) ?x9249)))
 (= (- (- (- ?x10704 ?x10705) ?x10707) ?x10709) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3363 (* l_0_6_36 l_0_6_36)))
 (let ((?x3349 (* l_0_6_35 l_0_6_35)))
 (let ((?x3341 (* l_0_6_34 l_0_6_34)))
 (let ((?x10056 (* l_0_6_21 l_0_6_21)))
 (let ((?x10752 (+ (- (- (* (- l_0_6_19) l_0_6_19) (* l_0_6_20 l_0_6_20)) ?x10056) ?x3341)))
 (= (+ (+ ?x10752 ?x3349) ?x3363) 0.0)))))))
(assert
 (let ((?x10653 (* 2.0 l_0_6_36)))
 (let ((?x10765 (* ?x10653 l_0_6_39)))
 (let ((?x10650 (* 2.0 l_0_6_35)))
 (let ((?x10763 (* ?x10650 l_0_6_38)))
 (let ((?x10647 (* 2.0 l_0_6_34)))
 (let ((?x10761 (* ?x10647 l_0_6_37)))
 (let ((?x10577 (* 2.0 l_0_6_21)))
 (let ((?x10759 (* ?x10577 l_0_6_24)))
 (let ((?x10574 (* 2.0 l_0_6_20)))
 (let ((?x4777 (* ?x10574 l_0_6_23)))
 (let ((?x10764 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_22) ?x4777) ?x10759) ?x10761) ?x10763)))
 (= (+ ?x10764 ?x10765) 0.0)))))))))))))
(assert
 (let ((?x10653 (* 2.0 l_0_6_36)))
 (let ((?x10781 (* ?x10653 l_0_6_43)))
 (let ((?x10650 (* 2.0 l_0_6_35)))
 (let ((?x10779 (* ?x10650 l_0_6_42)))
 (let ((?x10647 (* 2.0 l_0_6_34)))
 (let ((?x10777 (* ?x10647 l_0_6_41)))
 (let ((?x10577 (* 2.0 l_0_6_21)))
 (let ((?x10775 (* ?x10577 l_0_6_28)))
 (let ((?x10574 (* 2.0 l_0_6_20)))
 (let ((?x4798 (* ?x10574 l_0_6_27)))
 (let ((?x10780 (+ (+ (- (- (* (* (- 2.0) l_0_6_19) l_0_6_26) ?x4798) ?x10775) ?x10777) ?x10779)))
 (= (+ ?x10780 ?x10781) 0.0)))))))))))))
(assert
 (let ((?x7358 (* l_0_6_40 l_0_6_40)))
 (let ((?x7349 (* l_0_6_39 l_0_6_39)))
 (let ((?x10273 (* l_0_6_38 l_0_6_38)))
 (let ((?x7306 (* l_0_6_37 l_0_6_37)))
 (let ((?x10213 (* l_0_6_25 l_0_6_25)))
 (let ((?x10207 (* l_0_6_24 l_0_6_24)))
 (let ((?x10802 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x10207) ?x10213)))
 (= (+ (+ (+ (+ ?x10802 ?x7306) ?x10273) ?x7349) ?x7358) 0.0)))))))))
(assert
 (let ((?x10840 (* 2.0 l_0_6_40)))
 (let ((?x10841 (* ?x10840 l_0_6_44)))
 (let ((?x10837 (* 2.0 l_0_6_39)))
 (let ((?x10838 (* ?x10837 l_0_6_43)))
 (let ((?x10834 (* 2.0 l_0_6_38)))
 (let ((?x10835 (* ?x10834 l_0_6_42)))
 (let ((?x10831 (* 2.0 l_0_6_37)))
 (let ((?x10832 (* ?x10831 l_0_6_41)))
 (let ((?x10828 (* 2.0 l_0_6_25)))
 (let ((?x10829 (* ?x10828 l_0_6_29)))
 (let ((?x10825 (* 2.0 l_0_6_24)))
 (let ((?x10826 (* ?x10825 l_0_6_28)))
 (let ((?x10822 (* 2.0 l_0_6_23)))
 (let ((?x10823 (* ?x10822 l_0_6_27)))
 (let ((?x10833 (+ (- (- (- (* (* (- 2.0) l_0_6_22) l_0_6_26) ?x10823) ?x10826) ?x10829) ?x10832)))
 (= (+ (+ (+ ?x10833 ?x10835) ?x10838) ?x10841) 0.0)))))))))))))))))
(assert
 (let ((?x9651 (* l_0_6_45 l_0_6_45)))
 (let ((?x9648 (* l_0_6_44 l_0_6_44)))
 (let ((?x9645 (* l_0_6_43 l_0_6_43)))
 (let ((?x9642 (* l_0_6_42 l_0_6_42)))
 (let ((?x9639 (* l_0_6_41 l_0_6_41)))
 (let ((?x9671 (* l_0_6_30 l_0_6_30)))
 (let ((?x6782 (* l_0_6_29 l_0_6_29)))
 (let ((?x6779 (* l_0_6_28 l_0_6_28)))
 (let ((?x10864 (- (- (- (* (- l_0_6_26) l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x6779) ?x6782)))
 (= (+ (+ (+ (+ (+ (- ?x10864 ?x9671) ?x9639) ?x9642) ?x9645) ?x9648) ?x9651) 0.0)))))))))))
(assert
 (= (- (* l_0_6_16 l_0_6_16) (* l_0_6_31 l_0_6_31)) 0.0))
(assert
 (let ((?x9444 (* l_0_6_31 l_0_6_31)))
 (let ((?x10899 (* 2.0 ?x9444)))
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10581 (* ?x10580 l_0_6_32)))
 (let ((?x10897 (- (* (* 2.0 l_0_6_16) l_0_6_17) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (= (+ (- ?x10897 ?x10581) ?x10899) 0.0)))))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10617 (* ?x10580 l_0_6_34)))
 (= (- (* (* 2.0 l_0_6_16) l_0_6_19) ?x10617) 0.0))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x4705 (* ?x10580 l_0_6_37)))
 (= (- (* (* 2.0 l_0_6_16) l_0_6_22) ?x4705) 0.0))))
(assert
 (let ((?x10580 (* 2.0 l_0_6_31)))
 (let ((?x10630 (* ?x10580 l_0_6_41)))
 (= (- (* (* 2.0 l_0_6_16) l_0_6_26) ?x10630) 0.0))))
(assert
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x10645 (* ?x9391 l_0_6_35)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x10643 (* ?x9388 l_0_6_34)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x10583 (* ?x9311 l_0_6_34)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x10634 (* ?x9165 l_0_6_20)))
 (let ((?x9423 (* l_0_6_16 l_0_6_16)))
 (let ((?x10903 (* 2.0 ?x9423)))
 (let ((?x10930 (+ (+ (* (* (- 4.0) l_0_6_16) l_0_6_19) ?x10903) (* (* 2.0 l_0_6_17) l_0_6_19))))
 (let ((?x10935 (- (- (+ (+ ?x10930 ?x10634) ?x10583) (* (* 2.0 l_0_6_31) l_0_6_31)) ?x10643)))
 (= (- ?x10935 ?x10645) 0.0))))))))))))))
(assert
 (let ((?x10953 (* l_0_6_61 l_0_6_61)))
 (let ((?x9316 (* l_0_6_46 l_0_6_46)))
 (let ((?x9391 (* 2.0 l_0_6_33)))
 (let ((?x10691 (* ?x9391 l_0_6_38)))
 (let ((?x9388 (* 2.0 l_0_6_32)))
 (let ((?x10689 (* ?x9388 l_0_6_37)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x9432 (* ?x9311 l_0_6_31)))
 (let ((?x10947 (* ?x9311 l_0_6_37)))
 (let ((?x9165 (* 2.0 l_0_6_18)))
 (let ((?x10678 (* ?x9165 l_0_6_23)))
 (let ((?x9423 (* l_0_6_16 l_0_6_16)))
 (let ((?x9424 (* 4.0 ?x9423)))
 (let ((?x10945 (+ (+ (* (* (- 4.0) l_0_6_16) l_0_6_22) ?x9424) (* (* 2.0 l_0_6_17) l_0_6_22))))
 (let ((?x10954 (- (- (- (- (- (+ (+ ?x10945 ?x10678) ?x10947) ?x9432) ?x10689) ?x10691) ?x9316) ?x10953)))
 (= ?x10954 0.0)))))))))))))))))
(assert
 (let ((?x10653 (* 2.0 l_0_6_36)))
 (let ((?x10765 (* ?x10653 l_0_6_39)))
 (let ((?x10650 (* 2.0 l_0_6_35)))
 (let ((?x10763 (* ?x10650 l_0_6_38)))
 (let ((?x10647 (* 2.0 l_0_6_34)))
 (let ((?x10761 (* ?x10647 l_0_6_37)))
 (let ((?x10577 (* 2.0 l_0_6_21)))
 (let ((?x10759 (* ?x10577 l_0_6_24)))
 (let ((?x10574 (* 2.0 l_0_6_20)))
 (let ((?x4777 (* ?x10574 l_0_6_23)))
 (let ((?x8182 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_22) ?x4777) ?x10759) ?x10761) ?x10763)))
 (= (- ?x8182 ?x10765) 0.0)))))))))))))
(assert
 (let ((?x10653 (* 2.0 l_0_6_36)))
 (let ((?x10781 (* ?x10653 l_0_6_43)))
 (let ((?x10650 (* 2.0 l_0_6_35)))
 (let ((?x10779 (* ?x10650 l_0_6_42)))
 (let ((?x10647 (* 2.0 l_0_6_34)))
 (let ((?x10777 (* ?x10647 l_0_6_41)))
 (let ((?x10577 (* 2.0 l_0_6_21)))
 (let ((?x10775 (* ?x10577 l_0_6_28)))
 (let ((?x10574 (* 2.0 l_0_6_20)))
 (let ((?x4798 (* ?x10574 l_0_6_27)))
 (let ((?x10968 (- (- (+ (+ (* (* 2.0 l_0_6_19) l_0_6_26) ?x4798) ?x10775) ?x10777) ?x10779)))
 (= (- ?x10968 ?x10781) 0.0)))))))))))))
(assert
 (let ((?x7358 (* l_0_6_40 l_0_6_40)))
 (let ((?x7349 (* l_0_6_39 l_0_6_39)))
 (let ((?x10273 (* l_0_6_38 l_0_6_38)))
 (let ((?x7306 (* l_0_6_37 l_0_6_37)))
 (let ((?x10213 (* l_0_6_25 l_0_6_25)))
 (let ((?x10207 (* l_0_6_24 l_0_6_24)))
 (let ((?x10976 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x10207) ?x10213)))
 (= (- (- (- (- ?x10976 ?x7306) ?x10273) ?x7349) ?x7358) 0.0)))))))))
(assert
 (let ((?x10840 (* 2.0 l_0_6_40)))
 (let ((?x10841 (* ?x10840 l_0_6_44)))
 (let ((?x10837 (* 2.0 l_0_6_39)))
 (let ((?x10838 (* ?x10837 l_0_6_43)))
 (let ((?x10834 (* 2.0 l_0_6_38)))
 (let ((?x10835 (* ?x10834 l_0_6_42)))
 (let ((?x10831 (* 2.0 l_0_6_37)))
 (let ((?x10832 (* ?x10831 l_0_6_41)))
 (let ((?x10828 (* 2.0 l_0_6_25)))
 (let ((?x10829 (* ?x10828 l_0_6_29)))
 (let ((?x10825 (* 2.0 l_0_6_24)))
 (let ((?x10826 (* ?x10825 l_0_6_28)))
 (let ((?x10822 (* 2.0 l_0_6_23)))
 (let ((?x10823 (* ?x10822 l_0_6_27)))
 (let ((?x10984 (- (+ (+ (+ (* (* 2.0 l_0_6_22) l_0_6_26) ?x10823) ?x10826) ?x10829) ?x10832)))
 (= (- (- (- ?x10984 ?x10835) ?x10838) ?x10841) 0.0)))))))))))))))))
(assert
 (let ((?x9651 (* l_0_6_45 l_0_6_45)))
 (let ((?x9648 (* l_0_6_44 l_0_6_44)))
 (let ((?x9645 (* l_0_6_43 l_0_6_43)))
 (let ((?x9642 (* l_0_6_42 l_0_6_42)))
 (let ((?x9639 (* l_0_6_41 l_0_6_41)))
 (let ((?x9671 (* l_0_6_30 l_0_6_30)))
 (let ((?x6782 (* l_0_6_29 l_0_6_29)))
 (let ((?x6779 (* l_0_6_28 l_0_6_28)))
 (let ((?x10997 (+ (+ (+ (* l_0_6_26 l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x6779) ?x6782)))
 (= (- (- (- (- (- (+ ?x10997 ?x9671) ?x9639) ?x9642) ?x9645) ?x9648) ?x9651) 0.0)))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x2874 (* ?x9172 l_0_6_49)))
 (let ((?x9536 (* 4.0 l_0_6_36)))
 (let ((?x10699 (* ?x9536 l_0_6_39)))
 (let ((?x9533 (* 4.0 l_0_6_35)))
 (let ((?x10696 (* ?x9533 l_0_6_38)))
 (let ((?x9530 (* 4.0 l_0_6_34)))
 (let ((?x10693 (* ?x9530 l_0_6_37)))
 (let ((?x9311 (* 4.0 l_0_6_31)))
 (let ((?x10947 (* ?x9311 l_0_6_37)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9527 (* ?x9470 l_0_6_34)))
 (let ((?x9524 (* 4.0 l_0_6_21)))
 (let ((?x10686 (* ?x9524 l_0_6_24)))
 (let ((?x9521 (* 4.0 l_0_6_20)))
 (let ((?x10683 (* ?x9521 l_0_6_23)))
 (let ((?x9518 (* 4.0 l_0_6_19)))
 (let ((?x10680 (* ?x9518 l_0_6_22)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x9515 (* ?x9463 l_0_6_19)))
 (let ((?x4809 (- (- (- (+ ?x9515 (* (* 4.0 l_0_6_16) l_0_6_22)) ?x10680) ?x10683) ?x10686)))
 (let ((?x5177 (- (- (+ (+ (+ (- (- ?x4809 ?x9527) ?x10947) ?x10693) ?x10696) ?x10699) ?x2874) (* (* 2.0 l_0_6_61) l_0_6_64))))
 (= ?x5177 0.0))))))))))))))))))))))))
(assert
 (let ((?x9720 (* 2.0 l_0_6_51)))
 (let ((?x10424 (* ?x9720 l_0_6_54)))
 (let ((?x9717 (* 2.0 l_0_6_50)))
 (let ((?x10422 (* ?x9717 l_0_6_53)))
 (let ((?x9714 (* 2.0 l_0_6_49)))
 (let ((?x10419 (* ?x9714 l_0_6_52)))
 (let ((?x10119 (* 8.0 l_0_6_36)))
 (let ((?x10120 (* ?x10119 l_0_6_39)))
 (let ((?x10114 (* 8.0 l_0_6_35)))
 (let ((?x10115 (* ?x10114 l_0_6_38)))
 (let ((?x10109 (* 8.0 l_0_6_34)))
 (let ((?x10110 (* ?x10109 l_0_6_37)))
 (let ((?x10213 (* l_0_6_25 l_0_6_25)))
 (let ((?x11029 (* 2.0 ?x10213)))
 (let ((?x10207 (* l_0_6_24 l_0_6_24)))
 (let ((?x11027 (* 2.0 ?x10207)))
 (let ((?x10201 (* l_0_6_23 l_0_6_23)))
 (let ((?x11025 (* 2.0 ?x10201)))
 (let ((?x3511 (* l_0_6_22 l_0_6_22)))
 (let ((?x11023 (* 2.0 ?x3511)))
 (let ((?x10100 (* 8.0 l_0_6_21)))
 (let ((?x10101 (* ?x10100 l_0_6_24)))
 (let ((?x10095 (* 8.0 l_0_6_20)))
 (let ((?x10096 (* ?x10095 l_0_6_23)))
 (let ((?x1227 (* 8.0 l_0_6_19)))
 (let ((?x3411 (* ?x1227 l_0_6_22)))
 (let ((?x11031 (- (+ (+ (+ (+ (+ (+ ?x3411 ?x10096) ?x10101) ?x11023) ?x11025) ?x11027) ?x11029) ?x10110)))
 (let ((?x11037 (- (- (- (- ?x11031 ?x10115) ?x10120) (* (* 2.0 l_0_6_37) l_0_6_37)) (* (* 2.0 l_0_6_38) l_0_6_38))))
 (let ((?x11041 (- (- ?x11037 (* (* 2.0 l_0_6_39) l_0_6_39)) (* (* 2.0 l_0_6_40) l_0_6_40))))
 (let ((?x11046 (- (- (- (- ?x11041 ?x10419) ?x10422) ?x10424) (* (* 2.0 l_0_6_64) l_0_6_67))))
 (let ((?x11050 (- (- ?x11046 (* (* 2.0 l_0_6_65) l_0_6_68)) (* (* 2.0 l_0_6_66) l_0_6_69))))
 (= ?x11050 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9172 (* 2.0 l_0_6_46)))
 (let ((?x10372 (* ?x9172 l_0_6_52)))
 (let ((?x7358 (* l_0_6_40 l_0_6_40)))
 (let ((?x5386 (* 2.0 ?x7358)))
 (let ((?x7349 (* l_0_6_39 l_0_6_39)))
 (let ((?x5344 (* 2.0 ?x7349)))
 (let ((?x10273 (* l_0_6_38 l_0_6_38)))
 (let ((?x5330 (* 2.0 ?x10273)))
 (let ((?x7306 (* l_0_6_37 l_0_6_37)))
 (let ((?x5332 (* 2.0 ?x7306)))
 (let ((?x9470 (* 8.0 l_0_6_31)))
 (let ((?x9565 (* ?x9470 l_0_6_37)))
 (let ((?x9463 (* 8.0 l_0_6_16)))
 (let ((?x6662 (* ?x9463 l_0_6_22)))
 (let ((?x11066 (- (- ?x6662 (* (* 2.0 l_0_6_22) l_0_6_22)) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x11070 (- (- ?x11066 (* (* 2.0 l_0_6_24) l_0_6_24)) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x11078 (- (- (+ (+ (+ (+ (- ?x11070 ?x9565) ?x5332) ?x5330) ?x5344) ?x5386) ?x10372) (* (* 2.0 l_0_6_61) l_0_6_67))))
 (= ?x11078 0.0)))))))))))))))))))
(assert
 (let ((?x11090 (* l_0_6_70 l_0_6_70)))
 (let ((?x11088 (* l_0_6_69 l_0_6_69)))
 (let ((?x11086 (* l_0_6_68 l_0_6_68)))
 (let ((?x11084 (* l_0_6_67 l_0_6_67)))
 (let ((?x10492 (* l_0_6_55 l_0_6_55)))
 (let ((?x10489 (* l_0_6_54 l_0_6_54)))
 (let ((?x10486 (* l_0_6_53 l_0_6_53)))
 (let ((?x10483 (* l_0_6_52 l_0_6_52)))
 (let ((?x9578 (* 4.0 l_0_6_40)))
 (let ((?x10234 (* ?x9578 l_0_6_40)))
 (let ((?x9575 (* 4.0 l_0_6_39)))
 (let ((?x10229 (* ?x9575 l_0_6_39)))
 (let ((?x9572 (* 4.0 l_0_6_38)))
 (let ((?x10224 (* ?x9572 l_0_6_38)))
 (let ((?x9569 (* 4.0 l_0_6_37)))
 (let ((?x10219 (* ?x9569 l_0_6_37)))
 (let ((?x10213 (* l_0_6_25 l_0_6_25)))
 (let ((?x10214 (* 4.0 ?x10213)))
 (let ((?x10207 (* l_0_6_24 l_0_6_24)))
 (let ((?x10208 (* 4.0 ?x10207)))
 (let ((?x10201 (* l_0_6_23 l_0_6_23)))
 (let ((?x10202 (* 4.0 ?x10201)))
 (let ((?x3511 (* l_0_6_22 l_0_6_22)))
 (let ((?x3512 (* 4.0 ?x3511)))
 (let ((?x8309 (- (- (- (- (+ (+ (+ ?x3512 ?x10202) ?x10208) ?x10214) ?x10219) ?x10224) ?x10229) ?x10234)))
 (let ((?x11089 (- (- (- (- (- (- (- ?x8309 ?x10483) ?x10486) ?x10489) ?x10492) ?x11084) ?x11086) ?x11088)))
 (= (- ?x11089 ?x11090) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_106 0.0))
(assert
 (>= l_0_6_108 0.0))
(assert
 (>= l_0_6_111 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_120 0.0))
(assert
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x11157 (* ?x11156 l_0_7_57)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x11154 (* ?x11153 l_0_7_56)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x11151 (* ?x11150 l_0_7_33)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x11148 (* ?x11147 l_0_7_32)))
 (let ((?x11145 (* l_0_7_3 l_0_7_3)))
 (let ((?x11143 (* l_0_7_2 l_0_7_2)))
 (let ((?x11140 (* l_0_7_18 l_0_7_18)))
 (let ((?x11141 (* 4.0 ?x11140)))
 (let ((?x11137 (* l_0_7_17 l_0_7_17)))
 (let ((?x11138 (* 4.0 ?x11137)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11135 (* ?x11134 l_0_7_3)))
 (let ((?x11144 (- (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x11135) ?x11138) ?x11141) ?x11143)))
 (let ((?x11161 (- (+ (+ (- (- (- ?x11144 ?x11145) ?x11148) ?x11151) ?x11154) ?x11157) (* (* 2.0 l_0_7_77) l_0_7_86))))
 (= (+ (- ?x11161 (* (* 2.0 l_0_7_78) l_0_7_87)) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x11211 (* l_0_7_78 l_0_7_78)))
 (let ((?x11209 (* l_0_7_77 l_0_7_77)))
 (let ((?x11202 (+ (* 1.0 (* l_0_7_2 l_0_7_2)) (* 1.0 (* l_0_7_3 l_0_7_3)))))
 (let ((?x11208 (+ (+ ?x11202 (* 1.0 (* l_0_7_47 l_0_7_47))) (* 1.0 (* l_0_7_48 l_0_7_48)))))
 (= (- (- (- ?x11208 ?x11209) ?x11211) 1.0) 0.0))))))
(assert
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x11245 (* ?x11244 l_0_7_42)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x11242 (* ?x11241 l_0_7_41)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x11239 (* ?x11236 l_0_7_31)))
 (let ((?x11237 (* ?x11236 l_0_7_41)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x11234 (* ?x11233 l_0_7_27)))
 (let ((?x11227 (* l_0_7_16 l_0_7_16)))
 (let ((?x11228 (* 4.0 ?x11227)))
 (let ((?x11229 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 4.0 l_0_7_16) l_0_7_26)) ?x11228)))
 (let ((?x11240 (- (+ (+ (+ ?x11229 (* (* 2.0 l_0_7_17) l_0_7_26)) ?x11234) ?x11237) ?x11239)))
 (= (- (- ?x11240 ?x11242) ?x11245) 0.0)))))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x11292 (* ?x11291 l_0_7_56)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x11289 (* ?x11150 l_0_7_42)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x11287 (* ?x11147 l_0_7_41)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11285 (* ?x11284 l_0_7_32)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x11282 (* ?x11281 l_0_7_27)))
 (let ((?x11278 (* 4.0 l_0_7_17)))
 (let ((?x11279 (* ?x11278 l_0_7_26)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x11276 (* ?x11275 l_0_7_17)))
 (let ((?x11271 (* 2.0 l_0_7_1)))
 (let ((?x11273 (* ?x11271 l_0_7_2)))
 (let ((?x11288 (+ (- (- (- (+ (- (* ?x11271 l_0_7_11) ?x11273) ?x11276) ?x11279) ?x11282) ?x11285) ?x11287)))
 (= (- (+ (+ ?x11288 ?x11289) ?x11292) (* (* 2.0 l_0_7_76) l_0_7_86)) 0.0)))))))))))))))))))
(assert
 (let ((?x11326 (* 4.0 l_0_7_36)))
 (let ((?x11327 (* ?x11326 l_0_7_43)))
 (let ((?x11323 (* 4.0 l_0_7_35)))
 (let ((?x11324 (* ?x11323 l_0_7_42)))
 (let ((?x11320 (* 4.0 l_0_7_34)))
 (let ((?x11321 (* ?x11320 l_0_7_41)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x11237 (* ?x11236 l_0_7_41)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11317 (* ?x11284 l_0_7_34)))
 (let ((?x11314 (* 4.0 l_0_7_21)))
 (let ((?x11315 (* ?x11314 l_0_7_28)))
 (let ((?x11311 (* 4.0 l_0_7_20)))
 (let ((?x11312 (* ?x11311 l_0_7_27)))
 (let ((?x5870 (* 4.0 l_0_7_19)))
 (let ((?x5867 (* ?x5870 l_0_7_26)))
 (let ((?x11224 (* 4.0 l_0_7_16)))
 (let ((?x11225 (* ?x11224 l_0_7_26)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x5865 (* ?x11275 l_0_7_19)))
 (let ((?x11313 (- (- (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x5865) ?x11225) ?x5867) ?x11312)))
 (= (+ (+ (+ (- (- (- ?x11313 ?x11315) ?x11317) ?x11237) ?x11321) ?x11324) ?x11327) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x11292 (* ?x11291 l_0_7_56)))
 (let ((?x11373 (* 4.0 l_0_7_40)))
 (let ((?x11374 (* ?x11373 l_0_7_44)))
 (let ((?x11370 (* 4.0 l_0_7_39)))
 (let ((?x11371 (* ?x11370 l_0_7_43)))
 (let ((?x11367 (* 4.0 l_0_7_38)))
 (let ((?x11368 (* ?x11367 l_0_7_42)))
 (let ((?x11364 (* 4.0 l_0_7_37)))
 (let ((?x11365 (* ?x11364 l_0_7_41)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11362 (* ?x11284 l_0_7_41)))
 (let ((?x11360 (* ?x11284 l_0_7_37)))
 (let ((?x11358 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x11355 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x11352 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x11349 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x5967 (* ?x11275 l_0_7_26)))
 (let ((?x11350 (- (+ (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) (* ?x11275 l_0_7_22)) ?x5967) ?x11349)))
 (let ((?x11369 (+ (+ (- (- (- (- (- ?x11350 ?x11352) ?x11355) ?x11358) ?x11360) ?x11362) ?x11365) ?x11368)))
 (let ((?x11379 (+ (- (+ (+ ?x11369 ?x11371) ?x11374) ?x11292) (* (* 2.0 l_0_7_61) l_0_7_71))))
 (= ?x11379 0.0))))))))))))))))))))))))
(assert
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11362 (* ?x11284 l_0_7_41)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x5967 (* ?x11275 l_0_7_26)))
 (let ((?x11422 (- (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) ?x5967) (* (* 2.0 l_0_7_26) l_0_7_26))))
 (let ((?x11428 (- (- ?x11422 (* (* 2.0 l_0_7_27) l_0_7_27)) (* (* 2.0 l_0_7_28) l_0_7_28))))
 (let ((?x11434 (- (- ?x11428 (* (* 2.0 l_0_7_29) l_0_7_29)) (* (* 2.0 l_0_7_30) l_0_7_30))))
 (let ((?x11441 (+ (+ (- ?x11434 ?x11362) (* 2.0 (* l_0_7_41 l_0_7_41))) (* 2.0 (* l_0_7_42 l_0_7_42)))))
 (let ((?x11447 (+ (+ ?x11441 (* 2.0 (* l_0_7_43 l_0_7_43))) (* 2.0 (* l_0_7_44 l_0_7_44)))))
 (= (+ ?x11447 (* 2.0 (* l_0_7_45 l_0_7_45))) 0.0)))))))))))
(assert
 (let ((?x11508 (* 2.0 l_0_7_51)))
 (let ((?x11509 (* ?x11508 l_0_7_58)))
 (let ((?x11505 (* 2.0 l_0_7_50)))
 (let ((?x11506 (* ?x11505 l_0_7_57)))
 (let ((?x11502 (* 2.0 l_0_7_49)))
 (let ((?x11503 (* ?x11502 l_0_7_56)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x11289 (* ?x11150 l_0_7_42)))
 (let ((?x11498 (* 8.0 l_0_7_33)))
 (let ((?x11499 (* ?x11498 l_0_7_35)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x11287 (* ?x11147 l_0_7_41)))
 (let ((?x11494 (* 8.0 l_0_7_32)))
 (let ((?x11495 (* ?x11494 l_0_7_34)))
 (let ((?x11491 (* 2.0 l_0_7_3)))
 (let ((?x11492 (* ?x11491 l_0_7_5)))
 (let ((?x11488 (* 2.0 l_0_7_2)))
 (let ((?x11489 (* ?x11488 l_0_7_4)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x11282 (* ?x11281 l_0_7_27)))
 (let ((?x11484 (* 8.0 l_0_7_18)))
 (let ((?x11485 (* ?x11484 l_0_7_20)))
 (let ((?x11278 (* 4.0 l_0_7_17)))
 (let ((?x11279 (* ?x11278 l_0_7_26)))
 (let ((?x11480 (* 8.0 l_0_7_17)))
 (let ((?x11481 (* ?x11480 l_0_7_19)))
 (let ((?x11477 (* 2.0 l_0_7_13)))
 (let ((?x11478 (* ?x11477 l_0_7_6)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11475 (* ?x11134 l_0_7_5)))
 (let ((?x11483 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x11475) ?x11478) ?x11481) ?x11279)))
 (let ((?x11500 (- (- (- (- (- (+ (+ ?x11483 ?x11485) ?x11282) ?x11489) ?x11492) ?x11495) ?x11287) ?x11499)))
 (let ((?x11513 (- (+ (+ (+ (- ?x11500 ?x11289) ?x11503) ?x11506) ?x11509) (* (* 2.0 l_0_7_79) l_0_7_86))))
 (let ((?x11519 (- (- ?x11513 (* (* 2.0 l_0_7_80) l_0_7_87)) (* (* 2.0 l_0_7_81) l_0_7_88))))
 (= ?x11519 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11583 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11580 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11577 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11574 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x11157 (* ?x11156 l_0_7_57)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x11154 (* ?x11153 l_0_7_56)))
 (let ((?x11498 (* 8.0 l_0_7_33)))
 (let ((?x11569 (* ?x11498 l_0_7_42)))
 (let ((?x11567 (* ?x11498 l_0_7_38)))
 (let ((?x11494 (* 8.0 l_0_7_32)))
 (let ((?x11565 (* ?x11494 l_0_7_41)))
 (let ((?x11563 (* ?x11494 l_0_7_37)))
 (let ((?x11491 (* 2.0 l_0_7_3)))
 (let ((?x11561 (* ?x11491 l_0_7_8)))
 (let ((?x11488 (* 2.0 l_0_7_2)))
 (let ((?x11559 (* ?x11488 l_0_7_7)))
 (let ((?x11484 (* 8.0 l_0_7_18)))
 (let ((?x11557 (* ?x11484 l_0_7_27)))
 (let ((?x11555 (* ?x11484 l_0_7_23)))
 (let ((?x11480 (* 8.0 l_0_7_17)))
 (let ((?x11553 (* ?x11480 l_0_7_26)))
 (let ((?x11551 (* ?x11480 l_0_7_22)))
 (let ((?x11477 (* 2.0 l_0_7_13)))
 (let ((?x11549 (* ?x11477 l_0_7_9)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11547 (* ?x11134 l_0_7_8)))
 (let ((?x11132 (* 2.0 l_0_7_11)))
 (let ((?x11545 (* ?x11132 l_0_7_7)))
 (let ((?x11552 (+ (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x11545) ?x11547) ?x11549) ?x11551)))
 (let ((?x11566 (- (- (- (- (+ (+ (+ ?x11552 ?x11553) ?x11555) ?x11557) ?x11559) ?x11561) ?x11563) ?x11565)))
 (let ((?x11581 (+ (+ (+ (- (- (- (- ?x11566 ?x11567) ?x11569) ?x11154) ?x11157) ?x11574) ?x11577) ?x11580)))
 (let ((?x11590 (+ (+ (+ ?x11581 ?x11583) (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (let ((?x11596 (- (- ?x11590 (* (* 2.0 l_0_7_82) l_0_7_86)) (* (* 2.0 l_0_7_83) l_0_7_87))))
 (let ((?x11602 (- (- ?x11596 (* (* 2.0 l_0_7_84) l_0_7_88)) (* (* 2.0 l_0_7_85) l_0_7_89))))
 (= ?x11602 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11695 (* l_0_7_90 l_0_7_90)))
 (let ((?x11693 (* l_0_7_89 l_0_7_89)))
 (let ((?x11691 (* l_0_7_88 l_0_7_88)))
 (let ((?x11689 (* l_0_7_87 l_0_7_87)))
 (let ((?x11687 (* l_0_7_86 l_0_7_86)))
 (let ((?x11498 (* 8.0 l_0_7_33)))
 (let ((?x11569 (* ?x11498 l_0_7_42)))
 (let ((?x11494 (* 8.0 l_0_7_32)))
 (let ((?x11565 (* ?x11494 l_0_7_41)))
 (let ((?x11484 (* 8.0 l_0_7_18)))
 (let ((?x11557 (* ?x11484 l_0_7_27)))
 (let ((?x11480 (* 8.0 l_0_7_17)))
 (let ((?x11553 (* ?x11480 l_0_7_26)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11135 (* ?x11134 l_0_7_3)))
 (let ((?x11654 (+ (* (* (- 2.0) l_0_7_11) l_0_7_2) (* 1.0 (* l_0_7_11 l_0_7_11)))))
 (let ((?x11661 (+ (+ (- ?x11654 ?x11135) (* 1.0 (* l_0_7_12 l_0_7_12))) (* 1.0 (* l_0_7_13 l_0_7_13)))))
 (let ((?x11667 (+ (+ ?x11661 (* 1.0 (* l_0_7_14 l_0_7_14))) (* 1.0 (* l_0_7_15 l_0_7_15)))))
 (let ((?x11674 (+ (- (- (+ (+ ?x11667 ?x11553) ?x11557) ?x11565) ?x11569) (* 1.0 (* l_0_7_56 l_0_7_56)))))
 (let ((?x11680 (+ (+ ?x11674 (* 1.0 (* l_0_7_57 l_0_7_57))) (* 1.0 (* l_0_7_58 l_0_7_58)))))
 (let ((?x11686 (+ (+ ?x11680 (* 1.0 (* l_0_7_59 l_0_7_59))) (* 1.0 (* l_0_7_60 l_0_7_60)))))
 (= (- (- (- (- (- ?x11686 ?x11687) ?x11689) ?x11691) ?x11693) ?x11695) 0.0)))))))))))))))))))))))
(assert
 (let ((?x11730 (* l_0_7_6 l_0_7_6)))
 (let ((?x11728 (* l_0_7_5 l_0_7_5)))
 (let ((?x11726 (* l_0_7_4 l_0_7_4)))
 (let ((?x11326 (* 4.0 l_0_7_36)))
 (let ((?x11724 (* ?x11326 l_0_7_36)))
 (let ((?x11327 (* ?x11326 l_0_7_43)))
 (let ((?x11323 (* 4.0 l_0_7_35)))
 (let ((?x11721 (* ?x11323 l_0_7_35)))
 (let ((?x11324 (* ?x11323 l_0_7_42)))
 (let ((?x11320 (* 4.0 l_0_7_34)))
 (let ((?x11718 (* ?x11320 l_0_7_34)))
 (let ((?x11321 (* ?x11320 l_0_7_41)))
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x11245 (* ?x11244 l_0_7_42)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x11242 (* ?x11241 l_0_7_41)))
 (let ((?x11712 (* l_0_7_21 l_0_7_21)))
 (let ((?x11713 (* 4.0 ?x11712)))
 (let ((?x11314 (* 4.0 l_0_7_21)))
 (let ((?x11315 (* ?x11314 l_0_7_28)))
 (let ((?x11708 (* l_0_7_20 l_0_7_20)))
 (let ((?x11709 (* 4.0 ?x11708)))
 (let ((?x11311 (* 4.0 l_0_7_20)))
 (let ((?x11312 (* ?x11311 l_0_7_27)))
 (let ((?x11704 (* l_0_7_19 l_0_7_19)))
 (let ((?x11705 (* 4.0 ?x11704)))
 (let ((?x5870 (* 4.0 l_0_7_19)))
 (let ((?x5867 (* ?x5870 l_0_7_26)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x11234 (* ?x11233 l_0_7_27)))
 (let ((?x11707 (+ (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_26) ?x11234) ?x5867) ?x11705) ?x11312)))
 (let ((?x11719 (- (- (+ (+ (+ (+ (+ ?x11707 ?x11709) ?x11315) ?x11713) ?x11242) ?x11245) ?x11321) ?x11718)))
 (let ((?x11731 (- (- (- (- (- (- (- ?x11719 ?x11324) ?x11721) ?x11327) ?x11724) ?x11726) ?x11728) ?x11730)))
 (= ?x11731 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11787 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11508 (* 2.0 l_0_7_51)))
 (let ((?x11509 (* ?x11508 l_0_7_58)))
 (let ((?x11505 (* 2.0 l_0_7_50)))
 (let ((?x11506 (* ?x11505 l_0_7_57)))
 (let ((?x11782 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x11502 (* 2.0 l_0_7_49)))
 (let ((?x11503 (* ?x11502 l_0_7_56)))
 (let ((?x11373 (* 4.0 l_0_7_40)))
 (let ((?x11374 (* ?x11373 l_0_7_44)))
 (let ((?x11777 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x11370 (* 4.0 l_0_7_39)))
 (let ((?x11371 (* ?x11370 l_0_7_43)))
 (let ((?x11367 (* 4.0 l_0_7_38)))
 (let ((?x11368 (* ?x11367 l_0_7_42)))
 (let ((?x11364 (* 4.0 l_0_7_37)))
 (let ((?x11365 (* ?x11364 l_0_7_41)))
 (let ((?x11768 (* 8.0 l_0_7_36)))
 (let ((?x11771 (* ?x11768 l_0_7_43)))
 (let ((?x11769 (* ?x11768 l_0_7_39)))
 (let ((?x11763 (* 8.0 l_0_7_35)))
 (let ((?x11766 (* ?x11763 l_0_7_42)))
 (let ((?x11764 (* ?x11763 l_0_7_38)))
 (let ((?x11758 (* 8.0 l_0_7_34)))
 (let ((?x11761 (* ?x11758 l_0_7_41)))
 (let ((?x11759 (* ?x11758 l_0_7_37)))
 (let ((?x11358 (* (* 4.0 l_0_7_25) l_0_7_29)))
 (let ((?x11355 (* (* 4.0 l_0_7_24) l_0_7_28)))
 (let ((?x11352 (* (* 4.0 l_0_7_23) l_0_7_27)))
 (let ((?x11349 (* (* 4.0 l_0_7_22) l_0_7_26)))
 (let ((?x11749 (* 8.0 l_0_7_21)))
 (let ((?x11752 (* ?x11749 l_0_7_28)))
 (let ((?x11750 (* ?x11749 l_0_7_24)))
 (let ((?x11744 (* 8.0 l_0_7_20)))
 (let ((?x11747 (* ?x11744 l_0_7_27)))
 (let ((?x11745 (* ?x11744 l_0_7_23)))
 (let ((?x11740 (* 8.0 l_0_7_19)))
 (let ((?x11742 (* ?x11740 l_0_7_26)))
 (let ((?x11741 (* ?x11740 l_0_7_22)))
 (let ((?x11755 (+ (+ (+ (+ (+ (+ (+ ?x11741 ?x11742) ?x11745) ?x11747) ?x11750) ?x11752) ?x11349) ?x11352)))
 (let ((?x11770 (- (- (- (- (- (+ (+ ?x11755 ?x11355) ?x11358) ?x11759) ?x11761) ?x11764) ?x11766) ?x11769)))
 (let ((?x11780 (- (- (- (- (- (- (- ?x11770 ?x11771) ?x11365) ?x11368) ?x11371) ?x11777) ?x11374) ?x11503)))
 (let ((?x11791 (+ (- (- (- (- ?x11780 ?x11782) ?x11506) ?x11509) ?x11787) (* (* 2.0 l_0_7_64) l_0_7_71))))
 (let ((?x11797 (+ (+ ?x11791 (* (* 2.0 l_0_7_65) l_0_7_72)) (* (* 2.0 l_0_7_66) l_0_7_73))))
 (= ?x11797 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11768 (* 8.0 l_0_7_36)))
 (let ((?x11771 (* ?x11768 l_0_7_43)))
 (let ((?x11763 (* 8.0 l_0_7_35)))
 (let ((?x11766 (* ?x11763 l_0_7_42)))
 (let ((?x11758 (* 8.0 l_0_7_34)))
 (let ((?x11761 (* ?x11758 l_0_7_41)))
 (let ((?x11466 (* l_0_7_30 l_0_7_30)))
 (let ((?x11467 (* 2.0 ?x11466)))
 (let ((?x1045 (* l_0_7_29 l_0_7_29)))
 (let ((?x8606 (* 2.0 ?x1045)))
 (let ((?x1039 (* l_0_7_28 l_0_7_28)))
 (let ((?x8603 (* 2.0 ?x1039)))
 (let ((?x8600 (* l_0_7_27 l_0_7_27)))
 (let ((?x11458 (* 2.0 ?x8600)))
 (let ((?x11453 (* l_0_7_26 l_0_7_26)))
 (let ((?x11454 (* 2.0 ?x11453)))
 (let ((?x11749 (* 8.0 l_0_7_21)))
 (let ((?x11752 (* ?x11749 l_0_7_28)))
 (let ((?x11744 (* 8.0 l_0_7_20)))
 (let ((?x11747 (* ?x11744 l_0_7_27)))
 (let ((?x11740 (* 8.0 l_0_7_19)))
 (let ((?x11742 (* ?x11740 l_0_7_26)))
 (let ((?x11477 (* 2.0 l_0_7_13)))
 (let ((?x11478 (* ?x11477 l_0_7_6)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11475 (* ?x11134 l_0_7_5)))
 (let ((?x11847 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x11475) ?x11478) ?x11742) ?x11747)))
 (let ((?x11854 (- (+ (+ (+ (+ (+ (+ ?x11847 ?x11752) ?x11454) ?x11458) ?x8603) ?x8606) ?x11467) ?x11761)))
 (let ((?x11862 (- (- (- (- ?x11854 ?x11766) ?x11771) (* (* 2.0 l_0_7_41) l_0_7_41)) (* (* 2.0 l_0_7_42) l_0_7_42))))
 (let ((?x11868 (- (- ?x11862 (* (* 2.0 l_0_7_43) l_0_7_43)) (* (* 2.0 l_0_7_44) l_0_7_44))))
 (= (- ?x11868 (* (* 2.0 l_0_7_45) l_0_7_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11937 (* l_0_7_9 l_0_7_9)))
 (let ((?x11935 (* l_0_7_8 l_0_7_8)))
 (let ((?x11930 (* l_0_7_7 l_0_7_7)))
 (let ((?x11583 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x11580 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x11577 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x11574 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x11373 (* 4.0 l_0_7_40)))
 (let ((?x11915 (* ?x11373 l_0_7_40)))
 (let ((?x11913 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x11370 (* 4.0 l_0_7_39)))
 (let ((?x11910 (* ?x11370 l_0_7_39)))
 (let ((?x11908 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x11367 (* 4.0 l_0_7_38)))
 (let ((?x11905 (* ?x11367 l_0_7_38)))
 (let ((?x11903 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x11364 (* 4.0 l_0_7_37)))
 (let ((?x11900 (* ?x11364 l_0_7_37)))
 (let ((?x11898 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x11894 (* l_0_7_25 l_0_7_25)))
 (let ((?x11895 (* 4.0 ?x11894)))
 (let ((?x11892 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x11888 (* l_0_7_24 l_0_7_24)))
 (let ((?x11889 (* 4.0 ?x11888)))
 (let ((?x11886 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x11882 (* l_0_7_23 l_0_7_23)))
 (let ((?x11883 (* 4.0 ?x11882)))
 (let ((?x8942 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x8931 (* l_0_7_22 l_0_7_22)))
 (let ((?x8938 (* 4.0 ?x8931)))
 (let ((?x1535 (+ (+ (* (- l_0_7_10) l_0_7_10) (* (* 8.0 l_0_7_22) l_0_7_26)) ?x8938)))
 (let ((?x11899 (- (+ (+ (+ (+ (+ (+ ?x1535 ?x8942) ?x11883) ?x11886) ?x11889) ?x11892) ?x11895) ?x11898)))
 (let ((?x11916 (- (- (- (- (- (- (- ?x11899 ?x11900) ?x11903) ?x11905) ?x11908) ?x11910) ?x11913) ?x11915)))
 (let ((?x11923 (+ (- (- (- (- ?x11916 ?x11574) ?x11577) ?x11580) ?x11583) (* (* 2.0 l_0_7_67) l_0_7_71))))
 (let ((?x11929 (+ (+ ?x11923 (* (* 2.0 l_0_7_68) l_0_7_72)) (* (* 2.0 l_0_7_69) l_0_7_73))))
 (let ((?x11938 (- (- (+ (- ?x11929 ?x11930) (* (* 2.0 l_0_7_70) l_0_7_74)) ?x11935) ?x11937)))
 (= ?x11938 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12059 (* l_0_7_75 l_0_7_75)))
 (let ((?x12057 (* l_0_7_74 l_0_7_74)))
 (let ((?x12055 (* l_0_7_73 l_0_7_73)))
 (let ((?x12053 (* l_0_7_72 l_0_7_72)))
 (let ((?x12051 (* l_0_7_71 l_0_7_71)))
 (let ((?x11684 (* l_0_7_60 l_0_7_60)))
 (let ((?x11681 (* l_0_7_59 l_0_7_59)))
 (let ((?x11678 (* l_0_7_58 l_0_7_58)))
 (let ((?x11675 (* l_0_7_57 l_0_7_57)))
 (let ((?x11672 (* l_0_7_56 l_0_7_56)))
 (let ((?x12044 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x12041 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x12038 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x12035 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x12032 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x11913 (* (* 8.0 l_0_7_40) l_0_7_44)))
 (let ((?x11908 (* (* 8.0 l_0_7_39) l_0_7_43)))
 (let ((?x11903 (* (* 8.0 l_0_7_38) l_0_7_42)))
 (let ((?x11898 (* (* 8.0 l_0_7_37) l_0_7_41)))
 (let ((?x11466 (* l_0_7_30 l_0_7_30)))
 (let ((?x12025 (* 4.0 ?x11466)))
 (let ((?x1045 (* l_0_7_29 l_0_7_29)))
 (let ((?x12023 (* 4.0 ?x1045)))
 (let ((?x1039 (* l_0_7_28 l_0_7_28)))
 (let ((?x12021 (* 4.0 ?x1039)))
 (let ((?x8600 (* l_0_7_27 l_0_7_27)))
 (let ((?x12019 (* 4.0 ?x8600)))
 (let ((?x11453 (* l_0_7_26 l_0_7_26)))
 (let ((?x12017 (* 4.0 ?x11453)))
 (let ((?x11892 (* (* 8.0 l_0_7_25) l_0_7_29)))
 (let ((?x11886 (* (* 8.0 l_0_7_24) l_0_7_28)))
 (let ((?x8942 (* (* 8.0 l_0_7_23) l_0_7_27)))
 (let ((?x8920 (* (* 8.0 l_0_7_22) l_0_7_26)))
 (let ((?x11477 (* 2.0 l_0_7_13)))
 (let ((?x11549 (* ?x11477 l_0_7_9)))
 (let ((?x11134 (* 2.0 l_0_7_12)))
 (let ((?x11547 (* ?x11134 l_0_7_8)))
 (let ((?x11132 (* 2.0 l_0_7_11)))
 (let ((?x11545 (* ?x11132 l_0_7_7)))
 (let ((?x12013 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x11545) ?x11547) ?x11549) ?x8920)))
 (let ((?x12024 (+ (+ (+ (+ (+ (+ (+ ?x12013 ?x8942) ?x11886) ?x11892) ?x12017) ?x12019) ?x12021) ?x12023)))
 (let ((?x12036 (- (- (- (- (- (- (+ ?x12024 ?x12025) ?x11898) ?x11903) ?x11908) ?x11913) ?x12032) ?x12035)))
 (let ((?x12049 (- (- (- (- (- (- (- ?x12036 ?x12038) ?x12041) ?x12044) ?x11672) ?x11675) ?x11678) ?x11681)))
 (= (+ (+ (+ (+ (+ (- ?x12049 ?x11684) ?x12051) ?x12053) ?x12055) ?x12057) ?x12059) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12044 (* (* 4.0 l_0_7_45) l_0_7_45)))
 (let ((?x12041 (* (* 4.0 l_0_7_44) l_0_7_44)))
 (let ((?x12038 (* (* 4.0 l_0_7_43) l_0_7_43)))
 (let ((?x12035 (* (* 4.0 l_0_7_42) l_0_7_42)))
 (let ((?x12032 (* (* 4.0 l_0_7_41) l_0_7_41)))
 (let ((?x11466 (* l_0_7_30 l_0_7_30)))
 (let ((?x12025 (* 4.0 ?x11466)))
 (let ((?x1045 (* l_0_7_29 l_0_7_29)))
 (let ((?x12023 (* 4.0 ?x1045)))
 (let ((?x1039 (* l_0_7_28 l_0_7_28)))
 (let ((?x12021 (* 4.0 ?x1039)))
 (let ((?x8600 (* l_0_7_27 l_0_7_27)))
 (let ((?x12019 (* 4.0 ?x8600)))
 (let ((?x11453 (* l_0_7_26 l_0_7_26)))
 (let ((?x12017 (* 4.0 ?x11453)))
 (let ((?x11665 (* l_0_7_15 l_0_7_15)))
 (let ((?x11662 (* l_0_7_14 l_0_7_14)))
 (let ((?x11659 (* l_0_7_13 l_0_7_13)))
 (let ((?x12075 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x11659) ?x11662)))
 (let ((?x12082 (- (+ (+ (+ (+ (+ (- ?x12075 ?x11665) ?x12017) ?x12019) ?x12021) ?x12023) ?x12025) ?x12032)))
 (= (- (- (- (- ?x12082 ?x12035) ?x12038) ?x12041) ?x12044) 0.0))))))))))))))))))))))
(assert
 (let ((?x6244 (* l_0_7_76 l_0_7_76)))
 (let ((?x5766 (* l_0_7_33 l_0_7_33)))
 (let ((?x5765 (* l_0_7_32 l_0_7_32)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x2091 (* ?x11236 l_0_7_32)))
 (let ((?x11140 (* l_0_7_18 l_0_7_18)))
 (let ((?x11137 (* l_0_7_17 l_0_7_17)))
 (let ((?x11224 (* 4.0 l_0_7_16)))
 (let ((?x2083 (* ?x11224 l_0_7_17)))
 (let ((?x2135 (+ (+ (+ (- (* 1.0 (* l_0_7_1 l_0_7_1)) ?x2083) ?x11137) ?x11140) ?x2091)))
 (let ((?x5492 (- (+ (- (- ?x2135 ?x5765) ?x5766) (* 1.0 (* l_0_7_46 l_0_7_46))) ?x6244)))
 (= ?x5492 0.0)))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x12104 (* ?x11291 l_0_7_47)))
 (let ((?x5766 (* l_0_7_33 l_0_7_33)))
 (let ((?x12102 (* 2.0 ?x5766)))
 (let ((?x5765 (* l_0_7_32 l_0_7_32)))
 (let ((?x12100 (* 2.0 ?x5765)))
 (let ((?x11271 (* 2.0 l_0_7_1)))
 (let ((?x11273 (* ?x11271 l_0_7_2)))
 (let ((?x12099 (- (- ?x11273 (* (* 2.0 l_0_7_17) l_0_7_17)) (* (* 2.0 l_0_7_18) l_0_7_18))))
 (let ((?x12107 (- (+ (+ (+ ?x12099 ?x12100) ?x12102) ?x12104) (* (* 2.0 l_0_7_76) l_0_7_77))))
 (= ?x12107 0.0))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x12124 (* ?x11291 l_0_7_49)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x12122 (* ?x11150 l_0_7_35)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x12120 (* ?x11147 l_0_7_34)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x2091 (* ?x11236 l_0_7_32)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x12117 (* ?x11281 l_0_7_20)))
 (let ((?x11278 (* 4.0 l_0_7_17)))
 (let ((?x12115 (* ?x11278 l_0_7_19)))
 (let ((?x11224 (* 4.0 l_0_7_16)))
 (let ((?x2083 (* ?x11224 l_0_7_17)))
 (let ((?x12119 (- (- (- (+ (* (* 2.0 l_0_7_1) l_0_7_4) ?x2083) ?x12115) ?x12117) ?x2091)))
 (let ((?x12127 (- (+ (+ (+ ?x12119 ?x12120) ?x12122) ?x12124) (* (* 2.0 l_0_7_76) l_0_7_79))))
 (= ?x12127 0.0))))))))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x12153 (* ?x11291 l_0_7_52)))
 (let ((?x12104 (* ?x11291 l_0_7_47)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x12150 (* ?x11150 l_0_7_38)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x12148 (* ?x11147 l_0_7_37)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11285 (* ?x11284 l_0_7_32)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x12145 (* ?x11281 l_0_7_23)))
 (let ((?x11278 (* 4.0 l_0_7_17)))
 (let ((?x12143 (* ?x11278 l_0_7_22)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x11276 (* ?x11275 l_0_7_17)))
 (let ((?x12147 (- (- (- (+ (* (* 2.0 l_0_7_1) l_0_7_7) ?x11276) ?x12143) ?x12145) ?x11285)))
 (let ((?x12156 (+ (+ (- (+ (+ ?x12147 ?x12148) ?x12150) ?x12104) ?x12153) (* (* 2.0 l_0_7_61) l_0_7_62))))
 (= (- ?x12156 (* (* 2.0 l_0_7_76) l_0_7_82)) 0.0)))))))))))))))))))
(assert
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x12186 (* ?x11156 l_0_7_50)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x12184 (* ?x11153 l_0_7_49)))
 (let ((?x11491 (* 2.0 l_0_7_3)))
 (let ((?x11492 (* ?x11491 l_0_7_5)))
 (let ((?x11488 (* 2.0 l_0_7_2)))
 (let ((?x11489 (* ?x11488 l_0_7_4)))
 (let ((?x12177 (+ (* 2.0 (* l_0_7_17 l_0_7_17)) (* 2.0 (* l_0_7_18 l_0_7_18)))))
 (let ((?x12183 (- (- (+ (+ ?x12177 ?x11489) ?x11492) (* (* 2.0 l_0_7_32) l_0_7_32)) (* (* 2.0 l_0_7_33) l_0_7_33))))
 (let ((?x12191 (- (- (+ (+ ?x12183 ?x12184) ?x12186) (* (* 2.0 l_0_7_77) l_0_7_79)) (* (* 2.0 l_0_7_78) l_0_7_80))))
 (= ?x12191 0.0)))))))))))))
(assert
 (let ((?x12212 (* l_0_7_63 l_0_7_63)))
 (let ((?x12210 (* l_0_7_62 l_0_7_62)))
 (let ((?x11206 (* l_0_7_48 l_0_7_48)))
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x12207 (* ?x11156 l_0_7_53)))
 (let ((?x11203 (* l_0_7_47 l_0_7_47)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x12204 (* ?x11153 l_0_7_52)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x11151 (* ?x11150 l_0_7_33)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x11148 (* ?x11147 l_0_7_32)))
 (let ((?x11491 (* 2.0 l_0_7_3)))
 (let ((?x11561 (* ?x11491 l_0_7_8)))
 (let ((?x11488 (* 2.0 l_0_7_2)))
 (let ((?x11559 (* ?x11488 l_0_7_7)))
 (let ((?x11140 (* l_0_7_18 l_0_7_18)))
 (let ((?x11141 (* 4.0 ?x11140)))
 (let ((?x11137 (* l_0_7_17 l_0_7_17)))
 (let ((?x11138 (* 4.0 ?x11137)))
 (let ((?x12206 (- (+ (- (- (+ (+ (+ ?x11138 ?x11141) ?x11559) ?x11561) ?x11148) ?x11151) ?x12204) ?x11203)))
 (let ((?x12215 (- (+ (+ (- (+ ?x12206 ?x12207) ?x11206) ?x12210) ?x12212) (* (* 2.0 l_0_7_77) l_0_7_82))))
 (= (- ?x12215 (* (* 2.0 l_0_7_78) l_0_7_83)) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12264 (* l_0_7_81 l_0_7_81)))
 (let ((?x12262 (* l_0_7_80 l_0_7_80)))
 (let ((?x12260 (* l_0_7_79 l_0_7_79)))
 (let ((?x5766 (* l_0_7_33 l_0_7_33)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x12122 (* ?x11150 l_0_7_35)))
 (let ((?x5765 (* l_0_7_32 l_0_7_32)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x12120 (* ?x11147 l_0_7_34)))
 (let ((?x11140 (* l_0_7_18 l_0_7_18)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x12117 (* ?x11281 l_0_7_20)))
 (let ((?x12239 (+ (- (* (* 4.0 l_0_7_17) l_0_7_19) (* l_0_7_17 l_0_7_17)) ?x12117)))
 (let ((?x12246 (+ (+ (- (+ (- (- ?x12239 ?x11140) ?x12120) ?x5765) ?x12122) ?x5766) (* 1.0 (* l_0_7_4 l_0_7_4)))))
 (let ((?x12251 (+ (+ ?x12246 (* 1.0 (* l_0_7_49 l_0_7_49))) (* 1.0 (* l_0_7_5 l_0_7_5)))))
 (let ((?x12257 (+ (+ ?x12251 (* 1.0 (* l_0_7_50 l_0_7_50))) (* 1.0 (* l_0_7_51 l_0_7_51)))))
 (let ((?x12265 (- (- (- (+ ?x12257 (* 1.0 (* l_0_7_6 l_0_7_6))) ?x12260) ?x12262) ?x12264)))
 (= ?x12265 0.0)))))))))))))))))))
(assert
 (let ((?x11787 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x11508 (* 2.0 l_0_7_51)))
 (let ((?x12287 (* ?x11508 l_0_7_54)))
 (let ((?x11505 (* 2.0 l_0_7_50)))
 (let ((?x12285 (* ?x11505 l_0_7_53)))
 (let ((?x11782 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x11502 (* 2.0 l_0_7_49)))
 (let ((?x12282 (* ?x11502 l_0_7_52)))
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x12186 (* ?x11156 l_0_7_50)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x12184 (* ?x11153 l_0_7_49)))
 (let ((?x11777 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x11150 (* 4.0 l_0_7_33)))
 (let ((?x12150 (* ?x11150 l_0_7_38)))
 (let ((?x11498 (* 8.0 l_0_7_33)))
 (let ((?x11499 (* ?x11498 l_0_7_35)))
 (let ((?x11147 (* 4.0 l_0_7_32)))
 (let ((?x12148 (* ?x11147 l_0_7_37)))
 (let ((?x11494 (* 8.0 l_0_7_32)))
 (let ((?x11495 (* ?x11494 l_0_7_34)))
 (let ((?x11281 (* 4.0 l_0_7_18)))
 (let ((?x12145 (* ?x11281 l_0_7_23)))
 (let ((?x11484 (* 8.0 l_0_7_18)))
 (let ((?x11485 (* ?x11484 l_0_7_20)))
 (let ((?x11278 (* 4.0 l_0_7_17)))
 (let ((?x12143 (* ?x11278 l_0_7_22)))
 (let ((?x11480 (* 8.0 l_0_7_17)))
 (let ((?x11481 (* ?x11480 l_0_7_19)))
 (let ((?x12278 (- (- (- (- (+ (+ (+ ?x11481 ?x12143) ?x11485) ?x12145) ?x11495) ?x12148) ?x11499) ?x12150)))
 (let ((?x12288 (+ (+ (+ (+ (- (- (+ ?x12278 ?x11777) ?x12184) ?x12186) ?x12282) ?x11782) ?x12285) ?x12287)))
 (let ((?x12293 (+ (+ (+ ?x12288 ?x11787) (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (let ((?x12297 (- (- ?x12293 (* (* 2.0 l_0_7_79) l_0_7_82)) (* (* 2.0 l_0_7_80) l_0_7_83))))
 (= (- ?x12297 (* (* 2.0 l_0_7_81) l_0_7_84)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12338 (* l_0_7_85 l_0_7_85)))
 (let ((?x12336 (* l_0_7_84 l_0_7_84)))
 (let ((?x12334 (* l_0_7_83 l_0_7_83)))
 (let ((?x12332 (* l_0_7_82 l_0_7_82)))
 (let ((?x11156 (* 2.0 l_0_7_48)))
 (let ((?x12207 (* ?x11156 l_0_7_53)))
 (let ((?x11153 (* 2.0 l_0_7_47)))
 (let ((?x12204 (* ?x11153 l_0_7_52)))
 (let ((?x11498 (* 8.0 l_0_7_33)))
 (let ((?x11567 (* ?x11498 l_0_7_38)))
 (let ((?x11494 (* 8.0 l_0_7_32)))
 (let ((?x11563 (* ?x11494 l_0_7_37)))
 (let ((?x11484 (* 8.0 l_0_7_18)))
 (let ((?x11555 (* ?x11484 l_0_7_23)))
 (let ((?x11480 (* 8.0 l_0_7_17)))
 (let ((?x11551 (* ?x11480 l_0_7_22)))
 (let ((?x12309 (- (- (+ (+ (* 1.0 (* l_0_7_10 l_0_7_10)) ?x11551) ?x11555) ?x11563) ?x11567)))
 (let ((?x12317 (+ (+ (- (- ?x12309 ?x12204) ?x12207) (* 1.0 (* l_0_7_52 l_0_7_52))) (* 1.0 (* l_0_7_53 l_0_7_53)))))
 (let ((?x12323 (+ (+ ?x12317 (* 1.0 (* l_0_7_54 l_0_7_54))) (* 1.0 (* l_0_7_55 l_0_7_55)))))
 (let ((?x12327 (+ (+ ?x12323 (* (* 2.0 l_0_7_62) l_0_7_67)) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (let ((?x12331 (+ (+ ?x12327 (* 1.0 (* l_0_7_7 l_0_7_7))) (* 1.0 (* l_0_7_8 l_0_7_8)))))
 (let ((?x12341 (+ (- (- (- (- ?x12331 ?x12332) ?x12334) ?x12336) ?x12338) (* 1.0 (* l_0_7_9 l_0_7_9)))))
 (= ?x12341 0.0))))))))))))))))))))))))
(assert
 (let ((?x8862 (* l_0_7_36 l_0_7_36)))
 (let ((?x8852 (* l_0_7_35 l_0_7_35)))
 (let ((?x1450 (* l_0_7_34 l_0_7_34)))
 (let ((?x11257 (* l_0_7_31 l_0_7_31)))
 (let ((?x11712 (* l_0_7_21 l_0_7_21)))
 (let ((?x11708 (* l_0_7_20 l_0_7_20)))
 (let ((?x12357 (+ (+ (+ (* (- l_0_7_16) l_0_7_16) (* l_0_7_19 l_0_7_19)) ?x11708) ?x11712)))
 (= (- (- (- (+ ?x12357 ?x11257) ?x1450) ?x8852) ?x8862) 0.0)))))))))
(assert
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x12395 (* ?x11236 l_0_7_34)))
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12393 (* ?x12392 l_0_7_32)))
 (let ((?x12382 (+ (* (* (- 2.0) l_0_7_16) l_0_7_17) (* (* 4.0 l_0_7_16) l_0_7_19))))
 (let ((?x12388 (- (- ?x12382 (* (* 2.0 l_0_7_19) l_0_7_19)) (* (* 2.0 l_0_7_20) l_0_7_20))))
 (let ((?x12398 (+ (- (+ (- ?x12388 (* (* 2.0 l_0_7_21) l_0_7_21)) ?x12393) ?x12395) (* 2.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x12402 (+ (+ ?x12398 (* 2.0 (* l_0_7_35 l_0_7_35))) (* 2.0 (* l_0_7_36 l_0_7_36)))))
 (= ?x12402 0.0))))))))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12431 (* ?x12392 l_0_7_34)))
 (= (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) ?x12431) 0.0))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12436 (* ?x12392 l_0_7_37)))
 (= (+ (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x12436) 0.0))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12444 (* ?x12392 l_0_7_41)))
 (= (+ (* (* (- 2.0) l_0_7_16) l_0_7_26) ?x12444) 0.0))))
(assert
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x12459 (* ?x11244 l_0_7_35)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x12457 (* ?x11241 l_0_7_34)))
 (let ((?x11712 (* l_0_7_21 l_0_7_21)))
 (let ((?x12414 (* 2.0 ?x11712)))
 (let ((?x11708 (* l_0_7_20 l_0_7_20)))
 (let ((?x9736 (* 2.0 ?x11708)))
 (let ((?x11704 (* l_0_7_19 l_0_7_19)))
 (let ((?x12407 (* 2.0 ?x11704)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x12448 (* ?x11233 l_0_7_20)))
 (let ((?x12456 (+ (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x12448) ?x12407) ?x9736) ?x12414)))
 (let ((?x12466 (- (- (+ (+ ?x12456 ?x12457) ?x12459) (* (* 2.0 l_0_7_34) l_0_7_34)) (* (* 2.0 l_0_7_35) l_0_7_35))))
 (= (- ?x12466 (* (* 2.0 l_0_7_36) l_0_7_36)) 0.0))))))))))))))))
(assert
 (let ((?x12518 (* l_0_7_66 l_0_7_66)))
 (let ((?x12516 (* l_0_7_65 l_0_7_65)))
 (let ((?x12514 (* l_0_7_64 l_0_7_64)))
 (let ((?x12255 (* l_0_7_51 l_0_7_51)))
 (let ((?x12252 (* l_0_7_50 l_0_7_50)))
 (let ((?x12247 (* l_0_7_49 l_0_7_49)))
 (let ((?x11326 (* 4.0 l_0_7_36)))
 (let ((?x11724 (* ?x11326 l_0_7_36)))
 (let ((?x12508 (* ?x11326 l_0_7_39)))
 (let ((?x11323 (* 4.0 l_0_7_35)))
 (let ((?x11721 (* ?x11323 l_0_7_35)))
 (let ((?x12505 (* ?x11323 l_0_7_38)))
 (let ((?x11320 (* 4.0 l_0_7_34)))
 (let ((?x11718 (* ?x11320 l_0_7_34)))
 (let ((?x12502 (* ?x11320 l_0_7_37)))
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x12500 (* ?x11244 l_0_7_38)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x12498 (* ?x11241 l_0_7_37)))
 (let ((?x11712 (* l_0_7_21 l_0_7_21)))
 (let ((?x11713 (* 4.0 ?x11712)))
 (let ((?x11314 (* 4.0 l_0_7_21)))
 (let ((?x12495 (* ?x11314 l_0_7_24)))
 (let ((?x11708 (* l_0_7_20 l_0_7_20)))
 (let ((?x11709 (* 4.0 ?x11708)))
 (let ((?x11311 (* 4.0 l_0_7_20)))
 (let ((?x12492 (* ?x11311 l_0_7_23)))
 (let ((?x11704 (* l_0_7_19 l_0_7_19)))
 (let ((?x11705 (* 4.0 ?x11704)))
 (let ((?x5870 (* 4.0 l_0_7_19)))
 (let ((?x12489 (* ?x5870 l_0_7_22)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x12487 (* ?x11233 l_0_7_23)))
 (let ((?x12493 (+ (+ (+ (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x12487) ?x12489) ?x11705) ?x12492)))
 (let ((?x12504 (- (- (+ (+ (+ (+ (+ ?x12493 ?x11709) ?x12495) ?x11713) ?x12498) ?x12500) ?x12502) ?x11718)))
 (let ((?x12513 (- (- (- (- (- (- (- ?x12504 ?x12505) ?x11721) ?x12508) ?x11724) ?x12247) ?x12252) ?x12255)))
 (= (+ (+ (+ ?x12513 ?x12514) ?x12516) ?x12518) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8862 (* l_0_7_36 l_0_7_36)))
 (let ((?x8852 (* l_0_7_35 l_0_7_35)))
 (let ((?x1450 (* l_0_7_34 l_0_7_34)))
 (let ((?x11712 (* l_0_7_21 l_0_7_21)))
 (let ((?x2909 (+ (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x11712) ?x1450)))
 (= (+ (+ ?x2909 ?x8852) ?x8862) 0.0)))))))
(assert
 (let ((?x12467 (* 2.0 l_0_7_36)))
 (let ((?x12557 (* ?x12467 l_0_7_39)))
 (let ((?x12464 (* 2.0 l_0_7_35)))
 (let ((?x12555 (* ?x12464 l_0_7_38)))
 (let ((?x12461 (* 2.0 l_0_7_34)))
 (let ((?x12553 (* ?x12461 l_0_7_37)))
 (let ((?x12389 (* 2.0 l_0_7_21)))
 (let ((?x12551 (* ?x12389 l_0_7_24)))
 (let ((?x12386 (* 2.0 l_0_7_20)))
 (let ((?x12549 (* ?x12386 l_0_7_23)))
 (let ((?x12556 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x12549) ?x12551) ?x12553) ?x12555)))
 (= (+ ?x12556 ?x12557) 0.0)))))))))))))
(assert
 (let ((?x12467 (* 2.0 l_0_7_36)))
 (let ((?x12576 (* ?x12467 l_0_7_43)))
 (let ((?x12464 (* 2.0 l_0_7_35)))
 (let ((?x12574 (* ?x12464 l_0_7_42)))
 (let ((?x12461 (* 2.0 l_0_7_34)))
 (let ((?x12572 (* ?x12461 l_0_7_41)))
 (let ((?x12389 (* 2.0 l_0_7_21)))
 (let ((?x9880 (* ?x12389 l_0_7_28)))
 (let ((?x12386 (* 2.0 l_0_7_20)))
 (let ((?x3029 (* ?x12386 l_0_7_27)))
 (let ((?x12575 (+ (+ (- (- (* (* (- 2.0) l_0_7_19) l_0_7_26) ?x3029) ?x9880) ?x12572) ?x12574)))
 (= (+ ?x12575 ?x12576) 0.0)))))))))))))
(assert
 (let ((?x11971 (* l_0_7_40 l_0_7_40)))
 (let ((?x11964 (* l_0_7_39 l_0_7_39)))
 (let ((?x11957 (* l_0_7_38 l_0_7_38)))
 (let ((?x1779 (* l_0_7_37 l_0_7_37)))
 (let ((?x11894 (* l_0_7_25 l_0_7_25)))
 (let ((?x11888 (* l_0_7_24 l_0_7_24)))
 (let ((?x12597 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x11888) ?x11894)))
 (= (+ (+ (+ (+ ?x12597 ?x1779) ?x11957) ?x11964) ?x11971) 0.0)))))))))
(assert
 (let ((?x12632 (* 2.0 l_0_7_40)))
 (let ((?x12633 (* ?x12632 l_0_7_44)))
 (let ((?x12629 (* 2.0 l_0_7_39)))
 (let ((?x12630 (* ?x12629 l_0_7_43)))
 (let ((?x12626 (* 2.0 l_0_7_38)))
 (let ((?x12627 (* ?x12626 l_0_7_42)))
 (let ((?x12623 (* 2.0 l_0_7_37)))
 (let ((?x12624 (* ?x12623 l_0_7_41)))
 (let ((?x12620 (* 2.0 l_0_7_25)))
 (let ((?x12621 (* ?x12620 l_0_7_29)))
 (let ((?x12617 (* 2.0 l_0_7_24)))
 (let ((?x12618 (* ?x12617 l_0_7_28)))
 (let ((?x12614 (* 2.0 l_0_7_23)))
 (let ((?x12615 (* ?x12614 l_0_7_27)))
 (let ((?x12625 (+ (- (- (- (* (* (- 2.0) l_0_7_22) l_0_7_26) ?x12615) ?x12618) ?x12621) ?x12624)))
 (= (+ (+ (+ ?x12625 ?x12627) ?x12630) ?x12633) 0.0)))))))))))))))))
(assert
 (let ((?x11448 (* l_0_7_45 l_0_7_45)))
 (let ((?x11445 (* l_0_7_44 l_0_7_44)))
 (let ((?x11442 (* l_0_7_43 l_0_7_43)))
 (let ((?x11439 (* l_0_7_42 l_0_7_42)))
 (let ((?x11436 (* l_0_7_41 l_0_7_41)))
 (let ((?x11466 (* l_0_7_30 l_0_7_30)))
 (let ((?x1045 (* l_0_7_29 l_0_7_29)))
 (let ((?x1039 (* l_0_7_28 l_0_7_28)))
 (let ((?x12662 (- (- (- (* (- l_0_7_26) l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x1039) ?x1045)))
 (= (+ (+ (+ (+ (+ (- ?x12662 ?x11466) ?x11436) ?x11439) ?x11442) ?x11445) ?x11448) 0.0)))))))))))
(assert
 (= (- (* l_0_7_16 l_0_7_16) (* l_0_7_31 l_0_7_31)) 0.0))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12393 (* ?x12392 l_0_7_32)))
 (let ((?x12688 (- (* (* 2.0 l_0_7_16) l_0_7_17) (* (* 2.0 l_0_7_16) l_0_7_16))))
 (= (+ (- ?x12688 ?x12393) (* 2.0 (* l_0_7_31 l_0_7_31))) 0.0)))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12431 (* ?x12392 l_0_7_34)))
 (= (- (* (* 2.0 l_0_7_16) l_0_7_19) ?x12431) 0.0))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12436 (* ?x12392 l_0_7_37)))
 (= (- (* (* 2.0 l_0_7_16) l_0_7_22) ?x12436) 0.0))))
(assert
 (let ((?x12392 (* 2.0 l_0_7_31)))
 (let ((?x12444 (* ?x12392 l_0_7_41)))
 (= (- (* (* 2.0 l_0_7_16) l_0_7_26) ?x12444) 0.0))))
(assert
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x12459 (* ?x11244 l_0_7_35)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x12457 (* ?x11241 l_0_7_34)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x12395 (* ?x11236 l_0_7_34)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x12448 (* ?x11233 l_0_7_20)))
 (let ((?x11227 (* l_0_7_16 l_0_7_16)))
 (let ((?x12693 (* 2.0 ?x11227)))
 (let ((?x12719 (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_19) ?x12693) (* (* 2.0 l_0_7_17) l_0_7_19))))
 (let ((?x12724 (- (- (+ (+ ?x12719 ?x12448) ?x12395) (* (* 2.0 l_0_7_31) l_0_7_31)) ?x12457)))
 (= (- ?x12724 ?x12459) 0.0))))))))))))))
(assert
 (let ((?x12742 (* l_0_7_61 l_0_7_61)))
 (let ((?x6344 (* l_0_7_46 l_0_7_46)))
 (let ((?x11244 (* 2.0 l_0_7_33)))
 (let ((?x12500 (* ?x11244 l_0_7_38)))
 (let ((?x11241 (* 2.0 l_0_7_32)))
 (let ((?x12498 (* ?x11241 l_0_7_37)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x11239 (* ?x11236 l_0_7_31)))
 (let ((?x12736 (* ?x11236 l_0_7_37)))
 (let ((?x11233 (* 2.0 l_0_7_18)))
 (let ((?x12487 (* ?x11233 l_0_7_23)))
 (let ((?x11227 (* l_0_7_16 l_0_7_16)))
 (let ((?x11228 (* 4.0 ?x11227)))
 (let ((?x12734 (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_22) ?x11228) (* (* 2.0 l_0_7_17) l_0_7_22))))
 (let ((?x12743 (+ (- (- (- (- (+ (+ ?x12734 ?x12487) ?x12736) ?x11239) ?x12498) ?x12500) ?x6344) ?x12742)))
 (= ?x12743 0.0)))))))))))))))))
(assert
 (let ((?x12467 (* 2.0 l_0_7_36)))
 (let ((?x12557 (* ?x12467 l_0_7_39)))
 (let ((?x12464 (* 2.0 l_0_7_35)))
 (let ((?x12555 (* ?x12464 l_0_7_38)))
 (let ((?x12461 (* 2.0 l_0_7_34)))
 (let ((?x12553 (* ?x12461 l_0_7_37)))
 (let ((?x12389 (* 2.0 l_0_7_21)))
 (let ((?x12551 (* ?x12389 l_0_7_24)))
 (let ((?x12386 (* 2.0 l_0_7_20)))
 (let ((?x12549 (* ?x12386 l_0_7_23)))
 (let ((?x12752 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_22) ?x12549) ?x12551) ?x12553) ?x12555)))
 (= (- ?x12752 ?x12557) 0.0)))))))))))))
(assert
 (let ((?x12467 (* 2.0 l_0_7_36)))
 (let ((?x12576 (* ?x12467 l_0_7_43)))
 (let ((?x12464 (* 2.0 l_0_7_35)))
 (let ((?x12574 (* ?x12464 l_0_7_42)))
 (let ((?x12461 (* 2.0 l_0_7_34)))
 (let ((?x12572 (* ?x12461 l_0_7_41)))
 (let ((?x12389 (* 2.0 l_0_7_21)))
 (let ((?x9880 (* ?x12389 l_0_7_28)))
 (let ((?x12386 (* 2.0 l_0_7_20)))
 (let ((?x3029 (* ?x12386 l_0_7_27)))
 (let ((?x9921 (- (- (+ (+ (* (* 2.0 l_0_7_19) l_0_7_26) ?x3029) ?x9880) ?x12572) ?x12574)))
 (= (- ?x9921 ?x12576) 0.0)))))))))))))
(assert
 (let ((?x11971 (* l_0_7_40 l_0_7_40)))
 (let ((?x11964 (* l_0_7_39 l_0_7_39)))
 (let ((?x11957 (* l_0_7_38 l_0_7_38)))
 (let ((?x1779 (* l_0_7_37 l_0_7_37)))
 (let ((?x11894 (* l_0_7_25 l_0_7_25)))
 (let ((?x11888 (* l_0_7_24 l_0_7_24)))
 (let ((?x3222 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x11888) ?x11894)))
 (= (- (- (- (- ?x3222 ?x1779) ?x11957) ?x11964) ?x11971) 0.0)))))))))
(assert
 (let ((?x12632 (* 2.0 l_0_7_40)))
 (let ((?x12633 (* ?x12632 l_0_7_44)))
 (let ((?x12629 (* 2.0 l_0_7_39)))
 (let ((?x12630 (* ?x12629 l_0_7_43)))
 (let ((?x12626 (* 2.0 l_0_7_38)))
 (let ((?x12627 (* ?x12626 l_0_7_42)))
 (let ((?x12623 (* 2.0 l_0_7_37)))
 (let ((?x12624 (* ?x12623 l_0_7_41)))
 (let ((?x12620 (* 2.0 l_0_7_25)))
 (let ((?x12621 (* ?x12620 l_0_7_29)))
 (let ((?x12617 (* 2.0 l_0_7_24)))
 (let ((?x12618 (* ?x12617 l_0_7_28)))
 (let ((?x12614 (* 2.0 l_0_7_23)))
 (let ((?x12615 (* ?x12614 l_0_7_27)))
 (let ((?x12766 (- (+ (+ (+ (* (* 2.0 l_0_7_22) l_0_7_26) ?x12615) ?x12618) ?x12621) ?x12624)))
 (= (- (- (- ?x12766 ?x12627) ?x12630) ?x12633) 0.0)))))))))))))))))
(assert
 (let ((?x11448 (* l_0_7_45 l_0_7_45)))
 (let ((?x11445 (* l_0_7_44 l_0_7_44)))
 (let ((?x11442 (* l_0_7_43 l_0_7_43)))
 (let ((?x11439 (* l_0_7_42 l_0_7_42)))
 (let ((?x11436 (* l_0_7_41 l_0_7_41)))
 (let ((?x11466 (* l_0_7_30 l_0_7_30)))
 (let ((?x1045 (* l_0_7_29 l_0_7_29)))
 (let ((?x1039 (* l_0_7_28 l_0_7_28)))
 (let ((?x10074 (+ (+ (+ (* l_0_7_26 l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x1039) ?x1045)))
 (= (- (- (- (- (- (+ ?x10074 ?x11466) ?x11436) ?x11439) ?x11442) ?x11445) ?x11448) 0.0)))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x12124 (* ?x11291 l_0_7_49)))
 (let ((?x11326 (* 4.0 l_0_7_36)))
 (let ((?x12508 (* ?x11326 l_0_7_39)))
 (let ((?x11323 (* 4.0 l_0_7_35)))
 (let ((?x12505 (* ?x11323 l_0_7_38)))
 (let ((?x11320 (* 4.0 l_0_7_34)))
 (let ((?x12502 (* ?x11320 l_0_7_37)))
 (let ((?x11236 (* 4.0 l_0_7_31)))
 (let ((?x12736 (* ?x11236 l_0_7_37)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11317 (* ?x11284 l_0_7_34)))
 (let ((?x11314 (* 4.0 l_0_7_21)))
 (let ((?x12495 (* ?x11314 l_0_7_24)))
 (let ((?x11311 (* 4.0 l_0_7_20)))
 (let ((?x12492 (* ?x11311 l_0_7_23)))
 (let ((?x5870 (* 4.0 l_0_7_19)))
 (let ((?x12489 (* ?x5870 l_0_7_22)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x5865 (* ?x11275 l_0_7_19)))
 (let ((?x3339 (- (- (- (+ ?x5865 (* (* 4.0 l_0_7_16) l_0_7_22)) ?x12489) ?x12492) ?x12495)))
 (let ((?x3237 (+ (- (+ (+ (+ (- (- ?x3339 ?x11317) ?x12736) ?x12502) ?x12505) ?x12508) ?x12124) (* (* 2.0 l_0_7_61) l_0_7_64))))
 (= ?x3237 0.0))))))))))))))))))))))))
(assert
 (let ((?x11508 (* 2.0 l_0_7_51)))
 (let ((?x12287 (* ?x11508 l_0_7_54)))
 (let ((?x11505 (* 2.0 l_0_7_50)))
 (let ((?x12285 (* ?x11505 l_0_7_53)))
 (let ((?x11502 (* 2.0 l_0_7_49)))
 (let ((?x12282 (* ?x11502 l_0_7_52)))
 (let ((?x11768 (* 8.0 l_0_7_36)))
 (let ((?x11769 (* ?x11768 l_0_7_39)))
 (let ((?x11763 (* 8.0 l_0_7_35)))
 (let ((?x11764 (* ?x11763 l_0_7_38)))
 (let ((?x11758 (* 8.0 l_0_7_34)))
 (let ((?x11759 (* ?x11758 l_0_7_37)))
 (let ((?x11894 (* l_0_7_25 l_0_7_25)))
 (let ((?x12792 (* 2.0 ?x11894)))
 (let ((?x11888 (* l_0_7_24 l_0_7_24)))
 (let ((?x12790 (* 2.0 ?x11888)))
 (let ((?x11882 (* l_0_7_23 l_0_7_23)))
 (let ((?x12788 (* 2.0 ?x11882)))
 (let ((?x8931 (* l_0_7_22 l_0_7_22)))
 (let ((?x12786 (* 2.0 ?x8931)))
 (let ((?x11749 (* 8.0 l_0_7_21)))
 (let ((?x11750 (* ?x11749 l_0_7_24)))
 (let ((?x11744 (* 8.0 l_0_7_20)))
 (let ((?x11745 (* ?x11744 l_0_7_23)))
 (let ((?x11740 (* 8.0 l_0_7_19)))
 (let ((?x11741 (* ?x11740 l_0_7_22)))
 (let ((?x12794 (- (+ (+ (+ (+ (+ (+ ?x11741 ?x11745) ?x11750) ?x12786) ?x12788) ?x12790) ?x12792) ?x11759)))
 (let ((?x12800 (- (- (- (- ?x12794 ?x11764) ?x11769) (* (* 2.0 l_0_7_37) l_0_7_37)) (* (* 2.0 l_0_7_38) l_0_7_38))))
 (let ((?x12804 (- (- ?x12800 (* (* 2.0 l_0_7_39) l_0_7_39)) (* (* 2.0 l_0_7_40) l_0_7_40))))
 (let ((?x12809 (+ (- (- (- ?x12804 ?x12282) ?x12285) ?x12287) (* (* 2.0 l_0_7_64) l_0_7_67))))
 (let ((?x12813 (+ (+ ?x12809 (* (* 2.0 l_0_7_65) l_0_7_68)) (* (* 2.0 l_0_7_66) l_0_7_69))))
 (= ?x12813 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x11291 (* 2.0 l_0_7_46)))
 (let ((?x12153 (* ?x11291 l_0_7_52)))
 (let ((?x11971 (* l_0_7_40 l_0_7_40)))
 (let ((?x3326 (* 2.0 ?x11971)))
 (let ((?x11964 (* l_0_7_39 l_0_7_39)))
 (let ((?x6959 (* 2.0 ?x11964)))
 (let ((?x11957 (* l_0_7_38 l_0_7_38)))
 (let ((?x10176 (* 2.0 ?x11957)))
 (let ((?x1779 (* l_0_7_37 l_0_7_37)))
 (let ((?x6957 (* 2.0 ?x1779)))
 (let ((?x11284 (* 8.0 l_0_7_31)))
 (let ((?x11360 (* ?x11284 l_0_7_37)))
 (let ((?x11275 (* 8.0 l_0_7_16)))
 (let ((?x8539 (* ?x11275 l_0_7_22)))
 (let ((?x12831 (- (- ?x8539 (* (* 2.0 l_0_7_22) l_0_7_22)) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x12835 (- (- ?x12831 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x12843 (+ (- (+ (+ (+ (+ (- ?x12835 ?x11360) ?x6957) ?x10176) ?x6959) ?x3326) ?x12153) (* (* 2.0 l_0_7_61) l_0_7_67))))
 (= ?x12843 0.0)))))))))))))))))))
(assert
 (let ((?x12866 (* l_0_7_70 l_0_7_70)))
 (let ((?x12864 (* l_0_7_69 l_0_7_69)))
 (let ((?x12862 (* l_0_7_68 l_0_7_68)))
 (let ((?x12860 (* l_0_7_67 l_0_7_67)))
 (let ((?x12321 (* l_0_7_55 l_0_7_55)))
 (let ((?x12318 (* l_0_7_54 l_0_7_54)))
 (let ((?x12315 (* l_0_7_53 l_0_7_53)))
 (let ((?x12312 (* l_0_7_52 l_0_7_52)))
 (let ((?x11373 (* 4.0 l_0_7_40)))
 (let ((?x11915 (* ?x11373 l_0_7_40)))
 (let ((?x11370 (* 4.0 l_0_7_39)))
 (let ((?x11910 (* ?x11370 l_0_7_39)))
 (let ((?x11367 (* 4.0 l_0_7_38)))
 (let ((?x11905 (* ?x11367 l_0_7_38)))
 (let ((?x11364 (* 4.0 l_0_7_37)))
 (let ((?x11900 (* ?x11364 l_0_7_37)))
 (let ((?x11894 (* l_0_7_25 l_0_7_25)))
 (let ((?x11895 (* 4.0 ?x11894)))
 (let ((?x11888 (* l_0_7_24 l_0_7_24)))
 (let ((?x11889 (* 4.0 ?x11888)))
 (let ((?x11882 (* l_0_7_23 l_0_7_23)))
 (let ((?x11883 (* 4.0 ?x11882)))
 (let ((?x8931 (* l_0_7_22 l_0_7_22)))
 (let ((?x8938 (* 4.0 ?x8931)))
 (let ((?x12855 (- (- (- (- (+ (+ (+ ?x8938 ?x11883) ?x11889) ?x11895) ?x11900) ?x11905) ?x11910) ?x11915)))
 (let ((?x12865 (+ (+ (+ (- (- (- (- ?x12855 ?x12312) ?x12315) ?x12318) ?x12321) ?x12860) ?x12862) ?x12864)))
 (= (+ ?x12865 ?x12866) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (let ((?x12954 (* l_0_8_96 l_0_8_96)))
 (let ((?x12952 (* l_0_8_95 l_0_8_95)))
 (let ((?x12950 (* l_0_8_94 l_0_8_94)))
 (let ((?x12948 (* l_0_8_81 l_0_8_81)))
 (let ((?x12946 (* l_0_8_80 l_0_8_80)))
 (let ((?x12944 (* l_0_8_79 l_0_8_79)))
 (let ((?x12924 (* l_0_8_33 l_0_8_33)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x12922 (* ?x12921 l_0_8_35)))
 (let ((?x12919 (* l_0_8_32 l_0_8_32)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x12917 (* ?x12916 l_0_8_34)))
 (let ((?x12914 (* l_0_8_18 l_0_8_18)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x12912 (* ?x12911 l_0_8_20)))
 (let ((?x12913 (+ (- (* (* 4.0 l_0_8_17) l_0_8_19) (* l_0_8_17 l_0_8_17)) ?x12912)))
 (let ((?x12928 (+ (+ (- (+ (- (- ?x12913 ?x12914) ?x12917) ?x12919) ?x12922) ?x12924) (* 1.0 (* l_0_8_4 l_0_8_4)))))
 (let ((?x12934 (+ (+ ?x12928 (* 1.0 (* l_0_8_49 l_0_8_49))) (* 1.0 (* l_0_8_5 l_0_8_5)))))
 (let ((?x12940 (+ (+ ?x12934 (* 1.0 (* l_0_8_50 l_0_8_50))) (* 1.0 (* l_0_8_51 l_0_8_51)))))
 (let ((?x12949 (- (- (- (+ ?x12940 (* 1.0 (* l_0_8_6 l_0_8_6))) ?x12944) ?x12946) ?x12948)))
 (= (+ (- (- (- ?x12949 ?x12950) ?x12952) ?x12954) 1.0) 0.0))))))))))))))))))))))
(assert
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13003 (* ?x13002 l_0_8_50)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13000 (* ?x12999 l_0_8_49)))
 (let ((?x12990 (* 2.0 l_0_8_3)))
 (let ((?x12991 (* ?x12990 l_0_8_5)))
 (let ((?x12987 (* 2.0 l_0_8_2)))
 (let ((?x12988 (* ?x12987 l_0_8_4)))
 (let ((?x12914 (* l_0_8_18 l_0_8_18)))
 (let ((?x12985 (* 2.0 ?x12914)))
 (let ((?x12989 (+ (+ (+ (* (- 4.0) _a_4_) (* 2.0 (* l_0_8_17 l_0_8_17))) ?x12985) ?x12988)))
 (let ((?x12998 (- (- (+ ?x12989 ?x12991) (* (* 2.0 l_0_8_32) l_0_8_32)) (* (* 2.0 l_0_8_33) l_0_8_33))))
 (let ((?x13010 (- (- (+ (+ ?x12998 ?x13000) ?x13003) (* (* 2.0 l_0_8_77) l_0_8_79)) (* (* 2.0 l_0_8_78) l_0_8_80))))
 (let ((?x13016 (- (- ?x13010 (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= (+ ?x13016 2.0) 0.0))))))))))))))))
(assert
 (let ((?x13073 (* l_0_8_93 l_0_8_93)))
 (let ((?x13071 (* l_0_8_92 l_0_8_92)))
 (let ((?x13069 (* l_0_8_78 l_0_8_78)))
 (let ((?x13067 (* l_0_8_77 l_0_8_77)))
 (let ((?x13060 (+ (+ (* (- 4.0) _a_2_) (* 1.0 (* l_0_8_2 l_0_8_2))) (* 1.0 (* l_0_8_3 l_0_8_3)))))
 (let ((?x13066 (+ (+ ?x13060 (* 1.0 (* l_0_8_47 l_0_8_47))) (* 1.0 (* l_0_8_48 l_0_8_48)))))
 (= (- (- (- (- ?x13066 ?x13067) ?x13069) ?x13071) ?x13073) 0.0))))))))
(assert
 (let ((?x13105 (* l_0_8_91 l_0_8_91)))
 (let ((?x13103 (* l_0_8_76 l_0_8_76)))
 (let ((?x12924 (* l_0_8_33 l_0_8_33)))
 (let ((?x12919 (* l_0_8_32 l_0_8_32)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x13096 (* ?x13095 l_0_8_32)))
 (let ((?x12914 (* l_0_8_18 l_0_8_18)))
 (let ((?x12909 (* l_0_8_17 l_0_8_17)))
 (let ((?x13090 (* 4.0 l_0_8_16)))
 (let ((?x13091 (* ?x13090 l_0_8_17)))
 (let ((?x13097 (+ (+ (+ (- (* 1.0 (* l_0_8_1 l_0_8_1)) ?x13091) ?x12909) ?x12914) ?x13096)))
 (let ((?x13104 (- (+ (- (- ?x13097 ?x12919) ?x12924) (* 1.0 (* l_0_8_46 l_0_8_46))) ?x13103)))
 (= (- (- ?x13104 ?x13105) 1.0) 0.0))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x13135 (* ?x13134 l_0_8_47)))
 (let ((?x12924 (* l_0_8_33 l_0_8_33)))
 (let ((?x7346 (* 2.0 ?x12924)))
 (let ((?x12919 (* l_0_8_32 l_0_8_32)))
 (let ((?x13022 (* 2.0 ?x12919)))
 (let ((?x13124 (* 2.0 l_0_8_1)))
 (let ((?x13125 (* ?x13124 l_0_8_2)))
 (let ((?x13131 (- (- ?x13125 (* (* 2.0 l_0_8_17) l_0_8_17)) (* (* 2.0 l_0_8_18) l_0_8_18))))
 (let ((?x13139 (- (+ (+ (+ ?x13131 ?x13022) ?x7346) ?x13135) (* (* 2.0 l_0_8_76) l_0_8_77))))
 (= (+ (- ?x13139 (* (* 2.0 l_0_8_91) l_0_8_92)) 2.0) 0.0))))))))))))
(assert
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13181 (* ?x13002 l_0_8_57)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13179 (* ?x12999 l_0_8_56)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x13177 (* ?x12921 l_0_8_33)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x13175 (* ?x12916 l_0_8_32)))
 (let ((?x13058 (* l_0_8_3 l_0_8_3)))
 (let ((?x13055 (* l_0_8_2 l_0_8_2)))
 (let ((?x12914 (* l_0_8_18 l_0_8_18)))
 (let ((?x13171 (* 4.0 ?x12914)))
 (let ((?x12909 (* l_0_8_17 l_0_8_17)))
 (let ((?x13169 (* 4.0 ?x12909)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13167 (* ?x13166 l_0_8_3)))
 (let ((?x13163 (* 2.0 l_0_8_11)))
 (let ((?x13164 (* ?x13163 l_0_8_2)))
 (let ((?x13162 (- (* (* (- 2.0) l_0_8_101) l_0_8_92) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x13176 (- (- (- (+ (+ (+ (+ ?x13162 ?x13164) ?x13167) ?x13169) ?x13171) ?x13055) ?x13058) ?x13175)))
 (let ((?x13184 (- (+ (+ (- ?x13176 ?x13177) ?x13179) ?x13181) (* (* 2.0 l_0_8_77) l_0_8_86))))
 (= (- (- ?x13184 (* (* 2.0 l_0_8_78) l_0_8_87)) 4.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13229 (* l_0_8_63 l_0_8_63)))
 (let ((?x13227 (* l_0_8_62 l_0_8_62)))
 (let ((?x13064 (* l_0_8_48 l_0_8_48)))
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13224 (* ?x13002 l_0_8_53)))
 (let ((?x13061 (* l_0_8_47 l_0_8_47)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13221 (* ?x12999 l_0_8_52)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x13177 (* ?x12921 l_0_8_33)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x13175 (* ?x12916 l_0_8_32)))
 (let ((?x12990 (* 2.0 l_0_8_3)))
 (let ((?x13217 (* ?x12990 l_0_8_8)))
 (let ((?x12987 (* 2.0 l_0_8_2)))
 (let ((?x13215 (* ?x12987 l_0_8_7)))
 (let ((?x12914 (* l_0_8_18 l_0_8_18)))
 (let ((?x13171 (* 4.0 ?x12914)))
 (let ((?x13216 (+ (+ (+ (* (- 4.0) _a_3_) (* 4.0 (* l_0_8_17 l_0_8_17))) ?x13171) ?x13215)))
 (let ((?x13226 (- (+ (- (+ (- (- (+ ?x13216 ?x13217) ?x13175) ?x13177) ?x13221) ?x13061) ?x13224) ?x13064)))
 (let ((?x13234 (- (- (+ (+ ?x13226 ?x13227) ?x13229) (* (* 2.0 l_0_8_77) l_0_8_82)) (* (* 2.0 l_0_8_78) l_0_8_83))))
 (let ((?x13238 (- (- ?x13234 (* (* 2.0 l_0_8_92) l_0_8_97)) (* (* 2.0 l_0_8_93) l_0_8_98))))
 (= ?x13238 0.0))))))))))))))))))))))))
(assert
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x13292 (* ?x12996 l_0_8_42)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x13290 (* ?x12993 l_0_8_41)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x13288 (* ?x13095 l_0_8_31)))
 (let ((?x13286 (* ?x13095 l_0_8_41)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x13284 (* ?x13129 l_0_8_27)))
 (let ((?x13279 (* l_0_8_16 l_0_8_16)))
 (let ((?x13280 (* 4.0 ?x13279)))
 (let ((?x13281 (+ (- (* (- l_0_8_1) l_0_8_1) (* (* 4.0 l_0_8_16) l_0_8_26)) ?x13280)))
 (let ((?x13289 (- (+ (+ (+ ?x13281 (* (* 2.0 l_0_8_17) l_0_8_26)) ?x13284) ?x13286) ?x13288)))
 (= (- (- ?x13289 ?x13290) ?x13292) 0.0)))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x13338 (* ?x13134 l_0_8_56)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x13336 (* ?x12921 l_0_8_42)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x13334 (* ?x12916 l_0_8_41)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13332 (* ?x13331 l_0_8_32)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x13329 (* ?x12911 l_0_8_27)))
 (let ((?x12907 (* 4.0 l_0_8_17)))
 (let ((?x13327 (* ?x12907 l_0_8_26)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13325 (* ?x13324 l_0_8_17)))
 (let ((?x13124 (* 2.0 l_0_8_1)))
 (let ((?x13125 (* ?x13124 l_0_8_2)))
 (let ((?x13323 (- (- (* ?x13124 l_0_8_11) ?x13125) (* (* 2.0 l_0_8_101) l_0_8_91))))
 (let ((?x13339 (+ (+ (+ (- (- (- (+ ?x13323 ?x13325) ?x13327) ?x13329) ?x13332) ?x13334) ?x13336) ?x13338)))
 (= (- ?x13339 (* (* 2.0 l_0_8_76) l_0_8_86)) 0.0))))))))))))))))))))
(assert
 (let ((?x13394 (* 4.0 l_0_8_36)))
 (let ((?x13395 (* ?x13394 l_0_8_43)))
 (let ((?x13391 (* 4.0 l_0_8_35)))
 (let ((?x13392 (* ?x13391 l_0_8_42)))
 (let ((?x13388 (* 4.0 l_0_8_34)))
 (let ((?x13389 (* ?x13388 l_0_8_41)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x13286 (* ?x13095 l_0_8_41)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13385 (* ?x13331 l_0_8_34)))
 (let ((?x13382 (* 4.0 l_0_8_21)))
 (let ((?x13383 (* ?x13382 l_0_8_28)))
 (let ((?x13379 (* 4.0 l_0_8_20)))
 (let ((?x13380 (* ?x13379 l_0_8_27)))
 (let ((?x13376 (* 4.0 l_0_8_19)))
 (let ((?x13377 (* ?x13376 l_0_8_26)))
 (let ((?x13090 (* 4.0 l_0_8_16)))
 (let ((?x13277 (* ?x13090 l_0_8_26)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13373 (* ?x13324 l_0_8_19)))
 (let ((?x13381 (- (- (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x13373) ?x13277) ?x13377) ?x13380)))
 (= (+ (+ (+ (- (- (- ?x13381 ?x13383) ?x13385) ?x13286) ?x13389) ?x13392) ?x13395) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x13338 (* ?x13134 l_0_8_56)))
 (let ((?x13451 (* 4.0 l_0_8_40)))
 (let ((?x13452 (* ?x13451 l_0_8_44)))
 (let ((?x13448 (* 4.0 l_0_8_39)))
 (let ((?x13449 (* ?x13448 l_0_8_43)))
 (let ((?x13445 (* 4.0 l_0_8_38)))
 (let ((?x13446 (* ?x13445 l_0_8_42)))
 (let ((?x13442 (* 4.0 l_0_8_37)))
 (let ((?x13443 (* ?x13442 l_0_8_41)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13440 (* ?x13331 l_0_8_41)))
 (let ((?x13438 (* ?x13331 l_0_8_37)))
 (let ((?x13436 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x13433 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x13430 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x13427 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13424 (* ?x13324 l_0_8_26)))
 (let ((?x13428 (- (+ (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) (* ?x13324 l_0_8_22)) ?x13424) ?x13427)))
 (let ((?x13447 (+ (+ (- (- (- (- (- ?x13428 ?x13430) ?x13433) ?x13436) ?x13438) ?x13440) ?x13443) ?x13446)))
 (let ((?x13457 (+ (- (+ (+ ?x13447 ?x13449) ?x13452) ?x13338) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (= ?x13457 0.0))))))))))))))))))))))))
(assert
 (let ((?x13518 (* l_0_8_45 l_0_8_45)))
 (let ((?x13519 (* 2.0 ?x13518)))
 (let ((?x13515 (* l_0_8_44 l_0_8_44)))
 (let ((?x13516 (* 2.0 ?x13515)))
 (let ((?x13512 (* l_0_8_43 l_0_8_43)))
 (let ((?x13513 (* 2.0 ?x13512)))
 (let ((?x13509 (* l_0_8_42 l_0_8_42)))
 (let ((?x13510 (* 2.0 ?x13509)))
 (let ((?x13506 (* l_0_8_41 l_0_8_41)))
 (let ((?x13507 (* 2.0 ?x13506)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13440 (* ?x13331 l_0_8_41)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13424 (* ?x13324 l_0_8_26)))
 (let ((?x13492 (- (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) ?x13424) (* (* 2.0 l_0_8_26) l_0_8_26))))
 (let ((?x13498 (- (- ?x13492 (* (* 2.0 l_0_8_27) l_0_8_27)) (* (* 2.0 l_0_8_28) l_0_8_28))))
 (let ((?x13504 (- (- ?x13498 (* (* 2.0 l_0_8_29) l_0_8_29)) (* (* 2.0 l_0_8_30) l_0_8_30))))
 (= (+ (+ (+ (+ (+ (- ?x13504 ?x13440) ?x13507) ?x13510) ?x13513) ?x13516) ?x13519) 0.0)))))))))))))))))))
(assert
 (let ((?x13573 (* 2.0 l_0_8_51)))
 (let ((?x13574 (* ?x13573 l_0_8_58)))
 (let ((?x13570 (* 2.0 l_0_8_50)))
 (let ((?x13571 (* ?x13570 l_0_8_57)))
 (let ((?x13567 (* 2.0 l_0_8_49)))
 (let ((?x13568 (* ?x13567 l_0_8_56)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x13336 (* ?x12921 l_0_8_42)))
 (let ((?x13563 (* 8.0 l_0_8_33)))
 (let ((?x13564 (* ?x13563 l_0_8_35)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x13334 (* ?x12916 l_0_8_41)))
 (let ((?x13559 (* 8.0 l_0_8_32)))
 (let ((?x13560 (* ?x13559 l_0_8_34)))
 (let ((?x12990 (* 2.0 l_0_8_3)))
 (let ((?x12991 (* ?x12990 l_0_8_5)))
 (let ((?x12987 (* 2.0 l_0_8_2)))
 (let ((?x12988 (* ?x12987 l_0_8_4)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x13329 (* ?x12911 l_0_8_27)))
 (let ((?x13553 (* 8.0 l_0_8_18)))
 (let ((?x13554 (* ?x13553 l_0_8_20)))
 (let ((?x12907 (* 4.0 l_0_8_17)))
 (let ((?x13327 (* ?x12907 l_0_8_26)))
 (let ((?x13549 (* 8.0 l_0_8_17)))
 (let ((?x13550 (* ?x13549 l_0_8_19)))
 (let ((?x13546 (* 2.0 l_0_8_13)))
 (let ((?x13547 (* ?x13546 l_0_8_6)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13544 (* ?x13166 l_0_8_5)))
 (let ((?x13538 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x13543 (+ (- ?x13538 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_11) l_0_8_4))))
 (let ((?x13557 (- (+ (+ (+ (+ (+ (+ ?x13543 ?x13544) ?x13547) ?x13550) ?x13327) ?x13554) ?x13329) ?x12988)))
 (let ((?x13572 (+ (+ (- (- (- (- (- ?x13557 ?x12991) ?x13560) ?x13334) ?x13564) ?x13336) ?x13568) ?x13571)))
 (let ((?x13581 (- (- (+ ?x13572 ?x13574) (* (* 2.0 l_0_8_79) l_0_8_86)) (* (* 2.0 l_0_8_80) l_0_8_87))))
 (= (- ?x13581 (* (* 2.0 l_0_8_81) l_0_8_88)) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13688 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x13685 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x13682 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x13679 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13181 (* ?x13002 l_0_8_57)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13179 (* ?x12999 l_0_8_56)))
 (let ((?x13563 (* 8.0 l_0_8_33)))
 (let ((?x13674 (* ?x13563 l_0_8_42)))
 (let ((?x13672 (* ?x13563 l_0_8_38)))
 (let ((?x13559 (* 8.0 l_0_8_32)))
 (let ((?x13670 (* ?x13559 l_0_8_41)))
 (let ((?x13668 (* ?x13559 l_0_8_37)))
 (let ((?x12990 (* 2.0 l_0_8_3)))
 (let ((?x13217 (* ?x12990 l_0_8_8)))
 (let ((?x12987 (* 2.0 l_0_8_2)))
 (let ((?x13215 (* ?x12987 l_0_8_7)))
 (let ((?x13553 (* 8.0 l_0_8_18)))
 (let ((?x13664 (* ?x13553 l_0_8_27)))
 (let ((?x13662 (* ?x13553 l_0_8_23)))
 (let ((?x13549 (* 8.0 l_0_8_17)))
 (let ((?x13660 (* ?x13549 l_0_8_26)))
 (let ((?x13658 (* ?x13549 l_0_8_22)))
 (let ((?x13546 (* 2.0 l_0_8_13)))
 (let ((?x13656 (* ?x13546 l_0_8_9)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13654 (* ?x13166 l_0_8_8)))
 (let ((?x13163 (* 2.0 l_0_8_11)))
 (let ((?x13652 (* ?x13163 l_0_8_7)))
 (let ((?x13645 (- (* (* 2.0 l_0_8_10) l_0_8_14) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x13649 (- (- ?x13645 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x13657 (+ (+ (+ (- ?x13649 (* (* 2.0 l_0_8_103) l_0_8_99)) ?x13652) ?x13654) ?x13656)))
 (let ((?x13669 (- (- (- (+ (+ (+ (+ ?x13657 ?x13658) ?x13660) ?x13662) ?x13664) ?x13215) ?x13217) ?x13668)))
 (let ((?x13683 (+ (+ (- (- (- (- (- ?x13669 ?x13670) ?x13672) ?x13674) ?x13179) ?x13181) ?x13679) ?x13682)))
 (let ((?x13695 (+ (+ (+ (+ ?x13683 ?x13685) ?x13688) (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x13701 (- (- ?x13695 (* (* 2.0 l_0_8_82) l_0_8_86)) (* (* 2.0 l_0_8_83) l_0_8_87))))
 (let ((?x13707 (- (- ?x13701 (* (* 2.0 l_0_8_84) l_0_8_88)) (* (* 2.0 l_0_8_85) l_0_8_89))))
 (= ?x13707 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13810 (* l_0_8_90 l_0_8_90)))
 (let ((?x13808 (* l_0_8_89 l_0_8_89)))
 (let ((?x13806 (* l_0_8_88 l_0_8_88)))
 (let ((?x13804 (* l_0_8_87 l_0_8_87)))
 (let ((?x13802 (* l_0_8_86 l_0_8_86)))
 (let ((?x13563 (* 8.0 l_0_8_33)))
 (let ((?x13674 (* ?x13563 l_0_8_42)))
 (let ((?x13559 (* 8.0 l_0_8_32)))
 (let ((?x13670 (* ?x13559 l_0_8_41)))
 (let ((?x13553 (* 8.0 l_0_8_18)))
 (let ((?x13664 (* ?x13553 l_0_8_27)))
 (let ((?x13549 (* 8.0 l_0_8_17)))
 (let ((?x13660 (* ?x13549 l_0_8_26)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13167 (* ?x13166 l_0_8_3)))
 (let ((?x13163 (* 2.0 l_0_8_11)))
 (let ((?x13164 (* ?x13163 l_0_8_2)))
 (let ((?x13764 (* l_0_8_105 l_0_8_105)))
 (let ((?x13762 (* l_0_8_104 l_0_8_104)))
 (let ((?x13760 (* l_0_8_103 l_0_8_103)))
 (let ((?x13761 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x13760)))
 (let ((?x13769 (+ (- (- (- ?x13761 ?x13762) ?x13764) ?x13164) (* 1.0 (* l_0_8_11 l_0_8_11)))))
 (let ((?x13776 (+ (+ (- ?x13769 ?x13167) (* 1.0 (* l_0_8_12 l_0_8_12))) (* 1.0 (* l_0_8_13 l_0_8_13)))))
 (let ((?x13782 (+ (+ ?x13776 (* 1.0 (* l_0_8_14 l_0_8_14))) (* 1.0 (* l_0_8_15 l_0_8_15)))))
 (let ((?x13789 (+ (- (- (+ (+ ?x13782 ?x13660) ?x13664) ?x13670) ?x13674) (* 1.0 (* l_0_8_56 l_0_8_56)))))
 (let ((?x13795 (+ (+ ?x13789 (* 1.0 (* l_0_8_57 l_0_8_57))) (* 1.0 (* l_0_8_58 l_0_8_58)))))
 (let ((?x13801 (+ (+ ?x13795 (* 1.0 (* l_0_8_59 l_0_8_59))) (* 1.0 (* l_0_8_60 l_0_8_60)))))
 (= (- (- (- (- (- ?x13801 ?x13802) ?x13804) ?x13806) ?x13808) ?x13810) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x12941 (* l_0_8_6 l_0_8_6)))
 (let ((?x12932 (* l_0_8_5 l_0_8_5)))
 (let ((?x12926 (* l_0_8_4 l_0_8_4)))
 (let ((?x13394 (* 4.0 l_0_8_36)))
 (let ((?x13835 (* ?x13394 l_0_8_36)))
 (let ((?x13395 (* ?x13394 l_0_8_43)))
 (let ((?x13391 (* 4.0 l_0_8_35)))
 (let ((?x13832 (* ?x13391 l_0_8_35)))
 (let ((?x13392 (* ?x13391 l_0_8_42)))
 (let ((?x13388 (* 4.0 l_0_8_34)))
 (let ((?x13829 (* ?x13388 l_0_8_34)))
 (let ((?x13389 (* ?x13388 l_0_8_41)))
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x13292 (* ?x12996 l_0_8_42)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x13290 (* ?x12993 l_0_8_41)))
 (let ((?x13823 (* l_0_8_21 l_0_8_21)))
 (let ((?x13824 (* 4.0 ?x13823)))
 (let ((?x13382 (* 4.0 l_0_8_21)))
 (let ((?x13383 (* ?x13382 l_0_8_28)))
 (let ((?x7569 (* l_0_8_20 l_0_8_20)))
 (let ((?x10535 (* 4.0 ?x7569)))
 (let ((?x13379 (* 4.0 l_0_8_20)))
 (let ((?x13380 (* ?x13379 l_0_8_27)))
 (let ((?x10534 (* l_0_8_19 l_0_8_19)))
 (let ((?x2392 (* 4.0 ?x10534)))
 (let ((?x13376 (* 4.0 l_0_8_19)))
 (let ((?x13377 (* ?x13376 l_0_8_26)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x13284 (* ?x13129 l_0_8_27)))
 (let ((?x10536 (+ (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_26) ?x13284) ?x13377) ?x2392) ?x13380)))
 (let ((?x13830 (- (- (+ (+ (+ (+ (+ ?x10536 ?x10535) ?x13383) ?x13824) ?x13290) ?x13292) ?x13389) ?x13829)))
 (let ((?x13839 (- (- (- (- (- (- (- ?x13830 ?x13392) ?x13832) ?x13395) ?x13835) ?x12926) ?x12932) ?x12941)))
 (= ?x13839 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13890 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13573 (* 2.0 l_0_8_51)))
 (let ((?x13574 (* ?x13573 l_0_8_58)))
 (let ((?x13570 (* 2.0 l_0_8_50)))
 (let ((?x13571 (* ?x13570 l_0_8_57)))
 (let ((?x13885 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13567 (* 2.0 l_0_8_49)))
 (let ((?x13568 (* ?x13567 l_0_8_56)))
 (let ((?x13451 (* 4.0 l_0_8_40)))
 (let ((?x13452 (* ?x13451 l_0_8_44)))
 (let ((?x13880 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x13448 (* 4.0 l_0_8_39)))
 (let ((?x13449 (* ?x13448 l_0_8_43)))
 (let ((?x13445 (* 4.0 l_0_8_38)))
 (let ((?x13446 (* ?x13445 l_0_8_42)))
 (let ((?x13442 (* 4.0 l_0_8_37)))
 (let ((?x13443 (* ?x13442 l_0_8_41)))
 (let ((?x13871 (* 8.0 l_0_8_36)))
 (let ((?x13874 (* ?x13871 l_0_8_43)))
 (let ((?x13872 (* ?x13871 l_0_8_39)))
 (let ((?x13866 (* 8.0 l_0_8_35)))
 (let ((?x13869 (* ?x13866 l_0_8_42)))
 (let ((?x13867 (* ?x13866 l_0_8_38)))
 (let ((?x13861 (* 8.0 l_0_8_34)))
 (let ((?x13864 (* ?x13861 l_0_8_41)))
 (let ((?x13862 (* ?x13861 l_0_8_37)))
 (let ((?x13436 (* (* 4.0 l_0_8_25) l_0_8_29)))
 (let ((?x13433 (* (* 4.0 l_0_8_24) l_0_8_28)))
 (let ((?x13430 (* (* 4.0 l_0_8_23) l_0_8_27)))
 (let ((?x13427 (* (* 4.0 l_0_8_22) l_0_8_26)))
 (let ((?x13852 (* 8.0 l_0_8_21)))
 (let ((?x13855 (* ?x13852 l_0_8_28)))
 (let ((?x13853 (* ?x13852 l_0_8_24)))
 (let ((?x13847 (* 8.0 l_0_8_20)))
 (let ((?x13850 (* ?x13847 l_0_8_27)))
 (let ((?x13848 (* ?x13847 l_0_8_23)))
 (let ((?x4750 (* 8.0 l_0_8_19)))
 (let ((?x10083 (* ?x4750 l_0_8_26)))
 (let ((?x10726 (* ?x4750 l_0_8_22)))
 (let ((?x13858 (+ (+ (+ (+ (+ (+ (+ ?x10726 ?x10083) ?x13848) ?x13850) ?x13853) ?x13855) ?x13427) ?x13430)))
 (let ((?x13873 (- (- (- (- (- (+ (+ ?x13858 ?x13433) ?x13436) ?x13862) ?x13864) ?x13867) ?x13869) ?x13872)))
 (let ((?x13883 (- (- (- (- (- (- (- ?x13873 ?x13874) ?x13443) ?x13446) ?x13449) ?x13880) ?x13452) ?x13568)))
 (let ((?x13894 (+ (- (- (- (- ?x13883 ?x13885) ?x13571) ?x13574) ?x13890) (* (* 2.0 l_0_8_64) l_0_8_71))))
 (let ((?x13900 (+ (+ ?x13894 (* (* 2.0 l_0_8_65) l_0_8_72)) (* (* 2.0 l_0_8_66) l_0_8_73))))
 (= ?x13900 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13871 (* 8.0 l_0_8_36)))
 (let ((?x13874 (* ?x13871 l_0_8_43)))
 (let ((?x13866 (* 8.0 l_0_8_35)))
 (let ((?x13869 (* ?x13866 l_0_8_42)))
 (let ((?x13861 (* 8.0 l_0_8_34)))
 (let ((?x13864 (* ?x13861 l_0_8_41)))
 (let ((?x4253 (* l_0_8_30 l_0_8_30)))
 (let ((?x4248 (* 2.0 ?x4253)))
 (let ((?x10394 (* l_0_8_29 l_0_8_29)))
 (let ((?x10396 (* 2.0 ?x10394)))
 (let ((?x9495 (* l_0_8_28 l_0_8_28)))
 (let ((?x4190 (* 2.0 ?x9495)))
 (let ((?x13529 (* l_0_8_27 l_0_8_27)))
 (let ((?x13530 (* 2.0 ?x13529)))
 (let ((?x13523 (* l_0_8_26 l_0_8_26)))
 (let ((?x13524 (* 2.0 ?x13523)))
 (let ((?x13852 (* 8.0 l_0_8_21)))
 (let ((?x13855 (* ?x13852 l_0_8_28)))
 (let ((?x13847 (* 8.0 l_0_8_20)))
 (let ((?x13850 (* ?x13847 l_0_8_27)))
 (let ((?x4750 (* 8.0 l_0_8_19)))
 (let ((?x10083 (* ?x4750 l_0_8_26)))
 (let ((?x13546 (* 2.0 l_0_8_13)))
 (let ((?x13547 (* ?x13546 l_0_8_6)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13544 (* ?x13166 l_0_8_5)))
 (let ((?x10856 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x13544) ?x13547) ?x10083) ?x13850)))
 (let ((?x10791 (- (+ (+ (+ (+ (+ (+ ?x10856 ?x13855) ?x13524) ?x13530) ?x4190) ?x10396) ?x4248) ?x13864)))
 (let ((?x13923 (- (- (- (- ?x10791 ?x13869) ?x13874) (* (* 2.0 l_0_8_41) l_0_8_41)) (* (* 2.0 l_0_8_42) l_0_8_42))))
 (let ((?x13929 (- (- ?x13923 (* (* 2.0 l_0_8_43) l_0_8_43)) (* (* 2.0 l_0_8_44) l_0_8_44))))
 (= (- ?x13929 (* (* 2.0 l_0_8_45) l_0_8_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x14001 (* l_0_8_9 l_0_8_9)))
 (let ((?x13999 (* l_0_8_8 l_0_8_8)))
 (let ((?x13994 (* l_0_8_7 l_0_8_7)))
 (let ((?x13688 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x13685 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x13682 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x13679 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x13451 (* 4.0 l_0_8_40)))
 (let ((?x13979 (* ?x13451 l_0_8_40)))
 (let ((?x13977 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x13448 (* 4.0 l_0_8_39)))
 (let ((?x13974 (* ?x13448 l_0_8_39)))
 (let ((?x13972 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x13445 (* 4.0 l_0_8_38)))
 (let ((?x13969 (* ?x13445 l_0_8_38)))
 (let ((?x13967 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x13442 (* 4.0 l_0_8_37)))
 (let ((?x13964 (* ?x13442 l_0_8_37)))
 (let ((?x13962 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x13958 (* l_0_8_25 l_0_8_25)))
 (let ((?x13959 (* 4.0 ?x13958)))
 (let ((?x13956 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x13952 (* l_0_8_24 l_0_8_24)))
 (let ((?x13953 (* 4.0 ?x13952)))
 (let ((?x13950 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x13946 (* l_0_8_23 l_0_8_23)))
 (let ((?x13947 (* 4.0 ?x13946)))
 (let ((?x13944 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x13940 (* l_0_8_22 l_0_8_22)))
 (let ((?x13941 (* 4.0 ?x13940)))
 (let ((?x13942 (+ (+ (* (- l_0_8_10) l_0_8_10) (* (* 8.0 l_0_8_22) l_0_8_26)) ?x13941)))
 (let ((?x13963 (- (+ (+ (+ (+ (+ (+ ?x13942 ?x13944) ?x13947) ?x13950) ?x13953) ?x13956) ?x13959) ?x13962)))
 (let ((?x13980 (- (- (- (- (- (- (- ?x13963 ?x13964) ?x13967) ?x13969) ?x13972) ?x13974) ?x13977) ?x13979)))
 (let ((?x13987 (+ (- (- (- (- ?x13980 ?x13679) ?x13682) ?x13685) ?x13688) (* (* 2.0 l_0_8_67) l_0_8_71))))
 (let ((?x13993 (+ (+ ?x13987 (* (* 2.0 l_0_8_68) l_0_8_72)) (* (* 2.0 l_0_8_69) l_0_8_73))))
 (let ((?x14002 (- (- (+ (- ?x13993 ?x13994) (* (* 2.0 l_0_8_70) l_0_8_74)) ?x13999) ?x14001)))
 (= ?x14002 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14106 (* l_0_8_75 l_0_8_75)))
 (let ((?x14104 (* l_0_8_74 l_0_8_74)))
 (let ((?x14102 (* l_0_8_73 l_0_8_73)))
 (let ((?x14100 (* l_0_8_72 l_0_8_72)))
 (let ((?x14098 (* l_0_8_71 l_0_8_71)))
 (let ((?x13799 (* l_0_8_60 l_0_8_60)))
 (let ((?x13796 (* l_0_8_59 l_0_8_59)))
 (let ((?x13793 (* l_0_8_58 l_0_8_58)))
 (let ((?x13790 (* l_0_8_57 l_0_8_57)))
 (let ((?x13787 (* l_0_8_56 l_0_8_56)))
 (let ((?x14091 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x14088 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x14085 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x14082 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x14079 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x13977 (* (* 8.0 l_0_8_40) l_0_8_44)))
 (let ((?x13972 (* (* 8.0 l_0_8_39) l_0_8_43)))
 (let ((?x13967 (* (* 8.0 l_0_8_38) l_0_8_42)))
 (let ((?x13962 (* (* 8.0 l_0_8_37) l_0_8_41)))
 (let ((?x4253 (* l_0_8_30 l_0_8_30)))
 (let ((?x14072 (* 4.0 ?x4253)))
 (let ((?x10394 (* l_0_8_29 l_0_8_29)))
 (let ((?x14070 (* 4.0 ?x10394)))
 (let ((?x9495 (* l_0_8_28 l_0_8_28)))
 (let ((?x14068 (* 4.0 ?x9495)))
 (let ((?x13529 (* l_0_8_27 l_0_8_27)))
 (let ((?x14066 (* 4.0 ?x13529)))
 (let ((?x13523 (* l_0_8_26 l_0_8_26)))
 (let ((?x14064 (* 4.0 ?x13523)))
 (let ((?x13956 (* (* 8.0 l_0_8_25) l_0_8_29)))
 (let ((?x13950 (* (* 8.0 l_0_8_24) l_0_8_28)))
 (let ((?x13944 (* (* 8.0 l_0_8_23) l_0_8_27)))
 (let ((?x13938 (* (* 8.0 l_0_8_22) l_0_8_26)))
 (let ((?x13546 (* 2.0 l_0_8_13)))
 (let ((?x13656 (* ?x13546 l_0_8_9)))
 (let ((?x13166 (* 2.0 l_0_8_12)))
 (let ((?x13654 (* ?x13166 l_0_8_8)))
 (let ((?x13163 (* 2.0 l_0_8_11)))
 (let ((?x13652 (* ?x13163 l_0_8_7)))
 (let ((?x14060 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x13652) ?x13654) ?x13656) ?x13938)))
 (let ((?x14071 (+ (+ (+ (+ (+ (+ (+ ?x14060 ?x13944) ?x13950) ?x13956) ?x14064) ?x14066) ?x14068) ?x14070)))
 (let ((?x14083 (- (- (- (- (- (- (+ ?x14071 ?x14072) ?x13962) ?x13967) ?x13972) ?x13977) ?x14079) ?x14082)))
 (let ((?x14096 (- (- (- (- (- (- (- ?x14083 ?x14085) ?x14088) ?x14091) ?x13787) ?x13790) ?x13793) ?x13796)))
 (= (+ (+ (+ (+ (+ (- ?x14096 ?x13799) ?x14098) ?x14100) ?x14102) ?x14104) ?x14106) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14091 (* (* 4.0 l_0_8_45) l_0_8_45)))
 (let ((?x14088 (* (* 4.0 l_0_8_44) l_0_8_44)))
 (let ((?x14085 (* (* 4.0 l_0_8_43) l_0_8_43)))
 (let ((?x14082 (* (* 4.0 l_0_8_42) l_0_8_42)))
 (let ((?x14079 (* (* 4.0 l_0_8_41) l_0_8_41)))
 (let ((?x4253 (* l_0_8_30 l_0_8_30)))
 (let ((?x14072 (* 4.0 ?x4253)))
 (let ((?x10394 (* l_0_8_29 l_0_8_29)))
 (let ((?x14070 (* 4.0 ?x10394)))
 (let ((?x9495 (* l_0_8_28 l_0_8_28)))
 (let ((?x14068 (* 4.0 ?x9495)))
 (let ((?x13529 (* l_0_8_27 l_0_8_27)))
 (let ((?x14066 (* 4.0 ?x13529)))
 (let ((?x13523 (* l_0_8_26 l_0_8_26)))
 (let ((?x14064 (* 4.0 ?x13523)))
 (let ((?x13780 (* l_0_8_15 l_0_8_15)))
 (let ((?x13777 (* l_0_8_14 l_0_8_14)))
 (let ((?x13774 (* l_0_8_13 l_0_8_13)))
 (let ((?x14127 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x13774) ?x13777)))
 (let ((?x14134 (- (+ (+ (+ (+ (+ (- ?x14127 ?x13780) ?x14064) ?x14066) ?x14068) ?x14070) ?x14072) ?x14079)))
 (= (- (- (- (- ?x14134 ?x14082) ?x14085) ?x14088) ?x14091) 0.0))))))))))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x14146 (* ?x13134 l_0_8_49)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x12922 (* ?x12921 l_0_8_35)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x12917 (* ?x12916 l_0_8_34)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x13096 (* ?x13095 l_0_8_32)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x12912 (* ?x12911 l_0_8_20)))
 (let ((?x12907 (* 4.0 l_0_8_17)))
 (let ((?x12908 (* ?x12907 l_0_8_19)))
 (let ((?x13090 (* 4.0 l_0_8_16)))
 (let ((?x13091 (* ?x13090 l_0_8_17)))
 (let ((?x14143 (- (- (- (+ (* (* 2.0 l_0_8_1) l_0_8_4) ?x13091) ?x12908) ?x12912) ?x13096)))
 (let ((?x14149 (- (+ (+ (+ ?x14143 ?x12917) ?x12922) ?x14146) (* (* 2.0 l_0_8_76) l_0_8_79))))
 (= (- ?x14149 (* (* 2.0 l_0_8_91) l_0_8_94)) 0.0))))))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x14174 (* ?x13134 l_0_8_52)))
 (let ((?x13135 (* ?x13134 l_0_8_47)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x14171 (* ?x12921 l_0_8_38)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x14169 (* ?x12916 l_0_8_37)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13332 (* ?x13331 l_0_8_32)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x14166 (* ?x12911 l_0_8_23)))
 (let ((?x12907 (* 4.0 l_0_8_17)))
 (let ((?x14164 (* ?x12907 l_0_8_22)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13325 (* ?x13324 l_0_8_17)))
 (let ((?x14168 (- (- (- (+ (* (* 2.0 l_0_8_1) l_0_8_7) ?x13325) ?x14164) ?x14166) ?x13332)))
 (let ((?x14177 (+ (+ (- (+ (+ ?x14168 ?x14169) ?x14171) ?x13135) ?x14174) (* (* 2.0 l_0_8_61) l_0_8_62))))
 (let ((?x14181 (- (- ?x14177 (* (* 2.0 l_0_8_76) l_0_8_82)) (* (* 2.0 l_0_8_91) l_0_8_97))))
 (= ?x14181 0.0))))))))))))))))))))
(assert
 (let ((?x13890 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x13573 (* 2.0 l_0_8_51)))
 (let ((?x14224 (* ?x13573 l_0_8_54)))
 (let ((?x13570 (* 2.0 l_0_8_50)))
 (let ((?x14222 (* ?x13570 l_0_8_53)))
 (let ((?x13885 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x13567 (* 2.0 l_0_8_49)))
 (let ((?x14219 (* ?x13567 l_0_8_52)))
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13003 (* ?x13002 l_0_8_50)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13000 (* ?x12999 l_0_8_49)))
 (let ((?x13880 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x12921 (* 4.0 l_0_8_33)))
 (let ((?x14171 (* ?x12921 l_0_8_38)))
 (let ((?x13563 (* 8.0 l_0_8_33)))
 (let ((?x13564 (* ?x13563 l_0_8_35)))
 (let ((?x12916 (* 4.0 l_0_8_32)))
 (let ((?x14169 (* ?x12916 l_0_8_37)))
 (let ((?x13559 (* 8.0 l_0_8_32)))
 (let ((?x13560 (* ?x13559 l_0_8_34)))
 (let ((?x12911 (* 4.0 l_0_8_18)))
 (let ((?x14166 (* ?x12911 l_0_8_23)))
 (let ((?x13553 (* 8.0 l_0_8_18)))
 (let ((?x13554 (* ?x13553 l_0_8_20)))
 (let ((?x12907 (* 4.0 l_0_8_17)))
 (let ((?x14164 (* ?x12907 l_0_8_22)))
 (let ((?x13549 (* 8.0 l_0_8_17)))
 (let ((?x13550 (* ?x13549 l_0_8_19)))
 (let ((?x14215 (- (- (- (- (+ (+ (+ ?x13550 ?x14164) ?x13554) ?x14166) ?x13560) ?x14169) ?x13564) ?x14171)))
 (let ((?x14225 (+ (+ (+ (+ (- (- (+ ?x14215 ?x13880) ?x13000) ?x13003) ?x14219) ?x13885) ?x14222) ?x14224)))
 (let ((?x14230 (+ (+ (+ ?x14225 ?x13890) (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x14234 (- (- ?x14230 (* (* 2.0 l_0_8_79) l_0_8_82)) (* (* 2.0 l_0_8_80) l_0_8_83))))
 (let ((?x14239 (- (- ?x14234 (* (* 2.0 l_0_8_81) l_0_8_84)) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x14245 (- (- ?x14239 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x14245 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14305 (* l_0_8_99 l_0_8_99)))
 (let ((?x14303 (* l_0_8_98 l_0_8_98)))
 (let ((?x14301 (* l_0_8_97 l_0_8_97)))
 (let ((?x14297 (* l_0_8_85 l_0_8_85)))
 (let ((?x14295 (* l_0_8_84 l_0_8_84)))
 (let ((?x14293 (* l_0_8_83 l_0_8_83)))
 (let ((?x14291 (* l_0_8_82 l_0_8_82)))
 (let ((?x13002 (* 2.0 l_0_8_48)))
 (let ((?x13224 (* ?x13002 l_0_8_53)))
 (let ((?x12999 (* 2.0 l_0_8_47)))
 (let ((?x13221 (* ?x12999 l_0_8_52)))
 (let ((?x13563 (* 8.0 l_0_8_33)))
 (let ((?x13672 (* ?x13563 l_0_8_38)))
 (let ((?x13559 (* 8.0 l_0_8_32)))
 (let ((?x13668 (* ?x13559 l_0_8_37)))
 (let ((?x13553 (* 8.0 l_0_8_18)))
 (let ((?x13662 (* ?x13553 l_0_8_23)))
 (let ((?x13549 (* 8.0 l_0_8_17)))
 (let ((?x13658 (* ?x13549 l_0_8_22)))
 (let ((?x14265 (+ (- (* 1.0 (* l_0_8_10 l_0_8_10)) (* l_0_8_100 l_0_8_100)) ?x13658)))
 (let ((?x14273 (+ (- (- (- (- (+ ?x14265 ?x13662) ?x13668) ?x13672) ?x13221) ?x13224) (* 1.0 (* l_0_8_52 l_0_8_52)))))
 (let ((?x14279 (+ (+ ?x14273 (* 1.0 (* l_0_8_53 l_0_8_53))) (* 1.0 (* l_0_8_54 l_0_8_54)))))
 (let ((?x14284 (+ (+ ?x14279 (* 1.0 (* l_0_8_55 l_0_8_55))) (* (* 2.0 l_0_8_62) l_0_8_67))))
 (let ((?x14288 (+ (+ ?x14284 (* (* 2.0 l_0_8_63) l_0_8_68)) (* 1.0 (* l_0_8_7 l_0_8_7)))))
 (let ((?x14296 (- (- (- (+ ?x14288 (* 1.0 (* l_0_8_8 l_0_8_8))) ?x14291) ?x14293) ?x14295)))
 (let ((?x14304 (- (- (+ (- ?x14296 ?x14297) (* 1.0 (* l_0_8_9 l_0_8_9))) ?x14301) ?x14303)))
 (= (- ?x14304 ?x14305) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x8038 (* l_0_8_36 l_0_8_36)))
 (let ((?x10669 (* l_0_8_35 l_0_8_35)))
 (let ((?x4708 (* l_0_8_34 l_0_8_34)))
 (let ((?x13304 (* l_0_8_31 l_0_8_31)))
 (let ((?x13823 (* l_0_8_21 l_0_8_21)))
 (let ((?x7569 (* l_0_8_20 l_0_8_20)))
 (let ((?x14324 (+ (+ (+ (* (- l_0_8_16) l_0_8_16) (* l_0_8_19 l_0_8_19)) ?x7569) ?x13823)))
 (= (- (- (- (+ ?x14324 ?x13304) ?x4708) ?x10669) ?x8038) 0.0)))))))))
(assert
 (let ((?x8038 (* l_0_8_36 l_0_8_36)))
 (let ((?x14364 (* 2.0 ?x8038)))
 (let ((?x10669 (* l_0_8_35 l_0_8_35)))
 (let ((?x14362 (* 2.0 ?x10669)))
 (let ((?x4708 (* l_0_8_34 l_0_8_34)))
 (let ((?x14360 (* 2.0 ?x4708)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x14358 (* ?x13095 l_0_8_34)))
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14356 (* ?x14355 l_0_8_32)))
 (let ((?x14345 (+ (* (* (- 2.0) l_0_8_16) l_0_8_17) (* (* 4.0 l_0_8_16) l_0_8_19))))
 (let ((?x14351 (- (- ?x14345 (* (* 2.0 l_0_8_19) l_0_8_19)) (* (* 2.0 l_0_8_20) l_0_8_20))))
 (let ((?x14361 (+ (- (+ (- ?x14351 (* (* 2.0 l_0_8_21) l_0_8_21)) ?x14356) ?x14358) ?x14360)))
 (= (+ (+ ?x14361 ?x14362) ?x14364) 0.0)))))))))))))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x8531 (* ?x14355 l_0_8_34)))
 (= (+ (* (* (- 2.0) l_0_8_16) l_0_8_19) ?x8531) 0.0))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14396 (* ?x14355 l_0_8_37)))
 (= (+ (* (* (- 2.0) l_0_8_16) l_0_8_22) ?x14396) 0.0))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14404 (* ?x14355 l_0_8_41)))
 (= (+ (* (* (- 2.0) l_0_8_16) l_0_8_26) ?x14404) 0.0))))
(assert
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x14419 (* ?x12996 l_0_8_35)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x14417 (* ?x12993 l_0_8_34)))
 (let ((?x13823 (* l_0_8_21 l_0_8_21)))
 (let ((?x14378 (* 2.0 ?x13823)))
 (let ((?x7569 (* l_0_8_20 l_0_8_20)))
 (let ((?x14375 (* 2.0 ?x7569)))
 (let ((?x10534 (* l_0_8_19 l_0_8_19)))
 (let ((?x14370 (* 2.0 ?x10534)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x14408 (* ?x13129 l_0_8_20)))
 (let ((?x14416 (+ (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x14408) ?x14370) ?x14375) ?x14378)))
 (let ((?x14426 (- (- (+ (+ ?x14416 ?x14417) ?x14419) (* (* 2.0 l_0_8_34) l_0_8_34)) (* (* 2.0 l_0_8_35) l_0_8_35))))
 (= (- ?x14426 (* (* 2.0 l_0_8_36) l_0_8_36)) 0.0))))))))))))))))
(assert
 (let ((?x14477 (* l_0_8_66 l_0_8_66)))
 (let ((?x14475 (* l_0_8_65 l_0_8_65)))
 (let ((?x14473 (* l_0_8_64 l_0_8_64)))
 (let ((?x12938 (* l_0_8_51 l_0_8_51)))
 (let ((?x12935 (* l_0_8_50 l_0_8_50)))
 (let ((?x12929 (* l_0_8_49 l_0_8_49)))
 (let ((?x13394 (* 4.0 l_0_8_36)))
 (let ((?x13835 (* ?x13394 l_0_8_36)))
 (let ((?x14467 (* ?x13394 l_0_8_39)))
 (let ((?x13391 (* 4.0 l_0_8_35)))
 (let ((?x13832 (* ?x13391 l_0_8_35)))
 (let ((?x14464 (* ?x13391 l_0_8_38)))
 (let ((?x13388 (* 4.0 l_0_8_34)))
 (let ((?x13829 (* ?x13388 l_0_8_34)))
 (let ((?x14461 (* ?x13388 l_0_8_37)))
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x14459 (* ?x12996 l_0_8_38)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x14457 (* ?x12993 l_0_8_37)))
 (let ((?x13823 (* l_0_8_21 l_0_8_21)))
 (let ((?x13824 (* 4.0 ?x13823)))
 (let ((?x13382 (* 4.0 l_0_8_21)))
 (let ((?x14454 (* ?x13382 l_0_8_24)))
 (let ((?x7569 (* l_0_8_20 l_0_8_20)))
 (let ((?x10535 (* 4.0 ?x7569)))
 (let ((?x13379 (* 4.0 l_0_8_20)))
 (let ((?x14451 (* ?x13379 l_0_8_23)))
 (let ((?x10534 (* l_0_8_19 l_0_8_19)))
 (let ((?x2392 (* 4.0 ?x10534)))
 (let ((?x13376 (* 4.0 l_0_8_19)))
 (let ((?x14448 (* ?x13376 l_0_8_22)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x14446 (* ?x13129 l_0_8_23)))
 (let ((?x14452 (+ (+ (+ (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x14446) ?x14448) ?x2392) ?x14451)))
 (let ((?x14463 (- (- (+ (+ (+ (+ (+ ?x14452 ?x10535) ?x14454) ?x13824) ?x14457) ?x14459) ?x14461) ?x13829)))
 (let ((?x14472 (- (- (- (- (- (- (- ?x14463 ?x14464) ?x13832) ?x14467) ?x13835) ?x12929) ?x12935) ?x12938)))
 (= (+ (+ (+ ?x14472 ?x14473) ?x14475) ?x14477) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8038 (* l_0_8_36 l_0_8_36)))
 (let ((?x10669 (* l_0_8_35 l_0_8_35)))
 (let ((?x4708 (* l_0_8_34 l_0_8_34)))
 (let ((?x13823 (* l_0_8_21 l_0_8_21)))
 (let ((?x8632 (+ (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x13823) ?x4708)))
 (= (+ (+ ?x8632 ?x10669) ?x8038) 0.0)))))))
(assert
 (let ((?x14427 (* 2.0 l_0_8_36)))
 (let ((?x14504 (* ?x14427 l_0_8_39)))
 (let ((?x14424 (* 2.0 l_0_8_35)))
 (let ((?x14502 (* ?x14424 l_0_8_38)))
 (let ((?x14421 (* 2.0 l_0_8_34)))
 (let ((?x14500 (* ?x14421 l_0_8_37)))
 (let ((?x14352 (* 2.0 l_0_8_21)))
 (let ((?x14498 (* ?x14352 l_0_8_24)))
 (let ((?x14349 (* 2.0 l_0_8_20)))
 (let ((?x14496 (* ?x14349 l_0_8_23)))
 (let ((?x14503 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x14496) ?x14498) ?x14500) ?x14502)))
 (= (+ ?x14503 ?x14504) 0.0)))))))))))))
(assert
 (let ((?x14427 (* 2.0 l_0_8_36)))
 (let ((?x14517 (* ?x14427 l_0_8_43)))
 (let ((?x14424 (* 2.0 l_0_8_35)))
 (let ((?x14515 (* ?x14424 l_0_8_42)))
 (let ((?x14421 (* 2.0 l_0_8_34)))
 (let ((?x14513 (* ?x14421 l_0_8_41)))
 (let ((?x14352 (* 2.0 l_0_8_21)))
 (let ((?x8639 (* ?x14352 l_0_8_28)))
 (let ((?x14349 (* 2.0 l_0_8_20)))
 (let ((?x8730 (* ?x14349 l_0_8_27)))
 (let ((?x14516 (+ (+ (- (- (* (* (- 2.0) l_0_8_19) l_0_8_26) ?x8730) ?x8639) ?x14513) ?x14515)))
 (= (+ ?x14516 ?x14517) 0.0)))))))))))))
(assert
 (let ((?x10983 (* l_0_8_40 l_0_8_40)))
 (let ((?x4994 (* l_0_8_39 l_0_8_39)))
 (let ((?x4993 (* l_0_8_38 l_0_8_38)))
 (let ((?x8174 (* l_0_8_37 l_0_8_37)))
 (let ((?x13958 (* l_0_8_25 l_0_8_25)))
 (let ((?x13952 (* l_0_8_24 l_0_8_24)))
 (let ((?x14541 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x13952) ?x13958)))
 (= (+ (+ (+ (+ ?x14541 ?x8174) ?x4993) ?x4994) ?x10983) 0.0)))))))))
(assert
 (let ((?x14575 (* 2.0 l_0_8_40)))
 (let ((?x14576 (* ?x14575 l_0_8_44)))
 (let ((?x14572 (* 2.0 l_0_8_39)))
 (let ((?x14573 (* ?x14572 l_0_8_43)))
 (let ((?x14569 (* 2.0 l_0_8_38)))
 (let ((?x14570 (* ?x14569 l_0_8_42)))
 (let ((?x14566 (* 2.0 l_0_8_37)))
 (let ((?x14567 (* ?x14566 l_0_8_41)))
 (let ((?x14563 (* 2.0 l_0_8_25)))
 (let ((?x14564 (* ?x14563 l_0_8_29)))
 (let ((?x14560 (* 2.0 l_0_8_24)))
 (let ((?x14561 (* ?x14560 l_0_8_28)))
 (let ((?x14557 (* 2.0 l_0_8_23)))
 (let ((?x14558 (* ?x14557 l_0_8_27)))
 (let ((?x14568 (+ (- (- (- (* (* (- 2.0) l_0_8_22) l_0_8_26) ?x14558) ?x14561) ?x14564) ?x14567)))
 (= (+ (+ (+ ?x14568 ?x14570) ?x14573) ?x14576) 0.0)))))))))))))))))
(assert
 (let ((?x13518 (* l_0_8_45 l_0_8_45)))
 (let ((?x13515 (* l_0_8_44 l_0_8_44)))
 (let ((?x13512 (* l_0_8_43 l_0_8_43)))
 (let ((?x13509 (* l_0_8_42 l_0_8_42)))
 (let ((?x13506 (* l_0_8_41 l_0_8_41)))
 (let ((?x4253 (* l_0_8_30 l_0_8_30)))
 (let ((?x10394 (* l_0_8_29 l_0_8_29)))
 (let ((?x9495 (* l_0_8_28 l_0_8_28)))
 (let ((?x14595 (- (- (- (* (- l_0_8_26) l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x9495) ?x10394)))
 (= (+ (+ (+ (+ (+ (- ?x14595 ?x4253) ?x13506) ?x13509) ?x13512) ?x13515) ?x13518) 0.0)))))))))))
(assert
 (= (- (* l_0_8_16 l_0_8_16) (* l_0_8_31 l_0_8_31)) 0.0))
(assert
 (let ((?x13304 (* l_0_8_31 l_0_8_31)))
 (let ((?x14633 (* 2.0 ?x13304)))
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14356 (* ?x14355 l_0_8_32)))
 (let ((?x14631 (- (* (* 2.0 l_0_8_16) l_0_8_17) (* (* 2.0 l_0_8_16) l_0_8_16))))
 (= (+ (- ?x14631 ?x14356) ?x14633) 0.0)))))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x8531 (* ?x14355 l_0_8_34)))
 (= (- (* (* 2.0 l_0_8_16) l_0_8_19) ?x8531) 0.0))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14396 (* ?x14355 l_0_8_37)))
 (= (- (* (* 2.0 l_0_8_16) l_0_8_22) ?x14396) 0.0))))
(assert
 (let ((?x14355 (* 2.0 l_0_8_31)))
 (let ((?x14404 (* ?x14355 l_0_8_41)))
 (= (- (* (* 2.0 l_0_8_16) l_0_8_26) ?x14404) 0.0))))
(assert
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x14419 (* ?x12996 l_0_8_35)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x14417 (* ?x12993 l_0_8_34)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x14358 (* ?x13095 l_0_8_34)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x14408 (* ?x13129 l_0_8_20)))
 (let ((?x13279 (* l_0_8_16 l_0_8_16)))
 (let ((?x8774 (* 2.0 ?x13279)))
 (let ((?x14663 (+ (+ (* (* (- 4.0) l_0_8_16) l_0_8_19) ?x8774) (* (* 2.0 l_0_8_17) l_0_8_19))))
 (let ((?x14668 (- (- (+ (+ ?x14663 ?x14408) ?x14358) (* (* 2.0 l_0_8_31) l_0_8_31)) ?x14417)))
 (= (- ?x14668 ?x14419) 0.0))))))))))))))
(assert
 (let ((?x14682 (* l_0_8_61 l_0_8_61)))
 (let ((?x13100 (* l_0_8_46 l_0_8_46)))
 (let ((?x12996 (* 2.0 l_0_8_33)))
 (let ((?x14459 (* ?x12996 l_0_8_38)))
 (let ((?x12993 (* 2.0 l_0_8_32)))
 (let ((?x14457 (* ?x12993 l_0_8_37)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x13288 (* ?x13095 l_0_8_31)))
 (let ((?x14676 (* ?x13095 l_0_8_37)))
 (let ((?x13129 (* 2.0 l_0_8_18)))
 (let ((?x14446 (* ?x13129 l_0_8_23)))
 (let ((?x13279 (* l_0_8_16 l_0_8_16)))
 (let ((?x13280 (* 4.0 ?x13279)))
 (let ((?x14674 (+ (+ (* (* (- 4.0) l_0_8_16) l_0_8_22) ?x13280) (* (* 2.0 l_0_8_17) l_0_8_22))))
 (let ((?x14683 (+ (- (- (- (- (+ (+ ?x14674 ?x14446) ?x14676) ?x13288) ?x14457) ?x14459) ?x13100) ?x14682)))
 (= ?x14683 0.0)))))))))))))))))
(assert
 (let ((?x14427 (* 2.0 l_0_8_36)))
 (let ((?x14504 (* ?x14427 l_0_8_39)))
 (let ((?x14424 (* 2.0 l_0_8_35)))
 (let ((?x14502 (* ?x14424 l_0_8_38)))
 (let ((?x14421 (* 2.0 l_0_8_34)))
 (let ((?x14500 (* ?x14421 l_0_8_37)))
 (let ((?x14352 (* 2.0 l_0_8_21)))
 (let ((?x14498 (* ?x14352 l_0_8_24)))
 (let ((?x14349 (* 2.0 l_0_8_20)))
 (let ((?x14496 (* ?x14349 l_0_8_23)))
 (let ((?x14694 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_22) ?x14496) ?x14498) ?x14500) ?x14502)))
 (= (- ?x14694 ?x14504) 0.0)))))))))))))
(assert
 (let ((?x14427 (* 2.0 l_0_8_36)))
 (let ((?x14517 (* ?x14427 l_0_8_43)))
 (let ((?x14424 (* 2.0 l_0_8_35)))
 (let ((?x14515 (* ?x14424 l_0_8_42)))
 (let ((?x14421 (* 2.0 l_0_8_34)))
 (let ((?x14513 (* ?x14421 l_0_8_41)))
 (let ((?x14352 (* 2.0 l_0_8_21)))
 (let ((?x8639 (* ?x14352 l_0_8_28)))
 (let ((?x14349 (* 2.0 l_0_8_20)))
 (let ((?x8730 (* ?x14349 l_0_8_27)))
 (let ((?x14700 (- (- (+ (+ (* (* 2.0 l_0_8_19) l_0_8_26) ?x8730) ?x8639) ?x14513) ?x14515)))
 (= (- ?x14700 ?x14517) 0.0)))))))))))))
(assert
 (let ((?x10983 (* l_0_8_40 l_0_8_40)))
 (let ((?x4994 (* l_0_8_39 l_0_8_39)))
 (let ((?x4993 (* l_0_8_38 l_0_8_38)))
 (let ((?x8174 (* l_0_8_37 l_0_8_37)))
 (let ((?x13958 (* l_0_8_25 l_0_8_25)))
 (let ((?x13952 (* l_0_8_24 l_0_8_24)))
 (let ((?x8833 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x13952) ?x13958)))
 (= (- (- (- (- ?x8833 ?x8174) ?x4993) ?x4994) ?x10983) 0.0)))))))))
(assert
 (let ((?x14575 (* 2.0 l_0_8_40)))
 (let ((?x14576 (* ?x14575 l_0_8_44)))
 (let ((?x14572 (* 2.0 l_0_8_39)))
 (let ((?x14573 (* ?x14572 l_0_8_43)))
 (let ((?x14569 (* 2.0 l_0_8_38)))
 (let ((?x14570 (* ?x14569 l_0_8_42)))
 (let ((?x14566 (* 2.0 l_0_8_37)))
 (let ((?x14567 (* ?x14566 l_0_8_41)))
 (let ((?x14563 (* 2.0 l_0_8_25)))
 (let ((?x14564 (* ?x14563 l_0_8_29)))
 (let ((?x14560 (* 2.0 l_0_8_24)))
 (let ((?x14561 (* ?x14560 l_0_8_28)))
 (let ((?x14557 (* 2.0 l_0_8_23)))
 (let ((?x14558 (* ?x14557 l_0_8_27)))
 (let ((?x14728 (- (+ (+ (+ (* (* 2.0 l_0_8_22) l_0_8_26) ?x14558) ?x14561) ?x14564) ?x14567)))
 (= (- (- (- ?x14728 ?x14570) ?x14573) ?x14576) 0.0)))))))))))))))))
(assert
 (let ((?x13518 (* l_0_8_45 l_0_8_45)))
 (let ((?x13515 (* l_0_8_44 l_0_8_44)))
 (let ((?x13512 (* l_0_8_43 l_0_8_43)))
 (let ((?x13509 (* l_0_8_42 l_0_8_42)))
 (let ((?x13506 (* l_0_8_41 l_0_8_41)))
 (let ((?x4253 (* l_0_8_30 l_0_8_30)))
 (let ((?x10394 (* l_0_8_29 l_0_8_29)))
 (let ((?x9495 (* l_0_8_28 l_0_8_28)))
 (let ((?x14737 (+ (+ (+ (* l_0_8_26 l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x9495) ?x10394)))
 (= (- (- (- (- (- (+ ?x14737 ?x4253) ?x13506) ?x13509) ?x13512) ?x13515) ?x13518) 0.0)))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x14146 (* ?x13134 l_0_8_49)))
 (let ((?x13394 (* 4.0 l_0_8_36)))
 (let ((?x14467 (* ?x13394 l_0_8_39)))
 (let ((?x13391 (* 4.0 l_0_8_35)))
 (let ((?x14464 (* ?x13391 l_0_8_38)))
 (let ((?x13388 (* 4.0 l_0_8_34)))
 (let ((?x14461 (* ?x13388 l_0_8_37)))
 (let ((?x13095 (* 4.0 l_0_8_31)))
 (let ((?x14676 (* ?x13095 l_0_8_37)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13385 (* ?x13331 l_0_8_34)))
 (let ((?x13382 (* 4.0 l_0_8_21)))
 (let ((?x14454 (* ?x13382 l_0_8_24)))
 (let ((?x13379 (* 4.0 l_0_8_20)))
 (let ((?x14451 (* ?x13379 l_0_8_23)))
 (let ((?x13376 (* 4.0 l_0_8_19)))
 (let ((?x14448 (* ?x13376 l_0_8_22)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13373 (* ?x13324 l_0_8_19)))
 (let ((?x11815 (- (- (- (+ ?x13373 (* (* 4.0 l_0_8_16) l_0_8_22)) ?x14448) ?x14451) ?x14454)))
 (let ((?x14754 (+ (- (+ (+ (+ (- (- ?x11815 ?x13385) ?x14676) ?x14461) ?x14464) ?x14467) ?x14146) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (= ?x14754 0.0))))))))))))))))))))))))
(assert
 (let ((?x13573 (* 2.0 l_0_8_51)))
 (let ((?x14224 (* ?x13573 l_0_8_54)))
 (let ((?x13570 (* 2.0 l_0_8_50)))
 (let ((?x14222 (* ?x13570 l_0_8_53)))
 (let ((?x13567 (* 2.0 l_0_8_49)))
 (let ((?x14219 (* ?x13567 l_0_8_52)))
 (let ((?x13871 (* 8.0 l_0_8_36)))
 (let ((?x13872 (* ?x13871 l_0_8_39)))
 (let ((?x13866 (* 8.0 l_0_8_35)))
 (let ((?x13867 (* ?x13866 l_0_8_38)))
 (let ((?x13861 (* 8.0 l_0_8_34)))
 (let ((?x13862 (* ?x13861 l_0_8_37)))
 (let ((?x13958 (* l_0_8_25 l_0_8_25)))
 (let ((?x14775 (* 2.0 ?x13958)))
 (let ((?x13952 (* l_0_8_24 l_0_8_24)))
 (let ((?x14773 (* 2.0 ?x13952)))
 (let ((?x13946 (* l_0_8_23 l_0_8_23)))
 (let ((?x14771 (* 2.0 ?x13946)))
 (let ((?x13940 (* l_0_8_22 l_0_8_22)))
 (let ((?x14769 (* 2.0 ?x13940)))
 (let ((?x13852 (* 8.0 l_0_8_21)))
 (let ((?x13853 (* ?x13852 l_0_8_24)))
 (let ((?x13847 (* 8.0 l_0_8_20)))
 (let ((?x13848 (* ?x13847 l_0_8_23)))
 (let ((?x4750 (* 8.0 l_0_8_19)))
 (let ((?x10726 (* ?x4750 l_0_8_22)))
 (let ((?x14777 (- (+ (+ (+ (+ (+ (+ ?x10726 ?x13848) ?x13853) ?x14769) ?x14771) ?x14773) ?x14775) ?x13862)))
 (let ((?x14783 (- (- (- (- ?x14777 ?x13867) ?x13872) (* (* 2.0 l_0_8_37) l_0_8_37)) (* (* 2.0 l_0_8_38) l_0_8_38))))
 (let ((?x14787 (- (- ?x14783 (* (* 2.0 l_0_8_39) l_0_8_39)) (* (* 2.0 l_0_8_40) l_0_8_40))))
 (let ((?x14792 (+ (- (- (- ?x14787 ?x14219) ?x14222) ?x14224) (* (* 2.0 l_0_8_64) l_0_8_67))))
 (let ((?x14796 (+ (+ ?x14792 (* (* 2.0 l_0_8_65) l_0_8_68)) (* (* 2.0 l_0_8_66) l_0_8_69))))
 (= ?x14796 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x13134 (* 2.0 l_0_8_46)))
 (let ((?x14174 (* ?x13134 l_0_8_52)))
 (let ((?x10983 (* l_0_8_40 l_0_8_40)))
 (let ((?x11874 (* 2.0 ?x10983)))
 (let ((?x4994 (* l_0_8_39 l_0_8_39)))
 (let ((?x993 (* 2.0 ?x4994)))
 (let ((?x4993 (* l_0_8_38 l_0_8_38)))
 (let ((?x1617 (* 2.0 ?x4993)))
 (let ((?x8174 (* l_0_8_37 l_0_8_37)))
 (let ((?x1623 (* 2.0 ?x8174)))
 (let ((?x13331 (* 8.0 l_0_8_31)))
 (let ((?x13438 (* ?x13331 l_0_8_37)))
 (let ((?x13324 (* 8.0 l_0_8_16)))
 (let ((?x13422 (* ?x13324 l_0_8_22)))
 (let ((?x14812 (- (- ?x13422 (* (* 2.0 l_0_8_22) l_0_8_22)) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x14816 (- (- ?x14812 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x14824 (+ (- (+ (+ (+ (+ (- ?x14816 ?x13438) ?x1623) ?x1617) ?x993) ?x11874) ?x14174) (* (* 2.0 l_0_8_61) l_0_8_67))))
 (= ?x14824 0.0)))))))))))))))))))
(assert
 (let ((?x14840 (* l_0_8_70 l_0_8_70)))
 (let ((?x14838 (* l_0_8_69 l_0_8_69)))
 (let ((?x14836 (* l_0_8_68 l_0_8_68)))
 (let ((?x14834 (* l_0_8_67 l_0_8_67)))
 (let ((?x14280 (* l_0_8_55 l_0_8_55)))
 (let ((?x14277 (* l_0_8_54 l_0_8_54)))
 (let ((?x14274 (* l_0_8_53 l_0_8_53)))
 (let ((?x14271 (* l_0_8_52 l_0_8_52)))
 (let ((?x13451 (* 4.0 l_0_8_40)))
 (let ((?x13979 (* ?x13451 l_0_8_40)))
 (let ((?x13448 (* 4.0 l_0_8_39)))
 (let ((?x13974 (* ?x13448 l_0_8_39)))
 (let ((?x13445 (* 4.0 l_0_8_38)))
 (let ((?x13969 (* ?x13445 l_0_8_38)))
 (let ((?x13442 (* 4.0 l_0_8_37)))
 (let ((?x13964 (* ?x13442 l_0_8_37)))
 (let ((?x13958 (* l_0_8_25 l_0_8_25)))
 (let ((?x13959 (* 4.0 ?x13958)))
 (let ((?x13952 (* l_0_8_24 l_0_8_24)))
 (let ((?x13953 (* 4.0 ?x13952)))
 (let ((?x13946 (* l_0_8_23 l_0_8_23)))
 (let ((?x13947 (* 4.0 ?x13946)))
 (let ((?x13940 (* l_0_8_22 l_0_8_22)))
 (let ((?x13941 (* 4.0 ?x13940)))
 (let ((?x14829 (- (- (- (- (+ (+ (+ ?x13941 ?x13947) ?x13953) ?x13959) ?x13964) ?x13969) ?x13974) ?x13979)))
 (let ((?x14839 (+ (+ (+ (- (- (- (- ?x14829 ?x14271) ?x14274) ?x14277) ?x14280) ?x14834) ?x14836) ?x14838)))
 (= (+ ?x14839 ?x14840) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x14921 (* ?x14920 l_0_9_57)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x14918 (* ?x14917 l_0_9_56)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x14915 (* ?x14914 l_0_9_33)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x14912 (* ?x14911 l_0_9_32)))
 (let ((?x14909 (* l_0_9_3 l_0_9_3)))
 (let ((?x14907 (* l_0_9_2 l_0_9_2)))
 (let ((?x14904 (* l_0_9_18 l_0_9_18)))
 (let ((?x14905 (* 4.0 ?x14904)))
 (let ((?x14901 (* l_0_9_17 l_0_9_17)))
 (let ((?x14902 (* 4.0 ?x14901)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x14899 (* ?x14898 l_0_9_3)))
 (let ((?x14895 (* 2.0 l_0_9_11)))
 (let ((?x14896 (* ?x14895 l_0_9_2)))
 (let ((?x14888 (- (* (* (- 2.0) l_0_9_101) l_0_9_92) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x14894 (- (- ?x14888 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x14913 (- (- (- (+ (+ (+ (+ ?x14894 ?x14896) ?x14899) ?x14902) ?x14905) ?x14907) ?x14909) ?x14912)))
 (let ((?x14925 (- (+ (+ (- ?x14913 ?x14915) ?x14918) ?x14921) (* (* 2.0 l_0_9_77) l_0_9_86))))
 (= (+ (- ?x14925 (* (* 2.0 l_0_9_78) l_0_9_87)) 4.0) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14988 (* l_0_9_93 l_0_9_93)))
 (let ((?x14986 (* l_0_9_92 l_0_9_92)))
 (let ((?x14984 (* l_0_9_78 l_0_9_78)))
 (let ((?x14982 (* l_0_9_77 l_0_9_77)))
 (let ((?x14970 (* l_0_9_108 l_0_9_108)))
 (let ((?x14973 (+ (- (- (* 4.0 _a_2_) (* l_0_9_107 l_0_9_107)) ?x14970) (* 1.0 (* l_0_9_2 l_0_9_2)))))
 (let ((?x14978 (+ (+ ?x14973 (* 1.0 (* l_0_9_3 l_0_9_3))) (* 1.0 (* l_0_9_47 l_0_9_47)))))
 (let ((?x14987 (- (- (- (+ ?x14978 (* 1.0 (* l_0_9_48 l_0_9_48))) ?x14982) ?x14984) ?x14986)))
 (= (- ?x14987 ?x14988) 0.0))))))))))
(assert
 (let ((?x15023 (* l_0_9_63 l_0_9_63)))
 (let ((?x15021 (* l_0_9_62 l_0_9_62)))
 (let ((?x14979 (* l_0_9_48 l_0_9_48)))
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x15018 (* ?x14920 l_0_9_53)))
 (let ((?x14976 (* l_0_9_47 l_0_9_47)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x15015 (* ?x14917 l_0_9_52)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x14915 (* ?x14914 l_0_9_33)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x14912 (* ?x14911 l_0_9_32)))
 (let ((?x15010 (* 2.0 l_0_9_3)))
 (let ((?x15011 (* ?x15010 l_0_9_8)))
 (let ((?x15007 (* 2.0 l_0_9_2)))
 (let ((?x15008 (* ?x15007 l_0_9_7)))
 (let ((?x14904 (* l_0_9_18 l_0_9_18)))
 (let ((?x14905 (* 4.0 ?x14904)))
 (let ((?x14901 (* l_0_9_17 l_0_9_17)))
 (let ((?x14902 (* 4.0 ?x14901)))
 (let ((?x15004 (- (- (* 4.0 _a_3_) (* (* 2.0 l_0_9_107) l_0_9_112)) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x15016 (+ (- (- (+ (+ (+ (+ ?x15004 ?x14902) ?x14905) ?x15008) ?x15011) ?x14912) ?x14915) ?x15015)))
 (let ((?x15026 (- (+ (+ (- (+ (- ?x15016 ?x14976) ?x15018) ?x14979) ?x15021) ?x15023) (* (* 2.0 l_0_9_77) l_0_9_82))))
 (let ((?x15031 (- (- ?x15026 (* (* 2.0 l_0_9_78) l_0_9_83)) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x15031 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x15074 (* ?x14920 l_0_9_50)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x15072 (* ?x14917 l_0_9_49)))
 (let ((?x15010 (* 2.0 l_0_9_3)))
 (let ((?x15064 (* ?x15010 l_0_9_5)))
 (let ((?x15007 (* 2.0 l_0_9_2)))
 (let ((?x15062 (* ?x15007 l_0_9_4)))
 (let ((?x14904 (* l_0_9_18 l_0_9_18)))
 (let ((?x15060 (* 2.0 ?x14904)))
 (let ((?x14901 (* l_0_9_17 l_0_9_17)))
 (let ((?x15058 (* 2.0 ?x14901)))
 (let ((?x15057 (- (- (* 4.0 _a_4_) (* (* 2.0 l_0_9_107) l_0_9_109)) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x15068 (- (+ (+ (+ (+ ?x15057 ?x15058) ?x15060) ?x15062) ?x15064) (* (* 2.0 l_0_9_32) l_0_9_32))))
 (let ((?x15077 (- (+ (+ (- ?x15068 (* (* 2.0 l_0_9_33) l_0_9_33)) ?x15072) ?x15074) (* (* 2.0 l_0_9_77) l_0_9_79))))
 (let ((?x15081 (- (- ?x15077 (* (* 2.0 l_0_9_78) l_0_9_80)) (* (* 2.0 l_0_9_92) l_0_9_94))))
 (= (- (- ?x15081 (* (* 2.0 l_0_9_93) l_0_9_95)) 2.0) 0.0))))))))))))))))))
(assert
 (let ((?x15171 (* l_0_9_96 l_0_9_96)))
 (let ((?x15169 (* l_0_9_95 l_0_9_95)))
 (let ((?x15167 (* l_0_9_94 l_0_9_94)))
 (let ((?x15165 (* l_0_9_81 l_0_9_81)))
 (let ((?x15163 (* l_0_9_80 l_0_9_80)))
 (let ((?x15161 (* l_0_9_79 l_0_9_79)))
 (let ((?x14943 (* l_0_9_33 l_0_9_33)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x15140 (* ?x14914 l_0_9_35)))
 (let ((?x6249 (* l_0_9_32 l_0_9_32)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x15137 (* ?x14911 l_0_9_34)))
 (let ((?x14904 (* l_0_9_18 l_0_9_18)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x15134 (* ?x15133 l_0_9_20)))
 (let ((?x14901 (* l_0_9_17 l_0_9_17)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x15130 (* ?x15129 l_0_9_19)))
 (let ((?x15127 (* l_0_9_111 l_0_9_111)))
 (let ((?x15128 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x15127)))
 (let ((?x15141 (- (+ (- (- (+ (- (+ ?x15128 ?x15130) ?x14901) ?x15134) ?x14904) ?x15137) ?x6249) ?x15140)))
 (let ((?x15148 (+ (+ (+ ?x15141 ?x14943) (* 1.0 (* l_0_9_4 l_0_9_4))) (* 1.0 (* l_0_9_49 l_0_9_49)))))
 (let ((?x15154 (+ (+ ?x15148 (* 1.0 (* l_0_9_5 l_0_9_5))) (* 1.0 (* l_0_9_50 l_0_9_50)))))
 (let ((?x15160 (+ (+ ?x15154 (* 1.0 (* l_0_9_51 l_0_9_51))) (* 1.0 (* l_0_9_6 l_0_9_6)))))
 (let ((?x15173 (- (- (- (- (- (- (- ?x15160 ?x15161) ?x15163) ?x15165) ?x15167) ?x15169) ?x15171) 1.0)))
 (= ?x15173 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15220 (* l_0_9_91 l_0_9_91)))
 (let ((?x15218 (* l_0_9_76 l_0_9_76)))
 (let ((?x14943 (* l_0_9_33 l_0_9_33)))
 (let ((?x6249 (* l_0_9_32 l_0_9_32)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x15211 (* ?x15210 l_0_9_32)))
 (let ((?x14904 (* l_0_9_18 l_0_9_18)))
 (let ((?x14901 (* l_0_9_17 l_0_9_17)))
 (let ((?x15205 (* 4.0 l_0_9_16)))
 (let ((?x15206 (* ?x15205 l_0_9_17)))
 (let ((?x15207 (- (- (* 1.0 (* l_0_9_1 l_0_9_1)) (* l_0_9_106 l_0_9_106)) ?x15206)))
 (let ((?x15217 (+ (- (- (+ (+ (+ ?x15207 ?x14901) ?x14904) ?x15211) ?x6249) ?x14943) (* 1.0 (* l_0_9_46 l_0_9_46)))))
 (= (+ (- (- ?x15217 ?x15218) ?x15220) 1.0) 0.0))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x15257 (* ?x15256 l_0_9_47)))
 (let ((?x14943 (* l_0_9_33 l_0_9_33)))
 (let ((?x15102 (* 2.0 ?x14943)))
 (let ((?x6249 (* l_0_9_32 l_0_9_32)))
 (let ((?x15097 (* 2.0 ?x6249)))
 (let ((?x9337 (* 2.0 l_0_9_1)))
 (let ((?x15244 (* ?x9337 l_0_9_2)))
 (let ((?x15250 (- (- ?x15244 (* (* 2.0 l_0_9_106) l_0_9_107)) (* (* 2.0 l_0_9_17) l_0_9_17))))
 (let ((?x15258 (+ (+ (+ (- ?x15250 (* (* 2.0 l_0_9_18) l_0_9_18)) ?x15097) ?x15102) ?x15257)))
 (let ((?x15264 (- (- ?x15258 (* (* 2.0 l_0_9_76) l_0_9_77)) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= (- ?x15264 2.0) 0.0)))))))))))))
(assert
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x15288 (* ?x15069 l_0_9_42)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x15286 (* ?x15066 l_0_9_41)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x15284 (* ?x15210 l_0_9_31)))
 (let ((?x15282 (* ?x15210 l_0_9_41)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x15280 (* ?x15251 l_0_9_27)))
 (let ((?x6446 (* l_0_9_16 l_0_9_16)))
 (let ((?x2292 (* 4.0 ?x6446)))
 (let ((?x15277 (+ (- (* (- l_0_9_1) l_0_9_1) (* (* 4.0 l_0_9_16) l_0_9_26)) ?x2292)))
 (let ((?x15285 (- (+ (+ (+ ?x15277 (* (* 2.0 l_0_9_17) l_0_9_26)) ?x15280) ?x15282) ?x15284)))
 (= (- (- ?x15285 ?x15286) ?x15288) 0.0)))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x15329 (* ?x15256 l_0_9_56)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x15327 (* ?x14914 l_0_9_42)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x15325 (* ?x14911 l_0_9_41)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15323 (* ?x15322 l_0_9_32)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x15320 (* ?x15133 l_0_9_27)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x15318 (* ?x15129 l_0_9_26)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15316 (* ?x15315 l_0_9_17)))
 (let ((?x9337 (* 2.0 l_0_9_1)))
 (let ((?x15244 (* ?x9337 l_0_9_2)))
 (let ((?x15312 (- (- (* ?x9337 l_0_9_11) ?x15244) (* (* 2.0 l_0_9_101) l_0_9_91))))
 (let ((?x15321 (- (- (+ (- ?x15312 (* (* 2.0 l_0_9_106) l_0_9_116)) ?x15316) ?x15318) ?x15320)))
 (let ((?x15332 (- (+ (+ (+ (- ?x15321 ?x15323) ?x15325) ?x15327) ?x15329) (* (* 2.0 l_0_9_76) l_0_9_86))))
 (= ?x15332 0.0)))))))))))))))))))))
(assert
 (let ((?x15373 (* 4.0 l_0_9_36)))
 (let ((?x15374 (* ?x15373 l_0_9_43)))
 (let ((?x15370 (* 4.0 l_0_9_35)))
 (let ((?x15371 (* ?x15370 l_0_9_42)))
 (let ((?x15367 (* 4.0 l_0_9_34)))
 (let ((?x15368 (* ?x15367 l_0_9_41)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x15282 (* ?x15210 l_0_9_41)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15364 (* ?x15322 l_0_9_34)))
 (let ((?x15361 (* 4.0 l_0_9_21)))
 (let ((?x15362 (* ?x15361 l_0_9_28)))
 (let ((?x15358 (* 4.0 l_0_9_20)))
 (let ((?x15359 (* ?x15358 l_0_9_27)))
 (let ((?x15355 (* 4.0 l_0_9_19)))
 (let ((?x15356 (* ?x15355 l_0_9_26)))
 (let ((?x15205 (* 4.0 l_0_9_16)))
 (let ((?x2293 (* ?x15205 l_0_9_26)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15352 (* ?x15315 l_0_9_19)))
 (let ((?x15360 (- (- (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x15352) ?x2293) ?x15356) ?x15359)))
 (= (+ (+ (+ (- (- (- ?x15360 ?x15362) ?x15364) ?x15282) ?x15368) ?x15371) ?x15374) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x15329 (* ?x15256 l_0_9_56)))
 (let ((?x15432 (* 4.0 l_0_9_40)))
 (let ((?x15433 (* ?x15432 l_0_9_44)))
 (let ((?x15429 (* 4.0 l_0_9_39)))
 (let ((?x15430 (* ?x15429 l_0_9_43)))
 (let ((?x15426 (* 4.0 l_0_9_38)))
 (let ((?x15427 (* ?x15426 l_0_9_42)))
 (let ((?x15423 (* 4.0 l_0_9_37)))
 (let ((?x15424 (* ?x15423 l_0_9_41)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15421 (* ?x15322 l_0_9_41)))
 (let ((?x15419 (* ?x15322 l_0_9_37)))
 (let ((?x15417 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x15414 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x15411 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x15408 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15405 (* ?x15315 l_0_9_26)))
 (let ((?x15409 (- (+ (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) (* ?x15315 l_0_9_22)) ?x15405) ?x15408)))
 (let ((?x15428 (+ (+ (- (- (- (- (- ?x15409 ?x15411) ?x15414) ?x15417) ?x15419) ?x15421) ?x15424) ?x15427)))
 (let ((?x15438 (+ (- (+ (+ ?x15428 ?x15430) ?x15433) ?x15329) (* (* 2.0 l_0_9_61) l_0_9_71))))
 (= ?x15438 0.0))))))))))))))))))))))))
(assert
 (let ((?x15512 (* l_0_9_45 l_0_9_45)))
 (let ((?x15513 (* 2.0 ?x15512)))
 (let ((?x15509 (* l_0_9_44 l_0_9_44)))
 (let ((?x15510 (* 2.0 ?x15509)))
 (let ((?x15506 (* l_0_9_43 l_0_9_43)))
 (let ((?x15507 (* 2.0 ?x15506)))
 (let ((?x15503 (* l_0_9_42 l_0_9_42)))
 (let ((?x15504 (* 2.0 ?x15503)))
 (let ((?x15500 (* l_0_9_41 l_0_9_41)))
 (let ((?x15501 (* 2.0 ?x15500)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15421 (* ?x15322 l_0_9_41)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15405 (* ?x15315 l_0_9_26)))
 (let ((?x15486 (- (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x15405) (* (* 2.0 l_0_9_26) l_0_9_26))))
 (let ((?x15492 (- (- ?x15486 (* (* 2.0 l_0_9_27) l_0_9_27)) (* (* 2.0 l_0_9_28) l_0_9_28))))
 (let ((?x15498 (- (- ?x15492 (* (* 2.0 l_0_9_29) l_0_9_29)) (* (* 2.0 l_0_9_30) l_0_9_30))))
 (= (+ (+ (+ (+ (+ (- ?x15498 ?x15421) ?x15501) ?x15504) ?x15507) ?x15510) ?x15513) 0.0)))))))))))))))))))
(assert
 (let ((?x15586 (* 2.0 l_0_9_51)))
 (let ((?x15587 (* ?x15586 l_0_9_58)))
 (let ((?x15583 (* 2.0 l_0_9_50)))
 (let ((?x15584 (* ?x15583 l_0_9_57)))
 (let ((?x15580 (* 2.0 l_0_9_49)))
 (let ((?x15581 (* ?x15580 l_0_9_56)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x15327 (* ?x14914 l_0_9_42)))
 (let ((?x15576 (* 8.0 l_0_9_33)))
 (let ((?x15577 (* ?x15576 l_0_9_35)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x15325 (* ?x14911 l_0_9_41)))
 (let ((?x15572 (* 8.0 l_0_9_32)))
 (let ((?x15573 (* ?x15572 l_0_9_34)))
 (let ((?x15010 (* 2.0 l_0_9_3)))
 (let ((?x15064 (* ?x15010 l_0_9_5)))
 (let ((?x15007 (* 2.0 l_0_9_2)))
 (let ((?x15062 (* ?x15007 l_0_9_4)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x15320 (* ?x15133 l_0_9_27)))
 (let ((?x15566 (* 8.0 l_0_9_18)))
 (let ((?x15567 (* ?x15566 l_0_9_20)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x15318 (* ?x15129 l_0_9_26)))
 (let ((?x15562 (* 8.0 l_0_9_17)))
 (let ((?x15563 (* ?x15562 l_0_9_19)))
 (let ((?x15559 (* 2.0 l_0_9_13)))
 (let ((?x15560 (* ?x15559 l_0_9_6)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x15557 (* ?x14898 l_0_9_5)))
 (let ((?x15542 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x15548 (- (- ?x15542 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x15553 (- (+ ?x15548 (* (* 2.0 l_0_9_11) l_0_9_4)) (* (* 2.0 l_0_9_110) l_0_9_117))))
 (let ((?x15564 (+ (+ (+ (- ?x15553 (* (* 2.0 l_0_9_111) l_0_9_118)) ?x15557) ?x15560) ?x15563)))
 (let ((?x15575 (- (- (- (- (+ (+ (+ ?x15564 ?x15318) ?x15567) ?x15320) ?x15062) ?x15064) ?x15573) ?x15325)))
 (let ((?x15591 (- (+ (+ (+ (- (- ?x15575 ?x15577) ?x15327) ?x15581) ?x15584) ?x15587) (* (* 2.0 l_0_9_79) l_0_9_86))))
 (let ((?x15597 (- (- ?x15591 (* (* 2.0 l_0_9_80) l_0_9_87)) (* (* 2.0 l_0_9_81) l_0_9_88))))
 (= ?x15597 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15693 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15690 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15687 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15684 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x14921 (* ?x14920 l_0_9_57)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x14918 (* ?x14917 l_0_9_56)))
 (let ((?x15576 (* 8.0 l_0_9_33)))
 (let ((?x15679 (* ?x15576 l_0_9_42)))
 (let ((?x15677 (* ?x15576 l_0_9_38)))
 (let ((?x15572 (* 8.0 l_0_9_32)))
 (let ((?x15675 (* ?x15572 l_0_9_41)))
 (let ((?x15673 (* ?x15572 l_0_9_37)))
 (let ((?x15010 (* 2.0 l_0_9_3)))
 (let ((?x15011 (* ?x15010 l_0_9_8)))
 (let ((?x15007 (* 2.0 l_0_9_2)))
 (let ((?x15008 (* ?x15007 l_0_9_7)))
 (let ((?x15566 (* 8.0 l_0_9_18)))
 (let ((?x15669 (* ?x15566 l_0_9_27)))
 (let ((?x15667 (* ?x15566 l_0_9_23)))
 (let ((?x15562 (* 8.0 l_0_9_17)))
 (let ((?x15665 (* ?x15562 l_0_9_26)))
 (let ((?x15663 (* ?x15562 l_0_9_22)))
 (let ((?x15559 (* 2.0 l_0_9_13)))
 (let ((?x15661 (* ?x15559 l_0_9_9)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x15659 (* ?x14898 l_0_9_8)))
 (let ((?x14895 (* 2.0 l_0_9_11)))
 (let ((?x15645 (* ?x14895 l_0_9_7)))
 (let ((?x15638 (- (* (* 2.0 l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x15642 (- (- ?x15638 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x15649 (- (+ (- ?x15642 (* (* 2.0 l_0_9_103) l_0_9_99)) ?x15645) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x15655 (- (- ?x15649 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x15664 (+ (+ (+ (- ?x15655 (* (* 2.0 l_0_9_115) l_0_9_119)) ?x15659) ?x15661) ?x15663)))
 (let ((?x15676 (- (- (- (- (+ (+ (+ ?x15664 ?x15665) ?x15667) ?x15669) ?x15008) ?x15011) ?x15673) ?x15675)))
 (let ((?x15691 (+ (+ (+ (- (- (- (- ?x15676 ?x15677) ?x15679) ?x14918) ?x14921) ?x15684) ?x15687) ?x15690)))
 (let ((?x15700 (+ (+ (+ ?x15691 ?x15693) (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (let ((?x15706 (- (- ?x15700 (* (* 2.0 l_0_9_82) l_0_9_86)) (* (* 2.0 l_0_9_83) l_0_9_87))))
 (let ((?x15712 (- (- ?x15706 (* (* 2.0 l_0_9_84) l_0_9_88)) (* (* 2.0 l_0_9_85) l_0_9_89))))
 (= ?x15712 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15844 (* l_0_9_90 l_0_9_90)))
 (let ((?x15842 (* l_0_9_89 l_0_9_89)))
 (let ((?x15840 (* l_0_9_88 l_0_9_88)))
 (let ((?x15838 (* l_0_9_87 l_0_9_87)))
 (let ((?x15836 (* l_0_9_86 l_0_9_86)))
 (let ((?x15576 (* 8.0 l_0_9_33)))
 (let ((?x15679 (* ?x15576 l_0_9_42)))
 (let ((?x15572 (* 8.0 l_0_9_32)))
 (let ((?x15675 (* ?x15572 l_0_9_41)))
 (let ((?x15566 (* 8.0 l_0_9_18)))
 (let ((?x15669 (* ?x15566 l_0_9_27)))
 (let ((?x15562 (* 8.0 l_0_9_17)))
 (let ((?x15665 (* ?x15562 l_0_9_26)))
 (let ((?x15806 (* l_0_9_120 l_0_9_120)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x14899 (* ?x14898 l_0_9_3)))
 (let ((?x15800 (* l_0_9_119 l_0_9_119)))
 (let ((?x15798 (* l_0_9_118 l_0_9_118)))
 (let ((?x15796 (* l_0_9_117 l_0_9_117)))
 (let ((?x15794 (* l_0_9_116 l_0_9_116)))
 (let ((?x14895 (* 2.0 l_0_9_11)))
 (let ((?x14896 (* ?x14895 l_0_9_2)))
 (let ((?x15788 (* l_0_9_105 l_0_9_105)))
 (let ((?x15786 (* l_0_9_104 l_0_9_104)))
 (let ((?x15784 (* l_0_9_103 l_0_9_103)))
 (let ((?x15785 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x15784)))
 (let ((?x15793 (+ (- (- (- ?x15785 ?x15786) ?x15788) ?x14896) (* 1.0 (* l_0_9_11 l_0_9_11)))))
 (let ((?x15805 (+ (- (- (- (- (- ?x15793 ?x15794) ?x15796) ?x15798) ?x15800) ?x14899) (* 1.0 (* l_0_9_12 l_0_9_12)))))
 (let ((?x15813 (+ (+ (- ?x15805 ?x15806) (* 1.0 (* l_0_9_13 l_0_9_13))) (* 1.0 (* l_0_9_14 l_0_9_14)))))
 (let ((?x15819 (- (+ (+ (+ ?x15813 (* 1.0 (* l_0_9_15 l_0_9_15))) ?x15665) ?x15669) ?x15675)))
 (let ((?x15826 (+ (+ (- ?x15819 ?x15679) (* 1.0 (* l_0_9_56 l_0_9_56))) (* 1.0 (* l_0_9_57 l_0_9_57)))))
 (let ((?x15832 (+ (+ ?x15826 (* 1.0 (* l_0_9_58 l_0_9_58))) (* 1.0 (* l_0_9_59 l_0_9_59)))))
 (let ((?x15841 (- (- (- (+ ?x15832 (* 1.0 (* l_0_9_60 l_0_9_60))) ?x15836) ?x15838) ?x15840)))
 (= (- (- ?x15841 ?x15842) ?x15844) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15158 (* l_0_9_6 l_0_9_6)))
 (let ((?x15149 (* l_0_9_5 l_0_9_5)))
 (let ((?x15143 (* l_0_9_4 l_0_9_4)))
 (let ((?x15373 (* 4.0 l_0_9_36)))
 (let ((?x15910 (* ?x15373 l_0_9_36)))
 (let ((?x15374 (* ?x15373 l_0_9_43)))
 (let ((?x15370 (* 4.0 l_0_9_35)))
 (let ((?x15907 (* ?x15370 l_0_9_35)))
 (let ((?x15371 (* ?x15370 l_0_9_42)))
 (let ((?x15367 (* 4.0 l_0_9_34)))
 (let ((?x15904 (* ?x15367 l_0_9_34)))
 (let ((?x15368 (* ?x15367 l_0_9_41)))
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x15288 (* ?x15069 l_0_9_42)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x15286 (* ?x15066 l_0_9_41)))
 (let ((?x15898 (* l_0_9_21 l_0_9_21)))
 (let ((?x15899 (* 4.0 ?x15898)))
 (let ((?x15361 (* 4.0 l_0_9_21)))
 (let ((?x15362 (* ?x15361 l_0_9_28)))
 (let ((?x15894 (* l_0_9_20 l_0_9_20)))
 (let ((?x15895 (* 4.0 ?x15894)))
 (let ((?x15358 (* 4.0 l_0_9_20)))
 (let ((?x15359 (* ?x15358 l_0_9_27)))
 (let ((?x15890 (* l_0_9_19 l_0_9_19)))
 (let ((?x15891 (* 4.0 ?x15890)))
 (let ((?x15355 (* 4.0 l_0_9_19)))
 (let ((?x15356 (* ?x15355 l_0_9_26)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x15280 (* ?x15251 l_0_9_27)))
 (let ((?x15893 (+ (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_26) ?x15280) ?x15356) ?x15891) ?x15359)))
 (let ((?x15905 (- (- (+ (+ (+ (+ (+ ?x15893 ?x15895) ?x15362) ?x15899) ?x15286) ?x15288) ?x15368) ?x15904)))
 (let ((?x15914 (- (- (- (- (- (- (- ?x15905 ?x15371) ?x15907) ?x15374) ?x15910) ?x15143) ?x15149) ?x15158)))
 (= ?x15914 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15965 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15586 (* 2.0 l_0_9_51)))
 (let ((?x15587 (* ?x15586 l_0_9_58)))
 (let ((?x15583 (* 2.0 l_0_9_50)))
 (let ((?x15584 (* ?x15583 l_0_9_57)))
 (let ((?x15960 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15580 (* 2.0 l_0_9_49)))
 (let ((?x15581 (* ?x15580 l_0_9_56)))
 (let ((?x15432 (* 4.0 l_0_9_40)))
 (let ((?x15433 (* ?x15432 l_0_9_44)))
 (let ((?x15955 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x15429 (* 4.0 l_0_9_39)))
 (let ((?x15430 (* ?x15429 l_0_9_43)))
 (let ((?x15426 (* 4.0 l_0_9_38)))
 (let ((?x15427 (* ?x15426 l_0_9_42)))
 (let ((?x15423 (* 4.0 l_0_9_37)))
 (let ((?x15424 (* ?x15423 l_0_9_41)))
 (let ((?x15946 (* 8.0 l_0_9_36)))
 (let ((?x15949 (* ?x15946 l_0_9_43)))
 (let ((?x15947 (* ?x15946 l_0_9_39)))
 (let ((?x15941 (* 8.0 l_0_9_35)))
 (let ((?x15944 (* ?x15941 l_0_9_42)))
 (let ((?x15942 (* ?x15941 l_0_9_38)))
 (let ((?x15936 (* 8.0 l_0_9_34)))
 (let ((?x15939 (* ?x15936 l_0_9_41)))
 (let ((?x15937 (* ?x15936 l_0_9_37)))
 (let ((?x15417 (* (* 4.0 l_0_9_25) l_0_9_29)))
 (let ((?x15414 (* (* 4.0 l_0_9_24) l_0_9_28)))
 (let ((?x15411 (* (* 4.0 l_0_9_23) l_0_9_27)))
 (let ((?x15408 (* (* 4.0 l_0_9_22) l_0_9_26)))
 (let ((?x15927 (* 8.0 l_0_9_21)))
 (let ((?x15930 (* ?x15927 l_0_9_28)))
 (let ((?x15928 (* ?x15927 l_0_9_24)))
 (let ((?x9897 (* 8.0 l_0_9_20)))
 (let ((?x15925 (* ?x9897 l_0_9_27)))
 (let ((?x15923 (* ?x9897 l_0_9_23)))
 (let ((?x10013 (* 8.0 l_0_9_19)))
 (let ((?x10040 (* ?x10013 l_0_9_26)))
 (let ((?x10016 (* ?x10013 l_0_9_22)))
 (let ((?x15933 (+ (+ (+ (+ (+ (+ (+ ?x10016 ?x10040) ?x15923) ?x15925) ?x15928) ?x15930) ?x15408) ?x15411)))
 (let ((?x15948 (- (- (- (- (- (+ (+ ?x15933 ?x15414) ?x15417) ?x15937) ?x15939) ?x15942) ?x15944) ?x15947)))
 (let ((?x15958 (- (- (- (- (- (- (- ?x15948 ?x15949) ?x15424) ?x15427) ?x15430) ?x15955) ?x15433) ?x15581)))
 (let ((?x15969 (+ (- (- (- (- ?x15958 ?x15960) ?x15584) ?x15587) ?x15965) (* (* 2.0 l_0_9_64) l_0_9_71))))
 (let ((?x15975 (+ (+ ?x15969 (* (* 2.0 l_0_9_65) l_0_9_72)) (* (* 2.0 l_0_9_66) l_0_9_73))))
 (= ?x15975 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15946 (* 8.0 l_0_9_36)))
 (let ((?x15949 (* ?x15946 l_0_9_43)))
 (let ((?x15941 (* 8.0 l_0_9_35)))
 (let ((?x15944 (* ?x15941 l_0_9_42)))
 (let ((?x15936 (* 8.0 l_0_9_34)))
 (let ((?x15939 (* ?x15936 l_0_9_41)))
 (let ((?x9661 (* l_0_9_30 l_0_9_30)))
 (let ((?x9664 (* 2.0 ?x9661)))
 (let ((?x9655 (* l_0_9_29 l_0_9_29)))
 (let ((?x9658 (* 2.0 ?x9655)))
 (let ((?x9586 (* l_0_9_28 l_0_9_28)))
 (let ((?x15527 (* 2.0 ?x9586)))
 (let ((?x15523 (* l_0_9_27 l_0_9_27)))
 (let ((?x15524 (* 2.0 ?x15523)))
 (let ((?x15517 (* l_0_9_26 l_0_9_26)))
 (let ((?x15518 (* 2.0 ?x15517)))
 (let ((?x15927 (* 8.0 l_0_9_21)))
 (let ((?x15930 (* ?x15927 l_0_9_28)))
 (let ((?x9897 (* 8.0 l_0_9_20)))
 (let ((?x15925 (* ?x9897 l_0_9_27)))
 (let ((?x10013 (* 8.0 l_0_9_19)))
 (let ((?x10040 (* ?x10013 l_0_9_26)))
 (let ((?x15559 (* 2.0 l_0_9_13)))
 (let ((?x15560 (* ?x15559 l_0_9_6)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x15557 (* ?x14898 l_0_9_5)))
 (let ((?x16025 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x15557) ?x15560) ?x10040) ?x15925)))
 (let ((?x16032 (- (+ (+ (+ (+ (+ (+ ?x16025 ?x15930) ?x15518) ?x15524) ?x15527) ?x9658) ?x9664) ?x15939)))
 (let ((?x16040 (- (- (- (- ?x16032 ?x15944) ?x15949) (* (* 2.0 l_0_9_41) l_0_9_41)) (* (* 2.0 l_0_9_42) l_0_9_42))))
 (let ((?x16046 (- (- ?x16040 (* (* 2.0 l_0_9_43) l_0_9_43)) (* (* 2.0 l_0_9_44) l_0_9_44))))
 (= (- ?x16046 (* (* 2.0 l_0_9_45) l_0_9_45)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x16117 (* l_0_9_9 l_0_9_9)))
 (let ((?x16115 (* l_0_9_8 l_0_9_8)))
 (let ((?x16110 (* l_0_9_7 l_0_9_7)))
 (let ((?x15693 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x15690 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x15687 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x15684 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x15432 (* 4.0 l_0_9_40)))
 (let ((?x16095 (* ?x15432 l_0_9_40)))
 (let ((?x16093 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x15429 (* 4.0 l_0_9_39)))
 (let ((?x16090 (* ?x15429 l_0_9_39)))
 (let ((?x16088 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x15426 (* 4.0 l_0_9_38)))
 (let ((?x16085 (* ?x15426 l_0_9_38)))
 (let ((?x16083 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x15423 (* 4.0 l_0_9_37)))
 (let ((?x16080 (* ?x15423 l_0_9_37)))
 (let ((?x16078 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x16074 (* l_0_9_25 l_0_9_25)))
 (let ((?x16075 (* 4.0 ?x16074)))
 (let ((?x16072 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x16068 (* l_0_9_24 l_0_9_24)))
 (let ((?x16069 (* 4.0 ?x16068)))
 (let ((?x16066 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x16062 (* l_0_9_23 l_0_9_23)))
 (let ((?x16063 (* 4.0 ?x16062)))
 (let ((?x16060 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x16056 (* l_0_9_22 l_0_9_22)))
 (let ((?x16057 (* 4.0 ?x16056)))
 (let ((?x16058 (+ (+ (* (- l_0_9_10) l_0_9_10) (* (* 8.0 l_0_9_22) l_0_9_26)) ?x16057)))
 (let ((?x16079 (- (+ (+ (+ (+ (+ (+ ?x16058 ?x16060) ?x16063) ?x16066) ?x16069) ?x16072) ?x16075) ?x16078)))
 (let ((?x16096 (- (- (- (- (- (- (- ?x16079 ?x16080) ?x16083) ?x16085) ?x16088) ?x16090) ?x16093) ?x16095)))
 (let ((?x16103 (+ (- (- (- (- ?x16096 ?x15684) ?x15687) ?x15690) ?x15693) (* (* 2.0 l_0_9_67) l_0_9_71))))
 (let ((?x16109 (+ (+ ?x16103 (* (* 2.0 l_0_9_68) l_0_9_72)) (* (* 2.0 l_0_9_69) l_0_9_73))))
 (let ((?x16118 (- (- (+ (- ?x16109 ?x16110) (* (* 2.0 l_0_9_70) l_0_9_74)) ?x16115) ?x16117)))
 (= ?x16118 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16226 (* l_0_9_75 l_0_9_75)))
 (let ((?x16224 (* l_0_9_74 l_0_9_74)))
 (let ((?x16222 (* l_0_9_73 l_0_9_73)))
 (let ((?x16220 (* l_0_9_72 l_0_9_72)))
 (let ((?x16218 (* l_0_9_71 l_0_9_71)))
 (let ((?x15833 (* l_0_9_60 l_0_9_60)))
 (let ((?x15830 (* l_0_9_59 l_0_9_59)))
 (let ((?x15827 (* l_0_9_58 l_0_9_58)))
 (let ((?x15824 (* l_0_9_57 l_0_9_57)))
 (let ((?x15821 (* l_0_9_56 l_0_9_56)))
 (let ((?x16211 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x16208 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x16205 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x16202 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x16199 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x16093 (* (* 8.0 l_0_9_40) l_0_9_44)))
 (let ((?x16088 (* (* 8.0 l_0_9_39) l_0_9_43)))
 (let ((?x16083 (* (* 8.0 l_0_9_38) l_0_9_42)))
 (let ((?x16078 (* (* 8.0 l_0_9_37) l_0_9_41)))
 (let ((?x9661 (* l_0_9_30 l_0_9_30)))
 (let ((?x16192 (* 4.0 ?x9661)))
 (let ((?x9655 (* l_0_9_29 l_0_9_29)))
 (let ((?x16190 (* 4.0 ?x9655)))
 (let ((?x9586 (* l_0_9_28 l_0_9_28)))
 (let ((?x16188 (* 4.0 ?x9586)))
 (let ((?x15523 (* l_0_9_27 l_0_9_27)))
 (let ((?x16186 (* 4.0 ?x15523)))
 (let ((?x15517 (* l_0_9_26 l_0_9_26)))
 (let ((?x16184 (* 4.0 ?x15517)))
 (let ((?x16072 (* (* 8.0 l_0_9_25) l_0_9_29)))
 (let ((?x16066 (* (* 8.0 l_0_9_24) l_0_9_28)))
 (let ((?x16060 (* (* 8.0 l_0_9_23) l_0_9_27)))
 (let ((?x16054 (* (* 8.0 l_0_9_22) l_0_9_26)))
 (let ((?x15559 (* 2.0 l_0_9_13)))
 (let ((?x15661 (* ?x15559 l_0_9_9)))
 (let ((?x14898 (* 2.0 l_0_9_12)))
 (let ((?x15659 (* ?x14898 l_0_9_8)))
 (let ((?x14895 (* 2.0 l_0_9_11)))
 (let ((?x15645 (* ?x14895 l_0_9_7)))
 (let ((?x16180 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x15645) ?x15659) ?x15661) ?x16054)))
 (let ((?x16191 (+ (+ (+ (+ (+ (+ (+ ?x16180 ?x16060) ?x16066) ?x16072) ?x16184) ?x16186) ?x16188) ?x16190)))
 (let ((?x16203 (- (- (- (- (- (- (+ ?x16191 ?x16192) ?x16078) ?x16083) ?x16088) ?x16093) ?x16199) ?x16202)))
 (let ((?x16216 (- (- (- (- (- (- (- ?x16203 ?x16205) ?x16208) ?x16211) ?x15821) ?x15824) ?x15827) ?x15830)))
 (= (+ (+ (+ (+ (+ (- ?x16216 ?x15833) ?x16218) ?x16220) ?x16222) ?x16224) ?x16226) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16211 (* (* 4.0 l_0_9_45) l_0_9_45)))
 (let ((?x16208 (* (* 4.0 l_0_9_44) l_0_9_44)))
 (let ((?x16205 (* (* 4.0 l_0_9_43) l_0_9_43)))
 (let ((?x16202 (* (* 4.0 l_0_9_42) l_0_9_42)))
 (let ((?x16199 (* (* 4.0 l_0_9_41) l_0_9_41)))
 (let ((?x9661 (* l_0_9_30 l_0_9_30)))
 (let ((?x16192 (* 4.0 ?x9661)))
 (let ((?x9655 (* l_0_9_29 l_0_9_29)))
 (let ((?x16190 (* 4.0 ?x9655)))
 (let ((?x9586 (* l_0_9_28 l_0_9_28)))
 (let ((?x16188 (* 4.0 ?x9586)))
 (let ((?x15523 (* l_0_9_27 l_0_9_27)))
 (let ((?x16186 (* 4.0 ?x15523)))
 (let ((?x15517 (* l_0_9_26 l_0_9_26)))
 (let ((?x16184 (* 4.0 ?x15517)))
 (let ((?x15814 (* l_0_9_15 l_0_9_15)))
 (let ((?x15811 (* l_0_9_14 l_0_9_14)))
 (let ((?x15808 (* l_0_9_13 l_0_9_13)))
 (let ((?x13120 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x15808) ?x15811)))
 (let ((?x12966 (- (+ (+ (+ (+ (+ (- ?x13120 ?x15814) ?x16184) ?x16186) ?x16188) ?x16190) ?x16192) ?x16199)))
 (= (- (- (- (- ?x12966 ?x16202) ?x16205) ?x16208) ?x16211) 0.0))))))))))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x13154 (* ?x15256 l_0_9_49)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x15140 (* ?x14914 l_0_9_35)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x15137 (* ?x14911 l_0_9_34)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x15211 (* ?x15210 l_0_9_32)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x15134 (* ?x15133 l_0_9_20)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x15130 (* ?x15129 l_0_9_19)))
 (let ((?x15205 (* 4.0 l_0_9_16)))
 (let ((?x15206 (* ?x15205 l_0_9_17)))
 (let ((?x3895 (- (* (* 2.0 l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_106) l_0_9_109))))
 (let ((?x7427 (+ (+ (+ (- (- (- (+ ?x3895 ?x15206) ?x15130) ?x15134) ?x15211) ?x15137) ?x15140) ?x13154)))
 (let ((?x10152 (- (- ?x7427 (* (* 2.0 l_0_9_76) l_0_9_79)) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= ?x10152 0.0)))))))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x16252 (* ?x15256 l_0_9_52)))
 (let ((?x15257 (* ?x15256 l_0_9_47)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x16249 (* ?x14914 l_0_9_38)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x16247 (* ?x14911 l_0_9_37)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15323 (* ?x15322 l_0_9_32)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x16244 (* ?x15133 l_0_9_23)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x13263 (* ?x15129 l_0_9_22)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15316 (* ?x15315 l_0_9_17)))
 (let ((?x7570 (- (* (* 2.0 l_0_9_1) l_0_9_7) (* (* 2.0 l_0_9_106) l_0_9_112))))
 (let ((?x16251 (- (+ (+ (- (- (- (+ ?x7570 ?x15316) ?x13263) ?x16244) ?x15323) ?x16247) ?x16249) ?x15257)))
 (let ((?x16257 (- (+ (+ ?x16251 ?x16252) (* (* 2.0 l_0_9_61) l_0_9_62)) (* (* 2.0 l_0_9_76) l_0_9_82))))
 (= (- ?x16257 (* (* 2.0 l_0_9_91) l_0_9_97)) 0.0))))))))))))))))))))
(assert
 (let ((?x15965 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x15586 (* 2.0 l_0_9_51)))
 (let ((?x16296 (* ?x15586 l_0_9_54)))
 (let ((?x15583 (* 2.0 l_0_9_50)))
 (let ((?x16294 (* ?x15583 l_0_9_53)))
 (let ((?x15960 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x15580 (* 2.0 l_0_9_49)))
 (let ((?x16291 (* ?x15580 l_0_9_52)))
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x15074 (* ?x14920 l_0_9_50)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x15072 (* ?x14917 l_0_9_49)))
 (let ((?x15955 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x14914 (* 4.0 l_0_9_33)))
 (let ((?x16249 (* ?x14914 l_0_9_38)))
 (let ((?x15576 (* 8.0 l_0_9_33)))
 (let ((?x15577 (* ?x15576 l_0_9_35)))
 (let ((?x14911 (* 4.0 l_0_9_32)))
 (let ((?x16247 (* ?x14911 l_0_9_37)))
 (let ((?x15572 (* 8.0 l_0_9_32)))
 (let ((?x15573 (* ?x15572 l_0_9_34)))
 (let ((?x15133 (* 4.0 l_0_9_18)))
 (let ((?x16244 (* ?x15133 l_0_9_23)))
 (let ((?x15566 (* 8.0 l_0_9_18)))
 (let ((?x15567 (* ?x15566 l_0_9_20)))
 (let ((?x15129 (* 4.0 l_0_9_17)))
 (let ((?x13263 (* ?x15129 l_0_9_22)))
 (let ((?x15562 (* 8.0 l_0_9_17)))
 (let ((?x15563 (* ?x15562 l_0_9_19)))
 (let ((?x16277 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x16282 (+ (+ (+ (- ?x16277 (* (* 2.0 l_0_9_111) l_0_9_114)) ?x15563) ?x13263) ?x15567)))
 (let ((?x16289 (- (+ (- (- (- (- (+ ?x16282 ?x16244) ?x15573) ?x16247) ?x15577) ?x16249) ?x15955) ?x15072)))
 (let ((?x16300 (+ (+ (+ (+ (+ (+ (- ?x16289 ?x15074) ?x16291) ?x15960) ?x16294) ?x16296) ?x15965) (* (* 2.0 l_0_9_62) l_0_9_64))))
 (let ((?x16304 (- (+ ?x16300 (* (* 2.0 l_0_9_63) l_0_9_65)) (* (* 2.0 l_0_9_79) l_0_9_82))))
 (let ((?x16308 (- (- ?x16304 (* (* 2.0 l_0_9_80) l_0_9_83)) (* (* 2.0 l_0_9_81) l_0_9_84))))
 (let ((?x16314 (- (- ?x16308 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x16314 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x16380 (* l_0_9_99 l_0_9_99)))
 (let ((?x16378 (* l_0_9_98 l_0_9_98)))
 (let ((?x16376 (* l_0_9_97 l_0_9_97)))
 (let ((?x16372 (* l_0_9_85 l_0_9_85)))
 (let ((?x16370 (* l_0_9_84 l_0_9_84)))
 (let ((?x16368 (* l_0_9_83 l_0_9_83)))
 (let ((?x16366 (* l_0_9_82 l_0_9_82)))
 (let ((?x14920 (* 2.0 l_0_9_48)))
 (let ((?x15018 (* ?x14920 l_0_9_53)))
 (let ((?x14917 (* 2.0 l_0_9_47)))
 (let ((?x15015 (* ?x14917 l_0_9_52)))
 (let ((?x15576 (* 8.0 l_0_9_33)))
 (let ((?x15677 (* ?x15576 l_0_9_38)))
 (let ((?x15572 (* 8.0 l_0_9_32)))
 (let ((?x15673 (* ?x15572 l_0_9_37)))
 (let ((?x15566 (* 8.0 l_0_9_18)))
 (let ((?x15667 (* ?x15566 l_0_9_23)))
 (let ((?x15562 (* 8.0 l_0_9_17)))
 (let ((?x15663 (* ?x15562 l_0_9_22)))
 (let ((?x16338 (* l_0_9_115 l_0_9_115)))
 (let ((?x16336 (* l_0_9_114 l_0_9_114)))
 (let ((?x16334 (* l_0_9_113 l_0_9_113)))
 (let ((?x16332 (* l_0_9_112 l_0_9_112)))
 (let ((?x16333 (- (- (* 1.0 (* l_0_9_10 l_0_9_10)) (* l_0_9_100 l_0_9_100)) ?x16332)))
 (let ((?x16343 (- (- (+ (+ (- (- (- ?x16333 ?x16334) ?x16336) ?x16338) ?x15663) ?x15667) ?x15673) ?x15677)))
 (let ((?x16351 (+ (+ (- (- ?x16343 ?x15015) ?x15018) (* 1.0 (* l_0_9_52 l_0_9_52))) (* 1.0 (* l_0_9_53 l_0_9_53)))))
 (let ((?x16357 (+ (+ ?x16351 (* 1.0 (* l_0_9_54 l_0_9_54))) (* 1.0 (* l_0_9_55 l_0_9_55)))))
 (let ((?x16361 (+ (+ ?x16357 (* (* 2.0 l_0_9_62) l_0_9_67)) (* (* 2.0 l_0_9_63) l_0_9_68))))
 (let ((?x16365 (+ (+ ?x16361 (* 1.0 (* l_0_9_7 l_0_9_7))) (* 1.0 (* l_0_9_8 l_0_9_8)))))
 (let ((?x16375 (+ (- (- (- (- ?x16365 ?x16366) ?x16368) ?x16370) ?x16372) (* 1.0 (* l_0_9_9 l_0_9_9)))))
 (= (- (- (- ?x16375 ?x16376) ?x16378) ?x16380) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x2397 (* l_0_9_36 l_0_9_36)))
 (let ((?x3158 (* l_0_9_35 l_0_9_35)))
 (let ((?x10021 (* l_0_9_34 l_0_9_34)))
 (let ((?x15302 (* l_0_9_31 l_0_9_31)))
 (let ((?x15898 (* l_0_9_21 l_0_9_21)))
 (let ((?x15894 (* l_0_9_20 l_0_9_20)))
 (let ((?x16413 (+ (+ (+ (* (- l_0_9_16) l_0_9_16) (* l_0_9_19 l_0_9_19)) ?x15894) ?x15898)))
 (= (- (- (- (+ ?x16413 ?x15302) ?x10021) ?x3158) ?x2397) 0.0)))))))))
(assert
 (let ((?x2397 (* l_0_9_36 l_0_9_36)))
 (let ((?x16455 (* 2.0 ?x2397)))
 (let ((?x3158 (* l_0_9_35 l_0_9_35)))
 (let ((?x16453 (* 2.0 ?x3158)))
 (let ((?x10021 (* l_0_9_34 l_0_9_34)))
 (let ((?x16451 (* 2.0 ?x10021)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x16449 (* ?x15210 l_0_9_34)))
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16447 (* ?x16446 l_0_9_32)))
 (let ((?x16436 (+ (* (* (- 2.0) l_0_9_16) l_0_9_17) (* (* 4.0 l_0_9_16) l_0_9_19))))
 (let ((?x16442 (- (- ?x16436 (* (* 2.0 l_0_9_19) l_0_9_19)) (* (* 2.0 l_0_9_20) l_0_9_20))))
 (let ((?x16452 (+ (- (+ (- ?x16442 (* (* 2.0 l_0_9_21) l_0_9_21)) ?x16447) ?x16449) ?x16451)))
 (= (+ (+ ?x16452 ?x16453) ?x16455) 0.0)))))))))))))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16482 (* ?x16446 l_0_9_34)))
 (= (+ (* (* (- 2.0) l_0_9_16) l_0_9_19) ?x16482) 0.0))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x7898 (* ?x16446 l_0_9_37)))
 (= (+ (* (* (- 2.0) l_0_9_16) l_0_9_22) ?x7898) 0.0))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16493 (* ?x16446 l_0_9_41)))
 (= (+ (* (* (- 2.0) l_0_9_16) l_0_9_26) ?x16493) 0.0))))
(assert
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x16508 (* ?x15069 l_0_9_35)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x16506 (* ?x15066 l_0_9_34)))
 (let ((?x15898 (* l_0_9_21 l_0_9_21)))
 (let ((?x13719 (* 2.0 ?x15898)))
 (let ((?x15894 (* l_0_9_20 l_0_9_20)))
 (let ((?x16466 (* 2.0 ?x15894)))
 (let ((?x15890 (* l_0_9_19 l_0_9_19)))
 (let ((?x16461 (* 2.0 ?x15890)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x16497 (* ?x15251 l_0_9_20)))
 (let ((?x16505 (+ (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x16497) ?x16461) ?x16466) ?x13719)))
 (let ((?x16515 (- (- (+ (+ ?x16505 ?x16506) ?x16508) (* (* 2.0 l_0_9_34) l_0_9_34)) (* (* 2.0 l_0_9_35) l_0_9_35))))
 (= (- ?x16515 (* (* 2.0 l_0_9_36) l_0_9_36)) 0.0))))))))))))))))
(assert
 (let ((?x16568 (* l_0_9_66 l_0_9_66)))
 (let ((?x16566 (* l_0_9_65 l_0_9_65)))
 (let ((?x16564 (* l_0_9_64 l_0_9_64)))
 (let ((?x15155 (* l_0_9_51 l_0_9_51)))
 (let ((?x15152 (* l_0_9_50 l_0_9_50)))
 (let ((?x15146 (* l_0_9_49 l_0_9_49)))
 (let ((?x15373 (* 4.0 l_0_9_36)))
 (let ((?x15910 (* ?x15373 l_0_9_36)))
 (let ((?x16558 (* ?x15373 l_0_9_39)))
 (let ((?x15370 (* 4.0 l_0_9_35)))
 (let ((?x15907 (* ?x15370 l_0_9_35)))
 (let ((?x16555 (* ?x15370 l_0_9_38)))
 (let ((?x15367 (* 4.0 l_0_9_34)))
 (let ((?x15904 (* ?x15367 l_0_9_34)))
 (let ((?x16552 (* ?x15367 l_0_9_37)))
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x16550 (* ?x15069 l_0_9_38)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x16548 (* ?x15066 l_0_9_37)))
 (let ((?x15898 (* l_0_9_21 l_0_9_21)))
 (let ((?x15899 (* 4.0 ?x15898)))
 (let ((?x15361 (* 4.0 l_0_9_21)))
 (let ((?x16545 (* ?x15361 l_0_9_24)))
 (let ((?x15894 (* l_0_9_20 l_0_9_20)))
 (let ((?x15895 (* 4.0 ?x15894)))
 (let ((?x15358 (* 4.0 l_0_9_20)))
 (let ((?x16542 (* ?x15358 l_0_9_23)))
 (let ((?x15890 (* l_0_9_19 l_0_9_19)))
 (let ((?x15891 (* 4.0 ?x15890)))
 (let ((?x15355 (* 4.0 l_0_9_19)))
 (let ((?x16539 (* ?x15355 l_0_9_22)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x16537 (* ?x15251 l_0_9_23)))
 (let ((?x16543 (+ (+ (+ (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x16537) ?x16539) ?x15891) ?x16542)))
 (let ((?x16554 (- (- (+ (+ (+ (+ (+ ?x16543 ?x15895) ?x16545) ?x15899) ?x16548) ?x16550) ?x16552) ?x15904)))
 (let ((?x16563 (- (- (- (- (- (- (- ?x16554 ?x16555) ?x15907) ?x16558) ?x15910) ?x15146) ?x15152) ?x15155)))
 (= (+ (+ (+ ?x16563 ?x16564) ?x16566) ?x16568) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2397 (* l_0_9_36 l_0_9_36)))
 (let ((?x3158 (* l_0_9_35 l_0_9_35)))
 (let ((?x10021 (* l_0_9_34 l_0_9_34)))
 (let ((?x15898 (* l_0_9_21 l_0_9_21)))
 (let ((?x16603 (+ (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x15898) ?x10021)))
 (= (+ (+ ?x16603 ?x3158) ?x2397) 0.0)))))))
(assert
 (let ((?x16516 (* 2.0 l_0_9_36)))
 (let ((?x16615 (* ?x16516 l_0_9_39)))
 (let ((?x16513 (* 2.0 l_0_9_35)))
 (let ((?x16613 (* ?x16513 l_0_9_38)))
 (let ((?x16510 (* 2.0 l_0_9_34)))
 (let ((?x16611 (* ?x16510 l_0_9_37)))
 (let ((?x16443 (* 2.0 l_0_9_21)))
 (let ((?x16609 (* ?x16443 l_0_9_24)))
 (let ((?x16440 (* 2.0 l_0_9_20)))
 (let ((?x13755 (* ?x16440 l_0_9_23)))
 (let ((?x16614 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x13755) ?x16609) ?x16611) ?x16613)))
 (= (+ ?x16614 ?x16615) 0.0)))))))))))))
(assert
 (let ((?x16516 (* 2.0 l_0_9_36)))
 (let ((?x16635 (* ?x16516 l_0_9_43)))
 (let ((?x16513 (* 2.0 l_0_9_35)))
 (let ((?x16633 (* ?x16513 l_0_9_42)))
 (let ((?x16510 (* 2.0 l_0_9_34)))
 (let ((?x16631 (* ?x16510 l_0_9_41)))
 (let ((?x16443 (* 2.0 l_0_9_21)))
 (let ((?x16629 (* ?x16443 l_0_9_28)))
 (let ((?x16440 (* 2.0 l_0_9_20)))
 (let ((?x16627 (* ?x16440 l_0_9_27)))
 (let ((?x16634 (+ (+ (- (- (* (* (- 2.0) l_0_9_19) l_0_9_26) ?x16627) ?x16629) ?x16631) ?x16633)))
 (= (+ ?x16634 ?x16635) 0.0)))))))))))))
(assert
 (let ((?x7234 (* l_0_9_40 l_0_9_40)))
 (let ((?x16147 (* l_0_9_39 l_0_9_39)))
 (let ((?x16139 (* l_0_9_38 l_0_9_38)))
 (let ((?x16133 (* l_0_9_37 l_0_9_37)))
 (let ((?x16074 (* l_0_9_25 l_0_9_25)))
 (let ((?x16068 (* l_0_9_24 l_0_9_24)))
 (let ((?x16655 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x16068) ?x16074)))
 (= (+ (+ (+ (+ ?x16655 ?x16133) ?x16139) ?x16147) ?x7234) 0.0)))))))))
(assert
 (let ((?x16690 (* 2.0 l_0_9_40)))
 (let ((?x16691 (* ?x16690 l_0_9_44)))
 (let ((?x16687 (* 2.0 l_0_9_39)))
 (let ((?x16688 (* ?x16687 l_0_9_43)))
 (let ((?x16684 (* 2.0 l_0_9_38)))
 (let ((?x16685 (* ?x16684 l_0_9_42)))
 (let ((?x16681 (* 2.0 l_0_9_37)))
 (let ((?x16682 (* ?x16681 l_0_9_41)))
 (let ((?x16678 (* 2.0 l_0_9_25)))
 (let ((?x16679 (* ?x16678 l_0_9_29)))
 (let ((?x16675 (* 2.0 l_0_9_24)))
 (let ((?x16676 (* ?x16675 l_0_9_28)))
 (let ((?x16672 (* 2.0 l_0_9_23)))
 (let ((?x16673 (* ?x16672 l_0_9_27)))
 (let ((?x16683 (+ (- (- (- (* (* (- 2.0) l_0_9_22) l_0_9_26) ?x16673) ?x16676) ?x16679) ?x16682)))
 (= (+ (+ (+ ?x16683 ?x16685) ?x16688) ?x16691) 0.0)))))))))))))))))
(assert
 (let ((?x15512 (* l_0_9_45 l_0_9_45)))
 (let ((?x15509 (* l_0_9_44 l_0_9_44)))
 (let ((?x15506 (* l_0_9_43 l_0_9_43)))
 (let ((?x15503 (* l_0_9_42 l_0_9_42)))
 (let ((?x15500 (* l_0_9_41 l_0_9_41)))
 (let ((?x9661 (* l_0_9_30 l_0_9_30)))
 (let ((?x9655 (* l_0_9_29 l_0_9_29)))
 (let ((?x9586 (* l_0_9_28 l_0_9_28)))
 (let ((?x16714 (- (- (- (* (- l_0_9_26) l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x9586) ?x9655)))
 (= (+ (+ (+ (+ (+ (- ?x16714 ?x9661) ?x15500) ?x15503) ?x15506) ?x15509) ?x15512) 0.0)))))))))))
(assert
 (= (- (* l_0_9_16 l_0_9_16) (* l_0_9_31 l_0_9_31)) 0.0))
(assert
 (let ((?x15302 (* l_0_9_31 l_0_9_31)))
 (let ((?x16748 (* 2.0 ?x15302)))
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16447 (* ?x16446 l_0_9_32)))
 (let ((?x16746 (- (* (* 2.0 l_0_9_16) l_0_9_17) (* (* 2.0 l_0_9_16) l_0_9_16))))
 (= (+ (- ?x16746 ?x16447) ?x16748) 0.0)))))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16482 (* ?x16446 l_0_9_34)))
 (= (- (* (* 2.0 l_0_9_16) l_0_9_19) ?x16482) 0.0))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x7898 (* ?x16446 l_0_9_37)))
 (= (- (* (* 2.0 l_0_9_16) l_0_9_22) ?x7898) 0.0))))
(assert
 (let ((?x16446 (* 2.0 l_0_9_31)))
 (let ((?x16493 (* ?x16446 l_0_9_41)))
 (= (- (* (* 2.0 l_0_9_16) l_0_9_26) ?x16493) 0.0))))
(assert
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x16508 (* ?x15069 l_0_9_35)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x16506 (* ?x15066 l_0_9_34)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x16449 (* ?x15210 l_0_9_34)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x16497 (* ?x15251 l_0_9_20)))
 (let ((?x6446 (* l_0_9_16 l_0_9_16)))
 (let ((?x16752 (* 2.0 ?x6446)))
 (let ((?x16764 (+ (+ (* (* (- 4.0) l_0_9_16) l_0_9_19) ?x16752) (* (* 2.0 l_0_9_17) l_0_9_19))))
 (let ((?x16769 (- (- (+ (+ ?x16764 ?x16497) ?x16449) (* (* 2.0 l_0_9_31) l_0_9_31)) ?x16506)))
 (= (- ?x16769 ?x16508) 0.0))))))))))))))
(assert
 (let ((?x16786 (* l_0_9_61 l_0_9_61)))
 (let ((?x15215 (* l_0_9_46 l_0_9_46)))
 (let ((?x15069 (* 2.0 l_0_9_33)))
 (let ((?x16550 (* ?x15069 l_0_9_38)))
 (let ((?x15066 (* 2.0 l_0_9_32)))
 (let ((?x16548 (* ?x15066 l_0_9_37)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x15284 (* ?x15210 l_0_9_31)))
 (let ((?x16780 (* ?x15210 l_0_9_37)))
 (let ((?x15251 (* 2.0 l_0_9_18)))
 (let ((?x16537 (* ?x15251 l_0_9_23)))
 (let ((?x6446 (* l_0_9_16 l_0_9_16)))
 (let ((?x2292 (* 4.0 ?x6446)))
 (let ((?x16778 (+ (+ (* (* (- 4.0) l_0_9_16) l_0_9_22) ?x2292) (* (* 2.0 l_0_9_17) l_0_9_22))))
 (let ((?x16787 (+ (- (- (- (- (+ (+ ?x16778 ?x16537) ?x16780) ?x15284) ?x16548) ?x16550) ?x15215) ?x16786)))
 (= ?x16787 0.0)))))))))))))))))
(assert
 (let ((?x16516 (* 2.0 l_0_9_36)))
 (let ((?x16615 (* ?x16516 l_0_9_39)))
 (let ((?x16513 (* 2.0 l_0_9_35)))
 (let ((?x16613 (* ?x16513 l_0_9_38)))
 (let ((?x16510 (* 2.0 l_0_9_34)))
 (let ((?x16611 (* ?x16510 l_0_9_37)))
 (let ((?x16443 (* 2.0 l_0_9_21)))
 (let ((?x16609 (* ?x16443 l_0_9_24)))
 (let ((?x16440 (* 2.0 l_0_9_20)))
 (let ((?x13755 (* ?x16440 l_0_9_23)))
 (let ((?x16800 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_22) ?x13755) ?x16609) ?x16611) ?x16613)))
 (= (- ?x16800 ?x16615) 0.0)))))))))))))
(assert
 (let ((?x16516 (* 2.0 l_0_9_36)))
 (let ((?x16635 (* ?x16516 l_0_9_43)))
 (let ((?x16513 (* 2.0 l_0_9_35)))
 (let ((?x16633 (* ?x16513 l_0_9_42)))
 (let ((?x16510 (* 2.0 l_0_9_34)))
 (let ((?x16631 (* ?x16510 l_0_9_41)))
 (let ((?x16443 (* 2.0 l_0_9_21)))
 (let ((?x16629 (* ?x16443 l_0_9_28)))
 (let ((?x16440 (* 2.0 l_0_9_20)))
 (let ((?x16627 (* ?x16440 l_0_9_27)))
 (let ((?x16809 (- (- (+ (+ (* (* 2.0 l_0_9_19) l_0_9_26) ?x16627) ?x16629) ?x16631) ?x16633)))
 (= (- ?x16809 ?x16635) 0.0)))))))))))))
(assert
 (let ((?x7234 (* l_0_9_40 l_0_9_40)))
 (let ((?x16147 (* l_0_9_39 l_0_9_39)))
 (let ((?x16139 (* l_0_9_38 l_0_9_38)))
 (let ((?x16133 (* l_0_9_37 l_0_9_37)))
 (let ((?x16074 (* l_0_9_25 l_0_9_25)))
 (let ((?x16068 (* l_0_9_24 l_0_9_24)))
 (let ((?x10847 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x16068) ?x16074)))
 (= (- (- (- (- ?x10847 ?x16133) ?x16139) ?x16147) ?x7234) 0.0)))))))))
(assert
 (let ((?x16690 (* 2.0 l_0_9_40)))
 (let ((?x16691 (* ?x16690 l_0_9_44)))
 (let ((?x16687 (* 2.0 l_0_9_39)))
 (let ((?x16688 (* ?x16687 l_0_9_43)))
 (let ((?x16684 (* 2.0 l_0_9_38)))
 (let ((?x16685 (* ?x16684 l_0_9_42)))
 (let ((?x16681 (* 2.0 l_0_9_37)))
 (let ((?x16682 (* ?x16681 l_0_9_41)))
 (let ((?x16678 (* 2.0 l_0_9_25)))
 (let ((?x16679 (* ?x16678 l_0_9_29)))
 (let ((?x16675 (* 2.0 l_0_9_24)))
 (let ((?x16676 (* ?x16675 l_0_9_28)))
 (let ((?x16672 (* 2.0 l_0_9_23)))
 (let ((?x16673 (* ?x16672 l_0_9_27)))
 (let ((?x16838 (- (+ (+ (+ (* (* 2.0 l_0_9_22) l_0_9_26) ?x16673) ?x16676) ?x16679) ?x16682)))
 (= (- (- (- ?x16838 ?x16685) ?x16688) ?x16691) 0.0)))))))))))))))))
(assert
 (let ((?x15512 (* l_0_9_45 l_0_9_45)))
 (let ((?x15509 (* l_0_9_44 l_0_9_44)))
 (let ((?x15506 (* l_0_9_43 l_0_9_43)))
 (let ((?x15503 (* l_0_9_42 l_0_9_42)))
 (let ((?x15500 (* l_0_9_41 l_0_9_41)))
 (let ((?x9661 (* l_0_9_30 l_0_9_30)))
 (let ((?x9655 (* l_0_9_29 l_0_9_29)))
 (let ((?x9586 (* l_0_9_28 l_0_9_28)))
 (let ((?x16847 (+ (+ (+ (* l_0_9_26 l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x9586) ?x9655)))
 (= (- (- (- (- (- (+ ?x16847 ?x9661) ?x15500) ?x15503) ?x15506) ?x15509) ?x15512) 0.0)))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x13154 (* ?x15256 l_0_9_49)))
 (let ((?x15373 (* 4.0 l_0_9_36)))
 (let ((?x16558 (* ?x15373 l_0_9_39)))
 (let ((?x15370 (* 4.0 l_0_9_35)))
 (let ((?x16555 (* ?x15370 l_0_9_38)))
 (let ((?x15367 (* 4.0 l_0_9_34)))
 (let ((?x16552 (* ?x15367 l_0_9_37)))
 (let ((?x15210 (* 4.0 l_0_9_31)))
 (let ((?x16780 (* ?x15210 l_0_9_37)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15364 (* ?x15322 l_0_9_34)))
 (let ((?x15361 (* 4.0 l_0_9_21)))
 (let ((?x16545 (* ?x15361 l_0_9_24)))
 (let ((?x15358 (* 4.0 l_0_9_20)))
 (let ((?x16542 (* ?x15358 l_0_9_23)))
 (let ((?x15355 (* 4.0 l_0_9_19)))
 (let ((?x16539 (* ?x15355 l_0_9_22)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15352 (* ?x15315 l_0_9_19)))
 (let ((?x16858 (- (- (- (+ ?x15352 (* (* 4.0 l_0_9_16) l_0_9_22)) ?x16539) ?x16542) ?x16545)))
 (let ((?x16866 (+ (- (+ (+ (+ (- (- ?x16858 ?x15364) ?x16780) ?x16552) ?x16555) ?x16558) ?x13154) (* (* 2.0 l_0_9_61) l_0_9_64))))
 (= ?x16866 0.0))))))))))))))))))))))))
(assert
 (let ((?x15586 (* 2.0 l_0_9_51)))
 (let ((?x16296 (* ?x15586 l_0_9_54)))
 (let ((?x15583 (* 2.0 l_0_9_50)))
 (let ((?x16294 (* ?x15583 l_0_9_53)))
 (let ((?x15580 (* 2.0 l_0_9_49)))
 (let ((?x16291 (* ?x15580 l_0_9_52)))
 (let ((?x15946 (* 8.0 l_0_9_36)))
 (let ((?x15947 (* ?x15946 l_0_9_39)))
 (let ((?x15941 (* 8.0 l_0_9_35)))
 (let ((?x15942 (* ?x15941 l_0_9_38)))
 (let ((?x15936 (* 8.0 l_0_9_34)))
 (let ((?x15937 (* ?x15936 l_0_9_37)))
 (let ((?x16074 (* l_0_9_25 l_0_9_25)))
 (let ((?x16884 (* 2.0 ?x16074)))
 (let ((?x16068 (* l_0_9_24 l_0_9_24)))
 (let ((?x16882 (* 2.0 ?x16068)))
 (let ((?x16062 (* l_0_9_23 l_0_9_23)))
 (let ((?x16880 (* 2.0 ?x16062)))
 (let ((?x16056 (* l_0_9_22 l_0_9_22)))
 (let ((?x16878 (* 2.0 ?x16056)))
 (let ((?x15927 (* 8.0 l_0_9_21)))
 (let ((?x15928 (* ?x15927 l_0_9_24)))
 (let ((?x9897 (* 8.0 l_0_9_20)))
 (let ((?x15923 (* ?x9897 l_0_9_23)))
 (let ((?x10013 (* 8.0 l_0_9_19)))
 (let ((?x10016 (* ?x10013 l_0_9_22)))
 (let ((?x16886 (- (+ (+ (+ (+ (+ (+ ?x10016 ?x15923) ?x15928) ?x16878) ?x16880) ?x16882) ?x16884) ?x15937)))
 (let ((?x16892 (- (- (- (- ?x16886 ?x15942) ?x15947) (* (* 2.0 l_0_9_37) l_0_9_37)) (* (* 2.0 l_0_9_38) l_0_9_38))))
 (let ((?x16896 (- (- ?x16892 (* (* 2.0 l_0_9_39) l_0_9_39)) (* (* 2.0 l_0_9_40) l_0_9_40))))
 (let ((?x16901 (+ (- (- (- ?x16896 ?x16291) ?x16294) ?x16296) (* (* 2.0 l_0_9_64) l_0_9_67))))
 (let ((?x16905 (+ (+ ?x16901 (* (* 2.0 l_0_9_65) l_0_9_68)) (* (* 2.0 l_0_9_66) l_0_9_69))))
 (= ?x16905 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15256 (* 2.0 l_0_9_46)))
 (let ((?x16252 (* ?x15256 l_0_9_52)))
 (let ((?x7234 (* l_0_9_40 l_0_9_40)))
 (let ((?x8132 (* 2.0 ?x7234)))
 (let ((?x16147 (* l_0_9_39 l_0_9_39)))
 (let ((?x14016 (* 2.0 ?x16147)))
 (let ((?x16139 (* l_0_9_38 l_0_9_38)))
 (let ((?x4917 (* 2.0 ?x16139)))
 (let ((?x16133 (* l_0_9_37 l_0_9_37)))
 (let ((?x8176 (* 2.0 ?x16133)))
 (let ((?x15322 (* 8.0 l_0_9_31)))
 (let ((?x15419 (* ?x15322 l_0_9_37)))
 (let ((?x15315 (* 8.0 l_0_9_16)))
 (let ((?x15403 (* ?x15315 l_0_9_22)))
 (let ((?x8253 (- (- ?x15403 (* (* 2.0 l_0_9_22) l_0_9_22)) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x16927 (- (- ?x8253 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x16935 (+ (- (+ (+ (+ (+ (- ?x16927 ?x15419) ?x8176) ?x4917) ?x14016) ?x8132) ?x16252) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (= ?x16935 0.0)))))))))))))))))))
(assert
 (let ((?x16945 (* l_0_9_70 l_0_9_70)))
 (let ((?x16943 (* l_0_9_69 l_0_9_69)))
 (let ((?x16941 (* l_0_9_68 l_0_9_68)))
 (let ((?x5094 (* l_0_9_67 l_0_9_67)))
 (let ((?x16355 (* l_0_9_55 l_0_9_55)))
 (let ((?x16352 (* l_0_9_54 l_0_9_54)))
 (let ((?x16349 (* l_0_9_53 l_0_9_53)))
 (let ((?x16346 (* l_0_9_52 l_0_9_52)))
 (let ((?x15432 (* 4.0 l_0_9_40)))
 (let ((?x16095 (* ?x15432 l_0_9_40)))
 (let ((?x15429 (* 4.0 l_0_9_39)))
 (let ((?x16090 (* ?x15429 l_0_9_39)))
 (let ((?x15426 (* 4.0 l_0_9_38)))
 (let ((?x16085 (* ?x15426 l_0_9_38)))
 (let ((?x15423 (* 4.0 l_0_9_37)))
 (let ((?x16080 (* ?x15423 l_0_9_37)))
 (let ((?x16074 (* l_0_9_25 l_0_9_25)))
 (let ((?x16075 (* 4.0 ?x16074)))
 (let ((?x16068 (* l_0_9_24 l_0_9_24)))
 (let ((?x16069 (* 4.0 ?x16068)))
 (let ((?x16062 (* l_0_9_23 l_0_9_23)))
 (let ((?x16063 (* 4.0 ?x16062)))
 (let ((?x16056 (* l_0_9_22 l_0_9_22)))
 (let ((?x16057 (* 4.0 ?x16056)))
 (let ((?x14038 (- (- (- (- (+ (+ (+ ?x16057 ?x16063) ?x16069) ?x16075) ?x16080) ?x16085) ?x16090) ?x16095)))
 (let ((?x16944 (+ (+ (+ (- (- (- (- ?x14038 ?x16346) ?x16349) ?x16352) ?x16355) ?x5094) ?x16941) ?x16943)))
 (= (+ ?x16944 ?x16945) 0.0))))))))))))))))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(check-sat)
(get-model)