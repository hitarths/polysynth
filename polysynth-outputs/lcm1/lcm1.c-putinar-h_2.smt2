(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_1_23 () Real)
(declare-fun l_0_1_21 () Real)
(declare-fun l_0_1_22 () Real)
(declare-fun l_0_1_20 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_1_19 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_24 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_2_85 () Real)
(declare-fun l_0_2_57 () Real)
(declare-fun l_0_2_73 () Real)
(declare-fun l_0_2_59 () Real)
(declare-fun l_0_2_72 () Real)
(declare-fun l_0_2_58 () Real)
(declare-fun l_0_2_29 () Real)
(declare-fun l_0_2_87 () Real)
(declare-fun l_0_2_101 () Real)
(declare-fun l_0_2_86 () Real)
(declare-fun l_0_2_100 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_30 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_32 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_35 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_39 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_44 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_50 () Real)
(declare-fun l_0_2_22 () Real)
(declare-fun l_0_2_31 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_33 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_36 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_40 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_45 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_51 () Real)
(declare-fun l_0_2_23 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_34 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_37 () Real)
(declare-fun l_0_2_41 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_46 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_52 () Real)
(declare-fun l_0_2_24 () Real)
(declare-fun l_0_2_38 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_42 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_47 () Real)
(declare-fun l_0_2_19 () Real)
(declare-fun l_0_2_53 () Real)
(declare-fun l_0_2_25 () Real)
(declare-fun l_0_2_43 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_48 () Real)
(declare-fun l_0_2_20 () Real)
(declare-fun l_0_2_54 () Real)
(declare-fun l_0_2_26 () Real)
(declare-fun l_0_2_49 () Real)
(declare-fun l_0_2_21 () Real)
(declare-fun l_0_2_55 () Real)
(declare-fun l_0_2_27 () Real)
(declare-fun l_0_2_56 () Real)
(declare-fun l_0_2_28 () Real)
(declare-fun l_0_2_93 () Real)
(declare-fun l_0_2_90 () Real)
(declare-fun l_0_2_92 () Real)
(declare-fun l_0_2_89 () Real)
(declare-fun l_0_2_91 () Real)
(declare-fun l_0_2_88 () Real)
(declare-fun l_0_2_65 () Real)
(declare-fun l_0_2_62 () Real)
(declare-fun l_0_2_64 () Real)
(declare-fun l_0_2_61 () Real)
(declare-fun l_0_2_63 () Real)
(declare-fun l_0_2_60 () Real)
(declare-fun l_0_2_82 () Real)
(declare-fun l_0_2_71 () Real)
(declare-fun l_0_2_81 () Real)
(declare-fun l_0_2_70 () Real)
(declare-fun l_0_2_80 () Real)
(declare-fun l_0_2_69 () Real)
(declare-fun l_0_2_79 () Real)
(declare-fun l_0_2_68 () Real)
(declare-fun l_0_2_78 () Real)
(declare-fun l_0_2_67 () Real)
(declare-fun l_0_2_99 () Real)
(declare-fun l_0_2_110 () Real)
(declare-fun l_0_2_98 () Real)
(declare-fun l_0_2_109 () Real)
(declare-fun l_0_2_97 () Real)
(declare-fun l_0_2_108 () Real)
(declare-fun l_0_2_96 () Real)
(declare-fun l_0_2_107 () Real)
(declare-fun l_0_2_95 () Real)
(declare-fun l_0_2_106 () Real)
(declare-fun l_0_2_74 () Real)
(declare-fun l_0_2_102 () Real)
(declare-fun l_0_2_94 () Real)
(declare-fun l_0_2_66 () Real)
(declare-fun l_0_2_75 () Real)
(declare-fun l_0_2_103 () Real)
(declare-fun l_0_2_76 () Real)
(declare-fun l_0_2_104 () Real)
(declare-fun l_0_2_77 () Real)
(declare-fun l_0_2_105 () Real)
(declare-fun l_0_2_83 () Real)
(declare-fun l_0_2_111 () Real)
(declare-fun l_0_2_84 () Real)
(declare-fun l_0_2_112 () Real)
(declare-fun l_0_3_73 () Real)
(declare-fun l_0_3_59 () Real)
(declare-fun l_0_3_72 () Real)
(declare-fun l_0_3_58 () Real)
(declare-fun l_0_3_29 () Real)
(declare-fun l_0_3_87 () Real)
(declare-fun l_0_3_101 () Real)
(declare-fun l_0_3_86 () Real)
(declare-fun l_0_3_100 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_88 () Real)
(declare-fun l_0_3_85 () Real)
(declare-fun l_0_3_60 () Real)
(declare-fun l_0_3_57 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_3_80 () Real)
(declare-fun l_0_3_62 () Real)
(declare-fun l_0_3_79 () Real)
(declare-fun l_0_3_61 () Real)
(declare-fun l_0_3_78 () Real)
(declare-fun l_0_3_90 () Real)
(declare-fun l_0_3_108 () Real)
(declare-fun l_0_3_89 () Real)
(declare-fun l_0_3_107 () Real)
(declare-fun l_0_3_106 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_3_93 () Real)
(declare-fun l_0_3_92 () Real)
(declare-fun l_0_3_91 () Real)
(declare-fun l_0_3_65 () Real)
(declare-fun l_0_3_64 () Real)
(declare-fun l_0_3_63 () Real)
(declare-fun _a_5_ () Real)
(declare-fun l_0_3_82 () Real)
(declare-fun l_0_3_71 () Real)
(declare-fun l_0_3_81 () Real)
(declare-fun l_0_3_70 () Real)
(declare-fun l_0_3_69 () Real)
(declare-fun l_0_3_68 () Real)
(declare-fun l_0_3_67 () Real)
(declare-fun l_0_3_99 () Real)
(declare-fun l_0_3_110 () Real)
(declare-fun l_0_3_98 () Real)
(declare-fun l_0_3_109 () Real)
(declare-fun l_0_3_97 () Real)
(declare-fun l_0_3_96 () Real)
(declare-fun l_0_3_95 () Real)
(declare-fun l_0_3_30 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_32 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_35 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_39 () Real)
(declare-fun l_0_3_11 () Real)
(declare-fun l_0_3_44 () Real)
(declare-fun l_0_3_16 () Real)
(declare-fun l_0_3_50 () Real)
(declare-fun l_0_3_22 () Real)
(declare-fun l_0_3_31 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_33 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_36 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_40 () Real)
(declare-fun l_0_3_12 () Real)
(declare-fun l_0_3_45 () Real)
(declare-fun l_0_3_17 () Real)
(declare-fun l_0_3_51 () Real)
(declare-fun l_0_3_23 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_34 () Real)
(declare-fun l_0_3_9 () Real)
(declare-fun l_0_3_37 () Real)
(declare-fun l_0_3_41 () Real)
(declare-fun l_0_3_13 () Real)
(declare-fun l_0_3_46 () Real)
(declare-fun l_0_3_18 () Real)
(declare-fun l_0_3_52 () Real)
(declare-fun l_0_3_24 () Real)
(declare-fun l_0_3_38 () Real)
(declare-fun l_0_3_10 () Real)
(declare-fun l_0_3_42 () Real)
(declare-fun l_0_3_14 () Real)
(declare-fun l_0_3_47 () Real)
(declare-fun l_0_3_19 () Real)
(declare-fun l_0_3_53 () Real)
(declare-fun l_0_3_25 () Real)
(declare-fun l_0_3_43 () Real)
(declare-fun l_0_3_15 () Real)
(declare-fun l_0_3_48 () Real)
(declare-fun l_0_3_20 () Real)
(declare-fun l_0_3_54 () Real)
(declare-fun l_0_3_26 () Real)
(declare-fun l_0_3_49 () Real)
(declare-fun l_0_3_21 () Real)
(declare-fun l_0_3_55 () Real)
(declare-fun l_0_3_27 () Real)
(declare-fun l_0_3_56 () Real)
(declare-fun l_0_3_28 () Real)
(declare-fun l_0_3_74 () Real)
(declare-fun l_0_3_102 () Real)
(declare-fun l_0_3_94 () Real)
(declare-fun l_0_3_66 () Real)
(declare-fun l_0_3_75 () Real)
(declare-fun l_0_3_103 () Real)
(declare-fun l_0_3_76 () Real)
(declare-fun l_0_3_104 () Real)
(declare-fun l_0_3_77 () Real)
(declare-fun l_0_3_105 () Real)
(declare-fun l_0_3_83 () Real)
(declare-fun l_0_3_111 () Real)
(declare-fun l_0_3_84 () Real)
(declare-fun l_0_3_112 () Real)
(declare-fun l_0_4_88 () Real)
(declare-fun l_0_4_85 () Real)
(declare-fun l_0_4_60 () Real)
(declare-fun l_0_4_57 () Real)
(declare-fun l_0_4_116 () Real)
(declare-fun l_0_4_113 () Real)
(declare-fun l_0_4_80 () Real)
(declare-fun l_0_4_62 () Real)
(declare-fun l_0_4_79 () Real)
(declare-fun l_0_4_61 () Real)
(declare-fun l_0_4_78 () Real)
(declare-fun l_0_4_136 () Real)
(declare-fun l_0_4_118 () Real)
(declare-fun l_0_4_135 () Real)
(declare-fun l_0_4_117 () Real)
(declare-fun l_0_4_134 () Real)
(declare-fun l_0_4_90 () Real)
(declare-fun l_0_4_108 () Real)
(declare-fun l_0_4_89 () Real)
(declare-fun l_0_4_107 () Real)
(declare-fun l_0_4_106 () Real)
(declare-fun l_0_4_93 () Real)
(declare-fun l_0_4_92 () Real)
(declare-fun l_0_4_91 () Real)
(declare-fun l_0_4_65 () Real)
(declare-fun l_0_4_64 () Real)
(declare-fun l_0_4_63 () Real)
(declare-fun l_0_4_29 () Real)
(declare-fun l_0_4_121 () Real)
(declare-fun l_0_4_120 () Real)
(declare-fun l_0_4_119 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_82 () Real)
(declare-fun l_0_4_71 () Real)
(declare-fun l_0_4_81 () Real)
(declare-fun l_0_4_70 () Real)
(declare-fun l_0_4_69 () Real)
(declare-fun l_0_4_68 () Real)
(declare-fun l_0_4_67 () Real)
(declare-fun l_0_4_138 () Real)
(declare-fun l_0_4_127 () Real)
(declare-fun l_0_4_137 () Real)
(declare-fun l_0_4_126 () Real)
(declare-fun l_0_4_125 () Real)
(declare-fun l_0_4_124 () Real)
(declare-fun l_0_4_123 () Real)
(declare-fun l_0_4_99 () Real)
(declare-fun l_0_4_110 () Real)
(declare-fun l_0_4_98 () Real)
(declare-fun l_0_4_109 () Real)
(declare-fun l_0_4_97 () Real)
(declare-fun l_0_4_96 () Real)
(declare-fun l_0_4_95 () Real)
(declare-fun l_0_4_73 () Real)
(declare-fun l_0_4_59 () Real)
(declare-fun l_0_4_72 () Real)
(declare-fun l_0_4_58 () Real)
(declare-fun l_0_4_129 () Real)
(declare-fun l_0_4_115 () Real)
(declare-fun l_0_4_128 () Real)
(declare-fun l_0_4_114 () Real)
(declare-fun l_0_4_87 () Real)
(declare-fun l_0_4_101 () Real)
(declare-fun l_0_4_86 () Real)
(declare-fun l_0_4_100 () Real)
(declare-fun l_0_4_30 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_32 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_35 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_39 () Real)
(declare-fun l_0_4_11 () Real)
(declare-fun l_0_4_44 () Real)
(declare-fun l_0_4_16 () Real)
(declare-fun l_0_4_50 () Real)
(declare-fun l_0_4_22 () Real)
(declare-fun l_0_4_31 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_33 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_36 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_40 () Real)
(declare-fun l_0_4_12 () Real)
(declare-fun l_0_4_45 () Real)
(declare-fun l_0_4_17 () Real)
(declare-fun l_0_4_51 () Real)
(declare-fun l_0_4_23 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_34 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_37 () Real)
(declare-fun l_0_4_41 () Real)
(declare-fun l_0_4_13 () Real)
(declare-fun l_0_4_46 () Real)
(declare-fun l_0_4_18 () Real)
(declare-fun l_0_4_52 () Real)
(declare-fun l_0_4_24 () Real)
(declare-fun l_0_4_38 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_42 () Real)
(declare-fun l_0_4_14 () Real)
(declare-fun l_0_4_47 () Real)
(declare-fun l_0_4_19 () Real)
(declare-fun l_0_4_53 () Real)
(declare-fun l_0_4_25 () Real)
(declare-fun l_0_4_43 () Real)
(declare-fun l_0_4_15 () Real)
(declare-fun l_0_4_48 () Real)
(declare-fun l_0_4_20 () Real)
(declare-fun l_0_4_54 () Real)
(declare-fun l_0_4_26 () Real)
(declare-fun l_0_4_49 () Real)
(declare-fun l_0_4_21 () Real)
(declare-fun l_0_4_55 () Real)
(declare-fun l_0_4_27 () Real)
(declare-fun l_0_4_56 () Real)
(declare-fun l_0_4_28 () Real)
(declare-fun l_0_4_74 () Real)
(declare-fun l_0_4_130 () Real)
(declare-fun l_0_4_102 () Real)
(declare-fun l_0_4_94 () Real)
(declare-fun l_0_4_66 () Real)
(declare-fun l_0_4_122 () Real)
(declare-fun l_0_4_75 () Real)
(declare-fun l_0_4_131 () Real)
(declare-fun l_0_4_103 () Real)
(declare-fun l_0_4_76 () Real)
(declare-fun l_0_4_132 () Real)
(declare-fun l_0_4_104 () Real)
(declare-fun l_0_4_77 () Real)
(declare-fun l_0_4_133 () Real)
(declare-fun l_0_4_105 () Real)
(declare-fun l_0_4_83 () Real)
(declare-fun l_0_4_139 () Real)
(declare-fun l_0_4_111 () Real)
(declare-fun l_0_4_84 () Real)
(declare-fun l_0_4_140 () Real)
(declare-fun l_0_4_112 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_110 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_109 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_108 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_107 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_106 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_111 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_112 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_121 () Real)
(declare-fun l_0_6_118 () Real)
(declare-fun l_0_6_120 () Real)
(declare-fun l_0_6_117 () Real)
(declare-fun l_0_6_119 () Real)
(declare-fun l_0_6_116 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_138 () Real)
(declare-fun l_0_6_127 () Real)
(declare-fun l_0_6_137 () Real)
(declare-fun l_0_6_126 () Real)
(declare-fun l_0_6_136 () Real)
(declare-fun l_0_6_125 () Real)
(declare-fun l_0_6_135 () Real)
(declare-fun l_0_6_124 () Real)
(declare-fun l_0_6_134 () Real)
(declare-fun l_0_6_123 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_110 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_109 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_108 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_107 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_106 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_129 () Real)
(declare-fun l_0_6_115 () Real)
(declare-fun l_0_6_128 () Real)
(declare-fun l_0_6_114 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_113 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_130 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_122 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_131 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_132 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_133 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_139 () Real)
(declare-fun l_0_6_111 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_140 () Real)
(declare-fun l_0_6_112 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_138 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_137 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_136 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_139 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_140 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_110 () Real)
(declare-fun l_0_11_109 () Real)
(declare-fun l_0_11_108 () Real)
(declare-fun l_0_11_107 () Real)
(declare-fun l_0_11_106 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_111 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_112 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_121 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_126 () Real)
(declare-fun l_0_12_122 () Real)
(declare-fun l_0_12_125 () Real)
(declare-fun l_0_12_124 () Real)
(declare-fun l_0_12_123 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_138 () Real)
(declare-fun l_0_12_127 () Real)
(declare-fun l_0_12_137 () Real)
(declare-fun l_0_12_136 () Real)
(declare-fun l_0_12_135 () Real)
(declare-fun l_0_12_134 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_129 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_128 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_130 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_131 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_132 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_133 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_139 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_140 () Real)
(declare-fun l_0_12_112 () Real)
(assert
 (let ((?x1431 (- (* (* (- 2.0) l_0_0_1) l_0_0_2) (* (* 2.0 l_0_0_10) l_0_0_7))))
 (let ((?x1437 (- (- ?x1431 (* (* 2.0 l_0_0_14) l_0_0_16)) (* (* 2.0 l_0_0_15) l_0_0_17))))
 (= ?x1437 0.0))))
(assert
 (= (- (* (- l_0_0_1) l_0_0_1) (* (* 2.0 l_0_0_13) l_0_0_16)) 0.0))
(assert
 (let ((?x1504 (* l_0_0_18 l_0_0_18)))
 (let ((?x1502 (* l_0_0_17 l_0_0_17)))
 (let ((?x1503 (- (- (* (* (- 2.0) l_0_0_1) l_0_0_4) (* l_0_0_16 l_0_0_16)) ?x1502)))
 (= (- ?x1503 ?x1504) 0.0)))))
(assert
 (let ((?x1528 (* l_0_0_3 l_0_0_3)))
 (let ((?x1526 (* l_0_0_2 l_0_0_2)))
 (let ((?x1525 (- (* (* (- 2.0) l_0_0_10) l_0_0_8) (* (* 2.0 l_0_0_11) l_0_0_9))))
 (= (- (- ?x1525 ?x1526) ?x1528) 0.0)))))
(assert
 (let ((?x1552 (* l_0_0_12 l_0_0_12)))
 (let ((?x1556 (- (- (- (* (- l_0_0_10) l_0_0_10) (* l_0_0_11 l_0_0_11)) ?x1552) (* (* 2.0 l_0_0_2) l_0_0_4))))
 (= (- ?x1556 (* (* 2.0 l_0_0_3) l_0_0_5)) 0.0))))
(assert
 (let ((?x1588 (* l_0_0_6 l_0_0_6)))
 (= (- (- (* (- l_0_0_4) l_0_0_4) (* l_0_0_5 l_0_0_5)) ?x1588) 0.0)))
(assert
 (= (- (* (* (- 2.0) l_0_0_13) l_0_0_14) (* l_0_0_7 l_0_0_7)) 0.0))
(assert
 (let ((?x1621 (- (- (* (- l_0_0_14) l_0_0_14) (* l_0_0_15 l_0_0_15)) (* (* 2.0 l_0_0_7) l_0_0_8))))
 (= ?x1621 0.0)))
(assert
 (= (- (* (- l_0_0_8) l_0_0_8) (* l_0_0_9 l_0_0_9)) 0.0))
(assert
 (= (* (- l_0_0_13) l_0_0_13) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (>= l_0_0_13 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (let ((?x1669 (- (* (* (- 2.0) l_0_1_1) l_0_1_2) (* (* 2.0 l_0_1_10) l_0_1_7))))
 (let ((?x1675 (- (- ?x1669 (* (* 2.0 l_0_1_14) l_0_1_16)) (* (* 2.0 l_0_1_15) l_0_1_17))))
 (let ((?x1681 (- (- ?x1675 (* (* 2.0 l_0_1_20) l_0_1_22)) (* (* 2.0 l_0_1_21) l_0_1_23))))
 (= ?x1681 0.0)))))
(assert
 (let ((?x1725 (- (- (* (- l_0_1_1) l_0_1_1) (* (* 2.0 l_0_1_13) l_0_1_16)) (* (* 2.0 l_0_1_19) l_0_1_22))))
 (= ?x1725 0.0)))
(assert
 (let ((?x1755 (* l_0_1_24 l_0_1_24)))
 (let ((?x1753 (* l_0_1_23 l_0_1_23)))
 (let ((?x1751 (* l_0_1_22 l_0_1_22)))
 (let ((?x1749 (* l_0_1_18 l_0_1_18)))
 (let ((?x1747 (* l_0_1_17 l_0_1_17)))
 (let ((?x1748 (- (- (* (* (- 2.0) l_0_1_1) l_0_1_4) (* l_0_1_16 l_0_1_16)) ?x1747)))
 (= (- (- (- (- ?x1748 ?x1749) ?x1751) ?x1753) ?x1755) 0.0))))))))
(assert
 (let ((?x1788 (* l_0_1_3 l_0_1_3)))
 (let ((?x1786 (* l_0_1_2 l_0_1_2)))
 (let ((?x1785 (- (* (* (- 2.0) l_0_1_10) l_0_1_8) (* (* 2.0 l_0_1_11) l_0_1_9))))
 (= (- (- ?x1785 ?x1786) ?x1788) 0.0)))))
(assert
 (let ((?x1812 (* l_0_1_12 l_0_1_12)))
 (let ((?x1816 (- (- (- (* (- l_0_1_10) l_0_1_10) (* l_0_1_11 l_0_1_11)) ?x1812) (* (* 2.0 l_0_1_2) l_0_1_4))))
 (= (- ?x1816 (* (* 2.0 l_0_1_3) l_0_1_5)) 0.0))))
(assert
 (let ((?x1848 (* l_0_1_6 l_0_1_6)))
 (= (- (- (* (- l_0_1_4) l_0_1_4) (* l_0_1_5 l_0_1_5)) ?x1848) 0.0)))
(assert
 (let ((?x1866 (* l_0_1_7 l_0_1_7)))
 (let ((?x1865 (- (* (* (- 2.0) l_0_1_13) l_0_1_14) (* (* 2.0 l_0_1_19) l_0_1_20))))
 (= (- ?x1865 ?x1866) 0.0))))
(assert
 (let ((?x1889 (* l_0_1_21 l_0_1_21)))
 (let ((?x1887 (* l_0_1_20 l_0_1_20)))
 (let ((?x1890 (- (- (- (* (- l_0_1_14) l_0_1_14) (* l_0_1_15 l_0_1_15)) ?x1887) ?x1889)))
 (= (- ?x1890 (* (* 2.0 l_0_1_7) l_0_1_8)) 0.0)))))
(assert
 (= (- (* (- l_0_1_8) l_0_1_8) (* l_0_1_9 l_0_1_9)) 0.0))
(assert
 (= (- (* (- l_0_1_13) l_0_1_13) (* l_0_1_19 l_0_1_19)) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (>= l_0_1_19 0.0))
(assert
 (>= l_0_1_21 0.0))
(assert
 (>= l_0_1_24 0.0))
(assert
 (let ((?x1958 (+ (- (* 1.0 (* l_0_2_57 l_0_2_57)) (* l_0_2_85 l_0_2_85)) 1.0)))
 (= ?x1958 0.0)))
(assert
 (let ((?x1971 (* l_0_2_29 l_0_2_29)))
 (let ((?x1970 (- (- (* (- l_0_2_1) l_0_2_1) (* (* 2.0 l_0_2_100) l_0_2_86)) (* (* 2.0 l_0_2_101) l_0_2_87))))
 (let ((?x1978 (+ (+ (+ ?x1970 ?x1971) (* (* 2.0 l_0_2_58) l_0_2_72)) (* (* 2.0 l_0_2_59) l_0_2_73))))
 (= ?x1978 0.0)))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x2003 l_0_2_30)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_2) ?x2004) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2010 (* ?x2003 l_0_2_32)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_4) ?x2010) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2020 (* ?x2003 l_0_2_35)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_7) ?x2020) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2030 (* ?x2003 l_0_2_39)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_11) ?x2030) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2040 (* ?x2003 l_0_2_44)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_16) ?x2040) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2050 (* ?x2003 l_0_2_50)))
 (= (+ (* (* (- 2.0) l_0_2_1) l_0_2_22) ?x2050) 0.0))))
(assert
 (let ((?x2069 (* l_0_2_31 l_0_2_31)))
 (let ((?x2067 (* l_0_2_30 l_0_2_30)))
 (let ((?x2070 (+ (+ (- (* (- l_0_2_2) l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2067) ?x2069)))
 (= ?x2070 0.0)))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2091 (* ?x2090 l_0_2_33)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2088 (* ?x2087 l_0_2_32)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2085 (* ?x2084 l_0_2_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_2) l_0_2_4) ?x2085) ?x2088) ?x2091) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2114 (* ?x2090 l_0_2_36)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2112 (* ?x2087 l_0_2_35)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2105 (* ?x2084 l_0_2_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_2) l_0_2_7) ?x2105) ?x2112) ?x2114) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2139 (* ?x2090 l_0_2_40)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2137 (* ?x2087 l_0_2_39)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2135 (* ?x2129 l_0_2_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_11) l_0_2_2) ?x2135) ?x2137) ?x2139) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2164 (* ?x2090 l_0_2_45)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2162 (* ?x2087 l_0_2_44)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2160 (* ?x2154 l_0_2_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_16) l_0_2_2) ?x2160) ?x2162) ?x2164) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2188 (* ?x2090 l_0_2_51)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2186 (* ?x2087 l_0_2_50)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2179 (* ?x2178 l_0_2_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_2_2) l_0_2_22) ?x2179) ?x2186) ?x2188) 0.0))))))))
(assert
 (let ((?x2215 (* l_0_2_6 l_0_2_6)))
 (let ((?x2213 (* l_0_2_5 l_0_2_5)))
 (let ((?x2211 (* l_0_2_4 l_0_2_4)))
 (let ((?x2209 (* l_0_2_34 l_0_2_34)))
 (let ((?x2212 (- (+ (+ (* l_0_2_32 l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2209) ?x2211)))
 (= (- (- ?x2212 ?x2213) ?x2215) 0.0)))))))
(assert
 (let ((?x2250 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2247 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2244 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2241 (* ?x2240 l_0_2_37)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2238 (* ?x2237 l_0_2_36)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2235 (* ?x2234 l_0_2_35)))
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2164 (* ?x2090 l_0_2_45)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2162 (* ?x2087 l_0_2_44)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2160 (* ?x2154 l_0_2_3)))
 (let ((?x2229 (* 2.0 l_0_2_16)))
 (let ((?x2230 (* ?x2229 l_0_2_2)))
 (let ((?x2245 (- (+ (+ (+ (- (- (+ ?x2230 ?x2160) ?x2162) ?x2164) ?x2235) ?x2238) ?x2241) ?x2244)))
 (= (- (- ?x2245 ?x2247) ?x2250) 0.0))))))))))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2297 (* ?x2240 l_0_2_41)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2295 (* ?x2237 l_0_2_40)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2293 (* ?x2234 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2291 (* ?x2290 l_0_2_6)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2288 (* ?x2129 l_0_2_5)))
 (let ((?x2296 (+ (+ (- (- (* (* (- 2.0) l_0_2_11) l_0_2_4) ?x2288) ?x2291) ?x2293) ?x2295)))
 (= (+ ?x2296 ?x2297) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2333 (* ?x2240 l_0_2_46)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2331 (* ?x2237 l_0_2_45)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2329 (* ?x2234 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2327 (* ?x2320 l_0_2_6)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2317 (* ?x2154 l_0_2_5)))
 (let ((?x2332 (+ (+ (- (- (* (* (- 2.0) l_0_2_16) l_0_2_4) ?x2317) ?x2327) ?x2329) ?x2331)))
 (= (+ ?x2332 ?x2333) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2370 (* ?x2240 l_0_2_52)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2368 (* ?x2237 l_0_2_51)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2366 (* ?x2234 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2364 (* ?x2363 l_0_2_6)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2355 (* ?x2178 l_0_2_5)))
 (let ((?x2369 (+ (+ (- (- (* (* (- 2.0) l_0_2_22) l_0_2_4) ?x2355) ?x2364) ?x2366) ?x2368)))
 (= (+ ?x2369 ?x2370) 0.0)))))))))))))
(assert
 (let ((?x2410 (* l_0_2_9 l_0_2_9)))
 (let ((?x2408 (* l_0_2_8 l_0_2_8)))
 (let ((?x2406 (* l_0_2_7 l_0_2_7)))
 (let ((?x2404 (* l_0_2_38 l_0_2_38)))
 (let ((?x2402 (* l_0_2_37 l_0_2_37)))
 (let ((?x2400 (* l_0_2_36 l_0_2_36)))
 (let ((?x2403 (+ (+ (+ (* (- l_0_2_10) l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2400) ?x2402)))
 (= (- (- (- (+ ?x2403 ?x2404) ?x2406) ?x2408) ?x2410) 0.0)))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2446 (* ?x2445 l_0_2_42)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2443 (* ?x2442 l_0_2_41)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2440 (* ?x2439 l_0_2_40)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2437 (* ?x2436 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2434 (* ?x2290 l_0_2_9)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2432 (* ?x2129 l_0_2_8)))
 (let ((?x2429 (* 2.0 l_0_2_11)))
 (let ((?x2430 (* ?x2429 l_0_2_7)))
 (let ((?x2438 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_14) ?x2430) ?x2432) ?x2434) ?x2437)))
 (= (+ (+ (+ ?x2438 ?x2440) ?x2443) ?x2446) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2493 (* ?x2445 l_0_2_47)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2491 (* ?x2442 l_0_2_46)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2489 (* ?x2439 l_0_2_45)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2487 (* ?x2436 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2485 (* ?x2320 l_0_2_9)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2476 (* ?x2154 l_0_2_8)))
 (let ((?x2229 (* 2.0 l_0_2_16)))
 (let ((?x2472 (* ?x2229 l_0_2_7)))
 (let ((?x2488 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_19) ?x2472) ?x2476) ?x2485) ?x2487)))
 (= (+ (+ (+ ?x2488 ?x2489) ?x2491) ?x2493) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2541 (* ?x2445 l_0_2_53)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2539 (* ?x2442 l_0_2_52)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2537 (* ?x2439 l_0_2_51)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2535 (* ?x2436 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2533 (* ?x2363 l_0_2_9)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2524 (* ?x2178 l_0_2_8)))
 (let ((?x2519 (* 2.0 l_0_2_22)))
 (let ((?x2521 (* ?x2519 l_0_2_7)))
 (let ((?x2536 (+ (- (- (- (* (* (- 2.0) l_0_2_10) l_0_2_25) ?x2521) ?x2524) ?x2533) ?x2535)))
 (= (+ (+ (+ ?x2536 ?x2537) ?x2539) ?x2541) 0.0)))))))))))))))))
(assert
 (let ((?x2593 (* l_0_2_43 l_0_2_43)))
 (let ((?x2591 (* l_0_2_42 l_0_2_42)))
 (let ((?x2589 (* l_0_2_41 l_0_2_41)))
 (let ((?x2587 (* l_0_2_40 l_0_2_40)))
 (let ((?x2585 (* l_0_2_39 l_0_2_39)))
 (let ((?x2583 (* l_0_2_15 l_0_2_15)))
 (let ((?x2581 (* l_0_2_14 l_0_2_14)))
 (let ((?x2572 (* l_0_2_13 l_0_2_13)))
 (let ((?x2582 (- (- (- (* (- l_0_2_11) l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2572) ?x2581)))
 (= (+ (+ (+ (+ (+ (- ?x2582 ?x2583) ?x2585) ?x2587) ?x2589) ?x2591) ?x2593) 0.0)))))))))))
(assert
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2642 (* ?x2641 l_0_2_48)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2639 (* ?x2638 l_0_2_47)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2636 (* ?x2635 l_0_2_46)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2633 (* ?x2632 l_0_2_45)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2630 (* ?x2629 l_0_2_44)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2627 (* ?x2626 l_0_2_20)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2624 (* ?x2623 l_0_2_19)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2621 (* ?x2290 l_0_2_18)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2619 (* ?x2129 l_0_2_17)))
 (let ((?x2628 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_16) ?x2619) ?x2621) ?x2624) ?x2627)))
 (= (+ (+ (+ (+ (+ ?x2628 ?x2630) ?x2633) ?x2636) ?x2639) ?x2642) 0.0)))))))))))))))))))))
(assert
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2705 (* ?x2641 l_0_2_54)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2703 (* ?x2638 l_0_2_53)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2701 (* ?x2635 l_0_2_52)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2699 (* ?x2632 l_0_2_51)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2697 (* ?x2629 l_0_2_50)))
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2164 (* ?x2090 l_0_2_45)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2162 (* ?x2087 l_0_2_44)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2160 (* ?x2154 l_0_2_3)))
 (let ((?x2229 (* 2.0 l_0_2_16)))
 (let ((?x2230 (* ?x2229 l_0_2_2)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2691 (* ?x2626 l_0_2_26)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2681 (* ?x2623 l_0_2_25)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2678 (* ?x2290 l_0_2_24)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2674 (* ?x2129 l_0_2_23)))
 (let ((?x2692 (- (- (- (- (* (* (- 2.0) l_0_2_11) l_0_2_22) ?x2674) ?x2678) ?x2681) ?x2691)))
 (let ((?x2702 (+ (+ (+ (- (- (+ (+ ?x2692 ?x2230) ?x2160) ?x2162) ?x2164) ?x2697) ?x2699) ?x2701)))
 (= (+ (+ ?x2702 ?x2703) ?x2705) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x2773 (* l_0_2_49 l_0_2_49)))
 (let ((?x2771 (* l_0_2_48 l_0_2_48)))
 (let ((?x2769 (* l_0_2_47 l_0_2_47)))
 (let ((?x2767 (* l_0_2_46 l_0_2_46)))
 (let ((?x2765 (* l_0_2_45 l_0_2_45)))
 (let ((?x2763 (* l_0_2_44 l_0_2_44)))
 (let ((?x2761 (* l_0_2_21 l_0_2_21)))
 (let ((?x2759 (* l_0_2_20 l_0_2_20)))
 (let ((?x2757 (* l_0_2_19 l_0_2_19)))
 (let ((?x2755 (* l_0_2_18 l_0_2_18)))
 (let ((?x2758 (- (- (- (* (- l_0_2_16) l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2755) ?x2757)))
 (let ((?x2772 (+ (+ (+ (+ (+ (- (- ?x2758 ?x2759) ?x2761) ?x2763) ?x2765) ?x2767) ?x2769) ?x2771)))
 (= (+ ?x2772 ?x2773) 0.0))))))))))))))
(assert
 (let ((?x2832 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2829 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2826 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2823 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2820 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2817 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2814 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2811 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2808 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2805 (* ?x2320 l_0_2_24)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2803 (* ?x2154 l_0_2_23)))
 (let ((?x2812 (- (- (- (- (* (* (- 2.0) l_0_2_16) l_0_2_22) ?x2803) ?x2805) ?x2808) ?x2811)))
 (let ((?x2833 (+ (+ (+ (+ (+ (+ (- ?x2812 ?x2814) ?x2817) ?x2820) ?x2823) ?x2826) ?x2829) ?x2832)))
 (= ?x2833 0.0)))))))))))))))))
(assert
 (let ((?x2908 (* l_0_2_56 l_0_2_56)))
 (let ((?x2906 (* l_0_2_55 l_0_2_55)))
 (let ((?x2904 (* l_0_2_54 l_0_2_54)))
 (let ((?x2902 (* l_0_2_53 l_0_2_53)))
 (let ((?x2900 (* l_0_2_52 l_0_2_52)))
 (let ((?x2898 (* l_0_2_51 l_0_2_51)))
 (let ((?x2896 (* l_0_2_50 l_0_2_50)))
 (let ((?x2894 (* l_0_2_28 l_0_2_28)))
 (let ((?x2892 (* l_0_2_27 l_0_2_27)))
 (let ((?x2890 (* l_0_2_26 l_0_2_26)))
 (let ((?x2879 (* l_0_2_25 l_0_2_25)))
 (let ((?x2876 (* l_0_2_24 l_0_2_24)))
 (let ((?x2889 (- (- (- (* (- l_0_2_22) l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2876) ?x2879)))
 (let ((?x2903 (+ (+ (+ (+ (- (- (- ?x2889 ?x2890) ?x2892) ?x2894) ?x2896) ?x2898) ?x2900) ?x2902)))
 (= (+ (+ (+ ?x2903 ?x2904) ?x2906) ?x2908) 0.0))))))))))))))))
(assert
 (let ((?x2944 (+ (- (* l_0_2_1 l_0_2_1) (* l_0_2_29 l_0_2_29)) (* (* 2.0 l_0_2_60) l_0_2_63))))
 (let ((?x2950 (+ (+ ?x2944 (* (* 2.0 l_0_2_61) l_0_2_64)) (* (* 2.0 l_0_2_62) l_0_2_65))))
 (let ((?x2956 (- (- ?x2950 (* (* 2.0 l_0_2_88) l_0_2_91)) (* (* 2.0 l_0_2_89) l_0_2_92))))
 (= (- ?x2956 (* (* 2.0 l_0_2_90) l_0_2_93)) 0.0)))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x2003 l_0_2_30)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x2004) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2010 (* ?x2003 l_0_2_32)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x2010) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2020 (* ?x2003 l_0_2_35)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x2020) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2030 (* ?x2003 l_0_2_39)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x2030) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2040 (* ?x2003 l_0_2_44)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_16) ?x2040) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2050 (* ?x2003 l_0_2_50)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_22) ?x2050) 0.0))))
(assert
 (let ((?x2069 (* l_0_2_31 l_0_2_31)))
 (let ((?x2067 (* l_0_2_30 l_0_2_30)))
 (= (- (- (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2067) ?x2069) 0.0))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2091 (* ?x2090 l_0_2_33)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2088 (* ?x2087 l_0_2_32)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2085 (* ?x2084 l_0_2_5)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_4) ?x2085) ?x2088) ?x2091) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2114 (* ?x2090 l_0_2_36)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2112 (* ?x2087 l_0_2_35)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2105 (* ?x2084 l_0_2_8)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_7) ?x2105) ?x2112) ?x2114) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2139 (* ?x2090 l_0_2_40)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2137 (* ?x2087 l_0_2_39)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2135 (* ?x2129 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x2135) ?x2137) ?x2139) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2188 (* ?x2090 l_0_2_51)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2186 (* ?x2087 l_0_2_50)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2179 (* ?x2178 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_22) ?x2179) ?x2186) ?x2188) 0.0))))))))
(assert
 (let ((?x2215 (* l_0_2_6 l_0_2_6)))
 (let ((?x2213 (* l_0_2_5 l_0_2_5)))
 (let ((?x2211 (* l_0_2_4 l_0_2_4)))
 (let ((?x2209 (* l_0_2_34 l_0_2_34)))
 (let ((?x3096 (+ (- (- (* (- l_0_2_32) l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2209) ?x2211)))
 (= (+ (+ ?x3096 ?x2213) ?x2215) 0.0)))))))
(assert
 (let ((?x2250 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2247 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2244 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2241 (* ?x2240 l_0_2_37)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2238 (* ?x2237 l_0_2_36)))
 (let ((?x3112 (+ (+ (- (- (* (* (- 2.0) l_0_2_32) l_0_2_35) ?x2238) ?x2241) ?x2244) ?x2247)))
 (= (+ ?x3112 ?x2250) 0.0))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2297 (* ?x2240 l_0_2_41)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2295 (* ?x2237 l_0_2_40)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2293 (* ?x2234 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2291 (* ?x2290 l_0_2_6)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2288 (* ?x2129 l_0_2_5)))
 (let ((?x3130 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x2288) ?x2291) ?x2293) ?x2295)))
 (= (- ?x3130 ?x2297) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2333 (* ?x2240 l_0_2_46)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2331 (* ?x2237 l_0_2_45)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2329 (* ?x2234 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2327 (* ?x2320 l_0_2_6)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2317 (* ?x2154 l_0_2_5)))
 (let ((?x3149 (- (- (+ (+ (* (* 2.0 l_0_2_16) l_0_2_4) ?x2317) ?x2327) ?x2329) ?x2331)))
 (= (- ?x3149 ?x2333) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2370 (* ?x2240 l_0_2_52)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2368 (* ?x2237 l_0_2_51)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2366 (* ?x2234 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2364 (* ?x2363 l_0_2_6)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2355 (* ?x2178 l_0_2_5)))
 (let ((?x3168 (- (- (+ (+ (* (* 2.0 l_0_2_22) l_0_2_4) ?x2355) ?x2364) ?x2366) ?x2368)))
 (= (- ?x3168 ?x2370) 0.0)))))))))))))
(assert
 (let ((?x2410 (* l_0_2_9 l_0_2_9)))
 (let ((?x2408 (* l_0_2_8 l_0_2_8)))
 (let ((?x2406 (* l_0_2_7 l_0_2_7)))
 (let ((?x2404 (* l_0_2_38 l_0_2_38)))
 (let ((?x2402 (* l_0_2_37 l_0_2_37)))
 (let ((?x2400 (* l_0_2_36 l_0_2_36)))
 (let ((?x3185 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2400) ?x2402)))
 (= (+ (+ (+ (- ?x3185 ?x2404) ?x2406) ?x2408) ?x2410) 0.0)))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2446 (* ?x2445 l_0_2_42)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2443 (* ?x2442 l_0_2_41)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2440 (* ?x2439 l_0_2_40)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2437 (* ?x2436 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2434 (* ?x2290 l_0_2_9)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2432 (* ?x2129 l_0_2_8)))
 (let ((?x2429 (* 2.0 l_0_2_11)))
 (let ((?x2430 (* ?x2429 l_0_2_7)))
 (let ((?x3208 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x2430) ?x2432) ?x2434) ?x2437)))
 (= (- (- (- ?x3208 ?x2440) ?x2443) ?x2446) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2493 (* ?x2445 l_0_2_47)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2491 (* ?x2442 l_0_2_46)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2489 (* ?x2439 l_0_2_45)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2487 (* ?x2436 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2485 (* ?x2320 l_0_2_9)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2476 (* ?x2154 l_0_2_8)))
 (let ((?x2229 (* 2.0 l_0_2_16)))
 (let ((?x2472 (* ?x2229 l_0_2_7)))
 (let ((?x3233 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_19) ?x2472) ?x2476) ?x2485) ?x2487)))
 (= (- (- (- ?x3233 ?x2489) ?x2491) ?x2493) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2541 (* ?x2445 l_0_2_53)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2539 (* ?x2442 l_0_2_52)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2537 (* ?x2439 l_0_2_51)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2535 (* ?x2436 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2533 (* ?x2363 l_0_2_9)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2524 (* ?x2178 l_0_2_8)))
 (let ((?x2519 (* 2.0 l_0_2_22)))
 (let ((?x2521 (* ?x2519 l_0_2_7)))
 (let ((?x3258 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_25) ?x2521) ?x2524) ?x2533) ?x2535)))
 (= (- (- (- ?x3258 ?x2537) ?x2539) ?x2541) 0.0)))))))))))))))))
(assert
 (let ((?x2593 (* l_0_2_43 l_0_2_43)))
 (let ((?x2591 (* l_0_2_42 l_0_2_42)))
 (let ((?x2589 (* l_0_2_41 l_0_2_41)))
 (let ((?x2587 (* l_0_2_40 l_0_2_40)))
 (let ((?x2585 (* l_0_2_39 l_0_2_39)))
 (let ((?x2583 (* l_0_2_15 l_0_2_15)))
 (let ((?x2581 (* l_0_2_14 l_0_2_14)))
 (let ((?x2572 (* l_0_2_13 l_0_2_13)))
 (let ((?x3281 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2572) ?x2581)))
 (= (- (- (- (- (- (+ ?x3281 ?x2583) ?x2585) ?x2587) ?x2589) ?x2591) ?x2593) 0.0)))))))))))
(assert
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2642 (* ?x2641 l_0_2_48)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2639 (* ?x2638 l_0_2_47)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2636 (* ?x2635 l_0_2_46)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2633 (* ?x2632 l_0_2_45)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2630 (* ?x2629 l_0_2_44)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2627 (* ?x2626 l_0_2_20)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2624 (* ?x2623 l_0_2_19)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2621 (* ?x2290 l_0_2_18)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2619 (* ?x2129 l_0_2_17)))
 (let ((?x3303 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_16) ?x2619) ?x2621) ?x2624) ?x2627)))
 (= (- (- (- (- (- ?x3303 ?x2630) ?x2633) ?x2636) ?x2639) ?x2642) 0.0)))))))))))))))))))))
(assert
 (let ((?x2250 (* (* 2.0 l_0_2_6) l_0_2_9)))
 (let ((?x2247 (* (* 2.0 l_0_2_5) l_0_2_8)))
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2705 (* ?x2641 l_0_2_54)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2703 (* ?x2638 l_0_2_53)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2701 (* ?x2635 l_0_2_52)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2699 (* ?x2632 l_0_2_51)))
 (let ((?x2244 (* (* 2.0 l_0_2_4) l_0_2_7)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2697 (* ?x2629 l_0_2_50)))
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2241 (* ?x2240 l_0_2_37)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2238 (* ?x2237 l_0_2_36)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2235 (* ?x2234 l_0_2_35)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2691 (* ?x2626 l_0_2_26)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2681 (* ?x2623 l_0_2_25)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2678 (* ?x2290 l_0_2_24)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2674 (* ?x2129 l_0_2_23)))
 (let ((?x3334 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_22) ?x2674) ?x2678) ?x2681) ?x2691)))
 (let ((?x3341 (- (- (+ (- (- (- (- ?x3334 ?x2235) ?x2238) ?x2241) ?x2697) ?x2244) ?x2699) ?x2701)))
 (= (+ (+ (- (- ?x3341 ?x2703) ?x2705) ?x2247) ?x2250) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x2773 (* l_0_2_49 l_0_2_49)))
 (let ((?x2771 (* l_0_2_48 l_0_2_48)))
 (let ((?x2769 (* l_0_2_47 l_0_2_47)))
 (let ((?x2767 (* l_0_2_46 l_0_2_46)))
 (let ((?x2765 (* l_0_2_45 l_0_2_45)))
 (let ((?x2763 (* l_0_2_44 l_0_2_44)))
 (let ((?x2761 (* l_0_2_21 l_0_2_21)))
 (let ((?x2759 (* l_0_2_20 l_0_2_20)))
 (let ((?x2757 (* l_0_2_19 l_0_2_19)))
 (let ((?x2755 (* l_0_2_18 l_0_2_18)))
 (let ((?x3381 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2755) ?x2757)))
 (let ((?x3388 (- (- (- (- (- (+ (+ ?x3381 ?x2759) ?x2761) ?x2763) ?x2765) ?x2767) ?x2769) ?x2771)))
 (= (- ?x3388 ?x2773) 0.0))))))))))))))
(assert
 (let ((?x2832 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2829 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2826 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2823 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2820 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2817 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2814 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2811 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2808 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2805 (* ?x2320 l_0_2_24)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2803 (* ?x2154 l_0_2_23)))
 (let ((?x3407 (+ (+ (+ (+ (* (* 2.0 l_0_2_16) l_0_2_22) ?x2803) ?x2805) ?x2808) ?x2811)))
 (let ((?x3414 (- (- (- (- (- (- (+ ?x3407 ?x2814) ?x2817) ?x2820) ?x2823) ?x2826) ?x2829) ?x2832)))
 (= ?x3414 0.0)))))))))))))))))
(assert
 (let ((?x2908 (* l_0_2_56 l_0_2_56)))
 (let ((?x2906 (* l_0_2_55 l_0_2_55)))
 (let ((?x2904 (* l_0_2_54 l_0_2_54)))
 (let ((?x2902 (* l_0_2_53 l_0_2_53)))
 (let ((?x2900 (* l_0_2_52 l_0_2_52)))
 (let ((?x2898 (* l_0_2_51 l_0_2_51)))
 (let ((?x2896 (* l_0_2_50 l_0_2_50)))
 (let ((?x2894 (* l_0_2_28 l_0_2_28)))
 (let ((?x2892 (* l_0_2_27 l_0_2_27)))
 (let ((?x2890 (* l_0_2_26 l_0_2_26)))
 (let ((?x2879 (* l_0_2_25 l_0_2_25)))
 (let ((?x2876 (* l_0_2_24 l_0_2_24)))
 (let ((?x3442 (+ (+ (+ (* l_0_2_22 l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2876) ?x2879)))
 (let ((?x3449 (- (- (- (- (+ (+ (+ ?x3442 ?x2890) ?x2892) ?x2894) ?x2896) ?x2898) ?x2900) ?x2902)))
 (= (- (- (- ?x3449 ?x2904) ?x2906) ?x2908) 0.0))))))))))))))))
(assert
 (let ((?x1971 (* l_0_2_29 l_0_2_29)))
 (let ((?x3473 (- (- (* l_0_2_1 l_0_2_1) (* (* 2.0 l_0_2_106) l_0_2_95)) (* (* 2.0 l_0_2_107) l_0_2_96))))
 (let ((?x3479 (- (- ?x3473 (* (* 2.0 l_0_2_108) l_0_2_97)) (* (* 2.0 l_0_2_109) l_0_2_98))))
 (let ((?x3486 (+ (- (- ?x3479 (* (* 2.0 l_0_2_110) l_0_2_99)) ?x1971) (* (* 2.0 l_0_2_67) l_0_2_78))))
 (let ((?x3492 (+ (+ ?x3486 (* (* 2.0 l_0_2_68) l_0_2_79)) (* (* 2.0 l_0_2_69) l_0_2_80))))
 (let ((?x3498 (+ (+ ?x3492 (* (* 2.0 l_0_2_70) l_0_2_81)) (* (* 2.0 l_0_2_71) l_0_2_82))))
 (= ?x3498 0.0))))))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2004 (* ?x2003 l_0_2_30)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_2) ?x2004) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2010 (* ?x2003 l_0_2_32)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_4) ?x2010) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2020 (* ?x2003 l_0_2_35)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_7) ?x2020) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2030 (* ?x2003 l_0_2_39)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_11) ?x2030) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2040 (* ?x2003 l_0_2_44)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_16) ?x2040) 0.0))))
(assert
 (let ((?x2003 (* 2.0 l_0_2_29)))
 (let ((?x2050 (* ?x2003 l_0_2_50)))
 (= (- (* (* 2.0 l_0_2_1) l_0_2_22) ?x2050) 0.0))))
(assert
 (let ((?x2069 (* l_0_2_31 l_0_2_31)))
 (let ((?x2067 (* l_0_2_30 l_0_2_30)))
 (= (- (- (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3)) ?x2067) ?x2069) 0.0))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2091 (* ?x2090 l_0_2_33)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2088 (* ?x2087 l_0_2_32)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2085 (* ?x2084 l_0_2_5)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_4) ?x2085) ?x2088) ?x2091) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2114 (* ?x2090 l_0_2_36)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2112 (* ?x2087 l_0_2_35)))
 (let ((?x2084 (* 2.0 l_0_2_3)))
 (let ((?x2105 (* ?x2084 l_0_2_8)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_7) ?x2105) ?x2112) ?x2114) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2139 (* ?x2090 l_0_2_40)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2137 (* ?x2087 l_0_2_39)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2135 (* ?x2129 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_11) l_0_2_2) ?x2135) ?x2137) ?x2139) 0.0))))))))
(assert
 (let ((?x2090 (* 2.0 l_0_2_31)))
 (let ((?x2188 (* ?x2090 l_0_2_51)))
 (let ((?x2087 (* 2.0 l_0_2_30)))
 (let ((?x2186 (* ?x2087 l_0_2_50)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2179 (* ?x2178 l_0_2_3)))
 (= (- (- (+ (* (* 2.0 l_0_2_2) l_0_2_22) ?x2179) ?x2186) ?x2188) 0.0))))))))
(assert
 (let ((?x2215 (* l_0_2_6 l_0_2_6)))
 (let ((?x2213 (* l_0_2_5 l_0_2_5)))
 (let ((?x2211 (* l_0_2_4 l_0_2_4)))
 (let ((?x2209 (* l_0_2_34 l_0_2_34)))
 (let ((?x3096 (+ (- (- (* (- l_0_2_32) l_0_2_32) (* l_0_2_33 l_0_2_33)) ?x2209) ?x2211)))
 (= (+ (+ ?x3096 ?x2213) ?x2215) 0.0)))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2297 (* ?x2240 l_0_2_41)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2295 (* ?x2237 l_0_2_40)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2293 (* ?x2234 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2291 (* ?x2290 l_0_2_6)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2288 (* ?x2129 l_0_2_5)))
 (let ((?x3130 (- (- (+ (+ (* (* 2.0 l_0_2_11) l_0_2_4) ?x2288) ?x2291) ?x2293) ?x2295)))
 (= (- ?x3130 ?x2297) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2333 (* ?x2240 l_0_2_46)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2331 (* ?x2237 l_0_2_45)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2329 (* ?x2234 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2327 (* ?x2320 l_0_2_6)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2317 (* ?x2154 l_0_2_5)))
 (let ((?x3149 (- (- (+ (+ (* (* 2.0 l_0_2_16) l_0_2_4) ?x2317) ?x2327) ?x2329) ?x2331)))
 (= (- ?x3149 ?x2333) 0.0)))))))))))))
(assert
 (let ((?x2240 (* 2.0 l_0_2_34)))
 (let ((?x2370 (* ?x2240 l_0_2_52)))
 (let ((?x2237 (* 2.0 l_0_2_33)))
 (let ((?x2368 (* ?x2237 l_0_2_51)))
 (let ((?x2234 (* 2.0 l_0_2_32)))
 (let ((?x2366 (* ?x2234 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2364 (* ?x2363 l_0_2_6)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2355 (* ?x2178 l_0_2_5)))
 (let ((?x3168 (- (- (+ (+ (* (* 2.0 l_0_2_22) l_0_2_4) ?x2355) ?x2364) ?x2366) ?x2368)))
 (= (- ?x3168 ?x2370) 0.0)))))))))))))
(assert
 (let ((?x2410 (* l_0_2_9 l_0_2_9)))
 (let ((?x2408 (* l_0_2_8 l_0_2_8)))
 (let ((?x2406 (* l_0_2_7 l_0_2_7)))
 (let ((?x2404 (* l_0_2_38 l_0_2_38)))
 (let ((?x2402 (* l_0_2_37 l_0_2_37)))
 (let ((?x2400 (* l_0_2_36 l_0_2_36)))
 (let ((?x3185 (- (- (- (* l_0_2_10 l_0_2_10) (* l_0_2_35 l_0_2_35)) ?x2400) ?x2402)))
 (= (+ (+ (+ (- ?x3185 ?x2404) ?x2406) ?x2408) ?x2410) 0.0)))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2446 (* ?x2445 l_0_2_42)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2443 (* ?x2442 l_0_2_41)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2440 (* ?x2439 l_0_2_40)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2437 (* ?x2436 l_0_2_39)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2434 (* ?x2290 l_0_2_9)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2432 (* ?x2129 l_0_2_8)))
 (let ((?x2429 (* 2.0 l_0_2_11)))
 (let ((?x2430 (* ?x2429 l_0_2_7)))
 (let ((?x3208 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_14) ?x2430) ?x2432) ?x2434) ?x2437)))
 (= (- (- (- ?x3208 ?x2440) ?x2443) ?x2446) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2493 (* ?x2445 l_0_2_47)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2491 (* ?x2442 l_0_2_46)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2489 (* ?x2439 l_0_2_45)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2487 (* ?x2436 l_0_2_44)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2485 (* ?x2320 l_0_2_9)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2476 (* ?x2154 l_0_2_8)))
 (let ((?x2229 (* 2.0 l_0_2_16)))
 (let ((?x2472 (* ?x2229 l_0_2_7)))
 (let ((?x3233 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_19) ?x2472) ?x2476) ?x2485) ?x2487)))
 (= (- (- (- ?x3233 ?x2489) ?x2491) ?x2493) 0.0)))))))))))))))))
(assert
 (let ((?x2445 (* 2.0 l_0_2_38)))
 (let ((?x2541 (* ?x2445 l_0_2_53)))
 (let ((?x2442 (* 2.0 l_0_2_37)))
 (let ((?x2539 (* ?x2442 l_0_2_52)))
 (let ((?x2439 (* 2.0 l_0_2_36)))
 (let ((?x2537 (* ?x2439 l_0_2_51)))
 (let ((?x2436 (* 2.0 l_0_2_35)))
 (let ((?x2535 (* ?x2436 l_0_2_50)))
 (let ((?x2363 (* 2.0 l_0_2_24)))
 (let ((?x2533 (* ?x2363 l_0_2_9)))
 (let ((?x2178 (* 2.0 l_0_2_23)))
 (let ((?x2524 (* ?x2178 l_0_2_8)))
 (let ((?x2519 (* 2.0 l_0_2_22)))
 (let ((?x2521 (* ?x2519 l_0_2_7)))
 (let ((?x3258 (- (+ (+ (+ (* (* 2.0 l_0_2_10) l_0_2_25) ?x2521) ?x2524) ?x2533) ?x2535)))
 (= (- (- (- ?x3258 ?x2537) ?x2539) ?x2541) 0.0)))))))))))))))))
(assert
 (let ((?x2593 (* l_0_2_43 l_0_2_43)))
 (let ((?x2591 (* l_0_2_42 l_0_2_42)))
 (let ((?x2589 (* l_0_2_41 l_0_2_41)))
 (let ((?x2587 (* l_0_2_40 l_0_2_40)))
 (let ((?x2585 (* l_0_2_39 l_0_2_39)))
 (let ((?x2583 (* l_0_2_15 l_0_2_15)))
 (let ((?x2581 (* l_0_2_14 l_0_2_14)))
 (let ((?x2572 (* l_0_2_13 l_0_2_13)))
 (let ((?x3281 (+ (+ (+ (* l_0_2_11 l_0_2_11) (* l_0_2_12 l_0_2_12)) ?x2572) ?x2581)))
 (= (- (- (- (- (- (+ ?x3281 ?x2583) ?x2585) ?x2587) ?x2589) ?x2591) ?x2593) 0.0)))))))))))
(assert
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2642 (* ?x2641 l_0_2_48)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2639 (* ?x2638 l_0_2_47)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2636 (* ?x2635 l_0_2_46)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2633 (* ?x2632 l_0_2_45)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2630 (* ?x2629 l_0_2_44)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2627 (* ?x2626 l_0_2_20)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2624 (* ?x2623 l_0_2_19)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2621 (* ?x2290 l_0_2_18)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2619 (* ?x2129 l_0_2_17)))
 (let ((?x3303 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_16) ?x2619) ?x2621) ?x2624) ?x2627)))
 (= (- (- (- (- (- ?x3303 ?x2630) ?x2633) ?x2636) ?x2639) ?x2642) 0.0)))))))))))))))))))))
(assert
 (let ((?x2641 (* 2.0 l_0_2_43)))
 (let ((?x2705 (* ?x2641 l_0_2_54)))
 (let ((?x2638 (* 2.0 l_0_2_42)))
 (let ((?x2703 (* ?x2638 l_0_2_53)))
 (let ((?x2635 (* 2.0 l_0_2_41)))
 (let ((?x2701 (* ?x2635 l_0_2_52)))
 (let ((?x2632 (* 2.0 l_0_2_40)))
 (let ((?x2699 (* ?x2632 l_0_2_51)))
 (let ((?x2629 (* 2.0 l_0_2_39)))
 (let ((?x2697 (* ?x2629 l_0_2_50)))
 (let ((?x2626 (* 2.0 l_0_2_15)))
 (let ((?x2691 (* ?x2626 l_0_2_26)))
 (let ((?x2623 (* 2.0 l_0_2_14)))
 (let ((?x2681 (* ?x2623 l_0_2_25)))
 (let ((?x2290 (* 2.0 l_0_2_13)))
 (let ((?x2678 (* ?x2290 l_0_2_24)))
 (let ((?x2129 (* 2.0 l_0_2_12)))
 (let ((?x2674 (* ?x2129 l_0_2_23)))
 (let ((?x3334 (+ (+ (+ (+ (* (* 2.0 l_0_2_11) l_0_2_22) ?x2674) ?x2678) ?x2681) ?x2691)))
 (= (- (- (- (- (- ?x3334 ?x2697) ?x2699) ?x2701) ?x2703) ?x2705) 0.0)))))))))))))))))))))
(assert
 (let ((?x2773 (* l_0_2_49 l_0_2_49)))
 (let ((?x2771 (* l_0_2_48 l_0_2_48)))
 (let ((?x2769 (* l_0_2_47 l_0_2_47)))
 (let ((?x2767 (* l_0_2_46 l_0_2_46)))
 (let ((?x2765 (* l_0_2_45 l_0_2_45)))
 (let ((?x2763 (* l_0_2_44 l_0_2_44)))
 (let ((?x2761 (* l_0_2_21 l_0_2_21)))
 (let ((?x2759 (* l_0_2_20 l_0_2_20)))
 (let ((?x2757 (* l_0_2_19 l_0_2_19)))
 (let ((?x2755 (* l_0_2_18 l_0_2_18)))
 (let ((?x3381 (+ (+ (+ (* l_0_2_16 l_0_2_16) (* l_0_2_17 l_0_2_17)) ?x2755) ?x2757)))
 (let ((?x3388 (- (- (- (- (- (+ (+ ?x3381 ?x2759) ?x2761) ?x2763) ?x2765) ?x2767) ?x2769) ?x2771)))
 (= (- ?x3388 ?x2773) 0.0))))))))))))))
(assert
 (let ((?x2832 (* (* 2.0 l_0_2_49) l_0_2_55)))
 (let ((?x2829 (* (* 2.0 l_0_2_48) l_0_2_54)))
 (let ((?x2826 (* (* 2.0 l_0_2_47) l_0_2_53)))
 (let ((?x2823 (* (* 2.0 l_0_2_46) l_0_2_52)))
 (let ((?x2820 (* (* 2.0 l_0_2_45) l_0_2_51)))
 (let ((?x2817 (* (* 2.0 l_0_2_44) l_0_2_50)))
 (let ((?x2814 (* (* 2.0 l_0_2_21) l_0_2_27)))
 (let ((?x2811 (* (* 2.0 l_0_2_20) l_0_2_26)))
 (let ((?x2808 (* (* 2.0 l_0_2_19) l_0_2_25)))
 (let ((?x2320 (* 2.0 l_0_2_18)))
 (let ((?x2805 (* ?x2320 l_0_2_24)))
 (let ((?x2154 (* 2.0 l_0_2_17)))
 (let ((?x2803 (* ?x2154 l_0_2_23)))
 (let ((?x3407 (+ (+ (+ (+ (* (* 2.0 l_0_2_16) l_0_2_22) ?x2803) ?x2805) ?x2808) ?x2811)))
 (let ((?x3414 (- (- (- (- (- (- (+ ?x3407 ?x2814) ?x2817) ?x2820) ?x2823) ?x2826) ?x2829) ?x2832)))
 (= ?x3414 0.0)))))))))))))))))
(assert
 (let ((?x2908 (* l_0_2_56 l_0_2_56)))
 (let ((?x2906 (* l_0_2_55 l_0_2_55)))
 (let ((?x2904 (* l_0_2_54 l_0_2_54)))
 (let ((?x2902 (* l_0_2_53 l_0_2_53)))
 (let ((?x2900 (* l_0_2_52 l_0_2_52)))
 (let ((?x2898 (* l_0_2_51 l_0_2_51)))
 (let ((?x2896 (* l_0_2_50 l_0_2_50)))
 (let ((?x2894 (* l_0_2_28 l_0_2_28)))
 (let ((?x2892 (* l_0_2_27 l_0_2_27)))
 (let ((?x2890 (* l_0_2_26 l_0_2_26)))
 (let ((?x2879 (* l_0_2_25 l_0_2_25)))
 (let ((?x2876 (* l_0_2_24 l_0_2_24)))
 (let ((?x3442 (+ (+ (+ (* l_0_2_22 l_0_2_22) (* l_0_2_23 l_0_2_23)) ?x2876) ?x2879)))
 (let ((?x3449 (- (- (- (- (+ (+ (+ ?x3442 ?x2890) ?x2892) ?x2894) ?x2896) ?x2898) ?x2900) ?x2902)))
 (= (- (- (- ?x3449 ?x2904) ?x2906) ?x2908) 0.0))))))))))))))))
(assert
 (let ((?x3565 (- (* (* 2.0 l_0_2_57) l_0_2_58) (* (* 2.0 l_0_2_85) l_0_2_86))))
 (= ?x3565 0.0)))
(assert
 (let ((?x3578 (- (* (* 2.0 l_0_2_57) l_0_2_60) (* (* 2.0 l_0_2_85) l_0_2_88))))
 (= ?x3578 0.0)))
(assert
 (let ((?x3591 (- (* (* 2.0 l_0_2_57) l_0_2_63) (* (* 2.0 l_0_2_85) l_0_2_91))))
 (= ?x3591 0.0)))
(assert
 (let ((?x3604 (- (* (* 2.0 l_0_2_57) l_0_2_67) (* (* 2.0 l_0_2_85) l_0_2_95))))
 (= ?x3604 0.0)))
(assert
 (let ((?x3618 (+ (* (* (- 2.0) l_0_2_100) l_0_2_85) (* (* 2.0 l_0_2_57) l_0_2_72))))
 (= ?x3618 0.0)))
(assert
 (let ((?x3629 (+ (* (* (- 2.0) l_0_2_106) l_0_2_85) (* (* 2.0 l_0_2_57) l_0_2_78))))
 (= ?x3629 0.0)))
(assert
 (let ((?x3644 (* l_0_2_87 l_0_2_87)))
 (let ((?x3642 (* l_0_2_86 l_0_2_86)))
 (let ((?x3641 (+ (* 1.0 (* l_0_2_58 l_0_2_58)) (* 1.0 (* l_0_2_59 l_0_2_59)))))
 (= (- (- ?x3641 ?x3642) ?x3644) 0.0)))))
(assert
 (let ((?x3657 (+ (* (* 2.0 l_0_2_58) l_0_2_60) (* (* 2.0 l_0_2_59) l_0_2_61))))
 (let ((?x3663 (- (- ?x3657 (* (* 2.0 l_0_2_86) l_0_2_88)) (* (* 2.0 l_0_2_87) l_0_2_89))))
 (= ?x3663 0.0))))
(assert
 (let ((?x3685 (+ (* (* 2.0 l_0_2_58) l_0_2_63) (* (* 2.0 l_0_2_59) l_0_2_64))))
 (let ((?x3689 (- (- ?x3685 (* (* 2.0 l_0_2_86) l_0_2_91)) (* (* 2.0 l_0_2_87) l_0_2_92))))
 (= ?x3689 0.0))))
(assert
 (let ((?x3711 (+ (* (* 2.0 l_0_2_58) l_0_2_67) (* (* 2.0 l_0_2_59) l_0_2_68))))
 (let ((?x3715 (- (- ?x3711 (* (* 2.0 l_0_2_86) l_0_2_95)) (* (* 2.0 l_0_2_87) l_0_2_96))))
 (= ?x3715 0.0))))
(assert
 (let ((?x3737 (- (* (* (- 2.0) l_0_2_106) l_0_2_86) (* (* 2.0 l_0_2_107) l_0_2_87))))
 (let ((?x3741 (+ (+ ?x3737 (* (* 2.0 l_0_2_58) l_0_2_78)) (* (* 2.0 l_0_2_59) l_0_2_79))))
 (= ?x3741 0.0))))
(assert
 (let ((?x3770 (* l_0_2_90 l_0_2_90)))
 (let ((?x3768 (* l_0_2_89 l_0_2_89)))
 (let ((?x3766 (* l_0_2_88 l_0_2_88)))
 (let ((?x3762 (+ (* 1.0 (* l_0_2_60 l_0_2_60)) (* 1.0 (* l_0_2_61 l_0_2_61)))))
 (let ((?x3771 (- (- (- (+ ?x3762 (* 1.0 (* l_0_2_62 l_0_2_62))) ?x3766) ?x3768) ?x3770)))
 (= ?x3771 0.0)))))))
(assert
 (let ((?x3786 (+ (* (* 2.0 l_0_2_60) l_0_2_67) (* (* 2.0 l_0_2_61) l_0_2_68))))
 (let ((?x3790 (- (+ ?x3786 (* (* 2.0 l_0_2_62) l_0_2_69)) (* (* 2.0 l_0_2_88) l_0_2_95))))
 (let ((?x3794 (- (- ?x3790 (* (* 2.0 l_0_2_89) l_0_2_96)) (* (* 2.0 l_0_2_90) l_0_2_97))))
 (= ?x3794 0.0)))))
(assert
 (let ((?x3824 (- (* (* (- 2.0) l_0_2_100) l_0_2_88) (* (* 2.0 l_0_2_101) l_0_2_89))))
 (let ((?x3829 (+ (- ?x3824 (* (* 2.0 l_0_2_102) l_0_2_90)) (* (* 2.0 l_0_2_60) l_0_2_72))))
 (let ((?x3833 (+ (+ ?x3829 (* (* 2.0 l_0_2_61) l_0_2_73)) (* (* 2.0 l_0_2_62) l_0_2_74))))
 (= ?x3833 0.0)))))
(assert
 (let ((?x3854 (- (* (* (- 2.0) l_0_2_106) l_0_2_88) (* (* 2.0 l_0_2_107) l_0_2_89))))
 (let ((?x3864 (+ (- ?x3854 (* (* 2.0 l_0_2_108) l_0_2_90)) (* (* 2.0 l_0_2_60) l_0_2_78))))
 (let ((?x3868 (+ (+ ?x3864 (* (* 2.0 l_0_2_61) l_0_2_79)) (* (* 2.0 l_0_2_62) l_0_2_80))))
 (= ?x3868 0.0)))))
(assert
 (let ((?x3910 (* l_0_2_94 l_0_2_94)))
 (let ((?x3908 (* l_0_2_93 l_0_2_93)))
 (let ((?x3906 (* l_0_2_92 l_0_2_92)))
 (let ((?x3904 (* l_0_2_91 l_0_2_91)))
 (let ((?x3897 (+ (* 1.0 (* l_0_2_63 l_0_2_63)) (* 1.0 (* l_0_2_64 l_0_2_64)))))
 (let ((?x3903 (+ (+ ?x3897 (* 1.0 (* l_0_2_65 l_0_2_65))) (* 1.0 (* l_0_2_66 l_0_2_66)))))
 (= (- (- (- (- ?x3903 ?x3904) ?x3906) ?x3908) ?x3910) 0.0))))))))
(assert
 (let ((?x3931 (+ (* (* 2.0 l_0_2_63) l_0_2_67) (* (* 2.0 l_0_2_64) l_0_2_68))))
 (let ((?x3937 (+ (+ ?x3931 (* (* 2.0 l_0_2_65) l_0_2_69)) (* (* 2.0 l_0_2_66) l_0_2_70))))
 (let ((?x3943 (- (- ?x3937 (* (* 2.0 l_0_2_91) l_0_2_95)) (* (* 2.0 l_0_2_92) l_0_2_96))))
 (let ((?x3949 (- (- ?x3943 (* (* 2.0 l_0_2_93) l_0_2_97)) (* (* 2.0 l_0_2_94) l_0_2_98))))
 (= ?x3949 0.0))))))
(assert
 (let ((?x3987 (- (* (* (- 2.0) l_0_2_100) l_0_2_91) (* (* 2.0 l_0_2_101) l_0_2_92))))
 (let ((?x3992 (- (- ?x3987 (* (* 2.0 l_0_2_102) l_0_2_93)) (* (* 2.0 l_0_2_103) l_0_2_94))))
 (let ((?x3996 (+ (+ ?x3992 (* (* 2.0 l_0_2_63) l_0_2_72)) (* (* 2.0 l_0_2_64) l_0_2_73))))
 (let ((?x4000 (+ (+ ?x3996 (* (* 2.0 l_0_2_65) l_0_2_74)) (* (* 2.0 l_0_2_66) l_0_2_75))))
 (= ?x4000 0.0))))))
(assert
 (let ((?x4027 (- (* (* (- 2.0) l_0_2_106) l_0_2_91) (* (* 2.0 l_0_2_107) l_0_2_92))))
 (let ((?x4039 (- (- ?x4027 (* (* 2.0 l_0_2_108) l_0_2_93)) (* (* 2.0 l_0_2_109) l_0_2_94))))
 (let ((?x4043 (+ (+ ?x4039 (* (* 2.0 l_0_2_63) l_0_2_78)) (* (* 2.0 l_0_2_64) l_0_2_79))))
 (let ((?x4047 (+ (+ ?x4043 (* (* 2.0 l_0_2_65) l_0_2_80)) (* (* 2.0 l_0_2_66) l_0_2_81))))
 (= ?x4047 0.0))))))
(assert
 (let ((?x4102 (* l_0_2_99 l_0_2_99)))
 (let ((?x4100 (* l_0_2_98 l_0_2_98)))
 (let ((?x4098 (* l_0_2_97 l_0_2_97)))
 (let ((?x4096 (* l_0_2_96 l_0_2_96)))
 (let ((?x4094 (* l_0_2_95 l_0_2_95)))
 (let ((?x4077 (+ (* 1.0 (* l_0_2_67 l_0_2_67)) (* 1.0 (* l_0_2_68 l_0_2_68)))))
 (let ((?x4090 (+ (+ ?x4077 (* 1.0 (* l_0_2_69 l_0_2_69))) (* 1.0 (* l_0_2_70 l_0_2_70)))))
 (let ((?x4099 (- (- (- (+ ?x4090 (* 1.0 (* l_0_2_71 l_0_2_71))) ?x4094) ?x4096) ?x4098)))
 (= (- (- ?x4099 ?x4100) ?x4102) 0.0))))))))))
(assert
 (let ((?x4124 (- (* (* (- 2.0) l_0_2_100) l_0_2_95) (* (* 2.0 l_0_2_101) l_0_2_96))))
 (let ((?x4128 (- (- ?x4124 (* (* 2.0 l_0_2_102) l_0_2_97)) (* (* 2.0 l_0_2_103) l_0_2_98))))
 (let ((?x4133 (+ (- ?x4128 (* (* 2.0 l_0_2_104) l_0_2_99)) (* (* 2.0 l_0_2_67) l_0_2_72))))
 (let ((?x4137 (+ (+ ?x4133 (* (* 2.0 l_0_2_68) l_0_2_73)) (* (* 2.0 l_0_2_69) l_0_2_74))))
 (let ((?x4141 (+ (+ ?x4137 (* (* 2.0 l_0_2_70) l_0_2_75)) (* (* 2.0 l_0_2_71) l_0_2_76))))
 (= ?x4141 0.0)))))))
(assert
 (let ((?x4192 (* l_0_2_105 l_0_2_105)))
 (let ((?x4190 (* l_0_2_104 l_0_2_104)))
 (let ((?x4188 (* l_0_2_103 l_0_2_103)))
 (let ((?x4178 (* l_0_2_102 l_0_2_102)))
 (let ((?x4179 (- (- (* (- l_0_2_100) l_0_2_100) (* l_0_2_101 l_0_2_101)) ?x4178)))
 (let ((?x4196 (+ (- (- (- ?x4179 ?x4188) ?x4190) ?x4192) (* 1.0 (* l_0_2_72 l_0_2_72)))))
 (let ((?x4202 (+ (+ ?x4196 (* 1.0 (* l_0_2_73 l_0_2_73))) (* 1.0 (* l_0_2_74 l_0_2_74)))))
 (let ((?x4208 (+ (+ ?x4202 (* 1.0 (* l_0_2_75 l_0_2_75))) (* 1.0 (* l_0_2_76 l_0_2_76)))))
 (= (+ ?x4208 (* 1.0 (* l_0_2_77 l_0_2_77))) 0.0))))))))))
(assert
 (let ((?x4241 (- (* (* (- 2.0) l_0_2_100) l_0_2_106) (* (* 2.0 l_0_2_101) l_0_2_107))))
 (let ((?x4245 (- (- ?x4241 (* (* 2.0 l_0_2_102) l_0_2_108)) (* (* 2.0 l_0_2_103) l_0_2_109))))
 (let ((?x4250 (- (- ?x4245 (* (* 2.0 l_0_2_104) l_0_2_110)) (* (* 2.0 l_0_2_105) l_0_2_111))))
 (let ((?x4256 (+ (+ ?x4250 (* (* 2.0 l_0_2_72) l_0_2_78)) (* (* 2.0 l_0_2_73) l_0_2_79))))
 (let ((?x4262 (+ (+ ?x4256 (* (* 2.0 l_0_2_74) l_0_2_80)) (* (* 2.0 l_0_2_75) l_0_2_81))))
 (let ((?x4268 (+ (+ ?x4262 (* (* 2.0 l_0_2_76) l_0_2_82)) (* (* 2.0 l_0_2_77) l_0_2_83))))
 (= ?x4268 0.0))))))))
(assert
 (let ((?x4329 (* l_0_2_112 l_0_2_112)))
 (let ((?x4327 (* l_0_2_111 l_0_2_111)))
 (let ((?x4325 (* l_0_2_110 l_0_2_110)))
 (let ((?x4314 (* l_0_2_109 l_0_2_109)))
 (let ((?x4311 (* l_0_2_108 l_0_2_108)))
 (let ((?x4313 (- (- (* (- l_0_2_106) l_0_2_106) (* l_0_2_107 l_0_2_107)) ?x4311)))
 (let ((?x4333 (+ (- (- (- (- ?x4313 ?x4314) ?x4325) ?x4327) ?x4329) (* 1.0 (* l_0_2_78 l_0_2_78)))))
 (let ((?x4339 (+ (+ ?x4333 (* 1.0 (* l_0_2_79 l_0_2_79))) (* 1.0 (* l_0_2_80 l_0_2_80)))))
 (let ((?x4345 (+ (+ ?x4339 (* 1.0 (* l_0_2_81 l_0_2_81))) (* 1.0 (* l_0_2_82 l_0_2_82)))))
 (let ((?x4351 (+ (+ ?x4345 (* 1.0 (* l_0_2_83 l_0_2_83))) (* 1.0 (* l_0_2_84 l_0_2_84)))))
 (= ?x4351 0.0))))))))))))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_10 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_21 0.0))
(assert
 (>= l_0_2_28 0.0))
(assert
 (>= l_0_2_29 0.0))
(assert
 (>= l_0_2_31 0.0))
(assert
 (>= l_0_2_34 0.0))
(assert
 (>= l_0_2_38 0.0))
(assert
 (>= l_0_2_43 0.0))
(assert
 (>= l_0_2_49 0.0))
(assert
 (>= l_0_2_56 0.0))
(assert
 (>= l_0_2_57 0.0))
(assert
 (>= l_0_2_59 0.0))
(assert
 (>= l_0_2_62 0.0))
(assert
 (>= l_0_2_66 0.0))
(assert
 (>= l_0_2_71 0.0))
(assert
 (>= l_0_2_77 0.0))
(assert
 (>= l_0_2_84 0.0))
(assert
 (>= l_0_2_85 0.0))
(assert
 (>= l_0_2_87 0.0))
(assert
 (>= l_0_2_90 0.0))
(assert
 (>= l_0_2_94 0.0))
(assert
 (>= l_0_2_99 0.0))
(assert
 (>= l_0_2_105 0.0))
(assert
 (>= l_0_2_112 0.0))
(assert
 (let ((?x4419 (* l_0_3_29 l_0_3_29)))
 (let ((?x4418 (- (- (* (- l_0_3_1) l_0_3_1) (* (* 2.0 l_0_3_100) l_0_3_86)) (* (* 2.0 l_0_3_101) l_0_3_87))))
 (let ((?x4426 (- (- (+ ?x4418 ?x4419) (* (* 2.0 l_0_3_58) l_0_3_72)) (* (* 2.0 l_0_3_59) l_0_3_73))))
 (= (+ ?x4426 1.0) 0.0)))))
(assert
 (let ((?x4464 (- (- (- _a_3_) (* (* 2.0 l_0_3_57) l_0_3_60)) (* (* 2.0 l_0_3_85) l_0_3_88))))
 (= ?x4464 0.0)))
(assert
 (let ((?x4487 (- (- (- _a_4_) (* (* 2.0 l_0_3_106) l_0_3_88)) (* (* 2.0 l_0_3_107) l_0_3_89))))
 (let ((?x4493 (- (- ?x4487 (* (* 2.0 l_0_3_108) l_0_3_90)) (* (* 2.0 l_0_3_60) l_0_3_78))))
 (let ((?x4499 (- (- ?x4493 (* (* 2.0 l_0_3_61) l_0_3_79)) (* (* 2.0 l_0_3_62) l_0_3_80))))
 (= (+ ?x4499 1.0) 0.0)))))
(assert
 (let ((?x4545 (- (- (+ (- _a_5_) (* l_0_3_1 l_0_3_1)) (* l_0_3_29 l_0_3_29)) (* (* 2.0 l_0_3_60) l_0_3_63))))
 (let ((?x4549 (- (- ?x4545 (* (* 2.0 l_0_3_61) l_0_3_64)) (* (* 2.0 l_0_3_62) l_0_3_65))))
 (let ((?x4555 (- (- ?x4549 (* (* 2.0 l_0_3_88) l_0_3_91)) (* (* 2.0 l_0_3_89) l_0_3_92))))
 (= (- ?x4555 (* (* 2.0 l_0_3_90) l_0_3_93)) 0.0)))))
(assert
 (let ((?x4419 (* l_0_3_29 l_0_3_29)))
 (let ((?x4606 (- (- (* l_0_3_1 l_0_3_1) (* (* 2.0 l_0_3_106) l_0_3_95)) (* (* 2.0 l_0_3_107) l_0_3_96))))
 (let ((?x4611 (- (- ?x4606 (* (* 2.0 l_0_3_108) l_0_3_97)) (* (* 2.0 l_0_3_109) l_0_3_98))))
 (let ((?x4618 (- (- (- ?x4611 (* (* 2.0 l_0_3_110) l_0_3_99)) ?x4419) (* (* 2.0 l_0_3_67) l_0_3_78))))
 (let ((?x4624 (- (- ?x4618 (* (* 2.0 l_0_3_68) l_0_3_79)) (* (* 2.0 l_0_3_69) l_0_3_80))))
 (let ((?x4630 (- (- ?x4624 (* (* 2.0 l_0_3_70) l_0_3_81)) (* (* 2.0 l_0_3_71) l_0_3_82))))
 (= (- ?x4630 1.0) 0.0))))))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4703 (* ?x4702 l_0_3_30)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_2) ?x4703) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4709 (* ?x4702 l_0_3_32)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_4) ?x4709) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4719 (* ?x4702 l_0_3_35)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_7) ?x4719) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4729 (* ?x4702 l_0_3_39)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_11) ?x4729) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4739 (* ?x4702 l_0_3_44)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_16) ?x4739) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4749 (* ?x4702 l_0_3_50)))
 (= (+ (* (* (- 2.0) l_0_3_1) l_0_3_22) ?x4749) 0.0))))
(assert
 (let ((?x4768 (* l_0_3_31 l_0_3_31)))
 (let ((?x4766 (* l_0_3_30 l_0_3_30)))
 (let ((?x4769 (+ (+ (- (* (- l_0_3_2) l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4766) ?x4768)))
 (= ?x4769 0.0)))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4790 (* ?x4789 l_0_3_33)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4787 (* ?x4786 l_0_3_32)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4784 (* ?x4783 l_0_3_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_2) l_0_3_4) ?x4784) ?x4787) ?x4790) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4813 (* ?x4789 l_0_3_36)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4811 (* ?x4786 l_0_3_35)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4804 (* ?x4783 l_0_3_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_2) l_0_3_7) ?x4804) ?x4811) ?x4813) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4838 (* ?x4789 l_0_3_40)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4836 (* ?x4786 l_0_3_39)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4834 (* ?x4828 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_11) l_0_3_2) ?x4834) ?x4836) ?x4838) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4863 (* ?x4789 l_0_3_45)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4861 (* ?x4786 l_0_3_44)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x4859 (* ?x4853 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_16) l_0_3_2) ?x4859) ?x4861) ?x4863) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4887 (* ?x4789 l_0_3_51)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4885 (* ?x4786 l_0_3_50)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x4878 (* ?x4877 l_0_3_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_3_2) l_0_3_22) ?x4878) ?x4885) ?x4887) 0.0))))))))
(assert
 (let ((?x4914 (* l_0_3_6 l_0_3_6)))
 (let ((?x4912 (* l_0_3_5 l_0_3_5)))
 (let ((?x4910 (* l_0_3_4 l_0_3_4)))
 (let ((?x4908 (* l_0_3_34 l_0_3_34)))
 (let ((?x4911 (- (+ (+ (* l_0_3_32 l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4908) ?x4910)))
 (= (- (- ?x4911 ?x4912) ?x4914) 0.0)))))))
(assert
 (let ((?x4949 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4946 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4943 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4940 (* ?x4939 l_0_3_37)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4937 (* ?x4936 l_0_3_36)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x4934 (* ?x4933 l_0_3_35)))
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4863 (* ?x4789 l_0_3_45)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4861 (* ?x4786 l_0_3_44)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x4859 (* ?x4853 l_0_3_3)))
 (let ((?x4928 (* 2.0 l_0_3_16)))
 (let ((?x4929 (* ?x4928 l_0_3_2)))
 (let ((?x4944 (- (+ (+ (+ (- (- (+ ?x4929 ?x4859) ?x4861) ?x4863) ?x4934) ?x4937) ?x4940) ?x4943)))
 (= (- (- ?x4944 ?x4946) ?x4949) 0.0))))))))))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4996 (* ?x4939 l_0_3_41)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4994 (* ?x4936 l_0_3_40)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x4992 (* ?x4933 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x4990 (* ?x4989 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4987 (* ?x4828 l_0_3_5)))
 (let ((?x4995 (+ (+ (- (- (* (* (- 2.0) l_0_3_11) l_0_3_4) ?x4987) ?x4990) ?x4992) ?x4994)))
 (= (+ ?x4995 ?x4996) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5032 (* ?x4939 l_0_3_46)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5030 (* ?x4936 l_0_3_45)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5028 (* ?x4933 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5026 (* ?x5019 l_0_3_6)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5016 (* ?x4853 l_0_3_5)))
 (let ((?x5031 (+ (+ (- (- (* (* (- 2.0) l_0_3_16) l_0_3_4) ?x5016) ?x5026) ?x5028) ?x5030)))
 (= (+ ?x5031 ?x5032) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5069 (* ?x4939 l_0_3_52)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5067 (* ?x4936 l_0_3_51)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5065 (* ?x4933 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5063 (* ?x5062 l_0_3_6)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5054 (* ?x4877 l_0_3_5)))
 (let ((?x5068 (+ (+ (- (- (* (* (- 2.0) l_0_3_22) l_0_3_4) ?x5054) ?x5063) ?x5065) ?x5067)))
 (= (+ ?x5068 ?x5069) 0.0)))))))))))))
(assert
 (let ((?x5109 (* l_0_3_9 l_0_3_9)))
 (let ((?x5107 (* l_0_3_8 l_0_3_8)))
 (let ((?x5105 (* l_0_3_7 l_0_3_7)))
 (let ((?x5103 (* l_0_3_38 l_0_3_38)))
 (let ((?x5101 (* l_0_3_37 l_0_3_37)))
 (let ((?x5099 (* l_0_3_36 l_0_3_36)))
 (let ((?x5102 (+ (+ (+ (* (- l_0_3_10) l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5099) ?x5101)))
 (= (- (- (- (+ ?x5102 ?x5103) ?x5105) ?x5107) ?x5109) 0.0)))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5145 (* ?x5144 l_0_3_42)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5142 (* ?x5141 l_0_3_41)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5139 (* ?x5138 l_0_3_40)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5136 (* ?x5135 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5133 (* ?x4989 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5131 (* ?x4828 l_0_3_8)))
 (let ((?x5128 (* 2.0 l_0_3_11)))
 (let ((?x5129 (* ?x5128 l_0_3_7)))
 (let ((?x5137 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_14) ?x5129) ?x5131) ?x5133) ?x5136)))
 (= (+ (+ (+ ?x5137 ?x5139) ?x5142) ?x5145) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5192 (* ?x5144 l_0_3_47)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5190 (* ?x5141 l_0_3_46)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5188 (* ?x5138 l_0_3_45)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5186 (* ?x5135 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5184 (* ?x5019 l_0_3_9)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5175 (* ?x4853 l_0_3_8)))
 (let ((?x4928 (* 2.0 l_0_3_16)))
 (let ((?x5171 (* ?x4928 l_0_3_7)))
 (let ((?x5187 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_19) ?x5171) ?x5175) ?x5184) ?x5186)))
 (= (+ (+ (+ ?x5187 ?x5188) ?x5190) ?x5192) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5240 (* ?x5144 l_0_3_53)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5238 (* ?x5141 l_0_3_52)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5236 (* ?x5138 l_0_3_51)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5234 (* ?x5135 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5232 (* ?x5062 l_0_3_9)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5223 (* ?x4877 l_0_3_8)))
 (let ((?x5218 (* 2.0 l_0_3_22)))
 (let ((?x5220 (* ?x5218 l_0_3_7)))
 (let ((?x5235 (+ (- (- (- (* (* (- 2.0) l_0_3_10) l_0_3_25) ?x5220) ?x5223) ?x5232) ?x5234)))
 (= (+ (+ (+ ?x5235 ?x5236) ?x5238) ?x5240) 0.0)))))))))))))))))
(assert
 (let ((?x5292 (* l_0_3_43 l_0_3_43)))
 (let ((?x5290 (* l_0_3_42 l_0_3_42)))
 (let ((?x5288 (* l_0_3_41 l_0_3_41)))
 (let ((?x5286 (* l_0_3_40 l_0_3_40)))
 (let ((?x5284 (* l_0_3_39 l_0_3_39)))
 (let ((?x5282 (* l_0_3_15 l_0_3_15)))
 (let ((?x5280 (* l_0_3_14 l_0_3_14)))
 (let ((?x5271 (* l_0_3_13 l_0_3_13)))
 (let ((?x5281 (- (- (- (* (- l_0_3_11) l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5271) ?x5280)))
 (= (+ (+ (+ (+ (+ (- ?x5281 ?x5282) ?x5284) ?x5286) ?x5288) ?x5290) ?x5292) 0.0)))))))))))
(assert
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5341 (* ?x5340 l_0_3_48)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5338 (* ?x5337 l_0_3_47)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5335 (* ?x5334 l_0_3_46)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5332 (* ?x5331 l_0_3_45)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5329 (* ?x5328 l_0_3_44)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5326 (* ?x5325 l_0_3_20)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5323 (* ?x5322 l_0_3_19)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5320 (* ?x4989 l_0_3_18)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5318 (* ?x4828 l_0_3_17)))
 (let ((?x5327 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_16) ?x5318) ?x5320) ?x5323) ?x5326)))
 (= (+ (+ (+ (+ (+ ?x5327 ?x5329) ?x5332) ?x5335) ?x5338) ?x5341) 0.0)))))))))))))))))))))
(assert
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5404 (* ?x5340 l_0_3_54)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5402 (* ?x5337 l_0_3_53)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5400 (* ?x5334 l_0_3_52)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5398 (* ?x5331 l_0_3_51)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5396 (* ?x5328 l_0_3_50)))
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4863 (* ?x4789 l_0_3_45)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4861 (* ?x4786 l_0_3_44)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x4859 (* ?x4853 l_0_3_3)))
 (let ((?x4928 (* 2.0 l_0_3_16)))
 (let ((?x4929 (* ?x4928 l_0_3_2)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5390 (* ?x5325 l_0_3_26)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5380 (* ?x5322 l_0_3_25)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5377 (* ?x4989 l_0_3_24)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5373 (* ?x4828 l_0_3_23)))
 (let ((?x5391 (- (- (- (- (* (* (- 2.0) l_0_3_11) l_0_3_22) ?x5373) ?x5377) ?x5380) ?x5390)))
 (let ((?x5401 (+ (+ (+ (- (- (+ (+ ?x5391 ?x4929) ?x4859) ?x4861) ?x4863) ?x5396) ?x5398) ?x5400)))
 (= (+ (+ ?x5401 ?x5402) ?x5404) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5472 (* l_0_3_49 l_0_3_49)))
 (let ((?x5470 (* l_0_3_48 l_0_3_48)))
 (let ((?x5468 (* l_0_3_47 l_0_3_47)))
 (let ((?x5466 (* l_0_3_46 l_0_3_46)))
 (let ((?x5464 (* l_0_3_45 l_0_3_45)))
 (let ((?x5462 (* l_0_3_44 l_0_3_44)))
 (let ((?x5460 (* l_0_3_21 l_0_3_21)))
 (let ((?x5458 (* l_0_3_20 l_0_3_20)))
 (let ((?x5456 (* l_0_3_19 l_0_3_19)))
 (let ((?x5454 (* l_0_3_18 l_0_3_18)))
 (let ((?x5457 (- (- (- (* (- l_0_3_16) l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5454) ?x5456)))
 (let ((?x5471 (+ (+ (+ (+ (+ (- (- ?x5457 ?x5458) ?x5460) ?x5462) ?x5464) ?x5466) ?x5468) ?x5470)))
 (= (+ ?x5471 ?x5472) 0.0))))))))))))))
(assert
 (let ((?x5531 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5528 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5525 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5522 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5519 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5516 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5513 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5510 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5507 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5504 (* ?x5019 l_0_3_24)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5502 (* ?x4853 l_0_3_23)))
 (let ((?x5511 (- (- (- (- (* (* (- 2.0) l_0_3_16) l_0_3_22) ?x5502) ?x5504) ?x5507) ?x5510)))
 (let ((?x5532 (+ (+ (+ (+ (+ (+ (- ?x5511 ?x5513) ?x5516) ?x5519) ?x5522) ?x5525) ?x5528) ?x5531)))
 (= ?x5532 0.0)))))))))))))))))
(assert
 (let ((?x5607 (* l_0_3_56 l_0_3_56)))
 (let ((?x5605 (* l_0_3_55 l_0_3_55)))
 (let ((?x5603 (* l_0_3_54 l_0_3_54)))
 (let ((?x5601 (* l_0_3_53 l_0_3_53)))
 (let ((?x5599 (* l_0_3_52 l_0_3_52)))
 (let ((?x5597 (* l_0_3_51 l_0_3_51)))
 (let ((?x5595 (* l_0_3_50 l_0_3_50)))
 (let ((?x5593 (* l_0_3_28 l_0_3_28)))
 (let ((?x5591 (* l_0_3_27 l_0_3_27)))
 (let ((?x5589 (* l_0_3_26 l_0_3_26)))
 (let ((?x5578 (* l_0_3_25 l_0_3_25)))
 (let ((?x5575 (* l_0_3_24 l_0_3_24)))
 (let ((?x5588 (- (- (- (* (- l_0_3_22) l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5575) ?x5578)))
 (let ((?x5602 (+ (+ (+ (+ (- (- (- ?x5588 ?x5589) ?x5591) ?x5593) ?x5595) ?x5597) ?x5599) ?x5601)))
 (= (+ (+ (+ ?x5602 ?x5603) ?x5605) ?x5607) 0.0))))))))))))))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4703 (* ?x4702 l_0_3_30)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x4703) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4709 (* ?x4702 l_0_3_32)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x4709) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4719 (* ?x4702 l_0_3_35)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x4719) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4729 (* ?x4702 l_0_3_39)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x4729) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4739 (* ?x4702 l_0_3_44)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_16) ?x4739) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4749 (* ?x4702 l_0_3_50)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_22) ?x4749) 0.0))))
(assert
 (let ((?x4768 (* l_0_3_31 l_0_3_31)))
 (let ((?x4766 (* l_0_3_30 l_0_3_30)))
 (= (- (- (+ (* l_0_3_2 l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4766) ?x4768) 0.0))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4790 (* ?x4789 l_0_3_33)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4787 (* ?x4786 l_0_3_32)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4784 (* ?x4783 l_0_3_5)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_4) ?x4784) ?x4787) ?x4790) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4813 (* ?x4789 l_0_3_36)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4811 (* ?x4786 l_0_3_35)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4804 (* ?x4783 l_0_3_8)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_7) ?x4804) ?x4811) ?x4813) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4838 (* ?x4789 l_0_3_40)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4836 (* ?x4786 l_0_3_39)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4834 (* ?x4828 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x4834) ?x4836) ?x4838) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4887 (* ?x4789 l_0_3_51)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4885 (* ?x4786 l_0_3_50)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x4878 (* ?x4877 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_22) ?x4878) ?x4885) ?x4887) 0.0))))))))
(assert
 (let ((?x4914 (* l_0_3_6 l_0_3_6)))
 (let ((?x4912 (* l_0_3_5 l_0_3_5)))
 (let ((?x4910 (* l_0_3_4 l_0_3_4)))
 (let ((?x4908 (* l_0_3_34 l_0_3_34)))
 (let ((?x5742 (+ (- (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4908) ?x4910)))
 (= (+ (+ ?x5742 ?x4912) ?x4914) 0.0)))))))
(assert
 (let ((?x4949 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4946 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x4943 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4940 (* ?x4939 l_0_3_37)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4937 (* ?x4936 l_0_3_36)))
 (let ((?x5758 (+ (+ (- (- (* (* (- 2.0) l_0_3_32) l_0_3_35) ?x4937) ?x4940) ?x4943) ?x4946)))
 (= (+ ?x5758 ?x4949) 0.0))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4996 (* ?x4939 l_0_3_41)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4994 (* ?x4936 l_0_3_40)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x4992 (* ?x4933 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x4990 (* ?x4989 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4987 (* ?x4828 l_0_3_5)))
 (let ((?x5776 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x4987) ?x4990) ?x4992) ?x4994)))
 (= (- ?x5776 ?x4996) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5032 (* ?x4939 l_0_3_46)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5030 (* ?x4936 l_0_3_45)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5028 (* ?x4933 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5026 (* ?x5019 l_0_3_6)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5016 (* ?x4853 l_0_3_5)))
 (let ((?x5795 (- (- (+ (+ (* (* 2.0 l_0_3_16) l_0_3_4) ?x5016) ?x5026) ?x5028) ?x5030)))
 (= (- ?x5795 ?x5032) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5069 (* ?x4939 l_0_3_52)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5067 (* ?x4936 l_0_3_51)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5065 (* ?x4933 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5063 (* ?x5062 l_0_3_6)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5054 (* ?x4877 l_0_3_5)))
 (let ((?x5814 (- (- (+ (+ (* (* 2.0 l_0_3_22) l_0_3_4) ?x5054) ?x5063) ?x5065) ?x5067)))
 (= (- ?x5814 ?x5069) 0.0)))))))))))))
(assert
 (let ((?x5109 (* l_0_3_9 l_0_3_9)))
 (let ((?x5107 (* l_0_3_8 l_0_3_8)))
 (let ((?x5105 (* l_0_3_7 l_0_3_7)))
 (let ((?x5103 (* l_0_3_38 l_0_3_38)))
 (let ((?x5101 (* l_0_3_37 l_0_3_37)))
 (let ((?x5099 (* l_0_3_36 l_0_3_36)))
 (let ((?x5831 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5099) ?x5101)))
 (= (+ (+ (+ (- ?x5831 ?x5103) ?x5105) ?x5107) ?x5109) 0.0)))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5145 (* ?x5144 l_0_3_42)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5142 (* ?x5141 l_0_3_41)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5139 (* ?x5138 l_0_3_40)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5136 (* ?x5135 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5133 (* ?x4989 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5131 (* ?x4828 l_0_3_8)))
 (let ((?x5128 (* 2.0 l_0_3_11)))
 (let ((?x5129 (* ?x5128 l_0_3_7)))
 (let ((?x5854 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x5129) ?x5131) ?x5133) ?x5136)))
 (= (- (- (- ?x5854 ?x5139) ?x5142) ?x5145) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5192 (* ?x5144 l_0_3_47)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5190 (* ?x5141 l_0_3_46)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5188 (* ?x5138 l_0_3_45)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5186 (* ?x5135 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5184 (* ?x5019 l_0_3_9)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5175 (* ?x4853 l_0_3_8)))
 (let ((?x4928 (* 2.0 l_0_3_16)))
 (let ((?x5171 (* ?x4928 l_0_3_7)))
 (let ((?x5879 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_19) ?x5171) ?x5175) ?x5184) ?x5186)))
 (= (- (- (- ?x5879 ?x5188) ?x5190) ?x5192) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5240 (* ?x5144 l_0_3_53)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5238 (* ?x5141 l_0_3_52)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5236 (* ?x5138 l_0_3_51)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5234 (* ?x5135 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5232 (* ?x5062 l_0_3_9)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5223 (* ?x4877 l_0_3_8)))
 (let ((?x5218 (* 2.0 l_0_3_22)))
 (let ((?x5220 (* ?x5218 l_0_3_7)))
 (let ((?x5904 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_25) ?x5220) ?x5223) ?x5232) ?x5234)))
 (= (- (- (- ?x5904 ?x5236) ?x5238) ?x5240) 0.0)))))))))))))))))
(assert
 (let ((?x5292 (* l_0_3_43 l_0_3_43)))
 (let ((?x5290 (* l_0_3_42 l_0_3_42)))
 (let ((?x5288 (* l_0_3_41 l_0_3_41)))
 (let ((?x5286 (* l_0_3_40 l_0_3_40)))
 (let ((?x5284 (* l_0_3_39 l_0_3_39)))
 (let ((?x5282 (* l_0_3_15 l_0_3_15)))
 (let ((?x5280 (* l_0_3_14 l_0_3_14)))
 (let ((?x5271 (* l_0_3_13 l_0_3_13)))
 (let ((?x5927 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5271) ?x5280)))
 (= (- (- (- (- (- (+ ?x5927 ?x5282) ?x5284) ?x5286) ?x5288) ?x5290) ?x5292) 0.0)))))))))))
(assert
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5341 (* ?x5340 l_0_3_48)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5338 (* ?x5337 l_0_3_47)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5335 (* ?x5334 l_0_3_46)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5332 (* ?x5331 l_0_3_45)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5329 (* ?x5328 l_0_3_44)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5326 (* ?x5325 l_0_3_20)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5323 (* ?x5322 l_0_3_19)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5320 (* ?x4989 l_0_3_18)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5318 (* ?x4828 l_0_3_17)))
 (let ((?x5949 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_16) ?x5318) ?x5320) ?x5323) ?x5326)))
 (= (- (- (- (- (- ?x5949 ?x5329) ?x5332) ?x5335) ?x5338) ?x5341) 0.0)))))))))))))))))))))
(assert
 (let ((?x4949 (* (* 2.0 l_0_3_6) l_0_3_9)))
 (let ((?x4946 (* (* 2.0 l_0_3_5) l_0_3_8)))
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5404 (* ?x5340 l_0_3_54)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5402 (* ?x5337 l_0_3_53)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5400 (* ?x5334 l_0_3_52)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5398 (* ?x5331 l_0_3_51)))
 (let ((?x4943 (* (* 2.0 l_0_3_4) l_0_3_7)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5396 (* ?x5328 l_0_3_50)))
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4940 (* ?x4939 l_0_3_37)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4937 (* ?x4936 l_0_3_36)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x4934 (* ?x4933 l_0_3_35)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5390 (* ?x5325 l_0_3_26)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5380 (* ?x5322 l_0_3_25)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5377 (* ?x4989 l_0_3_24)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5373 (* ?x4828 l_0_3_23)))
 (let ((?x5980 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_22) ?x5373) ?x5377) ?x5380) ?x5390)))
 (let ((?x5987 (- (- (+ (- (- (- (- ?x5980 ?x4934) ?x4937) ?x4940) ?x5396) ?x4943) ?x5398) ?x5400)))
 (= (+ (+ (- (- ?x5987 ?x5402) ?x5404) ?x4946) ?x4949) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x5472 (* l_0_3_49 l_0_3_49)))
 (let ((?x5470 (* l_0_3_48 l_0_3_48)))
 (let ((?x5468 (* l_0_3_47 l_0_3_47)))
 (let ((?x5466 (* l_0_3_46 l_0_3_46)))
 (let ((?x5464 (* l_0_3_45 l_0_3_45)))
 (let ((?x5462 (* l_0_3_44 l_0_3_44)))
 (let ((?x5460 (* l_0_3_21 l_0_3_21)))
 (let ((?x5458 (* l_0_3_20 l_0_3_20)))
 (let ((?x5456 (* l_0_3_19 l_0_3_19)))
 (let ((?x5454 (* l_0_3_18 l_0_3_18)))
 (let ((?x6027 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5454) ?x5456)))
 (let ((?x6034 (- (- (- (- (- (+ (+ ?x6027 ?x5458) ?x5460) ?x5462) ?x5464) ?x5466) ?x5468) ?x5470)))
 (= (- ?x6034 ?x5472) 0.0))))))))))))))
(assert
 (let ((?x5531 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5528 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5525 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5522 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5519 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5516 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5513 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5510 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5507 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5504 (* ?x5019 l_0_3_24)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5502 (* ?x4853 l_0_3_23)))
 (let ((?x6053 (+ (+ (+ (+ (* (* 2.0 l_0_3_16) l_0_3_22) ?x5502) ?x5504) ?x5507) ?x5510)))
 (let ((?x6060 (- (- (- (- (- (- (+ ?x6053 ?x5513) ?x5516) ?x5519) ?x5522) ?x5525) ?x5528) ?x5531)))
 (= ?x6060 0.0)))))))))))))))))
(assert
 (let ((?x5607 (* l_0_3_56 l_0_3_56)))
 (let ((?x5605 (* l_0_3_55 l_0_3_55)))
 (let ((?x5603 (* l_0_3_54 l_0_3_54)))
 (let ((?x5601 (* l_0_3_53 l_0_3_53)))
 (let ((?x5599 (* l_0_3_52 l_0_3_52)))
 (let ((?x5597 (* l_0_3_51 l_0_3_51)))
 (let ((?x5595 (* l_0_3_50 l_0_3_50)))
 (let ((?x5593 (* l_0_3_28 l_0_3_28)))
 (let ((?x5591 (* l_0_3_27 l_0_3_27)))
 (let ((?x5589 (* l_0_3_26 l_0_3_26)))
 (let ((?x5578 (* l_0_3_25 l_0_3_25)))
 (let ((?x5575 (* l_0_3_24 l_0_3_24)))
 (let ((?x6088 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5575) ?x5578)))
 (let ((?x6095 (- (- (- (- (+ (+ (+ ?x6088 ?x5589) ?x5591) ?x5593) ?x5595) ?x5597) ?x5599) ?x5601)))
 (= (- (- (- ?x6095 ?x5603) ?x5605) ?x5607) 0.0))))))))))))))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4703 (* ?x4702 l_0_3_30)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_2) ?x4703) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4709 (* ?x4702 l_0_3_32)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_4) ?x4709) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4719 (* ?x4702 l_0_3_35)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_7) ?x4719) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4729 (* ?x4702 l_0_3_39)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_11) ?x4729) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4739 (* ?x4702 l_0_3_44)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_16) ?x4739) 0.0))))
(assert
 (let ((?x4702 (* 2.0 l_0_3_29)))
 (let ((?x4749 (* ?x4702 l_0_3_50)))
 (= (- (* (* 2.0 l_0_3_1) l_0_3_22) ?x4749) 0.0))))
(assert
 (let ((?x4768 (* l_0_3_31 l_0_3_31)))
 (let ((?x4766 (* l_0_3_30 l_0_3_30)))
 (= (- (- (+ (* l_0_3_2 l_0_3_2) (* l_0_3_3 l_0_3_3)) ?x4766) ?x4768) 0.0))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4790 (* ?x4789 l_0_3_33)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4787 (* ?x4786 l_0_3_32)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4784 (* ?x4783 l_0_3_5)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_4) ?x4784) ?x4787) ?x4790) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4813 (* ?x4789 l_0_3_36)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4811 (* ?x4786 l_0_3_35)))
 (let ((?x4783 (* 2.0 l_0_3_3)))
 (let ((?x4804 (* ?x4783 l_0_3_8)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_7) ?x4804) ?x4811) ?x4813) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4838 (* ?x4789 l_0_3_40)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4836 (* ?x4786 l_0_3_39)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4834 (* ?x4828 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_11) l_0_3_2) ?x4834) ?x4836) ?x4838) 0.0))))))))
(assert
 (let ((?x4789 (* 2.0 l_0_3_31)))
 (let ((?x4887 (* ?x4789 l_0_3_51)))
 (let ((?x4786 (* 2.0 l_0_3_30)))
 (let ((?x4885 (* ?x4786 l_0_3_50)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x4878 (* ?x4877 l_0_3_3)))
 (= (- (- (+ (* (* 2.0 l_0_3_2) l_0_3_22) ?x4878) ?x4885) ?x4887) 0.0))))))))
(assert
 (let ((?x4914 (* l_0_3_6 l_0_3_6)))
 (let ((?x4912 (* l_0_3_5 l_0_3_5)))
 (let ((?x4910 (* l_0_3_4 l_0_3_4)))
 (let ((?x4908 (* l_0_3_34 l_0_3_34)))
 (let ((?x5742 (+ (- (- (* (- l_0_3_32) l_0_3_32) (* l_0_3_33 l_0_3_33)) ?x4908) ?x4910)))
 (= (+ (+ ?x5742 ?x4912) ?x4914) 0.0)))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x4996 (* ?x4939 l_0_3_41)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x4994 (* ?x4936 l_0_3_40)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x4992 (* ?x4933 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x4990 (* ?x4989 l_0_3_6)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x4987 (* ?x4828 l_0_3_5)))
 (let ((?x5776 (- (- (+ (+ (* (* 2.0 l_0_3_11) l_0_3_4) ?x4987) ?x4990) ?x4992) ?x4994)))
 (= (- ?x5776 ?x4996) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5032 (* ?x4939 l_0_3_46)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5030 (* ?x4936 l_0_3_45)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5028 (* ?x4933 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5026 (* ?x5019 l_0_3_6)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5016 (* ?x4853 l_0_3_5)))
 (let ((?x5795 (- (- (+ (+ (* (* 2.0 l_0_3_16) l_0_3_4) ?x5016) ?x5026) ?x5028) ?x5030)))
 (= (- ?x5795 ?x5032) 0.0)))))))))))))
(assert
 (let ((?x4939 (* 2.0 l_0_3_34)))
 (let ((?x5069 (* ?x4939 l_0_3_52)))
 (let ((?x4936 (* 2.0 l_0_3_33)))
 (let ((?x5067 (* ?x4936 l_0_3_51)))
 (let ((?x4933 (* 2.0 l_0_3_32)))
 (let ((?x5065 (* ?x4933 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5063 (* ?x5062 l_0_3_6)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5054 (* ?x4877 l_0_3_5)))
 (let ((?x5814 (- (- (+ (+ (* (* 2.0 l_0_3_22) l_0_3_4) ?x5054) ?x5063) ?x5065) ?x5067)))
 (= (- ?x5814 ?x5069) 0.0)))))))))))))
(assert
 (let ((?x5109 (* l_0_3_9 l_0_3_9)))
 (let ((?x5107 (* l_0_3_8 l_0_3_8)))
 (let ((?x5105 (* l_0_3_7 l_0_3_7)))
 (let ((?x5103 (* l_0_3_38 l_0_3_38)))
 (let ((?x5101 (* l_0_3_37 l_0_3_37)))
 (let ((?x5099 (* l_0_3_36 l_0_3_36)))
 (let ((?x5831 (- (- (- (* l_0_3_10 l_0_3_10) (* l_0_3_35 l_0_3_35)) ?x5099) ?x5101)))
 (= (+ (+ (+ (- ?x5831 ?x5103) ?x5105) ?x5107) ?x5109) 0.0)))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5145 (* ?x5144 l_0_3_42)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5142 (* ?x5141 l_0_3_41)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5139 (* ?x5138 l_0_3_40)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5136 (* ?x5135 l_0_3_39)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5133 (* ?x4989 l_0_3_9)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5131 (* ?x4828 l_0_3_8)))
 (let ((?x5128 (* 2.0 l_0_3_11)))
 (let ((?x5129 (* ?x5128 l_0_3_7)))
 (let ((?x5854 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_14) ?x5129) ?x5131) ?x5133) ?x5136)))
 (= (- (- (- ?x5854 ?x5139) ?x5142) ?x5145) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5192 (* ?x5144 l_0_3_47)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5190 (* ?x5141 l_0_3_46)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5188 (* ?x5138 l_0_3_45)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5186 (* ?x5135 l_0_3_44)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5184 (* ?x5019 l_0_3_9)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5175 (* ?x4853 l_0_3_8)))
 (let ((?x4928 (* 2.0 l_0_3_16)))
 (let ((?x5171 (* ?x4928 l_0_3_7)))
 (let ((?x5879 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_19) ?x5171) ?x5175) ?x5184) ?x5186)))
 (= (- (- (- ?x5879 ?x5188) ?x5190) ?x5192) 0.0)))))))))))))))))
(assert
 (let ((?x5144 (* 2.0 l_0_3_38)))
 (let ((?x5240 (* ?x5144 l_0_3_53)))
 (let ((?x5141 (* 2.0 l_0_3_37)))
 (let ((?x5238 (* ?x5141 l_0_3_52)))
 (let ((?x5138 (* 2.0 l_0_3_36)))
 (let ((?x5236 (* ?x5138 l_0_3_51)))
 (let ((?x5135 (* 2.0 l_0_3_35)))
 (let ((?x5234 (* ?x5135 l_0_3_50)))
 (let ((?x5062 (* 2.0 l_0_3_24)))
 (let ((?x5232 (* ?x5062 l_0_3_9)))
 (let ((?x4877 (* 2.0 l_0_3_23)))
 (let ((?x5223 (* ?x4877 l_0_3_8)))
 (let ((?x5218 (* 2.0 l_0_3_22)))
 (let ((?x5220 (* ?x5218 l_0_3_7)))
 (let ((?x5904 (- (+ (+ (+ (* (* 2.0 l_0_3_10) l_0_3_25) ?x5220) ?x5223) ?x5232) ?x5234)))
 (= (- (- (- ?x5904 ?x5236) ?x5238) ?x5240) 0.0)))))))))))))))))
(assert
 (let ((?x5292 (* l_0_3_43 l_0_3_43)))
 (let ((?x5290 (* l_0_3_42 l_0_3_42)))
 (let ((?x5288 (* l_0_3_41 l_0_3_41)))
 (let ((?x5286 (* l_0_3_40 l_0_3_40)))
 (let ((?x5284 (* l_0_3_39 l_0_3_39)))
 (let ((?x5282 (* l_0_3_15 l_0_3_15)))
 (let ((?x5280 (* l_0_3_14 l_0_3_14)))
 (let ((?x5271 (* l_0_3_13 l_0_3_13)))
 (let ((?x5927 (+ (+ (+ (* l_0_3_11 l_0_3_11) (* l_0_3_12 l_0_3_12)) ?x5271) ?x5280)))
 (= (- (- (- (- (- (+ ?x5927 ?x5282) ?x5284) ?x5286) ?x5288) ?x5290) ?x5292) 0.0)))))))))))
(assert
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5341 (* ?x5340 l_0_3_48)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5338 (* ?x5337 l_0_3_47)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5335 (* ?x5334 l_0_3_46)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5332 (* ?x5331 l_0_3_45)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5329 (* ?x5328 l_0_3_44)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5326 (* ?x5325 l_0_3_20)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5323 (* ?x5322 l_0_3_19)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5320 (* ?x4989 l_0_3_18)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5318 (* ?x4828 l_0_3_17)))
 (let ((?x5949 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_16) ?x5318) ?x5320) ?x5323) ?x5326)))
 (= (- (- (- (- (- ?x5949 ?x5329) ?x5332) ?x5335) ?x5338) ?x5341) 0.0)))))))))))))))))))))
(assert
 (let ((?x5340 (* 2.0 l_0_3_43)))
 (let ((?x5404 (* ?x5340 l_0_3_54)))
 (let ((?x5337 (* 2.0 l_0_3_42)))
 (let ((?x5402 (* ?x5337 l_0_3_53)))
 (let ((?x5334 (* 2.0 l_0_3_41)))
 (let ((?x5400 (* ?x5334 l_0_3_52)))
 (let ((?x5331 (* 2.0 l_0_3_40)))
 (let ((?x5398 (* ?x5331 l_0_3_51)))
 (let ((?x5328 (* 2.0 l_0_3_39)))
 (let ((?x5396 (* ?x5328 l_0_3_50)))
 (let ((?x5325 (* 2.0 l_0_3_15)))
 (let ((?x5390 (* ?x5325 l_0_3_26)))
 (let ((?x5322 (* 2.0 l_0_3_14)))
 (let ((?x5380 (* ?x5322 l_0_3_25)))
 (let ((?x4989 (* 2.0 l_0_3_13)))
 (let ((?x5377 (* ?x4989 l_0_3_24)))
 (let ((?x4828 (* 2.0 l_0_3_12)))
 (let ((?x5373 (* ?x4828 l_0_3_23)))
 (let ((?x5980 (+ (+ (+ (+ (* (* 2.0 l_0_3_11) l_0_3_22) ?x5373) ?x5377) ?x5380) ?x5390)))
 (= (- (- (- (- (- ?x5980 ?x5396) ?x5398) ?x5400) ?x5402) ?x5404) 0.0)))))))))))))))))))))
(assert
 (let ((?x5472 (* l_0_3_49 l_0_3_49)))
 (let ((?x5470 (* l_0_3_48 l_0_3_48)))
 (let ((?x5468 (* l_0_3_47 l_0_3_47)))
 (let ((?x5466 (* l_0_3_46 l_0_3_46)))
 (let ((?x5464 (* l_0_3_45 l_0_3_45)))
 (let ((?x5462 (* l_0_3_44 l_0_3_44)))
 (let ((?x5460 (* l_0_3_21 l_0_3_21)))
 (let ((?x5458 (* l_0_3_20 l_0_3_20)))
 (let ((?x5456 (* l_0_3_19 l_0_3_19)))
 (let ((?x5454 (* l_0_3_18 l_0_3_18)))
 (let ((?x6027 (+ (+ (+ (* l_0_3_16 l_0_3_16) (* l_0_3_17 l_0_3_17)) ?x5454) ?x5456)))
 (let ((?x6034 (- (- (- (- (- (+ (+ ?x6027 ?x5458) ?x5460) ?x5462) ?x5464) ?x5466) ?x5468) ?x5470)))
 (= (- ?x6034 ?x5472) 0.0))))))))))))))
(assert
 (let ((?x5531 (* (* 2.0 l_0_3_49) l_0_3_55)))
 (let ((?x5528 (* (* 2.0 l_0_3_48) l_0_3_54)))
 (let ((?x5525 (* (* 2.0 l_0_3_47) l_0_3_53)))
 (let ((?x5522 (* (* 2.0 l_0_3_46) l_0_3_52)))
 (let ((?x5519 (* (* 2.0 l_0_3_45) l_0_3_51)))
 (let ((?x5516 (* (* 2.0 l_0_3_44) l_0_3_50)))
 (let ((?x5513 (* (* 2.0 l_0_3_21) l_0_3_27)))
 (let ((?x5510 (* (* 2.0 l_0_3_20) l_0_3_26)))
 (let ((?x5507 (* (* 2.0 l_0_3_19) l_0_3_25)))
 (let ((?x5019 (* 2.0 l_0_3_18)))
 (let ((?x5504 (* ?x5019 l_0_3_24)))
 (let ((?x4853 (* 2.0 l_0_3_17)))
 (let ((?x5502 (* ?x4853 l_0_3_23)))
 (let ((?x6053 (+ (+ (+ (+ (* (* 2.0 l_0_3_16) l_0_3_22) ?x5502) ?x5504) ?x5507) ?x5510)))
 (let ((?x6060 (- (- (- (- (- (- (+ ?x6053 ?x5513) ?x5516) ?x5519) ?x5522) ?x5525) ?x5528) ?x5531)))
 (= ?x6060 0.0)))))))))))))))))
(assert
 (let ((?x5607 (* l_0_3_56 l_0_3_56)))
 (let ((?x5605 (* l_0_3_55 l_0_3_55)))
 (let ((?x5603 (* l_0_3_54 l_0_3_54)))
 (let ((?x5601 (* l_0_3_53 l_0_3_53)))
 (let ((?x5599 (* l_0_3_52 l_0_3_52)))
 (let ((?x5597 (* l_0_3_51 l_0_3_51)))
 (let ((?x5595 (* l_0_3_50 l_0_3_50)))
 (let ((?x5593 (* l_0_3_28 l_0_3_28)))
 (let ((?x5591 (* l_0_3_27 l_0_3_27)))
 (let ((?x5589 (* l_0_3_26 l_0_3_26)))
 (let ((?x5578 (* l_0_3_25 l_0_3_25)))
 (let ((?x5575 (* l_0_3_24 l_0_3_24)))
 (let ((?x6088 (+ (+ (+ (* l_0_3_22 l_0_3_22) (* l_0_3_23 l_0_3_23)) ?x5575) ?x5578)))
 (let ((?x6095 (- (- (- (- (+ (+ (+ ?x6088 ?x5589) ?x5591) ?x5593) ?x5595) ?x5597) ?x5599) ?x5601)))
 (= (- (- (- ?x6095 ?x5603) ?x5605) ?x5607) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_3_57) l_0_3_57) (* l_0_3_85 l_0_3_85)) 0.0))
(assert
 (let ((?x6146 (- (* (* (- 2.0) l_0_3_57) l_0_3_58) (* (* 2.0 l_0_3_85) l_0_3_86))))
 (= ?x6146 0.0)))
(assert
 (let ((?x6161 (- (* (* (- 2.0) l_0_3_57) l_0_3_63) (* (* 2.0 l_0_3_85) l_0_3_91))))
 (= ?x6161 0.0)))
(assert
 (let ((?x6176 (- (* (* (- 2.0) l_0_3_57) l_0_3_67) (* (* 2.0 l_0_3_85) l_0_3_95))))
 (= ?x6176 0.0)))
(assert
 (let ((?x6192 (- (* (* (- 2.0) l_0_3_100) l_0_3_85) (* (* 2.0 l_0_3_57) l_0_3_72))))
 (= ?x6192 0.0)))
(assert
 (let ((?x6208 (- (* (* (- 2.0) l_0_3_106) l_0_3_85) (* (* 2.0 l_0_3_57) l_0_3_78))))
 (= ?x6208 0.0)))
(assert
 (let ((?x6228 (* l_0_3_87 l_0_3_87)))
 (let ((?x6226 (* l_0_3_86 l_0_3_86)))
 (let ((?x6225 (- (* (* (- 1.0) l_0_3_58) l_0_3_58) (* (* 1.0 l_0_3_59) l_0_3_59))))
 (= (- (- ?x6225 ?x6226) ?x6228) 0.0)))))
(assert
 (let ((?x6247 (- (* (* (- 2.0) l_0_3_58) l_0_3_60) (* (* 2.0 l_0_3_59) l_0_3_61))))
 (let ((?x6253 (- (- ?x6247 (* (* 2.0 l_0_3_86) l_0_3_88)) (* (* 2.0 l_0_3_87) l_0_3_89))))
 (= ?x6253 0.0))))
(assert
 (let ((?x6280 (- (* (* (- 2.0) l_0_3_58) l_0_3_63) (* (* 2.0 l_0_3_59) l_0_3_64))))
 (let ((?x6284 (- (- ?x6280 (* (* 2.0 l_0_3_86) l_0_3_91)) (* (* 2.0 l_0_3_87) l_0_3_92))))
 (= ?x6284 0.0))))
(assert
 (let ((?x6311 (- (* (* (- 2.0) l_0_3_58) l_0_3_67) (* (* 2.0 l_0_3_59) l_0_3_68))))
 (let ((?x6315 (- (- ?x6311 (* (* 2.0 l_0_3_86) l_0_3_95)) (* (* 2.0 l_0_3_87) l_0_3_96))))
 (= ?x6315 0.0))))
(assert
 (let ((?x6342 (- (* (* (- 2.0) l_0_3_106) l_0_3_86) (* (* 2.0 l_0_3_107) l_0_3_87))))
 (let ((?x6346 (- (- ?x6342 (* (* 2.0 l_0_3_58) l_0_3_78)) (* (* 2.0 l_0_3_59) l_0_3_79))))
 (= ?x6346 0.0))))
(assert
 (let ((?x6383 (* l_0_3_90 l_0_3_90)))
 (let ((?x6381 (* l_0_3_89 l_0_3_89)))
 (let ((?x6379 (* l_0_3_88 l_0_3_88)))
 (let ((?x6375 (- (* (* (- 1.0) l_0_3_60) l_0_3_60) (* (* 1.0 l_0_3_61) l_0_3_61))))
 (let ((?x6384 (- (- (- (- ?x6375 (* (* 1.0 l_0_3_62) l_0_3_62)) ?x6379) ?x6381) ?x6383)))
 (= ?x6384 0.0)))))))
(assert
 (let ((?x6409 (- (* (* (- 2.0) l_0_3_60) l_0_3_67) (* (* 2.0 l_0_3_61) l_0_3_68))))
 (let ((?x6413 (- (- ?x6409 (* (* 2.0 l_0_3_62) l_0_3_69)) (* (* 2.0 l_0_3_88) l_0_3_95))))
 (let ((?x6417 (- (- ?x6413 (* (* 2.0 l_0_3_89) l_0_3_96)) (* (* 2.0 l_0_3_90) l_0_3_97))))
 (= ?x6417 0.0)))))
(assert
 (let ((?x6456 (- (* (* (- 2.0) l_0_3_100) l_0_3_88) (* (* 2.0 l_0_3_101) l_0_3_89))))
 (let ((?x6461 (- (- ?x6456 (* (* 2.0 l_0_3_102) l_0_3_90)) (* (* 2.0 l_0_3_60) l_0_3_72))))
 (let ((?x6465 (- (- ?x6461 (* (* 2.0 l_0_3_61) l_0_3_73)) (* (* 2.0 l_0_3_62) l_0_3_74))))
 (= ?x6465 0.0)))))
(assert
 (let ((?x6519 (* l_0_3_94 l_0_3_94)))
 (let ((?x6517 (* l_0_3_93 l_0_3_93)))
 (let ((?x6515 (* l_0_3_92 l_0_3_92)))
 (let ((?x6513 (* l_0_3_91 l_0_3_91)))
 (let ((?x6506 (- (* (* (- 1.0) l_0_3_63) l_0_3_63) (* (* 1.0 l_0_3_64) l_0_3_64))))
 (let ((?x6512 (- (- ?x6506 (* (* 1.0 l_0_3_65) l_0_3_65)) (* (* 1.0 l_0_3_66) l_0_3_66))))
 (= (- (- (- (- ?x6512 ?x6513) ?x6515) ?x6517) ?x6519) 0.0))))))))
(assert
 (let ((?x6553 (- (* (* (- 2.0) l_0_3_63) l_0_3_67) (* (* 2.0 l_0_3_64) l_0_3_68))))
 (let ((?x6559 (- (- ?x6553 (* (* 2.0 l_0_3_65) l_0_3_69)) (* (* 2.0 l_0_3_66) l_0_3_70))))
 (let ((?x6565 (- (- ?x6559 (* (* 2.0 l_0_3_91) l_0_3_95)) (* (* 2.0 l_0_3_92) l_0_3_96))))
 (let ((?x6571 (- (- ?x6565 (* (* 2.0 l_0_3_93) l_0_3_97)) (* (* 2.0 l_0_3_94) l_0_3_98))))
 (= ?x6571 0.0))))))
(assert
 (let ((?x6622 (- (* (* (- 2.0) l_0_3_100) l_0_3_91) (* (* 2.0 l_0_3_101) l_0_3_92))))
 (let ((?x6627 (- (- ?x6622 (* (* 2.0 l_0_3_102) l_0_3_93)) (* (* 2.0 l_0_3_103) l_0_3_94))))
 (let ((?x6632 (- (- ?x6627 (* (* 2.0 l_0_3_63) l_0_3_72)) (* (* 2.0 l_0_3_64) l_0_3_73))))
 (let ((?x6636 (- (- ?x6632 (* (* 2.0 l_0_3_65) l_0_3_74)) (* (* 2.0 l_0_3_66) l_0_3_75))))
 (= ?x6636 0.0))))))
(assert
 (let ((?x6687 (- (* (* (- 2.0) l_0_3_106) l_0_3_91) (* (* 2.0 l_0_3_107) l_0_3_92))))
 (let ((?x6691 (- (- ?x6687 (* (* 2.0 l_0_3_108) l_0_3_93)) (* (* 2.0 l_0_3_109) l_0_3_94))))
 (let ((?x6695 (- (- ?x6691 (* (* 2.0 l_0_3_63) l_0_3_78)) (* (* 2.0 l_0_3_64) l_0_3_79))))
 (let ((?x6699 (- (- ?x6695 (* (* 2.0 l_0_3_65) l_0_3_80)) (* (* 2.0 l_0_3_66) l_0_3_81))))
 (= ?x6699 0.0))))))
(assert
 (let ((?x6770 (* l_0_3_99 l_0_3_99)))
 (let ((?x6768 (* l_0_3_98 l_0_3_98)))
 (let ((?x6766 (* l_0_3_97 l_0_3_97)))
 (let ((?x6764 (* l_0_3_96 l_0_3_96)))
 (let ((?x6762 (* l_0_3_95 l_0_3_95)))
 (let ((?x6752 (- (* (* (- 1.0) l_0_3_67) l_0_3_67) (* (* 1.0 l_0_3_68) l_0_3_68))))
 (let ((?x6758 (- (- ?x6752 (* (* 1.0 l_0_3_69) l_0_3_69)) (* (* 1.0 l_0_3_70) l_0_3_70))))
 (let ((?x6767 (- (- (- (- ?x6758 (* (* 1.0 l_0_3_71) l_0_3_71)) ?x6762) ?x6764) ?x6766)))
 (= (- (- ?x6767 ?x6768) ?x6770) 0.0))))))))))
(assert
 (let ((?x6809 (- (* (* (- 2.0) l_0_3_100) l_0_3_95) (* (* 2.0 l_0_3_101) l_0_3_96))))
 (let ((?x6813 (- (- ?x6809 (* (* 2.0 l_0_3_102) l_0_3_97)) (* (* 2.0 l_0_3_103) l_0_3_98))))
 (let ((?x6818 (- (- ?x6813 (* (* 2.0 l_0_3_104) l_0_3_99)) (* (* 2.0 l_0_3_67) l_0_3_72))))
 (let ((?x6822 (- (- ?x6818 (* (* 2.0 l_0_3_68) l_0_3_73)) (* (* 2.0 l_0_3_69) l_0_3_74))))
 (let ((?x6826 (- (- ?x6822 (* (* 2.0 l_0_3_70) l_0_3_75)) (* (* 2.0 l_0_3_71) l_0_3_76))))
 (= ?x6826 0.0)))))))
(assert
 (let ((?x6897 (* l_0_3_105 l_0_3_105)))
 (let ((?x6895 (* l_0_3_104 l_0_3_104)))
 (let ((?x6893 (* l_0_3_103 l_0_3_103)))
 (let ((?x6891 (* l_0_3_102 l_0_3_102)))
 (let ((?x6892 (- (- (* (- l_0_3_100) l_0_3_100) (* l_0_3_101 l_0_3_101)) ?x6891)))
 (let ((?x6901 (- (- (- (- ?x6892 ?x6893) ?x6895) ?x6897) (* (* 1.0 l_0_3_72) l_0_3_72))))
 (let ((?x6907 (- (- ?x6901 (* (* 1.0 l_0_3_73) l_0_3_73)) (* (* 1.0 l_0_3_74) l_0_3_74))))
 (let ((?x6913 (- (- ?x6907 (* (* 1.0 l_0_3_75) l_0_3_75)) (* (* 1.0 l_0_3_76) l_0_3_76))))
 (= (- ?x6913 (* (* 1.0 l_0_3_77) l_0_3_77)) 0.0))))))))))
(assert
 (let ((?x6964 (- (* (* (- 2.0) l_0_3_100) l_0_3_106) (* (* 2.0 l_0_3_101) l_0_3_107))))
 (let ((?x6968 (- (- ?x6964 (* (* 2.0 l_0_3_102) l_0_3_108)) (* (* 2.0 l_0_3_103) l_0_3_109))))
 (let ((?x6973 (- (- ?x6968 (* (* 2.0 l_0_3_104) l_0_3_110)) (* (* 2.0 l_0_3_105) l_0_3_111))))
 (let ((?x6979 (- (- ?x6973 (* (* 2.0 l_0_3_72) l_0_3_78)) (* (* 2.0 l_0_3_73) l_0_3_79))))
 (let ((?x6985 (- (- ?x6979 (* (* 2.0 l_0_3_74) l_0_3_80)) (* (* 2.0 l_0_3_75) l_0_3_81))))
 (let ((?x6991 (- (- ?x6985 (* (* 2.0 l_0_3_76) l_0_3_82)) (* (* 2.0 l_0_3_77) l_0_3_83))))
 (= ?x6991 0.0))))))))
(assert
 (let ((?x7076 (* l_0_3_112 l_0_3_112)))
 (let ((?x7074 (* l_0_3_111 l_0_3_111)))
 (let ((?x7072 (* l_0_3_110 l_0_3_110)))
 (let ((?x7070 (* l_0_3_109 l_0_3_109)))
 (let ((?x7068 (* l_0_3_108 l_0_3_108)))
 (let ((?x7069 (- (- (* (- l_0_3_106) l_0_3_106) (* l_0_3_107 l_0_3_107)) ?x7068)))
 (let ((?x7080 (- (- (- (- (- ?x7069 ?x7070) ?x7072) ?x7074) ?x7076) (* (* 1.0 l_0_3_78) l_0_3_78))))
 (let ((?x7086 (- (- ?x7080 (* (* 1.0 l_0_3_79) l_0_3_79)) (* (* 1.0 l_0_3_80) l_0_3_80))))
 (let ((?x7092 (- (- ?x7086 (* (* 1.0 l_0_3_81) l_0_3_81)) (* (* 1.0 l_0_3_82) l_0_3_82))))
 (let ((?x7098 (- (- ?x7092 (* (* 1.0 l_0_3_83) l_0_3_83)) (* (* 1.0 l_0_3_84) l_0_3_84))))
 (= ?x7098 0.0))))))))))))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_10 0.0))
(assert
 (>= l_0_3_15 0.0))
(assert
 (>= l_0_3_21 0.0))
(assert
 (>= l_0_3_28 0.0))
(assert
 (>= l_0_3_29 0.0))
(assert
 (>= l_0_3_31 0.0))
(assert
 (>= l_0_3_34 0.0))
(assert
 (>= l_0_3_38 0.0))
(assert
 (>= l_0_3_43 0.0))
(assert
 (>= l_0_3_49 0.0))
(assert
 (>= l_0_3_56 0.0))
(assert
 (>= l_0_3_57 0.0))
(assert
 (>= l_0_3_59 0.0))
(assert
 (>= l_0_3_62 0.0))
(assert
 (>= l_0_3_66 0.0))
(assert
 (>= l_0_3_71 0.0))
(assert
 (>= l_0_3_77 0.0))
(assert
 (>= l_0_3_84 0.0))
(assert
 (>= l_0_3_85 0.0))
(assert
 (>= l_0_3_87 0.0))
(assert
 (>= l_0_3_90 0.0))
(assert
 (>= l_0_3_94 0.0))
(assert
 (>= l_0_3_99 0.0))
(assert
 (>= l_0_3_105 0.0))
(assert
 (>= l_0_3_112 0.0))
(assert
 (let ((?x7184 (- (- _a_3_ (* (* 2.0 l_0_4_113) l_0_4_116)) (* (* 2.0 l_0_4_57) l_0_4_60))))
 (= (- ?x7184 (* (* 2.0 l_0_4_85) l_0_4_88)) 0.0)))
(assert
 (let ((?x7213 (- (- _a_4_ (* (* 2.0 l_0_4_106) l_0_4_88)) (* (* 2.0 l_0_4_107) l_0_4_89))))
 (let ((?x7219 (- (- ?x7213 (* (* 2.0 l_0_4_108) l_0_4_90)) (* (* 2.0 l_0_4_116) l_0_4_134))))
 (let ((?x7225 (- (- ?x7219 (* (* 2.0 l_0_4_117) l_0_4_135)) (* (* 2.0 l_0_4_118) l_0_4_136))))
 (let ((?x7231 (- (- ?x7225 (* (* 2.0 l_0_4_60) l_0_4_78)) (* (* 2.0 l_0_4_61) l_0_4_79))))
 (= (- (- ?x7231 (* (* 2.0 l_0_4_62) l_0_4_80)) 1.0) 0.0))))))
(assert
 (let ((?x7302 (* l_0_4_29 l_0_4_29)))
 (let ((?x7297 (- (+ _a_5_ (* l_0_4_1 l_0_4_1)) (* (* 2.0 l_0_4_116) l_0_4_119))))
 (let ((?x7301 (- (- ?x7297 (* (* 2.0 l_0_4_117) l_0_4_120)) (* (* 2.0 l_0_4_118) l_0_4_121))))
 (let ((?x7307 (- (- (- ?x7301 ?x7302) (* (* 2.0 l_0_4_60) l_0_4_63)) (* (* 2.0 l_0_4_61) l_0_4_64))))
 (let ((?x7312 (- (- ?x7307 (* (* 2.0 l_0_4_62) l_0_4_65)) (* (* 2.0 l_0_4_88) l_0_4_91))))
 (let ((?x7318 (- (- ?x7312 (* (* 2.0 l_0_4_89) l_0_4_92)) (* (* 2.0 l_0_4_90) l_0_4_93))))
 (= ?x7318 0.0))))))))
(assert
 (let ((?x7302 (* l_0_4_29 l_0_4_29)))
 (let ((?x7381 (- (- (* l_0_4_1 l_0_4_1) (* (* 2.0 l_0_4_106) l_0_4_95)) (* (* 2.0 l_0_4_107) l_0_4_96))))
 (let ((?x7386 (- (- ?x7381 (* (* 2.0 l_0_4_108) l_0_4_97)) (* (* 2.0 l_0_4_109) l_0_4_98))))
 (let ((?x7392 (- (- ?x7386 (* (* 2.0 l_0_4_110) l_0_4_99)) (* (* 2.0 l_0_4_123) l_0_4_134))))
 (let ((?x7398 (- (- ?x7392 (* (* 2.0 l_0_4_124) l_0_4_135)) (* (* 2.0 l_0_4_125) l_0_4_136))))
 (let ((?x7404 (- (- ?x7398 (* (* 2.0 l_0_4_126) l_0_4_137)) (* (* 2.0 l_0_4_127) l_0_4_138))))
 (let ((?x7411 (- (- (- ?x7404 ?x7302) (* (* 2.0 l_0_4_67) l_0_4_78)) (* (* 2.0 l_0_4_68) l_0_4_79))))
 (let ((?x7417 (- (- ?x7411 (* (* 2.0 l_0_4_69) l_0_4_80)) (* (* 2.0 l_0_4_70) l_0_4_81))))
 (= (+ (- ?x7417 (* (* 2.0 l_0_4_71) l_0_4_82)) 1.0) 0.0))))))))))
(assert
 (let ((?x7302 (* l_0_4_29 l_0_4_29)))
 (let ((?x7523 (- (- (* (- l_0_4_1) l_0_4_1) (* (* 2.0 l_0_4_100) l_0_4_86)) (* (* 2.0 l_0_4_101) l_0_4_87))))
 (let ((?x7529 (- (- ?x7523 (* (* 2.0 l_0_4_114) l_0_4_128)) (* (* 2.0 l_0_4_115) l_0_4_129))))
 (let ((?x7536 (- (- (+ ?x7529 ?x7302) (* (* 2.0 l_0_4_58) l_0_4_72)) (* (* 2.0 l_0_4_59) l_0_4_73))))
 (= (- ?x7536 1.0) 0.0))))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7585 (* ?x7584 l_0_4_30)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_2) ?x7585) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7591 (* ?x7584 l_0_4_32)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_4) ?x7591) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7601 (* ?x7584 l_0_4_35)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_7) ?x7601) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7611 (* ?x7584 l_0_4_39)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_11) ?x7611) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7621 (* ?x7584 l_0_4_44)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_16) ?x7621) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7631 (* ?x7584 l_0_4_50)))
 (= (+ (* (* (- 2.0) l_0_4_1) l_0_4_22) ?x7631) 0.0))))
(assert
 (let ((?x7650 (* l_0_4_31 l_0_4_31)))
 (let ((?x7648 (* l_0_4_30 l_0_4_30)))
 (let ((?x7651 (+ (+ (- (* (- l_0_4_2) l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7648) ?x7650)))
 (= ?x7651 0.0)))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7672 (* ?x7671 l_0_4_33)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7669 (* ?x7668 l_0_4_32)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7666 (* ?x7665 l_0_4_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_2) l_0_4_4) ?x7666) ?x7669) ?x7672) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7671 l_0_4_36)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7668 l_0_4_35)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7686 (* ?x7665 l_0_4_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_2) l_0_4_7) ?x7686) ?x7693) ?x7695) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7720 (* ?x7671 l_0_4_40)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7718 (* ?x7668 l_0_4_39)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7716 (* ?x7710 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_11) l_0_4_2) ?x7716) ?x7718) ?x7720) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7745 (* ?x7671 l_0_4_45)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7743 (* ?x7668 l_0_4_44)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7741 (* ?x7735 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_16) l_0_4_2) ?x7741) ?x7743) ?x7745) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7769 (* ?x7671 l_0_4_51)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7767 (* ?x7668 l_0_4_50)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7760 (* ?x7759 l_0_4_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_4_2) l_0_4_22) ?x7760) ?x7767) ?x7769) 0.0))))))))
(assert
 (let ((?x7796 (* l_0_4_6 l_0_4_6)))
 (let ((?x7794 (* l_0_4_5 l_0_4_5)))
 (let ((?x7792 (* l_0_4_4 l_0_4_4)))
 (let ((?x7790 (* l_0_4_34 l_0_4_34)))
 (let ((?x7793 (- (+ (+ (* l_0_4_32 l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7790) ?x7792)))
 (= (- (- ?x7793 ?x7794) ?x7796) 0.0)))))))
(assert
 (let ((?x7831 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7828 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7825 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7822 (* ?x7821 l_0_4_37)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7819 (* ?x7818 l_0_4_36)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7816 (* ?x7815 l_0_4_35)))
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7745 (* ?x7671 l_0_4_45)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7743 (* ?x7668 l_0_4_44)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7741 (* ?x7735 l_0_4_3)))
 (let ((?x7810 (* 2.0 l_0_4_16)))
 (let ((?x7811 (* ?x7810 l_0_4_2)))
 (let ((?x7826 (- (+ (+ (+ (- (- (+ ?x7811 ?x7741) ?x7743) ?x7745) ?x7816) ?x7819) ?x7822) ?x7825)))
 (= (- (- ?x7826 ?x7828) ?x7831) 0.0))))))))))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7878 (* ?x7821 l_0_4_41)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7876 (* ?x7818 l_0_4_40)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7874 (* ?x7815 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x7872 (* ?x7871 l_0_4_6)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7869 (* ?x7710 l_0_4_5)))
 (let ((?x7877 (+ (+ (- (- (* (* (- 2.0) l_0_4_11) l_0_4_4) ?x7869) ?x7872) ?x7874) ?x7876)))
 (= (+ ?x7877 ?x7878) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7914 (* ?x7821 l_0_4_46)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7912 (* ?x7818 l_0_4_45)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7910 (* ?x7815 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x7908 (* ?x7901 l_0_4_6)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7898 (* ?x7735 l_0_4_5)))
 (let ((?x7913 (+ (+ (- (- (* (* (- 2.0) l_0_4_16) l_0_4_4) ?x7898) ?x7908) ?x7910) ?x7912)))
 (= (+ ?x7913 ?x7914) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7951 (* ?x7821 l_0_4_52)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7949 (* ?x7818 l_0_4_51)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7947 (* ?x7815 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x7945 (* ?x7944 l_0_4_6)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7936 (* ?x7759 l_0_4_5)))
 (let ((?x7950 (+ (+ (- (- (* (* (- 2.0) l_0_4_22) l_0_4_4) ?x7936) ?x7945) ?x7947) ?x7949)))
 (= (+ ?x7950 ?x7951) 0.0)))))))))))))
(assert
 (let ((?x7991 (* l_0_4_9 l_0_4_9)))
 (let ((?x7989 (* l_0_4_8 l_0_4_8)))
 (let ((?x7987 (* l_0_4_7 l_0_4_7)))
 (let ((?x7985 (* l_0_4_38 l_0_4_38)))
 (let ((?x7983 (* l_0_4_37 l_0_4_37)))
 (let ((?x7981 (* l_0_4_36 l_0_4_36)))
 (let ((?x7984 (+ (+ (+ (* (- l_0_4_10) l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7981) ?x7983)))
 (= (- (- (- (+ ?x7984 ?x7985) ?x7987) ?x7989) ?x7991) 0.0)))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8027 (* ?x8026 l_0_4_42)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8024 (* ?x8023 l_0_4_41)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8021 (* ?x8020 l_0_4_40)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8018 (* ?x8017 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8015 (* ?x7871 l_0_4_9)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8013 (* ?x7710 l_0_4_8)))
 (let ((?x8010 (* 2.0 l_0_4_11)))
 (let ((?x8011 (* ?x8010 l_0_4_7)))
 (let ((?x8019 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_14) ?x8011) ?x8013) ?x8015) ?x8018)))
 (= (+ (+ (+ ?x8019 ?x8021) ?x8024) ?x8027) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8074 (* ?x8026 l_0_4_47)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8072 (* ?x8023 l_0_4_46)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8070 (* ?x8020 l_0_4_45)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8068 (* ?x8017 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8066 (* ?x7901 l_0_4_9)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8057 (* ?x7735 l_0_4_8)))
 (let ((?x7810 (* 2.0 l_0_4_16)))
 (let ((?x8053 (* ?x7810 l_0_4_7)))
 (let ((?x8069 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_19) ?x8053) ?x8057) ?x8066) ?x8068)))
 (= (+ (+ (+ ?x8069 ?x8070) ?x8072) ?x8074) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8122 (* ?x8026 l_0_4_53)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8120 (* ?x8023 l_0_4_52)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8118 (* ?x8020 l_0_4_51)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8116 (* ?x8017 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x8114 (* ?x7944 l_0_4_9)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x8105 (* ?x7759 l_0_4_8)))
 (let ((?x8100 (* 2.0 l_0_4_22)))
 (let ((?x8102 (* ?x8100 l_0_4_7)))
 (let ((?x8117 (+ (- (- (- (* (* (- 2.0) l_0_4_10) l_0_4_25) ?x8102) ?x8105) ?x8114) ?x8116)))
 (= (+ (+ (+ ?x8117 ?x8118) ?x8120) ?x8122) 0.0)))))))))))))))))
(assert
 (let ((?x8174 (* l_0_4_43 l_0_4_43)))
 (let ((?x8172 (* l_0_4_42 l_0_4_42)))
 (let ((?x8170 (* l_0_4_41 l_0_4_41)))
 (let ((?x8168 (* l_0_4_40 l_0_4_40)))
 (let ((?x8166 (* l_0_4_39 l_0_4_39)))
 (let ((?x8164 (* l_0_4_15 l_0_4_15)))
 (let ((?x8162 (* l_0_4_14 l_0_4_14)))
 (let ((?x8153 (* l_0_4_13 l_0_4_13)))
 (let ((?x8163 (- (- (- (* (- l_0_4_11) l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8153) ?x8162)))
 (= (+ (+ (+ (+ (+ (- ?x8163 ?x8164) ?x8166) ?x8168) ?x8170) ?x8172) ?x8174) 0.0)))))))))))
(assert
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8223 (* ?x8222 l_0_4_48)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8219 l_0_4_47)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8217 (* ?x8216 l_0_4_46)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8214 (* ?x8213 l_0_4_45)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8211 (* ?x8210 l_0_4_44)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8208 (* ?x8207 l_0_4_20)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8205 (* ?x8204 l_0_4_19)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8202 (* ?x7871 l_0_4_18)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8200 (* ?x7710 l_0_4_17)))
 (let ((?x8209 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_16) ?x8200) ?x8202) ?x8205) ?x8208)))
 (= (+ (+ (+ (+ (+ ?x8209 ?x8211) ?x8214) ?x8217) ?x8220) ?x8223) 0.0)))))))))))))))))))))
(assert
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8286 (* ?x8222 l_0_4_54)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8284 (* ?x8219 l_0_4_53)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8282 (* ?x8216 l_0_4_52)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8280 (* ?x8213 l_0_4_51)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8278 (* ?x8210 l_0_4_50)))
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7745 (* ?x7671 l_0_4_45)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7743 (* ?x7668 l_0_4_44)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7741 (* ?x7735 l_0_4_3)))
 (let ((?x7810 (* 2.0 l_0_4_16)))
 (let ((?x7811 (* ?x7810 l_0_4_2)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8272 (* ?x8207 l_0_4_26)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8262 (* ?x8204 l_0_4_25)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8259 (* ?x7871 l_0_4_24)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8255 (* ?x7710 l_0_4_23)))
 (let ((?x8273 (- (- (- (- (* (* (- 2.0) l_0_4_11) l_0_4_22) ?x8255) ?x8259) ?x8262) ?x8272)))
 (let ((?x8283 (+ (+ (+ (- (- (+ (+ ?x8273 ?x7811) ?x7741) ?x7743) ?x7745) ?x8278) ?x8280) ?x8282)))
 (= (+ (+ ?x8283 ?x8284) ?x8286) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x8354 (* l_0_4_49 l_0_4_49)))
 (let ((?x8352 (* l_0_4_48 l_0_4_48)))
 (let ((?x8350 (* l_0_4_47 l_0_4_47)))
 (let ((?x8348 (* l_0_4_46 l_0_4_46)))
 (let ((?x8346 (* l_0_4_45 l_0_4_45)))
 (let ((?x8344 (* l_0_4_44 l_0_4_44)))
 (let ((?x8342 (* l_0_4_21 l_0_4_21)))
 (let ((?x8340 (* l_0_4_20 l_0_4_20)))
 (let ((?x8338 (* l_0_4_19 l_0_4_19)))
 (let ((?x8336 (* l_0_4_18 l_0_4_18)))
 (let ((?x8339 (- (- (- (* (- l_0_4_16) l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8336) ?x8338)))
 (let ((?x8353 (+ (+ (+ (+ (+ (- (- ?x8339 ?x8340) ?x8342) ?x8344) ?x8346) ?x8348) ?x8350) ?x8352)))
 (= (+ ?x8353 ?x8354) 0.0))))))))))))))
(assert
 (let ((?x8413 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8410 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8407 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8404 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8401 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8398 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8395 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8392 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8389 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8386 (* ?x7901 l_0_4_24)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8384 (* ?x7735 l_0_4_23)))
 (let ((?x8393 (- (- (- (- (* (* (- 2.0) l_0_4_16) l_0_4_22) ?x8384) ?x8386) ?x8389) ?x8392)))
 (let ((?x8414 (+ (+ (+ (+ (+ (+ (- ?x8393 ?x8395) ?x8398) ?x8401) ?x8404) ?x8407) ?x8410) ?x8413)))
 (= ?x8414 0.0)))))))))))))))))
(assert
 (let ((?x8489 (* l_0_4_56 l_0_4_56)))
 (let ((?x8487 (* l_0_4_55 l_0_4_55)))
 (let ((?x8485 (* l_0_4_54 l_0_4_54)))
 (let ((?x8483 (* l_0_4_53 l_0_4_53)))
 (let ((?x8481 (* l_0_4_52 l_0_4_52)))
 (let ((?x8479 (* l_0_4_51 l_0_4_51)))
 (let ((?x8477 (* l_0_4_50 l_0_4_50)))
 (let ((?x8475 (* l_0_4_28 l_0_4_28)))
 (let ((?x8473 (* l_0_4_27 l_0_4_27)))
 (let ((?x8471 (* l_0_4_26 l_0_4_26)))
 (let ((?x8460 (* l_0_4_25 l_0_4_25)))
 (let ((?x8457 (* l_0_4_24 l_0_4_24)))
 (let ((?x8470 (- (- (- (* (- l_0_4_22) l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8457) ?x8460)))
 (let ((?x8484 (+ (+ (+ (+ (- (- (- ?x8470 ?x8471) ?x8473) ?x8475) ?x8477) ?x8479) ?x8481) ?x8483)))
 (= (+ (+ (+ ?x8484 ?x8485) ?x8487) ?x8489) 0.0))))))))))))))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7585 (* ?x7584 l_0_4_30)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x7585) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7591 (* ?x7584 l_0_4_32)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x7591) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7601 (* ?x7584 l_0_4_35)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x7601) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7611 (* ?x7584 l_0_4_39)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x7611) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7621 (* ?x7584 l_0_4_44)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_16) ?x7621) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7631 (* ?x7584 l_0_4_50)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_22) ?x7631) 0.0))))
(assert
 (let ((?x7650 (* l_0_4_31 l_0_4_31)))
 (let ((?x7648 (* l_0_4_30 l_0_4_30)))
 (= (- (- (+ (* l_0_4_2 l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7648) ?x7650) 0.0))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7672 (* ?x7671 l_0_4_33)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7669 (* ?x7668 l_0_4_32)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7666 (* ?x7665 l_0_4_5)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_4) ?x7666) ?x7669) ?x7672) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7671 l_0_4_36)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7668 l_0_4_35)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7686 (* ?x7665 l_0_4_8)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_7) ?x7686) ?x7693) ?x7695) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7720 (* ?x7671 l_0_4_40)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7718 (* ?x7668 l_0_4_39)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7716 (* ?x7710 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x7716) ?x7718) ?x7720) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7769 (* ?x7671 l_0_4_51)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7767 (* ?x7668 l_0_4_50)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7760 (* ?x7759 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_22) ?x7760) ?x7767) ?x7769) 0.0))))))))
(assert
 (let ((?x7796 (* l_0_4_6 l_0_4_6)))
 (let ((?x7794 (* l_0_4_5 l_0_4_5)))
 (let ((?x7792 (* l_0_4_4 l_0_4_4)))
 (let ((?x7790 (* l_0_4_34 l_0_4_34)))
 (let ((?x8624 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7790) ?x7792)))
 (= (+ (+ ?x8624 ?x7794) ?x7796) 0.0)))))))
(assert
 (let ((?x7831 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7828 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x7825 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7822 (* ?x7821 l_0_4_37)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7819 (* ?x7818 l_0_4_36)))
 (let ((?x8640 (+ (+ (- (- (* (* (- 2.0) l_0_4_32) l_0_4_35) ?x7819) ?x7822) ?x7825) ?x7828)))
 (= (+ ?x8640 ?x7831) 0.0))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7878 (* ?x7821 l_0_4_41)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7876 (* ?x7818 l_0_4_40)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7874 (* ?x7815 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x7872 (* ?x7871 l_0_4_6)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7869 (* ?x7710 l_0_4_5)))
 (let ((?x8658 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x7869) ?x7872) ?x7874) ?x7876)))
 (= (- ?x8658 ?x7878) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7914 (* ?x7821 l_0_4_46)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7912 (* ?x7818 l_0_4_45)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7910 (* ?x7815 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x7908 (* ?x7901 l_0_4_6)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7898 (* ?x7735 l_0_4_5)))
 (let ((?x8677 (- (- (+ (+ (* (* 2.0 l_0_4_16) l_0_4_4) ?x7898) ?x7908) ?x7910) ?x7912)))
 (= (- ?x8677 ?x7914) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7951 (* ?x7821 l_0_4_52)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7949 (* ?x7818 l_0_4_51)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7947 (* ?x7815 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x7945 (* ?x7944 l_0_4_6)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7936 (* ?x7759 l_0_4_5)))
 (let ((?x8696 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x7936) ?x7945) ?x7947) ?x7949)))
 (= (- ?x8696 ?x7951) 0.0)))))))))))))
(assert
 (let ((?x7991 (* l_0_4_9 l_0_4_9)))
 (let ((?x7989 (* l_0_4_8 l_0_4_8)))
 (let ((?x7987 (* l_0_4_7 l_0_4_7)))
 (let ((?x7985 (* l_0_4_38 l_0_4_38)))
 (let ((?x7983 (* l_0_4_37 l_0_4_37)))
 (let ((?x7981 (* l_0_4_36 l_0_4_36)))
 (let ((?x8713 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7981) ?x7983)))
 (= (+ (+ (+ (- ?x8713 ?x7985) ?x7987) ?x7989) ?x7991) 0.0)))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8027 (* ?x8026 l_0_4_42)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8024 (* ?x8023 l_0_4_41)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8021 (* ?x8020 l_0_4_40)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8018 (* ?x8017 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8015 (* ?x7871 l_0_4_9)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8013 (* ?x7710 l_0_4_8)))
 (let ((?x8010 (* 2.0 l_0_4_11)))
 (let ((?x8011 (* ?x8010 l_0_4_7)))
 (let ((?x8736 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x8011) ?x8013) ?x8015) ?x8018)))
 (= (- (- (- ?x8736 ?x8021) ?x8024) ?x8027) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8074 (* ?x8026 l_0_4_47)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8072 (* ?x8023 l_0_4_46)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8070 (* ?x8020 l_0_4_45)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8068 (* ?x8017 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8066 (* ?x7901 l_0_4_9)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8057 (* ?x7735 l_0_4_8)))
 (let ((?x7810 (* 2.0 l_0_4_16)))
 (let ((?x8053 (* ?x7810 l_0_4_7)))
 (let ((?x8761 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_19) ?x8053) ?x8057) ?x8066) ?x8068)))
 (= (- (- (- ?x8761 ?x8070) ?x8072) ?x8074) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8122 (* ?x8026 l_0_4_53)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8120 (* ?x8023 l_0_4_52)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8118 (* ?x8020 l_0_4_51)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8116 (* ?x8017 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x8114 (* ?x7944 l_0_4_9)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x8105 (* ?x7759 l_0_4_8)))
 (let ((?x8100 (* 2.0 l_0_4_22)))
 (let ((?x8102 (* ?x8100 l_0_4_7)))
 (let ((?x8786 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_25) ?x8102) ?x8105) ?x8114) ?x8116)))
 (= (- (- (- ?x8786 ?x8118) ?x8120) ?x8122) 0.0)))))))))))))))))
(assert
 (let ((?x8174 (* l_0_4_43 l_0_4_43)))
 (let ((?x8172 (* l_0_4_42 l_0_4_42)))
 (let ((?x8170 (* l_0_4_41 l_0_4_41)))
 (let ((?x8168 (* l_0_4_40 l_0_4_40)))
 (let ((?x8166 (* l_0_4_39 l_0_4_39)))
 (let ((?x8164 (* l_0_4_15 l_0_4_15)))
 (let ((?x8162 (* l_0_4_14 l_0_4_14)))
 (let ((?x8153 (* l_0_4_13 l_0_4_13)))
 (let ((?x8809 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8153) ?x8162)))
 (= (- (- (- (- (- (+ ?x8809 ?x8164) ?x8166) ?x8168) ?x8170) ?x8172) ?x8174) 0.0)))))))))))
(assert
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8223 (* ?x8222 l_0_4_48)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8219 l_0_4_47)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8217 (* ?x8216 l_0_4_46)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8214 (* ?x8213 l_0_4_45)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8211 (* ?x8210 l_0_4_44)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8208 (* ?x8207 l_0_4_20)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8205 (* ?x8204 l_0_4_19)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8202 (* ?x7871 l_0_4_18)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8200 (* ?x7710 l_0_4_17)))
 (let ((?x8831 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x8200) ?x8202) ?x8205) ?x8208)))
 (= (- (- (- (- (- ?x8831 ?x8211) ?x8214) ?x8217) ?x8220) ?x8223) 0.0)))))))))))))))))))))
(assert
 (let ((?x7831 (* (* 2.0 l_0_4_6) l_0_4_9)))
 (let ((?x7828 (* (* 2.0 l_0_4_5) l_0_4_8)))
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8286 (* ?x8222 l_0_4_54)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8284 (* ?x8219 l_0_4_53)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8282 (* ?x8216 l_0_4_52)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8280 (* ?x8213 l_0_4_51)))
 (let ((?x7825 (* (* 2.0 l_0_4_4) l_0_4_7)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8278 (* ?x8210 l_0_4_50)))
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7822 (* ?x7821 l_0_4_37)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7819 (* ?x7818 l_0_4_36)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7816 (* ?x7815 l_0_4_35)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8272 (* ?x8207 l_0_4_26)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8262 (* ?x8204 l_0_4_25)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8259 (* ?x7871 l_0_4_24)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8255 (* ?x7710 l_0_4_23)))
 (let ((?x8862 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x8255) ?x8259) ?x8262) ?x8272)))
 (let ((?x8869 (- (- (+ (- (- (- (- ?x8862 ?x7816) ?x7819) ?x7822) ?x8278) ?x7825) ?x8280) ?x8282)))
 (= (+ (+ (- (- ?x8869 ?x8284) ?x8286) ?x7828) ?x7831) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8354 (* l_0_4_49 l_0_4_49)))
 (let ((?x8352 (* l_0_4_48 l_0_4_48)))
 (let ((?x8350 (* l_0_4_47 l_0_4_47)))
 (let ((?x8348 (* l_0_4_46 l_0_4_46)))
 (let ((?x8346 (* l_0_4_45 l_0_4_45)))
 (let ((?x8344 (* l_0_4_44 l_0_4_44)))
 (let ((?x8342 (* l_0_4_21 l_0_4_21)))
 (let ((?x8340 (* l_0_4_20 l_0_4_20)))
 (let ((?x8338 (* l_0_4_19 l_0_4_19)))
 (let ((?x8336 (* l_0_4_18 l_0_4_18)))
 (let ((?x8909 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8336) ?x8338)))
 (let ((?x8916 (- (- (- (- (- (+ (+ ?x8909 ?x8340) ?x8342) ?x8344) ?x8346) ?x8348) ?x8350) ?x8352)))
 (= (- ?x8916 ?x8354) 0.0))))))))))))))
(assert
 (let ((?x8413 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8410 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8407 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8404 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8401 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8398 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8395 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8392 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8389 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8386 (* ?x7901 l_0_4_24)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8384 (* ?x7735 l_0_4_23)))
 (let ((?x8935 (+ (+ (+ (+ (* (* 2.0 l_0_4_16) l_0_4_22) ?x8384) ?x8386) ?x8389) ?x8392)))
 (let ((?x8942 (- (- (- (- (- (- (+ ?x8935 ?x8395) ?x8398) ?x8401) ?x8404) ?x8407) ?x8410) ?x8413)))
 (= ?x8942 0.0)))))))))))))))))
(assert
 (let ((?x8489 (* l_0_4_56 l_0_4_56)))
 (let ((?x8487 (* l_0_4_55 l_0_4_55)))
 (let ((?x8485 (* l_0_4_54 l_0_4_54)))
 (let ((?x8483 (* l_0_4_53 l_0_4_53)))
 (let ((?x8481 (* l_0_4_52 l_0_4_52)))
 (let ((?x8479 (* l_0_4_51 l_0_4_51)))
 (let ((?x8477 (* l_0_4_50 l_0_4_50)))
 (let ((?x8475 (* l_0_4_28 l_0_4_28)))
 (let ((?x8473 (* l_0_4_27 l_0_4_27)))
 (let ((?x8471 (* l_0_4_26 l_0_4_26)))
 (let ((?x8460 (* l_0_4_25 l_0_4_25)))
 (let ((?x8457 (* l_0_4_24 l_0_4_24)))
 (let ((?x8970 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8457) ?x8460)))
 (let ((?x8977 (- (- (- (- (+ (+ (+ ?x8970 ?x8471) ?x8473) ?x8475) ?x8477) ?x8479) ?x8481) ?x8483)))
 (= (- (- (- ?x8977 ?x8485) ?x8487) ?x8489) 0.0))))))))))))))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7585 (* ?x7584 l_0_4_30)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_2) ?x7585) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7591 (* ?x7584 l_0_4_32)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_4) ?x7591) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7601 (* ?x7584 l_0_4_35)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_7) ?x7601) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7611 (* ?x7584 l_0_4_39)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_11) ?x7611) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7621 (* ?x7584 l_0_4_44)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_16) ?x7621) 0.0))))
(assert
 (let ((?x7584 (* 2.0 l_0_4_29)))
 (let ((?x7631 (* ?x7584 l_0_4_50)))
 (= (- (* (* 2.0 l_0_4_1) l_0_4_22) ?x7631) 0.0))))
(assert
 (let ((?x7650 (* l_0_4_31 l_0_4_31)))
 (let ((?x7648 (* l_0_4_30 l_0_4_30)))
 (= (- (- (+ (* l_0_4_2 l_0_4_2) (* l_0_4_3 l_0_4_3)) ?x7648) ?x7650) 0.0))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7672 (* ?x7671 l_0_4_33)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7669 (* ?x7668 l_0_4_32)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7666 (* ?x7665 l_0_4_5)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_4) ?x7666) ?x7669) ?x7672) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7695 (* ?x7671 l_0_4_36)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7693 (* ?x7668 l_0_4_35)))
 (let ((?x7665 (* 2.0 l_0_4_3)))
 (let ((?x7686 (* ?x7665 l_0_4_8)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_7) ?x7686) ?x7693) ?x7695) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7720 (* ?x7671 l_0_4_40)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7718 (* ?x7668 l_0_4_39)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7716 (* ?x7710 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_11) l_0_4_2) ?x7716) ?x7718) ?x7720) 0.0))))))))
(assert
 (let ((?x7671 (* 2.0 l_0_4_31)))
 (let ((?x7769 (* ?x7671 l_0_4_51)))
 (let ((?x7668 (* 2.0 l_0_4_30)))
 (let ((?x7767 (* ?x7668 l_0_4_50)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7760 (* ?x7759 l_0_4_3)))
 (= (- (- (+ (* (* 2.0 l_0_4_2) l_0_4_22) ?x7760) ?x7767) ?x7769) 0.0))))))))
(assert
 (let ((?x7796 (* l_0_4_6 l_0_4_6)))
 (let ((?x7794 (* l_0_4_5 l_0_4_5)))
 (let ((?x7792 (* l_0_4_4 l_0_4_4)))
 (let ((?x7790 (* l_0_4_34 l_0_4_34)))
 (let ((?x8624 (+ (- (- (* (- l_0_4_32) l_0_4_32) (* l_0_4_33 l_0_4_33)) ?x7790) ?x7792)))
 (= (+ (+ ?x8624 ?x7794) ?x7796) 0.0)))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7878 (* ?x7821 l_0_4_41)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7876 (* ?x7818 l_0_4_40)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7874 (* ?x7815 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x7872 (* ?x7871 l_0_4_6)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x7869 (* ?x7710 l_0_4_5)))
 (let ((?x8658 (- (- (+ (+ (* (* 2.0 l_0_4_11) l_0_4_4) ?x7869) ?x7872) ?x7874) ?x7876)))
 (= (- ?x8658 ?x7878) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7914 (* ?x7821 l_0_4_46)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7912 (* ?x7818 l_0_4_45)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7910 (* ?x7815 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x7908 (* ?x7901 l_0_4_6)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x7898 (* ?x7735 l_0_4_5)))
 (let ((?x8677 (- (- (+ (+ (* (* 2.0 l_0_4_16) l_0_4_4) ?x7898) ?x7908) ?x7910) ?x7912)))
 (= (- ?x8677 ?x7914) 0.0)))))))))))))
(assert
 (let ((?x7821 (* 2.0 l_0_4_34)))
 (let ((?x7951 (* ?x7821 l_0_4_52)))
 (let ((?x7818 (* 2.0 l_0_4_33)))
 (let ((?x7949 (* ?x7818 l_0_4_51)))
 (let ((?x7815 (* 2.0 l_0_4_32)))
 (let ((?x7947 (* ?x7815 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x7945 (* ?x7944 l_0_4_6)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x7936 (* ?x7759 l_0_4_5)))
 (let ((?x8696 (- (- (+ (+ (* (* 2.0 l_0_4_22) l_0_4_4) ?x7936) ?x7945) ?x7947) ?x7949)))
 (= (- ?x8696 ?x7951) 0.0)))))))))))))
(assert
 (let ((?x7991 (* l_0_4_9 l_0_4_9)))
 (let ((?x7989 (* l_0_4_8 l_0_4_8)))
 (let ((?x7987 (* l_0_4_7 l_0_4_7)))
 (let ((?x7985 (* l_0_4_38 l_0_4_38)))
 (let ((?x7983 (* l_0_4_37 l_0_4_37)))
 (let ((?x7981 (* l_0_4_36 l_0_4_36)))
 (let ((?x8713 (- (- (- (* l_0_4_10 l_0_4_10) (* l_0_4_35 l_0_4_35)) ?x7981) ?x7983)))
 (= (+ (+ (+ (- ?x8713 ?x7985) ?x7987) ?x7989) ?x7991) 0.0)))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8027 (* ?x8026 l_0_4_42)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8024 (* ?x8023 l_0_4_41)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8021 (* ?x8020 l_0_4_40)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8018 (* ?x8017 l_0_4_39)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8015 (* ?x7871 l_0_4_9)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8013 (* ?x7710 l_0_4_8)))
 (let ((?x8010 (* 2.0 l_0_4_11)))
 (let ((?x8011 (* ?x8010 l_0_4_7)))
 (let ((?x8736 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_14) ?x8011) ?x8013) ?x8015) ?x8018)))
 (= (- (- (- ?x8736 ?x8021) ?x8024) ?x8027) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8074 (* ?x8026 l_0_4_47)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8072 (* ?x8023 l_0_4_46)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8070 (* ?x8020 l_0_4_45)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8068 (* ?x8017 l_0_4_44)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8066 (* ?x7901 l_0_4_9)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8057 (* ?x7735 l_0_4_8)))
 (let ((?x7810 (* 2.0 l_0_4_16)))
 (let ((?x8053 (* ?x7810 l_0_4_7)))
 (let ((?x8761 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_19) ?x8053) ?x8057) ?x8066) ?x8068)))
 (= (- (- (- ?x8761 ?x8070) ?x8072) ?x8074) 0.0)))))))))))))))))
(assert
 (let ((?x8026 (* 2.0 l_0_4_38)))
 (let ((?x8122 (* ?x8026 l_0_4_53)))
 (let ((?x8023 (* 2.0 l_0_4_37)))
 (let ((?x8120 (* ?x8023 l_0_4_52)))
 (let ((?x8020 (* 2.0 l_0_4_36)))
 (let ((?x8118 (* ?x8020 l_0_4_51)))
 (let ((?x8017 (* 2.0 l_0_4_35)))
 (let ((?x8116 (* ?x8017 l_0_4_50)))
 (let ((?x7944 (* 2.0 l_0_4_24)))
 (let ((?x8114 (* ?x7944 l_0_4_9)))
 (let ((?x7759 (* 2.0 l_0_4_23)))
 (let ((?x8105 (* ?x7759 l_0_4_8)))
 (let ((?x8100 (* 2.0 l_0_4_22)))
 (let ((?x8102 (* ?x8100 l_0_4_7)))
 (let ((?x8786 (- (+ (+ (+ (* (* 2.0 l_0_4_10) l_0_4_25) ?x8102) ?x8105) ?x8114) ?x8116)))
 (= (- (- (- ?x8786 ?x8118) ?x8120) ?x8122) 0.0)))))))))))))))))
(assert
 (let ((?x8174 (* l_0_4_43 l_0_4_43)))
 (let ((?x8172 (* l_0_4_42 l_0_4_42)))
 (let ((?x8170 (* l_0_4_41 l_0_4_41)))
 (let ((?x8168 (* l_0_4_40 l_0_4_40)))
 (let ((?x8166 (* l_0_4_39 l_0_4_39)))
 (let ((?x8164 (* l_0_4_15 l_0_4_15)))
 (let ((?x8162 (* l_0_4_14 l_0_4_14)))
 (let ((?x8153 (* l_0_4_13 l_0_4_13)))
 (let ((?x8809 (+ (+ (+ (* l_0_4_11 l_0_4_11) (* l_0_4_12 l_0_4_12)) ?x8153) ?x8162)))
 (= (- (- (- (- (- (+ ?x8809 ?x8164) ?x8166) ?x8168) ?x8170) ?x8172) ?x8174) 0.0)))))))))))
(assert
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8223 (* ?x8222 l_0_4_48)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8220 (* ?x8219 l_0_4_47)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8217 (* ?x8216 l_0_4_46)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8214 (* ?x8213 l_0_4_45)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8211 (* ?x8210 l_0_4_44)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8208 (* ?x8207 l_0_4_20)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8205 (* ?x8204 l_0_4_19)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8202 (* ?x7871 l_0_4_18)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8200 (* ?x7710 l_0_4_17)))
 (let ((?x8831 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_16) ?x8200) ?x8202) ?x8205) ?x8208)))
 (= (- (- (- (- (- ?x8831 ?x8211) ?x8214) ?x8217) ?x8220) ?x8223) 0.0)))))))))))))))))))))
(assert
 (let ((?x8222 (* 2.0 l_0_4_43)))
 (let ((?x8286 (* ?x8222 l_0_4_54)))
 (let ((?x8219 (* 2.0 l_0_4_42)))
 (let ((?x8284 (* ?x8219 l_0_4_53)))
 (let ((?x8216 (* 2.0 l_0_4_41)))
 (let ((?x8282 (* ?x8216 l_0_4_52)))
 (let ((?x8213 (* 2.0 l_0_4_40)))
 (let ((?x8280 (* ?x8213 l_0_4_51)))
 (let ((?x8210 (* 2.0 l_0_4_39)))
 (let ((?x8278 (* ?x8210 l_0_4_50)))
 (let ((?x8207 (* 2.0 l_0_4_15)))
 (let ((?x8272 (* ?x8207 l_0_4_26)))
 (let ((?x8204 (* 2.0 l_0_4_14)))
 (let ((?x8262 (* ?x8204 l_0_4_25)))
 (let ((?x7871 (* 2.0 l_0_4_13)))
 (let ((?x8259 (* ?x7871 l_0_4_24)))
 (let ((?x7710 (* 2.0 l_0_4_12)))
 (let ((?x8255 (* ?x7710 l_0_4_23)))
 (let ((?x8862 (+ (+ (+ (+ (* (* 2.0 l_0_4_11) l_0_4_22) ?x8255) ?x8259) ?x8262) ?x8272)))
 (= (- (- (- (- (- ?x8862 ?x8278) ?x8280) ?x8282) ?x8284) ?x8286) 0.0)))))))))))))))))))))
(assert
 (let ((?x8354 (* l_0_4_49 l_0_4_49)))
 (let ((?x8352 (* l_0_4_48 l_0_4_48)))
 (let ((?x8350 (* l_0_4_47 l_0_4_47)))
 (let ((?x8348 (* l_0_4_46 l_0_4_46)))
 (let ((?x8346 (* l_0_4_45 l_0_4_45)))
 (let ((?x8344 (* l_0_4_44 l_0_4_44)))
 (let ((?x8342 (* l_0_4_21 l_0_4_21)))
 (let ((?x8340 (* l_0_4_20 l_0_4_20)))
 (let ((?x8338 (* l_0_4_19 l_0_4_19)))
 (let ((?x8336 (* l_0_4_18 l_0_4_18)))
 (let ((?x8909 (+ (+ (+ (* l_0_4_16 l_0_4_16) (* l_0_4_17 l_0_4_17)) ?x8336) ?x8338)))
 (let ((?x8916 (- (- (- (- (- (+ (+ ?x8909 ?x8340) ?x8342) ?x8344) ?x8346) ?x8348) ?x8350) ?x8352)))
 (= (- ?x8916 ?x8354) 0.0))))))))))))))
(assert
 (let ((?x8413 (* (* 2.0 l_0_4_49) l_0_4_55)))
 (let ((?x8410 (* (* 2.0 l_0_4_48) l_0_4_54)))
 (let ((?x8407 (* (* 2.0 l_0_4_47) l_0_4_53)))
 (let ((?x8404 (* (* 2.0 l_0_4_46) l_0_4_52)))
 (let ((?x8401 (* (* 2.0 l_0_4_45) l_0_4_51)))
 (let ((?x8398 (* (* 2.0 l_0_4_44) l_0_4_50)))
 (let ((?x8395 (* (* 2.0 l_0_4_21) l_0_4_27)))
 (let ((?x8392 (* (* 2.0 l_0_4_20) l_0_4_26)))
 (let ((?x8389 (* (* 2.0 l_0_4_19) l_0_4_25)))
 (let ((?x7901 (* 2.0 l_0_4_18)))
 (let ((?x8386 (* ?x7901 l_0_4_24)))
 (let ((?x7735 (* 2.0 l_0_4_17)))
 (let ((?x8384 (* ?x7735 l_0_4_23)))
 (let ((?x8935 (+ (+ (+ (+ (* (* 2.0 l_0_4_16) l_0_4_22) ?x8384) ?x8386) ?x8389) ?x8392)))
 (let ((?x8942 (- (- (- (- (- (- (+ ?x8935 ?x8395) ?x8398) ?x8401) ?x8404) ?x8407) ?x8410) ?x8413)))
 (= ?x8942 0.0)))))))))))))))))
(assert
 (let ((?x8489 (* l_0_4_56 l_0_4_56)))
 (let ((?x8487 (* l_0_4_55 l_0_4_55)))
 (let ((?x8485 (* l_0_4_54 l_0_4_54)))
 (let ((?x8483 (* l_0_4_53 l_0_4_53)))
 (let ((?x8481 (* l_0_4_52 l_0_4_52)))
 (let ((?x8479 (* l_0_4_51 l_0_4_51)))
 (let ((?x8477 (* l_0_4_50 l_0_4_50)))
 (let ((?x8475 (* l_0_4_28 l_0_4_28)))
 (let ((?x8473 (* l_0_4_27 l_0_4_27)))
 (let ((?x8471 (* l_0_4_26 l_0_4_26)))
 (let ((?x8460 (* l_0_4_25 l_0_4_25)))
 (let ((?x8457 (* l_0_4_24 l_0_4_24)))
 (let ((?x8970 (+ (+ (+ (* l_0_4_22 l_0_4_22) (* l_0_4_23 l_0_4_23)) ?x8457) ?x8460)))
 (let ((?x8977 (- (- (- (- (+ (+ (+ ?x8970 ?x8471) ?x8473) ?x8475) ?x8477) ?x8479) ?x8481) ?x8483)))
 (= (- (- (- ?x8977 ?x8485) ?x8487) ?x8489) 0.0))))))))))))))))
(assert
 (let ((?x9018 (* l_0_4_85 l_0_4_85)))
 (let ((?x9017 (- (* (- l_0_4_113) l_0_4_113) (* (* 1.0 l_0_4_57) l_0_4_57))))
 (= (- ?x9017 ?x9018) 0.0))))
(assert
 (let ((?x9035 (- (* (* (- 2.0) l_0_4_113) l_0_4_114) (* (* 2.0 l_0_4_57) l_0_4_58))))
 (= (- ?x9035 (* (* 2.0 l_0_4_85) l_0_4_86)) 0.0)))
(assert
 (let ((?x9058 (- (* (* (- 2.0) l_0_4_113) l_0_4_119) (* (* 2.0 l_0_4_57) l_0_4_63))))
 (= (- ?x9058 (* (* 2.0 l_0_4_85) l_0_4_91)) 0.0)))
(assert
 (let ((?x9081 (- (* (* (- 2.0) l_0_4_113) l_0_4_123) (* (* 2.0 l_0_4_57) l_0_4_67))))
 (= (- ?x9081 (* (* 2.0 l_0_4_85) l_0_4_95)) 0.0)))
(assert
 (let ((?x9105 (- (* (* (- 2.0) l_0_4_100) l_0_4_85) (* (* 2.0 l_0_4_113) l_0_4_128))))
 (= (- ?x9105 (* (* 2.0 l_0_4_57) l_0_4_72)) 0.0)))
(assert
 (let ((?x9129 (- (* (* (- 2.0) l_0_4_106) l_0_4_85) (* (* 2.0 l_0_4_113) l_0_4_134))))
 (= (- ?x9129 (* (* 2.0 l_0_4_57) l_0_4_78)) 0.0)))
(assert
 (let ((?x9162 (* l_0_4_87 l_0_4_87)))
 (let ((?x9160 (* l_0_4_86 l_0_4_86)))
 (let ((?x9156 (- (- (* (- l_0_4_114) l_0_4_114) (* l_0_4_115 l_0_4_115)) (* (* 1.0 l_0_4_58) l_0_4_58))))
 (= (- (- (- ?x9156 (* (* 1.0 l_0_4_59) l_0_4_59)) ?x9160) ?x9162) 0.0)))))
(assert
 (let ((?x9190 (- (* (* (- 2.0) l_0_4_114) l_0_4_116) (* (* 2.0 l_0_4_115) l_0_4_117))))
 (let ((?x9194 (- (- ?x9190 (* (* 2.0 l_0_4_58) l_0_4_60)) (* (* 2.0 l_0_4_59) l_0_4_61))))
 (let ((?x9200 (- (- ?x9194 (* (* 2.0 l_0_4_86) l_0_4_88)) (* (* 2.0 l_0_4_87) l_0_4_89))))
 (= ?x9200 0.0)))))
(assert
 (let ((?x9239 (- (* (* (- 2.0) l_0_4_114) l_0_4_119) (* (* 2.0 l_0_4_115) l_0_4_120))))
 (let ((?x9243 (- (- ?x9239 (* (* 2.0 l_0_4_58) l_0_4_63)) (* (* 2.0 l_0_4_59) l_0_4_64))))
 (let ((?x9247 (- (- ?x9243 (* (* 2.0 l_0_4_86) l_0_4_91)) (* (* 2.0 l_0_4_87) l_0_4_92))))
 (= ?x9247 0.0)))))
(assert
 (let ((?x9286 (- (* (* (- 2.0) l_0_4_114) l_0_4_123) (* (* 2.0 l_0_4_115) l_0_4_124))))
 (let ((?x9290 (- (- ?x9286 (* (* 2.0 l_0_4_58) l_0_4_67)) (* (* 2.0 l_0_4_59) l_0_4_68))))
 (let ((?x9294 (- (- ?x9290 (* (* 2.0 l_0_4_86) l_0_4_95)) (* (* 2.0 l_0_4_87) l_0_4_96))))
 (= ?x9294 0.0)))))
(assert
 (let ((?x9333 (- (* (* (- 2.0) l_0_4_106) l_0_4_86) (* (* 2.0 l_0_4_107) l_0_4_87))))
 (let ((?x9337 (- (- ?x9333 (* (* 2.0 l_0_4_114) l_0_4_134)) (* (* 2.0 l_0_4_115) l_0_4_135))))
 (let ((?x9341 (- (- ?x9337 (* (* 2.0 l_0_4_58) l_0_4_78)) (* (* 2.0 l_0_4_59) l_0_4_79))))
 (= ?x9341 0.0)))))
(assert
 (let ((?x9397 (* l_0_4_90 l_0_4_90)))
 (let ((?x9395 (* l_0_4_89 l_0_4_89)))
 (let ((?x9393 (* l_0_4_88 l_0_4_88)))
 (let ((?x9382 (* l_0_4_118 l_0_4_118)))
 (let ((?x9383 (- (- (* (- l_0_4_116) l_0_4_116) (* l_0_4_117 l_0_4_117)) ?x9382)))
 (let ((?x9389 (- (- ?x9383 (* (* 1.0 l_0_4_60) l_0_4_60)) (* (* 1.0 l_0_4_61) l_0_4_61))))
 (let ((?x9398 (- (- (- (- ?x9389 (* (* 1.0 l_0_4_62) l_0_4_62)) ?x9393) ?x9395) ?x9397)))
 (= ?x9398 0.0)))))))))
(assert
 (let ((?x9435 (- (* (* (- 2.0) l_0_4_116) l_0_4_123) (* (* 2.0 l_0_4_117) l_0_4_124))))
 (let ((?x9439 (- (- ?x9435 (* (* 2.0 l_0_4_118) l_0_4_125)) (* (* 2.0 l_0_4_60) l_0_4_67))))
 (let ((?x9443 (- (- ?x9439 (* (* 2.0 l_0_4_61) l_0_4_68)) (* (* 2.0 l_0_4_62) l_0_4_69))))
 (let ((?x9447 (- (- ?x9443 (* (* 2.0 l_0_4_88) l_0_4_95)) (* (* 2.0 l_0_4_89) l_0_4_96))))
 (= (- ?x9447 (* (* 2.0 l_0_4_90) l_0_4_97)) 0.0))))))
(assert
 (let ((?x9506 (- (* (* (- 2.0) l_0_4_100) l_0_4_88) (* (* 2.0 l_0_4_101) l_0_4_89))))
 (let ((?x9511 (- (- ?x9506 (* (* 2.0 l_0_4_102) l_0_4_90)) (* (* 2.0 l_0_4_116) l_0_4_128))))
 (let ((?x9515 (- (- ?x9511 (* (* 2.0 l_0_4_117) l_0_4_129)) (* (* 2.0 l_0_4_118) l_0_4_130))))
 (let ((?x9519 (- (- ?x9515 (* (* 2.0 l_0_4_60) l_0_4_72)) (* (* 2.0 l_0_4_61) l_0_4_73))))
 (= (- ?x9519 (* (* 2.0 l_0_4_62) l_0_4_74)) 0.0))))))
(assert
 (let ((?x9602 (* l_0_4_94 l_0_4_94)))
 (let ((?x9600 (* l_0_4_93 l_0_4_93)))
 (let ((?x9598 (* l_0_4_92 l_0_4_92)))
 (let ((?x9596 (* l_0_4_91 l_0_4_91)))
 (let ((?x9582 (* l_0_4_122 l_0_4_122)))
 (let ((?x9580 (* l_0_4_121 l_0_4_121)))
 (let ((?x9581 (- (- (* (- l_0_4_119) l_0_4_119) (* l_0_4_120 l_0_4_120)) ?x9580)))
 (let ((?x9589 (- (- (- ?x9581 ?x9582) (* (* 1.0 l_0_4_63) l_0_4_63)) (* (* 1.0 l_0_4_64) l_0_4_64))))
 (let ((?x9595 (- (- ?x9589 (* (* 1.0 l_0_4_65) l_0_4_65)) (* (* 1.0 l_0_4_66) l_0_4_66))))
 (= (- (- (- (- ?x9595 ?x9596) ?x9598) ?x9600) ?x9602) 0.0)))))))))))
(assert
 (let ((?x9651 (- (* (* (- 2.0) l_0_4_119) l_0_4_123) (* (* 2.0 l_0_4_120) l_0_4_124))))
 (let ((?x9657 (- (- ?x9651 (* (* 2.0 l_0_4_121) l_0_4_125)) (* (* 2.0 l_0_4_122) l_0_4_126))))
 (let ((?x9663 (- (- ?x9657 (* (* 2.0 l_0_4_63) l_0_4_67)) (* (* 2.0 l_0_4_64) l_0_4_68))))
 (let ((?x9669 (- (- ?x9663 (* (* 2.0 l_0_4_65) l_0_4_69)) (* (* 2.0 l_0_4_66) l_0_4_70))))
 (let ((?x9675 (- (- ?x9669 (* (* 2.0 l_0_4_91) l_0_4_95)) (* (* 2.0 l_0_4_92) l_0_4_96))))
 (let ((?x9681 (- (- ?x9675 (* (* 2.0 l_0_4_93) l_0_4_97)) (* (* 2.0 l_0_4_94) l_0_4_98))))
 (= ?x9681 0.0))))))))
(assert
 (let ((?x9756 (- (* (* (- 2.0) l_0_4_100) l_0_4_91) (* (* 2.0 l_0_4_101) l_0_4_92))))
 (let ((?x9761 (- (- ?x9756 (* (* 2.0 l_0_4_102) l_0_4_93)) (* (* 2.0 l_0_4_103) l_0_4_94))))
 (let ((?x9766 (- (- ?x9761 (* (* 2.0 l_0_4_119) l_0_4_128)) (* (* 2.0 l_0_4_120) l_0_4_129))))
 (let ((?x9770 (- (- ?x9766 (* (* 2.0 l_0_4_121) l_0_4_130)) (* (* 2.0 l_0_4_122) l_0_4_131))))
 (let ((?x9774 (- (- ?x9770 (* (* 2.0 l_0_4_63) l_0_4_72)) (* (* 2.0 l_0_4_64) l_0_4_73))))
 (let ((?x9778 (- (- ?x9774 (* (* 2.0 l_0_4_65) l_0_4_74)) (* (* 2.0 l_0_4_66) l_0_4_75))))
 (= ?x9778 0.0))))))))
(assert
 (let ((?x9853 (- (* (* (- 2.0) l_0_4_106) l_0_4_91) (* (* 2.0 l_0_4_107) l_0_4_92))))
 (let ((?x9857 (- (- ?x9853 (* (* 2.0 l_0_4_108) l_0_4_93)) (* (* 2.0 l_0_4_109) l_0_4_94))))
 (let ((?x9861 (- (- ?x9857 (* (* 2.0 l_0_4_119) l_0_4_134)) (* (* 2.0 l_0_4_120) l_0_4_135))))
 (let ((?x9865 (- (- ?x9861 (* (* 2.0 l_0_4_121) l_0_4_136)) (* (* 2.0 l_0_4_122) l_0_4_137))))
 (let ((?x9869 (- (- ?x9865 (* (* 2.0 l_0_4_63) l_0_4_78)) (* (* 2.0 l_0_4_64) l_0_4_79))))
 (let ((?x9873 (- (- ?x9869 (* (* 2.0 l_0_4_65) l_0_4_80)) (* (* 2.0 l_0_4_66) l_0_4_81))))
 (= ?x9873 0.0))))))))
(assert
 (let ((?x9979 (* l_0_4_99 l_0_4_99)))
 (let ((?x9977 (* l_0_4_98 l_0_4_98)))
 (let ((?x9975 (* l_0_4_97 l_0_4_97)))
 (let ((?x9973 (* l_0_4_96 l_0_4_96)))
 (let ((?x9971 (* l_0_4_95 l_0_4_95)))
 (let ((?x9954 (* l_0_4_127 l_0_4_127)))
 (let ((?x9952 (* l_0_4_126 l_0_4_126)))
 (let ((?x9950 (* l_0_4_125 l_0_4_125)))
 (let ((?x9951 (- (- (* (- l_0_4_123) l_0_4_123) (* l_0_4_124 l_0_4_124)) ?x9950)))
 (let ((?x9961 (- (- (- (- ?x9951 ?x9952) ?x9954) (* (* 1.0 l_0_4_67) l_0_4_67)) (* (* 1.0 l_0_4_68) l_0_4_68))))
 (let ((?x9967 (- (- ?x9961 (* (* 1.0 l_0_4_69) l_0_4_69)) (* (* 1.0 l_0_4_70) l_0_4_70))))
 (let ((?x9976 (- (- (- (- ?x9967 (* (* 1.0 l_0_4_71) l_0_4_71)) ?x9971) ?x9973) ?x9975)))
 (= (- (- ?x9976 ?x9977) ?x9979) 0.0))))))))))))))
(assert
 (let ((?x10036 (- (* (* (- 2.0) l_0_4_100) l_0_4_95) (* (* 2.0 l_0_4_101) l_0_4_96))))
 (let ((?x10040 (- (- ?x10036 (* (* 2.0 l_0_4_102) l_0_4_97)) (* (* 2.0 l_0_4_103) l_0_4_98))))
 (let ((?x10045 (- (- ?x10040 (* (* 2.0 l_0_4_104) l_0_4_99)) (* (* 2.0 l_0_4_123) l_0_4_128))))
 (let ((?x10049 (- (- ?x10045 (* (* 2.0 l_0_4_124) l_0_4_129)) (* (* 2.0 l_0_4_125) l_0_4_130))))
 (let ((?x10053 (- (- ?x10049 (* (* 2.0 l_0_4_126) l_0_4_131)) (* (* 2.0 l_0_4_127) l_0_4_132))))
 (let ((?x10057 (- (- ?x10053 (* (* 2.0 l_0_4_67) l_0_4_72)) (* (* 2.0 l_0_4_68) l_0_4_73))))
 (let ((?x10061 (- (- ?x10057 (* (* 2.0 l_0_4_69) l_0_4_74)) (* (* 2.0 l_0_4_70) l_0_4_75))))
 (= (- ?x10061 (* (* 2.0 l_0_4_71) l_0_4_76)) 0.0)))))))))
(assert
 (let ((?x10176 (* l_0_4_133 l_0_4_133)))
 (let ((?x10174 (* l_0_4_132 l_0_4_132)))
 (let ((?x10172 (* l_0_4_131 l_0_4_131)))
 (let ((?x10170 (* l_0_4_130 l_0_4_130)))
 (let ((?x10168 (* l_0_4_129 l_0_4_129)))
 (let ((?x10166 (* l_0_4_128 l_0_4_128)))
 (let ((?x10164 (* l_0_4_105 l_0_4_105)))
 (let ((?x10162 (* l_0_4_104 l_0_4_104)))
 (let ((?x10160 (* l_0_4_103 l_0_4_103)))
 (let ((?x10158 (* l_0_4_102 l_0_4_102)))
 (let ((?x10159 (- (- (* (- l_0_4_100) l_0_4_100) (* l_0_4_101 l_0_4_101)) ?x10158)))
 (let ((?x10173 (- (- (- (- (- (- (- ?x10159 ?x10160) ?x10162) ?x10164) ?x10166) ?x10168) ?x10170) ?x10172)))
 (let ((?x10183 (- (- (- (- ?x10173 ?x10174) ?x10176) (* (* 1.0 l_0_4_72) l_0_4_72)) (* (* 1.0 l_0_4_73) l_0_4_73))))
 (let ((?x10189 (- (- ?x10183 (* (* 1.0 l_0_4_74) l_0_4_74)) (* (* 1.0 l_0_4_75) l_0_4_75))))
 (let ((?x10195 (- (- ?x10189 (* (* 1.0 l_0_4_76) l_0_4_76)) (* (* 1.0 l_0_4_77) l_0_4_77))))
 (= ?x10195 0.0)))))))))))))))))
(assert
 (let ((?x10261 (- (* (* (- 2.0) l_0_4_100) l_0_4_106) (* (* 2.0 l_0_4_101) l_0_4_107))))
 (let ((?x10265 (- (- ?x10261 (* (* 2.0 l_0_4_102) l_0_4_108)) (* (* 2.0 l_0_4_103) l_0_4_109))))
 (let ((?x10270 (- (- ?x10265 (* (* 2.0 l_0_4_104) l_0_4_110)) (* (* 2.0 l_0_4_105) l_0_4_111))))
 (let ((?x10276 (- (- ?x10270 (* (* 2.0 l_0_4_128) l_0_4_134)) (* (* 2.0 l_0_4_129) l_0_4_135))))
 (let ((?x10282 (- (- ?x10276 (* (* 2.0 l_0_4_130) l_0_4_136)) (* (* 2.0 l_0_4_131) l_0_4_137))))
 (let ((?x10288 (- (- ?x10282 (* (* 2.0 l_0_4_132) l_0_4_138)) (* (* 2.0 l_0_4_133) l_0_4_139))))
 (let ((?x10294 (- (- ?x10288 (* (* 2.0 l_0_4_72) l_0_4_78)) (* (* 2.0 l_0_4_73) l_0_4_79))))
 (let ((?x10300 (- (- ?x10294 (* (* 2.0 l_0_4_74) l_0_4_80)) (* (* 2.0 l_0_4_75) l_0_4_81))))
 (let ((?x10306 (- (- ?x10300 (* (* 2.0 l_0_4_76) l_0_4_82)) (* (* 2.0 l_0_4_77) l_0_4_83))))
 (= ?x10306 0.0)))))))))))
(assert
 (let ((?x10441 (* l_0_4_140 l_0_4_140)))
 (let ((?x10439 (* l_0_4_139 l_0_4_139)))
 (let ((?x10437 (* l_0_4_138 l_0_4_138)))
 (let ((?x10435 (* l_0_4_137 l_0_4_137)))
 (let ((?x10433 (* l_0_4_136 l_0_4_136)))
 (let ((?x10431 (* l_0_4_135 l_0_4_135)))
 (let ((?x10429 (* l_0_4_134 l_0_4_134)))
 (let ((?x10427 (* l_0_4_112 l_0_4_112)))
 (let ((?x10425 (* l_0_4_111 l_0_4_111)))
 (let ((?x10423 (* l_0_4_110 l_0_4_110)))
 (let ((?x10421 (* l_0_4_109 l_0_4_109)))
 (let ((?x10419 (* l_0_4_108 l_0_4_108)))
 (let ((?x10420 (- (- (* (- l_0_4_106) l_0_4_106) (* l_0_4_107 l_0_4_107)) ?x10419)))
 (let ((?x10434 (- (- (- (- (- (- (- ?x10420 ?x10421) ?x10423) ?x10425) ?x10427) ?x10429) ?x10431) ?x10433)))
 (let ((?x10445 (- (- (- (- (- ?x10434 ?x10435) ?x10437) ?x10439) ?x10441) (* (* 1.0 l_0_4_78) l_0_4_78))))
 (let ((?x10451 (- (- ?x10445 (* (* 1.0 l_0_4_79) l_0_4_79)) (* (* 1.0 l_0_4_80) l_0_4_80))))
 (let ((?x10457 (- (- ?x10451 (* (* 1.0 l_0_4_81) l_0_4_81)) (* (* 1.0 l_0_4_82) l_0_4_82))))
 (let ((?x10463 (- (- ?x10457 (* (* 1.0 l_0_4_83) l_0_4_83)) (* (* 1.0 l_0_4_84) l_0_4_84))))
 (= ?x10463 0.0))))))))))))))))))))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (>= l_0_4_15 0.0))
(assert
 (>= l_0_4_21 0.0))
(assert
 (>= l_0_4_28 0.0))
(assert
 (>= l_0_4_29 0.0))
(assert
 (>= l_0_4_31 0.0))
(assert
 (>= l_0_4_34 0.0))
(assert
 (>= l_0_4_38 0.0))
(assert
 (>= l_0_4_43 0.0))
(assert
 (>= l_0_4_49 0.0))
(assert
 (>= l_0_4_56 0.0))
(assert
 (>= l_0_4_57 0.0))
(assert
 (>= l_0_4_59 0.0))
(assert
 (>= l_0_4_62 0.0))
(assert
 (>= l_0_4_66 0.0))
(assert
 (>= l_0_4_71 0.0))
(assert
 (>= l_0_4_77 0.0))
(assert
 (>= l_0_4_84 0.0))
(assert
 (>= l_0_4_85 0.0))
(assert
 (>= l_0_4_87 0.0))
(assert
 (>= l_0_4_90 0.0))
(assert
 (>= l_0_4_94 0.0))
(assert
 (>= l_0_4_99 0.0))
(assert
 (>= l_0_4_105 0.0))
(assert
 (>= l_0_4_112 0.0))
(assert
 (>= l_0_4_113 0.0))
(assert
 (>= l_0_4_115 0.0))
(assert
 (>= l_0_4_118 0.0))
(assert
 (>= l_0_4_122 0.0))
(assert
 (>= l_0_4_127 0.0))
(assert
 (>= l_0_4_133 0.0))
(assert
 (>= l_0_4_140 0.0))
(assert
 (let ((?x10580 (* l_0_5_29 l_0_5_29)))
 (let ((?x10579 (- (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_100) l_0_5_86)) (* (* 2.0 l_0_5_101) l_0_5_87))))
 (let ((?x10587 (+ (+ (+ ?x10579 ?x10580) (* (* 2.0 l_0_5_58) l_0_5_72)) (* (* 2.0 l_0_5_59) l_0_5_73))))
 (= (+ ?x10587 1.0) 0.0)))))
(assert
 (let ((?x10614 (+ (- (* l_0_5_1 l_0_5_1) (* l_0_5_29 l_0_5_29)) (* (* 2.0 l_0_5_60) l_0_5_63))))
 (let ((?x10620 (+ (+ ?x10614 (* (* 2.0 l_0_5_61) l_0_5_64)) (* (* 2.0 l_0_5_62) l_0_5_65))))
 (let ((?x10626 (- (- ?x10620 (* (* 2.0 l_0_5_88) l_0_5_91)) (* (* 2.0 l_0_5_89) l_0_5_92))))
 (= (- (- ?x10626 (* (* 2.0 l_0_5_90) l_0_5_93)) 1.0) 0.0)))))
(assert
 (let ((?x10580 (* l_0_5_29 l_0_5_29)))
 (let ((?x10672 (- (- (* l_0_5_1 l_0_5_1) (* (* 2.0 l_0_5_106) l_0_5_95)) (* (* 2.0 l_0_5_107) l_0_5_96))))
 (let ((?x10678 (- (- ?x10672 (* (* 2.0 l_0_5_108) l_0_5_97)) (* (* 2.0 l_0_5_109) l_0_5_98))))
 (let ((?x10685 (+ (- (- ?x10678 (* (* 2.0 l_0_5_110) l_0_5_99)) ?x10580) (* (* 2.0 l_0_5_67) l_0_5_78))))
 (let ((?x10691 (+ (+ ?x10685 (* (* 2.0 l_0_5_68) l_0_5_79)) (* (* 2.0 l_0_5_69) l_0_5_80))))
 (let ((?x10697 (+ (+ ?x10691 (* (* 2.0 l_0_5_70) l_0_5_81)) (* (* 2.0 l_0_5_71) l_0_5_82))))
 (= (- ?x10697 1.0) 0.0))))))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10755 (* ?x10754 l_0_5_30)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x10755) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10761 (* ?x10754 l_0_5_32)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_4) ?x10761) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10771 (* ?x10754 l_0_5_35)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_7) ?x10771) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10781 (* ?x10754 l_0_5_39)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_11) ?x10781) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10791 (* ?x10754 l_0_5_44)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_16) ?x10791) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10801 (* ?x10754 l_0_5_50)))
 (= (+ (* (* (- 2.0) l_0_5_1) l_0_5_22) ?x10801) 0.0))))
(assert
 (let ((?x10820 (* l_0_5_31 l_0_5_31)))
 (let ((?x10818 (* l_0_5_30 l_0_5_30)))
 (let ((?x10821 (+ (+ (- (* (- l_0_5_2) l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10818) ?x10820)))
 (= ?x10821 0.0)))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10842 (* ?x10841 l_0_5_33)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10839 (* ?x10838 l_0_5_32)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10836 (* ?x10835 l_0_5_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_4) ?x10836) ?x10839) ?x10842) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10865 (* ?x10841 l_0_5_36)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10863 (* ?x10838 l_0_5_35)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10856 (* ?x10835 l_0_5_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_7) ?x10856) ?x10863) ?x10865) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10890 (* ?x10841 l_0_5_40)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10888 (* ?x10838 l_0_5_39)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x10886 (* ?x10880 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x10886) ?x10888) ?x10890) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10915 (* ?x10841 l_0_5_45)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10913 (* ?x10838 l_0_5_44)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x10911 (* ?x10905 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_16) l_0_5_2) ?x10911) ?x10913) ?x10915) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10939 (* ?x10841 l_0_5_51)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10937 (* ?x10838 l_0_5_50)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x10930 (* ?x10929 l_0_5_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_22) ?x10930) ?x10937) ?x10939) 0.0))))))))
(assert
 (let ((?x10966 (* l_0_5_6 l_0_5_6)))
 (let ((?x10964 (* l_0_5_5 l_0_5_5)))
 (let ((?x10962 (* l_0_5_4 l_0_5_4)))
 (let ((?x10960 (* l_0_5_34 l_0_5_34)))
 (let ((?x10963 (- (+ (+ (* l_0_5_32 l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10960) ?x10962)))
 (= (- (- ?x10963 ?x10964) ?x10966) 0.0)))))))
(assert
 (let ((?x11001 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10998 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10995 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x10992 (* ?x10991 l_0_5_37)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x10989 (* ?x10988 l_0_5_36)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x10986 (* ?x10985 l_0_5_35)))
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10915 (* ?x10841 l_0_5_45)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10913 (* ?x10838 l_0_5_44)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x10911 (* ?x10905 l_0_5_3)))
 (let ((?x10980 (* 2.0 l_0_5_16)))
 (let ((?x10981 (* ?x10980 l_0_5_2)))
 (let ((?x10996 (- (+ (+ (+ (- (- (+ ?x10981 ?x10911) ?x10913) ?x10915) ?x10986) ?x10989) ?x10992) ?x10995)))
 (= (- (- ?x10996 ?x10998) ?x11001) 0.0))))))))))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11048 (* ?x10991 l_0_5_41)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11046 (* ?x10988 l_0_5_40)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11044 (* ?x10985 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11042 (* ?x11041 l_0_5_6)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11039 (* ?x10880 l_0_5_5)))
 (let ((?x11047 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x11039) ?x11042) ?x11044) ?x11046)))
 (= (+ ?x11047 ?x11048) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11084 (* ?x10991 l_0_5_46)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11082 (* ?x10988 l_0_5_45)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11080 (* ?x10985 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11078 (* ?x11071 l_0_5_6)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11068 (* ?x10905 l_0_5_5)))
 (let ((?x11083 (+ (+ (- (- (* (* (- 2.0) l_0_5_16) l_0_5_4) ?x11068) ?x11078) ?x11080) ?x11082)))
 (= (+ ?x11083 ?x11084) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11121 (* ?x10991 l_0_5_52)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11119 (* ?x10988 l_0_5_51)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11117 (* ?x10985 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11115 (* ?x11114 l_0_5_6)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11106 (* ?x10929 l_0_5_5)))
 (let ((?x11120 (+ (+ (- (- (* (* (- 2.0) l_0_5_22) l_0_5_4) ?x11106) ?x11115) ?x11117) ?x11119)))
 (= (+ ?x11120 ?x11121) 0.0)))))))))))))
(assert
 (let ((?x11161 (* l_0_5_9 l_0_5_9)))
 (let ((?x11159 (* l_0_5_8 l_0_5_8)))
 (let ((?x11157 (* l_0_5_7 l_0_5_7)))
 (let ((?x11155 (* l_0_5_38 l_0_5_38)))
 (let ((?x11153 (* l_0_5_37 l_0_5_37)))
 (let ((?x11151 (* l_0_5_36 l_0_5_36)))
 (let ((?x11154 (+ (+ (+ (* (- l_0_5_10) l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11151) ?x11153)))
 (= (- (- (- (+ ?x11154 ?x11155) ?x11157) ?x11159) ?x11161) 0.0)))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11197 (* ?x11196 l_0_5_42)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11194 (* ?x11193 l_0_5_41)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11191 (* ?x11190 l_0_5_40)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11188 (* ?x11187 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11185 (* ?x11041 l_0_5_9)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11183 (* ?x10880 l_0_5_8)))
 (let ((?x11180 (* 2.0 l_0_5_11)))
 (let ((?x11181 (* ?x11180 l_0_5_7)))
 (let ((?x11189 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x11181) ?x11183) ?x11185) ?x11188)))
 (= (+ (+ (+ ?x11189 ?x11191) ?x11194) ?x11197) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11244 (* ?x11196 l_0_5_47)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11242 (* ?x11193 l_0_5_46)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11240 (* ?x11190 l_0_5_45)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11238 (* ?x11187 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11236 (* ?x11071 l_0_5_9)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11227 (* ?x10905 l_0_5_8)))
 (let ((?x10980 (* 2.0 l_0_5_16)))
 (let ((?x11223 (* ?x10980 l_0_5_7)))
 (let ((?x11239 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_19) ?x11223) ?x11227) ?x11236) ?x11238)))
 (= (+ (+ (+ ?x11239 ?x11240) ?x11242) ?x11244) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11292 (* ?x11196 l_0_5_53)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11290 (* ?x11193 l_0_5_52)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11288 (* ?x11190 l_0_5_51)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11286 (* ?x11187 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11284 (* ?x11114 l_0_5_9)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11275 (* ?x10929 l_0_5_8)))
 (let ((?x11270 (* 2.0 l_0_5_22)))
 (let ((?x11272 (* ?x11270 l_0_5_7)))
 (let ((?x11287 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_25) ?x11272) ?x11275) ?x11284) ?x11286)))
 (= (+ (+ (+ ?x11287 ?x11288) ?x11290) ?x11292) 0.0)))))))))))))))))
(assert
 (let ((?x11344 (* l_0_5_43 l_0_5_43)))
 (let ((?x11342 (* l_0_5_42 l_0_5_42)))
 (let ((?x11340 (* l_0_5_41 l_0_5_41)))
 (let ((?x11338 (* l_0_5_40 l_0_5_40)))
 (let ((?x11336 (* l_0_5_39 l_0_5_39)))
 (let ((?x11334 (* l_0_5_15 l_0_5_15)))
 (let ((?x11332 (* l_0_5_14 l_0_5_14)))
 (let ((?x11323 (* l_0_5_13 l_0_5_13)))
 (let ((?x11333 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11323) ?x11332)))
 (= (+ (+ (+ (+ (+ (- ?x11333 ?x11334) ?x11336) ?x11338) ?x11340) ?x11342) ?x11344) 0.0)))))))))))
(assert
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11393 (* ?x11392 l_0_5_48)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11390 (* ?x11389 l_0_5_47)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11387 (* ?x11386 l_0_5_46)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11384 (* ?x11383 l_0_5_45)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11381 (* ?x11380 l_0_5_44)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11378 (* ?x11377 l_0_5_20)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11375 (* ?x11374 l_0_5_19)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11372 (* ?x11041 l_0_5_18)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11370 (* ?x10880 l_0_5_17)))
 (let ((?x11379 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_16) ?x11370) ?x11372) ?x11375) ?x11378)))
 (= (+ (+ (+ (+ (+ ?x11379 ?x11381) ?x11384) ?x11387) ?x11390) ?x11393) 0.0)))))))))))))))))))))
(assert
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11456 (* ?x11392 l_0_5_54)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11454 (* ?x11389 l_0_5_53)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11452 (* ?x11386 l_0_5_52)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11450 (* ?x11383 l_0_5_51)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11448 (* ?x11380 l_0_5_50)))
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10915 (* ?x10841 l_0_5_45)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10913 (* ?x10838 l_0_5_44)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x10911 (* ?x10905 l_0_5_3)))
 (let ((?x10980 (* 2.0 l_0_5_16)))
 (let ((?x10981 (* ?x10980 l_0_5_2)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11442 (* ?x11377 l_0_5_26)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11432 (* ?x11374 l_0_5_25)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11429 (* ?x11041 l_0_5_24)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11425 (* ?x10880 l_0_5_23)))
 (let ((?x11443 (- (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_22) ?x11425) ?x11429) ?x11432) ?x11442)))
 (let ((?x11453 (+ (+ (+ (- (- (+ (+ ?x11443 ?x10981) ?x10911) ?x10913) ?x10915) ?x11448) ?x11450) ?x11452)))
 (= (+ (+ ?x11453 ?x11454) ?x11456) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11524 (* l_0_5_49 l_0_5_49)))
 (let ((?x11522 (* l_0_5_48 l_0_5_48)))
 (let ((?x11520 (* l_0_5_47 l_0_5_47)))
 (let ((?x11518 (* l_0_5_46 l_0_5_46)))
 (let ((?x11516 (* l_0_5_45 l_0_5_45)))
 (let ((?x11514 (* l_0_5_44 l_0_5_44)))
 (let ((?x11512 (* l_0_5_21 l_0_5_21)))
 (let ((?x11510 (* l_0_5_20 l_0_5_20)))
 (let ((?x11508 (* l_0_5_19 l_0_5_19)))
 (let ((?x11506 (* l_0_5_18 l_0_5_18)))
 (let ((?x11509 (- (- (- (* (- l_0_5_16) l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11506) ?x11508)))
 (let ((?x11523 (+ (+ (+ (+ (+ (- (- ?x11509 ?x11510) ?x11512) ?x11514) ?x11516) ?x11518) ?x11520) ?x11522)))
 (= (+ ?x11523 ?x11524) 0.0))))))))))))))
(assert
 (let ((?x11583 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11580 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11577 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11574 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11571 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11568 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11565 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11562 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11559 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11556 (* ?x11071 l_0_5_24)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11554 (* ?x10905 l_0_5_23)))
 (let ((?x11563 (- (- (- (- (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x11554) ?x11556) ?x11559) ?x11562)))
 (let ((?x11584 (+ (+ (+ (+ (+ (+ (- ?x11563 ?x11565) ?x11568) ?x11571) ?x11574) ?x11577) ?x11580) ?x11583)))
 (= ?x11584 0.0)))))))))))))))))
(assert
 (let ((?x11644 (* l_0_5_56 l_0_5_56)))
 (let ((?x11642 (* l_0_5_55 l_0_5_55)))
 (let ((?x11640 (* l_0_5_54 l_0_5_54)))
 (let ((?x11638 (* l_0_5_53 l_0_5_53)))
 (let ((?x11636 (* l_0_5_52 l_0_5_52)))
 (let ((?x11634 (* l_0_5_51 l_0_5_51)))
 (let ((?x11632 (* l_0_5_50 l_0_5_50)))
 (let ((?x11630 (* l_0_5_28 l_0_5_28)))
 (let ((?x11628 (* l_0_5_27 l_0_5_27)))
 (let ((?x11626 (* l_0_5_26 l_0_5_26)))
 (let ((?x11624 (* l_0_5_25 l_0_5_25)))
 (let ((?x11622 (* l_0_5_24 l_0_5_24)))
 (let ((?x11625 (- (- (- (* (- l_0_5_22) l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11622) ?x11624)))
 (let ((?x11639 (+ (+ (+ (+ (- (- (- ?x11625 ?x11626) ?x11628) ?x11630) ?x11632) ?x11634) ?x11636) ?x11638)))
 (= (+ (+ (+ ?x11639 ?x11640) ?x11642) ?x11644) 0.0))))))))))))))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10755 (* ?x10754 l_0_5_30)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x10755) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10761 (* ?x10754 l_0_5_32)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x10761) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10771 (* ?x10754 l_0_5_35)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x10771) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10781 (* ?x10754 l_0_5_39)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x10781) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10791 (* ?x10754 l_0_5_44)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_16) ?x10791) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10801 (* ?x10754 l_0_5_50)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_22) ?x10801) 0.0))))
(assert
 (let ((?x10820 (* l_0_5_31 l_0_5_31)))
 (let ((?x10818 (* l_0_5_30 l_0_5_30)))
 (= (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10818) ?x10820) 0.0))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10842 (* ?x10841 l_0_5_33)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10839 (* ?x10838 l_0_5_32)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10836 (* ?x10835 l_0_5_5)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_4) ?x10836) ?x10839) ?x10842) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10865 (* ?x10841 l_0_5_36)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10863 (* ?x10838 l_0_5_35)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10856 (* ?x10835 l_0_5_8)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x10856) ?x10863) ?x10865) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10890 (* ?x10841 l_0_5_40)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10888 (* ?x10838 l_0_5_39)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x10886 (* ?x10880 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x10886) ?x10888) ?x10890) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10939 (* ?x10841 l_0_5_51)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10937 (* ?x10838 l_0_5_50)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x10930 (* ?x10929 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_22) ?x10930) ?x10937) ?x10939) 0.0))))))))
(assert
 (let ((?x10966 (* l_0_5_6 l_0_5_6)))
 (let ((?x10964 (* l_0_5_5 l_0_5_5)))
 (let ((?x10962 (* l_0_5_4 l_0_5_4)))
 (let ((?x10960 (* l_0_5_34 l_0_5_34)))
 (let ((?x1792 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10960) ?x10962)))
 (= (+ (+ ?x1792 ?x10964) ?x10966) 0.0)))))))
(assert
 (let ((?x11001 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10998 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x10995 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x10992 (* ?x10991 l_0_5_37)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x10989 (* ?x10988 l_0_5_36)))
 (let ((?x1708 (+ (+ (- (- (* (* (- 2.0) l_0_5_32) l_0_5_35) ?x10989) ?x10992) ?x10995) ?x10998)))
 (= (+ ?x1708 ?x11001) 0.0))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11048 (* ?x10991 l_0_5_41)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11046 (* ?x10988 l_0_5_40)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11044 (* ?x10985 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11042 (* ?x11041 l_0_5_6)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11039 (* ?x10880 l_0_5_5)))
 (let ((?x1873 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x11039) ?x11042) ?x11044) ?x11046)))
 (= (- ?x1873 ?x11048) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11084 (* ?x10991 l_0_5_46)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11082 (* ?x10988 l_0_5_45)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11080 (* ?x10985 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11078 (* ?x11071 l_0_5_6)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11068 (* ?x10905 l_0_5_5)))
 (let ((?x1933 (- (- (+ (+ (* (* 2.0 l_0_5_16) l_0_5_4) ?x11068) ?x11078) ?x11080) ?x11082)))
 (= (- ?x1933 ?x11084) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11121 (* ?x10991 l_0_5_52)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11119 (* ?x10988 l_0_5_51)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11117 (* ?x10985 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11115 (* ?x11114 l_0_5_6)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11106 (* ?x10929 l_0_5_5)))
 (let ((?x2099 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x11106) ?x11115) ?x11117) ?x11119)))
 (= (- ?x2099 ?x11121) 0.0)))))))))))))
(assert
 (let ((?x11161 (* l_0_5_9 l_0_5_9)))
 (let ((?x11159 (* l_0_5_8 l_0_5_8)))
 (let ((?x11157 (* l_0_5_7 l_0_5_7)))
 (let ((?x11155 (* l_0_5_38 l_0_5_38)))
 (let ((?x11153 (* l_0_5_37 l_0_5_37)))
 (let ((?x11151 (* l_0_5_36 l_0_5_36)))
 (let ((?x2221 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11151) ?x11153)))
 (= (+ (+ (+ (- ?x2221 ?x11155) ?x11157) ?x11159) ?x11161) 0.0)))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11197 (* ?x11196 l_0_5_42)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11194 (* ?x11193 l_0_5_41)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11191 (* ?x11190 l_0_5_40)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11188 (* ?x11187 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11185 (* ?x11041 l_0_5_9)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11183 (* ?x10880 l_0_5_8)))
 (let ((?x11180 (* 2.0 l_0_5_11)))
 (let ((?x11181 (* ?x11180 l_0_5_7)))
 (let ((?x1990 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x11181) ?x11183) ?x11185) ?x11188)))
 (= (- (- (- ?x1990 ?x11191) ?x11194) ?x11197) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11244 (* ?x11196 l_0_5_47)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11242 (* ?x11193 l_0_5_46)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11240 (* ?x11190 l_0_5_45)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11238 (* ?x11187 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11236 (* ?x11071 l_0_5_9)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11227 (* ?x10905 l_0_5_8)))
 (let ((?x10980 (* 2.0 l_0_5_16)))
 (let ((?x11223 (* ?x10980 l_0_5_7)))
 (let ((?x2380 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_19) ?x11223) ?x11227) ?x11236) ?x11238)))
 (= (- (- (- ?x2380 ?x11240) ?x11242) ?x11244) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11292 (* ?x11196 l_0_5_53)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11290 (* ?x11193 l_0_5_52)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11288 (* ?x11190 l_0_5_51)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11286 (* ?x11187 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11284 (* ?x11114 l_0_5_9)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11275 (* ?x10929 l_0_5_8)))
 (let ((?x11270 (* 2.0 l_0_5_22)))
 (let ((?x11272 (* ?x11270 l_0_5_7)))
 (let ((?x2465 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_25) ?x11272) ?x11275) ?x11284) ?x11286)))
 (= (- (- (- ?x2465 ?x11288) ?x11290) ?x11292) 0.0)))))))))))))))))
(assert
 (let ((?x11344 (* l_0_5_43 l_0_5_43)))
 (let ((?x11342 (* l_0_5_42 l_0_5_42)))
 (let ((?x11340 (* l_0_5_41 l_0_5_41)))
 (let ((?x11338 (* l_0_5_40 l_0_5_40)))
 (let ((?x11336 (* l_0_5_39 l_0_5_39)))
 (let ((?x11334 (* l_0_5_15 l_0_5_15)))
 (let ((?x11332 (* l_0_5_14 l_0_5_14)))
 (let ((?x11323 (* l_0_5_13 l_0_5_13)))
 (let ((?x2600 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11323) ?x11332)))
 (= (- (- (- (- (- (+ ?x2600 ?x11334) ?x11336) ?x11338) ?x11340) ?x11342) ?x11344) 0.0)))))))))))
(assert
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11393 (* ?x11392 l_0_5_48)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11390 (* ?x11389 l_0_5_47)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11387 (* ?x11386 l_0_5_46)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11384 (* ?x11383 l_0_5_45)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11381 (* ?x11380 l_0_5_44)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11378 (* ?x11377 l_0_5_20)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11375 (* ?x11374 l_0_5_19)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11372 (* ?x11041 l_0_5_18)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11370 (* ?x10880 l_0_5_17)))
 (let ((?x2669 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x11370) ?x11372) ?x11375) ?x11378)))
 (= (- (- (- (- (- ?x2669 ?x11381) ?x11384) ?x11387) ?x11390) ?x11393) 0.0)))))))))))))))))))))
(assert
 (let ((?x11001 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x10998 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11456 (* ?x11392 l_0_5_54)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11454 (* ?x11389 l_0_5_53)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11452 (* ?x11386 l_0_5_52)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11450 (* ?x11383 l_0_5_51)))
 (let ((?x10995 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11448 (* ?x11380 l_0_5_50)))
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x10992 (* ?x10991 l_0_5_37)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x10989 (* ?x10988 l_0_5_36)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x10986 (* ?x10985 l_0_5_35)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11442 (* ?x11377 l_0_5_26)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11432 (* ?x11374 l_0_5_25)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11429 (* ?x11041 l_0_5_24)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11425 (* ?x10880 l_0_5_23)))
 (let ((?x2727 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x11425) ?x11429) ?x11432) ?x11442)))
 (let ((?x2512 (- (- (+ (- (- (- (- ?x2727 ?x10986) ?x10989) ?x10992) ?x11448) ?x10995) ?x11450) ?x11452)))
 (= (+ (+ (- (- ?x2512 ?x11454) ?x11456) ?x10998) ?x11001) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11524 (* l_0_5_49 l_0_5_49)))
 (let ((?x11522 (* l_0_5_48 l_0_5_48)))
 (let ((?x11520 (* l_0_5_47 l_0_5_47)))
 (let ((?x11518 (* l_0_5_46 l_0_5_46)))
 (let ((?x11516 (* l_0_5_45 l_0_5_45)))
 (let ((?x11514 (* l_0_5_44 l_0_5_44)))
 (let ((?x11512 (* l_0_5_21 l_0_5_21)))
 (let ((?x11510 (* l_0_5_20 l_0_5_20)))
 (let ((?x11508 (* l_0_5_19 l_0_5_19)))
 (let ((?x11506 (* l_0_5_18 l_0_5_18)))
 (let ((?x2859 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11506) ?x11508)))
 (let ((?x2784 (- (- (- (- (- (+ (+ ?x2859 ?x11510) ?x11512) ?x11514) ?x11516) ?x11518) ?x11520) ?x11522)))
 (= (- ?x2784 ?x11524) 0.0))))))))))))))
(assert
 (let ((?x11583 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11580 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11577 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11574 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11571 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11568 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11565 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11562 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11559 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11556 (* ?x11071 l_0_5_24)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11554 (* ?x10905 l_0_5_23)))
 (let ((?x2986 (+ (+ (+ (+ (* (* 2.0 l_0_5_16) l_0_5_22) ?x11554) ?x11556) ?x11559) ?x11562)))
 (let ((?x2929 (- (- (- (- (- (- (+ ?x2986 ?x11565) ?x11568) ?x11571) ?x11574) ?x11577) ?x11580) ?x11583)))
 (= ?x2929 0.0)))))))))))))))))
(assert
 (let ((?x11644 (* l_0_5_56 l_0_5_56)))
 (let ((?x11642 (* l_0_5_55 l_0_5_55)))
 (let ((?x11640 (* l_0_5_54 l_0_5_54)))
 (let ((?x11638 (* l_0_5_53 l_0_5_53)))
 (let ((?x11636 (* l_0_5_52 l_0_5_52)))
 (let ((?x11634 (* l_0_5_51 l_0_5_51)))
 (let ((?x11632 (* l_0_5_50 l_0_5_50)))
 (let ((?x11630 (* l_0_5_28 l_0_5_28)))
 (let ((?x11628 (* l_0_5_27 l_0_5_27)))
 (let ((?x11626 (* l_0_5_26 l_0_5_26)))
 (let ((?x11624 (* l_0_5_25 l_0_5_25)))
 (let ((?x11622 (* l_0_5_24 l_0_5_24)))
 (let ((?x3121 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11622) ?x11624)))
 (let ((?x11685 (- (- (- (- (+ (+ (+ ?x3121 ?x11626) ?x11628) ?x11630) ?x11632) ?x11634) ?x11636) ?x11638)))
 (= (- (- (- ?x11685 ?x11640) ?x11642) ?x11644) 0.0))))))))))))))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10755 (* ?x10754 l_0_5_30)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_2) ?x10755) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10761 (* ?x10754 l_0_5_32)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_4) ?x10761) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10771 (* ?x10754 l_0_5_35)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_7) ?x10771) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10781 (* ?x10754 l_0_5_39)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_11) ?x10781) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10791 (* ?x10754 l_0_5_44)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_16) ?x10791) 0.0))))
(assert
 (let ((?x10754 (* 2.0 l_0_5_29)))
 (let ((?x10801 (* ?x10754 l_0_5_50)))
 (= (- (* (* 2.0 l_0_5_1) l_0_5_22) ?x10801) 0.0))))
(assert
 (let ((?x10820 (* l_0_5_31 l_0_5_31)))
 (let ((?x10818 (* l_0_5_30 l_0_5_30)))
 (= (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x10818) ?x10820) 0.0))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10842 (* ?x10841 l_0_5_33)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10839 (* ?x10838 l_0_5_32)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10836 (* ?x10835 l_0_5_5)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_4) ?x10836) ?x10839) ?x10842) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10865 (* ?x10841 l_0_5_36)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10863 (* ?x10838 l_0_5_35)))
 (let ((?x10835 (* 2.0 l_0_5_3)))
 (let ((?x10856 (* ?x10835 l_0_5_8)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x10856) ?x10863) ?x10865) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10890 (* ?x10841 l_0_5_40)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10888 (* ?x10838 l_0_5_39)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x10886 (* ?x10880 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x10886) ?x10888) ?x10890) 0.0))))))))
(assert
 (let ((?x10841 (* 2.0 l_0_5_31)))
 (let ((?x10939 (* ?x10841 l_0_5_51)))
 (let ((?x10838 (* 2.0 l_0_5_30)))
 (let ((?x10937 (* ?x10838 l_0_5_50)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x10930 (* ?x10929 l_0_5_3)))
 (= (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_22) ?x10930) ?x10937) ?x10939) 0.0))))))))
(assert
 (let ((?x10966 (* l_0_5_6 l_0_5_6)))
 (let ((?x10964 (* l_0_5_5 l_0_5_5)))
 (let ((?x10962 (* l_0_5_4 l_0_5_4)))
 (let ((?x10960 (* l_0_5_34 l_0_5_34)))
 (let ((?x1792 (+ (- (- (* (- l_0_5_32) l_0_5_32) (* l_0_5_33 l_0_5_33)) ?x10960) ?x10962)))
 (= (+ (+ ?x1792 ?x10964) ?x10966) 0.0)))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11048 (* ?x10991 l_0_5_41)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11046 (* ?x10988 l_0_5_40)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11044 (* ?x10985 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11042 (* ?x11041 l_0_5_6)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11039 (* ?x10880 l_0_5_5)))
 (let ((?x1873 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x11039) ?x11042) ?x11044) ?x11046)))
 (= (- ?x1873 ?x11048) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11084 (* ?x10991 l_0_5_46)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11082 (* ?x10988 l_0_5_45)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11080 (* ?x10985 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11078 (* ?x11071 l_0_5_6)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11068 (* ?x10905 l_0_5_5)))
 (let ((?x1933 (- (- (+ (+ (* (* 2.0 l_0_5_16) l_0_5_4) ?x11068) ?x11078) ?x11080) ?x11082)))
 (= (- ?x1933 ?x11084) 0.0)))))))))))))
(assert
 (let ((?x10991 (* 2.0 l_0_5_34)))
 (let ((?x11121 (* ?x10991 l_0_5_52)))
 (let ((?x10988 (* 2.0 l_0_5_33)))
 (let ((?x11119 (* ?x10988 l_0_5_51)))
 (let ((?x10985 (* 2.0 l_0_5_32)))
 (let ((?x11117 (* ?x10985 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11115 (* ?x11114 l_0_5_6)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11106 (* ?x10929 l_0_5_5)))
 (let ((?x2099 (- (- (+ (+ (* (* 2.0 l_0_5_22) l_0_5_4) ?x11106) ?x11115) ?x11117) ?x11119)))
 (= (- ?x2099 ?x11121) 0.0)))))))))))))
(assert
 (let ((?x11161 (* l_0_5_9 l_0_5_9)))
 (let ((?x11159 (* l_0_5_8 l_0_5_8)))
 (let ((?x11157 (* l_0_5_7 l_0_5_7)))
 (let ((?x11155 (* l_0_5_38 l_0_5_38)))
 (let ((?x11153 (* l_0_5_37 l_0_5_37)))
 (let ((?x11151 (* l_0_5_36 l_0_5_36)))
 (let ((?x2221 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_35 l_0_5_35)) ?x11151) ?x11153)))
 (= (+ (+ (+ (- ?x2221 ?x11155) ?x11157) ?x11159) ?x11161) 0.0)))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11197 (* ?x11196 l_0_5_42)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11194 (* ?x11193 l_0_5_41)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11191 (* ?x11190 l_0_5_40)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11188 (* ?x11187 l_0_5_39)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11185 (* ?x11041 l_0_5_9)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11183 (* ?x10880 l_0_5_8)))
 (let ((?x11180 (* 2.0 l_0_5_11)))
 (let ((?x11181 (* ?x11180 l_0_5_7)))
 (let ((?x1990 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x11181) ?x11183) ?x11185) ?x11188)))
 (= (- (- (- ?x1990 ?x11191) ?x11194) ?x11197) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11244 (* ?x11196 l_0_5_47)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11242 (* ?x11193 l_0_5_46)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11240 (* ?x11190 l_0_5_45)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11238 (* ?x11187 l_0_5_44)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11236 (* ?x11071 l_0_5_9)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11227 (* ?x10905 l_0_5_8)))
 (let ((?x10980 (* 2.0 l_0_5_16)))
 (let ((?x11223 (* ?x10980 l_0_5_7)))
 (let ((?x2380 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_19) ?x11223) ?x11227) ?x11236) ?x11238)))
 (= (- (- (- ?x2380 ?x11240) ?x11242) ?x11244) 0.0)))))))))))))))))
(assert
 (let ((?x11196 (* 2.0 l_0_5_38)))
 (let ((?x11292 (* ?x11196 l_0_5_53)))
 (let ((?x11193 (* 2.0 l_0_5_37)))
 (let ((?x11290 (* ?x11193 l_0_5_52)))
 (let ((?x11190 (* 2.0 l_0_5_36)))
 (let ((?x11288 (* ?x11190 l_0_5_51)))
 (let ((?x11187 (* 2.0 l_0_5_35)))
 (let ((?x11286 (* ?x11187 l_0_5_50)))
 (let ((?x11114 (* 2.0 l_0_5_24)))
 (let ((?x11284 (* ?x11114 l_0_5_9)))
 (let ((?x10929 (* 2.0 l_0_5_23)))
 (let ((?x11275 (* ?x10929 l_0_5_8)))
 (let ((?x11270 (* 2.0 l_0_5_22)))
 (let ((?x11272 (* ?x11270 l_0_5_7)))
 (let ((?x2465 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_25) ?x11272) ?x11275) ?x11284) ?x11286)))
 (= (- (- (- ?x2465 ?x11288) ?x11290) ?x11292) 0.0)))))))))))))))))
(assert
 (let ((?x11344 (* l_0_5_43 l_0_5_43)))
 (let ((?x11342 (* l_0_5_42 l_0_5_42)))
 (let ((?x11340 (* l_0_5_41 l_0_5_41)))
 (let ((?x11338 (* l_0_5_40 l_0_5_40)))
 (let ((?x11336 (* l_0_5_39 l_0_5_39)))
 (let ((?x11334 (* l_0_5_15 l_0_5_15)))
 (let ((?x11332 (* l_0_5_14 l_0_5_14)))
 (let ((?x11323 (* l_0_5_13 l_0_5_13)))
 (let ((?x2600 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x11323) ?x11332)))
 (= (- (- (- (- (- (+ ?x2600 ?x11334) ?x11336) ?x11338) ?x11340) ?x11342) ?x11344) 0.0)))))))))))
(assert
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11393 (* ?x11392 l_0_5_48)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11390 (* ?x11389 l_0_5_47)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11387 (* ?x11386 l_0_5_46)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11384 (* ?x11383 l_0_5_45)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11381 (* ?x11380 l_0_5_44)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11378 (* ?x11377 l_0_5_20)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11375 (* ?x11374 l_0_5_19)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11372 (* ?x11041 l_0_5_18)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11370 (* ?x10880 l_0_5_17)))
 (let ((?x2669 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_16) ?x11370) ?x11372) ?x11375) ?x11378)))
 (= (- (- (- (- (- ?x2669 ?x11381) ?x11384) ?x11387) ?x11390) ?x11393) 0.0)))))))))))))))))))))
(assert
 (let ((?x11392 (* 2.0 l_0_5_43)))
 (let ((?x11456 (* ?x11392 l_0_5_54)))
 (let ((?x11389 (* 2.0 l_0_5_42)))
 (let ((?x11454 (* ?x11389 l_0_5_53)))
 (let ((?x11386 (* 2.0 l_0_5_41)))
 (let ((?x11452 (* ?x11386 l_0_5_52)))
 (let ((?x11383 (* 2.0 l_0_5_40)))
 (let ((?x11450 (* ?x11383 l_0_5_51)))
 (let ((?x11380 (* 2.0 l_0_5_39)))
 (let ((?x11448 (* ?x11380 l_0_5_50)))
 (let ((?x11377 (* 2.0 l_0_5_15)))
 (let ((?x11442 (* ?x11377 l_0_5_26)))
 (let ((?x11374 (* 2.0 l_0_5_14)))
 (let ((?x11432 (* ?x11374 l_0_5_25)))
 (let ((?x11041 (* 2.0 l_0_5_13)))
 (let ((?x11429 (* ?x11041 l_0_5_24)))
 (let ((?x10880 (* 2.0 l_0_5_12)))
 (let ((?x11425 (* ?x10880 l_0_5_23)))
 (let ((?x2727 (+ (+ (+ (+ (* (* 2.0 l_0_5_11) l_0_5_22) ?x11425) ?x11429) ?x11432) ?x11442)))
 (= (- (- (- (- (- ?x2727 ?x11448) ?x11450) ?x11452) ?x11454) ?x11456) 0.0)))))))))))))))))))))
(assert
 (let ((?x11524 (* l_0_5_49 l_0_5_49)))
 (let ((?x11522 (* l_0_5_48 l_0_5_48)))
 (let ((?x11520 (* l_0_5_47 l_0_5_47)))
 (let ((?x11518 (* l_0_5_46 l_0_5_46)))
 (let ((?x11516 (* l_0_5_45 l_0_5_45)))
 (let ((?x11514 (* l_0_5_44 l_0_5_44)))
 (let ((?x11512 (* l_0_5_21 l_0_5_21)))
 (let ((?x11510 (* l_0_5_20 l_0_5_20)))
 (let ((?x11508 (* l_0_5_19 l_0_5_19)))
 (let ((?x11506 (* l_0_5_18 l_0_5_18)))
 (let ((?x2859 (+ (+ (+ (* l_0_5_16 l_0_5_16) (* l_0_5_17 l_0_5_17)) ?x11506) ?x11508)))
 (let ((?x2784 (- (- (- (- (- (+ (+ ?x2859 ?x11510) ?x11512) ?x11514) ?x11516) ?x11518) ?x11520) ?x11522)))
 (= (- ?x2784 ?x11524) 0.0))))))))))))))
(assert
 (let ((?x11583 (* (* 2.0 l_0_5_49) l_0_5_55)))
 (let ((?x11580 (* (* 2.0 l_0_5_48) l_0_5_54)))
 (let ((?x11577 (* (* 2.0 l_0_5_47) l_0_5_53)))
 (let ((?x11574 (* (* 2.0 l_0_5_46) l_0_5_52)))
 (let ((?x11571 (* (* 2.0 l_0_5_45) l_0_5_51)))
 (let ((?x11568 (* (* 2.0 l_0_5_44) l_0_5_50)))
 (let ((?x11565 (* (* 2.0 l_0_5_21) l_0_5_27)))
 (let ((?x11562 (* (* 2.0 l_0_5_20) l_0_5_26)))
 (let ((?x11559 (* (* 2.0 l_0_5_19) l_0_5_25)))
 (let ((?x11071 (* 2.0 l_0_5_18)))
 (let ((?x11556 (* ?x11071 l_0_5_24)))
 (let ((?x10905 (* 2.0 l_0_5_17)))
 (let ((?x11554 (* ?x10905 l_0_5_23)))
 (let ((?x2986 (+ (+ (+ (+ (* (* 2.0 l_0_5_16) l_0_5_22) ?x11554) ?x11556) ?x11559) ?x11562)))
 (let ((?x2929 (- (- (- (- (- (- (+ ?x2986 ?x11565) ?x11568) ?x11571) ?x11574) ?x11577) ?x11580) ?x11583)))
 (= ?x2929 0.0)))))))))))))))))
(assert
 (let ((?x11644 (* l_0_5_56 l_0_5_56)))
 (let ((?x11642 (* l_0_5_55 l_0_5_55)))
 (let ((?x11640 (* l_0_5_54 l_0_5_54)))
 (let ((?x11638 (* l_0_5_53 l_0_5_53)))
 (let ((?x11636 (* l_0_5_52 l_0_5_52)))
 (let ((?x11634 (* l_0_5_51 l_0_5_51)))
 (let ((?x11632 (* l_0_5_50 l_0_5_50)))
 (let ((?x11630 (* l_0_5_28 l_0_5_28)))
 (let ((?x11628 (* l_0_5_27 l_0_5_27)))
 (let ((?x11626 (* l_0_5_26 l_0_5_26)))
 (let ((?x11624 (* l_0_5_25 l_0_5_25)))
 (let ((?x11622 (* l_0_5_24 l_0_5_24)))
 (let ((?x3121 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x11622) ?x11624)))
 (let ((?x11685 (- (- (- (- (+ (+ (+ ?x3121 ?x11626) ?x11628) ?x11630) ?x11632) ?x11634) ?x11636) ?x11638)))
 (= (- (- (- ?x11685 ?x11640) ?x11642) ?x11644) 0.0))))))))))))))))
(assert
 (= (- (* 1.0 (* l_0_5_57 l_0_5_57)) (* l_0_5_85 l_0_5_85)) 0.0))
(assert
 (let ((?x11733 (- (* (* 2.0 l_0_5_57) l_0_5_58) (* (* 2.0 l_0_5_85) l_0_5_86))))
 (= ?x11733 0.0)))
(assert
 (let ((?x11746 (- (* (* 2.0 l_0_5_57) l_0_5_60) (* (* 2.0 l_0_5_85) l_0_5_88))))
 (= ?x11746 0.0)))
(assert
 (let ((?x11759 (- (* (* 2.0 l_0_5_57) l_0_5_63) (* (* 2.0 l_0_5_85) l_0_5_91))))
 (= ?x11759 0.0)))
(assert
 (let ((?x11772 (- (* (* 2.0 l_0_5_57) l_0_5_67) (* (* 2.0 l_0_5_85) l_0_5_95))))
 (= ?x11772 0.0)))
(assert
 (let ((?x11786 (+ (* (* (- 2.0) l_0_5_100) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_72))))
 (= ?x11786 0.0)))
(assert
 (let ((?x11797 (+ (* (* (- 2.0) l_0_5_106) l_0_5_85) (* (* 2.0 l_0_5_57) l_0_5_78))))
 (= ?x11797 0.0)))
(assert
 (let ((?x11812 (* l_0_5_87 l_0_5_87)))
 (let ((?x11810 (* l_0_5_86 l_0_5_86)))
 (let ((?x11809 (+ (* 1.0 (* l_0_5_58 l_0_5_58)) (* 1.0 (* l_0_5_59 l_0_5_59)))))
 (= (- (- ?x11809 ?x11810) ?x11812) 0.0)))))
(assert
 (let ((?x11825 (+ (* (* 2.0 l_0_5_58) l_0_5_60) (* (* 2.0 l_0_5_59) l_0_5_61))))
 (let ((?x11831 (- (- ?x11825 (* (* 2.0 l_0_5_86) l_0_5_88)) (* (* 2.0 l_0_5_87) l_0_5_89))))
 (= ?x11831 0.0))))
(assert
 (let ((?x11853 (+ (* (* 2.0 l_0_5_58) l_0_5_63) (* (* 2.0 l_0_5_59) l_0_5_64))))
 (let ((?x11857 (- (- ?x11853 (* (* 2.0 l_0_5_86) l_0_5_91)) (* (* 2.0 l_0_5_87) l_0_5_92))))
 (= ?x11857 0.0))))
(assert
 (let ((?x11879 (+ (* (* 2.0 l_0_5_58) l_0_5_67) (* (* 2.0 l_0_5_59) l_0_5_68))))
 (let ((?x11883 (- (- ?x11879 (* (* 2.0 l_0_5_86) l_0_5_95)) (* (* 2.0 l_0_5_87) l_0_5_96))))
 (= ?x11883 0.0))))
(assert
 (let ((?x11905 (- (* (* (- 2.0) l_0_5_106) l_0_5_86) (* (* 2.0 l_0_5_107) l_0_5_87))))
 (let ((?x11909 (+ (+ ?x11905 (* (* 2.0 l_0_5_58) l_0_5_78)) (* (* 2.0 l_0_5_59) l_0_5_79))))
 (= ?x11909 0.0))))
(assert
 (let ((?x11938 (* l_0_5_90 l_0_5_90)))
 (let ((?x11936 (* l_0_5_89 l_0_5_89)))
 (let ((?x11934 (* l_0_5_88 l_0_5_88)))
 (let ((?x11930 (+ (* 1.0 (* l_0_5_60 l_0_5_60)) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (let ((?x11939 (- (- (- (+ ?x11930 (* 1.0 (* l_0_5_62 l_0_5_62))) ?x11934) ?x11936) ?x11938)))
 (= ?x11939 0.0)))))))
(assert
 (let ((?x11954 (+ (* (* 2.0 l_0_5_60) l_0_5_67) (* (* 2.0 l_0_5_61) l_0_5_68))))
 (let ((?x11958 (- (+ ?x11954 (* (* 2.0 l_0_5_62) l_0_5_69)) (* (* 2.0 l_0_5_88) l_0_5_95))))
 (let ((?x11962 (- (- ?x11958 (* (* 2.0 l_0_5_89) l_0_5_96)) (* (* 2.0 l_0_5_90) l_0_5_97))))
 (= ?x11962 0.0)))))
(assert
 (let ((?x11992 (- (* (* (- 2.0) l_0_5_100) l_0_5_88) (* (* 2.0 l_0_5_101) l_0_5_89))))
 (let ((?x11997 (+ (- ?x11992 (* (* 2.0 l_0_5_102) l_0_5_90)) (* (* 2.0 l_0_5_60) l_0_5_72))))
 (let ((?x12001 (+ (+ ?x11997 (* (* 2.0 l_0_5_61) l_0_5_73)) (* (* 2.0 l_0_5_62) l_0_5_74))))
 (= ?x12001 0.0)))))
(assert
 (let ((?x12022 (- (* (* (- 2.0) l_0_5_106) l_0_5_88) (* (* 2.0 l_0_5_107) l_0_5_89))))
 (let ((?x12032 (+ (- ?x12022 (* (* 2.0 l_0_5_108) l_0_5_90)) (* (* 2.0 l_0_5_60) l_0_5_78))))
 (let ((?x12036 (+ (+ ?x12032 (* (* 2.0 l_0_5_61) l_0_5_79)) (* (* 2.0 l_0_5_62) l_0_5_80))))
 (= ?x12036 0.0)))))
(assert
 (let ((?x12078 (* l_0_5_94 l_0_5_94)))
 (let ((?x12076 (* l_0_5_93 l_0_5_93)))
 (let ((?x12074 (* l_0_5_92 l_0_5_92)))
 (let ((?x12072 (* l_0_5_91 l_0_5_91)))
 (let ((?x12065 (+ (* 1.0 (* l_0_5_63 l_0_5_63)) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x12071 (+ (+ ?x12065 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- (- ?x12071 ?x12072) ?x12074) ?x12076) ?x12078) 0.0))))))))
(assert
 (let ((?x12099 (+ (* (* 2.0 l_0_5_63) l_0_5_67) (* (* 2.0 l_0_5_64) l_0_5_68))))
 (let ((?x12105 (+ (+ ?x12099 (* (* 2.0 l_0_5_65) l_0_5_69)) (* (* 2.0 l_0_5_66) l_0_5_70))))
 (let ((?x12111 (- (- ?x12105 (* (* 2.0 l_0_5_91) l_0_5_95)) (* (* 2.0 l_0_5_92) l_0_5_96))))
 (let ((?x12117 (- (- ?x12111 (* (* 2.0 l_0_5_93) l_0_5_97)) (* (* 2.0 l_0_5_94) l_0_5_98))))
 (= ?x12117 0.0))))))
(assert
 (let ((?x12155 (- (* (* (- 2.0) l_0_5_100) l_0_5_91) (* (* 2.0 l_0_5_101) l_0_5_92))))
 (let ((?x12160 (- (- ?x12155 (* (* 2.0 l_0_5_102) l_0_5_93)) (* (* 2.0 l_0_5_103) l_0_5_94))))
 (let ((?x12164 (+ (+ ?x12160 (* (* 2.0 l_0_5_63) l_0_5_72)) (* (* 2.0 l_0_5_64) l_0_5_73))))
 (let ((?x12168 (+ (+ ?x12164 (* (* 2.0 l_0_5_65) l_0_5_74)) (* (* 2.0 l_0_5_66) l_0_5_75))))
 (= ?x12168 0.0))))))
(assert
 (let ((?x12195 (- (* (* (- 2.0) l_0_5_106) l_0_5_91) (* (* 2.0 l_0_5_107) l_0_5_92))))
 (let ((?x12207 (- (- ?x12195 (* (* 2.0 l_0_5_108) l_0_5_93)) (* (* 2.0 l_0_5_109) l_0_5_94))))
 (let ((?x12211 (+ (+ ?x12207 (* (* 2.0 l_0_5_63) l_0_5_78)) (* (* 2.0 l_0_5_64) l_0_5_79))))
 (let ((?x12215 (+ (+ ?x12211 (* (* 2.0 l_0_5_65) l_0_5_80)) (* (* 2.0 l_0_5_66) l_0_5_81))))
 (= ?x12215 0.0))))))
(assert
 (let ((?x12270 (* l_0_5_99 l_0_5_99)))
 (let ((?x12268 (* l_0_5_98 l_0_5_98)))
 (let ((?x12266 (* l_0_5_97 l_0_5_97)))
 (let ((?x12264 (* l_0_5_96 l_0_5_96)))
 (let ((?x12262 (* l_0_5_95 l_0_5_95)))
 (let ((?x12245 (+ (* 1.0 (* l_0_5_67 l_0_5_67)) (* 1.0 (* l_0_5_68 l_0_5_68)))))
 (let ((?x12258 (+ (+ ?x12245 (* 1.0 (* l_0_5_69 l_0_5_69))) (* 1.0 (* l_0_5_70 l_0_5_70)))))
 (let ((?x12267 (- (- (- (+ ?x12258 (* 1.0 (* l_0_5_71 l_0_5_71))) ?x12262) ?x12264) ?x12266)))
 (= (- (- ?x12267 ?x12268) ?x12270) 0.0))))))))))
(assert
 (let ((?x12292 (- (* (* (- 2.0) l_0_5_100) l_0_5_95) (* (* 2.0 l_0_5_101) l_0_5_96))))
 (let ((?x12296 (- (- ?x12292 (* (* 2.0 l_0_5_102) l_0_5_97)) (* (* 2.0 l_0_5_103) l_0_5_98))))
 (let ((?x12301 (+ (- ?x12296 (* (* 2.0 l_0_5_104) l_0_5_99)) (* (* 2.0 l_0_5_67) l_0_5_72))))
 (let ((?x12305 (+ (+ ?x12301 (* (* 2.0 l_0_5_68) l_0_5_73)) (* (* 2.0 l_0_5_69) l_0_5_74))))
 (let ((?x12309 (+ (+ ?x12305 (* (* 2.0 l_0_5_70) l_0_5_75)) (* (* 2.0 l_0_5_71) l_0_5_76))))
 (= ?x12309 0.0)))))))
(assert
 (let ((?x12360 (* l_0_5_105 l_0_5_105)))
 (let ((?x12358 (* l_0_5_104 l_0_5_104)))
 (let ((?x12356 (* l_0_5_103 l_0_5_103)))
 (let ((?x12346 (* l_0_5_102 l_0_5_102)))
 (let ((?x12347 (- (- (* (- l_0_5_100) l_0_5_100) (* l_0_5_101 l_0_5_101)) ?x12346)))
 (let ((?x12364 (+ (- (- (- ?x12347 ?x12356) ?x12358) ?x12360) (* 1.0 (* l_0_5_72 l_0_5_72)))))
 (let ((?x12370 (+ (+ ?x12364 (* 1.0 (* l_0_5_73 l_0_5_73))) (* 1.0 (* l_0_5_74 l_0_5_74)))))
 (let ((?x12376 (+ (+ ?x12370 (* 1.0 (* l_0_5_75 l_0_5_75))) (* 1.0 (* l_0_5_76 l_0_5_76)))))
 (= (+ ?x12376 (* 1.0 (* l_0_5_77 l_0_5_77))) 0.0))))))))))
(assert
 (let ((?x12409 (- (* (* (- 2.0) l_0_5_100) l_0_5_106) (* (* 2.0 l_0_5_101) l_0_5_107))))
 (let ((?x12413 (- (- ?x12409 (* (* 2.0 l_0_5_102) l_0_5_108)) (* (* 2.0 l_0_5_103) l_0_5_109))))
 (let ((?x12418 (- (- ?x12413 (* (* 2.0 l_0_5_104) l_0_5_110)) (* (* 2.0 l_0_5_105) l_0_5_111))))
 (let ((?x12424 (+ (+ ?x12418 (* (* 2.0 l_0_5_72) l_0_5_78)) (* (* 2.0 l_0_5_73) l_0_5_79))))
 (let ((?x12430 (+ (+ ?x12424 (* (* 2.0 l_0_5_74) l_0_5_80)) (* (* 2.0 l_0_5_75) l_0_5_81))))
 (let ((?x12436 (+ (+ ?x12430 (* (* 2.0 l_0_5_76) l_0_5_82)) (* (* 2.0 l_0_5_77) l_0_5_83))))
 (= ?x12436 0.0))))))))
(assert
 (let ((?x12497 (* l_0_5_112 l_0_5_112)))
 (let ((?x12495 (* l_0_5_111 l_0_5_111)))
 (let ((?x12493 (* l_0_5_110 l_0_5_110)))
 (let ((?x12482 (* l_0_5_109 l_0_5_109)))
 (let ((?x12479 (* l_0_5_108 l_0_5_108)))
 (let ((?x12481 (- (- (* (- l_0_5_106) l_0_5_106) (* l_0_5_107 l_0_5_107)) ?x12479)))
 (let ((?x12501 (+ (- (- (- (- ?x12481 ?x12482) ?x12493) ?x12495) ?x12497) (* 1.0 (* l_0_5_78 l_0_5_78)))))
 (let ((?x12507 (+ (+ ?x12501 (* 1.0 (* l_0_5_79 l_0_5_79))) (* 1.0 (* l_0_5_80 l_0_5_80)))))
 (let ((?x12513 (+ (+ ?x12507 (* 1.0 (* l_0_5_81 l_0_5_81))) (* 1.0 (* l_0_5_82 l_0_5_82)))))
 (let ((?x12519 (+ (+ ?x12513 (* 1.0 (* l_0_5_83 l_0_5_83))) (* 1.0 (* l_0_5_84 l_0_5_84)))))
 (= ?x12519 0.0))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_28 0.0))
(assert
 (>= l_0_5_29 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_34 0.0))
(assert
 (>= l_0_5_38 0.0))
(assert
 (>= l_0_5_43 0.0))
(assert
 (>= l_0_5_49 0.0))
(assert
 (>= l_0_5_56 0.0))
(assert
 (>= l_0_5_57 0.0))
(assert
 (>= l_0_5_59 0.0))
(assert
 (>= l_0_5_62 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_71 0.0))
(assert
 (>= l_0_5_77 0.0))
(assert
 (>= l_0_5_84 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_87 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_94 0.0))
(assert
 (>= l_0_5_99 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (>= l_0_5_112 0.0))
(assert
 (let ((?x12589 (* l_0_6_29 l_0_6_29)))
 (let ((?x12585 (- (- (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_116) l_0_6_119)) (* (* 2.0 l_0_6_117) l_0_6_120))))
 (let ((?x12593 (+ (- (- ?x12585 (* (* 2.0 l_0_6_118) l_0_6_121)) ?x12589) (* (* 2.0 l_0_6_60) l_0_6_63))))
 (let ((?x12599 (+ (+ ?x12593 (* (* 2.0 l_0_6_61) l_0_6_64)) (* (* 2.0 l_0_6_62) l_0_6_65))))
 (let ((?x12605 (- (- ?x12599 (* (* 2.0 l_0_6_88) l_0_6_91)) (* (* 2.0 l_0_6_89) l_0_6_92))))
 (= (+ (- ?x12605 (* (* 2.0 l_0_6_90) l_0_6_93)) 1.0) 0.0)))))))
(assert
 (let ((?x12589 (* l_0_6_29 l_0_6_29)))
 (let ((?x12663 (- (- (* l_0_6_1 l_0_6_1) (* (* 2.0 l_0_6_106) l_0_6_95)) (* (* 2.0 l_0_6_107) l_0_6_96))))
 (let ((?x12669 (- (- ?x12663 (* (* 2.0 l_0_6_108) l_0_6_97)) (* (* 2.0 l_0_6_109) l_0_6_98))))
 (let ((?x12675 (- (- ?x12669 (* (* 2.0 l_0_6_110) l_0_6_99)) (* (* 2.0 l_0_6_123) l_0_6_134))))
 (let ((?x12681 (- (- ?x12675 (* (* 2.0 l_0_6_124) l_0_6_135)) (* (* 2.0 l_0_6_125) l_0_6_136))))
 (let ((?x12687 (- (- ?x12681 (* (* 2.0 l_0_6_126) l_0_6_137)) (* (* 2.0 l_0_6_127) l_0_6_138))))
 (let ((?x12694 (+ (+ (- ?x12687 ?x12589) (* (* 2.0 l_0_6_67) l_0_6_78)) (* (* 2.0 l_0_6_68) l_0_6_79))))
 (let ((?x12700 (+ (+ ?x12694 (* (* 2.0 l_0_6_69) l_0_6_80)) (* (* 2.0 l_0_6_70) l_0_6_81))))
 (= (+ (+ ?x12700 (* (* 2.0 l_0_6_71) l_0_6_82)) 1.0) 0.0))))))))))
(assert
 (let ((?x12589 (* l_0_6_29 l_0_6_29)))
 (let ((?x12779 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_100) l_0_6_86)) (* (* 2.0 l_0_6_101) l_0_6_87))))
 (let ((?x12785 (- (- ?x12779 (* (* 2.0 l_0_6_114) l_0_6_128)) (* (* 2.0 l_0_6_115) l_0_6_129))))
 (let ((?x12792 (+ (+ (+ ?x12785 ?x12589) (* (* 2.0 l_0_6_58) l_0_6_72)) (* (* 2.0 l_0_6_59) l_0_6_73))))
 (= (- ?x12792 1.0) 0.0))))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12822 (* ?x12821 l_0_6_30)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x12822) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12828 (* ?x12821 l_0_6_32)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_4) ?x12828) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12838 (* ?x12821 l_0_6_35)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_7) ?x12838) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12848 (* ?x12821 l_0_6_39)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_11) ?x12848) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12858 (* ?x12821 l_0_6_44)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_16) ?x12858) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12868 (* ?x12821 l_0_6_50)))
 (= (+ (* (* (- 2.0) l_0_6_1) l_0_6_22) ?x12868) 0.0))))
(assert
 (let ((?x12887 (* l_0_6_31 l_0_6_31)))
 (let ((?x12885 (* l_0_6_30 l_0_6_30)))
 (let ((?x12888 (+ (+ (- (* (- l_0_6_2) l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12885) ?x12887)))
 (= ?x12888 0.0)))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12909 (* ?x12908 l_0_6_33)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12906 (* ?x12905 l_0_6_32)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12903 (* ?x12902 l_0_6_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_4) ?x12903) ?x12906) ?x12909) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12932 (* ?x12908 l_0_6_36)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12930 (* ?x12905 l_0_6_35)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12923 (* ?x12902 l_0_6_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_7) ?x12923) ?x12930) ?x12932) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12957 (* ?x12908 l_0_6_40)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12955 (* ?x12905 l_0_6_39)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x12953 (* ?x12947 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x12953) ?x12955) ?x12957) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12982 (* ?x12908 l_0_6_45)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12980 (* ?x12905 l_0_6_44)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x12978 (* ?x12972 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_16) l_0_6_2) ?x12978) ?x12980) ?x12982) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x13006 (* ?x12908 l_0_6_51)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x13004 (* ?x12905 l_0_6_50)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x12997 (* ?x12996 l_0_6_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_22) ?x12997) ?x13004) ?x13006) 0.0))))))))
(assert
 (let ((?x13033 (* l_0_6_6 l_0_6_6)))
 (let ((?x13031 (* l_0_6_5 l_0_6_5)))
 (let ((?x13029 (* l_0_6_4 l_0_6_4)))
 (let ((?x13027 (* l_0_6_34 l_0_6_34)))
 (let ((?x13030 (- (+ (+ (* l_0_6_32 l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13027) ?x13029)))
 (= (- (- ?x13030 ?x13031) ?x13033) 0.0)))))))
(assert
 (let ((?x13068 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13065 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13062 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13059 (* ?x13058 l_0_6_37)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13056 (* ?x13055 l_0_6_36)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13053 (* ?x13052 l_0_6_35)))
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12982 (* ?x12908 l_0_6_45)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12980 (* ?x12905 l_0_6_44)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x12978 (* ?x12972 l_0_6_3)))
 (let ((?x13047 (* 2.0 l_0_6_16)))
 (let ((?x13048 (* ?x13047 l_0_6_2)))
 (let ((?x13063 (- (+ (+ (+ (- (- (+ ?x13048 ?x12978) ?x12980) ?x12982) ?x13053) ?x13056) ?x13059) ?x13062)))
 (= (- (- ?x13063 ?x13065) ?x13068) 0.0))))))))))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13114 (* ?x13058 l_0_6_41)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13112 (* ?x13055 l_0_6_40)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13110 (* ?x13052 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13108 (* ?x13107 l_0_6_6)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13105 (* ?x12947 l_0_6_5)))
 (let ((?x13113 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x13105) ?x13108) ?x13110) ?x13112)))
 (= (+ ?x13113 ?x13114) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13141 (* ?x13058 l_0_6_46)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13139 (* ?x13055 l_0_6_45)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13137 (* ?x13052 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13135 (* ?x3527 l_0_6_6)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x3526 (* ?x12972 l_0_6_5)))
 (let ((?x13140 (+ (+ (- (- (* (* (- 2.0) l_0_6_16) l_0_6_4) ?x3526) ?x13135) ?x13137) ?x13139)))
 (= (+ ?x13140 ?x13141) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13165 (* ?x13058 l_0_6_52)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13163 (* ?x13055 l_0_6_51)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13161 (* ?x13052 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13159 (* ?x13158 l_0_6_6)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x13156 (* ?x12996 l_0_6_5)))
 (let ((?x13164 (+ (+ (- (- (* (* (- 2.0) l_0_6_22) l_0_6_4) ?x13156) ?x13159) ?x13161) ?x13163)))
 (= (+ ?x13164 ?x13165) 0.0)))))))))))))
(assert
 (let ((?x13198 (* l_0_6_9 l_0_6_9)))
 (let ((?x13196 (* l_0_6_8 l_0_6_8)))
 (let ((?x13194 (* l_0_6_7 l_0_6_7)))
 (let ((?x13192 (* l_0_6_38 l_0_6_38)))
 (let ((?x13190 (* l_0_6_37 l_0_6_37)))
 (let ((?x13188 (* l_0_6_36 l_0_6_36)))
 (let ((?x13191 (+ (+ (+ (* (- l_0_6_10) l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13188) ?x13190)))
 (= (- (- (- (+ ?x13191 ?x13192) ?x13194) ?x13196) ?x13198) 0.0)))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13228 (* ?x13227 l_0_6_42)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13225 (* ?x13224 l_0_6_41)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13222 (* ?x13221 l_0_6_40)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13219 (* ?x13218 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13216 (* ?x13107 l_0_6_9)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13214 (* ?x12947 l_0_6_8)))
 (let ((?x13211 (* 2.0 l_0_6_11)))
 (let ((?x13212 (* ?x13211 l_0_6_7)))
 (let ((?x13220 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x13212) ?x13214) ?x13216) ?x13219)))
 (= (+ (+ (+ ?x13220 ?x13222) ?x13225) ?x13228) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13263 (* ?x13227 l_0_6_47)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13261 (* ?x13224 l_0_6_46)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13259 (* ?x13221 l_0_6_45)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13257 (* ?x13218 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13255 (* ?x3527 l_0_6_9)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13246 (* ?x12972 l_0_6_8)))
 (let ((?x13047 (* 2.0 l_0_6_16)))
 (let ((?x3598 (* ?x13047 l_0_6_7)))
 (let ((?x13258 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_19) ?x3598) ?x13246) ?x13255) ?x13257)))
 (= (+ (+ (+ ?x13258 ?x13259) ?x13261) ?x13263) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13291 (* ?x13227 l_0_6_53)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13289 (* ?x13224 l_0_6_52)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13287 (* ?x13221 l_0_6_51)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13285 (* ?x13218 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13283 (* ?x13158 l_0_6_9)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x3704 (* ?x12996 l_0_6_8)))
 (let ((?x3697 (* 2.0 l_0_6_22)))
 (let ((?x3699 (* ?x3697 l_0_6_7)))
 (let ((?x13286 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_25) ?x3699) ?x3704) ?x13283) ?x13285)))
 (= (+ (+ (+ ?x13286 ?x13287) ?x13289) ?x13291) 0.0)))))))))))))))))
(assert
 (let ((?x13330 (* l_0_6_43 l_0_6_43)))
 (let ((?x13328 (* l_0_6_42 l_0_6_42)))
 (let ((?x13326 (* l_0_6_41 l_0_6_41)))
 (let ((?x13324 (* l_0_6_40 l_0_6_40)))
 (let ((?x13322 (* l_0_6_39 l_0_6_39)))
 (let ((?x13320 (* l_0_6_15 l_0_6_15)))
 (let ((?x13318 (* l_0_6_14 l_0_6_14)))
 (let ((?x13309 (* l_0_6_13 l_0_6_13)))
 (let ((?x13319 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13309) ?x13318)))
 (= (+ (+ (+ (+ (+ (- ?x13319 ?x13320) ?x13322) ?x13324) ?x13326) ?x13328) ?x13330) 0.0)))))))))))
(assert
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13375 (* ?x13374 l_0_6_48)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13372 (* ?x13371 l_0_6_47)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13369 (* ?x13368 l_0_6_46)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13366 (* ?x13365 l_0_6_45)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13363 (* ?x13362 l_0_6_44)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13360 (* ?x13359 l_0_6_20)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13357 (* ?x13356 l_0_6_19)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13354 (* ?x13107 l_0_6_18)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13352 (* ?x12947 l_0_6_17)))
 (let ((?x13361 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_16) ?x13352) ?x13354) ?x13357) ?x13360)))
 (= (+ (+ (+ (+ (+ ?x13361 ?x13363) ?x13366) ?x13369) ?x13372) ?x13375) 0.0)))))))))))))))))))))
(assert
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13428 (* ?x13374 l_0_6_54)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13426 (* ?x13371 l_0_6_53)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13424 (* ?x13368 l_0_6_52)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13422 (* ?x13365 l_0_6_51)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13420 (* ?x13362 l_0_6_50)))
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12982 (* ?x12908 l_0_6_45)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12980 (* ?x12905 l_0_6_44)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x12978 (* ?x12972 l_0_6_3)))
 (let ((?x13047 (* 2.0 l_0_6_16)))
 (let ((?x13048 (* ?x13047 l_0_6_2)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13414 (* ?x13359 l_0_6_26)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13404 (* ?x13356 l_0_6_25)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13401 (* ?x13107 l_0_6_24)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13397 (* ?x12947 l_0_6_23)))
 (let ((?x13415 (- (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_22) ?x13397) ?x13401) ?x13404) ?x13414)))
 (let ((?x13425 (+ (+ (+ (- (- (+ (+ ?x13415 ?x13048) ?x12978) ?x12980) ?x12982) ?x13420) ?x13422) ?x13424)))
 (= (+ (+ ?x13425 ?x13426) ?x13428) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13469 (* l_0_6_49 l_0_6_49)))
 (let ((?x13467 (* l_0_6_48 l_0_6_48)))
 (let ((?x13465 (* l_0_6_47 l_0_6_47)))
 (let ((?x13463 (* l_0_6_46 l_0_6_46)))
 (let ((?x13461 (* l_0_6_45 l_0_6_45)))
 (let ((?x13459 (* l_0_6_44 l_0_6_44)))
 (let ((?x13457 (* l_0_6_21 l_0_6_21)))
 (let ((?x13455 (* l_0_6_20 l_0_6_20)))
 (let ((?x13453 (* l_0_6_19 l_0_6_19)))
 (let ((?x3921 (* l_0_6_18 l_0_6_18)))
 (let ((?x13454 (- (- (- (* (- l_0_6_16) l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x3921) ?x13453)))
 (let ((?x13468 (+ (+ (+ (+ (+ (- (- ?x13454 ?x13455) ?x13457) ?x13459) ?x13461) ?x13463) ?x13465) ?x13467)))
 (= (+ ?x13468 ?x13469) 0.0))))))))))))))
(assert
 (let ((?x13518 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13515 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13512 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13509 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13506 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13503 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13500 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13497 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13494 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13491 (* ?x3527 l_0_6_24)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13489 (* ?x12972 l_0_6_23)))
 (let ((?x13498 (- (- (- (- (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x13489) ?x13491) ?x13494) ?x13497)))
 (let ((?x13519 (+ (+ (+ (+ (+ (+ (- ?x13498 ?x13500) ?x13503) ?x13506) ?x13509) ?x13512) ?x13515) ?x13518)))
 (= ?x13519 0.0)))))))))))))))))
(assert
 (let ((?x13573 (* l_0_6_56 l_0_6_56)))
 (let ((?x13571 (* l_0_6_55 l_0_6_55)))
 (let ((?x13569 (* l_0_6_54 l_0_6_54)))
 (let ((?x13567 (* l_0_6_53 l_0_6_53)))
 (let ((?x13565 (* l_0_6_52 l_0_6_52)))
 (let ((?x13563 (* l_0_6_51 l_0_6_51)))
 (let ((?x13561 (* l_0_6_50 l_0_6_50)))
 (let ((?x13559 (* l_0_6_28 l_0_6_28)))
 (let ((?x13557 (* l_0_6_27 l_0_6_27)))
 (let ((?x13555 (* l_0_6_26 l_0_6_26)))
 (let ((?x13544 (* l_0_6_25 l_0_6_25)))
 (let ((?x13541 (* l_0_6_24 l_0_6_24)))
 (let ((?x13554 (- (- (- (* (- l_0_6_22) l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13541) ?x13544)))
 (let ((?x13568 (+ (+ (+ (+ (- (- (- ?x13554 ?x13555) ?x13557) ?x13559) ?x13561) ?x13563) ?x13565) ?x13567)))
 (= (+ (+ (+ ?x13568 ?x13569) ?x13571) ?x13573) 0.0))))))))))))))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12822 (* ?x12821 l_0_6_30)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x12822) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12828 (* ?x12821 l_0_6_32)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x12828) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12838 (* ?x12821 l_0_6_35)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x12838) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12848 (* ?x12821 l_0_6_39)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_11) ?x12848) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12858 (* ?x12821 l_0_6_44)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_16) ?x12858) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12868 (* ?x12821 l_0_6_50)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_22) ?x12868) 0.0))))
(assert
 (let ((?x12887 (* l_0_6_31 l_0_6_31)))
 (let ((?x12885 (* l_0_6_30 l_0_6_30)))
 (= (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12885) ?x12887) 0.0))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12909 (* ?x12908 l_0_6_33)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12906 (* ?x12905 l_0_6_32)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12903 (* ?x12902 l_0_6_5)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_4) ?x12903) ?x12906) ?x12909) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12932 (* ?x12908 l_0_6_36)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12930 (* ?x12905 l_0_6_35)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12923 (* ?x12902 l_0_6_8)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x12923) ?x12930) ?x12932) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12957 (* ?x12908 l_0_6_40)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12955 (* ?x12905 l_0_6_39)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x12953 (* ?x12947 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x12953) ?x12955) ?x12957) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x13006 (* ?x12908 l_0_6_51)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x13004 (* ?x12905 l_0_6_50)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x12997 (* ?x12996 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_22) ?x12997) ?x13004) ?x13006) 0.0))))))))
(assert
 (let ((?x13033 (* l_0_6_6 l_0_6_6)))
 (let ((?x13031 (* l_0_6_5 l_0_6_5)))
 (let ((?x13029 (* l_0_6_4 l_0_6_4)))
 (let ((?x13027 (* l_0_6_34 l_0_6_34)))
 (let ((?x4441 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13027) ?x13029)))
 (= (+ (+ ?x4441 ?x13031) ?x13033) 0.0)))))))
(assert
 (let ((?x13068 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13065 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13062 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13059 (* ?x13058 l_0_6_37)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13056 (* ?x13055 l_0_6_36)))
 (let ((?x4372 (+ (+ (- (- (* (* (- 2.0) l_0_6_32) l_0_6_35) ?x13056) ?x13059) ?x13062) ?x13065)))
 (= (+ ?x4372 ?x13068) 0.0))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13114 (* ?x13058 l_0_6_41)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13112 (* ?x13055 l_0_6_40)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13110 (* ?x13052 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13108 (* ?x13107 l_0_6_6)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13105 (* ?x12947 l_0_6_5)))
 (let ((?x4476 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x13105) ?x13108) ?x13110) ?x13112)))
 (= (- ?x4476 ?x13114) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13141 (* ?x13058 l_0_6_46)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13139 (* ?x13055 l_0_6_45)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13137 (* ?x13052 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13135 (* ?x3527 l_0_6_6)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x3526 (* ?x12972 l_0_6_5)))
 (let ((?x13621 (- (- (+ (+ (* (* 2.0 l_0_6_16) l_0_6_4) ?x3526) ?x13135) ?x13137) ?x13139)))
 (= (- ?x13621 ?x13141) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13165 (* ?x13058 l_0_6_52)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13163 (* ?x13055 l_0_6_51)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13161 (* ?x13052 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13159 (* ?x13158 l_0_6_6)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x13156 (* ?x12996 l_0_6_5)))
 (let ((?x4538 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x13156) ?x13159) ?x13161) ?x13163)))
 (= (- ?x4538 ?x13165) 0.0)))))))))))))
(assert
 (let ((?x13198 (* l_0_6_9 l_0_6_9)))
 (let ((?x13196 (* l_0_6_8 l_0_6_8)))
 (let ((?x13194 (* l_0_6_7 l_0_6_7)))
 (let ((?x13192 (* l_0_6_38 l_0_6_38)))
 (let ((?x13190 (* l_0_6_37 l_0_6_37)))
 (let ((?x13188 (* l_0_6_36 l_0_6_36)))
 (let ((?x4587 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13188) ?x13190)))
 (= (+ (+ (+ (- ?x4587 ?x13192) ?x13194) ?x13196) ?x13198) 0.0)))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13228 (* ?x13227 l_0_6_42)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13225 (* ?x13224 l_0_6_41)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13222 (* ?x13221 l_0_6_40)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13219 (* ?x13218 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13216 (* ?x13107 l_0_6_9)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13214 (* ?x12947 l_0_6_8)))
 (let ((?x13211 (* 2.0 l_0_6_11)))
 (let ((?x13212 (* ?x13211 l_0_6_7)))
 (let ((?x13635 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x13212) ?x13214) ?x13216) ?x13219)))
 (= (- (- (- ?x13635 ?x13222) ?x13225) ?x13228) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13263 (* ?x13227 l_0_6_47)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13261 (* ?x13224 l_0_6_46)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13259 (* ?x13221 l_0_6_45)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13257 (* ?x13218 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13255 (* ?x3527 l_0_6_9)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13246 (* ?x12972 l_0_6_8)))
 (let ((?x13047 (* 2.0 l_0_6_16)))
 (let ((?x3598 (* ?x13047 l_0_6_7)))
 (let ((?x13643 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_19) ?x3598) ?x13246) ?x13255) ?x13257)))
 (= (- (- (- ?x13643 ?x13259) ?x13261) ?x13263) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13291 (* ?x13227 l_0_6_53)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13289 (* ?x13224 l_0_6_52)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13287 (* ?x13221 l_0_6_51)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13285 (* ?x13218 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13283 (* ?x13158 l_0_6_9)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x3704 (* ?x12996 l_0_6_8)))
 (let ((?x3697 (* 2.0 l_0_6_22)))
 (let ((?x3699 (* ?x3697 l_0_6_7)))
 (let ((?x4897 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_25) ?x3699) ?x3704) ?x13283) ?x13285)))
 (= (- (- (- ?x4897 ?x13287) ?x13289) ?x13291) 0.0)))))))))))))))))
(assert
 (let ((?x13330 (* l_0_6_43 l_0_6_43)))
 (let ((?x13328 (* l_0_6_42 l_0_6_42)))
 (let ((?x13326 (* l_0_6_41 l_0_6_41)))
 (let ((?x13324 (* l_0_6_40 l_0_6_40)))
 (let ((?x13322 (* l_0_6_39 l_0_6_39)))
 (let ((?x13320 (* l_0_6_15 l_0_6_15)))
 (let ((?x13318 (* l_0_6_14 l_0_6_14)))
 (let ((?x13309 (* l_0_6_13 l_0_6_13)))
 (let ((?x4982 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13309) ?x13318)))
 (= (- (- (- (- (- (+ ?x4982 ?x13320) ?x13322) ?x13324) ?x13326) ?x13328) ?x13330) 0.0)))))))))))
(assert
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13375 (* ?x13374 l_0_6_48)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13372 (* ?x13371 l_0_6_47)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13369 (* ?x13368 l_0_6_46)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13366 (* ?x13365 l_0_6_45)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13363 (* ?x13362 l_0_6_44)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13360 (* ?x13359 l_0_6_20)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13357 (* ?x13356 l_0_6_19)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13354 (* ?x13107 l_0_6_18)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13352 (* ?x12947 l_0_6_17)))
 (let ((?x5084 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x13352) ?x13354) ?x13357) ?x13360)))
 (= (- (- (- (- (- ?x5084 ?x13363) ?x13366) ?x13369) ?x13372) ?x13375) 0.0)))))))))))))))))))))
(assert
 (let ((?x13068 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x13065 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13428 (* ?x13374 l_0_6_54)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13426 (* ?x13371 l_0_6_53)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13424 (* ?x13368 l_0_6_52)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13422 (* ?x13365 l_0_6_51)))
 (let ((?x13062 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13420 (* ?x13362 l_0_6_50)))
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13059 (* ?x13058 l_0_6_37)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13056 (* ?x13055 l_0_6_36)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13053 (* ?x13052 l_0_6_35)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13414 (* ?x13359 l_0_6_26)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13404 (* ?x13356 l_0_6_25)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13401 (* ?x13107 l_0_6_24)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13397 (* ?x12947 l_0_6_23)))
 (let ((?x5166 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x13397) ?x13401) ?x13404) ?x13414)))
 (let ((?x4798 (- (- (+ (- (- (- (- ?x5166 ?x13053) ?x13056) ?x13059) ?x13420) ?x13062) ?x13422) ?x13424)))
 (= (+ (+ (- (- ?x4798 ?x13426) ?x13428) ?x13065) ?x13068) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13469 (* l_0_6_49 l_0_6_49)))
 (let ((?x13467 (* l_0_6_48 l_0_6_48)))
 (let ((?x13465 (* l_0_6_47 l_0_6_47)))
 (let ((?x13463 (* l_0_6_46 l_0_6_46)))
 (let ((?x13461 (* l_0_6_45 l_0_6_45)))
 (let ((?x13459 (* l_0_6_44 l_0_6_44)))
 (let ((?x13457 (* l_0_6_21 l_0_6_21)))
 (let ((?x13455 (* l_0_6_20 l_0_6_20)))
 (let ((?x13453 (* l_0_6_19 l_0_6_19)))
 (let ((?x3921 (* l_0_6_18 l_0_6_18)))
 (let ((?x5297 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x3921) ?x13453)))
 (let ((?x5262 (- (- (- (- (- (+ (+ ?x5297 ?x13455) ?x13457) ?x13459) ?x13461) ?x13463) ?x13465) ?x13467)))
 (= (- ?x5262 ?x13469) 0.0))))))))))))))
(assert
 (let ((?x13518 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13515 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13512 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13509 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13506 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13503 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13500 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13497 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13494 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13491 (* ?x3527 l_0_6_24)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13489 (* ?x12972 l_0_6_23)))
 (let ((?x5429 (+ (+ (+ (+ (* (* 2.0 l_0_6_16) l_0_6_22) ?x13489) ?x13491) ?x13494) ?x13497)))
 (let ((?x5369 (- (- (- (- (- (- (+ ?x5429 ?x13500) ?x13503) ?x13506) ?x13509) ?x13512) ?x13515) ?x13518)))
 (= ?x5369 0.0)))))))))))))))))
(assert
 (let ((?x13573 (* l_0_6_56 l_0_6_56)))
 (let ((?x13571 (* l_0_6_55 l_0_6_55)))
 (let ((?x13569 (* l_0_6_54 l_0_6_54)))
 (let ((?x13567 (* l_0_6_53 l_0_6_53)))
 (let ((?x13565 (* l_0_6_52 l_0_6_52)))
 (let ((?x13563 (* l_0_6_51 l_0_6_51)))
 (let ((?x13561 (* l_0_6_50 l_0_6_50)))
 (let ((?x13559 (* l_0_6_28 l_0_6_28)))
 (let ((?x13557 (* l_0_6_27 l_0_6_27)))
 (let ((?x13555 (* l_0_6_26 l_0_6_26)))
 (let ((?x13544 (* l_0_6_25 l_0_6_25)))
 (let ((?x13541 (* l_0_6_24 l_0_6_24)))
 (let ((?x5535 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13541) ?x13544)))
 (let ((?x5559 (- (- (- (- (+ (+ (+ ?x5535 ?x13555) ?x13557) ?x13559) ?x13561) ?x13563) ?x13565) ?x13567)))
 (= (- (- (- ?x5559 ?x13569) ?x13571) ?x13573) 0.0))))))))))))))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12822 (* ?x12821 l_0_6_30)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_2) ?x12822) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12828 (* ?x12821 l_0_6_32)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_4) ?x12828) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12838 (* ?x12821 l_0_6_35)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_7) ?x12838) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12848 (* ?x12821 l_0_6_39)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_11) ?x12848) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12858 (* ?x12821 l_0_6_44)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_16) ?x12858) 0.0))))
(assert
 (let ((?x12821 (* 2.0 l_0_6_29)))
 (let ((?x12868 (* ?x12821 l_0_6_50)))
 (= (- (* (* 2.0 l_0_6_1) l_0_6_22) ?x12868) 0.0))))
(assert
 (let ((?x12887 (* l_0_6_31 l_0_6_31)))
 (let ((?x12885 (* l_0_6_30 l_0_6_30)))
 (= (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x12885) ?x12887) 0.0))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12909 (* ?x12908 l_0_6_33)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12906 (* ?x12905 l_0_6_32)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12903 (* ?x12902 l_0_6_5)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_4) ?x12903) ?x12906) ?x12909) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12932 (* ?x12908 l_0_6_36)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12930 (* ?x12905 l_0_6_35)))
 (let ((?x12902 (* 2.0 l_0_6_3)))
 (let ((?x12923 (* ?x12902 l_0_6_8)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x12923) ?x12930) ?x12932) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x12957 (* ?x12908 l_0_6_40)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x12955 (* ?x12905 l_0_6_39)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x12953 (* ?x12947 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x12953) ?x12955) ?x12957) 0.0))))))))
(assert
 (let ((?x12908 (* 2.0 l_0_6_31)))
 (let ((?x13006 (* ?x12908 l_0_6_51)))
 (let ((?x12905 (* 2.0 l_0_6_30)))
 (let ((?x13004 (* ?x12905 l_0_6_50)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x12997 (* ?x12996 l_0_6_3)))
 (= (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_22) ?x12997) ?x13004) ?x13006) 0.0))))))))
(assert
 (let ((?x13033 (* l_0_6_6 l_0_6_6)))
 (let ((?x13031 (* l_0_6_5 l_0_6_5)))
 (let ((?x13029 (* l_0_6_4 l_0_6_4)))
 (let ((?x13027 (* l_0_6_34 l_0_6_34)))
 (let ((?x4441 (+ (- (- (* (- l_0_6_32) l_0_6_32) (* l_0_6_33 l_0_6_33)) ?x13027) ?x13029)))
 (= (+ (+ ?x4441 ?x13031) ?x13033) 0.0)))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13114 (* ?x13058 l_0_6_41)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13112 (* ?x13055 l_0_6_40)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13110 (* ?x13052 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13108 (* ?x13107 l_0_6_6)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13105 (* ?x12947 l_0_6_5)))
 (let ((?x4476 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x13105) ?x13108) ?x13110) ?x13112)))
 (= (- ?x4476 ?x13114) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13141 (* ?x13058 l_0_6_46)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13139 (* ?x13055 l_0_6_45)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13137 (* ?x13052 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13135 (* ?x3527 l_0_6_6)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x3526 (* ?x12972 l_0_6_5)))
 (let ((?x13621 (- (- (+ (+ (* (* 2.0 l_0_6_16) l_0_6_4) ?x3526) ?x13135) ?x13137) ?x13139)))
 (= (- ?x13621 ?x13141) 0.0)))))))))))))
(assert
 (let ((?x13058 (* 2.0 l_0_6_34)))
 (let ((?x13165 (* ?x13058 l_0_6_52)))
 (let ((?x13055 (* 2.0 l_0_6_33)))
 (let ((?x13163 (* ?x13055 l_0_6_51)))
 (let ((?x13052 (* 2.0 l_0_6_32)))
 (let ((?x13161 (* ?x13052 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13159 (* ?x13158 l_0_6_6)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x13156 (* ?x12996 l_0_6_5)))
 (let ((?x4538 (- (- (+ (+ (* (* 2.0 l_0_6_22) l_0_6_4) ?x13156) ?x13159) ?x13161) ?x13163)))
 (= (- ?x4538 ?x13165) 0.0)))))))))))))
(assert
 (let ((?x13198 (* l_0_6_9 l_0_6_9)))
 (let ((?x13196 (* l_0_6_8 l_0_6_8)))
 (let ((?x13194 (* l_0_6_7 l_0_6_7)))
 (let ((?x13192 (* l_0_6_38 l_0_6_38)))
 (let ((?x13190 (* l_0_6_37 l_0_6_37)))
 (let ((?x13188 (* l_0_6_36 l_0_6_36)))
 (let ((?x4587 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_35 l_0_6_35)) ?x13188) ?x13190)))
 (= (+ (+ (+ (- ?x4587 ?x13192) ?x13194) ?x13196) ?x13198) 0.0)))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13228 (* ?x13227 l_0_6_42)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13225 (* ?x13224 l_0_6_41)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13222 (* ?x13221 l_0_6_40)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13219 (* ?x13218 l_0_6_39)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13216 (* ?x13107 l_0_6_9)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13214 (* ?x12947 l_0_6_8)))
 (let ((?x13211 (* 2.0 l_0_6_11)))
 (let ((?x13212 (* ?x13211 l_0_6_7)))
 (let ((?x13635 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x13212) ?x13214) ?x13216) ?x13219)))
 (= (- (- (- ?x13635 ?x13222) ?x13225) ?x13228) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13263 (* ?x13227 l_0_6_47)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13261 (* ?x13224 l_0_6_46)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13259 (* ?x13221 l_0_6_45)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13257 (* ?x13218 l_0_6_44)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13255 (* ?x3527 l_0_6_9)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13246 (* ?x12972 l_0_6_8)))
 (let ((?x13047 (* 2.0 l_0_6_16)))
 (let ((?x3598 (* ?x13047 l_0_6_7)))
 (let ((?x13643 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_19) ?x3598) ?x13246) ?x13255) ?x13257)))
 (= (- (- (- ?x13643 ?x13259) ?x13261) ?x13263) 0.0)))))))))))))))))
(assert
 (let ((?x13227 (* 2.0 l_0_6_38)))
 (let ((?x13291 (* ?x13227 l_0_6_53)))
 (let ((?x13224 (* 2.0 l_0_6_37)))
 (let ((?x13289 (* ?x13224 l_0_6_52)))
 (let ((?x13221 (* 2.0 l_0_6_36)))
 (let ((?x13287 (* ?x13221 l_0_6_51)))
 (let ((?x13218 (* 2.0 l_0_6_35)))
 (let ((?x13285 (* ?x13218 l_0_6_50)))
 (let ((?x13158 (* 2.0 l_0_6_24)))
 (let ((?x13283 (* ?x13158 l_0_6_9)))
 (let ((?x12996 (* 2.0 l_0_6_23)))
 (let ((?x3704 (* ?x12996 l_0_6_8)))
 (let ((?x3697 (* 2.0 l_0_6_22)))
 (let ((?x3699 (* ?x3697 l_0_6_7)))
 (let ((?x4897 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_25) ?x3699) ?x3704) ?x13283) ?x13285)))
 (= (- (- (- ?x4897 ?x13287) ?x13289) ?x13291) 0.0)))))))))))))))))
(assert
 (let ((?x13330 (* l_0_6_43 l_0_6_43)))
 (let ((?x13328 (* l_0_6_42 l_0_6_42)))
 (let ((?x13326 (* l_0_6_41 l_0_6_41)))
 (let ((?x13324 (* l_0_6_40 l_0_6_40)))
 (let ((?x13322 (* l_0_6_39 l_0_6_39)))
 (let ((?x13320 (* l_0_6_15 l_0_6_15)))
 (let ((?x13318 (* l_0_6_14 l_0_6_14)))
 (let ((?x13309 (* l_0_6_13 l_0_6_13)))
 (let ((?x4982 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x13309) ?x13318)))
 (= (- (- (- (- (- (+ ?x4982 ?x13320) ?x13322) ?x13324) ?x13326) ?x13328) ?x13330) 0.0)))))))))))
(assert
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13375 (* ?x13374 l_0_6_48)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13372 (* ?x13371 l_0_6_47)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13369 (* ?x13368 l_0_6_46)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13366 (* ?x13365 l_0_6_45)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13363 (* ?x13362 l_0_6_44)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13360 (* ?x13359 l_0_6_20)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13357 (* ?x13356 l_0_6_19)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13354 (* ?x13107 l_0_6_18)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13352 (* ?x12947 l_0_6_17)))
 (let ((?x5084 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_16) ?x13352) ?x13354) ?x13357) ?x13360)))
 (= (- (- (- (- (- ?x5084 ?x13363) ?x13366) ?x13369) ?x13372) ?x13375) 0.0)))))))))))))))))))))
(assert
 (let ((?x13374 (* 2.0 l_0_6_43)))
 (let ((?x13428 (* ?x13374 l_0_6_54)))
 (let ((?x13371 (* 2.0 l_0_6_42)))
 (let ((?x13426 (* ?x13371 l_0_6_53)))
 (let ((?x13368 (* 2.0 l_0_6_41)))
 (let ((?x13424 (* ?x13368 l_0_6_52)))
 (let ((?x13365 (* 2.0 l_0_6_40)))
 (let ((?x13422 (* ?x13365 l_0_6_51)))
 (let ((?x13362 (* 2.0 l_0_6_39)))
 (let ((?x13420 (* ?x13362 l_0_6_50)))
 (let ((?x13359 (* 2.0 l_0_6_15)))
 (let ((?x13414 (* ?x13359 l_0_6_26)))
 (let ((?x13356 (* 2.0 l_0_6_14)))
 (let ((?x13404 (* ?x13356 l_0_6_25)))
 (let ((?x13107 (* 2.0 l_0_6_13)))
 (let ((?x13401 (* ?x13107 l_0_6_24)))
 (let ((?x12947 (* 2.0 l_0_6_12)))
 (let ((?x13397 (* ?x12947 l_0_6_23)))
 (let ((?x5166 (+ (+ (+ (+ (* (* 2.0 l_0_6_11) l_0_6_22) ?x13397) ?x13401) ?x13404) ?x13414)))
 (= (- (- (- (- (- ?x5166 ?x13420) ?x13422) ?x13424) ?x13426) ?x13428) 0.0)))))))))))))))))))))
(assert
 (let ((?x13469 (* l_0_6_49 l_0_6_49)))
 (let ((?x13467 (* l_0_6_48 l_0_6_48)))
 (let ((?x13465 (* l_0_6_47 l_0_6_47)))
 (let ((?x13463 (* l_0_6_46 l_0_6_46)))
 (let ((?x13461 (* l_0_6_45 l_0_6_45)))
 (let ((?x13459 (* l_0_6_44 l_0_6_44)))
 (let ((?x13457 (* l_0_6_21 l_0_6_21)))
 (let ((?x13455 (* l_0_6_20 l_0_6_20)))
 (let ((?x13453 (* l_0_6_19 l_0_6_19)))
 (let ((?x3921 (* l_0_6_18 l_0_6_18)))
 (let ((?x5297 (+ (+ (+ (* l_0_6_16 l_0_6_16) (* l_0_6_17 l_0_6_17)) ?x3921) ?x13453)))
 (let ((?x5262 (- (- (- (- (- (+ (+ ?x5297 ?x13455) ?x13457) ?x13459) ?x13461) ?x13463) ?x13465) ?x13467)))
 (= (- ?x5262 ?x13469) 0.0))))))))))))))
(assert
 (let ((?x13518 (* (* 2.0 l_0_6_49) l_0_6_55)))
 (let ((?x13515 (* (* 2.0 l_0_6_48) l_0_6_54)))
 (let ((?x13512 (* (* 2.0 l_0_6_47) l_0_6_53)))
 (let ((?x13509 (* (* 2.0 l_0_6_46) l_0_6_52)))
 (let ((?x13506 (* (* 2.0 l_0_6_45) l_0_6_51)))
 (let ((?x13503 (* (* 2.0 l_0_6_44) l_0_6_50)))
 (let ((?x13500 (* (* 2.0 l_0_6_21) l_0_6_27)))
 (let ((?x13497 (* (* 2.0 l_0_6_20) l_0_6_26)))
 (let ((?x13494 (* (* 2.0 l_0_6_19) l_0_6_25)))
 (let ((?x3527 (* 2.0 l_0_6_18)))
 (let ((?x13491 (* ?x3527 l_0_6_24)))
 (let ((?x12972 (* 2.0 l_0_6_17)))
 (let ((?x13489 (* ?x12972 l_0_6_23)))
 (let ((?x5429 (+ (+ (+ (+ (* (* 2.0 l_0_6_16) l_0_6_22) ?x13489) ?x13491) ?x13494) ?x13497)))
 (let ((?x5369 (- (- (- (- (- (- (+ ?x5429 ?x13500) ?x13503) ?x13506) ?x13509) ?x13512) ?x13515) ?x13518)))
 (= ?x5369 0.0)))))))))))))))))
(assert
 (let ((?x13573 (* l_0_6_56 l_0_6_56)))
 (let ((?x13571 (* l_0_6_55 l_0_6_55)))
 (let ((?x13569 (* l_0_6_54 l_0_6_54)))
 (let ((?x13567 (* l_0_6_53 l_0_6_53)))
 (let ((?x13565 (* l_0_6_52 l_0_6_52)))
 (let ((?x13563 (* l_0_6_51 l_0_6_51)))
 (let ((?x13561 (* l_0_6_50 l_0_6_50)))
 (let ((?x13559 (* l_0_6_28 l_0_6_28)))
 (let ((?x13557 (* l_0_6_27 l_0_6_27)))
 (let ((?x13555 (* l_0_6_26 l_0_6_26)))
 (let ((?x13544 (* l_0_6_25 l_0_6_25)))
 (let ((?x13541 (* l_0_6_24 l_0_6_24)))
 (let ((?x5535 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x13541) ?x13544)))
 (let ((?x5559 (- (- (- (- (+ (+ (+ ?x5535 ?x13555) ?x13557) ?x13559) ?x13561) ?x13563) ?x13565) ?x13567)))
 (= (- (- (- ?x5559 ?x13569) ?x13571) ?x13573) 0.0))))))))))))))))
(assert
 (let ((?x13652 (* l_0_6_85 l_0_6_85)))
 (let ((?x13651 (+ (* (- l_0_6_113) l_0_6_113) (* 1.0 (* l_0_6_57 l_0_6_57)))))
 (= (- ?x13651 ?x13652) 0.0))))
(assert
 (let ((?x13667 (+ (* (* (- 2.0) l_0_6_113) l_0_6_114) (* (* 2.0 l_0_6_57) l_0_6_58))))
 (= (- ?x13667 (* (* 2.0 l_0_6_85) l_0_6_86)) 0.0)))
(assert
 (let ((?x13689 (+ (* (* (- 2.0) l_0_6_113) l_0_6_116) (* (* 2.0 l_0_6_57) l_0_6_60))))
 (= (- ?x13689 (* (* 2.0 l_0_6_85) l_0_6_88)) 0.0)))
(assert
 (let ((?x13710 (+ (* (* (- 2.0) l_0_6_113) l_0_6_119) (* (* 2.0 l_0_6_57) l_0_6_63))))
 (= (- ?x13710 (* (* 2.0 l_0_6_85) l_0_6_91)) 0.0)))
(assert
 (let ((?x13731 (+ (* (* (- 2.0) l_0_6_113) l_0_6_123) (* (* 2.0 l_0_6_57) l_0_6_67))))
 (= (- ?x13731 (* (* 2.0 l_0_6_85) l_0_6_95)) 0.0)))
(assert
 (let ((?x13754 (- (* (* (- 2.0) l_0_6_100) l_0_6_85) (* (* 2.0 l_0_6_113) l_0_6_128))))
 (= (+ ?x13754 (* (* 2.0 l_0_6_57) l_0_6_72)) 0.0)))
(assert
 (let ((?x13774 (- (* (* (- 2.0) l_0_6_106) l_0_6_85) (* (* 2.0 l_0_6_113) l_0_6_134))))
 (= (+ ?x13774 (* (* 2.0 l_0_6_57) l_0_6_78)) 0.0)))
(assert
 (let ((?x13803 (* l_0_6_87 l_0_6_87)))
 (let ((?x13801 (* l_0_6_86 l_0_6_86)))
 (let ((?x13797 (+ (- (* (- l_0_6_114) l_0_6_114) (* l_0_6_115 l_0_6_115)) (* 1.0 (* l_0_6_58 l_0_6_58)))))
 (= (- (- (+ ?x13797 (* 1.0 (* l_0_6_59 l_0_6_59))) ?x13801) ?x13803) 0.0)))))
(assert
 (let ((?x13826 (- (* (* (- 2.0) l_0_6_114) l_0_6_116) (* (* 2.0 l_0_6_115) l_0_6_117))))
 (let ((?x13830 (+ (+ ?x13826 (* (* 2.0 l_0_6_58) l_0_6_60)) (* (* 2.0 l_0_6_59) l_0_6_61))))
 (let ((?x13836 (- (- ?x13830 (* (* 2.0 l_0_6_86) l_0_6_88)) (* (* 2.0 l_0_6_87) l_0_6_89))))
 (= ?x13836 0.0)))))
(assert
 (let ((?x13870 (- (* (* (- 2.0) l_0_6_114) l_0_6_119) (* (* 2.0 l_0_6_115) l_0_6_120))))
 (let ((?x13874 (+ (+ ?x13870 (* (* 2.0 l_0_6_58) l_0_6_63)) (* (* 2.0 l_0_6_59) l_0_6_64))))
 (let ((?x13878 (- (- ?x13874 (* (* 2.0 l_0_6_86) l_0_6_91)) (* (* 2.0 l_0_6_87) l_0_6_92))))
 (= ?x13878 0.0)))))
(assert
 (let ((?x13912 (- (* (* (- 2.0) l_0_6_114) l_0_6_123) (* (* 2.0 l_0_6_115) l_0_6_124))))
 (let ((?x13916 (+ (+ ?x13912 (* (* 2.0 l_0_6_58) l_0_6_67)) (* (* 2.0 l_0_6_59) l_0_6_68))))
 (let ((?x13920 (- (- ?x13916 (* (* 2.0 l_0_6_86) l_0_6_95)) (* (* 2.0 l_0_6_87) l_0_6_96))))
 (= ?x13920 0.0)))))
(assert
 (let ((?x13954 (- (* (* (- 2.0) l_0_6_106) l_0_6_86) (* (* 2.0 l_0_6_107) l_0_6_87))))
 (let ((?x13958 (- (- ?x13954 (* (* 2.0 l_0_6_114) l_0_6_134)) (* (* 2.0 l_0_6_115) l_0_6_135))))
 (let ((?x13962 (+ (+ ?x13958 (* (* 2.0 l_0_6_58) l_0_6_78)) (* (* 2.0 l_0_6_59) l_0_6_79))))
 (= ?x13962 0.0)))))
(assert
 (let ((?x14010 (* l_0_6_90 l_0_6_90)))
 (let ((?x14008 (* l_0_6_89 l_0_6_89)))
 (let ((?x14006 (* l_0_6_88 l_0_6_88)))
 (let ((?x13995 (* l_0_6_118 l_0_6_118)))
 (let ((?x13996 (- (- (* (- l_0_6_116) l_0_6_116) (* l_0_6_117 l_0_6_117)) ?x13995)))
 (let ((?x14002 (+ (+ ?x13996 (* 1.0 (* l_0_6_60 l_0_6_60))) (* 1.0 (* l_0_6_61 l_0_6_61)))))
 (let ((?x14011 (- (- (- (+ ?x14002 (* 1.0 (* l_0_6_62 l_0_6_62))) ?x14006) ?x14008) ?x14010)))
 (= ?x14011 0.0)))))))))
(assert
 (let ((?x14040 (- (* (* (- 2.0) l_0_6_116) l_0_6_123) (* (* 2.0 l_0_6_117) l_0_6_124))))
 (let ((?x14044 (+ (- ?x14040 (* (* 2.0 l_0_6_118) l_0_6_125)) (* (* 2.0 l_0_6_60) l_0_6_67))))
 (let ((?x14048 (+ (+ ?x14044 (* (* 2.0 l_0_6_61) l_0_6_68)) (* (* 2.0 l_0_6_62) l_0_6_69))))
 (let ((?x14052 (- (- ?x14048 (* (* 2.0 l_0_6_88) l_0_6_95)) (* (* 2.0 l_0_6_89) l_0_6_96))))
 (= (- ?x14052 (* (* 2.0 l_0_6_90) l_0_6_97)) 0.0))))))
(assert
 (let ((?x14103 (- (* (* (- 2.0) l_0_6_100) l_0_6_88) (* (* 2.0 l_0_6_101) l_0_6_89))))
 (let ((?x14108 (- (- ?x14103 (* (* 2.0 l_0_6_102) l_0_6_90)) (* (* 2.0 l_0_6_116) l_0_6_128))))
 (let ((?x14112 (- (- ?x14108 (* (* 2.0 l_0_6_117) l_0_6_129)) (* (* 2.0 l_0_6_118) l_0_6_130))))
 (let ((?x14116 (+ (+ ?x14112 (* (* 2.0 l_0_6_60) l_0_6_72)) (* (* 2.0 l_0_6_61) l_0_6_73))))
 (= (+ ?x14116 (* (* 2.0 l_0_6_62) l_0_6_74)) 0.0))))))
(assert
 (let ((?x14157 (- (* (* (- 2.0) l_0_6_106) l_0_6_88) (* (* 2.0 l_0_6_107) l_0_6_89))))
 (let ((?x14167 (- (- ?x14157 (* (* 2.0 l_0_6_108) l_0_6_90)) (* (* 2.0 l_0_6_116) l_0_6_134))))
 (let ((?x14171 (- (- ?x14167 (* (* 2.0 l_0_6_117) l_0_6_135)) (* (* 2.0 l_0_6_118) l_0_6_136))))
 (let ((?x14175 (+ (+ ?x14171 (* (* 2.0 l_0_6_60) l_0_6_78)) (* (* 2.0 l_0_6_61) l_0_6_79))))
 (= (+ ?x14175 (* (* 2.0 l_0_6_62) l_0_6_80)) 0.0))))))
(assert
 (let ((?x14246 (* l_0_6_94 l_0_6_94)))
 (let ((?x14244 (* l_0_6_93 l_0_6_93)))
 (let ((?x14242 (* l_0_6_92 l_0_6_92)))
 (let ((?x14240 (* l_0_6_91 l_0_6_91)))
 (let ((?x14226 (* l_0_6_122 l_0_6_122)))
 (let ((?x14224 (* l_0_6_121 l_0_6_121)))
 (let ((?x14225 (- (- (* (- l_0_6_119) l_0_6_119) (* l_0_6_120 l_0_6_120)) ?x14224)))
 (let ((?x14233 (+ (+ (- ?x14225 ?x14226) (* 1.0 (* l_0_6_63 l_0_6_63))) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x14239 (+ (+ ?x14233 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- (- ?x14239 ?x14240) ?x14242) ?x14244) ?x14246) 0.0)))))))))))
(assert
 (let ((?x14284 (- (* (* (- 2.0) l_0_6_119) l_0_6_123) (* (* 2.0 l_0_6_120) l_0_6_124))))
 (let ((?x14290 (- (- ?x14284 (* (* 2.0 l_0_6_121) l_0_6_125)) (* (* 2.0 l_0_6_122) l_0_6_126))))
 (let ((?x14296 (+ (+ ?x14290 (* (* 2.0 l_0_6_63) l_0_6_67)) (* (* 2.0 l_0_6_64) l_0_6_68))))
 (let ((?x14302 (+ (+ ?x14296 (* (* 2.0 l_0_6_65) l_0_6_69)) (* (* 2.0 l_0_6_66) l_0_6_70))))
 (let ((?x14308 (- (- ?x14302 (* (* 2.0 l_0_6_91) l_0_6_95)) (* (* 2.0 l_0_6_92) l_0_6_96))))
 (let ((?x14314 (- (- ?x14308 (* (* 2.0 l_0_6_93) l_0_6_97)) (* (* 2.0 l_0_6_94) l_0_6_98))))
 (= ?x14314 0.0))))))))
(assert
 (let ((?x14378 (- (* (* (- 2.0) l_0_6_100) l_0_6_91) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x14383 (- (- ?x14378 (* (* 2.0 l_0_6_102) l_0_6_93)) (* (* 2.0 l_0_6_103) l_0_6_94))))
 (let ((?x14388 (- (- ?x14383 (* (* 2.0 l_0_6_119) l_0_6_128)) (* (* 2.0 l_0_6_120) l_0_6_129))))
 (let ((?x14392 (- (- ?x14388 (* (* 2.0 l_0_6_121) l_0_6_130)) (* (* 2.0 l_0_6_122) l_0_6_131))))
 (let ((?x14396 (+ (+ ?x14392 (* (* 2.0 l_0_6_63) l_0_6_72)) (* (* 2.0 l_0_6_64) l_0_6_73))))
 (let ((?x14400 (+ (+ ?x14396 (* (* 2.0 l_0_6_65) l_0_6_74)) (* (* 2.0 l_0_6_66) l_0_6_75))))
 (= ?x14400 0.0))))))))
(assert
 (let ((?x14451 (- (* (* (- 2.0) l_0_6_106) l_0_6_91) (* (* 2.0 l_0_6_107) l_0_6_92))))
 (let ((?x14463 (- (- ?x14451 (* (* 2.0 l_0_6_108) l_0_6_93)) (* (* 2.0 l_0_6_109) l_0_6_94))))
 (let ((?x14467 (- (- ?x14463 (* (* 2.0 l_0_6_119) l_0_6_134)) (* (* 2.0 l_0_6_120) l_0_6_135))))
 (let ((?x14471 (- (- ?x14467 (* (* 2.0 l_0_6_121) l_0_6_136)) (* (* 2.0 l_0_6_122) l_0_6_137))))
 (let ((?x14475 (+ (+ ?x14471 (* (* 2.0 l_0_6_63) l_0_6_78)) (* (* 2.0 l_0_6_64) l_0_6_79))))
 (let ((?x14479 (+ (+ ?x14475 (* (* 2.0 l_0_6_65) l_0_6_80)) (* (* 2.0 l_0_6_66) l_0_6_81))))
 (= ?x14479 0.0))))))))
(assert
 (let ((?x14565 (* l_0_6_99 l_0_6_99)))
 (let ((?x14563 (* l_0_6_98 l_0_6_98)))
 (let ((?x14561 (* l_0_6_97 l_0_6_97)))
 (let ((?x14559 (* l_0_6_96 l_0_6_96)))
 (let ((?x14557 (* l_0_6_95 l_0_6_95)))
 (let ((?x14540 (* l_0_6_127 l_0_6_127)))
 (let ((?x14538 (* l_0_6_126 l_0_6_126)))
 (let ((?x14529 (* l_0_6_125 l_0_6_125)))
 (let ((?x14537 (- (- (* (- l_0_6_123) l_0_6_123) (* l_0_6_124 l_0_6_124)) ?x14529)))
 (let ((?x14547 (+ (+ (- (- ?x14537 ?x14538) ?x14540) (* 1.0 (* l_0_6_67 l_0_6_67))) (* 1.0 (* l_0_6_68 l_0_6_68)))))
 (let ((?x14553 (+ (+ ?x14547 (* 1.0 (* l_0_6_69 l_0_6_69))) (* 1.0 (* l_0_6_70 l_0_6_70)))))
 (let ((?x14562 (- (- (- (+ ?x14553 (* 1.0 (* l_0_6_71 l_0_6_71))) ?x14557) ?x14559) ?x14561)))
 (= (- (- ?x14562 ?x14563) ?x14565) 0.0))))))))))))))
(assert
 (let ((?x14608 (- (* (* (- 2.0) l_0_6_100) l_0_6_95) (* (* 2.0 l_0_6_101) l_0_6_96))))
 (let ((?x14612 (- (- ?x14608 (* (* 2.0 l_0_6_102) l_0_6_97)) (* (* 2.0 l_0_6_103) l_0_6_98))))
 (let ((?x14617 (- (- ?x14612 (* (* 2.0 l_0_6_104) l_0_6_99)) (* (* 2.0 l_0_6_123) l_0_6_128))))
 (let ((?x14621 (- (- ?x14617 (* (* 2.0 l_0_6_124) l_0_6_129)) (* (* 2.0 l_0_6_125) l_0_6_130))))
 (let ((?x14625 (- (- ?x14621 (* (* 2.0 l_0_6_126) l_0_6_131)) (* (* 2.0 l_0_6_127) l_0_6_132))))
 (let ((?x14629 (+ (+ ?x14625 (* (* 2.0 l_0_6_67) l_0_6_72)) (* (* 2.0 l_0_6_68) l_0_6_73))))
 (let ((?x14633 (+ (+ ?x14629 (* (* 2.0 l_0_6_69) l_0_6_74)) (* (* 2.0 l_0_6_70) l_0_6_75))))
 (= (+ ?x14633 (* (* 2.0 l_0_6_71) l_0_6_76)) 0.0)))))))))
(assert
 (let ((?x14728 (* l_0_6_133 l_0_6_133)))
 (let ((?x14726 (* l_0_6_132 l_0_6_132)))
 (let ((?x14724 (* l_0_6_131 l_0_6_131)))
 (let ((?x14722 (* l_0_6_130 l_0_6_130)))
 (let ((?x14720 (* l_0_6_129 l_0_6_129)))
 (let ((?x14718 (* l_0_6_128 l_0_6_128)))
 (let ((?x14716 (* l_0_6_105 l_0_6_105)))
 (let ((?x14714 (* l_0_6_104 l_0_6_104)))
 (let ((?x14712 (* l_0_6_103 l_0_6_103)))
 (let ((?x14702 (* l_0_6_102 l_0_6_102)))
 (let ((?x14703 (- (- (* (- l_0_6_100) l_0_6_100) (* l_0_6_101 l_0_6_101)) ?x14702)))
 (let ((?x14725 (- (- (- (- (- (- (- ?x14703 ?x14712) ?x14714) ?x14716) ?x14718) ?x14720) ?x14722) ?x14724)))
 (let ((?x14735 (+ (+ (- (- ?x14725 ?x14726) ?x14728) (* 1.0 (* l_0_6_72 l_0_6_72))) (* 1.0 (* l_0_6_73 l_0_6_73)))))
 (let ((?x14741 (+ (+ ?x14735 (* 1.0 (* l_0_6_74 l_0_6_74))) (* 1.0 (* l_0_6_75 l_0_6_75)))))
 (let ((?x14747 (+ (+ ?x14741 (* 1.0 (* l_0_6_76 l_0_6_76))) (* 1.0 (* l_0_6_77 l_0_6_77)))))
 (= ?x14747 0.0)))))))))))))))))
(assert
 (let ((?x14782 (- (* (* (- 2.0) l_0_6_100) l_0_6_106) (* (* 2.0 l_0_6_101) l_0_6_107))))
 (let ((?x14786 (- (- ?x14782 (* (* 2.0 l_0_6_102) l_0_6_108)) (* (* 2.0 l_0_6_103) l_0_6_109))))
 (let ((?x14791 (- (- ?x14786 (* (* 2.0 l_0_6_104) l_0_6_110)) (* (* 2.0 l_0_6_105) l_0_6_111))))
 (let ((?x14797 (- (- ?x14791 (* (* 2.0 l_0_6_128) l_0_6_134)) (* (* 2.0 l_0_6_129) l_0_6_135))))
 (let ((?x14803 (- (- ?x14797 (* (* 2.0 l_0_6_130) l_0_6_136)) (* (* 2.0 l_0_6_131) l_0_6_137))))
 (let ((?x14809 (- (- ?x14803 (* (* 2.0 l_0_6_132) l_0_6_138)) (* (* 2.0 l_0_6_133) l_0_6_139))))
 (let ((?x14815 (+ (+ ?x14809 (* (* 2.0 l_0_6_72) l_0_6_78)) (* (* 2.0 l_0_6_73) l_0_6_79))))
 (let ((?x14821 (+ (+ ?x14815 (* (* 2.0 l_0_6_74) l_0_6_80)) (* (* 2.0 l_0_6_75) l_0_6_81))))
 (let ((?x14827 (+ (+ ?x14821 (* (* 2.0 l_0_6_76) l_0_6_82)) (* (* 2.0 l_0_6_77) l_0_6_83))))
 (= ?x14827 0.0)))))))))))
(assert
 (let ((?x14930 (* l_0_6_140 l_0_6_140)))
 (let ((?x14928 (* l_0_6_139 l_0_6_139)))
 (let ((?x14926 (* l_0_6_138 l_0_6_138)))
 (let ((?x14924 (* l_0_6_137 l_0_6_137)))
 (let ((?x14922 (* l_0_6_136 l_0_6_136)))
 (let ((?x14920 (* l_0_6_135 l_0_6_135)))
 (let ((?x14918 (* l_0_6_134 l_0_6_134)))
 (let ((?x14916 (* l_0_6_112 l_0_6_112)))
 (let ((?x14914 (* l_0_6_111 l_0_6_111)))
 (let ((?x14912 (* l_0_6_110 l_0_6_110)))
 (let ((?x14901 (* l_0_6_109 l_0_6_109)))
 (let ((?x14898 (* l_0_6_108 l_0_6_108)))
 (let ((?x14900 (- (- (* (- l_0_6_106) l_0_6_106) (* l_0_6_107 l_0_6_107)) ?x14898)))
 (let ((?x14923 (- (- (- (- (- (- (- ?x14900 ?x14901) ?x14912) ?x14914) ?x14916) ?x14918) ?x14920) ?x14922)))
 (let ((?x14934 (+ (- (- (- (- ?x14923 ?x14924) ?x14926) ?x14928) ?x14930) (* 1.0 (* l_0_6_78 l_0_6_78)))))
 (let ((?x14940 (+ (+ ?x14934 (* 1.0 (* l_0_6_79 l_0_6_79))) (* 1.0 (* l_0_6_80 l_0_6_80)))))
 (let ((?x14946 (+ (+ ?x14940 (* 1.0 (* l_0_6_81 l_0_6_81))) (* 1.0 (* l_0_6_82 l_0_6_82)))))
 (let ((?x14952 (+ (+ ?x14946 (* 1.0 (* l_0_6_83 l_0_6_83))) (* 1.0 (* l_0_6_84 l_0_6_84)))))
 (= ?x14952 0.0))))))))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_28 0.0))
(assert
 (>= l_0_6_29 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_34 0.0))
(assert
 (>= l_0_6_38 0.0))
(assert
 (>= l_0_6_43 0.0))
(assert
 (>= l_0_6_49 0.0))
(assert
 (>= l_0_6_56 0.0))
(assert
 (>= l_0_6_57 0.0))
(assert
 (>= l_0_6_59 0.0))
(assert
 (>= l_0_6_62 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_71 0.0))
(assert
 (>= l_0_6_77 0.0))
(assert
 (>= l_0_6_84 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_87 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_94 0.0))
(assert
 (>= l_0_6_99 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (>= l_0_6_112 0.0))
(assert
 (>= l_0_6_113 0.0))
(assert
 (>= l_0_6_115 0.0))
(assert
 (>= l_0_6_118 0.0))
(assert
 (>= l_0_6_122 0.0))
(assert
 (>= l_0_6_127 0.0))
(assert
 (>= l_0_6_133 0.0))
(assert
 (>= l_0_6_140 0.0))
(assert
 (let ((?x15024 (* l_0_7_29 l_0_7_29)))
 (let ((?x15023 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_100) l_0_7_86)) (* (* 2.0 l_0_7_101) l_0_7_87))))
 (let ((?x15031 (- (- (+ ?x15023 ?x15024) (* (* 2.0 l_0_7_58) l_0_7_72)) (* (* 2.0 l_0_7_59) l_0_7_73))))
 (= (+ ?x15031 1.0) 0.0)))))
(assert
 (let ((?x6217 (- (- (* l_0_7_1 l_0_7_1) (* l_0_7_29 l_0_7_29)) (* (* 2.0 l_0_7_60) l_0_7_63))))
 (let ((?x15048 (- (- ?x6217 (* (* 2.0 l_0_7_61) l_0_7_64)) (* (* 2.0 l_0_7_62) l_0_7_65))))
 (let ((?x15054 (- (- ?x15048 (* (* 2.0 l_0_7_88) l_0_7_91)) (* (* 2.0 l_0_7_89) l_0_7_92))))
 (= (- (- ?x15054 (* (* 2.0 l_0_7_90) l_0_7_93)) 1.0) 0.0)))))
(assert
 (let ((?x15024 (* l_0_7_29 l_0_7_29)))
 (let ((?x15076 (- (- (* l_0_7_1 l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_95)) (* (* 2.0 l_0_7_107) l_0_7_96))))
 (let ((?x15082 (- (- ?x15076 (* (* 2.0 l_0_7_108) l_0_7_97)) (* (* 2.0 l_0_7_109) l_0_7_98))))
 (let ((?x15089 (- (- (- ?x15082 (* (* 2.0 l_0_7_110) l_0_7_99)) ?x15024) (* (* 2.0 l_0_7_67) l_0_7_78))))
 (let ((?x15095 (- (- ?x15089 (* (* 2.0 l_0_7_68) l_0_7_79)) (* (* 2.0 l_0_7_69) l_0_7_80))))
 (let ((?x15101 (- (- ?x15095 (* (* 2.0 l_0_7_70) l_0_7_81)) (* (* 2.0 l_0_7_71) l_0_7_82))))
 (= (- ?x15101 1.0) 0.0))))))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15129 (* ?x15128 l_0_7_30)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_2) ?x15129) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15135 (* ?x15128 l_0_7_32)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_4) ?x15135) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15145 (* ?x15128 l_0_7_35)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_7) ?x15145) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15155 (* ?x15128 l_0_7_39)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_11) ?x15155) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15165 (* ?x15128 l_0_7_44)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_16) ?x15165) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15175 (* ?x15128 l_0_7_50)))
 (= (+ (* (* (- 2.0) l_0_7_1) l_0_7_22) ?x15175) 0.0))))
(assert
 (let ((?x15194 (* l_0_7_31 l_0_7_31)))
 (let ((?x15192 (* l_0_7_30 l_0_7_30)))
 (let ((?x15195 (+ (+ (- (* (- l_0_7_2) l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15192) ?x15194)))
 (= ?x15195 0.0)))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15216 (* ?x15215 l_0_7_33)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15213 (* ?x15212 l_0_7_32)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x15210 (* ?x15209 l_0_7_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_4) ?x15210) ?x15213) ?x15216) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15228 (* ?x15215 l_0_7_36)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15226 (* ?x15212 l_0_7_35)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x6447 (* ?x15209 l_0_7_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_7) ?x6447) ?x15226) ?x15228) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15248 (* ?x15215 l_0_7_40)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15246 (* ?x15212 l_0_7_39)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15244 (* ?x15238 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x15244) ?x15246) ?x15248) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15269 (* ?x15215 l_0_7_45)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15267 (* ?x15212 l_0_7_44)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15265 (* ?x15264 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_16) l_0_7_2) ?x15265) ?x15267) ?x15269) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15293 (* ?x15215 l_0_7_51)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15291 (* ?x15212 l_0_7_50)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15284 (* ?x15283 l_0_7_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_22) ?x15284) ?x15291) ?x15293) 0.0))))))))
(assert
 (let ((?x15320 (* l_0_7_6 l_0_7_6)))
 (let ((?x15318 (* l_0_7_5 l_0_7_5)))
 (let ((?x15316 (* l_0_7_4 l_0_7_4)))
 (let ((?x15314 (* l_0_7_34 l_0_7_34)))
 (let ((?x15317 (- (+ (+ (* l_0_7_32 l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15314) ?x15316)))
 (= (- (- ?x15317 ?x15318) ?x15320) 0.0)))))))
(assert
 (let ((?x15342 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15339 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15336 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15333 (* ?x15332 l_0_7_37)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15330 (* ?x6496 l_0_7_36)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x6492 (* ?x6498 l_0_7_35)))
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15269 (* ?x15215 l_0_7_45)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15267 (* ?x15212 l_0_7_44)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15265 (* ?x15264 l_0_7_3)))
 (let ((?x6473 (* 2.0 l_0_7_16)))
 (let ((?x6479 (* ?x6473 l_0_7_2)))
 (let ((?x15337 (- (+ (+ (+ (- (- (+ ?x6479 ?x15265) ?x15267) ?x15269) ?x6492) ?x15330) ?x15333) ?x15336)))
 (= (- (- ?x15337 ?x15339) ?x15342) 0.0))))))))))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15370 (* ?x15332 l_0_7_41)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15368 (* ?x6496 l_0_7_40)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15366 (* ?x6498 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15364 (* ?x15363 l_0_7_6)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15361 (* ?x15238 l_0_7_5)))
 (let ((?x15369 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x15361) ?x15364) ?x15366) ?x15368)))
 (= (+ ?x15369 ?x15370) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15397 (* ?x15332 l_0_7_46)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15395 (* ?x6496 l_0_7_45)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15393 (* ?x6498 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15391 (* ?x15384 l_0_7_6)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15381 (* ?x15264 l_0_7_5)))
 (let ((?x15396 (+ (+ (- (- (* (* (- 2.0) l_0_7_16) l_0_7_4) ?x15381) ?x15391) ?x15393) ?x15395)))
 (= (+ ?x15396 ?x15397) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15417 (* ?x15332 l_0_7_52)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15415 (* ?x6496 l_0_7_51)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15413 (* ?x6498 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15411 (* ?x15410 l_0_7_6)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x6603 (* ?x15283 l_0_7_5)))
 (let ((?x15416 (+ (+ (- (- (* (* (- 2.0) l_0_7_22) l_0_7_4) ?x6603) ?x15411) ?x15413) ?x15415)))
 (= (+ ?x15416 ?x15417) 0.0)))))))))))))
(assert
 (let ((?x15453 (* l_0_7_9 l_0_7_9)))
 (let ((?x15451 (* l_0_7_8 l_0_7_8)))
 (let ((?x15449 (* l_0_7_7 l_0_7_7)))
 (let ((?x15447 (* l_0_7_38 l_0_7_38)))
 (let ((?x15445 (* l_0_7_37 l_0_7_37)))
 (let ((?x15443 (* l_0_7_36 l_0_7_36)))
 (let ((?x15446 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15443) ?x15445)))
 (= (- (- (- (+ ?x15446 ?x15447) ?x15449) ?x15451) ?x15453) 0.0)))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15483 (* ?x15482 l_0_7_42)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15480 (* ?x15479 l_0_7_41)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15477 (* ?x15476 l_0_7_40)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15474 (* ?x15473 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15471 (* ?x15363 l_0_7_9)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15469 (* ?x15238 l_0_7_8)))
 (let ((?x15466 (* 2.0 l_0_7_11)))
 (let ((?x15467 (* ?x15466 l_0_7_7)))
 (let ((?x15475 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x15467) ?x15469) ?x15471) ?x15474)))
 (= (+ (+ (+ ?x15475 ?x15477) ?x15480) ?x15483) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15524 (* ?x15482 l_0_7_47)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15522 (* ?x15479 l_0_7_46)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15520 (* ?x15476 l_0_7_45)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15518 (* ?x15473 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15516 (* ?x15384 l_0_7_9)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15507 (* ?x15264 l_0_7_8)))
 (let ((?x6473 (* 2.0 l_0_7_16)))
 (let ((?x15503 (* ?x6473 l_0_7_7)))
 (let ((?x15519 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_19) ?x15503) ?x15507) ?x15516) ?x15518)))
 (= (+ (+ (+ ?x15519 ?x15520) ?x15522) ?x15524) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15552 (* ?x15482 l_0_7_53)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15550 (* ?x15479 l_0_7_52)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15548 (* ?x15476 l_0_7_51)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15546 (* ?x15473 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15544 (* ?x15410 l_0_7_9)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15535 (* ?x15283 l_0_7_8)))
 (let ((?x15530 (* 2.0 l_0_7_22)))
 (let ((?x15532 (* ?x15530 l_0_7_7)))
 (let ((?x15547 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_25) ?x15532) ?x15535) ?x15544) ?x15546)))
 (= (+ (+ (+ ?x15547 ?x15548) ?x15550) ?x15552) 0.0)))))))))))))))))
(assert
 (let ((?x15595 (* l_0_7_43 l_0_7_43)))
 (let ((?x15593 (* l_0_7_42 l_0_7_42)))
 (let ((?x15591 (* l_0_7_41 l_0_7_41)))
 (let ((?x15589 (* l_0_7_40 l_0_7_40)))
 (let ((?x15587 (* l_0_7_39 l_0_7_39)))
 (let ((?x15585 (* l_0_7_15 l_0_7_15)))
 (let ((?x15583 (* l_0_7_14 l_0_7_14)))
 (let ((?x15574 (* l_0_7_13 l_0_7_13)))
 (let ((?x15584 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15574) ?x15583)))
 (= (+ (+ (+ (+ (+ (- ?x15584 ?x15585) ?x15587) ?x15589) ?x15591) ?x15593) ?x15595) 0.0)))))))))))
(assert
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15631 (* ?x15630 l_0_7_48)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15628 (* ?x15627 l_0_7_47)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15625 (* ?x15624 l_0_7_46)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15622 (* ?x15621 l_0_7_45)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15619 (* ?x15618 l_0_7_44)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15616 (* ?x15615 l_0_7_20)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15613 (* ?x15612 l_0_7_19)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x6741 (* ?x15363 l_0_7_18)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x6744 (* ?x15238 l_0_7_17)))
 (let ((?x15617 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_16) ?x6744) ?x6741) ?x15613) ?x15616)))
 (= (+ (+ (+ (+ (+ ?x15617 ?x15619) ?x15622) ?x15625) ?x15628) ?x15631) 0.0)))))))))))))))))))))
(assert
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15682 (* ?x15630 l_0_7_54)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15680 (* ?x15627 l_0_7_53)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15678 (* ?x15624 l_0_7_52)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15676 (* ?x15621 l_0_7_51)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15674 (* ?x15618 l_0_7_50)))
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15269 (* ?x15215 l_0_7_45)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15267 (* ?x15212 l_0_7_44)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15265 (* ?x15264 l_0_7_3)))
 (let ((?x6473 (* 2.0 l_0_7_16)))
 (let ((?x6479 (* ?x6473 l_0_7_2)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15668 (* ?x15615 l_0_7_26)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15658 (* ?x15612 l_0_7_25)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15655 (* ?x15363 l_0_7_24)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15651 (* ?x15238 l_0_7_23)))
 (let ((?x15669 (- (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_22) ?x15651) ?x15655) ?x15658) ?x15668)))
 (let ((?x15679 (+ (+ (+ (- (- (+ (+ ?x15669 ?x6479) ?x15265) ?x15267) ?x15269) ?x15674) ?x15676) ?x15678)))
 (= (+ (+ ?x15679 ?x15680) ?x15682) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15726 (* l_0_7_49 l_0_7_49)))
 (let ((?x15724 (* l_0_7_48 l_0_7_48)))
 (let ((?x15722 (* l_0_7_47 l_0_7_47)))
 (let ((?x15720 (* l_0_7_46 l_0_7_46)))
 (let ((?x15718 (* l_0_7_45 l_0_7_45)))
 (let ((?x15716 (* l_0_7_44 l_0_7_44)))
 (let ((?x15714 (* l_0_7_21 l_0_7_21)))
 (let ((?x15712 (* l_0_7_20 l_0_7_20)))
 (let ((?x15710 (* l_0_7_19 l_0_7_19)))
 (let ((?x15699 (* l_0_7_18 l_0_7_18)))
 (let ((?x15711 (- (- (- (* (- l_0_7_16) l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15699) ?x15710)))
 (let ((?x15725 (+ (+ (+ (+ (+ (- (- ?x15711 ?x15712) ?x15714) ?x15716) ?x15718) ?x15720) ?x15722) ?x15724)))
 (= (+ ?x15725 ?x15726) 0.0))))))))))))))
(assert
 (let ((?x15779 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15776 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15773 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15770 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15767 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15764 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15761 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15758 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15755 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15752 (* ?x15384 l_0_7_24)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15750 (* ?x15264 l_0_7_23)))
 (let ((?x15759 (- (- (- (- (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x15750) ?x15752) ?x15755) ?x15758)))
 (let ((?x15780 (+ (+ (+ (+ (+ (+ (- ?x15759 ?x15761) ?x15764) ?x15767) ?x15770) ?x15773) ?x15776) ?x15779)))
 (= ?x15780 0.0)))))))))))))))))
(assert
 (let ((?x15830 (* l_0_7_56 l_0_7_56)))
 (let ((?x15828 (* l_0_7_55 l_0_7_55)))
 (let ((?x15826 (* l_0_7_54 l_0_7_54)))
 (let ((?x15824 (* l_0_7_53 l_0_7_53)))
 (let ((?x15822 (* l_0_7_52 l_0_7_52)))
 (let ((?x15820 (* l_0_7_51 l_0_7_51)))
 (let ((?x15818 (* l_0_7_50 l_0_7_50)))
 (let ((?x15816 (* l_0_7_28 l_0_7_28)))
 (let ((?x15814 (* l_0_7_27 l_0_7_27)))
 (let ((?x15812 (* l_0_7_26 l_0_7_26)))
 (let ((?x15801 (* l_0_7_25 l_0_7_25)))
 (let ((?x6931 (* l_0_7_24 l_0_7_24)))
 (let ((?x15811 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x6931) ?x15801)))
 (let ((?x15825 (+ (+ (+ (+ (- (- (- ?x15811 ?x15812) ?x15814) ?x15816) ?x15818) ?x15820) ?x15822) ?x15824)))
 (= (+ (+ (+ ?x15825 ?x15826) ?x15828) ?x15830) 0.0))))))))))))))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15129 (* ?x15128 l_0_7_30)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_2) ?x15129) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15135 (* ?x15128 l_0_7_32)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_4) ?x15135) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15145 (* ?x15128 l_0_7_35)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_7) ?x15145) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15155 (* ?x15128 l_0_7_39)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_11) ?x15155) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15165 (* ?x15128 l_0_7_44)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_16) ?x15165) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15175 (* ?x15128 l_0_7_50)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_22) ?x15175) 0.0))))
(assert
 (let ((?x15194 (* l_0_7_31 l_0_7_31)))
 (let ((?x15192 (* l_0_7_30 l_0_7_30)))
 (= (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15192) ?x15194) 0.0))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15216 (* ?x15215 l_0_7_33)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15213 (* ?x15212 l_0_7_32)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x15210 (* ?x15209 l_0_7_5)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_4) ?x15210) ?x15213) ?x15216) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15228 (* ?x15215 l_0_7_36)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15226 (* ?x15212 l_0_7_35)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x6447 (* ?x15209 l_0_7_8)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x6447) ?x15226) ?x15228) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15248 (* ?x15215 l_0_7_40)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15246 (* ?x15212 l_0_7_39)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15244 (* ?x15238 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x15244) ?x15246) ?x15248) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15293 (* ?x15215 l_0_7_51)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15291 (* ?x15212 l_0_7_50)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15284 (* ?x15283 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_22) ?x15284) ?x15291) ?x15293) 0.0))))))))
(assert
 (let ((?x15320 (* l_0_7_6 l_0_7_6)))
 (let ((?x15318 (* l_0_7_5 l_0_7_5)))
 (let ((?x15316 (* l_0_7_4 l_0_7_4)))
 (let ((?x15314 (* l_0_7_34 l_0_7_34)))
 (let ((?x7192 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15314) ?x15316)))
 (= (+ (+ ?x7192 ?x15318) ?x15320) 0.0)))))))
(assert
 (let ((?x15342 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15339 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15336 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15333 (* ?x15332 l_0_7_37)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15330 (* ?x6496 l_0_7_36)))
 (let ((?x7134 (+ (+ (- (- (* (* (- 2.0) l_0_7_32) l_0_7_35) ?x15330) ?x15333) ?x15336) ?x15339)))
 (= (+ ?x7134 ?x15342) 0.0))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15370 (* ?x15332 l_0_7_41)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15368 (* ?x6496 l_0_7_40)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15366 (* ?x6498 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15364 (* ?x15363 l_0_7_6)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15361 (* ?x15238 l_0_7_5)))
 (let ((?x7252 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x15361) ?x15364) ?x15366) ?x15368)))
 (= (- ?x7252 ?x15370) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15397 (* ?x15332 l_0_7_46)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15395 (* ?x6496 l_0_7_45)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15393 (* ?x6498 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15391 (* ?x15384 l_0_7_6)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15381 (* ?x15264 l_0_7_5)))
 (let ((?x7275 (- (- (+ (+ (* (* 2.0 l_0_7_16) l_0_7_4) ?x15381) ?x15391) ?x15393) ?x15395)))
 (= (- ?x7275 ?x15397) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15417 (* ?x15332 l_0_7_52)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15415 (* ?x6496 l_0_7_51)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15413 (* ?x6498 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15411 (* ?x15410 l_0_7_6)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x6603 (* ?x15283 l_0_7_5)))
 (let ((?x7288 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x6603) ?x15411) ?x15413) ?x15415)))
 (= (- ?x7288 ?x15417) 0.0)))))))))))))
(assert
 (let ((?x15453 (* l_0_7_9 l_0_7_9)))
 (let ((?x15451 (* l_0_7_8 l_0_7_8)))
 (let ((?x15449 (* l_0_7_7 l_0_7_7)))
 (let ((?x15447 (* l_0_7_38 l_0_7_38)))
 (let ((?x15445 (* l_0_7_37 l_0_7_37)))
 (let ((?x15443 (* l_0_7_36 l_0_7_36)))
 (let ((?x7355 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15443) ?x15445)))
 (= (+ (+ (+ (- ?x7355 ?x15447) ?x15449) ?x15451) ?x15453) 0.0)))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15483 (* ?x15482 l_0_7_42)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15480 (* ?x15479 l_0_7_41)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15477 (* ?x15476 l_0_7_40)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15474 (* ?x15473 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15471 (* ?x15363 l_0_7_9)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15469 (* ?x15238 l_0_7_8)))
 (let ((?x15466 (* 2.0 l_0_7_11)))
 (let ((?x15467 (* ?x15466 l_0_7_7)))
 (let ((?x15882 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x15467) ?x15469) ?x15471) ?x15474)))
 (= (- (- (- ?x15882 ?x15477) ?x15480) ?x15483) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15524 (* ?x15482 l_0_7_47)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15522 (* ?x15479 l_0_7_46)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15520 (* ?x15476 l_0_7_45)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15518 (* ?x15473 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15516 (* ?x15384 l_0_7_9)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15507 (* ?x15264 l_0_7_8)))
 (let ((?x6473 (* 2.0 l_0_7_16)))
 (let ((?x15503 (* ?x6473 l_0_7_7)))
 (let ((?x7449 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_19) ?x15503) ?x15507) ?x15516) ?x15518)))
 (= (- (- (- ?x7449 ?x15520) ?x15522) ?x15524) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15552 (* ?x15482 l_0_7_53)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15550 (* ?x15479 l_0_7_52)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15548 (* ?x15476 l_0_7_51)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15546 (* ?x15473 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15544 (* ?x15410 l_0_7_9)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15535 (* ?x15283 l_0_7_8)))
 (let ((?x15530 (* 2.0 l_0_7_22)))
 (let ((?x15532 (* ?x15530 l_0_7_7)))
 (let ((?x7479 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_25) ?x15532) ?x15535) ?x15544) ?x15546)))
 (= (- (- (- ?x7479 ?x15548) ?x15550) ?x15552) 0.0)))))))))))))))))
(assert
 (let ((?x15595 (* l_0_7_43 l_0_7_43)))
 (let ((?x15593 (* l_0_7_42 l_0_7_42)))
 (let ((?x15591 (* l_0_7_41 l_0_7_41)))
 (let ((?x15589 (* l_0_7_40 l_0_7_40)))
 (let ((?x15587 (* l_0_7_39 l_0_7_39)))
 (let ((?x15585 (* l_0_7_15 l_0_7_15)))
 (let ((?x15583 (* l_0_7_14 l_0_7_14)))
 (let ((?x15574 (* l_0_7_13 l_0_7_13)))
 (let ((?x7539 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15574) ?x15583)))
 (= (- (- (- (- (- (+ ?x7539 ?x15585) ?x15587) ?x15589) ?x15591) ?x15593) ?x15595) 0.0)))))))))))
(assert
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15631 (* ?x15630 l_0_7_48)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15628 (* ?x15627 l_0_7_47)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15625 (* ?x15624 l_0_7_46)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15622 (* ?x15621 l_0_7_45)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15619 (* ?x15618 l_0_7_44)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15616 (* ?x15615 l_0_7_20)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15613 (* ?x15612 l_0_7_19)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x6741 (* ?x15363 l_0_7_18)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x6744 (* ?x15238 l_0_7_17)))
 (let ((?x7653 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x6744) ?x6741) ?x15613) ?x15616)))
 (= (- (- (- (- (- ?x7653 ?x15619) ?x15622) ?x15625) ?x15628) ?x15631) 0.0)))))))))))))))))))))
(assert
 (let ((?x15342 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x15339 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15682 (* ?x15630 l_0_7_54)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15680 (* ?x15627 l_0_7_53)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15678 (* ?x15624 l_0_7_52)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15676 (* ?x15621 l_0_7_51)))
 (let ((?x15336 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15674 (* ?x15618 l_0_7_50)))
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15333 (* ?x15332 l_0_7_37)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15330 (* ?x6496 l_0_7_36)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x6492 (* ?x6498 l_0_7_35)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15668 (* ?x15615 l_0_7_26)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15658 (* ?x15612 l_0_7_25)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15655 (* ?x15363 l_0_7_24)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15651 (* ?x15238 l_0_7_23)))
 (let ((?x7773 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x15651) ?x15655) ?x15658) ?x15668)))
 (let ((?x7702 (- (- (+ (- (- (- (- ?x7773 ?x6492) ?x15330) ?x15333) ?x15674) ?x15336) ?x15676) ?x15678)))
 (= (+ (+ (- (- ?x7702 ?x15680) ?x15682) ?x15339) ?x15342) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x15726 (* l_0_7_49 l_0_7_49)))
 (let ((?x15724 (* l_0_7_48 l_0_7_48)))
 (let ((?x15722 (* l_0_7_47 l_0_7_47)))
 (let ((?x15720 (* l_0_7_46 l_0_7_46)))
 (let ((?x15718 (* l_0_7_45 l_0_7_45)))
 (let ((?x15716 (* l_0_7_44 l_0_7_44)))
 (let ((?x15714 (* l_0_7_21 l_0_7_21)))
 (let ((?x15712 (* l_0_7_20 l_0_7_20)))
 (let ((?x15710 (* l_0_7_19 l_0_7_19)))
 (let ((?x15699 (* l_0_7_18 l_0_7_18)))
 (let ((?x7927 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15699) ?x15710)))
 (let ((?x15904 (- (- (- (- (- (+ (+ ?x7927 ?x15712) ?x15714) ?x15716) ?x15718) ?x15720) ?x15722) ?x15724)))
 (= (- ?x15904 ?x15726) 0.0))))))))))))))
(assert
 (let ((?x15779 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15776 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15773 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15770 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15767 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15764 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15761 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15758 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15755 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15752 (* ?x15384 l_0_7_24)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15750 (* ?x15264 l_0_7_23)))
 (let ((?x8049 (+ (+ (+ (+ (* (* 2.0 l_0_7_16) l_0_7_22) ?x15750) ?x15752) ?x15755) ?x15758)))
 (let ((?x7999 (- (- (- (- (- (- (+ ?x8049 ?x15761) ?x15764) ?x15767) ?x15770) ?x15773) ?x15776) ?x15779)))
 (= ?x7999 0.0)))))))))))))))))
(assert
 (let ((?x15830 (* l_0_7_56 l_0_7_56)))
 (let ((?x15828 (* l_0_7_55 l_0_7_55)))
 (let ((?x15826 (* l_0_7_54 l_0_7_54)))
 (let ((?x15824 (* l_0_7_53 l_0_7_53)))
 (let ((?x15822 (* l_0_7_52 l_0_7_52)))
 (let ((?x15820 (* l_0_7_51 l_0_7_51)))
 (let ((?x15818 (* l_0_7_50 l_0_7_50)))
 (let ((?x15816 (* l_0_7_28 l_0_7_28)))
 (let ((?x15814 (* l_0_7_27 l_0_7_27)))
 (let ((?x15812 (* l_0_7_26 l_0_7_26)))
 (let ((?x15801 (* l_0_7_25 l_0_7_25)))
 (let ((?x6931 (* l_0_7_24 l_0_7_24)))
 (let ((?x8237 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x6931) ?x15801)))
 (let ((?x8137 (- (- (- (- (+ (+ (+ ?x8237 ?x15812) ?x15814) ?x15816) ?x15818) ?x15820) ?x15822) ?x15824)))
 (= (- (- (- ?x8137 ?x15826) ?x15828) ?x15830) 0.0))))))))))))))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15129 (* ?x15128 l_0_7_30)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_2) ?x15129) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15135 (* ?x15128 l_0_7_32)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_4) ?x15135) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15145 (* ?x15128 l_0_7_35)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_7) ?x15145) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15155 (* ?x15128 l_0_7_39)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_11) ?x15155) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15165 (* ?x15128 l_0_7_44)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_16) ?x15165) 0.0))))
(assert
 (let ((?x15128 (* 2.0 l_0_7_29)))
 (let ((?x15175 (* ?x15128 l_0_7_50)))
 (= (- (* (* 2.0 l_0_7_1) l_0_7_22) ?x15175) 0.0))))
(assert
 (let ((?x15194 (* l_0_7_31 l_0_7_31)))
 (let ((?x15192 (* l_0_7_30 l_0_7_30)))
 (= (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x15192) ?x15194) 0.0))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15216 (* ?x15215 l_0_7_33)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15213 (* ?x15212 l_0_7_32)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x15210 (* ?x15209 l_0_7_5)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_4) ?x15210) ?x15213) ?x15216) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15228 (* ?x15215 l_0_7_36)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15226 (* ?x15212 l_0_7_35)))
 (let ((?x15209 (* 2.0 l_0_7_3)))
 (let ((?x6447 (* ?x15209 l_0_7_8)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x6447) ?x15226) ?x15228) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15248 (* ?x15215 l_0_7_40)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15246 (* ?x15212 l_0_7_39)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15244 (* ?x15238 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x15244) ?x15246) ?x15248) 0.0))))))))
(assert
 (let ((?x15215 (* 2.0 l_0_7_31)))
 (let ((?x15293 (* ?x15215 l_0_7_51)))
 (let ((?x15212 (* 2.0 l_0_7_30)))
 (let ((?x15291 (* ?x15212 l_0_7_50)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15284 (* ?x15283 l_0_7_3)))
 (= (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_22) ?x15284) ?x15291) ?x15293) 0.0))))))))
(assert
 (let ((?x15320 (* l_0_7_6 l_0_7_6)))
 (let ((?x15318 (* l_0_7_5 l_0_7_5)))
 (let ((?x15316 (* l_0_7_4 l_0_7_4)))
 (let ((?x15314 (* l_0_7_34 l_0_7_34)))
 (let ((?x7192 (+ (- (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x15314) ?x15316)))
 (= (+ (+ ?x7192 ?x15318) ?x15320) 0.0)))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15370 (* ?x15332 l_0_7_41)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15368 (* ?x6496 l_0_7_40)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15366 (* ?x6498 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15364 (* ?x15363 l_0_7_6)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15361 (* ?x15238 l_0_7_5)))
 (let ((?x7252 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x15361) ?x15364) ?x15366) ?x15368)))
 (= (- ?x7252 ?x15370) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15397 (* ?x15332 l_0_7_46)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15395 (* ?x6496 l_0_7_45)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15393 (* ?x6498 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15391 (* ?x15384 l_0_7_6)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15381 (* ?x15264 l_0_7_5)))
 (let ((?x7275 (- (- (+ (+ (* (* 2.0 l_0_7_16) l_0_7_4) ?x15381) ?x15391) ?x15393) ?x15395)))
 (= (- ?x7275 ?x15397) 0.0)))))))))))))
(assert
 (let ((?x15332 (* 2.0 l_0_7_34)))
 (let ((?x15417 (* ?x15332 l_0_7_52)))
 (let ((?x6496 (* 2.0 l_0_7_33)))
 (let ((?x15415 (* ?x6496 l_0_7_51)))
 (let ((?x6498 (* 2.0 l_0_7_32)))
 (let ((?x15413 (* ?x6498 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15411 (* ?x15410 l_0_7_6)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x6603 (* ?x15283 l_0_7_5)))
 (let ((?x7288 (- (- (+ (+ (* (* 2.0 l_0_7_22) l_0_7_4) ?x6603) ?x15411) ?x15413) ?x15415)))
 (= (- ?x7288 ?x15417) 0.0)))))))))))))
(assert
 (let ((?x15453 (* l_0_7_9 l_0_7_9)))
 (let ((?x15451 (* l_0_7_8 l_0_7_8)))
 (let ((?x15449 (* l_0_7_7 l_0_7_7)))
 (let ((?x15447 (* l_0_7_38 l_0_7_38)))
 (let ((?x15445 (* l_0_7_37 l_0_7_37)))
 (let ((?x15443 (* l_0_7_36 l_0_7_36)))
 (let ((?x7355 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_35 l_0_7_35)) ?x15443) ?x15445)))
 (= (+ (+ (+ (- ?x7355 ?x15447) ?x15449) ?x15451) ?x15453) 0.0)))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15483 (* ?x15482 l_0_7_42)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15480 (* ?x15479 l_0_7_41)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15477 (* ?x15476 l_0_7_40)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15474 (* ?x15473 l_0_7_39)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15471 (* ?x15363 l_0_7_9)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15469 (* ?x15238 l_0_7_8)))
 (let ((?x15466 (* 2.0 l_0_7_11)))
 (let ((?x15467 (* ?x15466 l_0_7_7)))
 (let ((?x15882 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x15467) ?x15469) ?x15471) ?x15474)))
 (= (- (- (- ?x15882 ?x15477) ?x15480) ?x15483) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15524 (* ?x15482 l_0_7_47)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15522 (* ?x15479 l_0_7_46)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15520 (* ?x15476 l_0_7_45)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15518 (* ?x15473 l_0_7_44)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15516 (* ?x15384 l_0_7_9)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15507 (* ?x15264 l_0_7_8)))
 (let ((?x6473 (* 2.0 l_0_7_16)))
 (let ((?x15503 (* ?x6473 l_0_7_7)))
 (let ((?x7449 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_19) ?x15503) ?x15507) ?x15516) ?x15518)))
 (= (- (- (- ?x7449 ?x15520) ?x15522) ?x15524) 0.0)))))))))))))))))
(assert
 (let ((?x15482 (* 2.0 l_0_7_38)))
 (let ((?x15552 (* ?x15482 l_0_7_53)))
 (let ((?x15479 (* 2.0 l_0_7_37)))
 (let ((?x15550 (* ?x15479 l_0_7_52)))
 (let ((?x15476 (* 2.0 l_0_7_36)))
 (let ((?x15548 (* ?x15476 l_0_7_51)))
 (let ((?x15473 (* 2.0 l_0_7_35)))
 (let ((?x15546 (* ?x15473 l_0_7_50)))
 (let ((?x15410 (* 2.0 l_0_7_24)))
 (let ((?x15544 (* ?x15410 l_0_7_9)))
 (let ((?x15283 (* 2.0 l_0_7_23)))
 (let ((?x15535 (* ?x15283 l_0_7_8)))
 (let ((?x15530 (* 2.0 l_0_7_22)))
 (let ((?x15532 (* ?x15530 l_0_7_7)))
 (let ((?x7479 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_25) ?x15532) ?x15535) ?x15544) ?x15546)))
 (= (- (- (- ?x7479 ?x15548) ?x15550) ?x15552) 0.0)))))))))))))))))
(assert
 (let ((?x15595 (* l_0_7_43 l_0_7_43)))
 (let ((?x15593 (* l_0_7_42 l_0_7_42)))
 (let ((?x15591 (* l_0_7_41 l_0_7_41)))
 (let ((?x15589 (* l_0_7_40 l_0_7_40)))
 (let ((?x15587 (* l_0_7_39 l_0_7_39)))
 (let ((?x15585 (* l_0_7_15 l_0_7_15)))
 (let ((?x15583 (* l_0_7_14 l_0_7_14)))
 (let ((?x15574 (* l_0_7_13 l_0_7_13)))
 (let ((?x7539 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x15574) ?x15583)))
 (= (- (- (- (- (- (+ ?x7539 ?x15585) ?x15587) ?x15589) ?x15591) ?x15593) ?x15595) 0.0)))))))))))
(assert
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15631 (* ?x15630 l_0_7_48)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15628 (* ?x15627 l_0_7_47)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15625 (* ?x15624 l_0_7_46)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15622 (* ?x15621 l_0_7_45)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15619 (* ?x15618 l_0_7_44)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15616 (* ?x15615 l_0_7_20)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15613 (* ?x15612 l_0_7_19)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x6741 (* ?x15363 l_0_7_18)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x6744 (* ?x15238 l_0_7_17)))
 (let ((?x7653 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_16) ?x6744) ?x6741) ?x15613) ?x15616)))
 (= (- (- (- (- (- ?x7653 ?x15619) ?x15622) ?x15625) ?x15628) ?x15631) 0.0)))))))))))))))))))))
(assert
 (let ((?x15630 (* 2.0 l_0_7_43)))
 (let ((?x15682 (* ?x15630 l_0_7_54)))
 (let ((?x15627 (* 2.0 l_0_7_42)))
 (let ((?x15680 (* ?x15627 l_0_7_53)))
 (let ((?x15624 (* 2.0 l_0_7_41)))
 (let ((?x15678 (* ?x15624 l_0_7_52)))
 (let ((?x15621 (* 2.0 l_0_7_40)))
 (let ((?x15676 (* ?x15621 l_0_7_51)))
 (let ((?x15618 (* 2.0 l_0_7_39)))
 (let ((?x15674 (* ?x15618 l_0_7_50)))
 (let ((?x15615 (* 2.0 l_0_7_15)))
 (let ((?x15668 (* ?x15615 l_0_7_26)))
 (let ((?x15612 (* 2.0 l_0_7_14)))
 (let ((?x15658 (* ?x15612 l_0_7_25)))
 (let ((?x15363 (* 2.0 l_0_7_13)))
 (let ((?x15655 (* ?x15363 l_0_7_24)))
 (let ((?x15238 (* 2.0 l_0_7_12)))
 (let ((?x15651 (* ?x15238 l_0_7_23)))
 (let ((?x7773 (+ (+ (+ (+ (* (* 2.0 l_0_7_11) l_0_7_22) ?x15651) ?x15655) ?x15658) ?x15668)))
 (= (- (- (- (- (- ?x7773 ?x15674) ?x15676) ?x15678) ?x15680) ?x15682) 0.0)))))))))))))))))))))
(assert
 (let ((?x15726 (* l_0_7_49 l_0_7_49)))
 (let ((?x15724 (* l_0_7_48 l_0_7_48)))
 (let ((?x15722 (* l_0_7_47 l_0_7_47)))
 (let ((?x15720 (* l_0_7_46 l_0_7_46)))
 (let ((?x15718 (* l_0_7_45 l_0_7_45)))
 (let ((?x15716 (* l_0_7_44 l_0_7_44)))
 (let ((?x15714 (* l_0_7_21 l_0_7_21)))
 (let ((?x15712 (* l_0_7_20 l_0_7_20)))
 (let ((?x15710 (* l_0_7_19 l_0_7_19)))
 (let ((?x15699 (* l_0_7_18 l_0_7_18)))
 (let ((?x7927 (+ (+ (+ (* l_0_7_16 l_0_7_16) (* l_0_7_17 l_0_7_17)) ?x15699) ?x15710)))
 (let ((?x15904 (- (- (- (- (- (+ (+ ?x7927 ?x15712) ?x15714) ?x15716) ?x15718) ?x15720) ?x15722) ?x15724)))
 (= (- ?x15904 ?x15726) 0.0))))))))))))))
(assert
 (let ((?x15779 (* (* 2.0 l_0_7_49) l_0_7_55)))
 (let ((?x15776 (* (* 2.0 l_0_7_48) l_0_7_54)))
 (let ((?x15773 (* (* 2.0 l_0_7_47) l_0_7_53)))
 (let ((?x15770 (* (* 2.0 l_0_7_46) l_0_7_52)))
 (let ((?x15767 (* (* 2.0 l_0_7_45) l_0_7_51)))
 (let ((?x15764 (* (* 2.0 l_0_7_44) l_0_7_50)))
 (let ((?x15761 (* (* 2.0 l_0_7_21) l_0_7_27)))
 (let ((?x15758 (* (* 2.0 l_0_7_20) l_0_7_26)))
 (let ((?x15755 (* (* 2.0 l_0_7_19) l_0_7_25)))
 (let ((?x15384 (* 2.0 l_0_7_18)))
 (let ((?x15752 (* ?x15384 l_0_7_24)))
 (let ((?x15264 (* 2.0 l_0_7_17)))
 (let ((?x15750 (* ?x15264 l_0_7_23)))
 (let ((?x8049 (+ (+ (+ (+ (* (* 2.0 l_0_7_16) l_0_7_22) ?x15750) ?x15752) ?x15755) ?x15758)))
 (let ((?x7999 (- (- (- (- (- (- (+ ?x8049 ?x15761) ?x15764) ?x15767) ?x15770) ?x15773) ?x15776) ?x15779)))
 (= ?x7999 0.0)))))))))))))))))
(assert
 (let ((?x15830 (* l_0_7_56 l_0_7_56)))
 (let ((?x15828 (* l_0_7_55 l_0_7_55)))
 (let ((?x15826 (* l_0_7_54 l_0_7_54)))
 (let ((?x15824 (* l_0_7_53 l_0_7_53)))
 (let ((?x15822 (* l_0_7_52 l_0_7_52)))
 (let ((?x15820 (* l_0_7_51 l_0_7_51)))
 (let ((?x15818 (* l_0_7_50 l_0_7_50)))
 (let ((?x15816 (* l_0_7_28 l_0_7_28)))
 (let ((?x15814 (* l_0_7_27 l_0_7_27)))
 (let ((?x15812 (* l_0_7_26 l_0_7_26)))
 (let ((?x15801 (* l_0_7_25 l_0_7_25)))
 (let ((?x6931 (* l_0_7_24 l_0_7_24)))
 (let ((?x8237 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x6931) ?x15801)))
 (let ((?x8137 (- (- (- (- (+ (+ (+ ?x8237 ?x15812) ?x15814) ?x15816) ?x15818) ?x15820) ?x15822) ?x15824)))
 (= (- (- (- ?x8137 ?x15826) ?x15828) ?x15830) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_7_57) l_0_7_57) (* l_0_7_85 l_0_7_85)) 0.0))
(assert
 (let ((?x7965 (- (* (* (- 2.0) l_0_7_57) l_0_7_58) (* (* 2.0 l_0_7_85) l_0_7_86))))
 (= ?x7965 0.0)))
(assert
 (let ((?x15920 (- (* (* (- 2.0) l_0_7_57) l_0_7_60) (* (* 2.0 l_0_7_85) l_0_7_88))))
 (= ?x15920 0.0)))
(assert
 (let ((?x15935 (- (* (* (- 2.0) l_0_7_57) l_0_7_63) (* (* 2.0 l_0_7_85) l_0_7_91))))
 (= ?x15935 0.0)))
(assert
 (let ((?x15950 (- (* (* (- 2.0) l_0_7_57) l_0_7_67) (* (* 2.0 l_0_7_85) l_0_7_95))))
 (= ?x15950 0.0)))
(assert
 (let ((?x15967 (- (* (* (- 2.0) l_0_7_100) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_72))))
 (= ?x15967 0.0)))
(assert
 (let ((?x15983 (- (* (* (- 2.0) l_0_7_106) l_0_7_85) (* (* 2.0 l_0_7_57) l_0_7_78))))
 (= ?x15983 0.0)))
(assert
 (let ((?x16003 (* l_0_7_87 l_0_7_87)))
 (let ((?x16001 (* l_0_7_86 l_0_7_86)))
 (let ((?x16000 (- (* (* (- 1.0) l_0_7_58) l_0_7_58) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (= (- (- ?x16000 ?x16001) ?x16003) 0.0)))))
(assert
 (let ((?x16022 (- (* (* (- 2.0) l_0_7_58) l_0_7_60) (* (* 2.0 l_0_7_59) l_0_7_61))))
 (let ((?x16028 (- (- ?x16022 (* (* 2.0 l_0_7_86) l_0_7_88)) (* (* 2.0 l_0_7_87) l_0_7_89))))
 (= ?x16028 0.0))))
(assert
 (let ((?x16055 (- (* (* (- 2.0) l_0_7_58) l_0_7_63) (* (* 2.0 l_0_7_59) l_0_7_64))))
 (let ((?x16059 (- (- ?x16055 (* (* 2.0 l_0_7_86) l_0_7_91)) (* (* 2.0 l_0_7_87) l_0_7_92))))
 (= ?x16059 0.0))))
(assert
 (let ((?x16086 (- (* (* (- 2.0) l_0_7_58) l_0_7_67) (* (* 2.0 l_0_7_59) l_0_7_68))))
 (let ((?x16090 (- (- ?x16086 (* (* 2.0 l_0_7_86) l_0_7_95)) (* (* 2.0 l_0_7_87) l_0_7_96))))
 (= ?x16090 0.0))))
(assert
 (let ((?x16117 (- (* (* (- 2.0) l_0_7_106) l_0_7_86) (* (* 2.0 l_0_7_107) l_0_7_87))))
 (let ((?x16121 (- (- ?x16117 (* (* 2.0 l_0_7_58) l_0_7_78)) (* (* 2.0 l_0_7_59) l_0_7_79))))
 (= ?x16121 0.0))))
(assert
 (let ((?x16158 (* l_0_7_90 l_0_7_90)))
 (let ((?x16156 (* l_0_7_89 l_0_7_89)))
 (let ((?x16154 (* l_0_7_88 l_0_7_88)))
 (let ((?x16150 (- (* (* (- 1.0) l_0_7_60) l_0_7_60) (* (* 1.0 l_0_7_61) l_0_7_61))))
 (let ((?x16159 (- (- (- (- ?x16150 (* (* 1.0 l_0_7_62) l_0_7_62)) ?x16154) ?x16156) ?x16158)))
 (= ?x16159 0.0)))))))
(assert
 (let ((?x16184 (- (* (* (- 2.0) l_0_7_60) l_0_7_67) (* (* 2.0 l_0_7_61) l_0_7_68))))
 (let ((?x16188 (- (- ?x16184 (* (* 2.0 l_0_7_62) l_0_7_69)) (* (* 2.0 l_0_7_88) l_0_7_95))))
 (let ((?x16192 (- (- ?x16188 (* (* 2.0 l_0_7_89) l_0_7_96)) (* (* 2.0 l_0_7_90) l_0_7_97))))
 (= ?x16192 0.0)))))
(assert
 (let ((?x16231 (- (* (* (- 2.0) l_0_7_100) l_0_7_88) (* (* 2.0 l_0_7_101) l_0_7_89))))
 (let ((?x16236 (- (- ?x16231 (* (* 2.0 l_0_7_102) l_0_7_90)) (* (* 2.0 l_0_7_60) l_0_7_72))))
 (let ((?x16240 (- (- ?x16236 (* (* 2.0 l_0_7_61) l_0_7_73)) (* (* 2.0 l_0_7_62) l_0_7_74))))
 (= ?x16240 0.0)))))
(assert
 (let ((?x16279 (- (* (* (- 2.0) l_0_7_106) l_0_7_88) (* (* 2.0 l_0_7_107) l_0_7_89))))
 (let ((?x16283 (- (- ?x16279 (* (* 2.0 l_0_7_108) l_0_7_90)) (* (* 2.0 l_0_7_60) l_0_7_78))))
 (let ((?x16287 (- (- ?x16283 (* (* 2.0 l_0_7_61) l_0_7_79)) (* (* 2.0 l_0_7_62) l_0_7_80))))
 (= ?x16287 0.0)))))
(assert
 (let ((?x16341 (* l_0_7_94 l_0_7_94)))
 (let ((?x16339 (* l_0_7_93 l_0_7_93)))
 (let ((?x16337 (* l_0_7_92 l_0_7_92)))
 (let ((?x16335 (* l_0_7_91 l_0_7_91)))
 (let ((?x16328 (- (* (* (- 1.0) l_0_7_63) l_0_7_63) (* (* 1.0 l_0_7_64) l_0_7_64))))
 (let ((?x16334 (- (- ?x16328 (* (* 1.0 l_0_7_65) l_0_7_65)) (* (* 1.0 l_0_7_66) l_0_7_66))))
 (= (- (- (- (- ?x16334 ?x16335) ?x16337) ?x16339) ?x16341) 0.0))))))))
(assert
 (let ((?x16375 (- (* (* (- 2.0) l_0_7_63) l_0_7_67) (* (* 2.0 l_0_7_64) l_0_7_68))))
 (let ((?x16381 (- (- ?x16375 (* (* 2.0 l_0_7_65) l_0_7_69)) (* (* 2.0 l_0_7_66) l_0_7_70))))
 (let ((?x16387 (- (- ?x16381 (* (* 2.0 l_0_7_91) l_0_7_95)) (* (* 2.0 l_0_7_92) l_0_7_96))))
 (let ((?x16393 (- (- ?x16387 (* (* 2.0 l_0_7_93) l_0_7_97)) (* (* 2.0 l_0_7_94) l_0_7_98))))
 (= ?x16393 0.0))))))
(assert
 (let ((?x16444 (- (* (* (- 2.0) l_0_7_100) l_0_7_91) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x16449 (- (- ?x16444 (* (* 2.0 l_0_7_102) l_0_7_93)) (* (* 2.0 l_0_7_103) l_0_7_94))))
 (let ((?x16454 (- (- ?x16449 (* (* 2.0 l_0_7_63) l_0_7_72)) (* (* 2.0 l_0_7_64) l_0_7_73))))
 (let ((?x16458 (- (- ?x16454 (* (* 2.0 l_0_7_65) l_0_7_74)) (* (* 2.0 l_0_7_66) l_0_7_75))))
 (= ?x16458 0.0))))))
(assert
 (let ((?x16496 (- (* (* (- 2.0) l_0_7_106) l_0_7_91) (* (* 2.0 l_0_7_107) l_0_7_92))))
 (let ((?x16500 (- (- ?x16496 (* (* 2.0 l_0_7_108) l_0_7_93)) (* (* 2.0 l_0_7_109) l_0_7_94))))
 (let ((?x16504 (- (- ?x16500 (* (* 2.0 l_0_7_63) l_0_7_78)) (* (* 2.0 l_0_7_64) l_0_7_79))))
 (let ((?x16508 (- (- ?x16504 (* (* 2.0 l_0_7_65) l_0_7_80)) (* (* 2.0 l_0_7_66) l_0_7_81))))
 (= ?x16508 0.0))))))
(assert
 (let ((?x16540 (* l_0_7_99 l_0_7_99)))
 (let ((?x16538 (* l_0_7_98 l_0_7_98)))
 (let ((?x16536 (* l_0_7_97 l_0_7_97)))
 (let ((?x16534 (* l_0_7_96 l_0_7_96)))
 (let ((?x16532 (* l_0_7_95 l_0_7_95)))
 (let ((?x8512 (- (* (* (- 1.0) l_0_7_67) l_0_7_67) (* (* 1.0 l_0_7_68) l_0_7_68))))
 (let ((?x16528 (- (- ?x8512 (* (* 1.0 l_0_7_69) l_0_7_69)) (* (* 1.0 l_0_7_70) l_0_7_70))))
 (let ((?x16537 (- (- (- (- ?x16528 (* (* 1.0 l_0_7_71) l_0_7_71)) ?x16532) ?x16534) ?x16536)))
 (= (- (- ?x16537 ?x16538) ?x16540) 0.0))))))))))
(assert
 (let ((?x16579 (- (* (* (- 2.0) l_0_7_100) l_0_7_95) (* (* 2.0 l_0_7_101) l_0_7_96))))
 (let ((?x16583 (- (- ?x16579 (* (* 2.0 l_0_7_102) l_0_7_97)) (* (* 2.0 l_0_7_103) l_0_7_98))))
 (let ((?x16588 (- (- ?x16583 (* (* 2.0 l_0_7_104) l_0_7_99)) (* (* 2.0 l_0_7_67) l_0_7_72))))
 (let ((?x16592 (- (- ?x16588 (* (* 2.0 l_0_7_68) l_0_7_73)) (* (* 2.0 l_0_7_69) l_0_7_74))))
 (let ((?x16596 (- (- ?x16592 (* (* 2.0 l_0_7_70) l_0_7_75)) (* (* 2.0 l_0_7_71) l_0_7_76))))
 (= ?x16596 0.0)))))))
(assert
 (let ((?x16663 (* l_0_7_105 l_0_7_105)))
 (let ((?x16661 (* l_0_7_104 l_0_7_104)))
 (let ((?x16659 (* l_0_7_103 l_0_7_103)))
 (let ((?x16657 (* l_0_7_102 l_0_7_102)))
 (let ((?x16658 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_101 l_0_7_101)) ?x16657)))
 (let ((?x16667 (- (- (- (- ?x16658 ?x16659) ?x16661) ?x16663) (* (* 1.0 l_0_7_72) l_0_7_72))))
 (let ((?x16673 (- (- ?x16667 (* (* 1.0 l_0_7_73) l_0_7_73)) (* (* 1.0 l_0_7_74) l_0_7_74))))
 (let ((?x16679 (- (- ?x16673 (* (* 1.0 l_0_7_75) l_0_7_75)) (* (* 1.0 l_0_7_76) l_0_7_76))))
 (= (- ?x16679 (* (* 1.0 l_0_7_77) l_0_7_77)) 0.0))))))))))
(assert
 (let ((?x16730 (- (* (* (- 2.0) l_0_7_100) l_0_7_106) (* (* 2.0 l_0_7_101) l_0_7_107))))
 (let ((?x16734 (- (- ?x16730 (* (* 2.0 l_0_7_102) l_0_7_108)) (* (* 2.0 l_0_7_103) l_0_7_109))))
 (let ((?x16739 (- (- ?x16734 (* (* 2.0 l_0_7_104) l_0_7_110)) (* (* 2.0 l_0_7_105) l_0_7_111))))
 (let ((?x16745 (- (- ?x16739 (* (* 2.0 l_0_7_72) l_0_7_78)) (* (* 2.0 l_0_7_73) l_0_7_79))))
 (let ((?x16751 (- (- ?x16745 (* (* 2.0 l_0_7_74) l_0_7_80)) (* (* 2.0 l_0_7_75) l_0_7_81))))
 (let ((?x16757 (- (- ?x16751 (* (* 2.0 l_0_7_76) l_0_7_82)) (* (* 2.0 l_0_7_77) l_0_7_83))))
 (= ?x16757 0.0))))))))
(assert
 (let ((?x16842 (* l_0_7_112 l_0_7_112)))
 (let ((?x16840 (* l_0_7_111 l_0_7_111)))
 (let ((?x16838 (* l_0_7_110 l_0_7_110)))
 (let ((?x16836 (* l_0_7_109 l_0_7_109)))
 (let ((?x16834 (* l_0_7_108 l_0_7_108)))
 (let ((?x16835 (- (- (* (- l_0_7_106) l_0_7_106) (* l_0_7_107 l_0_7_107)) ?x16834)))
 (let ((?x16846 (- (- (- (- (- ?x16835 ?x16836) ?x16838) ?x16840) ?x16842) (* (* 1.0 l_0_7_78) l_0_7_78))))
 (let ((?x16852 (- (- ?x16846 (* (* 1.0 l_0_7_79) l_0_7_79)) (* (* 1.0 l_0_7_80) l_0_7_80))))
 (let ((?x16858 (- (- ?x16852 (* (* 1.0 l_0_7_81) l_0_7_81)) (* (* 1.0 l_0_7_82) l_0_7_82))))
 (let ((?x16864 (- (- ?x16858 (* (* 1.0 l_0_7_83) l_0_7_83)) (* (* 1.0 l_0_7_84) l_0_7_84))))
 (= ?x16864 0.0))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_28 0.0))
(assert
 (>= l_0_7_29 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_34 0.0))
(assert
 (>= l_0_7_38 0.0))
(assert
 (>= l_0_7_43 0.0))
(assert
 (>= l_0_7_49 0.0))
(assert
 (>= l_0_7_56 0.0))
(assert
 (>= l_0_7_57 0.0))
(assert
 (>= l_0_7_59 0.0))
(assert
 (>= l_0_7_62 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_71 0.0))
(assert
 (>= l_0_7_77 0.0))
(assert
 (>= l_0_7_84 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_87 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_94 0.0))
(assert
 (>= l_0_7_99 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_112 0.0))
(assert
 (let ((?x16942 (* l_0_8_29 l_0_8_29)))
 (let ((?x16938 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_116) l_0_8_119)) (* (* 2.0 l_0_8_117) l_0_8_120))))
 (let ((?x16946 (- (- (- ?x16938 (* (* 2.0 l_0_8_118) l_0_8_121)) ?x16942) (* (* 2.0 l_0_8_60) l_0_8_63))))
 (let ((?x16952 (- (- ?x16946 (* (* 2.0 l_0_8_61) l_0_8_64)) (* (* 2.0 l_0_8_62) l_0_8_65))))
 (let ((?x16958 (- (- ?x16952 (* (* 2.0 l_0_8_88) l_0_8_91)) (* (* 2.0 l_0_8_89) l_0_8_92))))
 (= (+ (- ?x16958 (* (* 2.0 l_0_8_90) l_0_8_93)) 1.0) 0.0)))))))
(assert
 (let ((?x16942 (* l_0_8_29 l_0_8_29)))
 (let ((?x17021 (- (- (* l_0_8_1 l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_95)) (* (* 2.0 l_0_8_107) l_0_8_96))))
 (let ((?x17027 (- (- ?x17021 (* (* 2.0 l_0_8_108) l_0_8_97)) (* (* 2.0 l_0_8_109) l_0_8_98))))
 (let ((?x17033 (- (- ?x17027 (* (* 2.0 l_0_8_110) l_0_8_99)) (* (* 2.0 l_0_8_123) l_0_8_134))))
 (let ((?x17039 (- (- ?x17033 (* (* 2.0 l_0_8_124) l_0_8_135)) (* (* 2.0 l_0_8_125) l_0_8_136))))
 (let ((?x17045 (- (- ?x17039 (* (* 2.0 l_0_8_126) l_0_8_137)) (* (* 2.0 l_0_8_127) l_0_8_138))))
 (let ((?x17052 (- (- (- ?x17045 ?x16942) (* (* 2.0 l_0_8_67) l_0_8_78)) (* (* 2.0 l_0_8_68) l_0_8_79))))
 (let ((?x17058 (- (- ?x17052 (* (* 2.0 l_0_8_69) l_0_8_80)) (* (* 2.0 l_0_8_70) l_0_8_81))))
 (= (+ (- ?x17058 (* (* 2.0 l_0_8_71) l_0_8_82)) 1.0) 0.0))))))))))
(assert
 (let ((?x16942 (* l_0_8_29 l_0_8_29)))
 (let ((?x17108 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_100) l_0_8_86)) (* (* 2.0 l_0_8_101) l_0_8_87))))
 (let ((?x17114 (- (- ?x17108 (* (* 2.0 l_0_8_114) l_0_8_128)) (* (* 2.0 l_0_8_115) l_0_8_129))))
 (let ((?x17121 (- (- (+ ?x17114 ?x16942) (* (* 2.0 l_0_8_58) l_0_8_72)) (* (* 2.0 l_0_8_59) l_0_8_73))))
 (= (- ?x17121 1.0) 0.0))))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17137 (* ?x17136 l_0_8_30)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_2) ?x17137) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17143 (* ?x17136 l_0_8_32)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_4) ?x17143) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17150 (* ?x17136 l_0_8_35)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_7) ?x17150) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17160 (* ?x17136 l_0_8_39)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_11) ?x17160) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17170 (* ?x17136 l_0_8_44)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_16) ?x17170) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17180 (* ?x17136 l_0_8_50)))
 (= (+ (* (* (- 2.0) l_0_8_1) l_0_8_22) ?x17180) 0.0))))
(assert
 (let ((?x17199 (* l_0_8_31 l_0_8_31)))
 (let ((?x17197 (* l_0_8_30 l_0_8_30)))
 (let ((?x17200 (+ (+ (- (* (- l_0_8_2) l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17197) ?x17199)))
 (= ?x17200 0.0)))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17221 (* ?x17220 l_0_8_33)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17218 (* ?x17217 l_0_8_32)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x17215 (* ?x17214 l_0_8_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_4) ?x17215) ?x17218) ?x17221) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17233 (* ?x17220 l_0_8_36)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x9231 (* ?x17217 l_0_8_35)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x9227 (* ?x17214 l_0_8_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_7) ?x9227) ?x9231) ?x17233) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17252 (* ?x17220 l_0_8_40)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17250 (* ?x17217 l_0_8_39)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17248 (* ?x17247 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x17248) ?x17250) ?x17252) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17277 (* ?x17220 l_0_8_45)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17275 (* ?x17217 l_0_8_44)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17273 (* ?x17267 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_16) l_0_8_2) ?x17273) ?x17275) ?x17277) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17297 (* ?x17220 l_0_8_51)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17295 (* ?x17217 l_0_8_50)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17293 (* ?x17292 l_0_8_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_22) ?x17293) ?x17295) ?x17297) 0.0))))))))
(assert
 (let ((?x17324 (* l_0_8_6 l_0_8_6)))
 (let ((?x17322 (* l_0_8_5 l_0_8_5)))
 (let ((?x17320 (* l_0_8_4 l_0_8_4)))
 (let ((?x17318 (* l_0_8_34 l_0_8_34)))
 (let ((?x17321 (- (+ (+ (* l_0_8_32 l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x17318) ?x17320)))
 (= (- (- ?x17321 ?x17322) ?x17324) 0.0)))))))
(assert
 (let ((?x17356 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17353 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17350 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17347 (* ?x17346 l_0_8_37)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17344 (* ?x17343 l_0_8_36)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17341 (* ?x17340 l_0_8_35)))
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17277 (* ?x17220 l_0_8_45)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17275 (* ?x17217 l_0_8_44)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17273 (* ?x17267 l_0_8_3)))
 (let ((?x17335 (* 2.0 l_0_8_16)))
 (let ((?x17336 (* ?x17335 l_0_8_2)))
 (let ((?x17351 (- (+ (+ (+ (- (- (+ ?x17336 ?x17273) ?x17275) ?x17277) ?x17341) ?x17344) ?x17347) ?x17350)))
 (= (- (- ?x17351 ?x17353) ?x17356) 0.0))))))))))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17378 (* ?x17346 l_0_8_41)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17376 (* ?x17343 l_0_8_40)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17374 (* ?x17340 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17372 (* ?x9325 l_0_8_6)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x9321 (* ?x17247 l_0_8_5)))
 (let ((?x17377 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x9321) ?x17372) ?x17374) ?x17376)))
 (= (+ ?x17377 ?x17378) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17406 (* ?x17346 l_0_8_46)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17404 (* ?x17343 l_0_8_45)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17402 (* ?x17340 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17400 (* ?x17393 l_0_8_6)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x9359 (* ?x17267 l_0_8_5)))
 (let ((?x17405 (+ (+ (- (- (* (* (- 2.0) l_0_8_16) l_0_8_4) ?x9359) ?x17400) ?x17402) ?x17404)))
 (= (+ ?x17405 ?x17406) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17427 (* ?x17346 l_0_8_52)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17425 (* ?x17343 l_0_8_51)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17423 (* ?x17340 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17421 (* ?x17420 l_0_8_6)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x9372 (* ?x17292 l_0_8_5)))
 (let ((?x17426 (+ (+ (- (- (* (* (- 2.0) l_0_8_22) l_0_8_4) ?x9372) ?x17421) ?x17423) ?x17425)))
 (= (+ ?x17426 ?x17427) 0.0)))))))))))))
(assert
 (let ((?x17462 (* l_0_8_9 l_0_8_9)))
 (let ((?x17460 (* l_0_8_8 l_0_8_8)))
 (let ((?x17458 (* l_0_8_7 l_0_8_7)))
 (let ((?x17456 (* l_0_8_38 l_0_8_38)))
 (let ((?x17454 (* l_0_8_37 l_0_8_37)))
 (let ((?x17452 (* l_0_8_36 l_0_8_36)))
 (let ((?x17455 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17452) ?x17454)))
 (= (- (- (- (+ ?x17455 ?x17456) ?x17458) ?x17460) ?x17462) 0.0)))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17497 (* ?x17496 l_0_8_42)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17494 (* ?x17493 l_0_8_41)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17491 (* ?x17490 l_0_8_40)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17488 (* ?x17487 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17485 (* ?x9325 l_0_8_9)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17483 (* ?x17247 l_0_8_8)))
 (let ((?x17480 (* 2.0 l_0_8_11)))
 (let ((?x17481 (* ?x17480 l_0_8_7)))
 (let ((?x17489 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x17481) ?x17483) ?x17485) ?x17488)))
 (= (+ (+ (+ ?x17489 ?x17491) ?x17494) ?x17497) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17525 (* ?x17496 l_0_8_47)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17523 (* ?x17493 l_0_8_46)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17521 (* ?x17490 l_0_8_45)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17519 (* ?x17487 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17517 (* ?x17393 l_0_8_9)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17508 (* ?x17267 l_0_8_8)))
 (let ((?x17335 (* 2.0 l_0_8_16)))
 (let ((?x9426 (* ?x17335 l_0_8_7)))
 (let ((?x17520 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_19) ?x9426) ?x17508) ?x17517) ?x17519)))
 (= (+ (+ (+ ?x17520 ?x17521) ?x17523) ?x17525) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17561 (* ?x17496 l_0_8_53)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17559 (* ?x17493 l_0_8_52)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17557 (* ?x17490 l_0_8_51)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17555 (* ?x17487 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17553 (* ?x17420 l_0_8_9)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17544 (* ?x17292 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17543 (* ?x9485 l_0_8_7)))
 (let ((?x17556 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_25) ?x17543) ?x17544) ?x17553) ?x17555)))
 (= (+ (+ (+ ?x17556 ?x17557) ?x17559) ?x17561) 0.0)))))))))))))))))
(assert
 (let ((?x17596 (* l_0_8_43 l_0_8_43)))
 (let ((?x17594 (* l_0_8_42 l_0_8_42)))
 (let ((?x17592 (* l_0_8_41 l_0_8_41)))
 (let ((?x17590 (* l_0_8_40 l_0_8_40)))
 (let ((?x17588 (* l_0_8_39 l_0_8_39)))
 (let ((?x17586 (* l_0_8_15 l_0_8_15)))
 (let ((?x17584 (* l_0_8_14 l_0_8_14)))
 (let ((?x17582 (* l_0_8_13 l_0_8_13)))
 (let ((?x17585 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17582) ?x17584)))
 (= (+ (+ (+ (+ (+ (- ?x17585 ?x17586) ?x17588) ?x17590) ?x17592) ?x17594) ?x17596) 0.0)))))))))))
(assert
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17643 (* ?x17642 l_0_8_48)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17640 (* ?x17639 l_0_8_47)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17637 (* ?x17636 l_0_8_46)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17634 (* ?x17633 l_0_8_45)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17631 (* ?x17630 l_0_8_44)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17627 l_0_8_20)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17625 (* ?x17624 l_0_8_19)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17622 (* ?x9325 l_0_8_18)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17620 (* ?x17247 l_0_8_17)))
 (let ((?x17629 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_16) ?x17620) ?x17622) ?x17625) ?x17628)))
 (= (+ (+ (+ (+ (+ ?x17629 ?x17631) ?x17634) ?x17637) ?x17640) ?x17643) 0.0)))))))))))))))))))))
(assert
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17697 (* ?x17642 l_0_8_54)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17695 (* ?x17639 l_0_8_53)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17693 (* ?x17636 l_0_8_52)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17691 (* ?x17633 l_0_8_51)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17689 (* ?x17630 l_0_8_50)))
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17277 (* ?x17220 l_0_8_45)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17275 (* ?x17217 l_0_8_44)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17273 (* ?x17267 l_0_8_3)))
 (let ((?x17335 (* 2.0 l_0_8_16)))
 (let ((?x17336 (* ?x17335 l_0_8_2)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17683 (* ?x17627 l_0_8_26)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17673 (* ?x17624 l_0_8_25)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17670 (* ?x9325 l_0_8_24)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17666 (* ?x17247 l_0_8_23)))
 (let ((?x17684 (- (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_22) ?x17666) ?x17670) ?x17673) ?x17683)))
 (let ((?x17694 (+ (+ (+ (- (- (+ (+ ?x17684 ?x17336) ?x17273) ?x17275) ?x17277) ?x17689) ?x17691) ?x17693)))
 (= (+ (+ ?x17694 ?x17695) ?x17697) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x17736 (* l_0_8_49 l_0_8_49)))
 (let ((?x17734 (* l_0_8_48 l_0_8_48)))
 (let ((?x17732 (* l_0_8_47 l_0_8_47)))
 (let ((?x17730 (* l_0_8_46 l_0_8_46)))
 (let ((?x17728 (* l_0_8_45 l_0_8_45)))
 (let ((?x17726 (* l_0_8_44 l_0_8_44)))
 (let ((?x17724 (* l_0_8_21 l_0_8_21)))
 (let ((?x17722 (* l_0_8_20 l_0_8_20)))
 (let ((?x17720 (* l_0_8_19 l_0_8_19)))
 (let ((?x9619 (* l_0_8_18 l_0_8_18)))
 (let ((?x17721 (- (- (- (* (- l_0_8_16) l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9619) ?x17720)))
 (let ((?x17735 (+ (+ (+ (+ (+ (- (- ?x17721 ?x17722) ?x17724) ?x17726) ?x17728) ?x17730) ?x17732) ?x17734)))
 (= (+ ?x17735 ?x17736) 0.0))))))))))))))
(assert
 (let ((?x17785 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17782 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17779 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17776 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17773 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17770 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17767 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17764 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17761 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17758 (* ?x17393 l_0_8_24)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17756 (* ?x17267 l_0_8_23)))
 (let ((?x17765 (- (- (- (- (* (* (- 2.0) l_0_8_16) l_0_8_22) ?x17756) ?x17758) ?x17761) ?x17764)))
 (let ((?x17786 (+ (+ (+ (+ (+ (+ (- ?x17765 ?x17767) ?x17770) ?x17773) ?x17776) ?x17779) ?x17782) ?x17785)))
 (= ?x17786 0.0)))))))))))))))))
(assert
 (let ((?x17836 (* l_0_8_56 l_0_8_56)))
 (let ((?x17834 (* l_0_8_55 l_0_8_55)))
 (let ((?x17832 (* l_0_8_54 l_0_8_54)))
 (let ((?x17830 (* l_0_8_53 l_0_8_53)))
 (let ((?x17828 (* l_0_8_52 l_0_8_52)))
 (let ((?x17826 (* l_0_8_51 l_0_8_51)))
 (let ((?x17824 (* l_0_8_50 l_0_8_50)))
 (let ((?x17822 (* l_0_8_28 l_0_8_28)))
 (let ((?x17820 (* l_0_8_27 l_0_8_27)))
 (let ((?x17818 (* l_0_8_26 l_0_8_26)))
 (let ((?x17807 (* l_0_8_25 l_0_8_25)))
 (let ((?x17804 (* l_0_8_24 l_0_8_24)))
 (let ((?x17817 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17804) ?x17807)))
 (let ((?x17831 (+ (+ (+ (+ (- (- (- ?x17817 ?x17818) ?x17820) ?x17822) ?x17824) ?x17826) ?x17828) ?x17830)))
 (= (+ (+ (+ ?x17831 ?x17832) ?x17834) ?x17836) 0.0))))))))))))))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17137 (* ?x17136 l_0_8_30)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_2) ?x17137) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17143 (* ?x17136 l_0_8_32)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_4) ?x17143) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17150 (* ?x17136 l_0_8_35)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_7) ?x17150) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17160 (* ?x17136 l_0_8_39)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_11) ?x17160) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17170 (* ?x17136 l_0_8_44)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_16) ?x17170) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17180 (* ?x17136 l_0_8_50)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_22) ?x17180) 0.0))))
(assert
 (let ((?x17199 (* l_0_8_31 l_0_8_31)))
 (let ((?x17197 (* l_0_8_30 l_0_8_30)))
 (= (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17197) ?x17199) 0.0))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17221 (* ?x17220 l_0_8_33)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17218 (* ?x17217 l_0_8_32)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x17215 (* ?x17214 l_0_8_5)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_4) ?x17215) ?x17218) ?x17221) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17233 (* ?x17220 l_0_8_36)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x9231 (* ?x17217 l_0_8_35)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x9227 (* ?x17214 l_0_8_8)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x9227) ?x9231) ?x17233) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17252 (* ?x17220 l_0_8_40)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17250 (* ?x17217 l_0_8_39)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17248 (* ?x17247 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x17248) ?x17250) ?x17252) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17297 (* ?x17220 l_0_8_51)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17295 (* ?x17217 l_0_8_50)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17293 (* ?x17292 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_22) ?x17293) ?x17295) ?x17297) 0.0))))))))
(assert
 (let ((?x17324 (* l_0_8_6 l_0_8_6)))
 (let ((?x17322 (* l_0_8_5 l_0_8_5)))
 (let ((?x17320 (* l_0_8_4 l_0_8_4)))
 (let ((?x17318 (* l_0_8_34 l_0_8_34)))
 (let ((?x9847 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x17318) ?x17320)))
 (= (+ (+ ?x9847 ?x17322) ?x17324) 0.0)))))))
(assert
 (let ((?x17356 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17353 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17350 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17347 (* ?x17346 l_0_8_37)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17344 (* ?x17343 l_0_8_36)))
 (let ((?x17894 (+ (+ (- (- (* (* (- 2.0) l_0_8_32) l_0_8_35) ?x17344) ?x17347) ?x17350) ?x17353)))
 (= (+ ?x17894 ?x17356) 0.0))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17378 (* ?x17346 l_0_8_41)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17376 (* ?x17343 l_0_8_40)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17374 (* ?x17340 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17372 (* ?x9325 l_0_8_6)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x9321 (* ?x17247 l_0_8_5)))
 (let ((?x17897 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x9321) ?x17372) ?x17374) ?x17376)))
 (= (- ?x17897 ?x17378) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17406 (* ?x17346 l_0_8_46)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17404 (* ?x17343 l_0_8_45)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17402 (* ?x17340 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17400 (* ?x17393 l_0_8_6)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x9359 (* ?x17267 l_0_8_5)))
 (let ((?x9887 (- (- (+ (+ (* (* 2.0 l_0_8_16) l_0_8_4) ?x9359) ?x17400) ?x17402) ?x17404)))
 (= (- ?x9887 ?x17406) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17427 (* ?x17346 l_0_8_52)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17425 (* ?x17343 l_0_8_51)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17423 (* ?x17340 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17421 (* ?x17420 l_0_8_6)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x9372 (* ?x17292 l_0_8_5)))
 (let ((?x9917 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x9372) ?x17421) ?x17423) ?x17425)))
 (= (- ?x9917 ?x17427) 0.0)))))))))))))
(assert
 (let ((?x17462 (* l_0_8_9 l_0_8_9)))
 (let ((?x17460 (* l_0_8_8 l_0_8_8)))
 (let ((?x17458 (* l_0_8_7 l_0_8_7)))
 (let ((?x17456 (* l_0_8_38 l_0_8_38)))
 (let ((?x17454 (* l_0_8_37 l_0_8_37)))
 (let ((?x17452 (* l_0_8_36 l_0_8_36)))
 (let ((?x10082 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17452) ?x17454)))
 (= (+ (+ (+ (- ?x10082 ?x17456) ?x17458) ?x17460) ?x17462) 0.0)))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17497 (* ?x17496 l_0_8_42)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17494 (* ?x17493 l_0_8_41)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17491 (* ?x17490 l_0_8_40)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17488 (* ?x17487 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17485 (* ?x9325 l_0_8_9)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17483 (* ?x17247 l_0_8_8)))
 (let ((?x17480 (* 2.0 l_0_8_11)))
 (let ((?x17481 (* ?x17480 l_0_8_7)))
 (let ((?x10006 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x17481) ?x17483) ?x17485) ?x17488)))
 (= (- (- (- ?x10006 ?x17491) ?x17494) ?x17497) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17525 (* ?x17496 l_0_8_47)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17523 (* ?x17493 l_0_8_46)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17521 (* ?x17490 l_0_8_45)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17519 (* ?x17487 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17517 (* ?x17393 l_0_8_9)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17508 (* ?x17267 l_0_8_8)))
 (let ((?x17335 (* 2.0 l_0_8_16)))
 (let ((?x9426 (* ?x17335 l_0_8_7)))
 (let ((?x17907 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_19) ?x9426) ?x17508) ?x17517) ?x17519)))
 (= (- (- (- ?x17907 ?x17521) ?x17523) ?x17525) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17561 (* ?x17496 l_0_8_53)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17559 (* ?x17493 l_0_8_52)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17557 (* ?x17490 l_0_8_51)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17555 (* ?x17487 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17553 (* ?x17420 l_0_8_9)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17544 (* ?x17292 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17543 (* ?x9485 l_0_8_7)))
 (let ((?x10077 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_25) ?x17543) ?x17544) ?x17553) ?x17555)))
 (= (- (- (- ?x10077 ?x17557) ?x17559) ?x17561) 0.0)))))))))))))))))
(assert
 (let ((?x17596 (* l_0_8_43 l_0_8_43)))
 (let ((?x17594 (* l_0_8_42 l_0_8_42)))
 (let ((?x17592 (* l_0_8_41 l_0_8_41)))
 (let ((?x17590 (* l_0_8_40 l_0_8_40)))
 (let ((?x17588 (* l_0_8_39 l_0_8_39)))
 (let ((?x17586 (* l_0_8_15 l_0_8_15)))
 (let ((?x17584 (* l_0_8_14 l_0_8_14)))
 (let ((?x17582 (* l_0_8_13 l_0_8_13)))
 (let ((?x10228 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17582) ?x17584)))
 (= (- (- (- (- (- (+ ?x10228 ?x17586) ?x17588) ?x17590) ?x17592) ?x17594) ?x17596) 0.0)))))))))))
(assert
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17643 (* ?x17642 l_0_8_48)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17640 (* ?x17639 l_0_8_47)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17637 (* ?x17636 l_0_8_46)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17634 (* ?x17633 l_0_8_45)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17631 (* ?x17630 l_0_8_44)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17627 l_0_8_20)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17625 (* ?x17624 l_0_8_19)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17622 (* ?x9325 l_0_8_18)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17620 (* ?x17247 l_0_8_17)))
 (let ((?x10319 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x17620) ?x17622) ?x17625) ?x17628)))
 (= (- (- (- (- (- ?x10319 ?x17631) ?x17634) ?x17637) ?x17640) ?x17643) 0.0)))))))))))))))))))))
(assert
 (let ((?x17356 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x17353 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17697 (* ?x17642 l_0_8_54)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17695 (* ?x17639 l_0_8_53)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17693 (* ?x17636 l_0_8_52)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17691 (* ?x17633 l_0_8_51)))
 (let ((?x17350 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17689 (* ?x17630 l_0_8_50)))
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17347 (* ?x17346 l_0_8_37)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17344 (* ?x17343 l_0_8_36)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17341 (* ?x17340 l_0_8_35)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17683 (* ?x17627 l_0_8_26)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17673 (* ?x17624 l_0_8_25)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17670 (* ?x9325 l_0_8_24)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17666 (* ?x17247 l_0_8_23)))
 (let ((?x10254 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x17666) ?x17670) ?x17673) ?x17683)))
 (let ((?x10243 (- (- (+ (- (- (- (- ?x10254 ?x17341) ?x17344) ?x17347) ?x17689) ?x17350) ?x17691) ?x17693)))
 (= (+ (+ (- (- ?x10243 ?x17695) ?x17697) ?x17353) ?x17356) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x17736 (* l_0_8_49 l_0_8_49)))
 (let ((?x17734 (* l_0_8_48 l_0_8_48)))
 (let ((?x17732 (* l_0_8_47 l_0_8_47)))
 (let ((?x17730 (* l_0_8_46 l_0_8_46)))
 (let ((?x17728 (* l_0_8_45 l_0_8_45)))
 (let ((?x17726 (* l_0_8_44 l_0_8_44)))
 (let ((?x17724 (* l_0_8_21 l_0_8_21)))
 (let ((?x17722 (* l_0_8_20 l_0_8_20)))
 (let ((?x17720 (* l_0_8_19 l_0_8_19)))
 (let ((?x9619 (* l_0_8_18 l_0_8_18)))
 (let ((?x10332 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9619) ?x17720)))
 (let ((?x10374 (- (- (- (- (- (+ (+ ?x10332 ?x17722) ?x17724) ?x17726) ?x17728) ?x17730) ?x17732) ?x17734)))
 (= (- ?x10374 ?x17736) 0.0))))))))))))))
(assert
 (let ((?x17785 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17782 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17779 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17776 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17773 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17770 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17767 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17764 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17761 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17758 (* ?x17393 l_0_8_24)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17756 (* ?x17267 l_0_8_23)))
 (let ((?x10496 (+ (+ (+ (+ (* (* 2.0 l_0_8_16) l_0_8_22) ?x17756) ?x17758) ?x17761) ?x17764)))
 (let ((?x10475 (- (- (- (- (- (- (+ ?x10496 ?x17767) ?x17770) ?x17773) ?x17776) ?x17779) ?x17782) ?x17785)))
 (= ?x10475 0.0)))))))))))))))))
(assert
 (let ((?x17836 (* l_0_8_56 l_0_8_56)))
 (let ((?x17834 (* l_0_8_55 l_0_8_55)))
 (let ((?x17832 (* l_0_8_54 l_0_8_54)))
 (let ((?x17830 (* l_0_8_53 l_0_8_53)))
 (let ((?x17828 (* l_0_8_52 l_0_8_52)))
 (let ((?x17826 (* l_0_8_51 l_0_8_51)))
 (let ((?x17824 (* l_0_8_50 l_0_8_50)))
 (let ((?x17822 (* l_0_8_28 l_0_8_28)))
 (let ((?x17820 (* l_0_8_27 l_0_8_27)))
 (let ((?x17818 (* l_0_8_26 l_0_8_26)))
 (let ((?x17807 (* l_0_8_25 l_0_8_25)))
 (let ((?x17804 (* l_0_8_24 l_0_8_24)))
 (let ((?x10657 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17804) ?x17807)))
 (let ((?x10483 (- (- (- (- (+ (+ (+ ?x10657 ?x17818) ?x17820) ?x17822) ?x17824) ?x17826) ?x17828) ?x17830)))
 (= (- (- (- ?x10483 ?x17832) ?x17834) ?x17836) 0.0))))))))))))))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17137 (* ?x17136 l_0_8_30)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_2) ?x17137) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17143 (* ?x17136 l_0_8_32)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_4) ?x17143) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17150 (* ?x17136 l_0_8_35)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_7) ?x17150) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17160 (* ?x17136 l_0_8_39)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_11) ?x17160) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17170 (* ?x17136 l_0_8_44)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_16) ?x17170) 0.0))))
(assert
 (let ((?x17136 (* 2.0 l_0_8_29)))
 (let ((?x17180 (* ?x17136 l_0_8_50)))
 (= (- (* (* 2.0 l_0_8_1) l_0_8_22) ?x17180) 0.0))))
(assert
 (let ((?x17199 (* l_0_8_31 l_0_8_31)))
 (let ((?x17197 (* l_0_8_30 l_0_8_30)))
 (= (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x17197) ?x17199) 0.0))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17221 (* ?x17220 l_0_8_33)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17218 (* ?x17217 l_0_8_32)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x17215 (* ?x17214 l_0_8_5)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_4) ?x17215) ?x17218) ?x17221) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17233 (* ?x17220 l_0_8_36)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x9231 (* ?x17217 l_0_8_35)))
 (let ((?x17214 (* 2.0 l_0_8_3)))
 (let ((?x9227 (* ?x17214 l_0_8_8)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x9227) ?x9231) ?x17233) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17252 (* ?x17220 l_0_8_40)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17250 (* ?x17217 l_0_8_39)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17248 (* ?x17247 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x17248) ?x17250) ?x17252) 0.0))))))))
(assert
 (let ((?x17220 (* 2.0 l_0_8_31)))
 (let ((?x17297 (* ?x17220 l_0_8_51)))
 (let ((?x17217 (* 2.0 l_0_8_30)))
 (let ((?x17295 (* ?x17217 l_0_8_50)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17293 (* ?x17292 l_0_8_3)))
 (= (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_22) ?x17293) ?x17295) ?x17297) 0.0))))))))
(assert
 (let ((?x17324 (* l_0_8_6 l_0_8_6)))
 (let ((?x17322 (* l_0_8_5 l_0_8_5)))
 (let ((?x17320 (* l_0_8_4 l_0_8_4)))
 (let ((?x17318 (* l_0_8_34 l_0_8_34)))
 (let ((?x9847 (+ (- (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x17318) ?x17320)))
 (= (+ (+ ?x9847 ?x17322) ?x17324) 0.0)))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17378 (* ?x17346 l_0_8_41)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17376 (* ?x17343 l_0_8_40)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17374 (* ?x17340 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17372 (* ?x9325 l_0_8_6)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x9321 (* ?x17247 l_0_8_5)))
 (let ((?x17897 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x9321) ?x17372) ?x17374) ?x17376)))
 (= (- ?x17897 ?x17378) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17406 (* ?x17346 l_0_8_46)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17404 (* ?x17343 l_0_8_45)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17402 (* ?x17340 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17400 (* ?x17393 l_0_8_6)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x9359 (* ?x17267 l_0_8_5)))
 (let ((?x9887 (- (- (+ (+ (* (* 2.0 l_0_8_16) l_0_8_4) ?x9359) ?x17400) ?x17402) ?x17404)))
 (= (- ?x9887 ?x17406) 0.0)))))))))))))
(assert
 (let ((?x17346 (* 2.0 l_0_8_34)))
 (let ((?x17427 (* ?x17346 l_0_8_52)))
 (let ((?x17343 (* 2.0 l_0_8_33)))
 (let ((?x17425 (* ?x17343 l_0_8_51)))
 (let ((?x17340 (* 2.0 l_0_8_32)))
 (let ((?x17423 (* ?x17340 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17421 (* ?x17420 l_0_8_6)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x9372 (* ?x17292 l_0_8_5)))
 (let ((?x9917 (- (- (+ (+ (* (* 2.0 l_0_8_22) l_0_8_4) ?x9372) ?x17421) ?x17423) ?x17425)))
 (= (- ?x9917 ?x17427) 0.0)))))))))))))
(assert
 (let ((?x17462 (* l_0_8_9 l_0_8_9)))
 (let ((?x17460 (* l_0_8_8 l_0_8_8)))
 (let ((?x17458 (* l_0_8_7 l_0_8_7)))
 (let ((?x17456 (* l_0_8_38 l_0_8_38)))
 (let ((?x17454 (* l_0_8_37 l_0_8_37)))
 (let ((?x17452 (* l_0_8_36 l_0_8_36)))
 (let ((?x10082 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_35 l_0_8_35)) ?x17452) ?x17454)))
 (= (+ (+ (+ (- ?x10082 ?x17456) ?x17458) ?x17460) ?x17462) 0.0)))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17497 (* ?x17496 l_0_8_42)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17494 (* ?x17493 l_0_8_41)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17491 (* ?x17490 l_0_8_40)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17488 (* ?x17487 l_0_8_39)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17485 (* ?x9325 l_0_8_9)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17483 (* ?x17247 l_0_8_8)))
 (let ((?x17480 (* 2.0 l_0_8_11)))
 (let ((?x17481 (* ?x17480 l_0_8_7)))
 (let ((?x10006 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x17481) ?x17483) ?x17485) ?x17488)))
 (= (- (- (- ?x10006 ?x17491) ?x17494) ?x17497) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17525 (* ?x17496 l_0_8_47)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17523 (* ?x17493 l_0_8_46)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17521 (* ?x17490 l_0_8_45)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17519 (* ?x17487 l_0_8_44)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17517 (* ?x17393 l_0_8_9)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17508 (* ?x17267 l_0_8_8)))
 (let ((?x17335 (* 2.0 l_0_8_16)))
 (let ((?x9426 (* ?x17335 l_0_8_7)))
 (let ((?x17907 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_19) ?x9426) ?x17508) ?x17517) ?x17519)))
 (= (- (- (- ?x17907 ?x17521) ?x17523) ?x17525) 0.0)))))))))))))))))
(assert
 (let ((?x17496 (* 2.0 l_0_8_38)))
 (let ((?x17561 (* ?x17496 l_0_8_53)))
 (let ((?x17493 (* 2.0 l_0_8_37)))
 (let ((?x17559 (* ?x17493 l_0_8_52)))
 (let ((?x17490 (* 2.0 l_0_8_36)))
 (let ((?x17557 (* ?x17490 l_0_8_51)))
 (let ((?x17487 (* 2.0 l_0_8_35)))
 (let ((?x17555 (* ?x17487 l_0_8_50)))
 (let ((?x17420 (* 2.0 l_0_8_24)))
 (let ((?x17553 (* ?x17420 l_0_8_9)))
 (let ((?x17292 (* 2.0 l_0_8_23)))
 (let ((?x17544 (* ?x17292 l_0_8_8)))
 (let ((?x9485 (* 2.0 l_0_8_22)))
 (let ((?x17543 (* ?x9485 l_0_8_7)))
 (let ((?x10077 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_25) ?x17543) ?x17544) ?x17553) ?x17555)))
 (= (- (- (- ?x10077 ?x17557) ?x17559) ?x17561) 0.0)))))))))))))))))
(assert
 (let ((?x17596 (* l_0_8_43 l_0_8_43)))
 (let ((?x17594 (* l_0_8_42 l_0_8_42)))
 (let ((?x17592 (* l_0_8_41 l_0_8_41)))
 (let ((?x17590 (* l_0_8_40 l_0_8_40)))
 (let ((?x17588 (* l_0_8_39 l_0_8_39)))
 (let ((?x17586 (* l_0_8_15 l_0_8_15)))
 (let ((?x17584 (* l_0_8_14 l_0_8_14)))
 (let ((?x17582 (* l_0_8_13 l_0_8_13)))
 (let ((?x10228 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x17582) ?x17584)))
 (= (- (- (- (- (- (+ ?x10228 ?x17586) ?x17588) ?x17590) ?x17592) ?x17594) ?x17596) 0.0)))))))))))
(assert
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17643 (* ?x17642 l_0_8_48)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17640 (* ?x17639 l_0_8_47)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17637 (* ?x17636 l_0_8_46)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17634 (* ?x17633 l_0_8_45)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17631 (* ?x17630 l_0_8_44)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17628 (* ?x17627 l_0_8_20)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17625 (* ?x17624 l_0_8_19)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17622 (* ?x9325 l_0_8_18)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17620 (* ?x17247 l_0_8_17)))
 (let ((?x10319 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_16) ?x17620) ?x17622) ?x17625) ?x17628)))
 (= (- (- (- (- (- ?x10319 ?x17631) ?x17634) ?x17637) ?x17640) ?x17643) 0.0)))))))))))))))))))))
(assert
 (let ((?x17642 (* 2.0 l_0_8_43)))
 (let ((?x17697 (* ?x17642 l_0_8_54)))
 (let ((?x17639 (* 2.0 l_0_8_42)))
 (let ((?x17695 (* ?x17639 l_0_8_53)))
 (let ((?x17636 (* 2.0 l_0_8_41)))
 (let ((?x17693 (* ?x17636 l_0_8_52)))
 (let ((?x17633 (* 2.0 l_0_8_40)))
 (let ((?x17691 (* ?x17633 l_0_8_51)))
 (let ((?x17630 (* 2.0 l_0_8_39)))
 (let ((?x17689 (* ?x17630 l_0_8_50)))
 (let ((?x17627 (* 2.0 l_0_8_15)))
 (let ((?x17683 (* ?x17627 l_0_8_26)))
 (let ((?x17624 (* 2.0 l_0_8_14)))
 (let ((?x17673 (* ?x17624 l_0_8_25)))
 (let ((?x9325 (* 2.0 l_0_8_13)))
 (let ((?x17670 (* ?x9325 l_0_8_24)))
 (let ((?x17247 (* 2.0 l_0_8_12)))
 (let ((?x17666 (* ?x17247 l_0_8_23)))
 (let ((?x10254 (+ (+ (+ (+ (* (* 2.0 l_0_8_11) l_0_8_22) ?x17666) ?x17670) ?x17673) ?x17683)))
 (= (- (- (- (- (- ?x10254 ?x17689) ?x17691) ?x17693) ?x17695) ?x17697) 0.0)))))))))))))))))))))
(assert
 (let ((?x17736 (* l_0_8_49 l_0_8_49)))
 (let ((?x17734 (* l_0_8_48 l_0_8_48)))
 (let ((?x17732 (* l_0_8_47 l_0_8_47)))
 (let ((?x17730 (* l_0_8_46 l_0_8_46)))
 (let ((?x17728 (* l_0_8_45 l_0_8_45)))
 (let ((?x17726 (* l_0_8_44 l_0_8_44)))
 (let ((?x17724 (* l_0_8_21 l_0_8_21)))
 (let ((?x17722 (* l_0_8_20 l_0_8_20)))
 (let ((?x17720 (* l_0_8_19 l_0_8_19)))
 (let ((?x9619 (* l_0_8_18 l_0_8_18)))
 (let ((?x10332 (+ (+ (+ (* l_0_8_16 l_0_8_16) (* l_0_8_17 l_0_8_17)) ?x9619) ?x17720)))
 (let ((?x10374 (- (- (- (- (- (+ (+ ?x10332 ?x17722) ?x17724) ?x17726) ?x17728) ?x17730) ?x17732) ?x17734)))
 (= (- ?x10374 ?x17736) 0.0))))))))))))))
(assert
 (let ((?x17785 (* (* 2.0 l_0_8_49) l_0_8_55)))
 (let ((?x17782 (* (* 2.0 l_0_8_48) l_0_8_54)))
 (let ((?x17779 (* (* 2.0 l_0_8_47) l_0_8_53)))
 (let ((?x17776 (* (* 2.0 l_0_8_46) l_0_8_52)))
 (let ((?x17773 (* (* 2.0 l_0_8_45) l_0_8_51)))
 (let ((?x17770 (* (* 2.0 l_0_8_44) l_0_8_50)))
 (let ((?x17767 (* (* 2.0 l_0_8_21) l_0_8_27)))
 (let ((?x17764 (* (* 2.0 l_0_8_20) l_0_8_26)))
 (let ((?x17761 (* (* 2.0 l_0_8_19) l_0_8_25)))
 (let ((?x17393 (* 2.0 l_0_8_18)))
 (let ((?x17758 (* ?x17393 l_0_8_24)))
 (let ((?x17267 (* 2.0 l_0_8_17)))
 (let ((?x17756 (* ?x17267 l_0_8_23)))
 (let ((?x10496 (+ (+ (+ (+ (* (* 2.0 l_0_8_16) l_0_8_22) ?x17756) ?x17758) ?x17761) ?x17764)))
 (let ((?x10475 (- (- (- (- (- (- (+ ?x10496 ?x17767) ?x17770) ?x17773) ?x17776) ?x17779) ?x17782) ?x17785)))
 (= ?x10475 0.0)))))))))))))))))
(assert
 (let ((?x17836 (* l_0_8_56 l_0_8_56)))
 (let ((?x17834 (* l_0_8_55 l_0_8_55)))
 (let ((?x17832 (* l_0_8_54 l_0_8_54)))
 (let ((?x17830 (* l_0_8_53 l_0_8_53)))
 (let ((?x17828 (* l_0_8_52 l_0_8_52)))
 (let ((?x17826 (* l_0_8_51 l_0_8_51)))
 (let ((?x17824 (* l_0_8_50 l_0_8_50)))
 (let ((?x17822 (* l_0_8_28 l_0_8_28)))
 (let ((?x17820 (* l_0_8_27 l_0_8_27)))
 (let ((?x17818 (* l_0_8_26 l_0_8_26)))
 (let ((?x17807 (* l_0_8_25 l_0_8_25)))
 (let ((?x17804 (* l_0_8_24 l_0_8_24)))
 (let ((?x10657 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x17804) ?x17807)))
 (let ((?x10483 (- (- (- (- (+ (+ (+ ?x10657 ?x17818) ?x17820) ?x17822) ?x17824) ?x17826) ?x17828) ?x17830)))
 (= (- (- (- ?x10483 ?x17832) ?x17834) ?x17836) 0.0))))))))))))))))
(assert
 (let ((?x10744 (* l_0_8_85 l_0_8_85)))
 (let ((?x10741 (- (* (- l_0_8_113) l_0_8_113) (* (* 1.0 l_0_8_57) l_0_8_57))))
 (= (- ?x10741 ?x10744) 0.0))))
(assert
 (let ((?x10498 (- (* (* (- 2.0) l_0_8_113) l_0_8_114) (* (* 2.0 l_0_8_57) l_0_8_58))))
 (= (- ?x10498 (* (* 2.0 l_0_8_85) l_0_8_86)) 0.0)))
(assert
 (let ((?x10405 (- (* (* (- 2.0) l_0_8_113) l_0_8_116) (* (* 2.0 l_0_8_57) l_0_8_60))))
 (= (- ?x10405 (* (* 2.0 l_0_8_85) l_0_8_88)) 0.0)))
(assert
 (let ((?x17944 (- (* (* (- 2.0) l_0_8_113) l_0_8_119) (* (* 2.0 l_0_8_57) l_0_8_63))))
 (= (- ?x17944 (* (* 2.0 l_0_8_85) l_0_8_91)) 0.0)))
(assert
 (let ((?x17967 (- (* (* (- 2.0) l_0_8_113) l_0_8_123) (* (* 2.0 l_0_8_57) l_0_8_67))))
 (= (- ?x17967 (* (* 2.0 l_0_8_85) l_0_8_95)) 0.0)))
(assert
 (let ((?x17992 (- (* (* (- 2.0) l_0_8_100) l_0_8_85) (* (* 2.0 l_0_8_113) l_0_8_128))))
 (= (- ?x17992 (* (* 2.0 l_0_8_57) l_0_8_72)) 0.0)))
(assert
 (let ((?x18016 (- (* (* (- 2.0) l_0_8_106) l_0_8_85) (* (* 2.0 l_0_8_113) l_0_8_134))))
 (= (- ?x18016 (* (* 2.0 l_0_8_57) l_0_8_78)) 0.0)))
(assert
 (let ((?x18049 (* l_0_8_87 l_0_8_87)))
 (let ((?x18047 (* l_0_8_86 l_0_8_86)))
 (let ((?x18043 (- (- (* (- l_0_8_114) l_0_8_114) (* l_0_8_115 l_0_8_115)) (* (* 1.0 l_0_8_58) l_0_8_58))))
 (= (- (- (- ?x18043 (* (* 1.0 l_0_8_59) l_0_8_59)) ?x18047) ?x18049) 0.0)))))
(assert
 (let ((?x18077 (- (* (* (- 2.0) l_0_8_114) l_0_8_116) (* (* 2.0 l_0_8_115) l_0_8_117))))
 (let ((?x18081 (- (- ?x18077 (* (* 2.0 l_0_8_58) l_0_8_60)) (* (* 2.0 l_0_8_59) l_0_8_61))))
 (let ((?x18087 (- (- ?x18081 (* (* 2.0 l_0_8_86) l_0_8_88)) (* (* 2.0 l_0_8_87) l_0_8_89))))
 (= ?x18087 0.0)))))
(assert
 (let ((?x18126 (- (* (* (- 2.0) l_0_8_114) l_0_8_119) (* (* 2.0 l_0_8_115) l_0_8_120))))
 (let ((?x18130 (- (- ?x18126 (* (* 2.0 l_0_8_58) l_0_8_63)) (* (* 2.0 l_0_8_59) l_0_8_64))))
 (let ((?x18134 (- (- ?x18130 (* (* 2.0 l_0_8_86) l_0_8_91)) (* (* 2.0 l_0_8_87) l_0_8_92))))
 (= ?x18134 0.0)))))
(assert
 (let ((?x18173 (- (* (* (- 2.0) l_0_8_114) l_0_8_123) (* (* 2.0 l_0_8_115) l_0_8_124))))
 (let ((?x18177 (- (- ?x18173 (* (* 2.0 l_0_8_58) l_0_8_67)) (* (* 2.0 l_0_8_59) l_0_8_68))))
 (let ((?x18181 (- (- ?x18177 (* (* 2.0 l_0_8_86) l_0_8_95)) (* (* 2.0 l_0_8_87) l_0_8_96))))
 (= ?x18181 0.0)))))
(assert
 (let ((?x18220 (- (* (* (- 2.0) l_0_8_106) l_0_8_86) (* (* 2.0 l_0_8_107) l_0_8_87))))
 (let ((?x18224 (- (- ?x18220 (* (* 2.0 l_0_8_114) l_0_8_134)) (* (* 2.0 l_0_8_115) l_0_8_135))))
 (let ((?x18228 (- (- ?x18224 (* (* 2.0 l_0_8_58) l_0_8_78)) (* (* 2.0 l_0_8_59) l_0_8_79))))
 (= ?x18228 0.0)))))
(assert
 (let ((?x18284 (* l_0_8_90 l_0_8_90)))
 (let ((?x18282 (* l_0_8_89 l_0_8_89)))
 (let ((?x18280 (* l_0_8_88 l_0_8_88)))
 (let ((?x18269 (* l_0_8_118 l_0_8_118)))
 (let ((?x18270 (- (- (* (- l_0_8_116) l_0_8_116) (* l_0_8_117 l_0_8_117)) ?x18269)))
 (let ((?x18276 (- (- ?x18270 (* (* 1.0 l_0_8_60) l_0_8_60)) (* (* 1.0 l_0_8_61) l_0_8_61))))
 (let ((?x18285 (- (- (- (- ?x18276 (* (* 1.0 l_0_8_62) l_0_8_62)) ?x18280) ?x18282) ?x18284)))
 (= ?x18285 0.0)))))))))
(assert
 (let ((?x18322 (- (* (* (- 2.0) l_0_8_116) l_0_8_123) (* (* 2.0 l_0_8_117) l_0_8_124))))
 (let ((?x18326 (- (- ?x18322 (* (* 2.0 l_0_8_118) l_0_8_125)) (* (* 2.0 l_0_8_60) l_0_8_67))))
 (let ((?x18330 (- (- ?x18326 (* (* 2.0 l_0_8_61) l_0_8_68)) (* (* 2.0 l_0_8_62) l_0_8_69))))
 (let ((?x18334 (- (- ?x18330 (* (* 2.0 l_0_8_88) l_0_8_95)) (* (* 2.0 l_0_8_89) l_0_8_96))))
 (= (- ?x18334 (* (* 2.0 l_0_8_90) l_0_8_97)) 0.0))))))
(assert
 (let ((?x18393 (- (* (* (- 2.0) l_0_8_100) l_0_8_88) (* (* 2.0 l_0_8_101) l_0_8_89))))
 (let ((?x18398 (- (- ?x18393 (* (* 2.0 l_0_8_102) l_0_8_90)) (* (* 2.0 l_0_8_116) l_0_8_128))))
 (let ((?x18402 (- (- ?x18398 (* (* 2.0 l_0_8_117) l_0_8_129)) (* (* 2.0 l_0_8_118) l_0_8_130))))
 (let ((?x18406 (- (- ?x18402 (* (* 2.0 l_0_8_60) l_0_8_72)) (* (* 2.0 l_0_8_61) l_0_8_73))))
 (= (- ?x18406 (* (* 2.0 l_0_8_62) l_0_8_74)) 0.0))))))
(assert
 (let ((?x18434 (- (* (* (- 2.0) l_0_8_106) l_0_8_88) (* (* 2.0 l_0_8_107) l_0_8_89))))
 (let ((?x18438 (- (- ?x18434 (* (* 2.0 l_0_8_108) l_0_8_90)) (* (* 2.0 l_0_8_116) l_0_8_134))))
 (let ((?x18442 (- (- ?x18438 (* (* 2.0 l_0_8_117) l_0_8_135)) (* (* 2.0 l_0_8_118) l_0_8_136))))
 (let ((?x18446 (- (- ?x18442 (* (* 2.0 l_0_8_60) l_0_8_78)) (* (* 2.0 l_0_8_61) l_0_8_79))))
 (= (- ?x18446 (* (* 2.0 l_0_8_62) l_0_8_80)) 0.0))))))
(assert
 (let ((?x18494 (* l_0_8_94 l_0_8_94)))
 (let ((?x18492 (* l_0_8_93 l_0_8_93)))
 (let ((?x18490 (* l_0_8_92 l_0_8_92)))
 (let ((?x18488 (* l_0_8_91 l_0_8_91)))
 (let ((?x18474 (* l_0_8_122 l_0_8_122)))
 (let ((?x18472 (* l_0_8_121 l_0_8_121)))
 (let ((?x18473 (- (- (* (- l_0_8_119) l_0_8_119) (* l_0_8_120 l_0_8_120)) ?x18472)))
 (let ((?x18481 (- (- (- ?x18473 ?x18474) (* (* 1.0 l_0_8_63) l_0_8_63)) (* (* 1.0 l_0_8_64) l_0_8_64))))
 (let ((?x18487 (- (- ?x18481 (* (* 1.0 l_0_8_65) l_0_8_65)) (* (* 1.0 l_0_8_66) l_0_8_66))))
 (= (- (- (- (- ?x18487 ?x18488) ?x18490) ?x18492) ?x18494) 0.0)))))))))))
(assert
 (let ((?x18522 (- (* (* (- 2.0) l_0_8_119) l_0_8_123) (* (* 2.0 l_0_8_120) l_0_8_124))))
 (let ((?x18528 (- (- ?x18522 (* (* 2.0 l_0_8_121) l_0_8_125)) (* (* 2.0 l_0_8_122) l_0_8_126))))
 (let ((?x18534 (- (- ?x18528 (* (* 2.0 l_0_8_63) l_0_8_67)) (* (* 2.0 l_0_8_64) l_0_8_68))))
 (let ((?x18540 (- (- ?x18534 (* (* 2.0 l_0_8_65) l_0_8_69)) (* (* 2.0 l_0_8_66) l_0_8_70))))
 (let ((?x18546 (- (- ?x18540 (* (* 2.0 l_0_8_91) l_0_8_95)) (* (* 2.0 l_0_8_92) l_0_8_96))))
 (let ((?x18552 (- (- ?x18546 (* (* 2.0 l_0_8_93) l_0_8_97)) (* (* 2.0 l_0_8_94) l_0_8_98))))
 (= ?x18552 0.0))))))))
(assert
 (let ((?x18573 (- (* (* (- 2.0) l_0_8_100) l_0_8_91) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x18578 (- (- ?x18573 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_103) l_0_8_94))))
 (let ((?x18583 (- (- ?x18578 (* (* 2.0 l_0_8_119) l_0_8_128)) (* (* 2.0 l_0_8_120) l_0_8_129))))
 (let ((?x18587 (- (- ?x18583 (* (* 2.0 l_0_8_121) l_0_8_130)) (* (* 2.0 l_0_8_122) l_0_8_131))))
 (let ((?x18591 (- (- ?x18587 (* (* 2.0 l_0_8_63) l_0_8_72)) (* (* 2.0 l_0_8_64) l_0_8_73))))
 (let ((?x18595 (- (- ?x18591 (* (* 2.0 l_0_8_65) l_0_8_74)) (* (* 2.0 l_0_8_66) l_0_8_75))))
 (= ?x18595 0.0))))))))
(assert
 (let ((?x18617 (- (* (* (- 2.0) l_0_8_106) l_0_8_91) (* (* 2.0 l_0_8_107) l_0_8_92))))
 (let ((?x18621 (- (- ?x18617 (* (* 2.0 l_0_8_108) l_0_8_93)) (* (* 2.0 l_0_8_109) l_0_8_94))))
 (let ((?x18625 (- (- ?x18621 (* (* 2.0 l_0_8_119) l_0_8_134)) (* (* 2.0 l_0_8_120) l_0_8_135))))
 (let ((?x18629 (- (- ?x18625 (* (* 2.0 l_0_8_121) l_0_8_136)) (* (* 2.0 l_0_8_122) l_0_8_137))))
 (let ((?x18633 (- (- ?x18629 (* (* 2.0 l_0_8_63) l_0_8_78)) (* (* 2.0 l_0_8_64) l_0_8_79))))
 (let ((?x18637 (- (- ?x18633 (* (* 2.0 l_0_8_65) l_0_8_80)) (* (* 2.0 l_0_8_66) l_0_8_81))))
 (= ?x18637 0.0))))))))
(assert
 (let ((?x18731 (* l_0_8_99 l_0_8_99)))
 (let ((?x18729 (* l_0_8_98 l_0_8_98)))
 (let ((?x18727 (* l_0_8_97 l_0_8_97)))
 (let ((?x18725 (* l_0_8_96 l_0_8_96)))
 (let ((?x18723 (* l_0_8_95 l_0_8_95)))
 (let ((?x18706 (* l_0_8_127 l_0_8_127)))
 (let ((?x18704 (* l_0_8_126 l_0_8_126)))
 (let ((?x18702 (* l_0_8_125 l_0_8_125)))
 (let ((?x18703 (- (- (* (- l_0_8_123) l_0_8_123) (* l_0_8_124 l_0_8_124)) ?x18702)))
 (let ((?x18713 (- (- (- (- ?x18703 ?x18704) ?x18706) (* (* 1.0 l_0_8_67) l_0_8_67)) (* (* 1.0 l_0_8_68) l_0_8_68))))
 (let ((?x18719 (- (- ?x18713 (* (* 1.0 l_0_8_69) l_0_8_69)) (* (* 1.0 l_0_8_70) l_0_8_70))))
 (let ((?x18728 (- (- (- (- ?x18719 (* (* 1.0 l_0_8_71) l_0_8_71)) ?x18723) ?x18725) ?x18727)))
 (= (- (- ?x18728 ?x18729) ?x18731) 0.0))))))))))))))
(assert
 (let ((?x18784 (- (* (* (- 2.0) l_0_8_100) l_0_8_95) (* (* 2.0 l_0_8_101) l_0_8_96))))
 (let ((?x18788 (- (- ?x18784 (* (* 2.0 l_0_8_102) l_0_8_97)) (* (* 2.0 l_0_8_103) l_0_8_98))))
 (let ((?x18793 (- (- ?x18788 (* (* 2.0 l_0_8_104) l_0_8_99)) (* (* 2.0 l_0_8_123) l_0_8_128))))
 (let ((?x18797 (- (- ?x18793 (* (* 2.0 l_0_8_124) l_0_8_129)) (* (* 2.0 l_0_8_125) l_0_8_130))))
 (let ((?x18801 (- (- ?x18797 (* (* 2.0 l_0_8_126) l_0_8_131)) (* (* 2.0 l_0_8_127) l_0_8_132))))
 (let ((?x18805 (- (- ?x18801 (* (* 2.0 l_0_8_67) l_0_8_72)) (* (* 2.0 l_0_8_68) l_0_8_73))))
 (let ((?x18809 (- (- ?x18805 (* (* 2.0 l_0_8_69) l_0_8_74)) (* (* 2.0 l_0_8_70) l_0_8_75))))
 (= (- ?x18809 (* (* 2.0 l_0_8_71) l_0_8_76)) 0.0)))))))))
(assert
 (let ((?x18924 (* l_0_8_133 l_0_8_133)))
 (let ((?x18922 (* l_0_8_132 l_0_8_132)))
 (let ((?x18920 (* l_0_8_131 l_0_8_131)))
 (let ((?x18918 (* l_0_8_130 l_0_8_130)))
 (let ((?x18916 (* l_0_8_129 l_0_8_129)))
 (let ((?x18914 (* l_0_8_128 l_0_8_128)))
 (let ((?x18912 (* l_0_8_105 l_0_8_105)))
 (let ((?x18910 (* l_0_8_104 l_0_8_104)))
 (let ((?x18908 (* l_0_8_103 l_0_8_103)))
 (let ((?x18906 (* l_0_8_102 l_0_8_102)))
 (let ((?x18907 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_101 l_0_8_101)) ?x18906)))
 (let ((?x18921 (- (- (- (- (- (- (- ?x18907 ?x18908) ?x18910) ?x18912) ?x18914) ?x18916) ?x18918) ?x18920)))
 (let ((?x18931 (- (- (- (- ?x18921 ?x18922) ?x18924) (* (* 1.0 l_0_8_72) l_0_8_72)) (* (* 1.0 l_0_8_73) l_0_8_73))))
 (let ((?x18937 (- (- ?x18931 (* (* 1.0 l_0_8_74) l_0_8_74)) (* (* 1.0 l_0_8_75) l_0_8_75))))
 (let ((?x18943 (- (- ?x18937 (* (* 1.0 l_0_8_76) l_0_8_76)) (* (* 1.0 l_0_8_77) l_0_8_77))))
 (= ?x18943 0.0)))))))))))))))))
(assert
 (let ((?x18988 (- (* (* (- 2.0) l_0_8_100) l_0_8_106) (* (* 2.0 l_0_8_101) l_0_8_107))))
 (let ((?x18992 (- (- ?x18988 (* (* 2.0 l_0_8_102) l_0_8_108)) (* (* 2.0 l_0_8_103) l_0_8_109))))
 (let ((?x18997 (- (- ?x18992 (* (* 2.0 l_0_8_104) l_0_8_110)) (* (* 2.0 l_0_8_105) l_0_8_111))))
 (let ((?x19003 (- (- ?x18997 (* (* 2.0 l_0_8_128) l_0_8_134)) (* (* 2.0 l_0_8_129) l_0_8_135))))
 (let ((?x19009 (- (- ?x19003 (* (* 2.0 l_0_8_130) l_0_8_136)) (* (* 2.0 l_0_8_131) l_0_8_137))))
 (let ((?x19015 (- (- ?x19009 (* (* 2.0 l_0_8_132) l_0_8_138)) (* (* 2.0 l_0_8_133) l_0_8_139))))
 (let ((?x19021 (- (- ?x19015 (* (* 2.0 l_0_8_72) l_0_8_78)) (* (* 2.0 l_0_8_73) l_0_8_79))))
 (let ((?x19027 (- (- ?x19021 (* (* 2.0 l_0_8_74) l_0_8_80)) (* (* 2.0 l_0_8_75) l_0_8_81))))
 (let ((?x19033 (- (- ?x19027 (* (* 2.0 l_0_8_76) l_0_8_82)) (* (* 2.0 l_0_8_77) l_0_8_83))))
 (= ?x19033 0.0)))))))))))
(assert
 (let ((?x19139 (* l_0_8_140 l_0_8_140)))
 (let ((?x19137 (* l_0_8_139 l_0_8_139)))
 (let ((?x19135 (* l_0_8_138 l_0_8_138)))
 (let ((?x19133 (* l_0_8_137 l_0_8_137)))
 (let ((?x19131 (* l_0_8_136 l_0_8_136)))
 (let ((?x19129 (* l_0_8_135 l_0_8_135)))
 (let ((?x19127 (* l_0_8_134 l_0_8_134)))
 (let ((?x19125 (* l_0_8_112 l_0_8_112)))
 (let ((?x19123 (* l_0_8_111 l_0_8_111)))
 (let ((?x19121 (* l_0_8_110 l_0_8_110)))
 (let ((?x19119 (* l_0_8_109 l_0_8_109)))
 (let ((?x19117 (* l_0_8_108 l_0_8_108)))
 (let ((?x19118 (- (- (* (- l_0_8_106) l_0_8_106) (* l_0_8_107 l_0_8_107)) ?x19117)))
 (let ((?x19132 (- (- (- (- (- (- (- ?x19118 ?x19119) ?x19121) ?x19123) ?x19125) ?x19127) ?x19129) ?x19131)))
 (let ((?x19143 (- (- (- (- (- ?x19132 ?x19133) ?x19135) ?x19137) ?x19139) (* (* 1.0 l_0_8_78) l_0_8_78))))
 (let ((?x19149 (- (- ?x19143 (* (* 1.0 l_0_8_79) l_0_8_79)) (* (* 1.0 l_0_8_80) l_0_8_80))))
 (let ((?x19155 (- (- ?x19149 (* (* 1.0 l_0_8_81) l_0_8_81)) (* (* 1.0 l_0_8_82) l_0_8_82))))
 (let ((?x19161 (- (- ?x19155 (* (* 1.0 l_0_8_83) l_0_8_83)) (* (* 1.0 l_0_8_84) l_0_8_84))))
 (= ?x19161 0.0))))))))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_28 0.0))
(assert
 (>= l_0_8_29 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_34 0.0))
(assert
 (>= l_0_8_38 0.0))
(assert
 (>= l_0_8_43 0.0))
(assert
 (>= l_0_8_49 0.0))
(assert
 (>= l_0_8_56 0.0))
(assert
 (>= l_0_8_57 0.0))
(assert
 (>= l_0_8_59 0.0))
(assert
 (>= l_0_8_62 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_71 0.0))
(assert
 (>= l_0_8_77 0.0))
(assert
 (>= l_0_8_84 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_87 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_94 0.0))
(assert
 (>= l_0_8_99 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_112 0.0))
(assert
 (>= l_0_8_113 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_118 0.0))
(assert
 (>= l_0_8_122 0.0))
(assert
 (>= l_0_8_127 0.0))
(assert
 (>= l_0_8_133 0.0))
(assert
 (>= l_0_8_140 0.0))
(assert
 (let ((?x19236 (* l_0_9_29 l_0_9_29)))
 (let ((?x19235 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_100) l_0_9_86)) (* (* 2.0 l_0_9_101) l_0_9_87))))
 (let ((?x19243 (+ (+ (+ ?x19235 ?x19236) (* (* 2.0 l_0_9_58) l_0_9_72)) (* (* 2.0 l_0_9_59) l_0_9_73))))
 (= (+ ?x19243 1.0) 0.0)))))
(assert
 (let ((?x19263 (+ (- (* l_0_9_1 l_0_9_1) (* l_0_9_29 l_0_9_29)) (* (* 2.0 l_0_9_60) l_0_9_63))))
 (let ((?x19269 (+ (+ ?x19263 (* (* 2.0 l_0_9_61) l_0_9_64)) (* (* 2.0 l_0_9_62) l_0_9_65))))
 (let ((?x19275 (- (- ?x19269 (* (* 2.0 l_0_9_88) l_0_9_91)) (* (* 2.0 l_0_9_89) l_0_9_92))))
 (= (- (- ?x19275 (* (* 2.0 l_0_9_90) l_0_9_93)) 1.0) 0.0)))))
(assert
 (let ((?x19236 (* l_0_9_29 l_0_9_29)))
 (let ((?x12048 (- (- (* l_0_9_1 l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_95)) (* (* 2.0 l_0_9_107) l_0_9_96))))
 (let ((?x19299 (- (- ?x12048 (* (* 2.0 l_0_9_108) l_0_9_97)) (* (* 2.0 l_0_9_109) l_0_9_98))))
 (let ((?x19306 (+ (- (- ?x19299 (* (* 2.0 l_0_9_110) l_0_9_99)) ?x19236) (* (* 2.0 l_0_9_67) l_0_9_78))))
 (let ((?x19312 (+ (+ ?x19306 (* (* 2.0 l_0_9_68) l_0_9_79)) (* (* 2.0 l_0_9_69) l_0_9_80))))
 (let ((?x19318 (+ (+ ?x19312 (* (* 2.0 l_0_9_70) l_0_9_81)) (* (* 2.0 l_0_9_71) l_0_9_82))))
 (= (- ?x19318 1.0) 0.0))))))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19350 (* ?x19349 l_0_9_30)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_2) ?x19350) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19356 (* ?x19349 l_0_9_32)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_4) ?x19356) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19364 (* ?x19349 l_0_9_35)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_7) ?x19364) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19374 (* ?x19349 l_0_9_39)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_11) ?x19374) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19384 (* ?x19349 l_0_9_44)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_16) ?x19384) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19394 (* ?x19349 l_0_9_50)))
 (= (+ (* (* (- 2.0) l_0_9_1) l_0_9_22) ?x19394) 0.0))))
(assert
 (let ((?x19413 (* l_0_9_31 l_0_9_31)))
 (let ((?x19411 (* l_0_9_30 l_0_9_30)))
 (let ((?x19414 (+ (+ (- (* (- l_0_9_2) l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19411) ?x19413)))
 (= ?x19414 0.0)))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19435 (* ?x19434 l_0_9_33)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19432 (* ?x19431 l_0_9_32)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19429 (* ?x19428 l_0_9_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_4) ?x19429) ?x19432) ?x19435) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19454 (* ?x19434 l_0_9_36)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19452 (* ?x19431 l_0_9_35)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19450 (* ?x19428 l_0_9_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_7) ?x19450) ?x19452) ?x19454) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19468 (* ?x19434 l_0_9_40)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19466 (* ?x19431 l_0_9_39)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19464 (* ?x12187 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x19464) ?x19466) ?x19468) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19493 (* ?x19434 l_0_9_45)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19491 (* ?x19431 l_0_9_44)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19489 (* ?x19483 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_16) l_0_9_2) ?x19489) ?x19491) ?x19493) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19513 (* ?x19434 l_0_9_51)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19511 (* ?x19431 l_0_9_50)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19509 (* ?x19508 l_0_9_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_22) ?x19509) ?x19511) ?x19513) 0.0))))))))
(assert
 (let ((?x19540 (* l_0_9_6 l_0_9_6)))
 (let ((?x19538 (* l_0_9_5 l_0_9_5)))
 (let ((?x19536 (* l_0_9_4 l_0_9_4)))
 (let ((?x19534 (* l_0_9_34 l_0_9_34)))
 (let ((?x19537 (- (+ (+ (* l_0_9_32 l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19534) ?x19536)))
 (= (- (- ?x19537 ?x19538) ?x19540) 0.0)))))))
(assert
 (let ((?x19565 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19562 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19559 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19556 (* ?x19555 l_0_9_37)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19553 (* ?x19552 l_0_9_36)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19550 (* ?x12234 l_0_9_35)))
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19493 (* ?x19434 l_0_9_45)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19491 (* ?x19431 l_0_9_44)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19489 (* ?x19483 l_0_9_3)))
 (let ((?x12229 (* 2.0 l_0_9_16)))
 (let ((?x12235 (* ?x12229 l_0_9_2)))
 (let ((?x19560 (- (+ (+ (+ (- (- (+ ?x12235 ?x19489) ?x19491) ?x19493) ?x19550) ?x19553) ?x19556) ?x19559)))
 (= (- (- ?x19560 ?x19562) ?x19565) 0.0))))))))))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19602 (* ?x19555 l_0_9_41)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19600 (* ?x19552 l_0_9_40)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19598 (* ?x12234 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19596 (* ?x19595 l_0_9_6)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19593 (* ?x12187 l_0_9_5)))
 (let ((?x19601 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x19593) ?x19596) ?x19598) ?x19600)))
 (= (+ ?x19601 ?x19602) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19623 (* ?x19555 l_0_9_46)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19621 (* ?x19552 l_0_9_45)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19619 (* ?x12234 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19617 (* ?x19610 l_0_9_6)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x12388 (* ?x19483 l_0_9_5)))
 (let ((?x19622 (+ (+ (- (- (* (* (- 2.0) l_0_9_16) l_0_9_4) ?x12388) ?x19617) ?x19619) ?x19621)))
 (= (+ ?x19622 ?x19623) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19647 (* ?x19555 l_0_9_52)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19645 (* ?x19552 l_0_9_51)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19643 (* ?x12234 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19641 (* ?x19640 l_0_9_6)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19632 (* ?x19508 l_0_9_5)))
 (let ((?x19646 (+ (+ (- (- (* (* (- 2.0) l_0_9_22) l_0_9_4) ?x19632) ?x19641) ?x19643) ?x19645)))
 (= (+ ?x19646 ?x19647) 0.0)))))))))))))
(assert
 (let ((?x19683 (* l_0_9_9 l_0_9_9)))
 (let ((?x19681 (* l_0_9_8 l_0_9_8)))
 (let ((?x19679 (* l_0_9_7 l_0_9_7)))
 (let ((?x19677 (* l_0_9_38 l_0_9_38)))
 (let ((?x19675 (* l_0_9_37 l_0_9_37)))
 (let ((?x19673 (* l_0_9_36 l_0_9_36)))
 (let ((?x19676 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19673) ?x19675)))
 (= (- (- (- (+ ?x19676 ?x19677) ?x19679) ?x19681) ?x19683) 0.0)))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19718 (* ?x19717 l_0_9_42)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19715 (* ?x19714 l_0_9_41)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19712 (* ?x19711 l_0_9_40)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19709 (* ?x19708 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19706 (* ?x19595 l_0_9_9)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19704 (* ?x12187 l_0_9_8)))
 (let ((?x19701 (* 2.0 l_0_9_11)))
 (let ((?x19702 (* ?x19701 l_0_9_7)))
 (let ((?x19710 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x19702) ?x19704) ?x19706) ?x19709)))
 (= (+ (+ (+ ?x19710 ?x19712) ?x19715) ?x19718) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19748 (* ?x19717 l_0_9_47)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19746 (* ?x19714 l_0_9_46)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19744 (* ?x19711 l_0_9_45)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19742 (* ?x19708 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19740 (* ?x19610 l_0_9_9)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19738 (* ?x19483 l_0_9_8)))
 (let ((?x12229 (* 2.0 l_0_9_16)))
 (let ((?x19736 (* ?x12229 l_0_9_7)))
 (let ((?x19743 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_19) ?x19736) ?x19738) ?x19740) ?x19742)))
 (= (+ (+ (+ ?x19743 ?x19744) ?x19746) ?x19748) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19771 (* ?x19717 l_0_9_53)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19769 (* ?x19714 l_0_9_52)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19767 (* ?x19711 l_0_9_51)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19765 (* ?x19708 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19763 (* ?x19640 l_0_9_9)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x12540 (* ?x19508 l_0_9_8)))
 (let ((?x12538 (* 2.0 l_0_9_22)))
 (let ((?x12624 (* ?x12538 l_0_9_7)))
 (let ((?x19766 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_25) ?x12624) ?x12540) ?x19763) ?x19765)))
 (= (+ (+ (+ ?x19766 ?x19767) ?x19769) ?x19771) 0.0)))))))))))))))))
(assert
 (let ((?x19812 (* l_0_9_43 l_0_9_43)))
 (let ((?x19810 (* l_0_9_42 l_0_9_42)))
 (let ((?x19808 (* l_0_9_41 l_0_9_41)))
 (let ((?x19806 (* l_0_9_40 l_0_9_40)))
 (let ((?x19804 (* l_0_9_39 l_0_9_39)))
 (let ((?x19802 (* l_0_9_15 l_0_9_15)))
 (let ((?x19800 (* l_0_9_14 l_0_9_14)))
 (let ((?x19791 (* l_0_9_13 l_0_9_13)))
 (let ((?x19801 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19791) ?x19800)))
 (= (+ (+ (+ (+ (+ (- ?x19801 ?x19802) ?x19804) ?x19806) ?x19808) ?x19810) ?x19812) 0.0)))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19857 (* ?x19856 l_0_9_48)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19854 (* ?x19853 l_0_9_47)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19851 (* ?x19850 l_0_9_46)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19848 (* ?x19847 l_0_9_45)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19845 (* ?x19844 l_0_9_44)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19842 (* ?x19841 l_0_9_20)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19839 (* ?x19838 l_0_9_19)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19836 (* ?x19595 l_0_9_18)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19834 (* ?x12187 l_0_9_17)))
 (let ((?x19843 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_16) ?x19834) ?x19836) ?x19839) ?x19842)))
 (= (+ (+ (+ (+ (+ ?x19843 ?x19845) ?x19848) ?x19851) ?x19854) ?x19857) 0.0)))))))))))))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19905 (* ?x19856 l_0_9_54)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19903 (* ?x19853 l_0_9_53)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19901 (* ?x19850 l_0_9_52)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19899 (* ?x19847 l_0_9_51)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19897 (* ?x19844 l_0_9_50)))
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19493 (* ?x19434 l_0_9_45)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19491 (* ?x19431 l_0_9_44)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19489 (* ?x19483 l_0_9_3)))
 (let ((?x12229 (* 2.0 l_0_9_16)))
 (let ((?x12235 (* ?x12229 l_0_9_2)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19891 (* ?x19841 l_0_9_26)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19881 (* ?x19838 l_0_9_25)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19878 (* ?x19595 l_0_9_24)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x12727 (* ?x12187 l_0_9_23)))
 (let ((?x19892 (- (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_22) ?x12727) ?x19878) ?x19881) ?x19891)))
 (let ((?x19902 (+ (+ (+ (- (- (+ (+ ?x19892 ?x12235) ?x19489) ?x19491) ?x19493) ?x19897) ?x19899) ?x19901)))
 (= (+ (+ ?x19902 ?x19903) ?x19905) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x19954 (* l_0_9_49 l_0_9_49)))
 (let ((?x19952 (* l_0_9_48 l_0_9_48)))
 (let ((?x19950 (* l_0_9_47 l_0_9_47)))
 (let ((?x19948 (* l_0_9_46 l_0_9_46)))
 (let ((?x19946 (* l_0_9_45 l_0_9_45)))
 (let ((?x19944 (* l_0_9_44 l_0_9_44)))
 (let ((?x19942 (* l_0_9_21 l_0_9_21)))
 (let ((?x19940 (* l_0_9_20 l_0_9_20)))
 (let ((?x19938 (* l_0_9_19 l_0_9_19)))
 (let ((?x19928 (* l_0_9_18 l_0_9_18)))
 (let ((?x19939 (- (- (- (* (- l_0_9_16) l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x19928) ?x19938)))
 (let ((?x19953 (+ (+ (+ (+ (+ (- (- ?x19939 ?x19940) ?x19942) ?x19944) ?x19946) ?x19948) ?x19950) ?x19952)))
 (= (+ ?x19953 ?x19954) 0.0))))))))))))))
(assert
 (let ((?x20003 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x20000 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19997 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19994 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19991 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19988 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19985 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19982 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19979 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19976 (* ?x19610 l_0_9_24)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19974 (* ?x19483 l_0_9_23)))
 (let ((?x19983 (- (- (- (- (* (* (- 2.0) l_0_9_16) l_0_9_22) ?x19974) ?x19976) ?x19979) ?x19982)))
 (let ((?x20004 (+ (+ (+ (+ (+ (+ (- ?x19983 ?x19985) ?x19988) ?x19991) ?x19994) ?x19997) ?x20000) ?x20003)))
 (= ?x20004 0.0)))))))))))))))))
(assert
 (let ((?x20049 (* l_0_9_56 l_0_9_56)))
 (let ((?x20047 (* l_0_9_55 l_0_9_55)))
 (let ((?x20045 (* l_0_9_54 l_0_9_54)))
 (let ((?x20043 (* l_0_9_53 l_0_9_53)))
 (let ((?x20041 (* l_0_9_52 l_0_9_52)))
 (let ((?x20039 (* l_0_9_51 l_0_9_51)))
 (let ((?x20037 (* l_0_9_50 l_0_9_50)))
 (let ((?x20035 (* l_0_9_28 l_0_9_28)))
 (let ((?x20033 (* l_0_9_27 l_0_9_27)))
 (let ((?x20031 (* l_0_9_26 l_0_9_26)))
 (let ((?x12813 (* l_0_9_25 l_0_9_25)))
 (let ((?x12895 (* l_0_9_24 l_0_9_24)))
 (let ((?x20030 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x12895) ?x12813)))
 (let ((?x20044 (+ (+ (+ (+ (- (- (- ?x20030 ?x20031) ?x20033) ?x20035) ?x20037) ?x20039) ?x20041) ?x20043)))
 (= (+ (+ (+ ?x20044 ?x20045) ?x20047) ?x20049) 0.0))))))))))))))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19350 (* ?x19349 l_0_9_30)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_2) ?x19350) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19356 (* ?x19349 l_0_9_32)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_4) ?x19356) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19364 (* ?x19349 l_0_9_35)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x19364) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19374 (* ?x19349 l_0_9_39)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_11) ?x19374) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19384 (* ?x19349 l_0_9_44)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_16) ?x19384) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19394 (* ?x19349 l_0_9_50)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_22) ?x19394) 0.0))))
(assert
 (let ((?x19413 (* l_0_9_31 l_0_9_31)))
 (let ((?x19411 (* l_0_9_30 l_0_9_30)))
 (= (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19411) ?x19413) 0.0))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19435 (* ?x19434 l_0_9_33)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19432 (* ?x19431 l_0_9_32)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19429 (* ?x19428 l_0_9_5)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_4) ?x19429) ?x19432) ?x19435) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19454 (* ?x19434 l_0_9_36)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19452 (* ?x19431 l_0_9_35)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19450 (* ?x19428 l_0_9_8)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x19450) ?x19452) ?x19454) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19468 (* ?x19434 l_0_9_40)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19466 (* ?x19431 l_0_9_39)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19464 (* ?x12187 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x19464) ?x19466) ?x19468) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19513 (* ?x19434 l_0_9_51)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19511 (* ?x19431 l_0_9_50)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19509 (* ?x19508 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_22) ?x19509) ?x19511) ?x19513) 0.0))))))))
(assert
 (let ((?x19540 (* l_0_9_6 l_0_9_6)))
 (let ((?x19538 (* l_0_9_5 l_0_9_5)))
 (let ((?x19536 (* l_0_9_4 l_0_9_4)))
 (let ((?x19534 (* l_0_9_34 l_0_9_34)))
 (let ((?x20088 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19534) ?x19536)))
 (= (+ (+ ?x20088 ?x19538) ?x19540) 0.0)))))))
(assert
 (let ((?x19565 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19562 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19559 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19556 (* ?x19555 l_0_9_37)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19553 (* ?x19552 l_0_9_36)))
 (let ((?x3725 (+ (+ (- (- (* (* (- 2.0) l_0_9_32) l_0_9_35) ?x19553) ?x19556) ?x19559) ?x19562)))
 (= (+ ?x3725 ?x19565) 0.0))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19602 (* ?x19555 l_0_9_41)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19600 (* ?x19552 l_0_9_40)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19598 (* ?x12234 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19596 (* ?x19595 l_0_9_6)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19593 (* ?x12187 l_0_9_5)))
 (let ((?x3776 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x19593) ?x19596) ?x19598) ?x19600)))
 (= (- ?x3776 ?x19602) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19623 (* ?x19555 l_0_9_46)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19621 (* ?x19552 l_0_9_45)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19619 (* ?x12234 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19617 (* ?x19610 l_0_9_6)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x12388 (* ?x19483 l_0_9_5)))
 (let ((?x13391 (- (- (+ (+ (* (* 2.0 l_0_9_16) l_0_9_4) ?x12388) ?x19617) ?x19619) ?x19621)))
 (= (- ?x13391 ?x19623) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19647 (* ?x19555 l_0_9_52)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19645 (* ?x19552 l_0_9_51)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19643 (* ?x12234 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19641 (* ?x19640 l_0_9_6)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19632 (* ?x19508 l_0_9_5)))
 (let ((?x13432 (- (- (+ (+ (* (* 2.0 l_0_9_22) l_0_9_4) ?x19632) ?x19641) ?x19643) ?x19645)))
 (= (- ?x13432 ?x19647) 0.0)))))))))))))
(assert
 (let ((?x19683 (* l_0_9_9 l_0_9_9)))
 (let ((?x19681 (* l_0_9_8 l_0_9_8)))
 (let ((?x19679 (* l_0_9_7 l_0_9_7)))
 (let ((?x19677 (* l_0_9_38 l_0_9_38)))
 (let ((?x19675 (* l_0_9_37 l_0_9_37)))
 (let ((?x19673 (* l_0_9_36 l_0_9_36)))
 (let ((?x13534 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19673) ?x19675)))
 (= (+ (+ (+ (- ?x13534 ?x19677) ?x19679) ?x19681) ?x19683) 0.0)))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19718 (* ?x19717 l_0_9_42)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19715 (* ?x19714 l_0_9_41)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19712 (* ?x19711 l_0_9_40)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19709 (* ?x19708 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19706 (* ?x19595 l_0_9_9)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19704 (* ?x12187 l_0_9_8)))
 (let ((?x19701 (* 2.0 l_0_9_11)))
 (let ((?x19702 (* ?x19701 l_0_9_7)))
 (let ((?x13576 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x19702) ?x19704) ?x19706) ?x19709)))
 (= (- (- (- ?x13576 ?x19712) ?x19715) ?x19718) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19748 (* ?x19717 l_0_9_47)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19746 (* ?x19714 l_0_9_46)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19744 (* ?x19711 l_0_9_45)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19742 (* ?x19708 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19740 (* ?x19610 l_0_9_9)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19738 (* ?x19483 l_0_9_8)))
 (let ((?x12229 (* 2.0 l_0_9_16)))
 (let ((?x19736 (* ?x12229 l_0_9_7)))
 (let ((?x20100 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_19) ?x19736) ?x19738) ?x19740) ?x19742)))
 (= (- (- (- ?x20100 ?x19744) ?x19746) ?x19748) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19771 (* ?x19717 l_0_9_53)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19769 (* ?x19714 l_0_9_52)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19767 (* ?x19711 l_0_9_51)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19765 (* ?x19708 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19763 (* ?x19640 l_0_9_9)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x12540 (* ?x19508 l_0_9_8)))
 (let ((?x12538 (* 2.0 l_0_9_22)))
 (let ((?x12624 (* ?x12538 l_0_9_7)))
 (let ((?x20125 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_25) ?x12624) ?x12540) ?x19763) ?x19765)))
 (= (- (- (- ?x20125 ?x19767) ?x19769) ?x19771) 0.0)))))))))))))))))
(assert
 (let ((?x19812 (* l_0_9_43 l_0_9_43)))
 (let ((?x19810 (* l_0_9_42 l_0_9_42)))
 (let ((?x19808 (* l_0_9_41 l_0_9_41)))
 (let ((?x19806 (* l_0_9_40 l_0_9_40)))
 (let ((?x19804 (* l_0_9_39 l_0_9_39)))
 (let ((?x19802 (* l_0_9_15 l_0_9_15)))
 (let ((?x19800 (* l_0_9_14 l_0_9_14)))
 (let ((?x19791 (* l_0_9_13 l_0_9_13)))
 (let ((?x20144 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19791) ?x19800)))
 (= (- (- (- (- (- (+ ?x20144 ?x19802) ?x19804) ?x19806) ?x19808) ?x19810) ?x19812) 0.0)))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19857 (* ?x19856 l_0_9_48)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19854 (* ?x19853 l_0_9_47)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19851 (* ?x19850 l_0_9_46)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19848 (* ?x19847 l_0_9_45)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19845 (* ?x19844 l_0_9_44)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19842 (* ?x19841 l_0_9_20)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19839 (* ?x19838 l_0_9_19)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19836 (* ?x19595 l_0_9_18)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19834 (* ?x12187 l_0_9_17)))
 (let ((?x20166 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x19834) ?x19836) ?x19839) ?x19842)))
 (= (- (- (- (- (- ?x20166 ?x19845) ?x19848) ?x19851) ?x19854) ?x19857) 0.0)))))))))))))))))))))
(assert
 (let ((?x19565 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x19562 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19905 (* ?x19856 l_0_9_54)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19903 (* ?x19853 l_0_9_53)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19901 (* ?x19850 l_0_9_52)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19899 (* ?x19847 l_0_9_51)))
 (let ((?x19559 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19897 (* ?x19844 l_0_9_50)))
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19556 (* ?x19555 l_0_9_37)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19553 (* ?x19552 l_0_9_36)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19550 (* ?x12234 l_0_9_35)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19891 (* ?x19841 l_0_9_26)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19881 (* ?x19838 l_0_9_25)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19878 (* ?x19595 l_0_9_24)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x12727 (* ?x12187 l_0_9_23)))
 (let ((?x20197 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x12727) ?x19878) ?x19881) ?x19891)))
 (let ((?x20204 (- (- (+ (- (- (- (- ?x20197 ?x19550) ?x19553) ?x19556) ?x19897) ?x19559) ?x19899) ?x19901)))
 (= (+ (+ (- (- ?x20204 ?x19903) ?x19905) ?x19562) ?x19565) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x19954 (* l_0_9_49 l_0_9_49)))
 (let ((?x19952 (* l_0_9_48 l_0_9_48)))
 (let ((?x19950 (* l_0_9_47 l_0_9_47)))
 (let ((?x19948 (* l_0_9_46 l_0_9_46)))
 (let ((?x19946 (* l_0_9_45 l_0_9_45)))
 (let ((?x19944 (* l_0_9_44 l_0_9_44)))
 (let ((?x19942 (* l_0_9_21 l_0_9_21)))
 (let ((?x19940 (* l_0_9_20 l_0_9_20)))
 (let ((?x19938 (* l_0_9_19 l_0_9_19)))
 (let ((?x19928 (* l_0_9_18 l_0_9_18)))
 (let ((?x20237 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x19928) ?x19938)))
 (let ((?x20244 (- (- (- (- (- (+ (+ ?x20237 ?x19940) ?x19942) ?x19944) ?x19946) ?x19948) ?x19950) ?x19952)))
 (= (- ?x20244 ?x19954) 0.0))))))))))))))
(assert
 (let ((?x20003 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x20000 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19997 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19994 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19991 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19988 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19985 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19982 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19979 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19976 (* ?x19610 l_0_9_24)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19974 (* ?x19483 l_0_9_23)))
 (let ((?x20248 (+ (+ (+ (+ (* (* 2.0 l_0_9_16) l_0_9_22) ?x19974) ?x19976) ?x19979) ?x19982)))
 (let ((?x20255 (- (- (- (- (- (- (+ ?x20248 ?x19985) ?x19988) ?x19991) ?x19994) ?x19997) ?x20000) ?x20003)))
 (= ?x20255 0.0)))))))))))))))))
(assert
 (let ((?x20049 (* l_0_9_56 l_0_9_56)))
 (let ((?x20047 (* l_0_9_55 l_0_9_55)))
 (let ((?x20045 (* l_0_9_54 l_0_9_54)))
 (let ((?x20043 (* l_0_9_53 l_0_9_53)))
 (let ((?x20041 (* l_0_9_52 l_0_9_52)))
 (let ((?x20039 (* l_0_9_51 l_0_9_51)))
 (let ((?x20037 (* l_0_9_50 l_0_9_50)))
 (let ((?x20035 (* l_0_9_28 l_0_9_28)))
 (let ((?x20033 (* l_0_9_27 l_0_9_27)))
 (let ((?x20031 (* l_0_9_26 l_0_9_26)))
 (let ((?x12813 (* l_0_9_25 l_0_9_25)))
 (let ((?x12895 (* l_0_9_24 l_0_9_24)))
 (let ((?x5437 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x12895) ?x12813)))
 (let ((?x20287 (- (- (- (- (+ (+ (+ ?x5437 ?x20031) ?x20033) ?x20035) ?x20037) ?x20039) ?x20041) ?x20043)))
 (= (- (- (- ?x20287 ?x20045) ?x20047) ?x20049) 0.0))))))))))))))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19350 (* ?x19349 l_0_9_30)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_2) ?x19350) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19356 (* ?x19349 l_0_9_32)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_4) ?x19356) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19364 (* ?x19349 l_0_9_35)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_7) ?x19364) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19374 (* ?x19349 l_0_9_39)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_11) ?x19374) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19384 (* ?x19349 l_0_9_44)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_16) ?x19384) 0.0))))
(assert
 (let ((?x19349 (* 2.0 l_0_9_29)))
 (let ((?x19394 (* ?x19349 l_0_9_50)))
 (= (- (* (* 2.0 l_0_9_1) l_0_9_22) ?x19394) 0.0))))
(assert
 (let ((?x19413 (* l_0_9_31 l_0_9_31)))
 (let ((?x19411 (* l_0_9_30 l_0_9_30)))
 (= (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x19411) ?x19413) 0.0))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19435 (* ?x19434 l_0_9_33)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19432 (* ?x19431 l_0_9_32)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19429 (* ?x19428 l_0_9_5)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_4) ?x19429) ?x19432) ?x19435) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19454 (* ?x19434 l_0_9_36)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19452 (* ?x19431 l_0_9_35)))
 (let ((?x19428 (* 2.0 l_0_9_3)))
 (let ((?x19450 (* ?x19428 l_0_9_8)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x19450) ?x19452) ?x19454) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19468 (* ?x19434 l_0_9_40)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19466 (* ?x19431 l_0_9_39)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19464 (* ?x12187 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x19464) ?x19466) ?x19468) 0.0))))))))
(assert
 (let ((?x19434 (* 2.0 l_0_9_31)))
 (let ((?x19513 (* ?x19434 l_0_9_51)))
 (let ((?x19431 (* 2.0 l_0_9_30)))
 (let ((?x19511 (* ?x19431 l_0_9_50)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19509 (* ?x19508 l_0_9_3)))
 (= (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_22) ?x19509) ?x19511) ?x19513) 0.0))))))))
(assert
 (let ((?x19540 (* l_0_9_6 l_0_9_6)))
 (let ((?x19538 (* l_0_9_5 l_0_9_5)))
 (let ((?x19536 (* l_0_9_4 l_0_9_4)))
 (let ((?x19534 (* l_0_9_34 l_0_9_34)))
 (let ((?x20088 (+ (- (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x19534) ?x19536)))
 (= (+ (+ ?x20088 ?x19538) ?x19540) 0.0)))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19602 (* ?x19555 l_0_9_41)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19600 (* ?x19552 l_0_9_40)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19598 (* ?x12234 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19596 (* ?x19595 l_0_9_6)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19593 (* ?x12187 l_0_9_5)))
 (let ((?x3776 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x19593) ?x19596) ?x19598) ?x19600)))
 (= (- ?x3776 ?x19602) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19623 (* ?x19555 l_0_9_46)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19621 (* ?x19552 l_0_9_45)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19619 (* ?x12234 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19617 (* ?x19610 l_0_9_6)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x12388 (* ?x19483 l_0_9_5)))
 (let ((?x13391 (- (- (+ (+ (* (* 2.0 l_0_9_16) l_0_9_4) ?x12388) ?x19617) ?x19619) ?x19621)))
 (= (- ?x13391 ?x19623) 0.0)))))))))))))
(assert
 (let ((?x19555 (* 2.0 l_0_9_34)))
 (let ((?x19647 (* ?x19555 l_0_9_52)))
 (let ((?x19552 (* 2.0 l_0_9_33)))
 (let ((?x19645 (* ?x19552 l_0_9_51)))
 (let ((?x12234 (* 2.0 l_0_9_32)))
 (let ((?x19643 (* ?x12234 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19641 (* ?x19640 l_0_9_6)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x19632 (* ?x19508 l_0_9_5)))
 (let ((?x13432 (- (- (+ (+ (* (* 2.0 l_0_9_22) l_0_9_4) ?x19632) ?x19641) ?x19643) ?x19645)))
 (= (- ?x13432 ?x19647) 0.0)))))))))))))
(assert
 (let ((?x19683 (* l_0_9_9 l_0_9_9)))
 (let ((?x19681 (* l_0_9_8 l_0_9_8)))
 (let ((?x19679 (* l_0_9_7 l_0_9_7)))
 (let ((?x19677 (* l_0_9_38 l_0_9_38)))
 (let ((?x19675 (* l_0_9_37 l_0_9_37)))
 (let ((?x19673 (* l_0_9_36 l_0_9_36)))
 (let ((?x13534 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_35 l_0_9_35)) ?x19673) ?x19675)))
 (= (+ (+ (+ (- ?x13534 ?x19677) ?x19679) ?x19681) ?x19683) 0.0)))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19718 (* ?x19717 l_0_9_42)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19715 (* ?x19714 l_0_9_41)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19712 (* ?x19711 l_0_9_40)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19709 (* ?x19708 l_0_9_39)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19706 (* ?x19595 l_0_9_9)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19704 (* ?x12187 l_0_9_8)))
 (let ((?x19701 (* 2.0 l_0_9_11)))
 (let ((?x19702 (* ?x19701 l_0_9_7)))
 (let ((?x13576 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x19702) ?x19704) ?x19706) ?x19709)))
 (= (- (- (- ?x13576 ?x19712) ?x19715) ?x19718) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19748 (* ?x19717 l_0_9_47)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19746 (* ?x19714 l_0_9_46)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19744 (* ?x19711 l_0_9_45)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19742 (* ?x19708 l_0_9_44)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19740 (* ?x19610 l_0_9_9)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19738 (* ?x19483 l_0_9_8)))
 (let ((?x12229 (* 2.0 l_0_9_16)))
 (let ((?x19736 (* ?x12229 l_0_9_7)))
 (let ((?x20100 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_19) ?x19736) ?x19738) ?x19740) ?x19742)))
 (= (- (- (- ?x20100 ?x19744) ?x19746) ?x19748) 0.0)))))))))))))))))
(assert
 (let ((?x19717 (* 2.0 l_0_9_38)))
 (let ((?x19771 (* ?x19717 l_0_9_53)))
 (let ((?x19714 (* 2.0 l_0_9_37)))
 (let ((?x19769 (* ?x19714 l_0_9_52)))
 (let ((?x19711 (* 2.0 l_0_9_36)))
 (let ((?x19767 (* ?x19711 l_0_9_51)))
 (let ((?x19708 (* 2.0 l_0_9_35)))
 (let ((?x19765 (* ?x19708 l_0_9_50)))
 (let ((?x19640 (* 2.0 l_0_9_24)))
 (let ((?x19763 (* ?x19640 l_0_9_9)))
 (let ((?x19508 (* 2.0 l_0_9_23)))
 (let ((?x12540 (* ?x19508 l_0_9_8)))
 (let ((?x12538 (* 2.0 l_0_9_22)))
 (let ((?x12624 (* ?x12538 l_0_9_7)))
 (let ((?x20125 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_25) ?x12624) ?x12540) ?x19763) ?x19765)))
 (= (- (- (- ?x20125 ?x19767) ?x19769) ?x19771) 0.0)))))))))))))))))
(assert
 (let ((?x19812 (* l_0_9_43 l_0_9_43)))
 (let ((?x19810 (* l_0_9_42 l_0_9_42)))
 (let ((?x19808 (* l_0_9_41 l_0_9_41)))
 (let ((?x19806 (* l_0_9_40 l_0_9_40)))
 (let ((?x19804 (* l_0_9_39 l_0_9_39)))
 (let ((?x19802 (* l_0_9_15 l_0_9_15)))
 (let ((?x19800 (* l_0_9_14 l_0_9_14)))
 (let ((?x19791 (* l_0_9_13 l_0_9_13)))
 (let ((?x20144 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x19791) ?x19800)))
 (= (- (- (- (- (- (+ ?x20144 ?x19802) ?x19804) ?x19806) ?x19808) ?x19810) ?x19812) 0.0)))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19857 (* ?x19856 l_0_9_48)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19854 (* ?x19853 l_0_9_47)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19851 (* ?x19850 l_0_9_46)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19848 (* ?x19847 l_0_9_45)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19845 (* ?x19844 l_0_9_44)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19842 (* ?x19841 l_0_9_20)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19839 (* ?x19838 l_0_9_19)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19836 (* ?x19595 l_0_9_18)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x19834 (* ?x12187 l_0_9_17)))
 (let ((?x20166 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_16) ?x19834) ?x19836) ?x19839) ?x19842)))
 (= (- (- (- (- (- ?x20166 ?x19845) ?x19848) ?x19851) ?x19854) ?x19857) 0.0)))))))))))))))))))))
(assert
 (let ((?x19856 (* 2.0 l_0_9_43)))
 (let ((?x19905 (* ?x19856 l_0_9_54)))
 (let ((?x19853 (* 2.0 l_0_9_42)))
 (let ((?x19903 (* ?x19853 l_0_9_53)))
 (let ((?x19850 (* 2.0 l_0_9_41)))
 (let ((?x19901 (* ?x19850 l_0_9_52)))
 (let ((?x19847 (* 2.0 l_0_9_40)))
 (let ((?x19899 (* ?x19847 l_0_9_51)))
 (let ((?x19844 (* 2.0 l_0_9_39)))
 (let ((?x19897 (* ?x19844 l_0_9_50)))
 (let ((?x19841 (* 2.0 l_0_9_15)))
 (let ((?x19891 (* ?x19841 l_0_9_26)))
 (let ((?x19838 (* 2.0 l_0_9_14)))
 (let ((?x19881 (* ?x19838 l_0_9_25)))
 (let ((?x19595 (* 2.0 l_0_9_13)))
 (let ((?x19878 (* ?x19595 l_0_9_24)))
 (let ((?x12187 (* 2.0 l_0_9_12)))
 (let ((?x12727 (* ?x12187 l_0_9_23)))
 (let ((?x20197 (+ (+ (+ (+ (* (* 2.0 l_0_9_11) l_0_9_22) ?x12727) ?x19878) ?x19881) ?x19891)))
 (= (- (- (- (- (- ?x20197 ?x19897) ?x19899) ?x19901) ?x19903) ?x19905) 0.0)))))))))))))))))))))
(assert
 (let ((?x19954 (* l_0_9_49 l_0_9_49)))
 (let ((?x19952 (* l_0_9_48 l_0_9_48)))
 (let ((?x19950 (* l_0_9_47 l_0_9_47)))
 (let ((?x19948 (* l_0_9_46 l_0_9_46)))
 (let ((?x19946 (* l_0_9_45 l_0_9_45)))
 (let ((?x19944 (* l_0_9_44 l_0_9_44)))
 (let ((?x19942 (* l_0_9_21 l_0_9_21)))
 (let ((?x19940 (* l_0_9_20 l_0_9_20)))
 (let ((?x19938 (* l_0_9_19 l_0_9_19)))
 (let ((?x19928 (* l_0_9_18 l_0_9_18)))
 (let ((?x20237 (+ (+ (+ (* l_0_9_16 l_0_9_16) (* l_0_9_17 l_0_9_17)) ?x19928) ?x19938)))
 (let ((?x20244 (- (- (- (- (- (+ (+ ?x20237 ?x19940) ?x19942) ?x19944) ?x19946) ?x19948) ?x19950) ?x19952)))
 (= (- ?x20244 ?x19954) 0.0))))))))))))))
(assert
 (let ((?x20003 (* (* 2.0 l_0_9_49) l_0_9_55)))
 (let ((?x20000 (* (* 2.0 l_0_9_48) l_0_9_54)))
 (let ((?x19997 (* (* 2.0 l_0_9_47) l_0_9_53)))
 (let ((?x19994 (* (* 2.0 l_0_9_46) l_0_9_52)))
 (let ((?x19991 (* (* 2.0 l_0_9_45) l_0_9_51)))
 (let ((?x19988 (* (* 2.0 l_0_9_44) l_0_9_50)))
 (let ((?x19985 (* (* 2.0 l_0_9_21) l_0_9_27)))
 (let ((?x19982 (* (* 2.0 l_0_9_20) l_0_9_26)))
 (let ((?x19979 (* (* 2.0 l_0_9_19) l_0_9_25)))
 (let ((?x19610 (* 2.0 l_0_9_18)))
 (let ((?x19976 (* ?x19610 l_0_9_24)))
 (let ((?x19483 (* 2.0 l_0_9_17)))
 (let ((?x19974 (* ?x19483 l_0_9_23)))
 (let ((?x20248 (+ (+ (+ (+ (* (* 2.0 l_0_9_16) l_0_9_22) ?x19974) ?x19976) ?x19979) ?x19982)))
 (let ((?x20255 (- (- (- (- (- (- (+ ?x20248 ?x19985) ?x19988) ?x19991) ?x19994) ?x19997) ?x20000) ?x20003)))
 (= ?x20255 0.0)))))))))))))))))
(assert
 (let ((?x20049 (* l_0_9_56 l_0_9_56)))
 (let ((?x20047 (* l_0_9_55 l_0_9_55)))
 (let ((?x20045 (* l_0_9_54 l_0_9_54)))
 (let ((?x20043 (* l_0_9_53 l_0_9_53)))
 (let ((?x20041 (* l_0_9_52 l_0_9_52)))
 (let ((?x20039 (* l_0_9_51 l_0_9_51)))
 (let ((?x20037 (* l_0_9_50 l_0_9_50)))
 (let ((?x20035 (* l_0_9_28 l_0_9_28)))
 (let ((?x20033 (* l_0_9_27 l_0_9_27)))
 (let ((?x20031 (* l_0_9_26 l_0_9_26)))
 (let ((?x12813 (* l_0_9_25 l_0_9_25)))
 (let ((?x12895 (* l_0_9_24 l_0_9_24)))
 (let ((?x5437 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x12895) ?x12813)))
 (let ((?x20287 (- (- (- (- (+ (+ (+ ?x5437 ?x20031) ?x20033) ?x20035) ?x20037) ?x20039) ?x20041) ?x20043)))
 (= (- (- (- ?x20287 ?x20045) ?x20047) ?x20049) 0.0))))))))))))))))
(assert
 (= (- (* 1.0 (* l_0_9_57 l_0_9_57)) (* l_0_9_85 l_0_9_85)) 0.0))
(assert
 (let ((?x13680 (- (* (* 2.0 l_0_9_57) l_0_9_58) (* (* 2.0 l_0_9_85) l_0_9_86))))
 (= ?x13680 0.0)))
(assert
 (let ((?x20297 (- (* (* 2.0 l_0_9_57) l_0_9_60) (* (* 2.0 l_0_9_85) l_0_9_88))))
 (= ?x20297 0.0)))
(assert
 (let ((?x20310 (- (* (* 2.0 l_0_9_57) l_0_9_63) (* (* 2.0 l_0_9_85) l_0_9_91))))
 (= ?x20310 0.0)))
(assert
 (let ((?x20323 (- (* (* 2.0 l_0_9_57) l_0_9_67) (* (* 2.0 l_0_9_85) l_0_9_95))))
 (= ?x20323 0.0)))
(assert
 (let ((?x20337 (+ (* (* (- 2.0) l_0_9_100) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_72))))
 (= ?x20337 0.0)))
(assert
 (let ((?x20348 (+ (* (* (- 2.0) l_0_9_106) l_0_9_85) (* (* 2.0 l_0_9_57) l_0_9_78))))
 (= ?x20348 0.0)))
(assert
 (let ((?x20363 (* l_0_9_87 l_0_9_87)))
 (let ((?x20361 (* l_0_9_86 l_0_9_86)))
 (let ((?x20360 (+ (* 1.0 (* l_0_9_58 l_0_9_58)) (* 1.0 (* l_0_9_59 l_0_9_59)))))
 (= (- (- ?x20360 ?x20361) ?x20363) 0.0)))))
(assert
 (let ((?x20376 (+ (* (* 2.0 l_0_9_58) l_0_9_60) (* (* 2.0 l_0_9_59) l_0_9_61))))
 (let ((?x20382 (- (- ?x20376 (* (* 2.0 l_0_9_86) l_0_9_88)) (* (* 2.0 l_0_9_87) l_0_9_89))))
 (= ?x20382 0.0))))
(assert
 (let ((?x20404 (+ (* (* 2.0 l_0_9_58) l_0_9_63) (* (* 2.0 l_0_9_59) l_0_9_64))))
 (let ((?x20408 (- (- ?x20404 (* (* 2.0 l_0_9_86) l_0_9_91)) (* (* 2.0 l_0_9_87) l_0_9_92))))
 (= ?x20408 0.0))))
(assert
 (let ((?x20430 (+ (* (* 2.0 l_0_9_58) l_0_9_67) (* (* 2.0 l_0_9_59) l_0_9_68))))
 (let ((?x20434 (- (- ?x20430 (* (* 2.0 l_0_9_86) l_0_9_95)) (* (* 2.0 l_0_9_87) l_0_9_96))))
 (= ?x20434 0.0))))
(assert
 (let ((?x20456 (- (* (* (- 2.0) l_0_9_106) l_0_9_86) (* (* 2.0 l_0_9_107) l_0_9_87))))
 (let ((?x20460 (+ (+ ?x20456 (* (* 2.0 l_0_9_58) l_0_9_78)) (* (* 2.0 l_0_9_59) l_0_9_79))))
 (= ?x20460 0.0))))
(assert
 (let ((?x20489 (* l_0_9_90 l_0_9_90)))
 (let ((?x20487 (* l_0_9_89 l_0_9_89)))
 (let ((?x20485 (* l_0_9_88 l_0_9_88)))
 (let ((?x20481 (+ (* 1.0 (* l_0_9_60 l_0_9_60)) (* 1.0 (* l_0_9_61 l_0_9_61)))))
 (let ((?x20490 (- (- (- (+ ?x20481 (* 1.0 (* l_0_9_62 l_0_9_62))) ?x20485) ?x20487) ?x20489)))
 (= ?x20490 0.0)))))))
(assert
 (let ((?x20505 (+ (* (* 2.0 l_0_9_60) l_0_9_67) (* (* 2.0 l_0_9_61) l_0_9_68))))
 (let ((?x20509 (- (+ ?x20505 (* (* 2.0 l_0_9_62) l_0_9_69)) (* (* 2.0 l_0_9_88) l_0_9_95))))
 (let ((?x20513 (- (- ?x20509 (* (* 2.0 l_0_9_89) l_0_9_96)) (* (* 2.0 l_0_9_90) l_0_9_97))))
 (= ?x20513 0.0)))))
(assert
 (let ((?x20543 (- (* (* (- 2.0) l_0_9_100) l_0_9_88) (* (* 2.0 l_0_9_101) l_0_9_89))))
 (let ((?x20548 (+ (- ?x20543 (* (* 2.0 l_0_9_102) l_0_9_90)) (* (* 2.0 l_0_9_60) l_0_9_72))))
 (let ((?x20552 (+ (+ ?x20548 (* (* 2.0 l_0_9_61) l_0_9_73)) (* (* 2.0 l_0_9_62) l_0_9_74))))
 (= ?x20552 0.0)))))
(assert
 (let ((?x20573 (- (* (* (- 2.0) l_0_9_106) l_0_9_88) (* (* 2.0 l_0_9_107) l_0_9_89))))
 (let ((?x20583 (+ (- ?x20573 (* (* 2.0 l_0_9_108) l_0_9_90)) (* (* 2.0 l_0_9_60) l_0_9_78))))
 (let ((?x20587 (+ (+ ?x20583 (* (* 2.0 l_0_9_61) l_0_9_79)) (* (* 2.0 l_0_9_62) l_0_9_80))))
 (= ?x20587 0.0)))))
(assert
 (let ((?x20629 (* l_0_9_94 l_0_9_94)))
 (let ((?x20627 (* l_0_9_93 l_0_9_93)))
 (let ((?x20625 (* l_0_9_92 l_0_9_92)))
 (let ((?x20623 (* l_0_9_91 l_0_9_91)))
 (let ((?x20616 (+ (* 1.0 (* l_0_9_63 l_0_9_63)) (* 1.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x20622 (+ (+ ?x20616 (* 1.0 (* l_0_9_65 l_0_9_65))) (* 1.0 (* l_0_9_66 l_0_9_66)))))
 (= (- (- (- (- ?x20622 ?x20623) ?x20625) ?x20627) ?x20629) 0.0))))))))
(assert
 (let ((?x20650 (+ (* (* 2.0 l_0_9_63) l_0_9_67) (* (* 2.0 l_0_9_64) l_0_9_68))))
 (let ((?x20656 (+ (+ ?x20650 (* (* 2.0 l_0_9_65) l_0_9_69)) (* (* 2.0 l_0_9_66) l_0_9_70))))
 (let ((?x20662 (- (- ?x20656 (* (* 2.0 l_0_9_91) l_0_9_95)) (* (* 2.0 l_0_9_92) l_0_9_96))))
 (let ((?x20668 (- (- ?x20662 (* (* 2.0 l_0_9_93) l_0_9_97)) (* (* 2.0 l_0_9_94) l_0_9_98))))
 (= ?x20668 0.0))))))
(assert
 (let ((?x20706 (- (* (* (- 2.0) l_0_9_100) l_0_9_91) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x20711 (- (- ?x20706 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_103) l_0_9_94))))
 (let ((?x20715 (+ (+ ?x20711 (* (* 2.0 l_0_9_63) l_0_9_72)) (* (* 2.0 l_0_9_64) l_0_9_73))))
 (let ((?x20719 (+ (+ ?x20715 (* (* 2.0 l_0_9_65) l_0_9_74)) (* (* 2.0 l_0_9_66) l_0_9_75))))
 (= ?x20719 0.0))))))
(assert
 (let ((?x20746 (- (* (* (- 2.0) l_0_9_106) l_0_9_91) (* (* 2.0 l_0_9_107) l_0_9_92))))
 (let ((?x20758 (- (- ?x20746 (* (* 2.0 l_0_9_108) l_0_9_93)) (* (* 2.0 l_0_9_109) l_0_9_94))))
 (let ((?x20762 (+ (+ ?x20758 (* (* 2.0 l_0_9_63) l_0_9_78)) (* (* 2.0 l_0_9_64) l_0_9_79))))
 (let ((?x20766 (+ (+ ?x20762 (* (* 2.0 l_0_9_65) l_0_9_80)) (* (* 2.0 l_0_9_66) l_0_9_81))))
 (= ?x20766 0.0))))))
(assert
 (let ((?x20821 (* l_0_9_99 l_0_9_99)))
 (let ((?x20819 (* l_0_9_98 l_0_9_98)))
 (let ((?x20817 (* l_0_9_97 l_0_9_97)))
 (let ((?x20815 (* l_0_9_96 l_0_9_96)))
 (let ((?x20813 (* l_0_9_95 l_0_9_95)))
 (let ((?x20796 (+ (* 1.0 (* l_0_9_67 l_0_9_67)) (* 1.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x20809 (+ (+ ?x20796 (* 1.0 (* l_0_9_69 l_0_9_69))) (* 1.0 (* l_0_9_70 l_0_9_70)))))
 (let ((?x20818 (- (- (- (+ ?x20809 (* 1.0 (* l_0_9_71 l_0_9_71))) ?x20813) ?x20815) ?x20817)))
 (= (- (- ?x20818 ?x20819) ?x20821) 0.0))))))))))
(assert
 (let ((?x20843 (- (* (* (- 2.0) l_0_9_100) l_0_9_95) (* (* 2.0 l_0_9_101) l_0_9_96))))
 (let ((?x20847 (- (- ?x20843 (* (* 2.0 l_0_9_102) l_0_9_97)) (* (* 2.0 l_0_9_103) l_0_9_98))))
 (let ((?x20852 (+ (- ?x20847 (* (* 2.0 l_0_9_104) l_0_9_99)) (* (* 2.0 l_0_9_67) l_0_9_72))))
 (let ((?x20856 (+ (+ ?x20852 (* (* 2.0 l_0_9_68) l_0_9_73)) (* (* 2.0 l_0_9_69) l_0_9_74))))
 (let ((?x20860 (+ (+ ?x20856 (* (* 2.0 l_0_9_70) l_0_9_75)) (* (* 2.0 l_0_9_71) l_0_9_76))))
 (= ?x20860 0.0)))))))
(assert
 (let ((?x20911 (* l_0_9_105 l_0_9_105)))
 (let ((?x20909 (* l_0_9_104 l_0_9_104)))
 (let ((?x20907 (* l_0_9_103 l_0_9_103)))
 (let ((?x20897 (* l_0_9_102 l_0_9_102)))
 (let ((?x20898 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_101 l_0_9_101)) ?x20897)))
 (let ((?x20915 (+ (- (- (- ?x20898 ?x20907) ?x20909) ?x20911) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x20921 (+ (+ ?x20915 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (let ((?x20927 (+ (+ ?x20921 (* 1.0 (* l_0_9_75 l_0_9_75))) (* 1.0 (* l_0_9_76 l_0_9_76)))))
 (= (+ ?x20927 (* 1.0 (* l_0_9_77 l_0_9_77))) 0.0))))))))))
(assert
 (let ((?x20960 (- (* (* (- 2.0) l_0_9_100) l_0_9_106) (* (* 2.0 l_0_9_101) l_0_9_107))))
 (let ((?x20964 (- (- ?x20960 (* (* 2.0 l_0_9_102) l_0_9_108)) (* (* 2.0 l_0_9_103) l_0_9_109))))
 (let ((?x20969 (- (- ?x20964 (* (* 2.0 l_0_9_104) l_0_9_110)) (* (* 2.0 l_0_9_105) l_0_9_111))))
 (let ((?x20975 (+ (+ ?x20969 (* (* 2.0 l_0_9_72) l_0_9_78)) (* (* 2.0 l_0_9_73) l_0_9_79))))
 (let ((?x20981 (+ (+ ?x20975 (* (* 2.0 l_0_9_74) l_0_9_80)) (* (* 2.0 l_0_9_75) l_0_9_81))))
 (let ((?x20987 (+ (+ ?x20981 (* (* 2.0 l_0_9_76) l_0_9_82)) (* (* 2.0 l_0_9_77) l_0_9_83))))
 (= ?x20987 0.0))))))))
(assert
 (let ((?x21048 (* l_0_9_112 l_0_9_112)))
 (let ((?x21046 (* l_0_9_111 l_0_9_111)))
 (let ((?x21044 (* l_0_9_110 l_0_9_110)))
 (let ((?x21033 (* l_0_9_109 l_0_9_109)))
 (let ((?x21030 (* l_0_9_108 l_0_9_108)))
 (let ((?x21032 (- (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_107 l_0_9_107)) ?x21030)))
 (let ((?x21052 (+ (- (- (- (- ?x21032 ?x21033) ?x21044) ?x21046) ?x21048) (* 1.0 (* l_0_9_78 l_0_9_78)))))
 (let ((?x21058 (+ (+ ?x21052 (* 1.0 (* l_0_9_79 l_0_9_79))) (* 1.0 (* l_0_9_80 l_0_9_80)))))
 (let ((?x21064 (+ (+ ?x21058 (* 1.0 (* l_0_9_81 l_0_9_81))) (* 1.0 (* l_0_9_82 l_0_9_82)))))
 (let ((?x21070 (+ (+ ?x21064 (* 1.0 (* l_0_9_83 l_0_9_83))) (* 1.0 (* l_0_9_84 l_0_9_84)))))
 (= ?x21070 0.0))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_28 0.0))
(assert
 (>= l_0_9_29 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_34 0.0))
(assert
 (>= l_0_9_38 0.0))
(assert
 (>= l_0_9_43 0.0))
(assert
 (>= l_0_9_49 0.0))
(assert
 (>= l_0_9_56 0.0))
(assert
 (>= l_0_9_57 0.0))
(assert
 (>= l_0_9_59 0.0))
(assert
 (>= l_0_9_62 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_71 0.0))
(assert
 (>= l_0_9_77 0.0))
(assert
 (>= l_0_9_84 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_87 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_94 0.0))
(assert
 (>= l_0_9_99 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_112 0.0))
(assert
 (let ((?x21140 (* l_0_10_29 l_0_10_29)))
 (let ((?x21136 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_116) l_0_10_119)) (* (* 2.0 l_0_10_117) l_0_10_120))))
 (let ((?x21144 (+ (- (- ?x21136 (* (* 2.0 l_0_10_118) l_0_10_121)) ?x21140) (* (* 2.0 l_0_10_60) l_0_10_63))))
 (let ((?x21150 (+ (+ ?x21144 (* (* 2.0 l_0_10_61) l_0_10_64)) (* (* 2.0 l_0_10_62) l_0_10_65))))
 (let ((?x21156 (- (- ?x21150 (* (* 2.0 l_0_10_88) l_0_10_91)) (* (* 2.0 l_0_10_89) l_0_10_92))))
 (= (+ (- ?x21156 (* (* 2.0 l_0_10_90) l_0_10_93)) 1.0) 0.0)))))))
(assert
 (let ((?x21140 (* l_0_10_29 l_0_10_29)))
 (let ((?x21188 (- (- (* l_0_10_1 l_0_10_1) (* (* 2.0 l_0_10_106) l_0_10_95)) (* (* 2.0 l_0_10_107) l_0_10_96))))
 (let ((?x21194 (- (- ?x21188 (* (* 2.0 l_0_10_108) l_0_10_97)) (* (* 2.0 l_0_10_109) l_0_10_98))))
 (let ((?x21200 (- (- ?x21194 (* (* 2.0 l_0_10_110) l_0_10_99)) (* (* 2.0 l_0_10_123) l_0_10_134))))
 (let ((?x21206 (- (- ?x21200 (* (* 2.0 l_0_10_124) l_0_10_135)) (* (* 2.0 l_0_10_125) l_0_10_136))))
 (let ((?x21212 (- (- ?x21206 (* (* 2.0 l_0_10_126) l_0_10_137)) (* (* 2.0 l_0_10_127) l_0_10_138))))
 (let ((?x21219 (+ (+ (- ?x21212 ?x21140) (* (* 2.0 l_0_10_67) l_0_10_78)) (* (* 2.0 l_0_10_68) l_0_10_79))))
 (let ((?x21225 (+ (+ ?x21219 (* (* 2.0 l_0_10_69) l_0_10_80)) (* (* 2.0 l_0_10_70) l_0_10_81))))
 (= (+ (+ ?x21225 (* (* 2.0 l_0_10_71) l_0_10_82)) 1.0) 0.0))))))))))
(assert
 (let ((?x21140 (* l_0_10_29 l_0_10_29)))
 (let ((?x14015 (- (* (- l_0_10_1) l_0_10_1) (* (* 2.0 l_0_10_100) l_0_10_86))))
 (let ((?x21252 (- (- ?x14015 (* (* 2.0 l_0_10_101) l_0_10_87)) (* (* 2.0 l_0_10_114) l_0_10_128))))
 (let ((?x21259 (+ (+ (- ?x21252 (* (* 2.0 l_0_10_115) l_0_10_129)) ?x21140) (* (* 2.0 l_0_10_58) l_0_10_72))))
 (= (- (+ ?x21259 (* (* 2.0 l_0_10_59) l_0_10_73)) 1.0) 0.0))))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21283 (* ?x21282 l_0_10_30)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_2) ?x21283) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21289 (* ?x21282 l_0_10_32)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_4) ?x21289) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21299 (* ?x21282 l_0_10_35)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_7) ?x21299) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21309 (* ?x21282 l_0_10_39)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_11) ?x21309) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21319 (* ?x21282 l_0_10_44)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_16) ?x21319) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21329 (* ?x21282 l_0_10_50)))
 (= (+ (* (* (- 2.0) l_0_10_1) l_0_10_22) ?x21329) 0.0))))
(assert
 (let ((?x21348 (* l_0_10_31 l_0_10_31)))
 (let ((?x21346 (* l_0_10_30 l_0_10_30)))
 (let ((?x21349 (+ (+ (- (* (- l_0_10_2) l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21346) ?x21348)))
 (= ?x21349 0.0)))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21370 (* ?x21369 l_0_10_33)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21367 (* ?x21366 l_0_10_32)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21364 (* ?x21363 l_0_10_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_4) ?x21364) ?x21367) ?x21370) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21389 (* ?x21369 l_0_10_36)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21387 (* ?x21366 l_0_10_35)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21385 (* ?x21363 l_0_10_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_7) ?x21385) ?x21387) ?x21389) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21408 (* ?x21369 l_0_10_40)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21406 (* ?x21366 l_0_10_39)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21404 (* ?x21398 l_0_10_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x21404) ?x21406) ?x21408) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21422 (* ?x21369 l_0_10_45)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21420 (* ?x21366 l_0_10_44)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14149 (* ?x14148 l_0_10_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_16) l_0_10_2) ?x14149) ?x21420) ?x21422) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21446 (* ?x21369 l_0_10_51)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21444 (* ?x21366 l_0_10_50)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21437 (* ?x21436 l_0_10_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_22) ?x21437) ?x21444) ?x21446) 0.0))))))))
(assert
 (let ((?x21470 (* l_0_10_6 l_0_10_6)))
 (let ((?x21468 (* l_0_10_5 l_0_10_5)))
 (let ((?x21466 (* l_0_10_4 l_0_10_4)))
 (let ((?x21464 (* l_0_10_34 l_0_10_34)))
 (let ((?x21467 (- (+ (+ (* l_0_10_32 l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x21464) ?x21466)))
 (= (- (- ?x21467 ?x21468) ?x21470) 0.0)))))))
(assert
 (let ((?x21502 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21499 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21496 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21493 (* ?x21492 l_0_10_37)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21490 (* ?x21489 l_0_10_36)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21487 (* ?x21486 l_0_10_35)))
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21422 (* ?x21369 l_0_10_45)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21420 (* ?x21366 l_0_10_44)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14149 (* ?x14148 l_0_10_3)))
 (let ((?x14190 (* 2.0 l_0_10_16)))
 (let ((?x21482 (* ?x14190 l_0_10_2)))
 (let ((?x21497 (- (+ (+ (+ (- (- (+ ?x21482 ?x14149) ?x21420) ?x21422) ?x21487) ?x21490) ?x21493) ?x21496)))
 (= (- (- ?x21497 ?x21499) ?x21502) 0.0))))))))))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21522 (* ?x21492 l_0_10_41)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21520 (* ?x21489 l_0_10_40)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x14208 (* ?x21486 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14204 (* ?x14210 l_0_10_6)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14203 (* ?x21398 l_0_10_5)))
 (let ((?x21521 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x14203) ?x14204) ?x14208) ?x21520)))
 (= (+ ?x21521 ?x21522) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21540 (* ?x21492 l_0_10_46)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21538 (* ?x21489 l_0_10_45)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21536 (* ?x21486 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21534 (* ?x14273 l_0_10_6)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14326 (* ?x14148 l_0_10_5)))
 (let ((?x21539 (+ (+ (- (- (* (* (- 2.0) l_0_10_16) l_0_10_4) ?x14326) ?x21534) ?x21536) ?x21538)))
 (= (+ ?x21539 ?x21540) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21567 (* ?x21492 l_0_10_52)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21565 (* ?x21489 l_0_10_51)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21563 (* ?x21486 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21561 (* ?x21560 l_0_10_6)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21552 (* ?x21436 l_0_10_5)))
 (let ((?x21566 (+ (+ (- (- (* (* (- 2.0) l_0_10_22) l_0_10_4) ?x21552) ?x21561) ?x21563) ?x21565)))
 (= (+ ?x21566 ?x21567) 0.0)))))))))))))
(assert
 (let ((?x21603 (* l_0_10_9 l_0_10_9)))
 (let ((?x21601 (* l_0_10_8 l_0_10_8)))
 (let ((?x21599 (* l_0_10_7 l_0_10_7)))
 (let ((?x21597 (* l_0_10_38 l_0_10_38)))
 (let ((?x21595 (* l_0_10_37 l_0_10_37)))
 (let ((?x21593 (* l_0_10_36 l_0_10_36)))
 (let ((?x21594 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21593)))
 (= (- (- (- (+ (+ ?x21594 ?x21595) ?x21597) ?x21599) ?x21601) ?x21603) 0.0)))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21621 (* ?x21620 l_0_10_42)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21618 (* ?x21617 l_0_10_41)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21615 (* ?x14366 l_0_10_40)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x14362 (* ?x14368 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14361 (* ?x14210 l_0_10_9)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14349 (* ?x21398 l_0_10_8)))
 (let ((?x14339 (* 2.0 l_0_10_11)))
 (let ((?x14341 (* ?x14339 l_0_10_7)))
 (let ((?x14365 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x14341) ?x14349) ?x14361) ?x14362)))
 (= (+ (+ (+ ?x14365 ?x21615) ?x21618) ?x21621) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21662 (* ?x21620 l_0_10_47)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21660 (* ?x21617 l_0_10_46)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21658 (* ?x14366 l_0_10_45)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21656 (* ?x14368 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21654 (* ?x14273 l_0_10_9)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21645 (* ?x14148 l_0_10_8)))
 (let ((?x14190 (* 2.0 l_0_10_16)))
 (let ((?x21641 (* ?x14190 l_0_10_7)))
 (let ((?x21657 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_19) ?x21641) ?x21645) ?x21654) ?x21656)))
 (= (+ (+ (+ ?x21657 ?x21658) ?x21660) ?x21662) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21686 (* ?x21620 l_0_10_53)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21684 (* ?x21617 l_0_10_52)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21682 (* ?x14366 l_0_10_51)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21680 (* ?x14368 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21678 (* ?x21560 l_0_10_9)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21676 (* ?x21436 l_0_10_8)))
 (let ((?x14439 (* 2.0 l_0_10_22)))
 (let ((?x14442 (* ?x14439 l_0_10_7)))
 (let ((?x21681 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_25) ?x14442) ?x21676) ?x21678) ?x21680)))
 (= (+ (+ (+ ?x21681 ?x21682) ?x21684) ?x21686) 0.0)))))))))))))))))
(assert
 (let ((?x21731 (* l_0_10_43 l_0_10_43)))
 (let ((?x21729 (* l_0_10_42 l_0_10_42)))
 (let ((?x21727 (* l_0_10_41 l_0_10_41)))
 (let ((?x21725 (* l_0_10_40 l_0_10_40)))
 (let ((?x21723 (* l_0_10_39 l_0_10_39)))
 (let ((?x21721 (* l_0_10_15 l_0_10_15)))
 (let ((?x21719 (* l_0_10_14 l_0_10_14)))
 (let ((?x21717 (* l_0_10_13 l_0_10_13)))
 (let ((?x21718 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21717)))
 (let ((?x21732 (+ (+ (+ (+ (+ (- (- ?x21718 ?x21719) ?x21721) ?x21723) ?x21725) ?x21727) ?x21729) ?x21731)))
 (= ?x21732 0.0))))))))))))
(assert
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21777 (* ?x21776 l_0_10_48)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21774 (* ?x21773 l_0_10_47)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21771 (* ?x21770 l_0_10_46)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21768 (* ?x21767 l_0_10_45)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21765 (* ?x21764 l_0_10_44)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21762 (* ?x21761 l_0_10_20)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21759 (* ?x21758 l_0_10_19)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21756 (* ?x14210 l_0_10_18)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21754 (* ?x21398 l_0_10_17)))
 (let ((?x21763 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_16) ?x21754) ?x21756) ?x21759) ?x21762)))
 (= (+ (+ (+ (+ (+ ?x21763 ?x21765) ?x21768) ?x21771) ?x21774) ?x21777) 0.0)))))))))))))))))))))
(assert
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21819 (* ?x21776 l_0_10_54)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21817 (* ?x21773 l_0_10_53)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21815 (* ?x21770 l_0_10_52)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21813 (* ?x21767 l_0_10_51)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21811 (* ?x21764 l_0_10_50)))
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21422 (* ?x21369 l_0_10_45)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21420 (* ?x21366 l_0_10_44)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14149 (* ?x14148 l_0_10_3)))
 (let ((?x14190 (* 2.0 l_0_10_16)))
 (let ((?x21482 (* ?x14190 l_0_10_2)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21805 (* ?x21761 l_0_10_26)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21803 (* ?x21758 l_0_10_25)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21801 (* ?x14210 l_0_10_24)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21799 (* ?x21398 l_0_10_23)))
 (let ((?x21806 (- (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_22) ?x21799) ?x21801) ?x21803) ?x21805)))
 (let ((?x21816 (+ (+ (+ (- (- (+ (+ ?x21806 ?x21482) ?x14149) ?x21420) ?x21422) ?x21811) ?x21813) ?x21815)))
 (= (+ (+ ?x21816 ?x21817) ?x21819) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x21855 (* l_0_10_49 l_0_10_49)))
 (let ((?x21853 (* l_0_10_48 l_0_10_48)))
 (let ((?x21851 (* l_0_10_47 l_0_10_47)))
 (let ((?x21849 (* l_0_10_46 l_0_10_46)))
 (let ((?x21847 (* l_0_10_45 l_0_10_45)))
 (let ((?x21845 (* l_0_10_44 l_0_10_44)))
 (let ((?x21843 (* l_0_10_21 l_0_10_21)))
 (let ((?x21841 (* l_0_10_20 l_0_10_20)))
 (let ((?x21839 (* l_0_10_19 l_0_10_19)))
 (let ((?x14647 (* l_0_10_18 l_0_10_18)))
 (let ((?x14648 (- (- (* (- l_0_10_16) l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x14647)))
 (let ((?x21852 (+ (+ (+ (+ (- (- (- ?x14648 ?x21839) ?x21841) ?x21843) ?x21845) ?x21847) ?x21849) ?x21851)))
 (= (+ (+ ?x21852 ?x21853) ?x21855) 0.0))))))))))))))
(assert
 (let ((?x21908 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21905 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21902 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21899 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21896 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21893 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21890 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21887 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21884 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21881 (* ?x14273 l_0_10_24)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21879 (* ?x14148 l_0_10_23)))
 (let ((?x21888 (- (- (- (- (* (* (- 2.0) l_0_10_16) l_0_10_22) ?x21879) ?x21881) ?x21884) ?x21887)))
 (let ((?x21909 (+ (+ (+ (+ (+ (+ (- ?x21888 ?x21890) ?x21893) ?x21896) ?x21899) ?x21902) ?x21905) ?x21908)))
 (= ?x21909 0.0)))))))))))))))))
(assert
 (let ((?x21975 (* l_0_10_56 l_0_10_56)))
 (let ((?x21973 (* l_0_10_55 l_0_10_55)))
 (let ((?x21971 (* l_0_10_54 l_0_10_54)))
 (let ((?x21969 (* l_0_10_53 l_0_10_53)))
 (let ((?x21967 (* l_0_10_52 l_0_10_52)))
 (let ((?x21965 (* l_0_10_51 l_0_10_51)))
 (let ((?x21963 (* l_0_10_50 l_0_10_50)))
 (let ((?x21961 (* l_0_10_28 l_0_10_28)))
 (let ((?x21959 (* l_0_10_27 l_0_10_27)))
 (let ((?x21957 (* l_0_10_26 l_0_10_26)))
 (let ((?x21946 (* l_0_10_25 l_0_10_25)))
 (let ((?x21943 (* l_0_10_24 l_0_10_24)))
 (let ((?x21945 (- (- (* (- l_0_10_22) l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21943)))
 (let ((?x21968 (+ (+ (+ (- (- (- (- ?x21945 ?x21946) ?x21957) ?x21959) ?x21961) ?x21963) ?x21965) ?x21967)))
 (= (+ (+ (+ (+ ?x21968 ?x21969) ?x21971) ?x21973) ?x21975) 0.0))))))))))))))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21283 (* ?x21282 l_0_10_30)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_2) ?x21283) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21289 (* ?x21282 l_0_10_32)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_4) ?x21289) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21299 (* ?x21282 l_0_10_35)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x21299) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21309 (* ?x21282 l_0_10_39)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_11) ?x21309) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21319 (* ?x21282 l_0_10_44)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_16) ?x21319) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21329 (* ?x21282 l_0_10_50)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_22) ?x21329) 0.0))))
(assert
 (let ((?x21348 (* l_0_10_31 l_0_10_31)))
 (let ((?x21346 (* l_0_10_30 l_0_10_30)))
 (let ((?x14838 (- (- (+ (* l_0_10_2 l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21346) ?x21348)))
 (= ?x14838 0.0)))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21370 (* ?x21369 l_0_10_33)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21367 (* ?x21366 l_0_10_32)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21364 (* ?x21363 l_0_10_5)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_4) ?x21364) ?x21367) ?x21370) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21389 (* ?x21369 l_0_10_36)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21387 (* ?x21366 l_0_10_35)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21385 (* ?x21363 l_0_10_8)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x21385) ?x21387) ?x21389) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21408 (* ?x21369 l_0_10_40)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21406 (* ?x21366 l_0_10_39)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21404 (* ?x21398 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x21404) ?x21406) ?x21408) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21446 (* ?x21369 l_0_10_51)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21444 (* ?x21366 l_0_10_50)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21437 (* ?x21436 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_22) ?x21437) ?x21444) ?x21446) 0.0))))))))
(assert
 (let ((?x21470 (* l_0_10_6 l_0_10_6)))
 (let ((?x21468 (* l_0_10_5 l_0_10_5)))
 (let ((?x21466 (* l_0_10_4 l_0_10_4)))
 (let ((?x21464 (* l_0_10_34 l_0_10_34)))
 (let ((?x14869 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x21464)))
 (= (+ (+ (+ ?x14869 ?x21466) ?x21468) ?x21470) 0.0)))))))
(assert
 (let ((?x21502 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21499 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21496 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21493 (* ?x21492 l_0_10_37)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21490 (* ?x21489 l_0_10_36)))
 (let ((?x22016 (+ (+ (- (- (* (* (- 2.0) l_0_10_32) l_0_10_35) ?x21490) ?x21493) ?x21496) ?x21499)))
 (= (+ ?x22016 ?x21502) 0.0))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21522 (* ?x21492 l_0_10_41)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21520 (* ?x21489 l_0_10_40)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x14208 (* ?x21486 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14204 (* ?x14210 l_0_10_6)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14203 (* ?x21398 l_0_10_5)))
 (let ((?x14969 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x14203) ?x14204) ?x14208) ?x21520)))
 (= (- ?x14969 ?x21522) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21540 (* ?x21492 l_0_10_46)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21538 (* ?x21489 l_0_10_45)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21536 (* ?x21486 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21534 (* ?x14273 l_0_10_6)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14326 (* ?x14148 l_0_10_5)))
 (let ((?x15041 (- (- (+ (+ (* (* 2.0 l_0_10_16) l_0_10_4) ?x14326) ?x21534) ?x21536) ?x21538)))
 (= (- ?x15041 ?x21540) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21567 (* ?x21492 l_0_10_52)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21565 (* ?x21489 l_0_10_51)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21563 (* ?x21486 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21561 (* ?x21560 l_0_10_6)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21552 (* ?x21436 l_0_10_5)))
 (let ((?x6273 (- (- (+ (+ (* (* 2.0 l_0_10_22) l_0_10_4) ?x21552) ?x21561) ?x21563) ?x21565)))
 (= (- ?x6273 ?x21567) 0.0)))))))))))))
(assert
 (let ((?x21603 (* l_0_10_9 l_0_10_9)))
 (let ((?x21601 (* l_0_10_8 l_0_10_8)))
 (let ((?x21599 (* l_0_10_7 l_0_10_7)))
 (let ((?x21597 (* l_0_10_38 l_0_10_38)))
 (let ((?x21595 (* l_0_10_37 l_0_10_37)))
 (let ((?x21593 (* l_0_10_36 l_0_10_36)))
 (let ((?x15072 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21593) ?x21595)))
 (= (+ (+ (+ (- ?x15072 ?x21597) ?x21599) ?x21601) ?x21603) 0.0)))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21621 (* ?x21620 l_0_10_42)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21618 (* ?x21617 l_0_10_41)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21615 (* ?x14366 l_0_10_40)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x14362 (* ?x14368 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14361 (* ?x14210 l_0_10_9)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14349 (* ?x21398 l_0_10_8)))
 (let ((?x14339 (* 2.0 l_0_10_11)))
 (let ((?x14341 (* ?x14339 l_0_10_7)))
 (let ((?x22029 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x14341) ?x14349) ?x14361) ?x14362)))
 (= (- (- (- ?x22029 ?x21615) ?x21618) ?x21621) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21662 (* ?x21620 l_0_10_47)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21660 (* ?x21617 l_0_10_46)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21658 (* ?x14366 l_0_10_45)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21656 (* ?x14368 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21654 (* ?x14273 l_0_10_9)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21645 (* ?x14148 l_0_10_8)))
 (let ((?x14190 (* 2.0 l_0_10_16)))
 (let ((?x21641 (* ?x14190 l_0_10_7)))
 (let ((?x15197 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x21641) ?x21645) ?x21654) ?x21656)))
 (= (- (- (- ?x15197 ?x21658) ?x21660) ?x21662) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21686 (* ?x21620 l_0_10_53)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21684 (* ?x21617 l_0_10_52)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21682 (* ?x14366 l_0_10_51)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21680 (* ?x14368 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21678 (* ?x21560 l_0_10_9)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21676 (* ?x21436 l_0_10_8)))
 (let ((?x14439 (* 2.0 l_0_10_22)))
 (let ((?x14442 (* ?x14439 l_0_10_7)))
 (let ((?x15301 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_25) ?x14442) ?x21676) ?x21678) ?x21680)))
 (= (- (- (- ?x15301 ?x21682) ?x21684) ?x21686) 0.0)))))))))))))))))
(assert
 (let ((?x21731 (* l_0_10_43 l_0_10_43)))
 (let ((?x21729 (* l_0_10_42 l_0_10_42)))
 (let ((?x21727 (* l_0_10_41 l_0_10_41)))
 (let ((?x21725 (* l_0_10_40 l_0_10_40)))
 (let ((?x21723 (* l_0_10_39 l_0_10_39)))
 (let ((?x21721 (* l_0_10_15 l_0_10_15)))
 (let ((?x21719 (* l_0_10_14 l_0_10_14)))
 (let ((?x21717 (* l_0_10_13 l_0_10_13)))
 (let ((?x15380 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21717) ?x21719)))
 (= (- (- (- (- (- (+ ?x15380 ?x21721) ?x21723) ?x21725) ?x21727) ?x21729) ?x21731) 0.0)))))))))))
(assert
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21777 (* ?x21776 l_0_10_48)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21774 (* ?x21773 l_0_10_47)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21771 (* ?x21770 l_0_10_46)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21768 (* ?x21767 l_0_10_45)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21765 (* ?x21764 l_0_10_44)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21762 (* ?x21761 l_0_10_20)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21759 (* ?x21758 l_0_10_19)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21756 (* ?x14210 l_0_10_18)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21754 (* ?x21398 l_0_10_17)))
 (let ((?x15456 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x21754) ?x21756) ?x21759) ?x21762)))
 (= (- (- (- (- (- ?x15456 ?x21765) ?x21768) ?x21771) ?x21774) ?x21777) 0.0)))))))))))))))))))))
(assert
 (let ((?x21502 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x21499 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21819 (* ?x21776 l_0_10_54)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21817 (* ?x21773 l_0_10_53)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21815 (* ?x21770 l_0_10_52)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21813 (* ?x21767 l_0_10_51)))
 (let ((?x21496 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21811 (* ?x21764 l_0_10_50)))
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21493 (* ?x21492 l_0_10_37)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21490 (* ?x21489 l_0_10_36)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21487 (* ?x21486 l_0_10_35)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21805 (* ?x21761 l_0_10_26)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21803 (* ?x21758 l_0_10_25)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21801 (* ?x14210 l_0_10_24)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21799 (* ?x21398 l_0_10_23)))
 (let ((?x6712 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x21799) ?x21801) ?x21803) ?x21805)))
 (let ((?x15125 (- (- (+ (- (- (- (- ?x6712 ?x21487) ?x21490) ?x21493) ?x21811) ?x21496) ?x21813) ?x21815)))
 (= (+ (+ (- (- ?x15125 ?x21817) ?x21819) ?x21499) ?x21502) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x21855 (* l_0_10_49 l_0_10_49)))
 (let ((?x21853 (* l_0_10_48 l_0_10_48)))
 (let ((?x21851 (* l_0_10_47 l_0_10_47)))
 (let ((?x21849 (* l_0_10_46 l_0_10_46)))
 (let ((?x21847 (* l_0_10_45 l_0_10_45)))
 (let ((?x21845 (* l_0_10_44 l_0_10_44)))
 (let ((?x21843 (* l_0_10_21 l_0_10_21)))
 (let ((?x21841 (* l_0_10_20 l_0_10_20)))
 (let ((?x21839 (* l_0_10_19 l_0_10_19)))
 (let ((?x14647 (* l_0_10_18 l_0_10_18)))
 (let ((?x15635 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x14647) ?x21839)))
 (let ((?x6732 (- (- (- (- (- (+ (+ ?x15635 ?x21841) ?x21843) ?x21845) ?x21847) ?x21849) ?x21851) ?x21853)))
 (= (- ?x6732 ?x21855) 0.0))))))))))))))
(assert
 (let ((?x21908 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21905 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21902 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21899 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21896 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21893 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21890 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21887 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21884 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21881 (* ?x14273 l_0_10_24)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21879 (* ?x14148 l_0_10_23)))
 (let ((?x15729 (+ (+ (+ (+ (* (* 2.0 l_0_10_16) l_0_10_22) ?x21879) ?x21881) ?x21884) ?x21887)))
 (let ((?x6536 (- (- (- (- (- (- (+ ?x15729 ?x21890) ?x21893) ?x21896) ?x21899) ?x21902) ?x21905) ?x21908)))
 (= ?x6536 0.0)))))))))))))))))
(assert
 (let ((?x21975 (* l_0_10_56 l_0_10_56)))
 (let ((?x21973 (* l_0_10_55 l_0_10_55)))
 (let ((?x21971 (* l_0_10_54 l_0_10_54)))
 (let ((?x21969 (* l_0_10_53 l_0_10_53)))
 (let ((?x21967 (* l_0_10_52 l_0_10_52)))
 (let ((?x21965 (* l_0_10_51 l_0_10_51)))
 (let ((?x21963 (* l_0_10_50 l_0_10_50)))
 (let ((?x21961 (* l_0_10_28 l_0_10_28)))
 (let ((?x21959 (* l_0_10_27 l_0_10_27)))
 (let ((?x21957 (* l_0_10_26 l_0_10_26)))
 (let ((?x21946 (* l_0_10_25 l_0_10_25)))
 (let ((?x21943 (* l_0_10_24 l_0_10_24)))
 (let ((?x6935 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21943) ?x21946)))
 (let ((?x6950 (- (- (- (- (+ (+ (+ ?x6935 ?x21957) ?x21959) ?x21961) ?x21963) ?x21965) ?x21967) ?x21969)))
 (= (- (- (- ?x6950 ?x21971) ?x21973) ?x21975) 0.0))))))))))))))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21283 (* ?x21282 l_0_10_30)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_2) ?x21283) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21289 (* ?x21282 l_0_10_32)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_4) ?x21289) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21299 (* ?x21282 l_0_10_35)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_7) ?x21299) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21309 (* ?x21282 l_0_10_39)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_11) ?x21309) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21319 (* ?x21282 l_0_10_44)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_16) ?x21319) 0.0))))
(assert
 (let ((?x21282 (* 2.0 l_0_10_29)))
 (let ((?x21329 (* ?x21282 l_0_10_50)))
 (= (- (* (* 2.0 l_0_10_1) l_0_10_22) ?x21329) 0.0))))
(assert
 (let ((?x21348 (* l_0_10_31 l_0_10_31)))
 (let ((?x21346 (* l_0_10_30 l_0_10_30)))
 (let ((?x14838 (- (- (+ (* l_0_10_2 l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x21346) ?x21348)))
 (= ?x14838 0.0)))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21370 (* ?x21369 l_0_10_33)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21367 (* ?x21366 l_0_10_32)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21364 (* ?x21363 l_0_10_5)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_4) ?x21364) ?x21367) ?x21370) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21389 (* ?x21369 l_0_10_36)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21387 (* ?x21366 l_0_10_35)))
 (let ((?x21363 (* 2.0 l_0_10_3)))
 (let ((?x21385 (* ?x21363 l_0_10_8)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x21385) ?x21387) ?x21389) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21408 (* ?x21369 l_0_10_40)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21406 (* ?x21366 l_0_10_39)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21404 (* ?x21398 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x21404) ?x21406) ?x21408) 0.0))))))))
(assert
 (let ((?x21369 (* 2.0 l_0_10_31)))
 (let ((?x21446 (* ?x21369 l_0_10_51)))
 (let ((?x21366 (* 2.0 l_0_10_30)))
 (let ((?x21444 (* ?x21366 l_0_10_50)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21437 (* ?x21436 l_0_10_3)))
 (= (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_22) ?x21437) ?x21444) ?x21446) 0.0))))))))
(assert
 (let ((?x21470 (* l_0_10_6 l_0_10_6)))
 (let ((?x21468 (* l_0_10_5 l_0_10_5)))
 (let ((?x21466 (* l_0_10_4 l_0_10_4)))
 (let ((?x21464 (* l_0_10_34 l_0_10_34)))
 (let ((?x14869 (- (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x21464)))
 (= (+ (+ (+ ?x14869 ?x21466) ?x21468) ?x21470) 0.0)))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21522 (* ?x21492 l_0_10_41)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21520 (* ?x21489 l_0_10_40)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x14208 (* ?x21486 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14204 (* ?x14210 l_0_10_6)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14203 (* ?x21398 l_0_10_5)))
 (let ((?x14969 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x14203) ?x14204) ?x14208) ?x21520)))
 (= (- ?x14969 ?x21522) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21540 (* ?x21492 l_0_10_46)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21538 (* ?x21489 l_0_10_45)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21536 (* ?x21486 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21534 (* ?x14273 l_0_10_6)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x14326 (* ?x14148 l_0_10_5)))
 (let ((?x15041 (- (- (+ (+ (* (* 2.0 l_0_10_16) l_0_10_4) ?x14326) ?x21534) ?x21536) ?x21538)))
 (= (- ?x15041 ?x21540) 0.0)))))))))))))
(assert
 (let ((?x21492 (* 2.0 l_0_10_34)))
 (let ((?x21567 (* ?x21492 l_0_10_52)))
 (let ((?x21489 (* 2.0 l_0_10_33)))
 (let ((?x21565 (* ?x21489 l_0_10_51)))
 (let ((?x21486 (* 2.0 l_0_10_32)))
 (let ((?x21563 (* ?x21486 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21561 (* ?x21560 l_0_10_6)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21552 (* ?x21436 l_0_10_5)))
 (let ((?x6273 (- (- (+ (+ (* (* 2.0 l_0_10_22) l_0_10_4) ?x21552) ?x21561) ?x21563) ?x21565)))
 (= (- ?x6273 ?x21567) 0.0)))))))))))))
(assert
 (let ((?x21603 (* l_0_10_9 l_0_10_9)))
 (let ((?x21601 (* l_0_10_8 l_0_10_8)))
 (let ((?x21599 (* l_0_10_7 l_0_10_7)))
 (let ((?x21597 (* l_0_10_38 l_0_10_38)))
 (let ((?x21595 (* l_0_10_37 l_0_10_37)))
 (let ((?x21593 (* l_0_10_36 l_0_10_36)))
 (let ((?x15072 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_35 l_0_10_35)) ?x21593) ?x21595)))
 (= (+ (+ (+ (- ?x15072 ?x21597) ?x21599) ?x21601) ?x21603) 0.0)))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21621 (* ?x21620 l_0_10_42)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21618 (* ?x21617 l_0_10_41)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21615 (* ?x14366 l_0_10_40)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x14362 (* ?x14368 l_0_10_39)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x14361 (* ?x14210 l_0_10_9)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x14349 (* ?x21398 l_0_10_8)))
 (let ((?x14339 (* 2.0 l_0_10_11)))
 (let ((?x14341 (* ?x14339 l_0_10_7)))
 (let ((?x22029 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x14341) ?x14349) ?x14361) ?x14362)))
 (= (- (- (- ?x22029 ?x21615) ?x21618) ?x21621) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21662 (* ?x21620 l_0_10_47)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21660 (* ?x21617 l_0_10_46)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21658 (* ?x14366 l_0_10_45)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21656 (* ?x14368 l_0_10_44)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21654 (* ?x14273 l_0_10_9)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21645 (* ?x14148 l_0_10_8)))
 (let ((?x14190 (* 2.0 l_0_10_16)))
 (let ((?x21641 (* ?x14190 l_0_10_7)))
 (let ((?x15197 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_19) ?x21641) ?x21645) ?x21654) ?x21656)))
 (= (- (- (- ?x15197 ?x21658) ?x21660) ?x21662) 0.0)))))))))))))))))
(assert
 (let ((?x21620 (* 2.0 l_0_10_38)))
 (let ((?x21686 (* ?x21620 l_0_10_53)))
 (let ((?x21617 (* 2.0 l_0_10_37)))
 (let ((?x21684 (* ?x21617 l_0_10_52)))
 (let ((?x14366 (* 2.0 l_0_10_36)))
 (let ((?x21682 (* ?x14366 l_0_10_51)))
 (let ((?x14368 (* 2.0 l_0_10_35)))
 (let ((?x21680 (* ?x14368 l_0_10_50)))
 (let ((?x21560 (* 2.0 l_0_10_24)))
 (let ((?x21678 (* ?x21560 l_0_10_9)))
 (let ((?x21436 (* 2.0 l_0_10_23)))
 (let ((?x21676 (* ?x21436 l_0_10_8)))
 (let ((?x14439 (* 2.0 l_0_10_22)))
 (let ((?x14442 (* ?x14439 l_0_10_7)))
 (let ((?x15301 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_25) ?x14442) ?x21676) ?x21678) ?x21680)))
 (= (- (- (- ?x15301 ?x21682) ?x21684) ?x21686) 0.0)))))))))))))))))
(assert
 (let ((?x21731 (* l_0_10_43 l_0_10_43)))
 (let ((?x21729 (* l_0_10_42 l_0_10_42)))
 (let ((?x21727 (* l_0_10_41 l_0_10_41)))
 (let ((?x21725 (* l_0_10_40 l_0_10_40)))
 (let ((?x21723 (* l_0_10_39 l_0_10_39)))
 (let ((?x21721 (* l_0_10_15 l_0_10_15)))
 (let ((?x21719 (* l_0_10_14 l_0_10_14)))
 (let ((?x21717 (* l_0_10_13 l_0_10_13)))
 (let ((?x15380 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x21717) ?x21719)))
 (= (- (- (- (- (- (+ ?x15380 ?x21721) ?x21723) ?x21725) ?x21727) ?x21729) ?x21731) 0.0)))))))))))
(assert
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21777 (* ?x21776 l_0_10_48)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21774 (* ?x21773 l_0_10_47)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21771 (* ?x21770 l_0_10_46)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21768 (* ?x21767 l_0_10_45)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21765 (* ?x21764 l_0_10_44)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21762 (* ?x21761 l_0_10_20)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21759 (* ?x21758 l_0_10_19)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21756 (* ?x14210 l_0_10_18)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21754 (* ?x21398 l_0_10_17)))
 (let ((?x15456 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_16) ?x21754) ?x21756) ?x21759) ?x21762)))
 (= (- (- (- (- (- ?x15456 ?x21765) ?x21768) ?x21771) ?x21774) ?x21777) 0.0)))))))))))))))))))))
(assert
 (let ((?x21776 (* 2.0 l_0_10_43)))
 (let ((?x21819 (* ?x21776 l_0_10_54)))
 (let ((?x21773 (* 2.0 l_0_10_42)))
 (let ((?x21817 (* ?x21773 l_0_10_53)))
 (let ((?x21770 (* 2.0 l_0_10_41)))
 (let ((?x21815 (* ?x21770 l_0_10_52)))
 (let ((?x21767 (* 2.0 l_0_10_40)))
 (let ((?x21813 (* ?x21767 l_0_10_51)))
 (let ((?x21764 (* 2.0 l_0_10_39)))
 (let ((?x21811 (* ?x21764 l_0_10_50)))
 (let ((?x21761 (* 2.0 l_0_10_15)))
 (let ((?x21805 (* ?x21761 l_0_10_26)))
 (let ((?x21758 (* 2.0 l_0_10_14)))
 (let ((?x21803 (* ?x21758 l_0_10_25)))
 (let ((?x14210 (* 2.0 l_0_10_13)))
 (let ((?x21801 (* ?x14210 l_0_10_24)))
 (let ((?x21398 (* 2.0 l_0_10_12)))
 (let ((?x21799 (* ?x21398 l_0_10_23)))
 (let ((?x6712 (+ (+ (+ (+ (* (* 2.0 l_0_10_11) l_0_10_22) ?x21799) ?x21801) ?x21803) ?x21805)))
 (= (- (- (- (- (- ?x6712 ?x21811) ?x21813) ?x21815) ?x21817) ?x21819) 0.0)))))))))))))))))))))
(assert
 (let ((?x21855 (* l_0_10_49 l_0_10_49)))
 (let ((?x21853 (* l_0_10_48 l_0_10_48)))
 (let ((?x21851 (* l_0_10_47 l_0_10_47)))
 (let ((?x21849 (* l_0_10_46 l_0_10_46)))
 (let ((?x21847 (* l_0_10_45 l_0_10_45)))
 (let ((?x21845 (* l_0_10_44 l_0_10_44)))
 (let ((?x21843 (* l_0_10_21 l_0_10_21)))
 (let ((?x21841 (* l_0_10_20 l_0_10_20)))
 (let ((?x21839 (* l_0_10_19 l_0_10_19)))
 (let ((?x14647 (* l_0_10_18 l_0_10_18)))
 (let ((?x15635 (+ (+ (+ (* l_0_10_16 l_0_10_16) (* l_0_10_17 l_0_10_17)) ?x14647) ?x21839)))
 (let ((?x6732 (- (- (- (- (- (+ (+ ?x15635 ?x21841) ?x21843) ?x21845) ?x21847) ?x21849) ?x21851) ?x21853)))
 (= (- ?x6732 ?x21855) 0.0))))))))))))))
(assert
 (let ((?x21908 (* (* 2.0 l_0_10_49) l_0_10_55)))
 (let ((?x21905 (* (* 2.0 l_0_10_48) l_0_10_54)))
 (let ((?x21902 (* (* 2.0 l_0_10_47) l_0_10_53)))
 (let ((?x21899 (* (* 2.0 l_0_10_46) l_0_10_52)))
 (let ((?x21896 (* (* 2.0 l_0_10_45) l_0_10_51)))
 (let ((?x21893 (* (* 2.0 l_0_10_44) l_0_10_50)))
 (let ((?x21890 (* (* 2.0 l_0_10_21) l_0_10_27)))
 (let ((?x21887 (* (* 2.0 l_0_10_20) l_0_10_26)))
 (let ((?x21884 (* (* 2.0 l_0_10_19) l_0_10_25)))
 (let ((?x14273 (* 2.0 l_0_10_18)))
 (let ((?x21881 (* ?x14273 l_0_10_24)))
 (let ((?x14148 (* 2.0 l_0_10_17)))
 (let ((?x21879 (* ?x14148 l_0_10_23)))
 (let ((?x15729 (+ (+ (+ (+ (* (* 2.0 l_0_10_16) l_0_10_22) ?x21879) ?x21881) ?x21884) ?x21887)))
 (let ((?x6536 (- (- (- (- (- (- (+ ?x15729 ?x21890) ?x21893) ?x21896) ?x21899) ?x21902) ?x21905) ?x21908)))
 (= ?x6536 0.0)))))))))))))))))
(assert
 (let ((?x21975 (* l_0_10_56 l_0_10_56)))
 (let ((?x21973 (* l_0_10_55 l_0_10_55)))
 (let ((?x21971 (* l_0_10_54 l_0_10_54)))
 (let ((?x21969 (* l_0_10_53 l_0_10_53)))
 (let ((?x21967 (* l_0_10_52 l_0_10_52)))
 (let ((?x21965 (* l_0_10_51 l_0_10_51)))
 (let ((?x21963 (* l_0_10_50 l_0_10_50)))
 (let ((?x21961 (* l_0_10_28 l_0_10_28)))
 (let ((?x21959 (* l_0_10_27 l_0_10_27)))
 (let ((?x21957 (* l_0_10_26 l_0_10_26)))
 (let ((?x21946 (* l_0_10_25 l_0_10_25)))
 (let ((?x21943 (* l_0_10_24 l_0_10_24)))
 (let ((?x6935 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x21943) ?x21946)))
 (let ((?x6950 (- (- (- (- (+ (+ (+ ?x6935 ?x21957) ?x21959) ?x21961) ?x21963) ?x21965) ?x21967) ?x21969)))
 (= (- (- (- ?x6950 ?x21971) ?x21973) ?x21975) 0.0))))))))))))))))
(assert
 (let ((?x22058 (* l_0_10_85 l_0_10_85)))
 (let ((?x22057 (+ (* (- l_0_10_113) l_0_10_113) (* 1.0 (* l_0_10_57 l_0_10_57)))))
 (= (- ?x22057 ?x22058) 0.0))))
(assert
 (let ((?x22073 (+ (* (* (- 2.0) l_0_10_113) l_0_10_114) (* (* 2.0 l_0_10_57) l_0_10_58))))
 (= (- ?x22073 (* (* 2.0 l_0_10_85) l_0_10_86)) 0.0)))
(assert
 (let ((?x22095 (+ (* (* (- 2.0) l_0_10_113) l_0_10_116) (* (* 2.0 l_0_10_57) l_0_10_60))))
 (= (- ?x22095 (* (* 2.0 l_0_10_85) l_0_10_88)) 0.0)))
(assert
 (let ((?x22116 (+ (* (* (- 2.0) l_0_10_113) l_0_10_119) (* (* 2.0 l_0_10_57) l_0_10_63))))
 (= (- ?x22116 (* (* 2.0 l_0_10_85) l_0_10_91)) 0.0)))
(assert
 (let ((?x22137 (+ (* (* (- 2.0) l_0_10_113) l_0_10_123) (* (* 2.0 l_0_10_57) l_0_10_67))))
 (= (- ?x22137 (* (* 2.0 l_0_10_85) l_0_10_95)) 0.0)))
(assert
 (let ((?x22160 (- (* (* (- 2.0) l_0_10_100) l_0_10_85) (* (* 2.0 l_0_10_113) l_0_10_128))))
 (= (+ ?x22160 (* (* 2.0 l_0_10_57) l_0_10_72)) 0.0)))
(assert
 (let ((?x22180 (- (* (* (- 2.0) l_0_10_106) l_0_10_85) (* (* 2.0 l_0_10_113) l_0_10_134))))
 (= (+ ?x22180 (* (* 2.0 l_0_10_57) l_0_10_78)) 0.0)))
(assert
 (let ((?x22209 (* l_0_10_87 l_0_10_87)))
 (let ((?x22207 (* l_0_10_86 l_0_10_86)))
 (let ((?x22203 (+ (- (* (- l_0_10_114) l_0_10_114) (* l_0_10_115 l_0_10_115)) (* 1.0 (* l_0_10_58 l_0_10_58)))))
 (= (- (- (+ ?x22203 (* 1.0 (* l_0_10_59 l_0_10_59))) ?x22207) ?x22209) 0.0)))))
(assert
 (let ((?x22232 (- (* (* (- 2.0) l_0_10_114) l_0_10_116) (* (* 2.0 l_0_10_115) l_0_10_117))))
 (let ((?x22236 (+ (+ ?x22232 (* (* 2.0 l_0_10_58) l_0_10_60)) (* (* 2.0 l_0_10_59) l_0_10_61))))
 (let ((?x22242 (- (- ?x22236 (* (* 2.0 l_0_10_86) l_0_10_88)) (* (* 2.0 l_0_10_87) l_0_10_89))))
 (= ?x22242 0.0)))))
(assert
 (let ((?x22276 (- (* (* (- 2.0) l_0_10_114) l_0_10_119) (* (* 2.0 l_0_10_115) l_0_10_120))))
 (let ((?x22280 (+ (+ ?x22276 (* (* 2.0 l_0_10_58) l_0_10_63)) (* (* 2.0 l_0_10_59) l_0_10_64))))
 (let ((?x22284 (- (- ?x22280 (* (* 2.0 l_0_10_86) l_0_10_91)) (* (* 2.0 l_0_10_87) l_0_10_92))))
 (= ?x22284 0.0)))))
(assert
 (let ((?x22318 (- (* (* (- 2.0) l_0_10_114) l_0_10_123) (* (* 2.0 l_0_10_115) l_0_10_124))))
 (let ((?x22322 (+ (+ ?x22318 (* (* 2.0 l_0_10_58) l_0_10_67)) (* (* 2.0 l_0_10_59) l_0_10_68))))
 (let ((?x22326 (- (- ?x22322 (* (* 2.0 l_0_10_86) l_0_10_95)) (* (* 2.0 l_0_10_87) l_0_10_96))))
 (= ?x22326 0.0)))))
(assert
 (let ((?x22360 (- (* (* (- 2.0) l_0_10_106) l_0_10_86) (* (* 2.0 l_0_10_107) l_0_10_87))))
 (let ((?x22364 (- (- ?x22360 (* (* 2.0 l_0_10_114) l_0_10_134)) (* (* 2.0 l_0_10_115) l_0_10_135))))
 (let ((?x22368 (+ (+ ?x22364 (* (* 2.0 l_0_10_58) l_0_10_78)) (* (* 2.0 l_0_10_59) l_0_10_79))))
 (= ?x22368 0.0)))))
(assert
 (let ((?x22416 (* l_0_10_90 l_0_10_90)))
 (let ((?x22414 (* l_0_10_89 l_0_10_89)))
 (let ((?x22412 (* l_0_10_88 l_0_10_88)))
 (let ((?x22401 (* l_0_10_118 l_0_10_118)))
 (let ((?x22402 (- (- (* (- l_0_10_116) l_0_10_116) (* l_0_10_117 l_0_10_117)) ?x22401)))
 (let ((?x22408 (+ (+ ?x22402 (* 1.0 (* l_0_10_60 l_0_10_60))) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (let ((?x22417 (- (- (- (+ ?x22408 (* 1.0 (* l_0_10_62 l_0_10_62))) ?x22412) ?x22414) ?x22416)))
 (= ?x22417 0.0)))))))))
(assert
 (let ((?x22446 (- (* (* (- 2.0) l_0_10_116) l_0_10_123) (* (* 2.0 l_0_10_117) l_0_10_124))))
 (let ((?x22450 (+ (- ?x22446 (* (* 2.0 l_0_10_118) l_0_10_125)) (* (* 2.0 l_0_10_60) l_0_10_67))))
 (let ((?x22454 (+ (+ ?x22450 (* (* 2.0 l_0_10_61) l_0_10_68)) (* (* 2.0 l_0_10_62) l_0_10_69))))
 (let ((?x22458 (- (- ?x22454 (* (* 2.0 l_0_10_88) l_0_10_95)) (* (* 2.0 l_0_10_89) l_0_10_96))))
 (= (- ?x22458 (* (* 2.0 l_0_10_90) l_0_10_97)) 0.0))))))
(assert
 (let ((?x22509 (- (* (* (- 2.0) l_0_10_100) l_0_10_88) (* (* 2.0 l_0_10_101) l_0_10_89))))
 (let ((?x22514 (- (- ?x22509 (* (* 2.0 l_0_10_102) l_0_10_90)) (* (* 2.0 l_0_10_116) l_0_10_128))))
 (let ((?x22518 (- (- ?x22514 (* (* 2.0 l_0_10_117) l_0_10_129)) (* (* 2.0 l_0_10_118) l_0_10_130))))
 (let ((?x22522 (+ (+ ?x22518 (* (* 2.0 l_0_10_60) l_0_10_72)) (* (* 2.0 l_0_10_61) l_0_10_73))))
 (= (+ ?x22522 (* (* 2.0 l_0_10_62) l_0_10_74)) 0.0))))))
(assert
 (let ((?x22563 (- (* (* (- 2.0) l_0_10_106) l_0_10_88) (* (* 2.0 l_0_10_107) l_0_10_89))))
 (let ((?x22573 (- (- ?x22563 (* (* 2.0 l_0_10_108) l_0_10_90)) (* (* 2.0 l_0_10_116) l_0_10_134))))
 (let ((?x22577 (- (- ?x22573 (* (* 2.0 l_0_10_117) l_0_10_135)) (* (* 2.0 l_0_10_118) l_0_10_136))))
 (let ((?x22581 (+ (+ ?x22577 (* (* 2.0 l_0_10_60) l_0_10_78)) (* (* 2.0 l_0_10_61) l_0_10_79))))
 (= (+ ?x22581 (* (* 2.0 l_0_10_62) l_0_10_80)) 0.0))))))
(assert
 (let ((?x22652 (* l_0_10_94 l_0_10_94)))
 (let ((?x22650 (* l_0_10_93 l_0_10_93)))
 (let ((?x22648 (* l_0_10_92 l_0_10_92)))
 (let ((?x22646 (* l_0_10_91 l_0_10_91)))
 (let ((?x22632 (* l_0_10_122 l_0_10_122)))
 (let ((?x22630 (* l_0_10_121 l_0_10_121)))
 (let ((?x22631 (- (- (* (- l_0_10_119) l_0_10_119) (* l_0_10_120 l_0_10_120)) ?x22630)))
 (let ((?x22639 (+ (+ (- ?x22631 ?x22632) (* 1.0 (* l_0_10_63 l_0_10_63))) (* 1.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x22645 (+ (+ ?x22639 (* 1.0 (* l_0_10_65 l_0_10_65))) (* 1.0 (* l_0_10_66 l_0_10_66)))))
 (= (- (- (- (- ?x22645 ?x22646) ?x22648) ?x22650) ?x22652) 0.0)))))))))))
(assert
 (let ((?x22690 (- (* (* (- 2.0) l_0_10_119) l_0_10_123) (* (* 2.0 l_0_10_120) l_0_10_124))))
 (let ((?x22696 (- (- ?x22690 (* (* 2.0 l_0_10_121) l_0_10_125)) (* (* 2.0 l_0_10_122) l_0_10_126))))
 (let ((?x22702 (+ (+ ?x22696 (* (* 2.0 l_0_10_63) l_0_10_67)) (* (* 2.0 l_0_10_64) l_0_10_68))))
 (let ((?x22708 (+ (+ ?x22702 (* (* 2.0 l_0_10_65) l_0_10_69)) (* (* 2.0 l_0_10_66) l_0_10_70))))
 (let ((?x22714 (- (- ?x22708 (* (* 2.0 l_0_10_91) l_0_10_95)) (* (* 2.0 l_0_10_92) l_0_10_96))))
 (let ((?x22720 (- (- ?x22714 (* (* 2.0 l_0_10_93) l_0_10_97)) (* (* 2.0 l_0_10_94) l_0_10_98))))
 (= ?x22720 0.0))))))))
(assert
 (let ((?x22784 (- (* (* (- 2.0) l_0_10_100) l_0_10_91) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x22789 (- (- ?x22784 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_103) l_0_10_94))))
 (let ((?x22794 (- (- ?x22789 (* (* 2.0 l_0_10_119) l_0_10_128)) (* (* 2.0 l_0_10_120) l_0_10_129))))
 (let ((?x22798 (- (- ?x22794 (* (* 2.0 l_0_10_121) l_0_10_130)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x22802 (+ (+ ?x22798 (* (* 2.0 l_0_10_63) l_0_10_72)) (* (* 2.0 l_0_10_64) l_0_10_73))))
 (let ((?x22806 (+ (+ ?x22802 (* (* 2.0 l_0_10_65) l_0_10_74)) (* (* 2.0 l_0_10_66) l_0_10_75))))
 (= ?x22806 0.0))))))))
(assert
 (let ((?x22853 (- (* (* (- 2.0) l_0_10_106) l_0_10_91) (* (* 2.0 l_0_10_107) l_0_10_92))))
 (let ((?x22865 (- (- ?x22853 (* (* 2.0 l_0_10_108) l_0_10_93)) (* (* 2.0 l_0_10_109) l_0_10_94))))
 (let ((?x22869 (- (- ?x22865 (* (* 2.0 l_0_10_119) l_0_10_134)) (* (* 2.0 l_0_10_120) l_0_10_135))))
 (let ((?x22873 (- (- ?x22869 (* (* 2.0 l_0_10_121) l_0_10_136)) (* (* 2.0 l_0_10_122) l_0_10_137))))
 (let ((?x22877 (+ (+ ?x22873 (* (* 2.0 l_0_10_63) l_0_10_78)) (* (* 2.0 l_0_10_64) l_0_10_79))))
 (let ((?x22881 (+ (+ ?x22877 (* (* 2.0 l_0_10_65) l_0_10_80)) (* (* 2.0 l_0_10_66) l_0_10_81))))
 (= ?x22881 0.0))))))))
(assert
 (let ((?x22971 (* l_0_10_99 l_0_10_99)))
 (let ((?x22969 (* l_0_10_98 l_0_10_98)))
 (let ((?x22967 (* l_0_10_97 l_0_10_97)))
 (let ((?x22965 (* l_0_10_96 l_0_10_96)))
 (let ((?x22963 (* l_0_10_95 l_0_10_95)))
 (let ((?x22946 (* l_0_10_127 l_0_10_127)))
 (let ((?x22944 (* l_0_10_126 l_0_10_126)))
 (let ((?x22935 (* l_0_10_125 l_0_10_125)))
 (let ((?x22943 (- (- (* (- l_0_10_123) l_0_10_123) (* l_0_10_124 l_0_10_124)) ?x22935)))
 (let ((?x22953 (+ (+ (- (- ?x22943 ?x22944) ?x22946) (* 1.0 (* l_0_10_67 l_0_10_67))) (* 1.0 (* l_0_10_68 l_0_10_68)))))
 (let ((?x22959 (+ (+ ?x22953 (* 1.0 (* l_0_10_69 l_0_10_69))) (* 1.0 (* l_0_10_70 l_0_10_70)))))
 (let ((?x22968 (- (- (- (+ ?x22959 (* 1.0 (* l_0_10_71 l_0_10_71))) ?x22963) ?x22965) ?x22967)))
 (= (- (- ?x22968 ?x22969) ?x22971) 0.0))))))))))))))
(assert
 (let ((?x23014 (- (* (* (- 2.0) l_0_10_100) l_0_10_95) (* (* 2.0 l_0_10_101) l_0_10_96))))
 (let ((?x23018 (- (- ?x23014 (* (* 2.0 l_0_10_102) l_0_10_97)) (* (* 2.0 l_0_10_103) l_0_10_98))))
 (let ((?x23023 (- (- ?x23018 (* (* 2.0 l_0_10_104) l_0_10_99)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x23027 (- (- ?x23023 (* (* 2.0 l_0_10_124) l_0_10_129)) (* (* 2.0 l_0_10_125) l_0_10_130))))
 (let ((?x23031 (- (- ?x23027 (* (* 2.0 l_0_10_126) l_0_10_131)) (* (* 2.0 l_0_10_127) l_0_10_132))))
 (let ((?x23035 (+ (+ ?x23031 (* (* 2.0 l_0_10_67) l_0_10_72)) (* (* 2.0 l_0_10_68) l_0_10_73))))
 (let ((?x23039 (+ (+ ?x23035 (* (* 2.0 l_0_10_69) l_0_10_74)) (* (* 2.0 l_0_10_70) l_0_10_75))))
 (= (+ ?x23039 (* (* 2.0 l_0_10_71) l_0_10_76)) 0.0)))))))))
(assert
 (let ((?x23127 (* l_0_10_133 l_0_10_133)))
 (let ((?x23125 (* l_0_10_132 l_0_10_132)))
 (let ((?x23123 (* l_0_10_131 l_0_10_131)))
 (let ((?x23121 (* l_0_10_130 l_0_10_130)))
 (let ((?x23119 (* l_0_10_129 l_0_10_129)))
 (let ((?x23117 (* l_0_10_128 l_0_10_128)))
 (let ((?x23115 (* l_0_10_105 l_0_10_105)))
 (let ((?x23113 (* l_0_10_104 l_0_10_104)))
 (let ((?x23111 (* l_0_10_103 l_0_10_103)))
 (let ((?x23109 (* l_0_10_102 l_0_10_102)))
 (let ((?x23110 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_101 l_0_10_101)) ?x23109)))
 (let ((?x23124 (- (- (- (- (- (- (- ?x23110 ?x23111) ?x23113) ?x23115) ?x23117) ?x23119) ?x23121) ?x23123)))
 (let ((?x23134 (+ (+ (- (- ?x23124 ?x23125) ?x23127) (* 1.0 (* l_0_10_72 l_0_10_72))) (* 1.0 (* l_0_10_73 l_0_10_73)))))
 (let ((?x23140 (+ (+ ?x23134 (* 1.0 (* l_0_10_74 l_0_10_74))) (* 1.0 (* l_0_10_75 l_0_10_75)))))
 (let ((?x23146 (+ (+ ?x23140 (* 1.0 (* l_0_10_76 l_0_10_76))) (* 1.0 (* l_0_10_77 l_0_10_77)))))
 (= ?x23146 0.0)))))))))))))))))
(assert
 (let ((?x23179 (- (* (* (- 2.0) l_0_10_100) l_0_10_106) (* (* 2.0 l_0_10_101) l_0_10_107))))
 (let ((?x23183 (- (- ?x23179 (* (* 2.0 l_0_10_102) l_0_10_108)) (* (* 2.0 l_0_10_103) l_0_10_109))))
 (let ((?x23188 (- (- ?x23183 (* (* 2.0 l_0_10_104) l_0_10_110)) (* (* 2.0 l_0_10_105) l_0_10_111))))
 (let ((?x23194 (- (- ?x23188 (* (* 2.0 l_0_10_128) l_0_10_134)) (* (* 2.0 l_0_10_129) l_0_10_135))))
 (let ((?x23200 (- (- ?x23194 (* (* 2.0 l_0_10_130) l_0_10_136)) (* (* 2.0 l_0_10_131) l_0_10_137))))
 (let ((?x23206 (- (- ?x23200 (* (* 2.0 l_0_10_132) l_0_10_138)) (* (* 2.0 l_0_10_133) l_0_10_139))))
 (let ((?x23212 (+ (+ ?x23206 (* (* 2.0 l_0_10_72) l_0_10_78)) (* (* 2.0 l_0_10_73) l_0_10_79))))
 (let ((?x23218 (+ (+ ?x23212 (* (* 2.0 l_0_10_74) l_0_10_80)) (* (* 2.0 l_0_10_75) l_0_10_81))))
 (let ((?x23224 (+ (+ ?x23218 (* (* 2.0 l_0_10_76) l_0_10_82)) (* (* 2.0 l_0_10_77) l_0_10_83))))
 (= ?x23224 0.0)))))))))))
(assert
 (let ((?x23328 (* l_0_10_140 l_0_10_140)))
 (let ((?x23326 (* l_0_10_139 l_0_10_139)))
 (let ((?x23324 (* l_0_10_138 l_0_10_138)))
 (let ((?x23322 (* l_0_10_137 l_0_10_137)))
 (let ((?x23320 (* l_0_10_136 l_0_10_136)))
 (let ((?x23318 (* l_0_10_135 l_0_10_135)))
 (let ((?x23316 (* l_0_10_134 l_0_10_134)))
 (let ((?x23314 (* l_0_10_112 l_0_10_112)))
 (let ((?x23312 (* l_0_10_111 l_0_10_111)))
 (let ((?x23310 (* l_0_10_110 l_0_10_110)))
 (let ((?x23308 (* l_0_10_109 l_0_10_109)))
 (let ((?x23306 (* l_0_10_108 l_0_10_108)))
 (let ((?x23307 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_107 l_0_10_107)) ?x23306)))
 (let ((?x23321 (- (- (- (- (- (- (- ?x23307 ?x23308) ?x23310) ?x23312) ?x23314) ?x23316) ?x23318) ?x23320)))
 (let ((?x23332 (+ (- (- (- (- ?x23321 ?x23322) ?x23324) ?x23326) ?x23328) (* 1.0 (* l_0_10_78 l_0_10_78)))))
 (let ((?x23338 (+ (+ ?x23332 (* 1.0 (* l_0_10_79 l_0_10_79))) (* 1.0 (* l_0_10_80 l_0_10_80)))))
 (let ((?x23344 (+ (+ ?x23338 (* 1.0 (* l_0_10_81 l_0_10_81))) (* 1.0 (* l_0_10_82 l_0_10_82)))))
 (let ((?x23350 (+ (+ ?x23344 (* 1.0 (* l_0_10_83 l_0_10_83))) (* 1.0 (* l_0_10_84 l_0_10_84)))))
 (= ?x23350 0.0))))))))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_28 0.0))
(assert
 (>= l_0_10_29 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_34 0.0))
(assert
 (>= l_0_10_38 0.0))
(assert
 (>= l_0_10_43 0.0))
(assert
 (>= l_0_10_49 0.0))
(assert
 (>= l_0_10_56 0.0))
(assert
 (>= l_0_10_57 0.0))
(assert
 (>= l_0_10_59 0.0))
(assert
 (>= l_0_10_62 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_71 0.0))
(assert
 (>= l_0_10_77 0.0))
(assert
 (>= l_0_10_84 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_87 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_94 0.0))
(assert
 (>= l_0_10_99 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_112 0.0))
(assert
 (>= l_0_10_113 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_118 0.0))
(assert
 (>= l_0_10_122 0.0))
(assert
 (>= l_0_10_127 0.0))
(assert
 (>= l_0_10_133 0.0))
(assert
 (>= l_0_10_140 0.0))
(assert
 (let ((?x23409 (* l_0_11_29 l_0_11_29)))
 (let ((?x23405 (- (* (- l_0_11_1) l_0_11_1) (* (* 2.0 l_0_11_100) l_0_11_86))))
 (let ((?x23413 (- (+ (- ?x23405 (* (* 2.0 l_0_11_101) l_0_11_87)) ?x23409) (* (* 2.0 l_0_11_58) l_0_11_72))))
 (= (+ (- ?x23413 (* (* 2.0 l_0_11_59) l_0_11_73)) 1.0) 0.0)))))
(assert
 (let ((?x23440 (- (- (- _a_0_) (* (* 2.0 l_0_11_57) l_0_11_63)) (* (* 2.0 l_0_11_85) l_0_11_91))))
 (= ?x23440 0.0)))
(assert
 (let ((?x23409 (* l_0_11_29 l_0_11_29)))
 (let ((?x23452 (- (- (+ (- _a_1_) (* l_0_11_1 l_0_11_1)) ?x23409) (* (* 2.0 l_0_11_60) l_0_11_63))))
 (let ((?x23458 (- (- ?x23452 (* (* 2.0 l_0_11_61) l_0_11_64)) (* (* 2.0 l_0_11_62) l_0_11_65))))
 (let ((?x23464 (- (- ?x23458 (* (* 2.0 l_0_11_88) l_0_11_91)) (* (* 2.0 l_0_11_89) l_0_11_92))))
 (= (- ?x23464 (* (* 2.0 l_0_11_90) l_0_11_93)) 0.0))))))
(assert
 (let ((?x23480 (- (- (- _a_2_) (* (* 2.0 l_0_11_63) l_0_11_67)) (* (* 2.0 l_0_11_64) l_0_11_68))))
 (let ((?x23486 (- (- ?x23480 (* (* 2.0 l_0_11_65) l_0_11_69)) (* (* 2.0 l_0_11_66) l_0_11_70))))
 (let ((?x23492 (- (- ?x23486 (* (* 2.0 l_0_11_91) l_0_11_95)) (* (* 2.0 l_0_11_92) l_0_11_96))))
 (let ((?x23498 (- (- ?x23492 (* (* 2.0 l_0_11_93) l_0_11_97)) (* (* 2.0 l_0_11_94) l_0_11_98))))
 (= (- ?x23498 1.0) 0.0))))))
(assert
 (let ((?x23409 (* l_0_11_29 l_0_11_29)))
 (let ((?x16222 (- (- (* l_0_11_1 l_0_11_1) (* (* 2.0 l_0_11_106) l_0_11_95)) (* (* 2.0 l_0_11_107) l_0_11_96))))
 (let ((?x23530 (- (- ?x16222 (* (* 2.0 l_0_11_108) l_0_11_97)) (* (* 2.0 l_0_11_109) l_0_11_98))))
 (let ((?x23537 (- (- (- ?x23530 (* (* 2.0 l_0_11_110) l_0_11_99)) ?x23409) (* (* 2.0 l_0_11_67) l_0_11_78))))
 (let ((?x23543 (- (- ?x23537 (* (* 2.0 l_0_11_68) l_0_11_79)) (* (* 2.0 l_0_11_69) l_0_11_80))))
 (let ((?x23549 (- (- ?x23543 (* (* 2.0 l_0_11_70) l_0_11_81)) (* (* 2.0 l_0_11_71) l_0_11_82))))
 (= (- ?x23549 1.0) 0.0))))))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x16317 (* ?x16314 l_0_11_30)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_2) ?x16317) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23582 (* ?x16314 l_0_11_32)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_4) ?x23582) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23590 (* ?x16314 l_0_11_35)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_7) ?x23590) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23600 (* ?x16314 l_0_11_39)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_11) ?x23600) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23610 (* ?x16314 l_0_11_44)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_16) ?x23610) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23620 (* ?x16314 l_0_11_50)))
 (= (+ (* (* (- 2.0) l_0_11_1) l_0_11_22) ?x23620) 0.0))))
(assert
 (let ((?x23639 (* l_0_11_31 l_0_11_31)))
 (let ((?x23637 (* l_0_11_30 l_0_11_30)))
 (let ((?x23640 (+ (+ (- (* (- l_0_11_2) l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23637) ?x23639)))
 (= ?x23640 0.0)))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23661 (* ?x23660 l_0_11_33)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23658 (* ?x23657 l_0_11_32)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x23655 (* ?x23654 l_0_11_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_2) l_0_11_4) ?x23655) ?x23658) ?x23661) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23672 (* ?x23660 l_0_11_36)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x16364 (* ?x23657 l_0_11_35)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x16365 (* ?x23654 l_0_11_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_2) l_0_11_7) ?x16365) ?x16364) ?x23672) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23691 (* ?x23660 l_0_11_40)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23689 (* ?x23657 l_0_11_39)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23687 (* ?x23686 l_0_11_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_11) l_0_11_2) ?x23687) ?x23689) ?x23691) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23716 (* ?x23660 l_0_11_45)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23714 (* ?x23657 l_0_11_44)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23712 (* ?x23706 l_0_11_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_16) l_0_11_2) ?x23712) ?x23714) ?x23716) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23736 (* ?x23660 l_0_11_51)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23734 (* ?x23657 l_0_11_50)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23732 (* ?x23731 l_0_11_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_2) l_0_11_22) ?x23732) ?x23734) ?x23736) 0.0))))))))
(assert
 (let ((?x23763 (* l_0_11_6 l_0_11_6)))
 (let ((?x23761 (* l_0_11_5 l_0_11_5)))
 (let ((?x23759 (* l_0_11_4 l_0_11_4)))
 (let ((?x23757 (* l_0_11_34 l_0_11_34)))
 (let ((?x23760 (- (+ (+ (* l_0_11_32 l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23757) ?x23759)))
 (= (- (- ?x23760 ?x23761) ?x23763) 0.0)))))))
(assert
 (let ((?x23795 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23792 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23789 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23786 (* ?x23785 l_0_11_37)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23783 (* ?x23782 l_0_11_36)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23780 (* ?x23779 l_0_11_35)))
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23716 (* ?x23660 l_0_11_45)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23714 (* ?x23657 l_0_11_44)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23712 (* ?x23706 l_0_11_3)))
 (let ((?x23774 (* 2.0 l_0_11_16)))
 (let ((?x23775 (* ?x23774 l_0_11_2)))
 (let ((?x23790 (- (+ (+ (+ (- (- (+ ?x23775 ?x23712) ?x23714) ?x23716) ?x23780) ?x23783) ?x23786) ?x23789)))
 (= (- (- ?x23790 ?x23792) ?x23795) 0.0))))))))))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23818 (* ?x23785 l_0_11_41)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23816 (* ?x23782 l_0_11_40)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23814 (* ?x23779 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23812 (* ?x23811 l_0_11_6)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23809 (* ?x23686 l_0_11_5)))
 (let ((?x23817 (+ (+ (- (- (* (* (- 2.0) l_0_11_11) l_0_11_4) ?x23809) ?x23812) ?x23814) ?x23816)))
 (= (+ ?x23817 ?x23818) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23845 (* ?x23785 l_0_11_46)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23843 (* ?x23782 l_0_11_45)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23841 (* ?x23779 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23839 (* ?x23832 l_0_11_6)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x16494 (* ?x23706 l_0_11_5)))
 (let ((?x23844 (+ (+ (- (- (* (* (- 2.0) l_0_11_16) l_0_11_4) ?x16494) ?x23839) ?x23841) ?x23843)))
 (= (+ ?x23844 ?x23845) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23867 (* ?x23785 l_0_11_52)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23865 (* ?x23782 l_0_11_51)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23863 (* ?x23779 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23861 (* ?x23860 l_0_11_6)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23858 (* ?x23731 l_0_11_5)))
 (let ((?x23866 (+ (+ (- (- (* (* (- 2.0) l_0_11_22) l_0_11_4) ?x23858) ?x23861) ?x23863) ?x23865)))
 (= (+ ?x23866 ?x23867) 0.0)))))))))))))
(assert
 (let ((?x23904 (* l_0_11_9 l_0_11_9)))
 (let ((?x23902 (* l_0_11_8 l_0_11_8)))
 (let ((?x23900 (* l_0_11_7 l_0_11_7)))
 (let ((?x23898 (* l_0_11_38 l_0_11_38)))
 (let ((?x23896 (* l_0_11_37 l_0_11_37)))
 (let ((?x23894 (* l_0_11_36 l_0_11_36)))
 (let ((?x23895 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23894)))
 (= (- (- (- (+ (+ ?x23895 ?x23896) ?x23898) ?x23900) ?x23902) ?x23904) 0.0)))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23939 (* ?x23938 l_0_11_42)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23936 (* ?x23935 l_0_11_41)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23933 (* ?x23932 l_0_11_40)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23930 (* ?x23929 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23927 (* ?x23811 l_0_11_9)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23925 (* ?x23686 l_0_11_8)))
 (let ((?x23922 (* 2.0 l_0_11_11)))
 (let ((?x23923 (* ?x23922 l_0_11_7)))
 (let ((?x23931 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_14) ?x23923) ?x23925) ?x23927) ?x23930)))
 (= (+ (+ (+ ?x23931 ?x23933) ?x23936) ?x23939) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23980 (* ?x23938 l_0_11_47)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23978 (* ?x23935 l_0_11_46)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23976 (* ?x23932 l_0_11_45)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23974 (* ?x23929 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23972 (* ?x23832 l_0_11_9)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23963 (* ?x23706 l_0_11_8)))
 (let ((?x23774 (* 2.0 l_0_11_16)))
 (let ((?x23959 (* ?x23774 l_0_11_7)))
 (let ((?x23975 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_19) ?x23959) ?x23963) ?x23972) ?x23974)))
 (= (+ (+ (+ ?x23975 ?x23976) ?x23978) ?x23980) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23992 (* ?x23938 l_0_11_53)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23990 (* ?x23935 l_0_11_52)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23988 (* ?x23932 l_0_11_51)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23986 (* ?x23929 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23984 (* ?x23860 l_0_11_9)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x16572 (* ?x23731 l_0_11_8)))
 (let ((?x16569 (* 2.0 l_0_11_22)))
 (let ((?x16564 (* ?x16569 l_0_11_7)))
 (let ((?x23987 (+ (- (- (- (* (* (- 2.0) l_0_11_10) l_0_11_25) ?x16564) ?x16572) ?x23984) ?x23986)))
 (= (+ (+ (+ ?x23987 ?x23988) ?x23990) ?x23992) 0.0)))))))))))))))))
(assert
 (let ((?x24036 (* l_0_11_43 l_0_11_43)))
 (let ((?x24034 (* l_0_11_42 l_0_11_42)))
 (let ((?x24032 (* l_0_11_41 l_0_11_41)))
 (let ((?x24030 (* l_0_11_40 l_0_11_40)))
 (let ((?x24028 (* l_0_11_39 l_0_11_39)))
 (let ((?x24026 (* l_0_11_15 l_0_11_15)))
 (let ((?x24024 (* l_0_11_14 l_0_11_14)))
 (let ((?x24015 (* l_0_11_13 l_0_11_13)))
 (let ((?x24023 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x24015)))
 (let ((?x24037 (+ (+ (+ (+ (+ (- (- ?x24023 ?x24024) ?x24026) ?x24028) ?x24030) ?x24032) ?x24034) ?x24036)))
 (= ?x24037 0.0))))))))))))
(assert
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24082 (* ?x24081 l_0_11_48)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24079 (* ?x24078 l_0_11_47)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24075 l_0_11_46)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24073 (* ?x24072 l_0_11_45)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24070 (* ?x24069 l_0_11_44)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24067 (* ?x24066 l_0_11_20)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24064 (* ?x24063 l_0_11_19)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24061 (* ?x23811 l_0_11_18)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24059 (* ?x23686 l_0_11_17)))
 (let ((?x24068 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_16) ?x24059) ?x24061) ?x24064) ?x24067)))
 (= (+ (+ (+ (+ (+ ?x24068 ?x24070) ?x24073) ?x24076) ?x24079) ?x24082) 0.0)))))))))))))))))))))
(assert
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24139 (* ?x24081 l_0_11_54)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24137 (* ?x24078 l_0_11_53)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24135 (* ?x24075 l_0_11_52)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24133 (* ?x24072 l_0_11_51)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24131 (* ?x24069 l_0_11_50)))
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23716 (* ?x23660 l_0_11_45)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23714 (* ?x23657 l_0_11_44)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23712 (* ?x23706 l_0_11_3)))
 (let ((?x23774 (* 2.0 l_0_11_16)))
 (let ((?x23775 (* ?x23774 l_0_11_2)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24125 (* ?x24066 l_0_11_26)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24115 (* ?x24063 l_0_11_25)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24112 (* ?x23811 l_0_11_24)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24108 (* ?x23686 l_0_11_23)))
 (let ((?x24126 (- (- (- (- (* (* (- 2.0) l_0_11_11) l_0_11_22) ?x24108) ?x24112) ?x24115) ?x24125)))
 (let ((?x24136 (+ (+ (+ (- (- (+ (+ ?x24126 ?x23775) ?x23712) ?x23714) ?x23716) ?x24131) ?x24133) ?x24135)))
 (= (+ (+ ?x24136 ?x24137) ?x24139) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x24178 (* l_0_11_49 l_0_11_49)))
 (let ((?x24176 (* l_0_11_48 l_0_11_48)))
 (let ((?x24174 (* l_0_11_47 l_0_11_47)))
 (let ((?x24172 (* l_0_11_46 l_0_11_46)))
 (let ((?x24170 (* l_0_11_45 l_0_11_45)))
 (let ((?x24168 (* l_0_11_44 l_0_11_44)))
 (let ((?x24166 (* l_0_11_21 l_0_11_21)))
 (let ((?x24164 (* l_0_11_20 l_0_11_20)))
 (let ((?x24162 (* l_0_11_19 l_0_11_19)))
 (let ((?x16700 (* l_0_11_18 l_0_11_18)))
 (let ((?x16643 (- (- (* (- l_0_11_16) l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x16700)))
 (let ((?x24175 (+ (+ (+ (+ (- (- (- ?x16643 ?x24162) ?x24164) ?x24166) ?x24168) ?x24170) ?x24172) ?x24174)))
 (= (+ (+ ?x24175 ?x24176) ?x24178) 0.0))))))))))))))
(assert
 (let ((?x24227 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24224 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24221 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24218 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24215 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24212 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24209 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24206 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24203 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x24200 (* ?x23832 l_0_11_24)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x24198 (* ?x23706 l_0_11_23)))
 (let ((?x24207 (- (- (- (- (* (* (- 2.0) l_0_11_16) l_0_11_22) ?x24198) ?x24200) ?x24203) ?x24206)))
 (let ((?x24228 (+ (+ (+ (+ (+ (+ (- ?x24207 ?x24209) ?x24212) ?x24215) ?x24218) ?x24221) ?x24224) ?x24227)))
 (= ?x24228 0.0)))))))))))))))))
(assert
 (let ((?x24280 (* l_0_11_56 l_0_11_56)))
 (let ((?x24278 (* l_0_11_55 l_0_11_55)))
 (let ((?x24276 (* l_0_11_54 l_0_11_54)))
 (let ((?x24274 (* l_0_11_53 l_0_11_53)))
 (let ((?x24272 (* l_0_11_52 l_0_11_52)))
 (let ((?x24270 (* l_0_11_51 l_0_11_51)))
 (let ((?x24268 (* l_0_11_50 l_0_11_50)))
 (let ((?x24266 (* l_0_11_28 l_0_11_28)))
 (let ((?x24264 (* l_0_11_27 l_0_11_27)))
 (let ((?x24262 (* l_0_11_26 l_0_11_26)))
 (let ((?x24251 (* l_0_11_25 l_0_11_25)))
 (let ((?x24248 (* l_0_11_24 l_0_11_24)))
 (let ((?x24250 (- (- (* (- l_0_11_22) l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24248)))
 (let ((?x24273 (+ (+ (+ (- (- (- (- ?x24250 ?x24251) ?x24262) ?x24264) ?x24266) ?x24268) ?x24270) ?x24272)))
 (= (+ (+ (+ (+ ?x24273 ?x24274) ?x24276) ?x24278) ?x24280) 0.0))))))))))))))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x16317 (* ?x16314 l_0_11_30)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_2) ?x16317) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23582 (* ?x16314 l_0_11_32)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_4) ?x23582) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23590 (* ?x16314 l_0_11_35)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x23590) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23600 (* ?x16314 l_0_11_39)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_11) ?x23600) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23610 (* ?x16314 l_0_11_44)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_16) ?x23610) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23620 (* ?x16314 l_0_11_50)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_22) ?x23620) 0.0))))
(assert
 (let ((?x23639 (* l_0_11_31 l_0_11_31)))
 (let ((?x23637 (* l_0_11_30 l_0_11_30)))
 (let ((?x16877 (- (- (+ (* l_0_11_2 l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23637) ?x23639)))
 (= ?x16877 0.0)))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23661 (* ?x23660 l_0_11_33)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23658 (* ?x23657 l_0_11_32)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x23655 (* ?x23654 l_0_11_5)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_4) ?x23655) ?x23658) ?x23661) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23672 (* ?x23660 l_0_11_36)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x16364 (* ?x23657 l_0_11_35)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x16365 (* ?x23654 l_0_11_8)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_7) ?x16365) ?x16364) ?x23672) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23691 (* ?x23660 l_0_11_40)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23689 (* ?x23657 l_0_11_39)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23687 (* ?x23686 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x23687) ?x23689) ?x23691) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23736 (* ?x23660 l_0_11_51)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23734 (* ?x23657 l_0_11_50)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23732 (* ?x23731 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_22) ?x23732) ?x23734) ?x23736) 0.0))))))))
(assert
 (let ((?x23763 (* l_0_11_6 l_0_11_6)))
 (let ((?x23761 (* l_0_11_5 l_0_11_5)))
 (let ((?x23759 (* l_0_11_4 l_0_11_4)))
 (let ((?x23757 (* l_0_11_34 l_0_11_34)))
 (let ((?x16823 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23757)))
 (= (+ (+ (+ ?x16823 ?x23759) ?x23761) ?x23763) 0.0)))))))
(assert
 (let ((?x23795 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23792 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x23789 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23786 (* ?x23785 l_0_11_37)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23783 (* ?x23782 l_0_11_36)))
 (let ((?x16999 (+ (+ (- (- (* (* (- 2.0) l_0_11_32) l_0_11_35) ?x23783) ?x23786) ?x23789) ?x23792)))
 (= (+ ?x16999 ?x23795) 0.0))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23818 (* ?x23785 l_0_11_41)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23816 (* ?x23782 l_0_11_40)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23814 (* ?x23779 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23812 (* ?x23811 l_0_11_6)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23809 (* ?x23686 l_0_11_5)))
 (let ((?x24325 (- (- (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x23809) ?x23812) ?x23814) ?x23816)))
 (= (- ?x24325 ?x23818) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23845 (* ?x23785 l_0_11_46)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23843 (* ?x23782 l_0_11_45)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23841 (* ?x23779 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23839 (* ?x23832 l_0_11_6)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x16494 (* ?x23706 l_0_11_5)))
 (let ((?x17091 (- (- (+ (+ (* (* 2.0 l_0_11_16) l_0_11_4) ?x16494) ?x23839) ?x23841) ?x23843)))
 (= (- ?x17091 ?x23845) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23867 (* ?x23785 l_0_11_52)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23865 (* ?x23782 l_0_11_51)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23863 (* ?x23779 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23861 (* ?x23860 l_0_11_6)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23858 (* ?x23731 l_0_11_5)))
 (let ((?x24342 (- (- (+ (+ (* (* 2.0 l_0_11_22) l_0_11_4) ?x23858) ?x23861) ?x23863) ?x23865)))
 (= (- ?x24342 ?x23867) 0.0)))))))))))))
(assert
 (let ((?x23904 (* l_0_11_9 l_0_11_9)))
 (let ((?x23902 (* l_0_11_8 l_0_11_8)))
 (let ((?x23900 (* l_0_11_7 l_0_11_7)))
 (let ((?x23898 (* l_0_11_38 l_0_11_38)))
 (let ((?x23896 (* l_0_11_37 l_0_11_37)))
 (let ((?x23894 (* l_0_11_36 l_0_11_36)))
 (let ((?x17092 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23894) ?x23896)))
 (= (+ (+ (+ (- ?x17092 ?x23898) ?x23900) ?x23902) ?x23904) 0.0)))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23939 (* ?x23938 l_0_11_42)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23936 (* ?x23935 l_0_11_41)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23933 (* ?x23932 l_0_11_40)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23930 (* ?x23929 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23927 (* ?x23811 l_0_11_9)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23925 (* ?x23686 l_0_11_8)))
 (let ((?x23922 (* 2.0 l_0_11_11)))
 (let ((?x23923 (* ?x23922 l_0_11_7)))
 (let ((?x17125 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23923) ?x23925) ?x23927) ?x23930)))
 (= (- (- (- ?x17125 ?x23933) ?x23936) ?x23939) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23980 (* ?x23938 l_0_11_47)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23978 (* ?x23935 l_0_11_46)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23976 (* ?x23932 l_0_11_45)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23974 (* ?x23929 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23972 (* ?x23832 l_0_11_9)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23963 (* ?x23706 l_0_11_8)))
 (let ((?x23774 (* 2.0 l_0_11_16)))
 (let ((?x23959 (* ?x23774 l_0_11_7)))
 (let ((?x17260 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x23959) ?x23963) ?x23972) ?x23974)))
 (= (- (- (- ?x17260 ?x23976) ?x23978) ?x23980) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23992 (* ?x23938 l_0_11_53)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23990 (* ?x23935 l_0_11_52)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23988 (* ?x23932 l_0_11_51)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23986 (* ?x23929 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23984 (* ?x23860 l_0_11_9)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x16572 (* ?x23731 l_0_11_8)))
 (let ((?x16569 (* 2.0 l_0_11_22)))
 (let ((?x16564 (* ?x16569 l_0_11_7)))
 (let ((?x17304 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_25) ?x16564) ?x16572) ?x23984) ?x23986)))
 (= (- (- (- ?x17304 ?x23988) ?x23990) ?x23992) 0.0)))))))))))))))))
(assert
 (let ((?x24036 (* l_0_11_43 l_0_11_43)))
 (let ((?x24034 (* l_0_11_42 l_0_11_42)))
 (let ((?x24032 (* l_0_11_41 l_0_11_41)))
 (let ((?x24030 (* l_0_11_40 l_0_11_40)))
 (let ((?x24028 (* l_0_11_39 l_0_11_39)))
 (let ((?x24026 (* l_0_11_15 l_0_11_15)))
 (let ((?x24024 (* l_0_11_14 l_0_11_14)))
 (let ((?x24015 (* l_0_11_13 l_0_11_13)))
 (let ((?x17416 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x24015) ?x24024)))
 (= (- (- (- (- (- (+ ?x17416 ?x24026) ?x24028) ?x24030) ?x24032) ?x24034) ?x24036) 0.0)))))))))))
(assert
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24082 (* ?x24081 l_0_11_48)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24079 (* ?x24078 l_0_11_47)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24075 l_0_11_46)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24073 (* ?x24072 l_0_11_45)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24070 (* ?x24069 l_0_11_44)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24067 (* ?x24066 l_0_11_20)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24064 (* ?x24063 l_0_11_19)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24061 (* ?x23811 l_0_11_18)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24059 (* ?x23686 l_0_11_17)))
 (let ((?x17506 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x24059) ?x24061) ?x24064) ?x24067)))
 (= (- (- (- (- (- ?x17506 ?x24070) ?x24073) ?x24076) ?x24079) ?x24082) 0.0)))))))))))))))))))))
(assert
 (let ((?x23795 (* (* 2.0 l_0_11_6) l_0_11_9)))
 (let ((?x23792 (* (* 2.0 l_0_11_5) l_0_11_8)))
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24139 (* ?x24081 l_0_11_54)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24137 (* ?x24078 l_0_11_53)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24135 (* ?x24075 l_0_11_52)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24133 (* ?x24072 l_0_11_51)))
 (let ((?x23789 (* (* 2.0 l_0_11_4) l_0_11_7)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24131 (* ?x24069 l_0_11_50)))
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23786 (* ?x23785 l_0_11_37)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23783 (* ?x23782 l_0_11_36)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23780 (* ?x23779 l_0_11_35)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24125 (* ?x24066 l_0_11_26)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24115 (* ?x24063 l_0_11_25)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24112 (* ?x23811 l_0_11_24)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24108 (* ?x23686 l_0_11_23)))
 (let ((?x17577 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x24108) ?x24112) ?x24115) ?x24125)))
 (let ((?x17441 (- (- (+ (- (- (- (- ?x17577 ?x23780) ?x23783) ?x23786) ?x24131) ?x23789) ?x24133) ?x24135)))
 (= (+ (+ (- (- ?x17441 ?x24137) ?x24139) ?x23792) ?x23795) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x24178 (* l_0_11_49 l_0_11_49)))
 (let ((?x24176 (* l_0_11_48 l_0_11_48)))
 (let ((?x24174 (* l_0_11_47 l_0_11_47)))
 (let ((?x24172 (* l_0_11_46 l_0_11_46)))
 (let ((?x24170 (* l_0_11_45 l_0_11_45)))
 (let ((?x24168 (* l_0_11_44 l_0_11_44)))
 (let ((?x24166 (* l_0_11_21 l_0_11_21)))
 (let ((?x24164 (* l_0_11_20 l_0_11_20)))
 (let ((?x24162 (* l_0_11_19 l_0_11_19)))
 (let ((?x16700 (* l_0_11_18 l_0_11_18)))
 (let ((?x9545 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x16700) ?x24162)))
 (let ((?x24348 (- (- (- (- (- (+ (+ ?x9545 ?x24164) ?x24166) ?x24168) ?x24170) ?x24172) ?x24174) ?x24176)))
 (= (- ?x24348 ?x24178) 0.0))))))))))))))
(assert
 (let ((?x24227 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24224 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24221 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24218 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24215 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24212 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24209 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24206 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24203 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x24200 (* ?x23832 l_0_11_24)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x24198 (* ?x23706 l_0_11_23)))
 (let ((?x9627 (+ (+ (+ (+ (* (* 2.0 l_0_11_16) l_0_11_22) ?x24198) ?x24200) ?x24203) ?x24206)))
 (let ((?x17745 (- (- (- (- (- (- (+ ?x9627 ?x24209) ?x24212) ?x24215) ?x24218) ?x24221) ?x24224) ?x24227)))
 (= ?x17745 0.0)))))))))))))))))
(assert
 (let ((?x24280 (* l_0_11_56 l_0_11_56)))
 (let ((?x24278 (* l_0_11_55 l_0_11_55)))
 (let ((?x24276 (* l_0_11_54 l_0_11_54)))
 (let ((?x24274 (* l_0_11_53 l_0_11_53)))
 (let ((?x24272 (* l_0_11_52 l_0_11_52)))
 (let ((?x24270 (* l_0_11_51 l_0_11_51)))
 (let ((?x24268 (* l_0_11_50 l_0_11_50)))
 (let ((?x24266 (* l_0_11_28 l_0_11_28)))
 (let ((?x24264 (* l_0_11_27 l_0_11_27)))
 (let ((?x24262 (* l_0_11_26 l_0_11_26)))
 (let ((?x24251 (* l_0_11_25 l_0_11_25)))
 (let ((?x24248 (* l_0_11_24 l_0_11_24)))
 (let ((?x17789 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24248) ?x24251)))
 (let ((?x9559 (- (- (- (- (+ (+ (+ ?x17789 ?x24262) ?x24264) ?x24266) ?x24268) ?x24270) ?x24272) ?x24274)))
 (= (- (- (- ?x9559 ?x24276) ?x24278) ?x24280) 0.0))))))))))))))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x16317 (* ?x16314 l_0_11_30)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_2) ?x16317) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23582 (* ?x16314 l_0_11_32)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_4) ?x23582) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23590 (* ?x16314 l_0_11_35)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_7) ?x23590) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23600 (* ?x16314 l_0_11_39)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_11) ?x23600) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23610 (* ?x16314 l_0_11_44)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_16) ?x23610) 0.0))))
(assert
 (let ((?x16314 (* 2.0 l_0_11_29)))
 (let ((?x23620 (* ?x16314 l_0_11_50)))
 (= (- (* (* 2.0 l_0_11_1) l_0_11_22) ?x23620) 0.0))))
(assert
 (let ((?x23639 (* l_0_11_31 l_0_11_31)))
 (let ((?x23637 (* l_0_11_30 l_0_11_30)))
 (let ((?x16877 (- (- (+ (* l_0_11_2 l_0_11_2) (* l_0_11_3 l_0_11_3)) ?x23637) ?x23639)))
 (= ?x16877 0.0)))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23661 (* ?x23660 l_0_11_33)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23658 (* ?x23657 l_0_11_32)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x23655 (* ?x23654 l_0_11_5)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_4) ?x23655) ?x23658) ?x23661) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23672 (* ?x23660 l_0_11_36)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x16364 (* ?x23657 l_0_11_35)))
 (let ((?x23654 (* 2.0 l_0_11_3)))
 (let ((?x16365 (* ?x23654 l_0_11_8)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_7) ?x16365) ?x16364) ?x23672) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23691 (* ?x23660 l_0_11_40)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23689 (* ?x23657 l_0_11_39)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23687 (* ?x23686 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_11) l_0_11_2) ?x23687) ?x23689) ?x23691) 0.0))))))))
(assert
 (let ((?x23660 (* 2.0 l_0_11_31)))
 (let ((?x23736 (* ?x23660 l_0_11_51)))
 (let ((?x23657 (* 2.0 l_0_11_30)))
 (let ((?x23734 (* ?x23657 l_0_11_50)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23732 (* ?x23731 l_0_11_3)))
 (= (- (- (+ (* (* 2.0 l_0_11_2) l_0_11_22) ?x23732) ?x23734) ?x23736) 0.0))))))))
(assert
 (let ((?x23763 (* l_0_11_6 l_0_11_6)))
 (let ((?x23761 (* l_0_11_5 l_0_11_5)))
 (let ((?x23759 (* l_0_11_4 l_0_11_4)))
 (let ((?x23757 (* l_0_11_34 l_0_11_34)))
 (let ((?x16823 (- (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x23757)))
 (= (+ (+ (+ ?x16823 ?x23759) ?x23761) ?x23763) 0.0)))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23818 (* ?x23785 l_0_11_41)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23816 (* ?x23782 l_0_11_40)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23814 (* ?x23779 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23812 (* ?x23811 l_0_11_6)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23809 (* ?x23686 l_0_11_5)))
 (let ((?x24325 (- (- (+ (+ (* (* 2.0 l_0_11_11) l_0_11_4) ?x23809) ?x23812) ?x23814) ?x23816)))
 (= (- ?x24325 ?x23818) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23845 (* ?x23785 l_0_11_46)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23843 (* ?x23782 l_0_11_45)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23841 (* ?x23779 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23839 (* ?x23832 l_0_11_6)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x16494 (* ?x23706 l_0_11_5)))
 (let ((?x17091 (- (- (+ (+ (* (* 2.0 l_0_11_16) l_0_11_4) ?x16494) ?x23839) ?x23841) ?x23843)))
 (= (- ?x17091 ?x23845) 0.0)))))))))))))
(assert
 (let ((?x23785 (* 2.0 l_0_11_34)))
 (let ((?x23867 (* ?x23785 l_0_11_52)))
 (let ((?x23782 (* 2.0 l_0_11_33)))
 (let ((?x23865 (* ?x23782 l_0_11_51)))
 (let ((?x23779 (* 2.0 l_0_11_32)))
 (let ((?x23863 (* ?x23779 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23861 (* ?x23860 l_0_11_6)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x23858 (* ?x23731 l_0_11_5)))
 (let ((?x24342 (- (- (+ (+ (* (* 2.0 l_0_11_22) l_0_11_4) ?x23858) ?x23861) ?x23863) ?x23865)))
 (= (- ?x24342 ?x23867) 0.0)))))))))))))
(assert
 (let ((?x23904 (* l_0_11_9 l_0_11_9)))
 (let ((?x23902 (* l_0_11_8 l_0_11_8)))
 (let ((?x23900 (* l_0_11_7 l_0_11_7)))
 (let ((?x23898 (* l_0_11_38 l_0_11_38)))
 (let ((?x23896 (* l_0_11_37 l_0_11_37)))
 (let ((?x23894 (* l_0_11_36 l_0_11_36)))
 (let ((?x17092 (- (- (- (* l_0_11_10 l_0_11_10) (* l_0_11_35 l_0_11_35)) ?x23894) ?x23896)))
 (= (+ (+ (+ (- ?x17092 ?x23898) ?x23900) ?x23902) ?x23904) 0.0)))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23939 (* ?x23938 l_0_11_42)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23936 (* ?x23935 l_0_11_41)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23933 (* ?x23932 l_0_11_40)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23930 (* ?x23929 l_0_11_39)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x23927 (* ?x23811 l_0_11_9)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x23925 (* ?x23686 l_0_11_8)))
 (let ((?x23922 (* 2.0 l_0_11_11)))
 (let ((?x23923 (* ?x23922 l_0_11_7)))
 (let ((?x17125 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_14) ?x23923) ?x23925) ?x23927) ?x23930)))
 (= (- (- (- ?x17125 ?x23933) ?x23936) ?x23939) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23980 (* ?x23938 l_0_11_47)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23978 (* ?x23935 l_0_11_46)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23976 (* ?x23932 l_0_11_45)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23974 (* ?x23929 l_0_11_44)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x23972 (* ?x23832 l_0_11_9)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x23963 (* ?x23706 l_0_11_8)))
 (let ((?x23774 (* 2.0 l_0_11_16)))
 (let ((?x23959 (* ?x23774 l_0_11_7)))
 (let ((?x17260 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_19) ?x23959) ?x23963) ?x23972) ?x23974)))
 (= (- (- (- ?x17260 ?x23976) ?x23978) ?x23980) 0.0)))))))))))))))))
(assert
 (let ((?x23938 (* 2.0 l_0_11_38)))
 (let ((?x23992 (* ?x23938 l_0_11_53)))
 (let ((?x23935 (* 2.0 l_0_11_37)))
 (let ((?x23990 (* ?x23935 l_0_11_52)))
 (let ((?x23932 (* 2.0 l_0_11_36)))
 (let ((?x23988 (* ?x23932 l_0_11_51)))
 (let ((?x23929 (* 2.0 l_0_11_35)))
 (let ((?x23986 (* ?x23929 l_0_11_50)))
 (let ((?x23860 (* 2.0 l_0_11_24)))
 (let ((?x23984 (* ?x23860 l_0_11_9)))
 (let ((?x23731 (* 2.0 l_0_11_23)))
 (let ((?x16572 (* ?x23731 l_0_11_8)))
 (let ((?x16569 (* 2.0 l_0_11_22)))
 (let ((?x16564 (* ?x16569 l_0_11_7)))
 (let ((?x17304 (- (+ (+ (+ (* (* 2.0 l_0_11_10) l_0_11_25) ?x16564) ?x16572) ?x23984) ?x23986)))
 (= (- (- (- ?x17304 ?x23988) ?x23990) ?x23992) 0.0)))))))))))))))))
(assert
 (let ((?x24036 (* l_0_11_43 l_0_11_43)))
 (let ((?x24034 (* l_0_11_42 l_0_11_42)))
 (let ((?x24032 (* l_0_11_41 l_0_11_41)))
 (let ((?x24030 (* l_0_11_40 l_0_11_40)))
 (let ((?x24028 (* l_0_11_39 l_0_11_39)))
 (let ((?x24026 (* l_0_11_15 l_0_11_15)))
 (let ((?x24024 (* l_0_11_14 l_0_11_14)))
 (let ((?x24015 (* l_0_11_13 l_0_11_13)))
 (let ((?x17416 (+ (+ (+ (* l_0_11_11 l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x24015) ?x24024)))
 (= (- (- (- (- (- (+ ?x17416 ?x24026) ?x24028) ?x24030) ?x24032) ?x24034) ?x24036) 0.0)))))))))))
(assert
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24082 (* ?x24081 l_0_11_48)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24079 (* ?x24078 l_0_11_47)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24076 (* ?x24075 l_0_11_46)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24073 (* ?x24072 l_0_11_45)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24070 (* ?x24069 l_0_11_44)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24067 (* ?x24066 l_0_11_20)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24064 (* ?x24063 l_0_11_19)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24061 (* ?x23811 l_0_11_18)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24059 (* ?x23686 l_0_11_17)))
 (let ((?x17506 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_16) ?x24059) ?x24061) ?x24064) ?x24067)))
 (= (- (- (- (- (- ?x17506 ?x24070) ?x24073) ?x24076) ?x24079) ?x24082) 0.0)))))))))))))))))))))
(assert
 (let ((?x24081 (* 2.0 l_0_11_43)))
 (let ((?x24139 (* ?x24081 l_0_11_54)))
 (let ((?x24078 (* 2.0 l_0_11_42)))
 (let ((?x24137 (* ?x24078 l_0_11_53)))
 (let ((?x24075 (* 2.0 l_0_11_41)))
 (let ((?x24135 (* ?x24075 l_0_11_52)))
 (let ((?x24072 (* 2.0 l_0_11_40)))
 (let ((?x24133 (* ?x24072 l_0_11_51)))
 (let ((?x24069 (* 2.0 l_0_11_39)))
 (let ((?x24131 (* ?x24069 l_0_11_50)))
 (let ((?x24066 (* 2.0 l_0_11_15)))
 (let ((?x24125 (* ?x24066 l_0_11_26)))
 (let ((?x24063 (* 2.0 l_0_11_14)))
 (let ((?x24115 (* ?x24063 l_0_11_25)))
 (let ((?x23811 (* 2.0 l_0_11_13)))
 (let ((?x24112 (* ?x23811 l_0_11_24)))
 (let ((?x23686 (* 2.0 l_0_11_12)))
 (let ((?x24108 (* ?x23686 l_0_11_23)))
 (let ((?x17577 (+ (+ (+ (+ (* (* 2.0 l_0_11_11) l_0_11_22) ?x24108) ?x24112) ?x24115) ?x24125)))
 (= (- (- (- (- (- ?x17577 ?x24131) ?x24133) ?x24135) ?x24137) ?x24139) 0.0)))))))))))))))))))))
(assert
 (let ((?x24178 (* l_0_11_49 l_0_11_49)))
 (let ((?x24176 (* l_0_11_48 l_0_11_48)))
 (let ((?x24174 (* l_0_11_47 l_0_11_47)))
 (let ((?x24172 (* l_0_11_46 l_0_11_46)))
 (let ((?x24170 (* l_0_11_45 l_0_11_45)))
 (let ((?x24168 (* l_0_11_44 l_0_11_44)))
 (let ((?x24166 (* l_0_11_21 l_0_11_21)))
 (let ((?x24164 (* l_0_11_20 l_0_11_20)))
 (let ((?x24162 (* l_0_11_19 l_0_11_19)))
 (let ((?x16700 (* l_0_11_18 l_0_11_18)))
 (let ((?x9545 (+ (+ (+ (* l_0_11_16 l_0_11_16) (* l_0_11_17 l_0_11_17)) ?x16700) ?x24162)))
 (let ((?x24348 (- (- (- (- (- (+ (+ ?x9545 ?x24164) ?x24166) ?x24168) ?x24170) ?x24172) ?x24174) ?x24176)))
 (= (- ?x24348 ?x24178) 0.0))))))))))))))
(assert
 (let ((?x24227 (* (* 2.0 l_0_11_49) l_0_11_55)))
 (let ((?x24224 (* (* 2.0 l_0_11_48) l_0_11_54)))
 (let ((?x24221 (* (* 2.0 l_0_11_47) l_0_11_53)))
 (let ((?x24218 (* (* 2.0 l_0_11_46) l_0_11_52)))
 (let ((?x24215 (* (* 2.0 l_0_11_45) l_0_11_51)))
 (let ((?x24212 (* (* 2.0 l_0_11_44) l_0_11_50)))
 (let ((?x24209 (* (* 2.0 l_0_11_21) l_0_11_27)))
 (let ((?x24206 (* (* 2.0 l_0_11_20) l_0_11_26)))
 (let ((?x24203 (* (* 2.0 l_0_11_19) l_0_11_25)))
 (let ((?x23832 (* 2.0 l_0_11_18)))
 (let ((?x24200 (* ?x23832 l_0_11_24)))
 (let ((?x23706 (* 2.0 l_0_11_17)))
 (let ((?x24198 (* ?x23706 l_0_11_23)))
 (let ((?x9627 (+ (+ (+ (+ (* (* 2.0 l_0_11_16) l_0_11_22) ?x24198) ?x24200) ?x24203) ?x24206)))
 (let ((?x17745 (- (- (- (- (- (- (+ ?x9627 ?x24209) ?x24212) ?x24215) ?x24218) ?x24221) ?x24224) ?x24227)))
 (= ?x17745 0.0)))))))))))))))))
(assert
 (let ((?x24280 (* l_0_11_56 l_0_11_56)))
 (let ((?x24278 (* l_0_11_55 l_0_11_55)))
 (let ((?x24276 (* l_0_11_54 l_0_11_54)))
 (let ((?x24274 (* l_0_11_53 l_0_11_53)))
 (let ((?x24272 (* l_0_11_52 l_0_11_52)))
 (let ((?x24270 (* l_0_11_51 l_0_11_51)))
 (let ((?x24268 (* l_0_11_50 l_0_11_50)))
 (let ((?x24266 (* l_0_11_28 l_0_11_28)))
 (let ((?x24264 (* l_0_11_27 l_0_11_27)))
 (let ((?x24262 (* l_0_11_26 l_0_11_26)))
 (let ((?x24251 (* l_0_11_25 l_0_11_25)))
 (let ((?x24248 (* l_0_11_24 l_0_11_24)))
 (let ((?x17789 (+ (+ (+ (* l_0_11_22 l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x24248) ?x24251)))
 (let ((?x9559 (- (- (- (- (+ (+ (+ ?x17789 ?x24262) ?x24264) ?x24266) ?x24268) ?x24270) ?x24272) ?x24274)))
 (= (- (- (- ?x9559 ?x24276) ?x24278) ?x24280) 0.0))))))))))))))))
(assert
 (= (- (* (* (- 1.0) l_0_11_57) l_0_11_57) (* l_0_11_85 l_0_11_85)) 0.0))
(assert
 (let ((?x24390 (- (* (* (- 2.0) l_0_11_57) l_0_11_58) (* (* 2.0 l_0_11_85) l_0_11_86))))
 (= ?x24390 0.0)))
(assert
 (let ((?x24405 (- (* (* (- 2.0) l_0_11_57) l_0_11_60) (* (* 2.0 l_0_11_85) l_0_11_88))))
 (= ?x24405 0.0)))
(assert
 (let ((?x24420 (- (* (* (- 2.0) l_0_11_57) l_0_11_67) (* (* 2.0 l_0_11_85) l_0_11_95))))
 (= ?x24420 0.0)))
(assert
 (let ((?x24436 (- (* (* (- 2.0) l_0_11_100) l_0_11_85) (* (* 2.0 l_0_11_57) l_0_11_72))))
 (= ?x24436 0.0)))
(assert
 (let ((?x24452 (- (* (* (- 2.0) l_0_11_106) l_0_11_85) (* (* 2.0 l_0_11_57) l_0_11_78))))
 (= ?x24452 0.0)))
(assert
 (let ((?x24472 (* l_0_11_87 l_0_11_87)))
 (let ((?x24470 (* l_0_11_86 l_0_11_86)))
 (let ((?x24469 (- (* (* (- 1.0) l_0_11_58) l_0_11_58) (* (* 1.0 l_0_11_59) l_0_11_59))))
 (= (- (- ?x24469 ?x24470) ?x24472) 0.0)))))
(assert
 (let ((?x24491 (- (* (* (- 2.0) l_0_11_58) l_0_11_60) (* (* 2.0 l_0_11_59) l_0_11_61))))
 (let ((?x24497 (- (- ?x24491 (* (* 2.0 l_0_11_86) l_0_11_88)) (* (* 2.0 l_0_11_87) l_0_11_89))))
 (= ?x24497 0.0))))
(assert
 (let ((?x24524 (- (* (* (- 2.0) l_0_11_58) l_0_11_63) (* (* 2.0 l_0_11_59) l_0_11_64))))
 (let ((?x24528 (- (- ?x24524 (* (* 2.0 l_0_11_86) l_0_11_91)) (* (* 2.0 l_0_11_87) l_0_11_92))))
 (= ?x24528 0.0))))
(assert
 (let ((?x24555 (- (* (* (- 2.0) l_0_11_58) l_0_11_67) (* (* 2.0 l_0_11_59) l_0_11_68))))
 (let ((?x24559 (- (- ?x24555 (* (* 2.0 l_0_11_86) l_0_11_95)) (* (* 2.0 l_0_11_87) l_0_11_96))))
 (= ?x24559 0.0))))
(assert
 (let ((?x24586 (- (* (* (- 2.0) l_0_11_106) l_0_11_86) (* (* 2.0 l_0_11_107) l_0_11_87))))
 (let ((?x24590 (- (- ?x24586 (* (* 2.0 l_0_11_58) l_0_11_78)) (* (* 2.0 l_0_11_59) l_0_11_79))))
 (= ?x24590 0.0))))
(assert
 (let ((?x24627 (* l_0_11_90 l_0_11_90)))
 (let ((?x24625 (* l_0_11_89 l_0_11_89)))
 (let ((?x24623 (* l_0_11_88 l_0_11_88)))
 (let ((?x24619 (- (* (* (- 1.0) l_0_11_60) l_0_11_60) (* (* 1.0 l_0_11_61) l_0_11_61))))
 (let ((?x24628 (- (- (- (- ?x24619 (* (* 1.0 l_0_11_62) l_0_11_62)) ?x24623) ?x24625) ?x24627)))
 (= ?x24628 0.0)))))))
(assert
 (let ((?x24653 (- (* (* (- 2.0) l_0_11_60) l_0_11_67) (* (* 2.0 l_0_11_61) l_0_11_68))))
 (let ((?x24657 (- (- ?x24653 (* (* 2.0 l_0_11_62) l_0_11_69)) (* (* 2.0 l_0_11_88) l_0_11_95))))
 (let ((?x24661 (- (- ?x24657 (* (* 2.0 l_0_11_89) l_0_11_96)) (* (* 2.0 l_0_11_90) l_0_11_97))))
 (= ?x24661 0.0)))))
(assert
 (let ((?x24700 (- (* (* (- 2.0) l_0_11_100) l_0_11_88) (* (* 2.0 l_0_11_101) l_0_11_89))))
 (let ((?x24705 (- (- ?x24700 (* (* 2.0 l_0_11_102) l_0_11_90)) (* (* 2.0 l_0_11_60) l_0_11_72))))
 (let ((?x24709 (- (- ?x24705 (* (* 2.0 l_0_11_61) l_0_11_73)) (* (* 2.0 l_0_11_62) l_0_11_74))))
 (= ?x24709 0.0)))))
(assert
 (let ((?x24748 (- (* (* (- 2.0) l_0_11_106) l_0_11_88) (* (* 2.0 l_0_11_107) l_0_11_89))))
 (let ((?x24752 (- (- ?x24748 (* (* 2.0 l_0_11_108) l_0_11_90)) (* (* 2.0 l_0_11_60) l_0_11_78))))
 (let ((?x24756 (- (- ?x24752 (* (* 2.0 l_0_11_61) l_0_11_79)) (* (* 2.0 l_0_11_62) l_0_11_80))))
 (= ?x24756 0.0)))))
(assert
 (let ((?x24810 (* l_0_11_94 l_0_11_94)))
 (let ((?x24808 (* l_0_11_93 l_0_11_93)))
 (let ((?x24806 (* l_0_11_92 l_0_11_92)))
 (let ((?x24804 (* l_0_11_91 l_0_11_91)))
 (let ((?x24797 (- (* (* (- 1.0) l_0_11_63) l_0_11_63) (* (* 1.0 l_0_11_64) l_0_11_64))))
 (let ((?x24803 (- (- ?x24797 (* (* 1.0 l_0_11_65) l_0_11_65)) (* (* 1.0 l_0_11_66) l_0_11_66))))
 (= (- (- (- (- ?x24803 ?x24804) ?x24806) ?x24808) ?x24810) 0.0))))))))
(assert
 (let ((?x24842 (- (* (* (- 2.0) l_0_11_100) l_0_11_91) (* (* 2.0 l_0_11_101) l_0_11_92))))
 (let ((?x24847 (- (- ?x24842 (* (* 2.0 l_0_11_102) l_0_11_93)) (* (* 2.0 l_0_11_103) l_0_11_94))))
 (let ((?x24851 (- (- ?x24847 (* (* 2.0 l_0_11_63) l_0_11_72)) (* (* 2.0 l_0_11_64) l_0_11_73))))
 (let ((?x24855 (- (- ?x24851 (* (* 2.0 l_0_11_65) l_0_11_74)) (* (* 2.0 l_0_11_66) l_0_11_75))))
 (= ?x24855 0.0))))))
(assert
 (let ((?x24906 (- (* (* (- 2.0) l_0_11_106) l_0_11_91) (* (* 2.0 l_0_11_107) l_0_11_92))))
 (let ((?x24910 (- (- ?x24906 (* (* 2.0 l_0_11_108) l_0_11_93)) (* (* 2.0 l_0_11_109) l_0_11_94))))
 (let ((?x24914 (- (- ?x24910 (* (* 2.0 l_0_11_63) l_0_11_78)) (* (* 2.0 l_0_11_64) l_0_11_79))))
 (let ((?x24918 (- (- ?x24914 (* (* 2.0 l_0_11_65) l_0_11_80)) (* (* 2.0 l_0_11_66) l_0_11_81))))
 (= ?x24918 0.0))))))
(assert
 (let ((?x24989 (* l_0_11_99 l_0_11_99)))
 (let ((?x24987 (* l_0_11_98 l_0_11_98)))
 (let ((?x24985 (* l_0_11_97 l_0_11_97)))
 (let ((?x24983 (* l_0_11_96 l_0_11_96)))
 (let ((?x24981 (* l_0_11_95 l_0_11_95)))
 (let ((?x24971 (- (* (* (- 1.0) l_0_11_67) l_0_11_67) (* (* 1.0 l_0_11_68) l_0_11_68))))
 (let ((?x24977 (- (- ?x24971 (* (* 1.0 l_0_11_69) l_0_11_69)) (* (* 1.0 l_0_11_70) l_0_11_70))))
 (let ((?x24986 (- (- (- (- ?x24977 (* (* 1.0 l_0_11_71) l_0_11_71)) ?x24981) ?x24983) ?x24985)))
 (= (- (- ?x24986 ?x24987) ?x24989) 0.0))))))))))
(assert
 (let ((?x25028 (- (* (* (- 2.0) l_0_11_100) l_0_11_95) (* (* 2.0 l_0_11_101) l_0_11_96))))
 (let ((?x25032 (- (- ?x25028 (* (* 2.0 l_0_11_102) l_0_11_97)) (* (* 2.0 l_0_11_103) l_0_11_98))))
 (let ((?x25037 (- (- ?x25032 (* (* 2.0 l_0_11_104) l_0_11_99)) (* (* 2.0 l_0_11_67) l_0_11_72))))
 (let ((?x25041 (- (- ?x25037 (* (* 2.0 l_0_11_68) l_0_11_73)) (* (* 2.0 l_0_11_69) l_0_11_74))))
 (let ((?x25045 (- (- ?x25041 (* (* 2.0 l_0_11_70) l_0_11_75)) (* (* 2.0 l_0_11_71) l_0_11_76))))
 (= ?x25045 0.0)))))))
(assert
 (let ((?x25116 (* l_0_11_105 l_0_11_105)))
 (let ((?x25114 (* l_0_11_104 l_0_11_104)))
 (let ((?x25112 (* l_0_11_103 l_0_11_103)))
 (let ((?x25110 (* l_0_11_102 l_0_11_102)))
 (let ((?x25111 (- (- (* (- l_0_11_100) l_0_11_100) (* l_0_11_101 l_0_11_101)) ?x25110)))
 (let ((?x25120 (- (- (- (- ?x25111 ?x25112) ?x25114) ?x25116) (* (* 1.0 l_0_11_72) l_0_11_72))))
 (let ((?x25126 (- (- ?x25120 (* (* 1.0 l_0_11_73) l_0_11_73)) (* (* 1.0 l_0_11_74) l_0_11_74))))
 (let ((?x25132 (- (- ?x25126 (* (* 1.0 l_0_11_75) l_0_11_75)) (* (* 1.0 l_0_11_76) l_0_11_76))))
 (= (- ?x25132 (* (* 1.0 l_0_11_77) l_0_11_77)) 0.0))))))))))
(assert
 (let ((?x25183 (- (* (* (- 2.0) l_0_11_100) l_0_11_106) (* (* 2.0 l_0_11_101) l_0_11_107))))
 (let ((?x25187 (- (- ?x25183 (* (* 2.0 l_0_11_102) l_0_11_108)) (* (* 2.0 l_0_11_103) l_0_11_109))))
 (let ((?x25192 (- (- ?x25187 (* (* 2.0 l_0_11_104) l_0_11_110)) (* (* 2.0 l_0_11_105) l_0_11_111))))
 (let ((?x25198 (- (- ?x25192 (* (* 2.0 l_0_11_72) l_0_11_78)) (* (* 2.0 l_0_11_73) l_0_11_79))))
 (let ((?x25204 (- (- ?x25198 (* (* 2.0 l_0_11_74) l_0_11_80)) (* (* 2.0 l_0_11_75) l_0_11_81))))
 (let ((?x25210 (- (- ?x25204 (* (* 2.0 l_0_11_76) l_0_11_82)) (* (* 2.0 l_0_11_77) l_0_11_83))))
 (= ?x25210 0.0))))))))
(assert
 (let ((?x25275 (* l_0_11_112 l_0_11_112)))
 (let ((?x25273 (* l_0_11_111 l_0_11_111)))
 (let ((?x25271 (* l_0_11_110 l_0_11_110)))
 (let ((?x25269 (* l_0_11_109 l_0_11_109)))
 (let ((?x25267 (* l_0_11_108 l_0_11_108)))
 (let ((?x25268 (- (- (* (- l_0_11_106) l_0_11_106) (* l_0_11_107 l_0_11_107)) ?x25267)))
 (let ((?x25279 (- (- (- (- (- ?x25268 ?x25269) ?x25271) ?x25273) ?x25275) (* (* 1.0 l_0_11_78) l_0_11_78))))
 (let ((?x25285 (- (- ?x25279 (* (* 1.0 l_0_11_79) l_0_11_79)) (* (* 1.0 l_0_11_80) l_0_11_80))))
 (let ((?x25291 (- (- ?x25285 (* (* 1.0 l_0_11_81) l_0_11_81)) (* (* 1.0 l_0_11_82) l_0_11_82))))
 (let ((?x25297 (- (- ?x25291 (* (* 1.0 l_0_11_83) l_0_11_83)) (* (* 1.0 l_0_11_84) l_0_11_84))))
 (= ?x25297 0.0))))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_28 0.0))
(assert
 (>= l_0_11_29 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_34 0.0))
(assert
 (>= l_0_11_38 0.0))
(assert
 (>= l_0_11_43 0.0))
(assert
 (>= l_0_11_49 0.0))
(assert
 (>= l_0_11_56 0.0))
(assert
 (>= l_0_11_57 0.0))
(assert
 (>= l_0_11_59 0.0))
(assert
 (>= l_0_11_62 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_71 0.0))
(assert
 (>= l_0_11_77 0.0))
(assert
 (>= l_0_11_84 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_87 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_94 0.0))
(assert
 (>= l_0_11_99 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (>= l_0_11_112 0.0))
(assert
 (let ((?x25383 (- (- _a_0_ (* (* 2.0 l_0_12_113) l_0_12_119)) (* (* 2.0 l_0_12_57) l_0_12_63))))
 (= (- ?x25383 (* (* 2.0 l_0_12_85) l_0_12_91)) 0.0)))
(assert
 (let ((?x25406 (* l_0_12_29 l_0_12_29)))
 (let ((?x10391 (* l_0_12_1 l_0_12_1)))
 (let ((?x10704 (+ _a_1_ ?x10391)))
 (let ((?x25402 (- (- ?x10704 (* (* 2.0 l_0_12_116) l_0_12_119)) (* (* 2.0 l_0_12_117) l_0_12_120))))
 (let ((?x25410 (- (- (- ?x25402 (* (* 2.0 l_0_12_118) l_0_12_121)) ?x25406) (* (* 2.0 l_0_12_60) l_0_12_63))))
 (let ((?x25416 (- (- ?x25410 (* (* 2.0 l_0_12_61) l_0_12_64)) (* (* 2.0 l_0_12_62) l_0_12_65))))
 (let ((?x25422 (- (- ?x25416 (* (* 2.0 l_0_12_88) l_0_12_91)) (* (* 2.0 l_0_12_89) l_0_12_92))))
 (= (- ?x25422 (* (* 2.0 l_0_12_90) l_0_12_93)) 0.0)))))))))
(assert
 (let ((?x17982 (- (- _a_2_ (* (* 2.0 l_0_12_119) l_0_12_123)) (* (* 2.0 l_0_12_120) l_0_12_124))))
 (let ((?x25447 (- (- ?x17982 (* (* 2.0 l_0_12_121) l_0_12_125)) (* (* 2.0 l_0_12_122) l_0_12_126))))
 (let ((?x25453 (- (- ?x25447 (* (* 2.0 l_0_12_63) l_0_12_67)) (* (* 2.0 l_0_12_64) l_0_12_68))))
 (let ((?x25459 (- (- ?x25453 (* (* 2.0 l_0_12_65) l_0_12_69)) (* (* 2.0 l_0_12_66) l_0_12_70))))
 (let ((?x25465 (- (- ?x25459 (* (* 2.0 l_0_12_91) l_0_12_95)) (* (* 2.0 l_0_12_92) l_0_12_96))))
 (let ((?x25471 (- (- ?x25465 (* (* 2.0 l_0_12_93) l_0_12_97)) (* (* 2.0 l_0_12_94) l_0_12_98))))
 (= (+ ?x25471 1.0) 0.0))))))))
(assert
 (let ((?x25406 (* l_0_12_29 l_0_12_29)))
 (let ((?x25496 (- (- (* l_0_12_1 l_0_12_1) (* (* 2.0 l_0_12_106) l_0_12_95)) (* (* 2.0 l_0_12_107) l_0_12_96))))
 (let ((?x25502 (- (- ?x25496 (* (* 2.0 l_0_12_108) l_0_12_97)) (* (* 2.0 l_0_12_109) l_0_12_98))))
 (let ((?x25508 (- (- ?x25502 (* (* 2.0 l_0_12_110) l_0_12_99)) (* (* 2.0 l_0_12_123) l_0_12_134))))
 (let ((?x25514 (- (- ?x25508 (* (* 2.0 l_0_12_124) l_0_12_135)) (* (* 2.0 l_0_12_125) l_0_12_136))))
 (let ((?x25520 (- (- ?x25514 (* (* 2.0 l_0_12_126) l_0_12_137)) (* (* 2.0 l_0_12_127) l_0_12_138))))
 (let ((?x25527 (- (- (- ?x25520 ?x25406) (* (* 2.0 l_0_12_67) l_0_12_78)) (* (* 2.0 l_0_12_68) l_0_12_79))))
 (let ((?x25533 (- (- ?x25527 (* (* 2.0 l_0_12_69) l_0_12_80)) (* (* 2.0 l_0_12_70) l_0_12_81))))
 (= (+ (- ?x25533 (* (* 2.0 l_0_12_71) l_0_12_82)) 1.0) 0.0))))))))))
(assert
 (let ((?x25406 (* l_0_12_29 l_0_12_29)))
 (let ((?x18259 (- (* (- l_0_12_1) l_0_12_1) (* (* 2.0 l_0_12_100) l_0_12_86))))
 (let ((?x25571 (- (- ?x18259 (* (* 2.0 l_0_12_101) l_0_12_87)) (* (* 2.0 l_0_12_114) l_0_12_128))))
 (let ((?x25578 (- (+ (- ?x25571 (* (* 2.0 l_0_12_115) l_0_12_129)) ?x25406) (* (* 2.0 l_0_12_58) l_0_12_72))))
 (= (- (- ?x25578 (* (* 2.0 l_0_12_59) l_0_12_73)) 1.0) 0.0))))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25600 (* ?x25599 l_0_12_30)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_2) ?x25600) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25606 (* ?x25599 l_0_12_32)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_4) ?x25606) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25616 (* ?x25599 l_0_12_35)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_7) ?x25616) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25626 (* ?x25599 l_0_12_39)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_11) ?x25626) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25636 (* ?x25599 l_0_12_44)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_16) ?x25636) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25646 (* ?x25599 l_0_12_50)))
 (= (+ (* (* (- 2.0) l_0_12_1) l_0_12_22) ?x25646) 0.0))))
(assert
 (let ((?x25665 (* l_0_12_31 l_0_12_31)))
 (let ((?x25663 (* l_0_12_30 l_0_12_30)))
 (let ((?x25666 (+ (+ (- (* (- l_0_12_2) l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25663) ?x25665)))
 (= ?x25666 0.0)))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25687 (* ?x25686 l_0_12_33)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25684 (* ?x25683 l_0_12_32)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25681 (* ?x25680 l_0_12_5)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_2) l_0_12_4) ?x25681) ?x25684) ?x25687) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25706 (* ?x25686 l_0_12_36)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25704 (* ?x25683 l_0_12_35)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25702 (* ?x25680 l_0_12_8)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_2) l_0_12_7) ?x25702) ?x25704) ?x25706) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25727 (* ?x25686 l_0_12_40)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25725 (* ?x25683 l_0_12_39)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25723 (* ?x25722 l_0_12_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_11) l_0_12_2) ?x25723) ?x25725) ?x25727) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25738 (* ?x25686 l_0_12_45)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x18384 (* ?x25683 l_0_12_44)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18387 (* ?x18386 l_0_12_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_16) l_0_12_2) ?x18387) ?x18384) ?x25738) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25762 (* ?x25686 l_0_12_51)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25760 (* ?x25683 l_0_12_50)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25753 (* ?x25752 l_0_12_3)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_2) l_0_12_22) ?x25753) ?x25760) ?x25762) 0.0))))))))
(assert
 (let ((?x25786 (* l_0_12_6 l_0_12_6)))
 (let ((?x25784 (* l_0_12_5 l_0_12_5)))
 (let ((?x25782 (* l_0_12_4 l_0_12_4)))
 (let ((?x25780 (* l_0_12_34 l_0_12_34)))
 (let ((?x25783 (- (+ (+ (* l_0_12_32 l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25780) ?x25782)))
 (= (- (- ?x25783 ?x25784) ?x25786) 0.0)))))))
(assert
 (let ((?x25818 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25815 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x25812 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25809 (* ?x25808 l_0_12_37)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25806 (* ?x25805 l_0_12_36)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25803 (* ?x25802 l_0_12_35)))
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25738 (* ?x25686 l_0_12_45)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x18384 (* ?x25683 l_0_12_44)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18387 (* ?x18386 l_0_12_3)))
 (let ((?x10897 (* 2.0 l_0_12_16)))
 (let ((?x25798 (* ?x10897 l_0_12_2)))
 (let ((?x25813 (- (+ (+ (+ (- (- (+ ?x25798 ?x18387) ?x18384) ?x25738) ?x25803) ?x25806) ?x25809) ?x25812)))
 (= (- (- ?x25813 ?x25815) ?x25818) 0.0))))))))))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25854 (* ?x25808 l_0_12_41)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25852 (* ?x25805 l_0_12_40)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25850 (* ?x25802 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25848 (* ?x25847 l_0_12_6)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25845 (* ?x25722 l_0_12_5)))
 (let ((?x25853 (+ (+ (- (- (* (* (- 2.0) l_0_12_11) l_0_12_4) ?x25845) ?x25848) ?x25850) ?x25852)))
 (= (+ ?x25853 ?x25854) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25872 (* ?x25808 l_0_12_46)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25870 (* ?x25805 l_0_12_45)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25868 (* ?x25802 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25866 (* ?x25859 l_0_12_6)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18460 (* ?x18386 l_0_12_5)))
 (let ((?x25871 (+ (+ (- (- (* (* (- 2.0) l_0_12_16) l_0_12_4) ?x18460) ?x25866) ?x25868) ?x25870)))
 (= (+ ?x25871 ?x25872) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25900 (* ?x25808 l_0_12_52)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25898 (* ?x25805 l_0_12_51)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25896 (* ?x25802 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x25894 (* ?x25893 l_0_12_6)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25885 (* ?x25752 l_0_12_5)))
 (let ((?x25899 (+ (+ (- (- (* (* (- 2.0) l_0_12_22) l_0_12_4) ?x25885) ?x25894) ?x25896) ?x25898)))
 (= (+ ?x25899 ?x25900) 0.0)))))))))))))
(assert
 (let ((?x25936 (* l_0_12_9 l_0_12_9)))
 (let ((?x25934 (* l_0_12_8 l_0_12_8)))
 (let ((?x25932 (* l_0_12_7 l_0_12_7)))
 (let ((?x25930 (* l_0_12_38 l_0_12_38)))
 (let ((?x25928 (* l_0_12_37 l_0_12_37)))
 (let ((?x25926 (* l_0_12_36 l_0_12_36)))
 (let ((?x25927 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25926)))
 (= (- (- (- (+ (+ ?x25927 ?x25928) ?x25930) ?x25932) ?x25934) ?x25936) 0.0)))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25969 (* ?x25968 l_0_12_42)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25966 (* ?x25965 l_0_12_41)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25963 (* ?x25962 l_0_12_40)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25960 (* ?x25959 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25957 (* ?x25847 l_0_12_9)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25955 (* ?x25722 l_0_12_8)))
 (let ((?x25952 (* 2.0 l_0_12_11)))
 (let ((?x25953 (* ?x25952 l_0_12_7)))
 (let ((?x25961 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_14) ?x25953) ?x25955) ?x25957) ?x25960)))
 (= (+ (+ (+ ?x25961 ?x25963) ?x25966) ?x25969) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25992 (* ?x25968 l_0_12_47)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25990 (* ?x25965 l_0_12_46)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25988 (* ?x25962 l_0_12_45)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25986 (* ?x25959 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25984 (* ?x25859 l_0_12_9)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x25982 (* ?x18386 l_0_12_8)))
 (let ((?x10897 (* 2.0 l_0_12_16)))
 (let ((?x25980 (* ?x10897 l_0_12_7)))
 (let ((?x25987 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_19) ?x25980) ?x25982) ?x25984) ?x25986)))
 (= (+ (+ (+ ?x25987 ?x25988) ?x25990) ?x25992) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x26013 (* ?x25968 l_0_12_53)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x26011 (* ?x25965 l_0_12_52)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x26009 (* ?x25962 l_0_12_51)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x26007 (* ?x25959 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x26005 (* ?x25893 l_0_12_9)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x11216 (* ?x25752 l_0_12_8)))
 (let ((?x18509 (* 2.0 l_0_12_22)))
 (let ((?x18514 (* ?x18509 l_0_12_7)))
 (let ((?x26008 (+ (- (- (- (* (* (- 2.0) l_0_12_10) l_0_12_25) ?x18514) ?x11216) ?x26005) ?x26007)))
 (= (+ (+ (+ ?x26008 ?x26009) ?x26011) ?x26013) 0.0)))))))))))))))))
(assert
 (let ((?x26059 (* l_0_12_43 l_0_12_43)))
 (let ((?x26057 (* l_0_12_42 l_0_12_42)))
 (let ((?x26055 (* l_0_12_41 l_0_12_41)))
 (let ((?x26053 (* l_0_12_40 l_0_12_40)))
 (let ((?x26051 (* l_0_12_39 l_0_12_39)))
 (let ((?x26049 (* l_0_12_15 l_0_12_15)))
 (let ((?x26047 (* l_0_12_14 l_0_12_14)))
 (let ((?x26038 (* l_0_12_13 l_0_12_13)))
 (let ((?x26046 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x26038)))
 (let ((?x26060 (+ (+ (+ (+ (+ (- (- ?x26046 ?x26047) ?x26049) ?x26051) ?x26053) ?x26055) ?x26057) ?x26059)))
 (= ?x26060 0.0))))))))))))
(assert
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26105 (* ?x26104 l_0_12_48)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26102 (* ?x26101 l_0_12_47)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26099 (* ?x26098 l_0_12_46)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26096 (* ?x26095 l_0_12_45)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26093 (* ?x26092 l_0_12_44)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26090 (* ?x26089 l_0_12_20)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26087 (* ?x26086 l_0_12_19)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26084 (* ?x25847 l_0_12_18)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26082 (* ?x25722 l_0_12_17)))
 (let ((?x26091 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_16) ?x26082) ?x26084) ?x26087) ?x26090)))
 (= (+ (+ (+ (+ (+ ?x26091 ?x26093) ?x26096) ?x26099) ?x26102) ?x26105) 0.0)))))))))))))))))))))
(assert
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26159 (* ?x26104 l_0_12_54)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26157 (* ?x26101 l_0_12_53)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26155 (* ?x26098 l_0_12_52)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26153 (* ?x26095 l_0_12_51)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26151 (* ?x26092 l_0_12_50)))
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25738 (* ?x25686 l_0_12_45)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x18384 (* ?x25683 l_0_12_44)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18387 (* ?x18386 l_0_12_3)))
 (let ((?x10897 (* 2.0 l_0_12_16)))
 (let ((?x25798 (* ?x10897 l_0_12_2)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26145 (* ?x26089 l_0_12_26)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26135 (* ?x26086 l_0_12_25)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26132 (* ?x25847 l_0_12_24)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26128 (* ?x25722 l_0_12_23)))
 (let ((?x26146 (- (- (- (- (* (* (- 2.0) l_0_12_11) l_0_12_22) ?x26128) ?x26132) ?x26135) ?x26145)))
 (let ((?x26156 (+ (+ (+ (- (- (+ (+ ?x26146 ?x25798) ?x18387) ?x18384) ?x25738) ?x26151) ?x26153) ?x26155)))
 (= (+ (+ ?x26156 ?x26157) ?x26159) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x26197 (* l_0_12_49 l_0_12_49)))
 (let ((?x26195 (* l_0_12_48 l_0_12_48)))
 (let ((?x26193 (* l_0_12_47 l_0_12_47)))
 (let ((?x26191 (* l_0_12_46 l_0_12_46)))
 (let ((?x26189 (* l_0_12_45 l_0_12_45)))
 (let ((?x26187 (* l_0_12_44 l_0_12_44)))
 (let ((?x26185 (* l_0_12_21 l_0_12_21)))
 (let ((?x26183 (* l_0_12_20 l_0_12_20)))
 (let ((?x26181 (* l_0_12_19 l_0_12_19)))
 (let ((?x26179 (* l_0_12_18 l_0_12_18)))
 (let ((?x26180 (- (- (* (- l_0_12_16) l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x26179)))
 (let ((?x26194 (+ (+ (+ (+ (- (- (- ?x26180 ?x26181) ?x26183) ?x26185) ?x26187) ?x26189) ?x26191) ?x26193)))
 (= (+ (+ ?x26194 ?x26195) ?x26197) 0.0))))))))))))))
(assert
 (let ((?x26247 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26244 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26241 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26238 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26235 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26232 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26229 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26226 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26223 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x26220 (* ?x25859 l_0_12_24)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x26218 (* ?x18386 l_0_12_23)))
 (let ((?x26227 (- (- (- (- (* (* (- 2.0) l_0_12_16) l_0_12_22) ?x26218) ?x26220) ?x26223) ?x26226)))
 (let ((?x26248 (+ (+ (+ (+ (+ (+ (- ?x26227 ?x26229) ?x26232) ?x26235) ?x26238) ?x26241) ?x26244) ?x26247)))
 (= ?x26248 0.0)))))))))))))))))
(assert
 (let ((?x26311 (* l_0_12_56 l_0_12_56)))
 (let ((?x26309 (* l_0_12_55 l_0_12_55)))
 (let ((?x26307 (* l_0_12_54 l_0_12_54)))
 (let ((?x26305 (* l_0_12_53 l_0_12_53)))
 (let ((?x26303 (* l_0_12_52 l_0_12_52)))
 (let ((?x26301 (* l_0_12_51 l_0_12_51)))
 (let ((?x26299 (* l_0_12_50 l_0_12_50)))
 (let ((?x26297 (* l_0_12_28 l_0_12_28)))
 (let ((?x26295 (* l_0_12_27 l_0_12_27)))
 (let ((?x26293 (* l_0_12_26 l_0_12_26)))
 (let ((?x26282 (* l_0_12_25 l_0_12_25)))
 (let ((?x26279 (* l_0_12_24 l_0_12_24)))
 (let ((?x26281 (- (- (* (- l_0_12_22) l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26279)))
 (let ((?x26304 (+ (+ (+ (- (- (- (- ?x26281 ?x26282) ?x26293) ?x26295) ?x26297) ?x26299) ?x26301) ?x26303)))
 (= (+ (+ (+ (+ ?x26304 ?x26305) ?x26307) ?x26309) ?x26311) 0.0))))))))))))))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25600 (* ?x25599 l_0_12_30)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_2) ?x25600) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25606 (* ?x25599 l_0_12_32)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_4) ?x25606) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25616 (* ?x25599 l_0_12_35)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x25616) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25626 (* ?x25599 l_0_12_39)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_11) ?x25626) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25636 (* ?x25599 l_0_12_44)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_16) ?x25636) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25646 (* ?x25599 l_0_12_50)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_22) ?x25646) 0.0))))
(assert
 (let ((?x25665 (* l_0_12_31 l_0_12_31)))
 (let ((?x25663 (* l_0_12_30 l_0_12_30)))
 (let ((?x18680 (- (- (+ (* l_0_12_2 l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25663) ?x25665)))
 (= ?x18680 0.0)))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25687 (* ?x25686 l_0_12_33)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25684 (* ?x25683 l_0_12_32)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25681 (* ?x25680 l_0_12_5)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_4) ?x25681) ?x25684) ?x25687) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25706 (* ?x25686 l_0_12_36)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25704 (* ?x25683 l_0_12_35)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25702 (* ?x25680 l_0_12_8)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_7) ?x25702) ?x25704) ?x25706) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25727 (* ?x25686 l_0_12_40)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25725 (* ?x25683 l_0_12_39)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25723 (* ?x25722 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x25723) ?x25725) ?x25727) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25762 (* ?x25686 l_0_12_51)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25760 (* ?x25683 l_0_12_50)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25753 (* ?x25752 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_22) ?x25753) ?x25760) ?x25762) 0.0))))))))
(assert
 (let ((?x25786 (* l_0_12_6 l_0_12_6)))
 (let ((?x25784 (* l_0_12_5 l_0_12_5)))
 (let ((?x25782 (* l_0_12_4 l_0_12_4)))
 (let ((?x25780 (* l_0_12_34 l_0_12_34)))
 (let ((?x18754 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25780)))
 (= (+ (+ (+ ?x18754 ?x25782) ?x25784) ?x25786) 0.0)))))))
(assert
 (let ((?x25818 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25815 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x25812 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25809 (* ?x25808 l_0_12_37)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25806 (* ?x25805 l_0_12_36)))
 (let ((?x26351 (+ (+ (- (- (* (* (- 2.0) l_0_12_32) l_0_12_35) ?x25806) ?x25809) ?x25812) ?x25815)))
 (= (+ ?x26351 ?x25818) 0.0))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25854 (* ?x25808 l_0_12_41)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25852 (* ?x25805 l_0_12_40)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25850 (* ?x25802 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25848 (* ?x25847 l_0_12_6)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25845 (* ?x25722 l_0_12_5)))
 (let ((?x26357 (- (- (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x25845) ?x25848) ?x25850) ?x25852)))
 (= (- ?x26357 ?x25854) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25872 (* ?x25808 l_0_12_46)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25870 (* ?x25805 l_0_12_45)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25868 (* ?x25802 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25866 (* ?x25859 l_0_12_6)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18460 (* ?x18386 l_0_12_5)))
 (let ((?x26367 (- (- (+ (+ (* (* 2.0 l_0_12_16) l_0_12_4) ?x18460) ?x25866) ?x25868) ?x25870)))
 (= (- ?x26367 ?x25872) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25900 (* ?x25808 l_0_12_52)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25898 (* ?x25805 l_0_12_51)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25896 (* ?x25802 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x25894 (* ?x25893 l_0_12_6)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25885 (* ?x25752 l_0_12_5)))
 (let ((?x18831 (- (- (+ (+ (* (* 2.0 l_0_12_22) l_0_12_4) ?x25885) ?x25894) ?x25896) ?x25898)))
 (= (- ?x18831 ?x25900) 0.0)))))))))))))
(assert
 (let ((?x25936 (* l_0_12_9 l_0_12_9)))
 (let ((?x25934 (* l_0_12_8 l_0_12_8)))
 (let ((?x25932 (* l_0_12_7 l_0_12_7)))
 (let ((?x25930 (* l_0_12_38 l_0_12_38)))
 (let ((?x25928 (* l_0_12_37 l_0_12_37)))
 (let ((?x25926 (* l_0_12_36 l_0_12_36)))
 (let ((?x2782 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25926) ?x25928)))
 (= (+ (+ (+ (- ?x2782 ?x25930) ?x25932) ?x25934) ?x25936) 0.0)))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25969 (* ?x25968 l_0_12_42)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25966 (* ?x25965 l_0_12_41)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25963 (* ?x25962 l_0_12_40)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25960 (* ?x25959 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25957 (* ?x25847 l_0_12_9)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25955 (* ?x25722 l_0_12_8)))
 (let ((?x25952 (* 2.0 l_0_12_11)))
 (let ((?x25953 (* ?x25952 l_0_12_7)))
 (let ((?x18892 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x25953) ?x25955) ?x25957) ?x25960)))
 (= (- (- (- ?x18892 ?x25963) ?x25966) ?x25969) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25992 (* ?x25968 l_0_12_47)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25990 (* ?x25965 l_0_12_46)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25988 (* ?x25962 l_0_12_45)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25986 (* ?x25959 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25984 (* ?x25859 l_0_12_9)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x25982 (* ?x18386 l_0_12_8)))
 (let ((?x10897 (* 2.0 l_0_12_16)))
 (let ((?x25980 (* ?x10897 l_0_12_7)))
 (let ((?x2840 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x25980) ?x25982) ?x25984) ?x25986)))
 (= (- (- (- ?x2840 ?x25988) ?x25990) ?x25992) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x26013 (* ?x25968 l_0_12_53)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x26011 (* ?x25965 l_0_12_52)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x26009 (* ?x25962 l_0_12_51)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x26007 (* ?x25959 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x26005 (* ?x25893 l_0_12_9)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x11216 (* ?x25752 l_0_12_8)))
 (let ((?x18509 (* 2.0 l_0_12_22)))
 (let ((?x18514 (* ?x18509 l_0_12_7)))
 (let ((?x18979 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_25) ?x18514) ?x11216) ?x26005) ?x26007)))
 (= (- (- (- ?x18979 ?x26009) ?x26011) ?x26013) 0.0)))))))))))))))))
(assert
 (let ((?x26059 (* l_0_12_43 l_0_12_43)))
 (let ((?x26057 (* l_0_12_42 l_0_12_42)))
 (let ((?x26055 (* l_0_12_41 l_0_12_41)))
 (let ((?x26053 (* l_0_12_40 l_0_12_40)))
 (let ((?x26051 (* l_0_12_39 l_0_12_39)))
 (let ((?x26049 (* l_0_12_15 l_0_12_15)))
 (let ((?x26047 (* l_0_12_14 l_0_12_14)))
 (let ((?x26038 (* l_0_12_13 l_0_12_13)))
 (let ((?x19109 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x26038) ?x26047)))
 (= (- (- (- (- (- (+ ?x19109 ?x26049) ?x26051) ?x26053) ?x26055) ?x26057) ?x26059) 0.0)))))))))))
(assert
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26105 (* ?x26104 l_0_12_48)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26102 (* ?x26101 l_0_12_47)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26099 (* ?x26098 l_0_12_46)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26096 (* ?x26095 l_0_12_45)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26093 (* ?x26092 l_0_12_44)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26090 (* ?x26089 l_0_12_20)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26087 (* ?x26086 l_0_12_19)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26084 (* ?x25847 l_0_12_18)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26082 (* ?x25722 l_0_12_17)))
 (let ((?x11866 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x26082) ?x26084) ?x26087) ?x26090)))
 (= (- (- (- (- (- ?x11866 ?x26093) ?x26096) ?x26099) ?x26102) ?x26105) 0.0)))))))))))))))))))))
(assert
 (let ((?x25818 (* (* 2.0 l_0_12_6) l_0_12_9)))
 (let ((?x25815 (* (* 2.0 l_0_12_5) l_0_12_8)))
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26159 (* ?x26104 l_0_12_54)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26157 (* ?x26101 l_0_12_53)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26155 (* ?x26098 l_0_12_52)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26153 (* ?x26095 l_0_12_51)))
 (let ((?x25812 (* (* 2.0 l_0_12_4) l_0_12_7)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26151 (* ?x26092 l_0_12_50)))
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25809 (* ?x25808 l_0_12_37)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25806 (* ?x25805 l_0_12_36)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25803 (* ?x25802 l_0_12_35)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26145 (* ?x26089 l_0_12_26)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26135 (* ?x26086 l_0_12_25)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26132 (* ?x25847 l_0_12_24)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26128 (* ?x25722 l_0_12_23)))
 (let ((?x11949 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x26128) ?x26132) ?x26135) ?x26145)))
 (let ((?x11847 (- (- (+ (- (- (- (- ?x11949 ?x25803) ?x25806) ?x25809) ?x26151) ?x25812) ?x26153) ?x26155)))
 (= (+ (+ (- (- ?x11847 ?x26157) ?x26159) ?x25815) ?x25818) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x26197 (* l_0_12_49 l_0_12_49)))
 (let ((?x26195 (* l_0_12_48 l_0_12_48)))
 (let ((?x26193 (* l_0_12_47 l_0_12_47)))
 (let ((?x26191 (* l_0_12_46 l_0_12_46)))
 (let ((?x26189 (* l_0_12_45 l_0_12_45)))
 (let ((?x26187 (* l_0_12_44 l_0_12_44)))
 (let ((?x26185 (* l_0_12_21 l_0_12_21)))
 (let ((?x26183 (* l_0_12_20 l_0_12_20)))
 (let ((?x26181 (* l_0_12_19 l_0_12_19)))
 (let ((?x26179 (* l_0_12_18 l_0_12_18)))
 (let ((?x12010 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x26179) ?x26181)))
 (let ((?x19047 (- (- (- (- (- (+ (+ ?x12010 ?x26183) ?x26185) ?x26187) ?x26189) ?x26191) ?x26193) ?x26195)))
 (= (- ?x19047 ?x26197) 0.0))))))))))))))
(assert
 (let ((?x26247 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26244 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26241 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26238 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26235 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26232 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26229 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26226 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26223 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x26220 (* ?x25859 l_0_12_24)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x26218 (* ?x18386 l_0_12_23)))
 (let ((?x19478 (+ (+ (+ (+ (* (* 2.0 l_0_12_16) l_0_12_22) ?x26218) ?x26220) ?x26223) ?x26226)))
 (let ((?x19421 (- (- (- (- (- (- (+ ?x19478 ?x26229) ?x26232) ?x26235) ?x26238) ?x26241) ?x26244) ?x26247)))
 (= ?x19421 0.0)))))))))))))))))
(assert
 (let ((?x26311 (* l_0_12_56 l_0_12_56)))
 (let ((?x26309 (* l_0_12_55 l_0_12_55)))
 (let ((?x26307 (* l_0_12_54 l_0_12_54)))
 (let ((?x26305 (* l_0_12_53 l_0_12_53)))
 (let ((?x26303 (* l_0_12_52 l_0_12_52)))
 (let ((?x26301 (* l_0_12_51 l_0_12_51)))
 (let ((?x26299 (* l_0_12_50 l_0_12_50)))
 (let ((?x26297 (* l_0_12_28 l_0_12_28)))
 (let ((?x26295 (* l_0_12_27 l_0_12_27)))
 (let ((?x26293 (* l_0_12_26 l_0_12_26)))
 (let ((?x26282 (* l_0_12_25 l_0_12_25)))
 (let ((?x26279 (* l_0_12_24 l_0_12_24)))
 (let ((?x12317 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26279) ?x26282)))
 (let ((?x19522 (- (- (- (- (+ (+ (+ ?x12317 ?x26293) ?x26295) ?x26297) ?x26299) ?x26301) ?x26303) ?x26305)))
 (= (- (- (- ?x19522 ?x26307) ?x26309) ?x26311) 0.0))))))))))))))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25600 (* ?x25599 l_0_12_30)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_2) ?x25600) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25606 (* ?x25599 l_0_12_32)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_4) ?x25606) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25616 (* ?x25599 l_0_12_35)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_7) ?x25616) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25626 (* ?x25599 l_0_12_39)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_11) ?x25626) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25636 (* ?x25599 l_0_12_44)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_16) ?x25636) 0.0))))
(assert
 (let ((?x25599 (* 2.0 l_0_12_29)))
 (let ((?x25646 (* ?x25599 l_0_12_50)))
 (= (- (* (* 2.0 l_0_12_1) l_0_12_22) ?x25646) 0.0))))
(assert
 (let ((?x25665 (* l_0_12_31 l_0_12_31)))
 (let ((?x25663 (* l_0_12_30 l_0_12_30)))
 (let ((?x18680 (- (- (+ (* l_0_12_2 l_0_12_2) (* l_0_12_3 l_0_12_3)) ?x25663) ?x25665)))
 (= ?x18680 0.0)))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25687 (* ?x25686 l_0_12_33)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25684 (* ?x25683 l_0_12_32)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25681 (* ?x25680 l_0_12_5)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_4) ?x25681) ?x25684) ?x25687) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25706 (* ?x25686 l_0_12_36)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25704 (* ?x25683 l_0_12_35)))
 (let ((?x25680 (* 2.0 l_0_12_3)))
 (let ((?x25702 (* ?x25680 l_0_12_8)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_7) ?x25702) ?x25704) ?x25706) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25727 (* ?x25686 l_0_12_40)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25725 (* ?x25683 l_0_12_39)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25723 (* ?x25722 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_11) l_0_12_2) ?x25723) ?x25725) ?x25727) 0.0))))))))
(assert
 (let ((?x25686 (* 2.0 l_0_12_31)))
 (let ((?x25762 (* ?x25686 l_0_12_51)))
 (let ((?x25683 (* 2.0 l_0_12_30)))
 (let ((?x25760 (* ?x25683 l_0_12_50)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25753 (* ?x25752 l_0_12_3)))
 (= (- (- (+ (* (* 2.0 l_0_12_2) l_0_12_22) ?x25753) ?x25760) ?x25762) 0.0))))))))
(assert
 (let ((?x25786 (* l_0_12_6 l_0_12_6)))
 (let ((?x25784 (* l_0_12_5 l_0_12_5)))
 (let ((?x25782 (* l_0_12_4 l_0_12_4)))
 (let ((?x25780 (* l_0_12_34 l_0_12_34)))
 (let ((?x18754 (- (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x25780)))
 (= (+ (+ (+ ?x18754 ?x25782) ?x25784) ?x25786) 0.0)))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25854 (* ?x25808 l_0_12_41)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25852 (* ?x25805 l_0_12_40)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25850 (* ?x25802 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25848 (* ?x25847 l_0_12_6)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25845 (* ?x25722 l_0_12_5)))
 (let ((?x26357 (- (- (+ (+ (* (* 2.0 l_0_12_11) l_0_12_4) ?x25845) ?x25848) ?x25850) ?x25852)))
 (= (- ?x26357 ?x25854) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25872 (* ?x25808 l_0_12_46)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25870 (* ?x25805 l_0_12_45)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25868 (* ?x25802 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25866 (* ?x25859 l_0_12_6)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x18460 (* ?x18386 l_0_12_5)))
 (let ((?x26367 (- (- (+ (+ (* (* 2.0 l_0_12_16) l_0_12_4) ?x18460) ?x25866) ?x25868) ?x25870)))
 (= (- ?x26367 ?x25872) 0.0)))))))))))))
(assert
 (let ((?x25808 (* 2.0 l_0_12_34)))
 (let ((?x25900 (* ?x25808 l_0_12_52)))
 (let ((?x25805 (* 2.0 l_0_12_33)))
 (let ((?x25898 (* ?x25805 l_0_12_51)))
 (let ((?x25802 (* 2.0 l_0_12_32)))
 (let ((?x25896 (* ?x25802 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x25894 (* ?x25893 l_0_12_6)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x25885 (* ?x25752 l_0_12_5)))
 (let ((?x18831 (- (- (+ (+ (* (* 2.0 l_0_12_22) l_0_12_4) ?x25885) ?x25894) ?x25896) ?x25898)))
 (= (- ?x18831 ?x25900) 0.0)))))))))))))
(assert
 (let ((?x25936 (* l_0_12_9 l_0_12_9)))
 (let ((?x25934 (* l_0_12_8 l_0_12_8)))
 (let ((?x25932 (* l_0_12_7 l_0_12_7)))
 (let ((?x25930 (* l_0_12_38 l_0_12_38)))
 (let ((?x25928 (* l_0_12_37 l_0_12_37)))
 (let ((?x25926 (* l_0_12_36 l_0_12_36)))
 (let ((?x2782 (- (- (- (* l_0_12_10 l_0_12_10) (* l_0_12_35 l_0_12_35)) ?x25926) ?x25928)))
 (= (+ (+ (+ (- ?x2782 ?x25930) ?x25932) ?x25934) ?x25936) 0.0)))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25969 (* ?x25968 l_0_12_42)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25966 (* ?x25965 l_0_12_41)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25963 (* ?x25962 l_0_12_40)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25960 (* ?x25959 l_0_12_39)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x25957 (* ?x25847 l_0_12_9)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x25955 (* ?x25722 l_0_12_8)))
 (let ((?x25952 (* 2.0 l_0_12_11)))
 (let ((?x25953 (* ?x25952 l_0_12_7)))
 (let ((?x18892 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_14) ?x25953) ?x25955) ?x25957) ?x25960)))
 (= (- (- (- ?x18892 ?x25963) ?x25966) ?x25969) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x25992 (* ?x25968 l_0_12_47)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x25990 (* ?x25965 l_0_12_46)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x25988 (* ?x25962 l_0_12_45)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x25986 (* ?x25959 l_0_12_44)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x25984 (* ?x25859 l_0_12_9)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x25982 (* ?x18386 l_0_12_8)))
 (let ((?x10897 (* 2.0 l_0_12_16)))
 (let ((?x25980 (* ?x10897 l_0_12_7)))
 (let ((?x2840 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_19) ?x25980) ?x25982) ?x25984) ?x25986)))
 (= (- (- (- ?x2840 ?x25988) ?x25990) ?x25992) 0.0)))))))))))))))))
(assert
 (let ((?x25968 (* 2.0 l_0_12_38)))
 (let ((?x26013 (* ?x25968 l_0_12_53)))
 (let ((?x25965 (* 2.0 l_0_12_37)))
 (let ((?x26011 (* ?x25965 l_0_12_52)))
 (let ((?x25962 (* 2.0 l_0_12_36)))
 (let ((?x26009 (* ?x25962 l_0_12_51)))
 (let ((?x25959 (* 2.0 l_0_12_35)))
 (let ((?x26007 (* ?x25959 l_0_12_50)))
 (let ((?x25893 (* 2.0 l_0_12_24)))
 (let ((?x26005 (* ?x25893 l_0_12_9)))
 (let ((?x25752 (* 2.0 l_0_12_23)))
 (let ((?x11216 (* ?x25752 l_0_12_8)))
 (let ((?x18509 (* 2.0 l_0_12_22)))
 (let ((?x18514 (* ?x18509 l_0_12_7)))
 (let ((?x18979 (- (+ (+ (+ (* (* 2.0 l_0_12_10) l_0_12_25) ?x18514) ?x11216) ?x26005) ?x26007)))
 (= (- (- (- ?x18979 ?x26009) ?x26011) ?x26013) 0.0)))))))))))))))))
(assert
 (let ((?x26059 (* l_0_12_43 l_0_12_43)))
 (let ((?x26057 (* l_0_12_42 l_0_12_42)))
 (let ((?x26055 (* l_0_12_41 l_0_12_41)))
 (let ((?x26053 (* l_0_12_40 l_0_12_40)))
 (let ((?x26051 (* l_0_12_39 l_0_12_39)))
 (let ((?x26049 (* l_0_12_15 l_0_12_15)))
 (let ((?x26047 (* l_0_12_14 l_0_12_14)))
 (let ((?x26038 (* l_0_12_13 l_0_12_13)))
 (let ((?x19109 (+ (+ (+ (* l_0_12_11 l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x26038) ?x26047)))
 (= (- (- (- (- (- (+ ?x19109 ?x26049) ?x26051) ?x26053) ?x26055) ?x26057) ?x26059) 0.0)))))))))))
(assert
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26105 (* ?x26104 l_0_12_48)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26102 (* ?x26101 l_0_12_47)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26099 (* ?x26098 l_0_12_46)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26096 (* ?x26095 l_0_12_45)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26093 (* ?x26092 l_0_12_44)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26090 (* ?x26089 l_0_12_20)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26087 (* ?x26086 l_0_12_19)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26084 (* ?x25847 l_0_12_18)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26082 (* ?x25722 l_0_12_17)))
 (let ((?x11866 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_16) ?x26082) ?x26084) ?x26087) ?x26090)))
 (= (- (- (- (- (- ?x11866 ?x26093) ?x26096) ?x26099) ?x26102) ?x26105) 0.0)))))))))))))))))))))
(assert
 (let ((?x26104 (* 2.0 l_0_12_43)))
 (let ((?x26159 (* ?x26104 l_0_12_54)))
 (let ((?x26101 (* 2.0 l_0_12_42)))
 (let ((?x26157 (* ?x26101 l_0_12_53)))
 (let ((?x26098 (* 2.0 l_0_12_41)))
 (let ((?x26155 (* ?x26098 l_0_12_52)))
 (let ((?x26095 (* 2.0 l_0_12_40)))
 (let ((?x26153 (* ?x26095 l_0_12_51)))
 (let ((?x26092 (* 2.0 l_0_12_39)))
 (let ((?x26151 (* ?x26092 l_0_12_50)))
 (let ((?x26089 (* 2.0 l_0_12_15)))
 (let ((?x26145 (* ?x26089 l_0_12_26)))
 (let ((?x26086 (* 2.0 l_0_12_14)))
 (let ((?x26135 (* ?x26086 l_0_12_25)))
 (let ((?x25847 (* 2.0 l_0_12_13)))
 (let ((?x26132 (* ?x25847 l_0_12_24)))
 (let ((?x25722 (* 2.0 l_0_12_12)))
 (let ((?x26128 (* ?x25722 l_0_12_23)))
 (let ((?x11949 (+ (+ (+ (+ (* (* 2.0 l_0_12_11) l_0_12_22) ?x26128) ?x26132) ?x26135) ?x26145)))
 (= (- (- (- (- (- ?x11949 ?x26151) ?x26153) ?x26155) ?x26157) ?x26159) 0.0)))))))))))))))))))))
(assert
 (let ((?x26197 (* l_0_12_49 l_0_12_49)))
 (let ((?x26195 (* l_0_12_48 l_0_12_48)))
 (let ((?x26193 (* l_0_12_47 l_0_12_47)))
 (let ((?x26191 (* l_0_12_46 l_0_12_46)))
 (let ((?x26189 (* l_0_12_45 l_0_12_45)))
 (let ((?x26187 (* l_0_12_44 l_0_12_44)))
 (let ((?x26185 (* l_0_12_21 l_0_12_21)))
 (let ((?x26183 (* l_0_12_20 l_0_12_20)))
 (let ((?x26181 (* l_0_12_19 l_0_12_19)))
 (let ((?x26179 (* l_0_12_18 l_0_12_18)))
 (let ((?x12010 (+ (+ (+ (* l_0_12_16 l_0_12_16) (* l_0_12_17 l_0_12_17)) ?x26179) ?x26181)))
 (let ((?x19047 (- (- (- (- (- (+ (+ ?x12010 ?x26183) ?x26185) ?x26187) ?x26189) ?x26191) ?x26193) ?x26195)))
 (= (- ?x19047 ?x26197) 0.0))))))))))))))
(assert
 (let ((?x26247 (* (* 2.0 l_0_12_49) l_0_12_55)))
 (let ((?x26244 (* (* 2.0 l_0_12_48) l_0_12_54)))
 (let ((?x26241 (* (* 2.0 l_0_12_47) l_0_12_53)))
 (let ((?x26238 (* (* 2.0 l_0_12_46) l_0_12_52)))
 (let ((?x26235 (* (* 2.0 l_0_12_45) l_0_12_51)))
 (let ((?x26232 (* (* 2.0 l_0_12_44) l_0_12_50)))
 (let ((?x26229 (* (* 2.0 l_0_12_21) l_0_12_27)))
 (let ((?x26226 (* (* 2.0 l_0_12_20) l_0_12_26)))
 (let ((?x26223 (* (* 2.0 l_0_12_19) l_0_12_25)))
 (let ((?x25859 (* 2.0 l_0_12_18)))
 (let ((?x26220 (* ?x25859 l_0_12_24)))
 (let ((?x18386 (* 2.0 l_0_12_17)))
 (let ((?x26218 (* ?x18386 l_0_12_23)))
 (let ((?x19478 (+ (+ (+ (+ (* (* 2.0 l_0_12_16) l_0_12_22) ?x26218) ?x26220) ?x26223) ?x26226)))
 (let ((?x19421 (- (- (- (- (- (- (+ ?x19478 ?x26229) ?x26232) ?x26235) ?x26238) ?x26241) ?x26244) ?x26247)))
 (= ?x19421 0.0)))))))))))))))))
(assert
 (let ((?x26311 (* l_0_12_56 l_0_12_56)))
 (let ((?x26309 (* l_0_12_55 l_0_12_55)))
 (let ((?x26307 (* l_0_12_54 l_0_12_54)))
 (let ((?x26305 (* l_0_12_53 l_0_12_53)))
 (let ((?x26303 (* l_0_12_52 l_0_12_52)))
 (let ((?x26301 (* l_0_12_51 l_0_12_51)))
 (let ((?x26299 (* l_0_12_50 l_0_12_50)))
 (let ((?x26297 (* l_0_12_28 l_0_12_28)))
 (let ((?x26295 (* l_0_12_27 l_0_12_27)))
 (let ((?x26293 (* l_0_12_26 l_0_12_26)))
 (let ((?x26282 (* l_0_12_25 l_0_12_25)))
 (let ((?x26279 (* l_0_12_24 l_0_12_24)))
 (let ((?x12317 (+ (+ (+ (* l_0_12_22 l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x26279) ?x26282)))
 (let ((?x19522 (- (- (- (- (+ (+ (+ ?x12317 ?x26293) ?x26295) ?x26297) ?x26299) ?x26301) ?x26303) ?x26305)))
 (= (- (- (- ?x19522 ?x26307) ?x26309) ?x26311) 0.0))))))))))))))))
(assert
 (let ((?x12145 (* l_0_12_85 l_0_12_85)))
 (let ((?x19344 (- (* (- l_0_12_113) l_0_12_113) (* (* 1.0 l_0_12_57) l_0_12_57))))
 (= (- ?x19344 ?x12145) 0.0))))
(assert
 (let ((?x19111 (- (* (* (- 2.0) l_0_12_113) l_0_12_114) (* (* 2.0 l_0_12_57) l_0_12_58))))
 (= (- ?x19111 (* (* 2.0 l_0_12_85) l_0_12_86)) 0.0)))
(assert
 (let ((?x26410 (- (* (* (- 2.0) l_0_12_113) l_0_12_116) (* (* 2.0 l_0_12_57) l_0_12_60))))
 (= (- ?x26410 (* (* 2.0 l_0_12_85) l_0_12_88)) 0.0)))
(assert
 (let ((?x26433 (- (* (* (- 2.0) l_0_12_113) l_0_12_123) (* (* 2.0 l_0_12_57) l_0_12_67))))
 (= (- ?x26433 (* (* 2.0 l_0_12_85) l_0_12_95)) 0.0)))
(assert
 (let ((?x26457 (- (* (* (- 2.0) l_0_12_100) l_0_12_85) (* (* 2.0 l_0_12_113) l_0_12_128))))
 (= (- ?x26457 (* (* 2.0 l_0_12_57) l_0_12_72)) 0.0)))
(assert
 (let ((?x26481 (- (* (* (- 2.0) l_0_12_106) l_0_12_85) (* (* 2.0 l_0_12_113) l_0_12_134))))
 (= (- ?x26481 (* (* 2.0 l_0_12_57) l_0_12_78)) 0.0)))
(assert
 (let ((?x26514 (* l_0_12_87 l_0_12_87)))
 (let ((?x26512 (* l_0_12_86 l_0_12_86)))
 (let ((?x26508 (- (- (* (- l_0_12_114) l_0_12_114) (* l_0_12_115 l_0_12_115)) (* (* 1.0 l_0_12_58) l_0_12_58))))
 (= (- (- (- ?x26508 (* (* 1.0 l_0_12_59) l_0_12_59)) ?x26512) ?x26514) 0.0)))))
(assert
 (let ((?x26542 (- (* (* (- 2.0) l_0_12_114) l_0_12_116) (* (* 2.0 l_0_12_115) l_0_12_117))))
 (let ((?x26546 (- (- ?x26542 (* (* 2.0 l_0_12_58) l_0_12_60)) (* (* 2.0 l_0_12_59) l_0_12_61))))
 (let ((?x26552 (- (- ?x26546 (* (* 2.0 l_0_12_86) l_0_12_88)) (* (* 2.0 l_0_12_87) l_0_12_89))))
 (= ?x26552 0.0)))))
(assert
 (let ((?x26591 (- (* (* (- 2.0) l_0_12_114) l_0_12_119) (* (* 2.0 l_0_12_115) l_0_12_120))))
 (let ((?x26595 (- (- ?x26591 (* (* 2.0 l_0_12_58) l_0_12_63)) (* (* 2.0 l_0_12_59) l_0_12_64))))
 (let ((?x26599 (- (- ?x26595 (* (* 2.0 l_0_12_86) l_0_12_91)) (* (* 2.0 l_0_12_87) l_0_12_92))))
 (= ?x26599 0.0)))))
(assert
 (let ((?x26638 (- (* (* (- 2.0) l_0_12_114) l_0_12_123) (* (* 2.0 l_0_12_115) l_0_12_124))))
 (let ((?x26642 (- (- ?x26638 (* (* 2.0 l_0_12_58) l_0_12_67)) (* (* 2.0 l_0_12_59) l_0_12_68))))
 (let ((?x26646 (- (- ?x26642 (* (* 2.0 l_0_12_86) l_0_12_95)) (* (* 2.0 l_0_12_87) l_0_12_96))))
 (= ?x26646 0.0)))))
(assert
 (let ((?x26685 (- (* (* (- 2.0) l_0_12_106) l_0_12_86) (* (* 2.0 l_0_12_107) l_0_12_87))))
 (let ((?x26689 (- (- ?x26685 (* (* 2.0 l_0_12_114) l_0_12_134)) (* (* 2.0 l_0_12_115) l_0_12_135))))
 (let ((?x26693 (- (- ?x26689 (* (* 2.0 l_0_12_58) l_0_12_78)) (* (* 2.0 l_0_12_59) l_0_12_79))))
 (= ?x26693 0.0)))))
(assert
 (let ((?x26749 (* l_0_12_90 l_0_12_90)))
 (let ((?x26747 (* l_0_12_89 l_0_12_89)))
 (let ((?x26745 (* l_0_12_88 l_0_12_88)))
 (let ((?x26734 (* l_0_12_118 l_0_12_118)))
 (let ((?x26735 (- (- (* (- l_0_12_116) l_0_12_116) (* l_0_12_117 l_0_12_117)) ?x26734)))
 (let ((?x26741 (- (- ?x26735 (* (* 1.0 l_0_12_60) l_0_12_60)) (* (* 1.0 l_0_12_61) l_0_12_61))))
 (let ((?x26750 (- (- (- (- ?x26741 (* (* 1.0 l_0_12_62) l_0_12_62)) ?x26745) ?x26747) ?x26749)))
 (= ?x26750 0.0)))))))))
(assert
 (let ((?x26787 (- (* (* (- 2.0) l_0_12_116) l_0_12_123) (* (* 2.0 l_0_12_117) l_0_12_124))))
 (let ((?x26791 (- (- ?x26787 (* (* 2.0 l_0_12_118) l_0_12_125)) (* (* 2.0 l_0_12_60) l_0_12_67))))
 (let ((?x26795 (- (- ?x26791 (* (* 2.0 l_0_12_61) l_0_12_68)) (* (* 2.0 l_0_12_62) l_0_12_69))))
 (let ((?x26799 (- (- ?x26795 (* (* 2.0 l_0_12_88) l_0_12_95)) (* (* 2.0 l_0_12_89) l_0_12_96))))
 (= (- ?x26799 (* (* 2.0 l_0_12_90) l_0_12_97)) 0.0))))))
(assert
 (let ((?x26858 (- (* (* (- 2.0) l_0_12_100) l_0_12_88) (* (* 2.0 l_0_12_101) l_0_12_89))))
 (let ((?x26863 (- (- ?x26858 (* (* 2.0 l_0_12_102) l_0_12_90)) (* (* 2.0 l_0_12_116) l_0_12_128))))
 (let ((?x26867 (- (- ?x26863 (* (* 2.0 l_0_12_117) l_0_12_129)) (* (* 2.0 l_0_12_118) l_0_12_130))))
 (let ((?x26871 (- (- ?x26867 (* (* 2.0 l_0_12_60) l_0_12_72)) (* (* 2.0 l_0_12_61) l_0_12_73))))
 (= (- ?x26871 (* (* 2.0 l_0_12_62) l_0_12_74)) 0.0))))))
(assert
 (let ((?x12638 (- (* (* (- 2.0) l_0_12_106) l_0_12_88) (* (* 2.0 l_0_12_107) l_0_12_89))))
 (let ((?x26910 (- (- ?x12638 (* (* 2.0 l_0_12_108) l_0_12_90)) (* (* 2.0 l_0_12_116) l_0_12_134))))
 (let ((?x26914 (- (- ?x26910 (* (* 2.0 l_0_12_117) l_0_12_135)) (* (* 2.0 l_0_12_118) l_0_12_136))))
 (let ((?x26918 (- (- ?x26914 (* (* 2.0 l_0_12_60) l_0_12_78)) (* (* 2.0 l_0_12_61) l_0_12_79))))
 (= (- ?x26918 (* (* 2.0 l_0_12_62) l_0_12_80)) 0.0))))))
(assert
 (let ((?x26968 (* l_0_12_94 l_0_12_94)))
 (let ((?x26966 (* l_0_12_93 l_0_12_93)))
 (let ((?x26964 (* l_0_12_92 l_0_12_92)))
 (let ((?x26962 (* l_0_12_91 l_0_12_91)))
 (let ((?x26948 (* l_0_12_122 l_0_12_122)))
 (let ((?x26946 (* l_0_12_121 l_0_12_121)))
 (let ((?x26947 (- (- (* (- l_0_12_119) l_0_12_119) (* l_0_12_120 l_0_12_120)) ?x26946)))
 (let ((?x26955 (- (- (- ?x26947 ?x26948) (* (* 1.0 l_0_12_63) l_0_12_63)) (* (* 1.0 l_0_12_64) l_0_12_64))))
 (let ((?x26961 (- (- ?x26955 (* (* 1.0 l_0_12_65) l_0_12_65)) (* (* 1.0 l_0_12_66) l_0_12_66))))
 (= (- (- (- (- ?x26961 ?x26962) ?x26964) ?x26966) ?x26968) 0.0)))))))))))
(assert
 (let ((?x26992 (- (* (* (- 2.0) l_0_12_100) l_0_12_91) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x26997 (- (- ?x26992 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_103) l_0_12_94))))
 (let ((?x27001 (- (- ?x26997 (* (* 2.0 l_0_12_119) l_0_12_128)) (* (* 2.0 l_0_12_120) l_0_12_129))))
 (let ((?x27005 (- (- ?x27001 (* (* 2.0 l_0_12_121) l_0_12_130)) (* (* 2.0 l_0_12_122) l_0_12_131))))
 (let ((?x27009 (- (- ?x27005 (* (* 2.0 l_0_12_63) l_0_12_72)) (* (* 2.0 l_0_12_64) l_0_12_73))))
 (let ((?x27013 (- (- ?x27009 (* (* 2.0 l_0_12_65) l_0_12_74)) (* (* 2.0 l_0_12_66) l_0_12_75))))
 (= ?x27013 0.0))))))))
(assert
 (let ((?x27034 (- (* (* (- 2.0) l_0_12_106) l_0_12_91) (* (* 2.0 l_0_12_107) l_0_12_92))))
 (let ((?x27038 (- (- ?x27034 (* (* 2.0 l_0_12_108) l_0_12_93)) (* (* 2.0 l_0_12_109) l_0_12_94))))
 (let ((?x27042 (- (- ?x27038 (* (* 2.0 l_0_12_119) l_0_12_134)) (* (* 2.0 l_0_12_120) l_0_12_135))))
 (let ((?x27046 (- (- ?x27042 (* (* 2.0 l_0_12_121) l_0_12_136)) (* (* 2.0 l_0_12_122) l_0_12_137))))
 (let ((?x27050 (- (- ?x27046 (* (* 2.0 l_0_12_63) l_0_12_78)) (* (* 2.0 l_0_12_64) l_0_12_79))))
 (let ((?x27054 (- (- ?x27050 (* (* 2.0 l_0_12_65) l_0_12_80)) (* (* 2.0 l_0_12_66) l_0_12_81))))
 (= ?x27054 0.0))))))))
(assert
 (let ((?x27156 (* l_0_12_99 l_0_12_99)))
 (let ((?x27154 (* l_0_12_98 l_0_12_98)))
 (let ((?x27152 (* l_0_12_97 l_0_12_97)))
 (let ((?x27150 (* l_0_12_96 l_0_12_96)))
 (let ((?x27148 (* l_0_12_95 l_0_12_95)))
 (let ((?x27131 (* l_0_12_127 l_0_12_127)))
 (let ((?x27129 (* l_0_12_126 l_0_12_126)))
 (let ((?x27127 (* l_0_12_125 l_0_12_125)))
 (let ((?x27128 (- (- (* (- l_0_12_123) l_0_12_123) (* l_0_12_124 l_0_12_124)) ?x27127)))
 (let ((?x27138 (- (- (- (- ?x27128 ?x27129) ?x27131) (* (* 1.0 l_0_12_67) l_0_12_67)) (* (* 1.0 l_0_12_68) l_0_12_68))))
 (let ((?x27144 (- (- ?x27138 (* (* 1.0 l_0_12_69) l_0_12_69)) (* (* 1.0 l_0_12_70) l_0_12_70))))
 (let ((?x27153 (- (- (- (- ?x27144 (* (* 1.0 l_0_12_71) l_0_12_71)) ?x27148) ?x27150) ?x27152)))
 (= (- (- ?x27153 ?x27154) ?x27156) 0.0))))))))))))))
(assert
 (let ((?x27213 (- (* (* (- 2.0) l_0_12_100) l_0_12_95) (* (* 2.0 l_0_12_101) l_0_12_96))))
 (let ((?x27217 (- (- ?x27213 (* (* 2.0 l_0_12_102) l_0_12_97)) (* (* 2.0 l_0_12_103) l_0_12_98))))
 (let ((?x27222 (- (- ?x27217 (* (* 2.0 l_0_12_104) l_0_12_99)) (* (* 2.0 l_0_12_123) l_0_12_128))))
 (let ((?x27226 (- (- ?x27222 (* (* 2.0 l_0_12_124) l_0_12_129)) (* (* 2.0 l_0_12_125) l_0_12_130))))
 (let ((?x27230 (- (- ?x27226 (* (* 2.0 l_0_12_126) l_0_12_131)) (* (* 2.0 l_0_12_127) l_0_12_132))))
 (let ((?x27234 (- (- ?x27230 (* (* 2.0 l_0_12_67) l_0_12_72)) (* (* 2.0 l_0_12_68) l_0_12_73))))
 (let ((?x27238 (- (- ?x27234 (* (* 2.0 l_0_12_69) l_0_12_74)) (* (* 2.0 l_0_12_70) l_0_12_75))))
 (= (- ?x27238 (* (* 2.0 l_0_12_71) l_0_12_76)) 0.0)))))))))
(assert
 (let ((?x27345 (* l_0_12_133 l_0_12_133)))
 (let ((?x27343 (* l_0_12_132 l_0_12_132)))
 (let ((?x27341 (* l_0_12_131 l_0_12_131)))
 (let ((?x27339 (* l_0_12_130 l_0_12_130)))
 (let ((?x27337 (* l_0_12_129 l_0_12_129)))
 (let ((?x27335 (* l_0_12_128 l_0_12_128)))
 (let ((?x27333 (* l_0_12_105 l_0_12_105)))
 (let ((?x27331 (* l_0_12_104 l_0_12_104)))
 (let ((?x27329 (* l_0_12_103 l_0_12_103)))
 (let ((?x27327 (* l_0_12_102 l_0_12_102)))
 (let ((?x27328 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_101 l_0_12_101)) ?x27327)))
 (let ((?x27342 (- (- (- (- (- (- (- ?x27328 ?x27329) ?x27331) ?x27333) ?x27335) ?x27337) ?x27339) ?x27341)))
 (let ((?x27352 (- (- (- (- ?x27342 ?x27343) ?x27345) (* (* 1.0 l_0_12_72) l_0_12_72)) (* (* 1.0 l_0_12_73) l_0_12_73))))
 (let ((?x27358 (- (- ?x27352 (* (* 1.0 l_0_12_74) l_0_12_74)) (* (* 1.0 l_0_12_75) l_0_12_75))))
 (let ((?x27364 (- (- ?x27358 (* (* 1.0 l_0_12_76) l_0_12_76)) (* (* 1.0 l_0_12_77) l_0_12_77))))
 (= ?x27364 0.0)))))))))))))))))
(assert
 (let ((?x27417 (- (* (* (- 2.0) l_0_12_100) l_0_12_106) (* (* 2.0 l_0_12_101) l_0_12_107))))
 (let ((?x27421 (- (- ?x27417 (* (* 2.0 l_0_12_102) l_0_12_108)) (* (* 2.0 l_0_12_103) l_0_12_109))))
 (let ((?x27426 (- (- ?x27421 (* (* 2.0 l_0_12_104) l_0_12_110)) (* (* 2.0 l_0_12_105) l_0_12_111))))
 (let ((?x27432 (- (- ?x27426 (* (* 2.0 l_0_12_128) l_0_12_134)) (* (* 2.0 l_0_12_129) l_0_12_135))))
 (let ((?x27438 (- (- ?x27432 (* (* 2.0 l_0_12_130) l_0_12_136)) (* (* 2.0 l_0_12_131) l_0_12_137))))
 (let ((?x27444 (- (- ?x27438 (* (* 2.0 l_0_12_132) l_0_12_138)) (* (* 2.0 l_0_12_133) l_0_12_139))))
 (let ((?x27450 (- (- ?x27444 (* (* 2.0 l_0_12_72) l_0_12_78)) (* (* 2.0 l_0_12_73) l_0_12_79))))
 (let ((?x27456 (- (- ?x27450 (* (* 2.0 l_0_12_74) l_0_12_80)) (* (* 2.0 l_0_12_75) l_0_12_81))))
 (let ((?x27462 (- (- ?x27456 (* (* 2.0 l_0_12_76) l_0_12_82)) (* (* 2.0 l_0_12_77) l_0_12_83))))
 (= ?x27462 0.0)))))))))))
(assert
 (let ((?x27549 (* l_0_12_140 l_0_12_140)))
 (let ((?x27547 (* l_0_12_139 l_0_12_139)))
 (let ((?x27545 (* l_0_12_138 l_0_12_138)))
 (let ((?x27543 (* l_0_12_137 l_0_12_137)))
 (let ((?x27541 (* l_0_12_136 l_0_12_136)))
 (let ((?x27539 (* l_0_12_135 l_0_12_135)))
 (let ((?x27537 (* l_0_12_134 l_0_12_134)))
 (let ((?x27535 (* l_0_12_112 l_0_12_112)))
 (let ((?x27533 (* l_0_12_111 l_0_12_111)))
 (let ((?x27531 (* l_0_12_110 l_0_12_110)))
 (let ((?x27529 (* l_0_12_109 l_0_12_109)))
 (let ((?x27527 (* l_0_12_108 l_0_12_108)))
 (let ((?x27528 (- (- (* (- l_0_12_106) l_0_12_106) (* l_0_12_107 l_0_12_107)) ?x27527)))
 (let ((?x27542 (- (- (- (- (- (- (- ?x27528 ?x27529) ?x27531) ?x27533) ?x27535) ?x27537) ?x27539) ?x27541)))
 (let ((?x27553 (- (- (- (- (- ?x27542 ?x27543) ?x27545) ?x27547) ?x27549) (* (* 1.0 l_0_12_78) l_0_12_78))))
 (let ((?x27559 (- (- ?x27553 (* (* 1.0 l_0_12_79) l_0_12_79)) (* (* 1.0 l_0_12_80) l_0_12_80))))
 (let ((?x27565 (- (- ?x27559 (* (* 1.0 l_0_12_81) l_0_12_81)) (* (* 1.0 l_0_12_82) l_0_12_82))))
 (let ((?x27571 (- (- ?x27565 (* (* 1.0 l_0_12_83) l_0_12_83)) (* (* 1.0 l_0_12_84) l_0_12_84))))
 (= ?x27571 0.0))))))))))))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_28 0.0))
(assert
 (>= l_0_12_29 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_34 0.0))
(assert
 (>= l_0_12_38 0.0))
(assert
 (>= l_0_12_43 0.0))
(assert
 (>= l_0_12_49 0.0))
(assert
 (>= l_0_12_56 0.0))
(assert
 (>= l_0_12_57 0.0))
(assert
 (>= l_0_12_59 0.0))
(assert
 (>= l_0_12_62 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_71 0.0))
(assert
 (>= l_0_12_77 0.0))
(assert
 (>= l_0_12_84 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_87 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_94 0.0))
(assert
 (>= l_0_12_99 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_112 0.0))
(assert
 (>= l_0_12_113 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_118 0.0))
(assert
 (>= l_0_12_122 0.0))
(assert
 (>= l_0_12_127 0.0))
(assert
 (>= l_0_12_133 0.0))
(assert
 (>= l_0_12_140 0.0))
(check-sat)
(get-model)