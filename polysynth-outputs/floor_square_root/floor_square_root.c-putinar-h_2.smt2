(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun _a_3_ () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_15 () Real)
(assert
 (= (- 1.0 l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x907 (- (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7)))
 (= (- ?x907 l_0_3_8) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (let ((?x947 (- (- (- (- (- (- l_0_4_10) l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6)))
 (= (- (- (- ?x947 l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (let ((?x1011 (* l_0_5_76 l_0_5_76)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x1009 (* ?x1008 l_0_5_71)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x1006 (* ?x1005 l_0_5_56)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x1003 (* ?x1002 l_0_5_41)))
 (let ((?x999 (* 2.0 l_0_5_16)))
 (let ((?x1000 (* ?x999 l_0_5_26)))
 (let ((?x1001 (- (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_101) l_0_5_91)) ?x1000)))
 (= (+ (+ (+ (- (+ ?x1001 ?x1003) ?x1006) ?x1009) ?x1011) 1.0) 0.0))))))))))))
(assert
 (let ((?x1101 (* l_0_5_96 l_0_5_96)))
 (let ((?x1099 (* l_0_5_95 l_0_5_95)))
 (let ((?x1097 (* l_0_5_94 l_0_5_94)))
 (let ((?x1086 (* l_0_5_61 l_0_5_61)))
 (let ((?x1072 (* l_0_5_46 l_0_5_46)))
 (let ((?x1050 (- (- (* l_0_5_1 l_0_5_1) (* (* 4.0 l_0_5_16) l_0_5_19)) (* (* 1.0 l_0_5_19) l_0_5_19))))
 (let ((?x1056 (- (- ?x1050 (* (* 1.0 l_0_5_20) l_0_5_20)) (* (* 1.0 l_0_5_21) l_0_5_21))))
 (let ((?x1062 (+ (+ ?x1056 (* (* 4.0 l_0_5_31) l_0_5_34)) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x1068 (+ (+ ?x1062 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x1076 (- (- (- ?x1068 (* (* 4.0 l_0_5_46) l_0_5_49)) ?x1072) (* (* 1.0 l_0_5_49) l_0_5_49))))
 (let ((?x1082 (- (- ?x1076 (* (* 1.0 l_0_5_50) l_0_5_50)) (* (* 1.0 l_0_5_51) l_0_5_51))))
 (let ((?x1090 (+ (+ (+ ?x1082 (* (* 4.0 l_0_5_61) l_0_5_64)) ?x1086) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x1096 (+ (+ ?x1090 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- (- ?x1096 ?x1097) ?x1099) ?x1101) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1198 (* ?x1197 l_0_5_77)))
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x1195 (* ?x1194 l_0_5_72)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x1192 (* ?x1191 l_0_5_71)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x1189 (* ?x1188 l_0_5_57)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x1186 (* ?x1185 l_0_5_56)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x1183 (* ?x1182 l_0_5_42)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x1180 (* ?x1179 l_0_5_41)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x1003 (* ?x1002 l_0_5_41)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x1176 (* ?x1175 l_0_5_27)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x1173 (* ?x1172 l_0_5_26)))
 (let ((?x999 (* 2.0 l_0_5_16)))
 (let ((?x1000 (* ?x999 l_0_5_26)))
 (let ((?x1167 (- (* (* (- 2.0) l_0_5_1) l_0_5_2) (* (* 2.0 l_0_5_101) l_0_5_92))))
 (let ((?x1177 (- (- (+ (- ?x1167 (* (* 2.0 l_0_5_102) l_0_5_93)) ?x1000) ?x1173) ?x1176)))
 (let ((?x1196 (+ (+ (- (- (+ (+ (- ?x1177 ?x1003) ?x1180) ?x1183) ?x1186) ?x1189) ?x1192) ?x1195)))
 (= (+ ?x1196 ?x1198) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1309 (* ?x1197 l_0_5_79)))
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x1307 (* ?x1306 l_0_5_73)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x1304 (* ?x1303 l_0_5_72)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x1301 (* ?x1300 l_0_5_71)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x1296 (* ?x1295 l_0_5_58)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x1293 (* ?x1292 l_0_5_57)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x1290 (* ?x1289 l_0_5_56)))
 (let ((?x1284 (* 2.0 l_0_5_36)))
 (let ((?x1285 (* ?x1284 l_0_5_43)))
 (let ((?x1281 (* 2.0 l_0_5_35)))
 (let ((?x1282 (* ?x1281 l_0_5_42)))
 (let ((?x1278 (* 2.0 l_0_5_34)))
 (let ((?x1279 (* ?x1278 l_0_5_41)))
 (let ((?x1273 (* 2.0 l_0_5_21)))
 (let ((?x1274 (* ?x1273 l_0_5_28)))
 (let ((?x1270 (* 2.0 l_0_5_20)))
 (let ((?x1271 (* ?x1270 l_0_5_27)))
 (let ((?x1267 (* 2.0 l_0_5_19)))
 (let ((?x1268 (* ?x1267 l_0_5_26)))
 (let ((?x1259 (- (* (* (- 2.0) l_0_5_1) l_0_5_4) (* (* 2.0 l_0_5_101) l_0_5_94))))
 (let ((?x1264 (- (- ?x1259 (* (* 2.0 l_0_5_102) l_0_5_95)) (* (* 2.0 l_0_5_103) l_0_5_96))))
 (let ((?x1275 (- (- (- (- ?x1264 (* (* 4.0 l_0_5_16) l_0_5_26)) ?x1268) ?x1271) ?x1274)))
 (let ((?x1286 (+ (+ (+ (+ ?x1275 (* (* 4.0 l_0_5_31) l_0_5_41)) ?x1279) ?x1282) ?x1285)))
 (let ((?x1297 (- (- (- (- ?x1286 (* (* 4.0 l_0_5_46) l_0_5_56)) ?x1290) ?x1293) ?x1296)))
 (let ((?x1308 (+ (+ (+ (+ ?x1297 (* (* 4.0 l_0_5_61) l_0_5_71)) ?x1301) ?x1304) ?x1307)))
 (= (+ ?x1308 ?x1309) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1464 (* ?x1197 l_0_5_86)))
 (let ((?x1462 (* ?x1197 l_0_5_82)))
 (let ((?x1460 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x1457 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1454 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1451 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x1009 (* ?x1008 l_0_5_71)))
 (let ((?x1446 (* 2.0 l_0_5_55)))
 (let ((?x1447 (* ?x1446 l_0_5_59)))
 (let ((?x1443 (* 2.0 l_0_5_54)))
 (let ((?x1444 (* ?x1443 l_0_5_58)))
 (let ((?x1440 (* 2.0 l_0_5_53)))
 (let ((?x1441 (* ?x1440 l_0_5_57)))
 (let ((?x1437 (* 2.0 l_0_5_52)))
 (let ((?x1438 (* ?x1437 l_0_5_56)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x1006 (* ?x1005 l_0_5_56)))
 (let ((?x1434 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x1431 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x1428 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x1425 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x1421 (* 2.0 l_0_5_25)))
 (let ((?x1422 (* ?x1421 l_0_5_29)))
 (let ((?x1418 (* 2.0 l_0_5_24)))
 (let ((?x1419 (* ?x1418 l_0_5_28)))
 (let ((?x1415 (* 2.0 l_0_5_23)))
 (let ((?x1416 (* ?x1415 l_0_5_27)))
 (let ((?x1413 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x1392 (- (* (* (- 2.0) l_0_5_1) l_0_5_7) (* (* 2.0 l_0_5_100) l_0_5_104))))
 (let ((?x1409 (- (- ?x1392 (* (* 2.0 l_0_5_101) l_0_5_97)) (* (* 2.0 l_0_5_102) l_0_5_98))))
 (let ((?x1420 (- (- (- (- ?x1409 (* (* 2.0 l_0_5_103) l_0_5_99)) ?x1413) ?x1416) ?x1419)))
 (let ((?x1439 (- (+ (+ (+ (+ (+ (- ?x1420 ?x1422) ?x1425) ?x1428) ?x1431) ?x1434) ?x1006) ?x1438)))
 (let ((?x1458 (+ (+ (+ (- (- (- (- ?x1439 ?x1441) ?x1444) ?x1447) ?x1009) ?x1451) ?x1454) ?x1457)))
 (= (- (+ (+ ?x1458 ?x1460) ?x1462) ?x1464) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1464 (* ?x1197 l_0_5_86)))
 (let ((?x1581 (* l_0_5_105 l_0_5_105)))
 (let ((?x1579 (* l_0_5_104 l_0_5_104)))
 (let ((?x1577 (* l_0_5_103 l_0_5_103)))
 (let ((?x1575 (* l_0_5_102 l_0_5_102)))
 (let ((?x1576 (- (- (* (* (- 2.0) l_0_5_1) l_0_5_11) (* l_0_5_101 l_0_5_101)) ?x1575)))
 (let ((?x1585 (- (- (- (- ?x1576 ?x1577) ?x1579) ?x1581) (* (* 1.0 l_0_5_26) l_0_5_26))))
 (let ((?x1591 (- (- ?x1585 (* (* 1.0 l_0_5_27) l_0_5_27)) (* (* 1.0 l_0_5_28) l_0_5_28))))
 (let ((?x1597 (- (- ?x1591 (* (* 1.0 l_0_5_29) l_0_5_29)) (* (* 1.0 l_0_5_30) l_0_5_30))))
 (let ((?x1603 (+ (+ ?x1597 (* 1.0 (* l_0_5_41 l_0_5_41))) (* 1.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x1609 (+ (+ ?x1603 (* 1.0 (* l_0_5_43 l_0_5_43))) (* 1.0 (* l_0_5_44 l_0_5_44)))))
 (let ((?x1615 (- (+ ?x1609 (* 1.0 (* l_0_5_45 l_0_5_45))) (* (* 1.0 l_0_5_56) l_0_5_56))))
 (let ((?x1621 (- (- ?x1615 (* (* 1.0 l_0_5_57) l_0_5_57)) (* (* 1.0 l_0_5_58) l_0_5_58))))
 (let ((?x1627 (- (- ?x1621 (* (* 1.0 l_0_5_59) l_0_5_59)) (* (* 1.0 l_0_5_60) l_0_5_60))))
 (let ((?x1633 (+ (+ ?x1627 (* 1.0 (* l_0_5_71 l_0_5_71))) (* 1.0 (* l_0_5_72 l_0_5_72)))))
 (let ((?x1639 (+ (+ ?x1633 (* 1.0 (* l_0_5_73 l_0_5_73))) (* 1.0 (* l_0_5_74 l_0_5_74)))))
 (= (+ (+ ?x1639 (* 1.0 (* l_0_5_75 l_0_5_75))) ?x1464) 0.0)))))))))))))))))))
(assert
 (let ((?x1714 (* l_0_5_78 l_0_5_78)))
 (let ((?x1712 (* l_0_5_77 l_0_5_77)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x1183 (* ?x1182 l_0_5_42)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x1180 (* ?x1179 l_0_5_41)))
 (let ((?x1708 (* l_0_5_3 l_0_5_3)))
 (let ((?x1706 (* l_0_5_2 l_0_5_2)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x1176 (* ?x1175 l_0_5_27)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x1173 (* ?x1172 l_0_5_26)))
 (let ((?x1715 (+ (+ (- (- (- (- (+ ?x1173 ?x1176) ?x1706) ?x1708) ?x1180) ?x1183) ?x1712) ?x1714)))
 (= ?x1715 0.0)))))))))))))))
(assert
 (let ((?x1772 (* 2.0 l_0_5_78)))
 (let ((?x1773 (* ?x1772 l_0_5_80)))
 (let ((?x1769 (* 2.0 l_0_5_77)))
 (let ((?x1770 (* ?x1769 l_0_5_79)))
 (let ((?x1284 (* 2.0 l_0_5_36)))
 (let ((?x1285 (* ?x1284 l_0_5_43)))
 (let ((?x1281 (* 2.0 l_0_5_35)))
 (let ((?x1282 (* ?x1281 l_0_5_42)))
 (let ((?x1278 (* 2.0 l_0_5_34)))
 (let ((?x1279 (* ?x1278 l_0_5_41)))
 (let ((?x1745 (* 2.0 l_0_5_3)))
 (let ((?x1746 (* ?x1745 l_0_5_5)))
 (let ((?x1273 (* 2.0 l_0_5_21)))
 (let ((?x1274 (* ?x1273 l_0_5_28)))
 (let ((?x1270 (* 2.0 l_0_5_20)))
 (let ((?x1271 (* ?x1270 l_0_5_27)))
 (let ((?x1740 (* 2.0 l_0_5_2)))
 (let ((?x1741 (* ?x1740 l_0_5_4)))
 (let ((?x1267 (* 2.0 l_0_5_19)))
 (let ((?x1268 (* ?x1267 l_0_5_26)))
 (let ((?x1738 (- (* (* (- 4.0) l_0_5_17) l_0_5_26) (* (* 4.0 l_0_5_18) l_0_5_27))))
 (let ((?x1750 (+ (- (+ (+ (- (+ ?x1738 ?x1268) ?x1741) ?x1271) ?x1274) ?x1746) (* (* 4.0 l_0_5_32) l_0_5_41))))
 (let ((?x1756 (- (- (- (+ ?x1750 (* (* 4.0 l_0_5_33) l_0_5_42)) ?x1279) ?x1282) ?x1285)))
 (let ((?x1762 (- (- ?x1756 (* (* 4.0 l_0_5_47) l_0_5_56)) (* (* 4.0 l_0_5_48) l_0_5_57))))
 (let ((?x1768 (+ (+ ?x1762 (* (* 4.0 l_0_5_62) l_0_5_71)) (* (* 4.0 l_0_5_63) l_0_5_72))))
 (= (+ (+ ?x1768 ?x1770) ?x1773) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x1772 (* 2.0 l_0_5_78)))
 (let ((?x1851 (* ?x1772 l_0_5_87)))
 (let ((?x1849 (* ?x1772 l_0_5_83)))
 (let ((?x1769 (* 2.0 l_0_5_77)))
 (let ((?x1847 (* ?x1769 l_0_5_86)))
 (let ((?x1845 (* ?x1769 l_0_5_82)))
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x1195 (* ?x1194 l_0_5_72)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x1192 (* ?x1191 l_0_5_71)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x1189 (* ?x1188 l_0_5_57)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x1186 (* ?x1185 l_0_5_56)))
 (let ((?x1434 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x1431 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x1428 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x1425 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x1745 (* 2.0 l_0_5_3)))
 (let ((?x1835 (* ?x1745 l_0_5_8)))
 (let ((?x1421 (* 2.0 l_0_5_25)))
 (let ((?x1422 (* ?x1421 l_0_5_29)))
 (let ((?x1418 (* 2.0 l_0_5_24)))
 (let ((?x1419 (* ?x1418 l_0_5_28)))
 (let ((?x1415 (* 2.0 l_0_5_23)))
 (let ((?x1416 (* ?x1415 l_0_5_27)))
 (let ((?x1413 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x1834 (+ (+ (+ (+ (* (* (- 2.0) l_0_5_2) l_0_5_7) ?x1413) ?x1416) ?x1419) ?x1422)))
 (let ((?x1842 (+ (+ (- (- (- (- (- ?x1834 ?x1835) ?x1425) ?x1428) ?x1431) ?x1434) ?x1186) ?x1189)))
 (= (- (+ (- (+ (- (- ?x1842 ?x1192) ?x1195) ?x1845) ?x1847) ?x1849) ?x1851) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x1772 (* 2.0 l_0_5_78)))
 (let ((?x1851 (* ?x1772 l_0_5_87)))
 (let ((?x1769 (* 2.0 l_0_5_77)))
 (let ((?x1847 (* ?x1769 l_0_5_86)))
 (let ((?x1610 (* l_0_5_45 l_0_5_45)))
 (let ((?x1607 (* l_0_5_44 l_0_5_44)))
 (let ((?x1604 (* l_0_5_43 l_0_5_43)))
 (let ((?x1601 (* l_0_5_42 l_0_5_42)))
 (let ((?x1598 (* l_0_5_41 l_0_5_41)))
 (let ((?x1678 (* l_0_5_30 l_0_5_30)))
 (let ((?x1674 (* l_0_5_29 l_0_5_29)))
 (let ((?x1670 (* l_0_5_28 l_0_5_28)))
 (let ((?x1666 (* l_0_5_27 l_0_5_27)))
 (let ((?x1662 (* l_0_5_26 l_0_5_26)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x1910 (* ?x1909 l_0_5_3)))
 (let ((?x1914 (+ (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x1910) ?x1662) ?x1666) ?x1670)))
 (let ((?x1921 (- (- (- (- (- (+ (+ ?x1914 ?x1674) ?x1678) ?x1598) ?x1601) ?x1604) ?x1607) ?x1610)))
 (= (+ (+ ?x1921 ?x1847) ?x1851) 0.0))))))))))))))))))))
(assert
 (let ((?x2002 (* l_0_5_81 l_0_5_81)))
 (let ((?x2000 (* l_0_5_80 l_0_5_80)))
 (let ((?x1998 (* l_0_5_79 l_0_5_79)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x1009 (* ?x1008 l_0_5_71)))
 (let ((?x1986 (* l_0_5_6 l_0_5_6)))
 (let ((?x1978 (* l_0_5_5 l_0_5_5)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x1006 (* ?x1005 l_0_5_56)))
 (let ((?x1972 (* l_0_5_4 l_0_5_4)))
 (let ((?x1956 (- (* (* 2.0 l_0_5_1) l_0_5_11) (* (* 4.0 l_0_5_19) l_0_5_26))))
 (let ((?x1962 (- (- ?x1956 (* (* 4.0 l_0_5_20) l_0_5_27)) (* (* 4.0 l_0_5_21) l_0_5_28))))
 (let ((?x1968 (+ (+ ?x1962 (* (* 4.0 l_0_5_34) l_0_5_41)) (* (* 4.0 l_0_5_35) l_0_5_42))))
 (let ((?x1977 (- (- (- (+ ?x1968 (* (* 4.0 l_0_5_36) l_0_5_43)) ?x1972) ?x1006) (* (* 4.0 l_0_5_49) l_0_5_56))))
 (let ((?x1985 (- (- (- ?x1977 ?x1978) (* (* 4.0 l_0_5_50) l_0_5_57)) (* (* 4.0 l_0_5_51) l_0_5_58))))
 (let ((?x1994 (+ (+ (+ (- ?x1985 ?x1986) ?x1009) (* (* 4.0 l_0_5_64) l_0_5_71)) (* (* 4.0 l_0_5_65) l_0_5_72))))
 (let ((?x2003 (+ (+ (+ (+ ?x1994 (* (* 4.0 l_0_5_66) l_0_5_73)) ?x1998) ?x2000) ?x2002)))
 (= ?x2003 0.0)))))))))))))))))))
(assert
 (let ((?x2134 (* 2.0 l_0_5_81)))
 (let ((?x2137 (* ?x2134 l_0_5_88)))
 (let ((?x2135 (* ?x2134 l_0_5_84)))
 (let ((?x2129 (* 2.0 l_0_5_80)))
 (let ((?x2132 (* ?x2129 l_0_5_87)))
 (let ((?x2130 (* ?x2129 l_0_5_83)))
 (let ((?x2124 (* 2.0 l_0_5_79)))
 (let ((?x2127 (* ?x2124 l_0_5_86)))
 (let ((?x2125 (* ?x2124 l_0_5_82)))
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x1307 (* ?x1306 l_0_5_73)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x1304 (* ?x1303 l_0_5_72)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x1301 (* ?x1300 l_0_5_71)))
 (let ((?x2107 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x1296 (* ?x1295 l_0_5_58)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x1293 (* ?x1292 l_0_5_57)))
 (let ((?x2090 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x1290 (* ?x1289 l_0_5_56)))
 (let ((?x2083 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2066 (- (* (* (- 4.0) l_0_5_22) l_0_5_26) (* (* 4.0 l_0_5_23) l_0_5_27))))
 (let ((?x2072 (- (- ?x2066 (* (* 4.0 l_0_5_24) l_0_5_28)) (* (* 4.0 l_0_5_25) l_0_5_29))))
 (let ((?x2078 (+ (+ ?x2072 (* (* 4.0 l_0_5_37) l_0_5_41)) (* (* 4.0 l_0_5_38) l_0_5_42))))
 (let ((?x2087 (+ (- (+ ?x2078 (* (* 4.0 l_0_5_39) l_0_5_43)) ?x2083) (* (* 4.0 l_0_5_40) l_0_5_44))))
 (let ((?x2096 (- (+ (+ (- (+ ?x2087 ?x1290) ?x2090) ?x1293) ?x1296) (* (* 4.0 l_0_5_52) l_0_5_56))))
 (let ((?x2102 (- (- ?x2096 (* (* 4.0 l_0_5_53) l_0_5_57)) (* (* 4.0 l_0_5_54) l_0_5_58))))
 (let ((?x2110 (- (- (- (- ?x2102 (* (* 4.0 l_0_5_55) l_0_5_59)) ?x2107) ?x1301) ?x1304)))
 (let ((?x2117 (+ (+ (- ?x2110 ?x1307) (* (* 4.0 l_0_5_67) l_0_5_71)) (* (* 4.0 l_0_5_68) l_0_5_72))))
 (let ((?x2123 (+ (+ ?x2117 (* (* 4.0 l_0_5_69) l_0_5_73)) (* (* 4.0 l_0_5_70) l_0_5_74))))
 (= (- (+ (- (+ (- (+ ?x2123 ?x2125) ?x2127) ?x2130) ?x2132) ?x2135) ?x2137) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2134 (* 2.0 l_0_5_81)))
 (let ((?x2137 (* ?x2134 l_0_5_88)))
 (let ((?x2129 (* 2.0 l_0_5_80)))
 (let ((?x2132 (* ?x2129 l_0_5_87)))
 (let ((?x2124 (* 2.0 l_0_5_79)))
 (let ((?x2127 (* ?x2124 l_0_5_86)))
 (let ((?x1640 (* l_0_5_75 l_0_5_75)))
 (let ((?x2299 (* 2.0 ?x1640)))
 (let ((?x1637 (* l_0_5_74 l_0_5_74)))
 (let ((?x2297 (* 2.0 ?x1637)))
 (let ((?x1634 (* l_0_5_73 l_0_5_73)))
 (let ((?x2295 (* 2.0 ?x1634)))
 (let ((?x1631 (* l_0_5_72 l_0_5_72)))
 (let ((?x2293 (* 2.0 ?x1631)))
 (let ((?x1628 (* l_0_5_71 l_0_5_71)))
 (let ((?x2291 (* 2.0 ?x1628)))
 (let ((?x1610 (* l_0_5_45 l_0_5_45)))
 (let ((?x2274 (* 2.0 ?x1610)))
 (let ((?x1607 (* l_0_5_44 l_0_5_44)))
 (let ((?x2272 (* 2.0 ?x1607)))
 (let ((?x1604 (* l_0_5_43 l_0_5_43)))
 (let ((?x2270 (* 2.0 ?x1604)))
 (let ((?x1601 (* l_0_5_42 l_0_5_42)))
 (let ((?x2268 (* 2.0 ?x1601)))
 (let ((?x1598 (* l_0_5_41 l_0_5_41)))
 (let ((?x2266 (* 2.0 ?x1598)))
 (let ((?x2248 (* 2.0 l_0_5_13)))
 (let ((?x2249 (* ?x2248 l_0_5_6)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x2246 (* ?x1909 l_0_5_5)))
 (let ((?x2253 (- (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x2246) ?x2249) (* (* 2.0 l_0_5_26) l_0_5_26))))
 (let ((?x2259 (- (- ?x2253 (* (* 2.0 l_0_5_27) l_0_5_27)) (* (* 2.0 l_0_5_28) l_0_5_28))))
 (let ((?x2265 (- (- ?x2259 (* (* 2.0 l_0_5_29) l_0_5_29)) (* (* 2.0 l_0_5_30) l_0_5_30))))
 (let ((?x2278 (- (+ (+ (+ (+ (+ ?x2265 ?x2266) ?x2268) ?x2270) ?x2272) ?x2274) (* (* 2.0 l_0_5_56) l_0_5_56))))
 (let ((?x2284 (- (- ?x2278 (* (* 2.0 l_0_5_57) l_0_5_57)) (* (* 2.0 l_0_5_58) l_0_5_58))))
 (let ((?x2290 (- (- ?x2284 (* (* 2.0 l_0_5_59) l_0_5_59)) (* (* 2.0 l_0_5_60) l_0_5_60))))
 (let ((?x2302 (+ (+ (+ (+ (+ (+ (+ ?x2290 ?x2291) ?x2293) ?x2295) ?x2297) ?x2299) ?x2127) ?x2132)))
 (= (+ ?x2302 ?x2137) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2406 (* l_0_5_9 l_0_5_9)))
 (let ((?x2404 (* l_0_5_85 l_0_5_85)))
 (let ((?x2402 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x2399 (* l_0_5_84 l_0_5_84)))
 (let ((?x2397 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x2394 (* l_0_5_83 l_0_5_83)))
 (let ((?x2392 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x2389 (* l_0_5_82 l_0_5_82)))
 (let ((?x2387 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x2384 (* l_0_5_8 l_0_5_8)))
 (let ((?x1460 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x2381 (* l_0_5_7 l_0_5_7)))
 (let ((?x1457 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1454 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1451 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1446 (* 2.0 l_0_5_55)))
 (let ((?x1447 (* ?x1446 l_0_5_59)))
 (let ((?x1443 (* 2.0 l_0_5_54)))
 (let ((?x1444 (* ?x1443 l_0_5_58)))
 (let ((?x1440 (* 2.0 l_0_5_53)))
 (let ((?x1441 (* ?x1440 l_0_5_57)))
 (let ((?x2375 (+ (+ (* (- l_0_5_10) l_0_5_10) (* (* 2.0 l_0_5_52) l_0_5_56)) ?x1441)))
 (let ((?x2383 (- (- (- (- (- (+ (+ ?x2375 ?x1444) ?x1447) ?x1451) ?x1454) ?x1457) ?x2381) ?x1460)))
 (let ((?x2400 (+ (- (+ (- (+ (- (- ?x2383 ?x2384) ?x2387) ?x2389) ?x2392) ?x2394) ?x2397) ?x2399)))
 (= (- (+ (- ?x2400 ?x2402) ?x2404) ?x2406) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2498 (* l_0_5_90 l_0_5_90)))
 (let ((?x2496 (* l_0_5_89 l_0_5_89)))
 (let ((?x2494 (* l_0_5_88 l_0_5_88)))
 (let ((?x2492 (* l_0_5_87 l_0_5_87)))
 (let ((?x2490 (* l_0_5_86 l_0_5_86)))
 (let ((?x2402 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x2397 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x2392 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x2387 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x1640 (* l_0_5_75 l_0_5_75)))
 (let ((?x1637 (* l_0_5_74 l_0_5_74)))
 (let ((?x1634 (* l_0_5_73 l_0_5_73)))
 (let ((?x1631 (* l_0_5_72 l_0_5_72)))
 (let ((?x1628 (* l_0_5_71 l_0_5_71)))
 (let ((?x1699 (* l_0_5_60 l_0_5_60)))
 (let ((?x1695 (* l_0_5_59 l_0_5_59)))
 (let ((?x1691 (* l_0_5_58 l_0_5_58)))
 (let ((?x1687 (* l_0_5_57 l_0_5_57)))
 (let ((?x1683 (* l_0_5_56 l_0_5_56)))
 (let ((?x2248 (* 2.0 l_0_5_13)))
 (let ((?x2474 (* ?x2248 l_0_5_9)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x2472 (* ?x1909 l_0_5_8)))
 (let ((?x2469 (* 2.0 l_0_5_11)))
 (let ((?x2470 (* ?x2469 l_0_5_7)))
 (let ((?x2476 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x2470) ?x2472) ?x2474) ?x1683)))
 (let ((?x2483 (- (- (- (+ (+ (+ (+ ?x2476 ?x1687) ?x1691) ?x1695) ?x1699) ?x1628) ?x1631) ?x1634)))
 (let ((?x2491 (- (+ (+ (+ (+ (- (- ?x2483 ?x1637) ?x1640) ?x2387) ?x2392) ?x2397) ?x2402) ?x2490)))
 (= (- (- (- (- ?x2491 ?x2492) ?x2494) ?x2496) ?x2498) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x2498 (* l_0_5_90 l_0_5_90)))
 (let ((?x2496 (* l_0_5_89 l_0_5_89)))
 (let ((?x2494 (* l_0_5_88 l_0_5_88)))
 (let ((?x2492 (* l_0_5_87 l_0_5_87)))
 (let ((?x2490 (* l_0_5_86 l_0_5_86)))
 (let ((?x2564 (* l_0_5_15 l_0_5_15)))
 (let ((?x2562 (* l_0_5_14 l_0_5_14)))
 (let ((?x2560 (* l_0_5_13 l_0_5_13)))
 (let ((?x2563 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x2560) ?x2562)))
 (= (+ (+ (+ (+ (+ (- ?x2563 ?x2564) ?x2490) ?x2492) ?x2494) ?x2496) ?x2498) 0.0)))))))))))
(assert
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2611 (* ?x1008 l_0_5_62)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2605 (* ?x1005 l_0_5_47)))
 (let ((?x1066 (* l_0_5_36 l_0_5_36)))
 (let ((?x1063 (* l_0_5_35 l_0_5_35)))
 (let ((?x1060 (* l_0_5_34 l_0_5_34)))
 (let ((?x1120 (* l_0_5_21 l_0_5_21)))
 (let ((?x1116 (* l_0_5_20 l_0_5_20)))
 (let ((?x1112 (* l_0_5_19 l_0_5_19)))
 (let ((?x2592 (- (* (* 2.0 l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_17) l_0_5_19))))
 (let ((?x2597 (+ (+ (+ (- ?x2592 (* (* 4.0 l_0_5_18) l_0_5_20)) ?x1112) ?x1116) ?x1120)))
 (let ((?x2601 (+ (+ ?x2597 (* (* 4.0 l_0_5_32) l_0_5_34)) (* (* 4.0 l_0_5_33) l_0_5_35))))
 (let ((?x2608 (- (- (- (- (- ?x2601 ?x1060) ?x1063) ?x1066) ?x2605) (* (* 4.0 l_0_5_47) l_0_5_49))))
 (let ((?x2614 (+ (+ (- ?x2608 (* (* 4.0 l_0_5_48) l_0_5_50)) ?x2611) (* (* 4.0 l_0_5_62) l_0_5_64))))
 (= (+ ?x2614 (* (* 4.0 l_0_5_63) l_0_5_65)) 0.0)))))))))))))))))
(assert
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x2700 (* 2.0 ?x1094)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x2698 (* 2.0 ?x1091)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x2696 (* 2.0 ?x1088)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2694 (* ?x1008 l_0_5_64)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2686 (* ?x1005 l_0_5_49)))
 (let ((?x1066 (* l_0_5_36 l_0_5_36)))
 (let ((?x2684 (* 2.0 ?x1066)))
 (let ((?x1063 (* l_0_5_35 l_0_5_35)))
 (let ((?x2682 (* 2.0 ?x1063)))
 (let ((?x1060 (* l_0_5_34 l_0_5_34)))
 (let ((?x2680 (* 2.0 ?x1060)))
 (let ((?x2668 (- (* (* 2.0 l_0_5_1) l_0_5_4) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x2679 (- (- ?x2668 (* (* 2.0 l_0_5_20) l_0_5_20)) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x2689 (- (- (+ (+ (+ ?x2679 ?x2680) ?x2682) ?x2684) ?x2686) (* (* 2.0 l_0_5_49) l_0_5_49))))
 (let ((?x2693 (- (- ?x2689 (* (* 2.0 l_0_5_50) l_0_5_50)) (* (* 2.0 l_0_5_51) l_0_5_51))))
 (= (+ (+ (+ (+ ?x2693 ?x2694) ?x2696) ?x2698) ?x2700) 0.0))))))))))))))))))))))
(assert
 (let ((?x2002 (* l_0_5_81 l_0_5_81)))
 (let ((?x2000 (* l_0_5_80 l_0_5_80)))
 (let ((?x1998 (* l_0_5_79 l_0_5_79)))
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2766 (* ?x1008 l_0_5_67)))
 (let ((?x1144 (* l_0_5_51 l_0_5_51)))
 (let ((?x1140 (* l_0_5_50 l_0_5_50)))
 (let ((?x1136 (* l_0_5_49 l_0_5_49)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2755 (* ?x1005 l_0_5_52)))
 (let ((?x2744 (- (* (* 2.0 l_0_5_1) l_0_5_7) (* (* 4.0 l_0_5_19) l_0_5_22))))
 (let ((?x2748 (- (- ?x2744 (* (* 4.0 l_0_5_20) l_0_5_23)) (* (* 4.0 l_0_5_21) l_0_5_24))))
 (let ((?x2752 (+ (+ ?x2748 (* (* 4.0 l_0_5_34) l_0_5_37)) (* (* 4.0 l_0_5_35) l_0_5_38))))
 (let ((?x2758 (- (- (+ ?x2752 (* (* 4.0 l_0_5_36) l_0_5_39)) ?x2755) (* (* 4.0 l_0_5_49) l_0_5_52))))
 (let ((?x2764 (- (+ (- (+ ?x2758 ?x1136) (* (* 4.0 l_0_5_50) l_0_5_53)) ?x1140) (* (* 4.0 l_0_5_51) l_0_5_54))))
 (let ((?x2770 (- (+ (+ (+ ?x2764 ?x1144) ?x2766) (* (* 4.0 l_0_5_64) l_0_5_67)) ?x1088)))
 (let ((?x2775 (+ (- (+ ?x2770 (* (* 4.0 l_0_5_65) l_0_5_68)) ?x1091) (* (* 4.0 l_0_5_66) l_0_5_69))))
 (= (- (- (- (- ?x2775 ?x1094) ?x1998) ?x2000) ?x2002) 0.0))))))))))))))))))))))
(assert
 (let ((?x2875 (* l_0_5_63 l_0_5_63)))
 (let ((?x2873 (* l_0_5_62 l_0_5_62)))
 (let ((?x2871 (* l_0_5_48 l_0_5_48)))
 (let ((?x2869 (* l_0_5_47 l_0_5_47)))
 (let ((?x2874 (+ (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x2869) ?x2871) ?x2873)))
 (= (+ ?x2874 ?x2875) 0.0)))))))
(assert
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2893 (* ?x1194 l_0_5_65)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2891 (* ?x1191 l_0_5_64)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2889 (* ?x1188 l_0_5_50)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2887 (* ?x1185 l_0_5_49)))
 (let ((?x1745 (* 2.0 l_0_5_3)))
 (let ((?x1746 (* ?x1745 l_0_5_5)))
 (let ((?x1740 (* 2.0 l_0_5_2)))
 (let ((?x1741 (* ?x1740 l_0_5_4)))
 (= (+ (+ (- (- (+ ?x1741 ?x1746) ?x2887) ?x2889) ?x2891) ?x2893) 0.0))))))))))))))
(assert
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2919 (* ?x1194 l_0_5_68)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2917 (* ?x1191 l_0_5_67)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2915 (* ?x1188 l_0_5_53)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2913 (* ?x1185 l_0_5_52)))
 (let ((?x1745 (* 2.0 l_0_5_3)))
 (let ((?x1835 (* ?x1745 l_0_5_8)))
 (let ((?x2918 (+ (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x1835) ?x2913) ?x2915) ?x2917)))
 (= (+ ?x2918 ?x2919) 0.0)))))))))))))
(assert
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x1195 (* ?x1194 l_0_5_72)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x1192 (* ?x1191 l_0_5_71)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x1189 (* ?x1188 l_0_5_57)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x1186 (* ?x1185 l_0_5_56)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x1910 (* ?x1909 l_0_5_3)))
 (let ((?x2946 (+ (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x1910) ?x1186) ?x1189) ?x1192)))
 (= (+ ?x2946 ?x1195) 0.0)))))))))))))
(assert
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x1986 (* l_0_5_6 l_0_5_6)))
 (let ((?x1144 (* l_0_5_51 l_0_5_51)))
 (let ((?x1140 (* l_0_5_50 l_0_5_50)))
 (let ((?x1978 (* l_0_5_5 l_0_5_5)))
 (let ((?x2958 (- (+ (- (* l_0_5_4 l_0_5_4) (* l_0_5_49 l_0_5_49)) ?x1978) ?x1140)))
 (= (+ (+ (+ (+ (- ?x2958 ?x1144) ?x1986) ?x1088) ?x1091) ?x1094) 0.0))))))))))
(assert
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x2986 (* ?x1306 l_0_5_69)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x2984 (* ?x1303 l_0_5_68)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x2982 (* ?x1300 l_0_5_67)))
 (let ((?x2107 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x2979 (* ?x1295 l_0_5_54)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x2977 (* ?x1292 l_0_5_53)))
 (let ((?x2090 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x2974 (* ?x1289 l_0_5_52)))
 (let ((?x2083 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2985 (+ (+ (+ (- (- (+ (- ?x2083 ?x2974) ?x2090) ?x2977) ?x2979) ?x2107) ?x2982) ?x2984)))
 (= (+ ?x2985 ?x2986) 0.0))))))))))))))))))
(assert
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x1307 (* ?x1306 l_0_5_73)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x1304 (* ?x1303 l_0_5_72)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x1301 (* ?x1300 l_0_5_71)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x1296 (* ?x1295 l_0_5_58)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x1293 (* ?x1292 l_0_5_57)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x1290 (* ?x1289 l_0_5_56)))
 (let ((?x2248 (* 2.0 l_0_5_13)))
 (let ((?x2249 (* ?x2248 l_0_5_6)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x2246 (* ?x1909 l_0_5_5)))
 (let ((?x3014 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x2246) ?x2249) ?x1290) ?x1293)))
 (= (+ (+ (+ (- ?x3014 ?x1296) ?x1301) ?x1304) ?x1307) 0.0)))))))))))))))))))
(assert
 (let ((?x2406 (* l_0_5_9 l_0_5_9)))
 (let ((?x2384 (* l_0_5_8 l_0_5_8)))
 (let ((?x3045 (* l_0_5_70 l_0_5_70)))
 (let ((?x2381 (* l_0_5_7 l_0_5_7)))
 (let ((?x3042 (* l_0_5_69 l_0_5_69)))
 (let ((?x3040 (* l_0_5_68 l_0_5_68)))
 (let ((?x3038 (* l_0_5_67 l_0_5_67)))
 (let ((?x3036 (* l_0_5_55 l_0_5_55)))
 (let ((?x3034 (* l_0_5_54 l_0_5_54)))
 (let ((?x3032 (* l_0_5_53 l_0_5_53)))
 (let ((?x3035 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_52 l_0_5_52)) ?x3032) ?x3034)))
 (let ((?x3047 (+ (+ (+ (+ (+ (+ (- ?x3035 ?x3036) ?x3038) ?x3040) ?x3042) ?x2381) ?x3045) ?x2384)))
 (= (+ ?x3047 ?x2406) 0.0))))))))))))))
(assert
 (let ((?x1460 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x1457 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1454 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1451 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1446 (* 2.0 l_0_5_55)))
 (let ((?x1447 (* ?x1446 l_0_5_59)))
 (let ((?x1443 (* 2.0 l_0_5_54)))
 (let ((?x1444 (* ?x1443 l_0_5_58)))
 (let ((?x1440 (* 2.0 l_0_5_53)))
 (let ((?x1441 (* ?x1440 l_0_5_57)))
 (let ((?x1437 (* 2.0 l_0_5_52)))
 (let ((?x1438 (* ?x1437 l_0_5_56)))
 (let ((?x2248 (* 2.0 l_0_5_13)))
 (let ((?x2474 (* ?x2248 l_0_5_9)))
 (let ((?x1909 (* 2.0 l_0_5_12)))
 (let ((?x2472 (* ?x1909 l_0_5_8)))
 (let ((?x2469 (* 2.0 l_0_5_11)))
 (let ((?x2470 (* ?x2469 l_0_5_7)))
 (let ((?x3068 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x2470) ?x2472) ?x2474) ?x1438)))
 (let ((?x3075 (+ (+ (+ (+ (- (- (- ?x3068 ?x1441) ?x1444) ?x1447) ?x1451) ?x1454) ?x1457) ?x1460)))
 (= ?x3075 0.0))))))))))))))))))))))
(assert
 (let ((?x1640 (* l_0_5_75 l_0_5_75)))
 (let ((?x1637 (* l_0_5_74 l_0_5_74)))
 (let ((?x1634 (* l_0_5_73 l_0_5_73)))
 (let ((?x1631 (* l_0_5_72 l_0_5_72)))
 (let ((?x1628 (* l_0_5_71 l_0_5_71)))
 (let ((?x1699 (* l_0_5_60 l_0_5_60)))
 (let ((?x1695 (* l_0_5_59 l_0_5_59)))
 (let ((?x1691 (* l_0_5_58 l_0_5_58)))
 (let ((?x1687 (* l_0_5_57 l_0_5_57)))
 (let ((?x1683 (* l_0_5_56 l_0_5_56)))
 (let ((?x2564 (* l_0_5_15 l_0_5_15)))
 (let ((?x2562 (* l_0_5_14 l_0_5_14)))
 (let ((?x2560 (* l_0_5_13 l_0_5_13)))
 (let ((?x3090 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x2560) ?x2562)))
 (let ((?x3097 (+ (- (- (- (- (- (+ ?x3090 ?x2564) ?x1683) ?x1687) ?x1691) ?x1695) ?x1699) ?x1628)))
 (= (+ (+ (+ (+ ?x3097 ?x1631) ?x1634) ?x1637) ?x1640) 0.0)))))))))))))))))
(assert
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2694 (* ?x1008 l_0_5_64)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2686 (* ?x1005 l_0_5_49)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3120 (* ?x1002 l_0_5_34)))
 (let ((?x3119 (- (* (* (- 2.0) l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (let ((?x3127 (- (- (+ (+ ?x3119 ?x3120) (* 2.0 (* l_0_5_31 l_0_5_31))) ?x2686) (* ?x1005 l_0_5_46))))
 (let ((?x3133 (- (+ (+ ?x3127 ?x2694) (* 2.0 (* l_0_5_61 l_0_5_61))) (* (* 2.0 l_0_5_91) l_0_5_94))))
 (= ?x3133 0.0)))))))))))
(assert
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2893 (* ?x1194 l_0_5_65)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2891 (* ?x1191 l_0_5_64)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2889 (* ?x1188 l_0_5_50)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2887 (* ?x1185 l_0_5_49)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x3178 (* ?x1182 l_0_5_35)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x3176 (* ?x1179 l_0_5_34)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3120 (* ?x1002 l_0_5_34)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x3171 (* ?x1175 l_0_5_20)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x3169 (* ?x1172 l_0_5_19)))
 (let ((?x3168 (+ (* (* (- 4.0) l_0_5_16) l_0_5_17) (* (* 2.0 l_0_5_16) l_0_5_19))))
 (let ((?x3175 (- (+ (- (- ?x3168 ?x3169) ?x3171) (* (* 4.0 l_0_5_31) l_0_5_32)) ?x3120)))
 (let ((?x3182 (- (- (+ (+ ?x3175 ?x3176) ?x3178) (* (* 4.0 l_0_5_46) l_0_5_47)) ?x2887)))
 (let ((?x3187 (+ (+ (+ (- ?x3182 ?x2889) (* (* 4.0 l_0_5_61) l_0_5_62)) ?x2891) ?x2893)))
 (let ((?x3193 (- (- ?x3187 (* (* 2.0 l_0_5_92) l_0_5_94)) (* (* 2.0 l_0_5_93) l_0_5_95))))
 (= ?x3193 0.0)))))))))))))))))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1309 (* ?x1197 l_0_5_79)))
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x2986 (* ?x1306 l_0_5_69)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x2984 (* ?x1303 l_0_5_68)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x2982 (* ?x1300 l_0_5_67)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2694 (* ?x1008 l_0_5_64)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x2979 (* ?x1295 l_0_5_54)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x2977 (* ?x1292 l_0_5_53)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x2974 (* ?x1289 l_0_5_52)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2686 (* ?x1005 l_0_5_49)))
 (let ((?x1284 (* 2.0 l_0_5_36)))
 (let ((?x3254 (* ?x1284 l_0_5_39)))
 (let ((?x1281 (* 2.0 l_0_5_35)))
 (let ((?x3252 (* ?x1281 l_0_5_38)))
 (let ((?x1278 (* 2.0 l_0_5_34)))
 (let ((?x3250 (* ?x1278 l_0_5_37)))
 (let ((?x1273 (* 2.0 l_0_5_21)))
 (let ((?x3246 (* ?x1273 l_0_5_24)))
 (let ((?x1270 (* 2.0 l_0_5_20)))
 (let ((?x3244 (* ?x1270 l_0_5_23)))
 (let ((?x1267 (* 2.0 l_0_5_19)))
 (let ((?x3242 (* ?x1267 l_0_5_22)))
 (let ((?x3249 (+ (- (- (- (* (* (- 4.0) l_0_5_16) l_0_5_22) ?x3242) ?x3244) ?x3246) (* (* 4.0 l_0_5_31) l_0_5_37))))
 (let ((?x3258 (- (+ (+ (+ (+ ?x3249 ?x3250) ?x3252) ?x3254) ?x2686) (* (* 4.0 l_0_5_46) l_0_5_52))))
 (let ((?x3264 (+ (- (- (- (- ?x3258 ?x2974) ?x2977) ?x2979) ?x2694) (* (* 4.0 l_0_5_61) l_0_5_67))))
 (let ((?x3271 (- (- (+ (+ (+ ?x3264 ?x2982) ?x2984) ?x2986) ?x1309) (* (* 2.0 l_0_5_94) l_0_5_97))))
 (let ((?x3277 (- (- ?x3271 (* (* 2.0 l_0_5_95) l_0_5_98)) (* (* 2.0 l_0_5_96) l_0_5_99))))
 (= ?x3277 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2875 (* l_0_5_63 l_0_5_63)))
 (let ((?x3360 (* 2.0 ?x2875)))
 (let ((?x2873 (* l_0_5_62 l_0_5_62)))
 (let ((?x3358 (* 2.0 ?x2873)))
 (let ((?x3351 (* l_0_5_33 l_0_5_33)))
 (let ((?x3352 (* 2.0 ?x3351)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x3178 (* ?x1182 l_0_5_35)))
 (let ((?x3347 (* l_0_5_32 l_0_5_32)))
 (let ((?x3348 (* 2.0 ?x3347)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x3176 (* ?x1179 l_0_5_34)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x3171 (* ?x1175 l_0_5_20)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x3169 (* ?x1172 l_0_5_19)))
 (let ((?x3346 (- (- (+ (- ?x3169 (* ?x1172 l_0_5_17)) ?x3171) (* ?x1175 l_0_5_18)) ?x3176)))
 (let ((?x3355 (- (+ (- (+ ?x3346 ?x3348) ?x3178) ?x3352) (* (* 2.0 l_0_5_47) l_0_5_47))))
 (= (+ (+ (- ?x3355 (* (* 2.0 l_0_5_48) l_0_5_48)) ?x3358) ?x3360) 0.0))))))))))))))))))))
(assert
 (let ((?x1772 (* 2.0 l_0_5_78)))
 (let ((?x1773 (* ?x1772 l_0_5_80)))
 (let ((?x1769 (* 2.0 l_0_5_77)))
 (let ((?x1770 (* ?x1769 l_0_5_79)))
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2893 (* ?x1194 l_0_5_65)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2891 (* ?x1191 l_0_5_64)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2889 (* ?x1188 l_0_5_50)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2887 (* ?x1185 l_0_5_49)))
 (let ((?x1284 (* 2.0 l_0_5_36)))
 (let ((?x3254 (* ?x1284 l_0_5_39)))
 (let ((?x1281 (* 2.0 l_0_5_35)))
 (let ((?x3252 (* ?x1281 l_0_5_38)))
 (let ((?x1278 (* 2.0 l_0_5_34)))
 (let ((?x3250 (* ?x1278 l_0_5_37)))
 (let ((?x1273 (* 2.0 l_0_5_21)))
 (let ((?x3246 (* ?x1273 l_0_5_24)))
 (let ((?x1270 (* 2.0 l_0_5_20)))
 (let ((?x3244 (* ?x1270 l_0_5_23)))
 (let ((?x1267 (* 2.0 l_0_5_19)))
 (let ((?x3242 (* ?x1267 l_0_5_22)))
 (let ((?x3400 (- (* (* (- 4.0) l_0_5_17) l_0_5_22) (* (* 4.0 l_0_5_18) l_0_5_23))))
 (let ((?x3405 (+ (+ (+ (+ ?x3400 ?x3242) ?x3244) ?x3246) (* (* 4.0 l_0_5_32) l_0_5_37))))
 (let ((?x3410 (- (- (- (+ ?x3405 (* (* 4.0 l_0_5_33) l_0_5_38)) ?x3250) ?x3252) ?x3254)))
 (let ((?x3416 (- (+ (- (+ ?x3410 ?x2887) (* (* 4.0 l_0_5_47) l_0_5_52)) ?x2889) (* (* 4.0 l_0_5_48) l_0_5_53))))
 (let ((?x3422 (+ (- (+ (- ?x3416 ?x2891) (* (* 4.0 l_0_5_62) l_0_5_67)) ?x2893) (* (* 4.0 l_0_5_63) l_0_5_68))))
 (= (- (- ?x3422 ?x1770) ?x1773) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x2134 (* 2.0 l_0_5_81)))
 (let ((?x2135 (* ?x2134 l_0_5_84)))
 (let ((?x2129 (* 2.0 l_0_5_80)))
 (let ((?x2130 (* ?x2129 l_0_5_83)))
 (let ((?x2124 (* 2.0 l_0_5_79)))
 (let ((?x2125 (* ?x2124 l_0_5_82)))
 (let ((?x1306 (* 2.0 l_0_5_66)))
 (let ((?x2986 (* ?x1306 l_0_5_69)))
 (let ((?x1303 (* 2.0 l_0_5_65)))
 (let ((?x2984 (* ?x1303 l_0_5_68)))
 (let ((?x1300 (* 2.0 l_0_5_64)))
 (let ((?x2982 (* ?x1300 l_0_5_67)))
 (let ((?x1295 (* 2.0 l_0_5_51)))
 (let ((?x2979 (* ?x1295 l_0_5_54)))
 (let ((?x1292 (* 2.0 l_0_5_50)))
 (let ((?x2977 (* ?x1292 l_0_5_53)))
 (let ((?x1289 (* 2.0 l_0_5_49)))
 (let ((?x2974 (* ?x1289 l_0_5_52)))
 (let ((?x3493 (- (* (* (- 2.0) l_0_5_22) l_0_5_22) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x3497 (- (- ?x3493 (* (* 2.0 l_0_5_24) l_0_5_24)) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x3503 (+ (+ ?x3497 (* 2.0 (* l_0_5_37 l_0_5_37))) (* 2.0 (* l_0_5_38 l_0_5_38)))))
 (let ((?x3509 (+ (+ ?x3503 (* 2.0 (* l_0_5_39 l_0_5_39))) (* 2.0 (* l_0_5_40 l_0_5_40)))))
 (let ((?x3514 (- (+ (+ (+ ?x3509 ?x2974) ?x2977) ?x2979) (* (* 2.0 l_0_5_52) l_0_5_52))))
 (let ((?x3518 (- (- ?x3514 (* (* 2.0 l_0_5_53) l_0_5_53)) (* (* 2.0 l_0_5_54) l_0_5_54))))
 (let ((?x3523 (- (- (- (- ?x3518 (* (* 2.0 l_0_5_55) l_0_5_55)) ?x2982) ?x2984) ?x2986)))
 (let ((?x3527 (+ (+ ?x3523 (* 2.0 (* l_0_5_67 l_0_5_67))) (* 2.0 (* l_0_5_68 l_0_5_68)))))
 (let ((?x3531 (+ (+ ?x3527 (* 2.0 (* l_0_5_69 l_0_5_69))) (* 2.0 (* l_0_5_70 l_0_5_70)))))
 (= (- (- (- ?x3531 ?x2125) ?x2130) ?x2135) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x3622 (* l_0_5_91 l_0_5_91)))
 (let ((?x3616 (+ (* (* (- 1.0) l_0_5_16) l_0_5_16) (* 1.0 (* l_0_5_31 l_0_5_31)))))
 (let ((?x3621 (+ (- ?x3616 (* (* 1.0 l_0_5_46) l_0_5_46)) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (= (- ?x3621 ?x3622) 0.0)))))
(assert
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2611 (* ?x1008 l_0_5_62)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2605 (* ?x1005 l_0_5_47)))
 (let ((?x3122 (* l_0_5_31 l_0_5_31)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3639 (* ?x1002 l_0_5_32)))
 (let ((?x3640 (+ (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) (* l_0_5_16 l_0_5_16)) ?x3639)))
 (let ((?x3645 (- (+ (- (- ?x3640 ?x3122) ?x2605) ?x2611) (* (* 2.0 l_0_5_91) l_0_5_92))))
 (= ?x3645 0.0)))))))))))
(assert
 (let ((?x1011 (* l_0_5_76 l_0_5_76)))
 (let ((?x1086 (* l_0_5_61 l_0_5_61)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2766 (* ?x1008 l_0_5_67)))
 (let ((?x1072 (* l_0_5_46 l_0_5_46)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2755 (* ?x1005 l_0_5_52)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3667 (* ?x1002 l_0_5_37)))
 (let ((?x3671 (+ (+ (- (+ (* (* (- 2.0) l_0_5_16) l_0_5_22) ?x3667) ?x2755) ?x1072) ?x2766)))
 (= (- (- (- ?x3671 ?x1086) ?x1011) (* (* 2.0 l_0_5_91) l_0_5_97)) 0.0))))))))))))
(assert
 (let ((?x3722 (* l_0_5_93 l_0_5_93)))
 (let ((?x3720 (* l_0_5_92 l_0_5_92)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3639 (* ?x1002 l_0_5_32)))
 (let ((?x3701 (- (* (* 2.0 l_0_5_16) l_0_5_17) (* (* 1.0 l_0_5_17) l_0_5_17))))
 (let ((?x3707 (+ (- (- ?x3701 (* (* 1.0 l_0_5_18) l_0_5_18)) ?x3639) (* 1.0 (* l_0_5_32 l_0_5_32)))))
 (let ((?x3712 (- (+ ?x3707 (* 1.0 (* l_0_5_33 l_0_5_33))) (* (* 1.0 l_0_5_47) l_0_5_47))))
 (let ((?x3717 (+ (- ?x3712 (* (* 1.0 l_0_5_48) l_0_5_48)) (* 1.0 (* l_0_5_62 l_0_5_62)))))
 (= (- (- (+ ?x3717 (* 1.0 (* l_0_5_63 l_0_5_63))) ?x3720) ?x3722) 0.0))))))))))
(assert
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1198 (* ?x1197 l_0_5_77)))
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2919 (* ?x1194 l_0_5_68)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2917 (* ?x1191 l_0_5_67)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2611 (* ?x1008 l_0_5_62)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2915 (* ?x1188 l_0_5_53)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2913 (* ?x1185 l_0_5_52)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2605 (* ?x1005 l_0_5_47)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x3759 (* ?x1182 l_0_5_38)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x3757 (* ?x1179 l_0_5_37)))
 (let ((?x1002 (* 2.0 l_0_5_31)))
 (let ((?x3667 (* ?x1002 l_0_5_37)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x3754 (* ?x1175 l_0_5_23)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x3752 (* ?x1172 l_0_5_22)))
 (let ((?x3758 (+ (- (- (- (* (* 2.0 l_0_5_16) l_0_5_22) ?x3752) ?x3754) ?x3667) ?x3757)))
 (let ((?x3766 (+ (+ (- (- (- (+ (+ ?x3758 ?x3759) ?x2605) ?x2913) ?x2915) ?x2611) ?x2917) ?x2919)))
 (let ((?x3771 (- (- (- ?x3766 ?x1198) (* (* 2.0 l_0_5_92) l_0_5_97)) (* (* 2.0 l_0_5_93) l_0_5_98))))
 (= ?x3771 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x3868 (* l_0_5_99 l_0_5_99)))
 (let ((?x3866 (* l_0_5_98 l_0_5_98)))
 (let ((?x3864 (* l_0_5_97 l_0_5_97)))
 (let ((?x1197 (* 2.0 l_0_5_76)))
 (let ((?x1462 (* ?x1197 l_0_5_82)))
 (let ((?x1008 (* 2.0 l_0_5_61)))
 (let ((?x2766 (* ?x1008 l_0_5_67)))
 (let ((?x1005 (* 2.0 l_0_5_46)))
 (let ((?x2755 (* ?x1005 l_0_5_52)))
 (let ((?x3823 (- (* (- l_0_5_100) l_0_5_100) (* (* 1.0 l_0_5_22) l_0_5_22))))
 (let ((?x3829 (- (- ?x3823 (* (* 1.0 l_0_5_23) l_0_5_23)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x3834 (+ (- ?x3829 (* (* 1.0 l_0_5_25) l_0_5_25)) (* 1.0 (* l_0_5_37 l_0_5_37)))))
 (let ((?x3838 (+ (+ ?x3834 (* 1.0 (* l_0_5_38 l_0_5_38))) (* 1.0 (* l_0_5_39 l_0_5_39)))))
 (let ((?x3844 (- (+ (+ ?x3838 (* 1.0 (* l_0_5_40 l_0_5_40))) ?x2755) (* (* 1.0 l_0_5_52) l_0_5_52))))
 (let ((?x3850 (- (- ?x3844 (* (* 1.0 l_0_5_53) l_0_5_53)) (* (* 1.0 l_0_5_54) l_0_5_54))))
 (let ((?x3856 (+ (- (- ?x3850 (* (* 1.0 l_0_5_55) l_0_5_55)) ?x2766) (* 1.0 (* l_0_5_67 l_0_5_67)))))
 (let ((?x3860 (+ (+ ?x3856 (* 1.0 (* l_0_5_68 l_0_5_68))) (* 1.0 (* l_0_5_69 l_0_5_69)))))
 (let ((?x3867 (- (- (- (+ ?x3860 (* 1.0 (* l_0_5_70 l_0_5_70))) ?x1462) ?x3864) ?x3866)))
 (= (- ?x3867 ?x3868) 0.0))))))))))))))))))))
(assert
 (let ((?x3351 (* l_0_5_33 l_0_5_33)))
 (let ((?x3347 (* l_0_5_32 l_0_5_32)))
 (let ((?x3924 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x3347) ?x3351)))
 (= ?x3924 0.0)))))
(assert
 (let ((?x1714 (* l_0_5_78 l_0_5_78)))
 (let ((?x1712 (* l_0_5_77 l_0_5_77)))
 (let ((?x2875 (* l_0_5_63 l_0_5_63)))
 (let ((?x2873 (* l_0_5_62 l_0_5_62)))
 (let ((?x2871 (* l_0_5_48 l_0_5_48)))
 (let ((?x2869 (* l_0_5_47 l_0_5_47)))
 (let ((?x1182 (* 2.0 l_0_5_33)))
 (let ((?x3759 (* ?x1182 l_0_5_38)))
 (let ((?x1179 (* 2.0 l_0_5_32)))
 (let ((?x3757 (* ?x1179 l_0_5_37)))
 (let ((?x1175 (* 2.0 l_0_5_18)))
 (let ((?x3754 (* ?x1175 l_0_5_23)))
 (let ((?x1172 (* 2.0 l_0_5_17)))
 (let ((?x3752 (* ?x1172 l_0_5_22)))
 (let ((?x3938 (- (- (+ (+ (- (- (+ ?x3752 ?x3754) ?x3757) ?x3759) ?x2869) ?x2871) ?x2873) ?x2875)))
 (= (- (- ?x3938 ?x1712) ?x1714) 0.0)))))))))))))))))
(assert
 (let ((?x1772 (* 2.0 l_0_5_78)))
 (let ((?x1849 (* ?x1772 l_0_5_83)))
 (let ((?x1769 (* 2.0 l_0_5_77)))
 (let ((?x1845 (* ?x1769 l_0_5_82)))
 (let ((?x1194 (* 2.0 l_0_5_63)))
 (let ((?x2919 (* ?x1194 l_0_5_68)))
 (let ((?x1191 (* 2.0 l_0_5_62)))
 (let ((?x2917 (* ?x1191 l_0_5_67)))
 (let ((?x1188 (* 2.0 l_0_5_48)))
 (let ((?x2915 (* ?x1188 l_0_5_53)))
 (let ((?x1185 (* 2.0 l_0_5_47)))
 (let ((?x2913 (* ?x1185 l_0_5_52)))
 (let ((?x3507 (* l_0_5_40 l_0_5_40)))
 (let ((?x3504 (* l_0_5_39 l_0_5_39)))
 (let ((?x3501 (* l_0_5_38 l_0_5_38)))
 (let ((?x3498 (* l_0_5_37 l_0_5_37)))
 (let ((?x3550 (* l_0_5_25 l_0_5_25)))
 (let ((?x3544 (* l_0_5_24 l_0_5_24)))
 (let ((?x3964 (+ (+ (+ (* l_0_5_22 l_0_5_22) (* l_0_5_23 l_0_5_23)) ?x3544) ?x3550)))
 (let ((?x3971 (- (+ (+ (- (- (- (- ?x3964 ?x3498) ?x3501) ?x3504) ?x3507) ?x2913) ?x2915) ?x2917)))
 (= (- (- (- ?x3971 ?x2919) ?x1845) ?x1849) 0.0))))))))))))))))))))))
(assert
 (let ((?x2404 (* l_0_5_85 l_0_5_85)))
 (let ((?x2399 (* l_0_5_84 l_0_5_84)))
 (let ((?x2394 (* l_0_5_83 l_0_5_83)))
 (let ((?x2389 (* l_0_5_82 l_0_5_82)))
 (let ((?x3045 (* l_0_5_70 l_0_5_70)))
 (let ((?x3042 (* l_0_5_69 l_0_5_69)))
 (let ((?x3040 (* l_0_5_68 l_0_5_68)))
 (let ((?x3038 (* l_0_5_67 l_0_5_67)))
 (let ((?x3036 (* l_0_5_55 l_0_5_55)))
 (let ((?x3034 (* l_0_5_54 l_0_5_54)))
 (let ((?x4004 (+ (+ (+ (* l_0_5_52 l_0_5_52) (* l_0_5_53 l_0_5_53)) ?x3034) ?x3036)))
 (let ((?x4011 (- (- (- (- (- (- (- ?x4004 ?x3038) ?x3040) ?x3042) ?x3045) ?x2389) ?x2394) ?x2399)))
 (= (- ?x4011 ?x2404) 0.0))))))))))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x4089 (* l_0_6_76 l_0_6_76)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4087 (* ?x4086 l_0_6_71)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4084 (* ?x4083 l_0_6_56)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x4081 (* ?x4080 l_0_6_41)))
 (let ((?x4077 (* 2.0 l_0_6_16)))
 (let ((?x4078 (* ?x4077 l_0_6_26)))
 (let ((?x4079 (- (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_101) l_0_6_91)) ?x4078)))
 (= (+ (- (+ (- (+ ?x4079 ?x4081) ?x4084) ?x4087) ?x4089) 1.0) 0.0))))))))))))
(assert
 (let ((?x4183 (* l_0_6_96 l_0_6_96)))
 (let ((?x4181 (* l_0_6_95 l_0_6_95)))
 (let ((?x4179 (* l_0_6_94 l_0_6_94)))
 (let ((?x4168 (* l_0_6_61 l_0_6_61)))
 (let ((?x4154 (* l_0_6_46 l_0_6_46)))
 (let ((?x4132 (- (- (* l_0_6_1 l_0_6_1) (* (* 4.0 l_0_6_16) l_0_6_19)) (* (* 1.0 l_0_6_19) l_0_6_19))))
 (let ((?x4138 (- (- ?x4132 (* (* 1.0 l_0_6_20) l_0_6_20)) (* (* 1.0 l_0_6_21) l_0_6_21))))
 (let ((?x4144 (+ (+ ?x4138 (* (* 4.0 l_0_6_31) l_0_6_34)) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x4150 (+ (+ ?x4144 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x4158 (- (- (- ?x4150 (* (* 4.0 l_0_6_46) l_0_6_49)) ?x4154) (* (* 1.0 l_0_6_49) l_0_6_49))))
 (let ((?x4164 (- (- ?x4158 (* (* 1.0 l_0_6_50) l_0_6_50)) (* (* 1.0 l_0_6_51) l_0_6_51))))
 (let ((?x4172 (+ (+ (+ ?x4164 (* (* 4.0 l_0_6_61) l_0_6_64)) ?x4168) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x4178 (+ (+ ?x4172 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- (- ?x4178 ?x4179) ?x4181) ?x4183) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4257 (* ?x4086 l_0_6_64)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4253 (* ?x4083 l_0_6_49)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x4248 (* ?x4080 l_0_6_34)))
 (let ((?x4247 (- (* (* (- 2.0) l_0_6_16) l_0_6_19) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (let ((?x4256 (- (- (+ (+ ?x4247 ?x4248) (* 2.0 (* l_0_6_31 l_0_6_31))) ?x4253) (* ?x4083 l_0_6_46))))
 (let ((?x4263 (- (+ (+ ?x4256 ?x4257) (* 2.0 (* l_0_6_61 l_0_6_61))) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= (- ?x4263 2.0) 0.0)))))))))))
(assert
 (let ((?x4312 (* l_0_6_91 l_0_6_91)))
 (let ((?x4306 (+ (* (* (- 1.0) l_0_6_16) l_0_6_16) (* 1.0 (* l_0_6_31 l_0_6_31)))))
 (let ((?x4311 (+ (- ?x4306 (* (* 1.0 l_0_6_46) l_0_6_46)) (* 1.0 (* l_0_6_61 l_0_6_61)))))
 (= (- (- ?x4311 ?x4312) 1.0) 0.0)))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4364 (* ?x4363 l_0_6_77)))
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x4361 (* ?x4360 l_0_6_72)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x4358 (* ?x4357 l_0_6_71)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x4355 (* ?x4354 l_0_6_57)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x4352 (* ?x4351 l_0_6_56)))
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x4349 (* ?x4348 l_0_6_42)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x4346 (* ?x4345 l_0_6_41)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x4081 (* ?x4080 l_0_6_41)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x4342 (* ?x4341 l_0_6_27)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x4339 (* ?x4338 l_0_6_26)))
 (let ((?x4077 (* 2.0 l_0_6_16)))
 (let ((?x4078 (* ?x4077 l_0_6_26)))
 (let ((?x4333 (- (* (* (- 2.0) l_0_6_1) l_0_6_2) (* (* 2.0 l_0_6_101) l_0_6_92))))
 (let ((?x4343 (- (- (+ (- ?x4333 (* (* 2.0 l_0_6_102) l_0_6_93)) ?x4078) ?x4339) ?x4342)))
 (let ((?x4362 (+ (+ (- (- (+ (+ (- ?x4343 ?x4081) ?x4346) ?x4349) ?x4352) ?x4355) ?x4358) ?x4361)))
 (= (- ?x4362 ?x4364) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4478 (* ?x4363 l_0_6_79)))
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x4476 (* ?x4475 l_0_6_73)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x4473 (* ?x4472 l_0_6_72)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x4470 (* ?x4469 l_0_6_71)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x4465 (* ?x4464 l_0_6_58)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x4462 (* ?x4461 l_0_6_57)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x4459 (* ?x4458 l_0_6_56)))
 (let ((?x4453 (* 2.0 l_0_6_36)))
 (let ((?x4454 (* ?x4453 l_0_6_43)))
 (let ((?x4450 (* 2.0 l_0_6_35)))
 (let ((?x4451 (* ?x4450 l_0_6_42)))
 (let ((?x4447 (* 2.0 l_0_6_34)))
 (let ((?x4448 (* ?x4447 l_0_6_41)))
 (let ((?x4442 (* 2.0 l_0_6_21)))
 (let ((?x4443 (* ?x4442 l_0_6_28)))
 (let ((?x4439 (* 2.0 l_0_6_20)))
 (let ((?x4440 (* ?x4439 l_0_6_27)))
 (let ((?x4436 (* 2.0 l_0_6_19)))
 (let ((?x4437 (* ?x4436 l_0_6_26)))
 (let ((?x4428 (- (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_101) l_0_6_94))))
 (let ((?x4433 (- (- ?x4428 (* (* 2.0 l_0_6_102) l_0_6_95)) (* (* 2.0 l_0_6_103) l_0_6_96))))
 (let ((?x4444 (- (- (- (- ?x4433 (* (* 4.0 l_0_6_16) l_0_6_26)) ?x4437) ?x4440) ?x4443)))
 (let ((?x4455 (+ (+ (+ (+ ?x4444 (* (* 4.0 l_0_6_31) l_0_6_41)) ?x4448) ?x4451) ?x4454)))
 (let ((?x4466 (- (- (- (- ?x4455 (* (* 4.0 l_0_6_46) l_0_6_56)) ?x4459) ?x4462) ?x4465)))
 (let ((?x4477 (+ (+ (+ (+ ?x4466 (* (* 4.0 l_0_6_61) l_0_6_71)) ?x4470) ?x4473) ?x4476)))
 (= (- ?x4477 ?x4478) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4642 (* ?x4363 l_0_6_86)))
 (let ((?x4640 (* ?x4363 l_0_6_82)))
 (let ((?x4638 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x4635 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4632 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4629 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4087 (* ?x4086 l_0_6_71)))
 (let ((?x4624 (* 2.0 l_0_6_55)))
 (let ((?x4625 (* ?x4624 l_0_6_59)))
 (let ((?x4621 (* 2.0 l_0_6_54)))
 (let ((?x4622 (* ?x4621 l_0_6_58)))
 (let ((?x4618 (* 2.0 l_0_6_53)))
 (let ((?x4619 (* ?x4618 l_0_6_57)))
 (let ((?x4615 (* 2.0 l_0_6_52)))
 (let ((?x4616 (* ?x4615 l_0_6_56)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4084 (* ?x4083 l_0_6_56)))
 (let ((?x4612 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x4609 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x4606 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x4603 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x4599 (* 2.0 l_0_6_25)))
 (let ((?x4600 (* ?x4599 l_0_6_29)))
 (let ((?x4596 (* 2.0 l_0_6_24)))
 (let ((?x4597 (* ?x4596 l_0_6_28)))
 (let ((?x4593 (* 2.0 l_0_6_23)))
 (let ((?x4594 (* ?x4593 l_0_6_27)))
 (let ((?x4591 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x4583 (- (* (* (- 2.0) l_0_6_1) l_0_6_7) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x4587 (- (- ?x4583 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x4598 (- (- (- (- ?x4587 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x4591) ?x4594) ?x4597)))
 (let ((?x4617 (- (+ (+ (+ (+ (+ (- ?x4598 ?x4600) ?x4603) ?x4606) ?x4609) ?x4612) ?x4084) ?x4616)))
 (let ((?x4636 (+ (+ (+ (- (- (- (- ?x4617 ?x4619) ?x4622) ?x4625) ?x4087) ?x4629) ?x4632) ?x4635)))
 (= (+ (- (+ ?x4636 ?x4638) ?x4640) ?x4642) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4642 (* ?x4363 l_0_6_86)))
 (let ((?x4759 (* l_0_6_105 l_0_6_105)))
 (let ((?x4757 (* l_0_6_104 l_0_6_104)))
 (let ((?x4755 (* l_0_6_103 l_0_6_103)))
 (let ((?x4753 (* l_0_6_102 l_0_6_102)))
 (let ((?x4754 (- (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* l_0_6_101 l_0_6_101)) ?x4753)))
 (let ((?x4763 (- (- (- (- ?x4754 ?x4755) ?x4757) ?x4759) (* (* 1.0 l_0_6_26) l_0_6_26))))
 (let ((?x4769 (- (- ?x4763 (* (* 1.0 l_0_6_27) l_0_6_27)) (* (* 1.0 l_0_6_28) l_0_6_28))))
 (let ((?x4775 (- (- ?x4769 (* (* 1.0 l_0_6_29) l_0_6_29)) (* (* 1.0 l_0_6_30) l_0_6_30))))
 (let ((?x4781 (+ (+ ?x4775 (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x4787 (+ (+ ?x4781 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x4793 (- (+ ?x4787 (* 1.0 (* l_0_6_45 l_0_6_45))) (* (* 1.0 l_0_6_56) l_0_6_56))))
 (let ((?x4799 (- (- ?x4793 (* (* 1.0 l_0_6_57) l_0_6_57)) (* (* 1.0 l_0_6_58) l_0_6_58))))
 (let ((?x4805 (- (- ?x4799 (* (* 1.0 l_0_6_59) l_0_6_59)) (* (* 1.0 l_0_6_60) l_0_6_60))))
 (let ((?x4811 (+ (+ ?x4805 (* 1.0 (* l_0_6_71 l_0_6_71))) (* 1.0 (* l_0_6_72 l_0_6_72)))))
 (let ((?x4817 (+ (+ ?x4811 (* 1.0 (* l_0_6_73 l_0_6_73))) (* 1.0 (* l_0_6_74 l_0_6_74)))))
 (= (- (+ ?x4817 (* 1.0 (* l_0_6_75 l_0_6_75))) ?x4642) 0.0)))))))))))))))))))
(assert
 (let ((?x4908 (* l_0_6_78 l_0_6_78)))
 (let ((?x4906 (* l_0_6_77 l_0_6_77)))
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x4349 (* ?x4348 l_0_6_42)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x4346 (* ?x4345 l_0_6_41)))
 (let ((?x4902 (* l_0_6_3 l_0_6_3)))
 (let ((?x4900 (* l_0_6_2 l_0_6_2)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x4342 (* ?x4341 l_0_6_27)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x4339 (* ?x4338 l_0_6_26)))
 (let ((?x4909 (- (- (- (- (- (- (+ ?x4339 ?x4342) ?x4900) ?x4902) ?x4346) ?x4349) ?x4906) ?x4908)))
 (= ?x4909 0.0)))))))))))))))
(assert
 (let ((?x4971 (* 2.0 l_0_6_78)))
 (let ((?x4972 (* ?x4971 l_0_6_80)))
 (let ((?x4968 (* 2.0 l_0_6_77)))
 (let ((?x4969 (* ?x4968 l_0_6_79)))
 (let ((?x4453 (* 2.0 l_0_6_36)))
 (let ((?x4454 (* ?x4453 l_0_6_43)))
 (let ((?x4450 (* 2.0 l_0_6_35)))
 (let ((?x4451 (* ?x4450 l_0_6_42)))
 (let ((?x4447 (* 2.0 l_0_6_34)))
 (let ((?x4448 (* ?x4447 l_0_6_41)))
 (let ((?x4944 (* 2.0 l_0_6_3)))
 (let ((?x4945 (* ?x4944 l_0_6_5)))
 (let ((?x4442 (* 2.0 l_0_6_21)))
 (let ((?x4443 (* ?x4442 l_0_6_28)))
 (let ((?x4439 (* 2.0 l_0_6_20)))
 (let ((?x4440 (* ?x4439 l_0_6_27)))
 (let ((?x4939 (* 2.0 l_0_6_2)))
 (let ((?x4940 (* ?x4939 l_0_6_4)))
 (let ((?x4436 (* 2.0 l_0_6_19)))
 (let ((?x4437 (* ?x4436 l_0_6_26)))
 (let ((?x4937 (- (* (* (- 4.0) l_0_6_17) l_0_6_26) (* (* 4.0 l_0_6_18) l_0_6_27))))
 (let ((?x4949 (+ (- (+ (+ (- (+ ?x4937 ?x4437) ?x4940) ?x4440) ?x4443) ?x4945) (* (* 4.0 l_0_6_32) l_0_6_41))))
 (let ((?x4955 (- (- (- (+ ?x4949 (* (* 4.0 l_0_6_33) l_0_6_42)) ?x4448) ?x4451) ?x4454)))
 (let ((?x4961 (- (- ?x4955 (* (* 4.0 l_0_6_47) l_0_6_56)) (* (* 4.0 l_0_6_48) l_0_6_57))))
 (let ((?x4967 (+ (+ ?x4961 (* (* 4.0 l_0_6_62) l_0_6_71)) (* (* 4.0 l_0_6_63) l_0_6_72))))
 (= (- (- ?x4967 ?x4969) ?x4972) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4971 (* 2.0 l_0_6_78)))
 (let ((?x5061 (* ?x4971 l_0_6_87)))
 (let ((?x5059 (* ?x4971 l_0_6_83)))
 (let ((?x4968 (* 2.0 l_0_6_77)))
 (let ((?x5057 (* ?x4968 l_0_6_86)))
 (let ((?x5055 (* ?x4968 l_0_6_82)))
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x4361 (* ?x4360 l_0_6_72)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x4358 (* ?x4357 l_0_6_71)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x4355 (* ?x4354 l_0_6_57)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x4352 (* ?x4351 l_0_6_56)))
 (let ((?x4612 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x4609 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x4606 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x4603 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x4944 (* 2.0 l_0_6_3)))
 (let ((?x5045 (* ?x4944 l_0_6_8)))
 (let ((?x4599 (* 2.0 l_0_6_25)))
 (let ((?x4600 (* ?x4599 l_0_6_29)))
 (let ((?x4596 (* 2.0 l_0_6_24)))
 (let ((?x4597 (* ?x4596 l_0_6_28)))
 (let ((?x4593 (* 2.0 l_0_6_23)))
 (let ((?x4594 (* ?x4593 l_0_6_27)))
 (let ((?x4591 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x5044 (+ (+ (+ (+ (* (* (- 2.0) l_0_6_2) l_0_6_7) ?x4591) ?x4594) ?x4597) ?x4600)))
 (let ((?x5052 (+ (+ (- (- (- (- (- ?x5044 ?x5045) ?x4603) ?x4606) ?x4609) ?x4612) ?x4352) ?x4355)))
 (= (+ (- (+ (- (- (- ?x5052 ?x4358) ?x4361) ?x5055) ?x5057) ?x5059) ?x5061) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x4971 (* 2.0 l_0_6_78)))
 (let ((?x5061 (* ?x4971 l_0_6_87)))
 (let ((?x4968 (* 2.0 l_0_6_77)))
 (let ((?x5057 (* ?x4968 l_0_6_86)))
 (let ((?x4788 (* l_0_6_45 l_0_6_45)))
 (let ((?x4785 (* l_0_6_44 l_0_6_44)))
 (let ((?x4782 (* l_0_6_43 l_0_6_43)))
 (let ((?x4779 (* l_0_6_42 l_0_6_42)))
 (let ((?x4776 (* l_0_6_41 l_0_6_41)))
 (let ((?x4856 (* l_0_6_30 l_0_6_30)))
 (let ((?x4852 (* l_0_6_29 l_0_6_29)))
 (let ((?x4848 (* l_0_6_28 l_0_6_28)))
 (let ((?x4844 (* l_0_6_27 l_0_6_27)))
 (let ((?x4840 (* l_0_6_26 l_0_6_26)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5120 (* ?x5119 l_0_6_3)))
 (let ((?x5124 (+ (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x5120) ?x4840) ?x4844) ?x4848)))
 (let ((?x5131 (- (- (- (- (- (+ (+ ?x5124 ?x4852) ?x4856) ?x4776) ?x4779) ?x4782) ?x4785) ?x4788)))
 (= (- (- ?x5131 ?x5057) ?x5061) 0.0))))))))))))))))))))
(assert
 (let ((?x5215 (* l_0_6_81 l_0_6_81)))
 (let ((?x5213 (* l_0_6_80 l_0_6_80)))
 (let ((?x5211 (* l_0_6_79 l_0_6_79)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4087 (* ?x4086 l_0_6_71)))
 (let ((?x5199 (* l_0_6_6 l_0_6_6)))
 (let ((?x5191 (* l_0_6_5 l_0_6_5)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4084 (* ?x4083 l_0_6_56)))
 (let ((?x5185 (* l_0_6_4 l_0_6_4)))
 (let ((?x5169 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 4.0 l_0_6_19) l_0_6_26))))
 (let ((?x5175 (- (- ?x5169 (* (* 4.0 l_0_6_20) l_0_6_27)) (* (* 4.0 l_0_6_21) l_0_6_28))))
 (let ((?x5181 (+ (+ ?x5175 (* (* 4.0 l_0_6_34) l_0_6_41)) (* (* 4.0 l_0_6_35) l_0_6_42))))
 (let ((?x5190 (- (- (- (+ ?x5181 (* (* 4.0 l_0_6_36) l_0_6_43)) ?x5185) ?x4084) (* (* 4.0 l_0_6_49) l_0_6_56))))
 (let ((?x5198 (- (- (- ?x5190 ?x5191) (* (* 4.0 l_0_6_50) l_0_6_57)) (* (* 4.0 l_0_6_51) l_0_6_58))))
 (let ((?x5207 (+ (+ (+ (- ?x5198 ?x5199) ?x4087) (* (* 4.0 l_0_6_64) l_0_6_71)) (* (* 4.0 l_0_6_65) l_0_6_72))))
 (let ((?x5216 (- (- (- (+ ?x5207 (* (* 4.0 l_0_6_66) l_0_6_73)) ?x5211) ?x5213) ?x5215)))
 (= ?x5216 0.0)))))))))))))))))))
(assert
 (let ((?x5356 (* 2.0 l_0_6_81)))
 (let ((?x5359 (* ?x5356 l_0_6_88)))
 (let ((?x5357 (* ?x5356 l_0_6_84)))
 (let ((?x5351 (* 2.0 l_0_6_80)))
 (let ((?x5354 (* ?x5351 l_0_6_87)))
 (let ((?x5352 (* ?x5351 l_0_6_83)))
 (let ((?x5346 (* 2.0 l_0_6_79)))
 (let ((?x5349 (* ?x5346 l_0_6_86)))
 (let ((?x5347 (* ?x5346 l_0_6_82)))
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x4476 (* ?x4475 l_0_6_73)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x4473 (* ?x4472 l_0_6_72)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x4470 (* ?x4469 l_0_6_71)))
 (let ((?x5329 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x4465 (* ?x4464 l_0_6_58)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x4462 (* ?x4461 l_0_6_57)))
 (let ((?x5312 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x4459 (* ?x4458 l_0_6_56)))
 (let ((?x5305 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x5288 (- (* (* (- 4.0) l_0_6_22) l_0_6_26) (* (* 4.0 l_0_6_23) l_0_6_27))))
 (let ((?x5294 (- (- ?x5288 (* (* 4.0 l_0_6_24) l_0_6_28)) (* (* 4.0 l_0_6_25) l_0_6_29))))
 (let ((?x5300 (+ (+ ?x5294 (* (* 4.0 l_0_6_37) l_0_6_41)) (* (* 4.0 l_0_6_38) l_0_6_42))))
 (let ((?x5309 (+ (- (+ ?x5300 (* (* 4.0 l_0_6_39) l_0_6_43)) ?x5305) (* (* 4.0 l_0_6_40) l_0_6_44))))
 (let ((?x5318 (- (+ (+ (- (+ ?x5309 ?x4459) ?x5312) ?x4462) ?x4465) (* (* 4.0 l_0_6_52) l_0_6_56))))
 (let ((?x5324 (- (- ?x5318 (* (* 4.0 l_0_6_53) l_0_6_57)) (* (* 4.0 l_0_6_54) l_0_6_58))))
 (let ((?x5332 (- (- (- (- ?x5324 (* (* 4.0 l_0_6_55) l_0_6_59)) ?x5329) ?x4470) ?x4473)))
 (let ((?x5339 (+ (+ (- ?x5332 ?x4476) (* (* 4.0 l_0_6_67) l_0_6_71)) (* (* 4.0 l_0_6_68) l_0_6_72))))
 (let ((?x5345 (+ (+ ?x5339 (* (* 4.0 l_0_6_69) l_0_6_73)) (* (* 4.0 l_0_6_70) l_0_6_74))))
 (= (+ (- (+ (- (+ (- ?x5345 ?x5347) ?x5349) ?x5352) ?x5354) ?x5357) ?x5359) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5356 (* 2.0 l_0_6_81)))
 (let ((?x5359 (* ?x5356 l_0_6_88)))
 (let ((?x5351 (* 2.0 l_0_6_80)))
 (let ((?x5354 (* ?x5351 l_0_6_87)))
 (let ((?x5346 (* 2.0 l_0_6_79)))
 (let ((?x5349 (* ?x5346 l_0_6_86)))
 (let ((?x4818 (* l_0_6_75 l_0_6_75)))
 (let ((?x5519 (* 2.0 ?x4818)))
 (let ((?x4815 (* l_0_6_74 l_0_6_74)))
 (let ((?x5517 (* 2.0 ?x4815)))
 (let ((?x4812 (* l_0_6_73 l_0_6_73)))
 (let ((?x5515 (* 2.0 ?x4812)))
 (let ((?x4809 (* l_0_6_72 l_0_6_72)))
 (let ((?x5513 (* 2.0 ?x4809)))
 (let ((?x4806 (* l_0_6_71 l_0_6_71)))
 (let ((?x5511 (* 2.0 ?x4806)))
 (let ((?x4788 (* l_0_6_45 l_0_6_45)))
 (let ((?x5494 (* 2.0 ?x4788)))
 (let ((?x4785 (* l_0_6_44 l_0_6_44)))
 (let ((?x5492 (* 2.0 ?x4785)))
 (let ((?x4782 (* l_0_6_43 l_0_6_43)))
 (let ((?x5490 (* 2.0 ?x4782)))
 (let ((?x4779 (* l_0_6_42 l_0_6_42)))
 (let ((?x5488 (* 2.0 ?x4779)))
 (let ((?x4776 (* l_0_6_41 l_0_6_41)))
 (let ((?x5486 (* 2.0 ?x4776)))
 (let ((?x5468 (* 2.0 l_0_6_13)))
 (let ((?x5469 (* ?x5468 l_0_6_6)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5466 (* ?x5119 l_0_6_5)))
 (let ((?x5473 (- (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x5466) ?x5469) (* (* 2.0 l_0_6_26) l_0_6_26))))
 (let ((?x5479 (- (- ?x5473 (* (* 2.0 l_0_6_27) l_0_6_27)) (* (* 2.0 l_0_6_28) l_0_6_28))))
 (let ((?x5485 (- (- ?x5479 (* (* 2.0 l_0_6_29) l_0_6_29)) (* (* 2.0 l_0_6_30) l_0_6_30))))
 (let ((?x5498 (- (+ (+ (+ (+ (+ ?x5485 ?x5486) ?x5488) ?x5490) ?x5492) ?x5494) (* (* 2.0 l_0_6_56) l_0_6_56))))
 (let ((?x5504 (- (- ?x5498 (* (* 2.0 l_0_6_57) l_0_6_57)) (* (* 2.0 l_0_6_58) l_0_6_58))))
 (let ((?x5510 (- (- ?x5504 (* (* 2.0 l_0_6_59) l_0_6_59)) (* (* 2.0 l_0_6_60) l_0_6_60))))
 (let ((?x5522 (- (- (+ (+ (+ (+ (+ ?x5510 ?x5511) ?x5513) ?x5515) ?x5517) ?x5519) ?x5349) ?x5354)))
 (= (- ?x5522 ?x5359) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5638 (* l_0_6_9 l_0_6_9)))
 (let ((?x5636 (* l_0_6_85 l_0_6_85)))
 (let ((?x5634 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5631 (* l_0_6_84 l_0_6_84)))
 (let ((?x5629 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5626 (* l_0_6_83 l_0_6_83)))
 (let ((?x5624 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5621 (* l_0_6_82 l_0_6_82)))
 (let ((?x5619 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x5616 (* l_0_6_8 l_0_6_8)))
 (let ((?x4638 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x5613 (* l_0_6_7 l_0_6_7)))
 (let ((?x4635 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4632 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4629 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4624 (* 2.0 l_0_6_55)))
 (let ((?x4625 (* ?x4624 l_0_6_59)))
 (let ((?x4621 (* 2.0 l_0_6_54)))
 (let ((?x4622 (* ?x4621 l_0_6_58)))
 (let ((?x4618 (* 2.0 l_0_6_53)))
 (let ((?x4619 (* ?x4618 l_0_6_57)))
 (let ((?x5607 (+ (+ (* (- l_0_6_10) l_0_6_10) (* (* 2.0 l_0_6_52) l_0_6_56)) ?x4619)))
 (let ((?x5615 (- (- (- (- (- (+ (+ ?x5607 ?x4622) ?x4625) ?x4629) ?x4632) ?x4635) ?x5613) ?x4638)))
 (let ((?x5632 (- (+ (- (+ (- (+ (- ?x5615 ?x5616) ?x5619) ?x5621) ?x5624) ?x5626) ?x5629) ?x5631)))
 (= (- (- (+ ?x5632 ?x5634) ?x5636) ?x5638) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x5726 (* l_0_6_90 l_0_6_90)))
 (let ((?x5724 (* l_0_6_89 l_0_6_89)))
 (let ((?x5722 (* l_0_6_88 l_0_6_88)))
 (let ((?x5720 (* l_0_6_87 l_0_6_87)))
 (let ((?x5718 (* l_0_6_86 l_0_6_86)))
 (let ((?x5634 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5629 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5624 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5619 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x4818 (* l_0_6_75 l_0_6_75)))
 (let ((?x4815 (* l_0_6_74 l_0_6_74)))
 (let ((?x4812 (* l_0_6_73 l_0_6_73)))
 (let ((?x4809 (* l_0_6_72 l_0_6_72)))
 (let ((?x4806 (* l_0_6_71 l_0_6_71)))
 (let ((?x4877 (* l_0_6_60 l_0_6_60)))
 (let ((?x4873 (* l_0_6_59 l_0_6_59)))
 (let ((?x4869 (* l_0_6_58 l_0_6_58)))
 (let ((?x4865 (* l_0_6_57 l_0_6_57)))
 (let ((?x4861 (* l_0_6_56 l_0_6_56)))
 (let ((?x5468 (* 2.0 l_0_6_13)))
 (let ((?x5702 (* ?x5468 l_0_6_9)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5700 (* ?x5119 l_0_6_8)))
 (let ((?x5697 (* 2.0 l_0_6_11)))
 (let ((?x5698 (* ?x5697 l_0_6_7)))
 (let ((?x5704 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x5698) ?x5700) ?x5702) ?x4861)))
 (let ((?x5711 (- (- (- (+ (+ (+ (+ ?x5704 ?x4865) ?x4869) ?x4873) ?x4877) ?x4806) ?x4809) ?x4812)))
 (let ((?x5719 (+ (- (- (- (- (- (- ?x5711 ?x4815) ?x4818) ?x5619) ?x5624) ?x5629) ?x5634) ?x5718)))
 (= (+ (+ (+ (+ ?x5719 ?x5720) ?x5722) ?x5724) ?x5726) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x5726 (* l_0_6_90 l_0_6_90)))
 (let ((?x5724 (* l_0_6_89 l_0_6_89)))
 (let ((?x5722 (* l_0_6_88 l_0_6_88)))
 (let ((?x5720 (* l_0_6_87 l_0_6_87)))
 (let ((?x5718 (* l_0_6_86 l_0_6_86)))
 (let ((?x5792 (* l_0_6_15 l_0_6_15)))
 (let ((?x5790 (* l_0_6_14 l_0_6_14)))
 (let ((?x5788 (* l_0_6_13 l_0_6_13)))
 (let ((?x5791 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5788) ?x5790)))
 (= (- (- (- (- (- (- ?x5791 ?x5792) ?x5718) ?x5720) ?x5722) ?x5724) ?x5726) 0.0)))))))))))
(assert
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5849 (* ?x4086 l_0_6_62)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5843 (* ?x4083 l_0_6_47)))
 (let ((?x4148 (* l_0_6_36 l_0_6_36)))
 (let ((?x4145 (* l_0_6_35 l_0_6_35)))
 (let ((?x4142 (* l_0_6_34 l_0_6_34)))
 (let ((?x4201 (* l_0_6_21 l_0_6_21)))
 (let ((?x4197 (* l_0_6_20 l_0_6_20)))
 (let ((?x4193 (* l_0_6_19 l_0_6_19)))
 (let ((?x5830 (- (* (* 2.0 l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_17) l_0_6_19))))
 (let ((?x5835 (+ (+ (+ (- ?x5830 (* (* 4.0 l_0_6_18) l_0_6_20)) ?x4193) ?x4197) ?x4201)))
 (let ((?x5839 (+ (+ ?x5835 (* (* 4.0 l_0_6_32) l_0_6_34)) (* (* 4.0 l_0_6_33) l_0_6_35))))
 (let ((?x5846 (- (- (- (- (- ?x5839 ?x4142) ?x4145) ?x4148) ?x5843) (* (* 4.0 l_0_6_47) l_0_6_49))))
 (let ((?x5852 (+ (+ (- ?x5846 (* (* 4.0 l_0_6_48) l_0_6_50)) ?x5849) (* (* 4.0 l_0_6_62) l_0_6_64))))
 (= (+ ?x5852 (* (* 4.0 l_0_6_63) l_0_6_65)) 0.0)))))))))))))))))
(assert
 (let ((?x4176 (* l_0_6_66 l_0_6_66)))
 (let ((?x5936 (* 2.0 ?x4176)))
 (let ((?x4173 (* l_0_6_65 l_0_6_65)))
 (let ((?x5934 (* 2.0 ?x4173)))
 (let ((?x4170 (* l_0_6_64 l_0_6_64)))
 (let ((?x5932 (* 2.0 ?x4170)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4257 (* ?x4086 l_0_6_64)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4253 (* ?x4083 l_0_6_49)))
 (let ((?x4148 (* l_0_6_36 l_0_6_36)))
 (let ((?x5922 (* 2.0 ?x4148)))
 (let ((?x4145 (* l_0_6_35 l_0_6_35)))
 (let ((?x5920 (* 2.0 ?x4145)))
 (let ((?x4142 (* l_0_6_34 l_0_6_34)))
 (let ((?x5918 (* 2.0 ?x4142)))
 (let ((?x5906 (- (* (* 2.0 l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x5917 (- (- ?x5906 (* (* 2.0 l_0_6_20) l_0_6_20)) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (let ((?x5926 (- (- (+ (+ (+ ?x5917 ?x5918) ?x5920) ?x5922) ?x4253) (* (* 2.0 l_0_6_49) l_0_6_49))))
 (let ((?x5930 (- (- ?x5926 (* (* 2.0 l_0_6_50) l_0_6_50)) (* (* 2.0 l_0_6_51) l_0_6_51))))
 (= (+ (+ (+ (+ ?x5930 ?x4257) ?x5932) ?x5934) ?x5936) 0.0))))))))))))))))))))))
(assert
 (let ((?x5215 (* l_0_6_81 l_0_6_81)))
 (let ((?x5213 (* l_0_6_80 l_0_6_80)))
 (let ((?x5211 (* l_0_6_79 l_0_6_79)))
 (let ((?x4176 (* l_0_6_66 l_0_6_66)))
 (let ((?x4173 (* l_0_6_65 l_0_6_65)))
 (let ((?x4170 (* l_0_6_64 l_0_6_64)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5998 (* ?x4086 l_0_6_67)))
 (let ((?x4225 (* l_0_6_51 l_0_6_51)))
 (let ((?x4221 (* l_0_6_50 l_0_6_50)))
 (let ((?x4217 (* l_0_6_49 l_0_6_49)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5987 (* ?x4083 l_0_6_52)))
 (let ((?x5976 (- (* (* 2.0 l_0_6_1) l_0_6_7) (* (* 4.0 l_0_6_19) l_0_6_22))))
 (let ((?x5980 (- (- ?x5976 (* (* 4.0 l_0_6_20) l_0_6_23)) (* (* 4.0 l_0_6_21) l_0_6_24))))
 (let ((?x5984 (+ (+ ?x5980 (* (* 4.0 l_0_6_34) l_0_6_37)) (* (* 4.0 l_0_6_35) l_0_6_38))))
 (let ((?x5990 (- (- (+ ?x5984 (* (* 4.0 l_0_6_36) l_0_6_39)) ?x5987) (* (* 4.0 l_0_6_49) l_0_6_52))))
 (let ((?x5996 (- (+ (- (+ ?x5990 ?x4217) (* (* 4.0 l_0_6_50) l_0_6_53)) ?x4221) (* (* 4.0 l_0_6_51) l_0_6_54))))
 (let ((?x6002 (- (+ (+ (+ ?x5996 ?x4225) ?x5998) (* (* 4.0 l_0_6_64) l_0_6_67)) ?x4170)))
 (let ((?x6007 (+ (- (+ ?x6002 (* (* 4.0 l_0_6_65) l_0_6_68)) ?x4173) (* (* 4.0 l_0_6_66) l_0_6_69))))
 (= (+ (+ (+ (- ?x6007 ?x4176) ?x5211) ?x5213) ?x5215) 0.0))))))))))))))))))))))
(assert
 (let ((?x6101 (* l_0_6_63 l_0_6_63)))
 (let ((?x6099 (* l_0_6_62 l_0_6_62)))
 (let ((?x6097 (* l_0_6_48 l_0_6_48)))
 (let ((?x6095 (* l_0_6_47 l_0_6_47)))
 (let ((?x6100 (+ (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x6095) ?x6097) ?x6099)))
 (= (+ ?x6100 ?x6101) 0.0)))))))
(assert
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6119 (* ?x4360 l_0_6_65)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6117 (* ?x4357 l_0_6_64)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6115 (* ?x4354 l_0_6_50)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6113 (* ?x4351 l_0_6_49)))
 (let ((?x4944 (* 2.0 l_0_6_3)))
 (let ((?x4945 (* ?x4944 l_0_6_5)))
 (let ((?x4939 (* 2.0 l_0_6_2)))
 (let ((?x4940 (* ?x4939 l_0_6_4)))
 (= (+ (+ (- (- (+ ?x4940 ?x4945) ?x6113) ?x6115) ?x6117) ?x6119) 0.0))))))))))))))
(assert
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6145 (* ?x4360 l_0_6_68)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6143 (* ?x4357 l_0_6_67)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6141 (* ?x4354 l_0_6_53)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6139 (* ?x4351 l_0_6_52)))
 (let ((?x4944 (* 2.0 l_0_6_3)))
 (let ((?x5045 (* ?x4944 l_0_6_8)))
 (let ((?x6144 (+ (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x5045) ?x6139) ?x6141) ?x6143)))
 (= (+ ?x6144 ?x6145) 0.0)))))))))))))
(assert
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x4361 (* ?x4360 l_0_6_72)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x4358 (* ?x4357 l_0_6_71)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x4355 (* ?x4354 l_0_6_57)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x4352 (* ?x4351 l_0_6_56)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5120 (* ?x5119 l_0_6_3)))
 (let ((?x6172 (+ (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x5120) ?x4352) ?x4355) ?x4358)))
 (= (+ ?x6172 ?x4361) 0.0)))))))))))))
(assert
 (let ((?x4176 (* l_0_6_66 l_0_6_66)))
 (let ((?x4173 (* l_0_6_65 l_0_6_65)))
 (let ((?x4170 (* l_0_6_64 l_0_6_64)))
 (let ((?x5199 (* l_0_6_6 l_0_6_6)))
 (let ((?x4225 (* l_0_6_51 l_0_6_51)))
 (let ((?x4221 (* l_0_6_50 l_0_6_50)))
 (let ((?x5191 (* l_0_6_5 l_0_6_5)))
 (let ((?x6184 (- (+ (- (* l_0_6_4 l_0_6_4) (* l_0_6_49 l_0_6_49)) ?x5191) ?x4221)))
 (= (+ (+ (+ (+ (- ?x6184 ?x4225) ?x5199) ?x4170) ?x4173) ?x4176) 0.0))))))))))
(assert
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x6212 (* ?x4475 l_0_6_69)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x6210 (* ?x4472 l_0_6_68)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x6208 (* ?x4469 l_0_6_67)))
 (let ((?x5329 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x6205 (* ?x4464 l_0_6_54)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x6203 (* ?x4461 l_0_6_53)))
 (let ((?x5312 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x6200 (* ?x4458 l_0_6_52)))
 (let ((?x5305 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x6211 (+ (+ (+ (- (- (+ (- ?x5305 ?x6200) ?x5312) ?x6203) ?x6205) ?x5329) ?x6208) ?x6210)))
 (= (+ ?x6211 ?x6212) 0.0))))))))))))))))))
(assert
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x4476 (* ?x4475 l_0_6_73)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x4473 (* ?x4472 l_0_6_72)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x4470 (* ?x4469 l_0_6_71)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x4465 (* ?x4464 l_0_6_58)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x4462 (* ?x4461 l_0_6_57)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x4459 (* ?x4458 l_0_6_56)))
 (let ((?x5468 (* 2.0 l_0_6_13)))
 (let ((?x5469 (* ?x5468 l_0_6_6)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5466 (* ?x5119 l_0_6_5)))
 (let ((?x6240 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x5466) ?x5469) ?x4459) ?x4462)))
 (= (+ (+ (+ (- ?x6240 ?x4465) ?x4470) ?x4473) ?x4476) 0.0)))))))))))))))))))
(assert
 (let ((?x5638 (* l_0_6_9 l_0_6_9)))
 (let ((?x5616 (* l_0_6_8 l_0_6_8)))
 (let ((?x6271 (* l_0_6_70 l_0_6_70)))
 (let ((?x5613 (* l_0_6_7 l_0_6_7)))
 (let ((?x6268 (* l_0_6_69 l_0_6_69)))
 (let ((?x6266 (* l_0_6_68 l_0_6_68)))
 (let ((?x6264 (* l_0_6_67 l_0_6_67)))
 (let ((?x6262 (* l_0_6_55 l_0_6_55)))
 (let ((?x6260 (* l_0_6_54 l_0_6_54)))
 (let ((?x6258 (* l_0_6_53 l_0_6_53)))
 (let ((?x6261 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_52 l_0_6_52)) ?x6258) ?x6260)))
 (let ((?x6273 (+ (+ (+ (+ (+ (+ (- ?x6261 ?x6262) ?x6264) ?x6266) ?x6268) ?x5613) ?x6271) ?x5616)))
 (= (+ ?x6273 ?x5638) 0.0))))))))))))))
(assert
 (let ((?x4638 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x4635 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4632 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4629 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4624 (* 2.0 l_0_6_55)))
 (let ((?x4625 (* ?x4624 l_0_6_59)))
 (let ((?x4621 (* 2.0 l_0_6_54)))
 (let ((?x4622 (* ?x4621 l_0_6_58)))
 (let ((?x4618 (* 2.0 l_0_6_53)))
 (let ((?x4619 (* ?x4618 l_0_6_57)))
 (let ((?x4615 (* 2.0 l_0_6_52)))
 (let ((?x4616 (* ?x4615 l_0_6_56)))
 (let ((?x5468 (* 2.0 l_0_6_13)))
 (let ((?x5702 (* ?x5468 l_0_6_9)))
 (let ((?x5119 (* 2.0 l_0_6_12)))
 (let ((?x5700 (* ?x5119 l_0_6_8)))
 (let ((?x5697 (* 2.0 l_0_6_11)))
 (let ((?x5698 (* ?x5697 l_0_6_7)))
 (let ((?x6294 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x5698) ?x5700) ?x5702) ?x4616)))
 (let ((?x6301 (+ (+ (+ (+ (- (- (- ?x6294 ?x4619) ?x4622) ?x4625) ?x4629) ?x4632) ?x4635) ?x4638)))
 (= ?x6301 0.0))))))))))))))))))))))
(assert
 (let ((?x4818 (* l_0_6_75 l_0_6_75)))
 (let ((?x4815 (* l_0_6_74 l_0_6_74)))
 (let ((?x4812 (* l_0_6_73 l_0_6_73)))
 (let ((?x4809 (* l_0_6_72 l_0_6_72)))
 (let ((?x4806 (* l_0_6_71 l_0_6_71)))
 (let ((?x4877 (* l_0_6_60 l_0_6_60)))
 (let ((?x4873 (* l_0_6_59 l_0_6_59)))
 (let ((?x4869 (* l_0_6_58 l_0_6_58)))
 (let ((?x4865 (* l_0_6_57 l_0_6_57)))
 (let ((?x4861 (* l_0_6_56 l_0_6_56)))
 (let ((?x5792 (* l_0_6_15 l_0_6_15)))
 (let ((?x5790 (* l_0_6_14 l_0_6_14)))
 (let ((?x5788 (* l_0_6_13 l_0_6_13)))
 (let ((?x6316 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5788) ?x5790)))
 (let ((?x6323 (+ (- (- (- (- (- (+ ?x6316 ?x5792) ?x4861) ?x4865) ?x4869) ?x4873) ?x4877) ?x4806)))
 (= (+ (+ (+ (+ ?x6323 ?x4809) ?x4812) ?x4815) ?x4818) 0.0)))))))))))))))))
(assert
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6119 (* ?x4360 l_0_6_65)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6117 (* ?x4357 l_0_6_64)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6115 (* ?x4354 l_0_6_50)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6113 (* ?x4351 l_0_6_49)))
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x6355 (* ?x4348 l_0_6_35)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x6353 (* ?x4345 l_0_6_34)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x4248 (* ?x4080 l_0_6_34)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x6348 (* ?x4341 l_0_6_20)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x6346 (* ?x4338 l_0_6_19)))
 (let ((?x6345 (+ (* (* (- 4.0) l_0_6_16) l_0_6_17) (* (* 2.0 l_0_6_16) l_0_6_19))))
 (let ((?x6352 (- (+ (- (- ?x6345 ?x6346) ?x6348) (* (* 4.0 l_0_6_31) l_0_6_32)) ?x4248)))
 (let ((?x6359 (- (- (+ (+ ?x6352 ?x6353) ?x6355) (* (* 4.0 l_0_6_46) l_0_6_47)) ?x6113)))
 (let ((?x6364 (+ (+ (+ (- ?x6359 ?x6115) (* (* 4.0 l_0_6_61) l_0_6_62)) ?x6117) ?x6119)))
 (let ((?x6370 (- (- ?x6364 (* (* 2.0 l_0_6_92) l_0_6_94)) (* (* 2.0 l_0_6_93) l_0_6_95))))
 (= ?x6370 0.0)))))))))))))))))))))))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4478 (* ?x4363 l_0_6_79)))
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x6212 (* ?x4475 l_0_6_69)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x6210 (* ?x4472 l_0_6_68)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x6208 (* ?x4469 l_0_6_67)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x4257 (* ?x4086 l_0_6_64)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x6205 (* ?x4464 l_0_6_54)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x6203 (* ?x4461 l_0_6_53)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x6200 (* ?x4458 l_0_6_52)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x4253 (* ?x4083 l_0_6_49)))
 (let ((?x4453 (* 2.0 l_0_6_36)))
 (let ((?x6429 (* ?x4453 l_0_6_39)))
 (let ((?x4450 (* 2.0 l_0_6_35)))
 (let ((?x6427 (* ?x4450 l_0_6_38)))
 (let ((?x4447 (* 2.0 l_0_6_34)))
 (let ((?x6425 (* ?x4447 l_0_6_37)))
 (let ((?x4442 (* 2.0 l_0_6_21)))
 (let ((?x6421 (* ?x4442 l_0_6_24)))
 (let ((?x4439 (* 2.0 l_0_6_20)))
 (let ((?x6419 (* ?x4439 l_0_6_23)))
 (let ((?x4436 (* 2.0 l_0_6_19)))
 (let ((?x6417 (* ?x4436 l_0_6_22)))
 (let ((?x6424 (+ (- (- (- (* (* (- 4.0) l_0_6_16) l_0_6_22) ?x6417) ?x6419) ?x6421) (* (* 4.0 l_0_6_31) l_0_6_37))))
 (let ((?x6433 (- (+ (+ (+ (+ ?x6424 ?x6425) ?x6427) ?x6429) ?x4253) (* (* 4.0 l_0_6_46) l_0_6_52))))
 (let ((?x6439 (+ (- (- (- (- ?x6433 ?x6200) ?x6203) ?x6205) ?x4257) (* (* 4.0 l_0_6_61) l_0_6_67))))
 (let ((?x6446 (- (+ (+ (+ (+ ?x6439 ?x6208) ?x6210) ?x6212) ?x4478) (* (* 2.0 l_0_6_94) l_0_6_97))))
 (let ((?x6452 (- (- ?x6446 (* (* 2.0 l_0_6_95) l_0_6_98)) (* (* 2.0 l_0_6_96) l_0_6_99))))
 (= ?x6452 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x6355 (* ?x4348 l_0_6_35)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x6353 (* ?x4345 l_0_6_34)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x6348 (* ?x4341 l_0_6_20)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x6346 (* ?x4338 l_0_6_19)))
 (let ((?x6478 (- (- (+ (- ?x6346 (* ?x4338 l_0_6_17)) ?x6348) (* ?x4341 l_0_6_18)) ?x6353)))
 (let ((?x6485 (+ (- (+ ?x6478 (* 2.0 (* l_0_6_32 l_0_6_32))) ?x6355) (* 2.0 (* l_0_6_33 l_0_6_33)))))
 (let ((?x6489 (- (- ?x6485 (* (* 2.0 l_0_6_47) l_0_6_47)) (* (* 2.0 l_0_6_48) l_0_6_48))))
 (let ((?x6493 (+ (+ ?x6489 (* 2.0 (* l_0_6_62 l_0_6_62))) (* 2.0 (* l_0_6_63 l_0_6_63)))))
 (= ?x6493 0.0))))))))))))))
(assert
 (let ((?x4971 (* 2.0 l_0_6_78)))
 (let ((?x4972 (* ?x4971 l_0_6_80)))
 (let ((?x4968 (* 2.0 l_0_6_77)))
 (let ((?x4969 (* ?x4968 l_0_6_79)))
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6119 (* ?x4360 l_0_6_65)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6117 (* ?x4357 l_0_6_64)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6115 (* ?x4354 l_0_6_50)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6113 (* ?x4351 l_0_6_49)))
 (let ((?x4453 (* 2.0 l_0_6_36)))
 (let ((?x6429 (* ?x4453 l_0_6_39)))
 (let ((?x4450 (* 2.0 l_0_6_35)))
 (let ((?x6427 (* ?x4450 l_0_6_38)))
 (let ((?x4447 (* 2.0 l_0_6_34)))
 (let ((?x6425 (* ?x4447 l_0_6_37)))
 (let ((?x4442 (* 2.0 l_0_6_21)))
 (let ((?x6421 (* ?x4442 l_0_6_24)))
 (let ((?x4439 (* 2.0 l_0_6_20)))
 (let ((?x6419 (* ?x4439 l_0_6_23)))
 (let ((?x4436 (* 2.0 l_0_6_19)))
 (let ((?x6417 (* ?x4436 l_0_6_22)))
 (let ((?x6504 (- (* (* (- 4.0) l_0_6_17) l_0_6_22) (* (* 4.0 l_0_6_18) l_0_6_23))))
 (let ((?x6509 (+ (+ (+ (+ ?x6504 ?x6417) ?x6419) ?x6421) (* (* 4.0 l_0_6_32) l_0_6_37))))
 (let ((?x6514 (- (- (- (+ ?x6509 (* (* 4.0 l_0_6_33) l_0_6_38)) ?x6425) ?x6427) ?x6429)))
 (let ((?x6520 (- (+ (- (+ ?x6514 ?x6113) (* (* 4.0 l_0_6_47) l_0_6_52)) ?x6115) (* (* 4.0 l_0_6_48) l_0_6_53))))
 (let ((?x6526 (+ (- (+ (- ?x6520 ?x6117) (* (* 4.0 l_0_6_62) l_0_6_67)) ?x6119) (* (* 4.0 l_0_6_63) l_0_6_68))))
 (= (+ (+ ?x6526 ?x4969) ?x4972) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x5356 (* 2.0 l_0_6_81)))
 (let ((?x5357 (* ?x5356 l_0_6_84)))
 (let ((?x5351 (* 2.0 l_0_6_80)))
 (let ((?x5352 (* ?x5351 l_0_6_83)))
 (let ((?x5346 (* 2.0 l_0_6_79)))
 (let ((?x5347 (* ?x5346 l_0_6_82)))
 (let ((?x4475 (* 2.0 l_0_6_66)))
 (let ((?x6212 (* ?x4475 l_0_6_69)))
 (let ((?x4472 (* 2.0 l_0_6_65)))
 (let ((?x6210 (* ?x4472 l_0_6_68)))
 (let ((?x4469 (* 2.0 l_0_6_64)))
 (let ((?x6208 (* ?x4469 l_0_6_67)))
 (let ((?x4464 (* 2.0 l_0_6_51)))
 (let ((?x6205 (* ?x4464 l_0_6_54)))
 (let ((?x4461 (* 2.0 l_0_6_50)))
 (let ((?x6203 (* ?x4461 l_0_6_53)))
 (let ((?x4458 (* 2.0 l_0_6_49)))
 (let ((?x6200 (* ?x4458 l_0_6_52)))
 (let ((?x6559 (- (* (* (- 2.0) l_0_6_22) l_0_6_22) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x6563 (- (- ?x6559 (* (* 2.0 l_0_6_24) l_0_6_24)) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x6569 (+ (+ ?x6563 (* 2.0 (* l_0_6_37 l_0_6_37))) (* 2.0 (* l_0_6_38 l_0_6_38)))))
 (let ((?x6575 (+ (+ ?x6569 (* 2.0 (* l_0_6_39 l_0_6_39))) (* 2.0 (* l_0_6_40 l_0_6_40)))))
 (let ((?x6580 (- (+ (+ (+ ?x6575 ?x6200) ?x6203) ?x6205) (* (* 2.0 l_0_6_52) l_0_6_52))))
 (let ((?x6584 (- (- ?x6580 (* (* 2.0 l_0_6_53) l_0_6_53)) (* (* 2.0 l_0_6_54) l_0_6_54))))
 (let ((?x6589 (- (- (- (- ?x6584 (* (* 2.0 l_0_6_55) l_0_6_55)) ?x6208) ?x6210) ?x6212)))
 (let ((?x6593 (+ (+ ?x6589 (* 2.0 (* l_0_6_67 l_0_6_67))) (* 2.0 (* l_0_6_68 l_0_6_68)))))
 (let ((?x6597 (+ (+ ?x6593 (* 2.0 (* l_0_6_69 l_0_6_69))) (* 2.0 (* l_0_6_70 l_0_6_70)))))
 (= (+ (+ (+ ?x6597 ?x5347) ?x5352) ?x5357) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5849 (* ?x4086 l_0_6_62)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5843 (* ?x4083 l_0_6_47)))
 (let ((?x4250 (* l_0_6_31 l_0_6_31)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x1371 (* ?x4080 l_0_6_32)))
 (let ((?x1362 (+ (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) (* l_0_6_16 l_0_6_16)) ?x1371)))
 (let ((?x1352 (- (+ (- (- ?x1362 ?x4250) ?x5843) ?x5849) (* (* 2.0 l_0_6_91) l_0_6_92))))
 (= ?x1352 0.0)))))))))))
(assert
 (let ((?x4089 (* l_0_6_76 l_0_6_76)))
 (let ((?x4168 (* l_0_6_61 l_0_6_61)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5998 (* ?x4086 l_0_6_67)))
 (let ((?x4154 (* l_0_6_46 l_0_6_46)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5987 (* ?x4083 l_0_6_52)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x6633 (* ?x4080 l_0_6_37)))
 (let ((?x6637 (+ (+ (- (+ (* (* (- 2.0) l_0_6_16) l_0_6_22) ?x6633) ?x5987) ?x4154) ?x5998)))
 (= (- (+ (- ?x6637 ?x4168) ?x4089) (* (* 2.0 l_0_6_91) l_0_6_97)) 0.0))))))))))))
(assert
 (let ((?x6678 (* l_0_6_93 l_0_6_93)))
 (let ((?x6676 (* l_0_6_92 l_0_6_92)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x1371 (* ?x4080 l_0_6_32)))
 (let ((?x6657 (- (* (* 2.0 l_0_6_16) l_0_6_17) (* (* 1.0 l_0_6_17) l_0_6_17))))
 (let ((?x6663 (+ (- (- ?x6657 (* (* 1.0 l_0_6_18) l_0_6_18)) ?x1371) (* 1.0 (* l_0_6_32 l_0_6_32)))))
 (let ((?x6668 (- (+ ?x6663 (* 1.0 (* l_0_6_33 l_0_6_33))) (* (* 1.0 l_0_6_47) l_0_6_47))))
 (let ((?x6673 (+ (- ?x6668 (* (* 1.0 l_0_6_48) l_0_6_48)) (* 1.0 (* l_0_6_62 l_0_6_62)))))
 (= (- (- (+ ?x6673 (* 1.0 (* l_0_6_63 l_0_6_63))) ?x6676) ?x6678) 0.0))))))))))
(assert
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4364 (* ?x4363 l_0_6_77)))
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6145 (* ?x4360 l_0_6_68)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6143 (* ?x4357 l_0_6_67)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5849 (* ?x4086 l_0_6_62)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6141 (* ?x4354 l_0_6_53)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6139 (* ?x4351 l_0_6_52)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5843 (* ?x4083 l_0_6_47)))
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x6700 (* ?x4348 l_0_6_38)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x6698 (* ?x4345 l_0_6_37)))
 (let ((?x4080 (* 2.0 l_0_6_31)))
 (let ((?x6633 (* ?x4080 l_0_6_37)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x6695 (* ?x4341 l_0_6_23)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x6693 (* ?x4338 l_0_6_22)))
 (let ((?x6699 (+ (- (- (- (* (* 2.0 l_0_6_16) l_0_6_22) ?x6693) ?x6695) ?x6633) ?x6698)))
 (let ((?x6707 (+ (+ (- (- (- (+ (+ ?x6699 ?x6700) ?x5843) ?x6139) ?x6141) ?x5849) ?x6143) ?x6145)))
 (let ((?x6712 (- (- (+ ?x6707 ?x4364) (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x6712 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x6770 (* l_0_6_99 l_0_6_99)))
 (let ((?x6768 (* l_0_6_98 l_0_6_98)))
 (let ((?x6766 (* l_0_6_97 l_0_6_97)))
 (let ((?x4363 (* 2.0 l_0_6_76)))
 (let ((?x4640 (* ?x4363 l_0_6_82)))
 (let ((?x4086 (* 2.0 l_0_6_61)))
 (let ((?x5998 (* ?x4086 l_0_6_67)))
 (let ((?x4083 (* 2.0 l_0_6_46)))
 (let ((?x5987 (* ?x4083 l_0_6_52)))
 (let ((?x6725 (- (* (- l_0_6_100) l_0_6_100) (* (* 1.0 l_0_6_22) l_0_6_22))))
 (let ((?x6731 (- (- ?x6725 (* (* 1.0 l_0_6_23) l_0_6_23)) (* (* 1.0 l_0_6_24) l_0_6_24))))
 (let ((?x6736 (+ (- ?x6731 (* (* 1.0 l_0_6_25) l_0_6_25)) (* 1.0 (* l_0_6_37 l_0_6_37)))))
 (let ((?x6740 (+ (+ ?x6736 (* 1.0 (* l_0_6_38 l_0_6_38))) (* 1.0 (* l_0_6_39 l_0_6_39)))))
 (let ((?x6746 (- (+ (+ ?x6740 (* 1.0 (* l_0_6_40 l_0_6_40))) ?x5987) (* (* 1.0 l_0_6_52) l_0_6_52))))
 (let ((?x6752 (- (- ?x6746 (* (* 1.0 l_0_6_53) l_0_6_53)) (* (* 1.0 l_0_6_54) l_0_6_54))))
 (let ((?x6758 (+ (- (- ?x6752 (* (* 1.0 l_0_6_55) l_0_6_55)) ?x5998) (* 1.0 (* l_0_6_67 l_0_6_67)))))
 (let ((?x6762 (+ (+ ?x6758 (* 1.0 (* l_0_6_68 l_0_6_68))) (* 1.0 (* l_0_6_69 l_0_6_69)))))
 (let ((?x6769 (- (- (+ (+ ?x6762 (* 1.0 (* l_0_6_70 l_0_6_70))) ?x4640) ?x6766) ?x6768)))
 (= (- ?x6769 ?x6770) 0.0))))))))))))))))))))
(assert
 (let ((?x6483 (* l_0_6_33 l_0_6_33)))
 (let ((?x6479 (* l_0_6_32 l_0_6_32)))
 (let ((?x6800 (- (- (+ (* l_0_6_17 l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x6479) ?x6483)))
 (= ?x6800 0.0)))))
(assert
 (let ((?x4908 (* l_0_6_78 l_0_6_78)))
 (let ((?x4906 (* l_0_6_77 l_0_6_77)))
 (let ((?x6101 (* l_0_6_63 l_0_6_63)))
 (let ((?x6099 (* l_0_6_62 l_0_6_62)))
 (let ((?x6097 (* l_0_6_48 l_0_6_48)))
 (let ((?x6095 (* l_0_6_47 l_0_6_47)))
 (let ((?x4348 (* 2.0 l_0_6_33)))
 (let ((?x6700 (* ?x4348 l_0_6_38)))
 (let ((?x4345 (* 2.0 l_0_6_32)))
 (let ((?x6698 (* ?x4345 l_0_6_37)))
 (let ((?x4341 (* 2.0 l_0_6_18)))
 (let ((?x6695 (* ?x4341 l_0_6_23)))
 (let ((?x4338 (* 2.0 l_0_6_17)))
 (let ((?x6693 (* ?x4338 l_0_6_22)))
 (let ((?x6810 (- (- (+ (+ (- (- (+ ?x6693 ?x6695) ?x6698) ?x6700) ?x6095) ?x6097) ?x6099) ?x6101)))
 (= (+ (+ ?x6810 ?x4906) ?x4908) 0.0)))))))))))))))))
(assert
 (let ((?x4971 (* 2.0 l_0_6_78)))
 (let ((?x5059 (* ?x4971 l_0_6_83)))
 (let ((?x4968 (* 2.0 l_0_6_77)))
 (let ((?x5055 (* ?x4968 l_0_6_82)))
 (let ((?x4360 (* 2.0 l_0_6_63)))
 (let ((?x6145 (* ?x4360 l_0_6_68)))
 (let ((?x4357 (* 2.0 l_0_6_62)))
 (let ((?x6143 (* ?x4357 l_0_6_67)))
 (let ((?x4354 (* 2.0 l_0_6_48)))
 (let ((?x6141 (* ?x4354 l_0_6_53)))
 (let ((?x4351 (* 2.0 l_0_6_47)))
 (let ((?x6139 (* ?x4351 l_0_6_52)))
 (let ((?x6573 (* l_0_6_40 l_0_6_40)))
 (let ((?x6570 (* l_0_6_39 l_0_6_39)))
 (let ((?x6567 (* l_0_6_38 l_0_6_38)))
 (let ((?x6564 (* l_0_6_37 l_0_6_37)))
 (let ((?x1231 (* l_0_6_25 l_0_6_25)))
 (let ((?x1221 (* l_0_6_24 l_0_6_24)))
 (let ((?x6818 (+ (+ (+ (* l_0_6_22 l_0_6_22) (* l_0_6_23 l_0_6_23)) ?x1221) ?x1231)))
 (let ((?x6825 (- (+ (+ (- (- (- (- ?x6818 ?x6564) ?x6567) ?x6570) ?x6573) ?x6139) ?x6141) ?x6143)))
 (= (+ (+ (- ?x6825 ?x6145) ?x5055) ?x5059) 0.0))))))))))))))))))))))
(assert
 (let ((?x5636 (* l_0_6_85 l_0_6_85)))
 (let ((?x5631 (* l_0_6_84 l_0_6_84)))
 (let ((?x5626 (* l_0_6_83 l_0_6_83)))
 (let ((?x5621 (* l_0_6_82 l_0_6_82)))
 (let ((?x6271 (* l_0_6_70 l_0_6_70)))
 (let ((?x6268 (* l_0_6_69 l_0_6_69)))
 (let ((?x6266 (* l_0_6_68 l_0_6_68)))
 (let ((?x6264 (* l_0_6_67 l_0_6_67)))
 (let ((?x6262 (* l_0_6_55 l_0_6_55)))
 (let ((?x6260 (* l_0_6_54 l_0_6_54)))
 (let ((?x6846 (+ (+ (+ (* l_0_6_52 l_0_6_52) (* l_0_6_53 l_0_6_53)) ?x6260) ?x6262)))
 (let ((?x6853 (+ (+ (+ (- (- (- (- ?x6846 ?x6264) ?x6266) ?x6268) ?x6271) ?x5621) ?x5626) ?x5631)))
 (= (+ ?x6853 ?x5636) 0.0))))))))))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6906 (* ?x6905 l_0_7_64)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6901 (* ?x6900 l_0_7_49)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x6895 (* ?x6894 l_0_7_34)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x6890 (* ?x6889 l_0_7_19)))
 (let ((?x6893 (- (- (* (* (- 2.0) l_0_7_106) l_0_7_109) ?x6890) (* ?x6889 l_0_7_16))))
 (let ((?x6904 (- (- (+ (+ ?x6893 ?x6895) (* 2.0 (* l_0_7_31 l_0_7_31))) ?x6901) (* ?x6900 l_0_7_46))))
 (let ((?x6913 (- (+ (+ ?x6904 ?x6906) (* 2.0 (* l_0_7_61 l_0_7_61))) (* (* 2.0 l_0_7_91) l_0_7_94))))
 (= (+ ?x6913 2.0) 0.0)))))))))))))
(assert
 (let ((?x6962 (* l_0_7_91 l_0_7_91)))
 (let ((?x6954 (- (- (- _a_0_) (* l_0_7_106 l_0_7_106)) (* (* 1.0 l_0_7_16) l_0_7_16))))
 (let ((?x6959 (- (+ ?x6954 (* 1.0 (* l_0_7_31 l_0_7_31))) (* (* 1.0 l_0_7_46) l_0_7_46))))
 (= (+ (- (+ ?x6959 (* 1.0 (* l_0_7_61 l_0_7_61))) ?x6962) 3.0) 0.0)))))
(assert
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6993 (* ?x6905 l_0_7_62)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6991 (* ?x6900 l_0_7_47)))
 (let ((?x6897 (* l_0_7_31 l_0_7_31)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x6988 (* ?x6894 l_0_7_32)))
 (let ((?x6921 (* l_0_7_16 l_0_7_16)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x6985 (* ?x6889 l_0_7_17)))
 (let ((?x6987 (+ (- (- (- _a_1_) (* (* 2.0 l_0_7_106) l_0_7_107)) ?x6985) ?x6921)))
 (let ((?x6996 (- (+ (- (- (+ ?x6987 ?x6988) ?x6897) ?x6991) ?x6993) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= ?x6996 0.0))))))))))))))
(assert
 (let ((?x7031 (* l_0_7_76 l_0_7_76)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x7029 (* ?x6905 l_0_7_71)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x7027 (* ?x6900 l_0_7_56)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x7025 (* ?x6894 l_0_7_41)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x7023 (* ?x6889 l_0_7_26)))
 (let ((?x7022 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_101) l_0_7_91)) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (= (- (+ (- (+ (- ?x7022 ?x7023) ?x7025) ?x7027) ?x7029) ?x7031) 0.0))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7093 (* ?x7092 l_0_7_77)))
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x7090 (* ?x7089 l_0_7_72)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x7087 (* ?x7086 l_0_7_71)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x7084 (* ?x7083 l_0_7_57)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x7081 (* ?x7080 l_0_7_56)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x7078 (* ?x7077 l_0_7_42)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x7075 (* ?x7074 l_0_7_41)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x7025 (* ?x6894 l_0_7_41)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x7071 (* ?x7070 l_0_7_27)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x7068 (* ?x7067 l_0_7_26)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x7023 (* ?x6889 l_0_7_26)))
 (let ((?x7056 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x7062 (- (- ?x7056 (* (* 2.0 l_0_7_102) l_0_7_93)) (* (* 2.0 l_0_7_107) l_0_7_116))))
 (let ((?x7072 (- (- (+ (- ?x7062 (* (* 2.0 l_0_7_108) l_0_7_117)) ?x7023) ?x7068) ?x7071)))
 (let ((?x7091 (+ (+ (- (- (+ (+ (- ?x7072 ?x7025) ?x7075) ?x7078) ?x7081) ?x7084) ?x7087) ?x7090)))
 (= (- ?x7091 ?x7093) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7174 (* ?x7092 l_0_7_79)))
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x7172 (* ?x7171 l_0_7_73)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x7169 (* ?x7168 l_0_7_72)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x7166 (* ?x7165 l_0_7_71)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x7160 (* ?x7159 l_0_7_58)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x7157 (* ?x7156 l_0_7_57)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x7154 (* ?x7153 l_0_7_56)))
 (let ((?x7147 (* 2.0 l_0_7_36)))
 (let ((?x7148 (* ?x7147 l_0_7_43)))
 (let ((?x7144 (* 2.0 l_0_7_35)))
 (let ((?x7145 (* ?x7144 l_0_7_42)))
 (let ((?x7141 (* 2.0 l_0_7_34)))
 (let ((?x7142 (* ?x7141 l_0_7_41)))
 (let ((?x7135 (* 2.0 l_0_7_21)))
 (let ((?x7136 (* ?x7135 l_0_7_28)))
 (let ((?x7132 (* 2.0 l_0_7_20)))
 (let ((?x7133 (* ?x7132 l_0_7_27)))
 (let ((?x7129 (* 2.0 l_0_7_19)))
 (let ((?x7130 (* ?x7129 l_0_7_26)))
 (let ((?x7111 (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_101) l_0_7_94))))
 (let ((?x7116 (- (- ?x7111 (* (* 2.0 l_0_7_102) l_0_7_95)) (* (* 2.0 l_0_7_103) l_0_7_96))))
 (let ((?x7122 (- (- ?x7116 (* (* 2.0 l_0_7_109) l_0_7_116)) (* (* 2.0 l_0_7_110) l_0_7_117))))
 (let ((?x7128 (- (- ?x7122 (* (* 2.0 l_0_7_111) l_0_7_118)) (* (* 4.0 l_0_7_16) l_0_7_26))))
 (let ((?x7140 (+ (- (- (- ?x7128 ?x7130) ?x7133) ?x7136) (* (* 4.0 l_0_7_31) l_0_7_41))))
 (let ((?x7152 (- (+ (+ (+ ?x7140 ?x7142) ?x7145) ?x7148) (* (* 4.0 l_0_7_46) l_0_7_56))))
 (let ((?x7164 (+ (- (- (- ?x7152 ?x7154) ?x7157) ?x7160) (* (* 4.0 l_0_7_61) l_0_7_71))))
 (= (- (+ (+ (+ ?x7164 ?x7166) ?x7169) ?x7172) ?x7174) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7306 (* ?x7092 l_0_7_86)))
 (let ((?x7304 (* ?x7092 l_0_7_82)))
 (let ((?x7302 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7299 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7296 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7293 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x7029 (* ?x6905 l_0_7_71)))
 (let ((?x7288 (* 2.0 l_0_7_55)))
 (let ((?x7289 (* ?x7288 l_0_7_59)))
 (let ((?x7285 (* 2.0 l_0_7_54)))
 (let ((?x7286 (* ?x7285 l_0_7_58)))
 (let ((?x7282 (* 2.0 l_0_7_53)))
 (let ((?x7283 (* ?x7282 l_0_7_57)))
 (let ((?x7279 (* 2.0 l_0_7_52)))
 (let ((?x7280 (* ?x7279 l_0_7_56)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x7027 (* ?x6900 l_0_7_56)))
 (let ((?x7276 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x7273 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x7270 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x7267 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x7263 (* 2.0 l_0_7_25)))
 (let ((?x7264 (* ?x7263 l_0_7_29)))
 (let ((?x7260 (* 2.0 l_0_7_24)))
 (let ((?x7261 (* ?x7260 l_0_7_28)))
 (let ((?x7257 (* 2.0 l_0_7_23)))
 (let ((?x7258 (* ?x7257 l_0_7_27)))
 (let ((?x7255 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x7235 (- (* (* (- 2.0) l_0_7_1) l_0_7_7) (* (* 2.0 l_0_7_100) l_0_7_104))))
 (let ((?x7239 (- (- ?x7235 (* (* 2.0 l_0_7_101) l_0_7_97)) (* (* 2.0 l_0_7_102) l_0_7_98))))
 (let ((?x7244 (- (- ?x7239 (* (* 2.0 l_0_7_103) l_0_7_99)) (* (* 2.0 l_0_7_112) l_0_7_116))))
 (let ((?x7250 (- (- ?x7244 (* (* 2.0 l_0_7_113) l_0_7_117)) (* (* 2.0 l_0_7_114) l_0_7_118))))
 (let ((?x7262 (- (- (- (- ?x7250 (* (* 2.0 l_0_7_115) l_0_7_119)) ?x7255) ?x7258) ?x7261)))
 (let ((?x7281 (- (+ (+ (+ (+ (+ (- ?x7262 ?x7264) ?x7267) ?x7270) ?x7273) ?x7276) ?x7027) ?x7280)))
 (let ((?x7300 (+ (+ (+ (- (- (- (- ?x7281 ?x7283) ?x7286) ?x7289) ?x7029) ?x7293) ?x7296) ?x7299)))
 (= (+ (- (+ ?x7300 ?x7302) ?x7304) ?x7306) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7306 (* ?x7092 l_0_7_86)))
 (let ((?x7385 (* l_0_7_120 l_0_7_120)))
 (let ((?x7383 (* l_0_7_119 l_0_7_119)))
 (let ((?x7381 (* l_0_7_118 l_0_7_118)))
 (let ((?x7379 (* l_0_7_117 l_0_7_117)))
 (let ((?x7377 (* l_0_7_116 l_0_7_116)))
 (let ((?x7375 (* l_0_7_105 l_0_7_105)))
 (let ((?x7373 (* l_0_7_104 l_0_7_104)))
 (let ((?x7371 (* l_0_7_103 l_0_7_103)))
 (let ((?x7369 (* l_0_7_102 l_0_7_102)))
 (let ((?x7370 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_11) (* l_0_7_101 l_0_7_101)) ?x7369)))
 (let ((?x7384 (- (- (- (- (- (- (- ?x7370 ?x7371) ?x7373) ?x7375) ?x7377) ?x7379) ?x7381) ?x7383)))
 (let ((?x7392 (- (- (- ?x7384 ?x7385) (* (* 1.0 l_0_7_26) l_0_7_26)) (* (* 1.0 l_0_7_27) l_0_7_27))))
 (let ((?x7398 (- (- ?x7392 (* (* 1.0 l_0_7_28) l_0_7_28)) (* (* 1.0 l_0_7_29) l_0_7_29))))
 (let ((?x7404 (+ (- ?x7398 (* (* 1.0 l_0_7_30) l_0_7_30)) (* 1.0 (* l_0_7_41 l_0_7_41)))))
 (let ((?x7410 (+ (+ ?x7404 (* 1.0 (* l_0_7_42 l_0_7_42))) (* 1.0 (* l_0_7_43 l_0_7_43)))))
 (let ((?x7416 (+ (+ ?x7410 (* 1.0 (* l_0_7_44 l_0_7_44))) (* 1.0 (* l_0_7_45 l_0_7_45)))))
 (let ((?x7422 (- (- ?x7416 (* (* 1.0 l_0_7_56) l_0_7_56)) (* (* 1.0 l_0_7_57) l_0_7_57))))
 (let ((?x7428 (- (- ?x7422 (* (* 1.0 l_0_7_58) l_0_7_58)) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (let ((?x7434 (+ (- ?x7428 (* (* 1.0 l_0_7_60) l_0_7_60)) (* 1.0 (* l_0_7_71 l_0_7_71)))))
 (let ((?x7440 (+ (+ ?x7434 (* 1.0 (* l_0_7_72 l_0_7_72))) (* 1.0 (* l_0_7_73 l_0_7_73)))))
 (let ((?x7446 (+ (+ ?x7440 (* 1.0 (* l_0_7_74 l_0_7_74))) (* 1.0 (* l_0_7_75 l_0_7_75)))))
 (= (- ?x7446 ?x7306) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x7498 (* l_0_7_78 l_0_7_78)))
 (let ((?x7496 (* l_0_7_77 l_0_7_77)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x7078 (* ?x7077 l_0_7_42)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x7075 (* ?x7074 l_0_7_41)))
 (let ((?x7492 (* l_0_7_3 l_0_7_3)))
 (let ((?x7490 (* l_0_7_2 l_0_7_2)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x7071 (* ?x7070 l_0_7_27)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x7068 (* ?x7067 l_0_7_26)))
 (let ((?x7499 (- (- (- (- (- (- (+ ?x7068 ?x7071) ?x7490) ?x7492) ?x7075) ?x7078) ?x7496) ?x7498)))
 (= ?x7499 0.0)))))))))))))))
(assert
 (let ((?x7523 (* 2.0 l_0_7_78)))
 (let ((?x7524 (* ?x7523 l_0_7_80)))
 (let ((?x7520 (* 2.0 l_0_7_77)))
 (let ((?x7521 (* ?x7520 l_0_7_79)))
 (let ((?x7147 (* 2.0 l_0_7_36)))
 (let ((?x7148 (* ?x7147 l_0_7_43)))
 (let ((?x7144 (* 2.0 l_0_7_35)))
 (let ((?x7145 (* ?x7144 l_0_7_42)))
 (let ((?x7141 (* 2.0 l_0_7_34)))
 (let ((?x7142 (* ?x7141 l_0_7_41)))
 (let ((?x2661 (* 2.0 l_0_7_3)))
 (let ((?x2662 (* ?x2661 l_0_7_5)))
 (let ((?x7135 (* 2.0 l_0_7_21)))
 (let ((?x7136 (* ?x7135 l_0_7_28)))
 (let ((?x7132 (* 2.0 l_0_7_20)))
 (let ((?x7133 (* ?x7132 l_0_7_27)))
 (let ((?x2709 (* 2.0 l_0_7_2)))
 (let ((?x2710 (* ?x2709 l_0_7_4)))
 (let ((?x7129 (* 2.0 l_0_7_19)))
 (let ((?x7130 (* ?x7129 l_0_7_26)))
 (let ((?x2715 (- (* (* (- 4.0) l_0_7_17) l_0_7_26) (* (* 4.0 l_0_7_18) l_0_7_27))))
 (let ((?x7501 (+ (- (+ (+ (- (+ ?x2715 ?x7130) ?x2710) ?x7133) ?x7136) ?x2662) (* (* 4.0 l_0_7_32) l_0_7_41))))
 (let ((?x7507 (- (- (- (+ ?x7501 (* (* 4.0 l_0_7_33) l_0_7_42)) ?x7142) ?x7145) ?x7148)))
 (let ((?x7513 (- (- ?x7507 (* (* 4.0 l_0_7_47) l_0_7_56)) (* (* 4.0 l_0_7_48) l_0_7_57))))
 (let ((?x7519 (+ (+ ?x7513 (* (* 4.0 l_0_7_62) l_0_7_71)) (* (* 4.0 l_0_7_63) l_0_7_72))))
 (= (- (- ?x7519 ?x7521) ?x7524) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7523 (* 2.0 l_0_7_78)))
 (let ((?x7577 (* ?x7523 l_0_7_87)))
 (let ((?x7575 (* ?x7523 l_0_7_83)))
 (let ((?x7520 (* 2.0 l_0_7_77)))
 (let ((?x7573 (* ?x7520 l_0_7_86)))
 (let ((?x7571 (* ?x7520 l_0_7_82)))
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x7090 (* ?x7089 l_0_7_72)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x7087 (* ?x7086 l_0_7_71)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x7084 (* ?x7083 l_0_7_57)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x7081 (* ?x7080 l_0_7_56)))
 (let ((?x7276 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x7273 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x7270 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x7267 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x2661 (* 2.0 l_0_7_3)))
 (let ((?x7561 (* ?x2661 l_0_7_8)))
 (let ((?x7263 (* 2.0 l_0_7_25)))
 (let ((?x7264 (* ?x7263 l_0_7_29)))
 (let ((?x7260 (* 2.0 l_0_7_24)))
 (let ((?x7261 (* ?x7260 l_0_7_28)))
 (let ((?x7257 (* 2.0 l_0_7_23)))
 (let ((?x7258 (* ?x7257 l_0_7_27)))
 (let ((?x7255 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x7560 (+ (+ (+ (+ (* (* (- 2.0) l_0_7_2) l_0_7_7) ?x7255) ?x7258) ?x7261) ?x7264)))
 (let ((?x7568 (+ (+ (- (- (- (- (- ?x7560 ?x7561) ?x7267) ?x7270) ?x7273) ?x7276) ?x7081) ?x7084)))
 (= (+ (- (+ (- (- (- ?x7568 ?x7087) ?x7090) ?x7571) ?x7573) ?x7575) ?x7577) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x7523 (* 2.0 l_0_7_78)))
 (let ((?x7577 (* ?x7523 l_0_7_87)))
 (let ((?x7520 (* 2.0 l_0_7_77)))
 (let ((?x7573 (* ?x7520 l_0_7_86)))
 (let ((?x7414 (* l_0_7_45 l_0_7_45)))
 (let ((?x7411 (* l_0_7_44 l_0_7_44)))
 (let ((?x7408 (* l_0_7_43 l_0_7_43)))
 (let ((?x7405 (* l_0_7_42 l_0_7_42)))
 (let ((?x7402 (* l_0_7_41 l_0_7_41)))
 (let ((?x2551 (* l_0_7_30 l_0_7_30)))
 (let ((?x2547 (* l_0_7_29 l_0_7_29)))
 (let ((?x2457 (* l_0_7_28 l_0_7_28)))
 (let ((?x2586 (* l_0_7_27 l_0_7_27)))
 (let ((?x2580 (* l_0_7_26 l_0_7_26)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x2824 (* ?x2817 l_0_7_3)))
 (let ((?x2848 (+ (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x2824) ?x2580) ?x2586) ?x2457)))
 (let ((?x7590 (- (- (- (- (- (+ (+ ?x2848 ?x2547) ?x2551) ?x7402) ?x7405) ?x7408) ?x7411) ?x7414)))
 (= (- (- ?x7590 ?x7573) ?x7577) 0.0))))))))))))))))))))
(assert
 (let ((?x7637 (* l_0_7_81 l_0_7_81)))
 (let ((?x7635 (* l_0_7_80 l_0_7_80)))
 (let ((?x7633 (* l_0_7_79 l_0_7_79)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x7029 (* ?x6905 l_0_7_71)))
 (let ((?x7621 (* l_0_7_6 l_0_7_6)))
 (let ((?x7613 (* l_0_7_5 l_0_7_5)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x7027 (* ?x6900 l_0_7_56)))
 (let ((?x7607 (* l_0_7_4 l_0_7_4)))
 (let ((?x2308 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 4.0 l_0_7_19) l_0_7_26))))
 (let ((?x3024 (- (- ?x2308 (* (* 4.0 l_0_7_20) l_0_7_27)) (* (* 4.0 l_0_7_21) l_0_7_28))))
 (let ((?x7603 (+ (+ ?x3024 (* (* 4.0 l_0_7_34) l_0_7_41)) (* (* 4.0 l_0_7_35) l_0_7_42))))
 (let ((?x7612 (- (- (- (+ ?x7603 (* (* 4.0 l_0_7_36) l_0_7_43)) ?x7607) ?x7027) (* (* 4.0 l_0_7_49) l_0_7_56))))
 (let ((?x7620 (- (- (- ?x7612 ?x7613) (* (* 4.0 l_0_7_50) l_0_7_57)) (* (* 4.0 l_0_7_51) l_0_7_58))))
 (let ((?x7629 (+ (+ (+ (- ?x7620 ?x7621) ?x7029) (* (* 4.0 l_0_7_64) l_0_7_71)) (* (* 4.0 l_0_7_65) l_0_7_72))))
 (let ((?x7638 (- (- (- (+ ?x7629 (* (* 4.0 l_0_7_66) l_0_7_73)) ?x7633) ?x7635) ?x7637)))
 (= ?x7638 0.0)))))))))))))))))))
(assert
 (let ((?x7761 (* 2.0 l_0_7_81)))
 (let ((?x7764 (* ?x7761 l_0_7_88)))
 (let ((?x7762 (* ?x7761 l_0_7_84)))
 (let ((?x7756 (* 2.0 l_0_7_80)))
 (let ((?x7759 (* ?x7756 l_0_7_87)))
 (let ((?x7757 (* ?x7756 l_0_7_83)))
 (let ((?x7751 (* 2.0 l_0_7_79)))
 (let ((?x7754 (* ?x7751 l_0_7_86)))
 (let ((?x7752 (* ?x7751 l_0_7_82)))
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x7172 (* ?x7171 l_0_7_73)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x7169 (* ?x7168 l_0_7_72)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x7166 (* ?x7165 l_0_7_71)))
 (let ((?x7734 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x7160 (* ?x7159 l_0_7_58)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x7157 (* ?x7156 l_0_7_57)))
 (let ((?x7717 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x7154 (* ?x7153 l_0_7_56)))
 (let ((?x7710 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x7693 (- (* (* (- 4.0) l_0_7_22) l_0_7_26) (* (* 4.0 l_0_7_23) l_0_7_27))))
 (let ((?x7699 (- (- ?x7693 (* (* 4.0 l_0_7_24) l_0_7_28)) (* (* 4.0 l_0_7_25) l_0_7_29))))
 (let ((?x7705 (+ (+ ?x7699 (* (* 4.0 l_0_7_37) l_0_7_41)) (* (* 4.0 l_0_7_38) l_0_7_42))))
 (let ((?x7714 (+ (- (+ ?x7705 (* (* 4.0 l_0_7_39) l_0_7_43)) ?x7710) (* (* 4.0 l_0_7_40) l_0_7_44))))
 (let ((?x7723 (- (+ (+ (- (+ ?x7714 ?x7154) ?x7717) ?x7157) ?x7160) (* (* 4.0 l_0_7_52) l_0_7_56))))
 (let ((?x7729 (- (- ?x7723 (* (* 4.0 l_0_7_53) l_0_7_57)) (* (* 4.0 l_0_7_54) l_0_7_58))))
 (let ((?x7737 (- (- (- (- ?x7729 (* (* 4.0 l_0_7_55) l_0_7_59)) ?x7734) ?x7166) ?x7169)))
 (let ((?x7744 (+ (+ (- ?x7737 ?x7172) (* (* 4.0 l_0_7_67) l_0_7_71)) (* (* 4.0 l_0_7_68) l_0_7_72))))
 (let ((?x7750 (+ (+ ?x7744 (* (* 4.0 l_0_7_69) l_0_7_73)) (* (* 4.0 l_0_7_70) l_0_7_74))))
 (= (+ (- (+ (- (+ (- ?x7750 ?x7752) ?x7754) ?x7757) ?x7759) ?x7762) ?x7764) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7761 (* 2.0 l_0_7_81)))
 (let ((?x7764 (* ?x7761 l_0_7_88)))
 (let ((?x7756 (* 2.0 l_0_7_80)))
 (let ((?x7759 (* ?x7756 l_0_7_87)))
 (let ((?x7751 (* 2.0 l_0_7_79)))
 (let ((?x7754 (* ?x7751 l_0_7_86)))
 (let ((?x7808 (* 2.0 l_0_7_13)))
 (let ((?x7809 (* ?x7808 l_0_7_6)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x7806 (* ?x2817 l_0_7_5)))
 (let ((?x7813 (- (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x7806) ?x7809) (* (* 2.0 l_0_7_26) l_0_7_26))))
 (let ((?x7819 (- (- ?x7813 (* (* 2.0 l_0_7_27) l_0_7_27)) (* (* 2.0 l_0_7_28) l_0_7_28))))
 (let ((?x7825 (- (- ?x7819 (* (* 2.0 l_0_7_29) l_0_7_29)) (* (* 2.0 l_0_7_30) l_0_7_30))))
 (let ((?x7829 (+ (+ ?x7825 (* 2.0 (* l_0_7_41 l_0_7_41))) (* 2.0 (* l_0_7_42 l_0_7_42)))))
 (let ((?x7833 (+ (+ ?x7829 (* 2.0 (* l_0_7_43 l_0_7_43))) (* 2.0 (* l_0_7_44 l_0_7_44)))))
 (let ((?x7838 (- (+ ?x7833 (* 2.0 (* l_0_7_45 l_0_7_45))) (* (* 2.0 l_0_7_56) l_0_7_56))))
 (let ((?x7844 (- (- ?x7838 (* (* 2.0 l_0_7_57) l_0_7_57)) (* (* 2.0 l_0_7_58) l_0_7_58))))
 (let ((?x7850 (- (- ?x7844 (* (* 2.0 l_0_7_59) l_0_7_59)) (* (* 2.0 l_0_7_60) l_0_7_60))))
 (let ((?x7854 (+ (+ ?x7850 (* 2.0 (* l_0_7_71 l_0_7_71))) (* 2.0 (* l_0_7_72 l_0_7_72)))))
 (let ((?x7858 (+ (+ ?x7854 (* 2.0 (* l_0_7_73 l_0_7_73))) (* 2.0 (* l_0_7_74 l_0_7_74)))))
 (let ((?x7863 (- (- (- (+ ?x7858 (* 2.0 (* l_0_7_75 l_0_7_75))) ?x7754) ?x7759) ?x7764)))
 (= ?x7863 0.0)))))))))))))))))))))))
(assert
 (let ((?x7939 (* l_0_7_9 l_0_7_9)))
 (let ((?x7937 (* l_0_7_85 l_0_7_85)))
 (let ((?x7935 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7932 (* l_0_7_84 l_0_7_84)))
 (let ((?x7930 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7927 (* l_0_7_83 l_0_7_83)))
 (let ((?x7925 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7922 (* l_0_7_82 l_0_7_82)))
 (let ((?x7920 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x7917 (* l_0_7_8 l_0_7_8)))
 (let ((?x7302 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7914 (* l_0_7_7 l_0_7_7)))
 (let ((?x7299 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7296 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7293 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x7288 (* 2.0 l_0_7_55)))
 (let ((?x7289 (* ?x7288 l_0_7_59)))
 (let ((?x7285 (* 2.0 l_0_7_54)))
 (let ((?x7286 (* ?x7285 l_0_7_58)))
 (let ((?x7282 (* 2.0 l_0_7_53)))
 (let ((?x7283 (* ?x7282 l_0_7_57)))
 (let ((?x7908 (+ (+ (* (- l_0_7_10) l_0_7_10) (* (* 2.0 l_0_7_52) l_0_7_56)) ?x7283)))
 (let ((?x7916 (- (- (- (- (- (+ (+ ?x7908 ?x7286) ?x7289) ?x7293) ?x7296) ?x7299) ?x7914) ?x7302)))
 (let ((?x7933 (- (+ (- (+ (- (+ (- ?x7916 ?x7917) ?x7920) ?x7922) ?x7925) ?x7927) ?x7930) ?x7932)))
 (= (- (- (+ ?x7933 ?x7935) ?x7937) ?x7939) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7980 (* l_0_7_90 l_0_7_90)))
 (let ((?x7978 (* l_0_7_89 l_0_7_89)))
 (let ((?x7976 (* l_0_7_88 l_0_7_88)))
 (let ((?x7974 (* l_0_7_87 l_0_7_87)))
 (let ((?x7972 (* l_0_7_86 l_0_7_86)))
 (let ((?x7935 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7930 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7925 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7920 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x7444 (* l_0_7_75 l_0_7_75)))
 (let ((?x7441 (* l_0_7_74 l_0_7_74)))
 (let ((?x7438 (* l_0_7_73 l_0_7_73)))
 (let ((?x7435 (* l_0_7_72 l_0_7_72)))
 (let ((?x7432 (* l_0_7_71 l_0_7_71)))
 (let ((?x2641 (* l_0_7_60 l_0_7_60)))
 (let ((?x2638 (* l_0_7_59 l_0_7_59)))
 (let ((?x2635 (* l_0_7_58 l_0_7_58)))
 (let ((?x7470 (* l_0_7_57 l_0_7_57)))
 (let ((?x7466 (* l_0_7_56 l_0_7_56)))
 (let ((?x7808 (* 2.0 l_0_7_13)))
 (let ((?x7956 (* ?x7808 l_0_7_9)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x7954 (* ?x2817 l_0_7_8)))
 (let ((?x7951 (* 2.0 l_0_7_11)))
 (let ((?x7952 (* ?x7951 l_0_7_7)))
 (let ((?x7958 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x7952) ?x7954) ?x7956) ?x7466)))
 (let ((?x7965 (- (- (- (+ (+ (+ (+ ?x7958 ?x7470) ?x2635) ?x2638) ?x2641) ?x7432) ?x7435) ?x7438)))
 (let ((?x7973 (+ (- (- (- (- (- (- ?x7965 ?x7441) ?x7444) ?x7920) ?x7925) ?x7930) ?x7935) ?x7972)))
 (= (+ (+ (+ (+ ?x7973 ?x7974) ?x7976) ?x7978) ?x7980) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7980 (* l_0_7_90 l_0_7_90)))
 (let ((?x7978 (* l_0_7_89 l_0_7_89)))
 (let ((?x7976 (* l_0_7_88 l_0_7_88)))
 (let ((?x7974 (* l_0_7_87 l_0_7_87)))
 (let ((?x7972 (* l_0_7_86 l_0_7_86)))
 (let ((?x8011 (* l_0_7_15 l_0_7_15)))
 (let ((?x8009 (* l_0_7_14 l_0_7_14)))
 (let ((?x8007 (* l_0_7_13 l_0_7_13)))
 (let ((?x8010 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x8007) ?x8009)))
 (= (- (- (- (- (- (- ?x8010 ?x8011) ?x7972) ?x7974) ?x7976) ?x7978) ?x7980) 0.0)))))))))))
(assert
 (let ((?x8065 (* l_0_7_96 l_0_7_96)))
 (let ((?x8063 (* l_0_7_95 l_0_7_95)))
 (let ((?x8061 (* l_0_7_94 l_0_7_94)))
 (let ((?x6908 (* l_0_7_61 l_0_7_61)))
 (let ((?x1866 (* l_0_7_46 l_0_7_46)))
 (let ((?x3628 (* l_0_7_111 l_0_7_111)))
 (let ((?x3659 (* l_0_7_110 l_0_7_110)))
 (let ((?x3626 (- (- (- (* l_0_7_1 l_0_7_1) (* l_0_7_109 l_0_7_109)) ?x3659) ?x3628)))
 (let ((?x3560 (- (- ?x3626 (* (* 4.0 l_0_7_16) l_0_7_19)) (* (* 1.0 l_0_7_19) l_0_7_19))))
 (let ((?x3548 (- (- ?x3560 (* (* 1.0 l_0_7_20) l_0_7_20)) (* (* 1.0 l_0_7_21) l_0_7_21))))
 (let ((?x3599 (+ (+ ?x3548 (* (* 4.0 l_0_7_31) l_0_7_34)) (* 1.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x8036 (+ (+ ?x3599 (* 1.0 (* l_0_7_35 l_0_7_35))) (* 1.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x8042 (- (- (- ?x8036 (* (* 4.0 l_0_7_46) l_0_7_49)) ?x1866) (* (* 1.0 l_0_7_49) l_0_7_49))))
 (let ((?x8048 (- (- ?x8042 (* (* 1.0 l_0_7_50) l_0_7_50)) (* (* 1.0 l_0_7_51) l_0_7_51))))
 (let ((?x8054 (+ (+ (+ ?x8048 (* (* 4.0 l_0_7_61) l_0_7_64)) ?x6908) (* 1.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x8060 (+ (+ ?x8054 (* 1.0 (* l_0_7_65 l_0_7_65))) (* 1.0 (* l_0_7_66 l_0_7_66)))))
 (= (- (- (- ?x8060 ?x8061) ?x8063) ?x8065) 0.0))))))))))))))))))
(assert
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6993 (* ?x6905 l_0_7_62)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6991 (* ?x6900 l_0_7_47)))
 (let ((?x8034 (* l_0_7_36 l_0_7_36)))
 (let ((?x8031 (* l_0_7_35 l_0_7_35)))
 (let ((?x3597 (* l_0_7_34 l_0_7_34)))
 (let ((?x8081 (* l_0_7_21 l_0_7_21)))
 (let ((?x3686 (* l_0_7_20 l_0_7_20)))
 (let ((?x8075 (* l_0_7_19 l_0_7_19)))
 (let ((?x8107 (- (* (* 2.0 l_0_7_1) l_0_7_2) (* (* 4.0 l_0_7_17) l_0_7_19))))
 (let ((?x8112 (+ (+ (+ (- ?x8107 (* (* 4.0 l_0_7_18) l_0_7_20)) ?x8075) ?x3686) ?x8081)))
 (let ((?x8116 (+ (+ ?x8112 (* (* 4.0 l_0_7_32) l_0_7_34)) (* (* 4.0 l_0_7_33) l_0_7_35))))
 (let ((?x8122 (- (- (- (- (- ?x8116 ?x3597) ?x8031) ?x8034) ?x6991) (* (* 4.0 l_0_7_47) l_0_7_49))))
 (let ((?x8127 (+ (+ (- ?x8122 (* (* 4.0 l_0_7_48) l_0_7_50)) ?x6993) (* (* 4.0 l_0_7_62) l_0_7_64))))
 (= (+ ?x8127 (* (* 4.0 l_0_7_63) l_0_7_65)) 0.0)))))))))))))))))
(assert
 (let ((?x8058 (* l_0_7_66 l_0_7_66)))
 (let ((?x8158 (* 2.0 ?x8058)))
 (let ((?x8055 (* l_0_7_65 l_0_7_65)))
 (let ((?x8156 (* 2.0 ?x8055)))
 (let ((?x8052 (* l_0_7_64 l_0_7_64)))
 (let ((?x8154 (* 2.0 ?x8052)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6906 (* ?x6905 l_0_7_64)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6901 (* ?x6900 l_0_7_49)))
 (let ((?x8034 (* l_0_7_36 l_0_7_36)))
 (let ((?x8144 (* 2.0 ?x8034)))
 (let ((?x8031 (* l_0_7_35 l_0_7_35)))
 (let ((?x8142 (* 2.0 ?x8031)))
 (let ((?x3597 (* l_0_7_34 l_0_7_34)))
 (let ((?x8140 (* 2.0 ?x3597)))
 (let ((?x3810 (- (* (* 2.0 l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x8139 (- (- ?x3810 (* (* 2.0 l_0_7_20) l_0_7_20)) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (let ((?x8148 (- (- (+ (+ (+ ?x8139 ?x8140) ?x8142) ?x8144) ?x6901) (* (* 2.0 l_0_7_49) l_0_7_49))))
 (let ((?x8152 (- (- ?x8148 (* (* 2.0 l_0_7_50) l_0_7_50)) (* (* 2.0 l_0_7_51) l_0_7_51))))
 (= (+ (+ (+ (+ ?x8152 ?x6906) ?x8154) ?x8156) ?x8158) 0.0))))))))))))))))))))))
(assert
 (let ((?x7637 (* l_0_7_81 l_0_7_81)))
 (let ((?x7635 (* l_0_7_80 l_0_7_80)))
 (let ((?x7633 (* l_0_7_79 l_0_7_79)))
 (let ((?x8058 (* l_0_7_66 l_0_7_66)))
 (let ((?x8055 (* l_0_7_65 l_0_7_65)))
 (let ((?x8052 (* l_0_7_64 l_0_7_64)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x8193 (* ?x6905 l_0_7_67)))
 (let ((?x3734 (* l_0_7_51 l_0_7_51)))
 (let ((?x3729 (* l_0_7_50 l_0_7_50)))
 (let ((?x8087 (* l_0_7_49 l_0_7_49)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x8182 (* ?x6900 l_0_7_52)))
 (let ((?x3873 (- (* (* 2.0 l_0_7_1) l_0_7_7) (* (* 4.0 l_0_7_19) l_0_7_22))))
 (let ((?x3905 (- (- ?x3873 (* (* 4.0 l_0_7_20) l_0_7_23)) (* (* 4.0 l_0_7_21) l_0_7_24))))
 (let ((?x8179 (+ (+ ?x3905 (* (* 4.0 l_0_7_34) l_0_7_37)) (* (* 4.0 l_0_7_35) l_0_7_38))))
 (let ((?x8185 (- (- (+ ?x8179 (* (* 4.0 l_0_7_36) l_0_7_39)) ?x8182) (* (* 4.0 l_0_7_49) l_0_7_52))))
 (let ((?x8191 (- (+ (- (+ ?x8185 ?x8087) (* (* 4.0 l_0_7_50) l_0_7_53)) ?x3729) (* (* 4.0 l_0_7_51) l_0_7_54))))
 (let ((?x8197 (- (+ (+ (+ ?x8191 ?x3734) ?x8193) (* (* 4.0 l_0_7_64) l_0_7_67)) ?x8052)))
 (let ((?x8202 (+ (- (+ ?x8197 (* (* 4.0 l_0_7_65) l_0_7_68)) ?x8055) (* (* 4.0 l_0_7_66) l_0_7_69))))
 (= (+ (+ (+ (- ?x8202 ?x8058) ?x7633) ?x7635) ?x7637) 0.0))))))))))))))))))))))
(assert
 (let ((?x8255 (* l_0_7_63 l_0_7_63)))
 (let ((?x8253 (* l_0_7_62 l_0_7_62)))
 (let ((?x8251 (* l_0_7_48 l_0_7_48)))
 (let ((?x8249 (* l_0_7_47 l_0_7_47)))
 (let ((?x8254 (+ (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x8249) ?x8251) ?x8253)))
 (= (+ ?x8254 ?x8255) 0.0)))))))
(assert
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8267 (* ?x7089 l_0_7_65)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8265 (* ?x7086 l_0_7_64)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8263 (* ?x7083 l_0_7_50)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8261 (* ?x7080 l_0_7_49)))
 (let ((?x2661 (* 2.0 l_0_7_3)))
 (let ((?x2662 (* ?x2661 l_0_7_5)))
 (let ((?x2709 (* 2.0 l_0_7_2)))
 (let ((?x2710 (* ?x2709 l_0_7_4)))
 (= (+ (+ (- (- (+ ?x2710 ?x2662) ?x8261) ?x8263) ?x8265) ?x8267) 0.0))))))))))))))
(assert
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8290 (* ?x7089 l_0_7_68)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8288 (* ?x7086 l_0_7_67)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8286 (* ?x7083 l_0_7_53)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8284 (* ?x7080 l_0_7_52)))
 (let ((?x2661 (* 2.0 l_0_7_3)))
 (let ((?x7561 (* ?x2661 l_0_7_8)))
 (let ((?x8289 (+ (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x7561) ?x8284) ?x8286) ?x8288)))
 (= (+ ?x8289 ?x8290) 0.0)))))))))))))
(assert
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x7090 (* ?x7089 l_0_7_72)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x7087 (* ?x7086 l_0_7_71)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x7084 (* ?x7083 l_0_7_57)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x7081 (* ?x7080 l_0_7_56)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x2824 (* ?x2817 l_0_7_3)))
 (let ((?x8307 (+ (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x2824) ?x7081) ?x7084) ?x7087)))
 (= (+ ?x8307 ?x7090) 0.0)))))))))))))
(assert
 (let ((?x8058 (* l_0_7_66 l_0_7_66)))
 (let ((?x8055 (* l_0_7_65 l_0_7_65)))
 (let ((?x8052 (* l_0_7_64 l_0_7_64)))
 (let ((?x7621 (* l_0_7_6 l_0_7_6)))
 (let ((?x3734 (* l_0_7_51 l_0_7_51)))
 (let ((?x3729 (* l_0_7_50 l_0_7_50)))
 (let ((?x7613 (* l_0_7_5 l_0_7_5)))
 (let ((?x8320 (- (+ (- (* l_0_7_4 l_0_7_4) (* l_0_7_49 l_0_7_49)) ?x7613) ?x3729)))
 (= (+ (+ (+ (+ (- ?x8320 ?x3734) ?x7621) ?x8052) ?x8055) ?x8058) 0.0))))))))))
(assert
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x8343 (* ?x7171 l_0_7_69)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x8341 (* ?x7168 l_0_7_68)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x8339 (* ?x7165 l_0_7_67)))
 (let ((?x7734 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x8336 (* ?x7159 l_0_7_54)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x8334 (* ?x7156 l_0_7_53)))
 (let ((?x7717 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x4021 (* ?x7153 l_0_7_52)))
 (let ((?x7710 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x8342 (+ (+ (+ (- (- (+ (- ?x7710 ?x4021) ?x7717) ?x8334) ?x8336) ?x7734) ?x8339) ?x8341)))
 (= (+ ?x8342 ?x8343) 0.0))))))))))))))))))
(assert
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x7172 (* ?x7171 l_0_7_73)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x7169 (* ?x7168 l_0_7_72)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x7166 (* ?x7165 l_0_7_71)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x7160 (* ?x7159 l_0_7_58)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x7157 (* ?x7156 l_0_7_57)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x7154 (* ?x7153 l_0_7_56)))
 (let ((?x7808 (* 2.0 l_0_7_13)))
 (let ((?x7809 (* ?x7808 l_0_7_6)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x7806 (* ?x2817 l_0_7_5)))
 (let ((?x8365 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x7806) ?x7809) ?x7154) ?x7157)))
 (= (+ (+ (+ (- ?x8365 ?x7160) ?x7166) ?x7169) ?x7172) 0.0)))))))))))))))))))
(assert
 (let ((?x7939 (* l_0_7_9 l_0_7_9)))
 (let ((?x7917 (* l_0_7_8 l_0_7_8)))
 (let ((?x8388 (* l_0_7_70 l_0_7_70)))
 (let ((?x7914 (* l_0_7_7 l_0_7_7)))
 (let ((?x8385 (* l_0_7_69 l_0_7_69)))
 (let ((?x8383 (* l_0_7_68 l_0_7_68)))
 (let ((?x8381 (* l_0_7_67 l_0_7_67)))
 (let ((?x8379 (* l_0_7_55 l_0_7_55)))
 (let ((?x4033 (* l_0_7_54 l_0_7_54)))
 (let ((?x4034 (* l_0_7_53 l_0_7_53)))
 (let ((?x8378 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_52 l_0_7_52)) ?x4034) ?x4033)))
 (let ((?x8390 (+ (+ (+ (+ (+ (+ (- ?x8378 ?x8379) ?x8381) ?x8383) ?x8385) ?x7914) ?x8388) ?x7917)))
 (= (+ ?x8390 ?x7939) 0.0))))))))))))))
(assert
 (let ((?x7302 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7299 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7296 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7293 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x7288 (* 2.0 l_0_7_55)))
 (let ((?x7289 (* ?x7288 l_0_7_59)))
 (let ((?x7285 (* 2.0 l_0_7_54)))
 (let ((?x7286 (* ?x7285 l_0_7_58)))
 (let ((?x7282 (* 2.0 l_0_7_53)))
 (let ((?x7283 (* ?x7282 l_0_7_57)))
 (let ((?x7279 (* 2.0 l_0_7_52)))
 (let ((?x7280 (* ?x7279 l_0_7_56)))
 (let ((?x7808 (* 2.0 l_0_7_13)))
 (let ((?x7956 (* ?x7808 l_0_7_9)))
 (let ((?x2817 (* 2.0 l_0_7_12)))
 (let ((?x7954 (* ?x2817 l_0_7_8)))
 (let ((?x7951 (* 2.0 l_0_7_11)))
 (let ((?x7952 (* ?x7951 l_0_7_7)))
 (let ((?x8409 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x7952) ?x7954) ?x7956) ?x7280)))
 (let ((?x8416 (+ (+ (+ (+ (- (- (- ?x8409 ?x7283) ?x7286) ?x7289) ?x7293) ?x7296) ?x7299) ?x7302)))
 (= ?x8416 0.0))))))))))))))))))))))
(assert
 (let ((?x7444 (* l_0_7_75 l_0_7_75)))
 (let ((?x7441 (* l_0_7_74 l_0_7_74)))
 (let ((?x7438 (* l_0_7_73 l_0_7_73)))
 (let ((?x7435 (* l_0_7_72 l_0_7_72)))
 (let ((?x7432 (* l_0_7_71 l_0_7_71)))
 (let ((?x2641 (* l_0_7_60 l_0_7_60)))
 (let ((?x2638 (* l_0_7_59 l_0_7_59)))
 (let ((?x2635 (* l_0_7_58 l_0_7_58)))
 (let ((?x7470 (* l_0_7_57 l_0_7_57)))
 (let ((?x7466 (* l_0_7_56 l_0_7_56)))
 (let ((?x8011 (* l_0_7_15 l_0_7_15)))
 (let ((?x8009 (* l_0_7_14 l_0_7_14)))
 (let ((?x8007 (* l_0_7_13 l_0_7_13)))
 (let ((?x8420 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x8007) ?x8009)))
 (let ((?x8427 (+ (- (- (- (- (- (+ ?x8420 ?x8011) ?x7466) ?x7470) ?x2635) ?x2638) ?x2641) ?x7432)))
 (= (+ (+ (+ (+ ?x8427 ?x7435) ?x7438) ?x7441) ?x7444) 0.0)))))))))))))))))
(assert
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8267 (* ?x7089 l_0_7_65)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8265 (* ?x7086 l_0_7_64)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8263 (* ?x7083 l_0_7_50)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8261 (* ?x7080 l_0_7_49)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x8442 (* ?x7077 l_0_7_35)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x8440 (* ?x7074 l_0_7_34)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x6895 (* ?x6894 l_0_7_34)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x8435 (* ?x7070 l_0_7_20)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x4199 (* ?x7067 l_0_7_19)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x6890 (* ?x6889 l_0_7_19)))
 (let ((?x4209 (- (* (* (- 2.0) l_0_7_107) l_0_7_109) (* (* 2.0 l_0_7_108) l_0_7_110))))
 (let ((?x8436 (- (- (+ (- ?x4209 (* (* 4.0 l_0_7_16) l_0_7_17)) ?x6890) ?x4199) ?x8435)))
 (let ((?x8443 (+ (+ (- (+ ?x8436 (* (* 4.0 l_0_7_31) l_0_7_32)) ?x6895) ?x8440) ?x8442)))
 (let ((?x8449 (+ (- (- (- ?x8443 (* (* 4.0 l_0_7_46) l_0_7_47)) ?x8261) ?x8263) (* (* 4.0 l_0_7_61) l_0_7_62))))
 (let ((?x8457 (- (- (+ (+ ?x8449 ?x8265) ?x8267) (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= ?x8457 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7174 (* ?x7092 l_0_7_79)))
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x8343 (* ?x7171 l_0_7_69)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x8341 (* ?x7168 l_0_7_68)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x8339 (* ?x7165 l_0_7_67)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6906 (* ?x6905 l_0_7_64)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x8336 (* ?x7159 l_0_7_54)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x8334 (* ?x7156 l_0_7_53)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x4021 (* ?x7153 l_0_7_52)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6901 (* ?x6900 l_0_7_49)))
 (let ((?x7147 (* 2.0 l_0_7_36)))
 (let ((?x8491 (* ?x7147 l_0_7_39)))
 (let ((?x7144 (* 2.0 l_0_7_35)))
 (let ((?x8489 (* ?x7144 l_0_7_38)))
 (let ((?x7141 (* 2.0 l_0_7_34)))
 (let ((?x8487 (* ?x7141 l_0_7_37)))
 (let ((?x7135 (* 2.0 l_0_7_21)))
 (let ((?x8483 (* ?x7135 l_0_7_24)))
 (let ((?x7132 (* 2.0 l_0_7_20)))
 (let ((?x8481 (* ?x7132 l_0_7_23)))
 (let ((?x7129 (* 2.0 l_0_7_19)))
 (let ((?x8479 (* ?x7129 l_0_7_22)))
 (let ((?x4378 (- (* (* (- 2.0) l_0_7_109) l_0_7_112) (* (* 2.0 l_0_7_110) l_0_7_113))))
 (let ((?x8478 (- (- ?x4378 (* (* 2.0 l_0_7_111) l_0_7_114)) (* (* 4.0 l_0_7_16) l_0_7_22))))
 (let ((?x8486 (+ (- (- (- ?x8478 ?x8479) ?x8481) ?x8483) (* (* 4.0 l_0_7_31) l_0_7_37))))
 (let ((?x8495 (- (+ (+ (+ (+ ?x8486 ?x8487) ?x8489) ?x8491) ?x6901) (* (* 4.0 l_0_7_46) l_0_7_52))))
 (let ((?x8501 (+ (- (- (- (- ?x8495 ?x4021) ?x8334) ?x8336) ?x6906) (* (* 4.0 l_0_7_61) l_0_7_67))))
 (let ((?x8508 (- (+ (+ (+ (+ ?x8501 ?x8339) ?x8341) ?x8343) ?x7174) (* (* 2.0 l_0_7_94) l_0_7_97))))
 (let ((?x8514 (- (- ?x8508 (* (* 2.0 l_0_7_95) l_0_7_98)) (* (* 2.0 l_0_7_96) l_0_7_99))))
 (= ?x8514 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8255 (* l_0_7_63 l_0_7_63)))
 (let ((?x8581 (* 2.0 ?x8255)))
 (let ((?x8253 (* l_0_7_62 l_0_7_62)))
 (let ((?x8579 (* 2.0 ?x8253)))
 (let ((?x8572 (* l_0_7_33 l_0_7_33)))
 (let ((?x8573 (* 2.0 ?x8572)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x8442 (* ?x7077 l_0_7_35)))
 (let ((?x8568 (* l_0_7_32 l_0_7_32)))
 (let ((?x8569 (* 2.0 ?x8568)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x8440 (* ?x7074 l_0_7_34)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x8435 (* ?x7070 l_0_7_20)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x4199 (* ?x7067 l_0_7_19)))
 (let ((?x8567 (- (- (+ (- ?x4199 (* ?x7067 l_0_7_17)) ?x8435) (* ?x7070 l_0_7_18)) ?x8440)))
 (let ((?x8576 (- (+ (- (+ ?x8567 ?x8569) ?x8442) ?x8573) (* (* 2.0 l_0_7_47) l_0_7_47))))
 (= (+ (+ (- ?x8576 (* (* 2.0 l_0_7_48) l_0_7_48)) ?x8579) ?x8581) 0.0))))))))))))))))))))
(assert
 (let ((?x7523 (* 2.0 l_0_7_78)))
 (let ((?x7524 (* ?x7523 l_0_7_80)))
 (let ((?x7520 (* 2.0 l_0_7_77)))
 (let ((?x7521 (* ?x7520 l_0_7_79)))
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8267 (* ?x7089 l_0_7_65)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8265 (* ?x7086 l_0_7_64)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8263 (* ?x7083 l_0_7_50)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8261 (* ?x7080 l_0_7_49)))
 (let ((?x7147 (* 2.0 l_0_7_36)))
 (let ((?x8491 (* ?x7147 l_0_7_39)))
 (let ((?x7144 (* 2.0 l_0_7_35)))
 (let ((?x8489 (* ?x7144 l_0_7_38)))
 (let ((?x7141 (* 2.0 l_0_7_34)))
 (let ((?x8487 (* ?x7141 l_0_7_37)))
 (let ((?x7135 (* 2.0 l_0_7_21)))
 (let ((?x8483 (* ?x7135 l_0_7_24)))
 (let ((?x7132 (* 2.0 l_0_7_20)))
 (let ((?x8481 (* ?x7132 l_0_7_23)))
 (let ((?x7129 (* 2.0 l_0_7_19)))
 (let ((?x8479 (* ?x7129 l_0_7_22)))
 (let ((?x4565 (- (* (* (- 4.0) l_0_7_17) l_0_7_22) (* (* 4.0 l_0_7_18) l_0_7_23))))
 (let ((?x8593 (+ (+ (+ (+ ?x4565 ?x8479) ?x8481) ?x8483) (* (* 4.0 l_0_7_32) l_0_7_37))))
 (let ((?x8598 (- (- (- (+ ?x8593 (* (* 4.0 l_0_7_33) l_0_7_38)) ?x8487) ?x8489) ?x8491)))
 (let ((?x8604 (- (+ (- (+ ?x8598 ?x8261) (* (* 4.0 l_0_7_47) l_0_7_52)) ?x8263) (* (* 4.0 l_0_7_48) l_0_7_53))))
 (let ((?x8610 (+ (- (+ (- ?x8604 ?x8265) (* (* 4.0 l_0_7_62) l_0_7_67)) ?x8267) (* (* 4.0 l_0_7_63) l_0_7_68))))
 (= (+ (+ ?x8610 ?x7521) ?x7524) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x7761 (* 2.0 l_0_7_81)))
 (let ((?x7762 (* ?x7761 l_0_7_84)))
 (let ((?x7756 (* 2.0 l_0_7_80)))
 (let ((?x7757 (* ?x7756 l_0_7_83)))
 (let ((?x7751 (* 2.0 l_0_7_79)))
 (let ((?x7752 (* ?x7751 l_0_7_82)))
 (let ((?x8388 (* l_0_7_70 l_0_7_70)))
 (let ((?x8682 (* 2.0 ?x8388)))
 (let ((?x8385 (* l_0_7_69 l_0_7_69)))
 (let ((?x8680 (* 2.0 ?x8385)))
 (let ((?x8383 (* l_0_7_68 l_0_7_68)))
 (let ((?x8678 (* 2.0 ?x8383)))
 (let ((?x8381 (* l_0_7_67 l_0_7_67)))
 (let ((?x8676 (* 2.0 ?x8381)))
 (let ((?x7171 (* 2.0 l_0_7_66)))
 (let ((?x8343 (* ?x7171 l_0_7_69)))
 (let ((?x7168 (* 2.0 l_0_7_65)))
 (let ((?x8341 (* ?x7168 l_0_7_68)))
 (let ((?x7165 (* 2.0 l_0_7_64)))
 (let ((?x8339 (* ?x7165 l_0_7_67)))
 (let ((?x7159 (* 2.0 l_0_7_51)))
 (let ((?x8336 (* ?x7159 l_0_7_54)))
 (let ((?x7156 (* 2.0 l_0_7_50)))
 (let ((?x8334 (* ?x7156 l_0_7_53)))
 (let ((?x7153 (* 2.0 l_0_7_49)))
 (let ((?x4021 (* ?x7153 l_0_7_52)))
 (let ((?x8659 (* l_0_7_40 l_0_7_40)))
 (let ((?x8660 (* 2.0 ?x8659)))
 (let ((?x8656 (* l_0_7_39 l_0_7_39)))
 (let ((?x8657 (* 2.0 ?x8656)))
 (let ((?x8653 (* l_0_7_38 l_0_7_38)))
 (let ((?x8654 (* 2.0 ?x8653)))
 (let ((?x8650 (* l_0_7_37 l_0_7_37)))
 (let ((?x8651 (* 2.0 ?x8650)))
 (let ((?x8645 (- (* (* (- 2.0) l_0_7_22) l_0_7_22) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x8649 (- (- ?x8645 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x8664 (+ (+ (+ (+ (+ (+ (+ ?x8649 ?x8651) ?x8654) ?x8657) ?x8660) ?x4021) ?x8334) ?x8336)))
 (let ((?x8668 (- (- ?x8664 (* (* 2.0 l_0_7_52) l_0_7_52)) (* (* 2.0 l_0_7_53) l_0_7_53))))
 (let ((?x8672 (- (- ?x8668 (* (* 2.0 l_0_7_54) l_0_7_54)) (* (* 2.0 l_0_7_55) l_0_7_55))))
 (let ((?x8683 (+ (+ (+ (+ (- (- (- ?x8672 ?x8339) ?x8341) ?x8343) ?x8676) ?x8678) ?x8680) ?x8682)))
 (= (+ (+ (+ ?x8683 ?x7752) ?x7757) ?x7762) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7031 (* l_0_7_76 l_0_7_76)))
 (let ((?x6908 (* l_0_7_61 l_0_7_61)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x8193 (* ?x6905 l_0_7_67)))
 (let ((?x1866 (* l_0_7_46 l_0_7_46)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x8182 (* ?x6900 l_0_7_52)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x4837 (* ?x6894 l_0_7_37)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x4831 (* ?x6889 l_0_7_22)))
 (let ((?x4882 (+ (- (+ (- (* (* (- 2.0) l_0_7_106) l_0_7_112) ?x4831) ?x4837) ?x8182) ?x1866)))
 (let ((?x4875 (- (+ (- (+ ?x4882 ?x8193) ?x6908) ?x7031) (* (* 2.0 l_0_7_91) l_0_7_97))))
 (= ?x4875 0.0)))))))))))))))
(assert
 (let ((?x8741 (* l_0_7_93 l_0_7_93)))
 (let ((?x8739 (* l_0_7_92 l_0_7_92)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x6988 (* ?x6894 l_0_7_32)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x6985 (* ?x6889 l_0_7_17)))
 (let ((?x8717 (+ (- (* (- l_0_7_107) l_0_7_107) (* l_0_7_108 l_0_7_108)) ?x6985)))
 (let ((?x8723 (- (- ?x8717 (* (* 1.0 l_0_7_17) l_0_7_17)) (* (* 1.0 l_0_7_18) l_0_7_18))))
 (let ((?x8728 (+ (+ (- ?x8723 ?x6988) (* 1.0 (* l_0_7_32 l_0_7_32))) (* 1.0 (* l_0_7_33 l_0_7_33)))))
 (let ((?x8734 (- (- ?x8728 (* (* 1.0 l_0_7_47) l_0_7_47)) (* (* 1.0 l_0_7_48) l_0_7_48))))
 (let ((?x8738 (+ (+ ?x8734 (* 1.0 (* l_0_7_62 l_0_7_62))) (* 1.0 (* l_0_7_63 l_0_7_63)))))
 (= (- (- ?x8738 ?x8739) ?x8741) 0.0)))))))))))))
(assert
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7093 (* ?x7092 l_0_7_77)))
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8290 (* ?x7089 l_0_7_68)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8288 (* ?x7086 l_0_7_67)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x6993 (* ?x6905 l_0_7_62)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8286 (* ?x7083 l_0_7_53)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8284 (* ?x7080 l_0_7_52)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x6991 (* ?x6900 l_0_7_47)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x8766 (* ?x7077 l_0_7_38)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x8764 (* ?x7074 l_0_7_37)))
 (let ((?x6894 (* 2.0 l_0_7_31)))
 (let ((?x4837 (* ?x6894 l_0_7_37)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x8761 (* ?x7070 l_0_7_23)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x8759 (* ?x7067 l_0_7_22)))
 (let ((?x6889 (* 2.0 l_0_7_16)))
 (let ((?x4831 (* ?x6889 l_0_7_22)))
 (let ((?x8757 (- (* (* (- 2.0) l_0_7_107) l_0_7_112) (* (* 2.0 l_0_7_108) l_0_7_113))))
 (let ((?x8768 (+ (+ (+ (- (- (- (+ ?x8757 ?x4831) ?x8759) ?x8761) ?x4837) ?x8764) ?x8766) ?x6991)))
 (let ((?x8776 (- (+ (+ (+ (- (- (- ?x8768 ?x8284) ?x8286) ?x6993) ?x8288) ?x8290) ?x7093) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x8776 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x8852 (* l_0_7_99 l_0_7_99)))
 (let ((?x8850 (* l_0_7_98 l_0_7_98)))
 (let ((?x8848 (* l_0_7_97 l_0_7_97)))
 (let ((?x7092 (* 2.0 l_0_7_76)))
 (let ((?x7304 (* ?x7092 l_0_7_82)))
 (let ((?x6905 (* 2.0 l_0_7_61)))
 (let ((?x8193 (* ?x6905 l_0_7_67)))
 (let ((?x6900 (* 2.0 l_0_7_46)))
 (let ((?x8182 (* ?x6900 l_0_7_52)))
 (let ((?x8803 (* l_0_7_115 l_0_7_115)))
 (let ((?x8801 (* l_0_7_114 l_0_7_114)))
 (let ((?x5029 (* l_0_7_113 l_0_7_113)))
 (let ((?x8800 (- (- (* (- l_0_7_100) l_0_7_100) (* l_0_7_112 l_0_7_112)) ?x5029)))
 (let ((?x8810 (- (- (- (- ?x8800 ?x8801) ?x8803) (* (* 1.0 l_0_7_22) l_0_7_22)) (* (* 1.0 l_0_7_23) l_0_7_23))))
 (let ((?x8816 (- (- ?x8810 (* (* 1.0 l_0_7_24) l_0_7_24)) (* (* 1.0 l_0_7_25) l_0_7_25))))
 (let ((?x8820 (+ (+ ?x8816 (* 1.0 (* l_0_7_37 l_0_7_37))) (* 1.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x8824 (+ (+ ?x8820 (* 1.0 (* l_0_7_39 l_0_7_39))) (* 1.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x8831 (- (- (+ ?x8824 ?x8182) (* (* 1.0 l_0_7_52) l_0_7_52)) (* (* 1.0 l_0_7_53) l_0_7_53))))
 (let ((?x8837 (- (- ?x8831 (* (* 1.0 l_0_7_54) l_0_7_54)) (* (* 1.0 l_0_7_55) l_0_7_55))))
 (let ((?x8842 (+ (+ (- ?x8837 ?x8193) (* 1.0 (* l_0_7_67 l_0_7_67))) (* 1.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x8846 (+ (+ ?x8842 (* 1.0 (* l_0_7_69 l_0_7_69))) (* 1.0 (* l_0_7_70 l_0_7_70)))))
 (= (- (- (- (+ ?x8846 ?x7304) ?x8848) ?x8850) ?x8852) 0.0)))))))))))))))))))))))
(assert
 (let ((?x8572 (* l_0_7_33 l_0_7_33)))
 (let ((?x8568 (* l_0_7_32 l_0_7_32)))
 (let ((?x8886 (- (- (+ (* l_0_7_17 l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x8568) ?x8572)))
 (= ?x8886 0.0)))))
(assert
 (let ((?x7498 (* l_0_7_78 l_0_7_78)))
 (let ((?x7496 (* l_0_7_77 l_0_7_77)))
 (let ((?x8255 (* l_0_7_63 l_0_7_63)))
 (let ((?x8253 (* l_0_7_62 l_0_7_62)))
 (let ((?x8251 (* l_0_7_48 l_0_7_48)))
 (let ((?x8249 (* l_0_7_47 l_0_7_47)))
 (let ((?x7077 (* 2.0 l_0_7_33)))
 (let ((?x8766 (* ?x7077 l_0_7_38)))
 (let ((?x7074 (* 2.0 l_0_7_32)))
 (let ((?x8764 (* ?x7074 l_0_7_37)))
 (let ((?x7070 (* 2.0 l_0_7_18)))
 (let ((?x8761 (* ?x7070 l_0_7_23)))
 (let ((?x7067 (* 2.0 l_0_7_17)))
 (let ((?x8759 (* ?x7067 l_0_7_22)))
 (let ((?x8902 (- (- (+ (+ (- (- (+ ?x8759 ?x8761) ?x8764) ?x8766) ?x8249) ?x8251) ?x8253) ?x8255)))
 (= (+ (+ ?x8902 ?x7496) ?x7498) 0.0)))))))))))))))))
(assert
 (let ((?x7523 (* 2.0 l_0_7_78)))
 (let ((?x7575 (* ?x7523 l_0_7_83)))
 (let ((?x7520 (* 2.0 l_0_7_77)))
 (let ((?x7571 (* ?x7520 l_0_7_82)))
 (let ((?x7089 (* 2.0 l_0_7_63)))
 (let ((?x8290 (* ?x7089 l_0_7_68)))
 (let ((?x7086 (* 2.0 l_0_7_62)))
 (let ((?x8288 (* ?x7086 l_0_7_67)))
 (let ((?x7083 (* 2.0 l_0_7_48)))
 (let ((?x8286 (* ?x7083 l_0_7_53)))
 (let ((?x7080 (* 2.0 l_0_7_47)))
 (let ((?x8284 (* ?x7080 l_0_7_52)))
 (let ((?x8659 (* l_0_7_40 l_0_7_40)))
 (let ((?x8656 (* l_0_7_39 l_0_7_39)))
 (let ((?x8653 (* l_0_7_38 l_0_7_38)))
 (let ((?x8650 (* l_0_7_37 l_0_7_37)))
 (let ((?x4730 (* l_0_7_25 l_0_7_25)))
 (let ((?x4721 (* l_0_7_24 l_0_7_24)))
 (let ((?x8913 (+ (+ (+ (* l_0_7_22 l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x4721) ?x4730)))
 (let ((?x8920 (- (+ (+ (- (- (- (- ?x8913 ?x8650) ?x8653) ?x8656) ?x8659) ?x8284) ?x8286) ?x8288)))
 (= (+ (+ (- ?x8920 ?x8290) ?x7571) ?x7575) 0.0))))))))))))))))))))))
(assert
 (let ((?x7937 (* l_0_7_85 l_0_7_85)))
 (let ((?x7932 (* l_0_7_84 l_0_7_84)))
 (let ((?x7927 (* l_0_7_83 l_0_7_83)))
 (let ((?x7922 (* l_0_7_82 l_0_7_82)))
 (let ((?x8388 (* l_0_7_70 l_0_7_70)))
 (let ((?x8385 (* l_0_7_69 l_0_7_69)))
 (let ((?x8383 (* l_0_7_68 l_0_7_68)))
 (let ((?x8381 (* l_0_7_67 l_0_7_67)))
 (let ((?x8379 (* l_0_7_55 l_0_7_55)))
 (let ((?x4033 (* l_0_7_54 l_0_7_54)))
 (let ((?x8940 (+ (+ (+ (* l_0_7_52 l_0_7_52) (* l_0_7_53 l_0_7_53)) ?x4033) ?x8379)))
 (let ((?x8947 (+ (+ (+ (- (- (- (- ?x8940 ?x8381) ?x8383) ?x8385) ?x8388) ?x7922) ?x7927) ?x7932)))
 (= (+ ?x8947 ?x7937) 0.0))))))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (let ((?x9006 (* l_0_8_91 l_0_8_91)))
 (let ((?x8996 (- (- (- _a_0_ (* l_0_8_106 l_0_8_106)) (* l_0_8_121 l_0_8_121)) (* (* 1.0 l_0_8_16) l_0_8_16))))
 (let ((?x9002 (- (+ ?x8996 (* 1.0 (* l_0_8_31 l_0_8_31))) (* (* 1.0 l_0_8_46) l_0_8_46))))
 (= (- (- (+ ?x9002 (* 1.0 (* l_0_8_61 l_0_8_61))) ?x9006) 3.0) 0.0)))))
(assert
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9042 (* ?x9041 l_0_8_62)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9039 (* ?x9038 l_0_8_47)))
 (let ((?x8997 (* l_0_8_31 l_0_8_31)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x9035 (* ?x9034 l_0_8_32)))
 (let ((?x5230 (* l_0_8_16 l_0_8_16)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x9031 (* ?x9030 l_0_8_17)))
 (let ((?x9029 (- (- _a_1_ (* (* 2.0 l_0_8_106) l_0_8_107)) (* (* 2.0 l_0_8_121) l_0_8_122))))
 (let ((?x9046 (- (+ (- (- (+ (+ (- ?x9029 ?x9031) ?x5230) ?x9035) ?x8997) ?x9039) ?x9042) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= ?x9046 0.0))))))))))))))
(assert
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9061 (* ?x9041 l_0_8_64)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x5272 (* ?x9038 l_0_8_49)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x5237 (* ?x9034 l_0_8_34)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x5258 (* ?x9030 l_0_8_19)))
 (let ((?x5253 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 2.0 l_0_8_121) l_0_8_124))))
 (let ((?x5275 (+ (+ (- (- ?x5253 ?x5258) (* ?x9030 l_0_8_16)) ?x5237) (* 2.0 (* l_0_8_31 l_0_8_31)))))
 (let ((?x9064 (+ (+ (- (- ?x5275 ?x5272) (* ?x9038 l_0_8_46)) ?x9061) (* 2.0 (* l_0_8_61 l_0_8_61)))))
 (= (- (- ?x9064 (* (* 2.0 l_0_8_91) l_0_8_94)) 2.0) 0.0)))))))))))))
(assert
 (let ((?x9106 (* l_0_8_76 l_0_8_76)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9104 (* ?x9041 l_0_8_71)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9102 (* ?x9038 l_0_8_56)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x9100 (* ?x9034 l_0_8_41)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x9098 (* ?x9030 l_0_8_26)))
 (let ((?x9095 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_101) l_0_8_91)) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x9103 (- (+ (- (- ?x9095 (* (* 2.0 l_0_8_121) l_0_8_131)) ?x9098) ?x9100) ?x9102)))
 (= (- (+ ?x9103 ?x9104) ?x9106) 0.0)))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9183 (* ?x9182 l_0_8_77)))
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x9180 (* ?x9179 l_0_8_72)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x9177 (* ?x9176 l_0_8_71)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x9174 (* ?x9173 l_0_8_57)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x9171 (* ?x9170 l_0_8_56)))
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x9168 (* ?x9167 l_0_8_42)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x9165 (* ?x9164 l_0_8_41)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x9100 (* ?x9034 l_0_8_41)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x9161 (* ?x9160 l_0_8_27)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x9158 (* ?x9157 l_0_8_26)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x9098 (* ?x9030 l_0_8_26)))
 (let ((?x9140 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x9146 (- (- ?x9140 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_107) l_0_8_116))))
 (let ((?x9152 (- (- ?x9146 (* (* 2.0 l_0_8_108) l_0_8_117)) (* (* 2.0 l_0_8_122) l_0_8_131))))
 (let ((?x9162 (- (- (+ (- ?x9152 (* (* 2.0 l_0_8_123) l_0_8_132)) ?x9098) ?x9158) ?x9161)))
 (let ((?x9181 (+ (+ (- (- (+ (+ (- ?x9162 ?x9100) ?x9165) ?x9168) ?x9171) ?x9174) ?x9177) ?x9180)))
 (= (- ?x9181 ?x9183) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9289 (* ?x9182 l_0_8_79)))
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x9287 (* ?x9286 l_0_8_73)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x9284 (* ?x9283 l_0_8_72)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x9281 (* ?x9280 l_0_8_71)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x9275 (* ?x9274 l_0_8_58)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x9272 (* ?x9271 l_0_8_57)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x9269 (* ?x9268 l_0_8_56)))
 (let ((?x9262 (* 2.0 l_0_8_36)))
 (let ((?x9263 (* ?x9262 l_0_8_43)))
 (let ((?x9259 (* 2.0 l_0_8_35)))
 (let ((?x9260 (* ?x9259 l_0_8_42)))
 (let ((?x9256 (* 2.0 l_0_8_34)))
 (let ((?x9257 (* ?x9256 l_0_8_41)))
 (let ((?x9250 (* 2.0 l_0_8_21)))
 (let ((?x9251 (* ?x9250 l_0_8_28)))
 (let ((?x9247 (* 2.0 l_0_8_20)))
 (let ((?x9248 (* ?x9247 l_0_8_27)))
 (let ((?x9244 (* 2.0 l_0_8_19)))
 (let ((?x9245 (* ?x9244 l_0_8_26)))
 (let ((?x9217 (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_101) l_0_8_94))))
 (let ((?x9222 (- (- ?x9217 (* (* 2.0 l_0_8_102) l_0_8_95)) (* (* 2.0 l_0_8_103) l_0_8_96))))
 (let ((?x9228 (- (- ?x9222 (* (* 2.0 l_0_8_109) l_0_8_116)) (* (* 2.0 l_0_8_110) l_0_8_117))))
 (let ((?x9234 (- (- ?x9228 (* (* 2.0 l_0_8_111) l_0_8_118)) (* (* 2.0 l_0_8_124) l_0_8_131))))
 (let ((?x9240 (- (- ?x9234 (* (* 2.0 l_0_8_125) l_0_8_132)) (* (* 2.0 l_0_8_126) l_0_8_133))))
 (let ((?x9252 (- (- (- (- ?x9240 (* (* 4.0 l_0_8_16) l_0_8_26)) ?x9245) ?x9248) ?x9251)))
 (let ((?x9264 (+ (+ (+ (+ ?x9252 (* (* 4.0 l_0_8_31) l_0_8_41)) ?x9257) ?x9260) ?x9263)))
 (let ((?x9276 (- (- (- (- ?x9264 (* (* 4.0 l_0_8_46) l_0_8_56)) ?x9269) ?x9272) ?x9275)))
 (let ((?x9288 (+ (+ (+ (+ ?x9276 (* (* 4.0 l_0_8_61) l_0_8_71)) ?x9281) ?x9284) ?x9287)))
 (= (- ?x9288 ?x9289) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9451 (* ?x9182 l_0_8_86)))
 (let ((?x9449 (* ?x9182 l_0_8_82)))
 (let ((?x9447 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x9444 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9441 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9438 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9104 (* ?x9041 l_0_8_71)))
 (let ((?x9433 (* 2.0 l_0_8_55)))
 (let ((?x9434 (* ?x9433 l_0_8_59)))
 (let ((?x9430 (* 2.0 l_0_8_54)))
 (let ((?x9431 (* ?x9430 l_0_8_58)))
 (let ((?x9427 (* 2.0 l_0_8_53)))
 (let ((?x9428 (* ?x9427 l_0_8_57)))
 (let ((?x9424 (* 2.0 l_0_8_52)))
 (let ((?x9425 (* ?x9424 l_0_8_56)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9102 (* ?x9038 l_0_8_56)))
 (let ((?x9421 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9418 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9415 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9412 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x9408 (* 2.0 l_0_8_25)))
 (let ((?x9409 (* ?x9408 l_0_8_29)))
 (let ((?x9405 (* 2.0 l_0_8_24)))
 (let ((?x9406 (* ?x9405 l_0_8_28)))
 (let ((?x9402 (* 2.0 l_0_8_23)))
 (let ((?x9403 (* ?x9402 l_0_8_27)))
 (let ((?x9400 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x9368 (- (* (* (- 2.0) l_0_8_1) l_0_8_7) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x9372 (- (- ?x9368 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x9377 (- (- ?x9372 (* (* 2.0 l_0_8_103) l_0_8_99)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x9383 (- (- ?x9377 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x9389 (- (- ?x9383 (* (* 2.0 l_0_8_115) l_0_8_119)) (* (* 2.0 l_0_8_127) l_0_8_131))))
 (let ((?x9395 (- (- ?x9389 (* (* 2.0 l_0_8_128) l_0_8_132)) (* (* 2.0 l_0_8_129) l_0_8_133))))
 (let ((?x9407 (- (- (- (- ?x9395 (* (* 2.0 l_0_8_130) l_0_8_134)) ?x9400) ?x9403) ?x9406)))
 (let ((?x9426 (- (+ (+ (+ (+ (+ (- ?x9407 ?x9409) ?x9412) ?x9415) ?x9418) ?x9421) ?x9102) ?x9425)))
 (let ((?x9445 (+ (+ (+ (- (- (- (- ?x9426 ?x9428) ?x9431) ?x9434) ?x9104) ?x9438) ?x9441) ?x9444)))
 (= (+ (- (+ ?x9445 ?x9447) ?x9449) ?x9451) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9451 (* ?x9182 l_0_8_86)))
 (let ((?x9546 (* l_0_8_135 l_0_8_135)))
 (let ((?x9544 (* l_0_8_134 l_0_8_134)))
 (let ((?x9542 (* l_0_8_133 l_0_8_133)))
 (let ((?x9540 (* l_0_8_132 l_0_8_132)))
 (let ((?x9538 (* l_0_8_131 l_0_8_131)))
 (let ((?x9536 (* l_0_8_120 l_0_8_120)))
 (let ((?x9534 (* l_0_8_119 l_0_8_119)))
 (let ((?x9532 (* l_0_8_118 l_0_8_118)))
 (let ((?x9530 (* l_0_8_117 l_0_8_117)))
 (let ((?x9528 (* l_0_8_116 l_0_8_116)))
 (let ((?x9526 (* l_0_8_105 l_0_8_105)))
 (let ((?x9524 (* l_0_8_104 l_0_8_104)))
 (let ((?x9522 (* l_0_8_103 l_0_8_103)))
 (let ((?x9520 (* l_0_8_102 l_0_8_102)))
 (let ((?x9521 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_11) (* l_0_8_101 l_0_8_101)) ?x9520)))
 (let ((?x9535 (- (- (- (- (- (- (- ?x9521 ?x9522) ?x9524) ?x9526) ?x9528) ?x9530) ?x9532) ?x9534)))
 (let ((?x9550 (- (- (- (- (- (- (- ?x9535 ?x9536) ?x9538) ?x9540) ?x9542) ?x9544) ?x9546) (* (* 1.0 l_0_8_26) l_0_8_26))))
 (let ((?x9556 (- (- ?x9550 (* (* 1.0 l_0_8_27) l_0_8_27)) (* (* 1.0 l_0_8_28) l_0_8_28))))
 (let ((?x9562 (- (- ?x9556 (* (* 1.0 l_0_8_29) l_0_8_29)) (* (* 1.0 l_0_8_30) l_0_8_30))))
 (let ((?x9568 (+ (+ ?x9562 (* 1.0 (* l_0_8_41 l_0_8_41))) (* 1.0 (* l_0_8_42 l_0_8_42)))))
 (let ((?x9574 (+ (+ ?x9568 (* 1.0 (* l_0_8_43 l_0_8_43))) (* 1.0 (* l_0_8_44 l_0_8_44)))))
 (let ((?x9580 (- (+ ?x9574 (* 1.0 (* l_0_8_45 l_0_8_45))) (* (* 1.0 l_0_8_56) l_0_8_56))))
 (let ((?x9586 (- (- ?x9580 (* (* 1.0 l_0_8_57) l_0_8_57)) (* (* 1.0 l_0_8_58) l_0_8_58))))
 (let ((?x9592 (- (- ?x9586 (* (* 1.0 l_0_8_59) l_0_8_59)) (* (* 1.0 l_0_8_60) l_0_8_60))))
 (let ((?x9598 (+ (+ ?x9592 (* 1.0 (* l_0_8_71 l_0_8_71))) (* 1.0 (* l_0_8_72 l_0_8_72)))))
 (let ((?x9604 (+ (+ ?x9598 (* 1.0 (* l_0_8_73 l_0_8_73))) (* 1.0 (* l_0_8_74 l_0_8_74)))))
 (= (- (+ ?x9604 (* 1.0 (* l_0_8_75 l_0_8_75))) ?x9451) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x9657 (* l_0_8_78 l_0_8_78)))
 (let ((?x9655 (* l_0_8_77 l_0_8_77)))
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x9168 (* ?x9167 l_0_8_42)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x9165 (* ?x9164 l_0_8_41)))
 (let ((?x9651 (* l_0_8_3 l_0_8_3)))
 (let ((?x9649 (* l_0_8_2 l_0_8_2)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x9161 (* ?x9160 l_0_8_27)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x9158 (* ?x9157 l_0_8_26)))
 (let ((?x9658 (- (- (- (- (- (- (+ ?x9158 ?x9161) ?x9649) ?x9651) ?x9165) ?x9168) ?x9655) ?x9657)))
 (= ?x9658 0.0)))))))))))))))
(assert
 (let ((?x9704 (* 2.0 l_0_8_78)))
 (let ((?x9705 (* ?x9704 l_0_8_80)))
 (let ((?x9701 (* 2.0 l_0_8_77)))
 (let ((?x9702 (* ?x9701 l_0_8_79)))
 (let ((?x9262 (* 2.0 l_0_8_36)))
 (let ((?x9263 (* ?x9262 l_0_8_43)))
 (let ((?x9259 (* 2.0 l_0_8_35)))
 (let ((?x9260 (* ?x9259 l_0_8_42)))
 (let ((?x9256 (* 2.0 l_0_8_34)))
 (let ((?x9257 (* ?x9256 l_0_8_41)))
 (let ((?x9677 (* 2.0 l_0_8_3)))
 (let ((?x9678 (* ?x9677 l_0_8_5)))
 (let ((?x9250 (* 2.0 l_0_8_21)))
 (let ((?x9251 (* ?x9250 l_0_8_28)))
 (let ((?x9247 (* 2.0 l_0_8_20)))
 (let ((?x9248 (* ?x9247 l_0_8_27)))
 (let ((?x9672 (* 2.0 l_0_8_2)))
 (let ((?x9673 (* ?x9672 l_0_8_4)))
 (let ((?x9244 (* 2.0 l_0_8_19)))
 (let ((?x9245 (* ?x9244 l_0_8_26)))
 (let ((?x9670 (- (* (* (- 4.0) l_0_8_17) l_0_8_26) (* (* 4.0 l_0_8_18) l_0_8_27))))
 (let ((?x9682 (+ (- (+ (+ (- (+ ?x9670 ?x9245) ?x9673) ?x9248) ?x9251) ?x9678) (* (* 4.0 l_0_8_32) l_0_8_41))))
 (let ((?x9688 (- (- (- (+ ?x9682 (* (* 4.0 l_0_8_33) l_0_8_42)) ?x9257) ?x9260) ?x9263)))
 (let ((?x9694 (- (- ?x9688 (* (* 4.0 l_0_8_47) l_0_8_56)) (* (* 4.0 l_0_8_48) l_0_8_57))))
 (let ((?x9700 (+ (+ ?x9694 (* (* 4.0 l_0_8_62) l_0_8_71)) (* (* 4.0 l_0_8_63) l_0_8_72))))
 (= (- (- ?x9700 ?x9702) ?x9705) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x9704 (* 2.0 l_0_8_78)))
 (let ((?x9764 (* ?x9704 l_0_8_87)))
 (let ((?x9762 (* ?x9704 l_0_8_83)))
 (let ((?x9701 (* 2.0 l_0_8_77)))
 (let ((?x9760 (* ?x9701 l_0_8_86)))
 (let ((?x9758 (* ?x9701 l_0_8_82)))
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x9180 (* ?x9179 l_0_8_72)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x9177 (* ?x9176 l_0_8_71)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x9174 (* ?x9173 l_0_8_57)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x9171 (* ?x9170 l_0_8_56)))
 (let ((?x9421 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9418 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9415 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9412 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x9677 (* 2.0 l_0_8_3)))
 (let ((?x9748 (* ?x9677 l_0_8_8)))
 (let ((?x9408 (* 2.0 l_0_8_25)))
 (let ((?x9409 (* ?x9408 l_0_8_29)))
 (let ((?x9405 (* 2.0 l_0_8_24)))
 (let ((?x9406 (* ?x9405 l_0_8_28)))
 (let ((?x9402 (* 2.0 l_0_8_23)))
 (let ((?x9403 (* ?x9402 l_0_8_27)))
 (let ((?x9400 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x9747 (+ (+ (+ (+ (* (* (- 2.0) l_0_8_2) l_0_8_7) ?x9400) ?x9403) ?x9406) ?x9409)))
 (let ((?x9755 (+ (+ (- (- (- (- (- ?x9747 ?x9748) ?x9412) ?x9415) ?x9418) ?x9421) ?x9171) ?x9174)))
 (= (+ (- (+ (- (- (- ?x9755 ?x9177) ?x9180) ?x9758) ?x9760) ?x9762) ?x9764) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9704 (* 2.0 l_0_8_78)))
 (let ((?x9764 (* ?x9704 l_0_8_87)))
 (let ((?x9701 (* 2.0 l_0_8_77)))
 (let ((?x9760 (* ?x9701 l_0_8_86)))
 (let ((?x9575 (* l_0_8_45 l_0_8_45)))
 (let ((?x9572 (* l_0_8_44 l_0_8_44)))
 (let ((?x9569 (* l_0_8_43 l_0_8_43)))
 (let ((?x9566 (* l_0_8_42 l_0_8_42)))
 (let ((?x9563 (* l_0_8_41 l_0_8_41)))
 (let ((?x6127 (* l_0_8_30 l_0_8_30)))
 (let ((?x6125 (* l_0_8_29 l_0_8_29)))
 (let ((?x6074 (* l_0_8_28 l_0_8_28)))
 (let ((?x6109 (* l_0_8_27 l_0_8_27)))
 (let ((?x6105 (* l_0_8_26 l_0_8_26)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x6399 (* ?x6401 l_0_8_3)))
 (let ((?x6389 (+ (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x6399) ?x6105) ?x6109) ?x6074)))
 (let ((?x9774 (- (- (- (- (- (+ (+ ?x6389 ?x6125) ?x6127) ?x9563) ?x9566) ?x9569) ?x9572) ?x9575)))
 (= (- (- ?x9774 ?x9760) ?x9764) 0.0))))))))))))))))))))
(assert
 (let ((?x9816 (* l_0_8_81 l_0_8_81)))
 (let ((?x9814 (* l_0_8_80 l_0_8_80)))
 (let ((?x9812 (* l_0_8_79 l_0_8_79)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9104 (* ?x9041 l_0_8_71)))
 (let ((?x9800 (* l_0_8_6 l_0_8_6)))
 (let ((?x9792 (* l_0_8_5 l_0_8_5)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9102 (* ?x9038 l_0_8_56)))
 (let ((?x9786 (* l_0_8_4 l_0_8_4)))
 (let ((?x888 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 4.0 l_0_8_19) l_0_8_26))))
 (let ((?x970 (- (- ?x888 (* (* 4.0 l_0_8_20) l_0_8_27)) (* (* 4.0 l_0_8_21) l_0_8_28))))
 (let ((?x957 (+ (+ ?x970 (* (* 4.0 l_0_8_34) l_0_8_41)) (* (* 4.0 l_0_8_35) l_0_8_42))))
 (let ((?x9791 (- (- (- (+ ?x957 (* (* 4.0 l_0_8_36) l_0_8_43)) ?x9786) ?x9102) (* (* 4.0 l_0_8_49) l_0_8_56))))
 (let ((?x9799 (- (- (- ?x9791 ?x9792) (* (* 4.0 l_0_8_50) l_0_8_57)) (* (* 4.0 l_0_8_51) l_0_8_58))))
 (let ((?x9808 (+ (+ (+ (- ?x9799 ?x9800) ?x9104) (* (* 4.0 l_0_8_64) l_0_8_71)) (* (* 4.0 l_0_8_65) l_0_8_72))))
 (let ((?x9817 (- (- (- (+ ?x9808 (* (* 4.0 l_0_8_66) l_0_8_73)) ?x9812) ?x9814) ?x9816)))
 (= ?x9817 0.0)))))))))))))))))))
(assert
 (let ((?x9923 (* 2.0 l_0_8_81)))
 (let ((?x9926 (* ?x9923 l_0_8_88)))
 (let ((?x9924 (* ?x9923 l_0_8_84)))
 (let ((?x9918 (* 2.0 l_0_8_80)))
 (let ((?x9921 (* ?x9918 l_0_8_87)))
 (let ((?x9919 (* ?x9918 l_0_8_83)))
 (let ((?x9913 (* 2.0 l_0_8_79)))
 (let ((?x9916 (* ?x9913 l_0_8_86)))
 (let ((?x9914 (* ?x9913 l_0_8_82)))
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x9287 (* ?x9286 l_0_8_73)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x9284 (* ?x9283 l_0_8_72)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x9281 (* ?x9280 l_0_8_71)))
 (let ((?x9896 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x9275 (* ?x9274 l_0_8_58)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x9272 (* ?x9271 l_0_8_57)))
 (let ((?x9879 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x9269 (* ?x9268 l_0_8_56)))
 (let ((?x9872 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x9855 (- (* (* (- 4.0) l_0_8_22) l_0_8_26) (* (* 4.0 l_0_8_23) l_0_8_27))))
 (let ((?x9861 (- (- ?x9855 (* (* 4.0 l_0_8_24) l_0_8_28)) (* (* 4.0 l_0_8_25) l_0_8_29))))
 (let ((?x9867 (+ (+ ?x9861 (* (* 4.0 l_0_8_37) l_0_8_41)) (* (* 4.0 l_0_8_38) l_0_8_42))))
 (let ((?x9876 (+ (- (+ ?x9867 (* (* 4.0 l_0_8_39) l_0_8_43)) ?x9872) (* (* 4.0 l_0_8_40) l_0_8_44))))
 (let ((?x9885 (- (+ (+ (- (+ ?x9876 ?x9269) ?x9879) ?x9272) ?x9275) (* (* 4.0 l_0_8_52) l_0_8_56))))
 (let ((?x9891 (- (- ?x9885 (* (* 4.0 l_0_8_53) l_0_8_57)) (* (* 4.0 l_0_8_54) l_0_8_58))))
 (let ((?x9899 (- (- (- (- ?x9891 (* (* 4.0 l_0_8_55) l_0_8_59)) ?x9896) ?x9281) ?x9284)))
 (let ((?x9906 (+ (+ (- ?x9899 ?x9287) (* (* 4.0 l_0_8_67) l_0_8_71)) (* (* 4.0 l_0_8_68) l_0_8_72))))
 (let ((?x9912 (+ (+ ?x9906 (* (* 4.0 l_0_8_69) l_0_8_73)) (* (* 4.0 l_0_8_70) l_0_8_74))))
 (= (+ (- (+ (- (+ (- ?x9912 ?x9914) ?x9916) ?x9919) ?x9921) ?x9924) ?x9926) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9923 (* 2.0 l_0_8_81)))
 (let ((?x9926 (* ?x9923 l_0_8_88)))
 (let ((?x9918 (* 2.0 l_0_8_80)))
 (let ((?x9921 (* ?x9918 l_0_8_87)))
 (let ((?x9913 (* 2.0 l_0_8_79)))
 (let ((?x9916 (* ?x9913 l_0_8_86)))
 (let ((?x10000 (* 2.0 l_0_8_13)))
 (let ((?x10001 (* ?x10000 l_0_8_6)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x9984 (* ?x6401 l_0_8_5)))
 (let ((?x10005 (- (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x9984) ?x10001) (* (* 2.0 l_0_8_26) l_0_8_26))))
 (let ((?x10011 (- (- ?x10005 (* (* 2.0 l_0_8_27) l_0_8_27)) (* (* 2.0 l_0_8_28) l_0_8_28))))
 (let ((?x10017 (- (- ?x10011 (* (* 2.0 l_0_8_29) l_0_8_29)) (* (* 2.0 l_0_8_30) l_0_8_30))))
 (let ((?x10021 (+ (+ ?x10017 (* 2.0 (* l_0_8_41 l_0_8_41))) (* 2.0 (* l_0_8_42 l_0_8_42)))))
 (let ((?x10025 (+ (+ ?x10021 (* 2.0 (* l_0_8_43 l_0_8_43))) (* 2.0 (* l_0_8_44 l_0_8_44)))))
 (let ((?x10030 (- (+ ?x10025 (* 2.0 (* l_0_8_45 l_0_8_45))) (* (* 2.0 l_0_8_56) l_0_8_56))))
 (let ((?x10036 (- (- ?x10030 (* (* 2.0 l_0_8_57) l_0_8_57)) (* (* 2.0 l_0_8_58) l_0_8_58))))
 (let ((?x10042 (- (- ?x10036 (* (* 2.0 l_0_8_59) l_0_8_59)) (* (* 2.0 l_0_8_60) l_0_8_60))))
 (let ((?x10046 (+ (+ ?x10042 (* 2.0 (* l_0_8_71 l_0_8_71))) (* 2.0 (* l_0_8_72 l_0_8_72)))))
 (let ((?x10050 (+ (+ ?x10046 (* 2.0 (* l_0_8_73 l_0_8_73))) (* 2.0 (* l_0_8_74 l_0_8_74)))))
 (let ((?x10055 (- (- (- (+ ?x10050 (* 2.0 (* l_0_8_75 l_0_8_75))) ?x9916) ?x9921) ?x9926)))
 (= ?x10055 0.0)))))))))))))))))))))))
(assert
 (let ((?x10115 (* l_0_8_9 l_0_8_9)))
 (let ((?x10113 (* l_0_8_85 l_0_8_85)))
 (let ((?x10111 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x10108 (* l_0_8_84 l_0_8_84)))
 (let ((?x10106 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x10103 (* l_0_8_83 l_0_8_83)))
 (let ((?x10101 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x10098 (* l_0_8_82 l_0_8_82)))
 (let ((?x10096 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x10093 (* l_0_8_8 l_0_8_8)))
 (let ((?x9447 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x10090 (* l_0_8_7 l_0_8_7)))
 (let ((?x9444 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9441 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9438 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9433 (* 2.0 l_0_8_55)))
 (let ((?x9434 (* ?x9433 l_0_8_59)))
 (let ((?x9430 (* 2.0 l_0_8_54)))
 (let ((?x9431 (* ?x9430 l_0_8_58)))
 (let ((?x9427 (* 2.0 l_0_8_53)))
 (let ((?x9428 (* ?x9427 l_0_8_57)))
 (let ((?x10084 (+ (+ (* (- l_0_8_10) l_0_8_10) (* (* 2.0 l_0_8_52) l_0_8_56)) ?x9428)))
 (let ((?x10092 (- (- (- (- (- (+ (+ ?x10084 ?x9431) ?x9434) ?x9438) ?x9441) ?x9444) ?x10090) ?x9447)))
 (let ((?x10109 (- (+ (- (+ (- (+ (- ?x10092 ?x10093) ?x10096) ?x10098) ?x10101) ?x10103) ?x10106) ?x10108)))
 (= (- (- (+ ?x10109 ?x10111) ?x10113) ?x10115) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x10168 (* l_0_8_90 l_0_8_90)))
 (let ((?x10166 (* l_0_8_89 l_0_8_89)))
 (let ((?x10164 (* l_0_8_88 l_0_8_88)))
 (let ((?x10162 (* l_0_8_87 l_0_8_87)))
 (let ((?x10160 (* l_0_8_86 l_0_8_86)))
 (let ((?x10111 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x10106 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x10101 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x10096 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x9605 (* l_0_8_75 l_0_8_75)))
 (let ((?x9602 (* l_0_8_74 l_0_8_74)))
 (let ((?x9599 (* l_0_8_73 l_0_8_73)))
 (let ((?x9596 (* l_0_8_72 l_0_8_72)))
 (let ((?x9593 (* l_0_8_71 l_0_8_71)))
 (let ((?x9634 (* l_0_8_60 l_0_8_60)))
 (let ((?x6175 (* l_0_8_59 l_0_8_59)))
 (let ((?x6155 (* l_0_8_58 l_0_8_58)))
 (let ((?x9628 (* l_0_8_57 l_0_8_57)))
 (let ((?x6153 (* l_0_8_56 l_0_8_56)))
 (let ((?x10000 (* 2.0 l_0_8_13)))
 (let ((?x10144 (* ?x10000 l_0_8_9)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x10142 (* ?x6401 l_0_8_8)))
 (let ((?x10139 (* 2.0 l_0_8_11)))
 (let ((?x10140 (* ?x10139 l_0_8_7)))
 (let ((?x10146 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x10140) ?x10142) ?x10144) ?x6153)))
 (let ((?x10153 (- (- (- (+ (+ (+ (+ ?x10146 ?x9628) ?x6155) ?x6175) ?x9634) ?x9593) ?x9596) ?x9599)))
 (let ((?x10161 (+ (- (- (- (- (- (- ?x10153 ?x9602) ?x9605) ?x10096) ?x10101) ?x10106) ?x10111) ?x10160)))
 (= (+ (+ (+ (+ ?x10161 ?x10162) ?x10164) ?x10166) ?x10168) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x10168 (* l_0_8_90 l_0_8_90)))
 (let ((?x10166 (* l_0_8_89 l_0_8_89)))
 (let ((?x10164 (* l_0_8_88 l_0_8_88)))
 (let ((?x10162 (* l_0_8_87 l_0_8_87)))
 (let ((?x10160 (* l_0_8_86 l_0_8_86)))
 (let ((?x10190 (* l_0_8_15 l_0_8_15)))
 (let ((?x6784 (* l_0_8_14 l_0_8_14)))
 (let ((?x6785 (* l_0_8_13 l_0_8_13)))
 (let ((?x6786 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x6785) ?x6784)))
 (= (- (- (- (- (- (- ?x6786 ?x10190) ?x10160) ?x10162) ?x10164) ?x10166) ?x10168) 0.0)))))))))))
(assert
 (let ((?x10267 (* l_0_8_96 l_0_8_96)))
 (let ((?x10265 (* l_0_8_95 l_0_8_95)))
 (let ((?x10263 (* l_0_8_94 l_0_8_94)))
 (let ((?x9003 (* l_0_8_61 l_0_8_61)))
 (let ((?x9014 (* l_0_8_46 l_0_8_46)))
 (let ((?x10215 (* l_0_8_126 l_0_8_126)))
 (let ((?x10213 (* l_0_8_125 l_0_8_125)))
 (let ((?x10211 (* l_0_8_124 l_0_8_124)))
 (let ((?x6835 (* l_0_8_111 l_0_8_111)))
 (let ((?x6838 (* l_0_8_110 l_0_8_110)))
 (let ((?x10210 (- (- (- (* l_0_8_1 l_0_8_1) (* l_0_8_109 l_0_8_109)) ?x6838) ?x6835)))
 (let ((?x10218 (- (- (- (- ?x10210 ?x10211) ?x10213) ?x10215) (* (* 4.0 l_0_8_16) l_0_8_19))))
 (let ((?x10224 (- (- ?x10218 (* (* 1.0 l_0_8_19) l_0_8_19)) (* (* 1.0 l_0_8_20) l_0_8_20))))
 (let ((?x10229 (+ (- ?x10224 (* (* 1.0 l_0_8_21) l_0_8_21)) (* (* 4.0 l_0_8_31) l_0_8_34))))
 (let ((?x10235 (+ (+ ?x10229 (* 1.0 (* l_0_8_34 l_0_8_34))) (* 1.0 (* l_0_8_35 l_0_8_35)))))
 (let ((?x10240 (- (+ ?x10235 (* 1.0 (* l_0_8_36 l_0_8_36))) (* (* 4.0 l_0_8_46) l_0_8_49))))
 (let ((?x10247 (- (- (- ?x10240 ?x9014) (* (* 1.0 l_0_8_49) l_0_8_49)) (* (* 1.0 l_0_8_50) l_0_8_50))))
 (let ((?x10252 (+ (- ?x10247 (* (* 1.0 l_0_8_51) l_0_8_51)) (* (* 4.0 l_0_8_61) l_0_8_64))))
 (let ((?x10259 (+ (+ (+ ?x10252 ?x9003) (* 1.0 (* l_0_8_64 l_0_8_64))) (* 1.0 (* l_0_8_65 l_0_8_65)))))
 (let ((?x10268 (- (- (- (+ ?x10259 (* 1.0 (* l_0_8_66 l_0_8_66))) ?x10263) ?x10265) ?x10267)))
 (= ?x10268 0.0))))))))))))))))))))))
(assert
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9042 (* ?x9041 l_0_8_62)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9039 (* ?x9038 l_0_8_47)))
 (let ((?x10236 (* l_0_8_36 l_0_8_36)))
 (let ((?x10233 (* l_0_8_35 l_0_8_35)))
 (let ((?x10230 (* l_0_8_34 l_0_8_34)))
 (let ((?x6935 (* l_0_8_21 l_0_8_21)))
 (let ((?x6930 (* l_0_8_20 l_0_8_20)))
 (let ((?x1862 (* l_0_8_19 l_0_8_19)))
 (let ((?x10305 (- (* (* 2.0 l_0_8_1) l_0_8_2) (* (* 4.0 l_0_8_17) l_0_8_19))))
 (let ((?x10310 (+ (+ (+ (- ?x10305 (* (* 4.0 l_0_8_18) l_0_8_20)) ?x1862) ?x6930) ?x6935)))
 (let ((?x10314 (+ (+ ?x10310 (* (* 4.0 l_0_8_32) l_0_8_34)) (* (* 4.0 l_0_8_33) l_0_8_35))))
 (let ((?x10320 (- (- (- (- (- ?x10314 ?x10230) ?x10233) ?x10236) ?x9039) (* (* 4.0 l_0_8_47) l_0_8_49))))
 (let ((?x10325 (+ (+ (- ?x10320 (* (* 4.0 l_0_8_48) l_0_8_50)) ?x9042) (* (* 4.0 l_0_8_62) l_0_8_64))))
 (= (+ ?x10325 (* (* 4.0 l_0_8_63) l_0_8_65)) 0.0)))))))))))))))))
(assert
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9061 (* ?x9041 l_0_8_64)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x5272 (* ?x9038 l_0_8_49)))
 (let ((?x7040 (- (* (* 2.0 l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x10335 (- (- ?x7040 (* (* 2.0 l_0_8_20) l_0_8_20)) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (let ((?x10339 (+ (+ ?x10335 (* 2.0 (* l_0_8_34 l_0_8_34))) (* 2.0 (* l_0_8_35 l_0_8_35)))))
 (let ((?x10344 (- (- (+ ?x10339 (* 2.0 (* l_0_8_36 l_0_8_36))) ?x5272) (* (* 2.0 l_0_8_49) l_0_8_49))))
 (let ((?x10348 (- (- ?x10344 (* (* 2.0 l_0_8_50) l_0_8_50)) (* (* 2.0 l_0_8_51) l_0_8_51))))
 (let ((?x10353 (+ (+ (+ ?x10348 ?x9061) (* 2.0 (* l_0_8_64 l_0_8_64))) (* 2.0 (* l_0_8_65 l_0_8_65)))))
 (= (+ ?x10353 (* 2.0 (* l_0_8_66 l_0_8_66))) 0.0))))))))))))
(assert
 (let ((?x9816 (* l_0_8_81 l_0_8_81)))
 (let ((?x9814 (* l_0_8_80 l_0_8_80)))
 (let ((?x9812 (* l_0_8_79 l_0_8_79)))
 (let ((?x10260 (* l_0_8_66 l_0_8_66)))
 (let ((?x10257 (* l_0_8_65 l_0_8_65)))
 (let ((?x10254 (* l_0_8_64 l_0_8_64)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x10388 (* ?x9041 l_0_8_67)))
 (let ((?x6938 (* l_0_8_51 l_0_8_51)))
 (let ((?x7001 (* l_0_8_50 l_0_8_50)))
 (let ((?x1876 (* l_0_8_49 l_0_8_49)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x10377 (* ?x9038 l_0_8_52)))
 (let ((?x10366 (- (* (* 2.0 l_0_8_1) l_0_8_7) (* (* 4.0 l_0_8_19) l_0_8_22))))
 (let ((?x10370 (- (- ?x10366 (* (* 4.0 l_0_8_20) l_0_8_23)) (* (* 4.0 l_0_8_21) l_0_8_24))))
 (let ((?x10374 (+ (+ ?x10370 (* (* 4.0 l_0_8_34) l_0_8_37)) (* (* 4.0 l_0_8_35) l_0_8_38))))
 (let ((?x10380 (- (- (+ ?x10374 (* (* 4.0 l_0_8_36) l_0_8_39)) ?x10377) (* (* 4.0 l_0_8_49) l_0_8_52))))
 (let ((?x10386 (- (+ (- (+ ?x10380 ?x1876) (* (* 4.0 l_0_8_50) l_0_8_53)) ?x7001) (* (* 4.0 l_0_8_51) l_0_8_54))))
 (let ((?x10392 (- (+ (+ (+ ?x10386 ?x6938) ?x10388) (* (* 4.0 l_0_8_64) l_0_8_67)) ?x10254)))
 (let ((?x10397 (+ (- (+ ?x10392 (* (* 4.0 l_0_8_65) l_0_8_68)) ?x10257) (* (* 4.0 l_0_8_66) l_0_8_69))))
 (= (+ (+ (+ (- ?x10397 ?x10260) ?x9812) ?x9814) ?x9816) 0.0))))))))))))))))))))))
(assert
 (let ((?x10428 (* l_0_8_63 l_0_8_63)))
 (let ((?x10426 (* l_0_8_62 l_0_8_62)))
 (let ((?x10424 (* l_0_8_48 l_0_8_48)))
 (let ((?x2357 (* l_0_8_47 l_0_8_47)))
 (let ((?x10427 (+ (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x2357) ?x10424) ?x10426)))
 (= (+ ?x10427 ?x10428) 0.0)))))))
(assert
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10444 (* ?x9179 l_0_8_65)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10442 (* ?x9176 l_0_8_64)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10440 (* ?x9173 l_0_8_50)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10438 (* ?x9170 l_0_8_49)))
 (let ((?x9677 (* 2.0 l_0_8_3)))
 (let ((?x9678 (* ?x9677 l_0_8_5)))
 (let ((?x9672 (* 2.0 l_0_8_2)))
 (let ((?x9673 (* ?x9672 l_0_8_4)))
 (= (+ (+ (- (- (+ ?x9673 ?x9678) ?x10438) ?x10440) ?x10442) ?x10444) 0.0))))))))))))))
(assert
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10462 (* ?x9179 l_0_8_68)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10460 (* ?x9176 l_0_8_67)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10458 (* ?x9173 l_0_8_53)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10456 (* ?x9170 l_0_8_52)))
 (let ((?x9677 (* 2.0 l_0_8_3)))
 (let ((?x9748 (* ?x9677 l_0_8_8)))
 (let ((?x10461 (+ (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x9748) ?x10456) ?x10458) ?x10460)))
 (= (+ ?x10461 ?x10462) 0.0)))))))))))))
(assert
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x9180 (* ?x9179 l_0_8_72)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x9177 (* ?x9176 l_0_8_71)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x9174 (* ?x9173 l_0_8_57)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x9171 (* ?x9170 l_0_8_56)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x6399 (* ?x6401 l_0_8_3)))
 (let ((?x10481 (+ (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x6399) ?x9171) ?x9174) ?x9177)))
 (= (+ ?x10481 ?x9180) 0.0)))))))))))))
(assert
 (let ((?x10260 (* l_0_8_66 l_0_8_66)))
 (let ((?x10257 (* l_0_8_65 l_0_8_65)))
 (let ((?x10254 (* l_0_8_64 l_0_8_64)))
 (let ((?x9800 (* l_0_8_6 l_0_8_6)))
 (let ((?x6938 (* l_0_8_51 l_0_8_51)))
 (let ((?x7001 (* l_0_8_50 l_0_8_50)))
 (let ((?x9792 (* l_0_8_5 l_0_8_5)))
 (let ((?x10494 (- (+ (- (* l_0_8_4 l_0_8_4) (* l_0_8_49 l_0_8_49)) ?x9792) ?x7001)))
 (= (+ (+ (+ (+ (- ?x10494 ?x6938) ?x9800) ?x10254) ?x10257) ?x10260) 0.0))))))))))
(assert
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x10513 (* ?x9286 l_0_8_69)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x10511 (* ?x9283 l_0_8_68)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x10509 (* ?x9280 l_0_8_67)))
 (let ((?x9896 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x10506 (* ?x9274 l_0_8_54)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x10504 (* ?x9271 l_0_8_53)))
 (let ((?x9879 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x2433 (* ?x9268 l_0_8_52)))
 (let ((?x9872 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x10512 (+ (+ (+ (- (- (+ (- ?x9872 ?x2433) ?x9879) ?x10504) ?x10506) ?x9896) ?x10509) ?x10511)))
 (= (+ ?x10512 ?x10513) 0.0))))))))))))))))))
(assert
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x9287 (* ?x9286 l_0_8_73)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x9284 (* ?x9283 l_0_8_72)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x9281 (* ?x9280 l_0_8_71)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x9275 (* ?x9274 l_0_8_58)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x9272 (* ?x9271 l_0_8_57)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x9269 (* ?x9268 l_0_8_56)))
 (let ((?x10000 (* 2.0 l_0_8_13)))
 (let ((?x10001 (* ?x10000 l_0_8_6)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x9984 (* ?x6401 l_0_8_5)))
 (let ((?x10531 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x9984) ?x10001) ?x9269) ?x9272)))
 (= (+ (+ (+ (- ?x10531 ?x9275) ?x9281) ?x9284) ?x9287) 0.0)))))))))))))))))))
(assert
 (let ((?x10115 (* l_0_8_9 l_0_8_9)))
 (let ((?x10093 (* l_0_8_8 l_0_8_8)))
 (let ((?x10559 (* l_0_8_70 l_0_8_70)))
 (let ((?x10090 (* l_0_8_7 l_0_8_7)))
 (let ((?x10556 (* l_0_8_69 l_0_8_69)))
 (let ((?x10554 (* l_0_8_68 l_0_8_68)))
 (let ((?x10552 (* l_0_8_67 l_0_8_67)))
 (let ((?x10550 (* l_0_8_55 l_0_8_55)))
 (let ((?x10548 (* l_0_8_54 l_0_8_54)))
 (let ((?x10546 (* l_0_8_53 l_0_8_53)))
 (let ((?x10549 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_52 l_0_8_52)) ?x10546) ?x10548)))
 (let ((?x10561 (+ (+ (+ (+ (+ (+ (- ?x10549 ?x10550) ?x10552) ?x10554) ?x10556) ?x10090) ?x10559) ?x10093)))
 (= (+ ?x10561 ?x10115) 0.0))))))))))))))
(assert
 (let ((?x9447 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x9444 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9441 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9438 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9433 (* 2.0 l_0_8_55)))
 (let ((?x9434 (* ?x9433 l_0_8_59)))
 (let ((?x9430 (* 2.0 l_0_8_54)))
 (let ((?x9431 (* ?x9430 l_0_8_58)))
 (let ((?x9427 (* 2.0 l_0_8_53)))
 (let ((?x9428 (* ?x9427 l_0_8_57)))
 (let ((?x9424 (* 2.0 l_0_8_52)))
 (let ((?x9425 (* ?x9424 l_0_8_56)))
 (let ((?x10000 (* 2.0 l_0_8_13)))
 (let ((?x10144 (* ?x10000 l_0_8_9)))
 (let ((?x6401 (* 2.0 l_0_8_12)))
 (let ((?x10142 (* ?x6401 l_0_8_8)))
 (let ((?x10139 (* 2.0 l_0_8_11)))
 (let ((?x10140 (* ?x10139 l_0_8_7)))
 (let ((?x10578 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x10140) ?x10142) ?x10144) ?x9425)))
 (let ((?x10585 (+ (+ (+ (+ (- (- (- ?x10578 ?x9428) ?x9431) ?x9434) ?x9438) ?x9441) ?x9444) ?x9447)))
 (= ?x10585 0.0))))))))))))))))))))))
(assert
 (let ((?x9605 (* l_0_8_75 l_0_8_75)))
 (let ((?x9602 (* l_0_8_74 l_0_8_74)))
 (let ((?x9599 (* l_0_8_73 l_0_8_73)))
 (let ((?x9596 (* l_0_8_72 l_0_8_72)))
 (let ((?x9593 (* l_0_8_71 l_0_8_71)))
 (let ((?x9634 (* l_0_8_60 l_0_8_60)))
 (let ((?x6175 (* l_0_8_59 l_0_8_59)))
 (let ((?x6155 (* l_0_8_58 l_0_8_58)))
 (let ((?x9628 (* l_0_8_57 l_0_8_57)))
 (let ((?x6153 (* l_0_8_56 l_0_8_56)))
 (let ((?x10190 (* l_0_8_15 l_0_8_15)))
 (let ((?x6784 (* l_0_8_14 l_0_8_14)))
 (let ((?x6785 (* l_0_8_13 l_0_8_13)))
 (let ((?x10593 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x6785) ?x6784)))
 (let ((?x10600 (+ (- (- (- (- (- (+ ?x10593 ?x10190) ?x6153) ?x9628) ?x6155) ?x6175) ?x9634) ?x9593)))
 (= (+ (+ (+ (+ ?x10600 ?x9596) ?x9599) ?x9602) ?x9605) 0.0)))))))))))))))))
(assert
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10444 (* ?x9179 l_0_8_65)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10442 (* ?x9176 l_0_8_64)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10440 (* ?x9173 l_0_8_50)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10438 (* ?x9170 l_0_8_49)))
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x10623 (* ?x9167 l_0_8_35)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x10621 (* ?x9164 l_0_8_34)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x5237 (* ?x9034 l_0_8_34)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x10616 (* ?x9160 l_0_8_20)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x10614 (* ?x9157 l_0_8_19)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x5258 (* ?x9030 l_0_8_19)))
 (let ((?x2539 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x10610 (- (- ?x2539 (* (* 2.0 l_0_8_122) l_0_8_124)) (* (* 2.0 l_0_8_123) l_0_8_125))))
 (let ((?x10617 (- (- (+ (- ?x10610 (* (* 4.0 l_0_8_16) l_0_8_17)) ?x5258) ?x10614) ?x10616)))
 (let ((?x10624 (+ (+ (- (+ ?x10617 (* (* 4.0 l_0_8_31) l_0_8_32)) ?x5237) ?x10621) ?x10623)))
 (let ((?x10630 (+ (- (- (- ?x10624 (* (* 4.0 l_0_8_46) l_0_8_47)) ?x10438) ?x10440) (* (* 4.0 l_0_8_61) l_0_8_62))))
 (let ((?x10638 (- (- (+ (+ ?x10630 ?x10442) ?x10444) (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= ?x10638 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9289 (* ?x9182 l_0_8_79)))
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x10513 (* ?x9286 l_0_8_69)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x10511 (* ?x9283 l_0_8_68)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x10509 (* ?x9280 l_0_8_67)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9061 (* ?x9041 l_0_8_64)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x10506 (* ?x9274 l_0_8_54)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x10504 (* ?x9271 l_0_8_53)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x2433 (* ?x9268 l_0_8_52)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x5272 (* ?x9038 l_0_8_49)))
 (let ((?x9262 (* 2.0 l_0_8_36)))
 (let ((?x10678 (* ?x9262 l_0_8_39)))
 (let ((?x9259 (* 2.0 l_0_8_35)))
 (let ((?x10676 (* ?x9259 l_0_8_38)))
 (let ((?x9256 (* 2.0 l_0_8_34)))
 (let ((?x10674 (* ?x9256 l_0_8_37)))
 (let ((?x9250 (* 2.0 l_0_8_21)))
 (let ((?x10670 (* ?x9250 l_0_8_24)))
 (let ((?x9247 (* 2.0 l_0_8_20)))
 (let ((?x10668 (* ?x9247 l_0_8_23)))
 (let ((?x9244 (* 2.0 l_0_8_19)))
 (let ((?x10666 (* ?x9244 l_0_8_22)))
 (let ((?x2712 (- (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x10659 (- (- ?x2712 (* (* 2.0 l_0_8_111) l_0_8_114)) (* (* 2.0 l_0_8_124) l_0_8_127))))
 (let ((?x10663 (- (- ?x10659 (* (* 2.0 l_0_8_125) l_0_8_128)) (* (* 2.0 l_0_8_126) l_0_8_129))))
 (let ((?x10671 (- (- (- (- ?x10663 (* (* 4.0 l_0_8_16) l_0_8_22)) ?x10666) ?x10668) ?x10670)))
 (let ((?x10679 (+ (+ (+ (+ ?x10671 (* (* 4.0 l_0_8_31) l_0_8_37)) ?x10674) ?x10676) ?x10678)))
 (let ((?x10684 (- (- (- (+ ?x10679 ?x5272) (* (* 4.0 l_0_8_46) l_0_8_52)) ?x2433) ?x10504)))
 (let ((?x10689 (+ (+ (- (- ?x10684 ?x10506) ?x9061) (* (* 4.0 l_0_8_61) l_0_8_67)) ?x10509)))
 (let ((?x10695 (- (+ (+ (+ ?x10689 ?x10511) ?x10513) ?x9289) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x10701 (- (- ?x10695 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x10701 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x10623 (* ?x9167 l_0_8_35)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x10621 (* ?x9164 l_0_8_34)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x10616 (* ?x9160 l_0_8_20)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x10614 (* ?x9157 l_0_8_19)))
 (let ((?x10745 (- (- (+ (- ?x10614 (* ?x9157 l_0_8_17)) ?x10616) (* ?x9160 l_0_8_18)) ?x10621)))
 (let ((?x10752 (+ (- (+ ?x10745 (* 2.0 (* l_0_8_32 l_0_8_32))) ?x10623) (* 2.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x10756 (- (- ?x10752 (* (* 2.0 l_0_8_47) l_0_8_47)) (* (* 2.0 l_0_8_48) l_0_8_48))))
 (let ((?x10760 (+ (+ ?x10756 (* 2.0 (* l_0_8_62 l_0_8_62))) (* 2.0 (* l_0_8_63 l_0_8_63)))))
 (= ?x10760 0.0))))))))))))))
(assert
 (let ((?x9704 (* 2.0 l_0_8_78)))
 (let ((?x9705 (* ?x9704 l_0_8_80)))
 (let ((?x9701 (* 2.0 l_0_8_77)))
 (let ((?x9702 (* ?x9701 l_0_8_79)))
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10444 (* ?x9179 l_0_8_65)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10442 (* ?x9176 l_0_8_64)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10440 (* ?x9173 l_0_8_50)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10438 (* ?x9170 l_0_8_49)))
 (let ((?x9262 (* 2.0 l_0_8_36)))
 (let ((?x10678 (* ?x9262 l_0_8_39)))
 (let ((?x9259 (* 2.0 l_0_8_35)))
 (let ((?x10676 (* ?x9259 l_0_8_38)))
 (let ((?x9256 (* 2.0 l_0_8_34)))
 (let ((?x10674 (* ?x9256 l_0_8_37)))
 (let ((?x9250 (* 2.0 l_0_8_21)))
 (let ((?x10670 (* ?x9250 l_0_8_24)))
 (let ((?x9247 (* 2.0 l_0_8_20)))
 (let ((?x10668 (* ?x9247 l_0_8_23)))
 (let ((?x9244 (* 2.0 l_0_8_19)))
 (let ((?x10666 (* ?x9244 l_0_8_22)))
 (let ((?x10782 (- (* (* (- 4.0) l_0_8_17) l_0_8_22) (* (* 4.0 l_0_8_18) l_0_8_23))))
 (let ((?x10787 (+ (+ (+ (+ ?x10782 ?x10666) ?x10668) ?x10670) (* (* 4.0 l_0_8_32) l_0_8_37))))
 (let ((?x10792 (- (- (- (+ ?x10787 (* (* 4.0 l_0_8_33) l_0_8_38)) ?x10674) ?x10676) ?x10678)))
 (let ((?x10798 (- (+ (- (+ ?x10792 ?x10438) (* (* 4.0 l_0_8_47) l_0_8_52)) ?x10440) (* (* 4.0 l_0_8_48) l_0_8_53))))
 (let ((?x10804 (+ (- (+ (- ?x10798 ?x10442) (* (* 4.0 l_0_8_62) l_0_8_67)) ?x10444) (* (* 4.0 l_0_8_63) l_0_8_68))))
 (= (+ (+ ?x10804 ?x9702) ?x9705) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9923 (* 2.0 l_0_8_81)))
 (let ((?x9924 (* ?x9923 l_0_8_84)))
 (let ((?x9918 (* 2.0 l_0_8_80)))
 (let ((?x9919 (* ?x9918 l_0_8_83)))
 (let ((?x9913 (* 2.0 l_0_8_79)))
 (let ((?x9914 (* ?x9913 l_0_8_82)))
 (let ((?x10559 (* l_0_8_70 l_0_8_70)))
 (let ((?x10889 (* 2.0 ?x10559)))
 (let ((?x10556 (* l_0_8_69 l_0_8_69)))
 (let ((?x10887 (* 2.0 ?x10556)))
 (let ((?x10554 (* l_0_8_68 l_0_8_68)))
 (let ((?x10885 (* 2.0 ?x10554)))
 (let ((?x10552 (* l_0_8_67 l_0_8_67)))
 (let ((?x10883 (* 2.0 ?x10552)))
 (let ((?x9286 (* 2.0 l_0_8_66)))
 (let ((?x10513 (* ?x9286 l_0_8_69)))
 (let ((?x9283 (* 2.0 l_0_8_65)))
 (let ((?x10511 (* ?x9283 l_0_8_68)))
 (let ((?x9280 (* 2.0 l_0_8_64)))
 (let ((?x10509 (* ?x9280 l_0_8_67)))
 (let ((?x9274 (* 2.0 l_0_8_51)))
 (let ((?x10506 (* ?x9274 l_0_8_54)))
 (let ((?x9271 (* 2.0 l_0_8_50)))
 (let ((?x10504 (* ?x9271 l_0_8_53)))
 (let ((?x9268 (* 2.0 l_0_8_49)))
 (let ((?x2433 (* ?x9268 l_0_8_52)))
 (let ((?x10866 (* l_0_8_40 l_0_8_40)))
 (let ((?x10867 (* 2.0 ?x10866)))
 (let ((?x10863 (* l_0_8_39 l_0_8_39)))
 (let ((?x10864 (* 2.0 ?x10863)))
 (let ((?x10860 (* l_0_8_38 l_0_8_38)))
 (let ((?x10861 (* 2.0 ?x10860)))
 (let ((?x10857 (* l_0_8_37 l_0_8_37)))
 (let ((?x10858 (* 2.0 ?x10857)))
 (let ((?x10852 (- (* (* (- 2.0) l_0_8_22) l_0_8_22) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x10856 (- (- ?x10852 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x10871 (+ (+ (+ (+ (+ (+ (+ ?x10856 ?x10858) ?x10861) ?x10864) ?x10867) ?x2433) ?x10504) ?x10506)))
 (let ((?x10875 (- (- ?x10871 (* (* 2.0 l_0_8_52) l_0_8_52)) (* (* 2.0 l_0_8_53) l_0_8_53))))
 (let ((?x10879 (- (- ?x10875 (* (* 2.0 l_0_8_54) l_0_8_54)) (* (* 2.0 l_0_8_55) l_0_8_55))))
 (let ((?x10890 (+ (+ (+ (+ (- (- (- ?x10879 ?x10509) ?x10511) ?x10513) ?x10883) ?x10885) ?x10887) ?x10889)))
 (= (+ (+ (+ ?x10890 ?x9914) ?x9919) ?x9924) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9106 (* l_0_8_76 l_0_8_76)))
 (let ((?x9003 (* l_0_8_61 l_0_8_61)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x10388 (* ?x9041 l_0_8_67)))
 (let ((?x9014 (* l_0_8_46 l_0_8_46)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x10377 (* ?x9038 l_0_8_52)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x7643 (* ?x9034 l_0_8_37)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x7769 (* ?x9030 l_0_8_22)))
 (let ((?x7768 (- (* (* (- 2.0) l_0_8_106) l_0_8_112) (* (* 2.0 l_0_8_121) l_0_8_127))))
 (let ((?x7672 (+ (- (+ (+ (- (+ (- ?x7768 ?x7769) ?x7643) ?x10377) ?x9014) ?x10388) ?x9003) ?x9106)))
 (= (- ?x7672 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0)))))))))))))))
(assert
 (let ((?x10945 (* l_0_8_93 l_0_8_93)))
 (let ((?x10943 (* l_0_8_92 l_0_8_92)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x9035 (* ?x9034 l_0_8_32)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x9031 (* ?x9030 l_0_8_17)))
 (let ((?x10919 (* l_0_8_123 l_0_8_123)))
 (let ((?x10917 (* l_0_8_122 l_0_8_122)))
 (let ((?x10918 (- (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) ?x10917)))
 (let ((?x10927 (- (- (+ (- ?x10918 ?x10919) ?x9031) (* (* 1.0 l_0_8_17) l_0_8_17)) (* (* 1.0 l_0_8_18) l_0_8_18))))
 (let ((?x10932 (+ (+ (- ?x10927 ?x9035) (* 1.0 (* l_0_8_32 l_0_8_32))) (* 1.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x10938 (- (- ?x10932 (* (* 1.0 l_0_8_47) l_0_8_47)) (* (* 1.0 l_0_8_48) l_0_8_48))))
 (let ((?x10942 (+ (+ ?x10938 (* 1.0 (* l_0_8_62 l_0_8_62))) (* 1.0 (* l_0_8_63 l_0_8_63)))))
 (= (- (- ?x10942 ?x10943) ?x10945) 0.0)))))))))))))))
(assert
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9183 (* ?x9182 l_0_8_77)))
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10462 (* ?x9179 l_0_8_68)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10460 (* ?x9176 l_0_8_67)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x9042 (* ?x9041 l_0_8_62)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10458 (* ?x9173 l_0_8_53)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10456 (* ?x9170 l_0_8_52)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x9039 (* ?x9038 l_0_8_47)))
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x10981 (* ?x9167 l_0_8_38)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x10979 (* ?x9164 l_0_8_37)))
 (let ((?x9034 (* 2.0 l_0_8_31)))
 (let ((?x7643 (* ?x9034 l_0_8_37)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x10976 (* ?x9160 l_0_8_23)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x10974 (* ?x9157 l_0_8_22)))
 (let ((?x9030 (* 2.0 l_0_8_16)))
 (let ((?x7769 (* ?x9030 l_0_8_22)))
 (let ((?x10968 (- (* (* (- 2.0) l_0_8_107) l_0_8_112) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x10972 (- (- ?x10968 (* (* 2.0 l_0_8_122) l_0_8_127)) (* (* 2.0 l_0_8_123) l_0_8_128))))
 (let ((?x10983 (+ (+ (+ (- (- (- (+ ?x10972 ?x7769) ?x10974) ?x10976) ?x7643) ?x10979) ?x10981) ?x9039)))
 (let ((?x10991 (- (+ (+ (+ (- (- (- ?x10983 ?x10456) ?x10458) ?x9042) ?x10460) ?x10462) ?x9183) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x10991 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x11077 (* l_0_8_99 l_0_8_99)))
 (let ((?x11075 (* l_0_8_98 l_0_8_98)))
 (let ((?x11073 (* l_0_8_97 l_0_8_97)))
 (let ((?x9182 (* 2.0 l_0_8_76)))
 (let ((?x9449 (* ?x9182 l_0_8_82)))
 (let ((?x9041 (* 2.0 l_0_8_61)))
 (let ((?x10388 (* ?x9041 l_0_8_67)))
 (let ((?x9038 (* 2.0 l_0_8_46)))
 (let ((?x10377 (* ?x9038 l_0_8_52)))
 (let ((?x11028 (* l_0_8_130 l_0_8_130)))
 (let ((?x11026 (* l_0_8_129 l_0_8_129)))
 (let ((?x11024 (* l_0_8_128 l_0_8_128)))
 (let ((?x11022 (* l_0_8_127 l_0_8_127)))
 (let ((?x11020 (* l_0_8_115 l_0_8_115)))
 (let ((?x11018 (* l_0_8_114 l_0_8_114)))
 (let ((?x11016 (* l_0_8_113 l_0_8_113)))
 (let ((?x11017 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x11016)))
 (let ((?x11032 (- (- (- (- (- (- (- ?x11017 ?x11018) ?x11020) ?x11022) ?x11024) ?x11026) ?x11028) (* (* 1.0 l_0_8_22) l_0_8_22))))
 (let ((?x11038 (- (- ?x11032 (* (* 1.0 l_0_8_23) l_0_8_23)) (* (* 1.0 l_0_8_24) l_0_8_24))))
 (let ((?x11043 (+ (- ?x11038 (* (* 1.0 l_0_8_25) l_0_8_25)) (* 1.0 (* l_0_8_37 l_0_8_37)))))
 (let ((?x11047 (+ (+ ?x11043 (* 1.0 (* l_0_8_38 l_0_8_38))) (* 1.0 (* l_0_8_39 l_0_8_39)))))
 (let ((?x11053 (- (+ (+ ?x11047 (* 1.0 (* l_0_8_40 l_0_8_40))) ?x10377) (* (* 1.0 l_0_8_52) l_0_8_52))))
 (let ((?x11059 (- (- ?x11053 (* (* 1.0 l_0_8_53) l_0_8_53)) (* (* 1.0 l_0_8_54) l_0_8_54))))
 (let ((?x11065 (+ (- (- ?x11059 (* (* 1.0 l_0_8_55) l_0_8_55)) ?x10388) (* 1.0 (* l_0_8_67 l_0_8_67)))))
 (let ((?x11069 (+ (+ ?x11065 (* 1.0 (* l_0_8_68 l_0_8_68))) (* 1.0 (* l_0_8_69 l_0_8_69)))))
 (let ((?x11076 (- (- (+ (+ ?x11069 (* 1.0 (* l_0_8_70 l_0_8_70))) ?x9449) ?x11073) ?x11075)))
 (= (- ?x11076 ?x11077) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x10750 (* l_0_8_33 l_0_8_33)))
 (let ((?x10746 (* l_0_8_32 l_0_8_32)))
 (let ((?x7897 (- (- (+ (* l_0_8_17 l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x10746) ?x10750)))
 (= ?x7897 0.0)))))
(assert
 (let ((?x9657 (* l_0_8_78 l_0_8_78)))
 (let ((?x9655 (* l_0_8_77 l_0_8_77)))
 (let ((?x10428 (* l_0_8_63 l_0_8_63)))
 (let ((?x10426 (* l_0_8_62 l_0_8_62)))
 (let ((?x10424 (* l_0_8_48 l_0_8_48)))
 (let ((?x2357 (* l_0_8_47 l_0_8_47)))
 (let ((?x9167 (* 2.0 l_0_8_33)))
 (let ((?x10981 (* ?x9167 l_0_8_38)))
 (let ((?x9164 (* 2.0 l_0_8_32)))
 (let ((?x10979 (* ?x9164 l_0_8_37)))
 (let ((?x9160 (* 2.0 l_0_8_18)))
 (let ((?x10976 (* ?x9160 l_0_8_23)))
 (let ((?x9157 (* 2.0 l_0_8_17)))
 (let ((?x10974 (* ?x9157 l_0_8_22)))
 (let ((?x11108 (- (- (+ (+ (- (- (+ ?x10974 ?x10976) ?x10979) ?x10981) ?x2357) ?x10424) ?x10426) ?x10428)))
 (= (+ (+ ?x11108 ?x9655) ?x9657) 0.0)))))))))))))))))
(assert
 (let ((?x9704 (* 2.0 l_0_8_78)))
 (let ((?x9762 (* ?x9704 l_0_8_83)))
 (let ((?x9701 (* 2.0 l_0_8_77)))
 (let ((?x9758 (* ?x9701 l_0_8_82)))
 (let ((?x9179 (* 2.0 l_0_8_63)))
 (let ((?x10462 (* ?x9179 l_0_8_68)))
 (let ((?x9176 (* 2.0 l_0_8_62)))
 (let ((?x10460 (* ?x9176 l_0_8_67)))
 (let ((?x9173 (* 2.0 l_0_8_48)))
 (let ((?x10458 (* ?x9173 l_0_8_53)))
 (let ((?x9170 (* 2.0 l_0_8_47)))
 (let ((?x10456 (* ?x9170 l_0_8_52)))
 (let ((?x10866 (* l_0_8_40 l_0_8_40)))
 (let ((?x10863 (* l_0_8_39 l_0_8_39)))
 (let ((?x10860 (* l_0_8_38 l_0_8_38)))
 (let ((?x10857 (* l_0_8_37 l_0_8_37)))
 (let ((?x1534 (* l_0_8_25 l_0_8_25)))
 (let ((?x3077 (* l_0_8_24 l_0_8_24)))
 (let ((?x3553 (+ (+ (+ (* l_0_8_22 l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x3077) ?x1534)))
 (let ((?x11124 (- (+ (+ (- (- (- (- ?x3553 ?x10857) ?x10860) ?x10863) ?x10866) ?x10456) ?x10458) ?x10460)))
 (= (+ (+ (- ?x11124 ?x10462) ?x9758) ?x9762) 0.0))))))))))))))))))))))
(assert
 (let ((?x10113 (* l_0_8_85 l_0_8_85)))
 (let ((?x10108 (* l_0_8_84 l_0_8_84)))
 (let ((?x10103 (* l_0_8_83 l_0_8_83)))
 (let ((?x10098 (* l_0_8_82 l_0_8_82)))
 (let ((?x10559 (* l_0_8_70 l_0_8_70)))
 (let ((?x10556 (* l_0_8_69 l_0_8_69)))
 (let ((?x10554 (* l_0_8_68 l_0_8_68)))
 (let ((?x10552 (* l_0_8_67 l_0_8_67)))
 (let ((?x10550 (* l_0_8_55 l_0_8_55)))
 (let ((?x10548 (* l_0_8_54 l_0_8_54)))
 (let ((?x11143 (+ (+ (+ (* l_0_8_52 l_0_8_52) (* l_0_8_53 l_0_8_53)) ?x10548) ?x10550)))
 (let ((?x11150 (+ (+ (+ (- (- (- (- ?x11143 ?x10552) ?x10554) ?x10556) ?x10559) ?x10098) ?x10103) ?x10108)))
 (= (+ ?x11150 ?x10113) 0.0))))))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_121 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_130 0.0))
(assert
 (>= l_0_8_135 0.0))
(assert
 (let ((?x11278 (* l_0_9_96 l_0_9_96)))
 (let ((?x11276 (* l_0_9_95 l_0_9_95)))
 (let ((?x11274 (* l_0_9_94 l_0_9_94)))
 (let ((?x11263 (* l_0_9_61 l_0_9_61)))
 (let ((?x11249 (* l_0_9_46 l_0_9_46)))
 (let ((?x11220 (* l_0_9_141 l_0_9_141)))
 (let ((?x11218 (* l_0_9_140 l_0_9_140)))
 (let ((?x11216 (* l_0_9_139 l_0_9_139)))
 (let ((?x11214 (* l_0_9_126 l_0_9_126)))
 (let ((?x11212 (* l_0_9_125 l_0_9_125)))
 (let ((?x11210 (* l_0_9_124 l_0_9_124)))
 (let ((?x11208 (* l_0_9_111 l_0_9_111)))
 (let ((?x11206 (* l_0_9_110 l_0_9_110)))
 (let ((?x11209 (- (- (- (* l_0_9_1 l_0_9_1) (* l_0_9_109 l_0_9_109)) ?x11206) ?x11208)))
 (let ((?x11224 (- (- (- (- (- (- (- ?x11209 ?x11210) ?x11212) ?x11214) ?x11216) ?x11218) ?x11220) (* (* 4.0 l_0_9_16) l_0_9_19))))
 (let ((?x11230 (- (- ?x11224 (* (* 1.0 l_0_9_19) l_0_9_19)) (* (* 1.0 l_0_9_20) l_0_9_20))))
 (let ((?x11236 (+ (- ?x11230 (* (* 1.0 l_0_9_21) l_0_9_21)) (* (* 4.0 l_0_9_31) l_0_9_34))))
 (let ((?x11242 (+ (+ ?x11236 (* 1.0 (* l_0_9_34 l_0_9_34))) (* 1.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x11248 (- (+ ?x11242 (* 1.0 (* l_0_9_36 l_0_9_36))) (* (* 4.0 l_0_9_46) l_0_9_49))))
 (let ((?x11256 (- (- (- ?x11248 ?x11249) (* (* 1.0 l_0_9_49) l_0_9_49)) (* (* 1.0 l_0_9_50) l_0_9_50))))
 (let ((?x11262 (+ (- ?x11256 (* (* 1.0 l_0_9_51) l_0_9_51)) (* (* 4.0 l_0_9_61) l_0_9_64))))
 (let ((?x11270 (+ (+ (+ ?x11262 ?x11263) (* 1.0 (* l_0_9_64 l_0_9_64))) (* 1.0 (* l_0_9_65 l_0_9_65)))))
 (let ((?x11279 (- (- (- (+ ?x11270 (* 1.0 (* l_0_9_66 l_0_9_66))) ?x11274) ?x11276) ?x11278)))
 (= (+ ?x11279 1.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11263 (* l_0_9_61 l_0_9_61)))
 (let ((?x11360 (* 2.0 ?x11263)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11358 (* ?x11357 l_0_9_64)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11353 (* ?x11352 l_0_9_49)))
 (let ((?x11349 (* l_0_9_31 l_0_9_31)))
 (let ((?x11350 (* 2.0 ?x11349)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11347 (* ?x11346 l_0_9_34)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11342 (* ?x11341 l_0_9_19)))
 (let ((?x11337 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x11345 (- (- (- ?x11337 (* (* 2.0 l_0_9_136) l_0_9_139)) ?x11342) (* ?x11341 l_0_9_16))))
 (let ((?x11361 (+ (+ (- (- (+ (+ ?x11345 ?x11347) ?x11350) ?x11353) (* ?x11352 l_0_9_46)) ?x11358) ?x11360)))
 (= (+ (- ?x11361 (* (* 2.0 l_0_9_91) l_0_9_94)) 4.0) 0.0)))))))))))))))))
(assert
 (let ((?x11393 (* l_0_9_91 l_0_9_91)))
 (let ((?x8082 (* l_0_9_136 l_0_9_136)))
 (let ((?x3739 (* l_0_9_121 l_0_9_121)))
 (let ((?x8076 (- (- (- (* (- _a_0_) _a_4_) _a_3_) (* l_0_9_106 l_0_9_106)) ?x3739)))
 (let ((?x11387 (+ (- (- ?x8076 ?x8082) (* (* 1.0 l_0_9_16) l_0_9_16)) (* 1.0 (* l_0_9_31 l_0_9_31)))))
 (let ((?x11392 (+ (- ?x11387 (* (* 1.0 l_0_9_46) l_0_9_46)) (* 1.0 (* l_0_9_61 l_0_9_61)))))
 (= (+ (- ?x11392 ?x11393) 4.0) 0.0))))))))
(assert
 (let ((?x11428 (* l_0_9_76 l_0_9_76)))
 (let ((?x11263 (* l_0_9_61 l_0_9_61)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11425 (* ?x11357 l_0_9_67)))
 (let ((?x11249 (* l_0_9_46 l_0_9_46)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11422 (* ?x11352 l_0_9_52)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11420 (* ?x11346 l_0_9_37)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11418 (* ?x11341 l_0_9_22)))
 (let ((?x11415 (- (- (- _a_2_) (* (* 2.0 l_0_9_106) l_0_9_112)) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x11423 (- (+ (- (- ?x11415 (* (* 2.0 l_0_9_136) l_0_9_142)) ?x11418) ?x11420) ?x11422)))
 (let ((?x11431 (- (+ (- (+ (+ ?x11423 ?x11249) ?x11425) ?x11263) ?x11428) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= ?x11431 0.0))))))))))))))))
(assert
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11462 (* ?x11357 l_0_9_62)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11460 (* ?x11352 l_0_9_47)))
 (let ((?x11349 (* l_0_9_31 l_0_9_31)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11457 (* ?x11346 l_0_9_32)))
 (let ((?x11376 (* l_0_9_16 l_0_9_16)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11454 (* ?x11341 l_0_9_17)))
 (let ((?x11451 (- (- (* (- _a_1_) _a_4_) (* (* 2.0 l_0_9_106) l_0_9_107)) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x11458 (+ (+ (- (- ?x11451 (* (* 2.0 l_0_9_136) l_0_9_137)) ?x11454) ?x11376) ?x11457)))
 (let ((?x11465 (- (+ (- (- ?x11458 ?x11349) ?x11460) ?x11462) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x11465 0.0)))))))))))))))
(assert
 (let ((?x11428 (* l_0_9_76 l_0_9_76)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11515 (* ?x11357 l_0_9_71)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11513 (* ?x11352 l_0_9_56)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11511 (* ?x11346 l_0_9_41)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11509 (* ?x11341 l_0_9_26)))
 (let ((?x11504 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_101) l_0_9_91)) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x11508 (- (- ?x11504 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_136) l_0_9_146))))
 (= (- (+ (- (+ (- ?x11508 ?x11509) ?x11511) ?x11513) ?x11515) ?x11428) 0.0)))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11595 (* ?x11594 l_0_9_77)))
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x11592 (* ?x11591 l_0_9_72)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x11589 (* ?x11588 l_0_9_71)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x11586 (* ?x11585 l_0_9_57)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x11583 (* ?x11582 l_0_9_56)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x11580 (* ?x11579 l_0_9_42)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x11577 (* ?x11576 l_0_9_41)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11511 (* ?x11346 l_0_9_41)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x11573 (* ?x11572 l_0_9_27)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x11570 (* ?x11569 l_0_9_26)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11509 (* ?x11341 l_0_9_26)))
 (let ((?x11546 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x11552 (- (- ?x11546 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_107) l_0_9_116))))
 (let ((?x11558 (- (- ?x11552 (* (* 2.0 l_0_9_108) l_0_9_117)) (* (* 2.0 l_0_9_122) l_0_9_131))))
 (let ((?x11564 (- (- ?x11558 (* (* 2.0 l_0_9_123) l_0_9_132)) (* (* 2.0 l_0_9_137) l_0_9_146))))
 (let ((?x11574 (- (- (+ (- ?x11564 (* (* 2.0 l_0_9_138) l_0_9_147)) ?x11509) ?x11570) ?x11573)))
 (let ((?x11593 (+ (+ (- (- (+ (+ (- ?x11574 ?x11511) ?x11577) ?x11580) ?x11583) ?x11586) ?x11589) ?x11592)))
 (= (- ?x11593 ?x11595) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11724 (* ?x11594 l_0_9_79)))
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x11722 (* ?x11721 l_0_9_73)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x11719 (* ?x11718 l_0_9_72)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x11716 (* ?x11715 l_0_9_71)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x11711 (* ?x11710 l_0_9_58)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x11708 (* ?x11707 l_0_9_57)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x11705 (* ?x11704 l_0_9_56)))
 (let ((?x11699 (* 2.0 l_0_9_36)))
 (let ((?x11700 (* ?x11699 l_0_9_43)))
 (let ((?x11696 (* 2.0 l_0_9_35)))
 (let ((?x11697 (* ?x11696 l_0_9_42)))
 (let ((?x11693 (* 2.0 l_0_9_34)))
 (let ((?x11694 (* ?x11693 l_0_9_41)))
 (let ((?x11688 (* 2.0 l_0_9_21)))
 (let ((?x11689 (* ?x11688 l_0_9_28)))
 (let ((?x11685 (* 2.0 l_0_9_20)))
 (let ((?x11686 (* ?x11685 l_0_9_27)))
 (let ((?x11682 (* 2.0 l_0_9_19)))
 (let ((?x11683 (* ?x11682 l_0_9_26)))
 (let ((?x11647 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_101) l_0_9_94))))
 (let ((?x11652 (- (- ?x11647 (* (* 2.0 l_0_9_102) l_0_9_95)) (* (* 2.0 l_0_9_103) l_0_9_96))))
 (let ((?x11658 (- (- ?x11652 (* (* 2.0 l_0_9_109) l_0_9_116)) (* (* 2.0 l_0_9_110) l_0_9_117))))
 (let ((?x11664 (- (- ?x11658 (* (* 2.0 l_0_9_111) l_0_9_118)) (* (* 2.0 l_0_9_124) l_0_9_131))))
 (let ((?x11670 (- (- ?x11664 (* (* 2.0 l_0_9_125) l_0_9_132)) (* (* 2.0 l_0_9_126) l_0_9_133))))
 (let ((?x11676 (- (- ?x11670 (* (* 2.0 l_0_9_139) l_0_9_146)) (* (* 2.0 l_0_9_140) l_0_9_147))))
 (let ((?x11681 (- (- ?x11676 (* (* 2.0 l_0_9_141) l_0_9_148)) (* (* 4.0 l_0_9_16) l_0_9_26))))
 (let ((?x11692 (+ (- (- (- ?x11681 ?x11683) ?x11686) ?x11689) (* (* 4.0 l_0_9_31) l_0_9_41))))
 (let ((?x11703 (- (+ (+ (+ ?x11692 ?x11694) ?x11697) ?x11700) (* (* 4.0 l_0_9_46) l_0_9_56))))
 (let ((?x11714 (+ (- (- (- ?x11703 ?x11705) ?x11708) ?x11711) (* (* 4.0 l_0_9_61) l_0_9_71))))
 (= (- (+ (+ (+ ?x11714 ?x11716) ?x11719) ?x11722) ?x11724) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11888 (* ?x11594 l_0_9_86)))
 (let ((?x11886 (* ?x11594 l_0_9_82)))
 (let ((?x11884 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x11881 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11878 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11875 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11515 (* ?x11357 l_0_9_71)))
 (let ((?x11870 (* 2.0 l_0_9_55)))
 (let ((?x11871 (* ?x11870 l_0_9_59)))
 (let ((?x11867 (* 2.0 l_0_9_54)))
 (let ((?x11868 (* ?x11867 l_0_9_58)))
 (let ((?x11864 (* 2.0 l_0_9_53)))
 (let ((?x11865 (* ?x11864 l_0_9_57)))
 (let ((?x11861 (* 2.0 l_0_9_52)))
 (let ((?x11862 (* ?x11861 l_0_9_56)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11513 (* ?x11352 l_0_9_56)))
 (let ((?x11858 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x11855 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x11852 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x11849 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x11845 (* 2.0 l_0_9_25)))
 (let ((?x11846 (* ?x11845 l_0_9_29)))
 (let ((?x11842 (* 2.0 l_0_9_24)))
 (let ((?x11843 (* ?x11842 l_0_9_28)))
 (let ((?x11839 (* 2.0 l_0_9_23)))
 (let ((?x11840 (* ?x11839 l_0_9_27)))
 (let ((?x11837 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x11793 (- (* (* (- 2.0) l_0_9_1) l_0_9_7) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x11797 (- (- ?x11793 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x11802 (- (- ?x11797 (* (* 2.0 l_0_9_103) l_0_9_99)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x11808 (- (- ?x11802 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x11814 (- (- ?x11808 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_127) l_0_9_131))))
 (let ((?x11820 (- (- ?x11814 (* (* 2.0 l_0_9_128) l_0_9_132)) (* (* 2.0 l_0_9_129) l_0_9_133))))
 (let ((?x11826 (- (- ?x11820 (* (* 2.0 l_0_9_130) l_0_9_134)) (* (* 2.0 l_0_9_142) l_0_9_146))))
 (let ((?x11832 (- (- ?x11826 (* (* 2.0 l_0_9_143) l_0_9_147)) (* (* 2.0 l_0_9_144) l_0_9_148))))
 (let ((?x11844 (- (- (- (- ?x11832 (* (* 2.0 l_0_9_145) l_0_9_149)) ?x11837) ?x11840) ?x11843)))
 (let ((?x11863 (- (+ (+ (+ (+ (+ (- ?x11844 ?x11846) ?x11849) ?x11852) ?x11855) ?x11858) ?x11513) ?x11862)))
 (let ((?x11882 (+ (+ (+ (- (- (- (- ?x11863 ?x11865) ?x11868) ?x11871) ?x11515) ?x11875) ?x11878) ?x11881)))
 (= (+ (- (+ ?x11882 ?x11884) ?x11886) ?x11888) 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11888 (* ?x11594 l_0_9_86)))
 (let ((?x11997 (* l_0_9_150 l_0_9_150)))
 (let ((?x11995 (* l_0_9_149 l_0_9_149)))
 (let ((?x11993 (* l_0_9_148 l_0_9_148)))
 (let ((?x11991 (* l_0_9_147 l_0_9_147)))
 (let ((?x11989 (* l_0_9_146 l_0_9_146)))
 (let ((?x11987 (* l_0_9_135 l_0_9_135)))
 (let ((?x11985 (* l_0_9_134 l_0_9_134)))
 (let ((?x11983 (* l_0_9_133 l_0_9_133)))
 (let ((?x11981 (* l_0_9_132 l_0_9_132)))
 (let ((?x11979 (* l_0_9_131 l_0_9_131)))
 (let ((?x11977 (* l_0_9_120 l_0_9_120)))
 (let ((?x11975 (* l_0_9_119 l_0_9_119)))
 (let ((?x11973 (* l_0_9_118 l_0_9_118)))
 (let ((?x11971 (* l_0_9_117 l_0_9_117)))
 (let ((?x11969 (* l_0_9_116 l_0_9_116)))
 (let ((?x11967 (* l_0_9_105 l_0_9_105)))
 (let ((?x11965 (* l_0_9_104 l_0_9_104)))
 (let ((?x11963 (* l_0_9_103 l_0_9_103)))
 (let ((?x11961 (* l_0_9_102 l_0_9_102)))
 (let ((?x11962 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* l_0_9_101 l_0_9_101)) ?x11961)))
 (let ((?x11976 (- (- (- (- (- (- (- ?x11962 ?x11963) ?x11965) ?x11967) ?x11969) ?x11971) ?x11973) ?x11975)))
 (let ((?x11990 (- (- (- (- (- (- (- ?x11976 ?x11977) ?x11979) ?x11981) ?x11983) ?x11985) ?x11987) ?x11989)))
 (let ((?x12001 (- (- (- (- (- ?x11990 ?x11991) ?x11993) ?x11995) ?x11997) (* (* 1.0 l_0_9_26) l_0_9_26))))
 (let ((?x12007 (- (- ?x12001 (* (* 1.0 l_0_9_27) l_0_9_27)) (* (* 1.0 l_0_9_28) l_0_9_28))))
 (let ((?x12013 (- (- ?x12007 (* (* 1.0 l_0_9_29) l_0_9_29)) (* (* 1.0 l_0_9_30) l_0_9_30))))
 (let ((?x12019 (+ (+ ?x12013 (* 1.0 (* l_0_9_41 l_0_9_41))) (* 1.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x12025 (+ (+ ?x12019 (* 1.0 (* l_0_9_43 l_0_9_43))) (* 1.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x12031 (- (+ ?x12025 (* 1.0 (* l_0_9_45 l_0_9_45))) (* (* 1.0 l_0_9_56) l_0_9_56))))
 (let ((?x12037 (- (- ?x12031 (* (* 1.0 l_0_9_57) l_0_9_57)) (* (* 1.0 l_0_9_58) l_0_9_58))))
 (let ((?x12043 (- (- ?x12037 (* (* 1.0 l_0_9_59) l_0_9_59)) (* (* 1.0 l_0_9_60) l_0_9_60))))
 (let ((?x12049 (+ (+ ?x12043 (* 1.0 (* l_0_9_71 l_0_9_71))) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x12055 (+ (+ ?x12049 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (= (- (+ ?x12055 (* 1.0 (* l_0_9_75 l_0_9_75))) ?x11888) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12133 (* l_0_9_78 l_0_9_78)))
 (let ((?x12131 (* l_0_9_77 l_0_9_77)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x11580 (* ?x11579 l_0_9_42)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x11577 (* ?x11576 l_0_9_41)))
 (let ((?x12127 (* l_0_9_3 l_0_9_3)))
 (let ((?x12125 (* l_0_9_2 l_0_9_2)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x11573 (* ?x11572 l_0_9_27)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x11570 (* ?x11569 l_0_9_26)))
 (let ((?x12134 (- (- (- (- (- (- (+ ?x11570 ?x11573) ?x12125) ?x12127) ?x11577) ?x11580) ?x12131) ?x12133)))
 (= ?x12134 0.0)))))))))))))))
(assert
 (let ((?x12177 (* 2.0 l_0_9_78)))
 (let ((?x12178 (* ?x12177 l_0_9_80)))
 (let ((?x12174 (* 2.0 l_0_9_77)))
 (let ((?x12175 (* ?x12174 l_0_9_79)))
 (let ((?x11699 (* 2.0 l_0_9_36)))
 (let ((?x11700 (* ?x11699 l_0_9_43)))
 (let ((?x11696 (* 2.0 l_0_9_35)))
 (let ((?x11697 (* ?x11696 l_0_9_42)))
 (let ((?x11693 (* 2.0 l_0_9_34)))
 (let ((?x11694 (* ?x11693 l_0_9_41)))
 (let ((?x12150 (* 2.0 l_0_9_3)))
 (let ((?x12151 (* ?x12150 l_0_9_5)))
 (let ((?x11688 (* 2.0 l_0_9_21)))
 (let ((?x11689 (* ?x11688 l_0_9_28)))
 (let ((?x11685 (* 2.0 l_0_9_20)))
 (let ((?x11686 (* ?x11685 l_0_9_27)))
 (let ((?x12145 (* 2.0 l_0_9_2)))
 (let ((?x12146 (* ?x12145 l_0_9_4)))
 (let ((?x11682 (* 2.0 l_0_9_19)))
 (let ((?x11683 (* ?x11682 l_0_9_26)))
 (let ((?x12143 (- (* (* (- 4.0) l_0_9_17) l_0_9_26) (* (* 4.0 l_0_9_18) l_0_9_27))))
 (let ((?x12155 (+ (- (+ (+ (- (+ ?x12143 ?x11683) ?x12146) ?x11686) ?x11689) ?x12151) (* (* 4.0 l_0_9_32) l_0_9_41))))
 (let ((?x12161 (- (- (- (+ ?x12155 (* (* 4.0 l_0_9_33) l_0_9_42)) ?x11694) ?x11697) ?x11700)))
 (let ((?x12167 (- (- ?x12161 (* (* 4.0 l_0_9_47) l_0_9_56)) (* (* 4.0 l_0_9_48) l_0_9_57))))
 (let ((?x12173 (+ (+ ?x12167 (* (* 4.0 l_0_9_62) l_0_9_71)) (* (* 4.0 l_0_9_63) l_0_9_72))))
 (= (- (- ?x12173 ?x12175) ?x12178) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x12177 (* 2.0 l_0_9_78)))
 (let ((?x12226 (* ?x12177 l_0_9_87)))
 (let ((?x12224 (* ?x12177 l_0_9_83)))
 (let ((?x12174 (* 2.0 l_0_9_77)))
 (let ((?x12222 (* ?x12174 l_0_9_86)))
 (let ((?x12220 (* ?x12174 l_0_9_82)))
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x11592 (* ?x11591 l_0_9_72)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x11589 (* ?x11588 l_0_9_71)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x11586 (* ?x11585 l_0_9_57)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x11583 (* ?x11582 l_0_9_56)))
 (let ((?x11858 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x11855 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x11852 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x11849 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x12150 (* 2.0 l_0_9_3)))
 (let ((?x12210 (* ?x12150 l_0_9_8)))
 (let ((?x11845 (* 2.0 l_0_9_25)))
 (let ((?x11846 (* ?x11845 l_0_9_29)))
 (let ((?x11842 (* 2.0 l_0_9_24)))
 (let ((?x11843 (* ?x11842 l_0_9_28)))
 (let ((?x11839 (* 2.0 l_0_9_23)))
 (let ((?x11840 (* ?x11839 l_0_9_27)))
 (let ((?x11837 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x12209 (+ (+ (+ (+ (* (* (- 2.0) l_0_9_2) l_0_9_7) ?x11837) ?x11840) ?x11843) ?x11846)))
 (let ((?x12217 (+ (+ (- (- (- (- (- ?x12209 ?x12210) ?x11849) ?x11852) ?x11855) ?x11858) ?x11583) ?x11586)))
 (= (+ (- (+ (- (- (- ?x12217 ?x11589) ?x11592) ?x12220) ?x12222) ?x12224) ?x12226) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x12177 (* 2.0 l_0_9_78)))
 (let ((?x12226 (* ?x12177 l_0_9_87)))
 (let ((?x12174 (* 2.0 l_0_9_77)))
 (let ((?x12222 (* ?x12174 l_0_9_86)))
 (let ((?x12026 (* l_0_9_45 l_0_9_45)))
 (let ((?x12023 (* l_0_9_44 l_0_9_44)))
 (let ((?x12020 (* l_0_9_43 l_0_9_43)))
 (let ((?x12017 (* l_0_9_42 l_0_9_42)))
 (let ((?x12014 (* l_0_9_41 l_0_9_41)))
 (let ((?x4991 (* l_0_9_30 l_0_9_30)))
 (let ((?x4977 (* l_0_9_29 l_0_9_29)))
 (let ((?x4981 (* l_0_9_28 l_0_9_28)))
 (let ((?x4925 (* l_0_9_27 l_0_9_27)))
 (let ((?x12088 (* l_0_9_26 l_0_9_26)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x8864 (* ?x8867 l_0_9_3)))
 (let ((?x8879 (+ (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x8864) ?x12088) ?x4925) ?x4981)))
 (let ((?x12231 (- (- (- (- (- (+ (+ ?x8879 ?x4977) ?x4991) ?x12014) ?x12017) ?x12020) ?x12023) ?x12026)))
 (= (- (- ?x12231 ?x12222) ?x12226) 0.0))))))))))))))))))))
(assert
 (let ((?x12273 (* l_0_9_81 l_0_9_81)))
 (let ((?x12271 (* l_0_9_80 l_0_9_80)))
 (let ((?x12269 (* l_0_9_79 l_0_9_79)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11515 (* ?x11357 l_0_9_71)))
 (let ((?x12257 (* l_0_9_6 l_0_9_6)))
 (let ((?x12249 (* l_0_9_5 l_0_9_5)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11513 (* ?x11352 l_0_9_56)))
 (let ((?x12243 (* l_0_9_4 l_0_9_4)))
 (let ((?x5249 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 4.0 l_0_9_19) l_0_9_26))))
 (let ((?x4113 (- (- ?x5249 (* (* 4.0 l_0_9_20) l_0_9_27)) (* (* 4.0 l_0_9_21) l_0_9_28))))
 (let ((?x9013 (+ (+ ?x4113 (* (* 4.0 l_0_9_34) l_0_9_41)) (* (* 4.0 l_0_9_35) l_0_9_42))))
 (let ((?x12248 (- (- (- (+ ?x9013 (* (* 4.0 l_0_9_36) l_0_9_43)) ?x12243) ?x11513) (* (* 4.0 l_0_9_49) l_0_9_56))))
 (let ((?x12256 (- (- (- ?x12248 ?x12249) (* (* 4.0 l_0_9_50) l_0_9_57)) (* (* 4.0 l_0_9_51) l_0_9_58))))
 (let ((?x12265 (+ (+ (+ (- ?x12256 ?x12257) ?x11515) (* (* 4.0 l_0_9_64) l_0_9_71)) (* (* 4.0 l_0_9_65) l_0_9_72))))
 (let ((?x12274 (- (- (- (+ ?x12265 (* (* 4.0 l_0_9_66) l_0_9_73)) ?x12269) ?x12271) ?x12273)))
 (= ?x12274 0.0)))))))))))))))))))
(assert
 (let ((?x12383 (* 2.0 l_0_9_81)))
 (let ((?x12386 (* ?x12383 l_0_9_88)))
 (let ((?x12384 (* ?x12383 l_0_9_84)))
 (let ((?x12378 (* 2.0 l_0_9_80)))
 (let ((?x12381 (* ?x12378 l_0_9_87)))
 (let ((?x12379 (* ?x12378 l_0_9_83)))
 (let ((?x12373 (* 2.0 l_0_9_79)))
 (let ((?x12376 (* ?x12373 l_0_9_86)))
 (let ((?x12374 (* ?x12373 l_0_9_82)))
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x11722 (* ?x11721 l_0_9_73)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x11719 (* ?x11718 l_0_9_72)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x11716 (* ?x11715 l_0_9_71)))
 (let ((?x12356 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x11711 (* ?x11710 l_0_9_58)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x11708 (* ?x11707 l_0_9_57)))
 (let ((?x12339 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x11705 (* ?x11704 l_0_9_56)))
 (let ((?x12332 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12315 (- (* (* (- 4.0) l_0_9_22) l_0_9_26) (* (* 4.0 l_0_9_23) l_0_9_27))))
 (let ((?x12321 (- (- ?x12315 (* (* 4.0 l_0_9_24) l_0_9_28)) (* (* 4.0 l_0_9_25) l_0_9_29))))
 (let ((?x12327 (+ (+ ?x12321 (* (* 4.0 l_0_9_37) l_0_9_41)) (* (* 4.0 l_0_9_38) l_0_9_42))))
 (let ((?x12336 (+ (- (+ ?x12327 (* (* 4.0 l_0_9_39) l_0_9_43)) ?x12332) (* (* 4.0 l_0_9_40) l_0_9_44))))
 (let ((?x12345 (- (+ (+ (- (+ ?x12336 ?x11705) ?x12339) ?x11708) ?x11711) (* (* 4.0 l_0_9_52) l_0_9_56))))
 (let ((?x12351 (- (- ?x12345 (* (* 4.0 l_0_9_53) l_0_9_57)) (* (* 4.0 l_0_9_54) l_0_9_58))))
 (let ((?x12359 (- (- (- (- ?x12351 (* (* 4.0 l_0_9_55) l_0_9_59)) ?x12356) ?x11716) ?x11719)))
 (let ((?x12366 (+ (+ (- ?x12359 ?x11722) (* (* 4.0 l_0_9_67) l_0_9_71)) (* (* 4.0 l_0_9_68) l_0_9_72))))
 (let ((?x12372 (+ (+ ?x12366 (* (* 4.0 l_0_9_69) l_0_9_73)) (* (* 4.0 l_0_9_70) l_0_9_74))))
 (= (+ (- (+ (- (+ (- ?x12372 ?x12374) ?x12376) ?x12379) ?x12381) ?x12384) ?x12386) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12383 (* 2.0 l_0_9_81)))
 (let ((?x12386 (* ?x12383 l_0_9_88)))
 (let ((?x12378 (* 2.0 l_0_9_80)))
 (let ((?x12381 (* ?x12378 l_0_9_87)))
 (let ((?x12373 (* 2.0 l_0_9_79)))
 (let ((?x12376 (* ?x12373 l_0_9_86)))
 (let ((?x12438 (* 2.0 l_0_9_13)))
 (let ((?x12439 (* ?x12438 l_0_9_6)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x5575 (* ?x8867 l_0_9_5)))
 (let ((?x12443 (- (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x5575) ?x12439) (* (* 2.0 l_0_9_26) l_0_9_26))))
 (let ((?x12449 (- (- ?x12443 (* (* 2.0 l_0_9_27) l_0_9_27)) (* (* 2.0 l_0_9_28) l_0_9_28))))
 (let ((?x12455 (- (- ?x12449 (* (* 2.0 l_0_9_29) l_0_9_29)) (* (* 2.0 l_0_9_30) l_0_9_30))))
 (let ((?x12459 (+ (+ ?x12455 (* 2.0 (* l_0_9_41 l_0_9_41))) (* 2.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x12463 (+ (+ ?x12459 (* 2.0 (* l_0_9_43 l_0_9_43))) (* 2.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x12468 (- (+ ?x12463 (* 2.0 (* l_0_9_45 l_0_9_45))) (* (* 2.0 l_0_9_56) l_0_9_56))))
 (let ((?x12474 (- (- ?x12468 (* (* 2.0 l_0_9_57) l_0_9_57)) (* (* 2.0 l_0_9_58) l_0_9_58))))
 (let ((?x12480 (- (- ?x12474 (* (* 2.0 l_0_9_59) l_0_9_59)) (* (* 2.0 l_0_9_60) l_0_9_60))))
 (let ((?x12484 (+ (+ ?x12480 (* 2.0 (* l_0_9_71 l_0_9_71))) (* 2.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x12488 (+ (+ ?x12484 (* 2.0 (* l_0_9_73 l_0_9_73))) (* 2.0 (* l_0_9_74 l_0_9_74)))))
 (let ((?x12493 (- (- (- (+ ?x12488 (* 2.0 (* l_0_9_75 l_0_9_75))) ?x12376) ?x12381) ?x12386)))
 (= ?x12493 0.0)))))))))))))))))))))))
(assert
 (let ((?x12575 (* l_0_9_9 l_0_9_9)))
 (let ((?x12573 (* l_0_9_85 l_0_9_85)))
 (let ((?x12571 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12568 (* l_0_9_84 l_0_9_84)))
 (let ((?x12566 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12563 (* l_0_9_83 l_0_9_83)))
 (let ((?x12561 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12558 (* l_0_9_82 l_0_9_82)))
 (let ((?x12556 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x12553 (* l_0_9_8 l_0_9_8)))
 (let ((?x11884 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x12550 (* l_0_9_7 l_0_9_7)))
 (let ((?x11881 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11878 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11875 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11870 (* 2.0 l_0_9_55)))
 (let ((?x11871 (* ?x11870 l_0_9_59)))
 (let ((?x11867 (* 2.0 l_0_9_54)))
 (let ((?x11868 (* ?x11867 l_0_9_58)))
 (let ((?x11864 (* 2.0 l_0_9_53)))
 (let ((?x11865 (* ?x11864 l_0_9_57)))
 (let ((?x12544 (+ (+ (* (- l_0_9_10) l_0_9_10) (* (* 2.0 l_0_9_52) l_0_9_56)) ?x11865)))
 (let ((?x12552 (- (- (- (- (- (+ (+ ?x12544 ?x11868) ?x11871) ?x11875) ?x11878) ?x11881) ?x12550) ?x11884)))
 (let ((?x12569 (- (+ (- (+ (- (+ (- ?x12552 ?x12553) ?x12556) ?x12558) ?x12561) ?x12563) ?x12566) ?x12568)))
 (= (- (- (+ ?x12569 ?x12571) ?x12573) ?x12575) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x12617 (* l_0_9_90 l_0_9_90)))
 (let ((?x12615 (* l_0_9_89 l_0_9_89)))
 (let ((?x12613 (* l_0_9_88 l_0_9_88)))
 (let ((?x12611 (* l_0_9_87 l_0_9_87)))
 (let ((?x12609 (* l_0_9_86 l_0_9_86)))
 (let ((?x12571 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12566 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12561 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12556 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x12056 (* l_0_9_75 l_0_9_75)))
 (let ((?x12053 (* l_0_9_74 l_0_9_74)))
 (let ((?x12050 (* l_0_9_73 l_0_9_73)))
 (let ((?x12047 (* l_0_9_72 l_0_9_72)))
 (let ((?x12044 (* l_0_9_71 l_0_9_71)))
 (let ((?x4997 (* l_0_9_60 l_0_9_60)))
 (let ((?x12104 (* l_0_9_59 l_0_9_59)))
 (let ((?x8787 (* l_0_9_58 l_0_9_58)))
 (let ((?x12099 (* l_0_9_57 l_0_9_57)))
 (let ((?x12095 (* l_0_9_56 l_0_9_56)))
 (let ((?x12438 (* 2.0 l_0_9_13)))
 (let ((?x12593 (* ?x12438 l_0_9_9)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x12591 (* ?x8867 l_0_9_8)))
 (let ((?x12588 (* 2.0 l_0_9_11)))
 (let ((?x12589 (* ?x12588 l_0_9_7)))
 (let ((?x12595 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x12589) ?x12591) ?x12593) ?x12095)))
 (let ((?x12602 (- (- (- (+ (+ (+ (+ ?x12595 ?x12099) ?x8787) ?x12104) ?x4997) ?x12044) ?x12047) ?x12050)))
 (let ((?x12610 (+ (- (- (- (- (- (- ?x12602 ?x12053) ?x12056) ?x12556) ?x12561) ?x12566) ?x12571) ?x12609)))
 (= (+ (+ (+ (+ ?x12610 ?x12611) ?x12613) ?x12615) ?x12617) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x12617 (* l_0_9_90 l_0_9_90)))
 (let ((?x12615 (* l_0_9_89 l_0_9_89)))
 (let ((?x12613 (* l_0_9_88 l_0_9_88)))
 (let ((?x12611 (* l_0_9_87 l_0_9_87)))
 (let ((?x12609 (* l_0_9_86 l_0_9_86)))
 (let ((?x12647 (* l_0_9_15 l_0_9_15)))
 (let ((?x12645 (* l_0_9_14 l_0_9_14)))
 (let ((?x12643 (* l_0_9_13 l_0_9_13)))
 (let ((?x12646 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x12643) ?x12645)))
 (= (- (- (- (- (- (- ?x12646 ?x12647) ?x12609) ?x12611) ?x12613) ?x12615) ?x12617) 0.0)))))))))))
(assert
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11462 (* ?x11357 l_0_9_62)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11460 (* ?x11352 l_0_9_47)))
 (let ((?x11243 (* l_0_9_36 l_0_9_36)))
 (let ((?x11240 (* l_0_9_35 l_0_9_35)))
 (let ((?x11237 (* l_0_9_34 l_0_9_34)))
 (let ((?x3596 (* l_0_9_21 l_0_9_21)))
 (let ((?x11301 (* l_0_9_20 l_0_9_20)))
 (let ((?x3593 (* l_0_9_19 l_0_9_19)))
 (let ((?x9479 (- (* (* 2.0 l_0_9_1) l_0_9_2) (* (* 4.0 l_0_9_17) l_0_9_19))))
 (let ((?x5939 (+ (+ (+ (- ?x9479 (* (* 4.0 l_0_9_18) l_0_9_20)) ?x3593) ?x11301) ?x3596)))
 (let ((?x9460 (+ (+ ?x5939 (* (* 4.0 l_0_9_32) l_0_9_34)) (* (* 4.0 l_0_9_33) l_0_9_35))))
 (let ((?x6017 (- (- (- (- (- ?x9460 ?x11237) ?x11240) ?x11243) ?x11460) (* (* 4.0 l_0_9_47) l_0_9_49))))
 (let ((?x12668 (+ (+ (- ?x6017 (* (* 4.0 l_0_9_48) l_0_9_50)) ?x11462) (* (* 4.0 l_0_9_62) l_0_9_64))))
 (= (+ ?x12668 (* (* 4.0 l_0_9_63) l_0_9_65)) 0.0)))))))))))))))))
(assert
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11358 (* ?x11357 l_0_9_64)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11353 (* ?x11352 l_0_9_49)))
 (let ((?x6024 (- (* (* 2.0 l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x6047 (- (- ?x6024 (* (* 2.0 l_0_9_20) l_0_9_20)) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (let ((?x12679 (+ (+ ?x6047 (* 2.0 (* l_0_9_34 l_0_9_34))) (* 2.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x12684 (- (- (+ ?x12679 (* 2.0 (* l_0_9_36 l_0_9_36))) ?x11353) (* (* 2.0 l_0_9_49) l_0_9_49))))
 (let ((?x12688 (- (- ?x12684 (* (* 2.0 l_0_9_50) l_0_9_50)) (* (* 2.0 l_0_9_51) l_0_9_51))))
 (let ((?x12693 (+ (+ (+ ?x12688 ?x11358) (* 2.0 (* l_0_9_64 l_0_9_64))) (* 2.0 (* l_0_9_65 l_0_9_65)))))
 (= (+ ?x12693 (* 2.0 (* l_0_9_66 l_0_9_66))) 0.0))))))))))))
(assert
 (let ((?x12273 (* l_0_9_81 l_0_9_81)))
 (let ((?x12271 (* l_0_9_80 l_0_9_80)))
 (let ((?x12269 (* l_0_9_79 l_0_9_79)))
 (let ((?x11271 (* l_0_9_66 l_0_9_66)))
 (let ((?x11268 (* l_0_9_65 l_0_9_65)))
 (let ((?x11265 (* l_0_9_64 l_0_9_64)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11425 (* ?x11357 l_0_9_67)))
 (let ((?x8072 (* l_0_9_51 l_0_9_51)))
 (let ((?x8071 (* l_0_9_50 l_0_9_50)))
 (let ((?x11315 (* l_0_9_49 l_0_9_49)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11422 (* ?x11352 l_0_9_52)))
 (let ((?x6033 (- (* (* 2.0 l_0_9_1) l_0_9_7) (* (* 4.0 l_0_9_19) l_0_9_22))))
 (let ((?x6192 (- (- ?x6033 (* (* 4.0 l_0_9_20) l_0_9_23)) (* (* 4.0 l_0_9_21) l_0_9_24))))
 (let ((?x12707 (+ (+ ?x6192 (* (* 4.0 l_0_9_34) l_0_9_37)) (* (* 4.0 l_0_9_35) l_0_9_38))))
 (let ((?x12712 (- (- (+ ?x12707 (* (* 4.0 l_0_9_36) l_0_9_39)) ?x11422) (* (* 4.0 l_0_9_49) l_0_9_52))))
 (let ((?x12718 (- (+ (- (+ ?x12712 ?x11315) (* (* 4.0 l_0_9_50) l_0_9_53)) ?x8071) (* (* 4.0 l_0_9_51) l_0_9_54))))
 (let ((?x12723 (- (+ (+ (+ ?x12718 ?x8072) ?x11425) (* (* 4.0 l_0_9_64) l_0_9_67)) ?x11265)))
 (let ((?x12728 (+ (- (+ ?x12723 (* (* 4.0 l_0_9_65) l_0_9_68)) ?x11268) (* (* 4.0 l_0_9_66) l_0_9_69))))
 (= (+ (+ (+ (- ?x12728 ?x11271) ?x12269) ?x12271) ?x12273) 0.0))))))))))))))))))))))
(assert
 (let ((?x12770 (* l_0_9_63 l_0_9_63)))
 (let ((?x12768 (* l_0_9_62 l_0_9_62)))
 (let ((?x12766 (* l_0_9_48 l_0_9_48)))
 (let ((?x12764 (* l_0_9_47 l_0_9_47)))
 (let ((?x12769 (+ (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x12764) ?x12766) ?x12768)))
 (= (+ ?x12769 ?x12770) 0.0)))))))
(assert
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12785 (* ?x11591 l_0_9_65)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12783 (* ?x11588 l_0_9_64)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12781 (* ?x11585 l_0_9_50)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12779 (* ?x11582 l_0_9_49)))
 (let ((?x12150 (* 2.0 l_0_9_3)))
 (let ((?x12151 (* ?x12150 l_0_9_5)))
 (let ((?x12145 (* 2.0 l_0_9_2)))
 (let ((?x12146 (* ?x12145 l_0_9_4)))
 (= (+ (+ (- (- (+ ?x12146 ?x12151) ?x12779) ?x12781) ?x12783) ?x12785) 0.0))))))))))))))
(assert
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12803 (* ?x11591 l_0_9_68)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12801 (* ?x11588 l_0_9_67)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12799 (* ?x11585 l_0_9_53)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12797 (* ?x11582 l_0_9_52)))
 (let ((?x12150 (* 2.0 l_0_9_3)))
 (let ((?x12210 (* ?x12150 l_0_9_8)))
 (let ((?x12802 (+ (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x12210) ?x12797) ?x12799) ?x12801)))
 (= (+ ?x12802 ?x12803) 0.0)))))))))))))
(assert
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x11592 (* ?x11591 l_0_9_72)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x11589 (* ?x11588 l_0_9_71)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x11586 (* ?x11585 l_0_9_57)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x11583 (* ?x11582 l_0_9_56)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x8864 (* ?x8867 l_0_9_3)))
 (let ((?x12826 (+ (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x8864) ?x11583) ?x11586) ?x11589)))
 (= (+ ?x12826 ?x11592) 0.0)))))))))))))
(assert
 (let ((?x11271 (* l_0_9_66 l_0_9_66)))
 (let ((?x11268 (* l_0_9_65 l_0_9_65)))
 (let ((?x11265 (* l_0_9_64 l_0_9_64)))
 (let ((?x12257 (* l_0_9_6 l_0_9_6)))
 (let ((?x8072 (* l_0_9_51 l_0_9_51)))
 (let ((?x8071 (* l_0_9_50 l_0_9_50)))
 (let ((?x12249 (* l_0_9_5 l_0_9_5)))
 (let ((?x6124 (- (+ (- (* l_0_9_4 l_0_9_4) (* l_0_9_49 l_0_9_49)) ?x12249) ?x8071)))
 (= (+ (+ (+ (+ (- ?x6124 ?x8072) ?x12257) ?x11265) ?x11268) ?x11271) 0.0))))))))))
(assert
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x12856 (* ?x11721 l_0_9_69)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x12854 (* ?x11718 l_0_9_68)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x12852 (* ?x11715 l_0_9_67)))
 (let ((?x12356 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x12849 (* ?x11710 l_0_9_54)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x12847 (* ?x11707 l_0_9_53)))
 (let ((?x12339 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x6407 (* ?x11704 l_0_9_52)))
 (let ((?x12332 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12855 (+ (+ (+ (- (- (+ (- ?x12332 ?x6407) ?x12339) ?x12847) ?x12849) ?x12356) ?x12852) ?x12854)))
 (= (+ ?x12855 ?x12856) 0.0))))))))))))))))))
(assert
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x11722 (* ?x11721 l_0_9_73)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x11719 (* ?x11718 l_0_9_72)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x11716 (* ?x11715 l_0_9_71)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x11711 (* ?x11710 l_0_9_58)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x11708 (* ?x11707 l_0_9_57)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x11705 (* ?x11704 l_0_9_56)))
 (let ((?x12438 (* 2.0 l_0_9_13)))
 (let ((?x12439 (* ?x12438 l_0_9_6)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x5575 (* ?x8867 l_0_9_5)))
 (let ((?x12876 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x5575) ?x12439) ?x11705) ?x11708)))
 (= (+ (+ (+ (- ?x12876 ?x11711) ?x11716) ?x11719) ?x11722) 0.0)))))))))))))))))))
(assert
 (let ((?x12575 (* l_0_9_9 l_0_9_9)))
 (let ((?x12553 (* l_0_9_8 l_0_9_8)))
 (let ((?x12903 (* l_0_9_70 l_0_9_70)))
 (let ((?x12550 (* l_0_9_7 l_0_9_7)))
 (let ((?x12900 (* l_0_9_69 l_0_9_69)))
 (let ((?x12898 (* l_0_9_68 l_0_9_68)))
 (let ((?x12896 (* l_0_9_67 l_0_9_67)))
 (let ((?x12894 (* l_0_9_55 l_0_9_55)))
 (let ((?x12892 (* l_0_9_54 l_0_9_54)))
 (let ((?x12890 (* l_0_9_53 l_0_9_53)))
 (let ((?x12893 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_52 l_0_9_52)) ?x12890) ?x12892)))
 (let ((?x12905 (+ (+ (+ (+ (+ (+ (- ?x12893 ?x12894) ?x12896) ?x12898) ?x12900) ?x12550) ?x12903) ?x12553)))
 (= (+ ?x12905 ?x12575) 0.0))))))))))))))
(assert
 (let ((?x11884 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x11881 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11878 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11875 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11870 (* 2.0 l_0_9_55)))
 (let ((?x11871 (* ?x11870 l_0_9_59)))
 (let ((?x11867 (* 2.0 l_0_9_54)))
 (let ((?x11868 (* ?x11867 l_0_9_58)))
 (let ((?x11864 (* 2.0 l_0_9_53)))
 (let ((?x11865 (* ?x11864 l_0_9_57)))
 (let ((?x11861 (* 2.0 l_0_9_52)))
 (let ((?x11862 (* ?x11861 l_0_9_56)))
 (let ((?x12438 (* 2.0 l_0_9_13)))
 (let ((?x12593 (* ?x12438 l_0_9_9)))
 (let ((?x8867 (* 2.0 l_0_9_12)))
 (let ((?x12591 (* ?x8867 l_0_9_8)))
 (let ((?x12588 (* 2.0 l_0_9_11)))
 (let ((?x12589 (* ?x12588 l_0_9_7)))
 (let ((?x12927 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x12589) ?x12591) ?x12593) ?x11862)))
 (let ((?x12934 (+ (+ (+ (+ (- (- (- ?x12927 ?x11865) ?x11868) ?x11871) ?x11875) ?x11878) ?x11881) ?x11884)))
 (= ?x12934 0.0))))))))))))))))))))))
(assert
 (let ((?x12056 (* l_0_9_75 l_0_9_75)))
 (let ((?x12053 (* l_0_9_74 l_0_9_74)))
 (let ((?x12050 (* l_0_9_73 l_0_9_73)))
 (let ((?x12047 (* l_0_9_72 l_0_9_72)))
 (let ((?x12044 (* l_0_9_71 l_0_9_71)))
 (let ((?x4997 (* l_0_9_60 l_0_9_60)))
 (let ((?x12104 (* l_0_9_59 l_0_9_59)))
 (let ((?x8787 (* l_0_9_58 l_0_9_58)))
 (let ((?x12099 (* l_0_9_57 l_0_9_57)))
 (let ((?x12095 (* l_0_9_56 l_0_9_56)))
 (let ((?x12647 (* l_0_9_15 l_0_9_15)))
 (let ((?x12645 (* l_0_9_14 l_0_9_14)))
 (let ((?x12643 (* l_0_9_13 l_0_9_13)))
 (let ((?x12946 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x12643) ?x12645)))
 (let ((?x12953 (+ (- (- (- (- (- (+ ?x12946 ?x12647) ?x12095) ?x12099) ?x8787) ?x12104) ?x4997) ?x12044)))
 (= (+ (+ (+ (+ ?x12953 ?x12047) ?x12050) ?x12053) ?x12056) 0.0)))))))))))))))))
(assert
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12785 (* ?x11591 l_0_9_65)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12783 (* ?x11588 l_0_9_64)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12781 (* ?x11585 l_0_9_50)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12779 (* ?x11582 l_0_9_49)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x12985 (* ?x11579 l_0_9_35)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x12983 (* ?x11576 l_0_9_34)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11347 (* ?x11346 l_0_9_34)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x12978 (* ?x11572 l_0_9_20)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x12976 (* ?x11569 l_0_9_19)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11342 (* ?x11341 l_0_9_19)))
 (let ((?x12964 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x12968 (- (- ?x12964 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x12972 (- (- ?x12968 (* (* 2.0 l_0_9_137) l_0_9_139)) (* (* 2.0 l_0_9_138) l_0_9_140))))
 (let ((?x12979 (- (- (+ (- ?x12972 (* (* 4.0 l_0_9_16) l_0_9_17)) ?x11342) ?x12976) ?x12978)))
 (let ((?x12986 (+ (+ (- (+ ?x12979 (* (* 4.0 l_0_9_31) l_0_9_32)) ?x11347) ?x12983) ?x12985)))
 (let ((?x12992 (+ (- (- (- ?x12986 (* (* 4.0 l_0_9_46) l_0_9_47)) ?x12779) ?x12781) (* (* 4.0 l_0_9_61) l_0_9_62))))
 (let ((?x13000 (- (- (+ (+ ?x12992 ?x12783) ?x12785) (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x13000 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11724 (* ?x11594 l_0_9_79)))
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x12856 (* ?x11721 l_0_9_69)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x12854 (* ?x11718 l_0_9_68)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x12852 (* ?x11715 l_0_9_67)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11358 (* ?x11357 l_0_9_64)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x12849 (* ?x11710 l_0_9_54)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x12847 (* ?x11707 l_0_9_53)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x6407 (* ?x11704 l_0_9_52)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11353 (* ?x11352 l_0_9_49)))
 (let ((?x11699 (* 2.0 l_0_9_36)))
 (let ((?x13060 (* ?x11699 l_0_9_39)))
 (let ((?x11696 (* 2.0 l_0_9_35)))
 (let ((?x13058 (* ?x11696 l_0_9_38)))
 (let ((?x11693 (* 2.0 l_0_9_34)))
 (let ((?x13056 (* ?x11693 l_0_9_37)))
 (let ((?x11688 (* 2.0 l_0_9_21)))
 (let ((?x13052 (* ?x11688 l_0_9_24)))
 (let ((?x11685 (* 2.0 l_0_9_20)))
 (let ((?x13050 (* ?x11685 l_0_9_23)))
 (let ((?x11682 (* 2.0 l_0_9_19)))
 (let ((?x13048 (* ?x11682 l_0_9_22)))
 (let ((?x13031 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x13035 (- (- ?x13031 (* (* 2.0 l_0_9_111) l_0_9_114)) (* (* 2.0 l_0_9_124) l_0_9_127))))
 (let ((?x13039 (- (- ?x13035 (* (* 2.0 l_0_9_125) l_0_9_128)) (* (* 2.0 l_0_9_126) l_0_9_129))))
 (let ((?x13043 (- (- ?x13039 (* (* 2.0 l_0_9_139) l_0_9_142)) (* (* 2.0 l_0_9_140) l_0_9_143))))
 (let ((?x13047 (- (- ?x13043 (* (* 2.0 l_0_9_141) l_0_9_144)) (* (* 4.0 l_0_9_16) l_0_9_22))))
 (let ((?x13055 (+ (- (- (- ?x13047 ?x13048) ?x13050) ?x13052) (* (* 4.0 l_0_9_31) l_0_9_37))))
 (let ((?x13064 (- (+ (+ (+ (+ ?x13055 ?x13056) ?x13058) ?x13060) ?x11353) (* (* 4.0 l_0_9_46) l_0_9_52))))
 (let ((?x13070 (+ (- (- (- (- ?x13064 ?x6407) ?x12847) ?x12849) ?x11358) (* (* 4.0 l_0_9_61) l_0_9_67))))
 (let ((?x13077 (- (+ (+ (+ (+ ?x13070 ?x12852) ?x12854) ?x12856) ?x11724) (* (* 2.0 l_0_9_94) l_0_9_97))))
 (let ((?x13083 (- (- ?x13077 (* (* 2.0 l_0_9_95) l_0_9_98)) (* (* 2.0 l_0_9_96) l_0_9_99))))
 (= ?x13083 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13125 (* l_0_9_33 l_0_9_33)))
 (let ((?x13126 (* 2.0 ?x13125)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x12985 (* ?x11579 l_0_9_35)))
 (let ((?x13121 (* l_0_9_32 l_0_9_32)))
 (let ((?x13122 (* 2.0 ?x13121)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x12983 (* ?x11576 l_0_9_34)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x12978 (* ?x11572 l_0_9_20)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x12976 (* ?x11569 l_0_9_19)))
 (let ((?x13120 (- (- (+ (- ?x12976 (* ?x11569 l_0_9_17)) ?x12978) (* ?x11572 l_0_9_18)) ?x12983)))
 (let ((?x13129 (- (+ (- (+ ?x13120 ?x13122) ?x12985) ?x13126) (* (* 2.0 l_0_9_47) l_0_9_47))))
 (let ((?x13133 (+ (- ?x13129 (* (* 2.0 l_0_9_48) l_0_9_48)) (* 2.0 (* l_0_9_62 l_0_9_62)))))
 (= (+ ?x13133 (* 2.0 (* l_0_9_63 l_0_9_63))) 0.0)))))))))))))))))
(assert
 (let ((?x12177 (* 2.0 l_0_9_78)))
 (let ((?x12178 (* ?x12177 l_0_9_80)))
 (let ((?x12174 (* 2.0 l_0_9_77)))
 (let ((?x12175 (* ?x12174 l_0_9_79)))
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12785 (* ?x11591 l_0_9_65)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12783 (* ?x11588 l_0_9_64)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12781 (* ?x11585 l_0_9_50)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12779 (* ?x11582 l_0_9_49)))
 (let ((?x11699 (* 2.0 l_0_9_36)))
 (let ((?x13060 (* ?x11699 l_0_9_39)))
 (let ((?x11696 (* 2.0 l_0_9_35)))
 (let ((?x13058 (* ?x11696 l_0_9_38)))
 (let ((?x11693 (* 2.0 l_0_9_34)))
 (let ((?x13056 (* ?x11693 l_0_9_37)))
 (let ((?x11688 (* 2.0 l_0_9_21)))
 (let ((?x13052 (* ?x11688 l_0_9_24)))
 (let ((?x11685 (* 2.0 l_0_9_20)))
 (let ((?x13050 (* ?x11685 l_0_9_23)))
 (let ((?x11682 (* 2.0 l_0_9_19)))
 (let ((?x13048 (* ?x11682 l_0_9_22)))
 (let ((?x6715 (- (* (* (- 4.0) l_0_9_17) l_0_9_22) (* (* 4.0 l_0_9_18) l_0_9_23))))
 (let ((?x13149 (+ (+ (+ (+ ?x6715 ?x13048) ?x13050) ?x13052) (* (* 4.0 l_0_9_32) l_0_9_37))))
 (let ((?x13154 (- (- (- (+ ?x13149 (* (* 4.0 l_0_9_33) l_0_9_38)) ?x13056) ?x13058) ?x13060)))
 (let ((?x13160 (- (+ (- (+ ?x13154 ?x12779) (* (* 4.0 l_0_9_47) l_0_9_52)) ?x12781) (* (* 4.0 l_0_9_48) l_0_9_53))))
 (let ((?x13166 (+ (- (+ (- ?x13160 ?x12783) (* (* 4.0 l_0_9_62) l_0_9_67)) ?x12785) (* (* 4.0 l_0_9_63) l_0_9_68))))
 (= (+ (+ ?x13166 ?x12175) ?x12178) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x12383 (* 2.0 l_0_9_81)))
 (let ((?x12384 (* ?x12383 l_0_9_84)))
 (let ((?x12378 (* 2.0 l_0_9_80)))
 (let ((?x12379 (* ?x12378 l_0_9_83)))
 (let ((?x12373 (* 2.0 l_0_9_79)))
 (let ((?x12374 (* ?x12373 l_0_9_82)))
 (let ((?x12903 (* l_0_9_70 l_0_9_70)))
 (let ((?x13222 (* 2.0 ?x12903)))
 (let ((?x12900 (* l_0_9_69 l_0_9_69)))
 (let ((?x13220 (* 2.0 ?x12900)))
 (let ((?x12898 (* l_0_9_68 l_0_9_68)))
 (let ((?x13218 (* 2.0 ?x12898)))
 (let ((?x12896 (* l_0_9_67 l_0_9_67)))
 (let ((?x13216 (* 2.0 ?x12896)))
 (let ((?x11721 (* 2.0 l_0_9_66)))
 (let ((?x12856 (* ?x11721 l_0_9_69)))
 (let ((?x11718 (* 2.0 l_0_9_65)))
 (let ((?x12854 (* ?x11718 l_0_9_68)))
 (let ((?x11715 (* 2.0 l_0_9_64)))
 (let ((?x12852 (* ?x11715 l_0_9_67)))
 (let ((?x11710 (* 2.0 l_0_9_51)))
 (let ((?x12849 (* ?x11710 l_0_9_54)))
 (let ((?x11707 (* 2.0 l_0_9_50)))
 (let ((?x12847 (* ?x11707 l_0_9_53)))
 (let ((?x11704 (* 2.0 l_0_9_49)))
 (let ((?x6407 (* ?x11704 l_0_9_52)))
 (let ((?x13199 (* l_0_9_40 l_0_9_40)))
 (let ((?x13200 (* 2.0 ?x13199)))
 (let ((?x13196 (* l_0_9_39 l_0_9_39)))
 (let ((?x13197 (* 2.0 ?x13196)))
 (let ((?x13193 (* l_0_9_38 l_0_9_38)))
 (let ((?x13194 (* 2.0 ?x13193)))
 (let ((?x13190 (* l_0_9_37 l_0_9_37)))
 (let ((?x13191 (* 2.0 ?x13190)))
 (let ((?x13185 (- (* (* (- 2.0) l_0_9_22) l_0_9_22) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x13189 (- (- ?x13185 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x13204 (+ (+ (+ (+ (+ (+ (+ ?x13189 ?x13191) ?x13194) ?x13197) ?x13200) ?x6407) ?x12847) ?x12849)))
 (let ((?x13208 (- (- ?x13204 (* (* 2.0 l_0_9_52) l_0_9_52)) (* (* 2.0 l_0_9_53) l_0_9_53))))
 (let ((?x13212 (- (- ?x13208 (* (* 2.0 l_0_9_54) l_0_9_54)) (* (* 2.0 l_0_9_55) l_0_9_55))))
 (let ((?x13223 (+ (+ (+ (+ (- (- (- ?x13212 ?x12852) ?x12854) ?x12856) ?x13216) ?x13218) ?x13220) ?x13222)))
 (= (+ (+ (+ ?x13223 ?x12374) ?x12379) ?x12384) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13277 (* l_0_9_93 l_0_9_93)))
 (let ((?x13275 (* l_0_9_92 l_0_9_92)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11457 (* ?x11346 l_0_9_32)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11454 (* ?x11341 l_0_9_17)))
 (let ((?x1786 (* l_0_9_138 l_0_9_138)))
 (let ((?x10177 (* l_0_9_137 l_0_9_137)))
 (let ((?x10183 (* l_0_9_123 l_0_9_123)))
 (let ((?x10202 (* l_0_9_122 l_0_9_122)))
 (let ((?x10181 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x10202)))
 (let ((?x13256 (- (+ (- (- (- ?x10181 ?x10183) ?x10177) ?x1786) ?x11454) (* (* 1.0 l_0_9_17) l_0_9_17))))
 (let ((?x13262 (+ (- (- ?x13256 (* (* 1.0 l_0_9_18) l_0_9_18)) ?x11457) (* 1.0 (* l_0_9_32 l_0_9_32)))))
 (let ((?x13267 (- (+ ?x13262 (* 1.0 (* l_0_9_33 l_0_9_33))) (* (* 1.0 l_0_9_47) l_0_9_47))))
 (let ((?x13272 (+ (- ?x13267 (* (* 1.0 l_0_9_48) l_0_9_48)) (* 1.0 (* l_0_9_62 l_0_9_62)))))
 (= (- (- (+ ?x13272 (* 1.0 (* l_0_9_63 l_0_9_63))) ?x13275) ?x13277) 0.0)))))))))))))))))
(assert
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11595 (* ?x11594 l_0_9_77)))
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12803 (* ?x11591 l_0_9_68)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12801 (* ?x11588 l_0_9_67)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11462 (* ?x11357 l_0_9_62)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12799 (* ?x11585 l_0_9_53)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12797 (* ?x11582 l_0_9_52)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11460 (* ?x11352 l_0_9_47)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x13322 (* ?x11579 l_0_9_38)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x13320 (* ?x11576 l_0_9_37)))
 (let ((?x11346 (* 2.0 l_0_9_31)))
 (let ((?x11420 (* ?x11346 l_0_9_37)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x13317 (* ?x11572 l_0_9_23)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x13315 (* ?x11569 l_0_9_22)))
 (let ((?x11341 (* 2.0 l_0_9_16)))
 (let ((?x11418 (* ?x11341 l_0_9_22)))
 (let ((?x13305 (- (* (* (- 2.0) l_0_9_107) l_0_9_112) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x13309 (- (- ?x13305 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x13313 (- (- ?x13309 (* (* 2.0 l_0_9_137) l_0_9_142)) (* (* 2.0 l_0_9_138) l_0_9_143))))
 (let ((?x13324 (+ (+ (+ (- (- (- (+ ?x13313 ?x11418) ?x13315) ?x13317) ?x11420) ?x13320) ?x13322) ?x11460)))
 (let ((?x13332 (- (+ (+ (+ (- (- (- ?x13324 ?x12797) ?x12799) ?x11462) ?x12801) ?x12803) ?x11595) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x13332 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x13419 (* l_0_9_99 l_0_9_99)))
 (let ((?x13417 (* l_0_9_98 l_0_9_98)))
 (let ((?x13415 (* l_0_9_97 l_0_9_97)))
 (let ((?x11594 (* 2.0 l_0_9_76)))
 (let ((?x11886 (* ?x11594 l_0_9_82)))
 (let ((?x11357 (* 2.0 l_0_9_61)))
 (let ((?x11425 (* ?x11357 l_0_9_67)))
 (let ((?x11352 (* 2.0 l_0_9_46)))
 (let ((?x11422 (* ?x11352 l_0_9_52)))
 (let ((?x13370 (* l_0_9_145 l_0_9_145)))
 (let ((?x13368 (* l_0_9_144 l_0_9_144)))
 (let ((?x13366 (* l_0_9_143 l_0_9_143)))
 (let ((?x13364 (* l_0_9_142 l_0_9_142)))
 (let ((?x13362 (* l_0_9_130 l_0_9_130)))
 (let ((?x13360 (* l_0_9_129 l_0_9_129)))
 (let ((?x13358 (* l_0_9_128 l_0_9_128)))
 (let ((?x7008 (* l_0_9_127 l_0_9_127)))
 (let ((?x7012 (* l_0_9_115 l_0_9_115)))
 (let ((?x10288 (* l_0_9_114 l_0_9_114)))
 (let ((?x10280 (* l_0_9_113 l_0_9_113)))
 (let ((?x1879 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x10280)))
 (let ((?x13365 (- (- (- (- (- (- (- ?x1879 ?x10288) ?x7012) ?x7008) ?x13358) ?x13360) ?x13362) ?x13364)))
 (let ((?x13374 (- (- (- (- ?x13365 ?x13366) ?x13368) ?x13370) (* (* 1.0 l_0_9_22) l_0_9_22))))
 (let ((?x13380 (- (- ?x13374 (* (* 1.0 l_0_9_23) l_0_9_23)) (* (* 1.0 l_0_9_24) l_0_9_24))))
 (let ((?x13385 (+ (- ?x13380 (* (* 1.0 l_0_9_25) l_0_9_25)) (* 1.0 (* l_0_9_37 l_0_9_37)))))
 (let ((?x13389 (+ (+ ?x13385 (* 1.0 (* l_0_9_38 l_0_9_38))) (* 1.0 (* l_0_9_39 l_0_9_39)))))
 (let ((?x13395 (- (+ (+ ?x13389 (* 1.0 (* l_0_9_40 l_0_9_40))) ?x11422) (* (* 1.0 l_0_9_52) l_0_9_52))))
 (let ((?x13401 (- (- ?x13395 (* (* 1.0 l_0_9_53) l_0_9_53)) (* (* 1.0 l_0_9_54) l_0_9_54))))
 (let ((?x13407 (+ (- (- ?x13401 (* (* 1.0 l_0_9_55) l_0_9_55)) ?x11425) (* 1.0 (* l_0_9_67 l_0_9_67)))))
 (let ((?x13411 (+ (+ ?x13407 (* 1.0 (* l_0_9_68 l_0_9_68))) (* 1.0 (* l_0_9_69 l_0_9_69)))))
 (let ((?x13418 (- (- (+ (+ ?x13411 (* 1.0 (* l_0_9_70 l_0_9_70))) ?x11886) ?x13415) ?x13417)))
 (= (- ?x13418 ?x13419) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x13125 (* l_0_9_33 l_0_9_33)))
 (let ((?x13121 (* l_0_9_32 l_0_9_32)))
 (let ((?x13437 (- (- (+ (* l_0_9_17 l_0_9_17) (* l_0_9_18 l_0_9_18)) ?x13121) ?x13125)))
 (= ?x13437 0.0)))))
(assert
 (let ((?x12133 (* l_0_9_78 l_0_9_78)))
 (let ((?x12131 (* l_0_9_77 l_0_9_77)))
 (let ((?x12770 (* l_0_9_63 l_0_9_63)))
 (let ((?x12768 (* l_0_9_62 l_0_9_62)))
 (let ((?x12766 (* l_0_9_48 l_0_9_48)))
 (let ((?x12764 (* l_0_9_47 l_0_9_47)))
 (let ((?x11579 (* 2.0 l_0_9_33)))
 (let ((?x13322 (* ?x11579 l_0_9_38)))
 (let ((?x11576 (* 2.0 l_0_9_32)))
 (let ((?x13320 (* ?x11576 l_0_9_37)))
 (let ((?x11572 (* 2.0 l_0_9_18)))
 (let ((?x13317 (* ?x11572 l_0_9_23)))
 (let ((?x11569 (* 2.0 l_0_9_17)))
 (let ((?x13315 (* ?x11569 l_0_9_22)))
 (let ((?x13451 (- (- (+ (+ (- (- (+ ?x13315 ?x13317) ?x13320) ?x13322) ?x12764) ?x12766) ?x12768) ?x12770)))
 (= (+ (+ ?x13451 ?x12131) ?x12133) 0.0)))))))))))))))))
(assert
 (let ((?x12177 (* 2.0 l_0_9_78)))
 (let ((?x12224 (* ?x12177 l_0_9_83)))
 (let ((?x12174 (* 2.0 l_0_9_77)))
 (let ((?x12220 (* ?x12174 l_0_9_82)))
 (let ((?x11591 (* 2.0 l_0_9_63)))
 (let ((?x12803 (* ?x11591 l_0_9_68)))
 (let ((?x11588 (* 2.0 l_0_9_62)))
 (let ((?x12801 (* ?x11588 l_0_9_67)))
 (let ((?x11585 (* 2.0 l_0_9_48)))
 (let ((?x12799 (* ?x11585 l_0_9_53)))
 (let ((?x11582 (* 2.0 l_0_9_47)))
 (let ((?x12797 (* ?x11582 l_0_9_52)))
 (let ((?x13199 (* l_0_9_40 l_0_9_40)))
 (let ((?x13196 (* l_0_9_39 l_0_9_39)))
 (let ((?x13193 (* l_0_9_38 l_0_9_38)))
 (let ((?x13190 (* l_0_9_37 l_0_9_37)))
 (let ((?x10184 (* l_0_9_25 l_0_9_25)))
 (let ((?x6781 (* l_0_9_24 l_0_9_24)))
 (let ((?x13461 (+ (+ (+ (* l_0_9_22 l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x6781) ?x10184)))
 (let ((?x13468 (- (+ (+ (- (- (- (- ?x13461 ?x13190) ?x13193) ?x13196) ?x13199) ?x12797) ?x12799) ?x12801)))
 (= (+ (+ (- ?x13468 ?x12803) ?x12220) ?x12224) 0.0))))))))))))))))))))))
(assert
 (let ((?x12573 (* l_0_9_85 l_0_9_85)))
 (let ((?x12568 (* l_0_9_84 l_0_9_84)))
 (let ((?x12563 (* l_0_9_83 l_0_9_83)))
 (let ((?x12558 (* l_0_9_82 l_0_9_82)))
 (let ((?x12903 (* l_0_9_70 l_0_9_70)))
 (let ((?x12900 (* l_0_9_69 l_0_9_69)))
 (let ((?x12898 (* l_0_9_68 l_0_9_68)))
 (let ((?x12896 (* l_0_9_67 l_0_9_67)))
 (let ((?x12894 (* l_0_9_55 l_0_9_55)))
 (let ((?x12892 (* l_0_9_54 l_0_9_54)))
 (let ((?x13483 (+ (+ (+ (* l_0_9_52 l_0_9_52) (* l_0_9_53 l_0_9_53)) ?x12892) ?x12894)))
 (let ((?x13490 (+ (+ (+ (- (- (- (- ?x13483 ?x12896) ?x12898) ?x12900) ?x12903) ?x12558) ?x12563) ?x12568)))
 (= (+ ?x13490 ?x12573) 0.0))))))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_138 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (let ((?x13568 (* l_0_10_76 l_0_10_76)))
 (let ((?x13566 (* l_0_10_61 l_0_10_61)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13564 (* ?x13563 l_0_10_67)))
 (let ((?x13561 (* l_0_10_46 l_0_10_46)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13559 (* ?x13558 l_0_10_52)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13556 (* ?x13555 l_0_10_37)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13553 (* ?x13552 l_0_10_22)))
 (let ((?x13545 (- (- _a_2_ (* (* 2.0 l_0_10_106) l_0_10_112)) (* (* 2.0 l_0_10_121) l_0_10_127))))
 (let ((?x13551 (- (- ?x13545 (* (* 2.0 l_0_10_136) l_0_10_142)) (* (* 2.0 l_0_10_151) l_0_10_157))))
 (let ((?x13569 (+ (- (+ (+ (- (+ (- ?x13551 ?x13553) ?x13556) ?x13559) ?x13561) ?x13564) ?x13566) ?x13568)))
 (= (- ?x13569 (* (* 2.0 l_0_10_91) l_0_10_97)) 0.0))))))))))))))))
(assert
 (let ((?x13619 (* l_0_10_91 l_0_10_91)))
 (let ((?x13606 (* l_0_10_151 l_0_10_151)))
 (let ((?x13604 (* l_0_10_136 l_0_10_136)))
 (let ((?x13602 (* l_0_10_121 l_0_10_121)))
 (let ((?x13603 (- (- (+ (* _a_0_ _a_4_) _a_3_) (* l_0_10_106 l_0_10_106)) ?x13602)))
 (let ((?x13613 (+ (- (- (- ?x13603 ?x13604) ?x13606) (* (* 1.0 l_0_10_16) l_0_10_16)) (* 1.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x13618 (+ (- ?x13613 (* (* 1.0 l_0_10_46) l_0_10_46)) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (= (- (- ?x13618 ?x13619) 4.0) 0.0)))))))))
(assert
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13659 (* ?x13563 l_0_10_62)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13657 (* ?x13558 l_0_10_47)))
 (let ((?x13611 (* l_0_10_31 l_0_10_31)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13654 (* ?x13555 l_0_10_32)))
 (let ((?x13633 (* l_0_10_16 l_0_10_16)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13651 (* ?x13552 l_0_10_17)))
 (let ((?x13646 (- (- (* _a_1_ _a_4_) (* (* 2.0 l_0_10_106) l_0_10_107)) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x13650 (- (- ?x13646 (* (* 2.0 l_0_10_136) l_0_10_137)) (* (* 2.0 l_0_10_151) l_0_10_152))))
 (let ((?x13662 (- (+ (- (- (+ (+ (- ?x13650 ?x13651) ?x13633) ?x13654) ?x13611) ?x13657) ?x13659) (* (* 2.0 l_0_10_91) l_0_10_92))))
 (= ?x13662 0.0)))))))))))))))
(assert
 (let ((?x13761 (* l_0_10_96 l_0_10_96)))
 (let ((?x13759 (* l_0_10_95 l_0_10_95)))
 (let ((?x13757 (* l_0_10_94 l_0_10_94)))
 (let ((?x13566 (* l_0_10_61 l_0_10_61)))
 (let ((?x13561 (* l_0_10_46 l_0_10_46)))
 (let ((?x13705 (* l_0_10_156 l_0_10_156)))
 (let ((?x13703 (* l_0_10_155 l_0_10_155)))
 (let ((?x13701 (* l_0_10_154 l_0_10_154)))
 (let ((?x13699 (* l_0_10_141 l_0_10_141)))
 (let ((?x13697 (* l_0_10_140 l_0_10_140)))
 (let ((?x13695 (* l_0_10_139 l_0_10_139)))
 (let ((?x13693 (* l_0_10_126 l_0_10_126)))
 (let ((?x13691 (* l_0_10_125 l_0_10_125)))
 (let ((?x13689 (* l_0_10_124 l_0_10_124)))
 (let ((?x13687 (* l_0_10_111 l_0_10_111)))
 (let ((?x13685 (* l_0_10_110 l_0_10_110)))
 (let ((?x13688 (- (- (- (* l_0_10_1 l_0_10_1) (* l_0_10_109 l_0_10_109)) ?x13685) ?x13687)))
 (let ((?x13702 (- (- (- (- (- (- (- ?x13688 ?x13689) ?x13691) ?x13693) ?x13695) ?x13697) ?x13699) ?x13701)))
 (let ((?x13712 (- (- (- (- ?x13702 ?x13703) ?x13705) (* (* 4.0 l_0_10_16) l_0_10_19)) (* (* 1.0 l_0_10_19) l_0_10_19))))
 (let ((?x13718 (- (- ?x13712 (* (* 1.0 l_0_10_20) l_0_10_20)) (* (* 1.0 l_0_10_21) l_0_10_21))))
 (let ((?x13724 (+ (+ ?x13718 (* (* 4.0 l_0_10_31) l_0_10_34)) (* 1.0 (* l_0_10_34 l_0_10_34)))))
 (let ((?x13730 (+ (+ ?x13724 (* 1.0 (* l_0_10_35 l_0_10_35))) (* 1.0 (* l_0_10_36 l_0_10_36)))))
 (let ((?x13737 (- (- (- ?x13730 (* (* 4.0 l_0_10_46) l_0_10_49)) ?x13561) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x13743 (- (- ?x13737 (* (* 1.0 l_0_10_50) l_0_10_50)) (* (* 1.0 l_0_10_51) l_0_10_51))))
 (let ((?x13750 (+ (+ (+ ?x13743 (* (* 4.0 l_0_10_61) l_0_10_64)) ?x13566) (* 1.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x13756 (+ (+ ?x13750 (* 1.0 (* l_0_10_65 l_0_10_65))) (* 1.0 (* l_0_10_66 l_0_10_66)))))
 (= (- (- (- (- ?x13756 ?x13757) ?x13759) ?x13761) 1.0) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13566 (* l_0_10_61 l_0_10_61)))
 (let ((?x13835 (* 2.0 ?x13566)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13833 (* ?x13563 l_0_10_64)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13829 (* ?x13558 l_0_10_49)))
 (let ((?x13611 (* l_0_10_31 l_0_10_31)))
 (let ((?x13827 (* 2.0 ?x13611)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13825 (* ?x13555 l_0_10_34)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13821 (* ?x13552 l_0_10_19)))
 (let ((?x13816 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x13820 (- (- ?x13816 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 2.0 l_0_10_151) l_0_10_154))))
 (let ((?x13832 (- (- (+ (+ (- (- ?x13820 ?x13821) (* ?x13552 l_0_10_16)) ?x13825) ?x13827) ?x13829) (* ?x13558 l_0_10_46))))
 (let ((?x13839 (- (- (+ (+ ?x13832 ?x13833) ?x13835) (* (* 2.0 l_0_10_91) l_0_10_94)) 4.0)))
 (= ?x13839 0.0))))))))))))))))))
(assert
 (let ((?x13568 (* l_0_10_76 l_0_10_76)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13899 (* ?x13563 l_0_10_71)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13897 (* ?x13558 l_0_10_56)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13895 (* ?x13555 l_0_10_41)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13893 (* ?x13552 l_0_10_26)))
 (let ((?x13884 (- (* (- l_0_10_1) l_0_10_1) (* (* 2.0 l_0_10_101) l_0_10_91))))
 (let ((?x13888 (- (- ?x13884 (* (* 2.0 l_0_10_106) l_0_10_116)) (* (* 2.0 l_0_10_121) l_0_10_131))))
 (let ((?x13892 (- (- ?x13888 (* (* 2.0 l_0_10_136) l_0_10_146)) (* (* 2.0 l_0_10_151) l_0_10_161))))
 (= (- (+ (- (+ (- ?x13892 ?x13893) ?x13895) ?x13897) ?x13899) ?x13568) 0.0))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x13992 (* ?x13991 l_0_10_77)))
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x13989 (* ?x13988 l_0_10_72)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13985 l_0_10_71)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x13983 (* ?x13982 l_0_10_57)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x13980 (* ?x13979 l_0_10_56)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x13977 (* ?x13976 l_0_10_42)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x13974 (* ?x13973 l_0_10_41)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13895 (* ?x13555 l_0_10_41)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x13970 (* ?x13969 l_0_10_27)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x13967 (* ?x13966 l_0_10_26)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13893 (* ?x13552 l_0_10_26)))
 (let ((?x13937 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x13943 (- (- ?x13937 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_107) l_0_10_116))))
 (let ((?x13949 (- (- ?x13943 (* (* 2.0 l_0_10_108) l_0_10_117)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x13955 (- (- ?x13949 (* (* 2.0 l_0_10_123) l_0_10_132)) (* (* 2.0 l_0_10_137) l_0_10_146))))
 (let ((?x13961 (- (- ?x13955 (* (* 2.0 l_0_10_138) l_0_10_147)) (* (* 2.0 l_0_10_152) l_0_10_161))))
 (let ((?x13971 (- (- (+ (- ?x13961 (* (* 2.0 l_0_10_153) l_0_10_162)) ?x13893) ?x13967) ?x13970)))
 (let ((?x13990 (+ (+ (- (- (+ (+ (- ?x13971 ?x13895) ?x13974) ?x13977) ?x13980) ?x13983) ?x13986) ?x13989)))
 (= (- ?x13990 ?x13992) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x14110 (* ?x13991 l_0_10_79)))
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x14108 (* ?x14107 l_0_10_73)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x14105 (* ?x14104 l_0_10_72)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x14102 (* ?x14101 l_0_10_71)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x14097 (* ?x14096 l_0_10_58)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x14094 (* ?x14093 l_0_10_57)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x14091 (* ?x14090 l_0_10_56)))
 (let ((?x14085 (* 2.0 l_0_10_36)))
 (let ((?x14086 (* ?x14085 l_0_10_43)))
 (let ((?x14082 (* 2.0 l_0_10_35)))
 (let ((?x14083 (* ?x14082 l_0_10_42)))
 (let ((?x14079 (* 2.0 l_0_10_34)))
 (let ((?x14080 (* ?x14079 l_0_10_41)))
 (let ((?x14074 (* 2.0 l_0_10_21)))
 (let ((?x14075 (* ?x14074 l_0_10_28)))
 (let ((?x14071 (* 2.0 l_0_10_20)))
 (let ((?x14072 (* ?x14071 l_0_10_27)))
 (let ((?x14068 (* 2.0 l_0_10_19)))
 (let ((?x14069 (* ?x14068 l_0_10_26)))
 (let ((?x14024 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_101) l_0_10_94))))
 (let ((?x14029 (- (- ?x14024 (* (* 2.0 l_0_10_102) l_0_10_95)) (* (* 2.0 l_0_10_103) l_0_10_96))))
 (let ((?x14035 (- (- ?x14029 (* (* 2.0 l_0_10_109) l_0_10_116)) (* (* 2.0 l_0_10_110) l_0_10_117))))
 (let ((?x14041 (- (- ?x14035 (* (* 2.0 l_0_10_111) l_0_10_118)) (* (* 2.0 l_0_10_124) l_0_10_131))))
 (let ((?x14047 (- (- ?x14041 (* (* 2.0 l_0_10_125) l_0_10_132)) (* (* 2.0 l_0_10_126) l_0_10_133))))
 (let ((?x14053 (- (- ?x14047 (* (* 2.0 l_0_10_139) l_0_10_146)) (* (* 2.0 l_0_10_140) l_0_10_147))))
 (let ((?x14059 (- (- ?x14053 (* (* 2.0 l_0_10_141) l_0_10_148)) (* (* 2.0 l_0_10_154) l_0_10_161))))
 (let ((?x14065 (- (- ?x14059 (* (* 2.0 l_0_10_155) l_0_10_162)) (* (* 2.0 l_0_10_156) l_0_10_163))))
 (let ((?x14076 (- (- (- (- ?x14065 (* (* 4.0 l_0_10_16) l_0_10_26)) ?x14069) ?x14072) ?x14075)))
 (let ((?x14087 (+ (+ (+ (+ ?x14076 (* (* 4.0 l_0_10_31) l_0_10_41)) ?x14080) ?x14083) ?x14086)))
 (let ((?x14098 (- (- (- (- ?x14087 (* (* 4.0 l_0_10_46) l_0_10_56)) ?x14091) ?x14094) ?x14097)))
 (let ((?x14109 (+ (+ (+ (+ ?x14098 (* (* 4.0 l_0_10_61) l_0_10_71)) ?x14102) ?x14105) ?x14108)))
 (= (- ?x14109 ?x14110) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x14285 (* ?x13991 l_0_10_86)))
 (let ((?x14283 (* ?x13991 l_0_10_82)))
 (let ((?x14281 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14278 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14275 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14272 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13899 (* ?x13563 l_0_10_71)))
 (let ((?x14267 (* 2.0 l_0_10_55)))
 (let ((?x14268 (* ?x14267 l_0_10_59)))
 (let ((?x14264 (* 2.0 l_0_10_54)))
 (let ((?x14265 (* ?x14264 l_0_10_58)))
 (let ((?x14261 (* 2.0 l_0_10_53)))
 (let ((?x14262 (* ?x14261 l_0_10_57)))
 (let ((?x14258 (* 2.0 l_0_10_52)))
 (let ((?x14259 (* ?x14258 l_0_10_56)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13897 (* ?x13558 l_0_10_56)))
 (let ((?x14255 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14252 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14249 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14246 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x14242 (* 2.0 l_0_10_25)))
 (let ((?x14243 (* ?x14242 l_0_10_29)))
 (let ((?x14239 (* 2.0 l_0_10_24)))
 (let ((?x14240 (* ?x14239 l_0_10_28)))
 (let ((?x14236 (* 2.0 l_0_10_23)))
 (let ((?x14237 (* ?x14236 l_0_10_27)))
 (let ((?x14234 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x14178 (- (* (* (- 2.0) l_0_10_1) l_0_10_7) (* (* 2.0 l_0_10_100) l_0_10_104))))
 (let ((?x14182 (- (- ?x14178 (* (* 2.0 l_0_10_101) l_0_10_97)) (* (* 2.0 l_0_10_102) l_0_10_98))))
 (let ((?x14187 (- (- ?x14182 (* (* 2.0 l_0_10_103) l_0_10_99)) (* (* 2.0 l_0_10_112) l_0_10_116))))
 (let ((?x14193 (- (- ?x14187 (* (* 2.0 l_0_10_113) l_0_10_117)) (* (* 2.0 l_0_10_114) l_0_10_118))))
 (let ((?x14199 (- (- ?x14193 (* (* 2.0 l_0_10_115) l_0_10_119)) (* (* 2.0 l_0_10_127) l_0_10_131))))
 (let ((?x14205 (- (- ?x14199 (* (* 2.0 l_0_10_128) l_0_10_132)) (* (* 2.0 l_0_10_129) l_0_10_133))))
 (let ((?x14211 (- (- ?x14205 (* (* 2.0 l_0_10_130) l_0_10_134)) (* (* 2.0 l_0_10_142) l_0_10_146))))
 (let ((?x14217 (- (- ?x14211 (* (* 2.0 l_0_10_143) l_0_10_147)) (* (* 2.0 l_0_10_144) l_0_10_148))))
 (let ((?x14223 (- (- ?x14217 (* (* 2.0 l_0_10_145) l_0_10_149)) (* (* 2.0 l_0_10_157) l_0_10_161))))
 (let ((?x14229 (- (- ?x14223 (* (* 2.0 l_0_10_158) l_0_10_162)) (* (* 2.0 l_0_10_159) l_0_10_163))))
 (let ((?x14241 (- (- (- (- ?x14229 (* (* 2.0 l_0_10_160) l_0_10_164)) ?x14234) ?x14237) ?x14240)))
 (let ((?x14260 (- (+ (+ (+ (+ (+ (- ?x14241 ?x14243) ?x14246) ?x14249) ?x14252) ?x14255) ?x13897) ?x14259)))
 (let ((?x14279 (+ (+ (+ (- (- (- (- ?x14260 ?x14262) ?x14265) ?x14268) ?x13899) ?x14272) ?x14275) ?x14278)))
 (= (+ (- (+ ?x14279 ?x14281) ?x14283) ?x14285) 0.0)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x14285 (* ?x13991 l_0_10_86)))
 (let ((?x14435 (* l_0_10_165 l_0_10_165)))
 (let ((?x14433 (* l_0_10_164 l_0_10_164)))
 (let ((?x14431 (* l_0_10_163 l_0_10_163)))
 (let ((?x14429 (* l_0_10_162 l_0_10_162)))
 (let ((?x14427 (* l_0_10_161 l_0_10_161)))
 (let ((?x14425 (* l_0_10_150 l_0_10_150)))
 (let ((?x14423 (* l_0_10_149 l_0_10_149)))
 (let ((?x14421 (* l_0_10_148 l_0_10_148)))
 (let ((?x14419 (* l_0_10_147 l_0_10_147)))
 (let ((?x14417 (* l_0_10_146 l_0_10_146)))
 (let ((?x14415 (* l_0_10_135 l_0_10_135)))
 (let ((?x14413 (* l_0_10_134 l_0_10_134)))
 (let ((?x14411 (* l_0_10_133 l_0_10_133)))
 (let ((?x14409 (* l_0_10_132 l_0_10_132)))
 (let ((?x14407 (* l_0_10_131 l_0_10_131)))
 (let ((?x14405 (* l_0_10_120 l_0_10_120)))
 (let ((?x14403 (* l_0_10_119 l_0_10_119)))
 (let ((?x14401 (* l_0_10_118 l_0_10_118)))
 (let ((?x14399 (* l_0_10_117 l_0_10_117)))
 (let ((?x14397 (* l_0_10_116 l_0_10_116)))
 (let ((?x14395 (* l_0_10_105 l_0_10_105)))
 (let ((?x14393 (* l_0_10_104 l_0_10_104)))
 (let ((?x14391 (* l_0_10_103 l_0_10_103)))
 (let ((?x14389 (* l_0_10_102 l_0_10_102)))
 (let ((?x14390 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_11) (* l_0_10_101 l_0_10_101)) ?x14389)))
 (let ((?x14404 (- (- (- (- (- (- (- ?x14390 ?x14391) ?x14393) ?x14395) ?x14397) ?x14399) ?x14401) ?x14403)))
 (let ((?x14418 (- (- (- (- (- (- (- ?x14404 ?x14405) ?x14407) ?x14409) ?x14411) ?x14413) ?x14415) ?x14417)))
 (let ((?x14432 (- (- (- (- (- (- (- ?x14418 ?x14419) ?x14421) ?x14423) ?x14425) ?x14427) ?x14429) ?x14431)))
 (let ((?x14442 (- (- (- (- ?x14432 ?x14433) ?x14435) (* (* 1.0 l_0_10_26) l_0_10_26)) (* (* 1.0 l_0_10_27) l_0_10_27))))
 (let ((?x14448 (- (- ?x14442 (* (* 1.0 l_0_10_28) l_0_10_28)) (* (* 1.0 l_0_10_29) l_0_10_29))))
 (let ((?x14454 (+ (- ?x14448 (* (* 1.0 l_0_10_30) l_0_10_30)) (* 1.0 (* l_0_10_41 l_0_10_41)))))
 (let ((?x14460 (+ (+ ?x14454 (* 1.0 (* l_0_10_42 l_0_10_42))) (* 1.0 (* l_0_10_43 l_0_10_43)))))
 (let ((?x14466 (+ (+ ?x14460 (* 1.0 (* l_0_10_44 l_0_10_44))) (* 1.0 (* l_0_10_45 l_0_10_45)))))
 (let ((?x14472 (- (- ?x14466 (* (* 1.0 l_0_10_56) l_0_10_56)) (* (* 1.0 l_0_10_57) l_0_10_57))))
 (let ((?x14478 (- (- ?x14472 (* (* 1.0 l_0_10_58) l_0_10_58)) (* (* 1.0 l_0_10_59) l_0_10_59))))
 (let ((?x14484 (+ (- ?x14478 (* (* 1.0 l_0_10_60) l_0_10_60)) (* 1.0 (* l_0_10_71 l_0_10_71)))))
 (let ((?x14490 (+ (+ ?x14484 (* 1.0 (* l_0_10_72 l_0_10_72))) (* 1.0 (* l_0_10_73 l_0_10_73)))))
 (let ((?x14496 (+ (+ ?x14490 (* 1.0 (* l_0_10_74 l_0_10_74))) (* 1.0 (* l_0_10_75 l_0_10_75)))))
 (= (- ?x14496 ?x14285) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14535 (* l_0_10_78 l_0_10_78)))
 (let ((?x14533 (* l_0_10_77 l_0_10_77)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x13977 (* ?x13976 l_0_10_42)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x13974 (* ?x13973 l_0_10_41)))
 (let ((?x14529 (* l_0_10_3 l_0_10_3)))
 (let ((?x14527 (* l_0_10_2 l_0_10_2)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x13970 (* ?x13969 l_0_10_27)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x13967 (* ?x13966 l_0_10_26)))
 (let ((?x14536 (- (- (- (- (- (- (+ ?x13967 ?x13970) ?x14527) ?x14529) ?x13974) ?x13977) ?x14533) ?x14535)))
 (= ?x14536 0.0)))))))))))))))
(assert
 (let ((?x14573 (* 2.0 l_0_10_78)))
 (let ((?x14574 (* ?x14573 l_0_10_80)))
 (let ((?x14570 (* 2.0 l_0_10_77)))
 (let ((?x14571 (* ?x14570 l_0_10_79)))
 (let ((?x14085 (* 2.0 l_0_10_36)))
 (let ((?x14086 (* ?x14085 l_0_10_43)))
 (let ((?x14082 (* 2.0 l_0_10_35)))
 (let ((?x14083 (* ?x14082 l_0_10_42)))
 (let ((?x14079 (* 2.0 l_0_10_34)))
 (let ((?x14080 (* ?x14079 l_0_10_41)))
 (let ((?x14546 (* 2.0 l_0_10_3)))
 (let ((?x14547 (* ?x14546 l_0_10_5)))
 (let ((?x14074 (* 2.0 l_0_10_21)))
 (let ((?x14075 (* ?x14074 l_0_10_28)))
 (let ((?x14071 (* 2.0 l_0_10_20)))
 (let ((?x14072 (* ?x14071 l_0_10_27)))
 (let ((?x3805 (* 2.0 l_0_10_2)))
 (let ((?x8163 (* ?x3805 l_0_10_4)))
 (let ((?x14068 (* 2.0 l_0_10_19)))
 (let ((?x14069 (* ?x14068 l_0_10_26)))
 (let ((?x3887 (- (* (* (- 4.0) l_0_10_17) l_0_10_26) (* (* 4.0 l_0_10_18) l_0_10_27))))
 (let ((?x14551 (+ (- (+ (+ (- (+ ?x3887 ?x14069) ?x8163) ?x14072) ?x14075) ?x14547) (* (* 4.0 l_0_10_32) l_0_10_41))))
 (let ((?x14557 (- (- (- (+ ?x14551 (* (* 4.0 l_0_10_33) l_0_10_42)) ?x14080) ?x14083) ?x14086)))
 (let ((?x14563 (- (- ?x14557 (* (* 4.0 l_0_10_47) l_0_10_56)) (* (* 4.0 l_0_10_48) l_0_10_57))))
 (let ((?x14569 (+ (+ ?x14563 (* (* 4.0 l_0_10_62) l_0_10_71)) (* (* 4.0 l_0_10_63) l_0_10_72))))
 (= (- (- ?x14569 ?x14571) ?x14574) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x14573 (* 2.0 l_0_10_78)))
 (let ((?x14622 (* ?x14573 l_0_10_87)))
 (let ((?x14620 (* ?x14573 l_0_10_83)))
 (let ((?x14570 (* 2.0 l_0_10_77)))
 (let ((?x14618 (* ?x14570 l_0_10_86)))
 (let ((?x14616 (* ?x14570 l_0_10_82)))
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x13989 (* ?x13988 l_0_10_72)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13985 l_0_10_71)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x13983 (* ?x13982 l_0_10_57)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x13980 (* ?x13979 l_0_10_56)))
 (let ((?x14255 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14252 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14249 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14246 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x14546 (* 2.0 l_0_10_3)))
 (let ((?x14606 (* ?x14546 l_0_10_8)))
 (let ((?x14242 (* 2.0 l_0_10_25)))
 (let ((?x14243 (* ?x14242 l_0_10_29)))
 (let ((?x14239 (* 2.0 l_0_10_24)))
 (let ((?x14240 (* ?x14239 l_0_10_28)))
 (let ((?x14236 (* 2.0 l_0_10_23)))
 (let ((?x14237 (* ?x14236 l_0_10_27)))
 (let ((?x14234 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x14605 (+ (+ (+ (+ (* (* (- 2.0) l_0_10_2) l_0_10_7) ?x14234) ?x14237) ?x14240) ?x14243)))
 (let ((?x14613 (+ (+ (- (- (- (- (- ?x14605 ?x14606) ?x14246) ?x14249) ?x14252) ?x14255) ?x13980) ?x13983)))
 (= (+ (- (+ (- (- (- ?x14613 ?x13986) ?x13989) ?x14616) ?x14618) ?x14620) ?x14622) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x14573 (* 2.0 l_0_10_78)))
 (let ((?x14622 (* ?x14573 l_0_10_87)))
 (let ((?x14570 (* 2.0 l_0_10_77)))
 (let ((?x14618 (* ?x14570 l_0_10_86)))
 (let ((?x14464 (* l_0_10_45 l_0_10_45)))
 (let ((?x14461 (* l_0_10_44 l_0_10_44)))
 (let ((?x14458 (* l_0_10_43 l_0_10_43)))
 (let ((?x14455 (* l_0_10_42 l_0_10_42)))
 (let ((?x14452 (* l_0_10_41 l_0_10_41)))
 (let ((?x11400 (* l_0_10_30 l_0_10_30)))
 (let ((?x3728 (* l_0_10_29 l_0_10_29)))
 (let ((?x11381 (* l_0_10_28 l_0_10_28)))
 (let ((?x11378 (* l_0_10_27 l_0_10_27)))
 (let ((?x3733 (* l_0_10_26 l_0_10_26)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x14630 (* ?x14629 l_0_10_3)))
 (let ((?x14634 (+ (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x14630) ?x3733) ?x11378) ?x11381)))
 (let ((?x14641 (- (- (- (- (- (+ (+ ?x14634 ?x3728) ?x11400) ?x14452) ?x14455) ?x14458) ?x14461) ?x14464)))
 (= (- (- ?x14641 ?x14618) ?x14622) 0.0))))))))))))))))))))
(assert
 (let ((?x14681 (* l_0_10_81 l_0_10_81)))
 (let ((?x14679 (* l_0_10_80 l_0_10_80)))
 (let ((?x14677 (* l_0_10_79 l_0_10_79)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13899 (* ?x13563 l_0_10_71)))
 (let ((?x14665 (* l_0_10_6 l_0_10_6)))
 (let ((?x14657 (* l_0_10_5 l_0_10_5)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13897 (* ?x13558 l_0_10_56)))
 (let ((?x8394 (* l_0_10_4 l_0_10_4)))
 (let ((?x8348 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 4.0 l_0_10_19) l_0_10_26))))
 (let ((?x11604 (- (- ?x8348 (* (* 4.0 l_0_10_20) l_0_10_27)) (* (* 4.0 l_0_10_21) l_0_10_28))))
 (let ((?x2330 (+ (+ ?x11604 (* (* 4.0 l_0_10_34) l_0_10_41)) (* (* 4.0 l_0_10_35) l_0_10_42))))
 (let ((?x14656 (- (- (- (+ ?x2330 (* (* 4.0 l_0_10_36) l_0_10_43)) ?x8394) ?x13897) (* (* 4.0 l_0_10_49) l_0_10_56))))
 (let ((?x14664 (- (- (- ?x14656 ?x14657) (* (* 4.0 l_0_10_50) l_0_10_57)) (* (* 4.0 l_0_10_51) l_0_10_58))))
 (let ((?x14673 (+ (+ (+ (- ?x14664 ?x14665) ?x13899) (* (* 4.0 l_0_10_64) l_0_10_71)) (* (* 4.0 l_0_10_65) l_0_10_72))))
 (let ((?x14682 (- (- (- (+ ?x14673 (* (* 4.0 l_0_10_66) l_0_10_73)) ?x14677) ?x14679) ?x14681)))
 (= ?x14682 0.0)))))))))))))))))))
(assert
 (let ((?x14804 (* 2.0 l_0_10_81)))
 (let ((?x14807 (* ?x14804 l_0_10_88)))
 (let ((?x14805 (* ?x14804 l_0_10_84)))
 (let ((?x14799 (* 2.0 l_0_10_80)))
 (let ((?x14802 (* ?x14799 l_0_10_87)))
 (let ((?x14800 (* ?x14799 l_0_10_83)))
 (let ((?x14794 (* 2.0 l_0_10_79)))
 (let ((?x14797 (* ?x14794 l_0_10_86)))
 (let ((?x14795 (* ?x14794 l_0_10_82)))
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x14108 (* ?x14107 l_0_10_73)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x14105 (* ?x14104 l_0_10_72)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x14102 (* ?x14101 l_0_10_71)))
 (let ((?x14777 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x14097 (* ?x14096 l_0_10_58)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x14094 (* ?x14093 l_0_10_57)))
 (let ((?x14760 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x14091 (* ?x14090 l_0_10_56)))
 (let ((?x14753 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x14736 (- (* (* (- 4.0) l_0_10_22) l_0_10_26) (* (* 4.0 l_0_10_23) l_0_10_27))))
 (let ((?x14742 (- (- ?x14736 (* (* 4.0 l_0_10_24) l_0_10_28)) (* (* 4.0 l_0_10_25) l_0_10_29))))
 (let ((?x14748 (+ (+ ?x14742 (* (* 4.0 l_0_10_37) l_0_10_41)) (* (* 4.0 l_0_10_38) l_0_10_42))))
 (let ((?x14757 (+ (- (+ ?x14748 (* (* 4.0 l_0_10_39) l_0_10_43)) ?x14753) (* (* 4.0 l_0_10_40) l_0_10_44))))
 (let ((?x14766 (- (+ (+ (- (+ ?x14757 ?x14091) ?x14760) ?x14094) ?x14097) (* (* 4.0 l_0_10_52) l_0_10_56))))
 (let ((?x14772 (- (- ?x14766 (* (* 4.0 l_0_10_53) l_0_10_57)) (* (* 4.0 l_0_10_54) l_0_10_58))))
 (let ((?x14780 (- (- (- (- ?x14772 (* (* 4.0 l_0_10_55) l_0_10_59)) ?x14777) ?x14102) ?x14105)))
 (let ((?x14787 (+ (+ (- ?x14780 ?x14108) (* (* 4.0 l_0_10_67) l_0_10_71)) (* (* 4.0 l_0_10_68) l_0_10_72))))
 (let ((?x14793 (+ (+ ?x14787 (* (* 4.0 l_0_10_69) l_0_10_73)) (* (* 4.0 l_0_10_70) l_0_10_74))))
 (= (+ (- (+ (- (+ (- ?x14793 ?x14795) ?x14797) ?x14800) ?x14802) ?x14805) ?x14807) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14804 (* 2.0 l_0_10_81)))
 (let ((?x14807 (* ?x14804 l_0_10_88)))
 (let ((?x14799 (* 2.0 l_0_10_80)))
 (let ((?x14802 (* ?x14799 l_0_10_87)))
 (let ((?x14794 (* 2.0 l_0_10_79)))
 (let ((?x14797 (* ?x14794 l_0_10_86)))
 (let ((?x14494 (* l_0_10_75 l_0_10_75)))
 (let ((?x14915 (* 2.0 ?x14494)))
 (let ((?x14491 (* l_0_10_74 l_0_10_74)))
 (let ((?x14913 (* 2.0 ?x14491)))
 (let ((?x14488 (* l_0_10_73 l_0_10_73)))
 (let ((?x14911 (* 2.0 ?x14488)))
 (let ((?x14485 (* l_0_10_72 l_0_10_72)))
 (let ((?x14909 (* 2.0 ?x14485)))
 (let ((?x14482 (* l_0_10_71 l_0_10_71)))
 (let ((?x14907 (* 2.0 ?x14482)))
 (let ((?x14464 (* l_0_10_45 l_0_10_45)))
 (let ((?x14890 (* 2.0 ?x14464)))
 (let ((?x14461 (* l_0_10_44 l_0_10_44)))
 (let ((?x14888 (* 2.0 ?x14461)))
 (let ((?x14458 (* l_0_10_43 l_0_10_43)))
 (let ((?x14886 (* 2.0 ?x14458)))
 (let ((?x14455 (* l_0_10_42 l_0_10_42)))
 (let ((?x14884 (* 2.0 ?x14455)))
 (let ((?x14452 (* l_0_10_41 l_0_10_41)))
 (let ((?x14882 (* 2.0 ?x14452)))
 (let ((?x14864 (* 2.0 l_0_10_13)))
 (let ((?x14865 (* ?x14864 l_0_10_6)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x11913 (* ?x14629 l_0_10_5)))
 (let ((?x14869 (- (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x11913) ?x14865) (* (* 2.0 l_0_10_26) l_0_10_26))))
 (let ((?x14875 (- (- ?x14869 (* (* 2.0 l_0_10_27) l_0_10_27)) (* (* 2.0 l_0_10_28) l_0_10_28))))
 (let ((?x14881 (- (- ?x14875 (* (* 2.0 l_0_10_29) l_0_10_29)) (* (* 2.0 l_0_10_30) l_0_10_30))))
 (let ((?x14894 (- (+ (+ (+ (+ (+ ?x14881 ?x14882) ?x14884) ?x14886) ?x14888) ?x14890) (* (* 2.0 l_0_10_56) l_0_10_56))))
 (let ((?x14900 (- (- ?x14894 (* (* 2.0 l_0_10_57) l_0_10_57)) (* (* 2.0 l_0_10_58) l_0_10_58))))
 (let ((?x14906 (- (- ?x14900 (* (* 2.0 l_0_10_59) l_0_10_59)) (* (* 2.0 l_0_10_60) l_0_10_60))))
 (let ((?x14918 (- (- (+ (+ (+ (+ (+ ?x14906 ?x14907) ?x14909) ?x14911) ?x14913) ?x14915) ?x14797) ?x14802)))
 (= (- ?x14918 ?x14807) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15002 (* l_0_10_9 l_0_10_9)))
 (let ((?x15000 (* l_0_10_85 l_0_10_85)))
 (let ((?x14998 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14995 (* l_0_10_84 l_0_10_84)))
 (let ((?x14993 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14990 (* l_0_10_83 l_0_10_83)))
 (let ((?x14988 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14985 (* l_0_10_82 l_0_10_82)))
 (let ((?x14983 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14980 (* l_0_10_8 l_0_10_8)))
 (let ((?x14281 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14977 (* l_0_10_7 l_0_10_7)))
 (let ((?x14278 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14275 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14272 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14267 (* 2.0 l_0_10_55)))
 (let ((?x14268 (* ?x14267 l_0_10_59)))
 (let ((?x14264 (* 2.0 l_0_10_54)))
 (let ((?x14265 (* ?x14264 l_0_10_58)))
 (let ((?x14261 (* 2.0 l_0_10_53)))
 (let ((?x14262 (* ?x14261 l_0_10_57)))
 (let ((?x14258 (* 2.0 l_0_10_52)))
 (let ((?x14259 (* ?x14258 l_0_10_56)))
 (let ((?x14974 (- (+ (+ (+ (+ (* (- l_0_10_10) l_0_10_10) ?x14259) ?x14262) ?x14265) ?x14268) ?x14272)))
 (let ((?x14986 (- (+ (- (- (- (- (- ?x14974 ?x14275) ?x14278) ?x14977) ?x14281) ?x14980) ?x14983) ?x14985)))
 (let ((?x15003 (- (- (+ (- (+ (- (+ ?x14986 ?x14988) ?x14990) ?x14993) ?x14995) ?x14998) ?x15000) ?x15002)))
 (= ?x15003 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x15036 (* l_0_10_90 l_0_10_90)))
 (let ((?x15034 (* l_0_10_89 l_0_10_89)))
 (let ((?x15032 (* l_0_10_88 l_0_10_88)))
 (let ((?x15030 (* l_0_10_87 l_0_10_87)))
 (let ((?x15028 (* l_0_10_86 l_0_10_86)))
 (let ((?x14998 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14993 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14988 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14983 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14494 (* l_0_10_75 l_0_10_75)))
 (let ((?x14491 (* l_0_10_74 l_0_10_74)))
 (let ((?x14488 (* l_0_10_73 l_0_10_73)))
 (let ((?x14485 (* l_0_10_72 l_0_10_72)))
 (let ((?x14482 (* l_0_10_71 l_0_10_71)))
 (let ((?x3785 (* l_0_10_60 l_0_10_60)))
 (let ((?x11402 (* l_0_10_59 l_0_10_59)))
 (let ((?x3789 (* l_0_10_58 l_0_10_58)))
 (let ((?x11312 (* l_0_10_57 l_0_10_57)))
 (let ((?x3775 (* l_0_10_56 l_0_10_56)))
 (let ((?x14864 (* 2.0 l_0_10_13)))
 (let ((?x15012 (* ?x14864 l_0_10_9)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x15010 (* ?x14629 l_0_10_8)))
 (let ((?x15007 (* 2.0 l_0_10_11)))
 (let ((?x15008 (* ?x15007 l_0_10_7)))
 (let ((?x15014 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x15008) ?x15010) ?x15012) ?x3775)))
 (let ((?x15021 (- (- (- (+ (+ (+ (+ ?x15014 ?x11312) ?x3789) ?x11402) ?x3785) ?x14482) ?x14485) ?x14488)))
 (let ((?x15029 (+ (- (- (- (- (- (- ?x15021 ?x14491) ?x14494) ?x14983) ?x14988) ?x14993) ?x14998) ?x15028)))
 (= (+ (+ (+ (+ ?x15029 ?x15030) ?x15032) ?x15034) ?x15036) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x15036 (* l_0_10_90 l_0_10_90)))
 (let ((?x15034 (* l_0_10_89 l_0_10_89)))
 (let ((?x15032 (* l_0_10_88 l_0_10_88)))
 (let ((?x15030 (* l_0_10_87 l_0_10_87)))
 (let ((?x15028 (* l_0_10_86 l_0_10_86)))
 (let ((?x12086 (* l_0_10_15 l_0_10_15)))
 (let ((?x12090 (* l_0_10_14 l_0_10_14)))
 (let ((?x12094 (* l_0_10_13 l_0_10_13)))
 (let ((?x12091 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x12094)))
 (let ((?x15061 (- (- (- (- (- (- (- ?x12091 ?x12090) ?x12086) ?x15028) ?x15030) ?x15032) ?x15034) ?x15036)))
 (= ?x15061 0.0))))))))))))
(assert
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13659 (* ?x13563 l_0_10_62)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13657 (* ?x13558 l_0_10_47)))
 (let ((?x13728 (* l_0_10_36 l_0_10_36)))
 (let ((?x13725 (* l_0_10_35 l_0_10_35)))
 (let ((?x13722 (* l_0_10_34 l_0_10_34)))
 (let ((?x13781 (* l_0_10_21 l_0_10_21)))
 (let ((?x13777 (* l_0_10_20 l_0_10_20)))
 (let ((?x10706 (* l_0_10_19 l_0_10_19)))
 (let ((?x4860 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 4.0 l_0_10_17) l_0_10_19))))
 (let ((?x8702 (+ (+ (+ (- ?x4860 (* (* 4.0 l_0_10_18) l_0_10_20)) ?x10706) ?x13777) ?x13781)))
 (let ((?x4917 (+ (+ ?x8702 (* (* 4.0 l_0_10_32) l_0_10_34)) (* (* 4.0 l_0_10_33) l_0_10_35))))
 (let ((?x8793 (- (- (- (- (- ?x4917 ?x13722) ?x13725) ?x13728) ?x13657) (* (* 4.0 l_0_10_47) l_0_10_49))))
 (let ((?x15072 (+ (+ (- ?x8793 (* (* 4.0 l_0_10_48) l_0_10_50)) ?x13659) (* (* 4.0 l_0_10_62) l_0_10_64))))
 (= (+ ?x15072 (* (* 4.0 l_0_10_63) l_0_10_65)) 0.0)))))))))))))))))
(assert
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13833 (* ?x13563 l_0_10_64)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13829 (* ?x13558 l_0_10_49)))
 (let ((?x13728 (* l_0_10_36 l_0_10_36)))
 (let ((?x15082 (* 2.0 ?x13728)))
 (let ((?x13725 (* l_0_10_35 l_0_10_35)))
 (let ((?x12200 (* 2.0 ?x13725)))
 (let ((?x13722 (* l_0_10_34 l_0_10_34)))
 (let ((?x5091 (* 2.0 ?x13722)))
 (let ((?x12181 (- (* (* 2.0 l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_19) l_0_10_19))))
 (let ((?x5103 (- (- ?x12181 (* (* 2.0 l_0_10_20) l_0_10_20)) (* (* 2.0 l_0_10_21) l_0_10_21))))
 (let ((?x15086 (- (- (+ (+ (+ ?x5103 ?x5091) ?x12200) ?x15082) ?x13829) (* (* 2.0 l_0_10_49) l_0_10_49))))
 (let ((?x15090 (- (- ?x15086 (* (* 2.0 l_0_10_50) l_0_10_50)) (* (* 2.0 l_0_10_51) l_0_10_51))))
 (let ((?x15095 (+ (+ (+ ?x15090 ?x13833) (* 2.0 (* l_0_10_64 l_0_10_64))) (* 2.0 (* l_0_10_65 l_0_10_65)))))
 (= (+ ?x15095 (* 2.0 (* l_0_10_66 l_0_10_66))) 0.0)))))))))))))))))
(assert
 (let ((?x14681 (* l_0_10_81 l_0_10_81)))
 (let ((?x14679 (* l_0_10_80 l_0_10_80)))
 (let ((?x14677 (* l_0_10_79 l_0_10_79)))
 (let ((?x13754 (* l_0_10_66 l_0_10_66)))
 (let ((?x13751 (* l_0_10_65 l_0_10_65)))
 (let ((?x13748 (* l_0_10_64 l_0_10_64)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13564 (* ?x13563 l_0_10_67)))
 (let ((?x13792 (* l_0_10_51 l_0_10_51)))
 (let ((?x2787 (* l_0_10_50 l_0_10_50)))
 (let ((?x2736 (* l_0_10_49 l_0_10_49)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13559 (* ?x13558 l_0_10_52)))
 (let ((?x15122 (- (* (* 2.0 l_0_10_1) l_0_10_7) (* (* 4.0 l_0_10_19) l_0_10_22))))
 (let ((?x15126 (- (- ?x15122 (* (* 4.0 l_0_10_20) l_0_10_23)) (* (* 4.0 l_0_10_21) l_0_10_24))))
 (let ((?x15130 (+ (+ ?x15126 (* (* 4.0 l_0_10_34) l_0_10_37)) (* (* 4.0 l_0_10_35) l_0_10_38))))
 (let ((?x15135 (- (- (+ ?x15130 (* (* 4.0 l_0_10_36) l_0_10_39)) ?x13559) (* (* 4.0 l_0_10_49) l_0_10_52))))
 (let ((?x15141 (- (+ (- (+ ?x15135 ?x2736) (* (* 4.0 l_0_10_50) l_0_10_53)) ?x2787) (* (* 4.0 l_0_10_51) l_0_10_54))))
 (let ((?x15146 (- (+ (+ (+ ?x15141 ?x13792) ?x13564) (* (* 4.0 l_0_10_64) l_0_10_67)) ?x13748)))
 (let ((?x15151 (+ (- (+ ?x15146 (* (* 4.0 l_0_10_65) l_0_10_68)) ?x13751) (* (* 4.0 l_0_10_66) l_0_10_69))))
 (= (+ (+ (+ (- ?x15151 ?x13754) ?x14677) ?x14679) ?x14681) 0.0))))))))))))))))))))))
(assert
 (let ((?x15195 (* l_0_10_63 l_0_10_63)))
 (let ((?x15193 (* l_0_10_62 l_0_10_62)))
 (let ((?x15191 (* l_0_10_48 l_0_10_48)))
 (let ((?x15189 (* l_0_10_47 l_0_10_47)))
 (let ((?x14529 (* l_0_10_3 l_0_10_3)))
 (let ((?x14527 (* l_0_10_2 l_0_10_2)))
 (let ((?x5256 (+ ?x14527 ?x14529)))
 (= (+ (+ (- (- ?x5256 ?x15189) ?x15191) ?x15193) ?x15195) 0.0)))))))))
(assert
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15208 (* ?x13988 l_0_10_65)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15206 (* ?x13985 l_0_10_64)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15204 (* ?x13982 l_0_10_50)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x15202 (* ?x13979 l_0_10_49)))
 (let ((?x14546 (* 2.0 l_0_10_3)))
 (let ((?x14547 (* ?x14546 l_0_10_5)))
 (let ((?x3805 (* 2.0 l_0_10_2)))
 (let ((?x8163 (* ?x3805 l_0_10_4)))
 (= (+ (+ (- (- (+ ?x8163 ?x14547) ?x15202) ?x15204) ?x15206) ?x15208) 0.0))))))))))))))
(assert
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15225 (* ?x13988 l_0_10_68)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15223 (* ?x13985 l_0_10_67)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15221 (* ?x13982 l_0_10_53)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x12293 (* ?x13979 l_0_10_52)))
 (let ((?x14546 (* 2.0 l_0_10_3)))
 (let ((?x14606 (* ?x14546 l_0_10_8)))
 (let ((?x15224 (+ (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x14606) ?x12293) ?x15221) ?x15223)))
 (= (+ ?x15224 ?x15225) 0.0)))))))))))))
(assert
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x13989 (* ?x13988 l_0_10_72)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x13986 (* ?x13985 l_0_10_71)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x13983 (* ?x13982 l_0_10_57)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x13980 (* ?x13979 l_0_10_56)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x14630 (* ?x14629 l_0_10_3)))
 (let ((?x15243 (+ (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x14630) ?x13980) ?x13983) ?x13986)))
 (= (+ ?x15243 ?x13989) 0.0)))))))))))))
(assert
 (let ((?x13754 (* l_0_10_66 l_0_10_66)))
 (let ((?x13751 (* l_0_10_65 l_0_10_65)))
 (let ((?x13748 (* l_0_10_64 l_0_10_64)))
 (let ((?x14665 (* l_0_10_6 l_0_10_6)))
 (let ((?x13792 (* l_0_10_51 l_0_10_51)))
 (let ((?x2787 (* l_0_10_50 l_0_10_50)))
 (let ((?x14657 (* l_0_10_5 l_0_10_5)))
 (let ((?x15256 (- (+ (- (* l_0_10_4 l_0_10_4) (* l_0_10_49 l_0_10_49)) ?x14657) ?x2787)))
 (= (+ (+ (+ (+ (- ?x15256 ?x13792) ?x14665) ?x13748) ?x13751) ?x13754) 0.0))))))))))
(assert
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x15274 (* ?x14107 l_0_10_69)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x15272 (* ?x14104 l_0_10_68)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x15270 (* ?x14101 l_0_10_67)))
 (let ((?x14777 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x15267 (* ?x14096 l_0_10_54)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x15265 (* ?x14093 l_0_10_53)))
 (let ((?x14760 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x5416 (* ?x14090 l_0_10_52)))
 (let ((?x14753 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x15273 (+ (+ (+ (- (- (+ (- ?x14753 ?x5416) ?x14760) ?x15265) ?x15267) ?x14777) ?x15270) ?x15272)))
 (= (+ ?x15273 ?x15274) 0.0))))))))))))))))))
(assert
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x14108 (* ?x14107 l_0_10_73)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x14105 (* ?x14104 l_0_10_72)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x14102 (* ?x14101 l_0_10_71)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x14097 (* ?x14096 l_0_10_58)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x14094 (* ?x14093 l_0_10_57)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x14091 (* ?x14090 l_0_10_56)))
 (let ((?x14864 (* 2.0 l_0_10_13)))
 (let ((?x14865 (* ?x14864 l_0_10_6)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x11913 (* ?x14629 l_0_10_5)))
 (let ((?x15280 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x11913) ?x14865) ?x14091) ?x14094)))
 (= (+ (+ (+ (- ?x15280 ?x14097) ?x14102) ?x14105) ?x14108) 0.0)))))))))))))))))))
(assert
 (let ((?x15002 (* l_0_10_9 l_0_10_9)))
 (let ((?x14980 (* l_0_10_8 l_0_10_8)))
 (let ((?x15305 (* l_0_10_70 l_0_10_70)))
 (let ((?x14977 (* l_0_10_7 l_0_10_7)))
 (let ((?x15302 (* l_0_10_69 l_0_10_69)))
 (let ((?x15300 (* l_0_10_68 l_0_10_68)))
 (let ((?x15298 (* l_0_10_67 l_0_10_67)))
 (let ((?x15296 (* l_0_10_55 l_0_10_55)))
 (let ((?x15294 (* l_0_10_54 l_0_10_54)))
 (let ((?x15292 (* l_0_10_53 l_0_10_53)))
 (let ((?x15295 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_52 l_0_10_52)) ?x15292) ?x15294)))
 (let ((?x15307 (+ (+ (+ (+ (+ (+ (- ?x15295 ?x15296) ?x15298) ?x15300) ?x15302) ?x14977) ?x15305) ?x14980)))
 (= (+ ?x15307 ?x15002) 0.0))))))))))))))
(assert
 (let ((?x14281 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14278 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14275 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14272 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14267 (* 2.0 l_0_10_55)))
 (let ((?x14268 (* ?x14267 l_0_10_59)))
 (let ((?x14264 (* 2.0 l_0_10_54)))
 (let ((?x14265 (* ?x14264 l_0_10_58)))
 (let ((?x14261 (* 2.0 l_0_10_53)))
 (let ((?x14262 (* ?x14261 l_0_10_57)))
 (let ((?x14258 (* 2.0 l_0_10_52)))
 (let ((?x14259 (* ?x14258 l_0_10_56)))
 (let ((?x14864 (* 2.0 l_0_10_13)))
 (let ((?x15012 (* ?x14864 l_0_10_9)))
 (let ((?x14629 (* 2.0 l_0_10_12)))
 (let ((?x15010 (* ?x14629 l_0_10_8)))
 (let ((?x15007 (* 2.0 l_0_10_11)))
 (let ((?x15008 (* ?x15007 l_0_10_7)))
 (let ((?x12409 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x15008) ?x15010) ?x15012) ?x14259)))
 (let ((?x15327 (+ (+ (+ (+ (- (- (- ?x12409 ?x14262) ?x14265) ?x14268) ?x14272) ?x14275) ?x14278) ?x14281)))
 (= ?x15327 0.0))))))))))))))))))))))
(assert
 (let ((?x14494 (* l_0_10_75 l_0_10_75)))
 (let ((?x14491 (* l_0_10_74 l_0_10_74)))
 (let ((?x14488 (* l_0_10_73 l_0_10_73)))
 (let ((?x14485 (* l_0_10_72 l_0_10_72)))
 (let ((?x14482 (* l_0_10_71 l_0_10_71)))
 (let ((?x3785 (* l_0_10_60 l_0_10_60)))
 (let ((?x11402 (* l_0_10_59 l_0_10_59)))
 (let ((?x3789 (* l_0_10_58 l_0_10_58)))
 (let ((?x11312 (* l_0_10_57 l_0_10_57)))
 (let ((?x3775 (* l_0_10_56 l_0_10_56)))
 (let ((?x12086 (* l_0_10_15 l_0_10_15)))
 (let ((?x12090 (* l_0_10_14 l_0_10_14)))
 (let ((?x12094 (* l_0_10_13 l_0_10_13)))
 (let ((?x15335 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x12094) ?x12090)))
 (let ((?x15342 (+ (- (- (- (- (- (+ ?x15335 ?x12086) ?x3775) ?x11312) ?x3789) ?x11402) ?x3785) ?x14482)))
 (= (+ (+ (+ (+ ?x15342 ?x14485) ?x14488) ?x14491) ?x14494) 0.0)))))))))))))))))
(assert
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15208 (* ?x13988 l_0_10_65)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15206 (* ?x13985 l_0_10_64)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15204 (* ?x13982 l_0_10_50)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x15202 (* ?x13979 l_0_10_49)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x15375 (* ?x13976 l_0_10_35)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x15373 (* ?x13973 l_0_10_34)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13825 (* ?x13555 l_0_10_34)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x15368 (* ?x13969 l_0_10_20)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x15366 (* ?x13966 l_0_10_19)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13821 (* ?x13552 l_0_10_19)))
 (let ((?x15350 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x15354 (- (- ?x15350 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x15358 (- (- ?x15354 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x15362 (- (- ?x15358 (* (* 2.0 l_0_10_152) l_0_10_154)) (* (* 2.0 l_0_10_153) l_0_10_155))))
 (let ((?x15369 (- (- (+ (- ?x15362 (* (* 4.0 l_0_10_16) l_0_10_17)) ?x13821) ?x15366) ?x15368)))
 (let ((?x15376 (+ (+ (- (+ ?x15369 (* (* 4.0 l_0_10_31) l_0_10_32)) ?x13825) ?x15373) ?x15375)))
 (let ((?x15382 (+ (- (- (- ?x15376 (* (* 4.0 l_0_10_46) l_0_10_47)) ?x15202) ?x15204) (* (* 4.0 l_0_10_61) l_0_10_62))))
 (let ((?x15390 (- (- (+ (+ ?x15382 ?x15206) ?x15208) (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= ?x15390 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x14110 (* ?x13991 l_0_10_79)))
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x15274 (* ?x14107 l_0_10_69)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x15272 (* ?x14104 l_0_10_68)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x15270 (* ?x14101 l_0_10_67)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13833 (* ?x13563 l_0_10_64)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x15267 (* ?x14096 l_0_10_54)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x15265 (* ?x14093 l_0_10_53)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x5416 (* ?x14090 l_0_10_52)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13829 (* ?x13558 l_0_10_49)))
 (let ((?x14085 (* 2.0 l_0_10_36)))
 (let ((?x15465 (* ?x14085 l_0_10_39)))
 (let ((?x14082 (* 2.0 l_0_10_35)))
 (let ((?x15463 (* ?x14082 l_0_10_38)))
 (let ((?x14079 (* 2.0 l_0_10_34)))
 (let ((?x15461 (* ?x14079 l_0_10_37)))
 (let ((?x14074 (* 2.0 l_0_10_21)))
 (let ((?x15457 (* ?x14074 l_0_10_24)))
 (let ((?x14071 (* 2.0 l_0_10_20)))
 (let ((?x15455 (* ?x14071 l_0_10_23)))
 (let ((?x14068 (* 2.0 l_0_10_19)))
 (let ((?x15453 (* ?x14068 l_0_10_22)))
 (let ((?x15430 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_110) l_0_10_113))))
 (let ((?x15434 (- (- ?x15430 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_124) l_0_10_127))))
 (let ((?x15438 (- (- ?x15434 (* (* 2.0 l_0_10_125) l_0_10_128)) (* (* 2.0 l_0_10_126) l_0_10_129))))
 (let ((?x15442 (- (- ?x15438 (* (* 2.0 l_0_10_139) l_0_10_142)) (* (* 2.0 l_0_10_140) l_0_10_143))))
 (let ((?x15446 (- (- ?x15442 (* (* 2.0 l_0_10_141) l_0_10_144)) (* (* 2.0 l_0_10_154) l_0_10_157))))
 (let ((?x15450 (- (- ?x15446 (* (* 2.0 l_0_10_155) l_0_10_158)) (* (* 2.0 l_0_10_156) l_0_10_159))))
 (let ((?x15458 (- (- (- (- ?x15450 (* (* 4.0 l_0_10_16) l_0_10_22)) ?x15453) ?x15455) ?x15457)))
 (let ((?x15466 (+ (+ (+ (+ ?x15458 (* (* 4.0 l_0_10_31) l_0_10_37)) ?x15461) ?x15463) ?x15465)))
 (let ((?x15471 (- (- (- (+ ?x15466 ?x13829) (* (* 4.0 l_0_10_46) l_0_10_52)) ?x5416) ?x15265)))
 (let ((?x15476 (+ (+ (- (- ?x15471 ?x15267) ?x13833) (* (* 4.0 l_0_10_61) l_0_10_67)) ?x15270)))
 (let ((?x15482 (- (+ (+ (+ ?x15476 ?x15272) ?x15274) ?x14110) (* (* 2.0 l_0_10_94) l_0_10_97))))
 (let ((?x15488 (- (- ?x15482 (* (* 2.0 l_0_10_95) l_0_10_98)) (* (* 2.0 l_0_10_96) l_0_10_99))))
 (= ?x15488 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15547 (* l_0_10_33 l_0_10_33)))
 (let ((?x15548 (* 2.0 ?x15547)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x15375 (* ?x13976 l_0_10_35)))
 (let ((?x15543 (* l_0_10_32 l_0_10_32)))
 (let ((?x15544 (* 2.0 ?x15543)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x15373 (* ?x13973 l_0_10_34)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x15368 (* ?x13969 l_0_10_20)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x15366 (* ?x13966 l_0_10_19)))
 (let ((?x15542 (- (- (+ (- ?x15366 (* ?x13966 l_0_10_17)) ?x15368) (* ?x13969 l_0_10_18)) ?x15373)))
 (let ((?x15551 (- (+ (- (+ ?x15542 ?x15544) ?x15375) ?x15548) (* (* 2.0 l_0_10_47) l_0_10_47))))
 (let ((?x15555 (+ (- ?x15551 (* (* 2.0 l_0_10_48) l_0_10_48)) (* 2.0 (* l_0_10_62 l_0_10_62)))))
 (= (+ ?x15555 (* 2.0 (* l_0_10_63 l_0_10_63))) 0.0)))))))))))))))))
(assert
 (let ((?x14573 (* 2.0 l_0_10_78)))
 (let ((?x14574 (* ?x14573 l_0_10_80)))
 (let ((?x14570 (* 2.0 l_0_10_77)))
 (let ((?x14571 (* ?x14570 l_0_10_79)))
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15208 (* ?x13988 l_0_10_65)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15206 (* ?x13985 l_0_10_64)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15204 (* ?x13982 l_0_10_50)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x15202 (* ?x13979 l_0_10_49)))
 (let ((?x14085 (* 2.0 l_0_10_36)))
 (let ((?x15465 (* ?x14085 l_0_10_39)))
 (let ((?x14082 (* 2.0 l_0_10_35)))
 (let ((?x15463 (* ?x14082 l_0_10_38)))
 (let ((?x14079 (* 2.0 l_0_10_34)))
 (let ((?x15461 (* ?x14079 l_0_10_37)))
 (let ((?x14074 (* 2.0 l_0_10_21)))
 (let ((?x15457 (* ?x14074 l_0_10_24)))
 (let ((?x14071 (* 2.0 l_0_10_20)))
 (let ((?x15455 (* ?x14071 l_0_10_23)))
 (let ((?x14068 (* 2.0 l_0_10_19)))
 (let ((?x15453 (* ?x14068 l_0_10_22)))
 (let ((?x15574 (- (* (* (- 4.0) l_0_10_17) l_0_10_22) (* (* 4.0 l_0_10_18) l_0_10_23))))
 (let ((?x15579 (+ (+ (+ (+ ?x15574 ?x15453) ?x15455) ?x15457) (* (* 4.0 l_0_10_32) l_0_10_37))))
 (let ((?x15584 (- (- (- (+ ?x15579 (* (* 4.0 l_0_10_33) l_0_10_38)) ?x15461) ?x15463) ?x15465)))
 (let ((?x15590 (- (+ (- (+ ?x15584 ?x15202) (* (* 4.0 l_0_10_47) l_0_10_52)) ?x15204) (* (* 4.0 l_0_10_48) l_0_10_53))))
 (let ((?x15596 (+ (- (+ (- ?x15590 ?x15206) (* (* 4.0 l_0_10_62) l_0_10_67)) ?x15208) (* (* 4.0 l_0_10_63) l_0_10_68))))
 (= (+ (+ ?x15596 ?x14571) ?x14574) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x14804 (* 2.0 l_0_10_81)))
 (let ((?x14805 (* ?x14804 l_0_10_84)))
 (let ((?x14799 (* 2.0 l_0_10_80)))
 (let ((?x14800 (* ?x14799 l_0_10_83)))
 (let ((?x14794 (* 2.0 l_0_10_79)))
 (let ((?x14795 (* ?x14794 l_0_10_82)))
 (let ((?x15305 (* l_0_10_70 l_0_10_70)))
 (let ((?x15667 (* 2.0 ?x15305)))
 (let ((?x15302 (* l_0_10_69 l_0_10_69)))
 (let ((?x15665 (* 2.0 ?x15302)))
 (let ((?x15300 (* l_0_10_68 l_0_10_68)))
 (let ((?x15663 (* 2.0 ?x15300)))
 (let ((?x15298 (* l_0_10_67 l_0_10_67)))
 (let ((?x15661 (* 2.0 ?x15298)))
 (let ((?x14107 (* 2.0 l_0_10_66)))
 (let ((?x15274 (* ?x14107 l_0_10_69)))
 (let ((?x14104 (* 2.0 l_0_10_65)))
 (let ((?x15272 (* ?x14104 l_0_10_68)))
 (let ((?x14101 (* 2.0 l_0_10_64)))
 (let ((?x15270 (* ?x14101 l_0_10_67)))
 (let ((?x14096 (* 2.0 l_0_10_51)))
 (let ((?x15267 (* ?x14096 l_0_10_54)))
 (let ((?x14093 (* 2.0 l_0_10_50)))
 (let ((?x15265 (* ?x14093 l_0_10_53)))
 (let ((?x14090 (* 2.0 l_0_10_49)))
 (let ((?x5416 (* ?x14090 l_0_10_52)))
 (let ((?x15644 (* l_0_10_40 l_0_10_40)))
 (let ((?x15645 (* 2.0 ?x15644)))
 (let ((?x15641 (* l_0_10_39 l_0_10_39)))
 (let ((?x15642 (* 2.0 ?x15641)))
 (let ((?x15638 (* l_0_10_38 l_0_10_38)))
 (let ((?x15639 (* 2.0 ?x15638)))
 (let ((?x15635 (* l_0_10_37 l_0_10_37)))
 (let ((?x15636 (* 2.0 ?x15635)))
 (let ((?x15630 (- (* (* (- 2.0) l_0_10_22) l_0_10_22) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x15634 (- (- ?x15630 (* (* 2.0 l_0_10_24) l_0_10_24)) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (let ((?x15649 (+ (+ (+ (+ (+ (+ (+ ?x15634 ?x15636) ?x15639) ?x15642) ?x15645) ?x5416) ?x15265) ?x15267)))
 (let ((?x15653 (- (- ?x15649 (* (* 2.0 l_0_10_52) l_0_10_52)) (* (* 2.0 l_0_10_53) l_0_10_53))))
 (let ((?x15657 (- (- ?x15653 (* (* 2.0 l_0_10_54) l_0_10_54)) (* (* 2.0 l_0_10_55) l_0_10_55))))
 (let ((?x15668 (+ (+ (+ (+ (- (- (- ?x15657 ?x15270) ?x15272) ?x15274) ?x15661) ?x15663) ?x15665) ?x15667)))
 (= (+ (+ (+ ?x15668 ?x14795) ?x14800) ?x14805) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15712 (* l_0_10_93 l_0_10_93)))
 (let ((?x15710 (* l_0_10_92 l_0_10_92)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13654 (* ?x13555 l_0_10_32)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13651 (* ?x13552 l_0_10_17)))
 (let ((?x15686 (* l_0_10_153 l_0_10_153)))
 (let ((?x15684 (* l_0_10_152 l_0_10_152)))
 (let ((?x12749 (* l_0_10_138 l_0_10_138)))
 (let ((?x12751 (* l_0_10_137 l_0_10_137)))
 (let ((?x6307 (* l_0_10_123 l_0_10_123)))
 (let ((?x12754 (* l_0_10_122 l_0_10_122)))
 (let ((?x12753 (- (- (* (- l_0_10_107) l_0_10_107) (* l_0_10_108 l_0_10_108)) ?x12754)))
 (let ((?x15691 (- (+ (- (- (- (- (- ?x12753 ?x6307) ?x12751) ?x12749) ?x15684) ?x15686) ?x13651) (* (* 1.0 l_0_10_17) l_0_10_17))))
 (let ((?x15697 (+ (- (- ?x15691 (* (* 1.0 l_0_10_18) l_0_10_18)) ?x13654) (* 1.0 (* l_0_10_32 l_0_10_32)))))
 (let ((?x15702 (- (+ ?x15697 (* 1.0 (* l_0_10_33 l_0_10_33))) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (let ((?x15707 (+ (- ?x15702 (* (* 1.0 l_0_10_48) l_0_10_48)) (* 1.0 (* l_0_10_62 l_0_10_62)))))
 (= (- (- (+ ?x15707 (* 1.0 (* l_0_10_63 l_0_10_63))) ?x15710) ?x15712) 0.0)))))))))))))))))))
(assert
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x13992 (* ?x13991 l_0_10_77)))
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15225 (* ?x13988 l_0_10_68)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15223 (* ?x13985 l_0_10_67)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13659 (* ?x13563 l_0_10_62)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15221 (* ?x13982 l_0_10_53)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x12293 (* ?x13979 l_0_10_52)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13657 (* ?x13558 l_0_10_47)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x15748 (* ?x13976 l_0_10_38)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x15746 (* ?x13973 l_0_10_37)))
 (let ((?x13555 (* 2.0 l_0_10_31)))
 (let ((?x13556 (* ?x13555 l_0_10_37)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x15743 (* ?x13969 l_0_10_23)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x15741 (* ?x13966 l_0_10_22)))
 (let ((?x13552 (* 2.0 l_0_10_16)))
 (let ((?x13553 (* ?x13552 l_0_10_22)))
 (let ((?x15727 (- (* (* (- 2.0) l_0_10_107) l_0_10_112) (* (* 2.0 l_0_10_108) l_0_10_113))))
 (let ((?x15731 (- (- ?x15727 (* (* 2.0 l_0_10_122) l_0_10_127)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x15735 (- (- ?x15731 (* (* 2.0 l_0_10_137) l_0_10_142)) (* (* 2.0 l_0_10_138) l_0_10_143))))
 (let ((?x15739 (- (- ?x15735 (* (* 2.0 l_0_10_152) l_0_10_157)) (* (* 2.0 l_0_10_153) l_0_10_158))))
 (let ((?x15750 (+ (+ (+ (- (- (- (+ ?x15739 ?x13553) ?x15741) ?x15743) ?x13556) ?x15746) ?x15748) ?x13657)))
 (let ((?x15758 (- (+ (+ (+ (- (- (- ?x15750 ?x12293) ?x15221) ?x13659) ?x15223) ?x15225) ?x13992) (* (* 2.0 l_0_10_92) l_0_10_97))))
 (= (- ?x15758 (* (* 2.0 l_0_10_93) l_0_10_98)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15884 (* l_0_10_99 l_0_10_99)))
 (let ((?x15882 (* l_0_10_98 l_0_10_98)))
 (let ((?x15880 (* l_0_10_97 l_0_10_97)))
 (let ((?x13991 (* 2.0 l_0_10_76)))
 (let ((?x14283 (* ?x13991 l_0_10_82)))
 (let ((?x13563 (* 2.0 l_0_10_61)))
 (let ((?x13564 (* ?x13563 l_0_10_67)))
 (let ((?x13558 (* 2.0 l_0_10_46)))
 (let ((?x13559 (* ?x13558 l_0_10_52)))
 (let ((?x15835 (* l_0_10_160 l_0_10_160)))
 (let ((?x15833 (* l_0_10_159 l_0_10_159)))
 (let ((?x15831 (* l_0_10_158 l_0_10_158)))
 (let ((?x15829 (* l_0_10_157 l_0_10_157)))
 (let ((?x15827 (* l_0_10_145 l_0_10_145)))
 (let ((?x15825 (* l_0_10_144 l_0_10_144)))
 (let ((?x15823 (* l_0_10_143 l_0_10_143)))
 (let ((?x15821 (* l_0_10_142 l_0_10_142)))
 (let ((?x15819 (* l_0_10_130 l_0_10_130)))
 (let ((?x15817 (* l_0_10_129 l_0_10_129)))
 (let ((?x15815 (* l_0_10_128 l_0_10_128)))
 (let ((?x15813 (* l_0_10_127 l_0_10_127)))
 (let ((?x15811 (* l_0_10_115 l_0_10_115)))
 (let ((?x15809 (* l_0_10_114 l_0_10_114)))
 (let ((?x15807 (* l_0_10_113 l_0_10_113)))
 (let ((?x15808 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_112 l_0_10_112)) ?x15807)))
 (let ((?x15822 (- (- (- (- (- (- (- ?x15808 ?x15809) ?x15811) ?x15813) ?x15815) ?x15817) ?x15819) ?x15821)))
 (let ((?x15836 (- (- (- (- (- (- (- ?x15822 ?x15823) ?x15825) ?x15827) ?x15829) ?x15831) ?x15833) ?x15835)))
 (let ((?x15842 (- (- ?x15836 (* (* 1.0 l_0_10_22) l_0_10_22)) (* (* 1.0 l_0_10_23) l_0_10_23))))
 (let ((?x15848 (- (- ?x15842 (* (* 1.0 l_0_10_24) l_0_10_24)) (* (* 1.0 l_0_10_25) l_0_10_25))))
 (let ((?x15852 (+ (+ ?x15848 (* 1.0 (* l_0_10_37 l_0_10_37))) (* 1.0 (* l_0_10_38 l_0_10_38)))))
 (let ((?x15856 (+ (+ ?x15852 (* 1.0 (* l_0_10_39 l_0_10_39))) (* 1.0 (* l_0_10_40 l_0_10_40)))))
 (let ((?x15863 (- (- (+ ?x15856 ?x13559) (* (* 1.0 l_0_10_52) l_0_10_52)) (* (* 1.0 l_0_10_53) l_0_10_53))))
 (let ((?x15869 (- (- ?x15863 (* (* 1.0 l_0_10_54) l_0_10_54)) (* (* 1.0 l_0_10_55) l_0_10_55))))
 (let ((?x15874 (+ (+ (- ?x15869 ?x13564) (* 1.0 (* l_0_10_67 l_0_10_67))) (* 1.0 (* l_0_10_68 l_0_10_68)))))
 (let ((?x15878 (+ (+ ?x15874 (* 1.0 (* l_0_10_69 l_0_10_69))) (* 1.0 (* l_0_10_70 l_0_10_70)))))
 (= (- (- (- (+ ?x15878 ?x14283) ?x15880) ?x15882) ?x15884) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15547 (* l_0_10_33 l_0_10_33)))
 (let ((?x15543 (* l_0_10_32 l_0_10_32)))
 (let ((?x15564 (* l_0_10_18 l_0_10_18)))
 (let ((?x15559 (* l_0_10_17 l_0_10_17)))
 (let ((?x15928 (+ ?x15559 ?x15564)))
 (= (- (- ?x15928 ?x15543) ?x15547) 0.0)))))))
(assert
 (let ((?x14535 (* l_0_10_78 l_0_10_78)))
 (let ((?x14533 (* l_0_10_77 l_0_10_77)))
 (let ((?x15195 (* l_0_10_63 l_0_10_63)))
 (let ((?x15193 (* l_0_10_62 l_0_10_62)))
 (let ((?x15191 (* l_0_10_48 l_0_10_48)))
 (let ((?x15189 (* l_0_10_47 l_0_10_47)))
 (let ((?x13976 (* 2.0 l_0_10_33)))
 (let ((?x15748 (* ?x13976 l_0_10_38)))
 (let ((?x13973 (* 2.0 l_0_10_32)))
 (let ((?x15746 (* ?x13973 l_0_10_37)))
 (let ((?x13969 (* 2.0 l_0_10_18)))
 (let ((?x15743 (* ?x13969 l_0_10_23)))
 (let ((?x13966 (* 2.0 l_0_10_17)))
 (let ((?x15741 (* ?x13966 l_0_10_22)))
 (let ((?x15944 (- (- (+ (+ (- (- (+ ?x15741 ?x15743) ?x15746) ?x15748) ?x15189) ?x15191) ?x15193) ?x15195)))
 (= (+ (+ ?x15944 ?x14533) ?x14535) 0.0)))))))))))))))))
(assert
 (let ((?x14573 (* 2.0 l_0_10_78)))
 (let ((?x14620 (* ?x14573 l_0_10_83)))
 (let ((?x14570 (* 2.0 l_0_10_77)))
 (let ((?x14616 (* ?x14570 l_0_10_82)))
 (let ((?x13988 (* 2.0 l_0_10_63)))
 (let ((?x15225 (* ?x13988 l_0_10_68)))
 (let ((?x13985 (* 2.0 l_0_10_62)))
 (let ((?x15223 (* ?x13985 l_0_10_67)))
 (let ((?x13982 (* 2.0 l_0_10_48)))
 (let ((?x15221 (* ?x13982 l_0_10_53)))
 (let ((?x13979 (* 2.0 l_0_10_47)))
 (let ((?x12293 (* ?x13979 l_0_10_52)))
 (let ((?x15644 (* l_0_10_40 l_0_10_40)))
 (let ((?x15641 (* l_0_10_39 l_0_10_39)))
 (let ((?x15638 (* l_0_10_38 l_0_10_38)))
 (let ((?x15635 (* l_0_10_37 l_0_10_37)))
 (let ((?x6025 (* l_0_10_25 l_0_10_25)))
 (let ((?x9662 (* l_0_10_24 l_0_10_24)))
 (let ((?x1115 (+ (+ (+ (* l_0_10_22 l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x9662) ?x6025)))
 (let ((?x9947 (- (+ (+ (- (- (- (- ?x1115 ?x15635) ?x15638) ?x15641) ?x15644) ?x12293) ?x15221) ?x15223)))
 (= (+ (+ (- ?x9947 ?x15225) ?x14616) ?x14620) 0.0))))))))))))))))))))))
(assert
 (let ((?x15000 (* l_0_10_85 l_0_10_85)))
 (let ((?x14995 (* l_0_10_84 l_0_10_84)))
 (let ((?x14990 (* l_0_10_83 l_0_10_83)))
 (let ((?x14985 (* l_0_10_82 l_0_10_82)))
 (let ((?x15305 (* l_0_10_70 l_0_10_70)))
 (let ((?x15302 (* l_0_10_69 l_0_10_69)))
 (let ((?x15300 (* l_0_10_68 l_0_10_68)))
 (let ((?x15298 (* l_0_10_67 l_0_10_67)))
 (let ((?x15296 (* l_0_10_55 l_0_10_55)))
 (let ((?x15294 (* l_0_10_54 l_0_10_54)))
 (let ((?x15964 (+ (+ (+ (* l_0_10_52 l_0_10_52) (* l_0_10_53 l_0_10_53)) ?x15294) ?x15296)))
 (let ((?x15971 (+ (+ (+ (- (- (- (- ?x15964 ?x15298) ?x15300) ?x15302) ?x15305) ?x14985) ?x14990) ?x14995)))
 (= (+ ?x15971 ?x15000) 0.0))))))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_151 0.0))
(assert
 (>= l_0_10_153 0.0))
(assert
 (>= l_0_10_156 0.0))
(assert
 (>= l_0_10_160 0.0))
(assert
 (>= l_0_10_165 0.0))
(check-sat)
(get-model)