(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_8 () Real)
(declare-fun l_0_3_7 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_4_9 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_4_10 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_5_97 () Real)
(declare-fun l_0_5_91 () Real)
(declare-fun l_0_5_76 () Real)
(declare-fun l_0_5_67 () Real)
(declare-fun l_0_5_61 () Real)
(declare-fun l_0_5_52 () Real)
(declare-fun l_0_5_46 () Real)
(declare-fun l_0_5_37 () Real)
(declare-fun l_0_5_31 () Real)
(declare-fun l_0_5_22 () Real)
(declare-fun l_0_5_16 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_96 () Real)
(declare-fun l_0_5_95 () Real)
(declare-fun l_0_5_94 () Real)
(declare-fun l_0_5_66 () Real)
(declare-fun l_0_5_65 () Real)
(declare-fun l_0_5_64 () Real)
(declare-fun l_0_5_51 () Real)
(declare-fun l_0_5_50 () Real)
(declare-fun l_0_5_49 () Real)
(declare-fun l_0_5_36 () Real)
(declare-fun l_0_5_35 () Real)
(declare-fun l_0_5_34 () Real)
(declare-fun l_0_5_21 () Real)
(declare-fun l_0_5_20 () Real)
(declare-fun l_0_5_19 () Real)
(declare-fun l_0_5_98 () Real)
(declare-fun l_0_5_93 () Real)
(declare-fun l_0_5_92 () Real)
(declare-fun l_0_5_82 () Real)
(declare-fun l_0_5_77 () Real)
(declare-fun l_0_5_68 () Real)
(declare-fun l_0_5_63 () Real)
(declare-fun l_0_5_62 () Real)
(declare-fun l_0_5_53 () Real)
(declare-fun l_0_5_48 () Real)
(declare-fun l_0_5_47 () Real)
(declare-fun l_0_5_38 () Real)
(declare-fun l_0_5_33 () Real)
(declare-fun l_0_5_32 () Real)
(declare-fun l_0_5_23 () Real)
(declare-fun l_0_5_18 () Real)
(declare-fun l_0_5_17 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_99 () Real)
(declare-fun l_0_5_79 () Real)
(declare-fun l_0_5_69 () Real)
(declare-fun l_0_5_54 () Real)
(declare-fun l_0_5_39 () Real)
(declare-fun l_0_5_24 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_70 () Real)
(declare-fun l_0_5_55 () Real)
(declare-fun l_0_5_40 () Real)
(declare-fun l_0_5_25 () Real)
(declare-fun l_0_5_100 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_86 () Real)
(declare-fun l_0_5_74 () Real)
(declare-fun l_0_5_73 () Real)
(declare-fun l_0_5_72 () Real)
(declare-fun l_0_5_71 () Real)
(declare-fun l_0_5_59 () Real)
(declare-fun l_0_5_58 () Real)
(declare-fun l_0_5_57 () Real)
(declare-fun l_0_5_56 () Real)
(declare-fun l_0_5_44 () Real)
(declare-fun l_0_5_43 () Real)
(declare-fun l_0_5_42 () Real)
(declare-fun l_0_5_41 () Real)
(declare-fun l_0_5_29 () Real)
(declare-fun l_0_5_28 () Real)
(declare-fun l_0_5_27 () Real)
(declare-fun l_0_5_26 () Real)
(declare-fun l_0_5_103 () Real)
(declare-fun l_0_5_102 () Real)
(declare-fun l_0_5_101 () Real)
(declare-fun l_0_5_104 () Real)
(declare-fun l_0_5_11 () Real)
(declare-fun l_0_5_78 () Real)
(declare-fun l_0_5_83 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_84 () Real)
(declare-fun l_0_5_81 () Real)
(declare-fun l_0_5_80 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_85 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_89 () Real)
(declare-fun l_0_5_88 () Real)
(declare-fun l_0_5_87 () Real)
(declare-fun l_0_5_12 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_13 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_5_14 () Real)
(declare-fun l_0_5_90 () Real)
(declare-fun l_0_5_15 () Real)
(declare-fun l_0_5_75 () Real)
(declare-fun l_0_5_60 () Real)
(declare-fun l_0_5_45 () Real)
(declare-fun l_0_5_30 () Real)
(declare-fun l_0_5_105 () Real)
(declare-fun l_0_6_97 () Real)
(declare-fun l_0_6_91 () Real)
(declare-fun l_0_6_76 () Real)
(declare-fun l_0_6_67 () Real)
(declare-fun l_0_6_61 () Real)
(declare-fun l_0_6_52 () Real)
(declare-fun l_0_6_46 () Real)
(declare-fun l_0_6_37 () Real)
(declare-fun l_0_6_31 () Real)
(declare-fun l_0_6_22 () Real)
(declare-fun l_0_6_16 () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun l_0_6_96 () Real)
(declare-fun l_0_6_95 () Real)
(declare-fun l_0_6_94 () Real)
(declare-fun l_0_6_66 () Real)
(declare-fun l_0_6_65 () Real)
(declare-fun l_0_6_64 () Real)
(declare-fun l_0_6_51 () Real)
(declare-fun l_0_6_50 () Real)
(declare-fun l_0_6_49 () Real)
(declare-fun l_0_6_36 () Real)
(declare-fun l_0_6_35 () Real)
(declare-fun l_0_6_34 () Real)
(declare-fun l_0_6_21 () Real)
(declare-fun l_0_6_20 () Real)
(declare-fun l_0_6_19 () Real)
(declare-fun l_0_6_98 () Real)
(declare-fun l_0_6_93 () Real)
(declare-fun l_0_6_92 () Real)
(declare-fun l_0_6_82 () Real)
(declare-fun l_0_6_77 () Real)
(declare-fun l_0_6_68 () Real)
(declare-fun l_0_6_63 () Real)
(declare-fun l_0_6_62 () Real)
(declare-fun l_0_6_53 () Real)
(declare-fun l_0_6_48 () Real)
(declare-fun l_0_6_47 () Real)
(declare-fun l_0_6_38 () Real)
(declare-fun l_0_6_33 () Real)
(declare-fun l_0_6_32 () Real)
(declare-fun l_0_6_23 () Real)
(declare-fun l_0_6_18 () Real)
(declare-fun l_0_6_17 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_99 () Real)
(declare-fun l_0_6_79 () Real)
(declare-fun l_0_6_69 () Real)
(declare-fun l_0_6_54 () Real)
(declare-fun l_0_6_39 () Real)
(declare-fun l_0_6_24 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_70 () Real)
(declare-fun l_0_6_55 () Real)
(declare-fun l_0_6_40 () Real)
(declare-fun l_0_6_25 () Real)
(declare-fun l_0_6_100 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_86 () Real)
(declare-fun l_0_6_74 () Real)
(declare-fun l_0_6_73 () Real)
(declare-fun l_0_6_72 () Real)
(declare-fun l_0_6_71 () Real)
(declare-fun l_0_6_59 () Real)
(declare-fun l_0_6_58 () Real)
(declare-fun l_0_6_57 () Real)
(declare-fun l_0_6_56 () Real)
(declare-fun l_0_6_44 () Real)
(declare-fun l_0_6_43 () Real)
(declare-fun l_0_6_42 () Real)
(declare-fun l_0_6_41 () Real)
(declare-fun l_0_6_29 () Real)
(declare-fun l_0_6_28 () Real)
(declare-fun l_0_6_27 () Real)
(declare-fun l_0_6_26 () Real)
(declare-fun l_0_6_103 () Real)
(declare-fun l_0_6_102 () Real)
(declare-fun l_0_6_101 () Real)
(declare-fun l_0_6_104 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_78 () Real)
(declare-fun l_0_6_83 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_84 () Real)
(declare-fun l_0_6_81 () Real)
(declare-fun l_0_6_80 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_85 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_89 () Real)
(declare-fun l_0_6_88 () Real)
(declare-fun l_0_6_87 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_13 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun l_0_6_14 () Real)
(declare-fun l_0_6_90 () Real)
(declare-fun l_0_6_15 () Real)
(declare-fun l_0_6_75 () Real)
(declare-fun l_0_6_60 () Real)
(declare-fun l_0_6_45 () Real)
(declare-fun l_0_6_30 () Real)
(declare-fun l_0_6_105 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_109 () Real)
(declare-fun l_0_7_106 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_116 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_112 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_113 () Real)
(declare-fun l_0_7_108 () Real)
(declare-fun l_0_7_107 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_114 () Real)
(declare-fun l_0_7_111 () Real)
(declare-fun l_0_7_110 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_115 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_119 () Real)
(declare-fun l_0_7_118 () Real)
(declare-fun l_0_7_117 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_120 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_121 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_131 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_124 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_127 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_128 () Real)
(declare-fun l_0_8_123 () Real)
(declare-fun l_0_8_122 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_129 () Real)
(declare-fun l_0_8_126 () Real)
(declare-fun l_0_8_125 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_130 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_134 () Real)
(declare-fun l_0_8_133 () Real)
(declare-fun l_0_8_132 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_135 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_141 () Real)
(declare-fun l_0_9_140 () Real)
(declare-fun l_0_9_139 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_136 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_146 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_137 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun _a_4_ () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_142 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_143 () Real)
(declare-fun l_0_9_138 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_144 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_145 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_149 () Real)
(declare-fun l_0_9_148 () Real)
(declare-fun l_0_9_147 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_150 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_151 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_161 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_152 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_156 () Real)
(declare-fun l_0_10_155 () Real)
(declare-fun l_0_10_154 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_157 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_158 () Real)
(declare-fun l_0_10_153 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_159 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_160 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_164 () Real)
(declare-fun l_0_10_163 () Real)
(declare-fun l_0_10_162 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_165 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_105 () Real)
(assert
 (= (- 1.0 l_0_0_1) 0.0))
(assert
 (= (- l_0_0_2) 0.0))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_2 0.0))
(assert
 (= (- (- (- l_0_1_2) l_0_1_3) l_0_1_4) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_4 0.0))
(assert
 (= (- (- (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) l_0_2_5) l_0_2_6) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (>= l_0_2_5 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (let ((?x907 (- (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) l_0_3_7)))
 (= (- ?x907 l_0_3_8) 0.0)))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (>= l_0_3_7 0.0))
(assert
 (>= l_0_3_8 0.0))
(assert
 (let ((?x947 (- (- (- (- (- (- l_0_4_10) l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6)))
 (= (- (- (- ?x947 l_0_4_7) l_0_4_8) l_0_4_9) 0.0)))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (>= l_0_4_9 0.0))
(assert
 (>= l_0_4_10 0.0))
(assert
 (let ((?x1008 (* l_0_5_76 l_0_5_76)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x1006 (* ?x1005 l_0_5_67)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x1003 (* ?x1002 l_0_5_52)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x1000 (* ?x999 l_0_5_37)))
 (let ((?x1001 (+ (- (* (- l_0_5_1) l_0_5_1) (* (* 2.0 l_0_5_16) l_0_5_22)) ?x1000)))
 (let ((?x1012 (- (+ (+ (- ?x1001 ?x1003) ?x1006) ?x1008) (* (* 2.0 l_0_5_91) l_0_5_97))))
 (= (+ ?x1012 1.0) 0.0)))))))))))
(assert
 (let ((?x1101 (* l_0_5_96 l_0_5_96)))
 (let ((?x1099 (* l_0_5_95 l_0_5_95)))
 (let ((?x1097 (* l_0_5_94 l_0_5_94)))
 (let ((?x1086 (* l_0_5_61 l_0_5_61)))
 (let ((?x1072 (* l_0_5_46 l_0_5_46)))
 (let ((?x1050 (- (- (* l_0_5_1 l_0_5_1) (* (* 4.0 l_0_5_16) l_0_5_19)) (* (* 1.0 l_0_5_19) l_0_5_19))))
 (let ((?x1056 (- (- ?x1050 (* (* 1.0 l_0_5_20) l_0_5_20)) (* (* 1.0 l_0_5_21) l_0_5_21))))
 (let ((?x1062 (+ (+ ?x1056 (* (* 4.0 l_0_5_31) l_0_5_34)) (* 1.0 (* l_0_5_34 l_0_5_34)))))
 (let ((?x1068 (+ (+ ?x1062 (* 1.0 (* l_0_5_35 l_0_5_35))) (* 1.0 (* l_0_5_36 l_0_5_36)))))
 (let ((?x1076 (- (- (- ?x1068 (* (* 4.0 l_0_5_46) l_0_5_49)) ?x1072) (* (* 1.0 l_0_5_49) l_0_5_49))))
 (let ((?x1082 (- (- ?x1076 (* (* 1.0 l_0_5_50) l_0_5_50)) (* (* 1.0 l_0_5_51) l_0_5_51))))
 (let ((?x1090 (+ (+ (+ ?x1082 (* (* 4.0 l_0_5_61) l_0_5_64)) ?x1086) (* 1.0 (* l_0_5_64 l_0_5_64)))))
 (let ((?x1096 (+ (+ ?x1090 (* 1.0 (* l_0_5_65 l_0_5_65))) (* 1.0 (* l_0_5_66 l_0_5_66)))))
 (= (- (- (- (- ?x1096 ?x1097) ?x1099) ?x1101) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1195 (* ?x1192 l_0_5_82)))
 (let ((?x1193 (* ?x1192 l_0_5_77)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x1190 (* ?x1189 l_0_5_68)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x1187 (* ?x1186 l_0_5_67)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x1006 (* ?x1005 l_0_5_67)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x1183 (* ?x1182 l_0_5_53)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x1180 (* ?x1179 l_0_5_52)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x1003 (* ?x1002 l_0_5_52)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x1176 (* ?x1175 l_0_5_38)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x1173 (* ?x1172 l_0_5_37)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x1170 (* ?x1169 l_0_5_23)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x1167 (* ?x1166 l_0_5_22)))
 (let ((?x1177 (+ (+ (- (- (* (* (- 2.0) l_0_5_1) l_0_5_2) ?x1167) ?x1170) ?x1173) ?x1176)))
 (let ((?x1194 (+ (+ (+ (- (- (- (+ ?x1177 ?x1003) ?x1180) ?x1183) ?x1006) ?x1187) ?x1190) ?x1193)))
 (let ((?x1202 (- (- (- ?x1194 ?x1195) (* (* 2.0 l_0_5_92) l_0_5_97)) (* (* 2.0 l_0_5_93) l_0_5_98))))
 (= ?x1202 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1310 (* ?x1192 l_0_5_79)))
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x1308 (* ?x1307 l_0_5_69)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x1305 (* ?x1304 l_0_5_68)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x1302 (* ?x1301 l_0_5_67)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x1297 (* ?x1296 l_0_5_54)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x1294 (* ?x1293 l_0_5_53)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x1291 (* ?x1290 l_0_5_52)))
 (let ((?x1285 (* 2.0 l_0_5_36)))
 (let ((?x1286 (* ?x1285 l_0_5_39)))
 (let ((?x1282 (* 2.0 l_0_5_35)))
 (let ((?x1283 (* ?x1282 l_0_5_38)))
 (let ((?x1279 (* 2.0 l_0_5_34)))
 (let ((?x1280 (* ?x1279 l_0_5_37)))
 (let ((?x1274 (* 2.0 l_0_5_21)))
 (let ((?x1275 (* ?x1274 l_0_5_24)))
 (let ((?x1271 (* 2.0 l_0_5_20)))
 (let ((?x1272 (* ?x1271 l_0_5_23)))
 (let ((?x1268 (* 2.0 l_0_5_19)))
 (let ((?x1269 (* ?x1268 l_0_5_22)))
 (let ((?x1267 (- (* (* (- 2.0) l_0_5_1) l_0_5_4) (* (* 4.0 l_0_5_16) l_0_5_22))))
 (let ((?x1278 (+ (- (- (- ?x1267 ?x1269) ?x1272) ?x1275) (* (* 4.0 l_0_5_31) l_0_5_37))))
 (let ((?x1289 (- (+ (+ (+ ?x1278 ?x1280) ?x1283) ?x1286) (* (* 4.0 l_0_5_46) l_0_5_52))))
 (let ((?x1300 (+ (- (- (- ?x1289 ?x1291) ?x1294) ?x1297) (* (* 4.0 l_0_5_61) l_0_5_67))))
 (let ((?x1314 (- (+ (+ (+ (+ ?x1300 ?x1302) ?x1305) ?x1308) ?x1310) (* (* 2.0 l_0_5_94) l_0_5_97))))
 (let ((?x1320 (- (- ?x1314 (* (* 2.0 l_0_5_95) l_0_5_98)) (* (* 2.0 l_0_5_96) l_0_5_99))))
 (= ?x1320 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1474 (* l_0_5_99 l_0_5_99)))
 (let ((?x1472 (* l_0_5_98 l_0_5_98)))
 (let ((?x1470 (* l_0_5_97 l_0_5_97)))
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1195 (* ?x1192 l_0_5_82)))
 (let ((?x1423 (- (- (* (* (- 2.0) l_0_5_1) l_0_5_7) (* l_0_5_100 l_0_5_100)) (* (* 1.0 l_0_5_22) l_0_5_22))))
 (let ((?x1429 (- (- ?x1423 (* (* 1.0 l_0_5_23) l_0_5_23)) (* (* 1.0 l_0_5_24) l_0_5_24))))
 (let ((?x1435 (+ (- ?x1429 (* (* 1.0 l_0_5_25) l_0_5_25)) (* 1.0 (* l_0_5_37 l_0_5_37)))))
 (let ((?x1441 (+ (+ ?x1435 (* 1.0 (* l_0_5_38 l_0_5_38))) (* 1.0 (* l_0_5_39 l_0_5_39)))))
 (let ((?x1447 (- (+ ?x1441 (* 1.0 (* l_0_5_40 l_0_5_40))) (* (* 1.0 l_0_5_52) l_0_5_52))))
 (let ((?x1453 (- (- ?x1447 (* (* 1.0 l_0_5_53) l_0_5_53)) (* (* 1.0 l_0_5_54) l_0_5_54))))
 (let ((?x1459 (+ (- ?x1453 (* (* 1.0 l_0_5_55) l_0_5_55)) (* 1.0 (* l_0_5_67 l_0_5_67)))))
 (let ((?x1465 (+ (+ ?x1459 (* 1.0 (* l_0_5_68 l_0_5_68))) (* 1.0 (* l_0_5_69 l_0_5_69)))))
 (let ((?x1473 (- (- (+ (+ ?x1465 (* 1.0 (* l_0_5_70 l_0_5_70))) ?x1195) ?x1470) ?x1472)))
 (= (- ?x1473 ?x1474) 0.0))))))))))))))))
(assert
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1589 (* ?x1192 l_0_5_86)))
 (let ((?x1587 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x1584 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1581 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1578 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1574 (* 2.0 l_0_5_55)))
 (let ((?x1575 (* ?x1574 l_0_5_59)))
 (let ((?x1571 (* 2.0 l_0_5_54)))
 (let ((?x1572 (* ?x1571 l_0_5_58)))
 (let ((?x1568 (* 2.0 l_0_5_53)))
 (let ((?x1569 (* ?x1568 l_0_5_57)))
 (let ((?x1565 (* 2.0 l_0_5_52)))
 (let ((?x1566 (* ?x1565 l_0_5_56)))
 (let ((?x1563 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x1560 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x1557 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x1554 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x1000 (* ?x999 l_0_5_37)))
 (let ((?x1549 (* 2.0 l_0_5_25)))
 (let ((?x1550 (* ?x1549 l_0_5_29)))
 (let ((?x1546 (* 2.0 l_0_5_24)))
 (let ((?x1547 (* ?x1546 l_0_5_28)))
 (let ((?x1543 (* 2.0 l_0_5_23)))
 (let ((?x1544 (* ?x1543 l_0_5_27)))
 (let ((?x1541 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x996 (* 2.0 l_0_5_16)))
 (let ((?x997 (* ?x996 l_0_5_22)))
 (let ((?x1529 (- (* (* (- 2.0) l_0_5_1) l_0_5_11) (* (* 2.0 l_0_5_100) l_0_5_104))))
 (let ((?x1535 (- (- ?x1529 (* (* 2.0 l_0_5_101) l_0_5_97)) (* (* 2.0 l_0_5_102) l_0_5_98))))
 (let ((?x1545 (- (- (+ (- ?x1535 (* (* 2.0 l_0_5_103) l_0_5_99)) ?x997) ?x1541) ?x1544)))
 (let ((?x1564 (+ (+ (+ (+ (- (- (- ?x1545 ?x1547) ?x1550) ?x1000) ?x1554) ?x1557) ?x1560) ?x1563)))
 (let ((?x1585 (+ (+ (+ (- (- (- (- ?x1564 ?x1566) ?x1569) ?x1572) ?x1575) ?x1578) ?x1581) ?x1584)))
 (= (+ (+ ?x1585 ?x1587) ?x1589) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1708 (* l_0_5_78 l_0_5_78)))
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1706 (* ?x1705 l_0_5_83)))
 (let ((?x1703 (* l_0_5_77 l_0_5_77)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1701 (* ?x1700 l_0_5_82)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x1190 (* ?x1189 l_0_5_68)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x1187 (* ?x1186 l_0_5_67)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x1183 (* ?x1182 l_0_5_53)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x1180 (* ?x1179 l_0_5_52)))
 (let ((?x1697 (+ (+ (- (* (- l_0_5_2) l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x1180) ?x1183)))
 (= (+ (- (+ (- (- (- ?x1697 ?x1187) ?x1190) ?x1701) ?x1703) ?x1706) ?x1708) 0.0)))))))))))))))))
(assert
 (let ((?x1786 (* 2.0 l_0_5_81)))
 (let ((?x1787 (* ?x1786 l_0_5_84)))
 (let ((?x1783 (* 2.0 l_0_5_80)))
 (let ((?x1784 (* ?x1783 l_0_5_83)))
 (let ((?x1780 (* 2.0 l_0_5_79)))
 (let ((?x1781 (* ?x1780 l_0_5_82)))
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1778 (* ?x1705 l_0_5_80)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1776 (* ?x1700 l_0_5_79)))
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x1308 (* ?x1307 l_0_5_69)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x1305 (* ?x1304 l_0_5_68)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x1302 (* ?x1301 l_0_5_67)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x1297 (* ?x1296 l_0_5_54)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x1294 (* ?x1293 l_0_5_53)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x1291 (* ?x1290 l_0_5_52)))
 (let ((?x1749 (* 2.0 l_0_5_3)))
 (let ((?x1750 (* ?x1749 l_0_5_5)))
 (let ((?x1746 (* 2.0 l_0_5_2)))
 (let ((?x1747 (* ?x1746 l_0_5_4)))
 (let ((?x1745 (- (* (* (- 4.0) l_0_5_17) l_0_5_22) (* (* 4.0 l_0_5_18) l_0_5_23))))
 (let ((?x1757 (+ (+ (- (- ?x1745 ?x1747) ?x1750) (* (* 4.0 l_0_5_32) l_0_5_37)) (* (* 4.0 l_0_5_33) l_0_5_38))))
 (let ((?x1763 (- (- ?x1757 (* (* 4.0 l_0_5_47) l_0_5_52)) (* (* 4.0 l_0_5_48) l_0_5_53))))
 (let ((?x1769 (+ (+ (+ (+ ?x1763 ?x1291) ?x1294) ?x1297) (* (* 4.0 l_0_5_62) l_0_5_67))))
 (let ((?x1775 (- (- (- (+ ?x1769 (* (* 4.0 l_0_5_63) l_0_5_68)) ?x1302) ?x1305) ?x1308)))
 (= (- (- (- (+ (+ ?x1775 ?x1776) ?x1778) ?x1781) ?x1784) ?x1787) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x1885 (* l_0_5_85 l_0_5_85)))
 (let ((?x1883 (* l_0_5_84 l_0_5_84)))
 (let ((?x1881 (* l_0_5_83 l_0_5_83)))
 (let ((?x1879 (* l_0_5_82 l_0_5_82)))
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1706 (* ?x1705 l_0_5_83)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1701 (* ?x1700 l_0_5_82)))
 (let ((?x1466 (* l_0_5_70 l_0_5_70)))
 (let ((?x1463 (* l_0_5_69 l_0_5_69)))
 (let ((?x1460 (* l_0_5_68 l_0_5_68)))
 (let ((?x1457 (* l_0_5_67 l_0_5_67)))
 (let ((?x1511 (* l_0_5_55 l_0_5_55)))
 (let ((?x1507 (* l_0_5_54 l_0_5_54)))
 (let ((?x1503 (* l_0_5_53 l_0_5_53)))
 (let ((?x1499 (* l_0_5_52 l_0_5_52)))
 (let ((?x1749 (* 2.0 l_0_5_3)))
 (let ((?x1867 (* ?x1749 l_0_5_8)))
 (let ((?x1871 (+ (+ (+ (- (* (* (- 2.0) l_0_5_2) l_0_5_7) ?x1867) ?x1499) ?x1503) ?x1507)))
 (let ((?x1878 (+ (+ (- (- (- (- (+ ?x1871 ?x1511) ?x1457) ?x1460) ?x1463) ?x1466) ?x1701) ?x1706)))
 (= (- (- (- (- ?x1878 ?x1879) ?x1881) ?x1883) ?x1885) 0.0))))))))))))))))))))))
(assert
 (let ((?x1956 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x1953 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x1950 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x1947 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1944 (* ?x1705 l_0_5_87)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1942 (* ?x1700 l_0_5_86)))
 (let ((?x1587 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x1584 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1581 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1578 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1574 (* 2.0 l_0_5_55)))
 (let ((?x1575 (* ?x1574 l_0_5_59)))
 (let ((?x1571 (* 2.0 l_0_5_54)))
 (let ((?x1572 (* ?x1571 l_0_5_58)))
 (let ((?x1568 (* 2.0 l_0_5_53)))
 (let ((?x1569 (* ?x1568 l_0_5_57)))
 (let ((?x1565 (* 2.0 l_0_5_52)))
 (let ((?x1566 (* ?x1565 l_0_5_56)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x1176 (* ?x1175 l_0_5_38)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x1173 (* ?x1172 l_0_5_37)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x1170 (* ?x1169 l_0_5_23)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x1167 (* ?x1166 l_0_5_22)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x1928 (* ?x1927 l_0_5_3)))
 (let ((?x1932 (- (+ (+ (- (* (* (- 2.0) l_0_5_11) l_0_5_2) ?x1928) ?x1167) ?x1170) ?x1173)))
 (let ((?x1939 (- (- (+ (+ (+ (+ (- ?x1932 ?x1176) ?x1566) ?x1569) ?x1572) ?x1575) ?x1578) ?x1581)))
 (let ((?x1954 (- (- (- (+ (+ (- (- ?x1939 ?x1584) ?x1587) ?x1942) ?x1944) ?x1947) ?x1950) ?x1953)))
 (= (- ?x1954 ?x1956) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2073 (* l_0_5_81 l_0_5_81)))
 (let ((?x2071 (* l_0_5_80 l_0_5_80)))
 (let ((?x2069 (* l_0_5_79 l_0_5_79)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x1006 (* ?x1005 l_0_5_67)))
 (let ((?x2057 (* l_0_5_6 l_0_5_6)))
 (let ((?x2049 (* l_0_5_5 l_0_5_5)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x1003 (* ?x1002 l_0_5_52)))
 (let ((?x2043 (* l_0_5_4 l_0_5_4)))
 (let ((?x2027 (- (* (* 2.0 l_0_5_1) l_0_5_7) (* (* 4.0 l_0_5_19) l_0_5_22))))
 (let ((?x2033 (- (- ?x2027 (* (* 4.0 l_0_5_20) l_0_5_23)) (* (* 4.0 l_0_5_21) l_0_5_24))))
 (let ((?x2039 (+ (+ ?x2033 (* (* 4.0 l_0_5_34) l_0_5_37)) (* (* 4.0 l_0_5_35) l_0_5_38))))
 (let ((?x2048 (- (- (- (+ ?x2039 (* (* 4.0 l_0_5_36) l_0_5_39)) ?x2043) ?x1003) (* (* 4.0 l_0_5_49) l_0_5_52))))
 (let ((?x2056 (- (- (- ?x2048 ?x2049) (* (* 4.0 l_0_5_50) l_0_5_53)) (* (* 4.0 l_0_5_51) l_0_5_54))))
 (let ((?x2065 (+ (+ (+ (- ?x2056 ?x2057) ?x1006) (* (* 4.0 l_0_5_64) l_0_5_67)) (* (* 4.0 l_0_5_65) l_0_5_68))))
 (let ((?x2074 (+ (+ (+ (+ ?x2065 (* (* 4.0 l_0_5_66) l_0_5_69)) ?x2069) ?x2071) ?x2073)))
 (= ?x2074 0.0)))))))))))))))))))
(assert
 (let ((?x1786 (* 2.0 l_0_5_81)))
 (let ((?x1787 (* ?x1786 l_0_5_84)))
 (let ((?x1783 (* 2.0 l_0_5_80)))
 (let ((?x1784 (* ?x1783 l_0_5_83)))
 (let ((?x1780 (* 2.0 l_0_5_79)))
 (let ((?x1781 (* ?x1780 l_0_5_82)))
 (let ((?x1466 (* l_0_5_70 l_0_5_70)))
 (let ((?x2172 (* 2.0 ?x1466)))
 (let ((?x1463 (* l_0_5_69 l_0_5_69)))
 (let ((?x2170 (* 2.0 ?x1463)))
 (let ((?x1460 (* l_0_5_68 l_0_5_68)))
 (let ((?x2168 (* 2.0 ?x1460)))
 (let ((?x1457 (* l_0_5_67 l_0_5_67)))
 (let ((?x2166 (* 2.0 ?x1457)))
 (let ((?x2164 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x2153 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1442 (* l_0_5_40 l_0_5_40)))
 (let ((?x2150 (* 2.0 ?x1442)))
 (let ((?x2148 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x1439 (* l_0_5_39 l_0_5_39)))
 (let ((?x2145 (* 2.0 ?x1439)))
 (let ((?x1436 (* l_0_5_38 l_0_5_38)))
 (let ((?x2143 (* 2.0 ?x1436)))
 (let ((?x1433 (* l_0_5_37 l_0_5_37)))
 (let ((?x2141 (* 2.0 ?x1433)))
 (let ((?x2125 (- (* (* (- 2.0) l_0_5_22) l_0_5_22) (* (* 2.0 l_0_5_23) l_0_5_23))))
 (let ((?x2140 (- (- ?x2125 (* (* 2.0 l_0_5_24) l_0_5_24)) (* (* 2.0 l_0_5_25) l_0_5_25))))
 (let ((?x2156 (- (- (+ (- (+ (+ (+ ?x2140 ?x2141) ?x2143) ?x2145) ?x2148) ?x2150) ?x2153) (* (* 2.0 l_0_5_52) l_0_5_52))))
 (let ((?x2160 (- (- ?x2156 (* (* 2.0 l_0_5_53) l_0_5_53)) (* (* 2.0 l_0_5_54) l_0_5_54))))
 (let ((?x2169 (+ (+ (- (- ?x2160 (* (* 2.0 l_0_5_55) l_0_5_55)) ?x2164) ?x2166) ?x2168)))
 (= (+ (+ (+ (+ (+ ?x2169 ?x2170) ?x2172) ?x1781) ?x1784) ?x1787) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x1786 (* 2.0 l_0_5_81)))
 (let ((?x2300 (* ?x1786 l_0_5_88)))
 (let ((?x1783 (* 2.0 l_0_5_80)))
 (let ((?x2298 (* ?x1783 l_0_5_87)))
 (let ((?x1780 (* 2.0 l_0_5_79)))
 (let ((?x2296 (* ?x1780 l_0_5_86)))
 (let ((?x1285 (* 2.0 l_0_5_36)))
 (let ((?x1286 (* ?x1285 l_0_5_39)))
 (let ((?x1282 (* 2.0 l_0_5_35)))
 (let ((?x1283 (* ?x1282 l_0_5_38)))
 (let ((?x1279 (* 2.0 l_0_5_34)))
 (let ((?x1280 (* ?x1279 l_0_5_37)))
 (let ((?x1274 (* 2.0 l_0_5_21)))
 (let ((?x1275 (* ?x1274 l_0_5_24)))
 (let ((?x1271 (* 2.0 l_0_5_20)))
 (let ((?x1272 (* ?x1271 l_0_5_23)))
 (let ((?x1268 (* 2.0 l_0_5_19)))
 (let ((?x1269 (* ?x1268 l_0_5_22)))
 (let ((?x2239 (* 2.0 l_0_5_13)))
 (let ((?x2240 (* ?x2239 l_0_5_6)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x2237 (* ?x1927 l_0_5_5)))
 (let ((?x2243 (+ (+ (- (- (* (* (- 2.0) l_0_5_11) l_0_5_4) ?x2237) ?x2240) ?x1269) ?x1272)))
 (let ((?x2250 (- (- (+ ?x2243 ?x1275) (* (* 4.0 l_0_5_22) l_0_5_26)) (* (* 4.0 l_0_5_23) l_0_5_27))))
 (let ((?x2256 (- (- ?x2250 (* (* 4.0 l_0_5_24) l_0_5_28)) (* (* 4.0 l_0_5_25) l_0_5_29))))
 (let ((?x2262 (+ (- (- (- ?x2256 ?x1280) ?x1283) ?x1286) (* (* 4.0 l_0_5_37) l_0_5_41))))
 (let ((?x2268 (+ (+ ?x2262 (* (* 4.0 l_0_5_38) l_0_5_42)) (* (* 4.0 l_0_5_39) l_0_5_43))))
 (let ((?x2274 (- (+ ?x2268 (* (* 4.0 l_0_5_40) l_0_5_44)) (* (* 4.0 l_0_5_52) l_0_5_56))))
 (let ((?x2280 (- (- ?x2274 (* (* 4.0 l_0_5_53) l_0_5_57)) (* (* 4.0 l_0_5_54) l_0_5_58))))
 (let ((?x2286 (+ (- ?x2280 (* (* 4.0 l_0_5_55) l_0_5_59)) (* (* 4.0 l_0_5_67) l_0_5_71))))
 (let ((?x2292 (+ (+ ?x2286 (* (* 4.0 l_0_5_68) l_0_5_72)) (* (* 4.0 l_0_5_69) l_0_5_73))))
 (let ((?x2301 (+ (+ (+ (+ ?x2292 (* (* 4.0 l_0_5_70) l_0_5_74)) ?x2296) ?x2298) ?x2300)))
 (= ?x2301 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x2394 (* l_0_5_9 l_0_5_9)))
 (let ((?x1885 (* l_0_5_85 l_0_5_85)))
 (let ((?x1883 (* l_0_5_84 l_0_5_84)))
 (let ((?x1881 (* l_0_5_83 l_0_5_83)))
 (let ((?x1879 (* l_0_5_82 l_0_5_82)))
 (let ((?x2388 (* l_0_5_8 l_0_5_8)))
 (let ((?x2390 (+ (- (- (* (- l_0_5_10) l_0_5_10) (* l_0_5_7 l_0_5_7)) ?x2388) ?x1879)))
 (= (- (+ (+ (+ ?x2390 ?x1881) ?x1883) ?x1885) ?x2394) 0.0)))))))))
(assert
 (let ((?x1956 (* (* 2.0 l_0_5_85) l_0_5_89)))
 (let ((?x1953 (* (* 2.0 l_0_5_84) l_0_5_88)))
 (let ((?x1950 (* (* 2.0 l_0_5_83) l_0_5_87)))
 (let ((?x1947 (* (* 2.0 l_0_5_82) l_0_5_86)))
 (let ((?x1442 (* l_0_5_40 l_0_5_40)))
 (let ((?x1439 (* l_0_5_39 l_0_5_39)))
 (let ((?x1436 (* l_0_5_38 l_0_5_38)))
 (let ((?x1433 (* l_0_5_37 l_0_5_37)))
 (let ((?x1494 (* l_0_5_25 l_0_5_25)))
 (let ((?x1490 (* l_0_5_24 l_0_5_24)))
 (let ((?x1486 (* l_0_5_23 l_0_5_23)))
 (let ((?x1482 (* l_0_5_22 l_0_5_22)))
 (let ((?x2239 (* 2.0 l_0_5_13)))
 (let ((?x2418 (* ?x2239 l_0_5_9)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x2416 (* ?x1927 l_0_5_8)))
 (let ((?x2413 (* 2.0 l_0_5_11)))
 (let ((?x2414 (* ?x2413 l_0_5_7)))
 (let ((?x2420 (+ (- (- (- (* (* (- 2.0) l_0_5_10) l_0_5_14) ?x2414) ?x2416) ?x2418) ?x1482)))
 (let ((?x2427 (- (- (- (- (+ (+ (+ ?x2420 ?x1486) ?x1490) ?x1494) ?x1433) ?x1436) ?x1439) ?x1442)))
 (= (+ (+ (+ (+ ?x2427 ?x1947) ?x1950) ?x1953) ?x1956) 0.0))))))))))))))))))))))
(assert
 (let ((?x2495 (* l_0_5_90 l_0_5_90)))
 (let ((?x2493 (* l_0_5_89 l_0_5_89)))
 (let ((?x2491 (* l_0_5_88 l_0_5_88)))
 (let ((?x2489 (* l_0_5_87 l_0_5_87)))
 (let ((?x2487 (* l_0_5_86 l_0_5_86)))
 (let ((?x1563 (* (* 2.0 l_0_5_40) l_0_5_44)))
 (let ((?x1560 (* (* 2.0 l_0_5_39) l_0_5_43)))
 (let ((?x1557 (* (* 2.0 l_0_5_38) l_0_5_42)))
 (let ((?x1554 (* (* 2.0 l_0_5_37) l_0_5_41)))
 (let ((?x1549 (* 2.0 l_0_5_25)))
 (let ((?x1550 (* ?x1549 l_0_5_29)))
 (let ((?x1546 (* 2.0 l_0_5_24)))
 (let ((?x1547 (* ?x1546 l_0_5_28)))
 (let ((?x1543 (* 2.0 l_0_5_23)))
 (let ((?x1544 (* ?x1543 l_0_5_27)))
 (let ((?x1541 (* (* 2.0 l_0_5_22) l_0_5_26)))
 (let ((?x2477 (* l_0_5_15 l_0_5_15)))
 (let ((?x2475 (* l_0_5_14 l_0_5_14)))
 (let ((?x2473 (* l_0_5_13 l_0_5_13)))
 (let ((?x2476 (- (- (- (* (- l_0_5_11) l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x2473) ?x2475)))
 (let ((?x2484 (- (- (+ (+ (+ (+ (- ?x2476 ?x2477) ?x1541) ?x1544) ?x1547) ?x1550) ?x1554) ?x1557)))
 (let ((?x2496 (+ (+ (+ (+ (+ (- (- ?x2484 ?x1560) ?x1563) ?x2487) ?x2489) ?x2491) ?x2493) ?x2495)))
 (= ?x2496 0.0))))))))))))))))))))))))
(assert
 (let ((?x2073 (* l_0_5_81 l_0_5_81)))
 (let ((?x2071 (* l_0_5_80 l_0_5_80)))
 (let ((?x2069 (* l_0_5_79 l_0_5_79)))
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2551 (* ?x1005 l_0_5_62)))
 (let ((?x1144 (* l_0_5_51 l_0_5_51)))
 (let ((?x1140 (* l_0_5_50 l_0_5_50)))
 (let ((?x1136 (* l_0_5_49 l_0_5_49)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2542 (* ?x1002 l_0_5_47)))
 (let ((?x2535 (- (* (* 2.0 l_0_5_1) l_0_5_2) (* (* 4.0 l_0_5_17) l_0_5_19))))
 (let ((?x2539 (+ (- ?x2535 (* (* 4.0 l_0_5_18) l_0_5_20)) (* (* 4.0 l_0_5_32) l_0_5_34))))
 (let ((?x2545 (- (- (+ ?x2539 (* (* 4.0 l_0_5_33) l_0_5_35)) ?x2542) (* (* 4.0 l_0_5_47) l_0_5_49))))
 (let ((?x2550 (+ (+ (+ (- ?x2545 (* (* 4.0 l_0_5_48) l_0_5_50)) ?x1136) ?x1140) ?x1144)))
 (let ((?x2556 (+ (+ (+ ?x2550 ?x2551) (* (* 4.0 l_0_5_62) l_0_5_64)) (* (* 4.0 l_0_5_63) l_0_5_65))))
 (= (- (- (- (- (- (- ?x2556 ?x1088) ?x1091) ?x1094) ?x2069) ?x2071) ?x2073) 0.0))))))))))))))))))))
(assert
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x2656 (* 2.0 ?x1094)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x2654 (* 2.0 ?x1091)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x2652 (* 2.0 ?x1088)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2650 (* ?x1005 l_0_5_64)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2642 (* ?x1002 l_0_5_49)))
 (let ((?x1066 (* l_0_5_36 l_0_5_36)))
 (let ((?x2640 (* 2.0 ?x1066)))
 (let ((?x1063 (* l_0_5_35 l_0_5_35)))
 (let ((?x2638 (* 2.0 ?x1063)))
 (let ((?x1060 (* l_0_5_34 l_0_5_34)))
 (let ((?x2636 (* 2.0 ?x1060)))
 (let ((?x2631 (- (* (* 2.0 l_0_5_1) l_0_5_4) (* (* 2.0 l_0_5_19) l_0_5_19))))
 (let ((?x2635 (- (- ?x2631 (* (* 2.0 l_0_5_20) l_0_5_20)) (* (* 2.0 l_0_5_21) l_0_5_21))))
 (let ((?x2645 (- (- (+ (+ (+ ?x2635 ?x2636) ?x2638) ?x2640) ?x2642) (* (* 2.0 l_0_5_49) l_0_5_49))))
 (let ((?x2649 (- (- ?x2645 (* (* 2.0 l_0_5_50) l_0_5_50)) (* (* 2.0 l_0_5_51) l_0_5_51))))
 (= (+ (+ (+ (+ ?x2649 ?x2650) ?x2652) ?x2654) ?x2656) 0.0))))))))))))))))))))))
(assert
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2725 (* ?x1005 l_0_5_71)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2717 (* ?x1002 l_0_5_56)))
 (let ((?x1066 (* l_0_5_36 l_0_5_36)))
 (let ((?x1063 (* l_0_5_35 l_0_5_35)))
 (let ((?x1060 (* l_0_5_34 l_0_5_34)))
 (let ((?x1120 (* l_0_5_21 l_0_5_21)))
 (let ((?x1116 (* l_0_5_20 l_0_5_20)))
 (let ((?x1112 (* l_0_5_19 l_0_5_19)))
 (let ((?x2700 (- (* (* 2.0 l_0_5_1) l_0_5_11) (* (* 4.0 l_0_5_19) l_0_5_26))))
 (let ((?x2706 (- (+ (- (+ ?x2700 ?x1112) (* (* 4.0 l_0_5_20) l_0_5_27)) ?x1116) (* (* 4.0 l_0_5_21) l_0_5_28))))
 (let ((?x2712 (+ (- (+ (+ ?x2706 ?x1120) (* (* 4.0 l_0_5_34) l_0_5_41)) ?x1060) (* (* 4.0 l_0_5_35) l_0_5_42))))
 (let ((?x2718 (- (- (+ (- ?x2712 ?x1063) (* (* 4.0 l_0_5_36) l_0_5_43)) ?x1066) ?x2717)))
 (let ((?x2722 (- (- ?x2718 (* (* 4.0 l_0_5_49) l_0_5_56)) (* (* 4.0 l_0_5_50) l_0_5_57))))
 (let ((?x2728 (+ (+ (- ?x2722 (* (* 4.0 l_0_5_51) l_0_5_58)) ?x2725) (* (* 4.0 l_0_5_64) l_0_5_71))))
 (let ((?x2732 (+ (+ ?x2728 (* (* 4.0 l_0_5_65) l_0_5_72)) (* (* 4.0 l_0_5_66) l_0_5_73))))
 (= ?x2732 0.0)))))))))))))))))))
(assert
 (let ((?x2817 (* l_0_5_63 l_0_5_63)))
 (let ((?x2815 (* l_0_5_62 l_0_5_62)))
 (let ((?x2804 (* l_0_5_48 l_0_5_48)))
 (let ((?x2800 (* l_0_5_47 l_0_5_47)))
 (let ((?x2816 (+ (- (- (+ (* l_0_5_2 l_0_5_2) (* l_0_5_3 l_0_5_3)) ?x2800) ?x2804) ?x2815)))
 (= (+ ?x2816 ?x2817) 0.0)))))))
(assert
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2836 (* ?x1189 l_0_5_65)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2834 (* ?x1186 l_0_5_64)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2832 (* ?x1182 l_0_5_50)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2830 (* ?x1179 l_0_5_49)))
 (let ((?x1749 (* 2.0 l_0_5_3)))
 (let ((?x1750 (* ?x1749 l_0_5_5)))
 (let ((?x1746 (* 2.0 l_0_5_2)))
 (let ((?x1747 (* ?x1746 l_0_5_4)))
 (= (+ (+ (- (- (+ ?x1747 ?x1750) ?x2830) ?x2832) ?x2834) ?x2836) 0.0))))))))))))))
(assert
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x1190 (* ?x1189 l_0_5_68)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x1187 (* ?x1186 l_0_5_67)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x1183 (* ?x1182 l_0_5_53)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x1180 (* ?x1179 l_0_5_52)))
 (let ((?x1749 (* 2.0 l_0_5_3)))
 (let ((?x1867 (* ?x1749 l_0_5_8)))
 (let ((?x2858 (+ (- (- (+ (* (* 2.0 l_0_5_2) l_0_5_7) ?x1867) ?x1180) ?x1183) ?x1187)))
 (= (+ ?x2858 ?x1190) 0.0)))))))))))))
(assert
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2876 (* ?x1189 l_0_5_72)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2874 (* ?x1186 l_0_5_71)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2872 (* ?x1182 l_0_5_57)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2870 (* ?x1179 l_0_5_56)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x1928 (* ?x1927 l_0_5_3)))
 (let ((?x2875 (+ (- (- (+ (* (* 2.0 l_0_5_11) l_0_5_2) ?x1928) ?x2870) ?x2872) ?x2874)))
 (= (+ ?x2875 ?x2876) 0.0)))))))))))))
(assert
 (let ((?x1094 (* l_0_5_66 l_0_5_66)))
 (let ((?x1091 (* l_0_5_65 l_0_5_65)))
 (let ((?x1088 (* l_0_5_64 l_0_5_64)))
 (let ((?x2057 (* l_0_5_6 l_0_5_6)))
 (let ((?x1144 (* l_0_5_51 l_0_5_51)))
 (let ((?x1140 (* l_0_5_50 l_0_5_50)))
 (let ((?x2049 (* l_0_5_5 l_0_5_5)))
 (let ((?x2901 (- (+ (- (* l_0_5_4 l_0_5_4) (* l_0_5_49 l_0_5_49)) ?x2049) ?x1140)))
 (= (+ (+ (+ (+ (- ?x2901 ?x1144) ?x2057) ?x1088) ?x1091) ?x1094) 0.0))))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x1308 (* ?x1307 l_0_5_69)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x1305 (* ?x1304 l_0_5_68)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x1302 (* ?x1301 l_0_5_67)))
 (let ((?x2164 (* (* 2.0 l_0_5_6) l_0_5_9)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x1297 (* ?x1296 l_0_5_54)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x1294 (* ?x1293 l_0_5_53)))
 (let ((?x2153 (* (* 2.0 l_0_5_5) l_0_5_8)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x1291 (* ?x1290 l_0_5_52)))
 (let ((?x2148 (* (* 2.0 l_0_5_4) l_0_5_7)))
 (let ((?x2923 (+ (+ (+ (- (- (+ (- ?x2148 ?x1291) ?x2153) ?x1294) ?x1297) ?x2164) ?x1302) ?x1305)))
 (= (+ ?x2923 ?x1308) 0.0))))))))))))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x2948 (* ?x1307 l_0_5_73)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x2946 (* ?x1304 l_0_5_72)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x2944 (* ?x1301 l_0_5_71)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x2942 (* ?x1296 l_0_5_58)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x2940 (* ?x1293 l_0_5_57)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x2938 (* ?x1290 l_0_5_56)))
 (let ((?x2239 (* 2.0 l_0_5_13)))
 (let ((?x2240 (* ?x2239 l_0_5_6)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x2237 (* ?x1927 l_0_5_5)))
 (let ((?x2941 (- (- (+ (+ (* (* 2.0 l_0_5_11) l_0_5_4) ?x2237) ?x2240) ?x2938) ?x2940)))
 (= (+ (+ (+ (- ?x2941 ?x2942) ?x2944) ?x2946) ?x2948) 0.0)))))))))))))))))))
(assert
 (let ((?x2394 (* l_0_5_9 l_0_5_9)))
 (let ((?x2388 (* l_0_5_8 l_0_5_8)))
 (let ((?x1466 (* l_0_5_70 l_0_5_70)))
 (let ((?x2386 (* l_0_5_7 l_0_5_7)))
 (let ((?x1463 (* l_0_5_69 l_0_5_69)))
 (let ((?x1460 (* l_0_5_68 l_0_5_68)))
 (let ((?x1457 (* l_0_5_67 l_0_5_67)))
 (let ((?x1511 (* l_0_5_55 l_0_5_55)))
 (let ((?x1507 (* l_0_5_54 l_0_5_54)))
 (let ((?x1503 (* l_0_5_53 l_0_5_53)))
 (let ((?x2975 (- (- (- (* l_0_5_10 l_0_5_10) (* l_0_5_52 l_0_5_52)) ?x1503) ?x1507)))
 (let ((?x2982 (+ (+ (+ (+ (+ (+ (- ?x2975 ?x1511) ?x1457) ?x1460) ?x1463) ?x2386) ?x1466) ?x2388)))
 (= (+ ?x2982 ?x2394) 0.0))))))))))))))
(assert
 (let ((?x1587 (* (* 2.0 l_0_5_70) l_0_5_74)))
 (let ((?x1584 (* (* 2.0 l_0_5_69) l_0_5_73)))
 (let ((?x1581 (* (* 2.0 l_0_5_68) l_0_5_72)))
 (let ((?x1578 (* (* 2.0 l_0_5_67) l_0_5_71)))
 (let ((?x1574 (* 2.0 l_0_5_55)))
 (let ((?x1575 (* ?x1574 l_0_5_59)))
 (let ((?x1571 (* 2.0 l_0_5_54)))
 (let ((?x1572 (* ?x1571 l_0_5_58)))
 (let ((?x1568 (* 2.0 l_0_5_53)))
 (let ((?x1569 (* ?x1568 l_0_5_57)))
 (let ((?x1565 (* 2.0 l_0_5_52)))
 (let ((?x1566 (* ?x1565 l_0_5_56)))
 (let ((?x2239 (* 2.0 l_0_5_13)))
 (let ((?x2418 (* ?x2239 l_0_5_9)))
 (let ((?x1927 (* 2.0 l_0_5_12)))
 (let ((?x2416 (* ?x1927 l_0_5_8)))
 (let ((?x2413 (* 2.0 l_0_5_11)))
 (let ((?x2414 (* ?x2413 l_0_5_7)))
 (let ((?x3000 (- (+ (+ (+ (* (* 2.0 l_0_5_10) l_0_5_14) ?x2414) ?x2416) ?x2418) ?x1566)))
 (let ((?x3007 (+ (+ (+ (+ (- (- (- ?x3000 ?x1569) ?x1572) ?x1575) ?x1578) ?x1581) ?x1584) ?x1587)))
 (= ?x3007 0.0))))))))))))))))))))))
(assert
 (let ((?x3042 (* l_0_5_75 l_0_5_75)))
 (let ((?x3040 (* l_0_5_74 l_0_5_74)))
 (let ((?x3038 (* l_0_5_73 l_0_5_73)))
 (let ((?x3036 (* l_0_5_72 l_0_5_72)))
 (let ((?x3034 (* l_0_5_71 l_0_5_71)))
 (let ((?x3032 (* l_0_5_60 l_0_5_60)))
 (let ((?x3030 (* l_0_5_59 l_0_5_59)))
 (let ((?x3028 (* l_0_5_58 l_0_5_58)))
 (let ((?x3026 (* l_0_5_57 l_0_5_57)))
 (let ((?x3024 (* l_0_5_56 l_0_5_56)))
 (let ((?x2477 (* l_0_5_15 l_0_5_15)))
 (let ((?x2475 (* l_0_5_14 l_0_5_14)))
 (let ((?x2473 (* l_0_5_13 l_0_5_13)))
 (let ((?x3022 (+ (+ (+ (* l_0_5_11 l_0_5_11) (* l_0_5_12 l_0_5_12)) ?x2473) ?x2475)))
 (let ((?x3035 (+ (- (- (- (- (- (+ ?x3022 ?x2477) ?x3024) ?x3026) ?x3028) ?x3030) ?x3032) ?x3034)))
 (= (+ (+ (+ (+ ?x3035 ?x3036) ?x3038) ?x3040) ?x3042) 0.0)))))))))))))))))
(assert
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2650 (* ?x1005 l_0_5_64)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2642 (* ?x1002 l_0_5_49)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3067 (* ?x999 l_0_5_34)))
 (let ((?x3066 (- (* (* (- 2.0) l_0_5_16) l_0_5_19) (* (* 2.0 l_0_5_16) l_0_5_16))))
 (let ((?x3074 (- (- (+ (+ ?x3066 ?x3067) (* 2.0 (* l_0_5_31 l_0_5_31))) ?x2642) (* ?x1002 l_0_5_46))))
 (let ((?x3079 (- (+ (+ ?x3074 ?x2650) (* 2.0 (* l_0_5_61 l_0_5_61))) (* (* 2.0 l_0_5_91) l_0_5_94))))
 (= ?x3079 0.0)))))))))))
(assert
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1310 (* ?x1192 l_0_5_79)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2836 (* ?x1189 l_0_5_65)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2834 (* ?x1186 l_0_5_64)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2650 (* ?x1005 l_0_5_64)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2832 (* ?x1182 l_0_5_50)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2830 (* ?x1179 l_0_5_49)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2642 (* ?x1002 l_0_5_49)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x3121 (* ?x1175 l_0_5_35)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x3119 (* ?x1172 l_0_5_34)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x3115 (* ?x1169 l_0_5_20)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x3113 (* ?x1166 l_0_5_19)))
 (let ((?x3118 (+ (- (- (* (* (- 4.0) l_0_5_16) l_0_5_17) ?x3113) ?x3115) (* (* 4.0 l_0_5_31) l_0_5_32))))
 (let ((?x3125 (+ (- (+ (+ ?x3118 ?x3119) ?x3121) (* (* 4.0 l_0_5_46) l_0_5_47)) ?x2642)))
 (let ((?x3130 (- (+ (- (- ?x3125 ?x2830) ?x2832) (* (* 4.0 l_0_5_61) l_0_5_62)) ?x2650)))
 (let ((?x3135 (- (- (+ (+ ?x3130 ?x2834) ?x2836) ?x1310) (* (* 2.0 l_0_5_92) l_0_5_94))))
 (= (- ?x3135 (* (* 2.0 l_0_5_93) l_0_5_95)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x2948 (* ?x1307 l_0_5_73)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x2946 (* ?x1304 l_0_5_72)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x2944 (* ?x1301 l_0_5_71)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x2942 (* ?x1296 l_0_5_58)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x2940 (* ?x1293 l_0_5_57)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x2938 (* ?x1290 l_0_5_56)))
 (let ((?x1285 (* 2.0 l_0_5_36)))
 (let ((?x3211 (* ?x1285 l_0_5_43)))
 (let ((?x1282 (* 2.0 l_0_5_35)))
 (let ((?x3209 (* ?x1282 l_0_5_42)))
 (let ((?x1279 (* 2.0 l_0_5_34)))
 (let ((?x3207 (* ?x1279 l_0_5_41)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3067 (* ?x999 l_0_5_34)))
 (let ((?x1274 (* 2.0 l_0_5_21)))
 (let ((?x3202 (* ?x1274 l_0_5_28)))
 (let ((?x1271 (* 2.0 l_0_5_20)))
 (let ((?x3200 (* ?x1271 l_0_5_27)))
 (let ((?x1268 (* 2.0 l_0_5_19)))
 (let ((?x3198 (* ?x1268 l_0_5_26)))
 (let ((?x3191 (- (* (* (- 2.0) l_0_5_101) l_0_5_94) (* (* 2.0 l_0_5_102) l_0_5_95))))
 (let ((?x3195 (+ (- ?x3191 (* (* 2.0 l_0_5_103) l_0_5_96)) (* (* 2.0 l_0_5_16) l_0_5_19))))
 (let ((?x3203 (- (- (- (- ?x3195 (* (* 4.0 l_0_5_16) l_0_5_26)) ?x3198) ?x3200) ?x3202)))
 (let ((?x3210 (+ (+ (+ (- ?x3203 ?x3067) (* (* 4.0 l_0_5_31) l_0_5_41)) ?x3207) ?x3209)))
 (let ((?x3216 (- (- (- (+ ?x3210 ?x3211) (* (* 4.0 l_0_5_46) l_0_5_56)) ?x2938) ?x2940)))
 (let ((?x3221 (+ (+ (+ (- ?x3216 ?x2942) (* (* 4.0 l_0_5_61) l_0_5_71)) ?x2944) ?x2946)))
 (= (+ ?x3221 ?x2948) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1778 (* ?x1705 l_0_5_80)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1776 (* ?x1700 l_0_5_79)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2836 (* ?x1189 l_0_5_65)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2834 (* ?x1186 l_0_5_64)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2832 (* ?x1182 l_0_5_50)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2830 (* ?x1179 l_0_5_49)))
 (let ((?x3286 (- (* (* (- 2.0) l_0_5_17) l_0_5_17) (* (* 2.0 l_0_5_18) l_0_5_18))))
 (let ((?x3292 (+ (+ ?x3286 (* 2.0 (* l_0_5_32 l_0_5_32))) (* 2.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3298 (- (+ (- (+ ?x3292 ?x2830) (* ?x1179 l_0_5_47)) ?x2832) (* ?x1182 l_0_5_48))))
 (let ((?x3304 (+ (- (+ (- ?x3298 ?x2834) (* 2.0 (* l_0_5_62 l_0_5_62))) ?x2836) (* 2.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- ?x3304 ?x1776) ?x1778) 0.0))))))))))))))))))
(assert
 (let ((?x1786 (* 2.0 l_0_5_81)))
 (let ((?x2300 (* ?x1786 l_0_5_88)))
 (let ((?x1783 (* 2.0 l_0_5_80)))
 (let ((?x2298 (* ?x1783 l_0_5_87)))
 (let ((?x1780 (* 2.0 l_0_5_79)))
 (let ((?x2296 (* ?x1780 l_0_5_86)))
 (let ((?x1307 (* 2.0 l_0_5_66)))
 (let ((?x2948 (* ?x1307 l_0_5_73)))
 (let ((?x1304 (* 2.0 l_0_5_65)))
 (let ((?x2946 (* ?x1304 l_0_5_72)))
 (let ((?x1301 (* 2.0 l_0_5_64)))
 (let ((?x2944 (* ?x1301 l_0_5_71)))
 (let ((?x1296 (* 2.0 l_0_5_51)))
 (let ((?x2942 (* ?x1296 l_0_5_58)))
 (let ((?x1293 (* 2.0 l_0_5_50)))
 (let ((?x2940 (* ?x1293 l_0_5_57)))
 (let ((?x1290 (* 2.0 l_0_5_49)))
 (let ((?x2938 (* ?x1290 l_0_5_56)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x3121 (* ?x1175 l_0_5_35)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x3119 (* ?x1172 l_0_5_34)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x3115 (* ?x1169 l_0_5_20)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x3113 (* ?x1166 l_0_5_19)))
 (let ((?x3355 (- (+ (- ?x3113 (* (* 4.0 l_0_5_17) l_0_5_26)) ?x3115) (* (* 4.0 l_0_5_18) l_0_5_27))))
 (let ((?x3361 (+ (- (+ (- ?x3355 ?x3119) (* (* 4.0 l_0_5_32) l_0_5_41)) ?x3121) (* (* 4.0 l_0_5_33) l_0_5_42))))
 (let ((?x3365 (- (- ?x3361 (* (* 4.0 l_0_5_47) l_0_5_56)) (* (* 4.0 l_0_5_48) l_0_5_57))))
 (let ((?x3370 (+ (+ (+ (+ ?x3365 ?x2938) ?x2940) ?x2942) (* (* 4.0 l_0_5_62) l_0_5_71))))
 (let ((?x3375 (- (- (- (+ ?x3370 (* (* 4.0 l_0_5_63) l_0_5_72)) ?x2944) ?x2946) ?x2948)))
 (= (- (- (- ?x3375 ?x2296) ?x2298) ?x2300) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x3042 (* l_0_5_75 l_0_5_75)))
 (let ((?x3508 (* 2.0 ?x3042)))
 (let ((?x3040 (* l_0_5_74 l_0_5_74)))
 (let ((?x3506 (* 2.0 ?x3040)))
 (let ((?x3038 (* l_0_5_73 l_0_5_73)))
 (let ((?x3504 (* 2.0 ?x3038)))
 (let ((?x3036 (* l_0_5_72 l_0_5_72)))
 (let ((?x3502 (* 2.0 ?x3036)))
 (let ((?x3034 (* l_0_5_71 l_0_5_71)))
 (let ((?x3500 (* 2.0 ?x3034)))
 (let ((?x3482 (* l_0_5_45 l_0_5_45)))
 (let ((?x3483 (* 2.0 ?x3482)))
 (let ((?x3479 (* l_0_5_44 l_0_5_44)))
 (let ((?x3480 (* 2.0 ?x3479)))
 (let ((?x3476 (* l_0_5_43 l_0_5_43)))
 (let ((?x3477 (* 2.0 ?x3476)))
 (let ((?x3473 (* l_0_5_42 l_0_5_42)))
 (let ((?x3474 (* 2.0 ?x3473)))
 (let ((?x3470 (* l_0_5_41 l_0_5_41)))
 (let ((?x3471 (* 2.0 ?x3470)))
 (let ((?x1285 (* 2.0 l_0_5_36)))
 (let ((?x3211 (* ?x1285 l_0_5_43)))
 (let ((?x1282 (* 2.0 l_0_5_35)))
 (let ((?x3209 (* ?x1282 l_0_5_42)))
 (let ((?x1279 (* 2.0 l_0_5_34)))
 (let ((?x3207 (* ?x1279 l_0_5_41)))
 (let ((?x1274 (* 2.0 l_0_5_21)))
 (let ((?x3202 (* ?x1274 l_0_5_28)))
 (let ((?x1271 (* 2.0 l_0_5_20)))
 (let ((?x3200 (* ?x1271 l_0_5_27)))
 (let ((?x1268 (* 2.0 l_0_5_19)))
 (let ((?x3198 (* ?x1268 l_0_5_26)))
 (let ((?x3457 (- (- (+ (+ ?x3198 ?x3200) ?x3202) (* (* 2.0 l_0_5_26) l_0_5_26)) (* (* 2.0 l_0_5_27) l_0_5_27))))
 (let ((?x3463 (- (- ?x3457 (* (* 2.0 l_0_5_28) l_0_5_28)) (* (* 2.0 l_0_5_29) l_0_5_29))))
 (let ((?x3469 (- (- (- (- ?x3463 (* (* 2.0 l_0_5_30) l_0_5_30)) ?x3207) ?x3209) ?x3211)))
 (let ((?x3487 (- (+ (+ (+ (+ (+ ?x3469 ?x3471) ?x3474) ?x3477) ?x3480) ?x3483) (* (* 2.0 l_0_5_56) l_0_5_56))))
 (let ((?x3493 (- (- ?x3487 (* (* 2.0 l_0_5_57) l_0_5_57)) (* (* 2.0 l_0_5_58) l_0_5_58))))
 (let ((?x3499 (- (- ?x3493 (* (* 2.0 l_0_5_59) l_0_5_59)) (* (* 2.0 l_0_5_60) l_0_5_60))))
 (= (+ (+ (+ (+ (+ ?x3499 ?x3500) ?x3502) ?x3504) ?x3506) ?x3508) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3591 (* l_0_5_91 l_0_5_91)))
 (let ((?x3585 (+ (* (* (- 1.0) l_0_5_16) l_0_5_16) (* 1.0 (* l_0_5_31 l_0_5_31)))))
 (let ((?x3590 (+ (- ?x3585 (* (* 1.0 l_0_5_46) l_0_5_46)) (* 1.0 (* l_0_5_61 l_0_5_61)))))
 (= (- ?x3590 ?x3591) 0.0)))))
(assert
 (let ((?x1008 (* l_0_5_76 l_0_5_76)))
 (let ((?x1086 (* l_0_5_61 l_0_5_61)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2551 (* ?x1005 l_0_5_62)))
 (let ((?x1072 (* l_0_5_46 l_0_5_46)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2542 (* ?x1002 l_0_5_47)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3607 (* ?x999 l_0_5_32)))
 (let ((?x3611 (+ (+ (- (+ (* (* (- 2.0) l_0_5_16) l_0_5_17) ?x3607) ?x2542) ?x1072) ?x2551)))
 (= (- (- (- ?x3611 ?x1086) ?x1008) (* (* 2.0 l_0_5_91) l_0_5_92)) 0.0))))))))))))
(assert
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2725 (* ?x1005 l_0_5_71)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2717 (* ?x1002 l_0_5_56)))
 (let ((?x3069 (* l_0_5_31 l_0_5_31)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3642 (* ?x999 l_0_5_41)))
 (let ((?x3082 (* l_0_5_16 l_0_5_16)))
 (let ((?x996 (* 2.0 l_0_5_16)))
 (let ((?x3639 (* ?x996 l_0_5_26)))
 (let ((?x3644 (- (+ (+ (- (* (* (- 2.0) l_0_5_101) l_0_5_91) ?x3639) ?x3082) ?x3642) ?x3069)))
 (= (+ (- ?x3644 ?x2717) ?x2725) 0.0)))))))))))))
(assert
 (let ((?x3690 (* l_0_5_93 l_0_5_93)))
 (let ((?x3688 (* l_0_5_92 l_0_5_92)))
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1193 (* ?x1192 l_0_5_77)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2551 (* ?x1005 l_0_5_62)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2542 (* ?x1002 l_0_5_47)))
 (let ((?x3670 (- (* (* (- 1.0) l_0_5_17) l_0_5_17) (* (* 1.0 l_0_5_18) l_0_5_18))))
 (let ((?x3674 (+ (+ ?x3670 (* 1.0 (* l_0_5_32 l_0_5_32))) (* 1.0 (* l_0_5_33 l_0_5_33)))))
 (let ((?x3681 (- (- (+ ?x3674 ?x2542) (* (* 1.0 l_0_5_47) l_0_5_47)) (* (* 1.0 l_0_5_48) l_0_5_48))))
 (let ((?x3686 (+ (+ (- ?x3681 ?x2551) (* 1.0 (* l_0_5_62 l_0_5_62))) (* 1.0 (* l_0_5_63 l_0_5_63)))))
 (= (- (- (- ?x3686 ?x1193) ?x3688) ?x3690) 0.0))))))))))))))
(assert
 (let ((?x1192 (* 2.0 l_0_5_76)))
 (let ((?x1589 (* ?x1192 l_0_5_86)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2876 (* ?x1189 l_0_5_72)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2874 (* ?x1186 l_0_5_71)))
 (let ((?x1005 (* 2.0 l_0_5_61)))
 (let ((?x2725 (* ?x1005 l_0_5_71)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2872 (* ?x1182 l_0_5_57)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2870 (* ?x1179 l_0_5_56)))
 (let ((?x1002 (* 2.0 l_0_5_46)))
 (let ((?x2717 (* ?x1002 l_0_5_56)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x3733 (* ?x1175 l_0_5_42)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x3731 (* ?x1172 l_0_5_41)))
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3607 (* ?x999 l_0_5_32)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x3728 (* ?x1169 l_0_5_27)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x3726 (* ?x1166 l_0_5_26)))
 (let ((?x3723 (- (* (* (- 2.0) l_0_5_101) l_0_5_92) (* (* 2.0 l_0_5_102) l_0_5_93))))
 (let ((?x3730 (- (- (- (+ ?x3723 (* (* 2.0 l_0_5_16) l_0_5_17)) ?x3726) ?x3728) ?x3607)))
 (let ((?x3739 (+ (- (- (- (+ (+ (+ ?x3730 ?x3731) ?x3733) ?x2717) ?x2870) ?x2872) ?x2725) ?x2874)))
 (= (- (+ ?x3739 ?x2876) ?x1589) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x999 (* 2.0 l_0_5_31)))
 (let ((?x3642 (* ?x999 l_0_5_41)))
 (let ((?x996 (* 2.0 l_0_5_16)))
 (let ((?x3639 (* ?x996 l_0_5_26)))
 (let ((?x3795 (* l_0_5_105 l_0_5_105)))
 (let ((?x3793 (* l_0_5_104 l_0_5_104)))
 (let ((?x3791 (* l_0_5_103 l_0_5_103)))
 (let ((?x3792 (- (- (* (- l_0_5_101) l_0_5_101) (* l_0_5_102 l_0_5_102)) ?x3791)))
 (let ((?x3800 (- (+ (- (- ?x3792 ?x3793) ?x3795) ?x3639) (* (* 1.0 l_0_5_26) l_0_5_26))))
 (let ((?x3806 (- (- ?x3800 (* (* 1.0 l_0_5_27) l_0_5_27)) (* (* 1.0 l_0_5_28) l_0_5_28))))
 (let ((?x3812 (- (- ?x3806 (* (* 1.0 l_0_5_29) l_0_5_29)) (* (* 1.0 l_0_5_30) l_0_5_30))))
 (let ((?x3817 (+ (+ (- ?x3812 ?x3642) (* 1.0 (* l_0_5_41 l_0_5_41))) (* 1.0 (* l_0_5_42 l_0_5_42)))))
 (let ((?x3821 (+ (+ ?x3817 (* 1.0 (* l_0_5_43 l_0_5_43))) (* 1.0 (* l_0_5_44 l_0_5_44)))))
 (let ((?x3826 (- (+ ?x3821 (* 1.0 (* l_0_5_45 l_0_5_45))) (* (* 1.0 l_0_5_56) l_0_5_56))))
 (let ((?x3832 (- (- ?x3826 (* (* 1.0 l_0_5_57) l_0_5_57)) (* (* 1.0 l_0_5_58) l_0_5_58))))
 (let ((?x3838 (- (- ?x3832 (* (* 1.0 l_0_5_59) l_0_5_59)) (* (* 1.0 l_0_5_60) l_0_5_60))))
 (let ((?x3842 (+ (+ ?x3838 (* 1.0 (* l_0_5_71 l_0_5_71))) (* 1.0 (* l_0_5_72 l_0_5_72)))))
 (let ((?x3846 (+ (+ ?x3842 (* 1.0 (* l_0_5_73 l_0_5_73))) (* 1.0 (* l_0_5_74 l_0_5_74)))))
 (= (+ ?x3846 (* 1.0 (* l_0_5_75 l_0_5_75))) 0.0))))))))))))))))))))
(assert
 (let ((?x1705 (* 2.0 l_0_5_78)))
 (let ((?x1944 (* ?x1705 l_0_5_87)))
 (let ((?x1700 (* 2.0 l_0_5_77)))
 (let ((?x1942 (* ?x1700 l_0_5_86)))
 (let ((?x1189 (* 2.0 l_0_5_63)))
 (let ((?x2876 (* ?x1189 l_0_5_72)))
 (let ((?x1186 (* 2.0 l_0_5_62)))
 (let ((?x2874 (* ?x1186 l_0_5_71)))
 (let ((?x1182 (* 2.0 l_0_5_48)))
 (let ((?x2872 (* ?x1182 l_0_5_57)))
 (let ((?x1179 (* 2.0 l_0_5_47)))
 (let ((?x2870 (* ?x1179 l_0_5_56)))
 (let ((?x3290 (* l_0_5_33 l_0_5_33)))
 (let ((?x3287 (* l_0_5_32 l_0_5_32)))
 (let ((?x3909 (- (- (+ (* l_0_5_17 l_0_5_17) (* l_0_5_18 l_0_5_18)) ?x3287) ?x3290)))
 (= (- (- (- (- (+ (+ ?x3909 ?x2870) ?x2872) ?x2874) ?x2876) ?x1942) ?x1944) 0.0)))))))))))))))))
(assert
 (let ((?x2495 (* l_0_5_90 l_0_5_90)))
 (let ((?x2493 (* l_0_5_89 l_0_5_89)))
 (let ((?x2491 (* l_0_5_88 l_0_5_88)))
 (let ((?x2489 (* l_0_5_87 l_0_5_87)))
 (let ((?x2487 (* l_0_5_86 l_0_5_86)))
 (let ((?x3042 (* l_0_5_75 l_0_5_75)))
 (let ((?x3040 (* l_0_5_74 l_0_5_74)))
 (let ((?x3038 (* l_0_5_73 l_0_5_73)))
 (let ((?x3036 (* l_0_5_72 l_0_5_72)))
 (let ((?x3034 (* l_0_5_71 l_0_5_71)))
 (let ((?x3032 (* l_0_5_60 l_0_5_60)))
 (let ((?x3030 (* l_0_5_59 l_0_5_59)))
 (let ((?x3028 (* l_0_5_58 l_0_5_58)))
 (let ((?x3026 (* l_0_5_57 l_0_5_57)))
 (let ((?x3024 (* l_0_5_56 l_0_5_56)))
 (let ((?x1175 (* 2.0 l_0_5_33)))
 (let ((?x3733 (* ?x1175 l_0_5_42)))
 (let ((?x1172 (* 2.0 l_0_5_32)))
 (let ((?x3731 (* ?x1172 l_0_5_41)))
 (let ((?x1169 (* 2.0 l_0_5_18)))
 (let ((?x3728 (* ?x1169 l_0_5_27)))
 (let ((?x1166 (* 2.0 l_0_5_17)))
 (let ((?x3726 (* ?x1166 l_0_5_26)))
 (let ((?x3944 (+ (+ (+ (+ (- (- (+ ?x3726 ?x3728) ?x3731) ?x3733) ?x3024) ?x3026) ?x3028) ?x3030)))
 (let ((?x3951 (- (- (- (- (- (- (+ ?x3944 ?x3032) ?x3034) ?x3036) ?x3038) ?x3040) ?x3042) ?x2487)))
 (= (- (- (- (- ?x3951 ?x2489) ?x2491) ?x2493) ?x2495) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x3482 (* l_0_5_45 l_0_5_45)))
 (let ((?x3479 (* l_0_5_44 l_0_5_44)))
 (let ((?x3476 (* l_0_5_43 l_0_5_43)))
 (let ((?x3473 (* l_0_5_42 l_0_5_42)))
 (let ((?x3470 (* l_0_5_41 l_0_5_41)))
 (let ((?x3536 (* l_0_5_30 l_0_5_30)))
 (let ((?x3530 (* l_0_5_29 l_0_5_29)))
 (let ((?x3524 (* l_0_5_28 l_0_5_28)))
 (let ((?x3994 (+ (+ (+ (* l_0_5_26 l_0_5_26) (* l_0_5_27 l_0_5_27)) ?x3524) ?x3530)))
 (= (- (- (- (- (- (+ ?x3994 ?x3536) ?x3470) ?x3473) ?x3476) ?x3479) ?x3482) 0.0)))))))))))
(assert
 (let ((?x1708 (* l_0_5_78 l_0_5_78)))
 (let ((?x1703 (* l_0_5_77 l_0_5_77)))
 (let ((?x2817 (* l_0_5_63 l_0_5_63)))
 (let ((?x2815 (* l_0_5_62 l_0_5_62)))
 (let ((?x4017 (- (- (+ (* l_0_5_47 l_0_5_47) (* l_0_5_48 l_0_5_48)) ?x2815) ?x2817)))
 (= (- (- ?x4017 ?x1703) ?x1708) 0.0)))))))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (>= l_0_5_15 0.0))
(assert
 (>= l_0_5_16 0.0))
(assert
 (>= l_0_5_18 0.0))
(assert
 (>= l_0_5_21 0.0))
(assert
 (>= l_0_5_25 0.0))
(assert
 (>= l_0_5_30 0.0))
(assert
 (>= l_0_5_31 0.0))
(assert
 (>= l_0_5_33 0.0))
(assert
 (>= l_0_5_36 0.0))
(assert
 (>= l_0_5_40 0.0))
(assert
 (>= l_0_5_45 0.0))
(assert
 (>= l_0_5_46 0.0))
(assert
 (>= l_0_5_48 0.0))
(assert
 (>= l_0_5_51 0.0))
(assert
 (>= l_0_5_55 0.0))
(assert
 (>= l_0_5_60 0.0))
(assert
 (>= l_0_5_61 0.0))
(assert
 (>= l_0_5_63 0.0))
(assert
 (>= l_0_5_66 0.0))
(assert
 (>= l_0_5_70 0.0))
(assert
 (>= l_0_5_75 0.0))
(assert
 (>= l_0_5_76 0.0))
(assert
 (>= l_0_5_78 0.0))
(assert
 (>= l_0_5_81 0.0))
(assert
 (>= l_0_5_85 0.0))
(assert
 (>= l_0_5_90 0.0))
(assert
 (>= l_0_5_91 0.0))
(assert
 (>= l_0_5_93 0.0))
(assert
 (>= l_0_5_96 0.0))
(assert
 (>= l_0_5_100 0.0))
(assert
 (>= l_0_5_105 0.0))
(assert
 (let ((?x4082 (* l_0_6_76 l_0_6_76)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4080 (* ?x4079 l_0_6_67)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4077 (* ?x4076 l_0_6_52)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x4074 (* ?x4073 l_0_6_37)))
 (let ((?x4075 (+ (- (* (- l_0_6_1) l_0_6_1) (* (* 2.0 l_0_6_16) l_0_6_22)) ?x4074)))
 (let ((?x4086 (- (- (+ (- ?x4075 ?x4077) ?x4080) ?x4082) (* (* 2.0 l_0_6_91) l_0_6_97))))
 (= (+ ?x4086 1.0) 0.0)))))))))))
(assert
 (let ((?x4179 (* l_0_6_96 l_0_6_96)))
 (let ((?x4177 (* l_0_6_95 l_0_6_95)))
 (let ((?x4175 (* l_0_6_94 l_0_6_94)))
 (let ((?x4164 (* l_0_6_61 l_0_6_61)))
 (let ((?x4150 (* l_0_6_46 l_0_6_46)))
 (let ((?x4128 (- (- (* l_0_6_1 l_0_6_1) (* (* 4.0 l_0_6_16) l_0_6_19)) (* (* 1.0 l_0_6_19) l_0_6_19))))
 (let ((?x4134 (- (- ?x4128 (* (* 1.0 l_0_6_20) l_0_6_20)) (* (* 1.0 l_0_6_21) l_0_6_21))))
 (let ((?x4140 (+ (+ ?x4134 (* (* 4.0 l_0_6_31) l_0_6_34)) (* 1.0 (* l_0_6_34 l_0_6_34)))))
 (let ((?x4146 (+ (+ ?x4140 (* 1.0 (* l_0_6_35 l_0_6_35))) (* 1.0 (* l_0_6_36 l_0_6_36)))))
 (let ((?x4154 (- (- (- ?x4146 (* (* 4.0 l_0_6_46) l_0_6_49)) ?x4150) (* (* 1.0 l_0_6_49) l_0_6_49))))
 (let ((?x4160 (- (- ?x4154 (* (* 1.0 l_0_6_50) l_0_6_50)) (* (* 1.0 l_0_6_51) l_0_6_51))))
 (let ((?x4168 (+ (+ (+ ?x4160 (* (* 4.0 l_0_6_61) l_0_6_64)) ?x4164) (* 1.0 (* l_0_6_64 l_0_6_64)))))
 (let ((?x4174 (+ (+ ?x4168 (* 1.0 (* l_0_6_65 l_0_6_65))) (* 1.0 (* l_0_6_66 l_0_6_66)))))
 (= (- (- (- (- ?x4174 ?x4175) ?x4177) ?x4179) 1.0) 0.0)))))))))))))))
(assert
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4253 (* ?x4079 l_0_6_64)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4249 (* ?x4076 l_0_6_49)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x4244 (* ?x4073 l_0_6_34)))
 (let ((?x4243 (- (* (* (- 2.0) l_0_6_16) l_0_6_19) (* (* 2.0 l_0_6_16) l_0_6_16))))
 (let ((?x4252 (- (- (+ (+ ?x4243 ?x4244) (* 2.0 (* l_0_6_31 l_0_6_31))) ?x4249) (* ?x4076 l_0_6_46))))
 (let ((?x4258 (- (+ (+ ?x4252 ?x4253) (* 2.0 (* l_0_6_61 l_0_6_61))) (* (* 2.0 l_0_6_91) l_0_6_94))))
 (= (- ?x4258 2.0) 0.0)))))))))))
(assert
 (let ((?x4307 (* l_0_6_91 l_0_6_91)))
 (let ((?x4301 (+ (* (* (- 1.0) l_0_6_16) l_0_6_16) (* 1.0 (* l_0_6_31 l_0_6_31)))))
 (let ((?x4306 (+ (- ?x4301 (* (* 1.0 l_0_6_46) l_0_6_46)) (* 1.0 (* l_0_6_61 l_0_6_61)))))
 (= (- (- ?x4306 ?x4307) 1.0) 0.0)))))
(assert
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4356 (* ?x4353 l_0_6_82)))
 (let ((?x4354 (* ?x4353 l_0_6_77)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x4351 (* ?x4350 l_0_6_68)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x4348 (* ?x4347 l_0_6_67)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4080 (* ?x4079 l_0_6_67)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x4344 (* ?x4343 l_0_6_53)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x4341 (* ?x4340 l_0_6_52)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4077 (* ?x4076 l_0_6_52)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x4337 (* ?x4336 l_0_6_38)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x4334 (* ?x4333 l_0_6_37)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x4331 (* ?x4330 l_0_6_23)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x4328 (* ?x4327 l_0_6_22)))
 (let ((?x4338 (+ (+ (- (- (* (* (- 2.0) l_0_6_1) l_0_6_2) ?x4328) ?x4331) ?x4334) ?x4337)))
 (let ((?x4355 (- (+ (+ (- (- (- (+ ?x4338 ?x4077) ?x4341) ?x4344) ?x4080) ?x4348) ?x4351) ?x4354)))
 (let ((?x4363 (- (- (+ ?x4355 ?x4356) (* (* 2.0 l_0_6_92) l_0_6_97)) (* (* 2.0 l_0_6_93) l_0_6_98))))
 (= ?x4363 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4471 (* ?x4353 l_0_6_79)))
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x4469 (* ?x4468 l_0_6_69)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x4466 (* ?x4465 l_0_6_68)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x4463 (* ?x4462 l_0_6_67)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x4458 (* ?x4457 l_0_6_54)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x4455 (* ?x4454 l_0_6_53)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x4452 (* ?x4451 l_0_6_52)))
 (let ((?x4446 (* 2.0 l_0_6_36)))
 (let ((?x4447 (* ?x4446 l_0_6_39)))
 (let ((?x4443 (* 2.0 l_0_6_35)))
 (let ((?x4444 (* ?x4443 l_0_6_38)))
 (let ((?x4440 (* 2.0 l_0_6_34)))
 (let ((?x4441 (* ?x4440 l_0_6_37)))
 (let ((?x4435 (* 2.0 l_0_6_21)))
 (let ((?x4436 (* ?x4435 l_0_6_24)))
 (let ((?x4432 (* 2.0 l_0_6_20)))
 (let ((?x4433 (* ?x4432 l_0_6_23)))
 (let ((?x4429 (* 2.0 l_0_6_19)))
 (let ((?x4430 (* ?x4429 l_0_6_22)))
 (let ((?x4428 (- (* (* (- 2.0) l_0_6_1) l_0_6_4) (* (* 4.0 l_0_6_16) l_0_6_22))))
 (let ((?x4439 (+ (- (- (- ?x4428 ?x4430) ?x4433) ?x4436) (* (* 4.0 l_0_6_31) l_0_6_37))))
 (let ((?x4450 (- (+ (+ (+ ?x4439 ?x4441) ?x4444) ?x4447) (* (* 4.0 l_0_6_46) l_0_6_52))))
 (let ((?x4461 (+ (- (- (- ?x4450 ?x4452) ?x4455) ?x4458) (* (* 4.0 l_0_6_61) l_0_6_67))))
 (let ((?x4475 (- (- (+ (+ (+ ?x4461 ?x4463) ?x4466) ?x4469) ?x4471) (* (* 2.0 l_0_6_94) l_0_6_97))))
 (let ((?x4481 (- (- ?x4475 (* (* 2.0 l_0_6_95) l_0_6_98)) (* (* 2.0 l_0_6_96) l_0_6_99))))
 (= ?x4481 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4638 (* l_0_6_99 l_0_6_99)))
 (let ((?x4636 (* l_0_6_98 l_0_6_98)))
 (let ((?x4634 (* l_0_6_97 l_0_6_97)))
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4356 (* ?x4353 l_0_6_82)))
 (let ((?x4587 (- (- (* (* (- 2.0) l_0_6_1) l_0_6_7) (* l_0_6_100 l_0_6_100)) (* (* 1.0 l_0_6_22) l_0_6_22))))
 (let ((?x4593 (- (- ?x4587 (* (* 1.0 l_0_6_23) l_0_6_23)) (* (* 1.0 l_0_6_24) l_0_6_24))))
 (let ((?x4599 (+ (- ?x4593 (* (* 1.0 l_0_6_25) l_0_6_25)) (* 1.0 (* l_0_6_37 l_0_6_37)))))
 (let ((?x4605 (+ (+ ?x4599 (* 1.0 (* l_0_6_38 l_0_6_38))) (* 1.0 (* l_0_6_39 l_0_6_39)))))
 (let ((?x4611 (- (+ ?x4605 (* 1.0 (* l_0_6_40 l_0_6_40))) (* (* 1.0 l_0_6_52) l_0_6_52))))
 (let ((?x4617 (- (- ?x4611 (* (* 1.0 l_0_6_53) l_0_6_53)) (* (* 1.0 l_0_6_54) l_0_6_54))))
 (let ((?x4623 (+ (- ?x4617 (* (* 1.0 l_0_6_55) l_0_6_55)) (* 1.0 (* l_0_6_67 l_0_6_67)))))
 (let ((?x4629 (+ (+ ?x4623 (* 1.0 (* l_0_6_68 l_0_6_68))) (* 1.0 (* l_0_6_69 l_0_6_69)))))
 (let ((?x4637 (- (- (- (+ ?x4629 (* 1.0 (* l_0_6_70 l_0_6_70))) ?x4356) ?x4634) ?x4636)))
 (= (- ?x4637 ?x4638) 0.0))))))))))))))))
(assert
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4767 (* ?x4353 l_0_6_86)))
 (let ((?x4765 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x4762 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4759 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4756 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4752 (* 2.0 l_0_6_55)))
 (let ((?x4753 (* ?x4752 l_0_6_59)))
 (let ((?x4749 (* 2.0 l_0_6_54)))
 (let ((?x4750 (* ?x4749 l_0_6_58)))
 (let ((?x4746 (* 2.0 l_0_6_53)))
 (let ((?x4747 (* ?x4746 l_0_6_57)))
 (let ((?x4743 (* 2.0 l_0_6_52)))
 (let ((?x4744 (* ?x4743 l_0_6_56)))
 (let ((?x4741 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x4738 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x4735 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x4732 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x4074 (* ?x4073 l_0_6_37)))
 (let ((?x4727 (* 2.0 l_0_6_25)))
 (let ((?x4728 (* ?x4727 l_0_6_29)))
 (let ((?x4724 (* 2.0 l_0_6_24)))
 (let ((?x4725 (* ?x4724 l_0_6_28)))
 (let ((?x4721 (* 2.0 l_0_6_23)))
 (let ((?x4722 (* ?x4721 l_0_6_27)))
 (let ((?x4719 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x4070 (* 2.0 l_0_6_16)))
 (let ((?x4071 (* ?x4070 l_0_6_22)))
 (let ((?x4707 (- (* (* (- 2.0) l_0_6_1) l_0_6_11) (* (* 2.0 l_0_6_100) l_0_6_104))))
 (let ((?x4713 (- (- ?x4707 (* (* 2.0 l_0_6_101) l_0_6_97)) (* (* 2.0 l_0_6_102) l_0_6_98))))
 (let ((?x4723 (- (- (+ (- ?x4713 (* (* 2.0 l_0_6_103) l_0_6_99)) ?x4071) ?x4719) ?x4722)))
 (let ((?x4742 (+ (+ (+ (+ (- (- (- ?x4723 ?x4725) ?x4728) ?x4074) ?x4732) ?x4735) ?x4738) ?x4741)))
 (let ((?x4763 (+ (+ (+ (- (- (- (- ?x4742 ?x4744) ?x4747) ?x4750) ?x4753) ?x4756) ?x4759) ?x4762)))
 (= (- (+ ?x4763 ?x4765) ?x4767) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4889 (* l_0_6_78 l_0_6_78)))
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x4887 (* ?x4886 l_0_6_83)))
 (let ((?x4884 (* l_0_6_77 l_0_6_77)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x4882 (* ?x4881 l_0_6_82)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x4351 (* ?x4350 l_0_6_68)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x4348 (* ?x4347 l_0_6_67)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x4344 (* ?x4343 l_0_6_53)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x4341 (* ?x4340 l_0_6_52)))
 (let ((?x4878 (+ (+ (- (* (- l_0_6_2) l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x4341) ?x4344)))
 (= (- (+ (- (+ (- (- ?x4878 ?x4348) ?x4351) ?x4882) ?x4884) ?x4887) ?x4889) 0.0)))))))))))))))))
(assert
 (let ((?x4965 (* 2.0 l_0_6_81)))
 (let ((?x4966 (* ?x4965 l_0_6_84)))
 (let ((?x4962 (* 2.0 l_0_6_80)))
 (let ((?x4963 (* ?x4962 l_0_6_83)))
 (let ((?x4959 (* 2.0 l_0_6_79)))
 (let ((?x4960 (* ?x4959 l_0_6_82)))
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x4957 (* ?x4886 l_0_6_80)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x4955 (* ?x4881 l_0_6_79)))
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x4469 (* ?x4468 l_0_6_69)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x4466 (* ?x4465 l_0_6_68)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x4463 (* ?x4462 l_0_6_67)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x4458 (* ?x4457 l_0_6_54)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x4455 (* ?x4454 l_0_6_53)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x4452 (* ?x4451 l_0_6_52)))
 (let ((?x4928 (* 2.0 l_0_6_3)))
 (let ((?x4929 (* ?x4928 l_0_6_5)))
 (let ((?x4925 (* 2.0 l_0_6_2)))
 (let ((?x4926 (* ?x4925 l_0_6_4)))
 (let ((?x4924 (- (* (* (- 4.0) l_0_6_17) l_0_6_22) (* (* 4.0 l_0_6_18) l_0_6_23))))
 (let ((?x4936 (+ (+ (- (- ?x4924 ?x4926) ?x4929) (* (* 4.0 l_0_6_32) l_0_6_37)) (* (* 4.0 l_0_6_33) l_0_6_38))))
 (let ((?x4942 (- (- ?x4936 (* (* 4.0 l_0_6_47) l_0_6_52)) (* (* 4.0 l_0_6_48) l_0_6_53))))
 (let ((?x4948 (+ (+ (+ (+ ?x4942 ?x4452) ?x4455) ?x4458) (* (* 4.0 l_0_6_62) l_0_6_67))))
 (let ((?x4954 (- (- (- (+ ?x4948 (* (* 4.0 l_0_6_63) l_0_6_68)) ?x4463) ?x4466) ?x4469)))
 (= (+ (+ (+ (- (- ?x4954 ?x4955) ?x4957) ?x4960) ?x4963) ?x4966) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x5057 (* l_0_6_85 l_0_6_85)))
 (let ((?x5055 (* l_0_6_84 l_0_6_84)))
 (let ((?x5053 (* l_0_6_83 l_0_6_83)))
 (let ((?x5051 (* l_0_6_82 l_0_6_82)))
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x4887 (* ?x4886 l_0_6_83)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x4882 (* ?x4881 l_0_6_82)))
 (let ((?x4630 (* l_0_6_70 l_0_6_70)))
 (let ((?x4627 (* l_0_6_69 l_0_6_69)))
 (let ((?x4624 (* l_0_6_68 l_0_6_68)))
 (let ((?x4621 (* l_0_6_67 l_0_6_67)))
 (let ((?x4675 (* l_0_6_55 l_0_6_55)))
 (let ((?x4671 (* l_0_6_54 l_0_6_54)))
 (let ((?x4667 (* l_0_6_53 l_0_6_53)))
 (let ((?x4663 (* l_0_6_52 l_0_6_52)))
 (let ((?x4928 (* 2.0 l_0_6_3)))
 (let ((?x5029 (* ?x4928 l_0_6_8)))
 (let ((?x5043 (+ (+ (+ (- (* (* (- 2.0) l_0_6_2) l_0_6_7) ?x5029) ?x4663) ?x4667) ?x4671)))
 (let ((?x5050 (- (- (- (- (- (- (+ ?x5043 ?x4675) ?x4621) ?x4624) ?x4627) ?x4630) ?x4882) ?x4887)))
 (= (+ (+ (+ (+ ?x5050 ?x5051) ?x5053) ?x5055) ?x5057) 0.0))))))))))))))))))))))
(assert
 (let ((?x5123 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5120 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5117 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5114 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x5111 (* ?x4886 l_0_6_87)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x5109 (* ?x4881 l_0_6_86)))
 (let ((?x4765 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x4762 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4759 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4756 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4752 (* 2.0 l_0_6_55)))
 (let ((?x4753 (* ?x4752 l_0_6_59)))
 (let ((?x4749 (* 2.0 l_0_6_54)))
 (let ((?x4750 (* ?x4749 l_0_6_58)))
 (let ((?x4746 (* 2.0 l_0_6_53)))
 (let ((?x4747 (* ?x4746 l_0_6_57)))
 (let ((?x4743 (* 2.0 l_0_6_52)))
 (let ((?x4744 (* ?x4743 l_0_6_56)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x4337 (* ?x4336 l_0_6_38)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x4334 (* ?x4333 l_0_6_37)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x4331 (* ?x4330 l_0_6_23)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x4328 (* ?x4327 l_0_6_22)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5095 (* ?x5094 l_0_6_3)))
 (let ((?x5099 (- (+ (+ (- (* (* (- 2.0) l_0_6_11) l_0_6_2) ?x5095) ?x4328) ?x4331) ?x4334)))
 (let ((?x5106 (- (- (+ (+ (+ (+ (- ?x5099 ?x4337) ?x4744) ?x4747) ?x4750) ?x4753) ?x4756) ?x4759)))
 (let ((?x5121 (+ (+ (+ (- (- (- (- ?x5106 ?x4762) ?x4765) ?x5109) ?x5111) ?x5114) ?x5117) ?x5120)))
 (= (+ ?x5121 ?x5123) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5232 (* l_0_6_81 l_0_6_81)))
 (let ((?x5230 (* l_0_6_80 l_0_6_80)))
 (let ((?x5228 (* l_0_6_79 l_0_6_79)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4080 (* ?x4079 l_0_6_67)))
 (let ((?x5216 (* l_0_6_6 l_0_6_6)))
 (let ((?x5208 (* l_0_6_5 l_0_6_5)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4077 (* ?x4076 l_0_6_52)))
 (let ((?x5202 (* l_0_6_4 l_0_6_4)))
 (let ((?x5186 (- (* (* 2.0 l_0_6_1) l_0_6_7) (* (* 4.0 l_0_6_19) l_0_6_22))))
 (let ((?x5192 (- (- ?x5186 (* (* 4.0 l_0_6_20) l_0_6_23)) (* (* 4.0 l_0_6_21) l_0_6_24))))
 (let ((?x5198 (+ (+ ?x5192 (* (* 4.0 l_0_6_34) l_0_6_37)) (* (* 4.0 l_0_6_35) l_0_6_38))))
 (let ((?x5207 (- (- (- (+ ?x5198 (* (* 4.0 l_0_6_36) l_0_6_39)) ?x5202) ?x4077) (* (* 4.0 l_0_6_49) l_0_6_52))))
 (let ((?x5215 (- (- (- ?x5207 ?x5208) (* (* 4.0 l_0_6_50) l_0_6_53)) (* (* 4.0 l_0_6_51) l_0_6_54))))
 (let ((?x5224 (+ (+ (+ (- ?x5215 ?x5216) ?x4080) (* (* 4.0 l_0_6_64) l_0_6_67)) (* (* 4.0 l_0_6_65) l_0_6_68))))
 (let ((?x5233 (- (- (- (+ ?x5224 (* (* 4.0 l_0_6_66) l_0_6_69)) ?x5228) ?x5230) ?x5232)))
 (= ?x5233 0.0)))))))))))))))))))
(assert
 (let ((?x4965 (* 2.0 l_0_6_81)))
 (let ((?x4966 (* ?x4965 l_0_6_84)))
 (let ((?x4962 (* 2.0 l_0_6_80)))
 (let ((?x4963 (* ?x4962 l_0_6_83)))
 (let ((?x4959 (* 2.0 l_0_6_79)))
 (let ((?x4960 (* ?x4959 l_0_6_82)))
 (let ((?x4630 (* l_0_6_70 l_0_6_70)))
 (let ((?x5340 (* 2.0 ?x4630)))
 (let ((?x4627 (* l_0_6_69 l_0_6_69)))
 (let ((?x5338 (* 2.0 ?x4627)))
 (let ((?x4624 (* l_0_6_68 l_0_6_68)))
 (let ((?x5336 (* 2.0 ?x4624)))
 (let ((?x4621 (* l_0_6_67 l_0_6_67)))
 (let ((?x5334 (* 2.0 ?x4621)))
 (let ((?x5332 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x5321 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x4606 (* l_0_6_40 l_0_6_40)))
 (let ((?x5318 (* 2.0 ?x4606)))
 (let ((?x5316 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x4603 (* l_0_6_39 l_0_6_39)))
 (let ((?x5313 (* 2.0 ?x4603)))
 (let ((?x4600 (* l_0_6_38 l_0_6_38)))
 (let ((?x5311 (* 2.0 ?x4600)))
 (let ((?x4597 (* l_0_6_37 l_0_6_37)))
 (let ((?x5309 (* 2.0 ?x4597)))
 (let ((?x5304 (- (* (* (- 2.0) l_0_6_22) l_0_6_22) (* (* 2.0 l_0_6_23) l_0_6_23))))
 (let ((?x5308 (- (- ?x5304 (* (* 2.0 l_0_6_24) l_0_6_24)) (* (* 2.0 l_0_6_25) l_0_6_25))))
 (let ((?x5324 (- (- (+ (- (+ (+ (+ ?x5308 ?x5309) ?x5311) ?x5313) ?x5316) ?x5318) ?x5321) (* (* 2.0 l_0_6_52) l_0_6_52))))
 (let ((?x5328 (- (- ?x5324 (* (* 2.0 l_0_6_53) l_0_6_53)) (* (* 2.0 l_0_6_54) l_0_6_54))))
 (let ((?x5337 (+ (+ (- (- ?x5328 (* (* 2.0 l_0_6_55) l_0_6_55)) ?x5332) ?x5334) ?x5336)))
 (= (- (- (- (+ (+ ?x5337 ?x5338) ?x5340) ?x4960) ?x4963) ?x4966) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x4965 (* 2.0 l_0_6_81)))
 (let ((?x5480 (* ?x4965 l_0_6_88)))
 (let ((?x4962 (* 2.0 l_0_6_80)))
 (let ((?x5478 (* ?x4962 l_0_6_87)))
 (let ((?x4959 (* 2.0 l_0_6_79)))
 (let ((?x5476 (* ?x4959 l_0_6_86)))
 (let ((?x4446 (* 2.0 l_0_6_36)))
 (let ((?x4447 (* ?x4446 l_0_6_39)))
 (let ((?x4443 (* 2.0 l_0_6_35)))
 (let ((?x4444 (* ?x4443 l_0_6_38)))
 (let ((?x4440 (* 2.0 l_0_6_34)))
 (let ((?x4441 (* ?x4440 l_0_6_37)))
 (let ((?x4435 (* 2.0 l_0_6_21)))
 (let ((?x4436 (* ?x4435 l_0_6_24)))
 (let ((?x4432 (* 2.0 l_0_6_20)))
 (let ((?x4433 (* ?x4432 l_0_6_23)))
 (let ((?x4429 (* 2.0 l_0_6_19)))
 (let ((?x4430 (* ?x4429 l_0_6_22)))
 (let ((?x5419 (* 2.0 l_0_6_13)))
 (let ((?x5420 (* ?x5419 l_0_6_6)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5417 (* ?x5094 l_0_6_5)))
 (let ((?x5423 (+ (+ (- (- (* (* (- 2.0) l_0_6_11) l_0_6_4) ?x5417) ?x5420) ?x4430) ?x4433)))
 (let ((?x5430 (- (- (+ ?x5423 ?x4436) (* (* 4.0 l_0_6_22) l_0_6_26)) (* (* 4.0 l_0_6_23) l_0_6_27))))
 (let ((?x5436 (- (- ?x5430 (* (* 4.0 l_0_6_24) l_0_6_28)) (* (* 4.0 l_0_6_25) l_0_6_29))))
 (let ((?x5442 (+ (- (- (- ?x5436 ?x4441) ?x4444) ?x4447) (* (* 4.0 l_0_6_37) l_0_6_41))))
 (let ((?x5448 (+ (+ ?x5442 (* (* 4.0 l_0_6_38) l_0_6_42)) (* (* 4.0 l_0_6_39) l_0_6_43))))
 (let ((?x5454 (- (+ ?x5448 (* (* 4.0 l_0_6_40) l_0_6_44)) (* (* 4.0 l_0_6_52) l_0_6_56))))
 (let ((?x5460 (- (- ?x5454 (* (* 4.0 l_0_6_53) l_0_6_57)) (* (* 4.0 l_0_6_54) l_0_6_58))))
 (let ((?x5466 (+ (- ?x5460 (* (* 4.0 l_0_6_55) l_0_6_59)) (* (* 4.0 l_0_6_67) l_0_6_71))))
 (let ((?x5472 (+ (+ ?x5466 (* (* 4.0 l_0_6_68) l_0_6_72)) (* (* 4.0 l_0_6_69) l_0_6_73))))
 (let ((?x5481 (- (- (- (+ ?x5472 (* (* 4.0 l_0_6_70) l_0_6_74)) ?x5476) ?x5478) ?x5480)))
 (= ?x5481 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5586 (* l_0_6_9 l_0_6_9)))
 (let ((?x5057 (* l_0_6_85 l_0_6_85)))
 (let ((?x5055 (* l_0_6_84 l_0_6_84)))
 (let ((?x5053 (* l_0_6_83 l_0_6_83)))
 (let ((?x5051 (* l_0_6_82 l_0_6_82)))
 (let ((?x5580 (* l_0_6_8 l_0_6_8)))
 (let ((?x5582 (- (- (- (* (- l_0_6_10) l_0_6_10) (* l_0_6_7 l_0_6_7)) ?x5580) ?x5051)))
 (= (- (- (- (- ?x5582 ?x5053) ?x5055) ?x5057) ?x5586) 0.0)))))))))
(assert
 (let ((?x5123 (* (* 2.0 l_0_6_85) l_0_6_89)))
 (let ((?x5120 (* (* 2.0 l_0_6_84) l_0_6_88)))
 (let ((?x5117 (* (* 2.0 l_0_6_83) l_0_6_87)))
 (let ((?x5114 (* (* 2.0 l_0_6_82) l_0_6_86)))
 (let ((?x4606 (* l_0_6_40 l_0_6_40)))
 (let ((?x4603 (* l_0_6_39 l_0_6_39)))
 (let ((?x4600 (* l_0_6_38 l_0_6_38)))
 (let ((?x4597 (* l_0_6_37 l_0_6_37)))
 (let ((?x4658 (* l_0_6_25 l_0_6_25)))
 (let ((?x4654 (* l_0_6_24 l_0_6_24)))
 (let ((?x4650 (* l_0_6_23 l_0_6_23)))
 (let ((?x4646 (* l_0_6_22 l_0_6_22)))
 (let ((?x5419 (* 2.0 l_0_6_13)))
 (let ((?x5618 (* ?x5419 l_0_6_9)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5616 (* ?x5094 l_0_6_8)))
 (let ((?x5613 (* 2.0 l_0_6_11)))
 (let ((?x5614 (* ?x5613 l_0_6_7)))
 (let ((?x5620 (+ (- (- (- (* (* (- 2.0) l_0_6_10) l_0_6_14) ?x5614) ?x5616) ?x5618) ?x4646)))
 (let ((?x5627 (- (- (- (- (+ (+ (+ ?x5620 ?x4650) ?x4654) ?x4658) ?x4597) ?x4600) ?x4603) ?x4606)))
 (= (- (- (- (- ?x5627 ?x5114) ?x5117) ?x5120) ?x5123) 0.0))))))))))))))))))))))
(assert
 (let ((?x5707 (* l_0_6_90 l_0_6_90)))
 (let ((?x5705 (* l_0_6_89 l_0_6_89)))
 (let ((?x5703 (* l_0_6_88 l_0_6_88)))
 (let ((?x5701 (* l_0_6_87 l_0_6_87)))
 (let ((?x5699 (* l_0_6_86 l_0_6_86)))
 (let ((?x4741 (* (* 2.0 l_0_6_40) l_0_6_44)))
 (let ((?x4738 (* (* 2.0 l_0_6_39) l_0_6_43)))
 (let ((?x4735 (* (* 2.0 l_0_6_38) l_0_6_42)))
 (let ((?x4732 (* (* 2.0 l_0_6_37) l_0_6_41)))
 (let ((?x4727 (* 2.0 l_0_6_25)))
 (let ((?x4728 (* ?x4727 l_0_6_29)))
 (let ((?x4724 (* 2.0 l_0_6_24)))
 (let ((?x4725 (* ?x4724 l_0_6_28)))
 (let ((?x4721 (* 2.0 l_0_6_23)))
 (let ((?x4722 (* ?x4721 l_0_6_27)))
 (let ((?x4719 (* (* 2.0 l_0_6_22) l_0_6_26)))
 (let ((?x5689 (* l_0_6_15 l_0_6_15)))
 (let ((?x5687 (* l_0_6_14 l_0_6_14)))
 (let ((?x5685 (* l_0_6_13 l_0_6_13)))
 (let ((?x5688 (- (- (- (* (- l_0_6_11) l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5685) ?x5687)))
 (let ((?x5696 (- (- (+ (+ (+ (+ (- ?x5688 ?x5689) ?x4719) ?x4722) ?x4725) ?x4728) ?x4732) ?x4735)))
 (let ((?x5708 (- (- (- (- (- (- (- ?x5696 ?x4738) ?x4741) ?x5699) ?x5701) ?x5703) ?x5705) ?x5707)))
 (= ?x5708 0.0))))))))))))))))))))))))
(assert
 (let ((?x5232 (* l_0_6_81 l_0_6_81)))
 (let ((?x5230 (* l_0_6_80 l_0_6_80)))
 (let ((?x5228 (* l_0_6_79 l_0_6_79)))
 (let ((?x4172 (* l_0_6_66 l_0_6_66)))
 (let ((?x4169 (* l_0_6_65 l_0_6_65)))
 (let ((?x4166 (* l_0_6_64 l_0_6_64)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5777 (* ?x4079 l_0_6_62)))
 (let ((?x4221 (* l_0_6_51 l_0_6_51)))
 (let ((?x4217 (* l_0_6_50 l_0_6_50)))
 (let ((?x4213 (* l_0_6_49 l_0_6_49)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5768 (* ?x4076 l_0_6_47)))
 (let ((?x5761 (- (* (* 2.0 l_0_6_1) l_0_6_2) (* (* 4.0 l_0_6_17) l_0_6_19))))
 (let ((?x5765 (+ (- ?x5761 (* (* 4.0 l_0_6_18) l_0_6_20)) (* (* 4.0 l_0_6_32) l_0_6_34))))
 (let ((?x5771 (- (- (+ ?x5765 (* (* 4.0 l_0_6_33) l_0_6_35)) ?x5768) (* (* 4.0 l_0_6_47) l_0_6_49))))
 (let ((?x5776 (+ (+ (+ (- ?x5771 (* (* 4.0 l_0_6_48) l_0_6_50)) ?x4213) ?x4217) ?x4221)))
 (let ((?x5782 (+ (+ (+ ?x5776 ?x5777) (* (* 4.0 l_0_6_62) l_0_6_64)) (* (* 4.0 l_0_6_63) l_0_6_65))))
 (= (+ (+ (+ (- (- (- ?x5782 ?x4166) ?x4169) ?x4172) ?x5228) ?x5230) ?x5232) 0.0))))))))))))))))))))
(assert
 (let ((?x4172 (* l_0_6_66 l_0_6_66)))
 (let ((?x5874 (* 2.0 ?x4172)))
 (let ((?x4169 (* l_0_6_65 l_0_6_65)))
 (let ((?x5872 (* 2.0 ?x4169)))
 (let ((?x4166 (* l_0_6_64 l_0_6_64)))
 (let ((?x5870 (* 2.0 ?x4166)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4253 (* ?x4079 l_0_6_64)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4249 (* ?x4076 l_0_6_49)))
 (let ((?x4144 (* l_0_6_36 l_0_6_36)))
 (let ((?x5860 (* 2.0 ?x4144)))
 (let ((?x4141 (* l_0_6_35 l_0_6_35)))
 (let ((?x5858 (* 2.0 ?x4141)))
 (let ((?x4138 (* l_0_6_34 l_0_6_34)))
 (let ((?x5856 (* 2.0 ?x4138)))
 (let ((?x5851 (- (* (* 2.0 l_0_6_1) l_0_6_4) (* (* 2.0 l_0_6_19) l_0_6_19))))
 (let ((?x5855 (- (- ?x5851 (* (* 2.0 l_0_6_20) l_0_6_20)) (* (* 2.0 l_0_6_21) l_0_6_21))))
 (let ((?x5864 (- (- (+ (+ (+ ?x5855 ?x5856) ?x5858) ?x5860) ?x4249) (* (* 2.0 l_0_6_49) l_0_6_49))))
 (let ((?x5868 (- (- ?x5864 (* (* 2.0 l_0_6_50) l_0_6_50)) (* (* 2.0 l_0_6_51) l_0_6_51))))
 (= (+ (+ (+ (+ ?x5868 ?x4253) ?x5870) ?x5872) ?x5874) 0.0))))))))))))))))))))))
(assert
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5939 (* ?x4079 l_0_6_71)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5931 (* ?x4076 l_0_6_56)))
 (let ((?x4144 (* l_0_6_36 l_0_6_36)))
 (let ((?x4141 (* l_0_6_35 l_0_6_35)))
 (let ((?x4138 (* l_0_6_34 l_0_6_34)))
 (let ((?x4197 (* l_0_6_21 l_0_6_21)))
 (let ((?x4193 (* l_0_6_20 l_0_6_20)))
 (let ((?x4189 (* l_0_6_19 l_0_6_19)))
 (let ((?x5914 (- (* (* 2.0 l_0_6_1) l_0_6_11) (* (* 4.0 l_0_6_19) l_0_6_26))))
 (let ((?x5920 (- (+ (- (+ ?x5914 ?x4189) (* (* 4.0 l_0_6_20) l_0_6_27)) ?x4193) (* (* 4.0 l_0_6_21) l_0_6_28))))
 (let ((?x5926 (+ (- (+ (+ ?x5920 ?x4197) (* (* 4.0 l_0_6_34) l_0_6_41)) ?x4138) (* (* 4.0 l_0_6_35) l_0_6_42))))
 (let ((?x5932 (- (- (+ (- ?x5926 ?x4141) (* (* 4.0 l_0_6_36) l_0_6_43)) ?x4144) ?x5931)))
 (let ((?x5936 (- (- ?x5932 (* (* 4.0 l_0_6_49) l_0_6_56)) (* (* 4.0 l_0_6_50) l_0_6_57))))
 (let ((?x5942 (+ (+ (- ?x5936 (* (* 4.0 l_0_6_51) l_0_6_58)) ?x5939) (* (* 4.0 l_0_6_64) l_0_6_71))))
 (let ((?x5946 (+ (+ ?x5942 (* (* 4.0 l_0_6_65) l_0_6_72)) (* (* 4.0 l_0_6_66) l_0_6_73))))
 (= ?x5946 0.0)))))))))))))))))))
(assert
 (let ((?x6031 (* l_0_6_63 l_0_6_63)))
 (let ((?x6029 (* l_0_6_62 l_0_6_62)))
 (let ((?x6018 (* l_0_6_48 l_0_6_48)))
 (let ((?x6014 (* l_0_6_47 l_0_6_47)))
 (let ((?x6030 (+ (- (- (+ (* l_0_6_2 l_0_6_2) (* l_0_6_3 l_0_6_3)) ?x6014) ?x6018) ?x6029)))
 (= (+ ?x6030 ?x6031) 0.0)))))))
(assert
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6050 (* ?x4350 l_0_6_65)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6048 (* ?x4347 l_0_6_64)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6046 (* ?x4343 l_0_6_50)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6044 (* ?x4340 l_0_6_49)))
 (let ((?x4928 (* 2.0 l_0_6_3)))
 (let ((?x4929 (* ?x4928 l_0_6_5)))
 (let ((?x4925 (* 2.0 l_0_6_2)))
 (let ((?x4926 (* ?x4925 l_0_6_4)))
 (= (+ (+ (- (- (+ ?x4926 ?x4929) ?x6044) ?x6046) ?x6048) ?x6050) 0.0))))))))))))))
(assert
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x4351 (* ?x4350 l_0_6_68)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x4348 (* ?x4347 l_0_6_67)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x4344 (* ?x4343 l_0_6_53)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x4341 (* ?x4340 l_0_6_52)))
 (let ((?x4928 (* 2.0 l_0_6_3)))
 (let ((?x5029 (* ?x4928 l_0_6_8)))
 (let ((?x6072 (+ (- (- (+ (* (* 2.0 l_0_6_2) l_0_6_7) ?x5029) ?x4341) ?x4344) ?x4348)))
 (= (+ ?x6072 ?x4351) 0.0)))))))))))))
(assert
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6090 (* ?x4350 l_0_6_72)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6088 (* ?x4347 l_0_6_71)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6086 (* ?x4343 l_0_6_57)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6084 (* ?x4340 l_0_6_56)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5095 (* ?x5094 l_0_6_3)))
 (let ((?x6089 (+ (- (- (+ (* (* 2.0 l_0_6_11) l_0_6_2) ?x5095) ?x6084) ?x6086) ?x6088)))
 (= (+ ?x6089 ?x6090) 0.0)))))))))))))
(assert
 (let ((?x4172 (* l_0_6_66 l_0_6_66)))
 (let ((?x4169 (* l_0_6_65 l_0_6_65)))
 (let ((?x4166 (* l_0_6_64 l_0_6_64)))
 (let ((?x5216 (* l_0_6_6 l_0_6_6)))
 (let ((?x4221 (* l_0_6_51 l_0_6_51)))
 (let ((?x4217 (* l_0_6_50 l_0_6_50)))
 (let ((?x5208 (* l_0_6_5 l_0_6_5)))
 (let ((?x6115 (- (+ (- (* l_0_6_4 l_0_6_4) (* l_0_6_49 l_0_6_49)) ?x5208) ?x4217)))
 (= (+ (+ (+ (+ (- ?x6115 ?x4221) ?x5216) ?x4166) ?x4169) ?x4172) 0.0))))))))))
(assert
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x4469 (* ?x4468 l_0_6_69)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x4466 (* ?x4465 l_0_6_68)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x4463 (* ?x4462 l_0_6_67)))
 (let ((?x5332 (* (* 2.0 l_0_6_6) l_0_6_9)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x4458 (* ?x4457 l_0_6_54)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x4455 (* ?x4454 l_0_6_53)))
 (let ((?x5321 (* (* 2.0 l_0_6_5) l_0_6_8)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x4452 (* ?x4451 l_0_6_52)))
 (let ((?x5316 (* (* 2.0 l_0_6_4) l_0_6_7)))
 (let ((?x6137 (+ (+ (+ (- (- (+ (- ?x5316 ?x4452) ?x5321) ?x4455) ?x4458) ?x5332) ?x4463) ?x4466)))
 (= (+ ?x6137 ?x4469) 0.0))))))))))))))))))
(assert
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x6162 (* ?x4468 l_0_6_73)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x6160 (* ?x4465 l_0_6_72)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x6158 (* ?x4462 l_0_6_71)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x6156 (* ?x4457 l_0_6_58)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x6154 (* ?x4454 l_0_6_57)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x6152 (* ?x4451 l_0_6_56)))
 (let ((?x5419 (* 2.0 l_0_6_13)))
 (let ((?x5420 (* ?x5419 l_0_6_6)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5417 (* ?x5094 l_0_6_5)))
 (let ((?x6155 (- (- (+ (+ (* (* 2.0 l_0_6_11) l_0_6_4) ?x5417) ?x5420) ?x6152) ?x6154)))
 (= (+ (+ (+ (- ?x6155 ?x6156) ?x6158) ?x6160) ?x6162) 0.0)))))))))))))))))))
(assert
 (let ((?x5586 (* l_0_6_9 l_0_6_9)))
 (let ((?x5580 (* l_0_6_8 l_0_6_8)))
 (let ((?x4630 (* l_0_6_70 l_0_6_70)))
 (let ((?x5578 (* l_0_6_7 l_0_6_7)))
 (let ((?x4627 (* l_0_6_69 l_0_6_69)))
 (let ((?x4624 (* l_0_6_68 l_0_6_68)))
 (let ((?x4621 (* l_0_6_67 l_0_6_67)))
 (let ((?x4675 (* l_0_6_55 l_0_6_55)))
 (let ((?x4671 (* l_0_6_54 l_0_6_54)))
 (let ((?x4667 (* l_0_6_53 l_0_6_53)))
 (let ((?x6189 (- (- (- (* l_0_6_10 l_0_6_10) (* l_0_6_52 l_0_6_52)) ?x4667) ?x4671)))
 (let ((?x6196 (+ (+ (+ (+ (+ (+ (- ?x6189 ?x4675) ?x4621) ?x4624) ?x4627) ?x5578) ?x4630) ?x5580)))
 (= (+ ?x6196 ?x5586) 0.0))))))))))))))
(assert
 (let ((?x4765 (* (* 2.0 l_0_6_70) l_0_6_74)))
 (let ((?x4762 (* (* 2.0 l_0_6_69) l_0_6_73)))
 (let ((?x4759 (* (* 2.0 l_0_6_68) l_0_6_72)))
 (let ((?x4756 (* (* 2.0 l_0_6_67) l_0_6_71)))
 (let ((?x4752 (* 2.0 l_0_6_55)))
 (let ((?x4753 (* ?x4752 l_0_6_59)))
 (let ((?x4749 (* 2.0 l_0_6_54)))
 (let ((?x4750 (* ?x4749 l_0_6_58)))
 (let ((?x4746 (* 2.0 l_0_6_53)))
 (let ((?x4747 (* ?x4746 l_0_6_57)))
 (let ((?x4743 (* 2.0 l_0_6_52)))
 (let ((?x4744 (* ?x4743 l_0_6_56)))
 (let ((?x5419 (* 2.0 l_0_6_13)))
 (let ((?x5618 (* ?x5419 l_0_6_9)))
 (let ((?x5094 (* 2.0 l_0_6_12)))
 (let ((?x5616 (* ?x5094 l_0_6_8)))
 (let ((?x5613 (* 2.0 l_0_6_11)))
 (let ((?x5614 (* ?x5613 l_0_6_7)))
 (let ((?x6214 (- (+ (+ (+ (* (* 2.0 l_0_6_10) l_0_6_14) ?x5614) ?x5616) ?x5618) ?x4744)))
 (let ((?x6221 (+ (+ (+ (+ (- (- (- ?x6214 ?x4747) ?x4750) ?x4753) ?x4756) ?x4759) ?x4762) ?x4765)))
 (= ?x6221 0.0))))))))))))))))))))))
(assert
 (let ((?x6256 (* l_0_6_75 l_0_6_75)))
 (let ((?x6254 (* l_0_6_74 l_0_6_74)))
 (let ((?x6252 (* l_0_6_73 l_0_6_73)))
 (let ((?x6250 (* l_0_6_72 l_0_6_72)))
 (let ((?x6248 (* l_0_6_71 l_0_6_71)))
 (let ((?x6246 (* l_0_6_60 l_0_6_60)))
 (let ((?x6244 (* l_0_6_59 l_0_6_59)))
 (let ((?x6242 (* l_0_6_58 l_0_6_58)))
 (let ((?x6240 (* l_0_6_57 l_0_6_57)))
 (let ((?x6238 (* l_0_6_56 l_0_6_56)))
 (let ((?x5689 (* l_0_6_15 l_0_6_15)))
 (let ((?x5687 (* l_0_6_14 l_0_6_14)))
 (let ((?x5685 (* l_0_6_13 l_0_6_13)))
 (let ((?x6236 (+ (+ (+ (* l_0_6_11 l_0_6_11) (* l_0_6_12 l_0_6_12)) ?x5685) ?x5687)))
 (let ((?x6249 (+ (- (- (- (- (- (+ ?x6236 ?x5689) ?x6238) ?x6240) ?x6242) ?x6244) ?x6246) ?x6248)))
 (= (+ (+ (+ (+ ?x6249 ?x6250) ?x6252) ?x6254) ?x6256) 0.0)))))))))))))))))
(assert
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4471 (* ?x4353 l_0_6_79)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6050 (* ?x4350 l_0_6_65)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6048 (* ?x4347 l_0_6_64)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x4253 (* ?x4079 l_0_6_64)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6046 (* ?x4343 l_0_6_50)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6044 (* ?x4340 l_0_6_49)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x4249 (* ?x4076 l_0_6_49)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x6287 (* ?x4336 l_0_6_35)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x6285 (* ?x4333 l_0_6_34)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x6281 (* ?x4330 l_0_6_20)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x6279 (* ?x4327 l_0_6_19)))
 (let ((?x6284 (+ (- (- (* (* (- 4.0) l_0_6_16) l_0_6_17) ?x6279) ?x6281) (* (* 4.0 l_0_6_31) l_0_6_32))))
 (let ((?x6291 (+ (- (+ (+ ?x6284 ?x6285) ?x6287) (* (* 4.0 l_0_6_46) l_0_6_47)) ?x4249)))
 (let ((?x6296 (- (+ (- (- ?x6291 ?x6044) ?x6046) (* (* 4.0 l_0_6_61) l_0_6_62)) ?x4253)))
 (let ((?x6301 (- (+ (+ (+ ?x6296 ?x6048) ?x6050) ?x4471) (* (* 2.0 l_0_6_92) l_0_6_94))))
 (= (- ?x6301 (* (* 2.0 l_0_6_93) l_0_6_95)) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x6162 (* ?x4468 l_0_6_73)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x6160 (* ?x4465 l_0_6_72)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x6158 (* ?x4462 l_0_6_71)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x6156 (* ?x4457 l_0_6_58)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x6154 (* ?x4454 l_0_6_57)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x6152 (* ?x4451 l_0_6_56)))
 (let ((?x4446 (* 2.0 l_0_6_36)))
 (let ((?x6366 (* ?x4446 l_0_6_43)))
 (let ((?x4443 (* 2.0 l_0_6_35)))
 (let ((?x6364 (* ?x4443 l_0_6_42)))
 (let ((?x4440 (* 2.0 l_0_6_34)))
 (let ((?x6362 (* ?x4440 l_0_6_41)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x4244 (* ?x4073 l_0_6_34)))
 (let ((?x4435 (* 2.0 l_0_6_21)))
 (let ((?x6357 (* ?x4435 l_0_6_28)))
 (let ((?x4432 (* 2.0 l_0_6_20)))
 (let ((?x6355 (* ?x4432 l_0_6_27)))
 (let ((?x4429 (* 2.0 l_0_6_19)))
 (let ((?x6353 (* ?x4429 l_0_6_26)))
 (let ((?x6346 (- (* (* (- 2.0) l_0_6_101) l_0_6_94) (* (* 2.0 l_0_6_102) l_0_6_95))))
 (let ((?x6350 (+ (- ?x6346 (* (* 2.0 l_0_6_103) l_0_6_96)) (* (* 2.0 l_0_6_16) l_0_6_19))))
 (let ((?x6358 (- (- (- (- ?x6350 (* (* 4.0 l_0_6_16) l_0_6_26)) ?x6353) ?x6355) ?x6357)))
 (let ((?x6365 (+ (+ (+ (- ?x6358 ?x4244) (* (* 4.0 l_0_6_31) l_0_6_41)) ?x6362) ?x6364)))
 (let ((?x6371 (- (- (- (+ ?x6365 ?x6366) (* (* 4.0 l_0_6_46) l_0_6_56)) ?x6152) ?x6154)))
 (let ((?x6376 (+ (+ (+ (- ?x6371 ?x6156) (* (* 4.0 l_0_6_61) l_0_6_71)) ?x6158) ?x6160)))
 (= (+ ?x6376 ?x6162) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x4957 (* ?x4886 l_0_6_80)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x4955 (* ?x4881 l_0_6_79)))
 (let ((?x6031 (* l_0_6_63 l_0_6_63)))
 (let ((?x6417 (* 2.0 ?x6031)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6050 (* ?x4350 l_0_6_65)))
 (let ((?x6029 (* l_0_6_62 l_0_6_62)))
 (let ((?x6414 (* 2.0 ?x6029)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6048 (* ?x4347 l_0_6_64)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6046 (* ?x4343 l_0_6_50)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6044 (* ?x4340 l_0_6_49)))
 (let ((?x6404 (* l_0_6_33 l_0_6_33)))
 (let ((?x6405 (* 2.0 ?x6404)))
 (let ((?x6401 (* l_0_6_32 l_0_6_32)))
 (let ((?x6402 (* 2.0 ?x6401)))
 (let ((?x975 (- (* (* (- 2.0) l_0_6_17) l_0_6_17) (* (* 2.0 l_0_6_18) l_0_6_18))))
 (let ((?x6412 (- (+ (- (+ (+ (+ ?x975 ?x6402) ?x6405) ?x6044) (* ?x4340 l_0_6_47)) ?x6046) (* ?x4343 l_0_6_48))))
 (= (+ (+ (+ (- (+ (- ?x6412 ?x6048) ?x6414) ?x6050) ?x6417) ?x4955) ?x4957) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4965 (* 2.0 l_0_6_81)))
 (let ((?x5480 (* ?x4965 l_0_6_88)))
 (let ((?x4962 (* 2.0 l_0_6_80)))
 (let ((?x5478 (* ?x4962 l_0_6_87)))
 (let ((?x4959 (* 2.0 l_0_6_79)))
 (let ((?x5476 (* ?x4959 l_0_6_86)))
 (let ((?x4468 (* 2.0 l_0_6_66)))
 (let ((?x6162 (* ?x4468 l_0_6_73)))
 (let ((?x4465 (* 2.0 l_0_6_65)))
 (let ((?x6160 (* ?x4465 l_0_6_72)))
 (let ((?x4462 (* 2.0 l_0_6_64)))
 (let ((?x6158 (* ?x4462 l_0_6_71)))
 (let ((?x4457 (* 2.0 l_0_6_51)))
 (let ((?x6156 (* ?x4457 l_0_6_58)))
 (let ((?x4454 (* 2.0 l_0_6_50)))
 (let ((?x6154 (* ?x4454 l_0_6_57)))
 (let ((?x4451 (* 2.0 l_0_6_49)))
 (let ((?x6152 (* ?x4451 l_0_6_56)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x6287 (* ?x4336 l_0_6_35)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x6285 (* ?x4333 l_0_6_34)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x6281 (* ?x4330 l_0_6_20)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x6279 (* ?x4327 l_0_6_19)))
 (let ((?x1119 (- (+ (- ?x6279 (* (* 4.0 l_0_6_17) l_0_6_26)) ?x6281) (* (* 4.0 l_0_6_18) l_0_6_27))))
 (let ((?x6441 (+ (- (+ (- ?x1119 ?x6285) (* (* 4.0 l_0_6_32) l_0_6_41)) ?x6287) (* (* 4.0 l_0_6_33) l_0_6_42))))
 (let ((?x6445 (- (- ?x6441 (* (* 4.0 l_0_6_47) l_0_6_56)) (* (* 4.0 l_0_6_48) l_0_6_57))))
 (let ((?x6450 (+ (+ (+ (+ ?x6445 ?x6152) ?x6154) ?x6156) (* (* 4.0 l_0_6_62) l_0_6_71))))
 (let ((?x6455 (- (- (- (+ ?x6450 (* (* 4.0 l_0_6_63) l_0_6_72)) ?x6158) ?x6160) ?x6162)))
 (= (+ (+ (+ ?x6455 ?x5476) ?x5478) ?x5480) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x4446 (* 2.0 l_0_6_36)))
 (let ((?x6366 (* ?x4446 l_0_6_43)))
 (let ((?x4443 (* 2.0 l_0_6_35)))
 (let ((?x6364 (* ?x4443 l_0_6_42)))
 (let ((?x4440 (* 2.0 l_0_6_34)))
 (let ((?x6362 (* ?x4440 l_0_6_41)))
 (let ((?x4435 (* 2.0 l_0_6_21)))
 (let ((?x6357 (* ?x4435 l_0_6_28)))
 (let ((?x4432 (* 2.0 l_0_6_20)))
 (let ((?x6355 (* ?x4432 l_0_6_27)))
 (let ((?x4429 (* 2.0 l_0_6_19)))
 (let ((?x6353 (* ?x4429 l_0_6_26)))
 (let ((?x6503 (- (- (+ (+ ?x6353 ?x6355) ?x6357) (* (* 2.0 l_0_6_26) l_0_6_26)) (* (* 2.0 l_0_6_27) l_0_6_27))))
 (let ((?x6509 (- (- ?x6503 (* (* 2.0 l_0_6_28) l_0_6_28)) (* (* 2.0 l_0_6_29) l_0_6_29))))
 (let ((?x6515 (- (- (- (- ?x6509 (* (* 2.0 l_0_6_30) l_0_6_30)) ?x6362) ?x6364) ?x6366)))
 (let ((?x6521 (+ (+ ?x6515 (* 2.0 (* l_0_6_41 l_0_6_41))) (* 2.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x6527 (+ (+ ?x6521 (* 2.0 (* l_0_6_43 l_0_6_43))) (* 2.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x6533 (- (+ ?x6527 (* 2.0 (* l_0_6_45 l_0_6_45))) (* (* 2.0 l_0_6_56) l_0_6_56))))
 (let ((?x6539 (- (- ?x6533 (* (* 2.0 l_0_6_57) l_0_6_57)) (* (* 2.0 l_0_6_58) l_0_6_58))))
 (let ((?x6545 (- (- ?x6539 (* (* 2.0 l_0_6_59) l_0_6_59)) (* (* 2.0 l_0_6_60) l_0_6_60))))
 (let ((?x6549 (+ (+ ?x6545 (* 2.0 (* l_0_6_71 l_0_6_71))) (* 2.0 (* l_0_6_72 l_0_6_72)))))
 (let ((?x6553 (+ (+ ?x6549 (* 2.0 (* l_0_6_73 l_0_6_73))) (* 2.0 (* l_0_6_74 l_0_6_74)))))
 (= (+ ?x6553 (* 2.0 (* l_0_6_75 l_0_6_75))) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4082 (* l_0_6_76 l_0_6_76)))
 (let ((?x4164 (* l_0_6_61 l_0_6_61)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5777 (* ?x4079 l_0_6_62)))
 (let ((?x4150 (* l_0_6_46 l_0_6_46)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5768 (* ?x4076 l_0_6_47)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x1392 (* ?x4073 l_0_6_32)))
 (let ((?x1399 (+ (+ (- (+ (* (* (- 2.0) l_0_6_16) l_0_6_17) ?x1392) ?x5768) ?x4150) ?x5777)))
 (= (- (+ (- ?x1399 ?x4164) ?x4082) (* (* 2.0 l_0_6_91) l_0_6_92)) 0.0))))))))))))
(assert
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5939 (* ?x4079 l_0_6_71)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5931 (* ?x4076 l_0_6_56)))
 (let ((?x4246 (* l_0_6_31 l_0_6_31)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x6584 (* ?x4073 l_0_6_41)))
 (let ((?x4262 (* l_0_6_16 l_0_6_16)))
 (let ((?x4070 (* 2.0 l_0_6_16)))
 (let ((?x6581 (* ?x4070 l_0_6_26)))
 (let ((?x6586 (- (+ (+ (- (* (* (- 2.0) l_0_6_101) l_0_6_91) ?x6581) ?x4262) ?x6584) ?x4246)))
 (= (+ (- ?x6586 ?x5931) ?x5939) 0.0)))))))))))))
(assert
 (let ((?x6626 (* l_0_6_93 l_0_6_93)))
 (let ((?x6624 (* l_0_6_92 l_0_6_92)))
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4354 (* ?x4353 l_0_6_77)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5777 (* ?x4079 l_0_6_62)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5768 (* ?x4076 l_0_6_47)))
 (let ((?x6606 (- (* (* (- 1.0) l_0_6_17) l_0_6_17) (* (* 1.0 l_0_6_18) l_0_6_18))))
 (let ((?x6610 (+ (+ ?x6606 (* 1.0 (* l_0_6_32 l_0_6_32))) (* 1.0 (* l_0_6_33 l_0_6_33)))))
 (let ((?x6617 (- (- (+ ?x6610 ?x5768) (* (* 1.0 l_0_6_47) l_0_6_47)) (* (* 1.0 l_0_6_48) l_0_6_48))))
 (let ((?x6622 (+ (+ (- ?x6617 ?x5777) (* 1.0 (* l_0_6_62 l_0_6_62))) (* 1.0 (* l_0_6_63 l_0_6_63)))))
 (= (- (- (+ ?x6622 ?x4354) ?x6624) ?x6626) 0.0))))))))))))))
(assert
 (let ((?x4353 (* 2.0 l_0_6_76)))
 (let ((?x4767 (* ?x4353 l_0_6_86)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6090 (* ?x4350 l_0_6_72)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6088 (* ?x4347 l_0_6_71)))
 (let ((?x4079 (* 2.0 l_0_6_61)))
 (let ((?x5939 (* ?x4079 l_0_6_71)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6086 (* ?x4343 l_0_6_57)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6084 (* ?x4340 l_0_6_56)))
 (let ((?x4076 (* 2.0 l_0_6_46)))
 (let ((?x5931 (* ?x4076 l_0_6_56)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x6649 (* ?x4336 l_0_6_42)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x6647 (* ?x4333 l_0_6_41)))
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x1392 (* ?x4073 l_0_6_32)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x6644 (* ?x4330 l_0_6_27)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x6642 (* ?x4327 l_0_6_26)))
 (let ((?x6639 (- (* (* (- 2.0) l_0_6_101) l_0_6_92) (* (* 2.0 l_0_6_102) l_0_6_93))))
 (let ((?x6646 (- (- (- (+ ?x6639 (* (* 2.0 l_0_6_16) l_0_6_17)) ?x6642) ?x6644) ?x1392)))
 (let ((?x6655 (+ (- (- (- (+ (+ (+ ?x6646 ?x6647) ?x6649) ?x5931) ?x6084) ?x6086) ?x5939) ?x6088)))
 (= (+ (+ ?x6655 ?x6090) ?x4767) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x4073 (* 2.0 l_0_6_31)))
 (let ((?x6584 (* ?x4073 l_0_6_41)))
 (let ((?x4070 (* 2.0 l_0_6_16)))
 (let ((?x6581 (* ?x4070 l_0_6_26)))
 (let ((?x6689 (* l_0_6_105 l_0_6_105)))
 (let ((?x6687 (* l_0_6_104 l_0_6_104)))
 (let ((?x6685 (* l_0_6_103 l_0_6_103)))
 (let ((?x6686 (- (- (* (- l_0_6_101) l_0_6_101) (* l_0_6_102 l_0_6_102)) ?x6685)))
 (let ((?x6694 (- (+ (- (- ?x6686 ?x6687) ?x6689) ?x6581) (* (* 1.0 l_0_6_26) l_0_6_26))))
 (let ((?x6700 (- (- ?x6694 (* (* 1.0 l_0_6_27) l_0_6_27)) (* (* 1.0 l_0_6_28) l_0_6_28))))
 (let ((?x6706 (- (- ?x6700 (* (* 1.0 l_0_6_29) l_0_6_29)) (* (* 1.0 l_0_6_30) l_0_6_30))))
 (let ((?x6711 (+ (+ (- ?x6706 ?x6584) (* 1.0 (* l_0_6_41 l_0_6_41))) (* 1.0 (* l_0_6_42 l_0_6_42)))))
 (let ((?x6715 (+ (+ ?x6711 (* 1.0 (* l_0_6_43 l_0_6_43))) (* 1.0 (* l_0_6_44 l_0_6_44)))))
 (let ((?x6720 (- (+ ?x6715 (* 1.0 (* l_0_6_45 l_0_6_45))) (* (* 1.0 l_0_6_56) l_0_6_56))))
 (let ((?x6726 (- (- ?x6720 (* (* 1.0 l_0_6_57) l_0_6_57)) (* (* 1.0 l_0_6_58) l_0_6_58))))
 (let ((?x6732 (- (- ?x6726 (* (* 1.0 l_0_6_59) l_0_6_59)) (* (* 1.0 l_0_6_60) l_0_6_60))))
 (let ((?x6736 (+ (+ ?x6732 (* 1.0 (* l_0_6_71 l_0_6_71))) (* 1.0 (* l_0_6_72 l_0_6_72)))))
 (let ((?x6740 (+ (+ ?x6736 (* 1.0 (* l_0_6_73 l_0_6_73))) (* 1.0 (* l_0_6_74 l_0_6_74)))))
 (= (+ ?x6740 (* 1.0 (* l_0_6_75 l_0_6_75))) 0.0))))))))))))))))))))
(assert
 (let ((?x4886 (* 2.0 l_0_6_78)))
 (let ((?x5111 (* ?x4886 l_0_6_87)))
 (let ((?x4881 (* 2.0 l_0_6_77)))
 (let ((?x5109 (* ?x4881 l_0_6_86)))
 (let ((?x4350 (* 2.0 l_0_6_63)))
 (let ((?x6090 (* ?x4350 l_0_6_72)))
 (let ((?x4347 (* 2.0 l_0_6_62)))
 (let ((?x6088 (* ?x4347 l_0_6_71)))
 (let ((?x4343 (* 2.0 l_0_6_48)))
 (let ((?x6086 (* ?x4343 l_0_6_57)))
 (let ((?x4340 (* 2.0 l_0_6_47)))
 (let ((?x6084 (* ?x4340 l_0_6_56)))
 (let ((?x6404 (* l_0_6_33 l_0_6_33)))
 (let ((?x6401 (* l_0_6_32 l_0_6_32)))
 (let ((?x1801 (- (- (+ (* l_0_6_17 l_0_6_17) (* l_0_6_18 l_0_6_18)) ?x6401) ?x6404)))
 (= (+ (+ (- (- (+ (+ ?x1801 ?x6084) ?x6086) ?x6088) ?x6090) ?x5109) ?x5111) 0.0)))))))))))))))))
(assert
 (let ((?x5707 (* l_0_6_90 l_0_6_90)))
 (let ((?x5705 (* l_0_6_89 l_0_6_89)))
 (let ((?x5703 (* l_0_6_88 l_0_6_88)))
 (let ((?x5701 (* l_0_6_87 l_0_6_87)))
 (let ((?x5699 (* l_0_6_86 l_0_6_86)))
 (let ((?x6256 (* l_0_6_75 l_0_6_75)))
 (let ((?x6254 (* l_0_6_74 l_0_6_74)))
 (let ((?x6252 (* l_0_6_73 l_0_6_73)))
 (let ((?x6250 (* l_0_6_72 l_0_6_72)))
 (let ((?x6248 (* l_0_6_71 l_0_6_71)))
 (let ((?x6246 (* l_0_6_60 l_0_6_60)))
 (let ((?x6244 (* l_0_6_59 l_0_6_59)))
 (let ((?x6242 (* l_0_6_58 l_0_6_58)))
 (let ((?x6240 (* l_0_6_57 l_0_6_57)))
 (let ((?x6238 (* l_0_6_56 l_0_6_56)))
 (let ((?x4336 (* 2.0 l_0_6_33)))
 (let ((?x6649 (* ?x4336 l_0_6_42)))
 (let ((?x4333 (* 2.0 l_0_6_32)))
 (let ((?x6647 (* ?x4333 l_0_6_41)))
 (let ((?x4330 (* 2.0 l_0_6_18)))
 (let ((?x6644 (* ?x4330 l_0_6_27)))
 (let ((?x4327 (* 2.0 l_0_6_17)))
 (let ((?x6642 (* ?x4327 l_0_6_26)))
 (let ((?x6772 (+ (+ (+ (+ (- (- (+ ?x6642 ?x6644) ?x6647) ?x6649) ?x6238) ?x6240) ?x6242) ?x6244)))
 (let ((?x6779 (+ (- (- (- (- (- (+ ?x6772 ?x6246) ?x6248) ?x6250) ?x6252) ?x6254) ?x6256) ?x5699)))
 (= (+ (+ (+ (+ ?x6779 ?x5701) ?x5703) ?x5705) ?x5707) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x6528 (* l_0_6_45 l_0_6_45)))
 (let ((?x6525 (* l_0_6_44 l_0_6_44)))
 (let ((?x6522 (* l_0_6_43 l_0_6_43)))
 (let ((?x6519 (* l_0_6_42 l_0_6_42)))
 (let ((?x6516 (* l_0_6_41 l_0_6_41)))
 (let ((?x1253 (* l_0_6_30 l_0_6_30)))
 (let ((?x1248 (* l_0_6_29 l_0_6_29)))
 (let ((?x1234 (* l_0_6_28 l_0_6_28)))
 (let ((?x1814 (+ (+ (+ (* l_0_6_26 l_0_6_26) (* l_0_6_27 l_0_6_27)) ?x1234) ?x1248)))
 (= (- (- (- (- (- (+ ?x1814 ?x1253) ?x6516) ?x6519) ?x6522) ?x6525) ?x6528) 0.0)))))))))))
(assert
 (let ((?x4889 (* l_0_6_78 l_0_6_78)))
 (let ((?x4884 (* l_0_6_77 l_0_6_77)))
 (let ((?x6031 (* l_0_6_63 l_0_6_63)))
 (let ((?x6029 (* l_0_6_62 l_0_6_62)))
 (let ((?x6809 (- (- (+ (* l_0_6_47 l_0_6_47) (* l_0_6_48 l_0_6_48)) ?x6029) ?x6031)))
 (= (+ (+ ?x6809 ?x4884) ?x4889) 0.0)))))))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_15 0.0))
(assert
 (>= l_0_6_16 0.0))
(assert
 (>= l_0_6_18 0.0))
(assert
 (>= l_0_6_21 0.0))
(assert
 (>= l_0_6_25 0.0))
(assert
 (>= l_0_6_30 0.0))
(assert
 (>= l_0_6_31 0.0))
(assert
 (>= l_0_6_33 0.0))
(assert
 (>= l_0_6_36 0.0))
(assert
 (>= l_0_6_40 0.0))
(assert
 (>= l_0_6_45 0.0))
(assert
 (>= l_0_6_46 0.0))
(assert
 (>= l_0_6_48 0.0))
(assert
 (>= l_0_6_51 0.0))
(assert
 (>= l_0_6_55 0.0))
(assert
 (>= l_0_6_60 0.0))
(assert
 (>= l_0_6_61 0.0))
(assert
 (>= l_0_6_63 0.0))
(assert
 (>= l_0_6_66 0.0))
(assert
 (>= l_0_6_70 0.0))
(assert
 (>= l_0_6_75 0.0))
(assert
 (>= l_0_6_76 0.0))
(assert
 (>= l_0_6_78 0.0))
(assert
 (>= l_0_6_81 0.0))
(assert
 (>= l_0_6_85 0.0))
(assert
 (>= l_0_6_90 0.0))
(assert
 (>= l_0_6_91 0.0))
(assert
 (>= l_0_6_93 0.0))
(assert
 (>= l_0_6_96 0.0))
(assert
 (>= l_0_6_100 0.0))
(assert
 (>= l_0_6_105 0.0))
(assert
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6870 (* ?x6869 l_0_7_64)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6865 (* ?x6864 l_0_7_49)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6859 (* ?x6858 l_0_7_34)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6854 (* ?x6853 l_0_7_19)))
 (let ((?x6857 (- (- (* (* (- 2.0) l_0_7_106) l_0_7_109) ?x6854) (* ?x6853 l_0_7_16))))
 (let ((?x6868 (- (- (+ (+ ?x6857 ?x6859) (* 2.0 (* l_0_7_31 l_0_7_31))) ?x6865) (* ?x6864 l_0_7_46))))
 (let ((?x6877 (- (+ (+ ?x6868 ?x6870) (* 2.0 (* l_0_7_61 l_0_7_61))) (* (* 2.0 l_0_7_91) l_0_7_94))))
 (= (+ ?x6877 2.0) 0.0)))))))))))))
(assert
 (let ((?x6912 (* l_0_7_91 l_0_7_91)))
 (let ((?x6904 (- (- (- _a_0_) (* l_0_7_106 l_0_7_106)) (* (* 1.0 l_0_7_16) l_0_7_16))))
 (let ((?x6909 (- (+ ?x6904 (* 1.0 (* l_0_7_31 l_0_7_31))) (* (* 1.0 l_0_7_46) l_0_7_46))))
 (= (+ (- (+ ?x6909 (* 1.0 (* l_0_7_61 l_0_7_61))) ?x6912) 3.0) 0.0)))))
(assert
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6947 (* ?x6869 l_0_7_71)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6945 (* ?x6864 l_0_7_56)))
 (let ((?x6861 (* l_0_7_31 l_0_7_31)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6942 (* ?x6858 l_0_7_41)))
 (let ((?x1902 (* l_0_7_16 l_0_7_16)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6939 (* ?x6853 l_0_7_26)))
 (let ((?x6938 (- (- (- _a_1_) (* (* 2.0 l_0_7_101) l_0_7_91)) (* (* 2.0 l_0_7_106) l_0_7_116))))
 (= (+ (- (- (+ (+ (- ?x6938 ?x6939) ?x1902) ?x6942) ?x6861) ?x6945) ?x6947) 0.0)))))))))))))
(assert
 (let ((?x6984 (* l_0_7_76 l_0_7_76)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6982 (* ?x6869 l_0_7_67)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6980 (* ?x6864 l_0_7_52)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6978 (* ?x6858 l_0_7_37)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6976 (* ?x6853 l_0_7_22)))
 (let ((?x6977 (- (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_106) l_0_7_112)) ?x6976)))
 (let ((?x6987 (- (- (+ (- (+ ?x6977 ?x6978) ?x6980) ?x6982) ?x6984) (* (* 2.0 l_0_7_91) l_0_7_97))))
 (= ?x6987 0.0)))))))))))))
(assert
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7050 (* ?x7047 l_0_7_82)))
 (let ((?x7048 (* ?x7047 l_0_7_77)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x7045 (* ?x7044 l_0_7_68)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x7042 (* ?x7041 l_0_7_67)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6982 (* ?x6869 l_0_7_67)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x7038 (* ?x7037 l_0_7_53)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x7035 (* ?x7034 l_0_7_52)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6980 (* ?x6864 l_0_7_52)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x7031 (* ?x7030 l_0_7_38)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x7028 (* ?x7027 l_0_7_37)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x7025 (* ?x7024 l_0_7_23)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x7022 (* ?x7021 l_0_7_22)))
 (let ((?x7017 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_107) l_0_7_112))))
 (let ((?x7029 (+ (- (- (- ?x7017 (* (* 2.0 l_0_7_108) l_0_7_113)) ?x7022) ?x7025) ?x7028)))
 (let ((?x7046 (+ (+ (- (- (- (+ (+ ?x7029 ?x7031) ?x6980) ?x7035) ?x7038) ?x6982) ?x7042) ?x7045)))
 (let ((?x7057 (- (- (+ (- ?x7046 ?x7048) ?x7050) (* (* 2.0 l_0_7_92) l_0_7_97)) (* (* 2.0 l_0_7_93) l_0_7_98))))
 (= ?x7057 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7141 (* ?x7047 l_0_7_79)))
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x7139 (* ?x7138 l_0_7_69)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x7136 (* ?x7135 l_0_7_68)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x7133 (* ?x7132 l_0_7_67)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x7127 (* ?x7126 l_0_7_54)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x7124 (* ?x7123 l_0_7_53)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x7121 (* ?x7120 l_0_7_52)))
 (let ((?x7114 (* 2.0 l_0_7_36)))
 (let ((?x7115 (* ?x7114 l_0_7_39)))
 (let ((?x7111 (* 2.0 l_0_7_35)))
 (let ((?x7112 (* ?x7111 l_0_7_38)))
 (let ((?x7108 (* 2.0 l_0_7_34)))
 (let ((?x7109 (* ?x7108 l_0_7_37)))
 (let ((?x7102 (* 2.0 l_0_7_21)))
 (let ((?x7103 (* ?x7102 l_0_7_24)))
 (let ((?x7099 (* 2.0 l_0_7_20)))
 (let ((?x7100 (* ?x7099 l_0_7_23)))
 (let ((?x7096 (* 2.0 l_0_7_19)))
 (let ((?x7097 (* ?x7096 l_0_7_22)))
 (let ((?x7086 (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_109) l_0_7_112))))
 (let ((?x7092 (- (- ?x7086 (* (* 2.0 l_0_7_110) l_0_7_113)) (* (* 2.0 l_0_7_111) l_0_7_114))))
 (let ((?x7104 (- (- (- (- ?x7092 (* (* 4.0 l_0_7_16) l_0_7_22)) ?x7097) ?x7100) ?x7103)))
 (let ((?x7116 (+ (+ (+ (+ ?x7104 (* (* 4.0 l_0_7_31) l_0_7_37)) ?x7109) ?x7112) ?x7115)))
 (let ((?x7128 (- (- (- (- ?x7116 (* (* 4.0 l_0_7_46) l_0_7_52)) ?x7121) ?x7124) ?x7127)))
 (let ((?x7140 (+ (+ (+ (+ ?x7128 (* (* 4.0 l_0_7_61) l_0_7_67)) ?x7133) ?x7136) ?x7139)))
 (let ((?x7148 (- (- (- ?x7140 ?x7141) (* (* 2.0 l_0_7_94) l_0_7_97)) (* (* 2.0 l_0_7_95) l_0_7_98))))
 (= (- ?x7148 (* (* 2.0 l_0_7_96) l_0_7_99)) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7285 (* l_0_7_99 l_0_7_99)))
 (let ((?x7283 (* l_0_7_98 l_0_7_98)))
 (let ((?x7281 (* l_0_7_97 l_0_7_97)))
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7050 (* ?x7047 l_0_7_82)))
 (let ((?x7230 (* l_0_7_115 l_0_7_115)))
 (let ((?x7228 (* l_0_7_114 l_0_7_114)))
 (let ((?x7226 (* l_0_7_113 l_0_7_113)))
 (let ((?x7224 (* l_0_7_112 l_0_7_112)))
 (let ((?x7225 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_7) (* l_0_7_100 l_0_7_100)) ?x7224)))
 (let ((?x7234 (- (- (- (- ?x7225 ?x7226) ?x7228) ?x7230) (* (* 1.0 l_0_7_22) l_0_7_22))))
 (let ((?x7240 (- (- ?x7234 (* (* 1.0 l_0_7_23) l_0_7_23)) (* (* 1.0 l_0_7_24) l_0_7_24))))
 (let ((?x7246 (+ (- ?x7240 (* (* 1.0 l_0_7_25) l_0_7_25)) (* 1.0 (* l_0_7_37 l_0_7_37)))))
 (let ((?x7252 (+ (+ ?x7246 (* 1.0 (* l_0_7_38 l_0_7_38))) (* 1.0 (* l_0_7_39 l_0_7_39)))))
 (let ((?x7258 (- (+ ?x7252 (* 1.0 (* l_0_7_40 l_0_7_40))) (* (* 1.0 l_0_7_52) l_0_7_52))))
 (let ((?x7264 (- (- ?x7258 (* (* 1.0 l_0_7_53) l_0_7_53)) (* (* 1.0 l_0_7_54) l_0_7_54))))
 (let ((?x7270 (+ (- ?x7264 (* (* 1.0 l_0_7_55) l_0_7_55)) (* 1.0 (* l_0_7_67 l_0_7_67)))))
 (let ((?x7276 (+ (+ ?x7270 (* 1.0 (* l_0_7_68 l_0_7_68))) (* 1.0 (* l_0_7_69 l_0_7_69)))))
 (let ((?x7284 (- (- (- (+ ?x7276 (* 1.0 (* l_0_7_70 l_0_7_70))) ?x7050) ?x7281) ?x7283)))
 (= (- ?x7284 ?x7285) 0.0)))))))))))))))))))))
(assert
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7399 (* ?x7047 l_0_7_86)))
 (let ((?x7397 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7394 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7391 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7388 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x7384 (* 2.0 l_0_7_55)))
 (let ((?x7385 (* ?x7384 l_0_7_59)))
 (let ((?x7381 (* 2.0 l_0_7_54)))
 (let ((?x7382 (* ?x7381 l_0_7_58)))
 (let ((?x7378 (* 2.0 l_0_7_53)))
 (let ((?x7379 (* ?x7378 l_0_7_57)))
 (let ((?x7375 (* 2.0 l_0_7_52)))
 (let ((?x7376 (* ?x7375 l_0_7_56)))
 (let ((?x7373 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x7370 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x7367 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x7364 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6978 (* ?x6858 l_0_7_37)))
 (let ((?x7359 (* 2.0 l_0_7_25)))
 (let ((?x7360 (* ?x7359 l_0_7_29)))
 (let ((?x7356 (* 2.0 l_0_7_24)))
 (let ((?x7357 (* ?x7356 l_0_7_28)))
 (let ((?x7353 (* 2.0 l_0_7_23)))
 (let ((?x7354 (* ?x7353 l_0_7_27)))
 (let ((?x7351 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6976 (* ?x6853 l_0_7_22)))
 (let ((?x7328 (- (* (* (- 2.0) l_0_7_1) l_0_7_11) (* (* 2.0 l_0_7_100) l_0_7_104))))
 (let ((?x7333 (- (- ?x7328 (* (* 2.0 l_0_7_101) l_0_7_97)) (* (* 2.0 l_0_7_102) l_0_7_98))))
 (let ((?x7339 (- (- ?x7333 (* (* 2.0 l_0_7_103) l_0_7_99)) (* (* 2.0 l_0_7_112) l_0_7_116))))
 (let ((?x7345 (- (- ?x7339 (* (* 2.0 l_0_7_113) l_0_7_117)) (* (* 2.0 l_0_7_114) l_0_7_118))))
 (let ((?x7355 (- (- (+ (- ?x7345 (* (* 2.0 l_0_7_115) l_0_7_119)) ?x6976) ?x7351) ?x7354)))
 (let ((?x7374 (+ (+ (+ (+ (- (- (- ?x7355 ?x7357) ?x7360) ?x6978) ?x7364) ?x7367) ?x7370) ?x7373)))
 (let ((?x7395 (+ (+ (+ (- (- (- (- ?x7374 ?x7376) ?x7379) ?x7382) ?x7385) ?x7388) ?x7391) ?x7394)))
 (= (- (+ ?x7395 ?x7397) ?x7399) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7476 (* l_0_7_78 l_0_7_78)))
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x7474 (* ?x7473 l_0_7_83)))
 (let ((?x7471 (* l_0_7_77 l_0_7_77)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x7469 (* ?x7468 l_0_7_82)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x7045 (* ?x7044 l_0_7_68)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x7042 (* ?x7041 l_0_7_67)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x7038 (* ?x7037 l_0_7_53)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x7035 (* ?x7034 l_0_7_52)))
 (let ((?x7465 (+ (+ (- (* (- l_0_7_2) l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x7035) ?x7038)))
 (= (- (+ (- (+ (- (- ?x7465 ?x7042) ?x7045) ?x7469) ?x7471) ?x7474) ?x7476) 0.0)))))))))))))))))
(assert
 (let ((?x7528 (* 2.0 l_0_7_81)))
 (let ((?x7529 (* ?x7528 l_0_7_84)))
 (let ((?x7525 (* 2.0 l_0_7_80)))
 (let ((?x7526 (* ?x7525 l_0_7_83)))
 (let ((?x7522 (* 2.0 l_0_7_79)))
 (let ((?x7523 (* ?x7522 l_0_7_82)))
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x7520 (* ?x7473 l_0_7_80)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x7518 (* ?x7468 l_0_7_79)))
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x7139 (* ?x7138 l_0_7_69)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x7136 (* ?x7135 l_0_7_68)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x7133 (* ?x7132 l_0_7_67)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x7127 (* ?x7126 l_0_7_54)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x7124 (* ?x7123 l_0_7_53)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x7121 (* ?x7120 l_0_7_52)))
 (let ((?x7491 (* 2.0 l_0_7_3)))
 (let ((?x7492 (* ?x7491 l_0_7_5)))
 (let ((?x7488 (* 2.0 l_0_7_2)))
 (let ((?x7489 (* ?x7488 l_0_7_4)))
 (let ((?x7487 (- (* (* (- 4.0) l_0_7_17) l_0_7_22) (* (* 4.0 l_0_7_18) l_0_7_23))))
 (let ((?x7499 (+ (+ (- (- ?x7487 ?x7489) ?x7492) (* (* 4.0 l_0_7_32) l_0_7_37)) (* (* 4.0 l_0_7_33) l_0_7_38))))
 (let ((?x7505 (- (- ?x7499 (* (* 4.0 l_0_7_47) l_0_7_52)) (* (* 4.0 l_0_7_48) l_0_7_53))))
 (let ((?x7511 (+ (+ (+ (+ ?x7505 ?x7121) ?x7124) ?x7127) (* (* 4.0 l_0_7_62) l_0_7_67))))
 (let ((?x7517 (- (- (- (+ ?x7511 (* (* 4.0 l_0_7_63) l_0_7_68)) ?x7133) ?x7136) ?x7139)))
 (= (+ (+ (+ (- (- ?x7517 ?x7518) ?x7520) ?x7523) ?x7526) ?x7529) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x7569 (* l_0_7_85 l_0_7_85)))
 (let ((?x7567 (* l_0_7_84 l_0_7_84)))
 (let ((?x7565 (* l_0_7_83 l_0_7_83)))
 (let ((?x7563 (* l_0_7_82 l_0_7_82)))
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x7474 (* ?x7473 l_0_7_83)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x7469 (* ?x7468 l_0_7_82)))
 (let ((?x7277 (* l_0_7_70 l_0_7_70)))
 (let ((?x7274 (* l_0_7_69 l_0_7_69)))
 (let ((?x7271 (* l_0_7_68 l_0_7_68)))
 (let ((?x7268 (* l_0_7_67 l_0_7_67)))
 (let ((?x7309 (* l_0_7_55 l_0_7_55)))
 (let ((?x2361 (* l_0_7_54 l_0_7_54)))
 (let ((?x7305 (* l_0_7_53 l_0_7_53)))
 (let ((?x2357 (* l_0_7_52 l_0_7_52)))
 (let ((?x7491 (* 2.0 l_0_7_3)))
 (let ((?x2752 (* ?x7491 l_0_7_8)))
 (let ((?x7555 (+ (+ (+ (- (* (* (- 2.0) l_0_7_2) l_0_7_7) ?x2752) ?x2357) ?x7305) ?x2361)))
 (let ((?x7562 (- (- (- (- (- (- (+ ?x7555 ?x7309) ?x7268) ?x7271) ?x7274) ?x7277) ?x7469) ?x7474)))
 (= (+ (+ (+ (+ ?x7562 ?x7563) ?x7565) ?x7567) ?x7569) 0.0))))))))))))))))))))))
(assert
 (let ((?x7589 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7586 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7583 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7580 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x2790 (* ?x7473 l_0_7_87)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x2795 (* ?x7468 l_0_7_86)))
 (let ((?x7397 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7394 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7391 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7388 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x7384 (* 2.0 l_0_7_55)))
 (let ((?x7385 (* ?x7384 l_0_7_59)))
 (let ((?x7381 (* 2.0 l_0_7_54)))
 (let ((?x7382 (* ?x7381 l_0_7_58)))
 (let ((?x7378 (* 2.0 l_0_7_53)))
 (let ((?x7379 (* ?x7378 l_0_7_57)))
 (let ((?x7375 (* 2.0 l_0_7_52)))
 (let ((?x7376 (* ?x7375 l_0_7_56)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x7031 (* ?x7030 l_0_7_38)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x7028 (* ?x7027 l_0_7_37)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x7025 (* ?x7024 l_0_7_23)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x7022 (* ?x7021 l_0_7_22)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x2847 (* ?x2864 l_0_7_3)))
 (let ((?x2770 (- (+ (+ (- (* (* (- 2.0) l_0_7_11) l_0_7_2) ?x2847) ?x7022) ?x7025) ?x7028)))
 (let ((?x2768 (- (- (+ (+ (+ (+ (- ?x2770 ?x7031) ?x7376) ?x7379) ?x7382) ?x7385) ?x7388) ?x7391)))
 (let ((?x7587 (+ (+ (+ (- (- (- (- ?x2768 ?x7394) ?x7397) ?x2795) ?x2790) ?x7580) ?x7583) ?x7586)))
 (= (+ ?x7587 ?x7589) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7660 (* l_0_7_81 l_0_7_81)))
 (let ((?x7658 (* l_0_7_80 l_0_7_80)))
 (let ((?x7656 (* l_0_7_79 l_0_7_79)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6982 (* ?x6869 l_0_7_67)))
 (let ((?x7644 (* l_0_7_6 l_0_7_6)))
 (let ((?x7636 (* l_0_7_5 l_0_7_5)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6980 (* ?x6864 l_0_7_52)))
 (let ((?x7630 (* l_0_7_4 l_0_7_4)))
 (let ((?x7614 (- (* (* 2.0 l_0_7_1) l_0_7_7) (* (* 4.0 l_0_7_19) l_0_7_22))))
 (let ((?x7620 (- (- ?x7614 (* (* 4.0 l_0_7_20) l_0_7_23)) (* (* 4.0 l_0_7_21) l_0_7_24))))
 (let ((?x7626 (+ (+ ?x7620 (* (* 4.0 l_0_7_34) l_0_7_37)) (* (* 4.0 l_0_7_35) l_0_7_38))))
 (let ((?x7635 (- (- (- (+ ?x7626 (* (* 4.0 l_0_7_36) l_0_7_39)) ?x7630) ?x6980) (* (* 4.0 l_0_7_49) l_0_7_52))))
 (let ((?x7643 (- (- (- ?x7635 ?x7636) (* (* 4.0 l_0_7_50) l_0_7_53)) (* (* 4.0 l_0_7_51) l_0_7_54))))
 (let ((?x7652 (+ (+ (+ (- ?x7643 ?x7644) ?x6982) (* (* 4.0 l_0_7_64) l_0_7_67)) (* (* 4.0 l_0_7_65) l_0_7_68))))
 (let ((?x7661 (- (- (- (+ ?x7652 (* (* 4.0 l_0_7_66) l_0_7_69)) ?x7656) ?x7658) ?x7660)))
 (= ?x7661 0.0)))))))))))))))))))
(assert
 (let ((?x7528 (* 2.0 l_0_7_81)))
 (let ((?x7529 (* ?x7528 l_0_7_84)))
 (let ((?x7525 (* 2.0 l_0_7_80)))
 (let ((?x7526 (* ?x7525 l_0_7_83)))
 (let ((?x7522 (* 2.0 l_0_7_79)))
 (let ((?x7523 (* ?x7522 l_0_7_82)))
 (let ((?x7739 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7728 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7723 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x7711 (- (* (* (- 2.0) l_0_7_22) l_0_7_22) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x7715 (- (- ?x7711 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (let ((?x7719 (+ (+ ?x7715 (* 2.0 (* l_0_7_37 l_0_7_37))) (* 2.0 (* l_0_7_38 l_0_7_38)))))
 (let ((?x7726 (+ (- (+ ?x7719 (* 2.0 (* l_0_7_39 l_0_7_39))) ?x7723) (* 2.0 (* l_0_7_40 l_0_7_40)))))
 (let ((?x7733 (- (- (- ?x7726 ?x7728) (* (* 2.0 l_0_7_52) l_0_7_52)) (* (* 2.0 l_0_7_53) l_0_7_53))))
 (let ((?x7737 (- (- ?x7733 (* (* 2.0 l_0_7_54) l_0_7_54)) (* (* 2.0 l_0_7_55) l_0_7_55))))
 (let ((?x7744 (+ (+ (- ?x7737 ?x7739) (* 2.0 (* l_0_7_67 l_0_7_67))) (* 2.0 (* l_0_7_68 l_0_7_68)))))
 (let ((?x7748 (+ (+ ?x7744 (* 2.0 (* l_0_7_69 l_0_7_69))) (* 2.0 (* l_0_7_70 l_0_7_70)))))
 (= (- (- (- ?x7748 ?x7523) ?x7526) ?x7529) 0.0)))))))))))))))))))
(assert
 (let ((?x7528 (* 2.0 l_0_7_81)))
 (let ((?x7833 (* ?x7528 l_0_7_88)))
 (let ((?x7525 (* 2.0 l_0_7_80)))
 (let ((?x7831 (* ?x7525 l_0_7_87)))
 (let ((?x7522 (* 2.0 l_0_7_79)))
 (let ((?x7829 (* ?x7522 l_0_7_86)))
 (let ((?x7114 (* 2.0 l_0_7_36)))
 (let ((?x7115 (* ?x7114 l_0_7_39)))
 (let ((?x7111 (* 2.0 l_0_7_35)))
 (let ((?x7112 (* ?x7111 l_0_7_38)))
 (let ((?x7108 (* 2.0 l_0_7_34)))
 (let ((?x7109 (* ?x7108 l_0_7_37)))
 (let ((?x7102 (* 2.0 l_0_7_21)))
 (let ((?x7103 (* ?x7102 l_0_7_24)))
 (let ((?x7099 (* 2.0 l_0_7_20)))
 (let ((?x7100 (* ?x7099 l_0_7_23)))
 (let ((?x7096 (* 2.0 l_0_7_19)))
 (let ((?x7097 (* ?x7096 l_0_7_22)))
 (let ((?x7772 (* 2.0 l_0_7_13)))
 (let ((?x7773 (* ?x7772 l_0_7_6)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x7770 (* ?x2864 l_0_7_5)))
 (let ((?x7776 (+ (+ (- (- (* (* (- 2.0) l_0_7_11) l_0_7_4) ?x7770) ?x7773) ?x7097) ?x7100)))
 (let ((?x7783 (- (- (+ ?x7776 ?x7103) (* (* 4.0 l_0_7_22) l_0_7_26)) (* (* 4.0 l_0_7_23) l_0_7_27))))
 (let ((?x7789 (- (- ?x7783 (* (* 4.0 l_0_7_24) l_0_7_28)) (* (* 4.0 l_0_7_25) l_0_7_29))))
 (let ((?x7795 (+ (- (- (- ?x7789 ?x7109) ?x7112) ?x7115) (* (* 4.0 l_0_7_37) l_0_7_41))))
 (let ((?x7801 (+ (+ ?x7795 (* (* 4.0 l_0_7_38) l_0_7_42)) (* (* 4.0 l_0_7_39) l_0_7_43))))
 (let ((?x7807 (- (+ ?x7801 (* (* 4.0 l_0_7_40) l_0_7_44)) (* (* 4.0 l_0_7_52) l_0_7_56))))
 (let ((?x7813 (- (- ?x7807 (* (* 4.0 l_0_7_53) l_0_7_57)) (* (* 4.0 l_0_7_54) l_0_7_58))))
 (let ((?x7819 (+ (- ?x7813 (* (* 4.0 l_0_7_55) l_0_7_59)) (* (* 4.0 l_0_7_67) l_0_7_71))))
 (let ((?x7825 (+ (+ ?x7819 (* (* 4.0 l_0_7_68) l_0_7_72)) (* (* 4.0 l_0_7_69) l_0_7_73))))
 (let ((?x7834 (- (- (- (+ ?x7825 (* (* 4.0 l_0_7_70) l_0_7_74)) ?x7829) ?x7831) ?x7833)))
 (= ?x7834 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7874 (* l_0_7_9 l_0_7_9)))
 (let ((?x7569 (* l_0_7_85 l_0_7_85)))
 (let ((?x7567 (* l_0_7_84 l_0_7_84)))
 (let ((?x7565 (* l_0_7_83 l_0_7_83)))
 (let ((?x7563 (* l_0_7_82 l_0_7_82)))
 (let ((?x7868 (* l_0_7_8 l_0_7_8)))
 (let ((?x7870 (- (- (- (* (- l_0_7_10) l_0_7_10) (* l_0_7_7 l_0_7_7)) ?x7868) ?x7563)))
 (= (- (- (- (- ?x7870 ?x7565) ?x7567) ?x7569) ?x7874) 0.0)))))))))
(assert
 (let ((?x7589 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x7586 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x7583 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x7580 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x7253 (* l_0_7_40 l_0_7_40)))
 (let ((?x7250 (* l_0_7_39 l_0_7_39)))
 (let ((?x7247 (* l_0_7_38 l_0_7_38)))
 (let ((?x7244 (* l_0_7_37 l_0_7_37)))
 (let ((?x2352 (* l_0_7_25 l_0_7_25)))
 (let ((?x2343 (* l_0_7_24 l_0_7_24)))
 (let ((?x7301 (* l_0_7_23 l_0_7_23)))
 (let ((?x2342 (* l_0_7_22 l_0_7_22)))
 (let ((?x7772 (* 2.0 l_0_7_13)))
 (let ((?x7892 (* ?x7772 l_0_7_9)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x7890 (* ?x2864 l_0_7_8)))
 (let ((?x7887 (* 2.0 l_0_7_11)))
 (let ((?x7888 (* ?x7887 l_0_7_7)))
 (let ((?x7894 (+ (- (- (- (* (* (- 2.0) l_0_7_10) l_0_7_14) ?x7888) ?x7890) ?x7892) ?x2342)))
 (let ((?x7901 (- (- (- (- (+ (+ (+ ?x7894 ?x7301) ?x2343) ?x2352) ?x7244) ?x7247) ?x7250) ?x7253)))
 (= (- (- (- (- ?x7901 ?x7580) ?x7583) ?x7586) ?x7589) 0.0))))))))))))))))))))))
(assert
 (let ((?x7931 (* l_0_7_90 l_0_7_90)))
 (let ((?x7929 (* l_0_7_89 l_0_7_89)))
 (let ((?x7927 (* l_0_7_88 l_0_7_88)))
 (let ((?x3440 (* l_0_7_87 l_0_7_87)))
 (let ((?x3443 (* l_0_7_86 l_0_7_86)))
 (let ((?x7373 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x7370 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x7367 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x7364 (* (* 2.0 l_0_7_37) l_0_7_41)))
 (let ((?x7359 (* 2.0 l_0_7_25)))
 (let ((?x7360 (* ?x7359 l_0_7_29)))
 (let ((?x7356 (* 2.0 l_0_7_24)))
 (let ((?x7357 (* ?x7356 l_0_7_28)))
 (let ((?x7353 (* 2.0 l_0_7_23)))
 (let ((?x7354 (* ?x7353 l_0_7_27)))
 (let ((?x7351 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x3426 (* l_0_7_15 l_0_7_15)))
 (let ((?x3402 (* l_0_7_14 l_0_7_14)))
 (let ((?x3146 (* l_0_7_13 l_0_7_13)))
 (let ((?x3422 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x3146) ?x3402)))
 (let ((?x3391 (- (- (+ (+ (+ (+ (- ?x3422 ?x3426) ?x7351) ?x7354) ?x7357) ?x7360) ?x7364) ?x7367)))
 (let ((?x7932 (- (- (- (- (- (- (- ?x3391 ?x7370) ?x7373) ?x3443) ?x3440) ?x7927) ?x7929) ?x7931)))
 (= ?x7932 0.0))))))))))))))))))))))))
(assert
 (let ((?x7990 (* l_0_7_96 l_0_7_96)))
 (let ((?x7988 (* l_0_7_95 l_0_7_95)))
 (let ((?x7986 (* l_0_7_94 l_0_7_94)))
 (let ((?x6872 (* l_0_7_61 l_0_7_61)))
 (let ((?x1912 (* l_0_7_46 l_0_7_46)))
 (let ((?x3577 (* l_0_7_111 l_0_7_111)))
 (let ((?x3596 (* l_0_7_110 l_0_7_110)))
 (let ((?x3567 (- (- (- (* l_0_7_1 l_0_7_1) (* l_0_7_109 l_0_7_109)) ?x3596) ?x3577)))
 (let ((?x3549 (- (- ?x3567 (* (* 4.0 l_0_7_16) l_0_7_19)) (* (* 1.0 l_0_7_19) l_0_7_19))))
 (let ((?x7950 (- (- ?x3549 (* (* 1.0 l_0_7_20) l_0_7_20)) (* (* 1.0 l_0_7_21) l_0_7_21))))
 (let ((?x7955 (+ (+ ?x7950 (* (* 4.0 l_0_7_31) l_0_7_34)) (* 1.0 (* l_0_7_34 l_0_7_34)))))
 (let ((?x7961 (+ (+ ?x7955 (* 1.0 (* l_0_7_35 l_0_7_35))) (* 1.0 (* l_0_7_36 l_0_7_36)))))
 (let ((?x7967 (- (- (- ?x7961 (* (* 4.0 l_0_7_46) l_0_7_49)) ?x1912) (* (* 1.0 l_0_7_49) l_0_7_49))))
 (let ((?x7973 (- (- ?x7967 (* (* 1.0 l_0_7_50) l_0_7_50)) (* (* 1.0 l_0_7_51) l_0_7_51))))
 (let ((?x7979 (+ (+ (+ ?x7973 (* (* 4.0 l_0_7_61) l_0_7_64)) ?x6872) (* 1.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x7985 (+ (+ ?x7979 (* 1.0 (* l_0_7_65 l_0_7_65))) (* 1.0 (* l_0_7_66 l_0_7_66)))))
 (= (- (- (- ?x7985 ?x7986) ?x7988) ?x7990) 0.0))))))))))))))))))
(assert
 (let ((?x7660 (* l_0_7_81 l_0_7_81)))
 (let ((?x7658 (* l_0_7_80 l_0_7_80)))
 (let ((?x7656 (* l_0_7_79 l_0_7_79)))
 (let ((?x7983 (* l_0_7_66 l_0_7_66)))
 (let ((?x7980 (* l_0_7_65 l_0_7_65)))
 (let ((?x7977 (* l_0_7_64 l_0_7_64)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x8040 (* ?x6869 l_0_7_62)))
 (let ((?x3699 (* l_0_7_51 l_0_7_51)))
 (let ((?x8010 (* l_0_7_50 l_0_7_50)))
 (let ((?x3696 (* l_0_7_49 l_0_7_49)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x8031 (* ?x6864 l_0_7_47)))
 (let ((?x8024 (- (* (* 2.0 l_0_7_1) l_0_7_2) (* (* 4.0 l_0_7_17) l_0_7_19))))
 (let ((?x8028 (+ (- ?x8024 (* (* 4.0 l_0_7_18) l_0_7_20)) (* (* 4.0 l_0_7_32) l_0_7_34))))
 (let ((?x8034 (- (- (+ ?x8028 (* (* 4.0 l_0_7_33) l_0_7_35)) ?x8031) (* (* 4.0 l_0_7_47) l_0_7_49))))
 (let ((?x8039 (+ (+ (+ (- ?x8034 (* (* 4.0 l_0_7_48) l_0_7_50)) ?x3696) ?x8010) ?x3699)))
 (let ((?x8045 (+ (+ (+ ?x8039 ?x8040) (* (* 4.0 l_0_7_62) l_0_7_64)) (* (* 4.0 l_0_7_63) l_0_7_65))))
 (= (+ (+ (+ (- (- (- ?x8045 ?x7977) ?x7980) ?x7983) ?x7656) ?x7658) ?x7660) 0.0))))))))))))))))))))
(assert
 (let ((?x7983 (* l_0_7_66 l_0_7_66)))
 (let ((?x8087 (* 2.0 ?x7983)))
 (let ((?x7980 (* l_0_7_65 l_0_7_65)))
 (let ((?x8085 (* 2.0 ?x7980)))
 (let ((?x7977 (* l_0_7_64 l_0_7_64)))
 (let ((?x8083 (* 2.0 ?x7977)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6870 (* ?x6869 l_0_7_64)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6865 (* ?x6864 l_0_7_49)))
 (let ((?x7959 (* l_0_7_36 l_0_7_36)))
 (let ((?x8073 (* 2.0 ?x7959)))
 (let ((?x7956 (* l_0_7_35 l_0_7_35)))
 (let ((?x8071 (* 2.0 ?x7956)))
 (let ((?x7953 (* l_0_7_34 l_0_7_34)))
 (let ((?x8069 (* 2.0 ?x7953)))
 (let ((?x8064 (- (* (* 2.0 l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x8068 (- (- ?x8064 (* (* 2.0 l_0_7_20) l_0_7_20)) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (let ((?x8077 (- (- (+ (+ (+ ?x8068 ?x8069) ?x8071) ?x8073) ?x6865) (* (* 2.0 l_0_7_49) l_0_7_49))))
 (let ((?x8081 (- (- ?x8077 (* (* 2.0 l_0_7_50) l_0_7_50)) (* (* 2.0 l_0_7_51) l_0_7_51))))
 (= (+ (+ (+ (+ ?x8081 ?x6870) ?x8083) ?x8085) ?x8087) 0.0))))))))))))))))))))))
(assert
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6947 (* ?x6869 l_0_7_71)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6945 (* ?x6864 l_0_7_56)))
 (let ((?x7959 (* l_0_7_36 l_0_7_36)))
 (let ((?x7956 (* l_0_7_35 l_0_7_35)))
 (let ((?x7953 (* l_0_7_34 l_0_7_34)))
 (let ((?x3651 (* l_0_7_21 l_0_7_21)))
 (let ((?x3632 (* l_0_7_20 l_0_7_20)))
 (let ((?x8004 (* l_0_7_19 l_0_7_19)))
 (let ((?x8099 (- (* (* 2.0 l_0_7_1) l_0_7_11) (* (* 4.0 l_0_7_19) l_0_7_26))))
 (let ((?x8105 (- (+ (- (+ ?x8099 ?x8004) (* (* 4.0 l_0_7_20) l_0_7_27)) ?x3632) (* (* 4.0 l_0_7_21) l_0_7_28))))
 (let ((?x8111 (+ (- (+ (+ ?x8105 ?x3651) (* (* 4.0 l_0_7_34) l_0_7_41)) ?x7953) (* (* 4.0 l_0_7_35) l_0_7_42))))
 (let ((?x8116 (- (- (+ (- ?x8111 ?x7956) (* (* 4.0 l_0_7_36) l_0_7_43)) ?x7959) ?x6945)))
 (let ((?x8120 (- (- ?x8116 (* (* 4.0 l_0_7_49) l_0_7_56)) (* (* 4.0 l_0_7_50) l_0_7_57))))
 (let ((?x8125 (+ (+ (- ?x8120 (* (* 4.0 l_0_7_51) l_0_7_58)) ?x6947) (* (* 4.0 l_0_7_64) l_0_7_71))))
 (let ((?x8129 (+ (+ ?x8125 (* (* 4.0 l_0_7_65) l_0_7_72)) (* (* 4.0 l_0_7_66) l_0_7_73))))
 (= ?x8129 0.0)))))))))))))))))))
(assert
 (let ((?x8184 (* l_0_7_63 l_0_7_63)))
 (let ((?x8182 (* l_0_7_62 l_0_7_62)))
 (let ((?x8180 (* l_0_7_48 l_0_7_48)))
 (let ((?x8178 (* l_0_7_47 l_0_7_47)))
 (let ((?x8183 (+ (- (- (+ (* l_0_7_2 l_0_7_2) (* l_0_7_3 l_0_7_3)) ?x8178) ?x8180) ?x8182)))
 (= (+ ?x8183 ?x8184) 0.0)))))))
(assert
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8197 (* ?x7044 l_0_7_65)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8195 (* ?x7041 l_0_7_64)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8193 (* ?x7037 l_0_7_50)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8191 (* ?x7034 l_0_7_49)))
 (let ((?x7491 (* 2.0 l_0_7_3)))
 (let ((?x7492 (* ?x7491 l_0_7_5)))
 (let ((?x7488 (* 2.0 l_0_7_2)))
 (let ((?x7489 (* ?x7488 l_0_7_4)))
 (= (+ (+ (- (- (+ ?x7489 ?x7492) ?x8191) ?x8193) ?x8195) ?x8197) 0.0))))))))))))))
(assert
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x7045 (* ?x7044 l_0_7_68)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x7042 (* ?x7041 l_0_7_67)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x7038 (* ?x7037 l_0_7_53)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x7035 (* ?x7034 l_0_7_52)))
 (let ((?x7491 (* 2.0 l_0_7_3)))
 (let ((?x2752 (* ?x7491 l_0_7_8)))
 (let ((?x8213 (+ (- (- (+ (* (* 2.0 l_0_7_2) l_0_7_7) ?x2752) ?x7035) ?x7038) ?x7042)))
 (= (+ ?x8213 ?x7045) 0.0)))))))))))))
(assert
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8230 (* ?x7044 l_0_7_72)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8228 (* ?x7041 l_0_7_71)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8226 (* ?x7037 l_0_7_57)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8224 (* ?x7034 l_0_7_56)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x2847 (* ?x2864 l_0_7_3)))
 (let ((?x8229 (+ (- (- (+ (* (* 2.0 l_0_7_11) l_0_7_2) ?x2847) ?x8224) ?x8226) ?x8228)))
 (= (+ ?x8229 ?x8230) 0.0)))))))))))))
(assert
 (let ((?x7983 (* l_0_7_66 l_0_7_66)))
 (let ((?x7980 (* l_0_7_65 l_0_7_65)))
 (let ((?x7977 (* l_0_7_64 l_0_7_64)))
 (let ((?x7644 (* l_0_7_6 l_0_7_6)))
 (let ((?x3699 (* l_0_7_51 l_0_7_51)))
 (let ((?x8010 (* l_0_7_50 l_0_7_50)))
 (let ((?x7636 (* l_0_7_5 l_0_7_5)))
 (let ((?x8247 (- (+ (- (* l_0_7_4 l_0_7_4) (* l_0_7_49 l_0_7_49)) ?x7636) ?x8010)))
 (= (+ (+ (+ (+ (- ?x8247 ?x3699) ?x7644) ?x7977) ?x7980) ?x7983) 0.0))))))))))
(assert
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x7139 (* ?x7138 l_0_7_69)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x7136 (* ?x7135 l_0_7_68)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x7133 (* ?x7132 l_0_7_67)))
 (let ((?x7739 (* (* 2.0 l_0_7_6) l_0_7_9)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x7127 (* ?x7126 l_0_7_54)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x7124 (* ?x7123 l_0_7_53)))
 (let ((?x7728 (* (* 2.0 l_0_7_5) l_0_7_8)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x7121 (* ?x7120 l_0_7_52)))
 (let ((?x7723 (* (* 2.0 l_0_7_4) l_0_7_7)))
 (let ((?x8269 (+ (+ (+ (- (- (+ (- ?x7723 ?x7121) ?x7728) ?x7124) ?x7127) ?x7739) ?x7133) ?x7136)))
 (= (+ ?x8269 ?x7139) 0.0))))))))))))))))))
(assert
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x8284 (* ?x7138 l_0_7_73)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x8282 (* ?x7135 l_0_7_72)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x8280 (* ?x7132 l_0_7_71)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x8278 (* ?x7126 l_0_7_58)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x8276 (* ?x7123 l_0_7_57)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x8274 (* ?x7120 l_0_7_56)))
 (let ((?x7772 (* 2.0 l_0_7_13)))
 (let ((?x7773 (* ?x7772 l_0_7_6)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x7770 (* ?x2864 l_0_7_5)))
 (let ((?x8277 (- (- (+ (+ (* (* 2.0 l_0_7_11) l_0_7_4) ?x7770) ?x7773) ?x8274) ?x8276)))
 (= (+ (+ (+ (- ?x8277 ?x8278) ?x8280) ?x8282) ?x8284) 0.0)))))))))))))))))))
(assert
 (let ((?x7874 (* l_0_7_9 l_0_7_9)))
 (let ((?x7868 (* l_0_7_8 l_0_7_8)))
 (let ((?x7277 (* l_0_7_70 l_0_7_70)))
 (let ((?x3342 (* l_0_7_7 l_0_7_7)))
 (let ((?x7274 (* l_0_7_69 l_0_7_69)))
 (let ((?x7271 (* l_0_7_68 l_0_7_68)))
 (let ((?x7268 (* l_0_7_67 l_0_7_67)))
 (let ((?x7309 (* l_0_7_55 l_0_7_55)))
 (let ((?x2361 (* l_0_7_54 l_0_7_54)))
 (let ((?x7305 (* l_0_7_53 l_0_7_53)))
 (let ((?x8309 (- (- (- (* l_0_7_10 l_0_7_10) (* l_0_7_52 l_0_7_52)) ?x7305) ?x2361)))
 (let ((?x8316 (+ (+ (+ (+ (+ (+ (- ?x8309 ?x7309) ?x7268) ?x7271) ?x7274) ?x3342) ?x7277) ?x7868)))
 (= (+ ?x8316 ?x7874) 0.0))))))))))))))
(assert
 (let ((?x7397 (* (* 2.0 l_0_7_70) l_0_7_74)))
 (let ((?x7394 (* (* 2.0 l_0_7_69) l_0_7_73)))
 (let ((?x7391 (* (* 2.0 l_0_7_68) l_0_7_72)))
 (let ((?x7388 (* (* 2.0 l_0_7_67) l_0_7_71)))
 (let ((?x7384 (* 2.0 l_0_7_55)))
 (let ((?x7385 (* ?x7384 l_0_7_59)))
 (let ((?x7381 (* 2.0 l_0_7_54)))
 (let ((?x7382 (* ?x7381 l_0_7_58)))
 (let ((?x7378 (* 2.0 l_0_7_53)))
 (let ((?x7379 (* ?x7378 l_0_7_57)))
 (let ((?x7375 (* 2.0 l_0_7_52)))
 (let ((?x7376 (* ?x7375 l_0_7_56)))
 (let ((?x7772 (* 2.0 l_0_7_13)))
 (let ((?x7892 (* ?x7772 l_0_7_9)))
 (let ((?x2864 (* 2.0 l_0_7_12)))
 (let ((?x7890 (* ?x2864 l_0_7_8)))
 (let ((?x7887 (* 2.0 l_0_7_11)))
 (let ((?x7888 (* ?x7887 l_0_7_7)))
 (let ((?x8326 (- (+ (+ (+ (* (* 2.0 l_0_7_10) l_0_7_14) ?x7888) ?x7890) ?x7892) ?x7376)))
 (let ((?x8333 (+ (+ (+ (+ (- (- (- ?x8326 ?x7379) ?x7382) ?x7385) ?x7388) ?x7391) ?x7394) ?x7397)))
 (= ?x8333 0.0))))))))))))))))))))))
(assert
 (let ((?x8364 (* l_0_7_75 l_0_7_75)))
 (let ((?x8362 (* l_0_7_74 l_0_7_74)))
 (let ((?x8360 (* l_0_7_73 l_0_7_73)))
 (let ((?x8358 (* l_0_7_72 l_0_7_72)))
 (let ((?x8356 (* l_0_7_71 l_0_7_71)))
 (let ((?x8354 (* l_0_7_60 l_0_7_60)))
 (let ((?x8352 (* l_0_7_59 l_0_7_59)))
 (let ((?x8350 (* l_0_7_58 l_0_7_58)))
 (let ((?x8348 (* l_0_7_57 l_0_7_57)))
 (let ((?x8346 (* l_0_7_56 l_0_7_56)))
 (let ((?x3426 (* l_0_7_15 l_0_7_15)))
 (let ((?x3402 (* l_0_7_14 l_0_7_14)))
 (let ((?x3146 (* l_0_7_13 l_0_7_13)))
 (let ((?x8344 (+ (+ (+ (* l_0_7_11 l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x3146) ?x3402)))
 (let ((?x8357 (+ (- (- (- (- (- (+ ?x8344 ?x3426) ?x8346) ?x8348) ?x8350) ?x8352) ?x8354) ?x8356)))
 (= (+ (+ (+ (+ ?x8357 ?x8358) ?x8360) ?x8362) ?x8364) 0.0)))))))))))))))))
(assert
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7141 (* ?x7047 l_0_7_79)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8197 (* ?x7044 l_0_7_65)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8195 (* ?x7041 l_0_7_64)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6870 (* ?x6869 l_0_7_64)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8193 (* ?x7037 l_0_7_50)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8191 (* ?x7034 l_0_7_49)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6865 (* ?x6864 l_0_7_49)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x8378 (* ?x7030 l_0_7_35)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x8376 (* ?x7027 l_0_7_34)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x8372 (* ?x7024 l_0_7_20)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x8370 (* ?x7021 l_0_7_19)))
 (let ((?x4115 (- (* (* (- 2.0) l_0_7_107) l_0_7_109) (* (* 2.0 l_0_7_108) l_0_7_110))))
 (let ((?x8375 (+ (- (- (- ?x4115 (* (* 4.0 l_0_7_16) l_0_7_17)) ?x8370) ?x8372) (* (* 4.0 l_0_7_31) l_0_7_32))))
 (let ((?x8382 (+ (- (+ (+ ?x8375 ?x8376) ?x8378) (* (* 4.0 l_0_7_46) l_0_7_47)) ?x6865)))
 (let ((?x8387 (- (+ (- (- ?x8382 ?x8191) ?x8193) (* (* 4.0 l_0_7_61) l_0_7_62)) ?x6870)))
 (let ((?x8392 (- (+ (+ (+ ?x8387 ?x8195) ?x8197) ?x7141) (* (* 2.0 l_0_7_92) l_0_7_94))))
 (= (- ?x8392 (* (* 2.0 l_0_7_93) l_0_7_95)) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x8284 (* ?x7138 l_0_7_73)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x8282 (* ?x7135 l_0_7_72)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x8280 (* ?x7132 l_0_7_71)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x8278 (* ?x7126 l_0_7_58)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x8276 (* ?x7123 l_0_7_57)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x8274 (* ?x7120 l_0_7_56)))
 (let ((?x7114 (* 2.0 l_0_7_36)))
 (let ((?x8454 (* ?x7114 l_0_7_43)))
 (let ((?x7111 (* 2.0 l_0_7_35)))
 (let ((?x8452 (* ?x7111 l_0_7_42)))
 (let ((?x7108 (* 2.0 l_0_7_34)))
 (let ((?x8450 (* ?x7108 l_0_7_41)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6859 (* ?x6858 l_0_7_34)))
 (let ((?x7102 (* 2.0 l_0_7_21)))
 (let ((?x8445 (* ?x7102 l_0_7_28)))
 (let ((?x7099 (* 2.0 l_0_7_20)))
 (let ((?x8443 (* ?x7099 l_0_7_27)))
 (let ((?x7096 (* 2.0 l_0_7_19)))
 (let ((?x8441 (* ?x7096 l_0_7_26)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6854 (* ?x6853 l_0_7_19)))
 (let ((?x8429 (- (* (* (- 2.0) l_0_7_101) l_0_7_94) (* (* 2.0 l_0_7_102) l_0_7_95))))
 (let ((?x8433 (- (- ?x8429 (* (* 2.0 l_0_7_103) l_0_7_96)) (* (* 2.0 l_0_7_109) l_0_7_116))))
 (let ((?x8437 (- (- ?x8433 (* (* 2.0 l_0_7_110) l_0_7_117)) (* (* 2.0 l_0_7_111) l_0_7_118))))
 (let ((?x8444 (- (- (- (+ ?x8437 ?x6854) (* (* 4.0 l_0_7_16) l_0_7_26)) ?x8441) ?x8443)))
 (let ((?x8451 (+ (+ (- (- ?x8444 ?x8445) ?x6859) (* (* 4.0 l_0_7_31) l_0_7_41)) ?x8450)))
 (let ((?x8458 (- (- (+ (+ ?x8451 ?x8452) ?x8454) (* (* 4.0 l_0_7_46) l_0_7_56)) ?x8274)))
 (let ((?x8463 (+ (+ (- (- ?x8458 ?x8276) ?x8278) (* (* 4.0 l_0_7_61) l_0_7_71)) ?x8280)))
 (= (+ (+ ?x8463 ?x8282) ?x8284) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x7520 (* ?x7473 l_0_7_80)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x7518 (* ?x7468 l_0_7_79)))
 (let ((?x8184 (* l_0_7_63 l_0_7_63)))
 (let ((?x8506 (* 2.0 ?x8184)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8197 (* ?x7044 l_0_7_65)))
 (let ((?x8182 (* l_0_7_62 l_0_7_62)))
 (let ((?x8503 (* 2.0 ?x8182)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8195 (* ?x7041 l_0_7_64)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8193 (* ?x7037 l_0_7_50)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8191 (* ?x7034 l_0_7_49)))
 (let ((?x8493 (* l_0_7_33 l_0_7_33)))
 (let ((?x8494 (* 2.0 ?x8493)))
 (let ((?x8490 (* l_0_7_32 l_0_7_32)))
 (let ((?x8491 (* 2.0 ?x8490)))
 (let ((?x8489 (- (* (* (- 2.0) l_0_7_17) l_0_7_17) (* (* 2.0 l_0_7_18) l_0_7_18))))
 (let ((?x8501 (- (+ (- (+ (+ (+ ?x8489 ?x8491) ?x8494) ?x8191) (* ?x7034 l_0_7_47)) ?x8193) (* ?x7037 l_0_7_48))))
 (= (+ (+ (+ (- (+ (- ?x8501 ?x8195) ?x8503) ?x8197) ?x8506) ?x7518) ?x7520) 0.0))))))))))))))))))))))))
(assert
 (let ((?x7528 (* 2.0 l_0_7_81)))
 (let ((?x7833 (* ?x7528 l_0_7_88)))
 (let ((?x7525 (* 2.0 l_0_7_80)))
 (let ((?x7831 (* ?x7525 l_0_7_87)))
 (let ((?x7522 (* 2.0 l_0_7_79)))
 (let ((?x7829 (* ?x7522 l_0_7_86)))
 (let ((?x7138 (* 2.0 l_0_7_66)))
 (let ((?x8284 (* ?x7138 l_0_7_73)))
 (let ((?x7135 (* 2.0 l_0_7_65)))
 (let ((?x8282 (* ?x7135 l_0_7_72)))
 (let ((?x7132 (* 2.0 l_0_7_64)))
 (let ((?x8280 (* ?x7132 l_0_7_71)))
 (let ((?x7126 (* 2.0 l_0_7_51)))
 (let ((?x8278 (* ?x7126 l_0_7_58)))
 (let ((?x7123 (* 2.0 l_0_7_50)))
 (let ((?x8276 (* ?x7123 l_0_7_57)))
 (let ((?x7120 (* 2.0 l_0_7_49)))
 (let ((?x8274 (* ?x7120 l_0_7_56)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x8378 (* ?x7030 l_0_7_35)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x8376 (* ?x7027 l_0_7_34)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x8372 (* ?x7024 l_0_7_20)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x8370 (* ?x7021 l_0_7_19)))
 (let ((?x8531 (- (+ (- ?x8370 (* (* 4.0 l_0_7_17) l_0_7_26)) ?x8372) (* (* 4.0 l_0_7_18) l_0_7_27))))
 (let ((?x8537 (+ (- (+ (- ?x8531 ?x8376) (* (* 4.0 l_0_7_32) l_0_7_41)) ?x8378) (* (* 4.0 l_0_7_33) l_0_7_42))))
 (let ((?x8541 (- (- ?x8537 (* (* 4.0 l_0_7_47) l_0_7_56)) (* (* 4.0 l_0_7_48) l_0_7_57))))
 (let ((?x8546 (+ (+ (+ (+ ?x8541 ?x8274) ?x8276) ?x8278) (* (* 4.0 l_0_7_62) l_0_7_71))))
 (let ((?x8551 (- (- (- (+ ?x8546 (* (* 4.0 l_0_7_63) l_0_7_72)) ?x8280) ?x8282) ?x8284)))
 (= (+ (+ (+ ?x8551 ?x7829) ?x7831) ?x7833) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x8364 (* l_0_7_75 l_0_7_75)))
 (let ((?x8633 (* 2.0 ?x8364)))
 (let ((?x8362 (* l_0_7_74 l_0_7_74)))
 (let ((?x8631 (* 2.0 ?x8362)))
 (let ((?x8360 (* l_0_7_73 l_0_7_73)))
 (let ((?x8629 (* 2.0 ?x8360)))
 (let ((?x8358 (* l_0_7_72 l_0_7_72)))
 (let ((?x8627 (* 2.0 ?x8358)))
 (let ((?x8356 (* l_0_7_71 l_0_7_71)))
 (let ((?x8625 (* 2.0 ?x8356)))
 (let ((?x8607 (* l_0_7_45 l_0_7_45)))
 (let ((?x8608 (* 2.0 ?x8607)))
 (let ((?x8604 (* l_0_7_44 l_0_7_44)))
 (let ((?x8605 (* 2.0 ?x8604)))
 (let ((?x8601 (* l_0_7_43 l_0_7_43)))
 (let ((?x8602 (* 2.0 ?x8601)))
 (let ((?x8598 (* l_0_7_42 l_0_7_42)))
 (let ((?x8599 (* 2.0 ?x8598)))
 (let ((?x8595 (* l_0_7_41 l_0_7_41)))
 (let ((?x8596 (* 2.0 ?x8595)))
 (let ((?x7114 (* 2.0 l_0_7_36)))
 (let ((?x8454 (* ?x7114 l_0_7_43)))
 (let ((?x7111 (* 2.0 l_0_7_35)))
 (let ((?x8452 (* ?x7111 l_0_7_42)))
 (let ((?x7108 (* 2.0 l_0_7_34)))
 (let ((?x8450 (* ?x7108 l_0_7_41)))
 (let ((?x7102 (* 2.0 l_0_7_21)))
 (let ((?x8445 (* ?x7102 l_0_7_28)))
 (let ((?x7099 (* 2.0 l_0_7_20)))
 (let ((?x8443 (* ?x7099 l_0_7_27)))
 (let ((?x7096 (* 2.0 l_0_7_19)))
 (let ((?x8441 (* ?x7096 l_0_7_26)))
 (let ((?x8582 (- (- (+ (+ ?x8441 ?x8443) ?x8445) (* (* 2.0 l_0_7_26) l_0_7_26)) (* (* 2.0 l_0_7_27) l_0_7_27))))
 (let ((?x8588 (- (- ?x8582 (* (* 2.0 l_0_7_28) l_0_7_28)) (* (* 2.0 l_0_7_29) l_0_7_29))))
 (let ((?x8594 (- (- (- (- ?x8588 (* (* 2.0 l_0_7_30) l_0_7_30)) ?x8450) ?x8452) ?x8454)))
 (let ((?x8612 (- (+ (+ (+ (+ (+ ?x8594 ?x8596) ?x8599) ?x8602) ?x8605) ?x8608) (* (* 2.0 l_0_7_56) l_0_7_56))))
 (let ((?x8618 (- (- ?x8612 (* (* 2.0 l_0_7_57) l_0_7_57)) (* (* 2.0 l_0_7_58) l_0_7_58))))
 (let ((?x8624 (- (- ?x8618 (* (* 2.0 l_0_7_59) l_0_7_59)) (* (* 2.0 l_0_7_60) l_0_7_60))))
 (= (+ (+ (+ (+ (+ ?x8624 ?x8625) ?x8627) ?x8629) ?x8631) ?x8633) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x6984 (* l_0_7_76 l_0_7_76)))
 (let ((?x6872 (* l_0_7_61 l_0_7_61)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x8040 (* ?x6869 l_0_7_62)))
 (let ((?x1912 (* l_0_7_46 l_0_7_46)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x8031 (* ?x6864 l_0_7_47)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x4850 (* ?x6858 l_0_7_32)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x4869 (* ?x6853 l_0_7_17)))
 (let ((?x4842 (+ (- (+ (- (* (* (- 2.0) l_0_7_106) l_0_7_107) ?x4869) ?x4850) ?x8031) ?x1912)))
 (let ((?x8647 (- (+ (- (+ ?x4842 ?x8040) ?x6872) ?x6984) (* (* 2.0 l_0_7_91) l_0_7_92))))
 (= ?x8647 0.0)))))))))))))))
(assert
 (let ((?x8686 (* l_0_7_93 l_0_7_93)))
 (let ((?x8684 (* l_0_7_92 l_0_7_92)))
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7048 (* ?x7047 l_0_7_77)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x8040 (* ?x6869 l_0_7_62)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x8031 (* ?x6864 l_0_7_47)))
 (let ((?x8663 (- (- (* (- l_0_7_107) l_0_7_107) (* l_0_7_108 l_0_7_108)) (* (* 1.0 l_0_7_17) l_0_7_17))))
 (let ((?x8668 (+ (- ?x8663 (* (* 1.0 l_0_7_18) l_0_7_18)) (* 1.0 (* l_0_7_32 l_0_7_32)))))
 (let ((?x8674 (- (+ (+ ?x8668 (* 1.0 (* l_0_7_33 l_0_7_33))) ?x8031) (* (* 1.0 l_0_7_47) l_0_7_47))))
 (let ((?x8680 (+ (- (- ?x8674 (* (* 1.0 l_0_7_48) l_0_7_48)) ?x8040) (* 1.0 (* l_0_7_62 l_0_7_62)))))
 (let ((?x8687 (- (- (+ (+ ?x8680 (* 1.0 (* l_0_7_63 l_0_7_63))) ?x7048) ?x8684) ?x8686)))
 (= ?x8687 0.0)))))))))))))))
(assert
 (let ((?x7047 (* 2.0 l_0_7_76)))
 (let ((?x7399 (* ?x7047 l_0_7_86)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8230 (* ?x7044 l_0_7_72)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8228 (* ?x7041 l_0_7_71)))
 (let ((?x6869 (* 2.0 l_0_7_61)))
 (let ((?x6947 (* ?x6869 l_0_7_71)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8226 (* ?x7037 l_0_7_57)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8224 (* ?x7034 l_0_7_56)))
 (let ((?x6864 (* 2.0 l_0_7_46)))
 (let ((?x6945 (* ?x6864 l_0_7_56)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x8716 (* ?x7030 l_0_7_42)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x8714 (* ?x7027 l_0_7_41)))
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x4850 (* ?x6858 l_0_7_32)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x8711 (* ?x7024 l_0_7_27)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x8709 (* ?x7021 l_0_7_26)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x4869 (* ?x6853 l_0_7_17)))
 (let ((?x8703 (- (* (* (- 2.0) l_0_7_101) l_0_7_92) (* (* 2.0 l_0_7_102) l_0_7_93))))
 (let ((?x8707 (- (- ?x8703 (* (* 2.0 l_0_7_107) l_0_7_116)) (* (* 2.0 l_0_7_108) l_0_7_117))))
 (let ((?x8718 (+ (+ (+ (- (- (- (+ ?x8707 ?x4869) ?x8709) ?x8711) ?x4850) ?x8714) ?x8716) ?x6945)))
 (= (+ (+ (+ (- (- (- ?x8718 ?x8224) ?x8226) ?x6947) ?x8228) ?x8230) ?x7399) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x6858 (* 2.0 l_0_7_31)))
 (let ((?x6942 (* ?x6858 l_0_7_41)))
 (let ((?x6853 (* 2.0 l_0_7_16)))
 (let ((?x6939 (* ?x6853 l_0_7_26)))
 (let ((?x8759 (* l_0_7_120 l_0_7_120)))
 (let ((?x8757 (* l_0_7_119 l_0_7_119)))
 (let ((?x8755 (* l_0_7_118 l_0_7_118)))
 (let ((?x8753 (* l_0_7_117 l_0_7_117)))
 (let ((?x8751 (* l_0_7_116 l_0_7_116)))
 (let ((?x8749 (* l_0_7_105 l_0_7_105)))
 (let ((?x8747 (* l_0_7_104 l_0_7_104)))
 (let ((?x5020 (* l_0_7_103 l_0_7_103)))
 (let ((?x5021 (- (- (* (- l_0_7_101) l_0_7_101) (* l_0_7_102 l_0_7_102)) ?x5020)))
 (let ((?x8760 (- (- (- (- (- (- (- ?x5021 ?x8747) ?x8749) ?x8751) ?x8753) ?x8755) ?x8757) ?x8759)))
 (let ((?x8767 (- (- (+ ?x8760 ?x6939) (* (* 1.0 l_0_7_26) l_0_7_26)) (* (* 1.0 l_0_7_27) l_0_7_27))))
 (let ((?x8773 (- (- ?x8767 (* (* 1.0 l_0_7_28) l_0_7_28)) (* (* 1.0 l_0_7_29) l_0_7_29))))
 (let ((?x8779 (+ (- (- ?x8773 (* (* 1.0 l_0_7_30) l_0_7_30)) ?x6942) (* 1.0 (* l_0_7_41 l_0_7_41)))))
 (let ((?x8783 (+ (+ ?x8779 (* 1.0 (* l_0_7_42 l_0_7_42))) (* 1.0 (* l_0_7_43 l_0_7_43)))))
 (let ((?x8787 (+ (+ ?x8783 (* 1.0 (* l_0_7_44 l_0_7_44))) (* 1.0 (* l_0_7_45 l_0_7_45)))))
 (let ((?x8793 (- (- ?x8787 (* (* 1.0 l_0_7_56) l_0_7_56)) (* (* 1.0 l_0_7_57) l_0_7_57))))
 (let ((?x8799 (- (- ?x8793 (* (* 1.0 l_0_7_58) l_0_7_58)) (* (* 1.0 l_0_7_59) l_0_7_59))))
 (let ((?x8804 (+ (- ?x8799 (* (* 1.0 l_0_7_60) l_0_7_60)) (* 1.0 (* l_0_7_71 l_0_7_71)))))
 (let ((?x8808 (+ (+ ?x8804 (* 1.0 (* l_0_7_72 l_0_7_72))) (* 1.0 (* l_0_7_73 l_0_7_73)))))
 (let ((?x8812 (+ (+ ?x8808 (* 1.0 (* l_0_7_74 l_0_7_74))) (* 1.0 (* l_0_7_75 l_0_7_75)))))
 (= ?x8812 0.0))))))))))))))))))))))))))
(assert
 (let ((?x7473 (* 2.0 l_0_7_78)))
 (let ((?x2790 (* ?x7473 l_0_7_87)))
 (let ((?x7468 (* 2.0 l_0_7_77)))
 (let ((?x2795 (* ?x7468 l_0_7_86)))
 (let ((?x7044 (* 2.0 l_0_7_63)))
 (let ((?x8230 (* ?x7044 l_0_7_72)))
 (let ((?x7041 (* 2.0 l_0_7_62)))
 (let ((?x8228 (* ?x7041 l_0_7_71)))
 (let ((?x7037 (* 2.0 l_0_7_48)))
 (let ((?x8226 (* ?x7037 l_0_7_57)))
 (let ((?x7034 (* 2.0 l_0_7_47)))
 (let ((?x8224 (* ?x7034 l_0_7_56)))
 (let ((?x8493 (* l_0_7_33 l_0_7_33)))
 (let ((?x8490 (* l_0_7_32 l_0_7_32)))
 (let ((?x5148 (- (- (+ (* l_0_7_17 l_0_7_17) (* l_0_7_18 l_0_7_18)) ?x8490) ?x8493)))
 (= (+ (+ (- (- (+ (+ ?x5148 ?x8224) ?x8226) ?x8228) ?x8230) ?x2795) ?x2790) 0.0)))))))))))))))))
(assert
 (let ((?x7931 (* l_0_7_90 l_0_7_90)))
 (let ((?x7929 (* l_0_7_89 l_0_7_89)))
 (let ((?x7927 (* l_0_7_88 l_0_7_88)))
 (let ((?x3440 (* l_0_7_87 l_0_7_87)))
 (let ((?x3443 (* l_0_7_86 l_0_7_86)))
 (let ((?x8364 (* l_0_7_75 l_0_7_75)))
 (let ((?x8362 (* l_0_7_74 l_0_7_74)))
 (let ((?x8360 (* l_0_7_73 l_0_7_73)))
 (let ((?x8358 (* l_0_7_72 l_0_7_72)))
 (let ((?x8356 (* l_0_7_71 l_0_7_71)))
 (let ((?x8354 (* l_0_7_60 l_0_7_60)))
 (let ((?x8352 (* l_0_7_59 l_0_7_59)))
 (let ((?x8350 (* l_0_7_58 l_0_7_58)))
 (let ((?x8348 (* l_0_7_57 l_0_7_57)))
 (let ((?x8346 (* l_0_7_56 l_0_7_56)))
 (let ((?x7030 (* 2.0 l_0_7_33)))
 (let ((?x8716 (* ?x7030 l_0_7_42)))
 (let ((?x7027 (* 2.0 l_0_7_32)))
 (let ((?x8714 (* ?x7027 l_0_7_41)))
 (let ((?x7024 (* 2.0 l_0_7_18)))
 (let ((?x8711 (* ?x7024 l_0_7_27)))
 (let ((?x7021 (* 2.0 l_0_7_17)))
 (let ((?x8709 (* ?x7021 l_0_7_26)))
 (let ((?x8862 (+ (+ (+ (+ (- (- (+ ?x8709 ?x8711) ?x8714) ?x8716) ?x8346) ?x8348) ?x8350) ?x8352)))
 (let ((?x8869 (+ (- (- (- (- (- (+ ?x8862 ?x8354) ?x8356) ?x8358) ?x8360) ?x8362) ?x8364) ?x3443)))
 (= (+ (+ (+ (+ ?x8869 ?x3440) ?x7927) ?x7929) ?x7931) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x8607 (* l_0_7_45 l_0_7_45)))
 (let ((?x8604 (* l_0_7_44 l_0_7_44)))
 (let ((?x8601 (* l_0_7_43 l_0_7_43)))
 (let ((?x8598 (* l_0_7_42 l_0_7_42)))
 (let ((?x8595 (* l_0_7_41 l_0_7_41)))
 (let ((?x4773 (* l_0_7_30 l_0_7_30)))
 (let ((?x4688 (* l_0_7_29 l_0_7_29)))
 (let ((?x4680 (* l_0_7_28 l_0_7_28)))
 (let ((?x5273 (+ (+ (+ (* l_0_7_26 l_0_7_26) (* l_0_7_27 l_0_7_27)) ?x4680) ?x4688)))
 (= (- (- (- (- (- (+ ?x5273 ?x4773) ?x8595) ?x8598) ?x8601) ?x8604) ?x8607) 0.0)))))))))))
(assert
 (let ((?x7476 (* l_0_7_78 l_0_7_78)))
 (let ((?x7471 (* l_0_7_77 l_0_7_77)))
 (let ((?x8184 (* l_0_7_63 l_0_7_63)))
 (let ((?x8182 (* l_0_7_62 l_0_7_62)))
 (let ((?x8906 (- (- (+ (* l_0_7_47 l_0_7_47) (* l_0_7_48 l_0_7_48)) ?x8182) ?x8184)))
 (= (+ (+ ?x8906 ?x7471) ?x7476) 0.0)))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (>= l_0_7_106 0.0))
(assert
 (>= l_0_7_108 0.0))
(assert
 (>= l_0_7_111 0.0))
(assert
 (>= l_0_7_115 0.0))
(assert
 (>= l_0_7_120 0.0))
(assert
 (let ((?x8970 (* l_0_8_91 l_0_8_91)))
 (let ((?x8960 (- (- (- _a_0_ (* l_0_8_106 l_0_8_106)) (* l_0_8_121 l_0_8_121)) (* (* 1.0 l_0_8_16) l_0_8_16))))
 (let ((?x8966 (- (+ ?x8960 (* 1.0 (* l_0_8_31 l_0_8_31))) (* (* 1.0 l_0_8_46) l_0_8_46))))
 (= (- (- (+ ?x8966 (* 1.0 (* l_0_8_61 l_0_8_61))) ?x8970) 3.0) 0.0)))))
(assert
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x8993 (* ?x8992 l_0_8_71)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x8990 (* ?x8989 l_0_8_56)))
 (let ((?x8961 (* l_0_8_31 l_0_8_31)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x8986 (* ?x8985 l_0_8_41)))
 (let ((?x8979 (* l_0_8_16 l_0_8_16)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x8982 (* ?x5291 l_0_8_26)))
 (let ((?x5264 (- (- _a_1_ (* (* 2.0 l_0_8_101) l_0_8_91)) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x8987 (+ (+ (- (- ?x5264 (* (* 2.0 l_0_8_121) l_0_8_131)) ?x8982) ?x8979) ?x8986)))
 (= (+ (- (- ?x8987 ?x8961) ?x8990) ?x8993) 0.0))))))))))))))
(assert
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9028 (* ?x8992 l_0_8_64)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9024 (* ?x8989 l_0_8_49)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x9020 (* ?x8985 l_0_8_34)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x9016 (* ?x5291 l_0_8_19)))
 (let ((?x9015 (- (* (* (- 2.0) l_0_8_106) l_0_8_109) (* (* 2.0 l_0_8_121) l_0_8_124))))
 (let ((?x9023 (+ (+ (- (- ?x9015 ?x9016) (* ?x5291 l_0_8_16)) ?x9020) (* 2.0 (* l_0_8_31 l_0_8_31)))))
 (let ((?x9031 (+ (+ (- (- ?x9023 ?x9024) (* ?x8989 l_0_8_46)) ?x9028) (* 2.0 (* l_0_8_61 l_0_8_61)))))
 (= (- (- ?x9031 (* (* 2.0 l_0_8_91) l_0_8_94)) 2.0) 0.0)))))))))))))
(assert
 (let ((?x9083 (* l_0_8_76 l_0_8_76)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9081 (* ?x8992 l_0_8_67)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9079 (* ?x8989 l_0_8_52)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x9077 (* ?x8985 l_0_8_37)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x9075 (* ?x5291 l_0_8_22)))
 (let ((?x9074 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_106) l_0_8_112)) (* (* 2.0 l_0_8_121) l_0_8_127))))
 (let ((?x9086 (- (- (+ (- (+ (- ?x9074 ?x9075) ?x9077) ?x9079) ?x9081) ?x9083) (* (* 2.0 l_0_8_91) l_0_8_97))))
 (= ?x9086 0.0)))))))))))))
(assert
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9155 (* ?x9152 l_0_8_82)))
 (let ((?x9153 (* ?x9152 l_0_8_77)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x9150 (* ?x9149 l_0_8_68)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x9147 (* ?x9146 l_0_8_67)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9081 (* ?x8992 l_0_8_67)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x9143 (* ?x9142 l_0_8_53)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x9140 (* ?x9139 l_0_8_52)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9079 (* ?x8989 l_0_8_52)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x9136 (* ?x9135 l_0_8_38)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x9133 (* ?x9132 l_0_8_37)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x9130 (* ?x9129 l_0_8_23)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x9127 (* ?x9126 l_0_8_22)))
 (let ((?x9116 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_107) l_0_8_112))))
 (let ((?x9122 (- (- ?x9116 (* (* 2.0 l_0_8_108) l_0_8_113)) (* (* 2.0 l_0_8_122) l_0_8_127))))
 (let ((?x9134 (+ (- (- (- ?x9122 (* (* 2.0 l_0_8_123) l_0_8_128)) ?x9127) ?x9130) ?x9133)))
 (let ((?x9151 (+ (+ (- (- (- (+ (+ ?x9134 ?x9136) ?x9079) ?x9140) ?x9143) ?x9081) ?x9147) ?x9150)))
 (let ((?x9162 (- (- (+ (- ?x9151 ?x9153) ?x9155) (* (* 2.0 l_0_8_92) l_0_8_97)) (* (* 2.0 l_0_8_93) l_0_8_98))))
 (= ?x9162 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9278 (* ?x9152 l_0_8_79)))
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x9276 (* ?x9275 l_0_8_69)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x9273 (* ?x9272 l_0_8_68)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x9270 (* ?x9269 l_0_8_67)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x9264 (* ?x9263 l_0_8_54)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x9261 (* ?x9260 l_0_8_53)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x9258 (* ?x9257 l_0_8_52)))
 (let ((?x9251 (* 2.0 l_0_8_36)))
 (let ((?x9252 (* ?x9251 l_0_8_39)))
 (let ((?x9248 (* 2.0 l_0_8_35)))
 (let ((?x9249 (* ?x9248 l_0_8_38)))
 (let ((?x9245 (* 2.0 l_0_8_34)))
 (let ((?x9246 (* ?x9245 l_0_8_37)))
 (let ((?x9239 (* 2.0 l_0_8_21)))
 (let ((?x9240 (* ?x9239 l_0_8_24)))
 (let ((?x9236 (* 2.0 l_0_8_20)))
 (let ((?x9237 (* ?x9236 l_0_8_23)))
 (let ((?x9233 (* 2.0 l_0_8_19)))
 (let ((?x9234 (* ?x9233 l_0_8_22)))
 (let ((?x9214 (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_109) l_0_8_112))))
 (let ((?x9220 (- (- ?x9214 (* (* 2.0 l_0_8_110) l_0_8_113)) (* (* 2.0 l_0_8_111) l_0_8_114))))
 (let ((?x9226 (- (- ?x9220 (* (* 2.0 l_0_8_124) l_0_8_127)) (* (* 2.0 l_0_8_125) l_0_8_128))))
 (let ((?x9232 (- (- ?x9226 (* (* 2.0 l_0_8_126) l_0_8_129)) (* (* 4.0 l_0_8_16) l_0_8_22))))
 (let ((?x9244 (+ (- (- (- ?x9232 ?x9234) ?x9237) ?x9240) (* (* 4.0 l_0_8_31) l_0_8_37))))
 (let ((?x9256 (- (+ (+ (+ ?x9244 ?x9246) ?x9249) ?x9252) (* (* 4.0 l_0_8_46) l_0_8_52))))
 (let ((?x9268 (+ (- (- (- ?x9256 ?x9258) ?x9261) ?x9264) (* (* 4.0 l_0_8_61) l_0_8_67))))
 (let ((?x9282 (- (- (+ (+ (+ ?x9268 ?x9270) ?x9273) ?x9276) ?x9278) (* (* 2.0 l_0_8_94) l_0_8_97))))
 (let ((?x9288 (- (- ?x9282 (* (* 2.0 l_0_8_95) l_0_8_98)) (* (* 2.0 l_0_8_96) l_0_8_99))))
 (= ?x9288 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9431 (* l_0_8_99 l_0_8_99)))
 (let ((?x9429 (* l_0_8_98 l_0_8_98)))
 (let ((?x9427 (* l_0_8_97 l_0_8_97)))
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9155 (* ?x9152 l_0_8_82)))
 (let ((?x9376 (* l_0_8_130 l_0_8_130)))
 (let ((?x9374 (* l_0_8_129 l_0_8_129)))
 (let ((?x9372 (* l_0_8_128 l_0_8_128)))
 (let ((?x9370 (* l_0_8_127 l_0_8_127)))
 (let ((?x9368 (* l_0_8_115 l_0_8_115)))
 (let ((?x9366 (* l_0_8_114 l_0_8_114)))
 (let ((?x9364 (* l_0_8_113 l_0_8_113)))
 (let ((?x9362 (* l_0_8_112 l_0_8_112)))
 (let ((?x9363 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_7) (* l_0_8_100 l_0_8_100)) ?x9362)))
 (let ((?x9377 (- (- (- (- (- (- (- ?x9363 ?x9364) ?x9366) ?x9368) ?x9370) ?x9372) ?x9374) ?x9376)))
 (let ((?x9383 (- (- ?x9377 (* (* 1.0 l_0_8_22) l_0_8_22)) (* (* 1.0 l_0_8_23) l_0_8_23))))
 (let ((?x9389 (- (- ?x9383 (* (* 1.0 l_0_8_24) l_0_8_24)) (* (* 1.0 l_0_8_25) l_0_8_25))))
 (let ((?x9395 (+ (+ ?x9389 (* 1.0 (* l_0_8_37 l_0_8_37))) (* 1.0 (* l_0_8_38 l_0_8_38)))))
 (let ((?x9401 (+ (+ ?x9395 (* 1.0 (* l_0_8_39 l_0_8_39))) (* 1.0 (* l_0_8_40 l_0_8_40)))))
 (let ((?x9407 (- (- ?x9401 (* (* 1.0 l_0_8_52) l_0_8_52)) (* (* 1.0 l_0_8_53) l_0_8_53))))
 (let ((?x9413 (- (- ?x9407 (* (* 1.0 l_0_8_54) l_0_8_54)) (* (* 1.0 l_0_8_55) l_0_8_55))))
 (let ((?x9419 (+ (+ ?x9413 (* 1.0 (* l_0_8_67 l_0_8_67))) (* 1.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x9425 (+ (+ ?x9419 (* 1.0 (* l_0_8_69 l_0_8_69))) (* 1.0 (* l_0_8_70 l_0_8_70)))))
 (= (- (- (- (- ?x9425 ?x9155) ?x9427) ?x9429) ?x9431) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9573 (* ?x9152 l_0_8_86)))
 (let ((?x9571 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x9568 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9565 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9562 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9558 (* 2.0 l_0_8_55)))
 (let ((?x9559 (* ?x9558 l_0_8_59)))
 (let ((?x9555 (* 2.0 l_0_8_54)))
 (let ((?x9556 (* ?x9555 l_0_8_58)))
 (let ((?x9552 (* 2.0 l_0_8_53)))
 (let ((?x9553 (* ?x9552 l_0_8_57)))
 (let ((?x9549 (* 2.0 l_0_8_52)))
 (let ((?x9550 (* ?x9549 l_0_8_56)))
 (let ((?x9547 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9544 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9541 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9538 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x9077 (* ?x8985 l_0_8_37)))
 (let ((?x9533 (* 2.0 l_0_8_25)))
 (let ((?x9534 (* ?x9533 l_0_8_29)))
 (let ((?x9530 (* 2.0 l_0_8_24)))
 (let ((?x9531 (* ?x9530 l_0_8_28)))
 (let ((?x9527 (* 2.0 l_0_8_23)))
 (let ((?x9528 (* ?x9527 l_0_8_27)))
 (let ((?x9525 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x9075 (* ?x5291 l_0_8_22)))
 (let ((?x9490 (- (* (* (- 2.0) l_0_8_1) l_0_8_11) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x9495 (- (- ?x9490 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x9501 (- (- ?x9495 (* (* 2.0 l_0_8_103) l_0_8_99)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x9507 (- (- ?x9501 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x9513 (- (- ?x9507 (* (* 2.0 l_0_8_115) l_0_8_119)) (* (* 2.0 l_0_8_127) l_0_8_131))))
 (let ((?x9519 (- (- ?x9513 (* (* 2.0 l_0_8_128) l_0_8_132)) (* (* 2.0 l_0_8_129) l_0_8_133))))
 (let ((?x9529 (- (- (+ (- ?x9519 (* (* 2.0 l_0_8_130) l_0_8_134)) ?x9075) ?x9525) ?x9528)))
 (let ((?x9548 (+ (+ (+ (+ (- (- (- ?x9529 ?x9531) ?x9534) ?x9077) ?x9538) ?x9541) ?x9544) ?x9547)))
 (let ((?x9569 (+ (+ (+ (- (- (- (- ?x9548 ?x9550) ?x9553) ?x9556) ?x9559) ?x9562) ?x9565) ?x9568)))
 (= (- (+ ?x9569 ?x9571) ?x9573) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9634 (* l_0_8_78 l_0_8_78)))
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9632 (* ?x9631 l_0_8_83)))
 (let ((?x9629 (* l_0_8_77 l_0_8_77)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9627 (* ?x9626 l_0_8_82)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x9150 (* ?x9149 l_0_8_68)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x9147 (* ?x9146 l_0_8_67)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x9143 (* ?x9142 l_0_8_53)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x9140 (* ?x9139 l_0_8_52)))
 (let ((?x9623 (+ (+ (- (* (- l_0_8_2) l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x9140) ?x9143)))
 (= (- (+ (- (+ (- (- ?x9623 ?x9147) ?x9150) ?x9627) ?x9629) ?x9632) ?x9634) 0.0)))))))))))))))))
(assert
 (let ((?x9690 (* 2.0 l_0_8_81)))
 (let ((?x9691 (* ?x9690 l_0_8_84)))
 (let ((?x9687 (* 2.0 l_0_8_80)))
 (let ((?x9688 (* ?x9687 l_0_8_83)))
 (let ((?x9684 (* 2.0 l_0_8_79)))
 (let ((?x9685 (* ?x9684 l_0_8_82)))
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9682 (* ?x9631 l_0_8_80)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9680 (* ?x9626 l_0_8_79)))
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x9276 (* ?x9275 l_0_8_69)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x9273 (* ?x9272 l_0_8_68)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x9270 (* ?x9269 l_0_8_67)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x9264 (* ?x9263 l_0_8_54)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x9261 (* ?x9260 l_0_8_53)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x9258 (* ?x9257 l_0_8_52)))
 (let ((?x9653 (* 2.0 l_0_8_3)))
 (let ((?x9654 (* ?x9653 l_0_8_5)))
 (let ((?x9650 (* 2.0 l_0_8_2)))
 (let ((?x9651 (* ?x9650 l_0_8_4)))
 (let ((?x6145 (- (* (* (- 4.0) l_0_8_17) l_0_8_22) (* (* 4.0 l_0_8_18) l_0_8_23))))
 (let ((?x9661 (+ (+ (- (- ?x6145 ?x9651) ?x9654) (* (* 4.0 l_0_8_32) l_0_8_37)) (* (* 4.0 l_0_8_33) l_0_8_38))))
 (let ((?x9667 (- (- ?x9661 (* (* 4.0 l_0_8_47) l_0_8_52)) (* (* 4.0 l_0_8_48) l_0_8_53))))
 (let ((?x9673 (+ (+ (+ (+ ?x9667 ?x9258) ?x9261) ?x9264) (* (* 4.0 l_0_8_62) l_0_8_67))))
 (let ((?x9679 (- (- (- (+ ?x9673 (* (* 4.0 l_0_8_63) l_0_8_68)) ?x9270) ?x9273) ?x9276)))
 (= (+ (+ (+ (- (- ?x9679 ?x9680) ?x9682) ?x9685) ?x9688) ?x9691) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x9756 (* l_0_8_85 l_0_8_85)))
 (let ((?x9754 (* l_0_8_84 l_0_8_84)))
 (let ((?x9752 (* l_0_8_83 l_0_8_83)))
 (let ((?x9750 (* l_0_8_82 l_0_8_82)))
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9632 (* ?x9631 l_0_8_83)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9627 (* ?x9626 l_0_8_82)))
 (let ((?x9423 (* l_0_8_70 l_0_8_70)))
 (let ((?x9420 (* l_0_8_69 l_0_8_69)))
 (let ((?x9417 (* l_0_8_68 l_0_8_68)))
 (let ((?x9414 (* l_0_8_67 l_0_8_67)))
 (let ((?x5750 (* l_0_8_55 l_0_8_55)))
 (let ((?x5747 (* l_0_8_54 l_0_8_54)))
 (let ((?x5744 (* l_0_8_53 l_0_8_53)))
 (let ((?x9466 (* l_0_8_52 l_0_8_52)))
 (let ((?x9653 (* 2.0 l_0_8_3)))
 (let ((?x9728 (* ?x9653 l_0_8_8)))
 (let ((?x9742 (+ (+ (+ (- (* (* (- 2.0) l_0_8_2) l_0_8_7) ?x9728) ?x9466) ?x5744) ?x5747)))
 (let ((?x9749 (- (- (- (- (- (- (+ ?x9742 ?x5750) ?x9414) ?x9417) ?x9420) ?x9423) ?x9627) ?x9632)))
 (= (+ (+ (+ (+ ?x9749 ?x9750) ?x9752) ?x9754) ?x9756) 0.0))))))))))))))))))))))
(assert
 (let ((?x9787 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x9784 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x9781 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x9778 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9775 (* ?x9631 l_0_8_87)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9773 (* ?x9626 l_0_8_86)))
 (let ((?x9571 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x9568 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9565 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9562 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9558 (* 2.0 l_0_8_55)))
 (let ((?x9559 (* ?x9558 l_0_8_59)))
 (let ((?x9555 (* 2.0 l_0_8_54)))
 (let ((?x9556 (* ?x9555 l_0_8_58)))
 (let ((?x9552 (* 2.0 l_0_8_53)))
 (let ((?x9553 (* ?x9552 l_0_8_57)))
 (let ((?x9549 (* 2.0 l_0_8_52)))
 (let ((?x9550 (* ?x9549 l_0_8_56)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x9136 (* ?x9135 l_0_8_38)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x9133 (* ?x9132 l_0_8_37)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x9130 (* ?x9129 l_0_8_23)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x9127 (* ?x9126 l_0_8_22)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x6309 (* ?x6314 l_0_8_3)))
 (let ((?x6262 (- (+ (+ (- (* (* (- 2.0) l_0_8_11) l_0_8_2) ?x6309) ?x9127) ?x9130) ?x9133)))
 (let ((?x9770 (- (- (+ (+ (+ (+ (- ?x6262 ?x9136) ?x9550) ?x9553) ?x9556) ?x9559) ?x9562) ?x9565)))
 (let ((?x9785 (+ (+ (+ (- (- (- (- ?x9770 ?x9568) ?x9571) ?x9773) ?x9775) ?x9778) ?x9781) ?x9784)))
 (= (+ ?x9785 ?x9787) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9831 (* l_0_8_81 l_0_8_81)))
 (let ((?x9829 (* l_0_8_80 l_0_8_80)))
 (let ((?x9827 (* l_0_8_79 l_0_8_79)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9081 (* ?x8992 l_0_8_67)))
 (let ((?x9815 (* l_0_8_6 l_0_8_6)))
 (let ((?x9807 (* l_0_8_5 l_0_8_5)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9079 (* ?x8989 l_0_8_52)))
 (let ((?x9801 (* l_0_8_4 l_0_8_4)))
 (let ((?x1033 (- (* (* 2.0 l_0_8_1) l_0_8_7) (* (* 4.0 l_0_8_19) l_0_8_22))))
 (let ((?x6386 (- (- ?x1033 (* (* 4.0 l_0_8_20) l_0_8_23)) (* (* 4.0 l_0_8_21) l_0_8_24))))
 (let ((?x860 (+ (+ ?x6386 (* (* 4.0 l_0_8_34) l_0_8_37)) (* (* 4.0 l_0_8_35) l_0_8_38))))
 (let ((?x9806 (- (- (- (+ ?x860 (* (* 4.0 l_0_8_36) l_0_8_39)) ?x9801) ?x9079) (* (* 4.0 l_0_8_49) l_0_8_52))))
 (let ((?x9814 (- (- (- ?x9806 ?x9807) (* (* 4.0 l_0_8_50) l_0_8_53)) (* (* 4.0 l_0_8_51) l_0_8_54))))
 (let ((?x9823 (+ (+ (+ (- ?x9814 ?x9815) ?x9081) (* (* 4.0 l_0_8_64) l_0_8_67)) (* (* 4.0 l_0_8_65) l_0_8_68))))
 (let ((?x9832 (- (- (- (+ ?x9823 (* (* 4.0 l_0_8_66) l_0_8_69)) ?x9827) ?x9829) ?x9831)))
 (= ?x9832 0.0)))))))))))))))))))
(assert
 (let ((?x9690 (* 2.0 l_0_8_81)))
 (let ((?x9691 (* ?x9690 l_0_8_84)))
 (let ((?x9687 (* 2.0 l_0_8_80)))
 (let ((?x9688 (* ?x9687 l_0_8_83)))
 (let ((?x9684 (* 2.0 l_0_8_79)))
 (let ((?x9685 (* ?x9684 l_0_8_82)))
 (let ((?x9906 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9895 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x9890 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x9878 (- (* (* (- 2.0) l_0_8_22) l_0_8_22) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x9882 (- (- ?x9878 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (let ((?x9886 (+ (+ ?x9882 (* 2.0 (* l_0_8_37 l_0_8_37))) (* 2.0 (* l_0_8_38 l_0_8_38)))))
 (let ((?x9893 (+ (- (+ ?x9886 (* 2.0 (* l_0_8_39 l_0_8_39))) ?x9890) (* 2.0 (* l_0_8_40 l_0_8_40)))))
 (let ((?x9900 (- (- (- ?x9893 ?x9895) (* (* 2.0 l_0_8_52) l_0_8_52)) (* (* 2.0 l_0_8_53) l_0_8_53))))
 (let ((?x9904 (- (- ?x9900 (* (* 2.0 l_0_8_54) l_0_8_54)) (* (* 2.0 l_0_8_55) l_0_8_55))))
 (let ((?x9911 (+ (+ (- ?x9904 ?x9906) (* 2.0 (* l_0_8_67 l_0_8_67))) (* 2.0 (* l_0_8_68 l_0_8_68)))))
 (let ((?x9915 (+ (+ ?x9911 (* 2.0 (* l_0_8_69 l_0_8_69))) (* 2.0 (* l_0_8_70 l_0_8_70)))))
 (= (- (- (- ?x9915 ?x9685) ?x9688) ?x9691) 0.0)))))))))))))))))))
(assert
 (let ((?x9690 (* 2.0 l_0_8_81)))
 (let ((?x10010 (* ?x9690 l_0_8_88)))
 (let ((?x9687 (* 2.0 l_0_8_80)))
 (let ((?x10008 (* ?x9687 l_0_8_87)))
 (let ((?x9684 (* 2.0 l_0_8_79)))
 (let ((?x10006 (* ?x9684 l_0_8_86)))
 (let ((?x9251 (* 2.0 l_0_8_36)))
 (let ((?x9252 (* ?x9251 l_0_8_39)))
 (let ((?x9248 (* 2.0 l_0_8_35)))
 (let ((?x9249 (* ?x9248 l_0_8_38)))
 (let ((?x9245 (* 2.0 l_0_8_34)))
 (let ((?x9246 (* ?x9245 l_0_8_37)))
 (let ((?x9239 (* 2.0 l_0_8_21)))
 (let ((?x9240 (* ?x9239 l_0_8_24)))
 (let ((?x9236 (* 2.0 l_0_8_20)))
 (let ((?x9237 (* ?x9236 l_0_8_23)))
 (let ((?x9233 (* 2.0 l_0_8_19)))
 (let ((?x9234 (* ?x9233 l_0_8_22)))
 (let ((?x9949 (* 2.0 l_0_8_13)))
 (let ((?x9950 (* ?x9949 l_0_8_6)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x9947 (* ?x6314 l_0_8_5)))
 (let ((?x9953 (+ (+ (- (- (* (* (- 2.0) l_0_8_11) l_0_8_4) ?x9947) ?x9950) ?x9234) ?x9237)))
 (let ((?x9960 (- (- (+ ?x9953 ?x9240) (* (* 4.0 l_0_8_22) l_0_8_26)) (* (* 4.0 l_0_8_23) l_0_8_27))))
 (let ((?x9966 (- (- ?x9960 (* (* 4.0 l_0_8_24) l_0_8_28)) (* (* 4.0 l_0_8_25) l_0_8_29))))
 (let ((?x9972 (+ (- (- (- ?x9966 ?x9246) ?x9249) ?x9252) (* (* 4.0 l_0_8_37) l_0_8_41))))
 (let ((?x9978 (+ (+ ?x9972 (* (* 4.0 l_0_8_38) l_0_8_42)) (* (* 4.0 l_0_8_39) l_0_8_43))))
 (let ((?x9984 (- (+ ?x9978 (* (* 4.0 l_0_8_40) l_0_8_44)) (* (* 4.0 l_0_8_52) l_0_8_56))))
 (let ((?x9990 (- (- ?x9984 (* (* 4.0 l_0_8_53) l_0_8_57)) (* (* 4.0 l_0_8_54) l_0_8_58))))
 (let ((?x9996 (+ (- ?x9990 (* (* 4.0 l_0_8_55) l_0_8_59)) (* (* 4.0 l_0_8_67) l_0_8_71))))
 (let ((?x10002 (+ (+ ?x9996 (* (* 4.0 l_0_8_68) l_0_8_72)) (* (* 4.0 l_0_8_69) l_0_8_73))))
 (let ((?x10011 (- (- (- (+ ?x10002 (* (* 4.0 l_0_8_70) l_0_8_74)) ?x10006) ?x10008) ?x10010)))
 (= ?x10011 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10054 (* l_0_8_9 l_0_8_9)))
 (let ((?x9756 (* l_0_8_85 l_0_8_85)))
 (let ((?x9754 (* l_0_8_84 l_0_8_84)))
 (let ((?x9752 (* l_0_8_83 l_0_8_83)))
 (let ((?x9750 (* l_0_8_82 l_0_8_82)))
 (let ((?x10048 (* l_0_8_8 l_0_8_8)))
 (let ((?x10050 (- (- (- (* (- l_0_8_10) l_0_8_10) (* l_0_8_7 l_0_8_7)) ?x10048) ?x9750)))
 (= (- (- (- (- ?x10050 ?x9752) ?x9754) ?x9756) ?x10054) 0.0)))))))))
(assert
 (let ((?x9787 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x9784 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x9781 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x9778 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x9399 (* l_0_8_40 l_0_8_40)))
 (let ((?x9396 (* l_0_8_39 l_0_8_39)))
 (let ((?x9393 (* l_0_8_38 l_0_8_38)))
 (let ((?x9390 (* l_0_8_37 l_0_8_37)))
 (let ((?x5738 (* l_0_8_25 l_0_8_25)))
 (let ((?x9462 (* l_0_8_24 l_0_8_24)))
 (let ((?x9458 (* l_0_8_23 l_0_8_23)))
 (let ((?x5733 (* l_0_8_22 l_0_8_22)))
 (let ((?x9949 (* 2.0 l_0_8_13)))
 (let ((?x6097 (* ?x9949 l_0_8_9)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x1634 (* ?x6314 l_0_8_8)))
 (let ((?x1636 (* 2.0 l_0_8_11)))
 (let ((?x1630 (* ?x1636 l_0_8_7)))
 (let ((?x1611 (+ (- (- (- (* (* (- 2.0) l_0_8_10) l_0_8_14) ?x1630) ?x1634) ?x6097) ?x5733)))
 (let ((?x10069 (- (- (- (- (+ (+ (+ ?x1611 ?x9458) ?x9462) ?x5738) ?x9390) ?x9393) ?x9396) ?x9399)))
 (= (- (- (- (- ?x10069 ?x9778) ?x9781) ?x9784) ?x9787) 0.0))))))))))))))))))))))
(assert
 (let ((?x10116 (* l_0_8_90 l_0_8_90)))
 (let ((?x10114 (* l_0_8_89 l_0_8_89)))
 (let ((?x10112 (* l_0_8_88 l_0_8_88)))
 (let ((?x10110 (* l_0_8_87 l_0_8_87)))
 (let ((?x10108 (* l_0_8_86 l_0_8_86)))
 (let ((?x9547 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9544 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9541 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9538 (* (* 2.0 l_0_8_37) l_0_8_41)))
 (let ((?x9533 (* 2.0 l_0_8_25)))
 (let ((?x9534 (* ?x9533 l_0_8_29)))
 (let ((?x9530 (* 2.0 l_0_8_24)))
 (let ((?x9531 (* ?x9530 l_0_8_28)))
 (let ((?x9527 (* 2.0 l_0_8_23)))
 (let ((?x9528 (* ?x9527 l_0_8_27)))
 (let ((?x9525 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x10098 (* l_0_8_15 l_0_8_15)))
 (let ((?x10096 (* l_0_8_14 l_0_8_14)))
 (let ((?x10094 (* l_0_8_13 l_0_8_13)))
 (let ((?x10097 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x10094) ?x10096)))
 (let ((?x10105 (- (- (+ (+ (+ (+ (- ?x10097 ?x10098) ?x9525) ?x9528) ?x9531) ?x9534) ?x9538) ?x9541)))
 (let ((?x10117 (- (- (- (- (- (- (- ?x10105 ?x9544) ?x9547) ?x10108) ?x10110) ?x10112) ?x10114) ?x10116)))
 (= ?x10117 0.0))))))))))))))))))))))))
(assert
 (let ((?x10195 (* l_0_8_96 l_0_8_96)))
 (let ((?x10193 (* l_0_8_95 l_0_8_95)))
 (let ((?x10191 (* l_0_8_94 l_0_8_94)))
 (let ((?x8967 (* l_0_8_61 l_0_8_61)))
 (let ((?x5248 (* l_0_8_46 l_0_8_46)))
 (let ((?x10143 (* l_0_8_126 l_0_8_126)))
 (let ((?x10141 (* l_0_8_125 l_0_8_125)))
 (let ((?x10139 (* l_0_8_124 l_0_8_124)))
 (let ((?x10137 (* l_0_8_111 l_0_8_111)))
 (let ((?x10135 (* l_0_8_110 l_0_8_110)))
 (let ((?x10138 (- (- (- (* l_0_8_1 l_0_8_1) (* l_0_8_109 l_0_8_109)) ?x10135) ?x10137)))
 (let ((?x10146 (- (- (- (- ?x10138 ?x10139) ?x10141) ?x10143) (* (* 4.0 l_0_8_16) l_0_8_19))))
 (let ((?x10152 (- (- ?x10146 (* (* 1.0 l_0_8_19) l_0_8_19)) (* (* 1.0 l_0_8_20) l_0_8_20))))
 (let ((?x10157 (+ (- ?x10152 (* (* 1.0 l_0_8_21) l_0_8_21)) (* (* 4.0 l_0_8_31) l_0_8_34))))
 (let ((?x10163 (+ (+ ?x10157 (* 1.0 (* l_0_8_34 l_0_8_34))) (* 1.0 (* l_0_8_35 l_0_8_35)))))
 (let ((?x10168 (- (+ ?x10163 (* 1.0 (* l_0_8_36 l_0_8_36))) (* (* 4.0 l_0_8_46) l_0_8_49))))
 (let ((?x10175 (- (- (- ?x10168 ?x5248) (* (* 1.0 l_0_8_49) l_0_8_49)) (* (* 1.0 l_0_8_50) l_0_8_50))))
 (let ((?x10180 (+ (- ?x10175 (* (* 1.0 l_0_8_51) l_0_8_51)) (* (* 4.0 l_0_8_61) l_0_8_64))))
 (let ((?x10187 (+ (+ (+ ?x10180 ?x8967) (* 1.0 (* l_0_8_64 l_0_8_64))) (* 1.0 (* l_0_8_65 l_0_8_65)))))
 (let ((?x10196 (- (- (- (+ ?x10187 (* 1.0 (* l_0_8_66 l_0_8_66))) ?x10191) ?x10193) ?x10195)))
 (= ?x10196 0.0))))))))))))))))))))))
(assert
 (let ((?x9831 (* l_0_8_81 l_0_8_81)))
 (let ((?x9829 (* l_0_8_80 l_0_8_80)))
 (let ((?x9827 (* l_0_8_79 l_0_8_79)))
 (let ((?x10188 (* l_0_8_66 l_0_8_66)))
 (let ((?x10185 (* l_0_8_65 l_0_8_65)))
 (let ((?x10182 (* l_0_8_64 l_0_8_64)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x10250 (* ?x8992 l_0_8_62)))
 (let ((?x6927 (* l_0_8_51 l_0_8_51)))
 (let ((?x6923 (* l_0_8_50 l_0_8_50)))
 (let ((?x6888 (* l_0_8_49 l_0_8_49)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x10241 (* ?x8989 l_0_8_47)))
 (let ((?x10234 (- (* (* 2.0 l_0_8_1) l_0_8_2) (* (* 4.0 l_0_8_17) l_0_8_19))))
 (let ((?x10238 (+ (- ?x10234 (* (* 4.0 l_0_8_18) l_0_8_20)) (* (* 4.0 l_0_8_32) l_0_8_34))))
 (let ((?x10244 (- (- (+ ?x10238 (* (* 4.0 l_0_8_33) l_0_8_35)) ?x10241) (* (* 4.0 l_0_8_47) l_0_8_49))))
 (let ((?x10249 (+ (+ (+ (- ?x10244 (* (* 4.0 l_0_8_48) l_0_8_50)) ?x6888) ?x6923) ?x6927)))
 (let ((?x10255 (+ (+ (+ ?x10249 ?x10250) (* (* 4.0 l_0_8_62) l_0_8_64)) (* (* 4.0 l_0_8_63) l_0_8_65))))
 (= (+ (+ (+ (- (- (- ?x10255 ?x10182) ?x10185) ?x10188) ?x9827) ?x9829) ?x9831) 0.0))))))))))))))))))))
(assert
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9028 (* ?x8992 l_0_8_64)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9024 (* ?x8989 l_0_8_49)))
 (let ((?x2081 (- (* (* 2.0 l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x7009 (- (- ?x2081 (* (* 2.0 l_0_8_20) l_0_8_20)) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (let ((?x10271 (+ (+ ?x7009 (* 2.0 (* l_0_8_34 l_0_8_34))) (* 2.0 (* l_0_8_35 l_0_8_35)))))
 (let ((?x10276 (- (- (+ ?x10271 (* 2.0 (* l_0_8_36 l_0_8_36))) ?x9024) (* (* 2.0 l_0_8_49) l_0_8_49))))
 (let ((?x10280 (- (- ?x10276 (* (* 2.0 l_0_8_50) l_0_8_50)) (* (* 2.0 l_0_8_51) l_0_8_51))))
 (let ((?x10285 (+ (+ (+ ?x10280 ?x9028) (* 2.0 (* l_0_8_64 l_0_8_64))) (* 2.0 (* l_0_8_65 l_0_8_65)))))
 (= (+ ?x10285 (* 2.0 (* l_0_8_66 l_0_8_66))) 0.0))))))))))))
(assert
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x8993 (* ?x8992 l_0_8_71)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x8990 (* ?x8989 l_0_8_56)))
 (let ((?x10164 (* l_0_8_36 l_0_8_36)))
 (let ((?x10161 (* l_0_8_35 l_0_8_35)))
 (let ((?x10158 (* l_0_8_34 l_0_8_34)))
 (let ((?x1908 (* l_0_8_21 l_0_8_21)))
 (let ((?x6885 (* l_0_8_20 l_0_8_20)))
 (let ((?x10210 (* l_0_8_19 l_0_8_19)))
 (let ((?x10302 (- (* (* 2.0 l_0_8_1) l_0_8_11) (* (* 4.0 l_0_8_19) l_0_8_26))))
 (let ((?x10308 (- (+ (- (+ ?x10302 ?x10210) (* (* 4.0 l_0_8_20) l_0_8_27)) ?x6885) (* (* 4.0 l_0_8_21) l_0_8_28))))
 (let ((?x10314 (+ (- (+ (+ ?x10308 ?x1908) (* (* 4.0 l_0_8_34) l_0_8_41)) ?x10158) (* (* 4.0 l_0_8_35) l_0_8_42))))
 (let ((?x10319 (- (- (+ (- ?x10314 ?x10161) (* (* 4.0 l_0_8_36) l_0_8_43)) ?x10164) ?x8990)))
 (let ((?x10323 (- (- ?x10319 (* (* 4.0 l_0_8_49) l_0_8_56)) (* (* 4.0 l_0_8_50) l_0_8_57))))
 (let ((?x10328 (+ (+ (- ?x10323 (* (* 4.0 l_0_8_51) l_0_8_58)) ?x8993) (* (* 4.0 l_0_8_64) l_0_8_71))))
 (let ((?x10332 (+ (+ ?x10328 (* (* 4.0 l_0_8_65) l_0_8_72)) (* (* 4.0 l_0_8_66) l_0_8_73))))
 (= ?x10332 0.0)))))))))))))))))))
(assert
 (let ((?x7159 (* l_0_8_63 l_0_8_63)))
 (let ((?x2313 (* l_0_8_62 l_0_8_62)))
 (let ((?x2329 (* l_0_8_48 l_0_8_48)))
 (let ((?x7208 (* l_0_8_47 l_0_8_47)))
 (let ((?x7154 (+ (- (- (+ (* l_0_8_2 l_0_8_2) (* l_0_8_3 l_0_8_3)) ?x7208) ?x2329) ?x2313)))
 (= (+ ?x7154 ?x7159) 0.0)))))))
(assert
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10366 (* ?x9149 l_0_8_65)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10364 (* ?x9146 l_0_8_64)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10362 (* ?x9142 l_0_8_50)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10360 (* ?x9139 l_0_8_49)))
 (let ((?x9653 (* 2.0 l_0_8_3)))
 (let ((?x9654 (* ?x9653 l_0_8_5)))
 (let ((?x9650 (* 2.0 l_0_8_2)))
 (let ((?x9651 (* ?x9650 l_0_8_4)))
 (= (+ (+ (- (- (+ ?x9651 ?x9654) ?x10360) ?x10362) ?x10364) ?x10366) 0.0))))))))))))))
(assert
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x9150 (* ?x9149 l_0_8_68)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x9147 (* ?x9146 l_0_8_67)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x9143 (* ?x9142 l_0_8_53)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x9140 (* ?x9139 l_0_8_52)))
 (let ((?x9653 (* 2.0 l_0_8_3)))
 (let ((?x9728 (* ?x9653 l_0_8_8)))
 (let ((?x10376 (+ (- (- (+ (* (* 2.0 l_0_8_2) l_0_8_7) ?x9728) ?x9140) ?x9143) ?x9147)))
 (= (+ ?x10376 ?x9150) 0.0)))))))))))))
(assert
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10394 (* ?x9149 l_0_8_72)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10392 (* ?x9146 l_0_8_71)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10390 (* ?x9142 l_0_8_57)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10388 (* ?x9139 l_0_8_56)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x6309 (* ?x6314 l_0_8_3)))
 (let ((?x10393 (+ (- (- (+ (* (* 2.0 l_0_8_11) l_0_8_2) ?x6309) ?x10388) ?x10390) ?x10392)))
 (= (+ ?x10393 ?x10394) 0.0)))))))))))))
(assert
 (let ((?x10188 (* l_0_8_66 l_0_8_66)))
 (let ((?x10185 (* l_0_8_65 l_0_8_65)))
 (let ((?x10182 (* l_0_8_64 l_0_8_64)))
 (let ((?x9815 (* l_0_8_6 l_0_8_6)))
 (let ((?x6927 (* l_0_8_51 l_0_8_51)))
 (let ((?x6923 (* l_0_8_50 l_0_8_50)))
 (let ((?x9807 (* l_0_8_5 l_0_8_5)))
 (let ((?x10411 (- (+ (- (* l_0_8_4 l_0_8_4) (* l_0_8_49 l_0_8_49)) ?x9807) ?x6923)))
 (= (+ (+ (+ (+ (- ?x10411 ?x6927) ?x9815) ?x10182) ?x10185) ?x10188) 0.0))))))))))
(assert
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x9276 (* ?x9275 l_0_8_69)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x9273 (* ?x9272 l_0_8_68)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x9270 (* ?x9269 l_0_8_67)))
 (let ((?x9906 (* (* 2.0 l_0_8_6) l_0_8_9)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x9264 (* ?x9263 l_0_8_54)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x9261 (* ?x9260 l_0_8_53)))
 (let ((?x9895 (* (* 2.0 l_0_8_5) l_0_8_8)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x9258 (* ?x9257 l_0_8_52)))
 (let ((?x9890 (* (* 2.0 l_0_8_4) l_0_8_7)))
 (let ((?x7313 (+ (+ (+ (- (- (+ (- ?x9890 ?x9258) ?x9895) ?x9261) ?x9264) ?x9906) ?x9270) ?x9273)))
 (= (+ ?x7313 ?x9276) 0.0))))))))))))))))))
(assert
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x10440 (* ?x9275 l_0_8_73)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x10438 (* ?x9272 l_0_8_72)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x10436 (* ?x9269 l_0_8_71)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x10434 (* ?x9263 l_0_8_58)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x10432 (* ?x9260 l_0_8_57)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x10430 (* ?x9257 l_0_8_56)))
 (let ((?x9949 (* 2.0 l_0_8_13)))
 (let ((?x9950 (* ?x9949 l_0_8_6)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x9947 (* ?x6314 l_0_8_5)))
 (let ((?x10433 (- (- (+ (+ (* (* 2.0 l_0_8_11) l_0_8_4) ?x9947) ?x9950) ?x10430) ?x10432)))
 (= (+ (+ (+ (- ?x10433 ?x10434) ?x10436) ?x10438) ?x10440) 0.0)))))))))))))))))))
(assert
 (let ((?x10054 (* l_0_8_9 l_0_8_9)))
 (let ((?x10048 (* l_0_8_8 l_0_8_8)))
 (let ((?x9423 (* l_0_8_70 l_0_8_70)))
 (let ((?x10046 (* l_0_8_7 l_0_8_7)))
 (let ((?x9420 (* l_0_8_69 l_0_8_69)))
 (let ((?x9417 (* l_0_8_68 l_0_8_68)))
 (let ((?x9414 (* l_0_8_67 l_0_8_67)))
 (let ((?x5750 (* l_0_8_55 l_0_8_55)))
 (let ((?x5747 (* l_0_8_54 l_0_8_54)))
 (let ((?x5744 (* l_0_8_53 l_0_8_53)))
 (let ((?x10462 (- (- (- (* l_0_8_10 l_0_8_10) (* l_0_8_52 l_0_8_52)) ?x5744) ?x5747)))
 (let ((?x10469 (+ (+ (+ (+ (+ (+ (- ?x10462 ?x5750) ?x9414) ?x9417) ?x9420) ?x10046) ?x9423) ?x10048)))
 (= (+ ?x10469 ?x10054) 0.0))))))))))))))
(assert
 (let ((?x9571 (* (* 2.0 l_0_8_70) l_0_8_74)))
 (let ((?x9568 (* (* 2.0 l_0_8_69) l_0_8_73)))
 (let ((?x9565 (* (* 2.0 l_0_8_68) l_0_8_72)))
 (let ((?x9562 (* (* 2.0 l_0_8_67) l_0_8_71)))
 (let ((?x9558 (* 2.0 l_0_8_55)))
 (let ((?x9559 (* ?x9558 l_0_8_59)))
 (let ((?x9555 (* 2.0 l_0_8_54)))
 (let ((?x9556 (* ?x9555 l_0_8_58)))
 (let ((?x9552 (* 2.0 l_0_8_53)))
 (let ((?x9553 (* ?x9552 l_0_8_57)))
 (let ((?x9549 (* 2.0 l_0_8_52)))
 (let ((?x9550 (* ?x9549 l_0_8_56)))
 (let ((?x9949 (* 2.0 l_0_8_13)))
 (let ((?x6097 (* ?x9949 l_0_8_9)))
 (let ((?x6314 (* 2.0 l_0_8_12)))
 (let ((?x1634 (* ?x6314 l_0_8_8)))
 (let ((?x1636 (* 2.0 l_0_8_11)))
 (let ((?x1630 (* ?x1636 l_0_8_7)))
 (let ((?x10475 (- (+ (+ (+ (* (* 2.0 l_0_8_10) l_0_8_14) ?x1630) ?x1634) ?x6097) ?x9550)))
 (let ((?x10482 (+ (+ (+ (+ (- (- (- ?x10475 ?x9553) ?x9556) ?x9559) ?x9562) ?x9565) ?x9568) ?x9571)))
 (= ?x10482 0.0))))))))))))))))))))))
(assert
 (let ((?x10508 (* l_0_8_75 l_0_8_75)))
 (let ((?x10506 (* l_0_8_74 l_0_8_74)))
 (let ((?x10504 (* l_0_8_73 l_0_8_73)))
 (let ((?x10502 (* l_0_8_72 l_0_8_72)))
 (let ((?x10500 (* l_0_8_71 l_0_8_71)))
 (let ((?x10498 (* l_0_8_60 l_0_8_60)))
 (let ((?x10496 (* l_0_8_59 l_0_8_59)))
 (let ((?x10494 (* l_0_8_58 l_0_8_58)))
 (let ((?x10492 (* l_0_8_57 l_0_8_57)))
 (let ((?x10490 (* l_0_8_56 l_0_8_56)))
 (let ((?x10098 (* l_0_8_15 l_0_8_15)))
 (let ((?x10096 (* l_0_8_14 l_0_8_14)))
 (let ((?x10094 (* l_0_8_13 l_0_8_13)))
 (let ((?x7417 (+ (+ (+ (* l_0_8_11 l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x10094) ?x10096)))
 (let ((?x10501 (+ (- (- (- (- (- (+ ?x7417 ?x10098) ?x10490) ?x10492) ?x10494) ?x10496) ?x10498) ?x10500)))
 (= (+ (+ (+ (+ ?x10501 ?x10502) ?x10504) ?x10506) ?x10508) 0.0)))))))))))))))))
(assert
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9278 (* ?x9152 l_0_8_79)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10366 (* ?x9149 l_0_8_65)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10364 (* ?x9146 l_0_8_64)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x9028 (* ?x8992 l_0_8_64)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10362 (* ?x9142 l_0_8_50)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10360 (* ?x9139 l_0_8_49)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x9024 (* ?x8989 l_0_8_49)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x10538 (* ?x9135 l_0_8_35)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x10536 (* ?x9132 l_0_8_34)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x10532 (* ?x9129 l_0_8_20)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x10530 (* ?x9126 l_0_8_19)))
 (let ((?x10523 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x10527 (- (- ?x10523 (* (* 2.0 l_0_8_122) l_0_8_124)) (* (* 2.0 l_0_8_123) l_0_8_125))))
 (let ((?x10535 (+ (- (- (- ?x10527 (* (* 4.0 l_0_8_16) l_0_8_17)) ?x10530) ?x10532) (* (* 4.0 l_0_8_31) l_0_8_32))))
 (let ((?x10542 (+ (- (+ (+ ?x10535 ?x10536) ?x10538) (* (* 4.0 l_0_8_46) l_0_8_47)) ?x9024)))
 (let ((?x10547 (- (+ (- (- ?x10542 ?x10360) ?x10362) (* (* 4.0 l_0_8_61) l_0_8_62)) ?x9028)))
 (let ((?x10552 (- (+ (+ (+ ?x10547 ?x10364) ?x10366) ?x9278) (* (* 2.0 l_0_8_92) l_0_8_94))))
 (= (- ?x10552 (* (* 2.0 l_0_8_93) l_0_8_95)) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x10440 (* ?x9275 l_0_8_73)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x10438 (* ?x9272 l_0_8_72)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x10436 (* ?x9269 l_0_8_71)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x10434 (* ?x9263 l_0_8_58)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x10432 (* ?x9260 l_0_8_57)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x10430 (* ?x9257 l_0_8_56)))
 (let ((?x9251 (* 2.0 l_0_8_36)))
 (let ((?x10621 (* ?x9251 l_0_8_43)))
 (let ((?x9248 (* 2.0 l_0_8_35)))
 (let ((?x10619 (* ?x9248 l_0_8_42)))
 (let ((?x9245 (* 2.0 l_0_8_34)))
 (let ((?x10617 (* ?x9245 l_0_8_41)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x9020 (* ?x8985 l_0_8_34)))
 (let ((?x9239 (* 2.0 l_0_8_21)))
 (let ((?x10612 (* ?x9239 l_0_8_28)))
 (let ((?x9236 (* 2.0 l_0_8_20)))
 (let ((?x10610 (* ?x9236 l_0_8_27)))
 (let ((?x9233 (* 2.0 l_0_8_19)))
 (let ((?x10608 (* ?x9233 l_0_8_26)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x9016 (* ?x5291 l_0_8_19)))
 (let ((?x10590 (- (* (* (- 2.0) l_0_8_101) l_0_8_94) (* (* 2.0 l_0_8_102) l_0_8_95))))
 (let ((?x10594 (- (- ?x10590 (* (* 2.0 l_0_8_103) l_0_8_96)) (* (* 2.0 l_0_8_109) l_0_8_116))))
 (let ((?x10598 (- (- ?x10594 (* (* 2.0 l_0_8_110) l_0_8_117)) (* (* 2.0 l_0_8_111) l_0_8_118))))
 (let ((?x10602 (- (- ?x10598 (* (* 2.0 l_0_8_124) l_0_8_131)) (* (* 2.0 l_0_8_125) l_0_8_132))))
 (let ((?x10607 (- (+ (- ?x10602 (* (* 2.0 l_0_8_126) l_0_8_133)) ?x9016) (* (* 4.0 l_0_8_16) l_0_8_26))))
 (let ((?x10616 (+ (- (- (- (- ?x10607 ?x10608) ?x10610) ?x10612) ?x9020) (* (* 4.0 l_0_8_31) l_0_8_41))))
 (let ((?x10624 (- (+ (+ (+ ?x10616 ?x10617) ?x10619) ?x10621) (* (* 4.0 l_0_8_46) l_0_8_56))))
 (let ((?x10629 (+ (- (- (- ?x10624 ?x10430) ?x10432) ?x10434) (* (* 4.0 l_0_8_61) l_0_8_71))))
 (= (+ (+ (+ ?x10629 ?x10436) ?x10438) ?x10440) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9682 (* ?x9631 l_0_8_80)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9680 (* ?x9626 l_0_8_79)))
 (let ((?x7159 (* l_0_8_63 l_0_8_63)))
 (let ((?x10690 (* 2.0 ?x7159)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10366 (* ?x9149 l_0_8_65)))
 (let ((?x2313 (* l_0_8_62 l_0_8_62)))
 (let ((?x10687 (* 2.0 ?x2313)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10364 (* ?x9146 l_0_8_64)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10362 (* ?x9142 l_0_8_50)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10360 (* ?x9139 l_0_8_49)))
 (let ((?x10677 (* l_0_8_33 l_0_8_33)))
 (let ((?x10678 (* 2.0 ?x10677)))
 (let ((?x10674 (* l_0_8_32 l_0_8_32)))
 (let ((?x10675 (* 2.0 ?x10674)))
 (let ((?x10673 (- (* (* (- 2.0) l_0_8_17) l_0_8_17) (* (* 2.0 l_0_8_18) l_0_8_18))))
 (let ((?x10685 (- (+ (- (+ (+ (+ ?x10673 ?x10675) ?x10678) ?x10360) (* ?x9139 l_0_8_47)) ?x10362) (* ?x9142 l_0_8_48))))
 (= (+ (+ (+ (- (+ (- ?x10685 ?x10364) ?x10687) ?x10366) ?x10690) ?x9680) ?x9682) 0.0))))))))))))))))))))))))
(assert
 (let ((?x9690 (* 2.0 l_0_8_81)))
 (let ((?x10010 (* ?x9690 l_0_8_88)))
 (let ((?x9687 (* 2.0 l_0_8_80)))
 (let ((?x10008 (* ?x9687 l_0_8_87)))
 (let ((?x9684 (* 2.0 l_0_8_79)))
 (let ((?x10006 (* ?x9684 l_0_8_86)))
 (let ((?x9275 (* 2.0 l_0_8_66)))
 (let ((?x10440 (* ?x9275 l_0_8_73)))
 (let ((?x9272 (* 2.0 l_0_8_65)))
 (let ((?x10438 (* ?x9272 l_0_8_72)))
 (let ((?x9269 (* 2.0 l_0_8_64)))
 (let ((?x10436 (* ?x9269 l_0_8_71)))
 (let ((?x9263 (* 2.0 l_0_8_51)))
 (let ((?x10434 (* ?x9263 l_0_8_58)))
 (let ((?x9260 (* 2.0 l_0_8_50)))
 (let ((?x10432 (* ?x9260 l_0_8_57)))
 (let ((?x9257 (* 2.0 l_0_8_49)))
 (let ((?x10430 (* ?x9257 l_0_8_56)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x10538 (* ?x9135 l_0_8_35)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x10536 (* ?x9132 l_0_8_34)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x10532 (* ?x9129 l_0_8_20)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x10530 (* ?x9126 l_0_8_19)))
 (let ((?x10719 (- (+ (- ?x10530 (* (* 4.0 l_0_8_17) l_0_8_26)) ?x10532) (* (* 4.0 l_0_8_18) l_0_8_27))))
 (let ((?x10725 (+ (- (+ (- ?x10719 ?x10536) (* (* 4.0 l_0_8_32) l_0_8_41)) ?x10538) (* (* 4.0 l_0_8_33) l_0_8_42))))
 (let ((?x10729 (- (- ?x10725 (* (* 4.0 l_0_8_47) l_0_8_56)) (* (* 4.0 l_0_8_48) l_0_8_57))))
 (let ((?x10734 (+ (+ (+ (+ ?x10729 ?x10430) ?x10432) ?x10434) (* (* 4.0 l_0_8_62) l_0_8_71))))
 (let ((?x10739 (- (- (- (+ ?x10734 (* (* 4.0 l_0_8_63) l_0_8_72)) ?x10436) ?x10438) ?x10440)))
 (= (+ (+ (+ ?x10739 ?x10006) ?x10008) ?x10010) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x10508 (* l_0_8_75 l_0_8_75)))
 (let ((?x10837 (* 2.0 ?x10508)))
 (let ((?x10506 (* l_0_8_74 l_0_8_74)))
 (let ((?x10835 (* 2.0 ?x10506)))
 (let ((?x10504 (* l_0_8_73 l_0_8_73)))
 (let ((?x10833 (* 2.0 ?x10504)))
 (let ((?x10502 (* l_0_8_72 l_0_8_72)))
 (let ((?x10831 (* 2.0 ?x10502)))
 (let ((?x10500 (* l_0_8_71 l_0_8_71)))
 (let ((?x10829 (* 2.0 ?x10500)))
 (let ((?x10811 (* l_0_8_45 l_0_8_45)))
 (let ((?x10812 (* 2.0 ?x10811)))
 (let ((?x10808 (* l_0_8_44 l_0_8_44)))
 (let ((?x10809 (* 2.0 ?x10808)))
 (let ((?x10805 (* l_0_8_43 l_0_8_43)))
 (let ((?x10806 (* 2.0 ?x10805)))
 (let ((?x10802 (* l_0_8_42 l_0_8_42)))
 (let ((?x10803 (* 2.0 ?x10802)))
 (let ((?x10799 (* l_0_8_41 l_0_8_41)))
 (let ((?x10800 (* 2.0 ?x10799)))
 (let ((?x9251 (* 2.0 l_0_8_36)))
 (let ((?x10621 (* ?x9251 l_0_8_43)))
 (let ((?x9248 (* 2.0 l_0_8_35)))
 (let ((?x10619 (* ?x9248 l_0_8_42)))
 (let ((?x9245 (* 2.0 l_0_8_34)))
 (let ((?x10617 (* ?x9245 l_0_8_41)))
 (let ((?x9239 (* 2.0 l_0_8_21)))
 (let ((?x10612 (* ?x9239 l_0_8_28)))
 (let ((?x9236 (* 2.0 l_0_8_20)))
 (let ((?x10610 (* ?x9236 l_0_8_27)))
 (let ((?x9233 (* 2.0 l_0_8_19)))
 (let ((?x10608 (* ?x9233 l_0_8_26)))
 (let ((?x10786 (- (- (+ (+ ?x10608 ?x10610) ?x10612) (* (* 2.0 l_0_8_26) l_0_8_26)) (* (* 2.0 l_0_8_27) l_0_8_27))))
 (let ((?x10792 (- (- ?x10786 (* (* 2.0 l_0_8_28) l_0_8_28)) (* (* 2.0 l_0_8_29) l_0_8_29))))
 (let ((?x10798 (- (- (- (- ?x10792 (* (* 2.0 l_0_8_30) l_0_8_30)) ?x10617) ?x10619) ?x10621)))
 (let ((?x10816 (- (+ (+ (+ (+ (+ ?x10798 ?x10800) ?x10803) ?x10806) ?x10809) ?x10812) (* (* 2.0 l_0_8_56) l_0_8_56))))
 (let ((?x10822 (- (- ?x10816 (* (* 2.0 l_0_8_57) l_0_8_57)) (* (* 2.0 l_0_8_58) l_0_8_58))))
 (let ((?x10828 (- (- ?x10822 (* (* 2.0 l_0_8_59) l_0_8_59)) (* (* 2.0 l_0_8_60) l_0_8_60))))
 (= (+ (+ (+ (+ (+ ?x10828 ?x10829) ?x10831) ?x10833) ?x10835) ?x10837) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x9083 (* l_0_8_76 l_0_8_76)))
 (let ((?x8967 (* l_0_8_61 l_0_8_61)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x10250 (* ?x8992 l_0_8_62)))
 (let ((?x5248 (* l_0_8_46 l_0_8_46)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x10241 (* ?x8989 l_0_8_47)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x3048 (* ?x8985 l_0_8_32)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x7757 (* ?x5291 l_0_8_17)))
 (let ((?x3093 (- (* (* (- 2.0) l_0_8_106) l_0_8_107) (* (* 2.0 l_0_8_121) l_0_8_122))))
 (let ((?x10848 (+ (- (+ (+ (- (+ (- ?x3093 ?x7757) ?x3048) ?x10241) ?x5248) ?x10250) ?x8967) ?x9083)))
 (= (- ?x10848 (* (* 2.0 l_0_8_91) l_0_8_92)) 0.0)))))))))))))))
(assert
 (let ((?x10896 (* l_0_8_93 l_0_8_93)))
 (let ((?x10894 (* l_0_8_92 l_0_8_92)))
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9153 (* ?x9152 l_0_8_77)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x10250 (* ?x8992 l_0_8_62)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x10241 (* ?x8989 l_0_8_47)))
 (let ((?x10869 (* l_0_8_123 l_0_8_123)))
 (let ((?x10867 (* l_0_8_122 l_0_8_122)))
 (let ((?x10868 (- (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) ?x10867)))
 (let ((?x10876 (- (- (- ?x10868 ?x10869) (* (* 1.0 l_0_8_17) l_0_8_17)) (* (* 1.0 l_0_8_18) l_0_8_18))))
 (let ((?x10880 (+ (+ ?x10876 (* 1.0 (* l_0_8_32 l_0_8_32))) (* 1.0 (* l_0_8_33 l_0_8_33)))))
 (let ((?x10887 (- (- (+ ?x10880 ?x10241) (* (* 1.0 l_0_8_47) l_0_8_47)) (* (* 1.0 l_0_8_48) l_0_8_48))))
 (let ((?x10892 (+ (+ (- ?x10887 ?x10250) (* 1.0 (* l_0_8_62 l_0_8_62))) (* 1.0 (* l_0_8_63 l_0_8_63)))))
 (= (- (- (+ ?x10892 ?x9153) ?x10894) ?x10896) 0.0)))))))))))))))))
(assert
 (let ((?x9152 (* 2.0 l_0_8_76)))
 (let ((?x9573 (* ?x9152 l_0_8_86)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10394 (* ?x9149 l_0_8_72)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10392 (* ?x9146 l_0_8_71)))
 (let ((?x8992 (* 2.0 l_0_8_61)))
 (let ((?x8993 (* ?x8992 l_0_8_71)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10390 (* ?x9142 l_0_8_57)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10388 (* ?x9139 l_0_8_56)))
 (let ((?x8989 (* 2.0 l_0_8_46)))
 (let ((?x8990 (* ?x8989 l_0_8_56)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x10932 (* ?x9135 l_0_8_42)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x10930 (* ?x9132 l_0_8_41)))
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x3048 (* ?x8985 l_0_8_32)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x10927 (* ?x9129 l_0_8_27)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x10925 (* ?x9126 l_0_8_26)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x7757 (* ?x5291 l_0_8_17)))
 (let ((?x10915 (- (* (* (- 2.0) l_0_8_101) l_0_8_92) (* (* 2.0 l_0_8_102) l_0_8_93))))
 (let ((?x10919 (- (- ?x10915 (* (* 2.0 l_0_8_107) l_0_8_116)) (* (* 2.0 l_0_8_108) l_0_8_117))))
 (let ((?x10923 (- (- ?x10919 (* (* 2.0 l_0_8_122) l_0_8_131)) (* (* 2.0 l_0_8_123) l_0_8_132))))
 (let ((?x10934 (+ (+ (+ (- (- (- (+ ?x10923 ?x7757) ?x10925) ?x10927) ?x3048) ?x10930) ?x10932) ?x8990)))
 (= (+ (+ (+ (- (- (- ?x10934 ?x10388) ?x10390) ?x8993) ?x10392) ?x10394) ?x9573) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x8985 (* 2.0 l_0_8_31)))
 (let ((?x8986 (* ?x8985 l_0_8_41)))
 (let ((?x5291 (* 2.0 l_0_8_16)))
 (let ((?x8982 (* ?x5291 l_0_8_26)))
 (let ((?x10993 (* l_0_8_135 l_0_8_135)))
 (let ((?x10991 (* l_0_8_134 l_0_8_134)))
 (let ((?x10989 (* l_0_8_133 l_0_8_133)))
 (let ((?x10987 (* l_0_8_132 l_0_8_132)))
 (let ((?x10985 (* l_0_8_131 l_0_8_131)))
 (let ((?x10983 (* l_0_8_120 l_0_8_120)))
 (let ((?x10981 (* l_0_8_119 l_0_8_119)))
 (let ((?x10979 (* l_0_8_118 l_0_8_118)))
 (let ((?x10977 (* l_0_8_117 l_0_8_117)))
 (let ((?x10975 (* l_0_8_116 l_0_8_116)))
 (let ((?x10973 (* l_0_8_105 l_0_8_105)))
 (let ((?x10971 (* l_0_8_104 l_0_8_104)))
 (let ((?x10969 (* l_0_8_103 l_0_8_103)))
 (let ((?x10970 (- (- (* (- l_0_8_101) l_0_8_101) (* l_0_8_102 l_0_8_102)) ?x10969)))
 (let ((?x10984 (- (- (- (- (- (- (- ?x10970 ?x10971) ?x10973) ?x10975) ?x10977) ?x10979) ?x10981) ?x10983)))
 (let ((?x10998 (- (+ (- (- (- (- (- ?x10984 ?x10985) ?x10987) ?x10989) ?x10991) ?x10993) ?x8982) (* (* 1.0 l_0_8_26) l_0_8_26))))
 (let ((?x11004 (- (- ?x10998 (* (* 1.0 l_0_8_27) l_0_8_27)) (* (* 1.0 l_0_8_28) l_0_8_28))))
 (let ((?x11010 (- (- ?x11004 (* (* 1.0 l_0_8_29) l_0_8_29)) (* (* 1.0 l_0_8_30) l_0_8_30))))
 (let ((?x11015 (+ (+ (- ?x11010 ?x8986) (* 1.0 (* l_0_8_41 l_0_8_41))) (* 1.0 (* l_0_8_42 l_0_8_42)))))
 (let ((?x11019 (+ (+ ?x11015 (* 1.0 (* l_0_8_43 l_0_8_43))) (* 1.0 (* l_0_8_44 l_0_8_44)))))
 (let ((?x11024 (- (+ ?x11019 (* 1.0 (* l_0_8_45 l_0_8_45))) (* (* 1.0 l_0_8_56) l_0_8_56))))
 (let ((?x11030 (- (- ?x11024 (* (* 1.0 l_0_8_57) l_0_8_57)) (* (* 1.0 l_0_8_58) l_0_8_58))))
 (let ((?x11036 (- (- ?x11030 (* (* 1.0 l_0_8_59) l_0_8_59)) (* (* 1.0 l_0_8_60) l_0_8_60))))
 (let ((?x11040 (+ (+ ?x11036 (* 1.0 (* l_0_8_71 l_0_8_71))) (* 1.0 (* l_0_8_72 l_0_8_72)))))
 (let ((?x11044 (+ (+ ?x11040 (* 1.0 (* l_0_8_73 l_0_8_73))) (* 1.0 (* l_0_8_74 l_0_8_74)))))
 (= (+ ?x11044 (* 1.0 (* l_0_8_75 l_0_8_75))) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x9631 (* 2.0 l_0_8_78)))
 (let ((?x9775 (* ?x9631 l_0_8_87)))
 (let ((?x9626 (* 2.0 l_0_8_77)))
 (let ((?x9773 (* ?x9626 l_0_8_86)))
 (let ((?x9149 (* 2.0 l_0_8_63)))
 (let ((?x10394 (* ?x9149 l_0_8_72)))
 (let ((?x9146 (* 2.0 l_0_8_62)))
 (let ((?x10392 (* ?x9146 l_0_8_71)))
 (let ((?x9142 (* 2.0 l_0_8_48)))
 (let ((?x10390 (* ?x9142 l_0_8_57)))
 (let ((?x9139 (* 2.0 l_0_8_47)))
 (let ((?x10388 (* ?x9139 l_0_8_56)))
 (let ((?x10677 (* l_0_8_33 l_0_8_33)))
 (let ((?x10674 (* l_0_8_32 l_0_8_32)))
 (let ((?x11084 (- (- (+ (* l_0_8_17 l_0_8_17) (* l_0_8_18 l_0_8_18)) ?x10674) ?x10677)))
 (= (+ (+ (- (- (+ (+ ?x11084 ?x10388) ?x10390) ?x10392) ?x10394) ?x9773) ?x9775) 0.0)))))))))))))))))
(assert
 (let ((?x10116 (* l_0_8_90 l_0_8_90)))
 (let ((?x10114 (* l_0_8_89 l_0_8_89)))
 (let ((?x10112 (* l_0_8_88 l_0_8_88)))
 (let ((?x10110 (* l_0_8_87 l_0_8_87)))
 (let ((?x10108 (* l_0_8_86 l_0_8_86)))
 (let ((?x10508 (* l_0_8_75 l_0_8_75)))
 (let ((?x10506 (* l_0_8_74 l_0_8_74)))
 (let ((?x10504 (* l_0_8_73 l_0_8_73)))
 (let ((?x10502 (* l_0_8_72 l_0_8_72)))
 (let ((?x10500 (* l_0_8_71 l_0_8_71)))
 (let ((?x10498 (* l_0_8_60 l_0_8_60)))
 (let ((?x10496 (* l_0_8_59 l_0_8_59)))
 (let ((?x10494 (* l_0_8_58 l_0_8_58)))
 (let ((?x10492 (* l_0_8_57 l_0_8_57)))
 (let ((?x10490 (* l_0_8_56 l_0_8_56)))
 (let ((?x9135 (* 2.0 l_0_8_33)))
 (let ((?x10932 (* ?x9135 l_0_8_42)))
 (let ((?x9132 (* 2.0 l_0_8_32)))
 (let ((?x10930 (* ?x9132 l_0_8_41)))
 (let ((?x9129 (* 2.0 l_0_8_18)))
 (let ((?x10927 (* ?x9129 l_0_8_27)))
 (let ((?x9126 (* 2.0 l_0_8_17)))
 (let ((?x10925 (* ?x9126 l_0_8_26)))
 (let ((?x11111 (+ (+ (+ (+ (- (- (+ ?x10925 ?x10927) ?x10930) ?x10932) ?x10490) ?x10492) ?x10494) ?x10496)))
 (let ((?x11118 (+ (- (- (- (- (- (+ ?x11111 ?x10498) ?x10500) ?x10502) ?x10504) ?x10506) ?x10508) ?x10108)))
 (= (+ (+ (+ (+ ?x11118 ?x10110) ?x10112) ?x10114) ?x10116) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10811 (* l_0_8_45 l_0_8_45)))
 (let ((?x10808 (* l_0_8_44 l_0_8_44)))
 (let ((?x10805 (* l_0_8_43 l_0_8_43)))
 (let ((?x10802 (* l_0_8_42 l_0_8_42)))
 (let ((?x10799 (* l_0_8_41 l_0_8_41)))
 (let ((?x7700 (* l_0_8_30 l_0_8_30)))
 (let ((?x3051 (* l_0_8_29 l_0_8_29)))
 (let ((?x7686 (* l_0_8_28 l_0_8_28)))
 (let ((?x11132 (+ (+ (+ (* l_0_8_26 l_0_8_26) (* l_0_8_27 l_0_8_27)) ?x7686) ?x3051)))
 (= (- (- (- (- (- (+ ?x11132 ?x7700) ?x10799) ?x10802) ?x10805) ?x10808) ?x10811) 0.0)))))))))))
(assert
 (let ((?x9634 (* l_0_8_78 l_0_8_78)))
 (let ((?x9629 (* l_0_8_77 l_0_8_77)))
 (let ((?x7159 (* l_0_8_63 l_0_8_63)))
 (let ((?x2313 (* l_0_8_62 l_0_8_62)))
 (let ((?x11149 (- (- (+ (* l_0_8_47 l_0_8_47) (* l_0_8_48 l_0_8_48)) ?x2313) ?x7159)))
 (= (+ (+ ?x11149 ?x9629) ?x9634) 0.0)))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (>= l_0_8_121 0.0))
(assert
 (>= l_0_8_123 0.0))
(assert
 (>= l_0_8_126 0.0))
(assert
 (>= l_0_8_130 0.0))
(assert
 (>= l_0_8_135 0.0))
(assert
 (let ((?x11280 (* l_0_9_96 l_0_9_96)))
 (let ((?x11278 (* l_0_9_95 l_0_9_95)))
 (let ((?x11276 (* l_0_9_94 l_0_9_94)))
 (let ((?x11265 (* l_0_9_61 l_0_9_61)))
 (let ((?x11251 (* l_0_9_46 l_0_9_46)))
 (let ((?x11222 (* l_0_9_141 l_0_9_141)))
 (let ((?x11220 (* l_0_9_140 l_0_9_140)))
 (let ((?x11218 (* l_0_9_139 l_0_9_139)))
 (let ((?x11216 (* l_0_9_126 l_0_9_126)))
 (let ((?x11214 (* l_0_9_125 l_0_9_125)))
 (let ((?x11212 (* l_0_9_124 l_0_9_124)))
 (let ((?x11210 (* l_0_9_111 l_0_9_111)))
 (let ((?x11208 (* l_0_9_110 l_0_9_110)))
 (let ((?x11211 (- (- (- (* l_0_9_1 l_0_9_1) (* l_0_9_109 l_0_9_109)) ?x11208) ?x11210)))
 (let ((?x11226 (- (- (- (- (- (- (- ?x11211 ?x11212) ?x11214) ?x11216) ?x11218) ?x11220) ?x11222) (* (* 4.0 l_0_9_16) l_0_9_19))))
 (let ((?x11232 (- (- ?x11226 (* (* 1.0 l_0_9_19) l_0_9_19)) (* (* 1.0 l_0_9_20) l_0_9_20))))
 (let ((?x11238 (+ (- ?x11232 (* (* 1.0 l_0_9_21) l_0_9_21)) (* (* 4.0 l_0_9_31) l_0_9_34))))
 (let ((?x11244 (+ (+ ?x11238 (* 1.0 (* l_0_9_34 l_0_9_34))) (* 1.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x11250 (- (+ ?x11244 (* 1.0 (* l_0_9_36 l_0_9_36))) (* (* 4.0 l_0_9_46) l_0_9_49))))
 (let ((?x11258 (- (- (- ?x11250 ?x11251) (* (* 1.0 l_0_9_49) l_0_9_49)) (* (* 1.0 l_0_9_50) l_0_9_50))))
 (let ((?x11264 (+ (- ?x11258 (* (* 1.0 l_0_9_51) l_0_9_51)) (* (* 4.0 l_0_9_61) l_0_9_64))))
 (let ((?x11272 (+ (+ (+ ?x11264 ?x11265) (* 1.0 (* l_0_9_64 l_0_9_64))) (* 1.0 (* l_0_9_65 l_0_9_65)))))
 (let ((?x11281 (- (- (- (+ ?x11272 (* 1.0 (* l_0_9_66 l_0_9_66))) ?x11276) ?x11278) ?x11280)))
 (= (+ ?x11281 1.0) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11354 (* ?x11353 l_0_9_64)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11349 (* ?x11348 l_0_9_49)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11343 (* ?x11342 l_0_9_34)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11338 (* ?x11337 l_0_9_19)))
 (let ((?x11333 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x11341 (- (- (- ?x11333 (* (* 2.0 l_0_9_136) l_0_9_139)) ?x11338) (* ?x11337 l_0_9_16))))
 (let ((?x11352 (- (- (+ (+ ?x11341 ?x11343) (* 2.0 (* l_0_9_31 l_0_9_31))) ?x11349) (* ?x11348 l_0_9_46))))
 (let ((?x11360 (- (+ (+ ?x11352 ?x11354) (* 2.0 (* l_0_9_61 l_0_9_61))) (* (* 2.0 l_0_9_91) l_0_9_94))))
 (= (+ ?x11360 4.0) 0.0))))))))))))))
(assert
 (let ((?x11399 (* l_0_9_91 l_0_9_91)))
 (let ((?x11387 (* l_0_9_136 l_0_9_136)))
 (let ((?x11385 (* l_0_9_121 l_0_9_121)))
 (let ((?x11386 (- (- (- (* (- _a_0_) _a_3_) _a_2_) (* l_0_9_106 l_0_9_106)) ?x11385)))
 (let ((?x11393 (+ (- (- ?x11386 ?x11387) (* (* 1.0 l_0_9_16) l_0_9_16)) (* 1.0 (* l_0_9_31 l_0_9_31)))))
 (let ((?x11398 (+ (- ?x11393 (* (* 1.0 l_0_9_46) l_0_9_46)) (* 1.0 (* l_0_9_61 l_0_9_61)))))
 (= (+ (- ?x11398 ?x11399) 4.0) 0.0))))))))
(assert
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11429 (* ?x11353 l_0_9_71)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11427 (* ?x11348 l_0_9_56)))
 (let ((?x11345 (* l_0_9_31 l_0_9_31)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11424 (* ?x11342 l_0_9_41)))
 (let ((?x3754 (* l_0_9_16 l_0_9_16)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11421 (* ?x11337 l_0_9_26)))
 (let ((?x11416 (- (- (* (- _a_1_) _a_3_) (* (* 2.0 l_0_9_101) l_0_9_91)) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x11420 (- (- ?x11416 (* (* 2.0 l_0_9_121) l_0_9_131)) (* (* 2.0 l_0_9_136) l_0_9_146))))
 (= (+ (- (- (+ (+ (- ?x11420 ?x11421) ?x3754) ?x11424) ?x11345) ?x11427) ?x11429) 0.0))))))))))))))
(assert
 (let ((?x11462 (* l_0_9_76 l_0_9_76)))
 (let ((?x11265 (* l_0_9_61 l_0_9_61)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11459 (* ?x11353 l_0_9_62)))
 (let ((?x11251 (* l_0_9_46 l_0_9_46)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11456 (* ?x11348 l_0_9_47)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11454 (* ?x11342 l_0_9_32)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11452 (* ?x11337 l_0_9_17)))
 (let ((?x11449 (- (- (- _a_4_) (* (* 2.0 l_0_9_106) l_0_9_107)) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x11457 (- (+ (- (- ?x11449 (* (* 2.0 l_0_9_136) l_0_9_137)) ?x11452) ?x11454) ?x11456)))
 (let ((?x11465 (- (+ (- (+ (+ ?x11457 ?x11251) ?x11459) ?x11265) ?x11462) (* (* 2.0 l_0_9_91) l_0_9_92))))
 (= ?x11465 0.0))))))))))))))))
(assert
 (let ((?x11462 (* l_0_9_76 l_0_9_76)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11513 (* ?x11353 l_0_9_67)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11511 (* ?x11348 l_0_9_52)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11509 (* ?x11342 l_0_9_37)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11507 (* ?x11337 l_0_9_22)))
 (let ((?x11504 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_106) l_0_9_112)) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x11512 (- (+ (- (- ?x11504 (* (* 2.0 l_0_9_136) l_0_9_142)) ?x11507) ?x11509) ?x11511)))
 (= (- (- (+ ?x11512 ?x11513) ?x11462) (* (* 2.0 l_0_9_91) l_0_9_97)) 0.0)))))))))))))
(assert
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x11590 (* ?x11587 l_0_9_82)))
 (let ((?x11588 (* ?x11587 l_0_9_77)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x11585 (* ?x11584 l_0_9_68)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x11582 (* ?x11581 l_0_9_67)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11513 (* ?x11353 l_0_9_67)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x11578 (* ?x11577 l_0_9_53)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x11575 (* ?x11574 l_0_9_52)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11511 (* ?x11348 l_0_9_52)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x11571 (* ?x11570 l_0_9_38)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x11568 (* ?x11567 l_0_9_37)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x11565 (* ?x11564 l_0_9_23)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x11562 (* ?x11561 l_0_9_22)))
 (let ((?x11545 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_107) l_0_9_112))))
 (let ((?x11551 (- (- ?x11545 (* (* 2.0 l_0_9_108) l_0_9_113)) (* (* 2.0 l_0_9_122) l_0_9_127))))
 (let ((?x11557 (- (- ?x11551 (* (* 2.0 l_0_9_123) l_0_9_128)) (* (* 2.0 l_0_9_137) l_0_9_142))))
 (let ((?x11569 (+ (- (- (- ?x11557 (* (* 2.0 l_0_9_138) l_0_9_143)) ?x11562) ?x11565) ?x11568)))
 (let ((?x11586 (+ (+ (- (- (- (+ (+ ?x11569 ?x11571) ?x11511) ?x11575) ?x11578) ?x11513) ?x11582) ?x11585)))
 (let ((?x11597 (- (- (+ (- ?x11586 ?x11588) ?x11590) (* (* 2.0 l_0_9_92) l_0_9_97)) (* (* 2.0 l_0_9_93) l_0_9_98))))
 (= ?x11597 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x11721 (* ?x11587 l_0_9_79)))
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x11719 (* ?x11718 l_0_9_69)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x11716 (* ?x11715 l_0_9_68)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x11713 (* ?x11712 l_0_9_67)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x11708 (* ?x11707 l_0_9_54)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x11705 (* ?x11704 l_0_9_53)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x11702 (* ?x11701 l_0_9_52)))
 (let ((?x11696 (* 2.0 l_0_9_36)))
 (let ((?x11697 (* ?x11696 l_0_9_39)))
 (let ((?x11693 (* 2.0 l_0_9_35)))
 (let ((?x11694 (* ?x11693 l_0_9_38)))
 (let ((?x11690 (* 2.0 l_0_9_34)))
 (let ((?x11691 (* ?x11690 l_0_9_37)))
 (let ((?x11685 (* 2.0 l_0_9_21)))
 (let ((?x11686 (* ?x11685 l_0_9_24)))
 (let ((?x11682 (* 2.0 l_0_9_20)))
 (let ((?x11683 (* ?x11682 l_0_9_23)))
 (let ((?x11679 (* 2.0 l_0_9_19)))
 (let ((?x11680 (* ?x11679 l_0_9_22)))
 (let ((?x11652 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_109) l_0_9_112))))
 (let ((?x11658 (- (- ?x11652 (* (* 2.0 l_0_9_110) l_0_9_113)) (* (* 2.0 l_0_9_111) l_0_9_114))))
 (let ((?x11664 (- (- ?x11658 (* (* 2.0 l_0_9_124) l_0_9_127)) (* (* 2.0 l_0_9_125) l_0_9_128))))
 (let ((?x11670 (- (- ?x11664 (* (* 2.0 l_0_9_126) l_0_9_129)) (* (* 2.0 l_0_9_139) l_0_9_142))))
 (let ((?x11676 (- (- ?x11670 (* (* 2.0 l_0_9_140) l_0_9_143)) (* (* 2.0 l_0_9_141) l_0_9_144))))
 (let ((?x11687 (- (- (- (- ?x11676 (* (* 4.0 l_0_9_16) l_0_9_22)) ?x11680) ?x11683) ?x11686)))
 (let ((?x11698 (+ (+ (+ (+ ?x11687 (* (* 4.0 l_0_9_31) l_0_9_37)) ?x11691) ?x11694) ?x11697)))
 (let ((?x11709 (- (- (- (- ?x11698 (* (* 4.0 l_0_9_46) l_0_9_52)) ?x11702) ?x11705) ?x11708)))
 (let ((?x11720 (+ (+ (+ (+ ?x11709 (* (* 4.0 l_0_9_61) l_0_9_67)) ?x11713) ?x11716) ?x11719)))
 (let ((?x11728 (- (- (- ?x11720 ?x11721) (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (- ?x11728 (* (* 2.0 l_0_9_96) l_0_9_99)) 0.0))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11848 (* l_0_9_99 l_0_9_99)))
 (let ((?x11846 (* l_0_9_98 l_0_9_98)))
 (let ((?x11844 (* l_0_9_97 l_0_9_97)))
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x11590 (* ?x11587 l_0_9_82)))
 (let ((?x11793 (* l_0_9_145 l_0_9_145)))
 (let ((?x11791 (* l_0_9_144 l_0_9_144)))
 (let ((?x11789 (* l_0_9_143 l_0_9_143)))
 (let ((?x8300 (* l_0_9_142 l_0_9_142)))
 (let ((?x4501 (* l_0_9_130 l_0_9_130)))
 (let ((?x4407 (* l_0_9_129 l_0_9_129)))
 (let ((?x8480 (* l_0_9_128 l_0_9_128)))
 (let ((?x4266 (* l_0_9_127 l_0_9_127)))
 (let ((?x4278 (* l_0_9_115 l_0_9_115)))
 (let ((?x8477 (* l_0_9_114 l_0_9_114)))
 (let ((?x8519 (* l_0_9_113 l_0_9_113)))
 (let ((?x4520 (* l_0_9_112 l_0_9_112)))
 (let ((?x4524 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_7) (* l_0_9_100 l_0_9_100)) ?x4520)))
 (let ((?x4498 (- (- (- (- (- (- (- ?x4524 ?x8519) ?x8477) ?x4278) ?x4266) ?x8480) ?x4407) ?x4501)))
 (let ((?x11797 (- (- (- (- (- ?x4498 ?x8300) ?x11789) ?x11791) ?x11793) (* (* 1.0 l_0_9_22) l_0_9_22))))
 (let ((?x11803 (- (- ?x11797 (* (* 1.0 l_0_9_23) l_0_9_23)) (* (* 1.0 l_0_9_24) l_0_9_24))))
 (let ((?x11809 (+ (- ?x11803 (* (* 1.0 l_0_9_25) l_0_9_25)) (* 1.0 (* l_0_9_37 l_0_9_37)))))
 (let ((?x11815 (+ (+ ?x11809 (* 1.0 (* l_0_9_38 l_0_9_38))) (* 1.0 (* l_0_9_39 l_0_9_39)))))
 (let ((?x11821 (- (+ ?x11815 (* 1.0 (* l_0_9_40 l_0_9_40))) (* (* 1.0 l_0_9_52) l_0_9_52))))
 (let ((?x11827 (- (- ?x11821 (* (* 1.0 l_0_9_53) l_0_9_53)) (* (* 1.0 l_0_9_54) l_0_9_54))))
 (let ((?x11833 (+ (- ?x11827 (* (* 1.0 l_0_9_55) l_0_9_55)) (* 1.0 (* l_0_9_67 l_0_9_67)))))
 (let ((?x11839 (+ (+ ?x11833 (* 1.0 (* l_0_9_68 l_0_9_68))) (* 1.0 (* l_0_9_69 l_0_9_69)))))
 (let ((?x11847 (- (- (- (+ ?x11839 (* 1.0 (* l_0_9_70 l_0_9_70))) ?x11590) ?x11844) ?x11846)))
 (= (- ?x11847 ?x11848) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x12003 (* ?x11587 l_0_9_86)))
 (let ((?x12001 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x11998 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11995 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11992 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11988 (* 2.0 l_0_9_55)))
 (let ((?x11989 (* ?x11988 l_0_9_59)))
 (let ((?x11985 (* 2.0 l_0_9_54)))
 (let ((?x11986 (* ?x11985 l_0_9_58)))
 (let ((?x11982 (* 2.0 l_0_9_53)))
 (let ((?x11983 (* ?x11982 l_0_9_57)))
 (let ((?x11979 (* 2.0 l_0_9_52)))
 (let ((?x11980 (* ?x11979 l_0_9_56)))
 (let ((?x11977 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x11974 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x11971 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x11968 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11509 (* ?x11342 l_0_9_37)))
 (let ((?x11963 (* 2.0 l_0_9_25)))
 (let ((?x11964 (* ?x11963 l_0_9_29)))
 (let ((?x11960 (* 2.0 l_0_9_24)))
 (let ((?x11961 (* ?x11960 l_0_9_28)))
 (let ((?x11957 (* 2.0 l_0_9_23)))
 (let ((?x11958 (* ?x11957 l_0_9_27)))
 (let ((?x11955 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11507 (* ?x11337 l_0_9_22)))
 (let ((?x11908 (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x11913 (- (- ?x11908 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x11919 (- (- ?x11913 (* (* 2.0 l_0_9_103) l_0_9_99)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x11925 (- (- ?x11919 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x11931 (- (- ?x11925 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_127) l_0_9_131))))
 (let ((?x11937 (- (- ?x11931 (* (* 2.0 l_0_9_128) l_0_9_132)) (* (* 2.0 l_0_9_129) l_0_9_133))))
 (let ((?x11943 (- (- ?x11937 (* (* 2.0 l_0_9_130) l_0_9_134)) (* (* 2.0 l_0_9_142) l_0_9_146))))
 (let ((?x11949 (- (- ?x11943 (* (* 2.0 l_0_9_143) l_0_9_147)) (* (* 2.0 l_0_9_144) l_0_9_148))))
 (let ((?x11959 (- (- (+ (- ?x11949 (* (* 2.0 l_0_9_145) l_0_9_149)) ?x11507) ?x11955) ?x11958)))
 (let ((?x11978 (+ (+ (+ (+ (- (- (- ?x11959 ?x11961) ?x11964) ?x11509) ?x11968) ?x11971) ?x11974) ?x11977)))
 (let ((?x11999 (+ (+ (+ (- (- (- (- ?x11978 ?x11980) ?x11983) ?x11986) ?x11989) ?x11992) ?x11995) ?x11998)))
 (= (- (+ ?x11999 ?x12001) ?x12003) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12096 (* l_0_9_78 l_0_9_78)))
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12094 (* ?x12093 l_0_9_83)))
 (let ((?x12091 (* l_0_9_77 l_0_9_77)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12089 (* ?x12088 l_0_9_82)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x11585 (* ?x11584 l_0_9_68)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x11582 (* ?x11581 l_0_9_67)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x11578 (* ?x11577 l_0_9_53)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x11575 (* ?x11574 l_0_9_52)))
 (let ((?x12085 (+ (+ (- (* (- l_0_9_2) l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x11575) ?x11578)))
 (= (- (+ (- (+ (- (- ?x12085 ?x11582) ?x11585) ?x12089) ?x12091) ?x12094) ?x12096) 0.0)))))))))))))))))
(assert
 (let ((?x12147 (* 2.0 l_0_9_81)))
 (let ((?x12148 (* ?x12147 l_0_9_84)))
 (let ((?x12144 (* 2.0 l_0_9_80)))
 (let ((?x12145 (* ?x12144 l_0_9_83)))
 (let ((?x12141 (* 2.0 l_0_9_79)))
 (let ((?x12142 (* ?x12141 l_0_9_82)))
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12139 (* ?x12093 l_0_9_80)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12137 (* ?x12088 l_0_9_79)))
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x11719 (* ?x11718 l_0_9_69)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x11716 (* ?x11715 l_0_9_68)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x11713 (* ?x11712 l_0_9_67)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x11708 (* ?x11707 l_0_9_54)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x11705 (* ?x11704 l_0_9_53)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x11702 (* ?x11701 l_0_9_52)))
 (let ((?x12110 (* 2.0 l_0_9_3)))
 (let ((?x12111 (* ?x12110 l_0_9_5)))
 (let ((?x12107 (* 2.0 l_0_9_2)))
 (let ((?x12108 (* ?x12107 l_0_9_4)))
 (let ((?x12106 (- (* (* (- 4.0) l_0_9_17) l_0_9_22) (* (* 4.0 l_0_9_18) l_0_9_23))))
 (let ((?x12118 (+ (+ (- (- ?x12106 ?x12108) ?x12111) (* (* 4.0 l_0_9_32) l_0_9_37)) (* (* 4.0 l_0_9_33) l_0_9_38))))
 (let ((?x12124 (- (- ?x12118 (* (* 4.0 l_0_9_47) l_0_9_52)) (* (* 4.0 l_0_9_48) l_0_9_53))))
 (let ((?x12130 (+ (+ (+ (+ ?x12124 ?x11702) ?x11705) ?x11708) (* (* 4.0 l_0_9_62) l_0_9_67))))
 (let ((?x12136 (- (- (- (+ ?x12130 (* (* 4.0 l_0_9_63) l_0_9_68)) ?x11713) ?x11716) ?x11719)))
 (= (+ (+ (+ (- (- ?x12136 ?x12137) ?x12139) ?x12142) ?x12145) ?x12148) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x12203 (* l_0_9_85 l_0_9_85)))
 (let ((?x12201 (* l_0_9_84 l_0_9_84)))
 (let ((?x12199 (* l_0_9_83 l_0_9_83)))
 (let ((?x12197 (* l_0_9_82 l_0_9_82)))
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12094 (* ?x12093 l_0_9_83)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12089 (* ?x12088 l_0_9_82)))
 (let ((?x11840 (* l_0_9_70 l_0_9_70)))
 (let ((?x11837 (* l_0_9_69 l_0_9_69)))
 (let ((?x11834 (* l_0_9_68 l_0_9_68)))
 (let ((?x11831 (* l_0_9_67 l_0_9_67)))
 (let ((?x11883 (* l_0_9_55 l_0_9_55)))
 (let ((?x8569 (* l_0_9_54 l_0_9_54)))
 (let ((?x11878 (* l_0_9_53 l_0_9_53)))
 (let ((?x8561 (* l_0_9_52 l_0_9_52)))
 (let ((?x12110 (* 2.0 l_0_9_3)))
 (let ((?x12185 (* ?x12110 l_0_9_8)))
 (let ((?x12189 (+ (+ (+ (- (* (* (- 2.0) l_0_9_2) l_0_9_7) ?x12185) ?x8561) ?x11878) ?x8569)))
 (let ((?x12196 (- (- (- (- (- (- (+ ?x12189 ?x11883) ?x11831) ?x11834) ?x11837) ?x11840) ?x12089) ?x12094)))
 (= (+ (+ (+ (+ ?x12196 ?x12197) ?x12199) ?x12201) ?x12203) 0.0))))))))))))))))))))))
(assert
 (let ((?x12239 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12236 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12233 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12230 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12227 (* ?x12093 l_0_9_87)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12225 (* ?x12088 l_0_9_86)))
 (let ((?x12001 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x11998 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11995 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11992 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11988 (* 2.0 l_0_9_55)))
 (let ((?x11989 (* ?x11988 l_0_9_59)))
 (let ((?x11985 (* 2.0 l_0_9_54)))
 (let ((?x11986 (* ?x11985 l_0_9_58)))
 (let ((?x11982 (* 2.0 l_0_9_53)))
 (let ((?x11983 (* ?x11982 l_0_9_57)))
 (let ((?x11979 (* 2.0 l_0_9_52)))
 (let ((?x11980 (* ?x11979 l_0_9_56)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x11571 (* ?x11570 l_0_9_38)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x11568 (* ?x11567 l_0_9_37)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x11565 (* ?x11564 l_0_9_23)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x11562 (* ?x11561 l_0_9_22)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x12211 (* ?x8852 l_0_9_3)))
 (let ((?x12215 (- (+ (+ (- (* (* (- 2.0) l_0_9_11) l_0_9_2) ?x12211) ?x11562) ?x11565) ?x11568)))
 (let ((?x12222 (- (- (+ (+ (+ (+ (- ?x12215 ?x11571) ?x11980) ?x11983) ?x11986) ?x11989) ?x11992) ?x11995)))
 (let ((?x12237 (+ (+ (+ (- (- (- (- ?x12222 ?x11998) ?x12001) ?x12225) ?x12227) ?x12230) ?x12233) ?x12236)))
 (= (+ ?x12237 ?x12239) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12298 (* l_0_9_81 l_0_9_81)))
 (let ((?x12296 (* l_0_9_80 l_0_9_80)))
 (let ((?x12294 (* l_0_9_79 l_0_9_79)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11513 (* ?x11353 l_0_9_67)))
 (let ((?x12282 (* l_0_9_6 l_0_9_6)))
 (let ((?x12274 (* l_0_9_5 l_0_9_5)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11511 (* ?x11348 l_0_9_52)))
 (let ((?x12268 (* l_0_9_4 l_0_9_4)))
 (let ((?x5238 (- (* (* 2.0 l_0_9_1) l_0_9_7) (* (* 4.0 l_0_9_19) l_0_9_22))))
 (let ((?x12258 (- (- ?x5238 (* (* 4.0 l_0_9_20) l_0_9_23)) (* (* 4.0 l_0_9_21) l_0_9_24))))
 (let ((?x12264 (+ (+ ?x12258 (* (* 4.0 l_0_9_34) l_0_9_37)) (* (* 4.0 l_0_9_35) l_0_9_38))))
 (let ((?x12273 (- (- (- (+ ?x12264 (* (* 4.0 l_0_9_36) l_0_9_39)) ?x12268) ?x11511) (* (* 4.0 l_0_9_49) l_0_9_52))))
 (let ((?x12281 (- (- (- ?x12273 ?x12274) (* (* 4.0 l_0_9_50) l_0_9_53)) (* (* 4.0 l_0_9_51) l_0_9_54))))
 (let ((?x12290 (+ (+ (+ (- ?x12281 ?x12282) ?x11513) (* (* 4.0 l_0_9_64) l_0_9_67)) (* (* 4.0 l_0_9_65) l_0_9_68))))
 (let ((?x12299 (- (- (- (+ ?x12290 (* (* 4.0 l_0_9_66) l_0_9_69)) ?x12294) ?x12296) ?x12298)))
 (= ?x12299 0.0)))))))))))))))))))
(assert
 (let ((?x12147 (* 2.0 l_0_9_81)))
 (let ((?x12148 (* ?x12147 l_0_9_84)))
 (let ((?x12144 (* 2.0 l_0_9_80)))
 (let ((?x12145 (* ?x12144 l_0_9_83)))
 (let ((?x12141 (* 2.0 l_0_9_79)))
 (let ((?x12142 (* ?x12141 l_0_9_82)))
 (let ((?x12361 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x12350 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x12345 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x12333 (- (* (* (- 2.0) l_0_9_22) l_0_9_22) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x12337 (- (- ?x12333 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (let ((?x12341 (+ (+ ?x12337 (* 2.0 (* l_0_9_37 l_0_9_37))) (* 2.0 (* l_0_9_38 l_0_9_38)))))
 (let ((?x12348 (+ (- (+ ?x12341 (* 2.0 (* l_0_9_39 l_0_9_39))) ?x12345) (* 2.0 (* l_0_9_40 l_0_9_40)))))
 (let ((?x12355 (- (- (- ?x12348 ?x12350) (* (* 2.0 l_0_9_52) l_0_9_52)) (* (* 2.0 l_0_9_53) l_0_9_53))))
 (let ((?x12359 (- (- ?x12355 (* (* 2.0 l_0_9_54) l_0_9_54)) (* (* 2.0 l_0_9_55) l_0_9_55))))
 (let ((?x12366 (+ (+ (- ?x12359 ?x12361) (* 2.0 (* l_0_9_67 l_0_9_67))) (* 2.0 (* l_0_9_68 l_0_9_68)))))
 (let ((?x12370 (+ (+ ?x12366 (* 2.0 (* l_0_9_69 l_0_9_69))) (* 2.0 (* l_0_9_70 l_0_9_70)))))
 (= (- (- (- ?x12370 ?x12142) ?x12145) ?x12148) 0.0)))))))))))))))))))
(assert
 (let ((?x12147 (* 2.0 l_0_9_81)))
 (let ((?x12467 (* ?x12147 l_0_9_88)))
 (let ((?x12144 (* 2.0 l_0_9_80)))
 (let ((?x12465 (* ?x12144 l_0_9_87)))
 (let ((?x12141 (* 2.0 l_0_9_79)))
 (let ((?x12463 (* ?x12141 l_0_9_86)))
 (let ((?x11696 (* 2.0 l_0_9_36)))
 (let ((?x11697 (* ?x11696 l_0_9_39)))
 (let ((?x11693 (* 2.0 l_0_9_35)))
 (let ((?x11694 (* ?x11693 l_0_9_38)))
 (let ((?x11690 (* 2.0 l_0_9_34)))
 (let ((?x11691 (* ?x11690 l_0_9_37)))
 (let ((?x11685 (* 2.0 l_0_9_21)))
 (let ((?x11686 (* ?x11685 l_0_9_24)))
 (let ((?x11682 (* 2.0 l_0_9_20)))
 (let ((?x11683 (* ?x11682 l_0_9_23)))
 (let ((?x11679 (* 2.0 l_0_9_19)))
 (let ((?x11680 (* ?x11679 l_0_9_22)))
 (let ((?x12406 (* 2.0 l_0_9_13)))
 (let ((?x12407 (* ?x12406 l_0_9_6)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x12404 (* ?x8852 l_0_9_5)))
 (let ((?x12410 (+ (+ (- (- (* (* (- 2.0) l_0_9_11) l_0_9_4) ?x12404) ?x12407) ?x11680) ?x11683)))
 (let ((?x12417 (- (- (+ ?x12410 ?x11686) (* (* 4.0 l_0_9_22) l_0_9_26)) (* (* 4.0 l_0_9_23) l_0_9_27))))
 (let ((?x12423 (- (- ?x12417 (* (* 4.0 l_0_9_24) l_0_9_28)) (* (* 4.0 l_0_9_25) l_0_9_29))))
 (let ((?x12429 (+ (- (- (- ?x12423 ?x11691) ?x11694) ?x11697) (* (* 4.0 l_0_9_37) l_0_9_41))))
 (let ((?x12435 (+ (+ ?x12429 (* (* 4.0 l_0_9_38) l_0_9_42)) (* (* 4.0 l_0_9_39) l_0_9_43))))
 (let ((?x12441 (- (+ ?x12435 (* (* 4.0 l_0_9_40) l_0_9_44)) (* (* 4.0 l_0_9_52) l_0_9_56))))
 (let ((?x12447 (- (- ?x12441 (* (* 4.0 l_0_9_53) l_0_9_57)) (* (* 4.0 l_0_9_54) l_0_9_58))))
 (let ((?x12453 (+ (- ?x12447 (* (* 4.0 l_0_9_55) l_0_9_59)) (* (* 4.0 l_0_9_67) l_0_9_71))))
 (let ((?x12459 (+ (+ ?x12453 (* (* 4.0 l_0_9_68) l_0_9_72)) (* (* 4.0 l_0_9_69) l_0_9_73))))
 (let ((?x12468 (- (- (- (+ ?x12459 (* (* 4.0 l_0_9_70) l_0_9_74)) ?x12463) ?x12465) ?x12467)))
 (= ?x12468 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12506 (* l_0_9_9 l_0_9_9)))
 (let ((?x12203 (* l_0_9_85 l_0_9_85)))
 (let ((?x12201 (* l_0_9_84 l_0_9_84)))
 (let ((?x12199 (* l_0_9_83 l_0_9_83)))
 (let ((?x12197 (* l_0_9_82 l_0_9_82)))
 (let ((?x12500 (* l_0_9_8 l_0_9_8)))
 (let ((?x12502 (- (- (- (* (- l_0_9_10) l_0_9_10) (* l_0_9_7 l_0_9_7)) ?x12500) ?x12197)))
 (= (- (- (- (- ?x12502 ?x12199) ?x12201) ?x12203) ?x12506) 0.0)))))))))
(assert
 (let ((?x12239 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x12236 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x12233 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x12230 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x11816 (* l_0_9_40 l_0_9_40)))
 (let ((?x11813 (* l_0_9_39 l_0_9_39)))
 (let ((?x11810 (* l_0_9_38 l_0_9_38)))
 (let ((?x11807 (* l_0_9_37 l_0_9_37)))
 (let ((?x4563 (* l_0_9_25 l_0_9_25)))
 (let ((?x4570 (* l_0_9_24 l_0_9_24)))
 (let ((?x4653 (* l_0_9_23 l_0_9_23)))
 (let ((?x4500 (* l_0_9_22 l_0_9_22)))
 (let ((?x12406 (* 2.0 l_0_9_13)))
 (let ((?x5677 (* ?x12406 l_0_9_9)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x5720 (* ?x8852 l_0_9_8)))
 (let ((?x9443 (* 2.0 l_0_9_11)))
 (let ((?x9440 (* ?x9443 l_0_9_7)))
 (let ((?x12519 (+ (- (- (- (* (* (- 2.0) l_0_9_10) l_0_9_14) ?x9440) ?x5720) ?x5677) ?x4500)))
 (let ((?x12526 (- (- (- (- (+ (+ (+ ?x12519 ?x4653) ?x4570) ?x4563) ?x11807) ?x11810) ?x11813) ?x11816)))
 (= (- (- (- (- ?x12526 ?x12230) ?x12233) ?x12236) ?x12239) 0.0))))))))))))))))))))))
(assert
 (let ((?x12555 (* l_0_9_90 l_0_9_90)))
 (let ((?x12553 (* l_0_9_89 l_0_9_89)))
 (let ((?x12551 (* l_0_9_88 l_0_9_88)))
 (let ((?x12549 (* l_0_9_87 l_0_9_87)))
 (let ((?x12547 (* l_0_9_86 l_0_9_86)))
 (let ((?x11977 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x11974 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x11971 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x11968 (* (* 2.0 l_0_9_37) l_0_9_41)))
 (let ((?x11963 (* 2.0 l_0_9_25)))
 (let ((?x11964 (* ?x11963 l_0_9_29)))
 (let ((?x11960 (* 2.0 l_0_9_24)))
 (let ((?x11961 (* ?x11960 l_0_9_28)))
 (let ((?x11957 (* 2.0 l_0_9_23)))
 (let ((?x11958 (* ?x11957 l_0_9_27)))
 (let ((?x11955 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x5807 (* l_0_9_15 l_0_9_15)))
 (let ((?x9454 (* l_0_9_14 l_0_9_14)))
 (let ((?x9451 (* l_0_9_13 l_0_9_13)))
 (let ((?x5794 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x9451) ?x9454)))
 (let ((?x5755 (- (- (+ (+ (+ (+ (- ?x5794 ?x5807) ?x11955) ?x11958) ?x11961) ?x11964) ?x11968) ?x11971)))
 (let ((?x12556 (- (- (- (- (- (- (- ?x5755 ?x11974) ?x11977) ?x12547) ?x12549) ?x12551) ?x12553) ?x12555)))
 (= ?x12556 0.0))))))))))))))))))))))))
(assert
 (let ((?x12298 (* l_0_9_81 l_0_9_81)))
 (let ((?x12296 (* l_0_9_80 l_0_9_80)))
 (let ((?x12294 (* l_0_9_79 l_0_9_79)))
 (let ((?x11273 (* l_0_9_66 l_0_9_66)))
 (let ((?x11270 (* l_0_9_65 l_0_9_65)))
 (let ((?x11267 (* l_0_9_64 l_0_9_64)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11459 (* ?x11353 l_0_9_62)))
 (let ((?x11309 (* l_0_9_51 l_0_9_51)))
 (let ((?x8019 (* l_0_9_50 l_0_9_50)))
 (let ((?x8016 (* l_0_9_49 l_0_9_49)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11456 (* ?x11348 l_0_9_47)))
 (let ((?x12577 (- (* (* 2.0 l_0_9_1) l_0_9_2) (* (* 4.0 l_0_9_17) l_0_9_19))))
 (let ((?x12581 (+ (- ?x12577 (* (* 4.0 l_0_9_18) l_0_9_20)) (* (* 4.0 l_0_9_32) l_0_9_34))))
 (let ((?x12586 (- (- (+ ?x12581 (* (* 4.0 l_0_9_33) l_0_9_35)) ?x11456) (* (* 4.0 l_0_9_47) l_0_9_49))))
 (let ((?x12591 (+ (+ (+ (- ?x12586 (* (* 4.0 l_0_9_48) l_0_9_50)) ?x8016) ?x8019) ?x11309)))
 (let ((?x12596 (+ (+ (+ ?x12591 ?x11459) (* (* 4.0 l_0_9_62) l_0_9_64)) (* (* 4.0 l_0_9_63) l_0_9_65))))
 (= (+ (+ (+ (- (- (- ?x12596 ?x11267) ?x11270) ?x11273) ?x12294) ?x12296) ?x12298) 0.0))))))))))))))))))))
(assert
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11354 (* ?x11353 l_0_9_64)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11349 (* ?x11348 l_0_9_49)))
 (let ((?x9648 (- (* (* 2.0 l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x9640 (- (- ?x9648 (* (* 2.0 l_0_9_20) l_0_9_20)) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (let ((?x5892 (+ (+ ?x9640 (* 2.0 (* l_0_9_34 l_0_9_34))) (* 2.0 (* l_0_9_35 l_0_9_35)))))
 (let ((?x5974 (- (- (+ ?x5892 (* 2.0 (* l_0_9_36 l_0_9_36))) ?x11349) (* (* 2.0 l_0_9_49) l_0_9_49))))
 (let ((?x6123 (- (- ?x5974 (* (* 2.0 l_0_9_50) l_0_9_50)) (* (* 2.0 l_0_9_51) l_0_9_51))))
 (let ((?x9596 (+ (+ (+ ?x6123 ?x11354) (* 2.0 (* l_0_9_64 l_0_9_64))) (* 2.0 (* l_0_9_65 l_0_9_65)))))
 (= (+ ?x9596 (* 2.0 (* l_0_9_66 l_0_9_66))) 0.0))))))))))))
(assert
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11429 (* ?x11353 l_0_9_71)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11427 (* ?x11348 l_0_9_56)))
 (let ((?x11245 (* l_0_9_36 l_0_9_36)))
 (let ((?x11242 (* l_0_9_35 l_0_9_35)))
 (let ((?x11239 (* l_0_9_34 l_0_9_34)))
 (let ((?x8007 (* l_0_9_21 l_0_9_21)))
 (let ((?x3659 (* l_0_9_20 l_0_9_20)))
 (let ((?x3649 (* l_0_9_19 l_0_9_19)))
 (let ((?x6201 (- (* (* 2.0 l_0_9_1) l_0_9_11) (* (* 4.0 l_0_9_19) l_0_9_26))))
 (let ((?x9724 (- (+ (- (+ ?x6201 ?x3649) (* (* 4.0 l_0_9_20) l_0_9_27)) ?x3659) (* (* 4.0 l_0_9_21) l_0_9_28))))
 (let ((?x12632 (+ (- (+ (+ ?x9724 ?x8007) (* (* 4.0 l_0_9_34) l_0_9_41)) ?x11239) (* (* 4.0 l_0_9_35) l_0_9_42))))
 (let ((?x12637 (- (- (+ (- ?x12632 ?x11242) (* (* 4.0 l_0_9_36) l_0_9_43)) ?x11245) ?x11427)))
 (let ((?x12641 (- (- ?x12637 (* (* 4.0 l_0_9_49) l_0_9_56)) (* (* 4.0 l_0_9_50) l_0_9_57))))
 (let ((?x12646 (+ (+ (- ?x12641 (* (* 4.0 l_0_9_51) l_0_9_58)) ?x11429) (* (* 4.0 l_0_9_64) l_0_9_71))))
 (let ((?x12650 (+ (+ ?x12646 (* (* 4.0 l_0_9_65) l_0_9_72)) (* (* 4.0 l_0_9_66) l_0_9_73))))
 (= ?x12650 0.0)))))))))))))))))))
(assert
 (let ((?x12696 (* l_0_9_63 l_0_9_63)))
 (let ((?x12694 (* l_0_9_62 l_0_9_62)))
 (let ((?x12692 (* l_0_9_48 l_0_9_48)))
 (let ((?x12690 (* l_0_9_47 l_0_9_47)))
 (let ((?x12695 (+ (- (- (+ (* l_0_9_2 l_0_9_2) (* l_0_9_3 l_0_9_3)) ?x12690) ?x12692) ?x12694)))
 (= (+ ?x12695 ?x12696) 0.0)))))))
(assert
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12708 (* ?x11584 l_0_9_65)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12706 (* ?x11581 l_0_9_64)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12704 (* ?x11577 l_0_9_50)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12702 (* ?x11574 l_0_9_49)))
 (let ((?x12110 (* 2.0 l_0_9_3)))
 (let ((?x12111 (* ?x12110 l_0_9_5)))
 (let ((?x12107 (* 2.0 l_0_9_2)))
 (let ((?x12108 (* ?x12107 l_0_9_4)))
 (= (+ (+ (- (- (+ ?x12108 ?x12111) ?x12702) ?x12704) ?x12706) ?x12708) 0.0))))))))))))))
(assert
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x11585 (* ?x11584 l_0_9_68)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x11582 (* ?x11581 l_0_9_67)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x11578 (* ?x11577 l_0_9_53)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x11575 (* ?x11574 l_0_9_52)))
 (let ((?x12110 (* 2.0 l_0_9_3)))
 (let ((?x12185 (* ?x12110 l_0_9_8)))
 (let ((?x12724 (+ (- (- (+ (* (* 2.0 l_0_9_2) l_0_9_7) ?x12185) ?x11575) ?x11578) ?x11582)))
 (= (+ ?x12724 ?x11585) 0.0)))))))))))))
(assert
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12742 (* ?x11584 l_0_9_72)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12740 (* ?x11581 l_0_9_71)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12738 (* ?x11577 l_0_9_57)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12736 (* ?x11574 l_0_9_56)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x12211 (* ?x8852 l_0_9_3)))
 (let ((?x12741 (+ (- (- (+ (* (* 2.0 l_0_9_11) l_0_9_2) ?x12211) ?x12736) ?x12738) ?x12740)))
 (= (+ ?x12741 ?x12742) 0.0)))))))))))))
(assert
 (let ((?x11273 (* l_0_9_66 l_0_9_66)))
 (let ((?x11270 (* l_0_9_65 l_0_9_65)))
 (let ((?x11267 (* l_0_9_64 l_0_9_64)))
 (let ((?x12282 (* l_0_9_6 l_0_9_6)))
 (let ((?x11309 (* l_0_9_51 l_0_9_51)))
 (let ((?x8019 (* l_0_9_50 l_0_9_50)))
 (let ((?x12274 (* l_0_9_5 l_0_9_5)))
 (let ((?x12760 (- (+ (- (* l_0_9_4 l_0_9_4) (* l_0_9_49 l_0_9_49)) ?x12274) ?x8019)))
 (= (+ (+ (+ (+ (- ?x12760 ?x11309) ?x12282) ?x11267) ?x11270) ?x11273) 0.0))))))))))
(assert
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x11719 (* ?x11718 l_0_9_69)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x11716 (* ?x11715 l_0_9_68)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x11713 (* ?x11712 l_0_9_67)))
 (let ((?x12361 (* (* 2.0 l_0_9_6) l_0_9_9)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x11708 (* ?x11707 l_0_9_54)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x11705 (* ?x11704 l_0_9_53)))
 (let ((?x12350 (* (* 2.0 l_0_9_5) l_0_9_8)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x11702 (* ?x11701 l_0_9_52)))
 (let ((?x12345 (* (* 2.0 l_0_9_4) l_0_9_7)))
 (let ((?x958 (+ (+ (+ (- (- (+ (- ?x12345 ?x11702) ?x12350) ?x11705) ?x11708) ?x12361) ?x11713) ?x11716)))
 (= (+ ?x958 ?x11719) 0.0))))))))))))))))))
(assert
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x12792 (* ?x11718 l_0_9_73)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x12790 (* ?x11715 l_0_9_72)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x12788 (* ?x11712 l_0_9_71)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x12786 (* ?x11707 l_0_9_58)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x12784 (* ?x11704 l_0_9_57)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x12782 (* ?x11701 l_0_9_56)))
 (let ((?x12406 (* 2.0 l_0_9_13)))
 (let ((?x12407 (* ?x12406 l_0_9_6)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x12404 (* ?x8852 l_0_9_5)))
 (let ((?x12785 (- (- (+ (+ (* (* 2.0 l_0_9_11) l_0_9_4) ?x12404) ?x12407) ?x12782) ?x12784)))
 (= (+ (+ (+ (- ?x12785 ?x12786) ?x12788) ?x12790) ?x12792) 0.0)))))))))))))))))))
(assert
 (let ((?x12506 (* l_0_9_9 l_0_9_9)))
 (let ((?x12500 (* l_0_9_8 l_0_9_8)))
 (let ((?x11840 (* l_0_9_70 l_0_9_70)))
 (let ((?x5672 (* l_0_9_7 l_0_9_7)))
 (let ((?x11837 (* l_0_9_69 l_0_9_69)))
 (let ((?x11834 (* l_0_9_68 l_0_9_68)))
 (let ((?x11831 (* l_0_9_67 l_0_9_67)))
 (let ((?x11883 (* l_0_9_55 l_0_9_55)))
 (let ((?x8569 (* l_0_9_54 l_0_9_54)))
 (let ((?x11878 (* l_0_9_53 l_0_9_53)))
 (let ((?x9842 (- (- (- (* l_0_9_10 l_0_9_10) (* l_0_9_52 l_0_9_52)) ?x11878) ?x8569)))
 (let ((?x12819 (+ (+ (+ (+ (+ (+ (- ?x9842 ?x11883) ?x11831) ?x11834) ?x11837) ?x5672) ?x11840) ?x12500)))
 (= (+ ?x12819 ?x12506) 0.0))))))))))))))
(assert
 (let ((?x12001 (* (* 2.0 l_0_9_70) l_0_9_74)))
 (let ((?x11998 (* (* 2.0 l_0_9_69) l_0_9_73)))
 (let ((?x11995 (* (* 2.0 l_0_9_68) l_0_9_72)))
 (let ((?x11992 (* (* 2.0 l_0_9_67) l_0_9_71)))
 (let ((?x11988 (* 2.0 l_0_9_55)))
 (let ((?x11989 (* ?x11988 l_0_9_59)))
 (let ((?x11985 (* 2.0 l_0_9_54)))
 (let ((?x11986 (* ?x11985 l_0_9_58)))
 (let ((?x11982 (* 2.0 l_0_9_53)))
 (let ((?x11983 (* ?x11982 l_0_9_57)))
 (let ((?x11979 (* 2.0 l_0_9_52)))
 (let ((?x11980 (* ?x11979 l_0_9_56)))
 (let ((?x12406 (* 2.0 l_0_9_13)))
 (let ((?x5677 (* ?x12406 l_0_9_9)))
 (let ((?x8852 (* 2.0 l_0_9_12)))
 (let ((?x5720 (* ?x8852 l_0_9_8)))
 (let ((?x9443 (* 2.0 l_0_9_11)))
 (let ((?x9440 (* ?x9443 l_0_9_7)))
 (let ((?x9856 (- (+ (+ (+ (* (* 2.0 l_0_9_10) l_0_9_14) ?x9440) ?x5720) ?x5677) ?x11980)))
 (let ((?x12827 (+ (+ (+ (+ (- (- (- ?x9856 ?x11983) ?x11986) ?x11989) ?x11992) ?x11995) ?x11998) ?x12001)))
 (= ?x12827 0.0))))))))))))))))))))))
(assert
 (let ((?x12856 (* l_0_9_75 l_0_9_75)))
 (let ((?x12854 (* l_0_9_74 l_0_9_74)))
 (let ((?x12852 (* l_0_9_73 l_0_9_73)))
 (let ((?x12850 (* l_0_9_72 l_0_9_72)))
 (let ((?x12848 (* l_0_9_71 l_0_9_71)))
 (let ((?x12846 (* l_0_9_60 l_0_9_60)))
 (let ((?x12844 (* l_0_9_59 l_0_9_59)))
 (let ((?x12842 (* l_0_9_58 l_0_9_58)))
 (let ((?x12840 (* l_0_9_57 l_0_9_57)))
 (let ((?x12838 (* l_0_9_56 l_0_9_56)))
 (let ((?x5807 (* l_0_9_15 l_0_9_15)))
 (let ((?x9454 (* l_0_9_14 l_0_9_14)))
 (let ((?x9451 (* l_0_9_13 l_0_9_13)))
 (let ((?x12836 (+ (+ (+ (* l_0_9_11 l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x9451) ?x9454)))
 (let ((?x12849 (+ (- (- (- (- (- (+ ?x12836 ?x5807) ?x12838) ?x12840) ?x12842) ?x12844) ?x12846) ?x12848)))
 (= (+ (+ (+ (+ ?x12849 ?x12850) ?x12852) ?x12854) ?x12856) 0.0)))))))))))))))))
(assert
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x11721 (* ?x11587 l_0_9_79)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12708 (* ?x11584 l_0_9_65)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12706 (* ?x11581 l_0_9_64)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11354 (* ?x11353 l_0_9_64)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12704 (* ?x11577 l_0_9_50)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12702 (* ?x11574 l_0_9_49)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11349 (* ?x11348 l_0_9_49)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x12888 (* ?x11570 l_0_9_35)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x12886 (* ?x11567 l_0_9_34)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x12882 (* ?x11564 l_0_9_20)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x12880 (* ?x11561 l_0_9_19)))
 (let ((?x12869 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x12873 (- (- ?x12869 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x12877 (- (- ?x12873 (* (* 2.0 l_0_9_137) l_0_9_139)) (* (* 2.0 l_0_9_138) l_0_9_140))))
 (let ((?x12885 (+ (- (- (- ?x12877 (* (* 4.0 l_0_9_16) l_0_9_17)) ?x12880) ?x12882) (* (* 4.0 l_0_9_31) l_0_9_32))))
 (let ((?x12892 (+ (- (+ (+ ?x12885 ?x12886) ?x12888) (* (* 4.0 l_0_9_46) l_0_9_47)) ?x11349)))
 (let ((?x12897 (- (+ (- (- ?x12892 ?x12702) ?x12704) (* (* 4.0 l_0_9_61) l_0_9_62)) ?x11354)))
 (let ((?x12902 (- (+ (+ (+ ?x12897 ?x12706) ?x12708) ?x11721) (* (* 2.0 l_0_9_92) l_0_9_94))))
 (= (- ?x12902 (* (* 2.0 l_0_9_93) l_0_9_95)) 0.0)))))))))))))))))))))))))))))))
(assert
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x12792 (* ?x11718 l_0_9_73)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x12790 (* ?x11715 l_0_9_72)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x12788 (* ?x11712 l_0_9_71)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x12786 (* ?x11707 l_0_9_58)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x12784 (* ?x11704 l_0_9_57)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x12782 (* ?x11701 l_0_9_56)))
 (let ((?x11696 (* 2.0 l_0_9_36)))
 (let ((?x12984 (* ?x11696 l_0_9_43)))
 (let ((?x11693 (* 2.0 l_0_9_35)))
 (let ((?x12982 (* ?x11693 l_0_9_42)))
 (let ((?x11690 (* 2.0 l_0_9_34)))
 (let ((?x12980 (* ?x11690 l_0_9_41)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11343 (* ?x11342 l_0_9_34)))
 (let ((?x11685 (* 2.0 l_0_9_21)))
 (let ((?x12975 (* ?x11685 l_0_9_28)))
 (let ((?x11682 (* 2.0 l_0_9_20)))
 (let ((?x12973 (* ?x11682 l_0_9_27)))
 (let ((?x11679 (* 2.0 l_0_9_19)))
 (let ((?x12971 (* ?x11679 l_0_9_26)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11338 (* ?x11337 l_0_9_19)))
 (let ((?x12947 (- (* (* (- 2.0) l_0_9_101) l_0_9_94) (* (* 2.0 l_0_9_102) l_0_9_95))))
 (let ((?x12951 (- (- ?x12947 (* (* 2.0 l_0_9_103) l_0_9_96)) (* (* 2.0 l_0_9_109) l_0_9_116))))
 (let ((?x12955 (- (- ?x12951 (* (* 2.0 l_0_9_110) l_0_9_117)) (* (* 2.0 l_0_9_111) l_0_9_118))))
 (let ((?x12959 (- (- ?x12955 (* (* 2.0 l_0_9_124) l_0_9_131)) (* (* 2.0 l_0_9_125) l_0_9_132))))
 (let ((?x12963 (- (- ?x12959 (* (* 2.0 l_0_9_126) l_0_9_133)) (* (* 2.0 l_0_9_139) l_0_9_146))))
 (let ((?x12967 (- (- ?x12963 (* (* 2.0 l_0_9_140) l_0_9_147)) (* (* 2.0 l_0_9_141) l_0_9_148))))
 (let ((?x12974 (- (- (- (+ ?x12967 ?x11338) (* (* 4.0 l_0_9_16) l_0_9_26)) ?x12971) ?x12973)))
 (let ((?x12981 (+ (+ (- (- ?x12974 ?x12975) ?x11343) (* (* 4.0 l_0_9_31) l_0_9_41)) ?x12980)))
 (let ((?x12988 (- (- (+ (+ ?x12981 ?x12982) ?x12984) (* (* 4.0 l_0_9_46) l_0_9_56)) ?x12782)))
 (let ((?x12993 (+ (+ (- (- ?x12988 ?x12784) ?x12786) (* (* 4.0 l_0_9_61) l_0_9_71)) ?x12788)))
 (= (+ (+ ?x12993 ?x12790) ?x12792) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12139 (* ?x12093 l_0_9_80)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12137 (* ?x12088 l_0_9_79)))
 (let ((?x12696 (* l_0_9_63 l_0_9_63)))
 (let ((?x13049 (* 2.0 ?x12696)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12708 (* ?x11584 l_0_9_65)))
 (let ((?x12694 (* l_0_9_62 l_0_9_62)))
 (let ((?x13046 (* 2.0 ?x12694)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12706 (* ?x11581 l_0_9_64)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12704 (* ?x11577 l_0_9_50)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12702 (* ?x11574 l_0_9_49)))
 (let ((?x13036 (* l_0_9_33 l_0_9_33)))
 (let ((?x13037 (* 2.0 ?x13036)))
 (let ((?x13033 (* l_0_9_32 l_0_9_32)))
 (let ((?x13034 (* 2.0 ?x13033)))
 (let ((?x13032 (- (* (* (- 2.0) l_0_9_17) l_0_9_17) (* (* 2.0 l_0_9_18) l_0_9_18))))
 (let ((?x13044 (- (+ (- (+ (+ (+ ?x13032 ?x13034) ?x13037) ?x12702) (* ?x11574 l_0_9_47)) ?x12704) (* ?x11577 l_0_9_48))))
 (= (+ (+ (+ (- (+ (- ?x13044 ?x12706) ?x13046) ?x12708) ?x13049) ?x12137) ?x12139) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12147 (* 2.0 l_0_9_81)))
 (let ((?x12467 (* ?x12147 l_0_9_88)))
 (let ((?x12144 (* 2.0 l_0_9_80)))
 (let ((?x12465 (* ?x12144 l_0_9_87)))
 (let ((?x12141 (* 2.0 l_0_9_79)))
 (let ((?x12463 (* ?x12141 l_0_9_86)))
 (let ((?x11718 (* 2.0 l_0_9_66)))
 (let ((?x12792 (* ?x11718 l_0_9_73)))
 (let ((?x11715 (* 2.0 l_0_9_65)))
 (let ((?x12790 (* ?x11715 l_0_9_72)))
 (let ((?x11712 (* 2.0 l_0_9_64)))
 (let ((?x12788 (* ?x11712 l_0_9_71)))
 (let ((?x11707 (* 2.0 l_0_9_51)))
 (let ((?x12786 (* ?x11707 l_0_9_58)))
 (let ((?x11704 (* 2.0 l_0_9_50)))
 (let ((?x12784 (* ?x11704 l_0_9_57)))
 (let ((?x11701 (* 2.0 l_0_9_49)))
 (let ((?x12782 (* ?x11701 l_0_9_56)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x12888 (* ?x11570 l_0_9_35)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x12886 (* ?x11567 l_0_9_34)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x12882 (* ?x11564 l_0_9_20)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x12880 (* ?x11561 l_0_9_19)))
 (let ((?x13074 (- (+ (- ?x12880 (* (* 4.0 l_0_9_17) l_0_9_26)) ?x12882) (* (* 4.0 l_0_9_18) l_0_9_27))))
 (let ((?x13080 (+ (- (+ (- ?x13074 ?x12886) (* (* 4.0 l_0_9_32) l_0_9_41)) ?x12888) (* (* 4.0 l_0_9_33) l_0_9_42))))
 (let ((?x13084 (- (- ?x13080 (* (* 4.0 l_0_9_47) l_0_9_56)) (* (* 4.0 l_0_9_48) l_0_9_57))))
 (let ((?x13089 (+ (+ (+ (+ ?x13084 ?x12782) ?x12784) ?x12786) (* (* 4.0 l_0_9_62) l_0_9_71))))
 (let ((?x13094 (- (- (- (+ ?x13089 (* (* 4.0 l_0_9_63) l_0_9_72)) ?x12788) ?x12790) ?x12792)))
 (= (+ (+ (+ ?x13094 ?x12463) ?x12465) ?x12467) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x13169 (* l_0_9_45 l_0_9_45)))
 (let ((?x13170 (* 2.0 ?x13169)))
 (let ((?x13166 (* l_0_9_44 l_0_9_44)))
 (let ((?x13167 (* 2.0 ?x13166)))
 (let ((?x13163 (* l_0_9_43 l_0_9_43)))
 (let ((?x13164 (* 2.0 ?x13163)))
 (let ((?x13160 (* l_0_9_42 l_0_9_42)))
 (let ((?x13161 (* 2.0 ?x13160)))
 (let ((?x13157 (* l_0_9_41 l_0_9_41)))
 (let ((?x13158 (* 2.0 ?x13157)))
 (let ((?x11696 (* 2.0 l_0_9_36)))
 (let ((?x12984 (* ?x11696 l_0_9_43)))
 (let ((?x11693 (* 2.0 l_0_9_35)))
 (let ((?x12982 (* ?x11693 l_0_9_42)))
 (let ((?x11690 (* 2.0 l_0_9_34)))
 (let ((?x12980 (* ?x11690 l_0_9_41)))
 (let ((?x11685 (* 2.0 l_0_9_21)))
 (let ((?x12975 (* ?x11685 l_0_9_28)))
 (let ((?x11682 (* 2.0 l_0_9_20)))
 (let ((?x12973 (* ?x11682 l_0_9_27)))
 (let ((?x11679 (* 2.0 l_0_9_19)))
 (let ((?x12971 (* ?x11679 l_0_9_26)))
 (let ((?x13144 (- (- (+ (+ ?x12971 ?x12973) ?x12975) (* (* 2.0 l_0_9_26) l_0_9_26)) (* (* 2.0 l_0_9_27) l_0_9_27))))
 (let ((?x13150 (- (- ?x13144 (* (* 2.0 l_0_9_28) l_0_9_28)) (* (* 2.0 l_0_9_29) l_0_9_29))))
 (let ((?x13156 (- (- (- (- ?x13150 (* (* 2.0 l_0_9_30) l_0_9_30)) ?x12980) ?x12982) ?x12984)))
 (let ((?x13174 (- (+ (+ (+ (+ (+ ?x13156 ?x13158) ?x13161) ?x13164) ?x13167) ?x13170) (* (* 2.0 l_0_9_56) l_0_9_56))))
 (let ((?x13180 (- (- ?x13174 (* (* 2.0 l_0_9_57) l_0_9_57)) (* (* 2.0 l_0_9_58) l_0_9_58))))
 (let ((?x13186 (- (- ?x13180 (* (* 2.0 l_0_9_59) l_0_9_59)) (* (* 2.0 l_0_9_60) l_0_9_60))))
 (let ((?x13190 (+ (+ ?x13186 (* 2.0 (* l_0_9_71 l_0_9_71))) (* 2.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x13194 (+ (+ ?x13190 (* 2.0 (* l_0_9_73 l_0_9_73))) (* 2.0 (* l_0_9_74 l_0_9_74)))))
 (= (+ ?x13194 (* 2.0 (* l_0_9_75 l_0_9_75))) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x13255 (* l_0_9_93 l_0_9_93)))
 (let ((?x13253 (* l_0_9_92 l_0_9_92)))
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x11588 (* ?x11587 l_0_9_77)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11459 (* ?x11353 l_0_9_62)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11456 (* ?x11348 l_0_9_47)))
 (let ((?x13228 (* l_0_9_138 l_0_9_138)))
 (let ((?x13226 (* l_0_9_137 l_0_9_137)))
 (let ((?x13224 (* l_0_9_123 l_0_9_123)))
 (let ((?x1854 (* l_0_9_122 l_0_9_122)))
 (let ((?x1828 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x1854)))
 (let ((?x13232 (- (- (- (- ?x1828 ?x13224) ?x13226) ?x13228) (* (* 1.0 l_0_9_17) l_0_9_17))))
 (let ((?x13237 (+ (- ?x13232 (* (* 1.0 l_0_9_18) l_0_9_18)) (* 1.0 (* l_0_9_32 l_0_9_32)))))
 (let ((?x13243 (- (+ (+ ?x13237 (* 1.0 (* l_0_9_33 l_0_9_33))) ?x11456) (* (* 1.0 l_0_9_47) l_0_9_47))))
 (let ((?x13249 (+ (- (- ?x13243 (* (* 1.0 l_0_9_48) l_0_9_48)) ?x11459) (* 1.0 (* l_0_9_62 l_0_9_62)))))
 (let ((?x13256 (- (- (+ (+ ?x13249 (* 1.0 (* l_0_9_63 l_0_9_63))) ?x11588) ?x13253) ?x13255)))
 (= ?x13256 0.0))))))))))))))))))))
(assert
 (let ((?x11587 (* 2.0 l_0_9_76)))
 (let ((?x12003 (* ?x11587 l_0_9_86)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12742 (* ?x11584 l_0_9_72)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12740 (* ?x11581 l_0_9_71)))
 (let ((?x11353 (* 2.0 l_0_9_61)))
 (let ((?x11429 (* ?x11353 l_0_9_71)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12738 (* ?x11577 l_0_9_57)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12736 (* ?x11574 l_0_9_56)))
 (let ((?x11348 (* 2.0 l_0_9_46)))
 (let ((?x11427 (* ?x11348 l_0_9_56)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x13283 (* ?x11570 l_0_9_42)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x13281 (* ?x11567 l_0_9_41)))
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11454 (* ?x11342 l_0_9_32)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x13278 (* ?x11564 l_0_9_27)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x13276 (* ?x11561 l_0_9_26)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11452 (* ?x11337 l_0_9_17)))
 (let ((?x10211 (- (* (* (- 2.0) l_0_9_101) l_0_9_92) (* (* 2.0 l_0_9_102) l_0_9_93))))
 (let ((?x1897 (- (- ?x10211 (* (* 2.0 l_0_9_107) l_0_9_116)) (* (* 2.0 l_0_9_108) l_0_9_117))))
 (let ((?x13270 (- (- ?x1897 (* (* 2.0 l_0_9_122) l_0_9_131)) (* (* 2.0 l_0_9_123) l_0_9_132))))
 (let ((?x13274 (- (- ?x13270 (* (* 2.0 l_0_9_137) l_0_9_146)) (* (* 2.0 l_0_9_138) l_0_9_147))))
 (let ((?x13285 (+ (+ (+ (- (- (- (+ ?x13274 ?x11452) ?x13276) ?x13278) ?x11454) ?x13281) ?x13283) ?x11427)))
 (= (+ (+ (+ (- (- (- ?x13285 ?x12736) ?x12738) ?x11429) ?x12740) ?x12742) ?x12003) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x11342 (* 2.0 l_0_9_31)))
 (let ((?x11424 (* ?x11342 l_0_9_41)))
 (let ((?x11337 (* 2.0 l_0_9_16)))
 (let ((?x11421 (* ?x11337 l_0_9_26)))
 (let ((?x13345 (* l_0_9_150 l_0_9_150)))
 (let ((?x13343 (* l_0_9_149 l_0_9_149)))
 (let ((?x13341 (* l_0_9_148 l_0_9_148)))
 (let ((?x13339 (* l_0_9_147 l_0_9_147)))
 (let ((?x13337 (* l_0_9_146 l_0_9_146)))
 (let ((?x13335 (* l_0_9_135 l_0_9_135)))
 (let ((?x13333 (* l_0_9_134 l_0_9_134)))
 (let ((?x13331 (* l_0_9_133 l_0_9_133)))
 (let ((?x13329 (* l_0_9_132 l_0_9_132)))
 (let ((?x13327 (* l_0_9_131 l_0_9_131)))
 (let ((?x13325 (* l_0_9_120 l_0_9_120)))
 (let ((?x13323 (* l_0_9_119 l_0_9_119)))
 (let ((?x13321 (* l_0_9_118 l_0_9_118)))
 (let ((?x13319 (* l_0_9_117 l_0_9_117)))
 (let ((?x7164 (* l_0_9_116 l_0_9_116)))
 (let ((?x7166 (* l_0_9_105 l_0_9_105)))
 (let ((?x2193 (* l_0_9_104 l_0_9_104)))
 (let ((?x10293 (* l_0_9_103 l_0_9_103)))
 (let ((?x2185 (- (- (* (- l_0_9_101) l_0_9_101) (* l_0_9_102 l_0_9_102)) ?x10293)))
 (let ((?x13326 (- (- (- (- (- (- (- ?x2185 ?x2193) ?x7166) ?x7164) ?x13319) ?x13321) ?x13323) ?x13325)))
 (let ((?x13340 (- (- (- (- (- (- (- ?x13326 ?x13327) ?x13329) ?x13331) ?x13333) ?x13335) ?x13337) ?x13339)))
 (let ((?x13350 (- (+ (- (- (- ?x13340 ?x13341) ?x13343) ?x13345) ?x11421) (* (* 1.0 l_0_9_26) l_0_9_26))))
 (let ((?x13356 (- (- ?x13350 (* (* 1.0 l_0_9_27) l_0_9_27)) (* (* 1.0 l_0_9_28) l_0_9_28))))
 (let ((?x13362 (- (- ?x13356 (* (* 1.0 l_0_9_29) l_0_9_29)) (* (* 1.0 l_0_9_30) l_0_9_30))))
 (let ((?x13367 (+ (+ (- ?x13362 ?x11424) (* 1.0 (* l_0_9_41 l_0_9_41))) (* 1.0 (* l_0_9_42 l_0_9_42)))))
 (let ((?x13371 (+ (+ ?x13367 (* 1.0 (* l_0_9_43 l_0_9_43))) (* 1.0 (* l_0_9_44 l_0_9_44)))))
 (let ((?x13376 (- (+ ?x13371 (* 1.0 (* l_0_9_45 l_0_9_45))) (* (* 1.0 l_0_9_56) l_0_9_56))))
 (let ((?x13382 (- (- ?x13376 (* (* 1.0 l_0_9_57) l_0_9_57)) (* (* 1.0 l_0_9_58) l_0_9_58))))
 (let ((?x13388 (- (- ?x13382 (* (* 1.0 l_0_9_59) l_0_9_59)) (* (* 1.0 l_0_9_60) l_0_9_60))))
 (let ((?x13392 (+ (+ ?x13388 (* 1.0 (* l_0_9_71 l_0_9_71))) (* 1.0 (* l_0_9_72 l_0_9_72)))))
 (let ((?x13396 (+ (+ ?x13392 (* 1.0 (* l_0_9_73 l_0_9_73))) (* 1.0 (* l_0_9_74 l_0_9_74)))))
 (= (+ ?x13396 (* 1.0 (* l_0_9_75 l_0_9_75))) 0.0)))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x12093 (* 2.0 l_0_9_78)))
 (let ((?x12227 (* ?x12093 l_0_9_87)))
 (let ((?x12088 (* 2.0 l_0_9_77)))
 (let ((?x12225 (* ?x12088 l_0_9_86)))
 (let ((?x11584 (* 2.0 l_0_9_63)))
 (let ((?x12742 (* ?x11584 l_0_9_72)))
 (let ((?x11581 (* 2.0 l_0_9_62)))
 (let ((?x12740 (* ?x11581 l_0_9_71)))
 (let ((?x11577 (* 2.0 l_0_9_48)))
 (let ((?x12738 (* ?x11577 l_0_9_57)))
 (let ((?x11574 (* 2.0 l_0_9_47)))
 (let ((?x12736 (* ?x11574 l_0_9_56)))
 (let ((?x13036 (* l_0_9_33 l_0_9_33)))
 (let ((?x13033 (* l_0_9_32 l_0_9_32)))
 (let ((?x13056 (* l_0_9_18 l_0_9_18)))
 (let ((?x13054 (* l_0_9_17 l_0_9_17)))
 (let ((?x9336 (+ ?x13054 ?x13056)))
 (let ((?x13441 (+ (- (- (+ (+ (- (- ?x9336 ?x13033) ?x13036) ?x12736) ?x12738) ?x12740) ?x12742) ?x12225)))
 (= (+ ?x13441 ?x12227) 0.0))))))))))))))))))))
(assert
 (let ((?x12555 (* l_0_9_90 l_0_9_90)))
 (let ((?x12553 (* l_0_9_89 l_0_9_89)))
 (let ((?x12551 (* l_0_9_88 l_0_9_88)))
 (let ((?x12549 (* l_0_9_87 l_0_9_87)))
 (let ((?x12547 (* l_0_9_86 l_0_9_86)))
 (let ((?x12856 (* l_0_9_75 l_0_9_75)))
 (let ((?x12854 (* l_0_9_74 l_0_9_74)))
 (let ((?x12852 (* l_0_9_73 l_0_9_73)))
 (let ((?x12850 (* l_0_9_72 l_0_9_72)))
 (let ((?x12848 (* l_0_9_71 l_0_9_71)))
 (let ((?x12846 (* l_0_9_60 l_0_9_60)))
 (let ((?x12844 (* l_0_9_59 l_0_9_59)))
 (let ((?x12842 (* l_0_9_58 l_0_9_58)))
 (let ((?x12840 (* l_0_9_57 l_0_9_57)))
 (let ((?x12838 (* l_0_9_56 l_0_9_56)))
 (let ((?x11570 (* 2.0 l_0_9_33)))
 (let ((?x13283 (* ?x11570 l_0_9_42)))
 (let ((?x11567 (* 2.0 l_0_9_32)))
 (let ((?x13281 (* ?x11567 l_0_9_41)))
 (let ((?x11564 (* 2.0 l_0_9_18)))
 (let ((?x13278 (* ?x11564 l_0_9_27)))
 (let ((?x11561 (* 2.0 l_0_9_17)))
 (let ((?x13276 (* ?x11561 l_0_9_26)))
 (let ((?x13458 (+ (+ (+ (+ (- (- (+ ?x13276 ?x13278) ?x13281) ?x13283) ?x12838) ?x12840) ?x12842) ?x12844)))
 (let ((?x13465 (+ (- (- (- (- (- (+ ?x13458 ?x12846) ?x12848) ?x12850) ?x12852) ?x12854) ?x12856) ?x12547)))
 (= (+ (+ (+ (+ ?x13465 ?x12549) ?x12551) ?x12553) ?x12555) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13169 (* l_0_9_45 l_0_9_45)))
 (let ((?x13166 (* l_0_9_44 l_0_9_44)))
 (let ((?x13163 (* l_0_9_43 l_0_9_43)))
 (let ((?x13160 (* l_0_9_42 l_0_9_42)))
 (let ((?x13157 (* l_0_9_41 l_0_9_41)))
 (let ((?x13210 (* l_0_9_30 l_0_9_30)))
 (let ((?x10127 (* l_0_9_29 l_0_9_29)))
 (let ((?x10126 (* l_0_9_28 l_0_9_28)))
 (let ((?x13480 (+ (+ (+ (* l_0_9_26 l_0_9_26) (* l_0_9_27 l_0_9_27)) ?x10126) ?x10127)))
 (= (- (- (- (- (- (+ ?x13480 ?x13210) ?x13157) ?x13160) ?x13163) ?x13166) ?x13169) 0.0)))))))))))
(assert
 (let ((?x12096 (* l_0_9_78 l_0_9_78)))
 (let ((?x12091 (* l_0_9_77 l_0_9_77)))
 (let ((?x12696 (* l_0_9_63 l_0_9_63)))
 (let ((?x12694 (* l_0_9_62 l_0_9_62)))
 (let ((?x12692 (* l_0_9_48 l_0_9_48)))
 (let ((?x12690 (* l_0_9_47 l_0_9_47)))
 (let ((?x13497 (+ ?x12690 ?x12692)))
 (= (+ (+ (- (- ?x13497 ?x12694) ?x12696) ?x12091) ?x12096) 0.0)))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (>= l_0_9_136 0.0))
(assert
 (>= l_0_9_138 0.0))
(assert
 (>= l_0_9_141 0.0))
(assert
 (>= l_0_9_145 0.0))
(assert
 (>= l_0_9_150 0.0))
(assert
 (let ((?x13574 (* l_0_10_91 l_0_10_91)))
 (let ((?x13560 (* l_0_10_151 l_0_10_151)))
 (let ((?x13558 (* l_0_10_136 l_0_10_136)))
 (let ((?x13556 (* l_0_10_121 l_0_10_121)))
 (let ((?x13557 (- (- (+ (* _a_0_ _a_3_) _a_2_) (* l_0_10_106 l_0_10_106)) ?x13556)))
 (let ((?x13567 (+ (- (- (- ?x13557 ?x13558) ?x13560) (* (* 1.0 l_0_10_16) l_0_10_16)) (* 1.0 (* l_0_10_31 l_0_10_31)))))
 (let ((?x13573 (+ (- ?x13567 (* (* 1.0 l_0_10_46) l_0_10_46)) (* 1.0 (* l_0_10_61 l_0_10_61)))))
 (= (- (- ?x13573 ?x13574) 4.0) 0.0)))))))))
(assert
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13623 (* ?x13622 l_0_10_71)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13620 (* ?x13619 l_0_10_56)))
 (let ((?x13565 (* l_0_10_31 l_0_10_31)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13616 (* ?x13615 l_0_10_41)))
 (let ((?x10513 (* l_0_10_16 l_0_10_16)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13612 (* ?x13611 l_0_10_26)))
 (let ((?x13601 (- (- (* _a_1_ _a_3_) (* (* 2.0 l_0_10_101) l_0_10_91)) (* (* 2.0 l_0_10_106) l_0_10_116))))
 (let ((?x13607 (- (- ?x13601 (* (* 2.0 l_0_10_121) l_0_10_131)) (* (* 2.0 l_0_10_136) l_0_10_146))))
 (let ((?x13617 (+ (+ (- (- ?x13607 (* (* 2.0 l_0_10_151) l_0_10_161)) ?x13612) ?x10513) ?x13616)))
 (= (+ (- (- ?x13617 ?x13565) ?x13620) ?x13623) 0.0)))))))))))))))
(assert
 (let ((?x13665 (* l_0_10_76 l_0_10_76)))
 (let ((?x13571 (* l_0_10_61 l_0_10_61)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13662 (* ?x13622 l_0_10_62)))
 (let ((?x13588 (* l_0_10_46 l_0_10_46)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13659 (* ?x13619 l_0_10_47)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13657 (* ?x13615 l_0_10_32)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13655 (* ?x13611 l_0_10_17)))
 (let ((?x13650 (- (- _a_4_ (* (* 2.0 l_0_10_106) l_0_10_107)) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x13654 (- (- ?x13650 (* (* 2.0 l_0_10_136) l_0_10_137)) (* (* 2.0 l_0_10_151) l_0_10_152))))
 (let ((?x13666 (+ (- (+ (+ (- (+ (- ?x13654 ?x13655) ?x13657) ?x13659) ?x13588) ?x13662) ?x13571) ?x13665)))
 (= (- ?x13666 (* (* 2.0 l_0_10_91) l_0_10_92)) 0.0))))))))))))))))
(assert
 (let ((?x13767 (* l_0_10_96 l_0_10_96)))
 (let ((?x13765 (* l_0_10_95 l_0_10_95)))
 (let ((?x13763 (* l_0_10_94 l_0_10_94)))
 (let ((?x13571 (* l_0_10_61 l_0_10_61)))
 (let ((?x13588 (* l_0_10_46 l_0_10_46)))
 (let ((?x13711 (* l_0_10_156 l_0_10_156)))
 (let ((?x13709 (* l_0_10_155 l_0_10_155)))
 (let ((?x13707 (* l_0_10_154 l_0_10_154)))
 (let ((?x13705 (* l_0_10_141 l_0_10_141)))
 (let ((?x13703 (* l_0_10_140 l_0_10_140)))
 (let ((?x13701 (* l_0_10_139 l_0_10_139)))
 (let ((?x13699 (* l_0_10_126 l_0_10_126)))
 (let ((?x13697 (* l_0_10_125 l_0_10_125)))
 (let ((?x13695 (* l_0_10_124 l_0_10_124)))
 (let ((?x13693 (* l_0_10_111 l_0_10_111)))
 (let ((?x13691 (* l_0_10_110 l_0_10_110)))
 (let ((?x13694 (- (- (- (* l_0_10_1 l_0_10_1) (* l_0_10_109 l_0_10_109)) ?x13691) ?x13693)))
 (let ((?x13708 (- (- (- (- (- (- (- ?x13694 ?x13695) ?x13697) ?x13699) ?x13701) ?x13703) ?x13705) ?x13707)))
 (let ((?x13718 (- (- (- (- ?x13708 ?x13709) ?x13711) (* (* 4.0 l_0_10_16) l_0_10_19)) (* (* 1.0 l_0_10_19) l_0_10_19))))
 (let ((?x13724 (- (- ?x13718 (* (* 1.0 l_0_10_20) l_0_10_20)) (* (* 1.0 l_0_10_21) l_0_10_21))))
 (let ((?x13730 (+ (+ ?x13724 (* (* 4.0 l_0_10_31) l_0_10_34)) (* 1.0 (* l_0_10_34 l_0_10_34)))))
 (let ((?x13736 (+ (+ ?x13730 (* 1.0 (* l_0_10_35 l_0_10_35))) (* 1.0 (* l_0_10_36 l_0_10_36)))))
 (let ((?x13743 (- (- (- ?x13736 (* (* 4.0 l_0_10_46) l_0_10_49)) ?x13588) (* (* 1.0 l_0_10_49) l_0_10_49))))
 (let ((?x13749 (- (- ?x13743 (* (* 1.0 l_0_10_50) l_0_10_50)) (* (* 1.0 l_0_10_51) l_0_10_51))))
 (let ((?x13756 (+ (+ (+ ?x13749 (* (* 4.0 l_0_10_61) l_0_10_64)) ?x13571) (* 1.0 (* l_0_10_64 l_0_10_64)))))
 (let ((?x13762 (+ (+ ?x13756 (* 1.0 (* l_0_10_65 l_0_10_65))) (* 1.0 (* l_0_10_66 l_0_10_66)))))
 (= (- (- (- (- ?x13762 ?x13763) ?x13765) ?x13767) 1.0) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x13571 (* l_0_10_61 l_0_10_61)))
 (let ((?x13827 (* 2.0 ?x13571)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13825 (* ?x13622 l_0_10_64)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13821 (* ?x13619 l_0_10_49)))
 (let ((?x13565 (* l_0_10_31 l_0_10_31)))
 (let ((?x13819 (* 2.0 ?x13565)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13817 (* ?x13615 l_0_10_34)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13813 (* ?x13611 l_0_10_19)))
 (let ((?x13808 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x13812 (- (- ?x13808 (* (* 2.0 l_0_10_136) l_0_10_139)) (* (* 2.0 l_0_10_151) l_0_10_154))))
 (let ((?x13824 (- (- (+ (+ (- (- ?x13812 ?x13813) (* ?x13611 l_0_10_16)) ?x13817) ?x13819) ?x13821) (* ?x13619 l_0_10_46))))
 (let ((?x13831 (- (- (+ (+ ?x13824 ?x13825) ?x13827) (* (* 2.0 l_0_10_91) l_0_10_94)) 4.0)))
 (= ?x13831 0.0))))))))))))))))))
(assert
 (let ((?x13665 (* l_0_10_76 l_0_10_76)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13894 (* ?x13622 l_0_10_67)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13892 (* ?x13619 l_0_10_52)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13890 (* ?x13615 l_0_10_37)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13888 (* ?x13611 l_0_10_22)))
 (let ((?x13881 (- (* (- l_0_10_1) l_0_10_1) (* (* 2.0 l_0_10_106) l_0_10_112))))
 (let ((?x13885 (- (- ?x13881 (* (* 2.0 l_0_10_121) l_0_10_127)) (* (* 2.0 l_0_10_136) l_0_10_142))))
 (let ((?x13893 (- (+ (- (- ?x13885 (* (* 2.0 l_0_10_151) l_0_10_157)) ?x13888) ?x13890) ?x13892)))
 (= (- (- (+ ?x13893 ?x13894) ?x13665) (* (* 2.0 l_0_10_91) l_0_10_97)) 0.0))))))))))))))
(assert
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x13978 (* ?x13975 l_0_10_82)))
 (let ((?x13976 (* ?x13975 l_0_10_77)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x13973 (* ?x13972 l_0_10_68)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x13970 (* ?x13969 l_0_10_67)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13894 (* ?x13622 l_0_10_67)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x13966 (* ?x13965 l_0_10_53)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x13963 (* ?x13962 l_0_10_52)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13892 (* ?x13619 l_0_10_52)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x13959 (* ?x13958 l_0_10_38)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x13956 (* ?x13955 l_0_10_37)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x13953 (* ?x13952 l_0_10_23)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x13950 (* ?x13949 l_0_10_22)))
 (let ((?x13927 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_107) l_0_10_112))))
 (let ((?x13933 (- (- ?x13927 (* (* 2.0 l_0_10_108) l_0_10_113)) (* (* 2.0 l_0_10_122) l_0_10_127))))
 (let ((?x13939 (- (- ?x13933 (* (* 2.0 l_0_10_123) l_0_10_128)) (* (* 2.0 l_0_10_137) l_0_10_142))))
 (let ((?x13945 (- (- ?x13939 (* (* 2.0 l_0_10_138) l_0_10_143)) (* (* 2.0 l_0_10_152) l_0_10_157))))
 (let ((?x13957 (+ (- (- (- ?x13945 (* (* 2.0 l_0_10_153) l_0_10_158)) ?x13950) ?x13953) ?x13956)))
 (let ((?x13974 (+ (+ (- (- (- (+ (+ ?x13957 ?x13959) ?x13892) ?x13963) ?x13966) ?x13894) ?x13970) ?x13973)))
 (let ((?x13985 (- (- (+ (- ?x13974 ?x13976) ?x13978) (* (* 2.0 l_0_10_92) l_0_10_97)) (* (* 2.0 l_0_10_93) l_0_10_98))))
 (= ?x13985 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x14106 (* ?x13975 l_0_10_79)))
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x14104 (* ?x14103 l_0_10_69)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x14101 (* ?x14100 l_0_10_68)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x14098 (* ?x14097 l_0_10_67)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x14093 (* ?x14092 l_0_10_54)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x14090 (* ?x14089 l_0_10_53)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x14087 (* ?x14086 l_0_10_52)))
 (let ((?x14081 (* 2.0 l_0_10_36)))
 (let ((?x14082 (* ?x14081 l_0_10_39)))
 (let ((?x14078 (* 2.0 l_0_10_35)))
 (let ((?x14079 (* ?x14078 l_0_10_38)))
 (let ((?x14075 (* 2.0 l_0_10_34)))
 (let ((?x14076 (* ?x14075 l_0_10_37)))
 (let ((?x14070 (* 2.0 l_0_10_21)))
 (let ((?x14071 (* ?x14070 l_0_10_24)))
 (let ((?x14067 (* 2.0 l_0_10_20)))
 (let ((?x14068 (* ?x14067 l_0_10_23)))
 (let ((?x14064 (* 2.0 l_0_10_19)))
 (let ((?x14065 (* ?x14064 l_0_10_22)))
 (let ((?x14028 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_109) l_0_10_112))))
 (let ((?x14034 (- (- ?x14028 (* (* 2.0 l_0_10_110) l_0_10_113)) (* (* 2.0 l_0_10_111) l_0_10_114))))
 (let ((?x14040 (- (- ?x14034 (* (* 2.0 l_0_10_124) l_0_10_127)) (* (* 2.0 l_0_10_125) l_0_10_128))))
 (let ((?x14046 (- (- ?x14040 (* (* 2.0 l_0_10_126) l_0_10_129)) (* (* 2.0 l_0_10_139) l_0_10_142))))
 (let ((?x14052 (- (- ?x14046 (* (* 2.0 l_0_10_140) l_0_10_143)) (* (* 2.0 l_0_10_141) l_0_10_144))))
 (let ((?x14058 (- (- ?x14052 (* (* 2.0 l_0_10_154) l_0_10_157)) (* (* 2.0 l_0_10_155) l_0_10_158))))
 (let ((?x14063 (- (- ?x14058 (* (* 2.0 l_0_10_156) l_0_10_159)) (* (* 4.0 l_0_10_16) l_0_10_22))))
 (let ((?x14074 (+ (- (- (- ?x14063 ?x14065) ?x14068) ?x14071) (* (* 4.0 l_0_10_31) l_0_10_37))))
 (let ((?x14085 (- (+ (+ (+ ?x14074 ?x14076) ?x14079) ?x14082) (* (* 4.0 l_0_10_46) l_0_10_52))))
 (let ((?x14096 (+ (- (- (- ?x14085 ?x14087) ?x14090) ?x14093) (* (* 4.0 l_0_10_61) l_0_10_67))))
 (let ((?x14110 (- (- (+ (+ (+ ?x14096 ?x14098) ?x14101) ?x14104) ?x14106) (* (* 2.0 l_0_10_94) l_0_10_97))))
 (let ((?x14116 (- (- ?x14110 (* (* 2.0 l_0_10_95) l_0_10_98)) (* (* 2.0 l_0_10_96) l_0_10_99))))
 (= ?x14116 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14281 (* l_0_10_99 l_0_10_99)))
 (let ((?x14279 (* l_0_10_98 l_0_10_98)))
 (let ((?x14277 (* l_0_10_97 l_0_10_97)))
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x13978 (* ?x13975 l_0_10_82)))
 (let ((?x14226 (* l_0_10_160 l_0_10_160)))
 (let ((?x14224 (* l_0_10_159 l_0_10_159)))
 (let ((?x14222 (* l_0_10_158 l_0_10_158)))
 (let ((?x14220 (* l_0_10_157 l_0_10_157)))
 (let ((?x14218 (* l_0_10_145 l_0_10_145)))
 (let ((?x14216 (* l_0_10_144 l_0_10_144)))
 (let ((?x14214 (* l_0_10_143 l_0_10_143)))
 (let ((?x14212 (* l_0_10_142 l_0_10_142)))
 (let ((?x14210 (* l_0_10_130 l_0_10_130)))
 (let ((?x14208 (* l_0_10_129 l_0_10_129)))
 (let ((?x14206 (* l_0_10_128 l_0_10_128)))
 (let ((?x14204 (* l_0_10_127 l_0_10_127)))
 (let ((?x14202 (* l_0_10_115 l_0_10_115)))
 (let ((?x14200 (* l_0_10_114 l_0_10_114)))
 (let ((?x14198 (* l_0_10_113 l_0_10_113)))
 (let ((?x14196 (* l_0_10_112 l_0_10_112)))
 (let ((?x14197 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_7) (* l_0_10_100 l_0_10_100)) ?x14196)))
 (let ((?x14211 (- (- (- (- (- (- (- ?x14197 ?x14198) ?x14200) ?x14202) ?x14204) ?x14206) ?x14208) ?x14210)))
 (let ((?x14225 (- (- (- (- (- (- (- ?x14211 ?x14212) ?x14214) ?x14216) ?x14218) ?x14220) ?x14222) ?x14224)))
 (let ((?x14233 (- (- (- ?x14225 ?x14226) (* (* 1.0 l_0_10_22) l_0_10_22)) (* (* 1.0 l_0_10_23) l_0_10_23))))
 (let ((?x14239 (- (- ?x14233 (* (* 1.0 l_0_10_24) l_0_10_24)) (* (* 1.0 l_0_10_25) l_0_10_25))))
 (let ((?x14245 (+ (+ ?x14239 (* 1.0 (* l_0_10_37 l_0_10_37))) (* 1.0 (* l_0_10_38 l_0_10_38)))))
 (let ((?x14251 (+ (+ ?x14245 (* 1.0 (* l_0_10_39 l_0_10_39))) (* 1.0 (* l_0_10_40 l_0_10_40)))))
 (let ((?x14257 (- (- ?x14251 (* (* 1.0 l_0_10_52) l_0_10_52)) (* (* 1.0 l_0_10_53) l_0_10_53))))
 (let ((?x14263 (- (- ?x14257 (* (* 1.0 l_0_10_54) l_0_10_54)) (* (* 1.0 l_0_10_55) l_0_10_55))))
 (let ((?x14269 (+ (+ ?x14263 (* 1.0 (* l_0_10_67 l_0_10_67))) (* 1.0 (* l_0_10_68 l_0_10_68)))))
 (let ((?x14275 (+ (+ ?x14269 (* 1.0 (* l_0_10_69 l_0_10_69))) (* 1.0 (* l_0_10_70 l_0_10_70)))))
 (= (- (- (- (- ?x14275 ?x13978) ?x14277) ?x14279) ?x14281) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x14439 (* ?x13975 l_0_10_86)))
 (let ((?x14437 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14434 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14431 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14428 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14424 (* 2.0 l_0_10_55)))
 (let ((?x14425 (* ?x14424 l_0_10_59)))
 (let ((?x14421 (* 2.0 l_0_10_54)))
 (let ((?x14422 (* ?x14421 l_0_10_58)))
 (let ((?x14418 (* 2.0 l_0_10_53)))
 (let ((?x14419 (* ?x14418 l_0_10_57)))
 (let ((?x14415 (* 2.0 l_0_10_52)))
 (let ((?x14416 (* ?x14415 l_0_10_56)))
 (let ((?x14413 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14410 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14407 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14404 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13890 (* ?x13615 l_0_10_37)))
 (let ((?x14399 (* 2.0 l_0_10_25)))
 (let ((?x14400 (* ?x14399 l_0_10_29)))
 (let ((?x14396 (* 2.0 l_0_10_24)))
 (let ((?x14397 (* ?x14396 l_0_10_28)))
 (let ((?x14393 (* 2.0 l_0_10_23)))
 (let ((?x14394 (* ?x14393 l_0_10_27)))
 (let ((?x14391 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13888 (* ?x13611 l_0_10_22)))
 (let ((?x14332 (- (* (* (- 2.0) l_0_10_1) l_0_10_11) (* (* 2.0 l_0_10_100) l_0_10_104))))
 (let ((?x14337 (- (- ?x14332 (* (* 2.0 l_0_10_101) l_0_10_97)) (* (* 2.0 l_0_10_102) l_0_10_98))))
 (let ((?x14343 (- (- ?x14337 (* (* 2.0 l_0_10_103) l_0_10_99)) (* (* 2.0 l_0_10_112) l_0_10_116))))
 (let ((?x14349 (- (- ?x14343 (* (* 2.0 l_0_10_113) l_0_10_117)) (* (* 2.0 l_0_10_114) l_0_10_118))))
 (let ((?x14355 (- (- ?x14349 (* (* 2.0 l_0_10_115) l_0_10_119)) (* (* 2.0 l_0_10_127) l_0_10_131))))
 (let ((?x14361 (- (- ?x14355 (* (* 2.0 l_0_10_128) l_0_10_132)) (* (* 2.0 l_0_10_129) l_0_10_133))))
 (let ((?x14367 (- (- ?x14361 (* (* 2.0 l_0_10_130) l_0_10_134)) (* (* 2.0 l_0_10_142) l_0_10_146))))
 (let ((?x14373 (- (- ?x14367 (* (* 2.0 l_0_10_143) l_0_10_147)) (* (* 2.0 l_0_10_144) l_0_10_148))))
 (let ((?x14379 (- (- ?x14373 (* (* 2.0 l_0_10_145) l_0_10_149)) (* (* 2.0 l_0_10_157) l_0_10_161))))
 (let ((?x14385 (- (- ?x14379 (* (* 2.0 l_0_10_158) l_0_10_162)) (* (* 2.0 l_0_10_159) l_0_10_163))))
 (let ((?x14395 (- (- (- (+ ?x14385 ?x13888) (* (* 2.0 l_0_10_160) l_0_10_164)) ?x14391) ?x14394)))
 (let ((?x14414 (+ (+ (+ (+ (- (- (- ?x14395 ?x14397) ?x14400) ?x13890) ?x14404) ?x14407) ?x14410) ?x14413)))
 (let ((?x14435 (+ (+ (+ (- (- (- (- ?x14414 ?x14416) ?x14419) ?x14422) ?x14425) ?x14428) ?x14431) ?x14434)))
 (= (- (+ ?x14435 ?x14437) ?x14439) 0.0))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14517 (* l_0_10_78 l_0_10_78)))
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14515 (* ?x14514 l_0_10_83)))
 (let ((?x14512 (* l_0_10_77 l_0_10_77)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14510 (* ?x14509 l_0_10_82)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x13973 (* ?x13972 l_0_10_68)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x13970 (* ?x13969 l_0_10_67)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x13966 (* ?x13965 l_0_10_53)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x13963 (* ?x13962 l_0_10_52)))
 (let ((?x14506 (+ (+ (- (* (- l_0_10_2) l_0_10_2) (* l_0_10_3 l_0_10_3)) ?x13963) ?x13966)))
 (= (- (+ (- (+ (- (- ?x14506 ?x13970) ?x13973) ?x14510) ?x14512) ?x14515) ?x14517) 0.0)))))))))))))))))
(assert
 (let ((?x14576 (* 2.0 l_0_10_81)))
 (let ((?x14577 (* ?x14576 l_0_10_84)))
 (let ((?x14573 (* 2.0 l_0_10_80)))
 (let ((?x14574 (* ?x14573 l_0_10_83)))
 (let ((?x14570 (* 2.0 l_0_10_79)))
 (let ((?x14571 (* ?x14570 l_0_10_82)))
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14568 (* ?x14514 l_0_10_80)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14566 (* ?x14509 l_0_10_79)))
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x14104 (* ?x14103 l_0_10_69)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x14101 (* ?x14100 l_0_10_68)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x14098 (* ?x14097 l_0_10_67)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x14093 (* ?x14092 l_0_10_54)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x14090 (* ?x14089 l_0_10_53)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x14087 (* ?x14086 l_0_10_52)))
 (let ((?x14539 (* 2.0 l_0_10_3)))
 (let ((?x14540 (* ?x14539 l_0_10_5)))
 (let ((?x14536 (* 2.0 l_0_10_2)))
 (let ((?x14537 (* ?x14536 l_0_10_4)))
 (let ((?x14535 (- (* (* (- 4.0) l_0_10_17) l_0_10_22) (* (* 4.0 l_0_10_18) l_0_10_23))))
 (let ((?x14547 (+ (+ (- (- ?x14535 ?x14537) ?x14540) (* (* 4.0 l_0_10_32) l_0_10_37)) (* (* 4.0 l_0_10_33) l_0_10_38))))
 (let ((?x14553 (- (- ?x14547 (* (* 4.0 l_0_10_47) l_0_10_52)) (* (* 4.0 l_0_10_48) l_0_10_53))))
 (let ((?x14559 (+ (+ (+ (+ ?x14553 ?x14087) ?x14090) ?x14093) (* (* 4.0 l_0_10_62) l_0_10_67))))
 (let ((?x14565 (- (- (- (+ ?x14559 (* (* 4.0 l_0_10_63) l_0_10_68)) ?x14098) ?x14101) ?x14104)))
 (= (+ (+ (+ (- (- ?x14565 ?x14566) ?x14568) ?x14571) ?x14574) ?x14577) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x14618 (* l_0_10_85 l_0_10_85)))
 (let ((?x14616 (* l_0_10_84 l_0_10_84)))
 (let ((?x14614 (* l_0_10_83 l_0_10_83)))
 (let ((?x14612 (* l_0_10_82 l_0_10_82)))
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14515 (* ?x14514 l_0_10_83)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14510 (* ?x14509 l_0_10_82)))
 (let ((?x14273 (* l_0_10_70 l_0_10_70)))
 (let ((?x14270 (* l_0_10_69 l_0_10_69)))
 (let ((?x14267 (* l_0_10_68 l_0_10_68)))
 (let ((?x14264 (* l_0_10_67 l_0_10_67)))
 (let ((?x14312 (* l_0_10_55 l_0_10_55)))
 (let ((?x7863 (* l_0_10_54 l_0_10_54)))
 (let ((?x14308 (* l_0_10_53 l_0_10_53)))
 (let ((?x3514 (* l_0_10_52 l_0_10_52)))
 (let ((?x14539 (* 2.0 l_0_10_3)))
 (let ((?x11604 (* ?x14539 l_0_10_8)))
 (let ((?x14604 (+ (+ (+ (- (* (* (- 2.0) l_0_10_2) l_0_10_7) ?x11604) ?x3514) ?x14308) ?x7863)))
 (let ((?x14611 (- (- (- (- (- (- (+ ?x14604 ?x14312) ?x14264) ?x14267) ?x14270) ?x14273) ?x14510) ?x14515)))
 (= (+ (+ (+ (+ ?x14611 ?x14612) ?x14614) ?x14616) ?x14618) 0.0))))))))))))))))))))))
(assert
 (let ((?x14648 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14645 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14642 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14639 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14636 (* ?x14514 l_0_10_87)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14634 (* ?x14509 l_0_10_86)))
 (let ((?x14437 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14434 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14431 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14428 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14424 (* 2.0 l_0_10_55)))
 (let ((?x14425 (* ?x14424 l_0_10_59)))
 (let ((?x14421 (* 2.0 l_0_10_54)))
 (let ((?x14422 (* ?x14421 l_0_10_58)))
 (let ((?x14418 (* 2.0 l_0_10_53)))
 (let ((?x14419 (* ?x14418 l_0_10_57)))
 (let ((?x14415 (* 2.0 l_0_10_52)))
 (let ((?x14416 (* ?x14415 l_0_10_56)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x13959 (* ?x13958 l_0_10_38)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x13956 (* ?x13955 l_0_10_37)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x13953 (* ?x13952 l_0_10_23)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x13950 (* ?x13949 l_0_10_22)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x11616 (* ?x11615 l_0_10_3)))
 (let ((?x11608 (- (+ (+ (- (* (* (- 2.0) l_0_10_11) l_0_10_2) ?x11616) ?x13950) ?x13953) ?x13956)))
 (let ((?x14631 (- (- (+ (+ (+ (+ (- ?x11608 ?x13959) ?x14416) ?x14419) ?x14422) ?x14425) ?x14428) ?x14431)))
 (let ((?x14646 (+ (+ (+ (- (- (- (- ?x14631 ?x14434) ?x14437) ?x14634) ?x14636) ?x14639) ?x14642) ?x14645)))
 (= (+ ?x14646 ?x14648) 0.0)))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14704 (* l_0_10_81 l_0_10_81)))
 (let ((?x14702 (* l_0_10_80 l_0_10_80)))
 (let ((?x14700 (* l_0_10_79 l_0_10_79)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13894 (* ?x13622 l_0_10_67)))
 (let ((?x14688 (* l_0_10_6 l_0_10_6)))
 (let ((?x14680 (* l_0_10_5 l_0_10_5)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13892 (* ?x13619 l_0_10_52)))
 (let ((?x14674 (* l_0_10_4 l_0_10_4)))
 (let ((?x14658 (- (* (* 2.0 l_0_10_1) l_0_10_7) (* (* 4.0 l_0_10_19) l_0_10_22))))
 (let ((?x14664 (- (- ?x14658 (* (* 4.0 l_0_10_20) l_0_10_23)) (* (* 4.0 l_0_10_21) l_0_10_24))))
 (let ((?x14670 (+ (+ ?x14664 (* (* 4.0 l_0_10_34) l_0_10_37)) (* (* 4.0 l_0_10_35) l_0_10_38))))
 (let ((?x14679 (- (- (- (+ ?x14670 (* (* 4.0 l_0_10_36) l_0_10_39)) ?x14674) ?x13892) (* (* 4.0 l_0_10_49) l_0_10_52))))
 (let ((?x14687 (- (- (- ?x14679 ?x14680) (* (* 4.0 l_0_10_50) l_0_10_53)) (* (* 4.0 l_0_10_51) l_0_10_54))))
 (let ((?x14696 (+ (+ (+ (- ?x14687 ?x14688) ?x13894) (* (* 4.0 l_0_10_64) l_0_10_67)) (* (* 4.0 l_0_10_65) l_0_10_68))))
 (let ((?x14705 (- (- (- (+ ?x14696 (* (* 4.0 l_0_10_66) l_0_10_69)) ?x14700) ?x14702) ?x14704)))
 (= ?x14705 0.0)))))))))))))))))))
(assert
 (let ((?x14576 (* 2.0 l_0_10_81)))
 (let ((?x14577 (* ?x14576 l_0_10_84)))
 (let ((?x14573 (* 2.0 l_0_10_80)))
 (let ((?x14574 (* ?x14573 l_0_10_83)))
 (let ((?x14570 (* 2.0 l_0_10_79)))
 (let ((?x14571 (* ?x14570 l_0_10_82)))
 (let ((?x14273 (* l_0_10_70 l_0_10_70)))
 (let ((?x14783 (* 2.0 ?x14273)))
 (let ((?x14270 (* l_0_10_69 l_0_10_69)))
 (let ((?x14781 (* 2.0 ?x14270)))
 (let ((?x14267 (* l_0_10_68 l_0_10_68)))
 (let ((?x14779 (* 2.0 ?x14267)))
 (let ((?x14264 (* l_0_10_67 l_0_10_67)))
 (let ((?x14777 (* 2.0 ?x14264)))
 (let ((?x14775 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14764 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14249 (* l_0_10_40 l_0_10_40)))
 (let ((?x14761 (* 2.0 ?x14249)))
 (let ((?x14759 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x14246 (* l_0_10_39 l_0_10_39)))
 (let ((?x14756 (* 2.0 ?x14246)))
 (let ((?x14243 (* l_0_10_38 l_0_10_38)))
 (let ((?x14754 (* 2.0 ?x14243)))
 (let ((?x14240 (* l_0_10_37 l_0_10_37)))
 (let ((?x14752 (* 2.0 ?x14240)))
 (let ((?x14747 (- (* (* (- 2.0) l_0_10_22) l_0_10_22) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x14751 (- (- ?x14747 (* (* 2.0 l_0_10_24) l_0_10_24)) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (let ((?x14767 (- (- (+ (- (+ (+ (+ ?x14751 ?x14752) ?x14754) ?x14756) ?x14759) ?x14761) ?x14764) (* (* 2.0 l_0_10_52) l_0_10_52))))
 (let ((?x14771 (- (- ?x14767 (* (* 2.0 l_0_10_53) l_0_10_53)) (* (* 2.0 l_0_10_54) l_0_10_54))))
 (let ((?x14780 (+ (+ (- (- ?x14771 (* (* 2.0 l_0_10_55) l_0_10_55)) ?x14775) ?x14777) ?x14779)))
 (= (- (- (- (+ (+ ?x14780 ?x14781) ?x14783) ?x14571) ?x14574) ?x14577) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x14576 (* 2.0 l_0_10_81)))
 (let ((?x14880 (* ?x14576 l_0_10_88)))
 (let ((?x14573 (* 2.0 l_0_10_80)))
 (let ((?x14878 (* ?x14573 l_0_10_87)))
 (let ((?x14570 (* 2.0 l_0_10_79)))
 (let ((?x14876 (* ?x14570 l_0_10_86)))
 (let ((?x14081 (* 2.0 l_0_10_36)))
 (let ((?x14082 (* ?x14081 l_0_10_39)))
 (let ((?x14078 (* 2.0 l_0_10_35)))
 (let ((?x14079 (* ?x14078 l_0_10_38)))
 (let ((?x14075 (* 2.0 l_0_10_34)))
 (let ((?x14076 (* ?x14075 l_0_10_37)))
 (let ((?x14070 (* 2.0 l_0_10_21)))
 (let ((?x14071 (* ?x14070 l_0_10_24)))
 (let ((?x14067 (* 2.0 l_0_10_20)))
 (let ((?x14068 (* ?x14067 l_0_10_23)))
 (let ((?x14064 (* 2.0 l_0_10_19)))
 (let ((?x14065 (* ?x14064 l_0_10_22)))
 (let ((?x14819 (* 2.0 l_0_10_13)))
 (let ((?x14820 (* ?x14819 l_0_10_6)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x14817 (* ?x11615 l_0_10_5)))
 (let ((?x14823 (+ (+ (- (- (* (* (- 2.0) l_0_10_11) l_0_10_4) ?x14817) ?x14820) ?x14065) ?x14068)))
 (let ((?x14830 (- (- (+ ?x14823 ?x14071) (* (* 4.0 l_0_10_22) l_0_10_26)) (* (* 4.0 l_0_10_23) l_0_10_27))))
 (let ((?x14836 (- (- ?x14830 (* (* 4.0 l_0_10_24) l_0_10_28)) (* (* 4.0 l_0_10_25) l_0_10_29))))
 (let ((?x14842 (+ (- (- (- ?x14836 ?x14076) ?x14079) ?x14082) (* (* 4.0 l_0_10_37) l_0_10_41))))
 (let ((?x14848 (+ (+ ?x14842 (* (* 4.0 l_0_10_38) l_0_10_42)) (* (* 4.0 l_0_10_39) l_0_10_43))))
 (let ((?x14854 (- (+ ?x14848 (* (* 4.0 l_0_10_40) l_0_10_44)) (* (* 4.0 l_0_10_52) l_0_10_56))))
 (let ((?x14860 (- (- ?x14854 (* (* 4.0 l_0_10_53) l_0_10_57)) (* (* 4.0 l_0_10_54) l_0_10_58))))
 (let ((?x14866 (+ (- ?x14860 (* (* 4.0 l_0_10_55) l_0_10_59)) (* (* 4.0 l_0_10_67) l_0_10_71))))
 (let ((?x14872 (+ (+ ?x14866 (* (* 4.0 l_0_10_68) l_0_10_72)) (* (* 4.0 l_0_10_69) l_0_10_73))))
 (let ((?x14881 (- (- (- (+ ?x14872 (* (* 4.0 l_0_10_70) l_0_10_74)) ?x14876) ?x14878) ?x14880)))
 (= ?x14881 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14930 (* l_0_10_9 l_0_10_9)))
 (let ((?x14618 (* l_0_10_85 l_0_10_85)))
 (let ((?x14616 (* l_0_10_84 l_0_10_84)))
 (let ((?x14614 (* l_0_10_83 l_0_10_83)))
 (let ((?x14612 (* l_0_10_82 l_0_10_82)))
 (let ((?x14924 (* l_0_10_8 l_0_10_8)))
 (let ((?x14926 (- (- (- (* (- l_0_10_10) l_0_10_10) (* l_0_10_7 l_0_10_7)) ?x14924) ?x14612)))
 (= (- (- (- (- ?x14926 ?x14614) ?x14616) ?x14618) ?x14930) 0.0)))))))))
(assert
 (let ((?x14648 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x14645 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x14642 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x14639 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x14249 (* l_0_10_40 l_0_10_40)))
 (let ((?x14246 (* l_0_10_39 l_0_10_39)))
 (let ((?x14243 (* l_0_10_38 l_0_10_38)))
 (let ((?x14240 (* l_0_10_37 l_0_10_37)))
 (let ((?x7911 (* l_0_10_25 l_0_10_25)))
 (let ((?x3406 (* l_0_10_24 l_0_10_24)))
 (let ((?x11104 (* l_0_10_23 l_0_10_23)))
 (let ((?x11054 (* l_0_10_22 l_0_10_22)))
 (let ((?x14819 (* 2.0 l_0_10_13)))
 (let ((?x14954 (* ?x14819 l_0_10_9)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x14952 (* ?x11615 l_0_10_8)))
 (let ((?x14949 (* 2.0 l_0_10_11)))
 (let ((?x14950 (* ?x14949 l_0_10_7)))
 (let ((?x14956 (+ (- (- (- (* (* (- 2.0) l_0_10_10) l_0_10_14) ?x14950) ?x14952) ?x14954) ?x11054)))
 (let ((?x14963 (- (- (- (- (+ (+ (+ ?x14956 ?x11104) ?x3406) ?x7911) ?x14240) ?x14243) ?x14246) ?x14249)))
 (= (- (- (- (- ?x14963 ?x14639) ?x14642) ?x14645) ?x14648) 0.0))))))))))))))))))))))
(assert
 (let ((?x12057 (* l_0_10_90 l_0_10_90)))
 (let ((?x12068 (* l_0_10_89 l_0_10_89)))
 (let ((?x4988 (* l_0_10_88 l_0_10_88)))
 (let ((?x12012 (* l_0_10_87 l_0_10_87)))
 (let ((?x12038 (* l_0_10_86 l_0_10_86)))
 (let ((?x14413 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14410 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14407 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14404 (* (* 2.0 l_0_10_37) l_0_10_41)))
 (let ((?x14399 (* 2.0 l_0_10_25)))
 (let ((?x14400 (* ?x14399 l_0_10_29)))
 (let ((?x14396 (* 2.0 l_0_10_24)))
 (let ((?x14397 (* ?x14396 l_0_10_28)))
 (let ((?x14393 (* 2.0 l_0_10_23)))
 (let ((?x14394 (* ?x14393 l_0_10_27)))
 (let ((?x14391 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x8653 (* l_0_10_15 l_0_10_15)))
 (let ((?x4806 (* l_0_10_14 l_0_10_14)))
 (let ((?x4789 (* l_0_10_13 l_0_10_13)))
 (let ((?x4802 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x4789)))
 (let ((?x4900 (- (+ (+ (+ (+ (- (- ?x4802 ?x4806) ?x8653) ?x14391) ?x14394) ?x14397) ?x14400) ?x14404)))
 (let ((?x12069 (- (- (- (- (- (- (- ?x4900 ?x14407) ?x14410) ?x14413) ?x12038) ?x12012) ?x4988) ?x12068)))
 (= (- ?x12069 ?x12057) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14704 (* l_0_10_81 l_0_10_81)))
 (let ((?x14702 (* l_0_10_80 l_0_10_80)))
 (let ((?x14700 (* l_0_10_79 l_0_10_79)))
 (let ((?x13760 (* l_0_10_66 l_0_10_66)))
 (let ((?x13757 (* l_0_10_65 l_0_10_65)))
 (let ((?x13754 (* l_0_10_64 l_0_10_64)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13662 (* ?x13622 l_0_10_62)))
 (let ((?x10652 (* l_0_10_51 l_0_10_51)))
 (let ((?x10450 (* l_0_10_50 l_0_10_50)))
 (let ((?x2914 (* l_0_10_49 l_0_10_49)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13659 (* ?x13619 l_0_10_47)))
 (let ((?x8743 (- (* (* 2.0 l_0_10_1) l_0_10_2) (* (* 4.0 l_0_10_17) l_0_10_19))))
 (let ((?x14989 (+ (- ?x8743 (* (* 4.0 l_0_10_18) l_0_10_20)) (* (* 4.0 l_0_10_32) l_0_10_34))))
 (let ((?x14994 (- (- (+ ?x14989 (* (* 4.0 l_0_10_33) l_0_10_35)) ?x13659) (* (* 4.0 l_0_10_47) l_0_10_49))))
 (let ((?x14999 (+ (+ (+ (- ?x14994 (* (* 4.0 l_0_10_48) l_0_10_50)) ?x2914) ?x10450) ?x10652)))
 (let ((?x15004 (+ (+ (+ ?x14999 ?x13662) (* (* 4.0 l_0_10_62) l_0_10_64)) (* (* 4.0 l_0_10_63) l_0_10_65))))
 (= (+ (+ (+ (- (- (- ?x15004 ?x13754) ?x13757) ?x13760) ?x14700) ?x14702) ?x14704) 0.0))))))))))))))))))))
(assert
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13825 (* ?x13622 l_0_10_64)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13821 (* ?x13619 l_0_10_49)))
 (let ((?x13734 (* l_0_10_36 l_0_10_36)))
 (let ((?x15030 (* 2.0 ?x13734)))
 (let ((?x13731 (* l_0_10_35 l_0_10_35)))
 (let ((?x15028 (* 2.0 ?x13731)))
 (let ((?x13728 (* l_0_10_34 l_0_10_34)))
 (let ((?x5258 (* 2.0 ?x13728)))
 (let ((?x8890 (- (* (* 2.0 l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_19) l_0_10_19))))
 (let ((?x5257 (- (- ?x8890 (* (* 2.0 l_0_10_20) l_0_10_20)) (* (* 2.0 l_0_10_21) l_0_10_21))))
 (let ((?x15034 (- (- (+ (+ (+ ?x5257 ?x5258) ?x15028) ?x15030) ?x13821) (* (* 2.0 l_0_10_49) l_0_10_49))))
 (let ((?x15038 (- (- ?x15034 (* (* 2.0 l_0_10_50) l_0_10_50)) (* (* 2.0 l_0_10_51) l_0_10_51))))
 (let ((?x15043 (+ (+ (+ ?x15038 ?x13825) (* 2.0 (* l_0_10_64 l_0_10_64))) (* 2.0 (* l_0_10_65 l_0_10_65)))))
 (= (+ ?x15043 (* 2.0 (* l_0_10_66 l_0_10_66))) 0.0)))))))))))))))))
(assert
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13623 (* ?x13622 l_0_10_71)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13620 (* ?x13619 l_0_10_56)))
 (let ((?x13734 (* l_0_10_36 l_0_10_36)))
 (let ((?x13731 (* l_0_10_35 l_0_10_35)))
 (let ((?x13728 (* l_0_10_34 l_0_10_34)))
 (let ((?x2910 (* l_0_10_21 l_0_10_21)))
 (let ((?x13794 (* l_0_10_20 l_0_10_20)))
 (let ((?x10655 (* l_0_10_19 l_0_10_19)))
 (let ((?x5356 (- (* (* 2.0 l_0_10_1) l_0_10_11) (* (* 4.0 l_0_10_19) l_0_10_26))))
 (let ((?x15060 (- (+ (- (+ ?x5356 ?x10655) (* (* 4.0 l_0_10_20) l_0_10_27)) ?x13794) (* (* 4.0 l_0_10_21) l_0_10_28))))
 (let ((?x15066 (+ (- (+ (+ ?x15060 ?x2910) (* (* 4.0 l_0_10_34) l_0_10_41)) ?x13728) (* (* 4.0 l_0_10_35) l_0_10_42))))
 (let ((?x15071 (- (- (+ (- ?x15066 ?x13731) (* (* 4.0 l_0_10_36) l_0_10_43)) ?x13734) ?x13620)))
 (let ((?x15075 (- (- ?x15071 (* (* 4.0 l_0_10_49) l_0_10_56)) (* (* 4.0 l_0_10_50) l_0_10_57))))
 (let ((?x15080 (+ (+ (- ?x15075 (* (* 4.0 l_0_10_51) l_0_10_58)) ?x13623) (* (* 4.0 l_0_10_64) l_0_10_71))))
 (let ((?x15084 (+ (+ ?x15080 (* (* 4.0 l_0_10_65) l_0_10_72)) (* (* 4.0 l_0_10_66) l_0_10_73))))
 (= ?x15084 0.0)))))))))))))))))))
(assert
 (let ((?x15116 (* l_0_10_63 l_0_10_63)))
 (let ((?x15114 (* l_0_10_62 l_0_10_62)))
 (let ((?x15112 (* l_0_10_48 l_0_10_48)))
 (let ((?x15110 (* l_0_10_47 l_0_10_47)))
 (let ((?x14503 (* l_0_10_3 l_0_10_3)))
 (let ((?x3926 (* l_0_10_2 l_0_10_2)))
 (let ((?x15109 (+ ?x3926 ?x14503)))
 (= (+ (+ (- (- ?x15109 ?x15110) ?x15112) ?x15114) ?x15116) 0.0)))))))))
(assert
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15128 (* ?x13972 l_0_10_65)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15126 (* ?x13969 l_0_10_64)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15124 (* ?x13965 l_0_10_50)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15122 (* ?x13962 l_0_10_49)))
 (let ((?x14539 (* 2.0 l_0_10_3)))
 (let ((?x14540 (* ?x14539 l_0_10_5)))
 (let ((?x14536 (* 2.0 l_0_10_2)))
 (let ((?x14537 (* ?x14536 l_0_10_4)))
 (= (+ (+ (- (- (+ ?x14537 ?x14540) ?x15122) ?x15124) ?x15126) ?x15128) 0.0))))))))))))))
(assert
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x13973 (* ?x13972 l_0_10_68)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x13970 (* ?x13969 l_0_10_67)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x13966 (* ?x13965 l_0_10_53)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x13963 (* ?x13962 l_0_10_52)))
 (let ((?x14539 (* 2.0 l_0_10_3)))
 (let ((?x11604 (* ?x14539 l_0_10_8)))
 (let ((?x15144 (+ (- (- (+ (* (* 2.0 l_0_10_2) l_0_10_7) ?x11604) ?x13963) ?x13966) ?x13970)))
 (= (+ ?x15144 ?x13973) 0.0)))))))))))))
(assert
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15160 (* ?x13972 l_0_10_72)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15158 (* ?x13969 l_0_10_71)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15156 (* ?x13965 l_0_10_57)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15154 (* ?x13962 l_0_10_56)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x11616 (* ?x11615 l_0_10_3)))
 (let ((?x15159 (+ (- (- (+ (* (* 2.0 l_0_10_11) l_0_10_2) ?x11616) ?x15154) ?x15156) ?x15158)))
 (= (+ ?x15159 ?x15160) 0.0)))))))))))))
(assert
 (let ((?x13760 (* l_0_10_66 l_0_10_66)))
 (let ((?x13757 (* l_0_10_65 l_0_10_65)))
 (let ((?x13754 (* l_0_10_64 l_0_10_64)))
 (let ((?x14688 (* l_0_10_6 l_0_10_6)))
 (let ((?x10652 (* l_0_10_51 l_0_10_51)))
 (let ((?x10450 (* l_0_10_50 l_0_10_50)))
 (let ((?x14680 (* l_0_10_5 l_0_10_5)))
 (let ((?x15181 (- (+ (- (* l_0_10_4 l_0_10_4) (* l_0_10_49 l_0_10_49)) ?x14680) ?x10450)))
 (= (+ (+ (+ (+ (- ?x15181 ?x10652) ?x14688) ?x13754) ?x13757) ?x13760) 0.0))))))))))
(assert
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x14104 (* ?x14103 l_0_10_69)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x14101 (* ?x14100 l_0_10_68)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x14098 (* ?x14097 l_0_10_67)))
 (let ((?x14775 (* (* 2.0 l_0_10_6) l_0_10_9)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x14093 (* ?x14092 l_0_10_54)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x14090 (* ?x14089 l_0_10_53)))
 (let ((?x14764 (* (* 2.0 l_0_10_5) l_0_10_8)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x14087 (* ?x14086 l_0_10_52)))
 (let ((?x14759 (* (* 2.0 l_0_10_4) l_0_10_7)))
 (let ((?x15200 (+ (+ (+ (- (- (+ (- ?x14759 ?x14087) ?x14764) ?x14090) ?x14093) ?x14775) ?x14098) ?x14101)))
 (= (+ ?x15200 ?x14104) 0.0))))))))))))))))))
(assert
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x15222 (* ?x14103 l_0_10_73)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x15220 (* ?x14100 l_0_10_72)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x15218 (* ?x14097 l_0_10_71)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x15216 (* ?x14092 l_0_10_58)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x15214 (* ?x14089 l_0_10_57)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x15212 (* ?x14086 l_0_10_56)))
 (let ((?x14819 (* 2.0 l_0_10_13)))
 (let ((?x14820 (* ?x14819 l_0_10_6)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x14817 (* ?x11615 l_0_10_5)))
 (let ((?x15215 (- (- (+ (+ (* (* 2.0 l_0_10_11) l_0_10_4) ?x14817) ?x14820) ?x15212) ?x15214)))
 (= (+ (+ (+ (- ?x15215 ?x15216) ?x15218) ?x15220) ?x15222) 0.0)))))))))))))))))))
(assert
 (let ((?x14930 (* l_0_10_9 l_0_10_9)))
 (let ((?x14924 (* l_0_10_8 l_0_10_8)))
 (let ((?x14273 (* l_0_10_70 l_0_10_70)))
 (let ((?x14922 (* l_0_10_7 l_0_10_7)))
 (let ((?x14270 (* l_0_10_69 l_0_10_69)))
 (let ((?x14267 (* l_0_10_68 l_0_10_68)))
 (let ((?x14264 (* l_0_10_67 l_0_10_67)))
 (let ((?x14312 (* l_0_10_55 l_0_10_55)))
 (let ((?x7863 (* l_0_10_54 l_0_10_54)))
 (let ((?x14308 (* l_0_10_53 l_0_10_53)))
 (let ((?x12383 (- (- (- (* l_0_10_10 l_0_10_10) (* l_0_10_52 l_0_10_52)) ?x14308) ?x7863)))
 (let ((?x9190 (+ (+ (+ (+ (+ (+ (- ?x12383 ?x14312) ?x14264) ?x14267) ?x14270) ?x14922) ?x14273) ?x14924)))
 (= (+ ?x9190 ?x14930) 0.0))))))))))))))
(assert
 (let ((?x14437 (* (* 2.0 l_0_10_70) l_0_10_74)))
 (let ((?x14434 (* (* 2.0 l_0_10_69) l_0_10_73)))
 (let ((?x14431 (* (* 2.0 l_0_10_68) l_0_10_72)))
 (let ((?x14428 (* (* 2.0 l_0_10_67) l_0_10_71)))
 (let ((?x14424 (* 2.0 l_0_10_55)))
 (let ((?x14425 (* ?x14424 l_0_10_59)))
 (let ((?x14421 (* 2.0 l_0_10_54)))
 (let ((?x14422 (* ?x14421 l_0_10_58)))
 (let ((?x14418 (* 2.0 l_0_10_53)))
 (let ((?x14419 (* ?x14418 l_0_10_57)))
 (let ((?x14415 (* 2.0 l_0_10_52)))
 (let ((?x14416 (* ?x14415 l_0_10_56)))
 (let ((?x14819 (* 2.0 l_0_10_13)))
 (let ((?x14954 (* ?x14819 l_0_10_9)))
 (let ((?x11615 (* 2.0 l_0_10_12)))
 (let ((?x14952 (* ?x11615 l_0_10_8)))
 (let ((?x14949 (* 2.0 l_0_10_11)))
 (let ((?x14950 (* ?x14949 l_0_10_7)))
 (let ((?x15248 (- (+ (+ (+ (* (* 2.0 l_0_10_10) l_0_10_14) ?x14950) ?x14952) ?x14954) ?x14416)))
 (let ((?x15255 (+ (+ (+ (+ (- (- (- ?x15248 ?x14419) ?x14422) ?x14425) ?x14428) ?x14431) ?x14434) ?x14437)))
 (= ?x15255 0.0))))))))))))))))))))))
(assert
 (let ((?x15283 (* l_0_10_75 l_0_10_75)))
 (let ((?x15281 (* l_0_10_74 l_0_10_74)))
 (let ((?x15279 (* l_0_10_73 l_0_10_73)))
 (let ((?x15277 (* l_0_10_72 l_0_10_72)))
 (let ((?x15275 (* l_0_10_71 l_0_10_71)))
 (let ((?x15273 (* l_0_10_60 l_0_10_60)))
 (let ((?x15271 (* l_0_10_59 l_0_10_59)))
 (let ((?x15269 (* l_0_10_58 l_0_10_58)))
 (let ((?x15267 (* l_0_10_57 l_0_10_57)))
 (let ((?x15265 (* l_0_10_56 l_0_10_56)))
 (let ((?x8653 (* l_0_10_15 l_0_10_15)))
 (let ((?x4806 (* l_0_10_14 l_0_10_14)))
 (let ((?x4789 (* l_0_10_13 l_0_10_13)))
 (let ((?x15263 (+ (+ (+ (* l_0_10_11 l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x4789) ?x4806)))
 (let ((?x15276 (+ (- (- (- (- (- (+ ?x15263 ?x8653) ?x15265) ?x15267) ?x15269) ?x15271) ?x15273) ?x15275)))
 (= (+ (+ (+ (+ ?x15276 ?x15277) ?x15279) ?x15281) ?x15283) 0.0)))))))))))))))))
(assert
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x14106 (* ?x13975 l_0_10_79)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15128 (* ?x13972 l_0_10_65)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15126 (* ?x13969 l_0_10_64)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13825 (* ?x13622 l_0_10_64)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15124 (* ?x13965 l_0_10_50)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15122 (* ?x13962 l_0_10_49)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13821 (* ?x13619 l_0_10_49)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x15323 (* ?x13958 l_0_10_35)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x15321 (* ?x13955 l_0_10_34)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x15317 (* ?x13952 l_0_10_20)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x15315 (* ?x13949 l_0_10_19)))
 (let ((?x15300 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x15304 (- (- ?x15300 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x15308 (- (- ?x15304 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x15312 (- (- ?x15308 (* (* 2.0 l_0_10_152) l_0_10_154)) (* (* 2.0 l_0_10_153) l_0_10_155))))
 (let ((?x15320 (+ (- (- (- ?x15312 (* (* 4.0 l_0_10_16) l_0_10_17)) ?x15315) ?x15317) (* (* 4.0 l_0_10_31) l_0_10_32))))
 (let ((?x15327 (+ (- (+ (+ ?x15320 ?x15321) ?x15323) (* (* 4.0 l_0_10_46) l_0_10_47)) ?x13821)))
 (let ((?x15332 (- (+ (- (- ?x15327 ?x15122) ?x15124) (* (* 4.0 l_0_10_61) l_0_10_62)) ?x13825)))
 (let ((?x15337 (- (+ (+ (+ ?x15332 ?x15126) ?x15128) ?x14106) (* (* 2.0 l_0_10_92) l_0_10_94))))
 (= (- ?x15337 (* (* 2.0 l_0_10_93) l_0_10_95)) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x15222 (* ?x14103 l_0_10_73)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x15220 (* ?x14100 l_0_10_72)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x15218 (* ?x14097 l_0_10_71)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x15216 (* ?x14092 l_0_10_58)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x15214 (* ?x14089 l_0_10_57)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x15212 (* ?x14086 l_0_10_56)))
 (let ((?x14081 (* 2.0 l_0_10_36)))
 (let ((?x15430 (* ?x14081 l_0_10_43)))
 (let ((?x14078 (* 2.0 l_0_10_35)))
 (let ((?x15428 (* ?x14078 l_0_10_42)))
 (let ((?x14075 (* 2.0 l_0_10_34)))
 (let ((?x15426 (* ?x14075 l_0_10_41)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13817 (* ?x13615 l_0_10_34)))
 (let ((?x14070 (* 2.0 l_0_10_21)))
 (let ((?x15421 (* ?x14070 l_0_10_28)))
 (let ((?x14067 (* 2.0 l_0_10_20)))
 (let ((?x15419 (* ?x14067 l_0_10_27)))
 (let ((?x14064 (* 2.0 l_0_10_19)))
 (let ((?x15417 (* ?x14064 l_0_10_26)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13813 (* ?x13611 l_0_10_19)))
 (let ((?x15387 (- (* (* (- 2.0) l_0_10_101) l_0_10_94) (* (* 2.0 l_0_10_102) l_0_10_95))))
 (let ((?x15391 (- (- ?x15387 (* (* 2.0 l_0_10_103) l_0_10_96)) (* (* 2.0 l_0_10_109) l_0_10_116))))
 (let ((?x15395 (- (- ?x15391 (* (* 2.0 l_0_10_110) l_0_10_117)) (* (* 2.0 l_0_10_111) l_0_10_118))))
 (let ((?x15399 (- (- ?x15395 (* (* 2.0 l_0_10_124) l_0_10_131)) (* (* 2.0 l_0_10_125) l_0_10_132))))
 (let ((?x15403 (- (- ?x15399 (* (* 2.0 l_0_10_126) l_0_10_133)) (* (* 2.0 l_0_10_139) l_0_10_146))))
 (let ((?x15407 (- (- ?x15403 (* (* 2.0 l_0_10_140) l_0_10_147)) (* (* 2.0 l_0_10_141) l_0_10_148))))
 (let ((?x15411 (- (- ?x15407 (* (* 2.0 l_0_10_154) l_0_10_161)) (* (* 2.0 l_0_10_155) l_0_10_162))))
 (let ((?x15416 (- (+ (- ?x15411 (* (* 2.0 l_0_10_156) l_0_10_163)) ?x13813) (* (* 4.0 l_0_10_16) l_0_10_26))))
 (let ((?x15425 (+ (- (- (- (- ?x15416 ?x15417) ?x15419) ?x15421) ?x13817) (* (* 4.0 l_0_10_31) l_0_10_41))))
 (let ((?x15433 (- (+ (+ (+ ?x15425 ?x15426) ?x15428) ?x15430) (* (* 4.0 l_0_10_46) l_0_10_56))))
 (let ((?x15438 (+ (- (- (- ?x15433 ?x15212) ?x15214) ?x15216) (* (* 4.0 l_0_10_61) l_0_10_71))))
 (= (+ (+ (+ ?x15438 ?x15218) ?x15220) ?x15222) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14568 (* ?x14514 l_0_10_80)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14566 (* ?x14509 l_0_10_79)))
 (let ((?x15116 (* l_0_10_63 l_0_10_63)))
 (let ((?x15515 (* 2.0 ?x15116)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15128 (* ?x13972 l_0_10_65)))
 (let ((?x15114 (* l_0_10_62 l_0_10_62)))
 (let ((?x15512 (* 2.0 ?x15114)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15126 (* ?x13969 l_0_10_64)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15124 (* ?x13965 l_0_10_50)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15122 (* ?x13962 l_0_10_49)))
 (let ((?x15502 (* l_0_10_33 l_0_10_33)))
 (let ((?x15503 (* 2.0 ?x15502)))
 (let ((?x15499 (* l_0_10_32 l_0_10_32)))
 (let ((?x15500 (* 2.0 ?x15499)))
 (let ((?x15498 (- (* (* (- 2.0) l_0_10_17) l_0_10_17) (* (* 2.0 l_0_10_18) l_0_10_18))))
 (let ((?x15510 (- (+ (- (+ (+ (+ ?x15498 ?x15500) ?x15503) ?x15122) (* ?x13962 l_0_10_47)) ?x15124) (* ?x13965 l_0_10_48))))
 (= (+ (+ (+ (- (+ (- ?x15510 ?x15126) ?x15512) ?x15128) ?x15515) ?x14566) ?x14568) 0.0))))))))))))))))))))))))
(assert
 (let ((?x14576 (* 2.0 l_0_10_81)))
 (let ((?x14880 (* ?x14576 l_0_10_88)))
 (let ((?x14573 (* 2.0 l_0_10_80)))
 (let ((?x14878 (* ?x14573 l_0_10_87)))
 (let ((?x14570 (* 2.0 l_0_10_79)))
 (let ((?x14876 (* ?x14570 l_0_10_86)))
 (let ((?x14103 (* 2.0 l_0_10_66)))
 (let ((?x15222 (* ?x14103 l_0_10_73)))
 (let ((?x14100 (* 2.0 l_0_10_65)))
 (let ((?x15220 (* ?x14100 l_0_10_72)))
 (let ((?x14097 (* 2.0 l_0_10_64)))
 (let ((?x15218 (* ?x14097 l_0_10_71)))
 (let ((?x14092 (* 2.0 l_0_10_51)))
 (let ((?x15216 (* ?x14092 l_0_10_58)))
 (let ((?x14089 (* 2.0 l_0_10_50)))
 (let ((?x15214 (* ?x14089 l_0_10_57)))
 (let ((?x14086 (* 2.0 l_0_10_49)))
 (let ((?x15212 (* ?x14086 l_0_10_56)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x15323 (* ?x13958 l_0_10_35)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x15321 (* ?x13955 l_0_10_34)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x15317 (* ?x13952 l_0_10_20)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x15315 (* ?x13949 l_0_10_19)))
 (let ((?x9705 (- (+ (- ?x15315 (* (* 4.0 l_0_10_17) l_0_10_26)) ?x15317) (* (* 4.0 l_0_10_18) l_0_10_27))))
 (let ((?x15545 (+ (- (+ (- ?x9705 ?x15321) (* (* 4.0 l_0_10_32) l_0_10_41)) ?x15323) (* (* 4.0 l_0_10_33) l_0_10_42))))
 (let ((?x15549 (- (- ?x15545 (* (* 4.0 l_0_10_47) l_0_10_56)) (* (* 4.0 l_0_10_48) l_0_10_57))))
 (let ((?x15554 (+ (+ (+ (+ ?x15549 ?x15212) ?x15214) ?x15216) (* (* 4.0 l_0_10_62) l_0_10_71))))
 (let ((?x15559 (- (- (- (+ ?x15554 (* (* 4.0 l_0_10_63) l_0_10_72)) ?x15218) ?x15220) ?x15222)))
 (= (+ (+ (+ ?x15559 ?x14876) ?x14878) ?x14880) 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x15621 (* l_0_10_45 l_0_10_45)))
 (let ((?x15622 (* 2.0 ?x15621)))
 (let ((?x15618 (* l_0_10_44 l_0_10_44)))
 (let ((?x15619 (* 2.0 ?x15618)))
 (let ((?x15615 (* l_0_10_43 l_0_10_43)))
 (let ((?x15616 (* 2.0 ?x15615)))
 (let ((?x15612 (* l_0_10_42 l_0_10_42)))
 (let ((?x15613 (* 2.0 ?x15612)))
 (let ((?x15609 (* l_0_10_41 l_0_10_41)))
 (let ((?x15610 (* 2.0 ?x15609)))
 (let ((?x14081 (* 2.0 l_0_10_36)))
 (let ((?x15430 (* ?x14081 l_0_10_43)))
 (let ((?x14078 (* 2.0 l_0_10_35)))
 (let ((?x15428 (* ?x14078 l_0_10_42)))
 (let ((?x14075 (* 2.0 l_0_10_34)))
 (let ((?x15426 (* ?x14075 l_0_10_41)))
 (let ((?x14070 (* 2.0 l_0_10_21)))
 (let ((?x15421 (* ?x14070 l_0_10_28)))
 (let ((?x14067 (* 2.0 l_0_10_20)))
 (let ((?x15419 (* ?x14067 l_0_10_27)))
 (let ((?x14064 (* 2.0 l_0_10_19)))
 (let ((?x15417 (* ?x14064 l_0_10_26)))
 (let ((?x15596 (- (- (+ (+ ?x15417 ?x15419) ?x15421) (* (* 2.0 l_0_10_26) l_0_10_26)) (* (* 2.0 l_0_10_27) l_0_10_27))))
 (let ((?x15602 (- (- ?x15596 (* (* 2.0 l_0_10_28) l_0_10_28)) (* (* 2.0 l_0_10_29) l_0_10_29))))
 (let ((?x15608 (- (- (- (- ?x15602 (* (* 2.0 l_0_10_30) l_0_10_30)) ?x15426) ?x15428) ?x15430)))
 (let ((?x15626 (- (+ (+ (+ (+ (+ ?x15608 ?x15610) ?x15613) ?x15616) ?x15619) ?x15622) (* (* 2.0 l_0_10_56) l_0_10_56))))
 (let ((?x15632 (- (- ?x15626 (* (* 2.0 l_0_10_57) l_0_10_57)) (* (* 2.0 l_0_10_58) l_0_10_58))))
 (let ((?x15638 (- (- ?x15632 (* (* 2.0 l_0_10_59) l_0_10_59)) (* (* 2.0 l_0_10_60) l_0_10_60))))
 (let ((?x15642 (+ (+ ?x15638 (* 2.0 (* l_0_10_71 l_0_10_71))) (* 2.0 (* l_0_10_72 l_0_10_72)))))
 (let ((?x15646 (+ (+ ?x15642 (* 2.0 (* l_0_10_73 l_0_10_73))) (* 2.0 (* l_0_10_74 l_0_10_74)))))
 (= (+ ?x15646 (* 2.0 (* l_0_10_75 l_0_10_75))) 0.0))))))))))))))))))))))))))))))))
(assert
 (let ((?x15709 (* l_0_10_93 l_0_10_93)))
 (let ((?x15707 (* l_0_10_92 l_0_10_92)))
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x13976 (* ?x13975 l_0_10_77)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13662 (* ?x13622 l_0_10_62)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13659 (* ?x13619 l_0_10_47)))
 (let ((?x15682 (* l_0_10_153 l_0_10_153)))
 (let ((?x15680 (* l_0_10_152 l_0_10_152)))
 (let ((?x15678 (* l_0_10_138 l_0_10_138)))
 (let ((?x15676 (* l_0_10_137 l_0_10_137)))
 (let ((?x15674 (* l_0_10_123 l_0_10_123)))
 (let ((?x15672 (* l_0_10_122 l_0_10_122)))
 (let ((?x15673 (- (- (* (- l_0_10_107) l_0_10_107) (* l_0_10_108 l_0_10_108)) ?x15672)))
 (let ((?x15686 (- (- (- (- (- (- ?x15673 ?x15674) ?x15676) ?x15678) ?x15680) ?x15682) (* (* 1.0 l_0_10_17) l_0_10_17))))
 (let ((?x15691 (+ (- ?x15686 (* (* 1.0 l_0_10_18) l_0_10_18)) (* 1.0 (* l_0_10_32 l_0_10_32)))))
 (let ((?x15697 (- (+ (+ ?x15691 (* 1.0 (* l_0_10_33 l_0_10_33))) ?x13659) (* (* 1.0 l_0_10_47) l_0_10_47))))
 (let ((?x15703 (+ (- (- ?x15697 (* (* 1.0 l_0_10_48) l_0_10_48)) ?x13662) (* 1.0 (* l_0_10_62 l_0_10_62)))))
 (let ((?x15710 (- (- (+ (+ ?x15703 (* 1.0 (* l_0_10_63 l_0_10_63))) ?x13976) ?x15707) ?x15709)))
 (= ?x15710 0.0))))))))))))))))))))))
(assert
 (let ((?x13975 (* 2.0 l_0_10_76)))
 (let ((?x14439 (* ?x13975 l_0_10_86)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15160 (* ?x13972 l_0_10_72)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15158 (* ?x13969 l_0_10_71)))
 (let ((?x13622 (* 2.0 l_0_10_61)))
 (let ((?x13623 (* ?x13622 l_0_10_71)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15156 (* ?x13965 l_0_10_57)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15154 (* ?x13962 l_0_10_56)))
 (let ((?x13619 (* 2.0 l_0_10_46)))
 (let ((?x13620 (* ?x13619 l_0_10_56)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x15763 (* ?x13958 l_0_10_42)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x15761 (* ?x13955 l_0_10_41)))
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13657 (* ?x13615 l_0_10_32)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x15758 (* ?x13952 l_0_10_27)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x15756 (* ?x13949 l_0_10_26)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13655 (* ?x13611 l_0_10_17)))
 (let ((?x15738 (- (* (* (- 2.0) l_0_10_101) l_0_10_92) (* (* 2.0 l_0_10_102) l_0_10_93))))
 (let ((?x15742 (- (- ?x15738 (* (* 2.0 l_0_10_107) l_0_10_116)) (* (* 2.0 l_0_10_108) l_0_10_117))))
 (let ((?x15746 (- (- ?x15742 (* (* 2.0 l_0_10_122) l_0_10_131)) (* (* 2.0 l_0_10_123) l_0_10_132))))
 (let ((?x15750 (- (- ?x15746 (* (* 2.0 l_0_10_137) l_0_10_146)) (* (* 2.0 l_0_10_138) l_0_10_147))))
 (let ((?x15754 (- (- ?x15750 (* (* 2.0 l_0_10_152) l_0_10_161)) (* (* 2.0 l_0_10_153) l_0_10_162))))
 (let ((?x15765 (+ (+ (+ (- (- (- (+ ?x15754 ?x13655) ?x15756) ?x15758) ?x13657) ?x15761) ?x15763) ?x13620)))
 (= (+ (+ (+ (- (- (- ?x15765 ?x15154) ?x15156) ?x13623) ?x15158) ?x15160) ?x14439) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13615 (* 2.0 l_0_10_31)))
 (let ((?x13616 (* ?x13615 l_0_10_41)))
 (let ((?x15866 (* l_0_10_165 l_0_10_165)))
 (let ((?x15864 (* l_0_10_164 l_0_10_164)))
 (let ((?x15862 (* l_0_10_163 l_0_10_163)))
 (let ((?x15860 (* l_0_10_162 l_0_10_162)))
 (let ((?x15858 (* l_0_10_161 l_0_10_161)))
 (let ((?x13611 (* 2.0 l_0_10_16)))
 (let ((?x13612 (* ?x13611 l_0_10_26)))
 (let ((?x15855 (* l_0_10_150 l_0_10_150)))
 (let ((?x15853 (* l_0_10_149 l_0_10_149)))
 (let ((?x15851 (* l_0_10_148 l_0_10_148)))
 (let ((?x15849 (* l_0_10_147 l_0_10_147)))
 (let ((?x15847 (* l_0_10_146 l_0_10_146)))
 (let ((?x15845 (* l_0_10_135 l_0_10_135)))
 (let ((?x15843 (* l_0_10_134 l_0_10_134)))
 (let ((?x15841 (* l_0_10_133 l_0_10_133)))
 (let ((?x15839 (* l_0_10_132 l_0_10_132)))
 (let ((?x15837 (* l_0_10_131 l_0_10_131)))
 (let ((?x15835 (* l_0_10_120 l_0_10_120)))
 (let ((?x15833 (* l_0_10_119 l_0_10_119)))
 (let ((?x15831 (* l_0_10_118 l_0_10_118)))
 (let ((?x15829 (* l_0_10_117 l_0_10_117)))
 (let ((?x15827 (* l_0_10_116 l_0_10_116)))
 (let ((?x15825 (* l_0_10_105 l_0_10_105)))
 (let ((?x15823 (* l_0_10_104 l_0_10_104)))
 (let ((?x15821 (* l_0_10_103 l_0_10_103)))
 (let ((?x15822 (- (- (* (- l_0_10_101) l_0_10_101) (* l_0_10_102 l_0_10_102)) ?x15821)))
 (let ((?x15836 (- (- (- (- (- (- (- ?x15822 ?x15823) ?x15825) ?x15827) ?x15829) ?x15831) ?x15833) ?x15835)))
 (let ((?x15850 (- (- (- (- (- (- (- ?x15836 ?x15837) ?x15839) ?x15841) ?x15843) ?x15845) ?x15847) ?x15849)))
 (let ((?x15863 (- (- (- (+ (- (- (- ?x15850 ?x15851) ?x15853) ?x15855) ?x13612) ?x15858) ?x15860) ?x15862)))
 (let ((?x15873 (- (- (- (- ?x15863 ?x15864) ?x15866) (* (* 1.0 l_0_10_26) l_0_10_26)) (* (* 1.0 l_0_10_27) l_0_10_27))))
 (let ((?x15879 (- (- ?x15873 (* (* 1.0 l_0_10_28) l_0_10_28)) (* (* 1.0 l_0_10_29) l_0_10_29))))
 (let ((?x15885 (+ (- (- ?x15879 (* (* 1.0 l_0_10_30) l_0_10_30)) ?x13616) (* 1.0 (* l_0_10_41 l_0_10_41)))))
 (let ((?x15889 (+ (+ ?x15885 (* 1.0 (* l_0_10_42 l_0_10_42))) (* 1.0 (* l_0_10_43 l_0_10_43)))))
 (let ((?x15893 (+ (+ ?x15889 (* 1.0 (* l_0_10_44 l_0_10_44))) (* 1.0 (* l_0_10_45 l_0_10_45)))))
 (let ((?x15899 (- (- ?x15893 (* (* 1.0 l_0_10_56) l_0_10_56)) (* (* 1.0 l_0_10_57) l_0_10_57))))
 (let ((?x15905 (- (- ?x15899 (* (* 1.0 l_0_10_58) l_0_10_58)) (* (* 1.0 l_0_10_59) l_0_10_59))))
 (let ((?x15910 (+ (- ?x15905 (* (* 1.0 l_0_10_60) l_0_10_60)) (* 1.0 (* l_0_10_71 l_0_10_71)))))
 (let ((?x15914 (+ (+ ?x15910 (* 1.0 (* l_0_10_72 l_0_10_72))) (* 1.0 (* l_0_10_73 l_0_10_73)))))
 (let ((?x15918 (+ (+ ?x15914 (* 1.0 (* l_0_10_74 l_0_10_74))) (* 1.0 (* l_0_10_75 l_0_10_75)))))
 (= ?x15918 0.0)))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x14514 (* 2.0 l_0_10_78)))
 (let ((?x14636 (* ?x14514 l_0_10_87)))
 (let ((?x14509 (* 2.0 l_0_10_77)))
 (let ((?x14634 (* ?x14509 l_0_10_86)))
 (let ((?x13972 (* 2.0 l_0_10_63)))
 (let ((?x15160 (* ?x13972 l_0_10_72)))
 (let ((?x13969 (* 2.0 l_0_10_62)))
 (let ((?x15158 (* ?x13969 l_0_10_71)))
 (let ((?x13965 (* 2.0 l_0_10_48)))
 (let ((?x15156 (* ?x13965 l_0_10_57)))
 (let ((?x13962 (* 2.0 l_0_10_47)))
 (let ((?x15154 (* ?x13962 l_0_10_56)))
 (let ((?x15502 (* l_0_10_33 l_0_10_33)))
 (let ((?x15499 (* l_0_10_32 l_0_10_32)))
 (let ((?x15522 (* l_0_10_18 l_0_10_18)))
 (let ((?x15520 (* l_0_10_17 l_0_10_17)))
 (let ((?x6578 (+ ?x15520 ?x15522)))
 (let ((?x15964 (+ (- (- (+ (+ (- (- ?x6578 ?x15499) ?x15502) ?x15154) ?x15156) ?x15158) ?x15160) ?x14634)))
 (= (+ ?x15964 ?x14636) 0.0))))))))))))))))))))
(assert
 (let ((?x12057 (* l_0_10_90 l_0_10_90)))
 (let ((?x12068 (* l_0_10_89 l_0_10_89)))
 (let ((?x4988 (* l_0_10_88 l_0_10_88)))
 (let ((?x12012 (* l_0_10_87 l_0_10_87)))
 (let ((?x12038 (* l_0_10_86 l_0_10_86)))
 (let ((?x15283 (* l_0_10_75 l_0_10_75)))
 (let ((?x15281 (* l_0_10_74 l_0_10_74)))
 (let ((?x15279 (* l_0_10_73 l_0_10_73)))
 (let ((?x15277 (* l_0_10_72 l_0_10_72)))
 (let ((?x15275 (* l_0_10_71 l_0_10_71)))
 (let ((?x15273 (* l_0_10_60 l_0_10_60)))
 (let ((?x15271 (* l_0_10_59 l_0_10_59)))
 (let ((?x15269 (* l_0_10_58 l_0_10_58)))
 (let ((?x15267 (* l_0_10_57 l_0_10_57)))
 (let ((?x15265 (* l_0_10_56 l_0_10_56)))
 (let ((?x13958 (* 2.0 l_0_10_33)))
 (let ((?x15763 (* ?x13958 l_0_10_42)))
 (let ((?x13955 (* 2.0 l_0_10_32)))
 (let ((?x15761 (* ?x13955 l_0_10_41)))
 (let ((?x13952 (* 2.0 l_0_10_18)))
 (let ((?x15758 (* ?x13952 l_0_10_27)))
 (let ((?x13949 (* 2.0 l_0_10_17)))
 (let ((?x15756 (* ?x13949 l_0_10_26)))
 (let ((?x15985 (+ (+ (+ (+ (- (- (+ ?x15756 ?x15758) ?x15761) ?x15763) ?x15265) ?x15267) ?x15269) ?x15271)))
 (let ((?x15992 (+ (- (- (- (- (- (+ ?x15985 ?x15273) ?x15275) ?x15277) ?x15279) ?x15281) ?x15283) ?x12038)))
 (= (+ (+ (+ (+ ?x15992 ?x12012) ?x4988) ?x12068) ?x12057) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15621 (* l_0_10_45 l_0_10_45)))
 (let ((?x15618 (* l_0_10_44 l_0_10_44)))
 (let ((?x15615 (* l_0_10_43 l_0_10_43)))
 (let ((?x15612 (* l_0_10_42 l_0_10_42)))
 (let ((?x15609 (* l_0_10_41 l_0_10_41)))
 (let ((?x8167 (* l_0_10_30 l_0_10_30)))
 (let ((?x12676 (* l_0_10_29 l_0_10_29)))
 (let ((?x12672 (* l_0_10_28 l_0_10_28)))
 (let ((?x1603 (+ (+ (+ (* l_0_10_26 l_0_10_26) (* l_0_10_27 l_0_10_27)) ?x12672) ?x12676)))
 (= (- (- (- (- (- (+ ?x1603 ?x8167) ?x15609) ?x15612) ?x15615) ?x15618) ?x15621) 0.0)))))))))))
(assert
 (let ((?x14517 (* l_0_10_78 l_0_10_78)))
 (let ((?x14512 (* l_0_10_77 l_0_10_77)))
 (let ((?x15116 (* l_0_10_63 l_0_10_63)))
 (let ((?x15114 (* l_0_10_62 l_0_10_62)))
 (let ((?x15112 (* l_0_10_48 l_0_10_48)))
 (let ((?x15110 (* l_0_10_47 l_0_10_47)))
 (let ((?x6671 (+ ?x15110 ?x15112)))
 (= (+ (+ (- (- ?x6671 ?x15114) ?x15116) ?x14512) ?x14517) 0.0)))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (>= l_0_10_151 0.0))
(assert
 (>= l_0_10_153 0.0))
(assert
 (>= l_0_10_156 0.0))
(assert
 (>= l_0_10_160 0.0))
(assert
 (>= l_0_10_165 0.0))
(check-sat)
(get-model)