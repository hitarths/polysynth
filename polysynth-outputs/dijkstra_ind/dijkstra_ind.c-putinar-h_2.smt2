(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_82 () Real)
(declare-fun l_0_0_76 () Real)
(declare-fun l_0_0_67 () Real)
(declare-fun l_0_0_61 () Real)
(declare-fun l_0_0_22 () Real)
(declare-fun l_0_0_16 () Real)
(declare-fun l_0_0_78 () Real)
(declare-fun l_0_0_77 () Real)
(declare-fun l_0_0_63 () Real)
(declare-fun l_0_0_62 () Real)
(declare-fun l_0_0_46 () Real)
(declare-fun l_0_0_31 () Real)
(declare-fun l_0_0_18 () Real)
(declare-fun l_0_0_17 () Real)
(declare-fun l_0_0_86 () Real)
(declare-fun l_0_0_71 () Real)
(declare-fun l_0_0_26 () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun l_0_0_87 () Real)
(declare-fun l_0_0_72 () Real)
(declare-fun l_0_0_27 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_88 () Real)
(declare-fun l_0_0_81 () Real)
(declare-fun l_0_0_80 () Real)
(declare-fun l_0_0_79 () Real)
(declare-fun l_0_0_73 () Real)
(declare-fun l_0_0_66 () Real)
(declare-fun l_0_0_65 () Real)
(declare-fun l_0_0_64 () Real)
(declare-fun l_0_0_28 () Real)
(declare-fun l_0_0_21 () Real)
(declare-fun l_0_0_20 () Real)
(declare-fun l_0_0_19 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_89 () Real)
(declare-fun l_0_0_85 () Real)
(declare-fun l_0_0_84 () Real)
(declare-fun l_0_0_83 () Real)
(declare-fun l_0_0_74 () Real)
(declare-fun l_0_0_70 () Real)
(declare-fun l_0_0_69 () Real)
(declare-fun l_0_0_68 () Real)
(declare-fun l_0_0_29 () Real)
(declare-fun l_0_0_25 () Real)
(declare-fun l_0_0_24 () Real)
(declare-fun l_0_0_23 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_90 () Real)
(declare-fun l_0_0_75 () Real)
(declare-fun l_0_0_30 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun l_0_0_56 () Real)
(declare-fun l_0_0_41 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_47 () Real)
(declare-fun l_0_0_32 () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_0_49 () Real)
(declare-fun l_0_0_34 () Real)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_52 () Real)
(declare-fun l_0_0_37 () Real)
(declare-fun l_0_0_13 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun l_0_0_14 () Real)
(declare-fun l_0_0_15 () Real)
(declare-fun l_0_0_54 () Real)
(declare-fun l_0_0_51 () Real)
(declare-fun l_0_0_53 () Real)
(declare-fun l_0_0_50 () Real)
(declare-fun l_0_0_48 () Real)
(declare-fun l_0_0_39 () Real)
(declare-fun l_0_0_36 () Real)
(declare-fun l_0_0_38 () Real)
(declare-fun l_0_0_35 () Real)
(declare-fun l_0_0_33 () Real)
(declare-fun l_0_0_57 () Real)
(declare-fun l_0_0_42 () Real)
(declare-fun l_0_0_58 () Real)
(declare-fun l_0_0_43 () Real)
(declare-fun l_0_0_55 () Real)
(declare-fun l_0_0_40 () Real)
(declare-fun l_0_0_59 () Real)
(declare-fun l_0_0_44 () Real)
(declare-fun l_0_0_60 () Real)
(declare-fun l_0_0_45 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_3_1 () Real)
(declare-fun l_0_3_6 () Real)
(declare-fun l_0_3_5 () Real)
(declare-fun l_0_3_4 () Real)
(declare-fun l_0_3_3 () Real)
(declare-fun l_0_3_2 () Real)
(declare-fun l_0_4_1 () Real)
(declare-fun l_0_4_8 () Real)
(declare-fun l_0_4_7 () Real)
(declare-fun l_0_4_6 () Real)
(declare-fun l_0_4_5 () Real)
(declare-fun l_0_4_4 () Real)
(declare-fun l_0_4_3 () Real)
(declare-fun l_0_4_2 () Real)
(declare-fun l_0_5_1 () Real)
(declare-fun l_0_5_9 () Real)
(declare-fun l_0_5_8 () Real)
(declare-fun l_0_5_7 () Real)
(declare-fun l_0_5_6 () Real)
(declare-fun l_0_5_5 () Real)
(declare-fun l_0_5_4 () Real)
(declare-fun l_0_5_3 () Real)
(declare-fun l_0_5_2 () Real)
(declare-fun l_0_5_10 () Real)
(declare-fun l_0_6_9 () Real)
(declare-fun l_0_6_8 () Real)
(declare-fun l_0_6_7 () Real)
(declare-fun l_0_6_6 () Real)
(declare-fun l_0_6_5 () Real)
(declare-fun l_0_6_4 () Real)
(declare-fun l_0_6_3 () Real)
(declare-fun l_0_6_2 () Real)
(declare-fun l_0_6_12 () Real)
(declare-fun l_0_6_11 () Real)
(declare-fun l_0_6_10 () Real)
(declare-fun _a_2_ () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_6_1 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_7_76 () Real)
(declare-fun l_0_7_71 () Real)
(declare-fun l_0_7_61 () Real)
(declare-fun l_0_7_16 () Real)
(declare-fun l_0_7_26 () Real)
(declare-fun l_0_7_91 () Real)
(declare-fun l_0_7_101 () Real)
(declare-fun l_0_7_1 () Real)
(declare-fun l_0_7_92 () Real)
(declare-fun l_0_7_62 () Real)
(declare-fun l_0_7_17 () Real)
(declare-fun l_0_7_94 () Real)
(declare-fun l_0_7_64 () Real)
(declare-fun l_0_7_19 () Real)
(declare-fun l_0_7_86 () Real)
(declare-fun l_0_7_77 () Real)
(declare-fun l_0_7_72 () Real)
(declare-fun l_0_7_63 () Real)
(declare-fun l_0_7_27 () Real)
(declare-fun l_0_7_18 () Real)
(declare-fun l_0_7_93 () Real)
(declare-fun l_0_7_102 () Real)
(declare-fun l_0_7_2 () Real)
(declare-fun l_0_7_79 () Real)
(declare-fun l_0_7_73 () Real)
(declare-fun l_0_7_66 () Real)
(declare-fun l_0_7_65 () Real)
(declare-fun l_0_7_46 () Real)
(declare-fun l_0_7_31 () Real)
(declare-fun l_0_7_28 () Real)
(declare-fun l_0_7_21 () Real)
(declare-fun l_0_7_20 () Real)
(declare-fun l_0_7_96 () Real)
(declare-fun l_0_7_103 () Real)
(declare-fun l_0_7_95 () Real)
(declare-fun l_0_7_4 () Real)
(declare-fun l_0_7_82 () Real)
(declare-fun l_0_7_74 () Real)
(declare-fun l_0_7_70 () Real)
(declare-fun l_0_7_69 () Real)
(declare-fun l_0_7_68 () Real)
(declare-fun l_0_7_67 () Real)
(declare-fun l_0_7_29 () Real)
(declare-fun l_0_7_25 () Real)
(declare-fun l_0_7_24 () Real)
(declare-fun l_0_7_23 () Real)
(declare-fun l_0_7_22 () Real)
(declare-fun l_0_7_99 () Real)
(declare-fun l_0_7_98 () Real)
(declare-fun l_0_7_97 () Real)
(declare-fun l_0_7_104 () Real)
(declare-fun l_0_7_100 () Real)
(declare-fun l_0_7_7 () Real)
(declare-fun l_0_7_75 () Real)
(declare-fun l_0_7_30 () Real)
(declare-fun l_0_7_105 () Real)
(declare-fun l_0_7_11 () Real)
(declare-fun l_0_7_78 () Real)
(declare-fun l_0_7_87 () Real)
(declare-fun l_0_7_56 () Real)
(declare-fun l_0_7_41 () Real)
(declare-fun l_0_7_3 () Real)
(declare-fun l_0_7_88 () Real)
(declare-fun l_0_7_81 () Real)
(declare-fun l_0_7_80 () Real)
(declare-fun l_0_7_47 () Real)
(declare-fun l_0_7_32 () Real)
(declare-fun l_0_7_5 () Real)
(declare-fun l_0_7_89 () Real)
(declare-fun l_0_7_85 () Real)
(declare-fun l_0_7_84 () Real)
(declare-fun l_0_7_83 () Real)
(declare-fun l_0_7_8 () Real)
(declare-fun l_0_7_90 () Real)
(declare-fun l_0_7_12 () Real)
(declare-fun l_0_7_6 () Real)
(declare-fun l_0_7_49 () Real)
(declare-fun l_0_7_34 () Real)
(declare-fun l_0_7_9 () Real)
(declare-fun l_0_7_52 () Real)
(declare-fun l_0_7_37 () Real)
(declare-fun l_0_7_13 () Real)
(declare-fun l_0_7_10 () Real)
(declare-fun l_0_7_14 () Real)
(declare-fun l_0_7_15 () Real)
(declare-fun l_0_7_54 () Real)
(declare-fun l_0_7_51 () Real)
(declare-fun l_0_7_53 () Real)
(declare-fun l_0_7_50 () Real)
(declare-fun l_0_7_48 () Real)
(declare-fun l_0_7_39 () Real)
(declare-fun l_0_7_36 () Real)
(declare-fun l_0_7_38 () Real)
(declare-fun l_0_7_35 () Real)
(declare-fun l_0_7_33 () Real)
(declare-fun l_0_7_57 () Real)
(declare-fun l_0_7_42 () Real)
(declare-fun l_0_7_58 () Real)
(declare-fun l_0_7_43 () Real)
(declare-fun l_0_7_55 () Real)
(declare-fun l_0_7_40 () Real)
(declare-fun l_0_7_59 () Real)
(declare-fun l_0_7_44 () Real)
(declare-fun l_0_7_60 () Real)
(declare-fun l_0_7_45 () Real)
(declare-fun l_0_8_92 () Real)
(declare-fun l_0_8_91 () Real)
(declare-fun l_0_8_76 () Real)
(declare-fun l_0_8_62 () Real)
(declare-fun l_0_8_61 () Real)
(declare-fun l_0_8_16 () Real)
(declare-fun l_0_8_17 () Real)
(declare-fun l_0_8_107 () Real)
(declare-fun l_0_8_106 () Real)
(declare-fun l_0_8_94 () Real)
(declare-fun l_0_8_64 () Real)
(declare-fun l_0_8_19 () Real)
(declare-fun l_0_8_109 () Real)
(declare-fun l_0_8_71 () Real)
(declare-fun l_0_8_26 () Real)
(declare-fun l_0_8_116 () Real)
(declare-fun l_0_8_101 () Real)
(declare-fun l_0_8_1 () Real)
(declare-fun l_0_8_86 () Real)
(declare-fun l_0_8_77 () Real)
(declare-fun l_0_8_72 () Real)
(declare-fun l_0_8_63 () Real)
(declare-fun l_0_8_27 () Real)
(declare-fun l_0_8_18 () Real)
(declare-fun l_0_8_117 () Real)
(declare-fun l_0_8_108 () Real)
(declare-fun l_0_8_93 () Real)
(declare-fun l_0_8_102 () Real)
(declare-fun l_0_8_2 () Real)
(declare-fun l_0_8_79 () Real)
(declare-fun l_0_8_73 () Real)
(declare-fun l_0_8_66 () Real)
(declare-fun l_0_8_65 () Real)
(declare-fun l_0_8_46 () Real)
(declare-fun l_0_8_31 () Real)
(declare-fun l_0_8_28 () Real)
(declare-fun l_0_8_21 () Real)
(declare-fun l_0_8_20 () Real)
(declare-fun l_0_8_118 () Real)
(declare-fun l_0_8_111 () Real)
(declare-fun l_0_8_110 () Real)
(declare-fun l_0_8_96 () Real)
(declare-fun l_0_8_103 () Real)
(declare-fun l_0_8_95 () Real)
(declare-fun l_0_8_4 () Real)
(declare-fun l_0_8_82 () Real)
(declare-fun l_0_8_74 () Real)
(declare-fun l_0_8_70 () Real)
(declare-fun l_0_8_69 () Real)
(declare-fun l_0_8_68 () Real)
(declare-fun l_0_8_67 () Real)
(declare-fun l_0_8_29 () Real)
(declare-fun l_0_8_25 () Real)
(declare-fun l_0_8_24 () Real)
(declare-fun l_0_8_23 () Real)
(declare-fun l_0_8_22 () Real)
(declare-fun l_0_8_119 () Real)
(declare-fun l_0_8_115 () Real)
(declare-fun l_0_8_114 () Real)
(declare-fun l_0_8_113 () Real)
(declare-fun l_0_8_112 () Real)
(declare-fun l_0_8_99 () Real)
(declare-fun l_0_8_98 () Real)
(declare-fun l_0_8_97 () Real)
(declare-fun l_0_8_104 () Real)
(declare-fun l_0_8_100 () Real)
(declare-fun l_0_8_7 () Real)
(declare-fun l_0_8_75 () Real)
(declare-fun l_0_8_30 () Real)
(declare-fun l_0_8_120 () Real)
(declare-fun l_0_8_105 () Real)
(declare-fun l_0_8_11 () Real)
(declare-fun l_0_8_78 () Real)
(declare-fun l_0_8_87 () Real)
(declare-fun l_0_8_56 () Real)
(declare-fun l_0_8_41 () Real)
(declare-fun l_0_8_3 () Real)
(declare-fun l_0_8_88 () Real)
(declare-fun l_0_8_81 () Real)
(declare-fun l_0_8_80 () Real)
(declare-fun l_0_8_47 () Real)
(declare-fun l_0_8_32 () Real)
(declare-fun l_0_8_5 () Real)
(declare-fun l_0_8_89 () Real)
(declare-fun l_0_8_85 () Real)
(declare-fun l_0_8_84 () Real)
(declare-fun l_0_8_83 () Real)
(declare-fun l_0_8_8 () Real)
(declare-fun l_0_8_90 () Real)
(declare-fun l_0_8_12 () Real)
(declare-fun l_0_8_6 () Real)
(declare-fun l_0_8_49 () Real)
(declare-fun l_0_8_34 () Real)
(declare-fun l_0_8_9 () Real)
(declare-fun l_0_8_52 () Real)
(declare-fun l_0_8_37 () Real)
(declare-fun l_0_8_13 () Real)
(declare-fun l_0_8_10 () Real)
(declare-fun l_0_8_14 () Real)
(declare-fun l_0_8_15 () Real)
(declare-fun l_0_8_54 () Real)
(declare-fun l_0_8_51 () Real)
(declare-fun l_0_8_53 () Real)
(declare-fun l_0_8_50 () Real)
(declare-fun l_0_8_48 () Real)
(declare-fun l_0_8_39 () Real)
(declare-fun l_0_8_36 () Real)
(declare-fun l_0_8_38 () Real)
(declare-fun l_0_8_35 () Real)
(declare-fun l_0_8_33 () Real)
(declare-fun l_0_8_57 () Real)
(declare-fun l_0_8_42 () Real)
(declare-fun l_0_8_58 () Real)
(declare-fun l_0_8_43 () Real)
(declare-fun l_0_8_55 () Real)
(declare-fun l_0_8_40 () Real)
(declare-fun l_0_8_59 () Real)
(declare-fun l_0_8_44 () Real)
(declare-fun l_0_8_60 () Real)
(declare-fun l_0_8_45 () Real)
(declare-fun l_0_9_99 () Real)
(declare-fun l_0_9_96 () Real)
(declare-fun l_0_9_98 () Real)
(declare-fun l_0_9_95 () Real)
(declare-fun l_0_9_97 () Real)
(declare-fun l_0_9_94 () Real)
(declare-fun l_0_9_82 () Real)
(declare-fun l_0_9_76 () Real)
(declare-fun l_0_9_69 () Real)
(declare-fun l_0_9_66 () Real)
(declare-fun l_0_9_68 () Real)
(declare-fun l_0_9_65 () Real)
(declare-fun l_0_9_67 () Real)
(declare-fun l_0_9_64 () Real)
(declare-fun l_0_9_61 () Real)
(declare-fun l_0_9_46 () Real)
(declare-fun l_0_9_31 () Real)
(declare-fun l_0_9_24 () Real)
(declare-fun l_0_9_21 () Real)
(declare-fun l_0_9_23 () Real)
(declare-fun l_0_9_20 () Real)
(declare-fun l_0_9_22 () Real)
(declare-fun l_0_9_19 () Real)
(declare-fun l_0_9_16 () Real)
(declare-fun l_0_9_129 () Real)
(declare-fun l_0_9_126 () Real)
(declare-fun l_0_9_128 () Real)
(declare-fun l_0_9_125 () Real)
(declare-fun l_0_9_127 () Real)
(declare-fun l_0_9_124 () Real)
(declare-fun l_0_9_114 () Real)
(declare-fun l_0_9_111 () Real)
(declare-fun l_0_9_113 () Real)
(declare-fun l_0_9_110 () Real)
(declare-fun l_0_9_112 () Real)
(declare-fun l_0_9_109 () Real)
(declare-fun l_0_9_93 () Real)
(declare-fun l_0_9_92 () Real)
(declare-fun l_0_9_77 () Real)
(declare-fun l_0_9_63 () Real)
(declare-fun l_0_9_62 () Real)
(declare-fun l_0_9_18 () Real)
(declare-fun l_0_9_17 () Real)
(declare-fun l_0_9_123 () Real)
(declare-fun l_0_9_122 () Real)
(declare-fun l_0_9_108 () Real)
(declare-fun l_0_9_107 () Real)
(declare-fun l_0_9_79 () Real)
(declare-fun l_0_9_86 () Real)
(declare-fun l_0_9_73 () Real)
(declare-fun l_0_9_72 () Real)
(declare-fun l_0_9_71 () Real)
(declare-fun l_0_9_28 () Real)
(declare-fun l_0_9_27 () Real)
(declare-fun l_0_9_26 () Real)
(declare-fun l_0_9_133 () Real)
(declare-fun l_0_9_132 () Real)
(declare-fun l_0_9_131 () Real)
(declare-fun l_0_9_118 () Real)
(declare-fun l_0_9_117 () Real)
(declare-fun l_0_9_116 () Real)
(declare-fun l_0_9_103 () Real)
(declare-fun l_0_9_102 () Real)
(declare-fun l_0_9_101 () Real)
(declare-fun l_0_9_4 () Real)
(declare-fun l_0_9_1 () Real)
(declare-fun l_0_9_121 () Real)
(declare-fun l_0_9_106 () Real)
(declare-fun l_0_9_91 () Real)
(declare-fun l_0_9_2 () Real)
(declare-fun l_0_9_74 () Real)
(declare-fun l_0_9_70 () Real)
(declare-fun l_0_9_29 () Real)
(declare-fun l_0_9_25 () Real)
(declare-fun l_0_9_134 () Real)
(declare-fun l_0_9_130 () Real)
(declare-fun l_0_9_119 () Real)
(declare-fun l_0_9_115 () Real)
(declare-fun l_0_9_104 () Real)
(declare-fun l_0_9_100 () Real)
(declare-fun l_0_9_7 () Real)
(declare-fun l_0_9_75 () Real)
(declare-fun l_0_9_30 () Real)
(declare-fun l_0_9_135 () Real)
(declare-fun l_0_9_120 () Real)
(declare-fun l_0_9_105 () Real)
(declare-fun l_0_9_11 () Real)
(declare-fun l_0_9_78 () Real)
(declare-fun l_0_9_87 () Real)
(declare-fun l_0_9_56 () Real)
(declare-fun l_0_9_41 () Real)
(declare-fun l_0_9_3 () Real)
(declare-fun l_0_9_88 () Real)
(declare-fun l_0_9_81 () Real)
(declare-fun l_0_9_80 () Real)
(declare-fun l_0_9_47 () Real)
(declare-fun l_0_9_32 () Real)
(declare-fun l_0_9_5 () Real)
(declare-fun l_0_9_89 () Real)
(declare-fun l_0_9_85 () Real)
(declare-fun l_0_9_84 () Real)
(declare-fun l_0_9_83 () Real)
(declare-fun l_0_9_8 () Real)
(declare-fun l_0_9_90 () Real)
(declare-fun l_0_9_12 () Real)
(declare-fun l_0_9_6 () Real)
(declare-fun l_0_9_49 () Real)
(declare-fun l_0_9_34 () Real)
(declare-fun l_0_9_9 () Real)
(declare-fun l_0_9_52 () Real)
(declare-fun l_0_9_37 () Real)
(declare-fun l_0_9_13 () Real)
(declare-fun l_0_9_10 () Real)
(declare-fun l_0_9_14 () Real)
(declare-fun l_0_9_15 () Real)
(declare-fun l_0_9_54 () Real)
(declare-fun l_0_9_51 () Real)
(declare-fun l_0_9_53 () Real)
(declare-fun l_0_9_50 () Real)
(declare-fun l_0_9_48 () Real)
(declare-fun l_0_9_39 () Real)
(declare-fun l_0_9_36 () Real)
(declare-fun l_0_9_38 () Real)
(declare-fun l_0_9_35 () Real)
(declare-fun l_0_9_33 () Real)
(declare-fun l_0_9_57 () Real)
(declare-fun l_0_9_42 () Real)
(declare-fun l_0_9_58 () Real)
(declare-fun l_0_9_43 () Real)
(declare-fun l_0_9_55 () Real)
(declare-fun l_0_9_40 () Real)
(declare-fun l_0_9_59 () Real)
(declare-fun l_0_9_44 () Real)
(declare-fun l_0_9_60 () Real)
(declare-fun l_0_9_45 () Real)
(declare-fun l_0_10_93 () Real)
(declare-fun l_0_10_92 () Real)
(declare-fun l_0_10_77 () Real)
(declare-fun l_0_10_76 () Real)
(declare-fun l_0_10_63 () Real)
(declare-fun l_0_10_62 () Real)
(declare-fun l_0_10_46 () Real)
(declare-fun l_0_10_31 () Real)
(declare-fun l_0_10_18 () Real)
(declare-fun l_0_10_17 () Real)
(declare-fun l_0_10_16 () Real)
(declare-fun l_0_10_138 () Real)
(declare-fun l_0_10_137 () Real)
(declare-fun l_0_10_123 () Real)
(declare-fun l_0_10_122 () Real)
(declare-fun l_0_10_108 () Real)
(declare-fun l_0_10_107 () Real)
(declare-fun l_0_10_95 () Real)
(declare-fun l_0_10_94 () Real)
(declare-fun l_0_10_79 () Real)
(declare-fun l_0_10_65 () Real)
(declare-fun l_0_10_64 () Real)
(declare-fun l_0_10_61 () Real)
(declare-fun l_0_10_20 () Real)
(declare-fun l_0_10_19 () Real)
(declare-fun l_0_10_140 () Real)
(declare-fun l_0_10_139 () Real)
(declare-fun l_0_10_125 () Real)
(declare-fun l_0_10_124 () Real)
(declare-fun l_0_10_110 () Real)
(declare-fun l_0_10_109 () Real)
(declare-fun l_0_10_96 () Real)
(declare-fun l_0_10_66 () Real)
(declare-fun l_0_10_21 () Real)
(declare-fun l_0_10_141 () Real)
(declare-fun l_0_10_126 () Real)
(declare-fun l_0_10_111 () Real)
(declare-fun l_0_10_86 () Real)
(declare-fun l_0_10_73 () Real)
(declare-fun l_0_10_72 () Real)
(declare-fun l_0_10_71 () Real)
(declare-fun l_0_10_28 () Real)
(declare-fun l_0_10_27 () Real)
(declare-fun l_0_10_26 () Real)
(declare-fun l_0_10_148 () Real)
(declare-fun l_0_10_147 () Real)
(declare-fun l_0_10_146 () Real)
(declare-fun l_0_10_133 () Real)
(declare-fun l_0_10_132 () Real)
(declare-fun l_0_10_131 () Real)
(declare-fun l_0_10_118 () Real)
(declare-fun l_0_10_117 () Real)
(declare-fun l_0_10_116 () Real)
(declare-fun l_0_10_103 () Real)
(declare-fun l_0_10_102 () Real)
(declare-fun l_0_10_101 () Real)
(declare-fun l_0_10_4 () Real)
(declare-fun l_0_10_1 () Real)
(declare-fun l_0_10_99 () Real)
(declare-fun l_0_10_98 () Real)
(declare-fun l_0_10_97 () Real)
(declare-fun l_0_10_82 () Real)
(declare-fun l_0_10_69 () Real)
(declare-fun l_0_10_68 () Real)
(declare-fun l_0_10_67 () Real)
(declare-fun l_0_10_24 () Real)
(declare-fun l_0_10_23 () Real)
(declare-fun l_0_10_22 () Real)
(declare-fun l_0_10_144 () Real)
(declare-fun l_0_10_143 () Real)
(declare-fun l_0_10_142 () Real)
(declare-fun l_0_10_129 () Real)
(declare-fun l_0_10_128 () Real)
(declare-fun l_0_10_127 () Real)
(declare-fun l_0_10_114 () Real)
(declare-fun l_0_10_113 () Real)
(declare-fun l_0_10_112 () Real)
(declare-fun l_0_10_136 () Real)
(declare-fun l_0_10_121 () Real)
(declare-fun l_0_10_106 () Real)
(declare-fun l_0_10_91 () Real)
(declare-fun l_0_10_2 () Real)
(declare-fun l_0_10_74 () Real)
(declare-fun l_0_10_70 () Real)
(declare-fun l_0_10_29 () Real)
(declare-fun l_0_10_25 () Real)
(declare-fun l_0_10_149 () Real)
(declare-fun l_0_10_145 () Real)
(declare-fun l_0_10_134 () Real)
(declare-fun l_0_10_130 () Real)
(declare-fun l_0_10_119 () Real)
(declare-fun l_0_10_115 () Real)
(declare-fun l_0_10_104 () Real)
(declare-fun l_0_10_100 () Real)
(declare-fun l_0_10_7 () Real)
(declare-fun l_0_10_75 () Real)
(declare-fun l_0_10_30 () Real)
(declare-fun l_0_10_150 () Real)
(declare-fun l_0_10_135 () Real)
(declare-fun l_0_10_120 () Real)
(declare-fun l_0_10_105 () Real)
(declare-fun l_0_10_11 () Real)
(declare-fun l_0_10_78 () Real)
(declare-fun l_0_10_87 () Real)
(declare-fun l_0_10_56 () Real)
(declare-fun l_0_10_41 () Real)
(declare-fun l_0_10_3 () Real)
(declare-fun l_0_10_88 () Real)
(declare-fun l_0_10_81 () Real)
(declare-fun l_0_10_80 () Real)
(declare-fun l_0_10_47 () Real)
(declare-fun l_0_10_32 () Real)
(declare-fun l_0_10_5 () Real)
(declare-fun l_0_10_89 () Real)
(declare-fun l_0_10_85 () Real)
(declare-fun l_0_10_84 () Real)
(declare-fun l_0_10_83 () Real)
(declare-fun l_0_10_8 () Real)
(declare-fun l_0_10_90 () Real)
(declare-fun l_0_10_12 () Real)
(declare-fun l_0_10_6 () Real)
(declare-fun l_0_10_49 () Real)
(declare-fun l_0_10_34 () Real)
(declare-fun l_0_10_9 () Real)
(declare-fun l_0_10_52 () Real)
(declare-fun l_0_10_37 () Real)
(declare-fun l_0_10_13 () Real)
(declare-fun l_0_10_10 () Real)
(declare-fun l_0_10_14 () Real)
(declare-fun l_0_10_15 () Real)
(declare-fun l_0_10_54 () Real)
(declare-fun l_0_10_51 () Real)
(declare-fun l_0_10_53 () Real)
(declare-fun l_0_10_50 () Real)
(declare-fun l_0_10_48 () Real)
(declare-fun l_0_10_39 () Real)
(declare-fun l_0_10_36 () Real)
(declare-fun l_0_10_38 () Real)
(declare-fun l_0_10_35 () Real)
(declare-fun l_0_10_33 () Real)
(declare-fun l_0_10_57 () Real)
(declare-fun l_0_10_42 () Real)
(declare-fun l_0_10_58 () Real)
(declare-fun l_0_10_43 () Real)
(declare-fun l_0_10_55 () Real)
(declare-fun l_0_10_40 () Real)
(declare-fun l_0_10_59 () Real)
(declare-fun l_0_10_44 () Real)
(declare-fun l_0_10_60 () Real)
(declare-fun l_0_10_45 () Real)
(declare-fun l_0_11_76 () Real)
(declare-fun l_0_11_71 () Real)
(declare-fun l_0_11_61 () Real)
(declare-fun l_0_11_16 () Real)
(declare-fun l_0_11_26 () Real)
(declare-fun l_0_11_91 () Real)
(declare-fun l_0_11_101 () Real)
(declare-fun l_0_11_1 () Real)
(declare-fun l_0_11_86 () Real)
(declare-fun l_0_11_77 () Real)
(declare-fun l_0_11_72 () Real)
(declare-fun l_0_11_63 () Real)
(declare-fun l_0_11_62 () Real)
(declare-fun l_0_11_27 () Real)
(declare-fun l_0_11_18 () Real)
(declare-fun l_0_11_17 () Real)
(declare-fun l_0_11_93 () Real)
(declare-fun l_0_11_102 () Real)
(declare-fun l_0_11_92 () Real)
(declare-fun l_0_11_2 () Real)
(declare-fun l_0_11_79 () Real)
(declare-fun l_0_11_73 () Real)
(declare-fun l_0_11_66 () Real)
(declare-fun l_0_11_65 () Real)
(declare-fun l_0_11_64 () Real)
(declare-fun l_0_11_46 () Real)
(declare-fun l_0_11_31 () Real)
(declare-fun l_0_11_28 () Real)
(declare-fun l_0_11_21 () Real)
(declare-fun l_0_11_20 () Real)
(declare-fun l_0_11_19 () Real)
(declare-fun l_0_11_96 () Real)
(declare-fun l_0_11_103 () Real)
(declare-fun l_0_11_95 () Real)
(declare-fun l_0_11_94 () Real)
(declare-fun l_0_11_4 () Real)
(declare-fun l_0_11_82 () Real)
(declare-fun l_0_11_74 () Real)
(declare-fun l_0_11_70 () Real)
(declare-fun l_0_11_69 () Real)
(declare-fun l_0_11_68 () Real)
(declare-fun l_0_11_67 () Real)
(declare-fun l_0_11_29 () Real)
(declare-fun l_0_11_25 () Real)
(declare-fun l_0_11_24 () Real)
(declare-fun l_0_11_23 () Real)
(declare-fun l_0_11_22 () Real)
(declare-fun l_0_11_99 () Real)
(declare-fun l_0_11_98 () Real)
(declare-fun l_0_11_97 () Real)
(declare-fun l_0_11_104 () Real)
(declare-fun l_0_11_100 () Real)
(declare-fun l_0_11_7 () Real)
(declare-fun l_0_11_75 () Real)
(declare-fun l_0_11_30 () Real)
(declare-fun l_0_11_105 () Real)
(declare-fun l_0_11_11 () Real)
(declare-fun l_0_11_78 () Real)
(declare-fun l_0_11_87 () Real)
(declare-fun l_0_11_56 () Real)
(declare-fun l_0_11_41 () Real)
(declare-fun l_0_11_3 () Real)
(declare-fun l_0_11_88 () Real)
(declare-fun l_0_11_81 () Real)
(declare-fun l_0_11_80 () Real)
(declare-fun l_0_11_47 () Real)
(declare-fun l_0_11_32 () Real)
(declare-fun l_0_11_5 () Real)
(declare-fun l_0_11_89 () Real)
(declare-fun l_0_11_85 () Real)
(declare-fun l_0_11_84 () Real)
(declare-fun l_0_11_83 () Real)
(declare-fun l_0_11_8 () Real)
(declare-fun l_0_11_90 () Real)
(declare-fun l_0_11_12 () Real)
(declare-fun l_0_11_6 () Real)
(declare-fun l_0_11_49 () Real)
(declare-fun l_0_11_34 () Real)
(declare-fun l_0_11_9 () Real)
(declare-fun l_0_11_52 () Real)
(declare-fun l_0_11_37 () Real)
(declare-fun l_0_11_13 () Real)
(declare-fun l_0_11_10 () Real)
(declare-fun l_0_11_14 () Real)
(declare-fun l_0_11_15 () Real)
(declare-fun l_0_11_54 () Real)
(declare-fun l_0_11_51 () Real)
(declare-fun l_0_11_53 () Real)
(declare-fun l_0_11_50 () Real)
(declare-fun l_0_11_48 () Real)
(declare-fun l_0_11_39 () Real)
(declare-fun l_0_11_36 () Real)
(declare-fun l_0_11_38 () Real)
(declare-fun l_0_11_35 () Real)
(declare-fun l_0_11_33 () Real)
(declare-fun l_0_11_57 () Real)
(declare-fun l_0_11_42 () Real)
(declare-fun l_0_11_58 () Real)
(declare-fun l_0_11_43 () Real)
(declare-fun l_0_11_55 () Real)
(declare-fun l_0_11_40 () Real)
(declare-fun l_0_11_59 () Real)
(declare-fun l_0_11_44 () Real)
(declare-fun l_0_11_60 () Real)
(declare-fun l_0_11_45 () Real)
(declare-fun l_0_12_92 () Real)
(declare-fun l_0_12_91 () Real)
(declare-fun l_0_12_76 () Real)
(declare-fun l_0_12_62 () Real)
(declare-fun l_0_12_61 () Real)
(declare-fun l_0_12_16 () Real)
(declare-fun l_0_12_17 () Real)
(declare-fun l_0_12_107 () Real)
(declare-fun l_0_12_106 () Real)
(declare-fun l_0_12_94 () Real)
(declare-fun l_0_12_64 () Real)
(declare-fun l_0_12_19 () Real)
(declare-fun l_0_12_109 () Real)
(declare-fun l_0_12_71 () Real)
(declare-fun l_0_12_26 () Real)
(declare-fun l_0_12_116 () Real)
(declare-fun l_0_12_101 () Real)
(declare-fun l_0_12_1 () Real)
(declare-fun l_0_12_86 () Real)
(declare-fun l_0_12_77 () Real)
(declare-fun l_0_12_72 () Real)
(declare-fun l_0_12_63 () Real)
(declare-fun l_0_12_27 () Real)
(declare-fun l_0_12_18 () Real)
(declare-fun l_0_12_117 () Real)
(declare-fun l_0_12_108 () Real)
(declare-fun l_0_12_93 () Real)
(declare-fun l_0_12_102 () Real)
(declare-fun l_0_12_2 () Real)
(declare-fun l_0_12_79 () Real)
(declare-fun l_0_12_73 () Real)
(declare-fun l_0_12_66 () Real)
(declare-fun l_0_12_65 () Real)
(declare-fun l_0_12_46 () Real)
(declare-fun l_0_12_31 () Real)
(declare-fun l_0_12_28 () Real)
(declare-fun l_0_12_21 () Real)
(declare-fun l_0_12_20 () Real)
(declare-fun l_0_12_118 () Real)
(declare-fun l_0_12_111 () Real)
(declare-fun l_0_12_110 () Real)
(declare-fun l_0_12_96 () Real)
(declare-fun l_0_12_103 () Real)
(declare-fun l_0_12_95 () Real)
(declare-fun l_0_12_4 () Real)
(declare-fun l_0_12_82 () Real)
(declare-fun l_0_12_74 () Real)
(declare-fun l_0_12_70 () Real)
(declare-fun l_0_12_69 () Real)
(declare-fun l_0_12_68 () Real)
(declare-fun l_0_12_67 () Real)
(declare-fun l_0_12_29 () Real)
(declare-fun l_0_12_25 () Real)
(declare-fun l_0_12_24 () Real)
(declare-fun l_0_12_23 () Real)
(declare-fun l_0_12_22 () Real)
(declare-fun l_0_12_119 () Real)
(declare-fun l_0_12_115 () Real)
(declare-fun l_0_12_114 () Real)
(declare-fun l_0_12_113 () Real)
(declare-fun l_0_12_112 () Real)
(declare-fun l_0_12_99 () Real)
(declare-fun l_0_12_98 () Real)
(declare-fun l_0_12_97 () Real)
(declare-fun l_0_12_104 () Real)
(declare-fun l_0_12_100 () Real)
(declare-fun l_0_12_7 () Real)
(declare-fun l_0_12_75 () Real)
(declare-fun l_0_12_30 () Real)
(declare-fun l_0_12_120 () Real)
(declare-fun l_0_12_105 () Real)
(declare-fun l_0_12_11 () Real)
(declare-fun l_0_12_78 () Real)
(declare-fun l_0_12_87 () Real)
(declare-fun l_0_12_56 () Real)
(declare-fun l_0_12_41 () Real)
(declare-fun l_0_12_3 () Real)
(declare-fun l_0_12_88 () Real)
(declare-fun l_0_12_81 () Real)
(declare-fun l_0_12_80 () Real)
(declare-fun l_0_12_47 () Real)
(declare-fun l_0_12_32 () Real)
(declare-fun l_0_12_5 () Real)
(declare-fun l_0_12_89 () Real)
(declare-fun l_0_12_85 () Real)
(declare-fun l_0_12_84 () Real)
(declare-fun l_0_12_83 () Real)
(declare-fun l_0_12_8 () Real)
(declare-fun l_0_12_90 () Real)
(declare-fun l_0_12_12 () Real)
(declare-fun l_0_12_6 () Real)
(declare-fun l_0_12_49 () Real)
(declare-fun l_0_12_34 () Real)
(declare-fun l_0_12_9 () Real)
(declare-fun l_0_12_52 () Real)
(declare-fun l_0_12_37 () Real)
(declare-fun l_0_12_13 () Real)
(declare-fun l_0_12_10 () Real)
(declare-fun l_0_12_14 () Real)
(declare-fun l_0_12_15 () Real)
(declare-fun l_0_12_54 () Real)
(declare-fun l_0_12_51 () Real)
(declare-fun l_0_12_53 () Real)
(declare-fun l_0_12_50 () Real)
(declare-fun l_0_12_48 () Real)
(declare-fun l_0_12_39 () Real)
(declare-fun l_0_12_36 () Real)
(declare-fun l_0_12_38 () Real)
(declare-fun l_0_12_35 () Real)
(declare-fun l_0_12_33 () Real)
(declare-fun l_0_12_57 () Real)
(declare-fun l_0_12_42 () Real)
(declare-fun l_0_12_58 () Real)
(declare-fun l_0_12_43 () Real)
(declare-fun l_0_12_55 () Real)
(declare-fun l_0_12_40 () Real)
(declare-fun l_0_12_59 () Real)
(declare-fun l_0_12_44 () Real)
(declare-fun l_0_12_60 () Real)
(declare-fun l_0_12_45 () Real)
(declare-fun l_0_13_99 () Real)
(declare-fun l_0_13_96 () Real)
(declare-fun l_0_13_98 () Real)
(declare-fun l_0_13_95 () Real)
(declare-fun l_0_13_97 () Real)
(declare-fun l_0_13_94 () Real)
(declare-fun l_0_13_82 () Real)
(declare-fun l_0_13_76 () Real)
(declare-fun l_0_13_69 () Real)
(declare-fun l_0_13_66 () Real)
(declare-fun l_0_13_68 () Real)
(declare-fun l_0_13_65 () Real)
(declare-fun l_0_13_67 () Real)
(declare-fun l_0_13_64 () Real)
(declare-fun l_0_13_61 () Real)
(declare-fun l_0_13_46 () Real)
(declare-fun l_0_13_31 () Real)
(declare-fun l_0_13_24 () Real)
(declare-fun l_0_13_21 () Real)
(declare-fun l_0_13_23 () Real)
(declare-fun l_0_13_20 () Real)
(declare-fun l_0_13_22 () Real)
(declare-fun l_0_13_19 () Real)
(declare-fun l_0_13_16 () Real)
(declare-fun l_0_13_129 () Real)
(declare-fun l_0_13_126 () Real)
(declare-fun l_0_13_128 () Real)
(declare-fun l_0_13_125 () Real)
(declare-fun l_0_13_127 () Real)
(declare-fun l_0_13_124 () Real)
(declare-fun l_0_13_114 () Real)
(declare-fun l_0_13_111 () Real)
(declare-fun l_0_13_113 () Real)
(declare-fun l_0_13_110 () Real)
(declare-fun l_0_13_112 () Real)
(declare-fun l_0_13_109 () Real)
(declare-fun l_0_13_93 () Real)
(declare-fun l_0_13_92 () Real)
(declare-fun l_0_13_77 () Real)
(declare-fun l_0_13_63 () Real)
(declare-fun l_0_13_62 () Real)
(declare-fun l_0_13_18 () Real)
(declare-fun l_0_13_17 () Real)
(declare-fun l_0_13_123 () Real)
(declare-fun l_0_13_122 () Real)
(declare-fun l_0_13_108 () Real)
(declare-fun l_0_13_107 () Real)
(declare-fun l_0_13_86 () Real)
(declare-fun l_0_13_79 () Real)
(declare-fun l_0_13_73 () Real)
(declare-fun l_0_13_72 () Real)
(declare-fun l_0_13_71 () Real)
(declare-fun l_0_13_28 () Real)
(declare-fun l_0_13_27 () Real)
(declare-fun l_0_13_26 () Real)
(declare-fun l_0_13_133 () Real)
(declare-fun l_0_13_132 () Real)
(declare-fun l_0_13_131 () Real)
(declare-fun l_0_13_118 () Real)
(declare-fun l_0_13_117 () Real)
(declare-fun l_0_13_116 () Real)
(declare-fun l_0_13_103 () Real)
(declare-fun l_0_13_102 () Real)
(declare-fun l_0_13_101 () Real)
(declare-fun l_0_13_4 () Real)
(declare-fun l_0_13_1 () Real)
(declare-fun l_0_13_121 () Real)
(declare-fun l_0_13_106 () Real)
(declare-fun l_0_13_91 () Real)
(declare-fun l_0_13_2 () Real)
(declare-fun l_0_13_74 () Real)
(declare-fun l_0_13_70 () Real)
(declare-fun l_0_13_29 () Real)
(declare-fun l_0_13_25 () Real)
(declare-fun l_0_13_134 () Real)
(declare-fun l_0_13_130 () Real)
(declare-fun l_0_13_119 () Real)
(declare-fun l_0_13_115 () Real)
(declare-fun l_0_13_104 () Real)
(declare-fun l_0_13_100 () Real)
(declare-fun l_0_13_7 () Real)
(declare-fun l_0_13_75 () Real)
(declare-fun l_0_13_30 () Real)
(declare-fun l_0_13_135 () Real)
(declare-fun l_0_13_120 () Real)
(declare-fun l_0_13_105 () Real)
(declare-fun l_0_13_11 () Real)
(declare-fun l_0_13_78 () Real)
(declare-fun l_0_13_87 () Real)
(declare-fun l_0_13_56 () Real)
(declare-fun l_0_13_41 () Real)
(declare-fun l_0_13_3 () Real)
(declare-fun l_0_13_88 () Real)
(declare-fun l_0_13_81 () Real)
(declare-fun l_0_13_80 () Real)
(declare-fun l_0_13_47 () Real)
(declare-fun l_0_13_32 () Real)
(declare-fun l_0_13_5 () Real)
(declare-fun l_0_13_89 () Real)
(declare-fun l_0_13_85 () Real)
(declare-fun l_0_13_84 () Real)
(declare-fun l_0_13_83 () Real)
(declare-fun l_0_13_8 () Real)
(declare-fun l_0_13_90 () Real)
(declare-fun l_0_13_12 () Real)
(declare-fun l_0_13_6 () Real)
(declare-fun l_0_13_49 () Real)
(declare-fun l_0_13_34 () Real)
(declare-fun l_0_13_9 () Real)
(declare-fun l_0_13_52 () Real)
(declare-fun l_0_13_37 () Real)
(declare-fun l_0_13_13 () Real)
(declare-fun l_0_13_10 () Real)
(declare-fun l_0_13_14 () Real)
(declare-fun l_0_13_15 () Real)
(declare-fun l_0_13_54 () Real)
(declare-fun l_0_13_51 () Real)
(declare-fun l_0_13_53 () Real)
(declare-fun l_0_13_50 () Real)
(declare-fun l_0_13_48 () Real)
(declare-fun l_0_13_39 () Real)
(declare-fun l_0_13_36 () Real)
(declare-fun l_0_13_38 () Real)
(declare-fun l_0_13_35 () Real)
(declare-fun l_0_13_33 () Real)
(declare-fun l_0_13_57 () Real)
(declare-fun l_0_13_42 () Real)
(declare-fun l_0_13_58 () Real)
(declare-fun l_0_13_43 () Real)
(declare-fun l_0_13_55 () Real)
(declare-fun l_0_13_40 () Real)
(declare-fun l_0_13_59 () Real)
(declare-fun l_0_13_44 () Real)
(declare-fun l_0_13_60 () Real)
(declare-fun l_0_13_45 () Real)
(declare-fun l_0_14_93 () Real)
(declare-fun l_0_14_92 () Real)
(declare-fun l_0_14_77 () Real)
(declare-fun l_0_14_76 () Real)
(declare-fun l_0_14_63 () Real)
(declare-fun l_0_14_62 () Real)
(declare-fun l_0_14_46 () Real)
(declare-fun l_0_14_31 () Real)
(declare-fun l_0_14_18 () Real)
(declare-fun l_0_14_17 () Real)
(declare-fun l_0_14_16 () Real)
(declare-fun l_0_14_138 () Real)
(declare-fun l_0_14_137 () Real)
(declare-fun l_0_14_123 () Real)
(declare-fun l_0_14_122 () Real)
(declare-fun l_0_14_108 () Real)
(declare-fun l_0_14_107 () Real)
(declare-fun l_0_14_86 () Real)
(declare-fun l_0_14_79 () Real)
(declare-fun l_0_14_73 () Real)
(declare-fun l_0_14_66 () Real)
(declare-fun l_0_14_72 () Real)
(declare-fun l_0_14_65 () Real)
(declare-fun l_0_14_71 () Real)
(declare-fun l_0_14_64 () Real)
(declare-fun l_0_14_61 () Real)
(declare-fun l_0_14_28 () Real)
(declare-fun l_0_14_21 () Real)
(declare-fun l_0_14_27 () Real)
(declare-fun l_0_14_20 () Real)
(declare-fun l_0_14_26 () Real)
(declare-fun l_0_14_19 () Real)
(declare-fun l_0_14_148 () Real)
(declare-fun l_0_14_141 () Real)
(declare-fun l_0_14_147 () Real)
(declare-fun l_0_14_140 () Real)
(declare-fun l_0_14_146 () Real)
(declare-fun l_0_14_139 () Real)
(declare-fun l_0_14_133 () Real)
(declare-fun l_0_14_126 () Real)
(declare-fun l_0_14_132 () Real)
(declare-fun l_0_14_125 () Real)
(declare-fun l_0_14_131 () Real)
(declare-fun l_0_14_124 () Real)
(declare-fun l_0_14_118 () Real)
(declare-fun l_0_14_111 () Real)
(declare-fun l_0_14_117 () Real)
(declare-fun l_0_14_110 () Real)
(declare-fun l_0_14_116 () Real)
(declare-fun l_0_14_109 () Real)
(declare-fun l_0_14_96 () Real)
(declare-fun l_0_14_103 () Real)
(declare-fun l_0_14_95 () Real)
(declare-fun l_0_14_102 () Real)
(declare-fun l_0_14_94 () Real)
(declare-fun l_0_14_101 () Real)
(declare-fun l_0_14_4 () Real)
(declare-fun l_0_14_1 () Real)
(declare-fun l_0_14_99 () Real)
(declare-fun l_0_14_98 () Real)
(declare-fun l_0_14_97 () Real)
(declare-fun l_0_14_82 () Real)
(declare-fun l_0_14_69 () Real)
(declare-fun l_0_14_68 () Real)
(declare-fun l_0_14_67 () Real)
(declare-fun l_0_14_24 () Real)
(declare-fun l_0_14_23 () Real)
(declare-fun l_0_14_22 () Real)
(declare-fun l_0_14_144 () Real)
(declare-fun l_0_14_143 () Real)
(declare-fun l_0_14_142 () Real)
(declare-fun l_0_14_129 () Real)
(declare-fun l_0_14_128 () Real)
(declare-fun l_0_14_127 () Real)
(declare-fun l_0_14_114 () Real)
(declare-fun l_0_14_113 () Real)
(declare-fun l_0_14_112 () Real)
(declare-fun l_0_14_136 () Real)
(declare-fun l_0_14_121 () Real)
(declare-fun l_0_14_106 () Real)
(declare-fun l_0_14_91 () Real)
(declare-fun l_0_14_2 () Real)
(declare-fun l_0_14_74 () Real)
(declare-fun l_0_14_70 () Real)
(declare-fun l_0_14_29 () Real)
(declare-fun l_0_14_25 () Real)
(declare-fun l_0_14_149 () Real)
(declare-fun l_0_14_145 () Real)
(declare-fun l_0_14_134 () Real)
(declare-fun l_0_14_130 () Real)
(declare-fun l_0_14_119 () Real)
(declare-fun l_0_14_115 () Real)
(declare-fun l_0_14_104 () Real)
(declare-fun l_0_14_100 () Real)
(declare-fun l_0_14_7 () Real)
(declare-fun l_0_14_75 () Real)
(declare-fun l_0_14_30 () Real)
(declare-fun l_0_14_150 () Real)
(declare-fun l_0_14_135 () Real)
(declare-fun l_0_14_120 () Real)
(declare-fun l_0_14_105 () Real)
(declare-fun l_0_14_11 () Real)
(declare-fun l_0_14_78 () Real)
(declare-fun l_0_14_87 () Real)
(declare-fun l_0_14_56 () Real)
(declare-fun l_0_14_41 () Real)
(declare-fun l_0_14_3 () Real)
(declare-fun l_0_14_88 () Real)
(declare-fun l_0_14_81 () Real)
(declare-fun l_0_14_80 () Real)
(declare-fun l_0_14_47 () Real)
(declare-fun l_0_14_32 () Real)
(declare-fun l_0_14_5 () Real)
(declare-fun l_0_14_89 () Real)
(declare-fun l_0_14_85 () Real)
(declare-fun l_0_14_84 () Real)
(declare-fun l_0_14_83 () Real)
(declare-fun l_0_14_8 () Real)
(declare-fun l_0_14_90 () Real)
(declare-fun l_0_14_12 () Real)
(declare-fun l_0_14_6 () Real)
(declare-fun l_0_14_49 () Real)
(declare-fun l_0_14_34 () Real)
(declare-fun l_0_14_9 () Real)
(declare-fun l_0_14_52 () Real)
(declare-fun l_0_14_37 () Real)
(declare-fun l_0_14_13 () Real)
(declare-fun l_0_14_10 () Real)
(declare-fun l_0_14_14 () Real)
(declare-fun l_0_14_15 () Real)
(declare-fun l_0_14_54 () Real)
(declare-fun l_0_14_51 () Real)
(declare-fun l_0_14_53 () Real)
(declare-fun l_0_14_50 () Real)
(declare-fun l_0_14_48 () Real)
(declare-fun l_0_14_39 () Real)
(declare-fun l_0_14_36 () Real)
(declare-fun l_0_14_38 () Real)
(declare-fun l_0_14_35 () Real)
(declare-fun l_0_14_33 () Real)
(declare-fun l_0_14_57 () Real)
(declare-fun l_0_14_42 () Real)
(declare-fun l_0_14_58 () Real)
(declare-fun l_0_14_43 () Real)
(declare-fun l_0_14_55 () Real)
(declare-fun l_0_14_40 () Real)
(declare-fun l_0_14_59 () Real)
(declare-fun l_0_14_44 () Real)
(declare-fun l_0_14_60 () Real)
(declare-fun l_0_14_45 () Real)
(declare-fun l_0_15_4 () Real)
(declare-fun l_0_15_3 () Real)
(declare-fun l_0_15_8 () Real)
(declare-fun l_0_15_6 () Real)
(declare-fun l_0_15_2 () Real)
(declare-fun l_0_15_1 () Real)
(declare-fun l_0_15_7 () Real)
(declare-fun l_0_15_5 () Real)
(declare-fun l_0_16_2 () Real)
(declare-fun l_0_16_1 () Real)
(declare-fun l_0_16_7 () Real)
(declare-fun l_0_16_6 () Real)
(declare-fun l_0_16_9 () Real)
(declare-fun l_0_16_8 () Real)
(declare-fun l_0_16_10 () Real)
(declare-fun l_0_16_4 () Real)
(declare-fun l_0_16_3 () Real)
(declare-fun l_0_16_5 () Real)
(declare-fun l_0_17_97 () Real)
(declare-fun l_0_17_91 () Real)
(declare-fun l_0_17_94 () Real)
(declare-fun l_0_17_64 () Real)
(declare-fun l_0_17_61 () Real)
(declare-fun l_0_17_49 () Real)
(declare-fun l_0_17_46 () Real)
(declare-fun l_0_17_34 () Real)
(declare-fun l_0_17_31 () Real)
(declare-fun l_0_17_174 () Real)
(declare-fun l_0_17_171 () Real)
(declare-fun l_0_17_173 () Real)
(declare-fun l_0_17_170 () Real)
(declare-fun l_0_17_172 () Real)
(declare-fun l_0_17_169 () Real)
(declare-fun l_0_17_159 () Real)
(declare-fun l_0_17_156 () Real)
(declare-fun l_0_17_158 () Real)
(declare-fun l_0_17_155 () Real)
(declare-fun l_0_17_157 () Real)
(declare-fun l_0_17_154 () Real)
(declare-fun l_0_17_144 () Real)
(declare-fun l_0_17_141 () Real)
(declare-fun l_0_17_143 () Real)
(declare-fun l_0_17_140 () Real)
(declare-fun l_0_17_142 () Real)
(declare-fun l_0_17_139 () Real)
(declare-fun l_0_17_129 () Real)
(declare-fun l_0_17_126 () Real)
(declare-fun l_0_17_128 () Real)
(declare-fun l_0_17_125 () Real)
(declare-fun l_0_17_127 () Real)
(declare-fun l_0_17_124 () Real)
(declare-fun l_0_17_114 () Real)
(declare-fun l_0_17_111 () Real)
(declare-fun l_0_17_113 () Real)
(declare-fun l_0_17_110 () Real)
(declare-fun l_0_17_112 () Real)
(declare-fun l_0_17_109 () Real)
(declare-fun l_0_17_82 () Real)
(declare-fun l_0_17_76 () Real)
(declare-fun l_0_17_79 () Real)
(declare-fun l_0_17_84 () Real)
(declare-fun l_0_17_81 () Real)
(declare-fun l_0_17_83 () Real)
(declare-fun l_0_17_80 () Real)
(declare-fun l_0_17_168 () Real)
(declare-fun l_0_17_167 () Real)
(declare-fun l_0_17_17 () Real)
(declare-fun l_0_17_16 () Real)
(declare-fun l_0_17_153 () Real)
(declare-fun l_0_17_152 () Real)
(declare-fun l_0_17_138 () Real)
(declare-fun l_0_17_137 () Real)
(declare-fun l_0_17_123 () Real)
(declare-fun l_0_17_122 () Real)
(declare-fun l_0_17_108 () Real)
(declare-fun l_0_17_107 () Real)
(declare-fun l_0_17_2 () Real)
(declare-fun l_0_17_1 () Real)
(declare-fun l_0_17_78 () Real)
(declare-fun l_0_17_77 () Real)
(declare-fun l_0_17_178 () Real)
(declare-fun l_0_17_177 () Real)
(declare-fun l_0_17_176 () Real)
(declare-fun l_0_17_163 () Real)
(declare-fun l_0_17_162 () Real)
(declare-fun l_0_17_161 () Real)
(declare-fun l_0_17_148 () Real)
(declare-fun l_0_17_147 () Real)
(declare-fun l_0_17_146 () Real)
(declare-fun l_0_17_133 () Real)
(declare-fun l_0_17_132 () Real)
(declare-fun l_0_17_131 () Real)
(declare-fun l_0_17_118 () Real)
(declare-fun l_0_17_117 () Real)
(declare-fun l_0_17_116 () Real)
(declare-fun l_0_17_101 () Real)
(declare-fun l_0_17_86 () Real)
(declare-fun l_0_17_88 () Real)
(declare-fun l_0_17_87 () Real)
(declare-fun l_0_17_166 () Real)
(declare-fun l_0_17_151 () Real)
(declare-fun l_0_17_136 () Real)
(declare-fun l_0_17_121 () Real)
(declare-fun l_0_17_106 () Real)
(declare-fun l_0_17_92 () Real)
(declare-fun l_0_17_19 () Real)
(declare-fun l_0_17_4 () Real)
(declare-fun l_0_17_62 () Real)
(declare-fun l_0_17_47 () Real)
(declare-fun l_0_17_32 () Real)
(declare-fun l_0_17_22 () Real)
(declare-fun l_0_17_7 () Real)
(declare-fun l_0_17_26 () Real)
(declare-fun l_0_17_11 () Real)
(declare-fun l_0_17_3 () Real)
(declare-fun l_0_17_18 () Real)
(declare-fun l_0_17_93 () Real)
(declare-fun l_0_17_5 () Real)
(declare-fun l_0_17_20 () Real)
(declare-fun l_0_17_63 () Real)
(declare-fun l_0_17_48 () Real)
(declare-fun l_0_17_33 () Real)
(declare-fun l_0_17_8 () Real)
(declare-fun l_0_17_23 () Real)
(declare-fun l_0_17_27 () Real)
(declare-fun l_0_17_12 () Real)
(declare-fun l_0_17_95 () Real)
(declare-fun l_0_17_6 () Real)
(declare-fun l_0_17_21 () Real)
(declare-fun l_0_17_98 () Real)
(declare-fun l_0_17_65 () Real)
(declare-fun l_0_17_9 () Real)
(declare-fun l_0_17_50 () Real)
(declare-fun l_0_17_35 () Real)
(declare-fun l_0_17_24 () Real)
(declare-fun l_0_17_28 () Real)
(declare-fun l_0_17_13 () Real)
(declare-fun l_0_17_102 () Real)
(declare-fun l_0_17_68 () Real)
(declare-fun l_0_17_67 () Real)
(declare-fun l_0_17_53 () Real)
(declare-fun l_0_17_52 () Real)
(declare-fun l_0_17_38 () Real)
(declare-fun l_0_17_37 () Real)
(declare-fun l_0_17_25 () Real)
(declare-fun l_0_17_10 () Real)
(declare-fun l_0_17_72 () Real)
(declare-fun l_0_17_71 () Real)
(declare-fun l_0_17_57 () Real)
(declare-fun l_0_17_56 () Real)
(declare-fun l_0_17_42 () Real)
(declare-fun l_0_17_41 () Real)
(declare-fun l_0_17_29 () Real)
(declare-fun l_0_17_14 () Real)
(declare-fun l_0_17_30 () Real)
(declare-fun l_0_17_15 () Real)
(declare-fun l_0_17_175 () Real)
(declare-fun l_0_17_160 () Real)
(declare-fun l_0_17_145 () Real)
(declare-fun l_0_17_130 () Real)
(declare-fun l_0_17_115 () Real)
(declare-fun l_0_17_85 () Real)
(declare-fun l_0_17_179 () Real)
(declare-fun l_0_17_164 () Real)
(declare-fun l_0_17_149 () Real)
(declare-fun l_0_17_134 () Real)
(declare-fun l_0_17_119 () Real)
(declare-fun l_0_17_89 () Real)
(declare-fun l_0_17_96 () Real)
(declare-fun l_0_17_99 () Real)
(declare-fun l_0_17_66 () Real)
(declare-fun l_0_17_51 () Real)
(declare-fun l_0_17_36 () Real)
(declare-fun l_0_17_69 () Real)
(declare-fun l_0_17_54 () Real)
(declare-fun l_0_17_39 () Real)
(declare-fun l_0_17_100 () Real)
(declare-fun l_0_17_73 () Real)
(declare-fun l_0_17_58 () Real)
(declare-fun l_0_17_43 () Real)
(declare-fun l_0_17_103 () Real)
(declare-fun l_0_17_104 () Real)
(declare-fun l_0_17_70 () Real)
(declare-fun l_0_17_55 () Real)
(declare-fun l_0_17_40 () Real)
(declare-fun l_0_17_74 () Real)
(declare-fun l_0_17_59 () Real)
(declare-fun l_0_17_44 () Real)
(declare-fun l_0_17_75 () Real)
(declare-fun l_0_17_60 () Real)
(declare-fun l_0_17_45 () Real)
(declare-fun l_0_17_105 () Real)
(declare-fun l_0_17_90 () Real)
(declare-fun l_0_17_180 () Real)
(declare-fun l_0_17_165 () Real)
(declare-fun l_0_17_150 () Real)
(declare-fun l_0_17_135 () Real)
(declare-fun l_0_17_120 () Real)
(declare-fun l_0_18_183 () Real)
(declare-fun l_0_18_182 () Real)
(declare-fun l_0_18_168 () Real)
(declare-fun l_0_18_167 () Real)
(declare-fun l_0_18_17 () Real)
(declare-fun l_0_18_16 () Real)
(declare-fun l_0_18_153 () Real)
(declare-fun l_0_18_152 () Real)
(declare-fun l_0_18_138 () Real)
(declare-fun l_0_18_137 () Real)
(declare-fun l_0_18_123 () Real)
(declare-fun l_0_18_122 () Real)
(declare-fun l_0_18_108 () Real)
(declare-fun l_0_18_107 () Real)
(declare-fun l_0_18_2 () Real)
(declare-fun l_0_18_1 () Real)
(declare-fun l_0_18_78 () Real)
(declare-fun l_0_18_77 () Real)
(declare-fun l_0_18_49 () Real)
(declare-fun l_0_18_46 () Real)
(declare-fun l_0_18_34 () Real)
(declare-fun l_0_18_31 () Real)
(declare-fun l_0_18_193 () Real)
(declare-fun l_0_18_186 () Real)
(declare-fun l_0_18_192 () Real)
(declare-fun l_0_18_185 () Real)
(declare-fun l_0_18_191 () Real)
(declare-fun l_0_18_184 () Real)
(declare-fun l_0_18_178 () Real)
(declare-fun l_0_18_171 () Real)
(declare-fun l_0_18_177 () Real)
(declare-fun l_0_18_170 () Real)
(declare-fun l_0_18_176 () Real)
(declare-fun l_0_18_169 () Real)
(declare-fun l_0_18_163 () Real)
(declare-fun l_0_18_156 () Real)
(declare-fun l_0_18_162 () Real)
(declare-fun l_0_18_155 () Real)
(declare-fun l_0_18_161 () Real)
(declare-fun l_0_18_154 () Real)
(declare-fun l_0_18_148 () Real)
(declare-fun l_0_18_141 () Real)
(declare-fun l_0_18_147 () Real)
(declare-fun l_0_18_140 () Real)
(declare-fun l_0_18_146 () Real)
(declare-fun l_0_18_139 () Real)
(declare-fun l_0_18_133 () Real)
(declare-fun l_0_18_126 () Real)
(declare-fun l_0_18_132 () Real)
(declare-fun l_0_18_125 () Real)
(declare-fun l_0_18_131 () Real)
(declare-fun l_0_18_124 () Real)
(declare-fun l_0_18_118 () Real)
(declare-fun l_0_18_111 () Real)
(declare-fun l_0_18_117 () Real)
(declare-fun l_0_18_110 () Real)
(declare-fun l_0_18_116 () Real)
(declare-fun l_0_18_109 () Real)
(declare-fun l_0_18_91 () Real)
(declare-fun l_0_18_101 () Real)
(declare-fun l_0_18_86 () Real)
(declare-fun l_0_18_76 () Real)
(declare-fun l_0_18_88 () Real)
(declare-fun l_0_18_81 () Real)
(declare-fun l_0_18_87 () Real)
(declare-fun l_0_18_80 () Real)
(declare-fun l_0_18_79 () Real)
(declare-fun l_0_18_97 () Real)
(declare-fun l_0_18_94 () Real)
(declare-fun l_0_18_64 () Real)
(declare-fun l_0_18_61 () Real)
(declare-fun l_0_18_189 () Real)
(declare-fun l_0_18_188 () Real)
(declare-fun l_0_18_187 () Real)
(declare-fun l_0_18_174 () Real)
(declare-fun l_0_18_173 () Real)
(declare-fun l_0_18_172 () Real)
(declare-fun l_0_18_159 () Real)
(declare-fun l_0_18_158 () Real)
(declare-fun l_0_18_157 () Real)
(declare-fun l_0_18_144 () Real)
(declare-fun l_0_18_143 () Real)
(declare-fun l_0_18_142 () Real)
(declare-fun l_0_18_129 () Real)
(declare-fun l_0_18_128 () Real)
(declare-fun l_0_18_127 () Real)
(declare-fun l_0_18_114 () Real)
(declare-fun l_0_18_113 () Real)
(declare-fun l_0_18_112 () Real)
(declare-fun l_0_18_82 () Real)
(declare-fun l_0_18_84 () Real)
(declare-fun l_0_18_83 () Real)
(declare-fun l_0_18_181 () Real)
(declare-fun l_0_18_166 () Real)
(declare-fun l_0_18_151 () Real)
(declare-fun l_0_18_136 () Real)
(declare-fun l_0_18_121 () Real)
(declare-fun l_0_18_106 () Real)
(declare-fun l_0_18_92 () Real)
(declare-fun l_0_18_19 () Real)
(declare-fun l_0_18_4 () Real)
(declare-fun l_0_18_62 () Real)
(declare-fun l_0_18_47 () Real)
(declare-fun l_0_18_32 () Real)
(declare-fun l_0_18_22 () Real)
(declare-fun l_0_18_7 () Real)
(declare-fun l_0_18_26 () Real)
(declare-fun l_0_18_11 () Real)
(declare-fun l_0_18_3 () Real)
(declare-fun l_0_18_18 () Real)
(declare-fun l_0_18_93 () Real)
(declare-fun l_0_18_5 () Real)
(declare-fun l_0_18_20 () Real)
(declare-fun l_0_18_63 () Real)
(declare-fun l_0_18_48 () Real)
(declare-fun l_0_18_33 () Real)
(declare-fun l_0_18_8 () Real)
(declare-fun l_0_18_23 () Real)
(declare-fun l_0_18_27 () Real)
(declare-fun l_0_18_12 () Real)
(declare-fun l_0_18_95 () Real)
(declare-fun l_0_18_6 () Real)
(declare-fun l_0_18_21 () Real)
(declare-fun l_0_18_98 () Real)
(declare-fun l_0_18_65 () Real)
(declare-fun l_0_18_9 () Real)
(declare-fun l_0_18_50 () Real)
(declare-fun l_0_18_35 () Real)
(declare-fun l_0_18_24 () Real)
(declare-fun l_0_18_28 () Real)
(declare-fun l_0_18_13 () Real)
(declare-fun l_0_18_102 () Real)
(declare-fun l_0_18_68 () Real)
(declare-fun l_0_18_67 () Real)
(declare-fun l_0_18_53 () Real)
(declare-fun l_0_18_52 () Real)
(declare-fun l_0_18_38 () Real)
(declare-fun l_0_18_37 () Real)
(declare-fun l_0_18_25 () Real)
(declare-fun l_0_18_10 () Real)
(declare-fun l_0_18_72 () Real)
(declare-fun l_0_18_71 () Real)
(declare-fun l_0_18_57 () Real)
(declare-fun l_0_18_56 () Real)
(declare-fun l_0_18_42 () Real)
(declare-fun l_0_18_41 () Real)
(declare-fun l_0_18_29 () Real)
(declare-fun l_0_18_14 () Real)
(declare-fun l_0_18_30 () Real)
(declare-fun l_0_18_15 () Real)
(declare-fun l_0_18_190 () Real)
(declare-fun l_0_18_175 () Real)
(declare-fun l_0_18_160 () Real)
(declare-fun l_0_18_145 () Real)
(declare-fun l_0_18_130 () Real)
(declare-fun l_0_18_115 () Real)
(declare-fun l_0_18_85 () Real)
(declare-fun l_0_18_194 () Real)
(declare-fun l_0_18_179 () Real)
(declare-fun l_0_18_164 () Real)
(declare-fun l_0_18_149 () Real)
(declare-fun l_0_18_134 () Real)
(declare-fun l_0_18_119 () Real)
(declare-fun l_0_18_89 () Real)
(declare-fun l_0_18_96 () Real)
(declare-fun l_0_18_99 () Real)
(declare-fun l_0_18_66 () Real)
(declare-fun l_0_18_51 () Real)
(declare-fun l_0_18_36 () Real)
(declare-fun l_0_18_69 () Real)
(declare-fun l_0_18_54 () Real)
(declare-fun l_0_18_39 () Real)
(declare-fun l_0_18_100 () Real)
(declare-fun l_0_18_73 () Real)
(declare-fun l_0_18_58 () Real)
(declare-fun l_0_18_43 () Real)
(declare-fun l_0_18_103 () Real)
(declare-fun l_0_18_104 () Real)
(declare-fun l_0_18_70 () Real)
(declare-fun l_0_18_55 () Real)
(declare-fun l_0_18_40 () Real)
(declare-fun l_0_18_74 () Real)
(declare-fun l_0_18_59 () Real)
(declare-fun l_0_18_44 () Real)
(declare-fun l_0_18_75 () Real)
(declare-fun l_0_18_60 () Real)
(declare-fun l_0_18_45 () Real)
(declare-fun l_0_18_105 () Real)
(declare-fun l_0_18_90 () Real)
(declare-fun l_0_18_195 () Real)
(declare-fun l_0_18_180 () Real)
(declare-fun l_0_18_165 () Real)
(declare-fun l_0_18_150 () Real)
(declare-fun l_0_18_135 () Real)
(declare-fun l_0_18_120 () Real)
(declare-fun l_0_19_8 () Real)
(declare-fun l_0_19_6 () Real)
(declare-fun l_0_19_2 () Real)
(declare-fun l_0_19_1 () Real)
(declare-fun l_0_19_7 () Real)
(declare-fun l_0_19_5 () Real)
(declare-fun l_0_19_4 () Real)
(declare-fun l_0_19_3 () Real)
(declare-fun l_0_20_2 () Real)
(declare-fun l_0_20_1 () Real)
(declare-fun l_0_20_9 () Real)
(declare-fun l_0_20_8 () Real)
(declare-fun l_0_20_10 () Real)
(declare-fun l_0_20_6 () Real)
(declare-fun l_0_20_7 () Real)
(declare-fun l_0_20_5 () Real)
(declare-fun l_0_20_4 () Real)
(declare-fun l_0_20_3 () Real)
(declare-fun l_0_21_7 () Real)
(declare-fun l_0_21_5 () Real)
(declare-fun l_0_21_4 () Real)
(declare-fun l_0_21_3 () Real)
(declare-fun l_0_21_6 () Real)
(declare-fun l_0_21_2 () Real)
(declare-fun l_0_21_1 () Real)
(declare-fun l_0_21_9 () Real)
(declare-fun l_0_21_8 () Real)
(declare-fun l_0_21_12 () Real)
(declare-fun l_0_21_11 () Real)
(declare-fun l_0_21_10 () Real)
(declare-fun l_0_22_4 () Real)
(declare-fun l_0_22_3 () Real)
(declare-fun l_0_22_7 () Real)
(declare-fun l_0_22_5 () Real)
(declare-fun l_0_22_6 () Real)
(declare-fun l_0_22_2 () Real)
(declare-fun l_0_22_1 () Real)
(declare-fun l_0_22_9 () Real)
(declare-fun l_0_22_8 () Real)
(declare-fun l_0_22_14 () Real)
(declare-fun l_0_22_13 () Real)
(declare-fun l_0_22_12 () Real)
(declare-fun l_0_22_11 () Real)
(declare-fun l_0_22_10 () Real)
(declare-fun l_0_23_7 () Real)
(declare-fun l_0_23_5 () Real)
(declare-fun l_0_23_4 () Real)
(declare-fun l_0_23_3 () Real)
(declare-fun l_0_23_6 () Real)
(declare-fun l_0_23_9 () Real)
(declare-fun l_0_23_8 () Real)
(declare-fun l_0_23_16 () Real)
(declare-fun l_0_23_15 () Real)
(declare-fun l_0_23_14 () Real)
(declare-fun l_0_23_13 () Real)
(declare-fun l_0_23_12 () Real)
(declare-fun l_0_23_11 () Real)
(declare-fun l_0_23_10 () Real)
(declare-fun l_0_23_2 () Real)
(declare-fun l_0_23_1 () Real)
(declare-fun l_0_24_9 () Real)
(declare-fun l_0_24_8 () Real)
(declare-fun l_0_24_18 () Real)
(declare-fun l_0_24_17 () Real)
(declare-fun l_0_24_16 () Real)
(declare-fun l_0_24_15 () Real)
(declare-fun l_0_24_14 () Real)
(declare-fun l_0_24_13 () Real)
(declare-fun l_0_24_12 () Real)
(declare-fun l_0_24_11 () Real)
(declare-fun l_0_24_10 () Real)
(declare-fun l_0_24_6 () Real)
(declare-fun l_0_24_7 () Real)
(declare-fun l_0_24_5 () Real)
(declare-fun l_0_24_4 () Real)
(declare-fun l_0_24_3 () Real)
(declare-fun l_0_24_2 () Real)
(declare-fun l_0_24_1 () Real)
(assert
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1633 (* ?x1632 l_0_0_22)))
 (let ((?x1640 (- (- ?x1633 (* (* 8.0 l_0_0_61) l_0_0_67)) (* (* 2.0 l_0_0_76) l_0_0_82))))
 (= (+ ?x1640 1.0) 0.0)))))
(assert
 (let ((?x1703 (* l_0_0_78 l_0_0_78)))
 (let ((?x1701 (* l_0_0_77 l_0_0_77)))
 (let ((?x1692 (* l_0_0_46 l_0_0_46)))
 (let ((?x1690 (* l_0_0_31 l_0_0_31)))
 (let ((?x1686 (+ (* (* (- 4.0) l_0_0_16) l_0_0_17) (* 1.0 (* l_0_0_17 l_0_0_17)))))
 (let ((?x1697 (- (- (+ (+ ?x1686 (* 1.0 (* l_0_0_18 l_0_0_18))) ?x1690) ?x1692) (* (* 4.0 l_0_0_62) l_0_0_62))))
 (let ((?x1705 (- (- (- (- ?x1697 (* (* 4.0 l_0_0_63) l_0_0_63)) ?x1701) ?x1703) 1.0)))
 (= ?x1705 0.0)))))))))
(assert
 (let ((?x1739 (* l_0_0_16 l_0_0_16)))
 (let ((?x1740 (+ (+ (* (- l_0_0_1) l_0_0_1) (* (* 2.0 l_0_0_16) l_0_0_26)) ?x1739)))
 (let ((?x1744 (- (- ?x1740 (* (* 8.0 l_0_0_61) l_0_0_71)) (* (* 2.0 l_0_0_76) l_0_0_86))))
 (= ?x1744 0.0)))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x1776 (* ?x1775 l_0_0_27)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x1773 (* ?x1772 l_0_0_26)))
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1767 (* ?x1632 l_0_0_17)))
 (let ((?x1771 (- (+ (* (* (- 2.0) l_0_0_1) l_0_0_2) ?x1767) (* (* 4.0 l_0_0_16) l_0_0_26))))
 (let ((?x1783 (- (- (+ (+ ?x1771 ?x1773) ?x1776) (* (* 8.0 l_0_0_62) l_0_0_71)) (* (* 8.0 l_0_0_63) l_0_0_72))))
 (let ((?x1789 (- (- ?x1783 (* (* 2.0 l_0_0_77) l_0_0_86)) (* (* 2.0 l_0_0_78) l_0_0_87))))
 (= ?x1789 0.0)))))))))))
(assert
 (let ((?x1692 (* l_0_0_46 l_0_0_46)))
 (let ((?x1690 (* l_0_0_31 l_0_0_31)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x1841 (* ?x1840 l_0_0_28)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x1838 (* ?x1837 l_0_0_27)))
 (let ((?x1834 (* 2.0 l_0_0_19)))
 (let ((?x1835 (* ?x1834 l_0_0_26)))
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1737 (* ?x1632 l_0_0_26)))
 (let ((?x1836 (+ (- (+ (* (* (- 2.0) l_0_0_1) l_0_0_4) (* ?x1632 l_0_0_19)) ?x1737) ?x1835)))
 (let ((?x1847 (+ (- (+ (+ (+ ?x1836 ?x1838) ?x1841) ?x1690) ?x1692) (* (* 2.0 l_0_0_61) l_0_0_71))))
 (let ((?x1853 (- (- ?x1847 (* (* 8.0 l_0_0_64) l_0_0_71)) (* (* 8.0 l_0_0_65) l_0_0_72))))
 (let ((?x1859 (- (- ?x1853 (* (* 8.0 l_0_0_66) l_0_0_73)) (* (* 2.0 l_0_0_79) l_0_0_86))))
 (let ((?x1865 (- (- ?x1859 (* (* 2.0 l_0_0_80) l_0_0_87)) (* (* 2.0 l_0_0_81) l_0_0_88))))
 (= ?x1865 0.0)))))))))))))))))
(assert
 (let ((?x1935 (* 2.0 l_0_0_25)))
 (let ((?x1936 (* ?x1935 l_0_0_29)))
 (let ((?x1932 (* 2.0 l_0_0_24)))
 (let ((?x1933 (* ?x1932 l_0_0_28)))
 (let ((?x1929 (* 2.0 l_0_0_23)))
 (let ((?x1930 (* ?x1929 l_0_0_27)))
 (let ((?x1927 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1633 (* ?x1632 l_0_0_22)))
 (let ((?x1934 (+ (+ (+ (+ (* (* (- 2.0) l_0_0_1) l_0_0_7) ?x1633) ?x1927) ?x1930) ?x1933)))
 (let ((?x1943 (- (- (+ ?x1934 ?x1936) (* (* 8.0 l_0_0_67) l_0_0_71)) (* (* 8.0 l_0_0_68) l_0_0_72))))
 (let ((?x1949 (- (- ?x1943 (* (* 8.0 l_0_0_69) l_0_0_73)) (* (* 8.0 l_0_0_70) l_0_0_74))))
 (let ((?x1955 (- (- ?x1949 (* (* 2.0 l_0_0_82) l_0_0_86)) (* (* 2.0 l_0_0_83) l_0_0_87))))
 (let ((?x1961 (- (- ?x1955 (* (* 2.0 l_0_0_84) l_0_0_88)) (* (* 2.0 l_0_0_85) l_0_0_89))))
 (= ?x1961 0.0))))))))))))))))
(assert
 (let ((?x2063 (* l_0_0_90 l_0_0_90)))
 (let ((?x2061 (* l_0_0_89 l_0_0_89)))
 (let ((?x2059 (* l_0_0_88 l_0_0_88)))
 (let ((?x2057 (* l_0_0_87 l_0_0_87)))
 (let ((?x2055 (* l_0_0_86 l_0_0_86)))
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1737 (* ?x1632 l_0_0_26)))
 (let ((?x2027 (+ (+ (* (* (- 2.0) l_0_0_1) l_0_0_11) ?x1737) (* 1.0 (* l_0_0_26 l_0_0_26)))))
 (let ((?x2033 (+ (+ ?x2027 (* 1.0 (* l_0_0_27 l_0_0_27))) (* 1.0 (* l_0_0_28 l_0_0_28)))))
 (let ((?x2039 (+ (+ ?x2033 (* 1.0 (* l_0_0_29 l_0_0_29))) (* 1.0 (* l_0_0_30 l_0_0_30)))))
 (let ((?x2045 (- (- ?x2039 (* (* 4.0 l_0_0_71) l_0_0_71)) (* (* 4.0 l_0_0_72) l_0_0_72))))
 (let ((?x2051 (- (- ?x2045 (* (* 4.0 l_0_0_73) l_0_0_73)) (* (* 4.0 l_0_0_74) l_0_0_74))))
 (let ((?x2060 (- (- (- (- ?x2051 (* (* 4.0 l_0_0_75) l_0_0_75)) ?x2055) ?x2057) ?x2059)))
 (= (- (- ?x2060 ?x2061) ?x2063) 0.0)))))))))))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2130 (* ?x2129 l_0_0_56)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2127 (* ?x2126 l_0_0_41)))
 (let ((?x2124 (* l_0_0_3 l_0_0_3)))
 (let ((?x2122 (* l_0_0_2 l_0_0_2)))
 (let ((?x1687 (* l_0_0_18 l_0_0_18)))
 (let ((?x2120 (- (+ (* (* (- 4.0) l_0_0_17) l_0_0_26) (* l_0_0_17 l_0_0_17)) (* (* 4.0 l_0_0_18) l_0_0_27))))
 (= (- (+ (- (- (+ ?x2120 ?x1687) ?x2122) ?x2124) ?x2127) ?x2130) 0.0))))))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2179 (* ?x2129 l_0_0_47)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2177 (* ?x2126 l_0_0_32)))
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x1776 (* ?x1775 l_0_0_27)))
 (let ((?x2159 (* ?x1775 l_0_0_20)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x1773 (* ?x1772 l_0_0_26)))
 (let ((?x2157 (* ?x1772 l_0_0_19)))
 (let ((?x2164 (- (- (+ (- ?x2157 ?x1773) ?x2159) ?x1776) (* (* 4.0 l_0_0_19) l_0_0_26))))
 (let ((?x2170 (- (- ?x2164 (* (* 2.0 l_0_0_2) l_0_0_4)) (* (* 4.0 l_0_0_20) l_0_0_27))))
 (let ((?x2176 (- (- ?x2170 (* (* 4.0 l_0_0_21) l_0_0_28)) (* (* 2.0 l_0_0_3) l_0_0_5))))
 (let ((?x2186 (+ (+ (- (+ ?x2176 ?x2177) ?x2179) (* (* 2.0 l_0_0_62) l_0_0_71)) (* (* 2.0 l_0_0_63) l_0_0_72))))
 (= ?x2186 0.0))))))))))))))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x2238 (* ?x1775 l_0_0_23)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x2237 (* ?x1772 l_0_0_22)))
 (let ((?x2251 (- (- (+ ?x2237 ?x2238) (* (* 2.0 l_0_0_2) l_0_0_7)) (* (* 4.0 l_0_0_22) l_0_0_26))))
 (let ((?x2257 (- (- ?x2251 (* (* 4.0 l_0_0_23) l_0_0_27)) (* (* 4.0 l_0_0_24) l_0_0_28))))
 (let ((?x2262 (- (- ?x2257 (* (* 4.0 l_0_0_25) l_0_0_29)) (* (* 2.0 l_0_0_3) l_0_0_8))))
 (= ?x2262 0.0)))))))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x1776 (* ?x1775 l_0_0_27)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x1773 (* ?x1772 l_0_0_26)))
 (let ((?x2309 (- (* (* (- 2.0) l_0_0_11) l_0_0_2) (* (* 2.0 l_0_0_12) l_0_0_3))))
 (let ((?x2317 (- (- (+ (+ ?x2309 ?x1773) ?x1776) (* (* 2.0 l_0_0_26) l_0_0_26)) (* (* 2.0 l_0_0_27) l_0_0_27))))
 (let ((?x2323 (- (- ?x2317 (* (* 2.0 l_0_0_28) l_0_0_28)) (* (* 2.0 l_0_0_29) l_0_0_29))))
 (= (- ?x2323 (* (* 2.0 l_0_0_30) l_0_0_30)) 0.0)))))))))
(assert
 (let ((?x2381 (* l_0_0_6 l_0_0_6)))
 (let ((?x2379 (* l_0_0_5 l_0_0_5)))
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2377 (* ?x2129 l_0_0_49)))
 (let ((?x2375 (* l_0_0_4 l_0_0_4)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2373 (* ?x2126 l_0_0_34)))
 (let ((?x2371 (* l_0_0_21 l_0_0_21)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x1841 (* ?x1840 l_0_0_28)))
 (let ((?x2368 (* l_0_0_20 l_0_0_20)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x1838 (* ?x1837 l_0_0_27)))
 (let ((?x2367 (- (+ (* (* (- 2.0) l_0_0_19) l_0_0_26) (* l_0_0_19 l_0_0_19)) ?x1838)))
 (let ((?x2380 (- (- (- (+ (+ (- (+ ?x2367 ?x2368) ?x1841) ?x2371) ?x2373) ?x2375) ?x2377) ?x2379)))
 (let ((?x2388 (+ (+ (- ?x2380 ?x2381) (* (* 2.0 l_0_0_64) l_0_0_71)) (* (* 2.0 l_0_0_65) l_0_0_72))))
 (= (+ ?x2388 (* (* 2.0 l_0_0_66) l_0_0_73)) 0.0))))))))))))))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2130 (* ?x2129 l_0_0_56)))
 (let ((?x2446 (* ?x2129 l_0_0_52)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2127 (* ?x2126 l_0_0_41)))
 (let ((?x2440 (* ?x2126 l_0_0_37)))
 (let ((?x1935 (* 2.0 l_0_0_25)))
 (let ((?x1936 (* ?x1935 l_0_0_29)))
 (let ((?x1932 (* 2.0 l_0_0_24)))
 (let ((?x1933 (* ?x1932 l_0_0_28)))
 (let ((?x1929 (* 2.0 l_0_0_23)))
 (let ((?x1930 (* ?x1929 l_0_0_27)))
 (let ((?x1927 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x2425 (* ?x1840 l_0_0_24)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x2423 (* ?x1837 l_0_0_23)))
 (let ((?x1834 (* 2.0 l_0_0_19)))
 (let ((?x2422 (* ?x1834 l_0_0_22)))
 (let ((?x2441 (+ (- (- (- (- (+ (+ ?x2422 ?x2423) ?x2425) ?x1927) ?x1930) ?x1933) ?x1936) ?x2440)))
 (let ((?x2448 (+ (- (- (- ?x2441 ?x2127) (* (* 2.0 l_0_0_4) l_0_0_7)) ?x2446) ?x2130)))
 (let ((?x2454 (- (- ?x2448 (* (* 2.0 l_0_0_5) l_0_0_8)) (* (* 2.0 l_0_0_6) l_0_0_9))))
 (let ((?x2460 (+ (+ ?x2454 (* (* 2.0 l_0_0_67) l_0_0_71)) (* (* 2.0 l_0_0_68) l_0_0_72))))
 (let ((?x2466 (+ (+ ?x2460 (* (* 2.0 l_0_0_69) l_0_0_73)) (* (* 2.0 l_0_0_70) l_0_0_74))))
 (= ?x2466 0.0))))))))))))))))))))))))))
(assert
 (let ((?x2093 (* l_0_0_75 l_0_0_75)))
 (let ((?x2087 (* l_0_0_74 l_0_0_74)))
 (let ((?x2081 (* l_0_0_73 l_0_0_73)))
 (let ((?x2075 (* l_0_0_72 l_0_0_72)))
 (let ((?x2069 (* l_0_0_71 l_0_0_71)))
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2130 (* ?x2129 l_0_0_56)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2127 (* ?x2126 l_0_0_41)))
 (let ((?x2037 (* l_0_0_30 l_0_0_30)))
 (let ((?x2034 (* l_0_0_29 l_0_0_29)))
 (let ((?x2031 (* l_0_0_28 l_0_0_28)))
 (let ((?x2028 (* l_0_0_27 l_0_0_27)))
 (let ((?x2025 (* l_0_0_26 l_0_0_26)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x1841 (* ?x1840 l_0_0_28)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x1838 (* ?x1837 l_0_0_27)))
 (let ((?x1834 (* 2.0 l_0_0_19)))
 (let ((?x1835 (* ?x1834 l_0_0_26)))
 (let ((?x2525 (- (* (* (- 2.0) l_0_0_11) l_0_0_4) (* (* 2.0 l_0_0_12) l_0_0_5))))
 (let ((?x2541 (+ (+ (+ (- ?x2525 (* (* 2.0 l_0_0_13) l_0_0_6)) ?x1835) ?x1838) ?x1841)))
 (let ((?x2548 (- (+ (- (- (- (- (- ?x2541 ?x2025) ?x2028) ?x2031) ?x2034) ?x2037) ?x2127) ?x2130)))
 (= (+ (+ (+ (+ (+ ?x2548 ?x2069) ?x2075) ?x2081) ?x2087) ?x2093) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x2604 (* l_0_0_9 l_0_0_9)))
 (let ((?x2602 (* l_0_0_8 l_0_0_8)))
 (let ((?x2600 (* l_0_0_7 l_0_0_7)))
 (let ((?x2598 (* l_0_0_25 l_0_0_25)))
 (let ((?x2596 (* l_0_0_24 l_0_0_24)))
 (let ((?x2594 (* l_0_0_23 l_0_0_23)))
 (let ((?x2597 (+ (+ (+ (* (- l_0_0_10) l_0_0_10) (* l_0_0_22 l_0_0_22)) ?x2594) ?x2596)))
 (= (- (- (- (+ ?x2597 ?x2598) ?x2600) ?x2602) ?x2604) 0.0)))))))))
(assert
 (let ((?x1935 (* 2.0 l_0_0_25)))
 (let ((?x1936 (* ?x1935 l_0_0_29)))
 (let ((?x1932 (* 2.0 l_0_0_24)))
 (let ((?x1933 (* ?x1932 l_0_0_28)))
 (let ((?x1929 (* 2.0 l_0_0_23)))
 (let ((?x1930 (* ?x1929 l_0_0_27)))
 (let ((?x1927 (* (* 2.0 l_0_0_22) l_0_0_26)))
 (let ((?x2625 (- (* (* (- 2.0) l_0_0_10) l_0_0_14) (* (* 2.0 l_0_0_11) l_0_0_7))))
 (let ((?x2629 (- (- ?x2625 (* (* 2.0 l_0_0_12) l_0_0_8)) (* (* 2.0 l_0_0_13) l_0_0_9))))
 (= (+ (+ (+ (+ ?x2629 ?x1927) ?x1930) ?x1933) ?x1936) 0.0)))))))))))
(assert
 (let ((?x2037 (* l_0_0_30 l_0_0_30)))
 (let ((?x2034 (* l_0_0_29 l_0_0_29)))
 (let ((?x2031 (* l_0_0_28 l_0_0_28)))
 (let ((?x2028 (* l_0_0_27 l_0_0_27)))
 (let ((?x2025 (* l_0_0_26 l_0_0_26)))
 (let ((?x2665 (* l_0_0_15 l_0_0_15)))
 (let ((?x2663 (* l_0_0_14 l_0_0_14)))
 (let ((?x2661 (* l_0_0_13 l_0_0_13)))
 (let ((?x2664 (- (- (- (* (- l_0_0_11) l_0_0_11) (* l_0_0_12 l_0_0_12)) ?x2661) ?x2663)))
 (= (+ (+ (+ (+ (+ (- ?x2664 ?x2665) ?x2025) ?x2028) ?x2031) ?x2034) ?x2037) 0.0)))))))))))
(assert
 (let ((?x1632 (* 2.0 l_0_0_16)))
 (let ((?x1767 (* ?x1632 l_0_0_17)))
 (let ((?x2695 (- (- (- ?x1767 (* ?x1632 l_0_0_16)) (* (* 8.0 l_0_0_61) l_0_0_62)) (* (* 2.0 l_0_0_76) l_0_0_77))))
 (= ?x2695 0.0)))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x2159 (* ?x1775 l_0_0_20)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x2157 (* ?x1772 l_0_0_19)))
 (let ((?x2718 (- (* (* (- 2.0) l_0_0_16) l_0_0_17) (* (* 4.0 l_0_0_16) l_0_0_19))))
 (let ((?x2724 (- (+ (+ (+ ?x2718 ?x2157) ?x2159) (* (* 2.0 l_0_0_61) l_0_0_62)) (* (* 8.0 l_0_0_62) l_0_0_64))))
 (let ((?x2728 (- (- ?x2724 (* (* 8.0 l_0_0_63) l_0_0_65)) (* (* 2.0 l_0_0_77) l_0_0_79))))
 (= (- ?x2728 (* (* 2.0 l_0_0_78) l_0_0_80)) 0.0)))))))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x2238 (* ?x1775 l_0_0_23)))
 (let ((?x1772 (* 2.0 l_0_0_17)))
 (let ((?x2237 (* ?x1772 l_0_0_22)))
 (let ((?x2771 (- (+ (+ (* (* (- 4.0) l_0_0_16) l_0_0_22) ?x2237) ?x2238) (* (* 8.0 l_0_0_62) l_0_0_67))))
 (let ((?x2775 (- (- ?x2771 (* (* 8.0 l_0_0_63) l_0_0_68)) (* (* 2.0 l_0_0_77) l_0_0_82))))
 (= (- ?x2775 (* (* 2.0 l_0_0_78) l_0_0_83)) 0.0))))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2179 (* ?x2129 l_0_0_47)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2177 (* ?x2126 l_0_0_32)))
 (let ((?x2811 (- (* (* (- 2.0) l_0_0_17) l_0_0_17) (* (* 2.0 l_0_0_18) l_0_0_18))))
 (= (- (+ ?x2811 ?x2177) ?x2179) 0.0)))))))
(assert
 (let ((?x1719 (* l_0_0_63 l_0_0_63)))
 (let ((?x1713 (* l_0_0_62 l_0_0_62)))
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2377 (* ?x2129 l_0_0_49)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2373 (* ?x2126 l_0_0_34)))
 (let ((?x1687 (* l_0_0_18 l_0_0_18)))
 (let ((?x2830 (- (- (* (* (- 4.0) l_0_0_17) l_0_0_19) (* l_0_0_17 l_0_0_17)) (* (* 4.0 l_0_0_18) l_0_0_20))))
 (= (+ (+ (- (+ (- ?x2830 ?x1687) ?x2373) ?x2377) ?x1713) ?x1719) 0.0))))))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2446 (* ?x2129 l_0_0_52)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2440 (* ?x2126 l_0_0_37)))
 (let ((?x2859 (- (* (* (- 4.0) l_0_0_17) l_0_0_22) (* (* 4.0 l_0_0_18) l_0_0_23))))
 (= (- (+ ?x2859 ?x2440) ?x2446) 0.0)))))))
(assert
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x2159 (* ?x1775 l_0_0_20)))
 (let ((?x2878 (- (- (* (* (- 2.0) l_0_0_17) l_0_0_19) ?x2159) (* (* 2.0 l_0_0_19) l_0_0_19))))
 (let ((?x2882 (- (- ?x2878 (* (* 2.0 l_0_0_20) l_0_0_20)) (* (* 2.0 l_0_0_21) l_0_0_21))))
 (let ((?x2886 (+ (+ ?x2882 (* (* 2.0 l_0_0_62) l_0_0_64)) (* (* 2.0 l_0_0_63) l_0_0_65))))
 (= ?x2886 0.0)))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2179 (* ?x2129 l_0_0_47)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2177 (* ?x2126 l_0_0_32)))
 (let ((?x1775 (* 2.0 l_0_0_18)))
 (let ((?x2238 (* ?x1775 l_0_0_23)))
 (let ((?x2913 (- (- (* (* (- 2.0) l_0_0_17) l_0_0_22) ?x2238) (* (* 4.0 l_0_0_19) l_0_0_22))))
 (let ((?x2917 (- (- ?x2913 (* (* 4.0 l_0_0_20) l_0_0_23)) (* (* 4.0 l_0_0_21) l_0_0_24))))
 (let ((?x2923 (+ (+ (+ (- ?x2917 ?x2177) ?x2179) (* (* 2.0 l_0_0_62) l_0_0_67)) (* (* 2.0 l_0_0_63) l_0_0_68))))
 (= ?x2923 0.0)))))))))))
(assert
 (let ((?x2953 (- (* (* (- 2.0) l_0_0_22) l_0_0_22) (* (* 2.0 l_0_0_23) l_0_0_23))))
 (let ((?x2957 (- (- ?x2953 (* (* 2.0 l_0_0_24) l_0_0_24)) (* (* 2.0 l_0_0_25) l_0_0_25))))
 (= ?x2957 0.0))))
(assert
 (let ((?x2981 (* l_0_0_61 l_0_0_61)))
 (let ((?x2980 (- (- (* (* 2.0 l_0_0_16) l_0_0_19) (* l_0_0_16 l_0_0_16)) (* (* 8.0 l_0_0_61) l_0_0_64))))
 (= (- (+ ?x2980 ?x2981) (* (* 2.0 l_0_0_76) l_0_0_79)) 0.0))))
(assert
 (let ((?x3028 (* l_0_0_81 l_0_0_81)))
 (let ((?x3026 (* l_0_0_80 l_0_0_80)))
 (let ((?x3024 (* l_0_0_79 l_0_0_79)))
 (let ((?x3008 (+ (* (* (- 2.0) l_0_0_16) l_0_0_19) (* 1.0 (* l_0_0_19 l_0_0_19)))))
 (let ((?x3012 (+ (+ ?x3008 (* 1.0 (* l_0_0_20 l_0_0_20))) (* 1.0 (* l_0_0_21 l_0_0_21)))))
 (let ((?x3017 (- (+ ?x3012 (* (* 2.0 l_0_0_61) l_0_0_64)) (* (* 4.0 l_0_0_64) l_0_0_64))))
 (let ((?x3023 (- (- ?x3017 (* (* 4.0 l_0_0_65) l_0_0_65)) (* (* 4.0 l_0_0_66) l_0_0_66))))
 (= (- (- (- ?x3023 ?x3024) ?x3026) ?x3028) 0.0)))))))))
(assert
 (let ((?x1692 (* l_0_0_46 l_0_0_46)))
 (let ((?x1690 (* l_0_0_31 l_0_0_31)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x2425 (* ?x1840 l_0_0_24)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x2423 (* ?x1837 l_0_0_23)))
 (let ((?x1834 (* 2.0 l_0_0_19)))
 (let ((?x2422 (* ?x1834 l_0_0_22)))
 (let ((?x3067 (- (+ (+ (+ (* (* (- 2.0) l_0_0_16) l_0_0_22) ?x2422) ?x2423) ?x2425) ?x1690)))
 (let ((?x3072 (- (+ (+ ?x3067 ?x1692) (* (* 2.0 l_0_0_61) l_0_0_67)) (* (* 8.0 l_0_0_64) l_0_0_67))))
 (let ((?x3076 (- (- ?x3072 (* (* 8.0 l_0_0_65) l_0_0_68)) (* (* 8.0 l_0_0_66) l_0_0_69))))
 (let ((?x3080 (- (- ?x3076 (* (* 2.0 l_0_0_79) l_0_0_82)) (* (* 2.0 l_0_0_80) l_0_0_83))))
 (= (- ?x3080 (* (* 2.0 l_0_0_81) l_0_0_84)) 0.0))))))))))))))
(assert
 (let ((?x3045 (* l_0_0_66 l_0_0_66)))
 (let ((?x3039 (* l_0_0_65 l_0_0_65)))
 (let ((?x3033 (* l_0_0_64 l_0_0_64)))
 (let ((?x2371 (* l_0_0_21 l_0_0_21)))
 (let ((?x3134 (+ (- (- (* (- l_0_0_19) l_0_0_19) (* l_0_0_20 l_0_0_20)) ?x2371) ?x3033)))
 (= (+ (+ ?x3134 ?x3039) ?x3045) 0.0)))))))
(assert
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2377 (* ?x2129 l_0_0_49)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2373 (* ?x2126 l_0_0_34)))
 (let ((?x1840 (* 2.0 l_0_0_21)))
 (let ((?x2425 (* ?x1840 l_0_0_24)))
 (let ((?x1837 (* 2.0 l_0_0_20)))
 (let ((?x2423 (* ?x1837 l_0_0_23)))
 (let ((?x3151 (+ (- (- (- (* (* (- 2.0) l_0_0_19) l_0_0_22) ?x2423) ?x2425) ?x2373) ?x2377)))
 (let ((?x3155 (+ (+ ?x3151 (* (* 2.0 l_0_0_64) l_0_0_67)) (* (* 2.0 l_0_0_65) l_0_0_68))))
 (= (+ ?x3155 (* (* 2.0 l_0_0_66) l_0_0_69)) 0.0))))))))))))
(assert
 (let ((?x3186 (* l_0_0_70 l_0_0_70)))
 (let ((?x3184 (* l_0_0_69 l_0_0_69)))
 (let ((?x3182 (* l_0_0_68 l_0_0_68)))
 (let ((?x3180 (* l_0_0_67 l_0_0_67)))
 (let ((?x2129 (* 2.0 l_0_0_46)))
 (let ((?x2446 (* ?x2129 l_0_0_52)))
 (let ((?x2126 (* 2.0 l_0_0_31)))
 (let ((?x2440 (* ?x2126 l_0_0_37)))
 (let ((?x2598 (* l_0_0_25 l_0_0_25)))
 (let ((?x2596 (* l_0_0_24 l_0_0_24)))
 (let ((?x3177 (- (- (- (* (- l_0_0_22) l_0_0_22) (* l_0_0_23 l_0_0_23)) ?x2596) ?x2598)))
 (= (+ (+ (+ (+ (+ (- ?x3177 ?x2440) ?x2446) ?x3180) ?x3182) ?x3184) ?x3186) 0.0)))))))))))))
(assert
 (let ((?x3212 (* l_0_0_76 l_0_0_76)))
 (let ((?x3211 (- (* 1.0 (* l_0_0_16 l_0_0_16)) (* (* 4.0 l_0_0_61) l_0_0_61))))
 (= (- ?x3211 ?x3212) 0.0))))
(assert
 (let ((?x3249 (* l_0_0_85 l_0_0_85)))
 (let ((?x3247 (* l_0_0_84 l_0_0_84)))
 (let ((?x3245 (* l_0_0_83 l_0_0_83)))
 (let ((?x3243 (* l_0_0_82 l_0_0_82)))
 (let ((?x3226 (+ (* 1.0 (* l_0_0_22 l_0_0_22)) (* 1.0 (* l_0_0_23 l_0_0_23)))))
 (let ((?x3230 (+ (+ ?x3226 (* 1.0 (* l_0_0_24 l_0_0_24))) (* 1.0 (* l_0_0_25 l_0_0_25)))))
 (let ((?x3236 (- (- ?x3230 (* (* 4.0 l_0_0_67) l_0_0_67)) (* (* 4.0 l_0_0_68) l_0_0_68))))
 (let ((?x3242 (- (- ?x3236 (* (* 4.0 l_0_0_69) l_0_0_69)) (* (* 4.0 l_0_0_70) l_0_0_70))))
 (= (- (- (- (- ?x3242 ?x3243) ?x3245) ?x3247) ?x3249) 0.0))))))))))
(assert
 (let ((?x3309 (* 2.0 l_0_0_51)))
 (let ((?x3310 (* ?x3309 l_0_0_54)))
 (let ((?x3306 (* 2.0 l_0_0_50)))
 (let ((?x3307 (* ?x3306 l_0_0_53)))
 (let ((?x3303 (* 2.0 l_0_0_49)))
 (let ((?x3304 (* ?x3303 l_0_0_52)))
 (let ((?x3301 (* l_0_0_48 l_0_0_48)))
 (let ((?x3299 (* l_0_0_47 l_0_0_47)))
 (let ((?x3296 (* 2.0 l_0_0_36)))
 (let ((?x3297 (* ?x3296 l_0_0_39)))
 (let ((?x3293 (* 2.0 l_0_0_35)))
 (let ((?x3294 (* ?x3293 l_0_0_38)))
 (let ((?x3290 (* 2.0 l_0_0_34)))
 (let ((?x3291 (* ?x3290 l_0_0_37)))
 (let ((?x3295 (+ (+ (- (* (- l_0_0_32) l_0_0_32) (* l_0_0_33 l_0_0_33)) ?x3291) ?x3294)))
 (= (- (- (- (+ (+ (+ ?x3295 ?x3297) ?x3299) ?x3301) ?x3304) ?x3307) ?x3310) 0.0)))))))))))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3360 (* ?x3359 l_0_0_50)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3357 (* ?x3356 l_0_0_49)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3354 (* ?x3353 l_0_0_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_0_32) l_0_0_34) ?x3354) ?x3357) ?x3360) 0.0))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3383 (* ?x3359 l_0_0_53)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3381 (* ?x3356 l_0_0_52)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3374 (* ?x3353 l_0_0_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_0_32) l_0_0_37) ?x3374) ?x3381) ?x3383) 0.0))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3412 (* ?x3359 l_0_0_57)))
 (let ((?x3383 (* ?x3359 l_0_0_53)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3409 (* ?x3356 l_0_0_56)))
 (let ((?x3381 (* ?x3356 l_0_0_52)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3406 (* ?x3353 l_0_0_42)))
 (let ((?x3374 (* ?x3353 l_0_0_38)))
 (let ((?x3395 (* 2.0 l_0_0_32)))
 (let ((?x3398 (* ?x3395 l_0_0_41)))
 (let ((?x3397 (* ?x3395 l_0_0_37)))
 (let ((?x3413 (+ (- (+ (- (- (+ (- ?x3397 ?x3398) ?x3374) ?x3406) ?x3381) ?x3409) ?x3383) ?x3412)))
 (= ?x3413 0.0)))))))))))))))
(assert
 (let ((?x3453 (* l_0_0_51 l_0_0_51)))
 (let ((?x3451 (* l_0_0_50 l_0_0_50)))
 (let ((?x3449 (* l_0_0_49 l_0_0_49)))
 (let ((?x3447 (* l_0_0_36 l_0_0_36)))
 (let ((?x3450 (+ (- (- (* (- l_0_0_34) l_0_0_34) (* l_0_0_35 l_0_0_35)) ?x3447) ?x3449)))
 (= (+ (+ ?x3450 ?x3451) ?x3453) 0.0)))))))
(assert
 (let ((?x3309 (* 2.0 l_0_0_51)))
 (let ((?x3310 (* ?x3309 l_0_0_54)))
 (let ((?x3306 (* 2.0 l_0_0_50)))
 (let ((?x3307 (* ?x3306 l_0_0_53)))
 (let ((?x3303 (* 2.0 l_0_0_49)))
 (let ((?x3304 (* ?x3303 l_0_0_52)))
 (let ((?x3296 (* 2.0 l_0_0_36)))
 (let ((?x3297 (* ?x3296 l_0_0_39)))
 (let ((?x3293 (* 2.0 l_0_0_35)))
 (let ((?x3294 (* ?x3293 l_0_0_38)))
 (let ((?x3475 (+ (+ (- (- (* (* (- 2.0) l_0_0_34) l_0_0_37) ?x3294) ?x3297) ?x3304) ?x3307)))
 (= (+ ?x3475 ?x3310) 0.0)))))))))))))
(assert
 (let ((?x3309 (* 2.0 l_0_0_51)))
 (let ((?x3501 (* ?x3309 l_0_0_58)))
 (let ((?x3310 (* ?x3309 l_0_0_54)))
 (let ((?x3306 (* 2.0 l_0_0_50)))
 (let ((?x3498 (* ?x3306 l_0_0_57)))
 (let ((?x3307 (* ?x3306 l_0_0_53)))
 (let ((?x3303 (* 2.0 l_0_0_49)))
 (let ((?x3495 (* ?x3303 l_0_0_56)))
 (let ((?x3304 (* ?x3303 l_0_0_52)))
 (let ((?x3296 (* 2.0 l_0_0_36)))
 (let ((?x3492 (* ?x3296 l_0_0_43)))
 (let ((?x3297 (* ?x3296 l_0_0_39)))
 (let ((?x3293 (* 2.0 l_0_0_35)))
 (let ((?x3489 (* ?x3293 l_0_0_42)))
 (let ((?x3294 (* ?x3293 l_0_0_38)))
 (let ((?x3290 (* 2.0 l_0_0_34)))
 (let ((?x3484 (* ?x3290 l_0_0_41)))
 (let ((?x3291 (* ?x3290 l_0_0_37)))
 (let ((?x3496 (+ (- (- (+ (- (+ (- ?x3291 ?x3484) ?x3294) ?x3489) ?x3297) ?x3492) ?x3304) ?x3495)))
 (= (+ (- (+ (- ?x3496 ?x3307) ?x3498) ?x3310) ?x3501) 0.0)))))))))))))))))))))
(assert
 (let ((?x3554 (* l_0_0_55 l_0_0_55)))
 (let ((?x3552 (* l_0_0_54 l_0_0_54)))
 (let ((?x3550 (* l_0_0_53 l_0_0_53)))
 (let ((?x3548 (* l_0_0_52 l_0_0_52)))
 (let ((?x3546 (* l_0_0_40 l_0_0_40)))
 (let ((?x3544 (* l_0_0_39 l_0_0_39)))
 (let ((?x3547 (- (- (- (* (- l_0_0_37) l_0_0_37) (* l_0_0_38 l_0_0_38)) ?x3544) ?x3546)))
 (= (+ (+ (+ (+ ?x3547 ?x3548) ?x3550) ?x3552) ?x3554) 0.0)))))))))
(assert
 (let ((?x3554 (* l_0_0_55 l_0_0_55)))
 (let ((?x3603 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3552 (* l_0_0_54 l_0_0_54)))
 (let ((?x3599 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3550 (* l_0_0_53 l_0_0_53)))
 (let ((?x3595 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3548 (* l_0_0_52 l_0_0_52)))
 (let ((?x3591 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3546 (* l_0_0_40 l_0_0_40)))
 (let ((?x3587 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3544 (* l_0_0_39 l_0_0_39)))
 (let ((?x3583 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3542 (* l_0_0_38 l_0_0_38)))
 (let ((?x3579 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3580 (- (+ (* (* (- 2.0) l_0_0_37) l_0_0_41) (* l_0_0_37 l_0_0_37)) ?x3579)))
 (let ((?x3593 (- (+ (+ (- (+ (- (+ ?x3580 ?x3542) ?x3583) ?x3544) ?x3587) ?x3546) ?x3591) ?x3548)))
 (= (- (+ (- (+ (- (+ ?x3593 ?x3595) ?x3550) ?x3599) ?x3552) ?x3603) ?x3554) 0.0))))))))))))))))))
(assert
 (let ((?x3678 (* l_0_0_60 l_0_0_60)))
 (let ((?x3676 (* l_0_0_59 l_0_0_59)))
 (let ((?x3674 (* l_0_0_58 l_0_0_58)))
 (let ((?x3672 (* l_0_0_57 l_0_0_57)))
 (let ((?x3670 (* l_0_0_56 l_0_0_56)))
 (let ((?x3603 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3599 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3595 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3591 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3664 (* l_0_0_45 l_0_0_45)))
 (let ((?x3662 (* l_0_0_44 l_0_0_44)))
 (let ((?x3660 (* l_0_0_43 l_0_0_43)))
 (let ((?x3658 (* l_0_0_42 l_0_0_42)))
 (let ((?x3656 (* l_0_0_41 l_0_0_41)))
 (let ((?x3587 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3583 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3579 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3655 (+ (+ (+ (* (* 2.0 l_0_0_37) l_0_0_41) ?x3579) ?x3583) ?x3587)))
 (let ((?x3667 (- (- (- (- (- (- (- ?x3655 ?x3656) ?x3658) ?x3660) ?x3662) ?x3664) ?x3591) ?x3595)))
 (let ((?x3679 (+ (+ (+ (+ (+ (- (- ?x3667 ?x3599) ?x3603) ?x3670) ?x3672) ?x3674) ?x3676) ?x3678)))
 (= ?x3679 0.0))))))))))))))))))))))
(assert
 (let ((?x3301 (* l_0_0_48 l_0_0_48)))
 (let ((?x3299 (* l_0_0_47 l_0_0_47)))
 (let ((?x3288 (* l_0_0_33 l_0_0_33)))
 (let ((?x3314 (* l_0_0_32 l_0_0_32)))
 (let ((?x3716 (+ ?x3314 ?x3288)))
 (= (- (- ?x3716 ?x3299) ?x3301) 0.0)))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3360 (* ?x3359 l_0_0_50)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3357 (* ?x3356 l_0_0_49)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3354 (* ?x3353 l_0_0_35)))
 (= (- (- (+ (* (* 2.0 l_0_0_32) l_0_0_34) ?x3354) ?x3357) ?x3360) 0.0))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3383 (* ?x3359 l_0_0_53)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3381 (* ?x3356 l_0_0_52)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3374 (* ?x3353 l_0_0_38)))
 (let ((?x3395 (* 2.0 l_0_0_32)))
 (let ((?x3397 (* ?x3395 l_0_0_37)))
 (= (- (- (+ ?x3397 ?x3374) ?x3381) ?x3383) 0.0))))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3412 (* ?x3359 l_0_0_57)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3409 (* ?x3356 l_0_0_56)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3406 (* ?x3353 l_0_0_42)))
 (let ((?x3395 (* 2.0 l_0_0_32)))
 (let ((?x3398 (* ?x3395 l_0_0_41)))
 (= (- (- (+ ?x3398 ?x3406) ?x3409) ?x3412) 0.0))))))))))
(assert
 (let ((?x3453 (* l_0_0_51 l_0_0_51)))
 (let ((?x3451 (* l_0_0_50 l_0_0_50)))
 (let ((?x3449 (* l_0_0_49 l_0_0_49)))
 (let ((?x3447 (* l_0_0_36 l_0_0_36)))
 (let ((?x3763 (- (+ (+ (* l_0_0_34 l_0_0_34) (* l_0_0_35 l_0_0_35)) ?x3447) ?x3449)))
 (= (- (- ?x3763 ?x3451) ?x3453) 0.0)))))))
(assert
 (let ((?x3309 (* 2.0 l_0_0_51)))
 (let ((?x3501 (* ?x3309 l_0_0_58)))
 (let ((?x3306 (* 2.0 l_0_0_50)))
 (let ((?x3498 (* ?x3306 l_0_0_57)))
 (let ((?x3303 (* 2.0 l_0_0_49)))
 (let ((?x3495 (* ?x3303 l_0_0_56)))
 (let ((?x3301 (* l_0_0_48 l_0_0_48)))
 (let ((?x3299 (* l_0_0_47 l_0_0_47)))
 (let ((?x3296 (* 2.0 l_0_0_36)))
 (let ((?x3492 (* ?x3296 l_0_0_43)))
 (let ((?x3293 (* 2.0 l_0_0_35)))
 (let ((?x3489 (* ?x3293 l_0_0_42)))
 (let ((?x3290 (* 2.0 l_0_0_34)))
 (let ((?x3484 (* ?x3290 l_0_0_41)))
 (let ((?x3288 (* l_0_0_33 l_0_0_33)))
 (let ((?x3314 (* l_0_0_32 l_0_0_32)))
 (let ((?x3716 (+ ?x3314 ?x3288)))
 (let ((?x3779 (- (- (- (- (+ (+ (+ ?x3716 ?x3484) ?x3489) ?x3492) ?x3299) ?x3301) ?x3495) ?x3498)))
 (= (- ?x3779 ?x3501) 0.0))))))))))))))))))))
(assert
 (let ((?x3554 (* l_0_0_55 l_0_0_55)))
 (let ((?x3552 (* l_0_0_54 l_0_0_54)))
 (let ((?x3550 (* l_0_0_53 l_0_0_53)))
 (let ((?x3548 (* l_0_0_52 l_0_0_52)))
 (let ((?x3546 (* l_0_0_40 l_0_0_40)))
 (let ((?x3544 (* l_0_0_39 l_0_0_39)))
 (let ((?x3802 (+ (+ (+ (* l_0_0_37 l_0_0_37) (* l_0_0_38 l_0_0_38)) ?x3544) ?x3546)))
 (= (- (- (- (- ?x3802 ?x3548) ?x3550) ?x3552) ?x3554) 0.0)))))))))
(assert
 (let ((?x3603 (* (* 2.0 l_0_0_55) l_0_0_59)))
 (let ((?x3599 (* (* 2.0 l_0_0_54) l_0_0_58)))
 (let ((?x3595 (* (* 2.0 l_0_0_53) l_0_0_57)))
 (let ((?x3591 (* (* 2.0 l_0_0_52) l_0_0_56)))
 (let ((?x3587 (* (* 2.0 l_0_0_40) l_0_0_44)))
 (let ((?x3583 (* (* 2.0 l_0_0_39) l_0_0_43)))
 (let ((?x3579 (* (* 2.0 l_0_0_38) l_0_0_42)))
 (let ((?x3655 (+ (+ (+ (* (* 2.0 l_0_0_37) l_0_0_41) ?x3579) ?x3583) ?x3587)))
 (= (- (- (- (- ?x3655 ?x3591) ?x3595) ?x3599) ?x3603) 0.0))))))))))
(assert
 (let ((?x3678 (* l_0_0_60 l_0_0_60)))
 (let ((?x3676 (* l_0_0_59 l_0_0_59)))
 (let ((?x3674 (* l_0_0_58 l_0_0_58)))
 (let ((?x3672 (* l_0_0_57 l_0_0_57)))
 (let ((?x3670 (* l_0_0_56 l_0_0_56)))
 (let ((?x3664 (* l_0_0_45 l_0_0_45)))
 (let ((?x3662 (* l_0_0_44 l_0_0_44)))
 (let ((?x3660 (* l_0_0_43 l_0_0_43)))
 (let ((?x3832 (+ (+ (+ (* l_0_0_41 l_0_0_41) (* l_0_0_42 l_0_0_42)) ?x3660) ?x3662)))
 (= (- (- (- (- (- (+ ?x3832 ?x3664) ?x3670) ?x3672) ?x3674) ?x3676) ?x3678) 0.0)))))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3360 (* ?x3359 l_0_0_50)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3357 (* ?x3356 l_0_0_49)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3354 (* ?x3353 l_0_0_35)))
 (= (- (- (+ (* (* 2.0 l_0_0_32) l_0_0_34) ?x3354) ?x3357) ?x3360) 0.0))))))))
(assert
 (let ((?x3359 (* 2.0 l_0_0_48)))
 (let ((?x3412 (* ?x3359 l_0_0_57)))
 (let ((?x3356 (* 2.0 l_0_0_47)))
 (let ((?x3409 (* ?x3356 l_0_0_56)))
 (let ((?x3353 (* 2.0 l_0_0_33)))
 (let ((?x3406 (* ?x3353 l_0_0_42)))
 (let ((?x3395 (* 2.0 l_0_0_32)))
 (let ((?x3398 (* ?x3395 l_0_0_41)))
 (= (- (- (+ ?x3398 ?x3406) ?x3409) ?x3412) 0.0))))))))))
(assert
 (let ((?x3453 (* l_0_0_51 l_0_0_51)))
 (let ((?x3451 (* l_0_0_50 l_0_0_50)))
 (let ((?x3449 (* l_0_0_49 l_0_0_49)))
 (let ((?x3447 (* l_0_0_36 l_0_0_36)))
 (let ((?x3763 (- (+ (+ (* l_0_0_34 l_0_0_34) (* l_0_0_35 l_0_0_35)) ?x3447) ?x3449)))
 (= (- (- ?x3763 ?x3451) ?x3453) 0.0)))))))
(assert
 (let ((?x3309 (* 2.0 l_0_0_51)))
 (let ((?x3501 (* ?x3309 l_0_0_58)))
 (let ((?x3306 (* 2.0 l_0_0_50)))
 (let ((?x3498 (* ?x3306 l_0_0_57)))
 (let ((?x3303 (* 2.0 l_0_0_49)))
 (let ((?x3495 (* ?x3303 l_0_0_56)))
 (let ((?x3296 (* 2.0 l_0_0_36)))
 (let ((?x3492 (* ?x3296 l_0_0_43)))
 (let ((?x3293 (* 2.0 l_0_0_35)))
 (let ((?x3489 (* ?x3293 l_0_0_42)))
 (let ((?x3290 (* 2.0 l_0_0_34)))
 (let ((?x3484 (* ?x3290 l_0_0_41)))
 (= (- (- (- (+ (+ ?x3484 ?x3489) ?x3492) ?x3495) ?x3498) ?x3501) 0.0))))))))))))))
(assert
 (let ((?x3678 (* l_0_0_60 l_0_0_60)))
 (let ((?x3676 (* l_0_0_59 l_0_0_59)))
 (let ((?x3674 (* l_0_0_58 l_0_0_58)))
 (let ((?x3672 (* l_0_0_57 l_0_0_57)))
 (let ((?x3670 (* l_0_0_56 l_0_0_56)))
 (let ((?x3664 (* l_0_0_45 l_0_0_45)))
 (let ((?x3662 (* l_0_0_44 l_0_0_44)))
 (let ((?x3660 (* l_0_0_43 l_0_0_43)))
 (let ((?x3832 (+ (+ (+ (* l_0_0_41 l_0_0_41) (* l_0_0_42 l_0_0_42)) ?x3660) ?x3662)))
 (= (- (- (- (- (- (+ ?x3832 ?x3664) ?x3670) ?x3672) ?x3674) ?x3676) ?x3678) 0.0)))))))))))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_10 0.0))
(assert
 (>= l_0_0_15 0.0))
(assert
 (>= l_0_0_16 0.0))
(assert
 (>= l_0_0_18 0.0))
(assert
 (>= l_0_0_21 0.0))
(assert
 (>= l_0_0_25 0.0))
(assert
 (>= l_0_0_30 0.0))
(assert
 (>= l_0_0_31 0.0))
(assert
 (>= l_0_0_33 0.0))
(assert
 (>= l_0_0_36 0.0))
(assert
 (>= l_0_0_40 0.0))
(assert
 (>= l_0_0_45 0.0))
(assert
 (>= l_0_0_46 0.0))
(assert
 (>= l_0_0_48 0.0))
(assert
 (>= l_0_0_51 0.0))
(assert
 (>= l_0_0_55 0.0))
(assert
 (>= l_0_0_60 0.0))
(assert
 (>= l_0_0_61 0.0))
(assert
 (>= l_0_0_63 0.0))
(assert
 (>= l_0_0_66 0.0))
(assert
 (>= l_0_0_70 0.0))
(assert
 (>= l_0_0_75 0.0))
(assert
 (>= l_0_0_76 0.0))
(assert
 (>= l_0_0_78 0.0))
(assert
 (>= l_0_0_81 0.0))
(assert
 (>= l_0_0_85 0.0))
(assert
 (>= l_0_0_90 0.0))
(assert
 (= (- l_0_1_2) 0.0))
(assert
 (= (- l_0_1_1) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_2 0.0))
(assert
 (= (- (- (- l_0_2_2) l_0_2_3) l_0_2_4) 0.0))
(assert
 (= (- l_0_2_1) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_2 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_4 0.0))
(assert
 (= (- l_0_3_1) 0.0))
(assert
 (= (- (- (- (- (- l_0_3_2) l_0_3_3) l_0_3_4) l_0_3_5) l_0_3_6) 0.0))
(assert
 (>= l_0_3_1 0.0))
(assert
 (>= l_0_3_2 0.0))
(assert
 (>= l_0_3_3 0.0))
(assert
 (>= l_0_3_4 0.0))
(assert
 (>= l_0_3_5 0.0))
(assert
 (>= l_0_3_6 0.0))
(assert
 (= (- l_0_4_1) 0.0))
(assert
 (let ((?x3970 (- (- (- (- (- (- l_0_4_2) l_0_4_3) l_0_4_4) l_0_4_5) l_0_4_6) l_0_4_7)))
 (= (- ?x3970 l_0_4_8) 0.0)))
(assert
 (>= l_0_4_1 0.0))
(assert
 (>= l_0_4_2 0.0))
(assert
 (>= l_0_4_3 0.0))
(assert
 (>= l_0_4_4 0.0))
(assert
 (>= l_0_4_5 0.0))
(assert
 (>= l_0_4_6 0.0))
(assert
 (>= l_0_4_7 0.0))
(assert
 (>= l_0_4_8 0.0))
(assert
 (= (- 1.0 l_0_5_1) 0.0))
(assert
 (let ((?x4011 (- (- (- (- (- (- l_0_5_10) l_0_5_2) l_0_5_3) l_0_5_4) l_0_5_5) l_0_5_6)))
 (= (- (- (- ?x4011 l_0_5_7) l_0_5_8) l_0_5_9) 0.0)))
(assert
 (>= l_0_5_1 0.0))
(assert
 (>= l_0_5_2 0.0))
(assert
 (>= l_0_5_3 0.0))
(assert
 (>= l_0_5_4 0.0))
(assert
 (>= l_0_5_5 0.0))
(assert
 (>= l_0_5_6 0.0))
(assert
 (>= l_0_5_7 0.0))
(assert
 (>= l_0_5_8 0.0))
(assert
 (>= l_0_5_9 0.0))
(assert
 (>= l_0_5_10 0.0))
(assert
 (let ((?x4057 (- (- (- (+ _a_0_ (* 1.0 _a_2_)) l_0_6_10) l_0_6_11) l_0_6_12)))
 (let ((?x4062 (- (- (- (- (- ?x4057 l_0_6_2) l_0_6_3) l_0_6_4) l_0_6_5) l_0_6_6)))
 (= (- (- (- ?x4062 l_0_6_7) l_0_6_8) l_0_6_9) 0.0))))
(assert
 (= (- _a_1_ l_0_6_1) 0.0))
(assert
 (>= l_0_6_1 0.0))
(assert
 (>= l_0_6_2 0.0))
(assert
 (>= l_0_6_3 0.0))
(assert
 (>= l_0_6_4 0.0))
(assert
 (>= l_0_6_5 0.0))
(assert
 (>= l_0_6_6 0.0))
(assert
 (>= l_0_6_7 0.0))
(assert
 (>= l_0_6_8 0.0))
(assert
 (>= l_0_6_9 0.0))
(assert
 (>= l_0_6_10 0.0))
(assert
 (>= l_0_6_11 0.0))
(assert
 (>= l_0_6_12 0.0))
(assert
 (let ((?x4132 (* l_0_7_76 l_0_7_76)))
 (let ((?x4127 (* l_0_7_16 l_0_7_16)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4125 (* ?x4124 l_0_7_26)))
 (let ((?x4126 (+ (- (* (- l_0_7_1) l_0_7_1) (* (* 2.0 l_0_7_101) l_0_7_91)) ?x4125)))
 (let ((?x4134 (+ (- (+ (+ ?x4126 ?x4127) (* (* 8.0 l_0_7_61) l_0_7_71)) ?x4132) 1.0)))
 (= ?x4134 0.0))))))))
(assert
 (let ((?x4132 (* l_0_7_76 l_0_7_76)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4153 (* ?x4124 l_0_7_17)))
 (let ((?x4159 (+ (+ (- ?x4153 (* ?x4124 l_0_7_16)) (* (* 8.0 l_0_7_61) l_0_7_62)) ?x4132)))
 (= (- (- ?x4159 (* (* 2.0 l_0_7_91) l_0_7_92)) 1.0) 0.0))))))
(assert
 (let ((?x4191 (* l_0_7_61 l_0_7_61)))
 (let ((?x4190 (+ (- (* (* 2.0 l_0_7_16) l_0_7_19) (* l_0_7_16 l_0_7_16)) (* (* 8.0 l_0_7_61) l_0_7_64))))
 (let ((?x4197 (- (+ (- ?x4190 ?x4191) (* (/ 1.0 4.0) (* l_0_7_76 l_0_7_76))) (* (* 2.0 l_0_7_91) l_0_7_94))))
 (= (- ?x4197 (/ 1.0 4.0)) 0.0)))))
(assert
 (let ((?x4230 (* l_0_7_91 l_0_7_91)))
 (let ((?x4191 (* l_0_7_61 l_0_7_61)))
 (let ((?x4228 (* 4.0 ?x4191)))
 (= (- (+ (* 1.0 (* l_0_7_16 l_0_7_16)) ?x4228) ?x4230) 0.0)))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4264 (* ?x4261 l_0_7_86)))
 (let ((?x4262 (* ?x4261 l_0_7_77)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4253 (* ?x4252 l_0_7_27)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4250 (* ?x4249 l_0_7_26)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4153 (* ?x4124 l_0_7_17)))
 (let ((?x4241 (- (* (* (- 2.0) l_0_7_1) l_0_7_2) (* (* 2.0 l_0_7_101) l_0_7_92))))
 (let ((?x4248 (- (+ (- ?x4241 (* (* 2.0 l_0_7_102) l_0_7_93)) ?x4153) (* (* 4.0 l_0_7_16) l_0_7_26))))
 (let ((?x4260 (+ (+ (+ (+ ?x4248 ?x4250) ?x4253) (* (* 8.0 l_0_7_62) l_0_7_71)) (* (* 8.0 l_0_7_63) l_0_7_72))))
 (= (+ (- ?x4260 ?x4262) ?x4264) 0.0))))))))))))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4346 (* ?x4261 l_0_7_79)))
 (let ((?x4332 (* l_0_7_46 l_0_7_46)))
 (let ((?x4330 (* l_0_7_31 l_0_7_31)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x4328 (* ?x4327 l_0_7_28)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x4325 (* ?x4324 l_0_7_27)))
 (let ((?x4321 (* 2.0 l_0_7_19)))
 (let ((?x4322 (* ?x4321 l_0_7_26)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4125 (* ?x4124 l_0_7_26)))
 (let ((?x4187 (* ?x4124 l_0_7_19)))
 (let ((?x4313 (- (* (* (- 2.0) l_0_7_1) l_0_7_4) (* (* 2.0 l_0_7_101) l_0_7_94))))
 (let ((?x4318 (- (- ?x4313 (* (* 2.0 l_0_7_102) l_0_7_95)) (* (* 2.0 l_0_7_103) l_0_7_96))))
 (let ((?x4333 (- (+ (+ (+ (+ (- (+ ?x4318 ?x4187) ?x4125) ?x4322) ?x4325) ?x4328) ?x4330) ?x4332)))
 (let ((?x4339 (+ (- ?x4333 (* (* 2.0 l_0_7_61) l_0_7_71)) (* (* 8.0 l_0_7_64) l_0_7_71))))
 (let ((?x4345 (+ (+ ?x4339 (* (* 8.0 l_0_7_65) l_0_7_72)) (* (* 8.0 l_0_7_66) l_0_7_73))))
 (= (+ (- ?x4345 ?x4346) (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_86)) 0.0))))))))))))))))))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4454 (* ?x4261 l_0_7_82)))
 (let ((?x4439 (* 2.0 l_0_7_25)))
 (let ((?x4440 (* ?x4439 l_0_7_29)))
 (let ((?x4436 (* 2.0 l_0_7_24)))
 (let ((?x4437 (* ?x4436 l_0_7_28)))
 (let ((?x4433 (* 2.0 l_0_7_23)))
 (let ((?x4434 (* ?x4433 l_0_7_27)))
 (let ((?x4431 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4428 (* ?x4124 l_0_7_22)))
 (let ((?x4421 (- (* (* (- 2.0) l_0_7_1) l_0_7_7) (* (* 2.0 l_0_7_100) l_0_7_104))))
 (let ((?x4425 (- (- ?x4421 (* (* 2.0 l_0_7_101) l_0_7_97)) (* (* 2.0 l_0_7_102) l_0_7_98))))
 (let ((?x4435 (+ (+ (+ (- ?x4425 (* (* 2.0 l_0_7_103) l_0_7_99)) ?x4428) ?x4431) ?x4434)))
 (let ((?x4447 (+ (+ (+ (+ ?x4435 ?x4437) ?x4440) (* (* 8.0 l_0_7_67) l_0_7_71)) (* (* 8.0 l_0_7_68) l_0_7_72))))
 (let ((?x4453 (+ (+ ?x4447 (* (* 8.0 l_0_7_69) l_0_7_73)) (* (* 8.0 l_0_7_70) l_0_7_74))))
 (= (- ?x4453 ?x4454) 0.0))))))))))))))))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4264 (* ?x4261 l_0_7_86)))
 (let ((?x4559 (* l_0_7_75 l_0_7_75)))
 (let ((?x4560 (* 4.0 ?x4559)))
 (let ((?x4556 (* l_0_7_74 l_0_7_74)))
 (let ((?x4557 (* 4.0 ?x4556)))
 (let ((?x4553 (* l_0_7_73 l_0_7_73)))
 (let ((?x4554 (* 4.0 ?x4553)))
 (let ((?x4550 (* l_0_7_72 l_0_7_72)))
 (let ((?x4551 (* 4.0 ?x4550)))
 (let ((?x4547 (* l_0_7_71 l_0_7_71)))
 (let ((?x4548 (* 4.0 ?x4547)))
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4125 (* ?x4124 l_0_7_26)))
 (let ((?x4529 (* l_0_7_105 l_0_7_105)))
 (let ((?x4527 (* l_0_7_104 l_0_7_104)))
 (let ((?x4525 (* l_0_7_103 l_0_7_103)))
 (let ((?x4523 (* l_0_7_102 l_0_7_102)))
 (let ((?x4524 (- (- (* (* (- 2.0) l_0_7_1) l_0_7_11) (* l_0_7_101 l_0_7_101)) ?x4523)))
 (let ((?x4534 (+ (+ (- (- (- ?x4524 ?x4525) ?x4527) ?x4529) ?x4125) (* 1.0 (* l_0_7_26 l_0_7_26)))))
 (let ((?x4540 (+ (+ ?x4534 (* 1.0 (* l_0_7_27 l_0_7_27))) (* 1.0 (* l_0_7_28 l_0_7_28)))))
 (let ((?x4546 (+ (+ ?x4540 (* 1.0 (* l_0_7_29 l_0_7_29))) (* 1.0 (* l_0_7_30 l_0_7_30)))))
 (= (- (+ (+ (+ (+ (+ ?x4546 ?x4548) ?x4551) ?x4554) ?x4557) ?x4560) ?x4264) 0.0))))))))))))))))))))))))
(assert
 (let ((?x4614 (* l_0_7_78 l_0_7_78)))
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4612 (* ?x4611 l_0_7_87)))
 (let ((?x4609 (* l_0_7_77 l_0_7_77)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4607 (* ?x4606 l_0_7_86)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4604 (* ?x4603 l_0_7_56)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4601 (* ?x4600 l_0_7_41)))
 (let ((?x4598 (* l_0_7_3 l_0_7_3)))
 (let ((?x4596 (* l_0_7_2 l_0_7_2)))
 (let ((?x4594 (* l_0_7_18 l_0_7_18)))
 (let ((?x4593 (- (+ (* (* (- 4.0) l_0_7_17) l_0_7_26) (* l_0_7_17 l_0_7_17)) (* (* 4.0 l_0_7_18) l_0_7_27))))
 (let ((?x4610 (- (+ (- (+ (- (- (+ ?x4593 ?x4594) ?x4596) ?x4598) ?x4601) ?x4604) ?x4607) ?x4609)))
 (= (- (+ ?x4610 ?x4612) ?x4614) 0.0)))))))))))))))))
(assert
 (let ((?x4706 (* 2.0 l_0_7_81)))
 (let ((?x4707 (* ?x4706 l_0_7_88)))
 (let ((?x4703 (* 2.0 l_0_7_80)))
 (let ((?x4704 (* ?x4703 l_0_7_87)))
 (let ((?x4700 (* 2.0 l_0_7_79)))
 (let ((?x4701 (* ?x4700 l_0_7_86)))
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4695 (* ?x4611 l_0_7_80)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4690 (* ?x4606 l_0_7_79)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4682 (* ?x4603 l_0_7_47)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4680 (* ?x4600 l_0_7_32)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4253 (* ?x4252 l_0_7_27)))
 (let ((?x4662 (* ?x4252 l_0_7_20)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4250 (* ?x4249 l_0_7_26)))
 (let ((?x4660 (* ?x4249 l_0_7_19)))
 (let ((?x4667 (- (- (+ (- ?x4660 ?x4250) ?x4662) ?x4253) (* (* 4.0 l_0_7_19) l_0_7_26))))
 (let ((?x4673 (- (- ?x4667 (* (* 2.0 l_0_7_2) l_0_7_4)) (* (* 4.0 l_0_7_20) l_0_7_27))))
 (let ((?x4679 (- (- ?x4673 (* (* 4.0 l_0_7_21) l_0_7_28)) (* (* 2.0 l_0_7_3) l_0_7_5))))
 (let ((?x4689 (- (- (- (+ ?x4679 ?x4680) ?x4682) (* (* 2.0 l_0_7_62) l_0_7_71)) (* (* 2.0 l_0_7_63) l_0_7_72))))
 (let ((?x4699 (+ (- (+ (- ?x4689 ?x4690) (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_86)) ?x4695) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_87))))
 (= (+ (+ (+ ?x4699 ?x4701) ?x4704) ?x4707) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x4827 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x4824 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x4821 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x4818 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4815 (* ?x4611 l_0_7_83)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4813 (* ?x4606 l_0_7_82)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4783 (* ?x4252 l_0_7_23)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4781 (* ?x4249 l_0_7_22)))
 (let ((?x4801 (- (- (+ ?x4781 ?x4783) (* (* 2.0 l_0_7_2) l_0_7_7)) (* (* 4.0 l_0_7_22) l_0_7_26))))
 (let ((?x4807 (- (- ?x4801 (* (* 4.0 l_0_7_23) l_0_7_27)) (* (* 4.0 l_0_7_24) l_0_7_28))))
 (let ((?x4812 (- (- ?x4807 (* (* 4.0 l_0_7_25) l_0_7_29)) (* (* 2.0 l_0_7_3) l_0_7_8))))
 (= (+ (+ (+ (+ (- (- ?x4812 ?x4813) ?x4815) ?x4818) ?x4821) ?x4824) ?x4827) 0.0)))))))))))))))))
(assert
 (let ((?x4923 (* l_0_7_90 l_0_7_90)))
 (let ((?x4921 (* l_0_7_89 l_0_7_89)))
 (let ((?x4919 (* l_0_7_88 l_0_7_88)))
 (let ((?x4917 (* l_0_7_87 l_0_7_87)))
 (let ((?x4915 (* l_0_7_86 l_0_7_86)))
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4612 (* ?x4611 l_0_7_87)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4607 (* ?x4606 l_0_7_86)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4253 (* ?x4252 l_0_7_27)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4250 (* ?x4249 l_0_7_26)))
 (let ((?x4887 (- (* (* (- 2.0) l_0_7_11) l_0_7_2) (* (* 2.0 l_0_7_12) l_0_7_3))))
 (let ((?x4903 (- (- (+ (+ ?x4887 ?x4250) ?x4253) (* (* 2.0 l_0_7_26) l_0_7_26)) (* (* 2.0 l_0_7_27) l_0_7_27))))
 (let ((?x4909 (- (- ?x4903 (* (* 2.0 l_0_7_28) l_0_7_28)) (* (* 2.0 l_0_7_29) l_0_7_29))))
 (let ((?x4916 (+ (- (- (- ?x4909 (* (* 2.0 l_0_7_30) l_0_7_30)) ?x4607) ?x4612) ?x4915)))
 (= (+ (+ (+ (+ ?x4916 ?x4917) ?x4919) ?x4921) ?x4923) 0.0)))))))))))))))))))
(assert
 (let ((?x5010 (* l_0_7_81 l_0_7_81)))
 (let ((?x5005 (* l_0_7_80 l_0_7_80)))
 (let ((?x5000 (* l_0_7_79 l_0_7_79)))
 (let ((?x4986 (* l_0_7_6 l_0_7_6)))
 (let ((?x4984 (* l_0_7_5 l_0_7_5)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4982 (* ?x4603 l_0_7_49)))
 (let ((?x4980 (* l_0_7_4 l_0_7_4)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4978 (* ?x4600 l_0_7_34)))
 (let ((?x4976 (* l_0_7_21 l_0_7_21)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x4328 (* ?x4327 l_0_7_28)))
 (let ((?x4973 (* l_0_7_20 l_0_7_20)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x4325 (* ?x4324 l_0_7_27)))
 (let ((?x4972 (- (+ (* (* (- 2.0) l_0_7_19) l_0_7_26) (* l_0_7_19 l_0_7_19)) ?x4325)))
 (let ((?x4985 (- (- (- (+ (+ (- (+ ?x4972 ?x4973) ?x4328) ?x4976) ?x4978) ?x4980) ?x4982) ?x4984)))
 (let ((?x4993 (- (- (- ?x4985 ?x4986) (* (* 2.0 l_0_7_64) l_0_7_71)) (* (* 2.0 l_0_7_65) l_0_7_72))))
 (let ((?x4999 (+ (- ?x4993 (* (* 2.0 l_0_7_66) l_0_7_73)) (* (* (/ 1.0 2.0) l_0_7_79) l_0_7_86))))
 (let ((?x5009 (+ (- (+ (- ?x4999 ?x5000) (* (* (/ 1.0 2.0) l_0_7_80) l_0_7_87)) ?x5005) (* (* (/ 1.0 2.0) l_0_7_81) l_0_7_88))))
 (= (- ?x5009 ?x5010) 0.0)))))))))))))))))))))))
(assert
 (let ((?x4706 (* 2.0 l_0_7_81)))
 (let ((?x5118 (* ?x4706 l_0_7_84)))
 (let ((?x4703 (* 2.0 l_0_7_80)))
 (let ((?x5116 (* ?x4703 l_0_7_83)))
 (let ((?x4700 (* 2.0 l_0_7_79)))
 (let ((?x5114 (* ?x4700 l_0_7_82)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4604 (* ?x4603 l_0_7_56)))
 (let ((?x5093 (* ?x4603 l_0_7_52)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4601 (* ?x4600 l_0_7_41)))
 (let ((?x5087 (* ?x4600 l_0_7_37)))
 (let ((?x4439 (* 2.0 l_0_7_25)))
 (let ((?x4440 (* ?x4439 l_0_7_29)))
 (let ((?x4436 (* 2.0 l_0_7_24)))
 (let ((?x4437 (* ?x4436 l_0_7_28)))
 (let ((?x4433 (* 2.0 l_0_7_23)))
 (let ((?x4434 (* ?x4433 l_0_7_27)))
 (let ((?x4431 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x5081 (* ?x4327 l_0_7_24)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x5079 (* ?x4324 l_0_7_23)))
 (let ((?x4321 (* 2.0 l_0_7_19)))
 (let ((?x5078 (* ?x4321 l_0_7_22)))
 (let ((?x5088 (+ (- (- (- (- (+ (+ ?x5078 ?x5079) ?x5081) ?x4431) ?x4434) ?x4437) ?x4440) ?x5087)))
 (let ((?x5095 (+ (- (- (- ?x5088 ?x4601) (* (* 2.0 l_0_7_4) l_0_7_7)) ?x5093) ?x4604)))
 (let ((?x5101 (- (- ?x5095 (* (* 2.0 l_0_7_5) l_0_7_8)) (* (* 2.0 l_0_7_6) l_0_7_9))))
 (let ((?x5107 (- (- ?x5101 (* (* 2.0 l_0_7_67) l_0_7_71)) (* (* 2.0 l_0_7_68) l_0_7_72))))
 (let ((?x5113 (- (- ?x5107 (* (* 2.0 l_0_7_69) l_0_7_73)) (* (* 2.0 l_0_7_70) l_0_7_74))))
 (let ((?x5122 (+ (- (- (- ?x5113 ?x5114) ?x5116) ?x5118) (* (* (/ 1.0 2.0) l_0_7_82) l_0_7_86))))
 (let ((?x5128 (+ (+ ?x5122 (* (* (/ 1.0 2.0) l_0_7_83) l_0_7_87)) (* (* (/ 1.0 2.0) l_0_7_84) l_0_7_88))))
 (= (+ ?x5128 (* (* (/ 1.0 2.0) l_0_7_85) l_0_7_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x4923 (* l_0_7_90 l_0_7_90)))
 (let ((?x5263 (* (/ 1.0 4.0) ?x4923)))
 (let ((?x4921 (* l_0_7_89 l_0_7_89)))
 (let ((?x5261 (* (/ 1.0 4.0) ?x4921)))
 (let ((?x4919 (* l_0_7_88 l_0_7_88)))
 (let ((?x5259 (* (/ 1.0 4.0) ?x4919)))
 (let ((?x4917 (* l_0_7_87 l_0_7_87)))
 (let ((?x5257 (* (/ 1.0 4.0) ?x4917)))
 (let ((?x4915 (* l_0_7_86 l_0_7_86)))
 (let ((?x5255 (* (/ 1.0 4.0) ?x4915)))
 (let ((?x4706 (* 2.0 l_0_7_81)))
 (let ((?x4707 (* ?x4706 l_0_7_88)))
 (let ((?x4703 (* 2.0 l_0_7_80)))
 (let ((?x4704 (* ?x4703 l_0_7_87)))
 (let ((?x4700 (* 2.0 l_0_7_79)))
 (let ((?x4701 (* ?x4700 l_0_7_86)))
 (let ((?x4559 (* l_0_7_75 l_0_7_75)))
 (let ((?x4556 (* l_0_7_74 l_0_7_74)))
 (let ((?x4553 (* l_0_7_73 l_0_7_73)))
 (let ((?x4550 (* l_0_7_72 l_0_7_72)))
 (let ((?x4547 (* l_0_7_71 l_0_7_71)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4604 (* ?x4603 l_0_7_56)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4601 (* ?x4600 l_0_7_41)))
 (let ((?x4544 (* l_0_7_30 l_0_7_30)))
 (let ((?x4541 (* l_0_7_29 l_0_7_29)))
 (let ((?x4538 (* l_0_7_28 l_0_7_28)))
 (let ((?x4535 (* l_0_7_27 l_0_7_27)))
 (let ((?x4532 (* l_0_7_26 l_0_7_26)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x4328 (* ?x4327 l_0_7_28)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x4325 (* ?x4324 l_0_7_27)))
 (let ((?x4321 (* 2.0 l_0_7_19)))
 (let ((?x4322 (* ?x4321 l_0_7_26)))
 (let ((?x5223 (- (* (* (- 2.0) l_0_7_11) l_0_7_4) (* (* 2.0 l_0_7_12) l_0_7_5))))
 (let ((?x5239 (+ (+ (+ (- ?x5223 (* (* 2.0 l_0_7_13) l_0_7_6)) ?x4322) ?x4325) ?x4328)))
 (let ((?x5246 (- (+ (- (- (- (- (- ?x5239 ?x4532) ?x4535) ?x4538) ?x4541) ?x4544) ?x4601) ?x4604)))
 (let ((?x5253 (- (- (- (- (- (- (- ?x5246 ?x4547) ?x4550) ?x4553) ?x4556) ?x4559) ?x4701) ?x4704)))
 (= (+ (+ (+ (+ (+ (- ?x5253 ?x4707) ?x5255) ?x5257) ?x5259) ?x5261) ?x5263) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x5350 (* l_0_7_9 l_0_7_9)))
 (let ((?x5348 (* l_0_7_85 l_0_7_85)))
 (let ((?x5346 (* l_0_7_84 l_0_7_84)))
 (let ((?x5344 (* l_0_7_83 l_0_7_83)))
 (let ((?x5342 (* l_0_7_82 l_0_7_82)))
 (let ((?x5340 (* l_0_7_8 l_0_7_8)))
 (let ((?x5338 (* l_0_7_7 l_0_7_7)))
 (let ((?x5336 (* l_0_7_25 l_0_7_25)))
 (let ((?x5334 (* l_0_7_24 l_0_7_24)))
 (let ((?x5332 (* l_0_7_23 l_0_7_23)))
 (let ((?x5335 (+ (+ (+ (* (- l_0_7_10) l_0_7_10) (* l_0_7_22 l_0_7_22)) ?x5332) ?x5334)))
 (let ((?x5349 (- (- (- (- (- (- (+ ?x5335 ?x5336) ?x5338) ?x5340) ?x5342) ?x5344) ?x5346) ?x5348)))
 (= (- ?x5349 ?x5350) 0.0))))))))))))))
(assert
 (let ((?x4827 (* (* 2.0 l_0_7_85) l_0_7_89)))
 (let ((?x4824 (* (* 2.0 l_0_7_84) l_0_7_88)))
 (let ((?x4821 (* (* 2.0 l_0_7_83) l_0_7_87)))
 (let ((?x4818 (* (* 2.0 l_0_7_82) l_0_7_86)))
 (let ((?x4439 (* 2.0 l_0_7_25)))
 (let ((?x4440 (* ?x4439 l_0_7_29)))
 (let ((?x4436 (* 2.0 l_0_7_24)))
 (let ((?x4437 (* ?x4436 l_0_7_28)))
 (let ((?x4433 (* 2.0 l_0_7_23)))
 (let ((?x4434 (* ?x4433 l_0_7_27)))
 (let ((?x4431 (* (* 2.0 l_0_7_22) l_0_7_26)))
 (let ((?x5383 (- (* (* (- 2.0) l_0_7_10) l_0_7_14) (* (* 2.0 l_0_7_11) l_0_7_7))))
 (let ((?x5387 (- (- ?x5383 (* (* 2.0 l_0_7_12) l_0_7_8)) (* (* 2.0 l_0_7_13) l_0_7_9))))
 (let ((?x5394 (- (- (- (+ (+ (+ (+ ?x5387 ?x4431) ?x4434) ?x4437) ?x4440) ?x4818) ?x4821) ?x4824)))
 (= (- ?x5394 ?x4827) 0.0))))))))))))))))
(assert
 (let ((?x4923 (* l_0_7_90 l_0_7_90)))
 (let ((?x4921 (* l_0_7_89 l_0_7_89)))
 (let ((?x4919 (* l_0_7_88 l_0_7_88)))
 (let ((?x4917 (* l_0_7_87 l_0_7_87)))
 (let ((?x4915 (* l_0_7_86 l_0_7_86)))
 (let ((?x4544 (* l_0_7_30 l_0_7_30)))
 (let ((?x4541 (* l_0_7_29 l_0_7_29)))
 (let ((?x4538 (* l_0_7_28 l_0_7_28)))
 (let ((?x4535 (* l_0_7_27 l_0_7_27)))
 (let ((?x4532 (* l_0_7_26 l_0_7_26)))
 (let ((?x5443 (* l_0_7_15 l_0_7_15)))
 (let ((?x5441 (* l_0_7_14 l_0_7_14)))
 (let ((?x5439 (* l_0_7_13 l_0_7_13)))
 (let ((?x5442 (- (- (- (* (- l_0_7_11) l_0_7_11) (* l_0_7_12 l_0_7_12)) ?x5439) ?x5441)))
 (let ((?x5450 (- (+ (+ (+ (+ (+ (- ?x5442 ?x5443) ?x4532) ?x4535) ?x4538) ?x4541) ?x4544) ?x4915)))
 (= (- (- (- (- ?x5450 ?x4917) ?x4919) ?x4921) ?x4923) 0.0)))))))))))))))))
(assert
 (let ((?x5505 (* l_0_7_93 l_0_7_93)))
 (let ((?x5503 (* l_0_7_92 l_0_7_92)))
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4262 (* ?x4261 l_0_7_77)))
 (let ((?x4332 (* l_0_7_46 l_0_7_46)))
 (let ((?x4330 (* l_0_7_31 l_0_7_31)))
 (let ((?x5491 (+ (* (* (- 4.0) l_0_7_16) l_0_7_17) (* 1.0 (* l_0_7_17 l_0_7_17)))))
 (let ((?x5498 (+ (- (+ (+ ?x5491 (* 1.0 (* l_0_7_18 l_0_7_18))) ?x4330) ?x4332) (* 4.0 (* l_0_7_62 l_0_7_62)))))
 (let ((?x5506 (- (- (+ (+ ?x5498 (* 4.0 (* l_0_7_63 l_0_7_63))) ?x4262) ?x5503) ?x5505)))
 (= ?x5506 0.0)))))))))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4346 (* ?x4261 l_0_7_79)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4662 (* ?x4252 l_0_7_20)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4660 (* ?x4249 l_0_7_19)))
 (let ((?x5527 (- (* (* (- 2.0) l_0_7_16) l_0_7_17) (* (* 4.0 l_0_7_16) l_0_7_19))))
 (let ((?x5533 (+ (- (+ (+ ?x5527 ?x4660) ?x4662) (* (* 2.0 l_0_7_61) l_0_7_62)) (* (* 8.0 l_0_7_62) l_0_7_64))))
 (let ((?x5537 (+ (+ ?x5533 (* (* 8.0 l_0_7_63) l_0_7_65)) (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_77))))
 (let ((?x5544 (- (- (+ ?x5537 ?x4346) (* (* 2.0 l_0_7_92) l_0_7_94)) (* (* 2.0 l_0_7_93) l_0_7_95))))
 (= ?x5544 0.0))))))))))))
(assert
 (let ((?x4261 (* 2.0 l_0_7_76)))
 (let ((?x4454 (* ?x4261 l_0_7_82)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4783 (* ?x4252 l_0_7_23)))
 (let ((?x4249 (* 2.0 l_0_7_17)))
 (let ((?x4781 (* ?x4249 l_0_7_22)))
 (let ((?x5584 (+ (+ (+ (* (* (- 4.0) l_0_7_16) l_0_7_22) ?x4781) ?x4783) (* (* 8.0 l_0_7_62) l_0_7_67))))
 (let ((?x5589 (- (+ (+ ?x5584 (* (* 8.0 l_0_7_63) l_0_7_68)) ?x4454) (* (* 2.0 l_0_7_92) l_0_7_97))))
 (= (- ?x5589 (* (* 2.0 l_0_7_93) l_0_7_98)) 0.0))))))))))
(assert
 (let ((?x4614 (* l_0_7_78 l_0_7_78)))
 (let ((?x4609 (* l_0_7_77 l_0_7_77)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4682 (* ?x4603 l_0_7_47)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4680 (* ?x4600 l_0_7_32)))
 (let ((?x5619 (- (* (* (- 2.0) l_0_7_17) l_0_7_17) (* (* 2.0 l_0_7_18) l_0_7_18))))
 (= (+ (+ (- (+ ?x5619 ?x4680) ?x4682) ?x4609) ?x4614) 0.0)))))))))
(assert
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4695 (* ?x4611 l_0_7_80)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4690 (* ?x4606 l_0_7_79)))
 (let ((?x5499 (* l_0_7_63 l_0_7_63)))
 (let ((?x5496 (* l_0_7_62 l_0_7_62)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4982 (* ?x4603 l_0_7_49)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4978 (* ?x4600 l_0_7_34)))
 (let ((?x4594 (* l_0_7_18 l_0_7_18)))
 (let ((?x5640 (- (- (* (* (- 4.0) l_0_7_17) l_0_7_19) (* l_0_7_17 l_0_7_17)) (* (* 4.0 l_0_7_18) l_0_7_20))))
 (let ((?x5648 (+ (+ (- (- (- (+ (- ?x5640 ?x4594) ?x4978) ?x4982) ?x5496) ?x5499) ?x4690) (* (/ 1.0 4.0) (* l_0_7_77 l_0_7_77)))))
 (= (+ (+ ?x5648 ?x4695) (* (/ 1.0 4.0) (* l_0_7_78 l_0_7_78))) 0.0)))))))))))))))
(assert
 (let ((?x4611 (* 2.0 l_0_7_78)))
 (let ((?x4815 (* ?x4611 l_0_7_83)))
 (let ((?x4606 (* 2.0 l_0_7_77)))
 (let ((?x4813 (* ?x4606 l_0_7_82)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x5093 (* ?x4603 l_0_7_52)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x5087 (* ?x4600 l_0_7_37)))
 (let ((?x5679 (- (* (* (- 4.0) l_0_7_17) l_0_7_22) (* (* 4.0 l_0_7_18) l_0_7_23))))
 (= (+ (+ (- (+ ?x5679 ?x5087) ?x5093) ?x4813) ?x4815) 0.0)))))))))))
(assert
 (let ((?x5010 (* l_0_7_81 l_0_7_81)))
 (let ((?x5005 (* l_0_7_80 l_0_7_80)))
 (let ((?x5000 (* l_0_7_79 l_0_7_79)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4662 (* ?x4252 l_0_7_20)))
 (let ((?x5700 (- (- (* (* (- 2.0) l_0_7_17) l_0_7_19) ?x4662) (* (* 2.0 l_0_7_19) l_0_7_19))))
 (let ((?x5704 (- (- ?x5700 (* (* 2.0 l_0_7_20) l_0_7_20)) (* (* 2.0 l_0_7_21) l_0_7_21))))
 (let ((?x5708 (- (- ?x5704 (* (* 2.0 l_0_7_62) l_0_7_64)) (* (* 2.0 l_0_7_63) l_0_7_65))))
 (let ((?x5712 (+ (+ ?x5708 (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_79)) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_80))))
 (= (+ (+ (+ ?x5712 ?x5000) ?x5005) ?x5010) 0.0)))))))))))
(assert
 (let ((?x4706 (* 2.0 l_0_7_81)))
 (let ((?x5118 (* ?x4706 l_0_7_84)))
 (let ((?x4703 (* 2.0 l_0_7_80)))
 (let ((?x5116 (* ?x4703 l_0_7_83)))
 (let ((?x4700 (* 2.0 l_0_7_79)))
 (let ((?x5114 (* ?x4700 l_0_7_82)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4682 (* ?x4603 l_0_7_47)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4680 (* ?x4600 l_0_7_32)))
 (let ((?x4252 (* 2.0 l_0_7_18)))
 (let ((?x4783 (* ?x4252 l_0_7_23)))
 (let ((?x5752 (- (- (* (* (- 2.0) l_0_7_17) l_0_7_22) ?x4783) (* (* 4.0 l_0_7_19) l_0_7_22))))
 (let ((?x5756 (- (- ?x5752 (* (* 4.0 l_0_7_20) l_0_7_23)) (* (* 4.0 l_0_7_21) l_0_7_24))))
 (let ((?x5762 (- (- (+ (- ?x5756 ?x4680) ?x4682) (* (* 2.0 l_0_7_62) l_0_7_67)) (* (* 2.0 l_0_7_63) l_0_7_68))))
 (let ((?x5766 (+ (+ ?x5762 (* (* (/ 1.0 2.0) l_0_7_77) l_0_7_82)) (* (* (/ 1.0 2.0) l_0_7_78) l_0_7_83))))
 (= (+ (+ (+ ?x5766 ?x5114) ?x5116) ?x5118) 0.0))))))))))))))))))
(assert
 (let ((?x5348 (* l_0_7_85 l_0_7_85)))
 (let ((?x5346 (* l_0_7_84 l_0_7_84)))
 (let ((?x5344 (* l_0_7_83 l_0_7_83)))
 (let ((?x5342 (* l_0_7_82 l_0_7_82)))
 (let ((?x5810 (- (* (* (- 2.0) l_0_7_22) l_0_7_22) (* (* 2.0 l_0_7_23) l_0_7_23))))
 (let ((?x5814 (- (- ?x5810 (* (* 2.0 l_0_7_24) l_0_7_24)) (* (* 2.0 l_0_7_25) l_0_7_25))))
 (= (+ (+ (+ (+ ?x5814 ?x5342) ?x5344) ?x5346) ?x5348) 0.0))))))))
(assert
 (let ((?x5863 (* l_0_7_96 l_0_7_96)))
 (let ((?x5861 (* l_0_7_95 l_0_7_95)))
 (let ((?x5859 (* l_0_7_94 l_0_7_94)))
 (let ((?x5841 (+ (* (* (- 2.0) l_0_7_16) l_0_7_19) (* 1.0 (* l_0_7_19 l_0_7_19)))))
 (let ((?x5845 (+ (+ ?x5841 (* 1.0 (* l_0_7_20 l_0_7_20))) (* 1.0 (* l_0_7_21 l_0_7_21)))))
 (let ((?x5850 (+ (- ?x5845 (* (* 2.0 l_0_7_61) l_0_7_64)) (* 4.0 (* l_0_7_64 l_0_7_64)))))
 (let ((?x5856 (+ (+ ?x5850 (* 4.0 (* l_0_7_65 l_0_7_65))) (* 4.0 (* l_0_7_66 l_0_7_66)))))
 (let ((?x5864 (- (- (- (+ ?x5856 (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_79)) ?x5859) ?x5861) ?x5863)))
 (= ?x5864 0.0))))))))))
(assert
 (let ((?x4332 (* l_0_7_46 l_0_7_46)))
 (let ((?x4330 (* l_0_7_31 l_0_7_31)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x5081 (* ?x4327 l_0_7_24)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x5079 (* ?x4324 l_0_7_23)))
 (let ((?x4321 (* 2.0 l_0_7_19)))
 (let ((?x5078 (* ?x4321 l_0_7_22)))
 (let ((?x5893 (- (+ (+ (+ (* (* (- 2.0) l_0_7_16) l_0_7_22) ?x5078) ?x5079) ?x5081) ?x4330)))
 (let ((?x5898 (+ (- (+ ?x5893 ?x4332) (* (* 2.0 l_0_7_61) l_0_7_67)) (* (* 8.0 l_0_7_64) l_0_7_67))))
 (let ((?x5902 (+ (+ ?x5898 (* (* 8.0 l_0_7_65) l_0_7_68)) (* (* 8.0 l_0_7_66) l_0_7_69))))
 (let ((?x5907 (- (+ ?x5902 (* (* (/ 1.0 2.0) l_0_7_76) l_0_7_82)) (* (* 2.0 l_0_7_94) l_0_7_97))))
 (let ((?x5913 (- (- ?x5907 (* (* 2.0 l_0_7_95) l_0_7_98)) (* (* 2.0 l_0_7_96) l_0_7_99))))
 (= ?x5913 0.0)))))))))))))))
(assert
 (let ((?x5854 (* l_0_7_66 l_0_7_66)))
 (let ((?x5851 (* l_0_7_65 l_0_7_65)))
 (let ((?x5848 (* l_0_7_64 l_0_7_64)))
 (let ((?x4976 (* l_0_7_21 l_0_7_21)))
 (let ((?x5961 (- (- (- (* (- l_0_7_19) l_0_7_19) (* l_0_7_20 l_0_7_20)) ?x4976) ?x5848)))
 (let ((?x5967 (+ (+ (- (- ?x5961 ?x5851) ?x5854) (* (/ 1.0 4.0) (* l_0_7_79 l_0_7_79))) (* (/ 1.0 4.0) (* l_0_7_80 l_0_7_80)))))
 (= (+ ?x5967 (* (/ 1.0 4.0) (* l_0_7_81 l_0_7_81))) 0.0))))))))
(assert
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x4982 (* ?x4603 l_0_7_49)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x4978 (* ?x4600 l_0_7_34)))
 (let ((?x4327 (* 2.0 l_0_7_21)))
 (let ((?x5081 (* ?x4327 l_0_7_24)))
 (let ((?x4324 (* 2.0 l_0_7_20)))
 (let ((?x5079 (* ?x4324 l_0_7_23)))
 (let ((?x5993 (+ (- (- (- (* (* (- 2.0) l_0_7_19) l_0_7_22) ?x5079) ?x5081) ?x4978) ?x4982)))
 (let ((?x5997 (- (- ?x5993 (* (* 2.0 l_0_7_64) l_0_7_67)) (* (* 2.0 l_0_7_65) l_0_7_68))))
 (let ((?x6001 (+ (- ?x5997 (* (* 2.0 l_0_7_66) l_0_7_69)) (* (* (/ 1.0 2.0) l_0_7_79) l_0_7_82))))
 (let ((?x6005 (+ (+ ?x6001 (* (* (/ 1.0 2.0) l_0_7_80) l_0_7_83)) (* (* (/ 1.0 2.0) l_0_7_81) l_0_7_84))))
 (= ?x6005 0.0))))))))))))))
(assert
 (let ((?x6050 (* l_0_7_70 l_0_7_70)))
 (let ((?x6048 (* l_0_7_69 l_0_7_69)))
 (let ((?x6046 (* l_0_7_68 l_0_7_68)))
 (let ((?x6044 (* l_0_7_67 l_0_7_67)))
 (let ((?x4603 (* 2.0 l_0_7_46)))
 (let ((?x5093 (* ?x4603 l_0_7_52)))
 (let ((?x4600 (* 2.0 l_0_7_31)))
 (let ((?x5087 (* ?x4600 l_0_7_37)))
 (let ((?x5336 (* l_0_7_25 l_0_7_25)))
 (let ((?x5334 (* l_0_7_24 l_0_7_24)))
 (let ((?x6041 (- (- (- (* (- l_0_7_22) l_0_7_22) (* l_0_7_23 l_0_7_23)) ?x5334) ?x5336)))
 (let ((?x6053 (+ (- (- (- (- (+ (- ?x6041 ?x5087) ?x5093) ?x6044) ?x6046) ?x6048) ?x6050) (* (/ 1.0 4.0) (* l_0_7_82 l_0_7_82)))))
 (let ((?x6057 (+ (+ ?x6053 (* (/ 1.0 4.0) (* l_0_7_83 l_0_7_83))) (* (/ 1.0 4.0) (* l_0_7_84 l_0_7_84)))))
 (= (+ ?x6057 (* (/ 1.0 4.0) (* l_0_7_85 l_0_7_85))) 0.0)))))))))))))))
(assert
 (let ((?x4124 (* 2.0 l_0_7_16)))
 (let ((?x4428 (* ?x4124 l_0_7_22)))
 (let ((?x6096 (- (+ ?x4428 (* (* 8.0 l_0_7_61) l_0_7_67)) (* (* 2.0 l_0_7_91) l_0_7_97))))
 (= ?x6096 0.0)))))
(assert
 (let ((?x6129 (* l_0_7_99 l_0_7_99)))
 (let ((?x6127 (* l_0_7_98 l_0_7_98)))
 (let ((?x6125 (* l_0_7_97 l_0_7_97)))
 (let ((?x6050 (* l_0_7_70 l_0_7_70)))
 (let ((?x6123 (* 4.0 ?x6050)))
 (let ((?x6048 (* l_0_7_69 l_0_7_69)))
 (let ((?x6121 (* 4.0 ?x6048)))
 (let ((?x6046 (* l_0_7_68 l_0_7_68)))
 (let ((?x6119 (* 4.0 ?x6046)))
 (let ((?x6044 (* l_0_7_67 l_0_7_67)))
 (let ((?x6117 (* 4.0 ?x6044)))
 (let ((?x6110 (+ (* (- l_0_7_100) l_0_7_100) (* 1.0 (* l_0_7_22 l_0_7_22)))))
 (let ((?x6114 (+ (+ ?x6110 (* 1.0 (* l_0_7_23 l_0_7_23))) (* 1.0 (* l_0_7_24 l_0_7_24)))))
 (let ((?x6122 (+ (+ (+ (+ ?x6114 (* 1.0 (* l_0_7_25 l_0_7_25))) ?x6117) ?x6119) ?x6121)))
 (= (- (- (- (+ ?x6122 ?x6123) ?x6125) ?x6127) ?x6129) 0.0))))))))))))))))
(assert
 (let ((?x6169 (* 2.0 l_0_7_51)))
 (let ((?x6170 (* ?x6169 l_0_7_54)))
 (let ((?x6166 (* 2.0 l_0_7_50)))
 (let ((?x6167 (* ?x6166 l_0_7_53)))
 (let ((?x6163 (* 2.0 l_0_7_49)))
 (let ((?x6164 (* ?x6163 l_0_7_52)))
 (let ((?x6161 (* l_0_7_48 l_0_7_48)))
 (let ((?x6159 (* l_0_7_47 l_0_7_47)))
 (let ((?x6156 (* 2.0 l_0_7_36)))
 (let ((?x6157 (* ?x6156 l_0_7_39)))
 (let ((?x6153 (* 2.0 l_0_7_35)))
 (let ((?x6154 (* ?x6153 l_0_7_38)))
 (let ((?x6150 (* 2.0 l_0_7_34)))
 (let ((?x6151 (* ?x6150 l_0_7_37)))
 (let ((?x6155 (+ (+ (- (* (- l_0_7_32) l_0_7_32) (* l_0_7_33 l_0_7_33)) ?x6151) ?x6154)))
 (= (- (- (- (+ (+ (+ ?x6155 ?x6157) ?x6159) ?x6161) ?x6164) ?x6167) ?x6170) 0.0)))))))))))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6220 (* ?x6219 l_0_7_50)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6217 (* ?x6216 l_0_7_49)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6214 (* ?x6213 l_0_7_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_32) l_0_7_34) ?x6214) ?x6217) ?x6220) 0.0))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6243 (* ?x6219 l_0_7_53)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6241 (* ?x6216 l_0_7_52)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6234 (* ?x6213 l_0_7_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_7_32) l_0_7_37) ?x6234) ?x6241) ?x6243) 0.0))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6272 (* ?x6219 l_0_7_57)))
 (let ((?x6243 (* ?x6219 l_0_7_53)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6269 (* ?x6216 l_0_7_56)))
 (let ((?x6241 (* ?x6216 l_0_7_52)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6266 (* ?x6213 l_0_7_42)))
 (let ((?x6234 (* ?x6213 l_0_7_38)))
 (let ((?x6255 (* 2.0 l_0_7_32)))
 (let ((?x6258 (* ?x6255 l_0_7_41)))
 (let ((?x6257 (* ?x6255 l_0_7_37)))
 (let ((?x6273 (+ (- (+ (- (- (+ (- ?x6257 ?x6258) ?x6234) ?x6266) ?x6241) ?x6269) ?x6243) ?x6272)))
 (= ?x6273 0.0)))))))))))))))
(assert
 (let ((?x6313 (* l_0_7_51 l_0_7_51)))
 (let ((?x6311 (* l_0_7_50 l_0_7_50)))
 (let ((?x6309 (* l_0_7_49 l_0_7_49)))
 (let ((?x6307 (* l_0_7_36 l_0_7_36)))
 (let ((?x6310 (+ (- (- (* (- l_0_7_34) l_0_7_34) (* l_0_7_35 l_0_7_35)) ?x6307) ?x6309)))
 (= (+ (+ ?x6310 ?x6311) ?x6313) 0.0)))))))
(assert
 (let ((?x6169 (* 2.0 l_0_7_51)))
 (let ((?x6170 (* ?x6169 l_0_7_54)))
 (let ((?x6166 (* 2.0 l_0_7_50)))
 (let ((?x6167 (* ?x6166 l_0_7_53)))
 (let ((?x6163 (* 2.0 l_0_7_49)))
 (let ((?x6164 (* ?x6163 l_0_7_52)))
 (let ((?x6156 (* 2.0 l_0_7_36)))
 (let ((?x6157 (* ?x6156 l_0_7_39)))
 (let ((?x6153 (* 2.0 l_0_7_35)))
 (let ((?x6154 (* ?x6153 l_0_7_38)))
 (let ((?x6335 (+ (+ (- (- (* (* (- 2.0) l_0_7_34) l_0_7_37) ?x6154) ?x6157) ?x6164) ?x6167)))
 (= (+ ?x6335 ?x6170) 0.0)))))))))))))
(assert
 (let ((?x6169 (* 2.0 l_0_7_51)))
 (let ((?x6361 (* ?x6169 l_0_7_58)))
 (let ((?x6170 (* ?x6169 l_0_7_54)))
 (let ((?x6166 (* 2.0 l_0_7_50)))
 (let ((?x6358 (* ?x6166 l_0_7_57)))
 (let ((?x6167 (* ?x6166 l_0_7_53)))
 (let ((?x6163 (* 2.0 l_0_7_49)))
 (let ((?x6355 (* ?x6163 l_0_7_56)))
 (let ((?x6164 (* ?x6163 l_0_7_52)))
 (let ((?x6156 (* 2.0 l_0_7_36)))
 (let ((?x6352 (* ?x6156 l_0_7_43)))
 (let ((?x6157 (* ?x6156 l_0_7_39)))
 (let ((?x6153 (* 2.0 l_0_7_35)))
 (let ((?x6349 (* ?x6153 l_0_7_42)))
 (let ((?x6154 (* ?x6153 l_0_7_38)))
 (let ((?x6150 (* 2.0 l_0_7_34)))
 (let ((?x6344 (* ?x6150 l_0_7_41)))
 (let ((?x6151 (* ?x6150 l_0_7_37)))
 (let ((?x6356 (+ (- (- (+ (- (+ (- ?x6151 ?x6344) ?x6154) ?x6349) ?x6157) ?x6352) ?x6164) ?x6355)))
 (= (+ (- (+ (- ?x6356 ?x6167) ?x6358) ?x6170) ?x6361) 0.0)))))))))))))))))))))
(assert
 (let ((?x6414 (* l_0_7_55 l_0_7_55)))
 (let ((?x6412 (* l_0_7_54 l_0_7_54)))
 (let ((?x6410 (* l_0_7_53 l_0_7_53)))
 (let ((?x6408 (* l_0_7_52 l_0_7_52)))
 (let ((?x6406 (* l_0_7_40 l_0_7_40)))
 (let ((?x6404 (* l_0_7_39 l_0_7_39)))
 (let ((?x6407 (- (- (- (* (- l_0_7_37) l_0_7_37) (* l_0_7_38 l_0_7_38)) ?x6404) ?x6406)))
 (= (+ (+ (+ (+ ?x6407 ?x6408) ?x6410) ?x6412) ?x6414) 0.0)))))))))
(assert
 (let ((?x6414 (* l_0_7_55 l_0_7_55)))
 (let ((?x6463 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6412 (* l_0_7_54 l_0_7_54)))
 (let ((?x6459 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6410 (* l_0_7_53 l_0_7_53)))
 (let ((?x6455 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6408 (* l_0_7_52 l_0_7_52)))
 (let ((?x6451 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6406 (* l_0_7_40 l_0_7_40)))
 (let ((?x6447 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6404 (* l_0_7_39 l_0_7_39)))
 (let ((?x6443 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6402 (* l_0_7_38 l_0_7_38)))
 (let ((?x6439 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6440 (- (+ (* (* (- 2.0) l_0_7_37) l_0_7_41) (* l_0_7_37 l_0_7_37)) ?x6439)))
 (let ((?x6453 (- (+ (+ (- (+ (- (+ ?x6440 ?x6402) ?x6443) ?x6404) ?x6447) ?x6406) ?x6451) ?x6408)))
 (= (- (+ (- (+ (- (+ ?x6453 ?x6455) ?x6410) ?x6459) ?x6412) ?x6463) ?x6414) 0.0))))))))))))))))))
(assert
 (let ((?x6538 (* l_0_7_60 l_0_7_60)))
 (let ((?x6536 (* l_0_7_59 l_0_7_59)))
 (let ((?x6534 (* l_0_7_58 l_0_7_58)))
 (let ((?x6532 (* l_0_7_57 l_0_7_57)))
 (let ((?x6530 (* l_0_7_56 l_0_7_56)))
 (let ((?x6463 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6459 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6455 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6451 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6524 (* l_0_7_45 l_0_7_45)))
 (let ((?x6522 (* l_0_7_44 l_0_7_44)))
 (let ((?x6520 (* l_0_7_43 l_0_7_43)))
 (let ((?x6518 (* l_0_7_42 l_0_7_42)))
 (let ((?x6516 (* l_0_7_41 l_0_7_41)))
 (let ((?x6447 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6443 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6439 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6515 (+ (+ (+ (* (* 2.0 l_0_7_37) l_0_7_41) ?x6439) ?x6443) ?x6447)))
 (let ((?x6527 (- (- (- (- (- (- (- ?x6515 ?x6516) ?x6518) ?x6520) ?x6522) ?x6524) ?x6451) ?x6455)))
 (let ((?x6539 (+ (+ (+ (+ (+ (- (- ?x6527 ?x6459) ?x6463) ?x6530) ?x6532) ?x6534) ?x6536) ?x6538)))
 (= ?x6539 0.0))))))))))))))))))))))
(assert
 (let ((?x6161 (* l_0_7_48 l_0_7_48)))
 (let ((?x6159 (* l_0_7_47 l_0_7_47)))
 (let ((?x6148 (* l_0_7_33 l_0_7_33)))
 (let ((?x6174 (* l_0_7_32 l_0_7_32)))
 (let ((?x6576 (+ ?x6174 ?x6148)))
 (= (- (- ?x6576 ?x6159) ?x6161) 0.0)))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6220 (* ?x6219 l_0_7_50)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6217 (* ?x6216 l_0_7_49)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6214 (* ?x6213 l_0_7_35)))
 (= (- (- (+ (* (* 2.0 l_0_7_32) l_0_7_34) ?x6214) ?x6217) ?x6220) 0.0))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6243 (* ?x6219 l_0_7_53)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6241 (* ?x6216 l_0_7_52)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6234 (* ?x6213 l_0_7_38)))
 (let ((?x6255 (* 2.0 l_0_7_32)))
 (let ((?x6257 (* ?x6255 l_0_7_37)))
 (= (- (- (+ ?x6257 ?x6234) ?x6241) ?x6243) 0.0))))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6272 (* ?x6219 l_0_7_57)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6269 (* ?x6216 l_0_7_56)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6266 (* ?x6213 l_0_7_42)))
 (let ((?x6255 (* 2.0 l_0_7_32)))
 (let ((?x6258 (* ?x6255 l_0_7_41)))
 (= (- (- (+ ?x6258 ?x6266) ?x6269) ?x6272) 0.0))))))))))
(assert
 (let ((?x6313 (* l_0_7_51 l_0_7_51)))
 (let ((?x6311 (* l_0_7_50 l_0_7_50)))
 (let ((?x6309 (* l_0_7_49 l_0_7_49)))
 (let ((?x6307 (* l_0_7_36 l_0_7_36)))
 (let ((?x6623 (- (+ (+ (* l_0_7_34 l_0_7_34) (* l_0_7_35 l_0_7_35)) ?x6307) ?x6309)))
 (= (- (- ?x6623 ?x6311) ?x6313) 0.0)))))))
(assert
 (let ((?x6169 (* 2.0 l_0_7_51)))
 (let ((?x6361 (* ?x6169 l_0_7_58)))
 (let ((?x6166 (* 2.0 l_0_7_50)))
 (let ((?x6358 (* ?x6166 l_0_7_57)))
 (let ((?x6163 (* 2.0 l_0_7_49)))
 (let ((?x6355 (* ?x6163 l_0_7_56)))
 (let ((?x6161 (* l_0_7_48 l_0_7_48)))
 (let ((?x6159 (* l_0_7_47 l_0_7_47)))
 (let ((?x6156 (* 2.0 l_0_7_36)))
 (let ((?x6352 (* ?x6156 l_0_7_43)))
 (let ((?x6153 (* 2.0 l_0_7_35)))
 (let ((?x6349 (* ?x6153 l_0_7_42)))
 (let ((?x6150 (* 2.0 l_0_7_34)))
 (let ((?x6344 (* ?x6150 l_0_7_41)))
 (let ((?x6148 (* l_0_7_33 l_0_7_33)))
 (let ((?x6174 (* l_0_7_32 l_0_7_32)))
 (let ((?x6576 (+ ?x6174 ?x6148)))
 (let ((?x6639 (- (- (- (- (+ (+ (+ ?x6576 ?x6344) ?x6349) ?x6352) ?x6159) ?x6161) ?x6355) ?x6358)))
 (= (- ?x6639 ?x6361) 0.0))))))))))))))))))))
(assert
 (let ((?x6414 (* l_0_7_55 l_0_7_55)))
 (let ((?x6412 (* l_0_7_54 l_0_7_54)))
 (let ((?x6410 (* l_0_7_53 l_0_7_53)))
 (let ((?x6408 (* l_0_7_52 l_0_7_52)))
 (let ((?x6406 (* l_0_7_40 l_0_7_40)))
 (let ((?x6404 (* l_0_7_39 l_0_7_39)))
 (let ((?x6662 (+ (+ (+ (* l_0_7_37 l_0_7_37) (* l_0_7_38 l_0_7_38)) ?x6404) ?x6406)))
 (= (- (- (- (- ?x6662 ?x6408) ?x6410) ?x6412) ?x6414) 0.0)))))))))
(assert
 (let ((?x6463 (* (* 2.0 l_0_7_55) l_0_7_59)))
 (let ((?x6459 (* (* 2.0 l_0_7_54) l_0_7_58)))
 (let ((?x6455 (* (* 2.0 l_0_7_53) l_0_7_57)))
 (let ((?x6451 (* (* 2.0 l_0_7_52) l_0_7_56)))
 (let ((?x6447 (* (* 2.0 l_0_7_40) l_0_7_44)))
 (let ((?x6443 (* (* 2.0 l_0_7_39) l_0_7_43)))
 (let ((?x6439 (* (* 2.0 l_0_7_38) l_0_7_42)))
 (let ((?x6515 (+ (+ (+ (* (* 2.0 l_0_7_37) l_0_7_41) ?x6439) ?x6443) ?x6447)))
 (= (- (- (- (- ?x6515 ?x6451) ?x6455) ?x6459) ?x6463) 0.0))))))))))
(assert
 (let ((?x6538 (* l_0_7_60 l_0_7_60)))
 (let ((?x6536 (* l_0_7_59 l_0_7_59)))
 (let ((?x6534 (* l_0_7_58 l_0_7_58)))
 (let ((?x6532 (* l_0_7_57 l_0_7_57)))
 (let ((?x6530 (* l_0_7_56 l_0_7_56)))
 (let ((?x6524 (* l_0_7_45 l_0_7_45)))
 (let ((?x6522 (* l_0_7_44 l_0_7_44)))
 (let ((?x6520 (* l_0_7_43 l_0_7_43)))
 (let ((?x6692 (+ (+ (+ (* l_0_7_41 l_0_7_41) (* l_0_7_42 l_0_7_42)) ?x6520) ?x6522)))
 (= (- (- (- (- (- (+ ?x6692 ?x6524) ?x6530) ?x6532) ?x6534) ?x6536) ?x6538) 0.0)))))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6220 (* ?x6219 l_0_7_50)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6217 (* ?x6216 l_0_7_49)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6214 (* ?x6213 l_0_7_35)))
 (= (- (- (+ (* (* 2.0 l_0_7_32) l_0_7_34) ?x6214) ?x6217) ?x6220) 0.0))))))))
(assert
 (let ((?x6219 (* 2.0 l_0_7_48)))
 (let ((?x6272 (* ?x6219 l_0_7_57)))
 (let ((?x6216 (* 2.0 l_0_7_47)))
 (let ((?x6269 (* ?x6216 l_0_7_56)))
 (let ((?x6213 (* 2.0 l_0_7_33)))
 (let ((?x6266 (* ?x6213 l_0_7_42)))
 (let ((?x6255 (* 2.0 l_0_7_32)))
 (let ((?x6258 (* ?x6255 l_0_7_41)))
 (= (- (- (+ ?x6258 ?x6266) ?x6269) ?x6272) 0.0))))))))))
(assert
 (let ((?x6313 (* l_0_7_51 l_0_7_51)))
 (let ((?x6311 (* l_0_7_50 l_0_7_50)))
 (let ((?x6309 (* l_0_7_49 l_0_7_49)))
 (let ((?x6307 (* l_0_7_36 l_0_7_36)))
 (let ((?x6623 (- (+ (+ (* l_0_7_34 l_0_7_34) (* l_0_7_35 l_0_7_35)) ?x6307) ?x6309)))
 (= (- (- ?x6623 ?x6311) ?x6313) 0.0)))))))
(assert
 (let ((?x6169 (* 2.0 l_0_7_51)))
 (let ((?x6361 (* ?x6169 l_0_7_58)))
 (let ((?x6166 (* 2.0 l_0_7_50)))
 (let ((?x6358 (* ?x6166 l_0_7_57)))
 (let ((?x6163 (* 2.0 l_0_7_49)))
 (let ((?x6355 (* ?x6163 l_0_7_56)))
 (let ((?x6156 (* 2.0 l_0_7_36)))
 (let ((?x6352 (* ?x6156 l_0_7_43)))
 (let ((?x6153 (* 2.0 l_0_7_35)))
 (let ((?x6349 (* ?x6153 l_0_7_42)))
 (let ((?x6150 (* 2.0 l_0_7_34)))
 (let ((?x6344 (* ?x6150 l_0_7_41)))
 (= (- (- (- (+ (+ ?x6344 ?x6349) ?x6352) ?x6355) ?x6358) ?x6361) 0.0))))))))))))))
(assert
 (let ((?x6538 (* l_0_7_60 l_0_7_60)))
 (let ((?x6536 (* l_0_7_59 l_0_7_59)))
 (let ((?x6534 (* l_0_7_58 l_0_7_58)))
 (let ((?x6532 (* l_0_7_57 l_0_7_57)))
 (let ((?x6530 (* l_0_7_56 l_0_7_56)))
 (let ((?x6524 (* l_0_7_45 l_0_7_45)))
 (let ((?x6522 (* l_0_7_44 l_0_7_44)))
 (let ((?x6520 (* l_0_7_43 l_0_7_43)))
 (let ((?x6692 (+ (+ (+ (* l_0_7_41 l_0_7_41) (* l_0_7_42 l_0_7_42)) ?x6520) ?x6522)))
 (= (- (- (- (- (- (+ ?x6692 ?x6524) ?x6530) ?x6532) ?x6534) ?x6536) ?x6538) 0.0)))))))))))
(assert
 (>= l_0_7_1 0.0))
(assert
 (>= l_0_7_3 0.0))
(assert
 (>= l_0_7_6 0.0))
(assert
 (>= l_0_7_10 0.0))
(assert
 (>= l_0_7_15 0.0))
(assert
 (>= l_0_7_16 0.0))
(assert
 (>= l_0_7_18 0.0))
(assert
 (>= l_0_7_21 0.0))
(assert
 (>= l_0_7_25 0.0))
(assert
 (>= l_0_7_30 0.0))
(assert
 (>= l_0_7_31 0.0))
(assert
 (>= l_0_7_33 0.0))
(assert
 (>= l_0_7_36 0.0))
(assert
 (>= l_0_7_40 0.0))
(assert
 (>= l_0_7_45 0.0))
(assert
 (>= l_0_7_46 0.0))
(assert
 (>= l_0_7_48 0.0))
(assert
 (>= l_0_7_51 0.0))
(assert
 (>= l_0_7_55 0.0))
(assert
 (>= l_0_7_60 0.0))
(assert
 (>= l_0_7_61 0.0))
(assert
 (>= l_0_7_63 0.0))
(assert
 (>= l_0_7_66 0.0))
(assert
 (>= l_0_7_70 0.0))
(assert
 (>= l_0_7_75 0.0))
(assert
 (>= l_0_7_76 0.0))
(assert
 (>= l_0_7_78 0.0))
(assert
 (>= l_0_7_81 0.0))
(assert
 (>= l_0_7_85 0.0))
(assert
 (>= l_0_7_90 0.0))
(assert
 (>= l_0_7_91 0.0))
(assert
 (>= l_0_7_93 0.0))
(assert
 (>= l_0_7_96 0.0))
(assert
 (>= l_0_7_100 0.0))
(assert
 (>= l_0_7_105 0.0))
(assert
 (let ((?x6776 (* l_0_8_76 l_0_8_76)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6769 (* ?x6768 l_0_8_17)))
 (let ((?x6772 (- (+ (* (* (- 2.0) l_0_8_106) l_0_8_107) ?x6769) (* ?x6768 l_0_8_16))))
 (let ((?x6780 (- (+ (+ ?x6772 (* (* 8.0 l_0_8_61) l_0_8_62)) ?x6776) (* (* 2.0 l_0_8_91) l_0_8_92))))
 (= (+ ?x6780 2.0) 0.0)))))))
(assert
 (let ((?x6776 (* l_0_8_76 l_0_8_76)))
 (let ((?x6812 (* (/ 1.0 4.0) ?x6776)))
 (let ((?x6810 (* l_0_8_61 l_0_8_61)))
 (let ((?x6788 (* l_0_8_16 l_0_8_16)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6805 (* ?x6768 l_0_8_19)))
 (let ((?x6809 (+ (- (+ (* (* (- 2.0) l_0_8_106) l_0_8_109) ?x6805) ?x6788) (* (* 8.0 l_0_8_61) l_0_8_64))))
 (let ((?x6816 (+ (- (+ (- ?x6809 ?x6810) ?x6812) (* (* 2.0 l_0_8_91) l_0_8_94)) 1.0)))
 (= ?x6816 0.0))))))))))
(assert
 (let ((?x6846 (* l_0_8_91 l_0_8_91)))
 (let ((?x6810 (* l_0_8_61 l_0_8_61)))
 (let ((?x6844 (* 4.0 ?x6810)))
 (let ((?x6843 (+ (* (- l_0_8_106) l_0_8_106) (* 1.0 (* l_0_8_16 l_0_8_16)))))
 (= (- (- (+ ?x6843 ?x6844) ?x6846) 1.0) 0.0))))))
(assert
 (let ((?x6776 (* l_0_8_76 l_0_8_76)))
 (let ((?x6788 (* l_0_8_16 l_0_8_16)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6868 (* ?x6768 l_0_8_26)))
 (let ((?x6867 (- (- (* (- l_0_8_1) l_0_8_1) (* (* 2.0 l_0_8_101) l_0_8_91)) (* (* 2.0 l_0_8_106) l_0_8_116))))
 (let ((?x6873 (- (+ (+ (+ ?x6867 ?x6868) ?x6788) (* (* 8.0 l_0_8_61) l_0_8_71)) ?x6776)))
 (= (- ?x6873 1.0) 0.0))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x6937 (* ?x6934 l_0_8_86)))
 (let ((?x6935 (* ?x6934 l_0_8_77)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x6926 (* ?x6925 l_0_8_27)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x6923 (* ?x6922 l_0_8_26)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6769 (* ?x6768 l_0_8_17)))
 (let ((?x6908 (- (* (* (- 2.0) l_0_8_1) l_0_8_2) (* (* 2.0 l_0_8_101) l_0_8_92))))
 (let ((?x6914 (- (- ?x6908 (* (* 2.0 l_0_8_102) l_0_8_93)) (* (* 2.0 l_0_8_107) l_0_8_116))))
 (let ((?x6921 (- (+ (- ?x6914 (* (* 2.0 l_0_8_108) l_0_8_117)) ?x6769) (* (* 4.0 l_0_8_16) l_0_8_26))))
 (let ((?x6933 (+ (+ (+ (+ ?x6921 ?x6923) ?x6926) (* (* 8.0 l_0_8_62) l_0_8_71)) (* (* 8.0 l_0_8_63) l_0_8_72))))
 (= (+ (- ?x6933 ?x6935) ?x6937) 0.0)))))))))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x7035 (* ?x6934 l_0_8_79)))
 (let ((?x7021 (* l_0_8_46 l_0_8_46)))
 (let ((?x7019 (* l_0_8_31 l_0_8_31)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7017 (* ?x7016 l_0_8_28)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7014 (* ?x7013 l_0_8_27)))
 (let ((?x7010 (* 2.0 l_0_8_19)))
 (let ((?x7011 (* ?x7010 l_0_8_26)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6868 (* ?x6768 l_0_8_26)))
 (let ((?x6805 (* ?x6768 l_0_8_19)))
 (let ((?x6993 (- (* (* (- 2.0) l_0_8_1) l_0_8_4) (* (* 2.0 l_0_8_101) l_0_8_94))))
 (let ((?x6998 (- (- ?x6993 (* (* 2.0 l_0_8_102) l_0_8_95)) (* (* 2.0 l_0_8_103) l_0_8_96))))
 (let ((?x7004 (- (- ?x6998 (* (* 2.0 l_0_8_109) l_0_8_116)) (* (* 2.0 l_0_8_110) l_0_8_117))))
 (let ((?x7012 (+ (- (+ (- ?x7004 (* (* 2.0 l_0_8_111) l_0_8_118)) ?x6805) ?x6868) ?x7011)))
 (let ((?x7025 (- (- (+ (+ (+ ?x7012 ?x7014) ?x7017) ?x7019) ?x7021) (* (* 2.0 l_0_8_61) l_0_8_71))))
 (let ((?x7031 (+ (+ ?x7025 (* (* 8.0 l_0_8_64) l_0_8_71)) (* (* 8.0 l_0_8_65) l_0_8_72))))
 (let ((?x7039 (+ (- (+ ?x7031 (* (* 8.0 l_0_8_66) l_0_8_73)) ?x7035) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_86))))
 (= ?x7039 0.0))))))))))))))))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x7162 (* ?x6934 l_0_8_82)))
 (let ((?x7147 (* 2.0 l_0_8_25)))
 (let ((?x7148 (* ?x7147 l_0_8_29)))
 (let ((?x7144 (* 2.0 l_0_8_24)))
 (let ((?x7145 (* ?x7144 l_0_8_28)))
 (let ((?x7141 (* 2.0 l_0_8_23)))
 (let ((?x7142 (* ?x7141 l_0_8_27)))
 (let ((?x7139 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x7136 (* ?x6768 l_0_8_22)))
 (let ((?x7117 (- (* (* (- 2.0) l_0_8_1) l_0_8_7) (* (* 2.0 l_0_8_100) l_0_8_104))))
 (let ((?x7121 (- (- ?x7117 (* (* 2.0 l_0_8_101) l_0_8_97)) (* (* 2.0 l_0_8_102) l_0_8_98))))
 (let ((?x7126 (- (- ?x7121 (* (* 2.0 l_0_8_103) l_0_8_99)) (* (* 2.0 l_0_8_112) l_0_8_116))))
 (let ((?x7132 (- (- ?x7126 (* (* 2.0 l_0_8_113) l_0_8_117)) (* (* 2.0 l_0_8_114) l_0_8_118))))
 (let ((?x7143 (+ (+ (+ (- ?x7132 (* (* 2.0 l_0_8_115) l_0_8_119)) ?x7136) ?x7139) ?x7142)))
 (let ((?x7155 (+ (+ (+ (+ ?x7143 ?x7145) ?x7148) (* (* 8.0 l_0_8_67) l_0_8_71)) (* (* 8.0 l_0_8_68) l_0_8_72))))
 (let ((?x7161 (+ (+ ?x7155 (* (* 8.0 l_0_8_69) l_0_8_73)) (* (* 8.0 l_0_8_70) l_0_8_74))))
 (= (- ?x7161 ?x7162) 0.0))))))))))))))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x6937 (* ?x6934 l_0_8_86)))
 (let ((?x7301 (* l_0_8_75 l_0_8_75)))
 (let ((?x7302 (* 4.0 ?x7301)))
 (let ((?x7298 (* l_0_8_74 l_0_8_74)))
 (let ((?x7299 (* 4.0 ?x7298)))
 (let ((?x7295 (* l_0_8_73 l_0_8_73)))
 (let ((?x7296 (* 4.0 ?x7295)))
 (let ((?x7292 (* l_0_8_72 l_0_8_72)))
 (let ((?x7293 (* 4.0 ?x7292)))
 (let ((?x7289 (* l_0_8_71 l_0_8_71)))
 (let ((?x7290 (* 4.0 ?x7289)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6868 (* ?x6768 l_0_8_26)))
 (let ((?x7271 (* l_0_8_120 l_0_8_120)))
 (let ((?x7269 (* l_0_8_119 l_0_8_119)))
 (let ((?x7267 (* l_0_8_118 l_0_8_118)))
 (let ((?x7265 (* l_0_8_117 l_0_8_117)))
 (let ((?x7263 (* l_0_8_116 l_0_8_116)))
 (let ((?x7261 (* l_0_8_105 l_0_8_105)))
 (let ((?x7259 (* l_0_8_104 l_0_8_104)))
 (let ((?x7257 (* l_0_8_103 l_0_8_103)))
 (let ((?x7255 (* l_0_8_102 l_0_8_102)))
 (let ((?x7256 (- (- (* (* (- 2.0) l_0_8_1) l_0_8_11) (* l_0_8_101 l_0_8_101)) ?x7255)))
 (let ((?x7270 (- (- (- (- (- (- (- ?x7256 ?x7257) ?x7259) ?x7261) ?x7263) ?x7265) ?x7267) ?x7269)))
 (let ((?x7279 (+ (+ (+ (- ?x7270 ?x7271) ?x6868) (* 1.0 (* l_0_8_26 l_0_8_26))) (* 1.0 (* l_0_8_27 l_0_8_27)))))
 (let ((?x7285 (+ (+ ?x7279 (* 1.0 (* l_0_8_28 l_0_8_28))) (* 1.0 (* l_0_8_29 l_0_8_29)))))
 (let ((?x7297 (+ (+ (+ (+ ?x7285 (* 1.0 (* l_0_8_30 l_0_8_30))) ?x7290) ?x7293) ?x7296)))
 (= (- (+ (+ ?x7297 ?x7299) ?x7302) ?x6937) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x7371 (* l_0_8_78 l_0_8_78)))
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7369 (* ?x7368 l_0_8_87)))
 (let ((?x7366 (* l_0_8_77 l_0_8_77)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7364 (* ?x7363 l_0_8_86)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7361 (* ?x7360 l_0_8_56)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7358 (* ?x7357 l_0_8_41)))
 (let ((?x7355 (* l_0_8_3 l_0_8_3)))
 (let ((?x7353 (* l_0_8_2 l_0_8_2)))
 (let ((?x7351 (* l_0_8_18 l_0_8_18)))
 (let ((?x7350 (- (+ (* (* (- 4.0) l_0_8_17) l_0_8_26) (* l_0_8_17 l_0_8_17)) (* (* 4.0 l_0_8_18) l_0_8_27))))
 (let ((?x7367 (- (+ (- (+ (- (- (+ ?x7350 ?x7351) ?x7353) ?x7355) ?x7358) ?x7361) ?x7364) ?x7366)))
 (= (- (+ ?x7367 ?x7369) ?x7371) 0.0)))))))))))))))))
(assert
 (let ((?x7463 (* 2.0 l_0_8_81)))
 (let ((?x7464 (* ?x7463 l_0_8_88)))
 (let ((?x7460 (* 2.0 l_0_8_80)))
 (let ((?x7461 (* ?x7460 l_0_8_87)))
 (let ((?x7457 (* 2.0 l_0_8_79)))
 (let ((?x7458 (* ?x7457 l_0_8_86)))
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7452 (* ?x7368 l_0_8_80)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7447 (* ?x7363 l_0_8_79)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7439 (* ?x7360 l_0_8_47)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7437 (* ?x7357 l_0_8_32)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x6926 (* ?x6925 l_0_8_27)))
 (let ((?x7419 (* ?x6925 l_0_8_20)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x6923 (* ?x6922 l_0_8_26)))
 (let ((?x7417 (* ?x6922 l_0_8_19)))
 (let ((?x7424 (- (- (+ (- ?x7417 ?x6923) ?x7419) ?x6926) (* (* 4.0 l_0_8_19) l_0_8_26))))
 (let ((?x7430 (- (- ?x7424 (* (* 2.0 l_0_8_2) l_0_8_4)) (* (* 4.0 l_0_8_20) l_0_8_27))))
 (let ((?x7436 (- (- ?x7430 (* (* 4.0 l_0_8_21) l_0_8_28)) (* (* 2.0 l_0_8_3) l_0_8_5))))
 (let ((?x7446 (- (- (- (+ ?x7436 ?x7437) ?x7439) (* (* 2.0 l_0_8_62) l_0_8_71)) (* (* 2.0 l_0_8_63) l_0_8_72))))
 (let ((?x7456 (+ (- (+ (- ?x7446 ?x7447) (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_86)) ?x7452) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_87))))
 (= (+ (+ (+ ?x7456 ?x7458) ?x7461) ?x7464) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x7586 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x7583 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x7580 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x7577 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7574 (* ?x7368 l_0_8_83)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7572 (* ?x7363 l_0_8_82)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x7542 (* ?x6925 l_0_8_23)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x7540 (* ?x6922 l_0_8_22)))
 (let ((?x7560 (- (- (+ ?x7540 ?x7542) (* (* 2.0 l_0_8_2) l_0_8_7)) (* (* 4.0 l_0_8_22) l_0_8_26))))
 (let ((?x7566 (- (- ?x7560 (* (* 4.0 l_0_8_23) l_0_8_27)) (* (* 4.0 l_0_8_24) l_0_8_28))))
 (let ((?x7571 (- (- ?x7566 (* (* 4.0 l_0_8_25) l_0_8_29)) (* (* 2.0 l_0_8_3) l_0_8_8))))
 (= (+ (+ (+ (+ (- (- ?x7571 ?x7572) ?x7574) ?x7577) ?x7580) ?x7583) ?x7586) 0.0)))))))))))))))))
(assert
 (let ((?x7682 (* l_0_8_90 l_0_8_90)))
 (let ((?x7680 (* l_0_8_89 l_0_8_89)))
 (let ((?x7678 (* l_0_8_88 l_0_8_88)))
 (let ((?x7676 (* l_0_8_87 l_0_8_87)))
 (let ((?x7674 (* l_0_8_86 l_0_8_86)))
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7369 (* ?x7368 l_0_8_87)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7364 (* ?x7363 l_0_8_86)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x6926 (* ?x6925 l_0_8_27)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x6923 (* ?x6922 l_0_8_26)))
 (let ((?x7646 (- (* (* (- 2.0) l_0_8_11) l_0_8_2) (* (* 2.0 l_0_8_12) l_0_8_3))))
 (let ((?x7662 (- (- (+ (+ ?x7646 ?x6923) ?x6926) (* (* 2.0 l_0_8_26) l_0_8_26)) (* (* 2.0 l_0_8_27) l_0_8_27))))
 (let ((?x7668 (- (- ?x7662 (* (* 2.0 l_0_8_28) l_0_8_28)) (* (* 2.0 l_0_8_29) l_0_8_29))))
 (let ((?x7675 (+ (- (- (- ?x7668 (* (* 2.0 l_0_8_30) l_0_8_30)) ?x7364) ?x7369) ?x7674)))
 (= (+ (+ (+ (+ ?x7675 ?x7676) ?x7678) ?x7680) ?x7682) 0.0)))))))))))))))))))
(assert
 (let ((?x7769 (* l_0_8_81 l_0_8_81)))
 (let ((?x7764 (* l_0_8_80 l_0_8_80)))
 (let ((?x7759 (* l_0_8_79 l_0_8_79)))
 (let ((?x7745 (* l_0_8_6 l_0_8_6)))
 (let ((?x7743 (* l_0_8_5 l_0_8_5)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7741 (* ?x7360 l_0_8_49)))
 (let ((?x7739 (* l_0_8_4 l_0_8_4)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7737 (* ?x7357 l_0_8_34)))
 (let ((?x7735 (* l_0_8_21 l_0_8_21)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7017 (* ?x7016 l_0_8_28)))
 (let ((?x7732 (* l_0_8_20 l_0_8_20)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7014 (* ?x7013 l_0_8_27)))
 (let ((?x7731 (- (+ (* (* (- 2.0) l_0_8_19) l_0_8_26) (* l_0_8_19 l_0_8_19)) ?x7014)))
 (let ((?x7744 (- (- (- (+ (+ (- (+ ?x7731 ?x7732) ?x7017) ?x7735) ?x7737) ?x7739) ?x7741) ?x7743)))
 (let ((?x7752 (- (- (- ?x7744 ?x7745) (* (* 2.0 l_0_8_64) l_0_8_71)) (* (* 2.0 l_0_8_65) l_0_8_72))))
 (let ((?x7758 (+ (- ?x7752 (* (* 2.0 l_0_8_66) l_0_8_73)) (* (* (/ 1.0 2.0) l_0_8_79) l_0_8_86))))
 (let ((?x7768 (+ (- (+ (- ?x7758 ?x7759) (* (* (/ 1.0 2.0) l_0_8_80) l_0_8_87)) ?x7764) (* (* (/ 1.0 2.0) l_0_8_81) l_0_8_88))))
 (= (- ?x7768 ?x7769) 0.0)))))))))))))))))))))))
(assert
 (let ((?x7463 (* 2.0 l_0_8_81)))
 (let ((?x7880 (* ?x7463 l_0_8_84)))
 (let ((?x7460 (* 2.0 l_0_8_80)))
 (let ((?x7878 (* ?x7460 l_0_8_83)))
 (let ((?x7457 (* 2.0 l_0_8_79)))
 (let ((?x7876 (* ?x7457 l_0_8_82)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7361 (* ?x7360 l_0_8_56)))
 (let ((?x7855 (* ?x7360 l_0_8_52)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7358 (* ?x7357 l_0_8_41)))
 (let ((?x7849 (* ?x7357 l_0_8_37)))
 (let ((?x7147 (* 2.0 l_0_8_25)))
 (let ((?x7148 (* ?x7147 l_0_8_29)))
 (let ((?x7144 (* 2.0 l_0_8_24)))
 (let ((?x7145 (* ?x7144 l_0_8_28)))
 (let ((?x7141 (* 2.0 l_0_8_23)))
 (let ((?x7142 (* ?x7141 l_0_8_27)))
 (let ((?x7139 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7843 (* ?x7016 l_0_8_24)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7841 (* ?x7013 l_0_8_23)))
 (let ((?x7010 (* 2.0 l_0_8_19)))
 (let ((?x7840 (* ?x7010 l_0_8_22)))
 (let ((?x7850 (+ (- (- (- (- (+ (+ ?x7840 ?x7841) ?x7843) ?x7139) ?x7142) ?x7145) ?x7148) ?x7849)))
 (let ((?x7857 (+ (- (- (- ?x7850 ?x7358) (* (* 2.0 l_0_8_4) l_0_8_7)) ?x7855) ?x7361)))
 (let ((?x7863 (- (- ?x7857 (* (* 2.0 l_0_8_5) l_0_8_8)) (* (* 2.0 l_0_8_6) l_0_8_9))))
 (let ((?x7869 (- (- ?x7863 (* (* 2.0 l_0_8_67) l_0_8_71)) (* (* 2.0 l_0_8_68) l_0_8_72))))
 (let ((?x7875 (- (- ?x7869 (* (* 2.0 l_0_8_69) l_0_8_73)) (* (* 2.0 l_0_8_70) l_0_8_74))))
 (let ((?x7884 (+ (- (- (- ?x7875 ?x7876) ?x7878) ?x7880) (* (* (/ 1.0 2.0) l_0_8_82) l_0_8_86))))
 (let ((?x7890 (+ (+ ?x7884 (* (* (/ 1.0 2.0) l_0_8_83) l_0_8_87)) (* (* (/ 1.0 2.0) l_0_8_84) l_0_8_88))))
 (= (+ ?x7890 (* (* (/ 1.0 2.0) l_0_8_85) l_0_8_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x7682 (* l_0_8_90 l_0_8_90)))
 (let ((?x8025 (* (/ 1.0 4.0) ?x7682)))
 (let ((?x7680 (* l_0_8_89 l_0_8_89)))
 (let ((?x8023 (* (/ 1.0 4.0) ?x7680)))
 (let ((?x7678 (* l_0_8_88 l_0_8_88)))
 (let ((?x8021 (* (/ 1.0 4.0) ?x7678)))
 (let ((?x7676 (* l_0_8_87 l_0_8_87)))
 (let ((?x8019 (* (/ 1.0 4.0) ?x7676)))
 (let ((?x7674 (* l_0_8_86 l_0_8_86)))
 (let ((?x8017 (* (/ 1.0 4.0) ?x7674)))
 (let ((?x7463 (* 2.0 l_0_8_81)))
 (let ((?x7464 (* ?x7463 l_0_8_88)))
 (let ((?x7460 (* 2.0 l_0_8_80)))
 (let ((?x7461 (* ?x7460 l_0_8_87)))
 (let ((?x7457 (* 2.0 l_0_8_79)))
 (let ((?x7458 (* ?x7457 l_0_8_86)))
 (let ((?x7301 (* l_0_8_75 l_0_8_75)))
 (let ((?x7298 (* l_0_8_74 l_0_8_74)))
 (let ((?x7295 (* l_0_8_73 l_0_8_73)))
 (let ((?x7292 (* l_0_8_72 l_0_8_72)))
 (let ((?x7289 (* l_0_8_71 l_0_8_71)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7361 (* ?x7360 l_0_8_56)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7358 (* ?x7357 l_0_8_41)))
 (let ((?x7286 (* l_0_8_30 l_0_8_30)))
 (let ((?x7283 (* l_0_8_29 l_0_8_29)))
 (let ((?x7280 (* l_0_8_28 l_0_8_28)))
 (let ((?x7277 (* l_0_8_27 l_0_8_27)))
 (let ((?x7274 (* l_0_8_26 l_0_8_26)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7017 (* ?x7016 l_0_8_28)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7014 (* ?x7013 l_0_8_27)))
 (let ((?x7010 (* 2.0 l_0_8_19)))
 (let ((?x7011 (* ?x7010 l_0_8_26)))
 (let ((?x7985 (- (* (* (- 2.0) l_0_8_11) l_0_8_4) (* (* 2.0 l_0_8_12) l_0_8_5))))
 (let ((?x8001 (+ (+ (+ (- ?x7985 (* (* 2.0 l_0_8_13) l_0_8_6)) ?x7011) ?x7014) ?x7017)))
 (let ((?x8008 (- (+ (- (- (- (- (- ?x8001 ?x7274) ?x7277) ?x7280) ?x7283) ?x7286) ?x7358) ?x7361)))
 (let ((?x8015 (- (- (- (- (- (- (- ?x8008 ?x7289) ?x7292) ?x7295) ?x7298) ?x7301) ?x7458) ?x7461)))
 (= (+ (+ (+ (+ (+ (- ?x8015 ?x7464) ?x8017) ?x8019) ?x8021) ?x8023) ?x8025) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x8112 (* l_0_8_9 l_0_8_9)))
 (let ((?x8110 (* l_0_8_85 l_0_8_85)))
 (let ((?x8108 (* l_0_8_84 l_0_8_84)))
 (let ((?x8106 (* l_0_8_83 l_0_8_83)))
 (let ((?x8104 (* l_0_8_82 l_0_8_82)))
 (let ((?x8102 (* l_0_8_8 l_0_8_8)))
 (let ((?x8100 (* l_0_8_7 l_0_8_7)))
 (let ((?x8098 (* l_0_8_25 l_0_8_25)))
 (let ((?x8096 (* l_0_8_24 l_0_8_24)))
 (let ((?x8094 (* l_0_8_23 l_0_8_23)))
 (let ((?x8097 (+ (+ (+ (* (- l_0_8_10) l_0_8_10) (* l_0_8_22 l_0_8_22)) ?x8094) ?x8096)))
 (let ((?x8111 (- (- (- (- (- (- (+ ?x8097 ?x8098) ?x8100) ?x8102) ?x8104) ?x8106) ?x8108) ?x8110)))
 (= (- ?x8111 ?x8112) 0.0))))))))))))))
(assert
 (let ((?x7586 (* (* 2.0 l_0_8_85) l_0_8_89)))
 (let ((?x7583 (* (* 2.0 l_0_8_84) l_0_8_88)))
 (let ((?x7580 (* (* 2.0 l_0_8_83) l_0_8_87)))
 (let ((?x7577 (* (* 2.0 l_0_8_82) l_0_8_86)))
 (let ((?x7147 (* 2.0 l_0_8_25)))
 (let ((?x7148 (* ?x7147 l_0_8_29)))
 (let ((?x7144 (* 2.0 l_0_8_24)))
 (let ((?x7145 (* ?x7144 l_0_8_28)))
 (let ((?x7141 (* 2.0 l_0_8_23)))
 (let ((?x7142 (* ?x7141 l_0_8_27)))
 (let ((?x7139 (* (* 2.0 l_0_8_22) l_0_8_26)))
 (let ((?x8145 (- (* (* (- 2.0) l_0_8_10) l_0_8_14) (* (* 2.0 l_0_8_11) l_0_8_7))))
 (let ((?x8149 (- (- ?x8145 (* (* 2.0 l_0_8_12) l_0_8_8)) (* (* 2.0 l_0_8_13) l_0_8_9))))
 (let ((?x8156 (- (- (- (+ (+ (+ (+ ?x8149 ?x7139) ?x7142) ?x7145) ?x7148) ?x7577) ?x7580) ?x7583)))
 (= (- ?x8156 ?x7586) 0.0))))))))))))))))
(assert
 (let ((?x7682 (* l_0_8_90 l_0_8_90)))
 (let ((?x7680 (* l_0_8_89 l_0_8_89)))
 (let ((?x7678 (* l_0_8_88 l_0_8_88)))
 (let ((?x7676 (* l_0_8_87 l_0_8_87)))
 (let ((?x7674 (* l_0_8_86 l_0_8_86)))
 (let ((?x7286 (* l_0_8_30 l_0_8_30)))
 (let ((?x7283 (* l_0_8_29 l_0_8_29)))
 (let ((?x7280 (* l_0_8_28 l_0_8_28)))
 (let ((?x7277 (* l_0_8_27 l_0_8_27)))
 (let ((?x7274 (* l_0_8_26 l_0_8_26)))
 (let ((?x8205 (* l_0_8_15 l_0_8_15)))
 (let ((?x8203 (* l_0_8_14 l_0_8_14)))
 (let ((?x8201 (* l_0_8_13 l_0_8_13)))
 (let ((?x8204 (- (- (- (* (- l_0_8_11) l_0_8_11) (* l_0_8_12 l_0_8_12)) ?x8201) ?x8203)))
 (let ((?x8212 (- (+ (+ (+ (+ (+ (- ?x8204 ?x8205) ?x7274) ?x7277) ?x7280) ?x7283) ?x7286) ?x7674)))
 (= (- (- (- (- ?x8212 ?x7676) ?x7678) ?x7680) ?x7682) 0.0)))))))))))))))))
(assert
 (let ((?x8271 (* l_0_8_93 l_0_8_93)))
 (let ((?x8269 (* l_0_8_92 l_0_8_92)))
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x6935 (* ?x6934 l_0_8_77)))
 (let ((?x7021 (* l_0_8_46 l_0_8_46)))
 (let ((?x7019 (* l_0_8_31 l_0_8_31)))
 (let ((?x8255 (- (- (* (- l_0_8_107) l_0_8_107) (* l_0_8_108 l_0_8_108)) (* (* 4.0 l_0_8_16) l_0_8_17))))
 (let ((?x8259 (+ (+ ?x8255 (* 1.0 (* l_0_8_17 l_0_8_17))) (* 1.0 (* l_0_8_18 l_0_8_18)))))
 (let ((?x8267 (+ (+ (- (+ ?x8259 ?x7019) ?x7021) (* 4.0 (* l_0_8_62 l_0_8_62))) (* 4.0 (* l_0_8_63 l_0_8_63)))))
 (= (- (- (+ ?x8267 ?x6935) ?x8269) ?x8271) 0.0)))))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x7035 (* ?x6934 l_0_8_79)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x7419 (* ?x6925 l_0_8_20)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x7417 (* ?x6922 l_0_8_19)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6769 (* ?x6768 l_0_8_17)))
 (let ((?x8303 (- (* (* (- 2.0) l_0_8_107) l_0_8_109) (* (* 2.0 l_0_8_108) l_0_8_110))))
 (let ((?x8308 (+ (+ (- (- ?x8303 ?x6769) (* (* 4.0 l_0_8_16) l_0_8_19)) ?x7417) ?x7419)))
 (let ((?x8312 (+ (- ?x8308 (* (* 2.0 l_0_8_61) l_0_8_62)) (* (* 8.0 l_0_8_62) l_0_8_64))))
 (let ((?x8316 (+ (+ ?x8312 (* (* 8.0 l_0_8_63) l_0_8_65)) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_77))))
 (let ((?x8323 (- (- (+ ?x8316 ?x7035) (* (* 2.0 l_0_8_92) l_0_8_94)) (* (* 2.0 l_0_8_93) l_0_8_95))))
 (= ?x8323 0.0)))))))))))))))
(assert
 (let ((?x6934 (* 2.0 l_0_8_76)))
 (let ((?x7162 (* ?x6934 l_0_8_82)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x7542 (* ?x6925 l_0_8_23)))
 (let ((?x6922 (* 2.0 l_0_8_17)))
 (let ((?x7540 (* ?x6922 l_0_8_22)))
 (let ((?x8374 (- (* (* (- 2.0) l_0_8_107) l_0_8_112) (* (* 2.0 l_0_8_108) l_0_8_113))))
 (let ((?x8380 (+ (+ (+ (- ?x8374 (* (* 4.0 l_0_8_16) l_0_8_22)) ?x7540) ?x7542) (* (* 8.0 l_0_8_62) l_0_8_67))))
 (let ((?x8385 (- (+ (+ ?x8380 (* (* 8.0 l_0_8_63) l_0_8_68)) ?x7162) (* (* 2.0 l_0_8_92) l_0_8_97))))
 (= (- ?x8385 (* (* 2.0 l_0_8_93) l_0_8_98)) 0.0)))))))))))
(assert
 (let ((?x7371 (* l_0_8_78 l_0_8_78)))
 (let ((?x7366 (* l_0_8_77 l_0_8_77)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7439 (* ?x7360 l_0_8_47)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7437 (* ?x7357 l_0_8_32)))
 (let ((?x8427 (- (* (* (- 2.0) l_0_8_17) l_0_8_17) (* (* 2.0 l_0_8_18) l_0_8_18))))
 (= (+ (+ (- (+ ?x8427 ?x7437) ?x7439) ?x7366) ?x7371) 0.0)))))))))
(assert
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7452 (* ?x7368 l_0_8_80)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7447 (* ?x7363 l_0_8_79)))
 (let ((?x8265 (* l_0_8_63 l_0_8_63)))
 (let ((?x8262 (* l_0_8_62 l_0_8_62)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7741 (* ?x7360 l_0_8_49)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7737 (* ?x7357 l_0_8_34)))
 (let ((?x7351 (* l_0_8_18 l_0_8_18)))
 (let ((?x8448 (- (- (* (* (- 4.0) l_0_8_17) l_0_8_19) (* l_0_8_17 l_0_8_17)) (* (* 4.0 l_0_8_18) l_0_8_20))))
 (let ((?x8456 (+ (+ (- (- (- (+ (- ?x8448 ?x7351) ?x7737) ?x7741) ?x8262) ?x8265) ?x7447) (* (/ 1.0 4.0) (* l_0_8_77 l_0_8_77)))))
 (= (+ (+ ?x8456 ?x7452) (* (/ 1.0 4.0) (* l_0_8_78 l_0_8_78))) 0.0)))))))))))))))
(assert
 (let ((?x7368 (* 2.0 l_0_8_78)))
 (let ((?x7574 (* ?x7368 l_0_8_83)))
 (let ((?x7363 (* 2.0 l_0_8_77)))
 (let ((?x7572 (* ?x7363 l_0_8_82)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7855 (* ?x7360 l_0_8_52)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7849 (* ?x7357 l_0_8_37)))
 (let ((?x8487 (- (* (* (- 4.0) l_0_8_17) l_0_8_22) (* (* 4.0 l_0_8_18) l_0_8_23))))
 (= (+ (+ (- (+ ?x8487 ?x7849) ?x7855) ?x7572) ?x7574) 0.0)))))))))))
(assert
 (let ((?x7769 (* l_0_8_81 l_0_8_81)))
 (let ((?x7764 (* l_0_8_80 l_0_8_80)))
 (let ((?x7759 (* l_0_8_79 l_0_8_79)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x7419 (* ?x6925 l_0_8_20)))
 (let ((?x8508 (- (- (* (* (- 2.0) l_0_8_17) l_0_8_19) ?x7419) (* (* 2.0 l_0_8_19) l_0_8_19))))
 (let ((?x8512 (- (- ?x8508 (* (* 2.0 l_0_8_20) l_0_8_20)) (* (* 2.0 l_0_8_21) l_0_8_21))))
 (let ((?x8516 (- (- ?x8512 (* (* 2.0 l_0_8_62) l_0_8_64)) (* (* 2.0 l_0_8_63) l_0_8_65))))
 (let ((?x8520 (+ (+ ?x8516 (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_79)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_80))))
 (= (+ (+ (+ ?x8520 ?x7759) ?x7764) ?x7769) 0.0)))))))))))
(assert
 (let ((?x7463 (* 2.0 l_0_8_81)))
 (let ((?x7880 (* ?x7463 l_0_8_84)))
 (let ((?x7460 (* 2.0 l_0_8_80)))
 (let ((?x7878 (* ?x7460 l_0_8_83)))
 (let ((?x7457 (* 2.0 l_0_8_79)))
 (let ((?x7876 (* ?x7457 l_0_8_82)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7439 (* ?x7360 l_0_8_47)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7437 (* ?x7357 l_0_8_32)))
 (let ((?x6925 (* 2.0 l_0_8_18)))
 (let ((?x7542 (* ?x6925 l_0_8_23)))
 (let ((?x8560 (- (- (* (* (- 2.0) l_0_8_17) l_0_8_22) ?x7542) (* (* 4.0 l_0_8_19) l_0_8_22))))
 (let ((?x8564 (- (- ?x8560 (* (* 4.0 l_0_8_20) l_0_8_23)) (* (* 4.0 l_0_8_21) l_0_8_24))))
 (let ((?x8570 (- (- (+ (- ?x8564 ?x7437) ?x7439) (* (* 2.0 l_0_8_62) l_0_8_67)) (* (* 2.0 l_0_8_63) l_0_8_68))))
 (let ((?x8574 (+ (+ ?x8570 (* (* (/ 1.0 2.0) l_0_8_77) l_0_8_82)) (* (* (/ 1.0 2.0) l_0_8_78) l_0_8_83))))
 (= (+ (+ (+ ?x8574 ?x7876) ?x7878) ?x7880) 0.0))))))))))))))))))
(assert
 (let ((?x8110 (* l_0_8_85 l_0_8_85)))
 (let ((?x8108 (* l_0_8_84 l_0_8_84)))
 (let ((?x8106 (* l_0_8_83 l_0_8_83)))
 (let ((?x8104 (* l_0_8_82 l_0_8_82)))
 (let ((?x8618 (- (* (* (- 2.0) l_0_8_22) l_0_8_22) (* (* 2.0 l_0_8_23) l_0_8_23))))
 (let ((?x8622 (- (- ?x8618 (* (* 2.0 l_0_8_24) l_0_8_24)) (* (* 2.0 l_0_8_25) l_0_8_25))))
 (= (+ (+ (+ (+ ?x8622 ?x8104) ?x8106) ?x8108) ?x8110) 0.0))))))))
(assert
 (let ((?x8677 (* l_0_8_96 l_0_8_96)))
 (let ((?x8675 (* l_0_8_95 l_0_8_95)))
 (let ((?x8673 (* l_0_8_94 l_0_8_94)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x6805 (* ?x6768 l_0_8_19)))
 (let ((?x8651 (* l_0_8_111 l_0_8_111)))
 (let ((?x8652 (- (- (* (- l_0_8_109) l_0_8_109) (* l_0_8_110 l_0_8_110)) ?x8651)))
 (let ((?x8657 (+ (+ (- ?x8652 ?x6805) (* 1.0 (* l_0_8_19 l_0_8_19))) (* 1.0 (* l_0_8_20 l_0_8_20)))))
 (let ((?x8661 (- (+ ?x8657 (* 1.0 (* l_0_8_21 l_0_8_21))) (* (* 2.0 l_0_8_61) l_0_8_64))))
 (let ((?x8667 (+ (+ ?x8661 (* 4.0 (* l_0_8_64 l_0_8_64))) (* 4.0 (* l_0_8_65 l_0_8_65)))))
 (let ((?x8672 (+ (+ ?x8667 (* 4.0 (* l_0_8_66 l_0_8_66))) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_79))))
 (= (- (- (- ?x8672 ?x8673) ?x8675) ?x8677) 0.0)))))))))))))
(assert
 (let ((?x7021 (* l_0_8_46 l_0_8_46)))
 (let ((?x7019 (* l_0_8_31 l_0_8_31)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7843 (* ?x7016 l_0_8_24)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7841 (* ?x7013 l_0_8_23)))
 (let ((?x7010 (* 2.0 l_0_8_19)))
 (let ((?x7840 (* ?x7010 l_0_8_22)))
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x7136 (* ?x6768 l_0_8_22)))
 (let ((?x8719 (- (* (* (- 2.0) l_0_8_109) l_0_8_112) (* (* 2.0 l_0_8_110) l_0_8_113))))
 (let ((?x8724 (+ (+ (- (- ?x8719 (* (* 2.0 l_0_8_111) l_0_8_114)) ?x7136) ?x7840) ?x7841)))
 (let ((?x8729 (- (+ (- (+ ?x8724 ?x7843) ?x7019) ?x7021) (* (* 2.0 l_0_8_61) l_0_8_67))))
 (let ((?x8733 (+ (+ ?x8729 (* (* 8.0 l_0_8_64) l_0_8_67)) (* (* 8.0 l_0_8_65) l_0_8_68))))
 (let ((?x8737 (+ (+ ?x8733 (* (* 8.0 l_0_8_66) l_0_8_69)) (* (* (/ 1.0 2.0) l_0_8_76) l_0_8_82))))
 (let ((?x8743 (- (- ?x8737 (* (* 2.0 l_0_8_94) l_0_8_97)) (* (* 2.0 l_0_8_95) l_0_8_98))))
 (= (- ?x8743 (* (* 2.0 l_0_8_96) l_0_8_99)) 0.0))))))))))))))))))
(assert
 (let ((?x8668 (* l_0_8_66 l_0_8_66)))
 (let ((?x8665 (* l_0_8_65 l_0_8_65)))
 (let ((?x8662 (* l_0_8_64 l_0_8_64)))
 (let ((?x7735 (* l_0_8_21 l_0_8_21)))
 (let ((?x8812 (- (- (- (* (- l_0_8_19) l_0_8_19) (* l_0_8_20 l_0_8_20)) ?x7735) ?x8662)))
 (let ((?x8818 (+ (+ (- (- ?x8812 ?x8665) ?x8668) (* (/ 1.0 4.0) (* l_0_8_79 l_0_8_79))) (* (/ 1.0 4.0) (* l_0_8_80 l_0_8_80)))))
 (= (+ ?x8818 (* (/ 1.0 4.0) (* l_0_8_81 l_0_8_81))) 0.0))))))))
(assert
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7741 (* ?x7360 l_0_8_49)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7737 (* ?x7357 l_0_8_34)))
 (let ((?x7016 (* 2.0 l_0_8_21)))
 (let ((?x7843 (* ?x7016 l_0_8_24)))
 (let ((?x7013 (* 2.0 l_0_8_20)))
 (let ((?x7841 (* ?x7013 l_0_8_23)))
 (let ((?x8844 (+ (- (- (- (* (* (- 2.0) l_0_8_19) l_0_8_22) ?x7841) ?x7843) ?x7737) ?x7741)))
 (let ((?x8848 (- (- ?x8844 (* (* 2.0 l_0_8_64) l_0_8_67)) (* (* 2.0 l_0_8_65) l_0_8_68))))
 (let ((?x8852 (+ (- ?x8848 (* (* 2.0 l_0_8_66) l_0_8_69)) (* (* (/ 1.0 2.0) l_0_8_79) l_0_8_82))))
 (let ((?x8856 (+ (+ ?x8852 (* (* (/ 1.0 2.0) l_0_8_80) l_0_8_83)) (* (* (/ 1.0 2.0) l_0_8_81) l_0_8_84))))
 (= ?x8856 0.0))))))))))))))
(assert
 (let ((?x8901 (* l_0_8_70 l_0_8_70)))
 (let ((?x8899 (* l_0_8_69 l_0_8_69)))
 (let ((?x8897 (* l_0_8_68 l_0_8_68)))
 (let ((?x8895 (* l_0_8_67 l_0_8_67)))
 (let ((?x7360 (* 2.0 l_0_8_46)))
 (let ((?x7855 (* ?x7360 l_0_8_52)))
 (let ((?x7357 (* 2.0 l_0_8_31)))
 (let ((?x7849 (* ?x7357 l_0_8_37)))
 (let ((?x8098 (* l_0_8_25 l_0_8_25)))
 (let ((?x8096 (* l_0_8_24 l_0_8_24)))
 (let ((?x8892 (- (- (- (* (- l_0_8_22) l_0_8_22) (* l_0_8_23 l_0_8_23)) ?x8096) ?x8098)))
 (let ((?x8904 (+ (- (- (- (- (+ (- ?x8892 ?x7849) ?x7855) ?x8895) ?x8897) ?x8899) ?x8901) (* (/ 1.0 4.0) (* l_0_8_82 l_0_8_82)))))
 (let ((?x8908 (+ (+ ?x8904 (* (/ 1.0 4.0) (* l_0_8_83 l_0_8_83))) (* (/ 1.0 4.0) (* l_0_8_84 l_0_8_84)))))
 (= (+ ?x8908 (* (/ 1.0 4.0) (* l_0_8_85 l_0_8_85))) 0.0)))))))))))))))
(assert
 (let ((?x6768 (* 2.0 l_0_8_16)))
 (let ((?x7136 (* ?x6768 l_0_8_22)))
 (let ((?x8947 (+ (+ (* (* (- 2.0) l_0_8_106) l_0_8_112) ?x7136) (* (* 8.0 l_0_8_61) l_0_8_67))))
 (= (- ?x8947 (* (* 2.0 l_0_8_91) l_0_8_97)) 0.0)))))
(assert
 (let ((?x8992 (* l_0_8_99 l_0_8_99)))
 (let ((?x8990 (* l_0_8_98 l_0_8_98)))
 (let ((?x8988 (* l_0_8_97 l_0_8_97)))
 (let ((?x8901 (* l_0_8_70 l_0_8_70)))
 (let ((?x8986 (* 4.0 ?x8901)))
 (let ((?x8899 (* l_0_8_69 l_0_8_69)))
 (let ((?x8984 (* 4.0 ?x8899)))
 (let ((?x8897 (* l_0_8_68 l_0_8_68)))
 (let ((?x8982 (* 4.0 ?x8897)))
 (let ((?x8895 (* l_0_8_67 l_0_8_67)))
 (let ((?x8980 (* 4.0 ?x8895)))
 (let ((?x8970 (* l_0_8_115 l_0_8_115)))
 (let ((?x8968 (* l_0_8_114 l_0_8_114)))
 (let ((?x8966 (* l_0_8_113 l_0_8_113)))
 (let ((?x8967 (- (- (* (- l_0_8_100) l_0_8_100) (* l_0_8_112 l_0_8_112)) ?x8966)))
 (let ((?x8975 (+ (+ (- (- ?x8967 ?x8968) ?x8970) (* 1.0 (* l_0_8_22 l_0_8_22))) (* 1.0 (* l_0_8_23 l_0_8_23)))))
 (let ((?x8979 (+ (+ ?x8975 (* 1.0 (* l_0_8_24 l_0_8_24))) (* 1.0 (* l_0_8_25 l_0_8_25)))))
 (let ((?x8993 (- (- (- (+ (+ (+ (+ ?x8979 ?x8980) ?x8982) ?x8984) ?x8986) ?x8988) ?x8990) ?x8992)))
 (= ?x8993 0.0))))))))))))))))))))
(assert
 (let ((?x9044 (* 2.0 l_0_8_51)))
 (let ((?x9045 (* ?x9044 l_0_8_54)))
 (let ((?x9041 (* 2.0 l_0_8_50)))
 (let ((?x9042 (* ?x9041 l_0_8_53)))
 (let ((?x9038 (* 2.0 l_0_8_49)))
 (let ((?x9039 (* ?x9038 l_0_8_52)))
 (let ((?x9036 (* l_0_8_48 l_0_8_48)))
 (let ((?x9034 (* l_0_8_47 l_0_8_47)))
 (let ((?x9031 (* 2.0 l_0_8_36)))
 (let ((?x9032 (* ?x9031 l_0_8_39)))
 (let ((?x9028 (* 2.0 l_0_8_35)))
 (let ((?x9029 (* ?x9028 l_0_8_38)))
 (let ((?x9025 (* 2.0 l_0_8_34)))
 (let ((?x9026 (* ?x9025 l_0_8_37)))
 (let ((?x9030 (+ (+ (- (* (- l_0_8_32) l_0_8_32) (* l_0_8_33 l_0_8_33)) ?x9026) ?x9029)))
 (= (- (- (- (+ (+ (+ ?x9030 ?x9032) ?x9034) ?x9036) ?x9039) ?x9042) ?x9045) 0.0)))))))))))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9095 (* ?x9094 l_0_8_50)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9092 (* ?x9091 l_0_8_49)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9089 (* ?x9088 l_0_8_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_32) l_0_8_34) ?x9089) ?x9092) ?x9095) 0.0))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9118 (* ?x9094 l_0_8_53)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9116 (* ?x9091 l_0_8_52)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9109 (* ?x9088 l_0_8_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_8_32) l_0_8_37) ?x9109) ?x9116) ?x9118) 0.0))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9147 (* ?x9094 l_0_8_57)))
 (let ((?x9118 (* ?x9094 l_0_8_53)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9144 (* ?x9091 l_0_8_56)))
 (let ((?x9116 (* ?x9091 l_0_8_52)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9141 (* ?x9088 l_0_8_42)))
 (let ((?x9109 (* ?x9088 l_0_8_38)))
 (let ((?x9130 (* 2.0 l_0_8_32)))
 (let ((?x9133 (* ?x9130 l_0_8_41)))
 (let ((?x9132 (* ?x9130 l_0_8_37)))
 (let ((?x9148 (+ (- (+ (- (- (+ (- ?x9132 ?x9133) ?x9109) ?x9141) ?x9116) ?x9144) ?x9118) ?x9147)))
 (= ?x9148 0.0)))))))))))))))
(assert
 (let ((?x9188 (* l_0_8_51 l_0_8_51)))
 (let ((?x9186 (* l_0_8_50 l_0_8_50)))
 (let ((?x9184 (* l_0_8_49 l_0_8_49)))
 (let ((?x9182 (* l_0_8_36 l_0_8_36)))
 (let ((?x9185 (+ (- (- (* (- l_0_8_34) l_0_8_34) (* l_0_8_35 l_0_8_35)) ?x9182) ?x9184)))
 (= (+ (+ ?x9185 ?x9186) ?x9188) 0.0)))))))
(assert
 (let ((?x9044 (* 2.0 l_0_8_51)))
 (let ((?x9045 (* ?x9044 l_0_8_54)))
 (let ((?x9041 (* 2.0 l_0_8_50)))
 (let ((?x9042 (* ?x9041 l_0_8_53)))
 (let ((?x9038 (* 2.0 l_0_8_49)))
 (let ((?x9039 (* ?x9038 l_0_8_52)))
 (let ((?x9031 (* 2.0 l_0_8_36)))
 (let ((?x9032 (* ?x9031 l_0_8_39)))
 (let ((?x9028 (* 2.0 l_0_8_35)))
 (let ((?x9029 (* ?x9028 l_0_8_38)))
 (let ((?x9210 (+ (+ (- (- (* (* (- 2.0) l_0_8_34) l_0_8_37) ?x9029) ?x9032) ?x9039) ?x9042)))
 (= (+ ?x9210 ?x9045) 0.0)))))))))))))
(assert
 (let ((?x9044 (* 2.0 l_0_8_51)))
 (let ((?x9236 (* ?x9044 l_0_8_58)))
 (let ((?x9045 (* ?x9044 l_0_8_54)))
 (let ((?x9041 (* 2.0 l_0_8_50)))
 (let ((?x9233 (* ?x9041 l_0_8_57)))
 (let ((?x9042 (* ?x9041 l_0_8_53)))
 (let ((?x9038 (* 2.0 l_0_8_49)))
 (let ((?x9230 (* ?x9038 l_0_8_56)))
 (let ((?x9039 (* ?x9038 l_0_8_52)))
 (let ((?x9031 (* 2.0 l_0_8_36)))
 (let ((?x9227 (* ?x9031 l_0_8_43)))
 (let ((?x9032 (* ?x9031 l_0_8_39)))
 (let ((?x9028 (* 2.0 l_0_8_35)))
 (let ((?x9224 (* ?x9028 l_0_8_42)))
 (let ((?x9029 (* ?x9028 l_0_8_38)))
 (let ((?x9025 (* 2.0 l_0_8_34)))
 (let ((?x9219 (* ?x9025 l_0_8_41)))
 (let ((?x9026 (* ?x9025 l_0_8_37)))
 (let ((?x9231 (+ (- (- (+ (- (+ (- ?x9026 ?x9219) ?x9029) ?x9224) ?x9032) ?x9227) ?x9039) ?x9230)))
 (= (+ (- (+ (- ?x9231 ?x9042) ?x9233) ?x9045) ?x9236) 0.0)))))))))))))))))))))
(assert
 (let ((?x9289 (* l_0_8_55 l_0_8_55)))
 (let ((?x9287 (* l_0_8_54 l_0_8_54)))
 (let ((?x9285 (* l_0_8_53 l_0_8_53)))
 (let ((?x9283 (* l_0_8_52 l_0_8_52)))
 (let ((?x9281 (* l_0_8_40 l_0_8_40)))
 (let ((?x9279 (* l_0_8_39 l_0_8_39)))
 (let ((?x9282 (- (- (- (* (- l_0_8_37) l_0_8_37) (* l_0_8_38 l_0_8_38)) ?x9279) ?x9281)))
 (= (+ (+ (+ (+ ?x9282 ?x9283) ?x9285) ?x9287) ?x9289) 0.0)))))))))
(assert
 (let ((?x9289 (* l_0_8_55 l_0_8_55)))
 (let ((?x9338 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9287 (* l_0_8_54 l_0_8_54)))
 (let ((?x9334 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9285 (* l_0_8_53 l_0_8_53)))
 (let ((?x9330 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9283 (* l_0_8_52 l_0_8_52)))
 (let ((?x9326 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9281 (* l_0_8_40 l_0_8_40)))
 (let ((?x9322 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9279 (* l_0_8_39 l_0_8_39)))
 (let ((?x9318 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9277 (* l_0_8_38 l_0_8_38)))
 (let ((?x9314 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9315 (- (+ (* (* (- 2.0) l_0_8_37) l_0_8_41) (* l_0_8_37 l_0_8_37)) ?x9314)))
 (let ((?x9328 (- (+ (+ (- (+ (- (+ ?x9315 ?x9277) ?x9318) ?x9279) ?x9322) ?x9281) ?x9326) ?x9283)))
 (= (- (+ (- (+ (- (+ ?x9328 ?x9330) ?x9285) ?x9334) ?x9287) ?x9338) ?x9289) 0.0))))))))))))))))))
(assert
 (let ((?x9413 (* l_0_8_60 l_0_8_60)))
 (let ((?x9411 (* l_0_8_59 l_0_8_59)))
 (let ((?x9409 (* l_0_8_58 l_0_8_58)))
 (let ((?x9407 (* l_0_8_57 l_0_8_57)))
 (let ((?x9405 (* l_0_8_56 l_0_8_56)))
 (let ((?x9338 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9334 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9330 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9326 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9399 (* l_0_8_45 l_0_8_45)))
 (let ((?x9397 (* l_0_8_44 l_0_8_44)))
 (let ((?x9395 (* l_0_8_43 l_0_8_43)))
 (let ((?x9393 (* l_0_8_42 l_0_8_42)))
 (let ((?x9391 (* l_0_8_41 l_0_8_41)))
 (let ((?x9322 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9318 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9314 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9390 (+ (+ (+ (* (* 2.0 l_0_8_37) l_0_8_41) ?x9314) ?x9318) ?x9322)))
 (let ((?x9402 (- (- (- (- (- (- (- ?x9390 ?x9391) ?x9393) ?x9395) ?x9397) ?x9399) ?x9326) ?x9330)))
 (let ((?x9414 (+ (+ (+ (+ (+ (- (- ?x9402 ?x9334) ?x9338) ?x9405) ?x9407) ?x9409) ?x9411) ?x9413)))
 (= ?x9414 0.0))))))))))))))))))))))
(assert
 (let ((?x9036 (* l_0_8_48 l_0_8_48)))
 (let ((?x9034 (* l_0_8_47 l_0_8_47)))
 (let ((?x9023 (* l_0_8_33 l_0_8_33)))
 (let ((?x9049 (* l_0_8_32 l_0_8_32)))
 (let ((?x9451 (+ ?x9049 ?x9023)))
 (= (- (- ?x9451 ?x9034) ?x9036) 0.0)))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9095 (* ?x9094 l_0_8_50)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9092 (* ?x9091 l_0_8_49)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9089 (* ?x9088 l_0_8_35)))
 (= (- (- (+ (* (* 2.0 l_0_8_32) l_0_8_34) ?x9089) ?x9092) ?x9095) 0.0))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9118 (* ?x9094 l_0_8_53)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9116 (* ?x9091 l_0_8_52)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9109 (* ?x9088 l_0_8_38)))
 (let ((?x9130 (* 2.0 l_0_8_32)))
 (let ((?x9132 (* ?x9130 l_0_8_37)))
 (= (- (- (+ ?x9132 ?x9109) ?x9116) ?x9118) 0.0))))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9147 (* ?x9094 l_0_8_57)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9144 (* ?x9091 l_0_8_56)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9141 (* ?x9088 l_0_8_42)))
 (let ((?x9130 (* 2.0 l_0_8_32)))
 (let ((?x9133 (* ?x9130 l_0_8_41)))
 (= (- (- (+ ?x9133 ?x9141) ?x9144) ?x9147) 0.0))))))))))
(assert
 (let ((?x9188 (* l_0_8_51 l_0_8_51)))
 (let ((?x9186 (* l_0_8_50 l_0_8_50)))
 (let ((?x9184 (* l_0_8_49 l_0_8_49)))
 (let ((?x9182 (* l_0_8_36 l_0_8_36)))
 (let ((?x9498 (- (+ (+ (* l_0_8_34 l_0_8_34) (* l_0_8_35 l_0_8_35)) ?x9182) ?x9184)))
 (= (- (- ?x9498 ?x9186) ?x9188) 0.0)))))))
(assert
 (let ((?x9044 (* 2.0 l_0_8_51)))
 (let ((?x9236 (* ?x9044 l_0_8_58)))
 (let ((?x9041 (* 2.0 l_0_8_50)))
 (let ((?x9233 (* ?x9041 l_0_8_57)))
 (let ((?x9038 (* 2.0 l_0_8_49)))
 (let ((?x9230 (* ?x9038 l_0_8_56)))
 (let ((?x9036 (* l_0_8_48 l_0_8_48)))
 (let ((?x9034 (* l_0_8_47 l_0_8_47)))
 (let ((?x9031 (* 2.0 l_0_8_36)))
 (let ((?x9227 (* ?x9031 l_0_8_43)))
 (let ((?x9028 (* 2.0 l_0_8_35)))
 (let ((?x9224 (* ?x9028 l_0_8_42)))
 (let ((?x9025 (* 2.0 l_0_8_34)))
 (let ((?x9219 (* ?x9025 l_0_8_41)))
 (let ((?x9023 (* l_0_8_33 l_0_8_33)))
 (let ((?x9049 (* l_0_8_32 l_0_8_32)))
 (let ((?x9451 (+ ?x9049 ?x9023)))
 (let ((?x9514 (- (- (- (- (+ (+ (+ ?x9451 ?x9219) ?x9224) ?x9227) ?x9034) ?x9036) ?x9230) ?x9233)))
 (= (- ?x9514 ?x9236) 0.0))))))))))))))))))))
(assert
 (let ((?x9289 (* l_0_8_55 l_0_8_55)))
 (let ((?x9287 (* l_0_8_54 l_0_8_54)))
 (let ((?x9285 (* l_0_8_53 l_0_8_53)))
 (let ((?x9283 (* l_0_8_52 l_0_8_52)))
 (let ((?x9281 (* l_0_8_40 l_0_8_40)))
 (let ((?x9279 (* l_0_8_39 l_0_8_39)))
 (let ((?x9537 (+ (+ (+ (* l_0_8_37 l_0_8_37) (* l_0_8_38 l_0_8_38)) ?x9279) ?x9281)))
 (= (- (- (- (- ?x9537 ?x9283) ?x9285) ?x9287) ?x9289) 0.0)))))))))
(assert
 (let ((?x9338 (* (* 2.0 l_0_8_55) l_0_8_59)))
 (let ((?x9334 (* (* 2.0 l_0_8_54) l_0_8_58)))
 (let ((?x9330 (* (* 2.0 l_0_8_53) l_0_8_57)))
 (let ((?x9326 (* (* 2.0 l_0_8_52) l_0_8_56)))
 (let ((?x9322 (* (* 2.0 l_0_8_40) l_0_8_44)))
 (let ((?x9318 (* (* 2.0 l_0_8_39) l_0_8_43)))
 (let ((?x9314 (* (* 2.0 l_0_8_38) l_0_8_42)))
 (let ((?x9390 (+ (+ (+ (* (* 2.0 l_0_8_37) l_0_8_41) ?x9314) ?x9318) ?x9322)))
 (= (- (- (- (- ?x9390 ?x9326) ?x9330) ?x9334) ?x9338) 0.0))))))))))
(assert
 (let ((?x9413 (* l_0_8_60 l_0_8_60)))
 (let ((?x9411 (* l_0_8_59 l_0_8_59)))
 (let ((?x9409 (* l_0_8_58 l_0_8_58)))
 (let ((?x9407 (* l_0_8_57 l_0_8_57)))
 (let ((?x9405 (* l_0_8_56 l_0_8_56)))
 (let ((?x9399 (* l_0_8_45 l_0_8_45)))
 (let ((?x9397 (* l_0_8_44 l_0_8_44)))
 (let ((?x9395 (* l_0_8_43 l_0_8_43)))
 (let ((?x9567 (+ (+ (+ (* l_0_8_41 l_0_8_41) (* l_0_8_42 l_0_8_42)) ?x9395) ?x9397)))
 (= (- (- (- (- (- (+ ?x9567 ?x9399) ?x9405) ?x9407) ?x9409) ?x9411) ?x9413) 0.0)))))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9095 (* ?x9094 l_0_8_50)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9092 (* ?x9091 l_0_8_49)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9089 (* ?x9088 l_0_8_35)))
 (= (- (- (+ (* (* 2.0 l_0_8_32) l_0_8_34) ?x9089) ?x9092) ?x9095) 0.0))))))))
(assert
 (let ((?x9094 (* 2.0 l_0_8_48)))
 (let ((?x9147 (* ?x9094 l_0_8_57)))
 (let ((?x9091 (* 2.0 l_0_8_47)))
 (let ((?x9144 (* ?x9091 l_0_8_56)))
 (let ((?x9088 (* 2.0 l_0_8_33)))
 (let ((?x9141 (* ?x9088 l_0_8_42)))
 (let ((?x9130 (* 2.0 l_0_8_32)))
 (let ((?x9133 (* ?x9130 l_0_8_41)))
 (= (- (- (+ ?x9133 ?x9141) ?x9144) ?x9147) 0.0))))))))))
(assert
 (let ((?x9188 (* l_0_8_51 l_0_8_51)))
 (let ((?x9186 (* l_0_8_50 l_0_8_50)))
 (let ((?x9184 (* l_0_8_49 l_0_8_49)))
 (let ((?x9182 (* l_0_8_36 l_0_8_36)))
 (let ((?x9498 (- (+ (+ (* l_0_8_34 l_0_8_34) (* l_0_8_35 l_0_8_35)) ?x9182) ?x9184)))
 (= (- (- ?x9498 ?x9186) ?x9188) 0.0)))))))
(assert
 (let ((?x9044 (* 2.0 l_0_8_51)))
 (let ((?x9236 (* ?x9044 l_0_8_58)))
 (let ((?x9041 (* 2.0 l_0_8_50)))
 (let ((?x9233 (* ?x9041 l_0_8_57)))
 (let ((?x9038 (* 2.0 l_0_8_49)))
 (let ((?x9230 (* ?x9038 l_0_8_56)))
 (let ((?x9031 (* 2.0 l_0_8_36)))
 (let ((?x9227 (* ?x9031 l_0_8_43)))
 (let ((?x9028 (* 2.0 l_0_8_35)))
 (let ((?x9224 (* ?x9028 l_0_8_42)))
 (let ((?x9025 (* 2.0 l_0_8_34)))
 (let ((?x9219 (* ?x9025 l_0_8_41)))
 (= (- (- (- (+ (+ ?x9219 ?x9224) ?x9227) ?x9230) ?x9233) ?x9236) 0.0))))))))))))))
(assert
 (let ((?x9413 (* l_0_8_60 l_0_8_60)))
 (let ((?x9411 (* l_0_8_59 l_0_8_59)))
 (let ((?x9409 (* l_0_8_58 l_0_8_58)))
 (let ((?x9407 (* l_0_8_57 l_0_8_57)))
 (let ((?x9405 (* l_0_8_56 l_0_8_56)))
 (let ((?x9399 (* l_0_8_45 l_0_8_45)))
 (let ((?x9397 (* l_0_8_44 l_0_8_44)))
 (let ((?x9395 (* l_0_8_43 l_0_8_43)))
 (let ((?x9567 (+ (+ (+ (* l_0_8_41 l_0_8_41) (* l_0_8_42 l_0_8_42)) ?x9395) ?x9397)))
 (= (- (- (- (- (- (+ ?x9567 ?x9399) ?x9405) ?x9407) ?x9409) ?x9411) ?x9413) 0.0)))))))))))
(assert
 (>= l_0_8_1 0.0))
(assert
 (>= l_0_8_3 0.0))
(assert
 (>= l_0_8_6 0.0))
(assert
 (>= l_0_8_10 0.0))
(assert
 (>= l_0_8_15 0.0))
(assert
 (>= l_0_8_16 0.0))
(assert
 (>= l_0_8_18 0.0))
(assert
 (>= l_0_8_21 0.0))
(assert
 (>= l_0_8_25 0.0))
(assert
 (>= l_0_8_30 0.0))
(assert
 (>= l_0_8_31 0.0))
(assert
 (>= l_0_8_33 0.0))
(assert
 (>= l_0_8_36 0.0))
(assert
 (>= l_0_8_40 0.0))
(assert
 (>= l_0_8_45 0.0))
(assert
 (>= l_0_8_46 0.0))
(assert
 (>= l_0_8_48 0.0))
(assert
 (>= l_0_8_51 0.0))
(assert
 (>= l_0_8_55 0.0))
(assert
 (>= l_0_8_60 0.0))
(assert
 (>= l_0_8_61 0.0))
(assert
 (>= l_0_8_63 0.0))
(assert
 (>= l_0_8_66 0.0))
(assert
 (>= l_0_8_70 0.0))
(assert
 (>= l_0_8_75 0.0))
(assert
 (>= l_0_8_76 0.0))
(assert
 (>= l_0_8_78 0.0))
(assert
 (>= l_0_8_81 0.0))
(assert
 (>= l_0_8_85 0.0))
(assert
 (>= l_0_8_90 0.0))
(assert
 (>= l_0_8_91 0.0))
(assert
 (>= l_0_8_93 0.0))
(assert
 (>= l_0_8_96 0.0))
(assert
 (>= l_0_8_100 0.0))
(assert
 (>= l_0_8_105 0.0))
(assert
 (>= l_0_8_106 0.0))
(assert
 (>= l_0_8_108 0.0))
(assert
 (>= l_0_8_111 0.0))
(assert
 (>= l_0_8_115 0.0))
(assert
 (>= l_0_8_120 0.0))
(assert
 (let ((?x9677 (* l_0_9_46 l_0_9_46)))
 (let ((?x9675 (* l_0_9_31 l_0_9_31)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x9673 (* ?x9672 l_0_9_24)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x9670 (* ?x9669 l_0_9_23)))
 (let ((?x9666 (* 2.0 l_0_9_19)))
 (let ((?x9667 (* ?x9666 l_0_9_22)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9664 (* ?x9663 l_0_9_22)))
 (let ((?x9650 (- (* (* (- 2.0) l_0_9_109) l_0_9_112) (* (* 2.0 l_0_9_110) l_0_9_113))))
 (let ((?x9656 (- (- ?x9650 (* (* 2.0 l_0_9_111) l_0_9_114)) (* (* 2.0 l_0_9_124) l_0_9_127))))
 (let ((?x9662 (- (- ?x9656 (* (* 2.0 l_0_9_125) l_0_9_128)) (* (* 2.0 l_0_9_126) l_0_9_129))))
 (let ((?x9681 (- (+ (- (+ (+ (+ (- ?x9662 ?x9664) ?x9667) ?x9670) ?x9673) ?x9675) ?x9677) (* (* 2.0 l_0_9_61) l_0_9_67))))
 (let ((?x9687 (+ (+ ?x9681 (* (* 8.0 l_0_9_64) l_0_9_67)) (* (* 8.0 l_0_9_65) l_0_9_68))))
 (let ((?x9693 (+ (+ ?x9687 (* (* 8.0 l_0_9_66) l_0_9_69)) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_82))))
 (let ((?x9699 (- (- ?x9693 (* (* 2.0 l_0_9_94) l_0_9_97)) (* (* 2.0 l_0_9_95) l_0_9_98))))
 (= (+ (- ?x9699 (* (* 2.0 l_0_9_96) l_0_9_99)) (/ 1.0 4.0)) 0.0)))))))))))))))))))
(assert
 (let ((?x9828 (* l_0_9_93 l_0_9_93)))
 (let ((?x9826 (* l_0_9_92 l_0_9_92)))
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x9824 (* ?x9823 l_0_9_77)))
 (let ((?x9820 (* l_0_9_63 l_0_9_63)))
 (let ((?x9821 (* 4.0 ?x9820)))
 (let ((?x9817 (* l_0_9_62 l_0_9_62)))
 (let ((?x9818 (* 4.0 ?x9817)))
 (let ((?x9677 (* l_0_9_46 l_0_9_46)))
 (let ((?x9675 (* l_0_9_31 l_0_9_31)))
 (let ((?x9804 (* l_0_9_123 l_0_9_123)))
 (let ((?x9802 (* l_0_9_122 l_0_9_122)))
 (let ((?x9803 (- (- (* (- l_0_9_107) l_0_9_107) (* l_0_9_108 l_0_9_108)) ?x9802)))
 (let ((?x9811 (+ (- (- ?x9803 ?x9804) (* (* 4.0 l_0_9_16) l_0_9_17)) (* 1.0 (* l_0_9_17 l_0_9_17)))))
 (let ((?x9819 (+ (- (+ (+ ?x9811 (* 1.0 (* l_0_9_18 l_0_9_18))) ?x9675) ?x9677) ?x9818)))
 (= (- (- (- (+ (+ ?x9819 ?x9821) ?x9824) ?x9826) ?x9828) (/ 1.0 4.0)) 0.0)))))))))))))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x9896 (* ?x9823 l_0_9_79)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x9884 (* ?x9883 l_0_9_20)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x9881 (* ?x9880 l_0_9_19)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9876 (* ?x9663 l_0_9_17)))
 (let ((?x9869 (- (* (* (- 2.0) l_0_9_107) l_0_9_109) (* (* 2.0 l_0_9_108) l_0_9_110))))
 (let ((?x9875 (- (- ?x9869 (* (* 2.0 l_0_9_122) l_0_9_124)) (* (* 2.0 l_0_9_123) l_0_9_125))))
 (let ((?x9885 (+ (+ (- (- ?x9875 ?x9876) (* (* 4.0 l_0_9_16) l_0_9_19)) ?x9881) ?x9884)))
 (let ((?x9890 (+ (- ?x9885 (* (* 2.0 l_0_9_61) l_0_9_62)) (* (* 8.0 l_0_9_62) l_0_9_64))))
 (let ((?x9895 (+ (+ ?x9890 (* (* 8.0 l_0_9_63) l_0_9_65)) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_77))))
 (let ((?x9903 (- (- (+ ?x9895 ?x9896) (* (* 2.0 l_0_9_92) l_0_9_94)) (* (* 2.0 l_0_9_93) l_0_9_95))))
 (= ?x9903 0.0))))))))))))))))
(assert
 (let ((?x10016 (* l_0_9_96 l_0_9_96)))
 (let ((?x10014 (* l_0_9_95 l_0_9_95)))
 (let ((?x10012 (* l_0_9_94 l_0_9_94)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9988 (* ?x9663 l_0_9_19)))
 (let ((?x9986 (* l_0_9_126 l_0_9_126)))
 (let ((?x9984 (* l_0_9_125 l_0_9_125)))
 (let ((?x9982 (* l_0_9_124 l_0_9_124)))
 (let ((?x9980 (* l_0_9_111 l_0_9_111)))
 (let ((?x9981 (- (- (* (- l_0_9_109) l_0_9_109) (* l_0_9_110 l_0_9_110)) ?x9980)))
 (let ((?x9992 (+ (- (- (- (- ?x9981 ?x9982) ?x9984) ?x9986) ?x9988) (* 1.0 (* l_0_9_19 l_0_9_19)))))
 (let ((?x9998 (+ (+ ?x9992 (* 1.0 (* l_0_9_20 l_0_9_20))) (* 1.0 (* l_0_9_21 l_0_9_21)))))
 (let ((?x10003 (+ (- ?x9998 (* (* 2.0 l_0_9_61) l_0_9_64)) (* 4.0 (* l_0_9_64 l_0_9_64)))))
 (let ((?x10009 (+ (+ ?x10003 (* 4.0 (* l_0_9_65 l_0_9_65))) (* 4.0 (* l_0_9_66 l_0_9_66)))))
 (let ((?x10017 (- (- (- (+ ?x10009 (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_79)) ?x10012) ?x10014) ?x10016)))
 (= ?x10017 0.0)))))))))))))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x9896 (* ?x9823 l_0_9_79)))
 (let ((?x9677 (* l_0_9_46 l_0_9_46)))
 (let ((?x9675 (* l_0_9_31 l_0_9_31)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x10100 (* ?x9672 l_0_9_28)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x10098 (* ?x9669 l_0_9_27)))
 (let ((?x9666 (* 2.0 l_0_9_19)))
 (let ((?x10096 (* ?x9666 l_0_9_26)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x10094 (* ?x9663 l_0_9_26)))
 (let ((?x9988 (* ?x9663 l_0_9_19)))
 (let ((?x10073 (- (* (* (- 2.0) l_0_9_1) l_0_9_4) (* (* 2.0 l_0_9_101) l_0_9_94))))
 (let ((?x10079 (- (- ?x10073 (* (* 2.0 l_0_9_102) l_0_9_95)) (* (* 2.0 l_0_9_103) l_0_9_96))))
 (let ((?x10084 (- (- ?x10079 (* (* 2.0 l_0_9_109) l_0_9_116)) (* (* 2.0 l_0_9_110) l_0_9_117))))
 (let ((?x10088 (- (- ?x10084 (* (* 2.0 l_0_9_111) l_0_9_118)) (* (* 2.0 l_0_9_124) l_0_9_131))))
 (let ((?x10092 (- (- ?x10088 (* (* 2.0 l_0_9_125) l_0_9_132)) (* (* 2.0 l_0_9_126) l_0_9_133))))
 (let ((?x10103 (- (+ (+ (+ (+ (- (+ ?x10092 ?x9988) ?x10094) ?x10096) ?x10098) ?x10100) ?x9675) ?x9677)))
 (let ((?x10107 (+ (- ?x10103 (* (* 2.0 l_0_9_61) l_0_9_71)) (* (* 8.0 l_0_9_64) l_0_9_71))))
 (let ((?x10111 (+ (+ ?x10107 (* (* 8.0 l_0_9_65) l_0_9_72)) (* (* 8.0 l_0_9_66) l_0_9_73))))
 (= (- (+ (- ?x10111 ?x9896) (* (* (/ 1.0 2.0) l_0_9_76) l_0_9_86)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10227 (* l_0_9_76 l_0_9_76)))
 (let ((?x10222 (* l_0_9_16 l_0_9_16)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x10094 (* ?x9663 l_0_9_26)))
 (let ((?x10217 (- (- (* (- l_0_9_1) l_0_9_1) (* (* 2.0 l_0_9_101) l_0_9_91)) (* (* 2.0 l_0_9_106) l_0_9_116))))
 (let ((?x10226 (+ (+ (+ (- ?x10217 (* (* 2.0 l_0_9_121) l_0_9_131)) ?x10094) ?x10222) (* (* 8.0 l_0_9_61) l_0_9_71))))
 (= (- ?x10226 ?x10227) 0.0))))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x10283 (* ?x9823 l_0_9_86)))
 (let ((?x9824 (* ?x9823 l_0_9_77)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10276 (* ?x9883 l_0_9_27)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x10274 (* ?x9880 l_0_9_26)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9876 (* ?x9663 l_0_9_17)))
 (let ((?x10259 (- (* (* (- 2.0) l_0_9_1) l_0_9_2) (* (* 2.0 l_0_9_101) l_0_9_92))))
 (let ((?x10264 (- (- ?x10259 (* (* 2.0 l_0_9_102) l_0_9_93)) (* (* 2.0 l_0_9_107) l_0_9_116))))
 (let ((?x10268 (- (- ?x10264 (* (* 2.0 l_0_9_108) l_0_9_117)) (* (* 2.0 l_0_9_122) l_0_9_131))))
 (let ((?x10273 (- (+ (- ?x10268 (* (* 2.0 l_0_9_123) l_0_9_132)) ?x9876) (* (* 4.0 l_0_9_16) l_0_9_26))))
 (let ((?x10281 (+ (+ (+ (+ ?x10273 ?x10274) ?x10276) (* (* 8.0 l_0_9_62) l_0_9_71)) (* (* 8.0 l_0_9_63) l_0_9_72))))
 (= (+ (- ?x10281 ?x9824) ?x10283) 0.0))))))))))))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x10405 (* ?x9823 l_0_9_82)))
 (let ((?x10390 (* 2.0 l_0_9_25)))
 (let ((?x10391 (* ?x10390 l_0_9_29)))
 (let ((?x10387 (* 2.0 l_0_9_24)))
 (let ((?x10388 (* ?x10387 l_0_9_28)))
 (let ((?x10384 (* 2.0 l_0_9_23)))
 (let ((?x10385 (* ?x10384 l_0_9_27)))
 (let ((?x10382 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9664 (* ?x9663 l_0_9_22)))
 (let ((?x10349 (- (* (* (- 2.0) l_0_9_1) l_0_9_7) (* (* 2.0 l_0_9_100) l_0_9_104))))
 (let ((?x10353 (- (- ?x10349 (* (* 2.0 l_0_9_101) l_0_9_97)) (* (* 2.0 l_0_9_102) l_0_9_98))))
 (let ((?x10358 (- (- ?x10353 (* (* 2.0 l_0_9_103) l_0_9_99)) (* (* 2.0 l_0_9_112) l_0_9_116))))
 (let ((?x10364 (- (- ?x10358 (* (* 2.0 l_0_9_113) l_0_9_117)) (* (* 2.0 l_0_9_114) l_0_9_118))))
 (let ((?x10370 (- (- ?x10364 (* (* 2.0 l_0_9_115) l_0_9_119)) (* (* 2.0 l_0_9_127) l_0_9_131))))
 (let ((?x10376 (- (- ?x10370 (* (* 2.0 l_0_9_128) l_0_9_132)) (* (* 2.0 l_0_9_129) l_0_9_133))))
 (let ((?x10386 (+ (+ (+ (- ?x10376 (* (* 2.0 l_0_9_130) l_0_9_134)) ?x9664) ?x10382) ?x10385)))
 (let ((?x10398 (+ (+ (+ (+ ?x10386 ?x10388) ?x10391) (* (* 8.0 l_0_9_67) l_0_9_71)) (* (* 8.0 l_0_9_68) l_0_9_72))))
 (let ((?x10404 (+ (+ ?x10398 (* (* 8.0 l_0_9_69) l_0_9_73)) (* (* 8.0 l_0_9_70) l_0_9_74))))
 (= (- ?x10404 ?x10405) 0.0))))))))))))))))))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x10283 (* ?x9823 l_0_9_86)))
 (let ((?x10564 (* l_0_9_75 l_0_9_75)))
 (let ((?x10565 (* 4.0 ?x10564)))
 (let ((?x10561 (* l_0_9_74 l_0_9_74)))
 (let ((?x10562 (* 4.0 ?x10561)))
 (let ((?x10558 (* l_0_9_73 l_0_9_73)))
 (let ((?x10559 (* 4.0 ?x10558)))
 (let ((?x10555 (* l_0_9_72 l_0_9_72)))
 (let ((?x10556 (* 4.0 ?x10555)))
 (let ((?x10552 (* l_0_9_71 l_0_9_71)))
 (let ((?x10553 (* 4.0 ?x10552)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x10094 (* ?x9663 l_0_9_26)))
 (let ((?x10534 (* l_0_9_135 l_0_9_135)))
 (let ((?x10532 (* l_0_9_134 l_0_9_134)))
 (let ((?x10530 (* l_0_9_133 l_0_9_133)))
 (let ((?x10528 (* l_0_9_132 l_0_9_132)))
 (let ((?x10526 (* l_0_9_131 l_0_9_131)))
 (let ((?x10524 (* l_0_9_120 l_0_9_120)))
 (let ((?x10522 (* l_0_9_119 l_0_9_119)))
 (let ((?x10520 (* l_0_9_118 l_0_9_118)))
 (let ((?x10518 (* l_0_9_117 l_0_9_117)))
 (let ((?x10516 (* l_0_9_116 l_0_9_116)))
 (let ((?x10514 (* l_0_9_105 l_0_9_105)))
 (let ((?x10512 (* l_0_9_104 l_0_9_104)))
 (let ((?x10510 (* l_0_9_103 l_0_9_103)))
 (let ((?x10508 (* l_0_9_102 l_0_9_102)))
 (let ((?x10509 (- (- (* (* (- 2.0) l_0_9_1) l_0_9_11) (* l_0_9_101 l_0_9_101)) ?x10508)))
 (let ((?x10523 (- (- (- (- (- (- (- ?x10509 ?x10510) ?x10512) ?x10514) ?x10516) ?x10518) ?x10520) ?x10522)))
 (let ((?x10536 (+ (- (- (- (- (- (- ?x10523 ?x10524) ?x10526) ?x10528) ?x10530) ?x10532) ?x10534) ?x10094)))
 (let ((?x10542 (+ (+ ?x10536 (* 1.0 (* l_0_9_26 l_0_9_26))) (* 1.0 (* l_0_9_27 l_0_9_27)))))
 (let ((?x10548 (+ (+ ?x10542 (* 1.0 (* l_0_9_28 l_0_9_28))) (* 1.0 (* l_0_9_29 l_0_9_29)))))
 (let ((?x10560 (+ (+ (+ (+ ?x10548 (* 1.0 (* l_0_9_30 l_0_9_30))) ?x10553) ?x10556) ?x10559)))
 (= (- (+ (+ ?x10560 ?x10562) ?x10565) ?x10283) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10647 (* l_0_9_78 l_0_9_78)))
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10645 (* ?x10644 l_0_9_87)))
 (let ((?x10642 (* l_0_9_77 l_0_9_77)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10640 (* ?x10639 l_0_9_86)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10637 (* ?x10636 l_0_9_56)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10634 (* ?x10633 l_0_9_41)))
 (let ((?x10631 (* l_0_9_3 l_0_9_3)))
 (let ((?x10629 (* l_0_9_2 l_0_9_2)))
 (let ((?x9812 (* l_0_9_18 l_0_9_18)))
 (let ((?x10627 (- (+ (* (* (- 4.0) l_0_9_17) l_0_9_26) (* l_0_9_17 l_0_9_17)) (* (* 4.0 l_0_9_18) l_0_9_27))))
 (let ((?x10643 (- (+ (- (+ (- (- (+ ?x10627 ?x9812) ?x10629) ?x10631) ?x10634) ?x10637) ?x10640) ?x10642)))
 (= (- (+ ?x10643 ?x10645) ?x10647) 0.0)))))))))))))))))
(assert
 (let ((?x10730 (* 2.0 l_0_9_81)))
 (let ((?x10731 (* ?x10730 l_0_9_88)))
 (let ((?x10727 (* 2.0 l_0_9_80)))
 (let ((?x10728 (* ?x10727 l_0_9_87)))
 (let ((?x10724 (* 2.0 l_0_9_79)))
 (let ((?x10725 (* ?x10724 l_0_9_86)))
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10719 (* ?x10644 l_0_9_80)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10714 (* ?x10639 l_0_9_79)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10706 (* ?x10636 l_0_9_47)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10704 (* ?x10633 l_0_9_32)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10276 (* ?x9883 l_0_9_27)))
 (let ((?x9884 (* ?x9883 l_0_9_20)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x10274 (* ?x9880 l_0_9_26)))
 (let ((?x9881 (* ?x9880 l_0_9_19)))
 (let ((?x10691 (- (- (+ (- ?x9881 ?x10274) ?x9884) ?x10276) (* (* 4.0 l_0_9_19) l_0_9_26))))
 (let ((?x10697 (- (- ?x10691 (* (* 2.0 l_0_9_2) l_0_9_4)) (* (* 4.0 l_0_9_20) l_0_9_27))))
 (let ((?x10703 (- (- ?x10697 (* (* 4.0 l_0_9_21) l_0_9_28)) (* (* 2.0 l_0_9_3) l_0_9_5))))
 (let ((?x10713 (- (- (- (+ ?x10703 ?x10704) ?x10706) (* (* 2.0 l_0_9_62) l_0_9_71)) (* (* 2.0 l_0_9_63) l_0_9_72))))
 (let ((?x10723 (+ (- (+ (- ?x10713 ?x10714) (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_86)) ?x10719) (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_87))))
 (= (+ (+ (+ ?x10723 ?x10725) ?x10728) ?x10731) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x10845 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x10842 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x10839 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x10836 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10833 (* ?x10644 l_0_9_83)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10831 (* ?x10639 l_0_9_82)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10813 (* ?x9883 l_0_9_23)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x10812 (* ?x9880 l_0_9_22)))
 (let ((?x10819 (- (- (+ ?x10812 ?x10813) (* (* 2.0 l_0_9_2) l_0_9_7)) (* (* 4.0 l_0_9_22) l_0_9_26))))
 (let ((?x10825 (- (- ?x10819 (* (* 4.0 l_0_9_23) l_0_9_27)) (* (* 4.0 l_0_9_24) l_0_9_28))))
 (let ((?x10830 (- (- ?x10825 (* (* 4.0 l_0_9_25) l_0_9_29)) (* (* 2.0 l_0_9_3) l_0_9_8))))
 (= (+ (+ (+ (+ (- (- ?x10830 ?x10831) ?x10833) ?x10836) ?x10839) ?x10842) ?x10845) 0.0)))))))))))))))))
(assert
 (let ((?x10941 (* l_0_9_90 l_0_9_90)))
 (let ((?x10939 (* l_0_9_89 l_0_9_89)))
 (let ((?x10937 (* l_0_9_88 l_0_9_88)))
 (let ((?x10935 (* l_0_9_87 l_0_9_87)))
 (let ((?x10933 (* l_0_9_86 l_0_9_86)))
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10645 (* ?x10644 l_0_9_87)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10640 (* ?x10639 l_0_9_86)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10276 (* ?x9883 l_0_9_27)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x10274 (* ?x9880 l_0_9_26)))
 (let ((?x10905 (- (* (* (- 2.0) l_0_9_11) l_0_9_2) (* (* 2.0 l_0_9_12) l_0_9_3))))
 (let ((?x10921 (- (- (+ (+ ?x10905 ?x10274) ?x10276) (* (* 2.0 l_0_9_26) l_0_9_26)) (* (* 2.0 l_0_9_27) l_0_9_27))))
 (let ((?x10927 (- (- ?x10921 (* (* 2.0 l_0_9_28) l_0_9_28)) (* (* 2.0 l_0_9_29) l_0_9_29))))
 (let ((?x10934 (+ (- (- (- ?x10927 (* (* 2.0 l_0_9_30) l_0_9_30)) ?x10640) ?x10645) ?x10933)))
 (= (+ (+ (+ (+ ?x10934 ?x10935) ?x10937) ?x10939) ?x10941) 0.0)))))))))))))))))))
(assert
 (let ((?x11027 (* l_0_9_81 l_0_9_81)))
 (let ((?x11022 (* l_0_9_80 l_0_9_80)))
 (let ((?x11017 (* l_0_9_79 l_0_9_79)))
 (let ((?x11003 (* l_0_9_6 l_0_9_6)))
 (let ((?x11001 (* l_0_9_5 l_0_9_5)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10999 (* ?x10636 l_0_9_49)))
 (let ((?x10997 (* l_0_9_4 l_0_9_4)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10995 (* ?x10633 l_0_9_34)))
 (let ((?x9996 (* l_0_9_21 l_0_9_21)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x10100 (* ?x9672 l_0_9_28)))
 (let ((?x9993 (* l_0_9_20 l_0_9_20)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x10098 (* ?x9669 l_0_9_27)))
 (let ((?x10991 (- (+ (* (* (- 2.0) l_0_9_19) l_0_9_26) (* l_0_9_19 l_0_9_19)) ?x10098)))
 (let ((?x11002 (- (- (- (+ (+ (- (+ ?x10991 ?x9993) ?x10100) ?x9996) ?x10995) ?x10997) ?x10999) ?x11001)))
 (let ((?x11010 (- (- (- ?x11002 ?x11003) (* (* 2.0 l_0_9_64) l_0_9_71)) (* (* 2.0 l_0_9_65) l_0_9_72))))
 (let ((?x11016 (+ (- ?x11010 (* (* 2.0 l_0_9_66) l_0_9_73)) (* (* (/ 1.0 2.0) l_0_9_79) l_0_9_86))))
 (let ((?x11026 (+ (- (+ (- ?x11016 ?x11017) (* (* (/ 1.0 2.0) l_0_9_80) l_0_9_87)) ?x11022) (* (* (/ 1.0 2.0) l_0_9_81) l_0_9_88))))
 (= (- ?x11026 ?x11027) 0.0)))))))))))))))))))))))
(assert
 (let ((?x10730 (* 2.0 l_0_9_81)))
 (let ((?x11127 (* ?x10730 l_0_9_84)))
 (let ((?x10727 (* 2.0 l_0_9_80)))
 (let ((?x11125 (* ?x10727 l_0_9_83)))
 (let ((?x10724 (* 2.0 l_0_9_79)))
 (let ((?x11123 (* ?x10724 l_0_9_82)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10637 (* ?x10636 l_0_9_56)))
 (let ((?x11102 (* ?x10636 l_0_9_52)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10634 (* ?x10633 l_0_9_41)))
 (let ((?x11096 (* ?x10633 l_0_9_37)))
 (let ((?x10390 (* 2.0 l_0_9_25)))
 (let ((?x10391 (* ?x10390 l_0_9_29)))
 (let ((?x10387 (* 2.0 l_0_9_24)))
 (let ((?x10388 (* ?x10387 l_0_9_28)))
 (let ((?x10384 (* 2.0 l_0_9_23)))
 (let ((?x10385 (* ?x10384 l_0_9_27)))
 (let ((?x10382 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x9673 (* ?x9672 l_0_9_24)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x9670 (* ?x9669 l_0_9_23)))
 (let ((?x9666 (* 2.0 l_0_9_19)))
 (let ((?x9667 (* ?x9666 l_0_9_22)))
 (let ((?x11097 (+ (- (- (- (- (+ (+ ?x9667 ?x9670) ?x9673) ?x10382) ?x10385) ?x10388) ?x10391) ?x11096)))
 (let ((?x11104 (+ (- (- (- ?x11097 ?x10634) (* (* 2.0 l_0_9_4) l_0_9_7)) ?x11102) ?x10637)))
 (let ((?x11110 (- (- ?x11104 (* (* 2.0 l_0_9_5) l_0_9_8)) (* (* 2.0 l_0_9_6) l_0_9_9))))
 (let ((?x11116 (- (- ?x11110 (* (* 2.0 l_0_9_67) l_0_9_71)) (* (* 2.0 l_0_9_68) l_0_9_72))))
 (let ((?x11122 (- (- ?x11116 (* (* 2.0 l_0_9_69) l_0_9_73)) (* (* 2.0 l_0_9_70) l_0_9_74))))
 (let ((?x11131 (+ (- (- (- ?x11122 ?x11123) ?x11125) ?x11127) (* (* (/ 1.0 2.0) l_0_9_82) l_0_9_86))))
 (let ((?x11137 (+ (+ ?x11131 (* (* (/ 1.0 2.0) l_0_9_83) l_0_9_87)) (* (* (/ 1.0 2.0) l_0_9_84) l_0_9_88))))
 (= (+ ?x11137 (* (* (/ 1.0 2.0) l_0_9_85) l_0_9_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x10941 (* l_0_9_90 l_0_9_90)))
 (let ((?x11267 (* (/ 1.0 4.0) ?x10941)))
 (let ((?x10939 (* l_0_9_89 l_0_9_89)))
 (let ((?x11265 (* (/ 1.0 4.0) ?x10939)))
 (let ((?x10937 (* l_0_9_88 l_0_9_88)))
 (let ((?x11263 (* (/ 1.0 4.0) ?x10937)))
 (let ((?x10935 (* l_0_9_87 l_0_9_87)))
 (let ((?x11261 (* (/ 1.0 4.0) ?x10935)))
 (let ((?x10933 (* l_0_9_86 l_0_9_86)))
 (let ((?x11259 (* (/ 1.0 4.0) ?x10933)))
 (let ((?x10730 (* 2.0 l_0_9_81)))
 (let ((?x10731 (* ?x10730 l_0_9_88)))
 (let ((?x10727 (* 2.0 l_0_9_80)))
 (let ((?x10728 (* ?x10727 l_0_9_87)))
 (let ((?x10724 (* 2.0 l_0_9_79)))
 (let ((?x10725 (* ?x10724 l_0_9_86)))
 (let ((?x10564 (* l_0_9_75 l_0_9_75)))
 (let ((?x10561 (* l_0_9_74 l_0_9_74)))
 (let ((?x10558 (* l_0_9_73 l_0_9_73)))
 (let ((?x10555 (* l_0_9_72 l_0_9_72)))
 (let ((?x10552 (* l_0_9_71 l_0_9_71)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10637 (* ?x10636 l_0_9_56)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10634 (* ?x10633 l_0_9_41)))
 (let ((?x10549 (* l_0_9_30 l_0_9_30)))
 (let ((?x10546 (* l_0_9_29 l_0_9_29)))
 (let ((?x10543 (* l_0_9_28 l_0_9_28)))
 (let ((?x10540 (* l_0_9_27 l_0_9_27)))
 (let ((?x10537 (* l_0_9_26 l_0_9_26)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x10100 (* ?x9672 l_0_9_28)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x10098 (* ?x9669 l_0_9_27)))
 (let ((?x9666 (* 2.0 l_0_9_19)))
 (let ((?x10096 (* ?x9666 l_0_9_26)))
 (let ((?x11237 (- (* (* (- 2.0) l_0_9_11) l_0_9_4) (* (* 2.0 l_0_9_12) l_0_9_5))))
 (let ((?x11243 (+ (+ (+ (- ?x11237 (* (* 2.0 l_0_9_13) l_0_9_6)) ?x10096) ?x10098) ?x10100)))
 (let ((?x11250 (- (+ (- (- (- (- (- ?x11243 ?x10537) ?x10540) ?x10543) ?x10546) ?x10549) ?x10634) ?x10637)))
 (let ((?x11257 (- (- (- (- (- (- (- ?x11250 ?x10552) ?x10555) ?x10558) ?x10561) ?x10564) ?x10725) ?x10728)))
 (= (+ (+ (+ (+ (+ (- ?x11257 ?x10731) ?x11259) ?x11261) ?x11263) ?x11265) ?x11267) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x11354 (* l_0_9_9 l_0_9_9)))
 (let ((?x11352 (* l_0_9_85 l_0_9_85)))
 (let ((?x11350 (* l_0_9_84 l_0_9_84)))
 (let ((?x11348 (* l_0_9_83 l_0_9_83)))
 (let ((?x11346 (* l_0_9_82 l_0_9_82)))
 (let ((?x11344 (* l_0_9_8 l_0_9_8)))
 (let ((?x11342 (* l_0_9_7 l_0_9_7)))
 (let ((?x11340 (* l_0_9_25 l_0_9_25)))
 (let ((?x11338 (* l_0_9_24 l_0_9_24)))
 (let ((?x11336 (* l_0_9_23 l_0_9_23)))
 (let ((?x11339 (+ (+ (+ (* (- l_0_9_10) l_0_9_10) (* l_0_9_22 l_0_9_22)) ?x11336) ?x11338)))
 (let ((?x11353 (- (- (- (- (- (- (+ ?x11339 ?x11340) ?x11342) ?x11344) ?x11346) ?x11348) ?x11350) ?x11352)))
 (= (- ?x11353 ?x11354) 0.0))))))))))))))
(assert
 (let ((?x10845 (* (* 2.0 l_0_9_85) l_0_9_89)))
 (let ((?x10842 (* (* 2.0 l_0_9_84) l_0_9_88)))
 (let ((?x10839 (* (* 2.0 l_0_9_83) l_0_9_87)))
 (let ((?x10836 (* (* 2.0 l_0_9_82) l_0_9_86)))
 (let ((?x10390 (* 2.0 l_0_9_25)))
 (let ((?x10391 (* ?x10390 l_0_9_29)))
 (let ((?x10387 (* 2.0 l_0_9_24)))
 (let ((?x10388 (* ?x10387 l_0_9_28)))
 (let ((?x10384 (* 2.0 l_0_9_23)))
 (let ((?x10385 (* ?x10384 l_0_9_27)))
 (let ((?x10382 (* (* 2.0 l_0_9_22) l_0_9_26)))
 (let ((?x11387 (- (* (* (- 2.0) l_0_9_10) l_0_9_14) (* (* 2.0 l_0_9_11) l_0_9_7))))
 (let ((?x11391 (- (- ?x11387 (* (* 2.0 l_0_9_12) l_0_9_8)) (* (* 2.0 l_0_9_13) l_0_9_9))))
 (let ((?x11398 (- (- (- (+ (+ (+ (+ ?x11391 ?x10382) ?x10385) ?x10388) ?x10391) ?x10836) ?x10839) ?x10842)))
 (= (- ?x11398 ?x10845) 0.0))))))))))))))))
(assert
 (let ((?x10941 (* l_0_9_90 l_0_9_90)))
 (let ((?x10939 (* l_0_9_89 l_0_9_89)))
 (let ((?x10937 (* l_0_9_88 l_0_9_88)))
 (let ((?x10935 (* l_0_9_87 l_0_9_87)))
 (let ((?x10933 (* l_0_9_86 l_0_9_86)))
 (let ((?x10549 (* l_0_9_30 l_0_9_30)))
 (let ((?x10546 (* l_0_9_29 l_0_9_29)))
 (let ((?x10543 (* l_0_9_28 l_0_9_28)))
 (let ((?x10540 (* l_0_9_27 l_0_9_27)))
 (let ((?x10537 (* l_0_9_26 l_0_9_26)))
 (let ((?x11447 (* l_0_9_15 l_0_9_15)))
 (let ((?x11445 (* l_0_9_14 l_0_9_14)))
 (let ((?x11443 (* l_0_9_13 l_0_9_13)))
 (let ((?x11446 (- (- (- (* (- l_0_9_11) l_0_9_11) (* l_0_9_12 l_0_9_12)) ?x11443) ?x11445)))
 (let ((?x11454 (- (+ (+ (+ (+ (+ (- ?x11446 ?x11447) ?x10537) ?x10540) ?x10543) ?x10546) ?x10549) ?x10933)))
 (= (- (- (- (- ?x11454 ?x10935) ?x10937) ?x10939) ?x10941) 0.0)))))))))))))))))
(assert
 (let ((?x10227 (* l_0_9_76 l_0_9_76)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9876 (* ?x9663 l_0_9_17)))
 (let ((?x11495 (- (* (* (- 2.0) l_0_9_106) l_0_9_107) (* (* 2.0 l_0_9_121) l_0_9_122))))
 (let ((?x11500 (+ (- (+ ?x11495 ?x9876) (* ?x9663 l_0_9_16)) (* (* 8.0 l_0_9_61) l_0_9_62))))
 (= (- (+ ?x11500 ?x10227) (* (* 2.0 l_0_9_91) l_0_9_92)) 0.0)))))))
(assert
 (let ((?x9823 (* 2.0 l_0_9_76)))
 (let ((?x10405 (* ?x9823 l_0_9_82)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10813 (* ?x9883 l_0_9_23)))
 (let ((?x9880 (* 2.0 l_0_9_17)))
 (let ((?x10812 (* ?x9880 l_0_9_22)))
 (let ((?x11531 (- (* (* (- 2.0) l_0_9_107) l_0_9_112) (* (* 2.0 l_0_9_108) l_0_9_113))))
 (let ((?x11535 (- (- ?x11531 (* (* 2.0 l_0_9_122) l_0_9_127)) (* (* 2.0 l_0_9_123) l_0_9_128))))
 (let ((?x11541 (+ (+ (+ (- ?x11535 (* (* 4.0 l_0_9_16) l_0_9_22)) ?x10812) ?x10813) (* (* 8.0 l_0_9_62) l_0_9_67))))
 (let ((?x11546 (- (+ (+ ?x11541 (* (* 8.0 l_0_9_63) l_0_9_68)) ?x10405) (* (* 2.0 l_0_9_92) l_0_9_97))))
 (= (- ?x11546 (* (* 2.0 l_0_9_93) l_0_9_98)) 0.0))))))))))))
(assert
 (let ((?x10647 (* l_0_9_78 l_0_9_78)))
 (let ((?x10642 (* l_0_9_77 l_0_9_77)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10706 (* ?x10636 l_0_9_47)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10704 (* ?x10633 l_0_9_32)))
 (let ((?x11600 (- (* (* (- 2.0) l_0_9_17) l_0_9_17) (* (* 2.0 l_0_9_18) l_0_9_18))))
 (= (+ (+ (- (+ ?x11600 ?x10704) ?x10706) ?x10642) ?x10647) 0.0)))))))))
(assert
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10719 (* ?x10644 l_0_9_80)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10714 (* ?x10639 l_0_9_79)))
 (let ((?x9820 (* l_0_9_63 l_0_9_63)))
 (let ((?x9817 (* l_0_9_62 l_0_9_62)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10999 (* ?x10636 l_0_9_49)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10995 (* ?x10633 l_0_9_34)))
 (let ((?x9812 (* l_0_9_18 l_0_9_18)))
 (let ((?x11622 (- (- (* (* (- 4.0) l_0_9_17) l_0_9_19) (* l_0_9_17 l_0_9_17)) (* (* 4.0 l_0_9_18) l_0_9_20))))
 (let ((?x11630 (+ (+ (- (- (- (+ (- ?x11622 ?x9812) ?x10995) ?x10999) ?x9817) ?x9820) ?x10714) (* (/ 1.0 4.0) (* l_0_9_77 l_0_9_77)))))
 (= (+ (+ ?x11630 ?x10719) (* (/ 1.0 4.0) (* l_0_9_78 l_0_9_78))) 0.0)))))))))))))))
(assert
 (let ((?x10644 (* 2.0 l_0_9_78)))
 (let ((?x10833 (* ?x10644 l_0_9_83)))
 (let ((?x10639 (* 2.0 l_0_9_77)))
 (let ((?x10831 (* ?x10639 l_0_9_82)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x11102 (* ?x10636 l_0_9_52)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x11096 (* ?x10633 l_0_9_37)))
 (let ((?x11664 (- (* (* (- 4.0) l_0_9_17) l_0_9_22) (* (* 4.0 l_0_9_18) l_0_9_23))))
 (= (+ (+ (- (+ ?x11664 ?x11096) ?x11102) ?x10831) ?x10833) 0.0)))))))))))
(assert
 (let ((?x11027 (* l_0_9_81 l_0_9_81)))
 (let ((?x11022 (* l_0_9_80 l_0_9_80)))
 (let ((?x11017 (* l_0_9_79 l_0_9_79)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x9884 (* ?x9883 l_0_9_20)))
 (let ((?x11686 (- (- (* (* (- 2.0) l_0_9_17) l_0_9_19) ?x9884) (* (* 2.0 l_0_9_19) l_0_9_19))))
 (let ((?x11690 (- (- ?x11686 (* (* 2.0 l_0_9_20) l_0_9_20)) (* (* 2.0 l_0_9_21) l_0_9_21))))
 (let ((?x11694 (- (- ?x11690 (* (* 2.0 l_0_9_62) l_0_9_64)) (* (* 2.0 l_0_9_63) l_0_9_65))))
 (let ((?x11698 (+ (+ ?x11694 (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_79)) (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_80))))
 (= (+ (+ (+ ?x11698 ?x11017) ?x11022) ?x11027) 0.0)))))))))))
(assert
 (let ((?x10730 (* 2.0 l_0_9_81)))
 (let ((?x11127 (* ?x10730 l_0_9_84)))
 (let ((?x10727 (* 2.0 l_0_9_80)))
 (let ((?x11125 (* ?x10727 l_0_9_83)))
 (let ((?x10724 (* 2.0 l_0_9_79)))
 (let ((?x11123 (* ?x10724 l_0_9_82)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10706 (* ?x10636 l_0_9_47)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10704 (* ?x10633 l_0_9_32)))
 (let ((?x9883 (* 2.0 l_0_9_18)))
 (let ((?x10813 (* ?x9883 l_0_9_23)))
 (let ((?x11738 (- (- (* (* (- 2.0) l_0_9_17) l_0_9_22) ?x10813) (* (* 4.0 l_0_9_19) l_0_9_22))))
 (let ((?x11742 (- (- ?x11738 (* (* 4.0 l_0_9_20) l_0_9_23)) (* (* 4.0 l_0_9_21) l_0_9_24))))
 (let ((?x11748 (- (- (+ (- ?x11742 ?x10704) ?x10706) (* (* 2.0 l_0_9_62) l_0_9_67)) (* (* 2.0 l_0_9_63) l_0_9_68))))
 (let ((?x11752 (+ (+ ?x11748 (* (* (/ 1.0 2.0) l_0_9_77) l_0_9_82)) (* (* (/ 1.0 2.0) l_0_9_78) l_0_9_83))))
 (= (+ (+ (+ ?x11752 ?x11123) ?x11125) ?x11127) 0.0))))))))))))))))))
(assert
 (let ((?x11352 (* l_0_9_85 l_0_9_85)))
 (let ((?x11350 (* l_0_9_84 l_0_9_84)))
 (let ((?x11348 (* l_0_9_83 l_0_9_83)))
 (let ((?x11346 (* l_0_9_82 l_0_9_82)))
 (let ((?x11796 (- (* (* (- 2.0) l_0_9_22) l_0_9_22) (* (* 2.0 l_0_9_23) l_0_9_23))))
 (let ((?x11800 (- (- ?x11796 (* (* 2.0 l_0_9_24) l_0_9_24)) (* (* 2.0 l_0_9_25) l_0_9_25))))
 (= (+ (+ (+ (+ ?x11800 ?x11346) ?x11348) ?x11350) ?x11352) 0.0))))))))
(assert
 (let ((?x10227 (* l_0_9_76 l_0_9_76)))
 (let ((?x11834 (* (/ 1.0 4.0) ?x10227)))
 (let ((?x11832 (* l_0_9_61 l_0_9_61)))
 (let ((?x10222 (* l_0_9_16 l_0_9_16)))
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9988 (* ?x9663 l_0_9_19)))
 (let ((?x11827 (- (* (* (- 2.0) l_0_9_106) l_0_9_109) (* (* 2.0 l_0_9_121) l_0_9_124))))
 (let ((?x11833 (- (+ (- (+ ?x11827 ?x9988) ?x10222) (* (* 8.0 l_0_9_61) l_0_9_64)) ?x11832)))
 (= (- (+ ?x11833 ?x11834) (* (* 2.0 l_0_9_91) l_0_9_94)) 0.0))))))))))
(assert
 (let ((?x10007 (* l_0_9_66 l_0_9_66)))
 (let ((?x10004 (* l_0_9_65 l_0_9_65)))
 (let ((?x10001 (* l_0_9_64 l_0_9_64)))
 (let ((?x9996 (* l_0_9_21 l_0_9_21)))
 (let ((?x11868 (- (- (- (* (- l_0_9_19) l_0_9_19) (* l_0_9_20 l_0_9_20)) ?x9996) ?x10001)))
 (let ((?x11874 (+ (+ (- (- ?x11868 ?x10004) ?x10007) (* (/ 1.0 4.0) (* l_0_9_79 l_0_9_79))) (* (/ 1.0 4.0) (* l_0_9_80 l_0_9_80)))))
 (= (+ ?x11874 (* (/ 1.0 4.0) (* l_0_9_81 l_0_9_81))) 0.0))))))))
(assert
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x10999 (* ?x10636 l_0_9_49)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x10995 (* ?x10633 l_0_9_34)))
 (let ((?x9672 (* 2.0 l_0_9_21)))
 (let ((?x9673 (* ?x9672 l_0_9_24)))
 (let ((?x9669 (* 2.0 l_0_9_20)))
 (let ((?x9670 (* ?x9669 l_0_9_23)))
 (let ((?x11900 (+ (- (- (- (* (* (- 2.0) l_0_9_19) l_0_9_22) ?x9670) ?x9673) ?x10995) ?x10999)))
 (let ((?x11904 (- (- ?x11900 (* (* 2.0 l_0_9_64) l_0_9_67)) (* (* 2.0 l_0_9_65) l_0_9_68))))
 (let ((?x11908 (+ (- ?x11904 (* (* 2.0 l_0_9_66) l_0_9_69)) (* (* (/ 1.0 2.0) l_0_9_79) l_0_9_82))))
 (let ((?x11912 (+ (+ ?x11908 (* (* (/ 1.0 2.0) l_0_9_80) l_0_9_83)) (* (* (/ 1.0 2.0) l_0_9_81) l_0_9_84))))
 (= ?x11912 0.0))))))))))))))
(assert
 (let ((?x11957 (* l_0_9_70 l_0_9_70)))
 (let ((?x11955 (* l_0_9_69 l_0_9_69)))
 (let ((?x11953 (* l_0_9_68 l_0_9_68)))
 (let ((?x11951 (* l_0_9_67 l_0_9_67)))
 (let ((?x10636 (* 2.0 l_0_9_46)))
 (let ((?x11102 (* ?x10636 l_0_9_52)))
 (let ((?x10633 (* 2.0 l_0_9_31)))
 (let ((?x11096 (* ?x10633 l_0_9_37)))
 (let ((?x11340 (* l_0_9_25 l_0_9_25)))
 (let ((?x11338 (* l_0_9_24 l_0_9_24)))
 (let ((?x11948 (- (- (- (* (- l_0_9_22) l_0_9_22) (* l_0_9_23 l_0_9_23)) ?x11338) ?x11340)))
 (let ((?x11960 (+ (- (- (- (- (+ (- ?x11948 ?x11096) ?x11102) ?x11951) ?x11953) ?x11955) ?x11957) (* (/ 1.0 4.0) (* l_0_9_82 l_0_9_82)))))
 (let ((?x11964 (+ (+ ?x11960 (* (/ 1.0 4.0) (* l_0_9_83 l_0_9_83))) (* (/ 1.0 4.0) (* l_0_9_84 l_0_9_84)))))
 (= (+ ?x11964 (* (/ 1.0 4.0) (* l_0_9_85 l_0_9_85))) 0.0)))))))))))))))
(assert
 (let ((?x12008 (* l_0_9_91 l_0_9_91)))
 (let ((?x11832 (* l_0_9_61 l_0_9_61)))
 (let ((?x12006 (* 4.0 ?x11832)))
 (let ((?x12005 (+ (- (* (- l_0_9_106) l_0_9_106) (* l_0_9_121 l_0_9_121)) (* 1.0 (* l_0_9_16 l_0_9_16)))))
 (= (- (+ ?x12005 ?x12006) ?x12008) 0.0))))))
(assert
 (let ((?x9663 (* 2.0 l_0_9_16)))
 (let ((?x9664 (* ?x9663 l_0_9_22)))
 (let ((?x12024 (- (* (* (- 2.0) l_0_9_106) l_0_9_112) (* (* 2.0 l_0_9_121) l_0_9_127))))
 (let ((?x12029 (- (+ (+ ?x12024 ?x9664) (* (* 8.0 l_0_9_61) l_0_9_67)) (* (* 2.0 l_0_9_91) l_0_9_97))))
 (= ?x12029 0.0))))))
(assert
 (let ((?x12086 (* l_0_9_99 l_0_9_99)))
 (let ((?x12084 (* l_0_9_98 l_0_9_98)))
 (let ((?x12082 (* l_0_9_97 l_0_9_97)))
 (let ((?x11957 (* l_0_9_70 l_0_9_70)))
 (let ((?x12080 (* 4.0 ?x11957)))
 (let ((?x11955 (* l_0_9_69 l_0_9_69)))
 (let ((?x12078 (* 4.0 ?x11955)))
 (let ((?x11953 (* l_0_9_68 l_0_9_68)))
 (let ((?x12076 (* 4.0 ?x11953)))
 (let ((?x11951 (* l_0_9_67 l_0_9_67)))
 (let ((?x12074 (* 4.0 ?x11951)))
 (let ((?x12064 (* l_0_9_130 l_0_9_130)))
 (let ((?x12062 (* l_0_9_129 l_0_9_129)))
 (let ((?x12060 (* l_0_9_128 l_0_9_128)))
 (let ((?x12058 (* l_0_9_127 l_0_9_127)))
 (let ((?x12056 (* l_0_9_115 l_0_9_115)))
 (let ((?x12054 (* l_0_9_114 l_0_9_114)))
 (let ((?x12052 (* l_0_9_113 l_0_9_113)))
 (let ((?x12053 (- (- (* (- l_0_9_100) l_0_9_100) (* l_0_9_112 l_0_9_112)) ?x12052)))
 (let ((?x12067 (+ (- (- (- (- (- (- ?x12053 ?x12054) ?x12056) ?x12058) ?x12060) ?x12062) ?x12064) (* 1.0 (* l_0_9_22 l_0_9_22)))))
 (let ((?x12071 (+ (+ ?x12067 (* 1.0 (* l_0_9_23 l_0_9_23))) (* 1.0 (* l_0_9_24 l_0_9_24)))))
 (let ((?x12079 (+ (+ (+ (+ ?x12071 (* 1.0 (* l_0_9_25 l_0_9_25))) ?x12074) ?x12076) ?x12078)))
 (= (- (- (- (+ ?x12079 ?x12080) ?x12082) ?x12084) ?x12086) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12150 (* 2.0 l_0_9_51)))
 (let ((?x12151 (* ?x12150 l_0_9_54)))
 (let ((?x12147 (* 2.0 l_0_9_50)))
 (let ((?x12148 (* ?x12147 l_0_9_53)))
 (let ((?x12144 (* 2.0 l_0_9_49)))
 (let ((?x12145 (* ?x12144 l_0_9_52)))
 (let ((?x12142 (* l_0_9_48 l_0_9_48)))
 (let ((?x12140 (* l_0_9_47 l_0_9_47)))
 (let ((?x12137 (* 2.0 l_0_9_36)))
 (let ((?x12138 (* ?x12137 l_0_9_39)))
 (let ((?x12134 (* 2.0 l_0_9_35)))
 (let ((?x12135 (* ?x12134 l_0_9_38)))
 (let ((?x12131 (* 2.0 l_0_9_34)))
 (let ((?x12132 (* ?x12131 l_0_9_37)))
 (let ((?x12136 (+ (+ (- (* (- l_0_9_32) l_0_9_32) (* l_0_9_33 l_0_9_33)) ?x12132) ?x12135)))
 (= (- (- (- (+ (+ (+ ?x12136 ?x12138) ?x12140) ?x12142) ?x12145) ?x12148) ?x12151) 0.0)))))))))))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12201 (* ?x12200 l_0_9_50)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12198 (* ?x12197 l_0_9_49)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12195 (* ?x12194 l_0_9_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_32) l_0_9_34) ?x12195) ?x12198) ?x12201) 0.0))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12224 (* ?x12200 l_0_9_53)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12222 (* ?x12197 l_0_9_52)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12215 (* ?x12194 l_0_9_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_9_32) l_0_9_37) ?x12215) ?x12222) ?x12224) 0.0))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12253 (* ?x12200 l_0_9_57)))
 (let ((?x12224 (* ?x12200 l_0_9_53)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12250 (* ?x12197 l_0_9_56)))
 (let ((?x12222 (* ?x12197 l_0_9_52)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12247 (* ?x12194 l_0_9_42)))
 (let ((?x12215 (* ?x12194 l_0_9_38)))
 (let ((?x12236 (* 2.0 l_0_9_32)))
 (let ((?x12239 (* ?x12236 l_0_9_41)))
 (let ((?x12238 (* ?x12236 l_0_9_37)))
 (let ((?x12254 (+ (- (+ (- (- (+ (- ?x12238 ?x12239) ?x12215) ?x12247) ?x12222) ?x12250) ?x12224) ?x12253)))
 (= ?x12254 0.0)))))))))))))))
(assert
 (let ((?x12294 (* l_0_9_51 l_0_9_51)))
 (let ((?x12292 (* l_0_9_50 l_0_9_50)))
 (let ((?x12290 (* l_0_9_49 l_0_9_49)))
 (let ((?x12288 (* l_0_9_36 l_0_9_36)))
 (let ((?x12291 (+ (- (- (* (- l_0_9_34) l_0_9_34) (* l_0_9_35 l_0_9_35)) ?x12288) ?x12290)))
 (= (+ (+ ?x12291 ?x12292) ?x12294) 0.0)))))))
(assert
 (let ((?x12150 (* 2.0 l_0_9_51)))
 (let ((?x12151 (* ?x12150 l_0_9_54)))
 (let ((?x12147 (* 2.0 l_0_9_50)))
 (let ((?x12148 (* ?x12147 l_0_9_53)))
 (let ((?x12144 (* 2.0 l_0_9_49)))
 (let ((?x12145 (* ?x12144 l_0_9_52)))
 (let ((?x12137 (* 2.0 l_0_9_36)))
 (let ((?x12138 (* ?x12137 l_0_9_39)))
 (let ((?x12134 (* 2.0 l_0_9_35)))
 (let ((?x12135 (* ?x12134 l_0_9_38)))
 (let ((?x12316 (+ (+ (- (- (* (* (- 2.0) l_0_9_34) l_0_9_37) ?x12135) ?x12138) ?x12145) ?x12148)))
 (= (+ ?x12316 ?x12151) 0.0)))))))))))))
(assert
 (let ((?x12150 (* 2.0 l_0_9_51)))
 (let ((?x12342 (* ?x12150 l_0_9_58)))
 (let ((?x12151 (* ?x12150 l_0_9_54)))
 (let ((?x12147 (* 2.0 l_0_9_50)))
 (let ((?x12339 (* ?x12147 l_0_9_57)))
 (let ((?x12148 (* ?x12147 l_0_9_53)))
 (let ((?x12144 (* 2.0 l_0_9_49)))
 (let ((?x12336 (* ?x12144 l_0_9_56)))
 (let ((?x12145 (* ?x12144 l_0_9_52)))
 (let ((?x12137 (* 2.0 l_0_9_36)))
 (let ((?x12333 (* ?x12137 l_0_9_43)))
 (let ((?x12138 (* ?x12137 l_0_9_39)))
 (let ((?x12134 (* 2.0 l_0_9_35)))
 (let ((?x12330 (* ?x12134 l_0_9_42)))
 (let ((?x12135 (* ?x12134 l_0_9_38)))
 (let ((?x12131 (* 2.0 l_0_9_34)))
 (let ((?x12325 (* ?x12131 l_0_9_41)))
 (let ((?x12132 (* ?x12131 l_0_9_37)))
 (let ((?x12337 (+ (- (- (+ (- (+ (- ?x12132 ?x12325) ?x12135) ?x12330) ?x12138) ?x12333) ?x12145) ?x12336)))
 (= (+ (- (+ (- ?x12337 ?x12148) ?x12339) ?x12151) ?x12342) 0.0)))))))))))))))))))))
(assert
 (let ((?x12395 (* l_0_9_55 l_0_9_55)))
 (let ((?x12393 (* l_0_9_54 l_0_9_54)))
 (let ((?x12391 (* l_0_9_53 l_0_9_53)))
 (let ((?x12389 (* l_0_9_52 l_0_9_52)))
 (let ((?x12387 (* l_0_9_40 l_0_9_40)))
 (let ((?x12385 (* l_0_9_39 l_0_9_39)))
 (let ((?x12388 (- (- (- (* (- l_0_9_37) l_0_9_37) (* l_0_9_38 l_0_9_38)) ?x12385) ?x12387)))
 (= (+ (+ (+ (+ ?x12388 ?x12389) ?x12391) ?x12393) ?x12395) 0.0)))))))))
(assert
 (let ((?x12395 (* l_0_9_55 l_0_9_55)))
 (let ((?x12444 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12393 (* l_0_9_54 l_0_9_54)))
 (let ((?x12440 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12391 (* l_0_9_53 l_0_9_53)))
 (let ((?x12436 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12389 (* l_0_9_52 l_0_9_52)))
 (let ((?x12432 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12387 (* l_0_9_40 l_0_9_40)))
 (let ((?x12428 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12385 (* l_0_9_39 l_0_9_39)))
 (let ((?x12424 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12383 (* l_0_9_38 l_0_9_38)))
 (let ((?x12420 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12421 (- (+ (* (* (- 2.0) l_0_9_37) l_0_9_41) (* l_0_9_37 l_0_9_37)) ?x12420)))
 (let ((?x12434 (- (+ (+ (- (+ (- (+ ?x12421 ?x12383) ?x12424) ?x12385) ?x12428) ?x12387) ?x12432) ?x12389)))
 (= (- (+ (- (+ (- (+ ?x12434 ?x12436) ?x12391) ?x12440) ?x12393) ?x12444) ?x12395) 0.0))))))))))))))))))
(assert
 (let ((?x12519 (* l_0_9_60 l_0_9_60)))
 (let ((?x12517 (* l_0_9_59 l_0_9_59)))
 (let ((?x12515 (* l_0_9_58 l_0_9_58)))
 (let ((?x12513 (* l_0_9_57 l_0_9_57)))
 (let ((?x12511 (* l_0_9_56 l_0_9_56)))
 (let ((?x12444 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12440 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12436 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12432 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12505 (* l_0_9_45 l_0_9_45)))
 (let ((?x12503 (* l_0_9_44 l_0_9_44)))
 (let ((?x12501 (* l_0_9_43 l_0_9_43)))
 (let ((?x12499 (* l_0_9_42 l_0_9_42)))
 (let ((?x12497 (* l_0_9_41 l_0_9_41)))
 (let ((?x12428 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12424 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12420 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12496 (+ (+ (+ (* (* 2.0 l_0_9_37) l_0_9_41) ?x12420) ?x12424) ?x12428)))
 (let ((?x12508 (- (- (- (- (- (- (- ?x12496 ?x12497) ?x12499) ?x12501) ?x12503) ?x12505) ?x12432) ?x12436)))
 (let ((?x12520 (+ (+ (+ (+ (+ (- (- ?x12508 ?x12440) ?x12444) ?x12511) ?x12513) ?x12515) ?x12517) ?x12519)))
 (= ?x12520 0.0))))))))))))))))))))))
(assert
 (let ((?x12142 (* l_0_9_48 l_0_9_48)))
 (let ((?x12140 (* l_0_9_47 l_0_9_47)))
 (let ((?x12129 (* l_0_9_33 l_0_9_33)))
 (let ((?x12155 (* l_0_9_32 l_0_9_32)))
 (let ((?x12557 (+ ?x12155 ?x12129)))
 (= (- (- ?x12557 ?x12140) ?x12142) 0.0)))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12201 (* ?x12200 l_0_9_50)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12198 (* ?x12197 l_0_9_49)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12195 (* ?x12194 l_0_9_35)))
 (= (- (- (+ (* (* 2.0 l_0_9_32) l_0_9_34) ?x12195) ?x12198) ?x12201) 0.0))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12224 (* ?x12200 l_0_9_53)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12222 (* ?x12197 l_0_9_52)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12215 (* ?x12194 l_0_9_38)))
 (let ((?x12236 (* 2.0 l_0_9_32)))
 (let ((?x12238 (* ?x12236 l_0_9_37)))
 (= (- (- (+ ?x12238 ?x12215) ?x12222) ?x12224) 0.0))))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12253 (* ?x12200 l_0_9_57)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12250 (* ?x12197 l_0_9_56)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12247 (* ?x12194 l_0_9_42)))
 (let ((?x12236 (* 2.0 l_0_9_32)))
 (let ((?x12239 (* ?x12236 l_0_9_41)))
 (= (- (- (+ ?x12239 ?x12247) ?x12250) ?x12253) 0.0))))))))))
(assert
 (let ((?x12294 (* l_0_9_51 l_0_9_51)))
 (let ((?x12292 (* l_0_9_50 l_0_9_50)))
 (let ((?x12290 (* l_0_9_49 l_0_9_49)))
 (let ((?x12288 (* l_0_9_36 l_0_9_36)))
 (let ((?x12604 (- (+ (+ (* l_0_9_34 l_0_9_34) (* l_0_9_35 l_0_9_35)) ?x12288) ?x12290)))
 (= (- (- ?x12604 ?x12292) ?x12294) 0.0)))))))
(assert
 (let ((?x12150 (* 2.0 l_0_9_51)))
 (let ((?x12342 (* ?x12150 l_0_9_58)))
 (let ((?x12147 (* 2.0 l_0_9_50)))
 (let ((?x12339 (* ?x12147 l_0_9_57)))
 (let ((?x12144 (* 2.0 l_0_9_49)))
 (let ((?x12336 (* ?x12144 l_0_9_56)))
 (let ((?x12142 (* l_0_9_48 l_0_9_48)))
 (let ((?x12140 (* l_0_9_47 l_0_9_47)))
 (let ((?x12137 (* 2.0 l_0_9_36)))
 (let ((?x12333 (* ?x12137 l_0_9_43)))
 (let ((?x12134 (* 2.0 l_0_9_35)))
 (let ((?x12330 (* ?x12134 l_0_9_42)))
 (let ((?x12131 (* 2.0 l_0_9_34)))
 (let ((?x12325 (* ?x12131 l_0_9_41)))
 (let ((?x12129 (* l_0_9_33 l_0_9_33)))
 (let ((?x12155 (* l_0_9_32 l_0_9_32)))
 (let ((?x12557 (+ ?x12155 ?x12129)))
 (let ((?x12620 (- (- (- (- (+ (+ (+ ?x12557 ?x12325) ?x12330) ?x12333) ?x12140) ?x12142) ?x12336) ?x12339)))
 (= (- ?x12620 ?x12342) 0.0))))))))))))))))))))
(assert
 (let ((?x12395 (* l_0_9_55 l_0_9_55)))
 (let ((?x12393 (* l_0_9_54 l_0_9_54)))
 (let ((?x12391 (* l_0_9_53 l_0_9_53)))
 (let ((?x12389 (* l_0_9_52 l_0_9_52)))
 (let ((?x12387 (* l_0_9_40 l_0_9_40)))
 (let ((?x12385 (* l_0_9_39 l_0_9_39)))
 (let ((?x12643 (+ (+ (+ (* l_0_9_37 l_0_9_37) (* l_0_9_38 l_0_9_38)) ?x12385) ?x12387)))
 (= (- (- (- (- ?x12643 ?x12389) ?x12391) ?x12393) ?x12395) 0.0)))))))))
(assert
 (let ((?x12444 (* (* 2.0 l_0_9_55) l_0_9_59)))
 (let ((?x12440 (* (* 2.0 l_0_9_54) l_0_9_58)))
 (let ((?x12436 (* (* 2.0 l_0_9_53) l_0_9_57)))
 (let ((?x12432 (* (* 2.0 l_0_9_52) l_0_9_56)))
 (let ((?x12428 (* (* 2.0 l_0_9_40) l_0_9_44)))
 (let ((?x12424 (* (* 2.0 l_0_9_39) l_0_9_43)))
 (let ((?x12420 (* (* 2.0 l_0_9_38) l_0_9_42)))
 (let ((?x12496 (+ (+ (+ (* (* 2.0 l_0_9_37) l_0_9_41) ?x12420) ?x12424) ?x12428)))
 (= (- (- (- (- ?x12496 ?x12432) ?x12436) ?x12440) ?x12444) 0.0))))))))))
(assert
 (let ((?x12519 (* l_0_9_60 l_0_9_60)))
 (let ((?x12517 (* l_0_9_59 l_0_9_59)))
 (let ((?x12515 (* l_0_9_58 l_0_9_58)))
 (let ((?x12513 (* l_0_9_57 l_0_9_57)))
 (let ((?x12511 (* l_0_9_56 l_0_9_56)))
 (let ((?x12505 (* l_0_9_45 l_0_9_45)))
 (let ((?x12503 (* l_0_9_44 l_0_9_44)))
 (let ((?x12501 (* l_0_9_43 l_0_9_43)))
 (let ((?x12673 (+ (+ (+ (* l_0_9_41 l_0_9_41) (* l_0_9_42 l_0_9_42)) ?x12501) ?x12503)))
 (= (- (- (- (- (- (+ ?x12673 ?x12505) ?x12511) ?x12513) ?x12515) ?x12517) ?x12519) 0.0)))))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12201 (* ?x12200 l_0_9_50)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12198 (* ?x12197 l_0_9_49)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12195 (* ?x12194 l_0_9_35)))
 (= (- (- (+ (* (* 2.0 l_0_9_32) l_0_9_34) ?x12195) ?x12198) ?x12201) 0.0))))))))
(assert
 (let ((?x12200 (* 2.0 l_0_9_48)))
 (let ((?x12253 (* ?x12200 l_0_9_57)))
 (let ((?x12197 (* 2.0 l_0_9_47)))
 (let ((?x12250 (* ?x12197 l_0_9_56)))
 (let ((?x12194 (* 2.0 l_0_9_33)))
 (let ((?x12247 (* ?x12194 l_0_9_42)))
 (let ((?x12236 (* 2.0 l_0_9_32)))
 (let ((?x12239 (* ?x12236 l_0_9_41)))
 (= (- (- (+ ?x12239 ?x12247) ?x12250) ?x12253) 0.0))))))))))
(assert
 (let ((?x12294 (* l_0_9_51 l_0_9_51)))
 (let ((?x12292 (* l_0_9_50 l_0_9_50)))
 (let ((?x12290 (* l_0_9_49 l_0_9_49)))
 (let ((?x12288 (* l_0_9_36 l_0_9_36)))
 (let ((?x12604 (- (+ (+ (* l_0_9_34 l_0_9_34) (* l_0_9_35 l_0_9_35)) ?x12288) ?x12290)))
 (= (- (- ?x12604 ?x12292) ?x12294) 0.0)))))))
(assert
 (let ((?x12150 (* 2.0 l_0_9_51)))
 (let ((?x12342 (* ?x12150 l_0_9_58)))
 (let ((?x12147 (* 2.0 l_0_9_50)))
 (let ((?x12339 (* ?x12147 l_0_9_57)))
 (let ((?x12144 (* 2.0 l_0_9_49)))
 (let ((?x12336 (* ?x12144 l_0_9_56)))
 (let ((?x12137 (* 2.0 l_0_9_36)))
 (let ((?x12333 (* ?x12137 l_0_9_43)))
 (let ((?x12134 (* 2.0 l_0_9_35)))
 (let ((?x12330 (* ?x12134 l_0_9_42)))
 (let ((?x12131 (* 2.0 l_0_9_34)))
 (let ((?x12325 (* ?x12131 l_0_9_41)))
 (= (- (- (- (+ (+ ?x12325 ?x12330) ?x12333) ?x12336) ?x12339) ?x12342) 0.0))))))))))))))
(assert
 (let ((?x12519 (* l_0_9_60 l_0_9_60)))
 (let ((?x12517 (* l_0_9_59 l_0_9_59)))
 (let ((?x12515 (* l_0_9_58 l_0_9_58)))
 (let ((?x12513 (* l_0_9_57 l_0_9_57)))
 (let ((?x12511 (* l_0_9_56 l_0_9_56)))
 (let ((?x12505 (* l_0_9_45 l_0_9_45)))
 (let ((?x12503 (* l_0_9_44 l_0_9_44)))
 (let ((?x12501 (* l_0_9_43 l_0_9_43)))
 (let ((?x12673 (+ (+ (+ (* l_0_9_41 l_0_9_41) (* l_0_9_42 l_0_9_42)) ?x12501) ?x12503)))
 (= (- (- (- (- (- (+ ?x12673 ?x12505) ?x12511) ?x12513) ?x12515) ?x12517) ?x12519) 0.0)))))))))))
(assert
 (>= l_0_9_1 0.0))
(assert
 (>= l_0_9_3 0.0))
(assert
 (>= l_0_9_6 0.0))
(assert
 (>= l_0_9_10 0.0))
(assert
 (>= l_0_9_15 0.0))
(assert
 (>= l_0_9_16 0.0))
(assert
 (>= l_0_9_18 0.0))
(assert
 (>= l_0_9_21 0.0))
(assert
 (>= l_0_9_25 0.0))
(assert
 (>= l_0_9_30 0.0))
(assert
 (>= l_0_9_31 0.0))
(assert
 (>= l_0_9_33 0.0))
(assert
 (>= l_0_9_36 0.0))
(assert
 (>= l_0_9_40 0.0))
(assert
 (>= l_0_9_45 0.0))
(assert
 (>= l_0_9_46 0.0))
(assert
 (>= l_0_9_48 0.0))
(assert
 (>= l_0_9_51 0.0))
(assert
 (>= l_0_9_55 0.0))
(assert
 (>= l_0_9_60 0.0))
(assert
 (>= l_0_9_61 0.0))
(assert
 (>= l_0_9_63 0.0))
(assert
 (>= l_0_9_66 0.0))
(assert
 (>= l_0_9_70 0.0))
(assert
 (>= l_0_9_75 0.0))
(assert
 (>= l_0_9_76 0.0))
(assert
 (>= l_0_9_78 0.0))
(assert
 (>= l_0_9_81 0.0))
(assert
 (>= l_0_9_85 0.0))
(assert
 (>= l_0_9_90 0.0))
(assert
 (>= l_0_9_91 0.0))
(assert
 (>= l_0_9_93 0.0))
(assert
 (>= l_0_9_96 0.0))
(assert
 (>= l_0_9_100 0.0))
(assert
 (>= l_0_9_105 0.0))
(assert
 (>= l_0_9_106 0.0))
(assert
 (>= l_0_9_108 0.0))
(assert
 (>= l_0_9_111 0.0))
(assert
 (>= l_0_9_115 0.0))
(assert
 (>= l_0_9_120 0.0))
(assert
 (>= l_0_9_121 0.0))
(assert
 (>= l_0_9_123 0.0))
(assert
 (>= l_0_9_126 0.0))
(assert
 (>= l_0_9_130 0.0))
(assert
 (>= l_0_9_135 0.0))
(assert
 (let ((?x12793 (* l_0_10_93 l_0_10_93)))
 (let ((?x12791 (* l_0_10_92 l_0_10_92)))
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x12789 (* ?x12788 l_0_10_77)))
 (let ((?x12780 (* l_0_10_46 l_0_10_46)))
 (let ((?x12778 (* l_0_10_31 l_0_10_31)))
 (let ((?x12767 (* l_0_10_138 l_0_10_138)))
 (let ((?x12765 (* l_0_10_137 l_0_10_137)))
 (let ((?x12763 (* l_0_10_123 l_0_10_123)))
 (let ((?x12761 (* l_0_10_122 l_0_10_122)))
 (let ((?x12762 (- (- (* (- l_0_10_107) l_0_10_107) (* l_0_10_108 l_0_10_108)) ?x12761)))
 (let ((?x12771 (- (- (- (- ?x12762 ?x12763) ?x12765) ?x12767) (* (* 4.0 l_0_10_16) l_0_10_17))))
 (let ((?x12777 (+ (+ ?x12771 (* 1.0 (* l_0_10_17 l_0_10_17))) (* 1.0 (* l_0_10_18 l_0_10_18)))))
 (let ((?x12787 (+ (+ (- (+ ?x12777 ?x12778) ?x12780) (* 4.0 (* l_0_10_62 l_0_10_62))) (* 4.0 (* l_0_10_63 l_0_10_63)))))
 (= (+ (- (- (+ ?x12787 ?x12789) ?x12791) ?x12793) (/ 1.0 4.0)) 0.0))))))))))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x12882 (* ?x12788 l_0_10_79)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x12868 (* ?x12867 l_0_10_20)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x12865 (* ?x12864 l_0_10_19)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x12860 (* ?x12859 l_0_10_17)))
 (let ((?x12846 (- (* (* (- 2.0) l_0_10_107) l_0_10_109) (* (* 2.0 l_0_10_108) l_0_10_110))))
 (let ((?x12852 (- (- ?x12846 (* (* 2.0 l_0_10_122) l_0_10_124)) (* (* 2.0 l_0_10_123) l_0_10_125))))
 (let ((?x12858 (- (- ?x12852 (* (* 2.0 l_0_10_137) l_0_10_139)) (* (* 2.0 l_0_10_138) l_0_10_140))))
 (let ((?x12869 (+ (+ (- (- ?x12858 ?x12860) (* (* 4.0 l_0_10_16) l_0_10_19)) ?x12865) ?x12868)))
 (let ((?x12875 (+ (- ?x12869 (* (* 2.0 l_0_10_61) l_0_10_62)) (* (* 8.0 l_0_10_62) l_0_10_64))))
 (let ((?x12881 (+ (+ ?x12875 (* (* 8.0 l_0_10_63) l_0_10_65)) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_77))))
 (let ((?x12889 (- (- (+ ?x12881 ?x12882) (* (* 2.0 l_0_10_92) l_0_10_94)) (* (* 2.0 l_0_10_93) l_0_10_95))))
 (= ?x12889 0.0)))))))))))))))))
(assert
 (let ((?x13020 (* l_0_10_96 l_0_10_96)))
 (let ((?x13018 (* l_0_10_95 l_0_10_95)))
 (let ((?x13016 (* l_0_10_94 l_0_10_94)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x12992 (* ?x12859 l_0_10_19)))
 (let ((?x12990 (* l_0_10_141 l_0_10_141)))
 (let ((?x12988 (* l_0_10_140 l_0_10_140)))
 (let ((?x12986 (* l_0_10_139 l_0_10_139)))
 (let ((?x12984 (* l_0_10_126 l_0_10_126)))
 (let ((?x12982 (* l_0_10_125 l_0_10_125)))
 (let ((?x12980 (* l_0_10_124 l_0_10_124)))
 (let ((?x12978 (* l_0_10_111 l_0_10_111)))
 (let ((?x12979 (- (- (* (- l_0_10_109) l_0_10_109) (* l_0_10_110 l_0_10_110)) ?x12978)))
 (let ((?x12993 (- (- (- (- (- (- (- ?x12979 ?x12980) ?x12982) ?x12984) ?x12986) ?x12988) ?x12990) ?x12992)))
 (let ((?x12999 (+ (+ ?x12993 (* 1.0 (* l_0_10_19 l_0_10_19))) (* 1.0 (* l_0_10_20 l_0_10_20)))))
 (let ((?x13004 (- (+ ?x12999 (* 1.0 (* l_0_10_21 l_0_10_21))) (* (* 2.0 l_0_10_61) l_0_10_64))))
 (let ((?x13010 (+ (+ ?x13004 (* 4.0 (* l_0_10_64 l_0_10_64))) (* 4.0 (* l_0_10_65 l_0_10_65)))))
 (let ((?x13015 (+ (+ ?x13010 (* 4.0 (* l_0_10_66 l_0_10_66))) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_79))))
 (= (- (- (- ?x13015 ?x13016) ?x13018) ?x13020) 0.0))))))))))))))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x12882 (* ?x12788 l_0_10_79)))
 (let ((?x12780 (* l_0_10_46 l_0_10_46)))
 (let ((?x12778 (* l_0_10_31 l_0_10_31)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13093 (* ?x13092 l_0_10_28)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13090 (* ?x13089 l_0_10_27)))
 (let ((?x13086 (* 2.0 l_0_10_19)))
 (let ((?x13087 (* ?x13086 l_0_10_26)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13084 (* ?x12859 l_0_10_26)))
 (let ((?x12992 (* ?x12859 l_0_10_19)))
 (let ((?x13049 (- (* (* (- 2.0) l_0_10_1) l_0_10_4) (* (* 2.0 l_0_10_101) l_0_10_94))))
 (let ((?x13055 (- (- ?x13049 (* (* 2.0 l_0_10_102) l_0_10_95)) (* (* 2.0 l_0_10_103) l_0_10_96))))
 (let ((?x13061 (- (- ?x13055 (* (* 2.0 l_0_10_109) l_0_10_116)) (* (* 2.0 l_0_10_110) l_0_10_117))))
 (let ((?x13067 (- (- ?x13061 (* (* 2.0 l_0_10_111) l_0_10_118)) (* (* 2.0 l_0_10_124) l_0_10_131))))
 (let ((?x13073 (- (- ?x13067 (* (* 2.0 l_0_10_125) l_0_10_132)) (* (* 2.0 l_0_10_126) l_0_10_133))))
 (let ((?x13079 (- (- ?x13073 (* (* 2.0 l_0_10_139) l_0_10_146)) (* (* 2.0 l_0_10_140) l_0_10_147))))
 (let ((?x13088 (+ (- (+ (- ?x13079 (* (* 2.0 l_0_10_141) l_0_10_148)) ?x12992) ?x13084) ?x13087)))
 (let ((?x13098 (- (- (+ (+ (+ ?x13088 ?x13090) ?x13093) ?x12778) ?x12780) (* (* 2.0 l_0_10_61) l_0_10_71))))
 (let ((?x13104 (+ (+ ?x13098 (* (* 8.0 l_0_10_64) l_0_10_71)) (* (* 8.0 l_0_10_65) l_0_10_72))))
 (let ((?x13110 (+ (- (+ ?x13104 (* (* 8.0 l_0_10_66) l_0_10_73)) ?x12882) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_86))))
 (= (+ ?x13110 (/ 1.0 4.0)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x12780 (* l_0_10_46 l_0_10_46)))
 (let ((?x12778 (* l_0_10_31 l_0_10_31)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13191 (* ?x13092 l_0_10_24)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13189 (* ?x13089 l_0_10_23)))
 (let ((?x13086 (* 2.0 l_0_10_19)))
 (let ((?x13187 (* ?x13086 l_0_10_22)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13185 (* ?x12859 l_0_10_22)))
 (let ((?x13170 (- (* (* (- 2.0) l_0_10_109) l_0_10_112) (* (* 2.0 l_0_10_110) l_0_10_113))))
 (let ((?x13174 (- (- ?x13170 (* (* 2.0 l_0_10_111) l_0_10_114)) (* (* 2.0 l_0_10_124) l_0_10_127))))
 (let ((?x13178 (- (- ?x13174 (* (* 2.0 l_0_10_125) l_0_10_128)) (* (* 2.0 l_0_10_126) l_0_10_129))))
 (let ((?x13182 (- (- ?x13178 (* (* 2.0 l_0_10_139) l_0_10_142)) (* (* 2.0 l_0_10_140) l_0_10_143))))
 (let ((?x13190 (+ (+ (- (- ?x13182 (* (* 2.0 l_0_10_141) l_0_10_144)) ?x13185) ?x13187) ?x13189)))
 (let ((?x13196 (- (+ (- (+ ?x13190 ?x13191) ?x12778) ?x12780) (* (* 2.0 l_0_10_61) l_0_10_67))))
 (let ((?x13200 (+ (+ ?x13196 (* (* 8.0 l_0_10_64) l_0_10_67)) (* (* 8.0 l_0_10_65) l_0_10_68))))
 (let ((?x13204 (+ (+ ?x13200 (* (* 8.0 l_0_10_66) l_0_10_69)) (* (* (/ 1.0 2.0) l_0_10_76) l_0_10_82))))
 (let ((?x13210 (- (- ?x13204 (* (* 2.0 l_0_10_94) l_0_10_97)) (* (* 2.0 l_0_10_95) l_0_10_98))))
 (= (- (- ?x13210 (* (* 2.0 l_0_10_96) l_0_10_99)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x13270 (* l_0_10_76 l_0_10_76)))
 (let ((?x13265 (* l_0_10_16 l_0_10_16)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13084 (* ?x12859 l_0_10_26)))
 (let ((?x13254 (- (* (- l_0_10_1) l_0_10_1) (* (* 2.0 l_0_10_101) l_0_10_91))))
 (let ((?x13260 (- (- ?x13254 (* (* 2.0 l_0_10_106) l_0_10_116)) (* (* 2.0 l_0_10_121) l_0_10_131))))
 (let ((?x13269 (+ (+ (+ (- ?x13260 (* (* 2.0 l_0_10_136) l_0_10_146)) ?x13084) ?x13265) (* (* 8.0 l_0_10_61) l_0_10_71))))
 (= (- ?x13269 ?x13270) 0.0)))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x13310 (* ?x12788 l_0_10_86)))
 (let ((?x12789 (* ?x12788 l_0_10_77)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13303 (* ?x12867 l_0_10_27)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x13301 (* ?x12864 l_0_10_26)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x12860 (* ?x12859 l_0_10_17)))
 (let ((?x13282 (- (* (* (- 2.0) l_0_10_1) l_0_10_2) (* (* 2.0 l_0_10_101) l_0_10_92))))
 (let ((?x13287 (- (- ?x13282 (* (* 2.0 l_0_10_102) l_0_10_93)) (* (* 2.0 l_0_10_107) l_0_10_116))))
 (let ((?x13291 (- (- ?x13287 (* (* 2.0 l_0_10_108) l_0_10_117)) (* (* 2.0 l_0_10_122) l_0_10_131))))
 (let ((?x13295 (- (- ?x13291 (* (* 2.0 l_0_10_123) l_0_10_132)) (* (* 2.0 l_0_10_137) l_0_10_146))))
 (let ((?x13300 (- (+ (- ?x13295 (* (* 2.0 l_0_10_138) l_0_10_147)) ?x12860) (* (* 4.0 l_0_10_16) l_0_10_26))))
 (let ((?x13308 (+ (+ (+ (+ ?x13300 ?x13301) ?x13303) (* (* 8.0 l_0_10_62) l_0_10_71)) (* (* 8.0 l_0_10_63) l_0_10_72))))
 (= (+ (- ?x13308 ?x12789) ?x13310) 0.0)))))))))))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x13391 (* ?x12788 l_0_10_82)))
 (let ((?x13376 (* 2.0 l_0_10_25)))
 (let ((?x13377 (* ?x13376 l_0_10_29)))
 (let ((?x13373 (* 2.0 l_0_10_24)))
 (let ((?x13374 (* ?x13373 l_0_10_28)))
 (let ((?x13370 (* 2.0 l_0_10_23)))
 (let ((?x13371 (* ?x13370 l_0_10_27)))
 (let ((?x13368 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13185 (* ?x12859 l_0_10_22)))
 (let ((?x2298 (- (* (* (- 2.0) l_0_10_1) l_0_10_7) (* (* 2.0 l_0_10_100) l_0_10_104))))
 (let ((?x13327 (- (- ?x2298 (* (* 2.0 l_0_10_101) l_0_10_97)) (* (* 2.0 l_0_10_102) l_0_10_98))))
 (let ((?x13332 (- (- ?x13327 (* (* 2.0 l_0_10_103) l_0_10_99)) (* (* 2.0 l_0_10_112) l_0_10_116))))
 (let ((?x13338 (- (- ?x13332 (* (* 2.0 l_0_10_113) l_0_10_117)) (* (* 2.0 l_0_10_114) l_0_10_118))))
 (let ((?x13344 (- (- ?x13338 (* (* 2.0 l_0_10_115) l_0_10_119)) (* (* 2.0 l_0_10_127) l_0_10_131))))
 (let ((?x13350 (- (- ?x13344 (* (* 2.0 l_0_10_128) l_0_10_132)) (* (* 2.0 l_0_10_129) l_0_10_133))))
 (let ((?x13356 (- (- ?x13350 (* (* 2.0 l_0_10_130) l_0_10_134)) (* (* 2.0 l_0_10_142) l_0_10_146))))
 (let ((?x13362 (- (- ?x13356 (* (* 2.0 l_0_10_143) l_0_10_147)) (* (* 2.0 l_0_10_144) l_0_10_148))))
 (let ((?x13372 (+ (+ (+ (- ?x13362 (* (* 2.0 l_0_10_145) l_0_10_149)) ?x13185) ?x13368) ?x13371)))
 (let ((?x13384 (+ (+ (+ (+ ?x13372 ?x13374) ?x13377) (* (* 8.0 l_0_10_67) l_0_10_71)) (* (* 8.0 l_0_10_68) l_0_10_72))))
 (let ((?x13390 (+ (+ ?x13384 (* (* 8.0 l_0_10_69) l_0_10_73)) (* (* 8.0 l_0_10_70) l_0_10_74))))
 (= (- ?x13390 ?x13391) 0.0))))))))))))))))))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x13310 (* ?x12788 l_0_10_86)))
 (let ((?x13505 (* l_0_10_75 l_0_10_75)))
 (let ((?x13506 (* 4.0 ?x13505)))
 (let ((?x13502 (* l_0_10_74 l_0_10_74)))
 (let ((?x13503 (* 4.0 ?x13502)))
 (let ((?x13499 (* l_0_10_73 l_0_10_73)))
 (let ((?x13500 (* 4.0 ?x13499)))
 (let ((?x13496 (* l_0_10_72 l_0_10_72)))
 (let ((?x13497 (* 4.0 ?x13496)))
 (let ((?x13493 (* l_0_10_71 l_0_10_71)))
 (let ((?x13494 (* 4.0 ?x13493)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13084 (* ?x12859 l_0_10_26)))
 (let ((?x13475 (* l_0_10_150 l_0_10_150)))
 (let ((?x13473 (* l_0_10_149 l_0_10_149)))
 (let ((?x13471 (* l_0_10_148 l_0_10_148)))
 (let ((?x13469 (* l_0_10_147 l_0_10_147)))
 (let ((?x13467 (* l_0_10_146 l_0_10_146)))
 (let ((?x13465 (* l_0_10_135 l_0_10_135)))
 (let ((?x13463 (* l_0_10_134 l_0_10_134)))
 (let ((?x13461 (* l_0_10_133 l_0_10_133)))
 (let ((?x13459 (* l_0_10_132 l_0_10_132)))
 (let ((?x13457 (* l_0_10_131 l_0_10_131)))
 (let ((?x13455 (* l_0_10_120 l_0_10_120)))
 (let ((?x13453 (* l_0_10_119 l_0_10_119)))
 (let ((?x13451 (* l_0_10_118 l_0_10_118)))
 (let ((?x13449 (* l_0_10_117 l_0_10_117)))
 (let ((?x13447 (* l_0_10_116 l_0_10_116)))
 (let ((?x13445 (* l_0_10_105 l_0_10_105)))
 (let ((?x13443 (* l_0_10_104 l_0_10_104)))
 (let ((?x13441 (* l_0_10_103 l_0_10_103)))
 (let ((?x13439 (* l_0_10_102 l_0_10_102)))
 (let ((?x13440 (- (- (* (* (- 2.0) l_0_10_1) l_0_10_11) (* l_0_10_101 l_0_10_101)) ?x13439)))
 (let ((?x13454 (- (- (- (- (- (- (- ?x13440 ?x13441) ?x13443) ?x13445) ?x13447) ?x13449) ?x13451) ?x13453)))
 (let ((?x13468 (- (- (- (- (- (- (- ?x13454 ?x13455) ?x13457) ?x13459) ?x13461) ?x13463) ?x13465) ?x13467)))
 (let ((?x13480 (+ (+ (- (- (- (- ?x13468 ?x13469) ?x13471) ?x13473) ?x13475) ?x13084) (* 1.0 (* l_0_10_26 l_0_10_26)))))
 (let ((?x13486 (+ (+ ?x13480 (* 1.0 (* l_0_10_27 l_0_10_27))) (* 1.0 (* l_0_10_28 l_0_10_28)))))
 (let ((?x13492 (+ (+ ?x13486 (* 1.0 (* l_0_10_29 l_0_10_29))) (* 1.0 (* l_0_10_30 l_0_10_30)))))
 (= (- (+ (+ (+ (+ (+ ?x13492 ?x13494) ?x13497) ?x13500) ?x13503) ?x13506) ?x13310) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13563 (* l_0_10_78 l_0_10_78)))
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13561 (* ?x13560 l_0_10_87)))
 (let ((?x13558 (* l_0_10_77 l_0_10_77)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13556 (* ?x13555 l_0_10_86)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13553 (* ?x13552 l_0_10_56)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13550 (* ?x13549 l_0_10_41)))
 (let ((?x13547 (* l_0_10_3 l_0_10_3)))
 (let ((?x13545 (* l_0_10_2 l_0_10_2)))
 (let ((?x12775 (* l_0_10_18 l_0_10_18)))
 (let ((?x13543 (- (+ (* (* (- 4.0) l_0_10_17) l_0_10_26) (* l_0_10_17 l_0_10_17)) (* (* 4.0 l_0_10_18) l_0_10_27))))
 (let ((?x13559 (- (+ (- (+ (- (- (+ ?x13543 ?x12775) ?x13545) ?x13547) ?x13550) ?x13553) ?x13556) ?x13558)))
 (= (- (+ ?x13559 ?x13561) ?x13563) 0.0)))))))))))))))))
(assert
 (let ((?x13629 (* 2.0 l_0_10_81)))
 (let ((?x13630 (* ?x13629 l_0_10_88)))
 (let ((?x13626 (* 2.0 l_0_10_80)))
 (let ((?x13627 (* ?x13626 l_0_10_87)))
 (let ((?x13623 (* 2.0 l_0_10_79)))
 (let ((?x13624 (* ?x13623 l_0_10_86)))
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13618 (* ?x13560 l_0_10_80)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13613 (* ?x13555 l_0_10_79)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13605 (* ?x13552 l_0_10_47)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13603 (* ?x13549 l_0_10_32)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13303 (* ?x12867 l_0_10_27)))
 (let ((?x12868 (* ?x12867 l_0_10_20)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x13301 (* ?x12864 l_0_10_26)))
 (let ((?x12865 (* ?x12864 l_0_10_19)))
 (let ((?x13590 (- (- (+ (- ?x12865 ?x13301) ?x12868) ?x13303) (* (* 4.0 l_0_10_19) l_0_10_26))))
 (let ((?x13596 (- (- ?x13590 (* (* 2.0 l_0_10_2) l_0_10_4)) (* (* 4.0 l_0_10_20) l_0_10_27))))
 (let ((?x13602 (- (- ?x13596 (* (* 4.0 l_0_10_21) l_0_10_28)) (* (* 2.0 l_0_10_3) l_0_10_5))))
 (let ((?x13612 (- (- (- (+ ?x13602 ?x13603) ?x13605) (* (* 2.0 l_0_10_62) l_0_10_71)) (* (* 2.0 l_0_10_63) l_0_10_72))))
 (let ((?x13622 (+ (- (+ (- ?x13612 ?x13613) (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_86)) ?x13618) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_87))))
 (= (+ (+ (+ ?x13622 ?x13624) ?x13627) ?x13630) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x13683 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x13680 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x13677 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x13674 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13671 (* ?x13560 l_0_10_83)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13669 (* ?x13555 l_0_10_82)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13641 (* ?x12867 l_0_10_23)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x2966 (* ?x12864 l_0_10_22)))
 (let ((?x13657 (- (- (+ ?x2966 ?x13641) (* (* 2.0 l_0_10_2) l_0_10_7)) (* (* 4.0 l_0_10_22) l_0_10_26))))
 (let ((?x13663 (- (- ?x13657 (* (* 4.0 l_0_10_23) l_0_10_27)) (* (* 4.0 l_0_10_24) l_0_10_28))))
 (let ((?x13668 (- (- ?x13663 (* (* 4.0 l_0_10_25) l_0_10_29)) (* (* 2.0 l_0_10_3) l_0_10_8))))
 (= (+ (+ (+ (+ (- (- ?x13668 ?x13669) ?x13671) ?x13674) ?x13677) ?x13680) ?x13683) 0.0)))))))))))))))))
(assert
 (let ((?x13733 (* l_0_10_90 l_0_10_90)))
 (let ((?x13731 (* l_0_10_89 l_0_10_89)))
 (let ((?x13729 (* l_0_10_88 l_0_10_88)))
 (let ((?x13727 (* l_0_10_87 l_0_10_87)))
 (let ((?x13725 (* l_0_10_86 l_0_10_86)))
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13561 (* ?x13560 l_0_10_87)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13556 (* ?x13555 l_0_10_86)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13303 (* ?x12867 l_0_10_27)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x13301 (* ?x12864 l_0_10_26)))
 (let ((?x13697 (- (* (* (- 2.0) l_0_10_11) l_0_10_2) (* (* 2.0 l_0_10_12) l_0_10_3))))
 (let ((?x13713 (- (- (+ (+ ?x13697 ?x13301) ?x13303) (* (* 2.0 l_0_10_26) l_0_10_26)) (* (* 2.0 l_0_10_27) l_0_10_27))))
 (let ((?x13719 (- (- ?x13713 (* (* 2.0 l_0_10_28) l_0_10_28)) (* (* 2.0 l_0_10_29) l_0_10_29))))
 (let ((?x13726 (+ (- (- (- ?x13719 (* (* 2.0 l_0_10_30) l_0_10_30)) ?x13556) ?x13561) ?x13725)))
 (= (+ (+ (+ (+ ?x13726 ?x13727) ?x13729) ?x13731) ?x13733) 0.0)))))))))))))))))))
(assert
 (let ((?x13788 (* l_0_10_81 l_0_10_81)))
 (let ((?x13783 (* l_0_10_80 l_0_10_80)))
 (let ((?x13778 (* l_0_10_79 l_0_10_79)))
 (let ((?x13764 (* l_0_10_6 l_0_10_6)))
 (let ((?x13762 (* l_0_10_5 l_0_10_5)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13760 (* ?x13552 l_0_10_49)))
 (let ((?x3123 (* l_0_10_4 l_0_10_4)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x3126 (* ?x13549 l_0_10_34)))
 (let ((?x13000 (* l_0_10_21 l_0_10_21)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13093 (* ?x13092 l_0_10_28)))
 (let ((?x12997 (* l_0_10_20 l_0_10_20)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13090 (* ?x13089 l_0_10_27)))
 (let ((?x3107 (- (+ (* (* (- 2.0) l_0_10_19) l_0_10_26) (* l_0_10_19 l_0_10_19)) ?x13090)))
 (let ((?x13763 (- (- (- (+ (+ (- (+ ?x3107 ?x12997) ?x13093) ?x13000) ?x3126) ?x3123) ?x13760) ?x13762)))
 (let ((?x13771 (- (- (- ?x13763 ?x13764) (* (* 2.0 l_0_10_64) l_0_10_71)) (* (* 2.0 l_0_10_65) l_0_10_72))))
 (let ((?x13777 (+ (- ?x13771 (* (* 2.0 l_0_10_66) l_0_10_73)) (* (* (/ 1.0 2.0) l_0_10_79) l_0_10_86))))
 (let ((?x13787 (+ (- (+ (- ?x13777 ?x13778) (* (* (/ 1.0 2.0) l_0_10_80) l_0_10_87)) ?x13783) (* (* (/ 1.0 2.0) l_0_10_81) l_0_10_88))))
 (= (- ?x13787 ?x13788) 0.0)))))))))))))))))))))))
(assert
 (let ((?x13629 (* 2.0 l_0_10_81)))
 (let ((?x13866 (* ?x13629 l_0_10_84)))
 (let ((?x13626 (* 2.0 l_0_10_80)))
 (let ((?x13864 (* ?x13626 l_0_10_83)))
 (let ((?x13623 (* 2.0 l_0_10_79)))
 (let ((?x13862 (* ?x13623 l_0_10_82)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13553 (* ?x13552 l_0_10_56)))
 (let ((?x13841 (* ?x13552 l_0_10_52)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13550 (* ?x13549 l_0_10_41)))
 (let ((?x13835 (* ?x13549 l_0_10_37)))
 (let ((?x13376 (* 2.0 l_0_10_25)))
 (let ((?x13377 (* ?x13376 l_0_10_29)))
 (let ((?x13373 (* 2.0 l_0_10_24)))
 (let ((?x13374 (* ?x13373 l_0_10_28)))
 (let ((?x13370 (* 2.0 l_0_10_23)))
 (let ((?x13371 (* ?x13370 l_0_10_27)))
 (let ((?x13368 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13191 (* ?x13092 l_0_10_24)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13189 (* ?x13089 l_0_10_23)))
 (let ((?x13086 (* 2.0 l_0_10_19)))
 (let ((?x13187 (* ?x13086 l_0_10_22)))
 (let ((?x13836 (+ (- (- (- (- (+ (+ ?x13187 ?x13189) ?x13191) ?x13368) ?x13371) ?x13374) ?x13377) ?x13835)))
 (let ((?x13843 (+ (- (- (- ?x13836 ?x13550) (* (* 2.0 l_0_10_4) l_0_10_7)) ?x13841) ?x13553)))
 (let ((?x13849 (- (- ?x13843 (* (* 2.0 l_0_10_5) l_0_10_8)) (* (* 2.0 l_0_10_6) l_0_10_9))))
 (let ((?x13855 (- (- ?x13849 (* (* 2.0 l_0_10_67) l_0_10_71)) (* (* 2.0 l_0_10_68) l_0_10_72))))
 (let ((?x13861 (- (- ?x13855 (* (* 2.0 l_0_10_69) l_0_10_73)) (* (* 2.0 l_0_10_70) l_0_10_74))))
 (let ((?x13870 (+ (- (- (- ?x13861 ?x13862) ?x13864) ?x13866) (* (* (/ 1.0 2.0) l_0_10_82) l_0_10_86))))
 (let ((?x13876 (+ (+ ?x13870 (* (* (/ 1.0 2.0) l_0_10_83) l_0_10_87)) (* (* (/ 1.0 2.0) l_0_10_84) l_0_10_88))))
 (= (+ ?x13876 (* (* (/ 1.0 2.0) l_0_10_85) l_0_10_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x13733 (* l_0_10_90 l_0_10_90)))
 (let ((?x13935 (* (/ 1.0 4.0) ?x13733)))
 (let ((?x13731 (* l_0_10_89 l_0_10_89)))
 (let ((?x13933 (* (/ 1.0 4.0) ?x13731)))
 (let ((?x13729 (* l_0_10_88 l_0_10_88)))
 (let ((?x13931 (* (/ 1.0 4.0) ?x13729)))
 (let ((?x13727 (* l_0_10_87 l_0_10_87)))
 (let ((?x13929 (* (/ 1.0 4.0) ?x13727)))
 (let ((?x13725 (* l_0_10_86 l_0_10_86)))
 (let ((?x13927 (* (/ 1.0 4.0) ?x13725)))
 (let ((?x13629 (* 2.0 l_0_10_81)))
 (let ((?x13630 (* ?x13629 l_0_10_88)))
 (let ((?x13626 (* 2.0 l_0_10_80)))
 (let ((?x13627 (* ?x13626 l_0_10_87)))
 (let ((?x13623 (* 2.0 l_0_10_79)))
 (let ((?x13624 (* ?x13623 l_0_10_86)))
 (let ((?x13505 (* l_0_10_75 l_0_10_75)))
 (let ((?x13502 (* l_0_10_74 l_0_10_74)))
 (let ((?x13499 (* l_0_10_73 l_0_10_73)))
 (let ((?x13496 (* l_0_10_72 l_0_10_72)))
 (let ((?x13493 (* l_0_10_71 l_0_10_71)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13553 (* ?x13552 l_0_10_56)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13550 (* ?x13549 l_0_10_41)))
 (let ((?x13490 (* l_0_10_30 l_0_10_30)))
 (let ((?x13487 (* l_0_10_29 l_0_10_29)))
 (let ((?x13484 (* l_0_10_28 l_0_10_28)))
 (let ((?x13481 (* l_0_10_27 l_0_10_27)))
 (let ((?x13478 (* l_0_10_26 l_0_10_26)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13093 (* ?x13092 l_0_10_28)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13090 (* ?x13089 l_0_10_27)))
 (let ((?x13086 (* 2.0 l_0_10_19)))
 (let ((?x13087 (* ?x13086 l_0_10_26)))
 (let ((?x13905 (- (* (* (- 2.0) l_0_10_11) l_0_10_4) (* (* 2.0 l_0_10_12) l_0_10_5))))
 (let ((?x13911 (+ (+ (+ (- ?x13905 (* (* 2.0 l_0_10_13) l_0_10_6)) ?x13087) ?x13090) ?x13093)))
 (let ((?x13918 (- (+ (- (- (- (- (- ?x13911 ?x13478) ?x13481) ?x13484) ?x13487) ?x13490) ?x13550) ?x13553)))
 (let ((?x13925 (- (- (- (- (- (- (- ?x13918 ?x13493) ?x13496) ?x13499) ?x13502) ?x13505) ?x13624) ?x13627)))
 (= (+ (+ (+ (+ (+ (- ?x13925 ?x13630) ?x13927) ?x13929) ?x13931) ?x13933) ?x13935) 0.0))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x3334 (* l_0_10_9 l_0_10_9)))
 (let ((?x3565 (* l_0_10_85 l_0_10_85)))
 (let ((?x3559 (* l_0_10_84 l_0_10_84)))
 (let ((?x3563 (* l_0_10_83 l_0_10_83)))
 (let ((?x3627 (* l_0_10_82 l_0_10_82)))
 (let ((?x3623 (* l_0_10_8 l_0_10_8)))
 (let ((?x3633 (* l_0_10_7 l_0_10_7)))
 (let ((?x3638 (* l_0_10_25 l_0_10_25)))
 (let ((?x3639 (* l_0_10_24 l_0_10_24)))
 (let ((?x3642 (* l_0_10_23 l_0_10_23)))
 (let ((?x3643 (+ (+ (* (- l_0_10_10) l_0_10_10) (* l_0_10_22 l_0_10_22)) ?x3642)))
 (let ((?x3568 (- (- (- (- (- (+ (+ ?x3643 ?x3639) ?x3638) ?x3633) ?x3623) ?x3627) ?x3563) ?x3559)))
 (= (- (- ?x3568 ?x3565) ?x3334) 0.0))))))))))))))
(assert
 (let ((?x13683 (* (* 2.0 l_0_10_85) l_0_10_89)))
 (let ((?x13680 (* (* 2.0 l_0_10_84) l_0_10_88)))
 (let ((?x13677 (* (* 2.0 l_0_10_83) l_0_10_87)))
 (let ((?x13674 (* (* 2.0 l_0_10_82) l_0_10_86)))
 (let ((?x13376 (* 2.0 l_0_10_25)))
 (let ((?x13377 (* ?x13376 l_0_10_29)))
 (let ((?x13373 (* 2.0 l_0_10_24)))
 (let ((?x13374 (* ?x13373 l_0_10_28)))
 (let ((?x13370 (* 2.0 l_0_10_23)))
 (let ((?x13371 (* ?x13370 l_0_10_27)))
 (let ((?x13368 (* (* 2.0 l_0_10_22) l_0_10_26)))
 (let ((?x13987 (- (* (* (- 2.0) l_0_10_10) l_0_10_14) (* (* 2.0 l_0_10_11) l_0_10_7))))
 (let ((?x13991 (- (- ?x13987 (* (* 2.0 l_0_10_12) l_0_10_8)) (* (* 2.0 l_0_10_13) l_0_10_9))))
 (let ((?x13998 (- (- (- (+ (+ (+ (+ ?x13991 ?x13368) ?x13371) ?x13374) ?x13377) ?x13674) ?x13677) ?x13680)))
 (= (- ?x13998 ?x13683) 0.0))))))))))))))))
(assert
 (let ((?x13733 (* l_0_10_90 l_0_10_90)))
 (let ((?x13731 (* l_0_10_89 l_0_10_89)))
 (let ((?x13729 (* l_0_10_88 l_0_10_88)))
 (let ((?x13727 (* l_0_10_87 l_0_10_87)))
 (let ((?x13725 (* l_0_10_86 l_0_10_86)))
 (let ((?x13490 (* l_0_10_30 l_0_10_30)))
 (let ((?x13487 (* l_0_10_29 l_0_10_29)))
 (let ((?x13484 (* l_0_10_28 l_0_10_28)))
 (let ((?x13481 (* l_0_10_27 l_0_10_27)))
 (let ((?x13478 (* l_0_10_26 l_0_10_26)))
 (let ((?x14033 (* l_0_10_15 l_0_10_15)))
 (let ((?x14031 (* l_0_10_14 l_0_10_14)))
 (let ((?x14029 (* l_0_10_13 l_0_10_13)))
 (let ((?x14030 (- (- (* (- l_0_10_11) l_0_10_11) (* l_0_10_12 l_0_10_12)) ?x14029)))
 (let ((?x14039 (+ (+ (+ (+ (+ (- (- ?x14030 ?x14031) ?x14033) ?x13478) ?x13481) ?x13484) ?x13487) ?x13490)))
 (= (- (- (- (- (- ?x14039 ?x13725) ?x13727) ?x13729) ?x13731) ?x13733) 0.0)))))))))))))))))
(assert
 (let ((?x13270 (* l_0_10_76 l_0_10_76)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x12860 (* ?x12859 l_0_10_17)))
 (let ((?x14072 (- (* (* (- 2.0) l_0_10_106) l_0_10_107) (* (* 2.0 l_0_10_121) l_0_10_122))))
 (let ((?x14077 (- (+ (- ?x14072 (* (* 2.0 l_0_10_136) l_0_10_137)) ?x12860) (* ?x12859 l_0_10_16))))
 (let ((?x14083 (- (+ (+ ?x14077 (* (* 8.0 l_0_10_61) l_0_10_62)) ?x13270) (* (* 2.0 l_0_10_91) l_0_10_92))))
 (= ?x14083 0.0))))))))
(assert
 (let ((?x12788 (* 2.0 l_0_10_76)))
 (let ((?x13391 (* ?x12788 l_0_10_82)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13641 (* ?x12867 l_0_10_23)))
 (let ((?x12864 (* 2.0 l_0_10_17)))
 (let ((?x2966 (* ?x12864 l_0_10_22)))
 (let ((?x14106 (- (* (* (- 2.0) l_0_10_107) l_0_10_112) (* (* 2.0 l_0_10_108) l_0_10_113))))
 (let ((?x14110 (- (- ?x14106 (* (* 2.0 l_0_10_122) l_0_10_127)) (* (* 2.0 l_0_10_123) l_0_10_128))))
 (let ((?x14114 (- (- ?x14110 (* (* 2.0 l_0_10_137) l_0_10_142)) (* (* 2.0 l_0_10_138) l_0_10_143))))
 (let ((?x14120 (+ (+ (+ (- ?x14114 (* (* 4.0 l_0_10_16) l_0_10_22)) ?x2966) ?x13641) (* (* 8.0 l_0_10_62) l_0_10_67))))
 (let ((?x14125 (- (+ (+ ?x14120 (* (* 8.0 l_0_10_63) l_0_10_68)) ?x13391) (* (* 2.0 l_0_10_92) l_0_10_97))))
 (= (- ?x14125 (* (* 2.0 l_0_10_93) l_0_10_98)) 0.0)))))))))))))
(assert
 (let ((?x13563 (* l_0_10_78 l_0_10_78)))
 (let ((?x13558 (* l_0_10_77 l_0_10_77)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13605 (* ?x13552 l_0_10_47)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13603 (* ?x13549 l_0_10_32)))
 (let ((?x14163 (- (* (* (- 2.0) l_0_10_17) l_0_10_17) (* (* 2.0 l_0_10_18) l_0_10_18))))
 (= (+ (+ (- (+ ?x14163 ?x13603) ?x13605) ?x13558) ?x13563) 0.0)))))))))
(assert
 (let ((?x13563 (* l_0_10_78 l_0_10_78)))
 (let ((?x14183 (* (/ 1.0 4.0) ?x13563)))
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13618 (* ?x13560 l_0_10_80)))
 (let ((?x13558 (* l_0_10_77 l_0_10_77)))
 (let ((?x14180 (* (/ 1.0 4.0) ?x13558)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13613 (* ?x13555 l_0_10_79)))
 (let ((?x12785 (* l_0_10_63 l_0_10_63)))
 (let ((?x12782 (* l_0_10_62 l_0_10_62)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13760 (* ?x13552 l_0_10_49)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x3126 (* ?x13549 l_0_10_34)))
 (let ((?x12775 (* l_0_10_18 l_0_10_18)))
 (let ((?x3949 (- (- (* (* (- 4.0) l_0_10_17) l_0_10_19) (* l_0_10_17 l_0_10_17)) (* (* 4.0 l_0_10_18) l_0_10_20))))
 (let ((?x14181 (+ (+ (- (- (- (+ (- ?x3949 ?x12775) ?x3126) ?x13760) ?x12782) ?x12785) ?x13613) ?x14180)))
 (= (+ (+ ?x14181 ?x13618) ?x14183) 0.0)))))))))))))))))))
(assert
 (let ((?x13560 (* 2.0 l_0_10_78)))
 (let ((?x13671 (* ?x13560 l_0_10_83)))
 (let ((?x13555 (* 2.0 l_0_10_77)))
 (let ((?x13669 (* ?x13555 l_0_10_82)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13841 (* ?x13552 l_0_10_52)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13835 (* ?x13549 l_0_10_37)))
 (let ((?x3979 (- (* (* (- 4.0) l_0_10_17) l_0_10_22) (* (* 4.0 l_0_10_18) l_0_10_23))))
 (= (+ (+ (- (+ ?x3979 ?x13835) ?x13841) ?x13669) ?x13671) 0.0)))))))))))
(assert
 (let ((?x13788 (* l_0_10_81 l_0_10_81)))
 (let ((?x13783 (* l_0_10_80 l_0_10_80)))
 (let ((?x13778 (* l_0_10_79 l_0_10_79)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x12868 (* ?x12867 l_0_10_20)))
 (let ((?x4026 (- (- (* (* (- 2.0) l_0_10_17) l_0_10_19) ?x12868) (* (* 2.0 l_0_10_19) l_0_10_19))))
 (let ((?x4038 (- (- ?x4026 (* (* 2.0 l_0_10_20) l_0_10_20)) (* (* 2.0 l_0_10_21) l_0_10_21))))
 (let ((?x14195 (- (- ?x4038 (* (* 2.0 l_0_10_62) l_0_10_64)) (* (* 2.0 l_0_10_63) l_0_10_65))))
 (let ((?x14199 (+ (+ ?x14195 (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_79)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_80))))
 (= (+ (+ (+ ?x14199 ?x13778) ?x13783) ?x13788) 0.0)))))))))))
(assert
 (let ((?x13629 (* 2.0 l_0_10_81)))
 (let ((?x13866 (* ?x13629 l_0_10_84)))
 (let ((?x13626 (* 2.0 l_0_10_80)))
 (let ((?x13864 (* ?x13626 l_0_10_83)))
 (let ((?x13623 (* 2.0 l_0_10_79)))
 (let ((?x13862 (* ?x13623 l_0_10_82)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13605 (* ?x13552 l_0_10_47)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13603 (* ?x13549 l_0_10_32)))
 (let ((?x12867 (* 2.0 l_0_10_18)))
 (let ((?x13641 (* ?x12867 l_0_10_23)))
 (let ((?x4096 (- (- (* (* (- 2.0) l_0_10_17) l_0_10_22) ?x13641) (* (* 4.0 l_0_10_19) l_0_10_22))))
 (let ((?x14220 (- (- ?x4096 (* (* 4.0 l_0_10_20) l_0_10_23)) (* (* 4.0 l_0_10_21) l_0_10_24))))
 (let ((?x14226 (- (- (+ (- ?x14220 ?x13603) ?x13605) (* (* 2.0 l_0_10_62) l_0_10_67)) (* (* 2.0 l_0_10_63) l_0_10_68))))
 (let ((?x14230 (+ (+ ?x14226 (* (* (/ 1.0 2.0) l_0_10_77) l_0_10_82)) (* (* (/ 1.0 2.0) l_0_10_78) l_0_10_83))))
 (= (+ (+ (+ ?x14230 ?x13862) ?x13864) ?x13866) 0.0))))))))))))))))))
(assert
 (let ((?x3565 (* l_0_10_85 l_0_10_85)))
 (let ((?x3559 (* l_0_10_84 l_0_10_84)))
 (let ((?x3563 (* l_0_10_83 l_0_10_83)))
 (let ((?x3627 (* l_0_10_82 l_0_10_82)))
 (let ((?x14241 (- (* (* (- 2.0) l_0_10_22) l_0_10_22) (* (* 2.0 l_0_10_23) l_0_10_23))))
 (let ((?x14245 (- (- ?x14241 (* (* 2.0 l_0_10_24) l_0_10_24)) (* (* 2.0 l_0_10_25) l_0_10_25))))
 (= (+ (+ (+ (+ ?x14245 ?x3627) ?x3563) ?x3559) ?x3565) 0.0))))))))
(assert
 (let ((?x13270 (* l_0_10_76 l_0_10_76)))
 (let ((?x14253 (* (/ 1.0 4.0) ?x13270)))
 (let ((?x4298 (* l_0_10_61 l_0_10_61)))
 (let ((?x13265 (* l_0_10_16 l_0_10_16)))
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x12992 (* ?x12859 l_0_10_19)))
 (let ((?x4360 (- (* (* (- 2.0) l_0_10_106) l_0_10_109) (* (* 2.0 l_0_10_121) l_0_10_124))))
 (let ((?x4295 (+ (- (+ (- ?x4360 (* (* 2.0 l_0_10_136) l_0_10_139)) ?x12992) ?x13265) (* (* 8.0 l_0_10_61) l_0_10_64))))
 (= (- (+ (- ?x4295 ?x4298) ?x14253) (* (* 2.0 l_0_10_91) l_0_10_94)) 0.0))))))))))
(assert
 (let ((?x13011 (* l_0_10_66 l_0_10_66)))
 (let ((?x13008 (* l_0_10_65 l_0_10_65)))
 (let ((?x13005 (* l_0_10_64 l_0_10_64)))
 (let ((?x13000 (* l_0_10_21 l_0_10_21)))
 (let ((?x14282 (- (- (* (- l_0_10_19) l_0_10_19) (* l_0_10_20 l_0_10_20)) ?x13000)))
 (let ((?x14287 (+ (- (- (- ?x14282 ?x13005) ?x13008) ?x13011) (* (/ 1.0 4.0) (* l_0_10_79 l_0_10_79)))))
 (let ((?x14291 (+ (+ ?x14287 (* (/ 1.0 4.0) (* l_0_10_80 l_0_10_80))) (* (/ 1.0 4.0) (* l_0_10_81 l_0_10_81)))))
 (= ?x14291 0.0)))))))))
(assert
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13760 (* ?x13552 l_0_10_49)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x3126 (* ?x13549 l_0_10_34)))
 (let ((?x13092 (* 2.0 l_0_10_21)))
 (let ((?x13191 (* ?x13092 l_0_10_24)))
 (let ((?x13089 (* 2.0 l_0_10_20)))
 (let ((?x13189 (* ?x13089 l_0_10_23)))
 (let ((?x4403 (+ (- (- (- (* (* (- 2.0) l_0_10_19) l_0_10_22) ?x13189) ?x13191) ?x3126) ?x13760)))
 (let ((?x14298 (- (- ?x4403 (* (* 2.0 l_0_10_64) l_0_10_67)) (* (* 2.0 l_0_10_65) l_0_10_68))))
 (let ((?x14302 (+ (- ?x14298 (* (* 2.0 l_0_10_66) l_0_10_69)) (* (* (/ 1.0 2.0) l_0_10_79) l_0_10_82))))
 (let ((?x14306 (+ (+ ?x14302 (* (* (/ 1.0 2.0) l_0_10_80) l_0_10_83)) (* (* (/ 1.0 2.0) l_0_10_81) l_0_10_84))))
 (= ?x14306 0.0))))))))))))))
(assert
 (let ((?x3565 (* l_0_10_85 l_0_10_85)))
 (let ((?x14332 (* (/ 1.0 4.0) ?x3565)))
 (let ((?x3559 (* l_0_10_84 l_0_10_84)))
 (let ((?x14330 (* (/ 1.0 4.0) ?x3559)))
 (let ((?x3563 (* l_0_10_83 l_0_10_83)))
 (let ((?x14328 (* (/ 1.0 4.0) ?x3563)))
 (let ((?x3627 (* l_0_10_82 l_0_10_82)))
 (let ((?x14326 (* (/ 1.0 4.0) ?x3627)))
 (let ((?x14324 (* l_0_10_70 l_0_10_70)))
 (let ((?x14322 (* l_0_10_69 l_0_10_69)))
 (let ((?x4504 (* l_0_10_68 l_0_10_68)))
 (let ((?x4507 (* l_0_10_67 l_0_10_67)))
 (let ((?x13552 (* 2.0 l_0_10_46)))
 (let ((?x13841 (* ?x13552 l_0_10_52)))
 (let ((?x13549 (* 2.0 l_0_10_31)))
 (let ((?x13835 (* ?x13549 l_0_10_37)))
 (let ((?x3638 (* l_0_10_25 l_0_10_25)))
 (let ((?x3639 (* l_0_10_24 l_0_10_24)))
 (let ((?x4576 (- (- (* (- l_0_10_22) l_0_10_22) (* l_0_10_23 l_0_10_23)) ?x3639)))
 (let ((?x14325 (- (- (- (- (+ (- (- ?x4576 ?x3638) ?x13835) ?x13841) ?x4507) ?x4504) ?x14322) ?x14324)))
 (= (+ (+ (+ (+ ?x14325 ?x14326) ?x14328) ?x14330) ?x14332) 0.0))))))))))))))))))))))
(assert
 (let ((?x14339 (* l_0_10_91 l_0_10_91)))
 (let ((?x4298 (* l_0_10_61 l_0_10_61)))
 (let ((?x14337 (* 4.0 ?x4298)))
 (let ((?x4620 (* l_0_10_136 l_0_10_136)))
 (let ((?x4621 (- (- (* (- l_0_10_106) l_0_10_106) (* l_0_10_121 l_0_10_121)) ?x4620)))
 (= (- (+ (+ ?x4621 (* 1.0 (* l_0_10_16 l_0_10_16))) ?x14337) ?x14339) 0.0)))))))
(assert
 (let ((?x12859 (* 2.0 l_0_10_16)))
 (let ((?x13185 (* ?x12859 l_0_10_22)))
 (let ((?x14358 (- (* (* (- 2.0) l_0_10_106) l_0_10_112) (* (* 2.0 l_0_10_121) l_0_10_127))))
 (let ((?x14363 (+ (+ (- ?x14358 (* (* 2.0 l_0_10_136) l_0_10_142)) ?x13185) (* (* 8.0 l_0_10_61) l_0_10_67))))
 (= (- ?x14363 (* (* 2.0 l_0_10_91) l_0_10_97)) 0.0))))))
(assert
 (let ((?x14430 (* l_0_10_99 l_0_10_99)))
 (let ((?x14428 (* l_0_10_98 l_0_10_98)))
 (let ((?x14426 (* l_0_10_97 l_0_10_97)))
 (let ((?x14324 (* l_0_10_70 l_0_10_70)))
 (let ((?x14424 (* 4.0 ?x14324)))
 (let ((?x14322 (* l_0_10_69 l_0_10_69)))
 (let ((?x14422 (* 4.0 ?x14322)))
 (let ((?x4504 (* l_0_10_68 l_0_10_68)))
 (let ((?x14420 (* 4.0 ?x4504)))
 (let ((?x4507 (* l_0_10_67 l_0_10_67)))
 (let ((?x14418 (* 4.0 ?x4507)))
 (let ((?x14408 (* l_0_10_145 l_0_10_145)))
 (let ((?x14406 (* l_0_10_144 l_0_10_144)))
 (let ((?x14404 (* l_0_10_143 l_0_10_143)))
 (let ((?x14402 (* l_0_10_142 l_0_10_142)))
 (let ((?x14400 (* l_0_10_130 l_0_10_130)))
 (let ((?x14398 (* l_0_10_129 l_0_10_129)))
 (let ((?x14396 (* l_0_10_128 l_0_10_128)))
 (let ((?x14394 (* l_0_10_127 l_0_10_127)))
 (let ((?x14392 (* l_0_10_115 l_0_10_115)))
 (let ((?x14390 (* l_0_10_114 l_0_10_114)))
 (let ((?x14388 (* l_0_10_113 l_0_10_113)))
 (let ((?x14389 (- (- (* (- l_0_10_100) l_0_10_100) (* l_0_10_112 l_0_10_112)) ?x14388)))
 (let ((?x14403 (- (- (- (- (- (- (- ?x14389 ?x14390) ?x14392) ?x14394) ?x14396) ?x14398) ?x14400) ?x14402)))
 (let ((?x14411 (+ (- (- (- ?x14403 ?x14404) ?x14406) ?x14408) (* 1.0 (* l_0_10_22 l_0_10_22)))))
 (let ((?x14415 (+ (+ ?x14411 (* 1.0 (* l_0_10_23 l_0_10_23))) (* 1.0 (* l_0_10_24 l_0_10_24)))))
 (let ((?x14423 (+ (+ (+ (+ ?x14415 (* 1.0 (* l_0_10_25 l_0_10_25))) ?x14418) ?x14420) ?x14422)))
 (= (- (- (- (+ ?x14423 ?x14424) ?x14426) ?x14428) ?x14430) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x14466 (* 2.0 l_0_10_51)))
 (let ((?x14467 (* ?x14466 l_0_10_54)))
 (let ((?x14463 (* 2.0 l_0_10_50)))
 (let ((?x14464 (* ?x14463 l_0_10_53)))
 (let ((?x14460 (* 2.0 l_0_10_49)))
 (let ((?x14461 (* ?x14460 l_0_10_52)))
 (let ((?x14458 (* l_0_10_48 l_0_10_48)))
 (let ((?x14456 (* l_0_10_47 l_0_10_47)))
 (let ((?x14453 (* 2.0 l_0_10_36)))
 (let ((?x14454 (* ?x14453 l_0_10_39)))
 (let ((?x4766 (* 2.0 l_0_10_35)))
 (let ((?x4769 (* ?x4766 l_0_10_38)))
 (let ((?x4774 (* 2.0 l_0_10_34)))
 (let ((?x4777 (* ?x4774 l_0_10_37)))
 (let ((?x4778 (+ (- (* (- l_0_10_32) l_0_10_32) (* l_0_10_33 l_0_10_33)) ?x4777)))
 (let ((?x14468 (- (- (- (+ (+ (+ (+ ?x4778 ?x4769) ?x14454) ?x14456) ?x14458) ?x14461) ?x14464) ?x14467)))
 (= ?x14468 0.0))))))))))))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14505 (* ?x14504 l_0_10_50)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14502 (* ?x14501 l_0_10_49)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14499 (* ?x14498 l_0_10_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_32) l_0_10_34) ?x14499) ?x14502) ?x14505) 0.0))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14528 (* ?x14504 l_0_10_53)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14526 (* ?x14501 l_0_10_52)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14519 (* ?x14498 l_0_10_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_10_32) l_0_10_37) ?x14519) ?x14526) ?x14528) 0.0))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14543 (* ?x14504 l_0_10_57)))
 (let ((?x14528 (* ?x14504 l_0_10_53)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14540 (* ?x14501 l_0_10_56)))
 (let ((?x14526 (* ?x14501 l_0_10_52)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14537 (* ?x14498 l_0_10_42)))
 (let ((?x14519 (* ?x14498 l_0_10_38)))
 (let ((?x4878 (* 2.0 l_0_10_32)))
 (let ((?x4875 (* ?x4878 l_0_10_41)))
 (let ((?x4872 (* ?x4878 l_0_10_37)))
 (let ((?x14544 (+ (- (+ (- (- (+ (- ?x4872 ?x4875) ?x14519) ?x14537) ?x14526) ?x14540) ?x14528) ?x14543)))
 (= ?x14544 0.0)))))))))))))))
(assert
 (let ((?x14566 (* l_0_10_51 l_0_10_51)))
 (let ((?x14564 (* l_0_10_50 l_0_10_50)))
 (let ((?x14562 (* l_0_10_49 l_0_10_49)))
 (let ((?x14560 (* l_0_10_36 l_0_10_36)))
 (let ((?x14561 (- (- (* (- l_0_10_34) l_0_10_34) (* l_0_10_35 l_0_10_35)) ?x14560)))
 (= (+ (+ (+ ?x14561 ?x14562) ?x14564) ?x14566) 0.0)))))))
(assert
 (let ((?x14466 (* 2.0 l_0_10_51)))
 (let ((?x14467 (* ?x14466 l_0_10_54)))
 (let ((?x14463 (* 2.0 l_0_10_50)))
 (let ((?x14464 (* ?x14463 l_0_10_53)))
 (let ((?x14460 (* 2.0 l_0_10_49)))
 (let ((?x14461 (* ?x14460 l_0_10_52)))
 (let ((?x14453 (* 2.0 l_0_10_36)))
 (let ((?x14454 (* ?x14453 l_0_10_39)))
 (let ((?x4766 (* 2.0 l_0_10_35)))
 (let ((?x4769 (* ?x4766 l_0_10_38)))
 (let ((?x14584 (+ (+ (- (- (* (* (- 2.0) l_0_10_34) l_0_10_37) ?x4769) ?x14454) ?x14461) ?x14464)))
 (= (+ ?x14584 ?x14467) 0.0)))))))))))))
(assert
 (let ((?x14466 (* 2.0 l_0_10_51)))
 (let ((?x14591 (* ?x14466 l_0_10_58)))
 (let ((?x14467 (* ?x14466 l_0_10_54)))
 (let ((?x14463 (* 2.0 l_0_10_50)))
 (let ((?x4961 (* ?x14463 l_0_10_57)))
 (let ((?x14464 (* ?x14463 l_0_10_53)))
 (let ((?x14460 (* 2.0 l_0_10_49)))
 (let ((?x4647 (* ?x14460 l_0_10_56)))
 (let ((?x14461 (* ?x14460 l_0_10_52)))
 (let ((?x14453 (* 2.0 l_0_10_36)))
 (let ((?x5014 (* ?x14453 l_0_10_43)))
 (let ((?x14454 (* ?x14453 l_0_10_39)))
 (let ((?x4766 (* 2.0 l_0_10_35)))
 (let ((?x5019 (* ?x4766 l_0_10_42)))
 (let ((?x4769 (* ?x4766 l_0_10_38)))
 (let ((?x4774 (* 2.0 l_0_10_34)))
 (let ((?x5023 (* ?x4774 l_0_10_41)))
 (let ((?x4777 (* ?x4774 l_0_10_37)))
 (let ((?x4963 (+ (- (- (+ (- (+ (- ?x4777 ?x5023) ?x4769) ?x5019) ?x14454) ?x5014) ?x14461) ?x4647)))
 (= (+ (- (+ (- ?x4963 ?x14464) ?x4961) ?x14467) ?x14591) 0.0)))))))))))))))))))))
(assert
 (let ((?x14632 (* l_0_10_55 l_0_10_55)))
 (let ((?x14630 (* l_0_10_54 l_0_10_54)))
 (let ((?x14628 (* l_0_10_53 l_0_10_53)))
 (let ((?x14626 (* l_0_10_52 l_0_10_52)))
 (let ((?x14624 (* l_0_10_40 l_0_10_40)))
 (let ((?x14622 (* l_0_10_39 l_0_10_39)))
 (let ((?x14623 (- (- (* (- l_0_10_37) l_0_10_37) (* l_0_10_38 l_0_10_38)) ?x14622)))
 (= (+ (+ (+ (+ (- ?x14623 ?x14624) ?x14626) ?x14628) ?x14630) ?x14632) 0.0)))))))))
(assert
 (let ((?x14632 (* l_0_10_55 l_0_10_55)))
 (let ((?x14671 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14630 (* l_0_10_54 l_0_10_54)))
 (let ((?x14667 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x14628 (* l_0_10_53 l_0_10_53)))
 (let ((?x14663 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x14626 (* l_0_10_52 l_0_10_52)))
 (let ((?x14659 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x14624 (* l_0_10_40 l_0_10_40)))
 (let ((?x14655 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14622 (* l_0_10_39 l_0_10_39)))
 (let ((?x14651 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14620 (* l_0_10_38 l_0_10_38)))
 (let ((?x14647 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14648 (- (+ (* (* (- 2.0) l_0_10_37) l_0_10_41) (* l_0_10_37 l_0_10_37)) ?x14647)))
 (let ((?x14661 (- (+ (+ (- (+ (- (+ ?x14648 ?x14620) ?x14651) ?x14622) ?x14655) ?x14624) ?x14659) ?x14626)))
 (= (- (+ (- (+ (- (+ ?x14661 ?x14663) ?x14628) ?x14667) ?x14630) ?x14671) ?x14632) 0.0))))))))))))))))))
(assert
 (let ((?x14715 (* l_0_10_60 l_0_10_60)))
 (let ((?x14713 (* l_0_10_59 l_0_10_59)))
 (let ((?x14711 (* l_0_10_58 l_0_10_58)))
 (let ((?x14709 (* l_0_10_57 l_0_10_57)))
 (let ((?x14707 (* l_0_10_56 l_0_10_56)))
 (let ((?x14671 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14667 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x14663 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x14659 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x14701 (* l_0_10_45 l_0_10_45)))
 (let ((?x14699 (* l_0_10_44 l_0_10_44)))
 (let ((?x14697 (* l_0_10_43 l_0_10_43)))
 (let ((?x14695 (* l_0_10_42 l_0_10_42)))
 (let ((?x14693 (* l_0_10_41 l_0_10_41)))
 (let ((?x14655 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14651 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14647 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14692 (+ (+ (+ (* (* 2.0 l_0_10_37) l_0_10_41) ?x14647) ?x14651) ?x14655)))
 (let ((?x14704 (- (- (- (- (- (- (- ?x14692 ?x14693) ?x14695) ?x14697) ?x14699) ?x14701) ?x14659) ?x14663)))
 (let ((?x14716 (+ (+ (+ (+ (+ (- (- ?x14704 ?x14667) ?x14671) ?x14707) ?x14709) ?x14711) ?x14713) ?x14715)))
 (= ?x14716 0.0))))))))))))))))))))))
(assert
 (let ((?x14458 (* l_0_10_48 l_0_10_48)))
 (let ((?x14456 (* l_0_10_47 l_0_10_47)))
 (let ((?x4746 (* l_0_10_33 l_0_10_33)))
 (let ((?x14471 (* l_0_10_32 l_0_10_32)))
 (let ((?x5196 (+ ?x14471 ?x4746)))
 (= (- (- ?x5196 ?x14456) ?x14458) 0.0)))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14505 (* ?x14504 l_0_10_50)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14502 (* ?x14501 l_0_10_49)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14499 (* ?x14498 l_0_10_35)))
 (= (- (- (+ (* (* 2.0 l_0_10_32) l_0_10_34) ?x14499) ?x14502) ?x14505) 0.0))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14528 (* ?x14504 l_0_10_53)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14526 (* ?x14501 l_0_10_52)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14519 (* ?x14498 l_0_10_38)))
 (let ((?x4878 (* 2.0 l_0_10_32)))
 (let ((?x4872 (* ?x4878 l_0_10_37)))
 (= (- (- (+ ?x4872 ?x14519) ?x14526) ?x14528) 0.0))))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14543 (* ?x14504 l_0_10_57)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14540 (* ?x14501 l_0_10_56)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14537 (* ?x14498 l_0_10_42)))
 (let ((?x4878 (* 2.0 l_0_10_32)))
 (let ((?x4875 (* ?x4878 l_0_10_41)))
 (= (- (- (+ ?x4875 ?x14537) ?x14540) ?x14543) 0.0))))))))))
(assert
 (let ((?x14566 (* l_0_10_51 l_0_10_51)))
 (let ((?x14564 (* l_0_10_50 l_0_10_50)))
 (let ((?x14562 (* l_0_10_49 l_0_10_49)))
 (let ((?x14560 (* l_0_10_36 l_0_10_36)))
 (let ((?x14735 (- (+ (+ (* l_0_10_34 l_0_10_34) (* l_0_10_35 l_0_10_35)) ?x14560) ?x14562)))
 (= (- (- ?x14735 ?x14564) ?x14566) 0.0)))))))
(assert
 (let ((?x14466 (* 2.0 l_0_10_51)))
 (let ((?x14591 (* ?x14466 l_0_10_58)))
 (let ((?x14463 (* 2.0 l_0_10_50)))
 (let ((?x4961 (* ?x14463 l_0_10_57)))
 (let ((?x14460 (* 2.0 l_0_10_49)))
 (let ((?x4647 (* ?x14460 l_0_10_56)))
 (let ((?x14458 (* l_0_10_48 l_0_10_48)))
 (let ((?x14456 (* l_0_10_47 l_0_10_47)))
 (let ((?x14453 (* 2.0 l_0_10_36)))
 (let ((?x5014 (* ?x14453 l_0_10_43)))
 (let ((?x4766 (* 2.0 l_0_10_35)))
 (let ((?x5019 (* ?x4766 l_0_10_42)))
 (let ((?x4774 (* 2.0 l_0_10_34)))
 (let ((?x5023 (* ?x4774 l_0_10_41)))
 (let ((?x4746 (* l_0_10_33 l_0_10_33)))
 (let ((?x14471 (* l_0_10_32 l_0_10_32)))
 (let ((?x5196 (+ ?x14471 ?x4746)))
 (let ((?x14739 (- (- (- (- (+ (+ (+ ?x5196 ?x5023) ?x5019) ?x5014) ?x14456) ?x14458) ?x4647) ?x4961)))
 (= (- ?x14739 ?x14591) 0.0))))))))))))))))))))
(assert
 (let ((?x14632 (* l_0_10_55 l_0_10_55)))
 (let ((?x14630 (* l_0_10_54 l_0_10_54)))
 (let ((?x14628 (* l_0_10_53 l_0_10_53)))
 (let ((?x14626 (* l_0_10_52 l_0_10_52)))
 (let ((?x14624 (* l_0_10_40 l_0_10_40)))
 (let ((?x14622 (* l_0_10_39 l_0_10_39)))
 (let ((?x5321 (+ (+ (+ (* l_0_10_37 l_0_10_37) (* l_0_10_38 l_0_10_38)) ?x14622) ?x14624)))
 (= (- (- (- (- ?x5321 ?x14626) ?x14628) ?x14630) ?x14632) 0.0)))))))))
(assert
 (let ((?x14671 (* (* 2.0 l_0_10_55) l_0_10_59)))
 (let ((?x14667 (* (* 2.0 l_0_10_54) l_0_10_58)))
 (let ((?x14663 (* (* 2.0 l_0_10_53) l_0_10_57)))
 (let ((?x14659 (* (* 2.0 l_0_10_52) l_0_10_56)))
 (let ((?x14655 (* (* 2.0 l_0_10_40) l_0_10_44)))
 (let ((?x14651 (* (* 2.0 l_0_10_39) l_0_10_43)))
 (let ((?x14647 (* (* 2.0 l_0_10_38) l_0_10_42)))
 (let ((?x14692 (+ (+ (+ (* (* 2.0 l_0_10_37) l_0_10_41) ?x14647) ?x14651) ?x14655)))
 (= (- (- (- (- ?x14692 ?x14659) ?x14663) ?x14667) ?x14671) 0.0))))))))))
(assert
 (let ((?x14715 (* l_0_10_60 l_0_10_60)))
 (let ((?x14713 (* l_0_10_59 l_0_10_59)))
 (let ((?x14711 (* l_0_10_58 l_0_10_58)))
 (let ((?x14709 (* l_0_10_57 l_0_10_57)))
 (let ((?x14707 (* l_0_10_56 l_0_10_56)))
 (let ((?x14701 (* l_0_10_45 l_0_10_45)))
 (let ((?x14699 (* l_0_10_44 l_0_10_44)))
 (let ((?x14697 (* l_0_10_43 l_0_10_43)))
 (let ((?x14780 (+ (+ (+ (* l_0_10_41 l_0_10_41) (* l_0_10_42 l_0_10_42)) ?x14697) ?x14699)))
 (= (- (- (- (- (- (+ ?x14780 ?x14701) ?x14707) ?x14709) ?x14711) ?x14713) ?x14715) 0.0)))))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14505 (* ?x14504 l_0_10_50)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14502 (* ?x14501 l_0_10_49)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14499 (* ?x14498 l_0_10_35)))
 (= (- (- (+ (* (* 2.0 l_0_10_32) l_0_10_34) ?x14499) ?x14502) ?x14505) 0.0))))))))
(assert
 (let ((?x14504 (* 2.0 l_0_10_48)))
 (let ((?x14543 (* ?x14504 l_0_10_57)))
 (let ((?x14501 (* 2.0 l_0_10_47)))
 (let ((?x14540 (* ?x14501 l_0_10_56)))
 (let ((?x14498 (* 2.0 l_0_10_33)))
 (let ((?x14537 (* ?x14498 l_0_10_42)))
 (let ((?x4878 (* 2.0 l_0_10_32)))
 (let ((?x4875 (* ?x4878 l_0_10_41)))
 (= (- (- (+ ?x4875 ?x14537) ?x14540) ?x14543) 0.0))))))))))
(assert
 (let ((?x14566 (* l_0_10_51 l_0_10_51)))
 (let ((?x14564 (* l_0_10_50 l_0_10_50)))
 (let ((?x14562 (* l_0_10_49 l_0_10_49)))
 (let ((?x14560 (* l_0_10_36 l_0_10_36)))
 (let ((?x14735 (- (+ (+ (* l_0_10_34 l_0_10_34) (* l_0_10_35 l_0_10_35)) ?x14560) ?x14562)))
 (= (- (- ?x14735 ?x14564) ?x14566) 0.0)))))))
(assert
 (let ((?x14466 (* 2.0 l_0_10_51)))
 (let ((?x14591 (* ?x14466 l_0_10_58)))
 (let ((?x14463 (* 2.0 l_0_10_50)))
 (let ((?x4961 (* ?x14463 l_0_10_57)))
 (let ((?x14460 (* 2.0 l_0_10_49)))
 (let ((?x4647 (* ?x14460 l_0_10_56)))
 (let ((?x14453 (* 2.0 l_0_10_36)))
 (let ((?x5014 (* ?x14453 l_0_10_43)))
 (let ((?x4766 (* 2.0 l_0_10_35)))
 (let ((?x5019 (* ?x4766 l_0_10_42)))
 (let ((?x4774 (* 2.0 l_0_10_34)))
 (let ((?x5023 (* ?x4774 l_0_10_41)))
 (= (- (- (- (+ (+ ?x5023 ?x5019) ?x5014) ?x4647) ?x4961) ?x14591) 0.0))))))))))))))
(assert
 (let ((?x14715 (* l_0_10_60 l_0_10_60)))
 (let ((?x14713 (* l_0_10_59 l_0_10_59)))
 (let ((?x14711 (* l_0_10_58 l_0_10_58)))
 (let ((?x14709 (* l_0_10_57 l_0_10_57)))
 (let ((?x14707 (* l_0_10_56 l_0_10_56)))
 (let ((?x14701 (* l_0_10_45 l_0_10_45)))
 (let ((?x14699 (* l_0_10_44 l_0_10_44)))
 (let ((?x14697 (* l_0_10_43 l_0_10_43)))
 (let ((?x14780 (+ (+ (+ (* l_0_10_41 l_0_10_41) (* l_0_10_42 l_0_10_42)) ?x14697) ?x14699)))
 (= (- (- (- (- (- (+ ?x14780 ?x14701) ?x14707) ?x14709) ?x14711) ?x14713) ?x14715) 0.0)))))))))))
(assert
 (>= l_0_10_1 0.0))
(assert
 (>= l_0_10_3 0.0))
(assert
 (>= l_0_10_6 0.0))
(assert
 (>= l_0_10_10 0.0))
(assert
 (>= l_0_10_15 0.0))
(assert
 (>= l_0_10_16 0.0))
(assert
 (>= l_0_10_18 0.0))
(assert
 (>= l_0_10_21 0.0))
(assert
 (>= l_0_10_25 0.0))
(assert
 (>= l_0_10_30 0.0))
(assert
 (>= l_0_10_31 0.0))
(assert
 (>= l_0_10_33 0.0))
(assert
 (>= l_0_10_36 0.0))
(assert
 (>= l_0_10_40 0.0))
(assert
 (>= l_0_10_45 0.0))
(assert
 (>= l_0_10_46 0.0))
(assert
 (>= l_0_10_48 0.0))
(assert
 (>= l_0_10_51 0.0))
(assert
 (>= l_0_10_55 0.0))
(assert
 (>= l_0_10_60 0.0))
(assert
 (>= l_0_10_61 0.0))
(assert
 (>= l_0_10_63 0.0))
(assert
 (>= l_0_10_66 0.0))
(assert
 (>= l_0_10_70 0.0))
(assert
 (>= l_0_10_75 0.0))
(assert
 (>= l_0_10_76 0.0))
(assert
 (>= l_0_10_78 0.0))
(assert
 (>= l_0_10_81 0.0))
(assert
 (>= l_0_10_85 0.0))
(assert
 (>= l_0_10_90 0.0))
(assert
 (>= l_0_10_91 0.0))
(assert
 (>= l_0_10_93 0.0))
(assert
 (>= l_0_10_96 0.0))
(assert
 (>= l_0_10_100 0.0))
(assert
 (>= l_0_10_105 0.0))
(assert
 (>= l_0_10_106 0.0))
(assert
 (>= l_0_10_108 0.0))
(assert
 (>= l_0_10_111 0.0))
(assert
 (>= l_0_10_115 0.0))
(assert
 (>= l_0_10_120 0.0))
(assert
 (>= l_0_10_121 0.0))
(assert
 (>= l_0_10_123 0.0))
(assert
 (>= l_0_10_126 0.0))
(assert
 (>= l_0_10_130 0.0))
(assert
 (>= l_0_10_135 0.0))
(assert
 (>= l_0_10_136 0.0))
(assert
 (>= l_0_10_138 0.0))
(assert
 (>= l_0_10_141 0.0))
(assert
 (>= l_0_10_145 0.0))
(assert
 (>= l_0_10_150 0.0))
(assert
 (let ((?x14867 (* l_0_11_76 l_0_11_76)))
 (let ((?x14862 (* l_0_11_16 l_0_11_16)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x14860 (* ?x14859 l_0_11_26)))
 (let ((?x14858 (- (* (- l_0_11_1) l_0_11_1) (* (* 2.0 l_0_11_101) l_0_11_91))))
 (let ((?x14868 (+ (+ (+ (+ ?x14858 ?x14860) ?x14862) (* (* 8.0 l_0_11_61) l_0_11_71)) ?x14867)))
 (= (+ ?x14868 1.0) 0.0))))))))
(assert
 (let ((?x14890 (* l_0_11_91 l_0_11_91)))
 (let ((?x14887 (* l_0_11_61 l_0_11_61)))
 (let ((?x14888 (* 4.0 ?x14887)))
 (= (- (+ (* 1.0 (* l_0_11_16 l_0_11_16)) ?x14888) ?x14890) 0.0)))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x14925 (* ?x14922 l_0_11_86)))
 (let ((?x14923 (* ?x14922 l_0_11_77)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x14914 (* ?x14913 l_0_11_27)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x14911 (* ?x14910 l_0_11_26)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x14905 (* ?x14859 l_0_11_17)))
 (let ((?x14901 (- (* (* (- 2.0) l_0_11_1) l_0_11_2) (* (* 2.0 l_0_11_101) l_0_11_92))))
 (let ((?x14909 (- (+ (- ?x14901 (* (* 2.0 l_0_11_102) l_0_11_93)) ?x14905) (* (* 4.0 l_0_11_16) l_0_11_26))))
 (let ((?x14921 (+ (+ (+ (+ ?x14909 ?x14911) ?x14914) (* (* 8.0 l_0_11_62) l_0_11_71)) (* (* 8.0 l_0_11_63) l_0_11_72))))
 (= (- (+ ?x14921 ?x14923) ?x14925) 0.0))))))))))))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x15012 (* ?x14922 l_0_11_79)))
 (let ((?x14998 (* l_0_11_46 l_0_11_46)))
 (let ((?x14996 (* l_0_11_31 l_0_11_31)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x14994 (* ?x14993 l_0_11_28)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x14991 (* ?x14990 l_0_11_27)))
 (let ((?x14987 (* 2.0 l_0_11_19)))
 (let ((?x14988 (* ?x14987 l_0_11_26)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x14860 (* ?x14859 l_0_11_26)))
 (let ((?x14984 (* ?x14859 l_0_11_19)))
 (let ((?x14978 (- (* (* (- 2.0) l_0_11_1) l_0_11_4) (* (* 2.0 l_0_11_101) l_0_11_94))))
 (let ((?x14983 (- (- ?x14978 (* (* 2.0 l_0_11_102) l_0_11_95)) (* (* 2.0 l_0_11_103) l_0_11_96))))
 (let ((?x14999 (- (+ (+ (+ (+ (- (+ ?x14983 ?x14984) ?x14860) ?x14988) ?x14991) ?x14994) ?x14996) ?x14998)))
 (let ((?x15005 (+ (- ?x14999 (* (* 2.0 l_0_11_61) l_0_11_71)) (* (* 8.0 l_0_11_64) l_0_11_71))))
 (let ((?x15011 (+ (+ ?x15005 (* (* 8.0 l_0_11_65) l_0_11_72)) (* (* 8.0 l_0_11_66) l_0_11_73))))
 (= (- (+ ?x15011 ?x15012) (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_86)) 0.0))))))))))))))))))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x15117 (* ?x14922 l_0_11_82)))
 (let ((?x15102 (* 2.0 l_0_11_25)))
 (let ((?x15103 (* ?x15102 l_0_11_29)))
 (let ((?x15099 (* 2.0 l_0_11_24)))
 (let ((?x15100 (* ?x15099 l_0_11_28)))
 (let ((?x15096 (* 2.0 l_0_11_23)))
 (let ((?x15097 (* ?x15096 l_0_11_27)))
 (let ((?x15094 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x15091 (* ?x14859 l_0_11_22)))
 (let ((?x15084 (- (* (* (- 2.0) l_0_11_1) l_0_11_7) (* (* 2.0 l_0_11_100) l_0_11_104))))
 (let ((?x15088 (- (- ?x15084 (* (* 2.0 l_0_11_101) l_0_11_97)) (* (* 2.0 l_0_11_102) l_0_11_98))))
 (let ((?x15098 (+ (+ (+ (- ?x15088 (* (* 2.0 l_0_11_103) l_0_11_99)) ?x15091) ?x15094) ?x15097)))
 (let ((?x15110 (+ (+ (+ (+ ?x15098 ?x15100) ?x15103) (* (* 8.0 l_0_11_67) l_0_11_71)) (* (* 8.0 l_0_11_68) l_0_11_72))))
 (let ((?x15116 (+ (+ ?x15110 (* (* 8.0 l_0_11_69) l_0_11_73)) (* (* 8.0 l_0_11_70) l_0_11_74))))
 (= (+ ?x15116 ?x15117) 0.0))))))))))))))))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x14925 (* ?x14922 l_0_11_86)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x14860 (* ?x14859 l_0_11_26)))
 (let ((?x15153 (* l_0_11_105 l_0_11_105)))
 (let ((?x15149 (* l_0_11_104 l_0_11_104)))
 (let ((?x15145 (* l_0_11_103 l_0_11_103)))
 (let ((?x15141 (* l_0_11_102 l_0_11_102)))
 (let ((?x15143 (- (- (* (* (- 2.0) l_0_11_1) l_0_11_11) (* l_0_11_101 l_0_11_101)) ?x15141)))
 (let ((?x15171 (+ (+ (- (- (- ?x15143 ?x15145) ?x15149) ?x15153) ?x14860) (* 1.0 (* l_0_11_26 l_0_11_26)))))
 (let ((?x15177 (+ (+ ?x15171 (* 1.0 (* l_0_11_27 l_0_11_27))) (* 1.0 (* l_0_11_28 l_0_11_28)))))
 (let ((?x15183 (+ (+ ?x15177 (* 1.0 (* l_0_11_29 l_0_11_29))) (* 1.0 (* l_0_11_30 l_0_11_30)))))
 (let ((?x15189 (+ (+ ?x15183 (* 4.0 (* l_0_11_71 l_0_11_71))) (* 4.0 (* l_0_11_72 l_0_11_72)))))
 (let ((?x15195 (+ (+ ?x15189 (* 4.0 (* l_0_11_73 l_0_11_73))) (* 4.0 (* l_0_11_74 l_0_11_74)))))
 (= (+ (+ ?x15195 (* 4.0 (* l_0_11_75 l_0_11_75))) ?x14925) 0.0))))))))))))))))
(assert
 (let ((?x15250 (* l_0_11_78 l_0_11_78)))
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15248 (* ?x15247 l_0_11_87)))
 (let ((?x15245 (* l_0_11_77 l_0_11_77)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15243 (* ?x15242 l_0_11_86)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15240 (* ?x15239 l_0_11_56)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15237 (* ?x15236 l_0_11_41)))
 (let ((?x15234 (* l_0_11_3 l_0_11_3)))
 (let ((?x15232 (* l_0_11_2 l_0_11_2)))
 (let ((?x15230 (* l_0_11_18 l_0_11_18)))
 (let ((?x15229 (- (+ (* (* (- 4.0) l_0_11_17) l_0_11_26) (* l_0_11_17 l_0_11_17)) (* (* 4.0 l_0_11_18) l_0_11_27))))
 (let ((?x15246 (+ (- (- (+ (- (- (+ ?x15229 ?x15230) ?x15232) ?x15234) ?x15237) ?x15240) ?x15243) ?x15245)))
 (= (+ (- ?x15246 ?x15248) ?x15250) 0.0)))))))))))))))))
(assert
 (let ((?x15319 (* 2.0 l_0_11_81)))
 (let ((?x15320 (* ?x15319 l_0_11_88)))
 (let ((?x15316 (* 2.0 l_0_11_80)))
 (let ((?x15317 (* ?x15316 l_0_11_87)))
 (let ((?x15313 (* 2.0 l_0_11_79)))
 (let ((?x15314 (* ?x15313 l_0_11_86)))
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15308 (* ?x15247 l_0_11_80)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15303 (* ?x15242 l_0_11_79)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15295 (* ?x15239 l_0_11_47)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15293 (* ?x15236 l_0_11_32)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x14914 (* ?x14913 l_0_11_27)))
 (let ((?x15275 (* ?x14913 l_0_11_20)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x14911 (* ?x14910 l_0_11_26)))
 (let ((?x15273 (* ?x14910 l_0_11_19)))
 (let ((?x15280 (- (- (+ (- ?x15273 ?x14911) ?x15275) ?x14914) (* (* 4.0 l_0_11_19) l_0_11_26))))
 (let ((?x15286 (- (- ?x15280 (* (* 2.0 l_0_11_2) l_0_11_4)) (* (* 4.0 l_0_11_20) l_0_11_27))))
 (let ((?x15292 (- (- ?x15286 (* (* 4.0 l_0_11_21) l_0_11_28)) (* (* 2.0 l_0_11_3) l_0_11_5))))
 (let ((?x15302 (- (- (- (+ ?x15292 ?x15293) ?x15295) (* (* 2.0 l_0_11_62) l_0_11_71)) (* (* 2.0 l_0_11_63) l_0_11_72))))
 (let ((?x15312 (- (+ (- (+ ?x15302 ?x15303) (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_86)) ?x15308) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_87))))
 (= (- (- (- ?x15312 ?x15314) ?x15317) ?x15320) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x15385 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x15382 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x15379 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x15376 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15373 (* ?x15247 l_0_11_83)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15371 (* ?x15242 l_0_11_82)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x15353 (* ?x14913 l_0_11_23)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x15352 (* ?x14910 l_0_11_22)))
 (let ((?x15359 (- (- (+ ?x15352 ?x15353) (* (* 2.0 l_0_11_2) l_0_11_7)) (* (* 4.0 l_0_11_22) l_0_11_26))))
 (let ((?x15365 (- (- ?x15359 (* (* 4.0 l_0_11_23) l_0_11_27)) (* (* 4.0 l_0_11_24) l_0_11_28))))
 (let ((?x15370 (- (- ?x15365 (* (* 4.0 l_0_11_25) l_0_11_29)) (* (* 2.0 l_0_11_3) l_0_11_8))))
 (= (- (- (- (- (+ (+ ?x15370 ?x15371) ?x15373) ?x15376) ?x15379) ?x15382) ?x15385) 0.0)))))))))))))))))
(assert
 (let ((?x15452 (* l_0_11_90 l_0_11_90)))
 (let ((?x15450 (* l_0_11_89 l_0_11_89)))
 (let ((?x15448 (* l_0_11_88 l_0_11_88)))
 (let ((?x15446 (* l_0_11_87 l_0_11_87)))
 (let ((?x15444 (* l_0_11_86 l_0_11_86)))
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15248 (* ?x15247 l_0_11_87)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15243 (* ?x15242 l_0_11_86)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x14914 (* ?x14913 l_0_11_27)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x14911 (* ?x14910 l_0_11_26)))
 (let ((?x15424 (- (* (* (- 2.0) l_0_11_11) l_0_11_2) (* (* 2.0 l_0_11_12) l_0_11_3))))
 (let ((?x15432 (- (- (+ (+ ?x15424 ?x14911) ?x14914) (* (* 2.0 l_0_11_26) l_0_11_26)) (* (* 2.0 l_0_11_27) l_0_11_27))))
 (let ((?x15438 (- (- ?x15432 (* (* 2.0 l_0_11_28) l_0_11_28)) (* (* 2.0 l_0_11_29) l_0_11_29))))
 (let ((?x15445 (- (+ (+ (- ?x15438 (* (* 2.0 l_0_11_30) l_0_11_30)) ?x15243) ?x15248) ?x15444)))
 (= (- (- (- (- ?x15445 ?x15446) ?x15448) ?x15450) ?x15452) 0.0)))))))))))))))))))
(assert
 (let ((?x15512 (* l_0_11_81 l_0_11_81)))
 (let ((?x15507 (* l_0_11_80 l_0_11_80)))
 (let ((?x15502 (* l_0_11_79 l_0_11_79)))
 (let ((?x15488 (* l_0_11_6 l_0_11_6)))
 (let ((?x15486 (* l_0_11_5 l_0_11_5)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15484 (* ?x15239 l_0_11_49)))
 (let ((?x15482 (* l_0_11_4 l_0_11_4)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15480 (* ?x15236 l_0_11_34)))
 (let ((?x15478 (* l_0_11_21 l_0_11_21)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x14994 (* ?x14993 l_0_11_28)))
 (let ((?x5832 (* l_0_11_20 l_0_11_20)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x14991 (* ?x14990 l_0_11_27)))
 (let ((?x5830 (- (+ (* (* (- 2.0) l_0_11_19) l_0_11_26) (* l_0_11_19 l_0_11_19)) ?x14991)))
 (let ((?x15487 (- (- (- (+ (+ (- (+ ?x5830 ?x5832) ?x14994) ?x15478) ?x15480) ?x15482) ?x15484) ?x15486)))
 (let ((?x15495 (- (- (- ?x15487 ?x15488) (* (* 2.0 l_0_11_64) l_0_11_71)) (* (* 2.0 l_0_11_65) l_0_11_72))))
 (let ((?x15501 (- (- ?x15495 (* (* 2.0 l_0_11_66) l_0_11_73)) (* (* (/ 1.0 2.0) l_0_11_79) l_0_11_86))))
 (let ((?x15511 (- (+ (- (+ ?x15501 ?x15502) (* (* (/ 1.0 2.0) l_0_11_80) l_0_11_87)) ?x15507) (* (* (/ 1.0 2.0) l_0_11_81) l_0_11_88))))
 (= (+ ?x15511 ?x15512) 0.0)))))))))))))))))))))))
(assert
 (let ((?x15319 (* 2.0 l_0_11_81)))
 (let ((?x15584 (* ?x15319 l_0_11_84)))
 (let ((?x15316 (* 2.0 l_0_11_80)))
 (let ((?x15582 (* ?x15316 l_0_11_83)))
 (let ((?x15313 (* 2.0 l_0_11_79)))
 (let ((?x15580 (* ?x15313 l_0_11_82)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15240 (* ?x15239 l_0_11_56)))
 (let ((?x15559 (* ?x15239 l_0_11_52)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15237 (* ?x15236 l_0_11_41)))
 (let ((?x15553 (* ?x15236 l_0_11_37)))
 (let ((?x15102 (* 2.0 l_0_11_25)))
 (let ((?x15103 (* ?x15102 l_0_11_29)))
 (let ((?x15099 (* 2.0 l_0_11_24)))
 (let ((?x15100 (* ?x15099 l_0_11_28)))
 (let ((?x15096 (* 2.0 l_0_11_23)))
 (let ((?x15097 (* ?x15096 l_0_11_27)))
 (let ((?x15094 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x15547 (* ?x14993 l_0_11_24)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x15545 (* ?x14990 l_0_11_23)))
 (let ((?x14987 (* 2.0 l_0_11_19)))
 (let ((?x5948 (* ?x14987 l_0_11_22)))
 (let ((?x15554 (+ (- (- (- (- (+ (+ ?x5948 ?x15545) ?x15547) ?x15094) ?x15097) ?x15100) ?x15103) ?x15553)))
 (let ((?x15561 (+ (- (- (- ?x15554 ?x15237) (* (* 2.0 l_0_11_4) l_0_11_7)) ?x15559) ?x15240)))
 (let ((?x15567 (- (- ?x15561 (* (* 2.0 l_0_11_5) l_0_11_8)) (* (* 2.0 l_0_11_6) l_0_11_9))))
 (let ((?x15573 (- (- ?x15567 (* (* 2.0 l_0_11_67) l_0_11_71)) (* (* 2.0 l_0_11_68) l_0_11_72))))
 (let ((?x15579 (- (- ?x15573 (* (* 2.0 l_0_11_69) l_0_11_73)) (* (* 2.0 l_0_11_70) l_0_11_74))))
 (let ((?x15588 (- (+ (+ (+ ?x15579 ?x15580) ?x15582) ?x15584) (* (* (/ 1.0 2.0) l_0_11_82) l_0_11_86))))
 (let ((?x15594 (- (- ?x15588 (* (* (/ 1.0 2.0) l_0_11_83) l_0_11_87)) (* (* (/ 1.0 2.0) l_0_11_84) l_0_11_88))))
 (= (- ?x15594 (* (* (/ 1.0 2.0) l_0_11_85) l_0_11_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15319 (* 2.0 l_0_11_81)))
 (let ((?x15320 (* ?x15319 l_0_11_88)))
 (let ((?x15316 (* 2.0 l_0_11_80)))
 (let ((?x15317 (* ?x15316 l_0_11_87)))
 (let ((?x15313 (* 2.0 l_0_11_79)))
 (let ((?x15314 (* ?x15313 l_0_11_86)))
 (let ((?x15196 (* l_0_11_75 l_0_11_75)))
 (let ((?x15193 (* l_0_11_74 l_0_11_74)))
 (let ((?x15190 (* l_0_11_73 l_0_11_73)))
 (let ((?x15187 (* l_0_11_72 l_0_11_72)))
 (let ((?x15184 (* l_0_11_71 l_0_11_71)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15240 (* ?x15239 l_0_11_56)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15237 (* ?x15236 l_0_11_41)))
 (let ((?x15181 (* l_0_11_30 l_0_11_30)))
 (let ((?x15178 (* l_0_11_29 l_0_11_29)))
 (let ((?x15175 (* l_0_11_28 l_0_11_28)))
 (let ((?x15172 (* l_0_11_27 l_0_11_27)))
 (let ((?x15169 (* l_0_11_26 l_0_11_26)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x14994 (* ?x14993 l_0_11_28)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x14991 (* ?x14990 l_0_11_27)))
 (let ((?x14987 (* 2.0 l_0_11_19)))
 (let ((?x14988 (* ?x14987 l_0_11_26)))
 (let ((?x15651 (- (* (* (- 2.0) l_0_11_11) l_0_11_4) (* (* 2.0 l_0_11_12) l_0_11_5))))
 (let ((?x15657 (+ (+ (+ (- ?x15651 (* (* 2.0 l_0_11_13) l_0_11_6)) ?x14988) ?x14991) ?x14994)))
 (let ((?x15664 (- (+ (- (- (- (- (- ?x15657 ?x15169) ?x15172) ?x15175) ?x15178) ?x15181) ?x15237) ?x15240)))
 (let ((?x15671 (+ (+ (- (- (- (- (- ?x15664 ?x15184) ?x15187) ?x15190) ?x15193) ?x15196) ?x15314) ?x15317)))
 (let ((?x15678 (- (- (+ ?x15671 ?x15320) (* (* (/ 1.0 4.0) l_0_11_86) l_0_11_86)) (* (* (/ 1.0 4.0) l_0_11_87) l_0_11_87))))
 (let ((?x15684 (- (- ?x15678 (* (* (/ 1.0 4.0) l_0_11_88) l_0_11_88)) (* (* (/ 1.0 4.0) l_0_11_89) l_0_11_89))))
 (= (- ?x15684 (* (* (/ 1.0 4.0) l_0_11_90) l_0_11_90)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x15731 (* l_0_11_9 l_0_11_9)))
 (let ((?x15729 (* l_0_11_85 l_0_11_85)))
 (let ((?x15727 (* l_0_11_84 l_0_11_84)))
 (let ((?x15725 (* l_0_11_83 l_0_11_83)))
 (let ((?x15723 (* l_0_11_82 l_0_11_82)))
 (let ((?x15721 (* l_0_11_8 l_0_11_8)))
 (let ((?x15719 (* l_0_11_7 l_0_11_7)))
 (let ((?x15717 (* l_0_11_25 l_0_11_25)))
 (let ((?x15715 (* l_0_11_24 l_0_11_24)))
 (let ((?x15713 (* l_0_11_23 l_0_11_23)))
 (let ((?x15714 (+ (+ (* (- l_0_11_10) l_0_11_10) (* l_0_11_22 l_0_11_22)) ?x15713)))
 (let ((?x15728 (+ (+ (+ (- (- (+ (+ ?x15714 ?x15715) ?x15717) ?x15719) ?x15721) ?x15723) ?x15725) ?x15727)))
 (= (- (+ ?x15728 ?x15729) ?x15731) 0.0))))))))))))))
(assert
 (let ((?x15385 (* (* 2.0 l_0_11_85) l_0_11_89)))
 (let ((?x15382 (* (* 2.0 l_0_11_84) l_0_11_88)))
 (let ((?x15379 (* (* 2.0 l_0_11_83) l_0_11_87)))
 (let ((?x15376 (* (* 2.0 l_0_11_82) l_0_11_86)))
 (let ((?x15102 (* 2.0 l_0_11_25)))
 (let ((?x15103 (* ?x15102 l_0_11_29)))
 (let ((?x15099 (* 2.0 l_0_11_24)))
 (let ((?x15100 (* ?x15099 l_0_11_28)))
 (let ((?x15096 (* 2.0 l_0_11_23)))
 (let ((?x15097 (* ?x15096 l_0_11_27)))
 (let ((?x15094 (* (* 2.0 l_0_11_22) l_0_11_26)))
 (let ((?x15749 (- (* (* (- 2.0) l_0_11_10) l_0_11_14) (* (* 2.0 l_0_11_11) l_0_11_7))))
 (let ((?x15753 (- (- ?x15749 (* (* 2.0 l_0_11_12) l_0_11_8)) (* (* 2.0 l_0_11_13) l_0_11_9))))
 (let ((?x15760 (+ (+ (+ (+ (+ (+ (+ ?x15753 ?x15094) ?x15097) ?x15100) ?x15103) ?x15376) ?x15379) ?x15382)))
 (= (+ ?x15760 ?x15385) 0.0))))))))))))))))
(assert
 (let ((?x15452 (* l_0_11_90 l_0_11_90)))
 (let ((?x15450 (* l_0_11_89 l_0_11_89)))
 (let ((?x15448 (* l_0_11_88 l_0_11_88)))
 (let ((?x15446 (* l_0_11_87 l_0_11_87)))
 (let ((?x15444 (* l_0_11_86 l_0_11_86)))
 (let ((?x15181 (* l_0_11_30 l_0_11_30)))
 (let ((?x15178 (* l_0_11_29 l_0_11_29)))
 (let ((?x15175 (* l_0_11_28 l_0_11_28)))
 (let ((?x15172 (* l_0_11_27 l_0_11_27)))
 (let ((?x15169 (* l_0_11_26 l_0_11_26)))
 (let ((?x15779 (* l_0_11_15 l_0_11_15)))
 (let ((?x15777 (* l_0_11_14 l_0_11_14)))
 (let ((?x15775 (* l_0_11_13 l_0_11_13)))
 (let ((?x15776 (- (- (* (- l_0_11_11) l_0_11_11) (* l_0_11_12 l_0_11_12)) ?x15775)))
 (let ((?x15785 (+ (+ (+ (+ (+ (- (- ?x15776 ?x15777) ?x15779) ?x15169) ?x15172) ?x15175) ?x15178) ?x15181)))
 (= (+ (+ (+ (+ (+ ?x15785 ?x15444) ?x15446) ?x15448) ?x15450) ?x15452) 0.0)))))))))))))))))
(assert
 (let ((?x14867 (* l_0_11_76 l_0_11_76)))
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x14905 (* ?x14859 l_0_11_17)))
 (let ((?x15800 (+ (- ?x14905 (* ?x14859 l_0_11_16)) (* (* 8.0 l_0_11_61) l_0_11_62))))
 (= (- (- ?x15800 ?x14867) (* (* 2.0 l_0_11_91) l_0_11_92)) 0.0))))))
(assert
 (let ((?x15832 (* l_0_11_93 l_0_11_93)))
 (let ((?x15830 (* l_0_11_92 l_0_11_92)))
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x14923 (* ?x14922 l_0_11_77)))
 (let ((?x14998 (* l_0_11_46 l_0_11_46)))
 (let ((?x14996 (* l_0_11_31 l_0_11_31)))
 (let ((?x6428 (+ (* (* (- 4.0) l_0_11_16) l_0_11_17) (* 1.0 (* l_0_11_17 l_0_11_17)))))
 (let ((?x15825 (+ (- (+ (+ ?x6428 (* 1.0 (* l_0_11_18 l_0_11_18))) ?x14996) ?x14998) (* 4.0 (* l_0_11_62 l_0_11_62)))))
 (let ((?x15833 (- (- (- (+ ?x15825 (* 4.0 (* l_0_11_63 l_0_11_63))) ?x14923) ?x15830) ?x15832)))
 (= ?x15833 0.0)))))))))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x15012 (* ?x14922 l_0_11_79)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x15275 (* ?x14913 l_0_11_20)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x15273 (* ?x14910 l_0_11_19)))
 (let ((?x15837 (- (* (* (- 2.0) l_0_11_16) l_0_11_17) (* (* 4.0 l_0_11_16) l_0_11_19))))
 (let ((?x15843 (+ (- (+ (+ ?x15837 ?x15273) ?x15275) (* (* 2.0 l_0_11_61) l_0_11_62)) (* (* 8.0 l_0_11_62) l_0_11_64))))
 (let ((?x15847 (- (+ ?x15843 (* (* 8.0 l_0_11_63) l_0_11_65)) (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_77))))
 (let ((?x15854 (- (- (- ?x15847 ?x15012) (* (* 2.0 l_0_11_92) l_0_11_94)) (* (* 2.0 l_0_11_93) l_0_11_95))))
 (= ?x15854 0.0))))))))))))
(assert
 (let ((?x14922 (* 2.0 l_0_11_76)))
 (let ((?x15117 (* ?x14922 l_0_11_82)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x15353 (* ?x14913 l_0_11_23)))
 (let ((?x14910 (* 2.0 l_0_11_17)))
 (let ((?x15352 (* ?x14910 l_0_11_22)))
 (let ((?x15876 (+ (+ (+ (* (* (- 4.0) l_0_11_16) l_0_11_22) ?x15352) ?x15353) (* (* 8.0 l_0_11_62) l_0_11_67))))
 (let ((?x15881 (- (- (+ ?x15876 (* (* 8.0 l_0_11_63) l_0_11_68)) ?x15117) (* (* 2.0 l_0_11_92) l_0_11_97))))
 (= (- ?x15881 (* (* 2.0 l_0_11_93) l_0_11_98)) 0.0))))))))))
(assert
 (let ((?x15250 (* l_0_11_78 l_0_11_78)))
 (let ((?x15245 (* l_0_11_77 l_0_11_77)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15295 (* ?x15239 l_0_11_47)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15293 (* ?x15236 l_0_11_32)))
 (let ((?x15909 (- (* (* (- 2.0) l_0_11_17) l_0_11_17) (* (* 2.0 l_0_11_18) l_0_11_18))))
 (= (- (- (- (+ ?x15909 ?x15293) ?x15295) ?x15245) ?x15250) 0.0)))))))))
(assert
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15308 (* ?x15247 l_0_11_80)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15303 (* ?x15242 l_0_11_79)))
 (let ((?x15826 (* l_0_11_63 l_0_11_63)))
 (let ((?x15823 (* l_0_11_62 l_0_11_62)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15484 (* ?x15239 l_0_11_49)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15480 (* ?x15236 l_0_11_34)))
 (let ((?x15230 (* l_0_11_18 l_0_11_18)))
 (let ((?x15930 (- (- (* (* (- 4.0) l_0_11_17) l_0_11_19) (* l_0_11_17 l_0_11_17)) (* (* 4.0 l_0_11_18) l_0_11_20))))
 (let ((?x15939 (- (- (- (- (- (+ (- ?x15930 ?x15230) ?x15480) ?x15484) ?x15823) ?x15826) ?x15303) (* (* (/ 1.0 4.0) l_0_11_77) l_0_11_77))))
 (= (- (- ?x15939 ?x15308) (* (* (/ 1.0 4.0) l_0_11_78) l_0_11_78)) 0.0)))))))))))))))
(assert
 (let ((?x15247 (* 2.0 l_0_11_78)))
 (let ((?x15373 (* ?x15247 l_0_11_83)))
 (let ((?x15242 (* 2.0 l_0_11_77)))
 (let ((?x15371 (* ?x15242 l_0_11_82)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15559 (* ?x15239 l_0_11_52)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15553 (* ?x15236 l_0_11_37)))
 (let ((?x15956 (- (* (* (- 4.0) l_0_11_17) l_0_11_22) (* (* 4.0 l_0_11_18) l_0_11_23))))
 (= (- (- (- (+ ?x15956 ?x15553) ?x15559) ?x15371) ?x15373) 0.0)))))))))))
(assert
 (let ((?x15512 (* l_0_11_81 l_0_11_81)))
 (let ((?x15507 (* l_0_11_80 l_0_11_80)))
 (let ((?x15502 (* l_0_11_79 l_0_11_79)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x15275 (* ?x14913 l_0_11_20)))
 (let ((?x6824 (- (- (* (* (- 2.0) l_0_11_17) l_0_11_19) ?x15275) (* (* 2.0 l_0_11_19) l_0_11_19))))
 (let ((?x6800 (- (- ?x6824 (* (* 2.0 l_0_11_20) l_0_11_20)) (* (* 2.0 l_0_11_21) l_0_11_21))))
 (let ((?x15968 (- (- ?x6800 (* (* 2.0 l_0_11_62) l_0_11_64)) (* (* 2.0 l_0_11_63) l_0_11_65))))
 (let ((?x15972 (- (- ?x15968 (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_79)) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_80))))
 (= (- (- (- ?x15972 ?x15502) ?x15507) ?x15512) 0.0)))))))))))
(assert
 (let ((?x15319 (* 2.0 l_0_11_81)))
 (let ((?x15584 (* ?x15319 l_0_11_84)))
 (let ((?x15316 (* 2.0 l_0_11_80)))
 (let ((?x15582 (* ?x15316 l_0_11_83)))
 (let ((?x15313 (* 2.0 l_0_11_79)))
 (let ((?x15580 (* ?x15313 l_0_11_82)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15295 (* ?x15239 l_0_11_47)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15293 (* ?x15236 l_0_11_32)))
 (let ((?x14913 (* 2.0 l_0_11_18)))
 (let ((?x15353 (* ?x14913 l_0_11_23)))
 (let ((?x6968 (- (- (* (* (- 2.0) l_0_11_17) l_0_11_22) ?x15353) (* (* 4.0 l_0_11_19) l_0_11_22))))
 (let ((?x6962 (- (- ?x6968 (* (* 4.0 l_0_11_20) l_0_11_23)) (* (* 4.0 l_0_11_21) l_0_11_24))))
 (let ((?x15987 (- (- (+ (- ?x6962 ?x15293) ?x15295) (* (* 2.0 l_0_11_62) l_0_11_67)) (* (* 2.0 l_0_11_63) l_0_11_68))))
 (let ((?x15991 (- (- ?x15987 (* (* (/ 1.0 2.0) l_0_11_77) l_0_11_82)) (* (* (/ 1.0 2.0) l_0_11_78) l_0_11_83))))
 (= (- (- (- ?x15991 ?x15580) ?x15582) ?x15584) 0.0))))))))))))))))))
(assert
 (let ((?x15729 (* l_0_11_85 l_0_11_85)))
 (let ((?x15727 (* l_0_11_84 l_0_11_84)))
 (let ((?x15725 (* l_0_11_83 l_0_11_83)))
 (let ((?x15723 (* l_0_11_82 l_0_11_82)))
 (let ((?x7108 (- (* (* (- 2.0) l_0_11_22) l_0_11_22) (* (* 2.0 l_0_11_23) l_0_11_23))))
 (let ((?x16011 (- (- ?x7108 (* (* 2.0 l_0_11_24) l_0_11_24)) (* (* 2.0 l_0_11_25) l_0_11_25))))
 (= (- (- (- (- ?x16011 ?x15723) ?x15725) ?x15727) ?x15729) 0.0))))))))
(assert
 (let ((?x14887 (* l_0_11_61 l_0_11_61)))
 (let ((?x7195 (+ (- (* (* 2.0 l_0_11_16) l_0_11_19) (* l_0_11_16 l_0_11_16)) (* (* 8.0 l_0_11_61) l_0_11_64))))
 (let ((?x7230 (- (- (- ?x7195 ?x14887) (* (* (/ 1.0 4.0) l_0_11_76) l_0_11_76)) (* (* 2.0 l_0_11_91) l_0_11_94))))
 (= ?x7230 0.0)))))
(assert
 (let ((?x16057 (* l_0_11_96 l_0_11_96)))
 (let ((?x16055 (* l_0_11_95 l_0_11_95)))
 (let ((?x16053 (* l_0_11_94 l_0_11_94)))
 (let ((?x16048 (* l_0_11_66 l_0_11_66)))
 (let ((?x16049 (* 4.0 ?x16048)))
 (let ((?x16045 (* l_0_11_65 l_0_11_65)))
 (let ((?x16046 (* 4.0 ?x16045)))
 (let ((?x16042 (* l_0_11_64 l_0_11_64)))
 (let ((?x16043 (* 4.0 ?x16042)))
 (let ((?x16035 (+ (* (* (- 2.0) l_0_11_16) l_0_11_19) (* 1.0 (* l_0_11_19 l_0_11_19)))))
 (let ((?x16039 (+ (+ ?x16035 (* 1.0 (* l_0_11_20 l_0_11_20))) (* 1.0 (* l_0_11_21 l_0_11_21)))))
 (let ((?x16050 (+ (+ (+ (- ?x16039 (* (* 2.0 l_0_11_61) l_0_11_64)) ?x16043) ?x16046) ?x16049)))
 (let ((?x16058 (- (- (- (- ?x16050 (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_79)) ?x16053) ?x16055) ?x16057)))
 (= ?x16058 0.0)))))))))))))))
(assert
 (let ((?x14998 (* l_0_11_46 l_0_11_46)))
 (let ((?x14996 (* l_0_11_31 l_0_11_31)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x15547 (* ?x14993 l_0_11_24)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x15545 (* ?x14990 l_0_11_23)))
 (let ((?x14987 (* 2.0 l_0_11_19)))
 (let ((?x5948 (* ?x14987 l_0_11_22)))
 (let ((?x16079 (- (+ (+ (+ (* (* (- 2.0) l_0_11_16) l_0_11_22) ?x5948) ?x15545) ?x15547) ?x14996)))
 (let ((?x16084 (+ (- (+ ?x16079 ?x14998) (* (* 2.0 l_0_11_61) l_0_11_67)) (* (* 8.0 l_0_11_64) l_0_11_67))))
 (let ((?x16088 (+ (+ ?x16084 (* (* 8.0 l_0_11_65) l_0_11_68)) (* (* 8.0 l_0_11_66) l_0_11_69))))
 (let ((?x16093 (- (- ?x16088 (* (* (/ 1.0 2.0) l_0_11_76) l_0_11_82)) (* (* 2.0 l_0_11_94) l_0_11_97))))
 (let ((?x16099 (- (- ?x16093 (* (* 2.0 l_0_11_95) l_0_11_98)) (* (* 2.0 l_0_11_96) l_0_11_99))))
 (= ?x16099 0.0)))))))))))))))
(assert
 (let ((?x16048 (* l_0_11_66 l_0_11_66)))
 (let ((?x16045 (* l_0_11_65 l_0_11_65)))
 (let ((?x16042 (* l_0_11_64 l_0_11_64)))
 (let ((?x15478 (* l_0_11_21 l_0_11_21)))
 (let ((?x16116 (- (- (* (- l_0_11_19) l_0_11_19) (* l_0_11_20 l_0_11_20)) ?x15478)))
 (let ((?x16122 (- (- (- (- ?x16116 ?x16042) ?x16045) ?x16048) (* (* (/ 1.0 4.0) l_0_11_79) l_0_11_79))))
 (let ((?x16128 (- (- ?x16122 (* (* (/ 1.0 4.0) l_0_11_80) l_0_11_80)) (* (* (/ 1.0 4.0) l_0_11_81) l_0_11_81))))
 (= ?x16128 0.0)))))))))
(assert
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15484 (* ?x15239 l_0_11_49)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15480 (* ?x15236 l_0_11_34)))
 (let ((?x14993 (* 2.0 l_0_11_21)))
 (let ((?x15547 (* ?x14993 l_0_11_24)))
 (let ((?x14990 (* 2.0 l_0_11_20)))
 (let ((?x15545 (* ?x14990 l_0_11_23)))
 (let ((?x16147 (+ (- (- (- (* (* (- 2.0) l_0_11_19) l_0_11_22) ?x15545) ?x15547) ?x15480) ?x15484)))
 (let ((?x16151 (- (- ?x16147 (* (* 2.0 l_0_11_64) l_0_11_67)) (* (* 2.0 l_0_11_65) l_0_11_68))))
 (let ((?x16155 (- (- ?x16151 (* (* 2.0 l_0_11_66) l_0_11_69)) (* (* (/ 1.0 2.0) l_0_11_79) l_0_11_82))))
 (let ((?x16159 (- (- ?x16155 (* (* (/ 1.0 2.0) l_0_11_80) l_0_11_83)) (* (* (/ 1.0 2.0) l_0_11_81) l_0_11_84))))
 (= ?x16159 0.0))))))))))))))
(assert
 (let ((?x16180 (* l_0_11_70 l_0_11_70)))
 (let ((?x16178 (* l_0_11_69 l_0_11_69)))
 (let ((?x16176 (* l_0_11_68 l_0_11_68)))
 (let ((?x16174 (* l_0_11_67 l_0_11_67)))
 (let ((?x15239 (* 2.0 l_0_11_46)))
 (let ((?x15559 (* ?x15239 l_0_11_52)))
 (let ((?x15236 (* 2.0 l_0_11_31)))
 (let ((?x15553 (* ?x15236 l_0_11_37)))
 (let ((?x15717 (* l_0_11_25 l_0_11_25)))
 (let ((?x15715 (* l_0_11_24 l_0_11_24)))
 (let ((?x16170 (- (- (* (- l_0_11_22) l_0_11_22) (* l_0_11_23 l_0_11_23)) ?x15715)))
 (let ((?x16181 (- (- (- (- (+ (- (- ?x16170 ?x15717) ?x15553) ?x15559) ?x16174) ?x16176) ?x16178) ?x16180)))
 (let ((?x16187 (- (- ?x16181 (* (* (/ 1.0 4.0) l_0_11_82) l_0_11_82)) (* (* (/ 1.0 4.0) l_0_11_83) l_0_11_83))))
 (let ((?x16193 (- (- ?x16187 (* (* (/ 1.0 4.0) l_0_11_84) l_0_11_84)) (* (* (/ 1.0 4.0) l_0_11_85) l_0_11_85))))
 (= ?x16193 0.0))))))))))))))))
(assert
 (let ((?x14859 (* 2.0 l_0_11_16)))
 (let ((?x15091 (* ?x14859 l_0_11_22)))
 (let ((?x16218 (- (+ ?x15091 (* (* 8.0 l_0_11_61) l_0_11_67)) (* (* 2.0 l_0_11_91) l_0_11_97))))
 (= ?x16218 0.0)))))
(assert
 (let ((?x16247 (* l_0_11_99 l_0_11_99)))
 (let ((?x16245 (* l_0_11_98 l_0_11_98)))
 (let ((?x16243 (* l_0_11_97 l_0_11_97)))
 (let ((?x16180 (* l_0_11_70 l_0_11_70)))
 (let ((?x16241 (* 4.0 ?x16180)))
 (let ((?x16178 (* l_0_11_69 l_0_11_69)))
 (let ((?x16239 (* 4.0 ?x16178)))
 (let ((?x16176 (* l_0_11_68 l_0_11_68)))
 (let ((?x16237 (* 4.0 ?x16176)))
 (let ((?x16174 (* l_0_11_67 l_0_11_67)))
 (let ((?x16235 (* 4.0 ?x16174)))
 (let ((?x16228 (+ (* (- l_0_11_100) l_0_11_100) (* 1.0 (* l_0_11_22 l_0_11_22)))))
 (let ((?x16232 (+ (+ ?x16228 (* 1.0 (* l_0_11_23 l_0_11_23))) (* 1.0 (* l_0_11_24 l_0_11_24)))))
 (let ((?x16240 (+ (+ (+ (+ ?x16232 (* 1.0 (* l_0_11_25 l_0_11_25))) ?x16235) ?x16237) ?x16239)))
 (= (- (- (- (+ ?x16240 ?x16241) ?x16243) ?x16245) ?x16247) 0.0))))))))))))))))
(assert
 (let ((?x16275 (* 2.0 l_0_11_51)))
 (let ((?x16276 (* ?x16275 l_0_11_54)))
 (let ((?x16272 (* 2.0 l_0_11_50)))
 (let ((?x16273 (* ?x16272 l_0_11_53)))
 (let ((?x16269 (* 2.0 l_0_11_49)))
 (let ((?x16270 (* ?x16269 l_0_11_52)))
 (let ((?x16267 (* l_0_11_48 l_0_11_48)))
 (let ((?x16265 (* l_0_11_47 l_0_11_47)))
 (let ((?x16262 (* 2.0 l_0_11_36)))
 (let ((?x16263 (* ?x16262 l_0_11_39)))
 (let ((?x16259 (* 2.0 l_0_11_35)))
 (let ((?x16260 (* ?x16259 l_0_11_38)))
 (let ((?x16256 (* 2.0 l_0_11_34)))
 (let ((?x16257 (* ?x16256 l_0_11_37)))
 (let ((?x16258 (+ (- (* (- l_0_11_32) l_0_11_32) (* l_0_11_33 l_0_11_33)) ?x16257)))
 (let ((?x16277 (- (- (- (+ (+ (+ (+ ?x16258 ?x16260) ?x16263) ?x16265) ?x16267) ?x16270) ?x16273) ?x16276)))
 (= ?x16277 0.0))))))))))))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16309 (* ?x16308 l_0_11_50)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16306 (* ?x16305 l_0_11_49)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16303 (* ?x16302 l_0_11_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_32) l_0_11_34) ?x16303) ?x16306) ?x16309) 0.0))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16329 (* ?x16308 l_0_11_53)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16327 (* ?x16305 l_0_11_52)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16325 (* ?x16302 l_0_11_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_11_32) l_0_11_37) ?x16325) ?x16327) ?x16329) 0.0))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16353 (* ?x16308 l_0_11_57)))
 (let ((?x16329 (* ?x16308 l_0_11_53)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16350 (* ?x16305 l_0_11_56)))
 (let ((?x16327 (* ?x16305 l_0_11_52)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16347 (* ?x16302 l_0_11_42)))
 (let ((?x16325 (* ?x16302 l_0_11_38)))
 (let ((?x7802 (* 2.0 l_0_11_32)))
 (let ((?x16339 (* ?x7802 l_0_11_41)))
 (let ((?x16338 (* ?x7802 l_0_11_37)))
 (let ((?x16354 (+ (- (+ (- (- (+ (- ?x16338 ?x16339) ?x16325) ?x16347) ?x16327) ?x16350) ?x16329) ?x16353)))
 (= ?x16354 0.0)))))))))))))))
(assert
 (let ((?x7822 (* l_0_11_51 l_0_11_51)))
 (let ((?x7829 (* l_0_11_50 l_0_11_50)))
 (let ((?x7830 (* l_0_11_49 l_0_11_49)))
 (let ((?x7795 (* l_0_11_36 l_0_11_36)))
 (let ((?x7798 (- (- (* (- l_0_11_34) l_0_11_34) (* l_0_11_35 l_0_11_35)) ?x7795)))
 (= (+ (+ (+ ?x7798 ?x7830) ?x7829) ?x7822) 0.0)))))))
(assert
 (let ((?x16275 (* 2.0 l_0_11_51)))
 (let ((?x16276 (* ?x16275 l_0_11_54)))
 (let ((?x16272 (* 2.0 l_0_11_50)))
 (let ((?x16273 (* ?x16272 l_0_11_53)))
 (let ((?x16269 (* 2.0 l_0_11_49)))
 (let ((?x16270 (* ?x16269 l_0_11_52)))
 (let ((?x16262 (* 2.0 l_0_11_36)))
 (let ((?x16263 (* ?x16262 l_0_11_39)))
 (let ((?x16259 (* 2.0 l_0_11_35)))
 (let ((?x16260 (* ?x16259 l_0_11_38)))
 (let ((?x16381 (+ (+ (- (- (* (* (- 2.0) l_0_11_34) l_0_11_37) ?x16260) ?x16263) ?x16270) ?x16273)))
 (= (+ ?x16381 ?x16276) 0.0)))))))))))))
(assert
 (let ((?x16275 (* 2.0 l_0_11_51)))
 (let ((?x16394 (* ?x16275 l_0_11_58)))
 (let ((?x16276 (* ?x16275 l_0_11_54)))
 (let ((?x16272 (* 2.0 l_0_11_50)))
 (let ((?x16391 (* ?x16272 l_0_11_57)))
 (let ((?x16273 (* ?x16272 l_0_11_53)))
 (let ((?x16269 (* 2.0 l_0_11_49)))
 (let ((?x16388 (* ?x16269 l_0_11_56)))
 (let ((?x16270 (* ?x16269 l_0_11_52)))
 (let ((?x16262 (* 2.0 l_0_11_36)))
 (let ((?x16385 (* ?x16262 l_0_11_43)))
 (let ((?x16263 (* ?x16262 l_0_11_39)))
 (let ((?x16259 (* 2.0 l_0_11_35)))
 (let ((?x7912 (* ?x16259 l_0_11_42)))
 (let ((?x16260 (* ?x16259 l_0_11_38)))
 (let ((?x16256 (* 2.0 l_0_11_34)))
 (let ((?x7923 (* ?x16256 l_0_11_41)))
 (let ((?x16257 (* ?x16256 l_0_11_37)))
 (let ((?x16389 (+ (- (- (+ (- (+ (- ?x16257 ?x7923) ?x16260) ?x7912) ?x16263) ?x16385) ?x16270) ?x16388)))
 (= (+ (- (+ (- ?x16389 ?x16273) ?x16391) ?x16276) ?x16394) 0.0)))))))))))))))))))))
(assert
 (let ((?x16437 (* l_0_11_55 l_0_11_55)))
 (let ((?x16435 (* l_0_11_54 l_0_11_54)))
 (let ((?x16433 (* l_0_11_53 l_0_11_53)))
 (let ((?x16431 (* l_0_11_52 l_0_11_52)))
 (let ((?x16429 (* l_0_11_40 l_0_11_40)))
 (let ((?x16427 (* l_0_11_39 l_0_11_39)))
 (let ((?x16428 (- (- (* (- l_0_11_37) l_0_11_37) (* l_0_11_38 l_0_11_38)) ?x16427)))
 (= (+ (+ (+ (+ (- ?x16428 ?x16429) ?x16431) ?x16433) ?x16435) ?x16437) 0.0)))))))))
(assert
 (let ((?x16437 (* l_0_11_55 l_0_11_55)))
 (let ((?x16482 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16435 (* l_0_11_54 l_0_11_54)))
 (let ((?x16478 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16433 (* l_0_11_53 l_0_11_53)))
 (let ((?x16474 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16431 (* l_0_11_52 l_0_11_52)))
 (let ((?x16470 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16429 (* l_0_11_40 l_0_11_40)))
 (let ((?x16466 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16427 (* l_0_11_39 l_0_11_39)))
 (let ((?x16462 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16425 (* l_0_11_38 l_0_11_38)))
 (let ((?x16458 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x16459 (- (+ (* (* (- 2.0) l_0_11_37) l_0_11_41) (* l_0_11_37 l_0_11_37)) ?x16458)))
 (let ((?x16472 (- (+ (+ (- (+ (- (+ ?x16459 ?x16425) ?x16462) ?x16427) ?x16466) ?x16429) ?x16470) ?x16431)))
 (= (- (+ (- (+ (- (+ ?x16472 ?x16474) ?x16433) ?x16478) ?x16435) ?x16482) ?x16437) 0.0))))))))))))))))))
(assert
 (let ((?x16526 (* l_0_11_60 l_0_11_60)))
 (let ((?x16524 (* l_0_11_59 l_0_11_59)))
 (let ((?x16522 (* l_0_11_58 l_0_11_58)))
 (let ((?x16520 (* l_0_11_57 l_0_11_57)))
 (let ((?x16518 (* l_0_11_56 l_0_11_56)))
 (let ((?x16482 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16478 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16474 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16470 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16512 (* l_0_11_45 l_0_11_45)))
 (let ((?x16510 (* l_0_11_44 l_0_11_44)))
 (let ((?x16508 (* l_0_11_43 l_0_11_43)))
 (let ((?x16506 (* l_0_11_42 l_0_11_42)))
 (let ((?x7980 (* l_0_11_41 l_0_11_41)))
 (let ((?x16466 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16462 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16458 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x7979 (+ (+ (+ (* (* 2.0 l_0_11_37) l_0_11_41) ?x16458) ?x16462) ?x16466)))
 (let ((?x16515 (- (- (- (- (- (- (- ?x7979 ?x7980) ?x16506) ?x16508) ?x16510) ?x16512) ?x16470) ?x16474)))
 (let ((?x16527 (+ (+ (+ (+ (+ (- (- ?x16515 ?x16478) ?x16482) ?x16518) ?x16520) ?x16522) ?x16524) ?x16526)))
 (= ?x16527 0.0))))))))))))))))))))))
(assert
 (let ((?x16267 (* l_0_11_48 l_0_11_48)))
 (let ((?x16265 (* l_0_11_47 l_0_11_47)))
 (let ((?x7720 (* l_0_11_33 l_0_11_33)))
 (let ((?x16280 (* l_0_11_32 l_0_11_32)))
 (let ((?x8077 (+ ?x16280 ?x7720)))
 (= (- (- ?x8077 ?x16265) ?x16267) 0.0)))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16309 (* ?x16308 l_0_11_50)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16306 (* ?x16305 l_0_11_49)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16303 (* ?x16302 l_0_11_35)))
 (= (- (- (+ (* (* 2.0 l_0_11_32) l_0_11_34) ?x16303) ?x16306) ?x16309) 0.0))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16329 (* ?x16308 l_0_11_53)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16327 (* ?x16305 l_0_11_52)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16325 (* ?x16302 l_0_11_38)))
 (let ((?x7802 (* 2.0 l_0_11_32)))
 (let ((?x16338 (* ?x7802 l_0_11_37)))
 (= (- (- (+ ?x16338 ?x16325) ?x16327) ?x16329) 0.0))))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16353 (* ?x16308 l_0_11_57)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16350 (* ?x16305 l_0_11_56)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16347 (* ?x16302 l_0_11_42)))
 (let ((?x7802 (* 2.0 l_0_11_32)))
 (let ((?x16339 (* ?x7802 l_0_11_41)))
 (= (- (- (+ ?x16339 ?x16347) ?x16350) ?x16353) 0.0))))))))))
(assert
 (let ((?x7822 (* l_0_11_51 l_0_11_51)))
 (let ((?x7829 (* l_0_11_50 l_0_11_50)))
 (let ((?x7830 (* l_0_11_49 l_0_11_49)))
 (let ((?x7795 (* l_0_11_36 l_0_11_36)))
 (let ((?x8170 (- (+ (+ (* l_0_11_34 l_0_11_34) (* l_0_11_35 l_0_11_35)) ?x7795) ?x7830)))
 (= (- (- ?x8170 ?x7829) ?x7822) 0.0)))))))
(assert
 (let ((?x16275 (* 2.0 l_0_11_51)))
 (let ((?x16394 (* ?x16275 l_0_11_58)))
 (let ((?x16272 (* 2.0 l_0_11_50)))
 (let ((?x16391 (* ?x16272 l_0_11_57)))
 (let ((?x16269 (* 2.0 l_0_11_49)))
 (let ((?x16388 (* ?x16269 l_0_11_56)))
 (let ((?x16267 (* l_0_11_48 l_0_11_48)))
 (let ((?x16265 (* l_0_11_47 l_0_11_47)))
 (let ((?x16262 (* 2.0 l_0_11_36)))
 (let ((?x16385 (* ?x16262 l_0_11_43)))
 (let ((?x16259 (* 2.0 l_0_11_35)))
 (let ((?x7912 (* ?x16259 l_0_11_42)))
 (let ((?x16256 (* 2.0 l_0_11_34)))
 (let ((?x7923 (* ?x16256 l_0_11_41)))
 (let ((?x7720 (* l_0_11_33 l_0_11_33)))
 (let ((?x16280 (* l_0_11_32 l_0_11_32)))
 (let ((?x8077 (+ ?x16280 ?x7720)))
 (let ((?x8174 (- (- (- (- (+ (+ (+ ?x8077 ?x7923) ?x7912) ?x16385) ?x16265) ?x16267) ?x16388) ?x16391)))
 (= (- ?x8174 ?x16394) 0.0))))))))))))))))))))
(assert
 (let ((?x16437 (* l_0_11_55 l_0_11_55)))
 (let ((?x16435 (* l_0_11_54 l_0_11_54)))
 (let ((?x16433 (* l_0_11_53 l_0_11_53)))
 (let ((?x16431 (* l_0_11_52 l_0_11_52)))
 (let ((?x16429 (* l_0_11_40 l_0_11_40)))
 (let ((?x16427 (* l_0_11_39 l_0_11_39)))
 (let ((?x8194 (+ (+ (+ (* l_0_11_37 l_0_11_37) (* l_0_11_38 l_0_11_38)) ?x16427) ?x16429)))
 (= (- (- (- (- ?x8194 ?x16431) ?x16433) ?x16435) ?x16437) 0.0)))))))))
(assert
 (let ((?x16482 (* (* 2.0 l_0_11_55) l_0_11_59)))
 (let ((?x16478 (* (* 2.0 l_0_11_54) l_0_11_58)))
 (let ((?x16474 (* (* 2.0 l_0_11_53) l_0_11_57)))
 (let ((?x16470 (* (* 2.0 l_0_11_52) l_0_11_56)))
 (let ((?x16466 (* (* 2.0 l_0_11_40) l_0_11_44)))
 (let ((?x16462 (* (* 2.0 l_0_11_39) l_0_11_43)))
 (let ((?x16458 (* (* 2.0 l_0_11_38) l_0_11_42)))
 (let ((?x7979 (+ (+ (+ (* (* 2.0 l_0_11_37) l_0_11_41) ?x16458) ?x16462) ?x16466)))
 (= (- (- (- (- ?x7979 ?x16470) ?x16474) ?x16478) ?x16482) 0.0))))))))))
(assert
 (let ((?x16526 (* l_0_11_60 l_0_11_60)))
 (let ((?x16524 (* l_0_11_59 l_0_11_59)))
 (let ((?x16522 (* l_0_11_58 l_0_11_58)))
 (let ((?x16520 (* l_0_11_57 l_0_11_57)))
 (let ((?x16518 (* l_0_11_56 l_0_11_56)))
 (let ((?x16512 (* l_0_11_45 l_0_11_45)))
 (let ((?x16510 (* l_0_11_44 l_0_11_44)))
 (let ((?x16508 (* l_0_11_43 l_0_11_43)))
 (let ((?x16599 (+ (+ (+ (* l_0_11_41 l_0_11_41) (* l_0_11_42 l_0_11_42)) ?x16508) ?x16510)))
 (= (- (- (- (- (- (+ ?x16599 ?x16512) ?x16518) ?x16520) ?x16522) ?x16524) ?x16526) 0.0)))))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16309 (* ?x16308 l_0_11_50)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16306 (* ?x16305 l_0_11_49)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16303 (* ?x16302 l_0_11_35)))
 (= (- (- (+ (* (* 2.0 l_0_11_32) l_0_11_34) ?x16303) ?x16306) ?x16309) 0.0))))))))
(assert
 (let ((?x16308 (* 2.0 l_0_11_48)))
 (let ((?x16353 (* ?x16308 l_0_11_57)))
 (let ((?x16305 (* 2.0 l_0_11_47)))
 (let ((?x16350 (* ?x16305 l_0_11_56)))
 (let ((?x16302 (* 2.0 l_0_11_33)))
 (let ((?x16347 (* ?x16302 l_0_11_42)))
 (let ((?x7802 (* 2.0 l_0_11_32)))
 (let ((?x16339 (* ?x7802 l_0_11_41)))
 (= (- (- (+ ?x16339 ?x16347) ?x16350) ?x16353) 0.0))))))))))
(assert
 (let ((?x7822 (* l_0_11_51 l_0_11_51)))
 (let ((?x7829 (* l_0_11_50 l_0_11_50)))
 (let ((?x7830 (* l_0_11_49 l_0_11_49)))
 (let ((?x7795 (* l_0_11_36 l_0_11_36)))
 (let ((?x8170 (- (+ (+ (* l_0_11_34 l_0_11_34) (* l_0_11_35 l_0_11_35)) ?x7795) ?x7830)))
 (= (- (- ?x8170 ?x7829) ?x7822) 0.0)))))))
(assert
 (let ((?x16275 (* 2.0 l_0_11_51)))
 (let ((?x16394 (* ?x16275 l_0_11_58)))
 (let ((?x16272 (* 2.0 l_0_11_50)))
 (let ((?x16391 (* ?x16272 l_0_11_57)))
 (let ((?x16269 (* 2.0 l_0_11_49)))
 (let ((?x16388 (* ?x16269 l_0_11_56)))
 (let ((?x16262 (* 2.0 l_0_11_36)))
 (let ((?x16385 (* ?x16262 l_0_11_43)))
 (let ((?x16259 (* 2.0 l_0_11_35)))
 (let ((?x7912 (* ?x16259 l_0_11_42)))
 (let ((?x16256 (* 2.0 l_0_11_34)))
 (let ((?x7923 (* ?x16256 l_0_11_41)))
 (= (- (- (- (+ (+ ?x7923 ?x7912) ?x16385) ?x16388) ?x16391) ?x16394) 0.0))))))))))))))
(assert
 (let ((?x16526 (* l_0_11_60 l_0_11_60)))
 (let ((?x16524 (* l_0_11_59 l_0_11_59)))
 (let ((?x16522 (* l_0_11_58 l_0_11_58)))
 (let ((?x16520 (* l_0_11_57 l_0_11_57)))
 (let ((?x16518 (* l_0_11_56 l_0_11_56)))
 (let ((?x16512 (* l_0_11_45 l_0_11_45)))
 (let ((?x16510 (* l_0_11_44 l_0_11_44)))
 (let ((?x16508 (* l_0_11_43 l_0_11_43)))
 (let ((?x16599 (+ (+ (+ (* l_0_11_41 l_0_11_41) (* l_0_11_42 l_0_11_42)) ?x16508) ?x16510)))
 (= (- (- (- (- (- (+ ?x16599 ?x16512) ?x16518) ?x16520) ?x16522) ?x16524) ?x16526) 0.0)))))))))))
(assert
 (>= l_0_11_1 0.0))
(assert
 (>= l_0_11_3 0.0))
(assert
 (>= l_0_11_6 0.0))
(assert
 (>= l_0_11_10 0.0))
(assert
 (>= l_0_11_15 0.0))
(assert
 (>= l_0_11_16 0.0))
(assert
 (>= l_0_11_18 0.0))
(assert
 (>= l_0_11_21 0.0))
(assert
 (>= l_0_11_25 0.0))
(assert
 (>= l_0_11_30 0.0))
(assert
 (>= l_0_11_31 0.0))
(assert
 (>= l_0_11_33 0.0))
(assert
 (>= l_0_11_36 0.0))
(assert
 (>= l_0_11_40 0.0))
(assert
 (>= l_0_11_45 0.0))
(assert
 (>= l_0_11_46 0.0))
(assert
 (>= l_0_11_48 0.0))
(assert
 (>= l_0_11_51 0.0))
(assert
 (>= l_0_11_55 0.0))
(assert
 (>= l_0_11_60 0.0))
(assert
 (>= l_0_11_61 0.0))
(assert
 (>= l_0_11_63 0.0))
(assert
 (>= l_0_11_66 0.0))
(assert
 (>= l_0_11_70 0.0))
(assert
 (>= l_0_11_75 0.0))
(assert
 (>= l_0_11_76 0.0))
(assert
 (>= l_0_11_78 0.0))
(assert
 (>= l_0_11_81 0.0))
(assert
 (>= l_0_11_85 0.0))
(assert
 (>= l_0_11_90 0.0))
(assert
 (>= l_0_11_91 0.0))
(assert
 (>= l_0_11_93 0.0))
(assert
 (>= l_0_11_96 0.0))
(assert
 (>= l_0_11_100 0.0))
(assert
 (>= l_0_11_105 0.0))
(assert
 (let ((?x16665 (* l_0_12_76 l_0_12_76)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16658 (* ?x16657 l_0_12_17)))
 (let ((?x16661 (- (+ (* (* (- 2.0) l_0_12_106) l_0_12_107) ?x16658) (* ?x16657 l_0_12_16))))
 (let ((?x16669 (- (- (+ ?x16661 (* (* 8.0 l_0_12_61) l_0_12_62)) ?x16665) (* (* 2.0 l_0_12_91) l_0_12_92))))
 (= (+ ?x16669 1.0) 0.0)))))))
(assert
 (let ((?x16706 (* l_0_12_61 l_0_12_61)))
 (let ((?x16677 (* l_0_12_16 l_0_12_16)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16701 (* ?x16657 l_0_12_19)))
 (let ((?x16705 (+ (- (+ (* (* (- 2.0) l_0_12_106) l_0_12_109) ?x16701) ?x16677) (* (* 8.0 l_0_12_61) l_0_12_64))))
 (let ((?x16712 (- (- (- ?x16705 ?x16706) (* (* (/ 1.0 4.0) l_0_12_76) l_0_12_76)) (* (* 2.0 l_0_12_91) l_0_12_94))))
 (= (+ ?x16712 (/ 1.0 4.0)) 0.0))))))))
(assert
 (let ((?x16751 (* l_0_12_91 l_0_12_91)))
 (let ((?x16706 (* l_0_12_61 l_0_12_61)))
 (let ((?x16749 (* 4.0 ?x16706)))
 (let ((?x16748 (+ (* (- l_0_12_106) l_0_12_106) (* 1.0 (* l_0_12_16 l_0_12_16)))))
 (= (- (- (+ ?x16748 ?x16749) ?x16751) 1.0) 0.0))))))
(assert
 (let ((?x16665 (* l_0_12_76 l_0_12_76)))
 (let ((?x16677 (* l_0_12_16 l_0_12_16)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16773 (* ?x16657 l_0_12_26)))
 (let ((?x16769 (- (* (- l_0_12_1) l_0_12_1) (* (* 2.0 l_0_12_101) l_0_12_91))))
 (let ((?x16777 (+ (+ (+ (- ?x16769 (* (* 2.0 l_0_12_106) l_0_12_116)) ?x16773) ?x16677) (* (* 8.0 l_0_12_61) l_0_12_71))))
 (= (- (+ ?x16777 ?x16665) 1.0) 0.0))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x16836 (* ?x16833 l_0_12_86)))
 (let ((?x16834 (* ?x16833 l_0_12_77)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x16825 (* ?x16824 l_0_12_27)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x16822 (* ?x16821 l_0_12_26)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16658 (* ?x16657 l_0_12_17)))
 (let ((?x16807 (- (* (* (- 2.0) l_0_12_1) l_0_12_2) (* (* 2.0 l_0_12_101) l_0_12_92))))
 (let ((?x16813 (- (- ?x16807 (* (* 2.0 l_0_12_102) l_0_12_93)) (* (* 2.0 l_0_12_107) l_0_12_116))))
 (let ((?x16820 (- (+ (- ?x16813 (* (* 2.0 l_0_12_108) l_0_12_117)) ?x16658) (* (* 4.0 l_0_12_16) l_0_12_26))))
 (let ((?x16832 (+ (+ (+ (+ ?x16820 ?x16822) ?x16825) (* (* 8.0 l_0_12_62) l_0_12_71)) (* (* 8.0 l_0_12_63) l_0_12_72))))
 (= (- (+ ?x16832 ?x16834) ?x16836) 0.0)))))))))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x16915 (* ?x16833 l_0_12_79)))
 (let ((?x16901 (* l_0_12_46 l_0_12_46)))
 (let ((?x16899 (* l_0_12_31 l_0_12_31)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x16897 (* ?x16896 l_0_12_28)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x16894 (* ?x16893 l_0_12_27)))
 (let ((?x16890 (* 2.0 l_0_12_19)))
 (let ((?x16891 (* ?x16890 l_0_12_26)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16773 (* ?x16657 l_0_12_26)))
 (let ((?x16701 (* ?x16657 l_0_12_19)))
 (let ((?x16873 (- (* (* (- 2.0) l_0_12_1) l_0_12_4) (* (* 2.0 l_0_12_101) l_0_12_94))))
 (let ((?x16878 (- (- ?x16873 (* (* 2.0 l_0_12_102) l_0_12_95)) (* (* 2.0 l_0_12_103) l_0_12_96))))
 (let ((?x16884 (- (- ?x16878 (* (* 2.0 l_0_12_109) l_0_12_116)) (* (* 2.0 l_0_12_110) l_0_12_117))))
 (let ((?x16892 (+ (- (+ (- ?x16884 (* (* 2.0 l_0_12_111) l_0_12_118)) ?x16701) ?x16773) ?x16891)))
 (let ((?x16905 (- (- (+ (+ (+ ?x16892 ?x16894) ?x16897) ?x16899) ?x16901) (* (* 2.0 l_0_12_61) l_0_12_71))))
 (let ((?x16911 (+ (+ ?x16905 (* (* 8.0 l_0_12_64) l_0_12_71)) (* (* 8.0 l_0_12_65) l_0_12_72))))
 (let ((?x16919 (- (+ (+ ?x16911 (* (* 8.0 l_0_12_66) l_0_12_73)) ?x16915) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_86))))
 (= ?x16919 0.0))))))))))))))))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x17003 (* ?x16833 l_0_12_82)))
 (let ((?x16988 (* 2.0 l_0_12_25)))
 (let ((?x16989 (* ?x16988 l_0_12_29)))
 (let ((?x16985 (* 2.0 l_0_12_24)))
 (let ((?x16986 (* ?x16985 l_0_12_28)))
 (let ((?x16982 (* 2.0 l_0_12_23)))
 (let ((?x16983 (* ?x16982 l_0_12_27)))
 (let ((?x16980 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16977 (* ?x16657 l_0_12_22)))
 (let ((?x16958 (- (* (* (- 2.0) l_0_12_1) l_0_12_7) (* (* 2.0 l_0_12_100) l_0_12_104))))
 (let ((?x16962 (- (- ?x16958 (* (* 2.0 l_0_12_101) l_0_12_97)) (* (* 2.0 l_0_12_102) l_0_12_98))))
 (let ((?x16967 (- (- ?x16962 (* (* 2.0 l_0_12_103) l_0_12_99)) (* (* 2.0 l_0_12_112) l_0_12_116))))
 (let ((?x16973 (- (- ?x16967 (* (* 2.0 l_0_12_113) l_0_12_117)) (* (* 2.0 l_0_12_114) l_0_12_118))))
 (let ((?x16984 (+ (+ (+ (- ?x16973 (* (* 2.0 l_0_12_115) l_0_12_119)) ?x16977) ?x16980) ?x16983)))
 (let ((?x16996 (+ (+ (+ (+ ?x16984 ?x16986) ?x16989) (* (* 8.0 l_0_12_67) l_0_12_71)) (* (* 8.0 l_0_12_68) l_0_12_72))))
 (let ((?x17002 (+ (+ ?x16996 (* (* 8.0 l_0_12_69) l_0_12_73)) (* (* 8.0 l_0_12_70) l_0_12_74))))
 (= (+ ?x17002 ?x17003) 0.0))))))))))))))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x16836 (* ?x16833 l_0_12_86)))
 (let ((?x17092 (* l_0_12_75 l_0_12_75)))
 (let ((?x17093 (* 4.0 ?x17092)))
 (let ((?x17089 (* l_0_12_74 l_0_12_74)))
 (let ((?x17090 (* 4.0 ?x17089)))
 (let ((?x17086 (* l_0_12_73 l_0_12_73)))
 (let ((?x17087 (* 4.0 ?x17086)))
 (let ((?x17083 (* l_0_12_72 l_0_12_72)))
 (let ((?x17084 (* 4.0 ?x17083)))
 (let ((?x17080 (* l_0_12_71 l_0_12_71)))
 (let ((?x17081 (* 4.0 ?x17080)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16773 (* ?x16657 l_0_12_26)))
 (let ((?x17062 (* l_0_12_120 l_0_12_120)))
 (let ((?x17060 (* l_0_12_119 l_0_12_119)))
 (let ((?x17058 (* l_0_12_118 l_0_12_118)))
 (let ((?x17056 (* l_0_12_117 l_0_12_117)))
 (let ((?x17054 (* l_0_12_116 l_0_12_116)))
 (let ((?x17039 (* l_0_12_105 l_0_12_105)))
 (let ((?x17035 (* l_0_12_104 l_0_12_104)))
 (let ((?x17031 (* l_0_12_103 l_0_12_103)))
 (let ((?x17027 (* l_0_12_102 l_0_12_102)))
 (let ((?x17029 (- (- (* (* (- 2.0) l_0_12_1) l_0_12_11) (* l_0_12_101 l_0_12_101)) ?x17027)))
 (let ((?x17061 (- (- (- (- (- (- (- ?x17029 ?x17031) ?x17035) ?x17039) ?x17054) ?x17056) ?x17058) ?x17060)))
 (let ((?x17070 (+ (+ (+ (- ?x17061 ?x17062) ?x16773) (* 1.0 (* l_0_12_26 l_0_12_26))) (* 1.0 (* l_0_12_27 l_0_12_27)))))
 (let ((?x17076 (+ (+ ?x17070 (* 1.0 (* l_0_12_28 l_0_12_28))) (* 1.0 (* l_0_12_29 l_0_12_29)))))
 (let ((?x17088 (+ (+ (+ (+ ?x17076 (* 1.0 (* l_0_12_30 l_0_12_30))) ?x17081) ?x17084) ?x17087)))
 (= (+ (+ (+ ?x17088 ?x17090) ?x17093) ?x16836) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x17135 (* l_0_12_78 l_0_12_78)))
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17133 (* ?x17132 l_0_12_87)))
 (let ((?x17130 (* l_0_12_77 l_0_12_77)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17128 (* ?x17127 l_0_12_86)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17125 (* ?x17124 l_0_12_56)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17122 (* ?x17121 l_0_12_41)))
 (let ((?x17119 (* l_0_12_3 l_0_12_3)))
 (let ((?x17117 (* l_0_12_2 l_0_12_2)))
 (let ((?x17115 (* l_0_12_18 l_0_12_18)))
 (let ((?x17114 (- (+ (* (* (- 4.0) l_0_12_17) l_0_12_26) (* l_0_12_17 l_0_12_17)) (* (* 4.0 l_0_12_18) l_0_12_27))))
 (let ((?x17131 (+ (- (- (+ (- (- (+ ?x17114 ?x17115) ?x17117) ?x17119) ?x17122) ?x17125) ?x17128) ?x17130)))
 (= (+ (- ?x17131 ?x17133) ?x17135) 0.0)))))))))))))))))
(assert
 (let ((?x17219 (* 2.0 l_0_12_81)))
 (let ((?x17220 (* ?x17219 l_0_12_88)))
 (let ((?x17216 (* 2.0 l_0_12_80)))
 (let ((?x17217 (* ?x17216 l_0_12_87)))
 (let ((?x17213 (* 2.0 l_0_12_79)))
 (let ((?x17214 (* ?x17213 l_0_12_86)))
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17208 (* ?x17132 l_0_12_80)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17203 (* ?x17127 l_0_12_79)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17195 (* ?x17124 l_0_12_47)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17193 (* ?x17121 l_0_12_32)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x16825 (* ?x16824 l_0_12_27)))
 (let ((?x17175 (* ?x16824 l_0_12_20)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x16822 (* ?x16821 l_0_12_26)))
 (let ((?x17165 (* ?x16821 l_0_12_19)))
 (let ((?x17180 (- (- (+ (- ?x17165 ?x16822) ?x17175) ?x16825) (* (* 4.0 l_0_12_19) l_0_12_26))))
 (let ((?x17186 (- (- ?x17180 (* (* 2.0 l_0_12_2) l_0_12_4)) (* (* 4.0 l_0_12_20) l_0_12_27))))
 (let ((?x17192 (- (- ?x17186 (* (* 4.0 l_0_12_21) l_0_12_28)) (* (* 2.0 l_0_12_3) l_0_12_5))))
 (let ((?x17202 (- (- (- (+ ?x17192 ?x17193) ?x17195) (* (* 2.0 l_0_12_62) l_0_12_71)) (* (* 2.0 l_0_12_63) l_0_12_72))))
 (let ((?x17212 (- (+ (- (+ ?x17202 ?x17203) (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_86)) ?x17208) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_87))))
 (= (- (- (- ?x17212 ?x17214) ?x17217) ?x17220) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x17281 (* (* 2.0 l_0_12_85) l_0_12_89)))
 (let ((?x17278 (* (* 2.0 l_0_12_84) l_0_12_88)))
 (let ((?x17275 (* (* 2.0 l_0_12_83) l_0_12_87)))
 (let ((?x17272 (* (* 2.0 l_0_12_82) l_0_12_86)))
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17269 (* ?x17132 l_0_12_83)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17267 (* ?x17127 l_0_12_82)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x17249 (* ?x16824 l_0_12_23)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x17248 (* ?x16821 l_0_12_22)))
 (let ((?x17255 (- (- (+ ?x17248 ?x17249) (* (* 2.0 l_0_12_2) l_0_12_7)) (* (* 4.0 l_0_12_22) l_0_12_26))))
 (let ((?x17261 (- (- ?x17255 (* (* 4.0 l_0_12_23) l_0_12_27)) (* (* 4.0 l_0_12_24) l_0_12_28))))
 (let ((?x17266 (- (- ?x17261 (* (* 4.0 l_0_12_25) l_0_12_29)) (* (* 2.0 l_0_12_3) l_0_12_8))))
 (= (- (- (- (- (+ (+ ?x17266 ?x17267) ?x17269) ?x17272) ?x17275) ?x17278) ?x17281) 0.0)))))))))))))))))
(assert
 (let ((?x17350 (* l_0_12_90 l_0_12_90)))
 (let ((?x17348 (* l_0_12_89 l_0_12_89)))
 (let ((?x17346 (* l_0_12_88 l_0_12_88)))
 (let ((?x17344 (* l_0_12_87 l_0_12_87)))
 (let ((?x17342 (* l_0_12_86 l_0_12_86)))
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17133 (* ?x17132 l_0_12_87)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17128 (* ?x17127 l_0_12_86)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x16825 (* ?x16824 l_0_12_27)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x16822 (* ?x16821 l_0_12_26)))
 (let ((?x17322 (- (* (* (- 2.0) l_0_12_11) l_0_12_2) (* (* 2.0 l_0_12_12) l_0_12_3))))
 (let ((?x17330 (- (- (+ (+ ?x17322 ?x16822) ?x16825) (* (* 2.0 l_0_12_26) l_0_12_26)) (* (* 2.0 l_0_12_27) l_0_12_27))))
 (let ((?x17336 (- (- ?x17330 (* (* 2.0 l_0_12_28) l_0_12_28)) (* (* 2.0 l_0_12_29) l_0_12_29))))
 (let ((?x17343 (- (+ (+ (- ?x17336 (* (* 2.0 l_0_12_30) l_0_12_30)) ?x17128) ?x17133) ?x17342)))
 (= (- (- (- (- ?x17343 ?x17344) ?x17346) ?x17348) ?x17350) 0.0)))))))))))))))))))
(assert
 (let ((?x17415 (* l_0_12_81 l_0_12_81)))
 (let ((?x17410 (* l_0_12_80 l_0_12_80)))
 (let ((?x17405 (* l_0_12_79 l_0_12_79)))
 (let ((?x17391 (* l_0_12_6 l_0_12_6)))
 (let ((?x17389 (* l_0_12_5 l_0_12_5)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17387 (* ?x17124 l_0_12_49)))
 (let ((?x17385 (* l_0_12_4 l_0_12_4)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17383 (* ?x17121 l_0_12_34)))
 (let ((?x17381 (* l_0_12_21 l_0_12_21)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x16897 (* ?x16896 l_0_12_28)))
 (let ((?x17378 (* l_0_12_20 l_0_12_20)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x16894 (* ?x16893 l_0_12_27)))
 (let ((?x17377 (- (+ (* (* (- 2.0) l_0_12_19) l_0_12_26) (* l_0_12_19 l_0_12_19)) ?x16894)))
 (let ((?x17390 (- (- (- (+ (+ (- (+ ?x17377 ?x17378) ?x16897) ?x17381) ?x17383) ?x17385) ?x17387) ?x17389)))
 (let ((?x17398 (- (- (- ?x17390 ?x17391) (* (* 2.0 l_0_12_64) l_0_12_71)) (* (* 2.0 l_0_12_65) l_0_12_72))))
 (let ((?x17404 (- (- ?x17398 (* (* 2.0 l_0_12_66) l_0_12_73)) (* (* (/ 1.0 2.0) l_0_12_79) l_0_12_86))))
 (let ((?x17414 (- (+ (- (+ ?x17404 ?x17405) (* (* (/ 1.0 2.0) l_0_12_80) l_0_12_87)) ?x17410) (* (* (/ 1.0 2.0) l_0_12_81) l_0_12_88))))
 (= (+ ?x17414 ?x17415) 0.0)))))))))))))))))))))))
(assert
 (let ((?x17219 (* 2.0 l_0_12_81)))
 (let ((?x17492 (* ?x17219 l_0_12_84)))
 (let ((?x17216 (* 2.0 l_0_12_80)))
 (let ((?x17490 (* ?x17216 l_0_12_83)))
 (let ((?x17213 (* 2.0 l_0_12_79)))
 (let ((?x17488 (* ?x17213 l_0_12_82)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17125 (* ?x17124 l_0_12_56)))
 (let ((?x17467 (* ?x17124 l_0_12_52)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17122 (* ?x17121 l_0_12_41)))
 (let ((?x17461 (* ?x17121 l_0_12_37)))
 (let ((?x16988 (* 2.0 l_0_12_25)))
 (let ((?x16989 (* ?x16988 l_0_12_29)))
 (let ((?x16985 (* 2.0 l_0_12_24)))
 (let ((?x16986 (* ?x16985 l_0_12_28)))
 (let ((?x16982 (* 2.0 l_0_12_23)))
 (let ((?x16983 (* ?x16982 l_0_12_27)))
 (let ((?x16980 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x17455 (* ?x16896 l_0_12_24)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x17453 (* ?x16893 l_0_12_23)))
 (let ((?x16890 (* 2.0 l_0_12_19)))
 (let ((?x9060 (* ?x16890 l_0_12_22)))
 (let ((?x17462 (+ (- (- (- (- (+ (+ ?x9060 ?x17453) ?x17455) ?x16980) ?x16983) ?x16986) ?x16989) ?x17461)))
 (let ((?x17469 (+ (- (- (- ?x17462 ?x17122) (* (* 2.0 l_0_12_4) l_0_12_7)) ?x17467) ?x17125)))
 (let ((?x17475 (- (- ?x17469 (* (* 2.0 l_0_12_5) l_0_12_8)) (* (* 2.0 l_0_12_6) l_0_12_9))))
 (let ((?x17481 (- (- ?x17475 (* (* 2.0 l_0_12_67) l_0_12_71)) (* (* 2.0 l_0_12_68) l_0_12_72))))
 (let ((?x17487 (- (- ?x17481 (* (* 2.0 l_0_12_69) l_0_12_73)) (* (* 2.0 l_0_12_70) l_0_12_74))))
 (let ((?x17496 (- (+ (+ (+ ?x17487 ?x17488) ?x17490) ?x17492) (* (* (/ 1.0 2.0) l_0_12_82) l_0_12_86))))
 (let ((?x17502 (- (- ?x17496 (* (* (/ 1.0 2.0) l_0_12_83) l_0_12_87)) (* (* (/ 1.0 2.0) l_0_12_84) l_0_12_88))))
 (= (- ?x17502 (* (* (/ 1.0 2.0) l_0_12_85) l_0_12_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17219 (* 2.0 l_0_12_81)))
 (let ((?x17220 (* ?x17219 l_0_12_88)))
 (let ((?x17216 (* 2.0 l_0_12_80)))
 (let ((?x17217 (* ?x17216 l_0_12_87)))
 (let ((?x17213 (* 2.0 l_0_12_79)))
 (let ((?x17214 (* ?x17213 l_0_12_86)))
 (let ((?x17092 (* l_0_12_75 l_0_12_75)))
 (let ((?x17089 (* l_0_12_74 l_0_12_74)))
 (let ((?x17086 (* l_0_12_73 l_0_12_73)))
 (let ((?x17083 (* l_0_12_72 l_0_12_72)))
 (let ((?x17080 (* l_0_12_71 l_0_12_71)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17125 (* ?x17124 l_0_12_56)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17122 (* ?x17121 l_0_12_41)))
 (let ((?x17077 (* l_0_12_30 l_0_12_30)))
 (let ((?x17074 (* l_0_12_29 l_0_12_29)))
 (let ((?x17071 (* l_0_12_28 l_0_12_28)))
 (let ((?x17068 (* l_0_12_27 l_0_12_27)))
 (let ((?x17065 (* l_0_12_26 l_0_12_26)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x16897 (* ?x16896 l_0_12_28)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x16894 (* ?x16893 l_0_12_27)))
 (let ((?x16890 (* 2.0 l_0_12_19)))
 (let ((?x16891 (* ?x16890 l_0_12_26)))
 (let ((?x17550 (- (* (* (- 2.0) l_0_12_11) l_0_12_4) (* (* 2.0 l_0_12_12) l_0_12_5))))
 (let ((?x17556 (+ (+ (+ (- ?x17550 (* (* 2.0 l_0_12_13) l_0_12_6)) ?x16891) ?x16894) ?x16897)))
 (let ((?x17563 (- (+ (- (- (- (- (- ?x17556 ?x17065) ?x17068) ?x17071) ?x17074) ?x17077) ?x17122) ?x17125)))
 (let ((?x17570 (+ (+ (- (- (- (- (- ?x17563 ?x17080) ?x17083) ?x17086) ?x17089) ?x17092) ?x17214) ?x17217)))
 (let ((?x17577 (- (- (+ ?x17570 ?x17220) (* (* (/ 1.0 4.0) l_0_12_86) l_0_12_86)) (* (* (/ 1.0 4.0) l_0_12_87) l_0_12_87))))
 (let ((?x17583 (- (- ?x17577 (* (* (/ 1.0 4.0) l_0_12_88) l_0_12_88)) (* (* (/ 1.0 4.0) l_0_12_89) l_0_12_89))))
 (= (- ?x17583 (* (* (/ 1.0 4.0) l_0_12_90) l_0_12_90)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x17634 (* l_0_12_9 l_0_12_9)))
 (let ((?x17632 (* l_0_12_85 l_0_12_85)))
 (let ((?x17630 (* l_0_12_84 l_0_12_84)))
 (let ((?x17628 (* l_0_12_83 l_0_12_83)))
 (let ((?x17626 (* l_0_12_82 l_0_12_82)))
 (let ((?x17624 (* l_0_12_8 l_0_12_8)))
 (let ((?x17622 (* l_0_12_7 l_0_12_7)))
 (let ((?x17620 (* l_0_12_25 l_0_12_25)))
 (let ((?x17618 (* l_0_12_24 l_0_12_24)))
 (let ((?x17616 (* l_0_12_23 l_0_12_23)))
 (let ((?x17617 (+ (+ (* (- l_0_12_10) l_0_12_10) (* l_0_12_22 l_0_12_22)) ?x17616)))
 (let ((?x17631 (+ (+ (+ (- (- (+ (+ ?x17617 ?x17618) ?x17620) ?x17622) ?x17624) ?x17626) ?x17628) ?x17630)))
 (= (- (+ ?x17631 ?x17632) ?x17634) 0.0))))))))))))))
(assert
 (let ((?x17281 (* (* 2.0 l_0_12_85) l_0_12_89)))
 (let ((?x17278 (* (* 2.0 l_0_12_84) l_0_12_88)))
 (let ((?x17275 (* (* 2.0 l_0_12_83) l_0_12_87)))
 (let ((?x17272 (* (* 2.0 l_0_12_82) l_0_12_86)))
 (let ((?x16988 (* 2.0 l_0_12_25)))
 (let ((?x16989 (* ?x16988 l_0_12_29)))
 (let ((?x16985 (* 2.0 l_0_12_24)))
 (let ((?x16986 (* ?x16985 l_0_12_28)))
 (let ((?x16982 (* 2.0 l_0_12_23)))
 (let ((?x16983 (* ?x16982 l_0_12_27)))
 (let ((?x16980 (* (* 2.0 l_0_12_22) l_0_12_26)))
 (let ((?x17650 (- (* (* (- 2.0) l_0_12_10) l_0_12_14) (* (* 2.0 l_0_12_11) l_0_12_7))))
 (let ((?x17654 (- (- ?x17650 (* (* 2.0 l_0_12_12) l_0_12_8)) (* (* 2.0 l_0_12_13) l_0_12_9))))
 (let ((?x17661 (+ (+ (+ (+ (+ (+ (+ ?x17654 ?x16980) ?x16983) ?x16986) ?x16989) ?x17272) ?x17275) ?x17278)))
 (= (+ ?x17661 ?x17281) 0.0))))))))))))))))
(assert
 (let ((?x17350 (* l_0_12_90 l_0_12_90)))
 (let ((?x17348 (* l_0_12_89 l_0_12_89)))
 (let ((?x17346 (* l_0_12_88 l_0_12_88)))
 (let ((?x17344 (* l_0_12_87 l_0_12_87)))
 (let ((?x17342 (* l_0_12_86 l_0_12_86)))
 (let ((?x17077 (* l_0_12_30 l_0_12_30)))
 (let ((?x17074 (* l_0_12_29 l_0_12_29)))
 (let ((?x17071 (* l_0_12_28 l_0_12_28)))
 (let ((?x17068 (* l_0_12_27 l_0_12_27)))
 (let ((?x17065 (* l_0_12_26 l_0_12_26)))
 (let ((?x17693 (* l_0_12_15 l_0_12_15)))
 (let ((?x17691 (* l_0_12_14 l_0_12_14)))
 (let ((?x17689 (* l_0_12_13 l_0_12_13)))
 (let ((?x17690 (- (- (* (- l_0_12_11) l_0_12_11) (* l_0_12_12 l_0_12_12)) ?x17689)))
 (let ((?x17699 (+ (+ (+ (+ (+ (- (- ?x17690 ?x17691) ?x17693) ?x17065) ?x17068) ?x17071) ?x17074) ?x17077)))
 (= (+ (+ (+ (+ (+ ?x17699 ?x17342) ?x17344) ?x17346) ?x17348) ?x17350) 0.0)))))))))))))))))
(assert
 (let ((?x17737 (* l_0_12_93 l_0_12_93)))
 (let ((?x17735 (* l_0_12_92 l_0_12_92)))
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x16834 (* ?x16833 l_0_12_77)))
 (let ((?x16901 (* l_0_12_46 l_0_12_46)))
 (let ((?x16899 (* l_0_12_31 l_0_12_31)))
 (let ((?x17721 (- (- (* (- l_0_12_107) l_0_12_107) (* l_0_12_108 l_0_12_108)) (* (* 4.0 l_0_12_16) l_0_12_17))))
 (let ((?x17725 (+ (+ ?x17721 (* 1.0 (* l_0_12_17 l_0_12_17))) (* 1.0 (* l_0_12_18 l_0_12_18)))))
 (let ((?x17733 (+ (+ (- (+ ?x17725 ?x16899) ?x16901) (* 4.0 (* l_0_12_62 l_0_12_62))) (* 4.0 (* l_0_12_63 l_0_12_63)))))
 (= (- (- (- ?x17733 ?x16834) ?x17735) ?x17737) 0.0)))))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x16915 (* ?x16833 l_0_12_79)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x17175 (* ?x16824 l_0_12_20)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x17165 (* ?x16821 l_0_12_19)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16658 (* ?x16657 l_0_12_17)))
 (let ((?x17759 (- (* (* (- 2.0) l_0_12_107) l_0_12_109) (* (* 2.0 l_0_12_108) l_0_12_110))))
 (let ((?x17764 (+ (+ (- (- ?x17759 ?x16658) (* (* 4.0 l_0_12_16) l_0_12_19)) ?x17165) ?x17175)))
 (let ((?x17768 (+ (- ?x17764 (* (* 2.0 l_0_12_61) l_0_12_62)) (* (* 8.0 l_0_12_62) l_0_12_64))))
 (let ((?x17772 (- (+ ?x17768 (* (* 8.0 l_0_12_63) l_0_12_65)) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_77))))
 (let ((?x17779 (- (- (- ?x17772 ?x16915) (* (* 2.0 l_0_12_92) l_0_12_94)) (* (* 2.0 l_0_12_93) l_0_12_95))))
 (= ?x17779 0.0)))))))))))))))
(assert
 (let ((?x16833 (* 2.0 l_0_12_76)))
 (let ((?x17003 (* ?x16833 l_0_12_82)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x17249 (* ?x16824 l_0_12_23)))
 (let ((?x16821 (* 2.0 l_0_12_17)))
 (let ((?x17248 (* ?x16821 l_0_12_22)))
 (let ((?x17809 (- (* (* (- 2.0) l_0_12_107) l_0_12_112) (* (* 2.0 l_0_12_108) l_0_12_113))))
 (let ((?x17815 (+ (+ (+ (- ?x17809 (* (* 4.0 l_0_12_16) l_0_12_22)) ?x17248) ?x17249) (* (* 8.0 l_0_12_62) l_0_12_67))))
 (let ((?x17820 (- (- (+ ?x17815 (* (* 8.0 l_0_12_63) l_0_12_68)) ?x17003) (* (* 2.0 l_0_12_92) l_0_12_97))))
 (= (- ?x17820 (* (* 2.0 l_0_12_93) l_0_12_98)) 0.0)))))))))))
(assert
 (let ((?x17135 (* l_0_12_78 l_0_12_78)))
 (let ((?x17130 (* l_0_12_77 l_0_12_77)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17195 (* ?x17124 l_0_12_47)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17193 (* ?x17121 l_0_12_32)))
 (let ((?x17843 (- (* (* (- 2.0) l_0_12_17) l_0_12_17) (* (* 2.0 l_0_12_18) l_0_12_18))))
 (= (- (- (- (+ ?x17843 ?x17193) ?x17195) ?x17130) ?x17135) 0.0)))))))))
(assert
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17208 (* ?x17132 l_0_12_80)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17203 (* ?x17127 l_0_12_79)))
 (let ((?x17731 (* l_0_12_63 l_0_12_63)))
 (let ((?x17728 (* l_0_12_62 l_0_12_62)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17387 (* ?x17124 l_0_12_49)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17383 (* ?x17121 l_0_12_34)))
 (let ((?x17115 (* l_0_12_18 l_0_12_18)))
 (let ((?x9729 (- (- (* (* (- 4.0) l_0_12_17) l_0_12_19) (* l_0_12_17 l_0_12_17)) (* (* 4.0 l_0_12_18) l_0_12_20))))
 (let ((?x9779 (- (- (- (- (- (+ (- ?x9729 ?x17115) ?x17383) ?x17387) ?x17728) ?x17731) ?x17203) (* (* (/ 1.0 4.0) l_0_12_77) l_0_12_77))))
 (= (- (- ?x9779 ?x17208) (* (* (/ 1.0 4.0) l_0_12_78) l_0_12_78)) 0.0)))))))))))))))
(assert
 (let ((?x17132 (* 2.0 l_0_12_78)))
 (let ((?x17269 (* ?x17132 l_0_12_83)))
 (let ((?x17127 (* 2.0 l_0_12_77)))
 (let ((?x17267 (* ?x17127 l_0_12_82)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17467 (* ?x17124 l_0_12_52)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17461 (* ?x17121 l_0_12_37)))
 (let ((?x9846 (- (* (* (- 4.0) l_0_12_17) l_0_12_22) (* (* 4.0 l_0_12_18) l_0_12_23))))
 (= (- (- (- (+ ?x9846 ?x17461) ?x17467) ?x17267) ?x17269) 0.0)))))))))))
(assert
 (let ((?x17415 (* l_0_12_81 l_0_12_81)))
 (let ((?x17410 (* l_0_12_80 l_0_12_80)))
 (let ((?x17405 (* l_0_12_79 l_0_12_79)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x17175 (* ?x16824 l_0_12_20)))
 (let ((?x9906 (- (- (* (* (- 2.0) l_0_12_17) l_0_12_19) ?x17175) (* (* 2.0 l_0_12_19) l_0_12_19))))
 (let ((?x9934 (- (- ?x9906 (* (* 2.0 l_0_12_20) l_0_12_20)) (* (* 2.0 l_0_12_21) l_0_12_21))))
 (let ((?x9959 (- (- ?x9934 (* (* 2.0 l_0_12_62) l_0_12_64)) (* (* 2.0 l_0_12_63) l_0_12_65))))
 (let ((?x9963 (- (- ?x9959 (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_79)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_80))))
 (= (- (- (- ?x9963 ?x17405) ?x17410) ?x17415) 0.0)))))))))))
(assert
 (let ((?x17219 (* 2.0 l_0_12_81)))
 (let ((?x17492 (* ?x17219 l_0_12_84)))
 (let ((?x17216 (* 2.0 l_0_12_80)))
 (let ((?x17490 (* ?x17216 l_0_12_83)))
 (let ((?x17213 (* 2.0 l_0_12_79)))
 (let ((?x17488 (* ?x17213 l_0_12_82)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17195 (* ?x17124 l_0_12_47)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17193 (* ?x17121 l_0_12_32)))
 (let ((?x16824 (* 2.0 l_0_12_18)))
 (let ((?x17249 (* ?x16824 l_0_12_23)))
 (let ((?x10057 (- (- (* (* (- 2.0) l_0_12_17) l_0_12_22) ?x17249) (* (* 4.0 l_0_12_19) l_0_12_22))))
 (let ((?x10056 (- (- ?x10057 (* (* 4.0 l_0_12_20) l_0_12_23)) (* (* 4.0 l_0_12_21) l_0_12_24))))
 (let ((?x17885 (- (- (+ (- ?x10056 ?x17193) ?x17195) (* (* 2.0 l_0_12_62) l_0_12_67)) (* (* 2.0 l_0_12_63) l_0_12_68))))
 (let ((?x17889 (- (- ?x17885 (* (* (/ 1.0 2.0) l_0_12_77) l_0_12_82)) (* (* (/ 1.0 2.0) l_0_12_78) l_0_12_83))))
 (= (- (- (- ?x17889 ?x17488) ?x17490) ?x17492) 0.0))))))))))))))))))
(assert
 (let ((?x17632 (* l_0_12_85 l_0_12_85)))
 (let ((?x17630 (* l_0_12_84 l_0_12_84)))
 (let ((?x17628 (* l_0_12_83 l_0_12_83)))
 (let ((?x17626 (* l_0_12_82 l_0_12_82)))
 (let ((?x10247 (- (* (* (- 2.0) l_0_12_22) l_0_12_22) (* (* 2.0 l_0_12_23) l_0_12_23))))
 (let ((?x10209 (- (- ?x10247 (* (* 2.0 l_0_12_24) l_0_12_24)) (* (* 2.0 l_0_12_25) l_0_12_25))))
 (= (- (- (- (- ?x10209 ?x17626) ?x17628) ?x17630) ?x17632) 0.0))))))))
(assert
 (let ((?x17945 (* l_0_12_96 l_0_12_96)))
 (let ((?x17943 (* l_0_12_95 l_0_12_95)))
 (let ((?x17941 (* l_0_12_94 l_0_12_94)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16701 (* ?x16657 l_0_12_19)))
 (let ((?x10303 (* l_0_12_111 l_0_12_111)))
 (let ((?x17920 (- (- (* (- l_0_12_109) l_0_12_109) (* l_0_12_110 l_0_12_110)) ?x10303)))
 (let ((?x17925 (+ (+ (- ?x17920 ?x16701) (* 1.0 (* l_0_12_19 l_0_12_19))) (* 1.0 (* l_0_12_20 l_0_12_20)))))
 (let ((?x17929 (- (+ ?x17925 (* 1.0 (* l_0_12_21 l_0_12_21))) (* (* 2.0 l_0_12_61) l_0_12_64))))
 (let ((?x17935 (+ (+ ?x17929 (* 4.0 (* l_0_12_64 l_0_12_64))) (* 4.0 (* l_0_12_65 l_0_12_65)))))
 (let ((?x17940 (- (+ ?x17935 (* 4.0 (* l_0_12_66 l_0_12_66))) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_79))))
 (= (- (- (- ?x17940 ?x17941) ?x17943) ?x17945) 0.0)))))))))))))
(assert
 (let ((?x16901 (* l_0_12_46 l_0_12_46)))
 (let ((?x16899 (* l_0_12_31 l_0_12_31)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x17455 (* ?x16896 l_0_12_24)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x17453 (* ?x16893 l_0_12_23)))
 (let ((?x16890 (* 2.0 l_0_12_19)))
 (let ((?x9060 (* ?x16890 l_0_12_22)))
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16977 (* ?x16657 l_0_12_22)))
 (let ((?x17978 (- (* (* (- 2.0) l_0_12_109) l_0_12_112) (* (* 2.0 l_0_12_110) l_0_12_113))))
 (let ((?x17983 (+ (+ (- (- ?x17978 (* (* 2.0 l_0_12_111) l_0_12_114)) ?x16977) ?x9060) ?x17453)))
 (let ((?x17988 (- (+ (- (+ ?x17983 ?x17455) ?x16899) ?x16901) (* (* 2.0 l_0_12_61) l_0_12_67))))
 (let ((?x17992 (+ (+ ?x17988 (* (* 8.0 l_0_12_64) l_0_12_67)) (* (* 8.0 l_0_12_65) l_0_12_68))))
 (let ((?x17996 (- (+ ?x17992 (* (* 8.0 l_0_12_66) l_0_12_69)) (* (* (/ 1.0 2.0) l_0_12_76) l_0_12_82))))
 (let ((?x18002 (- (- ?x17996 (* (* 2.0 l_0_12_94) l_0_12_97)) (* (* 2.0 l_0_12_95) l_0_12_98))))
 (= (- ?x18002 (* (* 2.0 l_0_12_96) l_0_12_99)) 0.0))))))))))))))))))
(assert
 (let ((?x17936 (* l_0_12_66 l_0_12_66)))
 (let ((?x17933 (* l_0_12_65 l_0_12_65)))
 (let ((?x17930 (* l_0_12_64 l_0_12_64)))
 (let ((?x17381 (* l_0_12_21 l_0_12_21)))
 (let ((?x18042 (- (- (* (- l_0_12_19) l_0_12_19) (* l_0_12_20 l_0_12_20)) ?x17381)))
 (let ((?x18048 (- (- (- (- ?x18042 ?x17930) ?x17933) ?x17936) (* (* (/ 1.0 4.0) l_0_12_79) l_0_12_79))))
 (let ((?x18054 (- (- ?x18048 (* (* (/ 1.0 4.0) l_0_12_80) l_0_12_80)) (* (* (/ 1.0 4.0) l_0_12_81) l_0_12_81))))
 (= ?x18054 0.0)))))))))
(assert
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17387 (* ?x17124 l_0_12_49)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17383 (* ?x17121 l_0_12_34)))
 (let ((?x16896 (* 2.0 l_0_12_21)))
 (let ((?x17455 (* ?x16896 l_0_12_24)))
 (let ((?x16893 (* 2.0 l_0_12_20)))
 (let ((?x17453 (* ?x16893 l_0_12_23)))
 (let ((?x18069 (+ (- (- (- (* (* (- 2.0) l_0_12_19) l_0_12_22) ?x17453) ?x17455) ?x17383) ?x17387)))
 (let ((?x18073 (- (- ?x18069 (* (* 2.0 l_0_12_64) l_0_12_67)) (* (* 2.0 l_0_12_65) l_0_12_68))))
 (let ((?x18077 (- (- ?x18073 (* (* 2.0 l_0_12_66) l_0_12_69)) (* (* (/ 1.0 2.0) l_0_12_79) l_0_12_82))))
 (let ((?x18081 (- (- ?x18077 (* (* (/ 1.0 2.0) l_0_12_80) l_0_12_83)) (* (* (/ 1.0 2.0) l_0_12_81) l_0_12_84))))
 (= ?x18081 0.0))))))))))))))
(assert
 (let ((?x18104 (* l_0_12_70 l_0_12_70)))
 (let ((?x18102 (* l_0_12_69 l_0_12_69)))
 (let ((?x18100 (* l_0_12_68 l_0_12_68)))
 (let ((?x18098 (* l_0_12_67 l_0_12_67)))
 (let ((?x17124 (* 2.0 l_0_12_46)))
 (let ((?x17467 (* ?x17124 l_0_12_52)))
 (let ((?x17121 (* 2.0 l_0_12_31)))
 (let ((?x17461 (* ?x17121 l_0_12_37)))
 (let ((?x17620 (* l_0_12_25 l_0_12_25)))
 (let ((?x17618 (* l_0_12_24 l_0_12_24)))
 (let ((?x18094 (- (- (* (- l_0_12_22) l_0_12_22) (* l_0_12_23 l_0_12_23)) ?x17618)))
 (let ((?x18105 (- (- (- (- (+ (- (- ?x18094 ?x17620) ?x17461) ?x17467) ?x18098) ?x18100) ?x18102) ?x18104)))
 (let ((?x18111 (- (- ?x18105 (* (* (/ 1.0 4.0) l_0_12_82) l_0_12_82)) (* (* (/ 1.0 4.0) l_0_12_83) l_0_12_83))))
 (let ((?x18117 (- (- ?x18111 (* (* (/ 1.0 4.0) l_0_12_84) l_0_12_84)) (* (* (/ 1.0 4.0) l_0_12_85) l_0_12_85))))
 (= ?x18117 0.0))))))))))))))))
(assert
 (let ((?x16657 (* 2.0 l_0_12_16)))
 (let ((?x16977 (* ?x16657 l_0_12_22)))
 (let ((?x18152 (+ (+ (* (* (- 2.0) l_0_12_106) l_0_12_112) ?x16977) (* (* 8.0 l_0_12_61) l_0_12_67))))
 (= (- ?x18152 (* (* 2.0 l_0_12_91) l_0_12_97)) 0.0)))))
(assert
 (let ((?x18197 (* l_0_12_99 l_0_12_99)))
 (let ((?x18195 (* l_0_12_98 l_0_12_98)))
 (let ((?x18193 (* l_0_12_97 l_0_12_97)))
 (let ((?x18175 (* l_0_12_115 l_0_12_115)))
 (let ((?x18173 (* l_0_12_114 l_0_12_114)))
 (let ((?x18171 (* l_0_12_113 l_0_12_113)))
 (let ((?x18172 (- (- (* (- l_0_12_100) l_0_12_100) (* l_0_12_112 l_0_12_112)) ?x18171)))
 (let ((?x18180 (+ (+ (- (- ?x18172 ?x18173) ?x18175) (* 1.0 (* l_0_12_22 l_0_12_22))) (* 1.0 (* l_0_12_23 l_0_12_23)))))
 (let ((?x18184 (+ (+ ?x18180 (* 1.0 (* l_0_12_24 l_0_12_24))) (* 1.0 (* l_0_12_25 l_0_12_25)))))
 (let ((?x18188 (+ (+ ?x18184 (* 4.0 (* l_0_12_67 l_0_12_67))) (* 4.0 (* l_0_12_68 l_0_12_68)))))
 (let ((?x18192 (+ (+ ?x18188 (* 4.0 (* l_0_12_69 l_0_12_69))) (* 4.0 (* l_0_12_70 l_0_12_70)))))
 (= (- (- (- ?x18192 ?x18193) ?x18195) ?x18197) 0.0)))))))))))))
(assert
 (let ((?x18234 (* 2.0 l_0_12_51)))
 (let ((?x18235 (* ?x18234 l_0_12_54)))
 (let ((?x18231 (* 2.0 l_0_12_50)))
 (let ((?x18232 (* ?x18231 l_0_12_53)))
 (let ((?x18228 (* 2.0 l_0_12_49)))
 (let ((?x18229 (* ?x18228 l_0_12_52)))
 (let ((?x18226 (* l_0_12_48 l_0_12_48)))
 (let ((?x18224 (* l_0_12_47 l_0_12_47)))
 (let ((?x18221 (* 2.0 l_0_12_36)))
 (let ((?x18222 (* ?x18221 l_0_12_39)))
 (let ((?x18218 (* 2.0 l_0_12_35)))
 (let ((?x18219 (* ?x18218 l_0_12_38)))
 (let ((?x18215 (* 2.0 l_0_12_34)))
 (let ((?x18216 (* ?x18215 l_0_12_37)))
 (let ((?x18217 (+ (- (* (- l_0_12_32) l_0_12_32) (* l_0_12_33 l_0_12_33)) ?x18216)))
 (let ((?x18236 (- (- (- (+ (+ (+ (+ ?x18217 ?x18219) ?x18222) ?x18224) ?x18226) ?x18229) ?x18232) ?x18235)))
 (= ?x18236 0.0))))))))))))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18268 (* ?x18267 l_0_12_50)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18265 (* ?x18264 l_0_12_49)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18262 (* ?x18261 l_0_12_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_32) l_0_12_34) ?x18262) ?x18265) ?x18268) 0.0))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18287 (* ?x18267 l_0_12_53)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18285 (* ?x18264 l_0_12_52)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18283 (* ?x18261 l_0_12_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_12_32) l_0_12_37) ?x18283) ?x18285) ?x18287) 0.0))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18309 (* ?x18267 l_0_12_57)))
 (let ((?x18287 (* ?x18267 l_0_12_53)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18306 (* ?x18264 l_0_12_56)))
 (let ((?x18285 (* ?x18264 l_0_12_52)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18303 (* ?x18261 l_0_12_42)))
 (let ((?x18283 (* ?x18261 l_0_12_38)))
 (let ((?x18298 (* 2.0 l_0_12_32)))
 (let ((?x18300 (* ?x18298 l_0_12_41)))
 (let ((?x18299 (* ?x18298 l_0_12_37)))
 (let ((?x18310 (+ (- (+ (- (- (+ (- ?x18299 ?x18300) ?x18283) ?x18303) ?x18285) ?x18306) ?x18287) ?x18309)))
 (= ?x18310 0.0)))))))))))))))
(assert
 (let ((?x18343 (* l_0_12_51 l_0_12_51)))
 (let ((?x18341 (* l_0_12_50 l_0_12_50)))
 (let ((?x18339 (* l_0_12_49 l_0_12_49)))
 (let ((?x18337 (* l_0_12_36 l_0_12_36)))
 (let ((?x18338 (- (- (* (- l_0_12_34) l_0_12_34) (* l_0_12_35 l_0_12_35)) ?x18337)))
 (= (+ (+ (+ ?x18338 ?x18339) ?x18341) ?x18343) 0.0)))))))
(assert
 (let ((?x18234 (* 2.0 l_0_12_51)))
 (let ((?x18235 (* ?x18234 l_0_12_54)))
 (let ((?x18231 (* 2.0 l_0_12_50)))
 (let ((?x18232 (* ?x18231 l_0_12_53)))
 (let ((?x18228 (* 2.0 l_0_12_49)))
 (let ((?x18229 (* ?x18228 l_0_12_52)))
 (let ((?x18221 (* 2.0 l_0_12_36)))
 (let ((?x18222 (* ?x18221 l_0_12_39)))
 (let ((?x18218 (* 2.0 l_0_12_35)))
 (let ((?x18219 (* ?x18218 l_0_12_38)))
 (let ((?x18361 (+ (+ (- (- (* (* (- 2.0) l_0_12_34) l_0_12_37) ?x18219) ?x18222) ?x18229) ?x18232)))
 (= (+ ?x18361 ?x18235) 0.0)))))))))))))
(assert
 (let ((?x18234 (* 2.0 l_0_12_51)))
 (let ((?x10894 (* ?x18234 l_0_12_58)))
 (let ((?x18235 (* ?x18234 l_0_12_54)))
 (let ((?x18231 (* 2.0 l_0_12_50)))
 (let ((?x10896 (* ?x18231 l_0_12_57)))
 (let ((?x18232 (* ?x18231 l_0_12_53)))
 (let ((?x18228 (* 2.0 l_0_12_49)))
 (let ((?x10877 (* ?x18228 l_0_12_56)))
 (let ((?x18229 (* ?x18228 l_0_12_52)))
 (let ((?x18221 (* 2.0 l_0_12_36)))
 (let ((?x10949 (* ?x18221 l_0_12_43)))
 (let ((?x18222 (* ?x18221 l_0_12_39)))
 (let ((?x18218 (* 2.0 l_0_12_35)))
 (let ((?x10954 (* ?x18218 l_0_12_42)))
 (let ((?x18219 (* ?x18218 l_0_12_38)))
 (let ((?x18215 (* 2.0 l_0_12_34)))
 (let ((?x10959 (* ?x18215 l_0_12_41)))
 (let ((?x18216 (* ?x18215 l_0_12_37)))
 (let ((?x10857 (+ (- (- (+ (- (+ (- ?x18216 ?x10959) ?x18219) ?x10954) ?x18222) ?x10949) ?x18229) ?x10877)))
 (= (+ (- (+ (- ?x10857 ?x18232) ?x10896) ?x18235) ?x10894) 0.0)))))))))))))))))))))
(assert
 (let ((?x18405 (* l_0_12_55 l_0_12_55)))
 (let ((?x18403 (* l_0_12_54 l_0_12_54)))
 (let ((?x18401 (* l_0_12_53 l_0_12_53)))
 (let ((?x18399 (* l_0_12_52 l_0_12_52)))
 (let ((?x18397 (* l_0_12_40 l_0_12_40)))
 (let ((?x18395 (* l_0_12_39 l_0_12_39)))
 (let ((?x18396 (- (- (* (- l_0_12_37) l_0_12_37) (* l_0_12_38 l_0_12_38)) ?x18395)))
 (= (+ (+ (+ (+ (- ?x18396 ?x18397) ?x18399) ?x18401) ?x18403) ?x18405) 0.0)))))))))
(assert
 (let ((?x18405 (* l_0_12_55 l_0_12_55)))
 (let ((?x18442 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18403 (* l_0_12_54 l_0_12_54)))
 (let ((?x18438 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18401 (* l_0_12_53 l_0_12_53)))
 (let ((?x18434 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18399 (* l_0_12_52 l_0_12_52)))
 (let ((?x18430 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18397 (* l_0_12_40 l_0_12_40)))
 (let ((?x18426 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18395 (* l_0_12_39 l_0_12_39)))
 (let ((?x18422 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18393 (* l_0_12_38 l_0_12_38)))
 (let ((?x18418 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18419 (- (+ (* (* (- 2.0) l_0_12_37) l_0_12_41) (* l_0_12_37 l_0_12_37)) ?x18418)))
 (let ((?x18432 (- (+ (+ (- (+ (- (+ ?x18419 ?x18393) ?x18422) ?x18395) ?x18426) ?x18397) ?x18430) ?x18399)))
 (= (- (+ (- (+ (- (+ ?x18432 ?x18434) ?x18401) ?x18438) ?x18403) ?x18442) ?x18405) 0.0))))))))))))))))))
(assert
 (let ((?x18494 (* l_0_12_60 l_0_12_60)))
 (let ((?x18492 (* l_0_12_59 l_0_12_59)))
 (let ((?x18490 (* l_0_12_58 l_0_12_58)))
 (let ((?x18488 (* l_0_12_57 l_0_12_57)))
 (let ((?x18486 (* l_0_12_56 l_0_12_56)))
 (let ((?x18442 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18438 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18434 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18430 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18480 (* l_0_12_45 l_0_12_45)))
 (let ((?x18478 (* l_0_12_44 l_0_12_44)))
 (let ((?x18476 (* l_0_12_43 l_0_12_43)))
 (let ((?x18474 (* l_0_12_42 l_0_12_42)))
 (let ((?x18472 (* l_0_12_41 l_0_12_41)))
 (let ((?x18426 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18422 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18418 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18471 (+ (+ (+ (* (* 2.0 l_0_12_37) l_0_12_41) ?x18418) ?x18422) ?x18426)))
 (let ((?x18483 (- (- (- (- (- (- (- ?x18471 ?x18472) ?x18474) ?x18476) ?x18478) ?x18480) ?x18430) ?x18434)))
 (let ((?x18495 (+ (+ (+ (+ (+ (- (- ?x18483 ?x18438) ?x18442) ?x18486) ?x18488) ?x18490) ?x18492) ?x18494)))
 (= ?x18495 0.0))))))))))))))))))))))
(assert
 (let ((?x18226 (* l_0_12_48 l_0_12_48)))
 (let ((?x18224 (* l_0_12_47 l_0_12_47)))
 (let ((?x18213 (* l_0_12_33 l_0_12_33)))
 (let ((?x10778 (* l_0_12_32 l_0_12_32)))
 (let ((?x11193 (+ ?x10778 ?x18213)))
 (= (- (- ?x11193 ?x18224) ?x18226) 0.0)))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18268 (* ?x18267 l_0_12_50)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18265 (* ?x18264 l_0_12_49)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18262 (* ?x18261 l_0_12_35)))
 (= (- (- (+ (* (* 2.0 l_0_12_32) l_0_12_34) ?x18262) ?x18265) ?x18268) 0.0))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18287 (* ?x18267 l_0_12_53)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18285 (* ?x18264 l_0_12_52)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18283 (* ?x18261 l_0_12_38)))
 (let ((?x18298 (* 2.0 l_0_12_32)))
 (let ((?x18299 (* ?x18298 l_0_12_37)))
 (= (- (- (+ ?x18299 ?x18283) ?x18285) ?x18287) 0.0))))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18309 (* ?x18267 l_0_12_57)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18306 (* ?x18264 l_0_12_56)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18303 (* ?x18261 l_0_12_42)))
 (let ((?x18298 (* 2.0 l_0_12_32)))
 (let ((?x18300 (* ?x18298 l_0_12_41)))
 (= (- (- (+ ?x18300 ?x18303) ?x18306) ?x18309) 0.0))))))))))
(assert
 (let ((?x18343 (* l_0_12_51 l_0_12_51)))
 (let ((?x18341 (* l_0_12_50 l_0_12_50)))
 (let ((?x18339 (* l_0_12_49 l_0_12_49)))
 (let ((?x18337 (* l_0_12_36 l_0_12_36)))
 (let ((?x11281 (- (+ (+ (* l_0_12_34 l_0_12_34) (* l_0_12_35 l_0_12_35)) ?x18337) ?x18339)))
 (= (- (- ?x11281 ?x18341) ?x18343) 0.0)))))))
(assert
 (let ((?x18234 (* 2.0 l_0_12_51)))
 (let ((?x10894 (* ?x18234 l_0_12_58)))
 (let ((?x18231 (* 2.0 l_0_12_50)))
 (let ((?x10896 (* ?x18231 l_0_12_57)))
 (let ((?x18228 (* 2.0 l_0_12_49)))
 (let ((?x10877 (* ?x18228 l_0_12_56)))
 (let ((?x18226 (* l_0_12_48 l_0_12_48)))
 (let ((?x18224 (* l_0_12_47 l_0_12_47)))
 (let ((?x18221 (* 2.0 l_0_12_36)))
 (let ((?x10949 (* ?x18221 l_0_12_43)))
 (let ((?x18218 (* 2.0 l_0_12_35)))
 (let ((?x10954 (* ?x18218 l_0_12_42)))
 (let ((?x18215 (* 2.0 l_0_12_34)))
 (let ((?x10959 (* ?x18215 l_0_12_41)))
 (let ((?x18213 (* l_0_12_33 l_0_12_33)))
 (let ((?x10778 (* l_0_12_32 l_0_12_32)))
 (let ((?x11193 (+ ?x10778 ?x18213)))
 (let ((?x11295 (- (- (- (- (+ (+ (+ ?x11193 ?x10959) ?x10954) ?x10949) ?x18224) ?x18226) ?x10877) ?x10896)))
 (= (- ?x11295 ?x10894) 0.0))))))))))))))))))))
(assert
 (let ((?x18405 (* l_0_12_55 l_0_12_55)))
 (let ((?x18403 (* l_0_12_54 l_0_12_54)))
 (let ((?x18401 (* l_0_12_53 l_0_12_53)))
 (let ((?x18399 (* l_0_12_52 l_0_12_52)))
 (let ((?x18397 (* l_0_12_40 l_0_12_40)))
 (let ((?x18395 (* l_0_12_39 l_0_12_39)))
 (let ((?x18525 (+ (+ (+ (* l_0_12_37 l_0_12_37) (* l_0_12_38 l_0_12_38)) ?x18395) ?x18397)))
 (= (- (- (- (- ?x18525 ?x18399) ?x18401) ?x18403) ?x18405) 0.0)))))))))
(assert
 (let ((?x18442 (* (* 2.0 l_0_12_55) l_0_12_59)))
 (let ((?x18438 (* (* 2.0 l_0_12_54) l_0_12_58)))
 (let ((?x18434 (* (* 2.0 l_0_12_53) l_0_12_57)))
 (let ((?x18430 (* (* 2.0 l_0_12_52) l_0_12_56)))
 (let ((?x18426 (* (* 2.0 l_0_12_40) l_0_12_44)))
 (let ((?x18422 (* (* 2.0 l_0_12_39) l_0_12_43)))
 (let ((?x18418 (* (* 2.0 l_0_12_38) l_0_12_42)))
 (let ((?x18471 (+ (+ (+ (* (* 2.0 l_0_12_37) l_0_12_41) ?x18418) ?x18422) ?x18426)))
 (= (- (- (- (- ?x18471 ?x18430) ?x18434) ?x18438) ?x18442) 0.0))))))))))
(assert
 (let ((?x18494 (* l_0_12_60 l_0_12_60)))
 (let ((?x18492 (* l_0_12_59 l_0_12_59)))
 (let ((?x18490 (* l_0_12_58 l_0_12_58)))
 (let ((?x18488 (* l_0_12_57 l_0_12_57)))
 (let ((?x18486 (* l_0_12_56 l_0_12_56)))
 (let ((?x18480 (* l_0_12_45 l_0_12_45)))
 (let ((?x18478 (* l_0_12_44 l_0_12_44)))
 (let ((?x18476 (* l_0_12_43 l_0_12_43)))
 (let ((?x18555 (+ (+ (+ (* l_0_12_41 l_0_12_41) (* l_0_12_42 l_0_12_42)) ?x18476) ?x18478)))
 (= (- (- (- (- (- (+ ?x18555 ?x18480) ?x18486) ?x18488) ?x18490) ?x18492) ?x18494) 0.0)))))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18268 (* ?x18267 l_0_12_50)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18265 (* ?x18264 l_0_12_49)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18262 (* ?x18261 l_0_12_35)))
 (= (- (- (+ (* (* 2.0 l_0_12_32) l_0_12_34) ?x18262) ?x18265) ?x18268) 0.0))))))))
(assert
 (let ((?x18267 (* 2.0 l_0_12_48)))
 (let ((?x18309 (* ?x18267 l_0_12_57)))
 (let ((?x18264 (* 2.0 l_0_12_47)))
 (let ((?x18306 (* ?x18264 l_0_12_56)))
 (let ((?x18261 (* 2.0 l_0_12_33)))
 (let ((?x18303 (* ?x18261 l_0_12_42)))
 (let ((?x18298 (* 2.0 l_0_12_32)))
 (let ((?x18300 (* ?x18298 l_0_12_41)))
 (= (- (- (+ ?x18300 ?x18303) ?x18306) ?x18309) 0.0))))))))))
(assert
 (let ((?x18343 (* l_0_12_51 l_0_12_51)))
 (let ((?x18341 (* l_0_12_50 l_0_12_50)))
 (let ((?x18339 (* l_0_12_49 l_0_12_49)))
 (let ((?x18337 (* l_0_12_36 l_0_12_36)))
 (let ((?x11281 (- (+ (+ (* l_0_12_34 l_0_12_34) (* l_0_12_35 l_0_12_35)) ?x18337) ?x18339)))
 (= (- (- ?x11281 ?x18341) ?x18343) 0.0)))))))
(assert
 (let ((?x18234 (* 2.0 l_0_12_51)))
 (let ((?x10894 (* ?x18234 l_0_12_58)))
 (let ((?x18231 (* 2.0 l_0_12_50)))
 (let ((?x10896 (* ?x18231 l_0_12_57)))
 (let ((?x18228 (* 2.0 l_0_12_49)))
 (let ((?x10877 (* ?x18228 l_0_12_56)))
 (let ((?x18221 (* 2.0 l_0_12_36)))
 (let ((?x10949 (* ?x18221 l_0_12_43)))
 (let ((?x18218 (* 2.0 l_0_12_35)))
 (let ((?x10954 (* ?x18218 l_0_12_42)))
 (let ((?x18215 (* 2.0 l_0_12_34)))
 (let ((?x10959 (* ?x18215 l_0_12_41)))
 (= (- (- (- (+ (+ ?x10959 ?x10954) ?x10949) ?x10877) ?x10896) ?x10894) 0.0))))))))))))))
(assert
 (let ((?x18494 (* l_0_12_60 l_0_12_60)))
 (let ((?x18492 (* l_0_12_59 l_0_12_59)))
 (let ((?x18490 (* l_0_12_58 l_0_12_58)))
 (let ((?x18488 (* l_0_12_57 l_0_12_57)))
 (let ((?x18486 (* l_0_12_56 l_0_12_56)))
 (let ((?x18480 (* l_0_12_45 l_0_12_45)))
 (let ((?x18478 (* l_0_12_44 l_0_12_44)))
 (let ((?x18476 (* l_0_12_43 l_0_12_43)))
 (let ((?x18555 (+ (+ (+ (* l_0_12_41 l_0_12_41) (* l_0_12_42 l_0_12_42)) ?x18476) ?x18478)))
 (= (- (- (- (- (- (+ ?x18555 ?x18480) ?x18486) ?x18488) ?x18490) ?x18492) ?x18494) 0.0)))))))))))
(assert
 (>= l_0_12_1 0.0))
(assert
 (>= l_0_12_3 0.0))
(assert
 (>= l_0_12_6 0.0))
(assert
 (>= l_0_12_10 0.0))
(assert
 (>= l_0_12_15 0.0))
(assert
 (>= l_0_12_16 0.0))
(assert
 (>= l_0_12_18 0.0))
(assert
 (>= l_0_12_21 0.0))
(assert
 (>= l_0_12_25 0.0))
(assert
 (>= l_0_12_30 0.0))
(assert
 (>= l_0_12_31 0.0))
(assert
 (>= l_0_12_33 0.0))
(assert
 (>= l_0_12_36 0.0))
(assert
 (>= l_0_12_40 0.0))
(assert
 (>= l_0_12_45 0.0))
(assert
 (>= l_0_12_46 0.0))
(assert
 (>= l_0_12_48 0.0))
(assert
 (>= l_0_12_51 0.0))
(assert
 (>= l_0_12_55 0.0))
(assert
 (>= l_0_12_60 0.0))
(assert
 (>= l_0_12_61 0.0))
(assert
 (>= l_0_12_63 0.0))
(assert
 (>= l_0_12_66 0.0))
(assert
 (>= l_0_12_70 0.0))
(assert
 (>= l_0_12_75 0.0))
(assert
 (>= l_0_12_76 0.0))
(assert
 (>= l_0_12_78 0.0))
(assert
 (>= l_0_12_81 0.0))
(assert
 (>= l_0_12_85 0.0))
(assert
 (>= l_0_12_90 0.0))
(assert
 (>= l_0_12_91 0.0))
(assert
 (>= l_0_12_93 0.0))
(assert
 (>= l_0_12_96 0.0))
(assert
 (>= l_0_12_100 0.0))
(assert
 (>= l_0_12_105 0.0))
(assert
 (>= l_0_12_106 0.0))
(assert
 (>= l_0_12_108 0.0))
(assert
 (>= l_0_12_111 0.0))
(assert
 (>= l_0_12_115 0.0))
(assert
 (>= l_0_12_120 0.0))
(assert
 (let ((?x18653 (* l_0_13_46 l_0_13_46)))
 (let ((?x18651 (* l_0_13_31 l_0_13_31)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18649 (* ?x18648 l_0_13_24)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18646 (* ?x18645 l_0_13_23)))
 (let ((?x18642 (* 2.0 l_0_13_19)))
 (let ((?x18643 (* ?x18642 l_0_13_22)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18640 (* ?x18639 l_0_13_22)))
 (let ((?x18626 (- (* (* (- 2.0) l_0_13_109) l_0_13_112) (* (* 2.0 l_0_13_110) l_0_13_113))))
 (let ((?x18632 (- (- ?x18626 (* (* 2.0 l_0_13_111) l_0_13_114)) (* (* 2.0 l_0_13_124) l_0_13_127))))
 (let ((?x18638 (- (- ?x18632 (* (* 2.0 l_0_13_125) l_0_13_128)) (* (* 2.0 l_0_13_126) l_0_13_129))))
 (let ((?x18657 (- (+ (- (+ (+ (+ (- ?x18638 ?x18640) ?x18643) ?x18646) ?x18649) ?x18651) ?x18653) (* (* 2.0 l_0_13_61) l_0_13_67))))
 (let ((?x18663 (+ (+ ?x18657 (* (* 8.0 l_0_13_64) l_0_13_67)) (* (* 8.0 l_0_13_65) l_0_13_68))))
 (let ((?x18669 (- (+ ?x18663 (* (* 8.0 l_0_13_66) l_0_13_69)) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_82))))
 (let ((?x18675 (- (- ?x18669 (* (* 2.0 l_0_13_94) l_0_13_97)) (* (* 2.0 l_0_13_95) l_0_13_98))))
 (= (+ (- ?x18675 (* (* 2.0 l_0_13_96) l_0_13_99)) (/ 1.0 4.0)) 0.0)))))))))))))))))))
(assert
 (let ((?x18800 (* l_0_13_93 l_0_13_93)))
 (let ((?x18798 (* l_0_13_92 l_0_13_92)))
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x18796 (* ?x18795 l_0_13_77)))
 (let ((?x18653 (* l_0_13_46 l_0_13_46)))
 (let ((?x18651 (* l_0_13_31 l_0_13_31)))
 (let ((?x18776 (* l_0_13_123 l_0_13_123)))
 (let ((?x18774 (* l_0_13_122 l_0_13_122)))
 (let ((?x18775 (- (- (* (- l_0_13_107) l_0_13_107) (* l_0_13_108 l_0_13_108)) ?x18774)))
 (let ((?x18783 (+ (- (- ?x18775 ?x18776) (* (* 4.0 l_0_13_16) l_0_13_17)) (* 1.0 (* l_0_13_17 l_0_13_17)))))
 (let ((?x18791 (+ (- (+ (+ ?x18783 (* 1.0 (* l_0_13_18 l_0_13_18))) ?x18651) ?x18653) (* 4.0 (* l_0_13_62 l_0_13_62)))))
 (let ((?x18801 (- (- (- (+ ?x18791 (* 4.0 (* l_0_13_63 l_0_13_63))) ?x18796) ?x18798) ?x18800)))
 (= (- ?x18801 (/ 1.0 4.0)) 0.0))))))))))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x18870 (* ?x18795 l_0_13_79)))
 (let ((?x18653 (* l_0_13_46 l_0_13_46)))
 (let ((?x18651 (* l_0_13_31 l_0_13_31)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18858 (* ?x18648 l_0_13_28)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18856 (* ?x18645 l_0_13_27)))
 (let ((?x18642 (* 2.0 l_0_13_19)))
 (let ((?x18854 (* ?x18642 l_0_13_26)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18852 (* ?x18639 l_0_13_26)))
 (let ((?x18850 (* ?x18639 l_0_13_19)))
 (let ((?x18830 (- (* (* (- 2.0) l_0_13_1) l_0_13_4) (* (* 2.0 l_0_13_101) l_0_13_94))))
 (let ((?x18836 (- (- ?x18830 (* (* 2.0 l_0_13_102) l_0_13_95)) (* (* 2.0 l_0_13_103) l_0_13_96))))
 (let ((?x18841 (- (- ?x18836 (* (* 2.0 l_0_13_109) l_0_13_116)) (* (* 2.0 l_0_13_110) l_0_13_117))))
 (let ((?x18845 (- (- ?x18841 (* (* 2.0 l_0_13_111) l_0_13_118)) (* (* 2.0 l_0_13_124) l_0_13_131))))
 (let ((?x18849 (- (- ?x18845 (* (* 2.0 l_0_13_125) l_0_13_132)) (* (* 2.0 l_0_13_126) l_0_13_133))))
 (let ((?x18861 (- (+ (+ (+ (+ (- (+ ?x18849 ?x18850) ?x18852) ?x18854) ?x18856) ?x18858) ?x18651) ?x18653)))
 (let ((?x18865 (+ (- ?x18861 (* (* 2.0 l_0_13_61) l_0_13_71)) (* (* 8.0 l_0_13_64) l_0_13_71))))
 (let ((?x18869 (+ (+ ?x18865 (* (* 8.0 l_0_13_65) l_0_13_72)) (* (* 8.0 l_0_13_66) l_0_13_73))))
 (= (- (- (+ ?x18869 ?x18870) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_86)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))))
(assert
 (let ((?x18940 (* l_0_13_76 l_0_13_76)))
 (let ((?x18935 (* l_0_13_16 l_0_13_16)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18852 (* ?x18639 l_0_13_26)))
 (let ((?x18927 (- (* (- l_0_13_1) l_0_13_1) (* (* 2.0 l_0_13_101) l_0_13_91))))
 (let ((?x18933 (- (- ?x18927 (* (* 2.0 l_0_13_106) l_0_13_116)) (* (* 2.0 l_0_13_121) l_0_13_131))))
 (let ((?x18941 (+ (+ (+ (+ ?x18933 ?x18852) ?x18935) (* (* 8.0 l_0_13_61) l_0_13_71)) ?x18940)))
 (= ?x18941 0.0)))))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x18976 (* ?x18795 l_0_13_86)))
 (let ((?x18796 (* ?x18795 l_0_13_77)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x18967 (* ?x18966 l_0_13_27)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x18964 (* ?x18963 l_0_13_26)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18959 (* ?x18639 l_0_13_17)))
 (let ((?x11609 (- (* (* (- 2.0) l_0_13_1) l_0_13_2) (* (* 2.0 l_0_13_101) l_0_13_92))))
 (let ((?x11590 (- (- ?x11609 (* (* 2.0 l_0_13_102) l_0_13_93)) (* (* 2.0 l_0_13_107) l_0_13_116))))
 (let ((?x18955 (- (- ?x11590 (* (* 2.0 l_0_13_108) l_0_13_117)) (* (* 2.0 l_0_13_122) l_0_13_131))))
 (let ((?x18962 (- (+ (- ?x18955 (* (* 2.0 l_0_13_123) l_0_13_132)) ?x18959) (* (* 4.0 l_0_13_16) l_0_13_26))))
 (let ((?x18974 (+ (+ (+ (+ ?x18962 ?x18964) ?x18967) (* (* 8.0 l_0_13_62) l_0_13_71)) (* (* 8.0 l_0_13_63) l_0_13_72))))
 (= (- (+ ?x18974 ?x18796) ?x18976) 0.0))))))))))))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x19069 (* ?x18795 l_0_13_82)))
 (let ((?x19054 (* 2.0 l_0_13_25)))
 (let ((?x19055 (* ?x19054 l_0_13_29)))
 (let ((?x19051 (* 2.0 l_0_13_24)))
 (let ((?x19052 (* ?x19051 l_0_13_28)))
 (let ((?x19048 (* 2.0 l_0_13_23)))
 (let ((?x19049 (* ?x19048 l_0_13_27)))
 (let ((?x19046 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18640 (* ?x18639 l_0_13_22)))
 (let ((?x19013 (- (* (* (- 2.0) l_0_13_1) l_0_13_7) (* (* 2.0 l_0_13_100) l_0_13_104))))
 (let ((?x19017 (- (- ?x19013 (* (* 2.0 l_0_13_101) l_0_13_97)) (* (* 2.0 l_0_13_102) l_0_13_98))))
 (let ((?x19022 (- (- ?x19017 (* (* 2.0 l_0_13_103) l_0_13_99)) (* (* 2.0 l_0_13_112) l_0_13_116))))
 (let ((?x19028 (- (- ?x19022 (* (* 2.0 l_0_13_113) l_0_13_117)) (* (* 2.0 l_0_13_114) l_0_13_118))))
 (let ((?x19034 (- (- ?x19028 (* (* 2.0 l_0_13_115) l_0_13_119)) (* (* 2.0 l_0_13_127) l_0_13_131))))
 (let ((?x19040 (- (- ?x19034 (* (* 2.0 l_0_13_128) l_0_13_132)) (* (* 2.0 l_0_13_129) l_0_13_133))))
 (let ((?x19050 (+ (+ (+ (- ?x19040 (* (* 2.0 l_0_13_130) l_0_13_134)) ?x18640) ?x19046) ?x19049)))
 (let ((?x19062 (+ (+ (+ (+ ?x19050 ?x19052) ?x19055) (* (* 8.0 l_0_13_67) l_0_13_71)) (* (* 8.0 l_0_13_68) l_0_13_72))))
 (let ((?x19068 (+ (+ ?x19062 (* (* 8.0 l_0_13_69) l_0_13_73)) (* (* 8.0 l_0_13_70) l_0_13_74))))
 (= (+ ?x19068 ?x19069) 0.0))))))))))))))))))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x18976 (* ?x18795 l_0_13_86)))
 (let ((?x19175 (* l_0_13_75 l_0_13_75)))
 (let ((?x19176 (* 4.0 ?x19175)))
 (let ((?x19172 (* l_0_13_74 l_0_13_74)))
 (let ((?x19173 (* 4.0 ?x19172)))
 (let ((?x19169 (* l_0_13_73 l_0_13_73)))
 (let ((?x19170 (* 4.0 ?x19169)))
 (let ((?x19166 (* l_0_13_72 l_0_13_72)))
 (let ((?x19167 (* 4.0 ?x19166)))
 (let ((?x19163 (* l_0_13_71 l_0_13_71)))
 (let ((?x19164 (* 4.0 ?x19163)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18852 (* ?x18639 l_0_13_26)))
 (let ((?x19145 (* l_0_13_135 l_0_13_135)))
 (let ((?x19143 (* l_0_13_134 l_0_13_134)))
 (let ((?x19141 (* l_0_13_133 l_0_13_133)))
 (let ((?x19139 (* l_0_13_132 l_0_13_132)))
 (let ((?x19137 (* l_0_13_131 l_0_13_131)))
 (let ((?x19135 (* l_0_13_120 l_0_13_120)))
 (let ((?x19133 (* l_0_13_119 l_0_13_119)))
 (let ((?x19131 (* l_0_13_118 l_0_13_118)))
 (let ((?x19129 (* l_0_13_117 l_0_13_117)))
 (let ((?x19127 (* l_0_13_116 l_0_13_116)))
 (let ((?x19113 (* l_0_13_105 l_0_13_105)))
 (let ((?x19109 (* l_0_13_104 l_0_13_104)))
 (let ((?x19105 (* l_0_13_103 l_0_13_103)))
 (let ((?x11809 (* l_0_13_102 l_0_13_102)))
 (let ((?x19112 (- (- (* (* (- 2.0) l_0_13_1) l_0_13_11) (* l_0_13_101 l_0_13_101)) ?x11809)))
 (let ((?x19134 (- (- (- (- (- (- (- ?x19112 ?x19105) ?x19109) ?x19113) ?x19127) ?x19129) ?x19131) ?x19133)))
 (let ((?x19147 (+ (- (- (- (- (- (- ?x19134 ?x19135) ?x19137) ?x19139) ?x19141) ?x19143) ?x19145) ?x18852)))
 (let ((?x19153 (+ (+ ?x19147 (* 1.0 (* l_0_13_26 l_0_13_26))) (* 1.0 (* l_0_13_27 l_0_13_27)))))
 (let ((?x19159 (+ (+ ?x19153 (* 1.0 (* l_0_13_28 l_0_13_28))) (* 1.0 (* l_0_13_29 l_0_13_29)))))
 (let ((?x19171 (+ (+ (+ (+ ?x19159 (* 1.0 (* l_0_13_30 l_0_13_30))) ?x19164) ?x19167) ?x19170)))
 (= (+ (+ (+ ?x19171 ?x19173) ?x19176) ?x18976) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19217 (* l_0_13_78 l_0_13_78)))
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19215 (* ?x19214 l_0_13_87)))
 (let ((?x19212 (* l_0_13_77 l_0_13_77)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19210 (* ?x19209 l_0_13_86)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19207 (* ?x19206 l_0_13_56)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19204 (* ?x19203 l_0_13_41)))
 (let ((?x19201 (* l_0_13_3 l_0_13_3)))
 (let ((?x19199 (* l_0_13_2 l_0_13_2)))
 (let ((?x18784 (* l_0_13_18 l_0_13_18)))
 (let ((?x19197 (- (+ (* (* (- 4.0) l_0_13_17) l_0_13_26) (* l_0_13_17 l_0_13_17)) (* (* 4.0 l_0_13_18) l_0_13_27))))
 (let ((?x19213 (+ (- (- (+ (- (- (+ ?x19197 ?x18784) ?x19199) ?x19201) ?x19204) ?x19207) ?x19210) ?x19212)))
 (= (+ (- ?x19213 ?x19215) ?x19217) 0.0)))))))))))))))))
(assert
 (let ((?x19296 (* 2.0 l_0_13_81)))
 (let ((?x19297 (* ?x19296 l_0_13_88)))
 (let ((?x19293 (* 2.0 l_0_13_80)))
 (let ((?x19294 (* ?x19293 l_0_13_87)))
 (let ((?x19290 (* 2.0 l_0_13_79)))
 (let ((?x19291 (* ?x19290 l_0_13_86)))
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19285 (* ?x19214 l_0_13_80)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19280 (* ?x19209 l_0_13_79)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19272 (* ?x19206 l_0_13_47)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19270 (* ?x19203 l_0_13_32)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x18967 (* ?x18966 l_0_13_27)))
 (let ((?x19252 (* ?x18966 l_0_13_20)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x18964 (* ?x18963 l_0_13_26)))
 (let ((?x19244 (* ?x18963 l_0_13_19)))
 (let ((?x19257 (- (- (+ (- ?x19244 ?x18964) ?x19252) ?x18967) (* (* 4.0 l_0_13_19) l_0_13_26))))
 (let ((?x19263 (- (- ?x19257 (* (* 2.0 l_0_13_2) l_0_13_4)) (* (* 4.0 l_0_13_20) l_0_13_27))))
 (let ((?x19269 (- (- ?x19263 (* (* 4.0 l_0_13_21) l_0_13_28)) (* (* 2.0 l_0_13_3) l_0_13_5))))
 (let ((?x19279 (- (- (- (+ ?x19269 ?x19270) ?x19272) (* (* 2.0 l_0_13_62) l_0_13_71)) (* (* 2.0 l_0_13_63) l_0_13_72))))
 (let ((?x19289 (- (+ (- (+ ?x19279 ?x19280) (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_86)) ?x19285) (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_87))))
 (= (- (- (- ?x19289 ?x19291) ?x19294) ?x19297) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x19368 (* (* 2.0 l_0_13_85) l_0_13_89)))
 (let ((?x19365 (* (* 2.0 l_0_13_84) l_0_13_88)))
 (let ((?x19362 (* (* 2.0 l_0_13_83) l_0_13_87)))
 (let ((?x19359 (* (* 2.0 l_0_13_82) l_0_13_86)))
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19356 (* ?x19214 l_0_13_83)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19354 (* ?x19209 l_0_13_82)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x19336 (* ?x18966 l_0_13_23)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x19335 (* ?x18963 l_0_13_22)))
 (let ((?x19342 (- (- (+ ?x19335 ?x19336) (* (* 2.0 l_0_13_2) l_0_13_7)) (* (* 4.0 l_0_13_22) l_0_13_26))))
 (let ((?x19348 (- (- ?x19342 (* (* 4.0 l_0_13_23) l_0_13_27)) (* (* 4.0 l_0_13_24) l_0_13_28))))
 (let ((?x19353 (- (- ?x19348 (* (* 4.0 l_0_13_25) l_0_13_29)) (* (* 2.0 l_0_13_3) l_0_13_8))))
 (= (- (- (- (- (+ (+ ?x19353 ?x19354) ?x19356) ?x19359) ?x19362) ?x19365) ?x19368) 0.0)))))))))))))))))
(assert
 (let ((?x19433 (* l_0_13_90 l_0_13_90)))
 (let ((?x19431 (* l_0_13_89 l_0_13_89)))
 (let ((?x19429 (* l_0_13_88 l_0_13_88)))
 (let ((?x19427 (* l_0_13_87 l_0_13_87)))
 (let ((?x19425 (* l_0_13_86 l_0_13_86)))
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19215 (* ?x19214 l_0_13_87)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19210 (* ?x19209 l_0_13_86)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x18967 (* ?x18966 l_0_13_27)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x18964 (* ?x18963 l_0_13_26)))
 (let ((?x19405 (- (* (* (- 2.0) l_0_13_11) l_0_13_2) (* (* 2.0 l_0_13_12) l_0_13_3))))
 (let ((?x19413 (- (- (+ (+ ?x19405 ?x18964) ?x18967) (* (* 2.0 l_0_13_26) l_0_13_26)) (* (* 2.0 l_0_13_27) l_0_13_27))))
 (let ((?x19419 (- (- ?x19413 (* (* 2.0 l_0_13_28) l_0_13_28)) (* (* 2.0 l_0_13_29) l_0_13_29))))
 (let ((?x19426 (- (+ (+ (- ?x19419 (* (* 2.0 l_0_13_30) l_0_13_30)) ?x19210) ?x19215) ?x19425)))
 (= (- (- (- (- ?x19426 ?x19427) ?x19429) ?x19431) ?x19433) 0.0)))))))))))))))))))
(assert
 (let ((?x19491 (* l_0_13_81 l_0_13_81)))
 (let ((?x19486 (* l_0_13_80 l_0_13_80)))
 (let ((?x19481 (* l_0_13_79 l_0_13_79)))
 (let ((?x19467 (* l_0_13_6 l_0_13_6)))
 (let ((?x19465 (* l_0_13_5 l_0_13_5)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19463 (* ?x19206 l_0_13_49)))
 (let ((?x19461 (* l_0_13_4 l_0_13_4)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19459 (* ?x19203 l_0_13_34)))
 (let ((?x19457 (* l_0_13_21 l_0_13_21)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18858 (* ?x18648 l_0_13_28)))
 (let ((?x19454 (* l_0_13_20 l_0_13_20)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18856 (* ?x18645 l_0_13_27)))
 (let ((?x19453 (- (+ (* (* (- 2.0) l_0_13_19) l_0_13_26) (* l_0_13_19 l_0_13_19)) ?x18856)))
 (let ((?x19466 (- (- (- (+ (+ (- (+ ?x19453 ?x19454) ?x18858) ?x19457) ?x19459) ?x19461) ?x19463) ?x19465)))
 (let ((?x19474 (- (- (- ?x19466 ?x19467) (* (* 2.0 l_0_13_64) l_0_13_71)) (* (* 2.0 l_0_13_65) l_0_13_72))))
 (let ((?x19480 (- (- ?x19474 (* (* 2.0 l_0_13_66) l_0_13_73)) (* (* (/ 1.0 2.0) l_0_13_79) l_0_13_86))))
 (let ((?x19490 (- (+ (- (+ ?x19480 ?x19481) (* (* (/ 1.0 2.0) l_0_13_80) l_0_13_87)) ?x19486) (* (* (/ 1.0 2.0) l_0_13_81) l_0_13_88))))
 (= (+ ?x19490 ?x19491) 0.0)))))))))))))))))))))))
(assert
 (let ((?x19296 (* 2.0 l_0_13_81)))
 (let ((?x19559 (* ?x19296 l_0_13_84)))
 (let ((?x19293 (* 2.0 l_0_13_80)))
 (let ((?x19557 (* ?x19293 l_0_13_83)))
 (let ((?x19290 (* 2.0 l_0_13_79)))
 (let ((?x19555 (* ?x19290 l_0_13_82)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19207 (* ?x19206 l_0_13_56)))
 (let ((?x19534 (* ?x19206 l_0_13_52)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19204 (* ?x19203 l_0_13_41)))
 (let ((?x19528 (* ?x19203 l_0_13_37)))
 (let ((?x19054 (* 2.0 l_0_13_25)))
 (let ((?x19055 (* ?x19054 l_0_13_29)))
 (let ((?x19051 (* 2.0 l_0_13_24)))
 (let ((?x19052 (* ?x19051 l_0_13_28)))
 (let ((?x19048 (* 2.0 l_0_13_23)))
 (let ((?x19049 (* ?x19048 l_0_13_27)))
 (let ((?x19046 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18649 (* ?x18648 l_0_13_24)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18646 (* ?x18645 l_0_13_23)))
 (let ((?x18642 (* 2.0 l_0_13_19)))
 (let ((?x18643 (* ?x18642 l_0_13_22)))
 (let ((?x19529 (+ (- (- (- (- (+ (+ ?x18643 ?x18646) ?x18649) ?x19046) ?x19049) ?x19052) ?x19055) ?x19528)))
 (let ((?x19536 (+ (- (- (- ?x19529 ?x19204) (* (* 2.0 l_0_13_4) l_0_13_7)) ?x19534) ?x19207)))
 (let ((?x19542 (- (- ?x19536 (* (* 2.0 l_0_13_5) l_0_13_8)) (* (* 2.0 l_0_13_6) l_0_13_9))))
 (let ((?x19548 (- (- ?x19542 (* (* 2.0 l_0_13_67) l_0_13_71)) (* (* 2.0 l_0_13_68) l_0_13_72))))
 (let ((?x19554 (- (- ?x19548 (* (* 2.0 l_0_13_69) l_0_13_73)) (* (* 2.0 l_0_13_70) l_0_13_74))))
 (let ((?x19563 (- (+ (+ (+ ?x19554 ?x19555) ?x19557) ?x19559) (* (* (/ 1.0 2.0) l_0_13_82) l_0_13_86))))
 (let ((?x19569 (- (- ?x19563 (* (* (/ 1.0 2.0) l_0_13_83) l_0_13_87)) (* (* (/ 1.0 2.0) l_0_13_84) l_0_13_88))))
 (= (- ?x19569 (* (* (/ 1.0 2.0) l_0_13_85) l_0_13_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19296 (* 2.0 l_0_13_81)))
 (let ((?x19297 (* ?x19296 l_0_13_88)))
 (let ((?x19293 (* 2.0 l_0_13_80)))
 (let ((?x19294 (* ?x19293 l_0_13_87)))
 (let ((?x19290 (* 2.0 l_0_13_79)))
 (let ((?x19291 (* ?x19290 l_0_13_86)))
 (let ((?x19175 (* l_0_13_75 l_0_13_75)))
 (let ((?x19172 (* l_0_13_74 l_0_13_74)))
 (let ((?x19169 (* l_0_13_73 l_0_13_73)))
 (let ((?x19166 (* l_0_13_72 l_0_13_72)))
 (let ((?x19163 (* l_0_13_71 l_0_13_71)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19207 (* ?x19206 l_0_13_56)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19204 (* ?x19203 l_0_13_41)))
 (let ((?x19160 (* l_0_13_30 l_0_13_30)))
 (let ((?x19157 (* l_0_13_29 l_0_13_29)))
 (let ((?x19154 (* l_0_13_28 l_0_13_28)))
 (let ((?x19151 (* l_0_13_27 l_0_13_27)))
 (let ((?x19148 (* l_0_13_26 l_0_13_26)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18858 (* ?x18648 l_0_13_28)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18856 (* ?x18645 l_0_13_27)))
 (let ((?x18642 (* 2.0 l_0_13_19)))
 (let ((?x18854 (* ?x18642 l_0_13_26)))
 (let ((?x19637 (- (* (* (- 2.0) l_0_13_11) l_0_13_4) (* (* 2.0 l_0_13_12) l_0_13_5))))
 (let ((?x19643 (+ (+ (+ (- ?x19637 (* (* 2.0 l_0_13_13) l_0_13_6)) ?x18854) ?x18856) ?x18858)))
 (let ((?x19650 (- (+ (- (- (- (- (- ?x19643 ?x19148) ?x19151) ?x19154) ?x19157) ?x19160) ?x19204) ?x19207)))
 (let ((?x19657 (+ (+ (- (- (- (- (- ?x19650 ?x19163) ?x19166) ?x19169) ?x19172) ?x19175) ?x19291) ?x19294)))
 (let ((?x19664 (- (- (+ ?x19657 ?x19297) (* (* (/ 1.0 4.0) l_0_13_86) l_0_13_86)) (* (* (/ 1.0 4.0) l_0_13_87) l_0_13_87))))
 (let ((?x19670 (- (- ?x19664 (* (* (/ 1.0 4.0) l_0_13_88) l_0_13_88)) (* (* (/ 1.0 4.0) l_0_13_89) l_0_13_89))))
 (= (- ?x19670 (* (* (/ 1.0 4.0) l_0_13_90) l_0_13_90)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x19718 (* l_0_13_9 l_0_13_9)))
 (let ((?x19716 (* l_0_13_85 l_0_13_85)))
 (let ((?x19714 (* l_0_13_84 l_0_13_84)))
 (let ((?x19712 (* l_0_13_83 l_0_13_83)))
 (let ((?x19710 (* l_0_13_82 l_0_13_82)))
 (let ((?x12818 (* l_0_13_8 l_0_13_8)))
 (let ((?x12814 (* l_0_13_7 l_0_13_7)))
 (let ((?x12832 (* l_0_13_25 l_0_13_25)))
 (let ((?x12833 (* l_0_13_24 l_0_13_24)))
 (let ((?x12799 (* l_0_13_23 l_0_13_23)))
 (let ((?x12819 (+ (+ (* (- l_0_13_10) l_0_13_10) (* l_0_13_22 l_0_13_22)) ?x12799)))
 (let ((?x19715 (+ (+ (+ (- (- (+ (+ ?x12819 ?x12833) ?x12832) ?x12814) ?x12818) ?x19710) ?x19712) ?x19714)))
 (= (- (+ ?x19715 ?x19716) ?x19718) 0.0))))))))))))))
(assert
 (let ((?x19368 (* (* 2.0 l_0_13_85) l_0_13_89)))
 (let ((?x19365 (* (* 2.0 l_0_13_84) l_0_13_88)))
 (let ((?x19362 (* (* 2.0 l_0_13_83) l_0_13_87)))
 (let ((?x19359 (* (* 2.0 l_0_13_82) l_0_13_86)))
 (let ((?x19054 (* 2.0 l_0_13_25)))
 (let ((?x19055 (* ?x19054 l_0_13_29)))
 (let ((?x19051 (* 2.0 l_0_13_24)))
 (let ((?x19052 (* ?x19051 l_0_13_28)))
 (let ((?x19048 (* 2.0 l_0_13_23)))
 (let ((?x19049 (* ?x19048 l_0_13_27)))
 (let ((?x19046 (* (* 2.0 l_0_13_22) l_0_13_26)))
 (let ((?x19737 (- (* (* (- 2.0) l_0_13_10) l_0_13_14) (* (* 2.0 l_0_13_11) l_0_13_7))))
 (let ((?x19741 (- (- ?x19737 (* (* 2.0 l_0_13_12) l_0_13_8)) (* (* 2.0 l_0_13_13) l_0_13_9))))
 (let ((?x19748 (+ (+ (+ (+ (+ (+ (+ ?x19741 ?x19046) ?x19049) ?x19052) ?x19055) ?x19359) ?x19362) ?x19365)))
 (= (+ ?x19748 ?x19368) 0.0))))))))))))))))
(assert
 (let ((?x19433 (* l_0_13_90 l_0_13_90)))
 (let ((?x19431 (* l_0_13_89 l_0_13_89)))
 (let ((?x19429 (* l_0_13_88 l_0_13_88)))
 (let ((?x19427 (* l_0_13_87 l_0_13_87)))
 (let ((?x19425 (* l_0_13_86 l_0_13_86)))
 (let ((?x19160 (* l_0_13_30 l_0_13_30)))
 (let ((?x19157 (* l_0_13_29 l_0_13_29)))
 (let ((?x19154 (* l_0_13_28 l_0_13_28)))
 (let ((?x19151 (* l_0_13_27 l_0_13_27)))
 (let ((?x19148 (* l_0_13_26 l_0_13_26)))
 (let ((?x19772 (* l_0_13_15 l_0_13_15)))
 (let ((?x19770 (* l_0_13_14 l_0_13_14)))
 (let ((?x19768 (* l_0_13_13 l_0_13_13)))
 (let ((?x19769 (- (- (* (- l_0_13_11) l_0_13_11) (* l_0_13_12 l_0_13_12)) ?x19768)))
 (let ((?x19778 (+ (+ (+ (+ (+ (- (- ?x19769 ?x19770) ?x19772) ?x19148) ?x19151) ?x19154) ?x19157) ?x19160)))
 (= (+ (+ (+ (+ (+ ?x19778 ?x19425) ?x19427) ?x19429) ?x19431) ?x19433) 0.0)))))))))))))))))
(assert
 (let ((?x18940 (* l_0_13_76 l_0_13_76)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18959 (* ?x18639 l_0_13_17)))
 (let ((?x19794 (- (* (* (- 2.0) l_0_13_106) l_0_13_107) (* (* 2.0 l_0_13_121) l_0_13_122))))
 (let ((?x19799 (+ (- (+ ?x19794 ?x18959) (* ?x18639 l_0_13_16)) (* (* 8.0 l_0_13_61) l_0_13_62))))
 (= (- (- ?x19799 ?x18940) (* (* 2.0 l_0_13_91) l_0_13_92)) 0.0)))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x18870 (* ?x18795 l_0_13_79)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x19252 (* ?x18966 l_0_13_20)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x19244 (* ?x18963 l_0_13_19)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18959 (* ?x18639 l_0_13_17)))
 (let ((?x12946 (- (* (* (- 2.0) l_0_13_107) l_0_13_109) (* (* 2.0 l_0_13_108) l_0_13_110))))
 (let ((?x12964 (- (- ?x12946 (* (* 2.0 l_0_13_122) l_0_13_124)) (* (* 2.0 l_0_13_123) l_0_13_125))))
 (let ((?x19820 (+ (+ (- (- ?x12964 ?x18959) (* (* 4.0 l_0_13_16) l_0_13_19)) ?x19244) ?x19252)))
 (let ((?x19824 (+ (- ?x19820 (* (* 2.0 l_0_13_61) l_0_13_62)) (* (* 8.0 l_0_13_62) l_0_13_64))))
 (let ((?x19828 (- (+ ?x19824 (* (* 8.0 l_0_13_63) l_0_13_65)) (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_77))))
 (let ((?x19835 (- (- (- ?x19828 ?x18870) (* (* 2.0 l_0_13_92) l_0_13_94)) (* (* 2.0 l_0_13_93) l_0_13_95))))
 (= ?x19835 0.0))))))))))))))))
(assert
 (let ((?x18795 (* 2.0 l_0_13_76)))
 (let ((?x19069 (* ?x18795 l_0_13_82)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x19336 (* ?x18966 l_0_13_23)))
 (let ((?x18963 (* 2.0 l_0_13_17)))
 (let ((?x19335 (* ?x18963 l_0_13_22)))
 (let ((?x19853 (- (* (* (- 2.0) l_0_13_107) l_0_13_112) (* (* 2.0 l_0_13_108) l_0_13_113))))
 (let ((?x19857 (- (- ?x19853 (* (* 2.0 l_0_13_122) l_0_13_127)) (* (* 2.0 l_0_13_123) l_0_13_128))))
 (let ((?x19863 (+ (+ (+ (- ?x19857 (* (* 4.0 l_0_13_16) l_0_13_22)) ?x19335) ?x19336) (* (* 8.0 l_0_13_62) l_0_13_67))))
 (let ((?x19868 (- (- (+ ?x19863 (* (* 8.0 l_0_13_63) l_0_13_68)) ?x19069) (* (* 2.0 l_0_13_92) l_0_13_97))))
 (= (- ?x19868 (* (* 2.0 l_0_13_93) l_0_13_98)) 0.0))))))))))))
(assert
 (let ((?x19217 (* l_0_13_78 l_0_13_78)))
 (let ((?x19212 (* l_0_13_77 l_0_13_77)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19272 (* ?x19206 l_0_13_47)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19270 (* ?x19203 l_0_13_32)))
 (let ((?x19908 (- (* (* (- 2.0) l_0_13_17) l_0_13_17) (* (* 2.0 l_0_13_18) l_0_13_18))))
 (= (- (- (- (+ ?x19908 ?x19270) ?x19272) ?x19212) ?x19217) 0.0)))))))))
(assert
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19285 (* ?x19214 l_0_13_80)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19280 (* ?x19209 l_0_13_79)))
 (let ((?x18792 (* l_0_13_63 l_0_13_63)))
 (let ((?x18789 (* l_0_13_62 l_0_13_62)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19463 (* ?x19206 l_0_13_49)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19459 (* ?x19203 l_0_13_34)))
 (let ((?x18784 (* l_0_13_18 l_0_13_18)))
 (let ((?x13137 (- (- (* (* (- 4.0) l_0_13_17) l_0_13_19) (* l_0_13_17 l_0_13_17)) (* (* 4.0 l_0_13_18) l_0_13_20))))
 (let ((?x19929 (- (- (- (- (- (+ (- ?x13137 ?x18784) ?x19459) ?x19463) ?x18789) ?x18792) ?x19280) (* (* (/ 1.0 4.0) l_0_13_77) l_0_13_77))))
 (= (- (- ?x19929 ?x19285) (* (* (/ 1.0 4.0) l_0_13_78) l_0_13_78)) 0.0)))))))))))))))
(assert
 (let ((?x19214 (* 2.0 l_0_13_78)))
 (let ((?x19356 (* ?x19214 l_0_13_83)))
 (let ((?x19209 (* 2.0 l_0_13_77)))
 (let ((?x19354 (* ?x19209 l_0_13_82)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19534 (* ?x19206 l_0_13_52)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19528 (* ?x19203 l_0_13_37)))
 (let ((?x1991 (- (* (* (- 4.0) l_0_13_17) l_0_13_22) (* (* 4.0 l_0_13_18) l_0_13_23))))
 (= (- (- (- (+ ?x1991 ?x19528) ?x19534) ?x19354) ?x19356) 0.0)))))))))))
(assert
 (let ((?x19491 (* l_0_13_81 l_0_13_81)))
 (let ((?x19486 (* l_0_13_80 l_0_13_80)))
 (let ((?x19481 (* l_0_13_79 l_0_13_79)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x19252 (* ?x18966 l_0_13_20)))
 (let ((?x19953 (- (- (* (* (- 2.0) l_0_13_17) l_0_13_19) ?x19252) (* (* 2.0 l_0_13_19) l_0_13_19))))
 (let ((?x19957 (- (- ?x19953 (* (* 2.0 l_0_13_20) l_0_13_20)) (* (* 2.0 l_0_13_21) l_0_13_21))))
 (let ((?x19961 (- (- ?x19957 (* (* 2.0 l_0_13_62) l_0_13_64)) (* (* 2.0 l_0_13_63) l_0_13_65))))
 (let ((?x19965 (- (- ?x19961 (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_79)) (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_80))))
 (= (- (- (- ?x19965 ?x19481) ?x19486) ?x19491) 0.0)))))))))))
(assert
 (let ((?x19296 (* 2.0 l_0_13_81)))
 (let ((?x19559 (* ?x19296 l_0_13_84)))
 (let ((?x19293 (* 2.0 l_0_13_80)))
 (let ((?x19557 (* ?x19293 l_0_13_83)))
 (let ((?x19290 (* 2.0 l_0_13_79)))
 (let ((?x19555 (* ?x19290 l_0_13_82)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19272 (* ?x19206 l_0_13_47)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19270 (* ?x19203 l_0_13_32)))
 (let ((?x18966 (* 2.0 l_0_13_18)))
 (let ((?x19336 (* ?x18966 l_0_13_23)))
 (let ((?x2220 (- (- (* (* (- 2.0) l_0_13_17) l_0_13_22) ?x19336) (* (* 4.0 l_0_13_19) l_0_13_22))))
 (let ((?x2072 (- (- ?x2220 (* (* 4.0 l_0_13_20) l_0_13_23)) (* (* 4.0 l_0_13_21) l_0_13_24))))
 (let ((?x13243 (- (- (+ (- ?x2072 ?x19270) ?x19272) (* (* 2.0 l_0_13_62) l_0_13_67)) (* (* 2.0 l_0_13_63) l_0_13_68))))
 (let ((?x13237 (- (- ?x13243 (* (* (/ 1.0 2.0) l_0_13_77) l_0_13_82)) (* (* (/ 1.0 2.0) l_0_13_78) l_0_13_83))))
 (= (- (- (- ?x13237 ?x19555) ?x19557) ?x19559) 0.0))))))))))))))))))
(assert
 (let ((?x19716 (* l_0_13_85 l_0_13_85)))
 (let ((?x19714 (* l_0_13_84 l_0_13_84)))
 (let ((?x19712 (* l_0_13_83 l_0_13_83)))
 (let ((?x19710 (* l_0_13_82 l_0_13_82)))
 (let ((?x2348 (- (* (* (- 2.0) l_0_13_22) l_0_13_22) (* (* 2.0 l_0_13_23) l_0_13_23))))
 (let ((?x2479 (- (- ?x2348 (* (* 2.0 l_0_13_24) l_0_13_24)) (* (* 2.0 l_0_13_25) l_0_13_25))))
 (= (- (- (- (- ?x2479 ?x19710) ?x19712) ?x19714) ?x19716) 0.0))))))))
(assert
 (let ((?x20011 (* l_0_13_61 l_0_13_61)))
 (let ((?x18935 (* l_0_13_16 l_0_13_16)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18850 (* ?x18639 l_0_13_19)))
 (let ((?x20006 (- (* (* (- 2.0) l_0_13_106) l_0_13_109) (* (* 2.0 l_0_13_121) l_0_13_124))))
 (let ((?x20012 (- (+ (- (+ ?x20006 ?x18850) ?x18935) (* (* 8.0 l_0_13_61) l_0_13_64)) ?x20011)))
 (let ((?x20017 (- (- ?x20012 (* (* (/ 1.0 4.0) l_0_13_76) l_0_13_76)) (* (* 2.0 l_0_13_91) l_0_13_94))))
 (= ?x20017 0.0)))))))))
(assert
 (let ((?x20075 (* l_0_13_96 l_0_13_96)))
 (let ((?x20073 (* l_0_13_95 l_0_13_95)))
 (let ((?x20071 (* l_0_13_94 l_0_13_94)))
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18850 (* ?x18639 l_0_13_19)))
 (let ((?x20049 (* l_0_13_126 l_0_13_126)))
 (let ((?x20047 (* l_0_13_125 l_0_13_125)))
 (let ((?x20045 (* l_0_13_124 l_0_13_124)))
 (let ((?x20043 (* l_0_13_111 l_0_13_111)))
 (let ((?x20044 (- (- (* (- l_0_13_109) l_0_13_109) (* l_0_13_110 l_0_13_110)) ?x20043)))
 (let ((?x20053 (+ (- (- (- (- ?x20044 ?x20045) ?x20047) ?x20049) ?x18850) (* 1.0 (* l_0_13_19 l_0_13_19)))))
 (let ((?x20057 (+ (+ ?x20053 (* 1.0 (* l_0_13_20 l_0_13_20))) (* 1.0 (* l_0_13_21 l_0_13_21)))))
 (let ((?x20062 (+ (- ?x20057 (* (* 2.0 l_0_13_61) l_0_13_64)) (* 4.0 (* l_0_13_64 l_0_13_64)))))
 (let ((?x20068 (+ (+ ?x20062 (* 4.0 (* l_0_13_65 l_0_13_65))) (* 4.0 (* l_0_13_66 l_0_13_66)))))
 (let ((?x20076 (- (- (- (- ?x20068 (* (* (/ 1.0 2.0) l_0_13_76) l_0_13_79)) ?x20071) ?x20073) ?x20075)))
 (= ?x20076 0.0)))))))))))))))))
(assert
 (let ((?x20066 (* l_0_13_66 l_0_13_66)))
 (let ((?x20063 (* l_0_13_65 l_0_13_65)))
 (let ((?x20060 (* l_0_13_64 l_0_13_64)))
 (let ((?x19457 (* l_0_13_21 l_0_13_21)))
 (let ((?x20108 (- (- (* (- l_0_13_19) l_0_13_19) (* l_0_13_20 l_0_13_20)) ?x19457)))
 (let ((?x20114 (- (- (- (- ?x20108 ?x20060) ?x20063) ?x20066) (* (* (/ 1.0 4.0) l_0_13_79) l_0_13_79))))
 (let ((?x20120 (- (- ?x20114 (* (* (/ 1.0 4.0) l_0_13_80) l_0_13_80)) (* (* (/ 1.0 4.0) l_0_13_81) l_0_13_81))))
 (= ?x20120 0.0)))))))))
(assert
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19463 (* ?x19206 l_0_13_49)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19459 (* ?x19203 l_0_13_34)))
 (let ((?x18648 (* 2.0 l_0_13_21)))
 (let ((?x18649 (* ?x18648 l_0_13_24)))
 (let ((?x18645 (* 2.0 l_0_13_20)))
 (let ((?x18646 (* ?x18645 l_0_13_23)))
 (let ((?x20135 (+ (- (- (- (* (* (- 2.0) l_0_13_19) l_0_13_22) ?x18646) ?x18649) ?x19459) ?x19463)))
 (let ((?x20139 (- (- ?x20135 (* (* 2.0 l_0_13_64) l_0_13_67)) (* (* 2.0 l_0_13_65) l_0_13_68))))
 (let ((?x20143 (- (- ?x20139 (* (* 2.0 l_0_13_66) l_0_13_69)) (* (* (/ 1.0 2.0) l_0_13_79) l_0_13_82))))
 (let ((?x20147 (- (- ?x20143 (* (* (/ 1.0 2.0) l_0_13_80) l_0_13_83)) (* (* (/ 1.0 2.0) l_0_13_81) l_0_13_84))))
 (= ?x20147 0.0))))))))))))))
(assert
 (let ((?x20177 (* l_0_13_70 l_0_13_70)))
 (let ((?x20175 (* l_0_13_69 l_0_13_69)))
 (let ((?x20173 (* l_0_13_68 l_0_13_68)))
 (let ((?x20171 (* l_0_13_67 l_0_13_67)))
 (let ((?x19206 (* 2.0 l_0_13_46)))
 (let ((?x19534 (* ?x19206 l_0_13_52)))
 (let ((?x19203 (* 2.0 l_0_13_31)))
 (let ((?x19528 (* ?x19203 l_0_13_37)))
 (let ((?x12832 (* l_0_13_25 l_0_13_25)))
 (let ((?x12833 (* l_0_13_24 l_0_13_24)))
 (let ((?x20167 (- (- (* (- l_0_13_22) l_0_13_22) (* l_0_13_23 l_0_13_23)) ?x12833)))
 (let ((?x20178 (- (- (- (- (+ (- (- ?x20167 ?x12832) ?x19528) ?x19534) ?x20171) ?x20173) ?x20175) ?x20177)))
 (let ((?x20184 (- (- ?x20178 (* (* (/ 1.0 4.0) l_0_13_82) l_0_13_82)) (* (* (/ 1.0 4.0) l_0_13_83) l_0_13_83))))
 (let ((?x20190 (- (- ?x20184 (* (* (/ 1.0 4.0) l_0_13_84) l_0_13_84)) (* (* (/ 1.0 4.0) l_0_13_85) l_0_13_85))))
 (= ?x20190 0.0))))))))))))))))
(assert
 (let ((?x20215 (* l_0_13_91 l_0_13_91)))
 (let ((?x20011 (* l_0_13_61 l_0_13_61)))
 (let ((?x20213 (* 4.0 ?x20011)))
 (let ((?x20212 (+ (- (* (- l_0_13_106) l_0_13_106) (* l_0_13_121 l_0_13_121)) (* 1.0 (* l_0_13_16 l_0_13_16)))))
 (= (- (+ ?x20212 ?x20213) ?x20215) 0.0))))))
(assert
 (let ((?x18639 (* 2.0 l_0_13_16)))
 (let ((?x18640 (* ?x18639 l_0_13_22)))
 (let ((?x20228 (- (* (* (- 2.0) l_0_13_106) l_0_13_112) (* (* 2.0 l_0_13_121) l_0_13_127))))
 (let ((?x20233 (- (+ (+ ?x20228 ?x18640) (* (* 8.0 l_0_13_61) l_0_13_67)) (* (* 2.0 l_0_13_91) l_0_13_97))))
 (= ?x20233 0.0))))))
(assert
 (let ((?x20290 (* l_0_13_99 l_0_13_99)))
 (let ((?x20288 (* l_0_13_98 l_0_13_98)))
 (let ((?x20286 (* l_0_13_97 l_0_13_97)))
 (let ((?x20177 (* l_0_13_70 l_0_13_70)))
 (let ((?x20284 (* 4.0 ?x20177)))
 (let ((?x20175 (* l_0_13_69 l_0_13_69)))
 (let ((?x20282 (* 4.0 ?x20175)))
 (let ((?x20173 (* l_0_13_68 l_0_13_68)))
 (let ((?x20280 (* 4.0 ?x20173)))
 (let ((?x20171 (* l_0_13_67 l_0_13_67)))
 (let ((?x20278 (* 4.0 ?x20171)))
 (let ((?x20268 (* l_0_13_130 l_0_13_130)))
 (let ((?x20266 (* l_0_13_129 l_0_13_129)))
 (let ((?x20264 (* l_0_13_128 l_0_13_128)))
 (let ((?x20262 (* l_0_13_127 l_0_13_127)))
 (let ((?x20260 (* l_0_13_115 l_0_13_115)))
 (let ((?x20258 (* l_0_13_114 l_0_13_114)))
 (let ((?x20256 (* l_0_13_113 l_0_13_113)))
 (let ((?x20257 (- (- (* (- l_0_13_100) l_0_13_100) (* l_0_13_112 l_0_13_112)) ?x20256)))
 (let ((?x20271 (+ (- (- (- (- (- (- ?x20257 ?x20258) ?x20260) ?x20262) ?x20264) ?x20266) ?x20268) (* 1.0 (* l_0_13_22 l_0_13_22)))))
 (let ((?x20275 (+ (+ ?x20271 (* 1.0 (* l_0_13_23 l_0_13_23))) (* 1.0 (* l_0_13_24 l_0_13_24)))))
 (let ((?x20283 (+ (+ (+ (+ ?x20275 (* 1.0 (* l_0_13_25 l_0_13_25))) ?x20278) ?x20280) ?x20282)))
 (= (- (- (- (+ ?x20283 ?x20284) ?x20286) ?x20288) ?x20290) 0.0))))))))))))))))))))))))
(assert
 (let ((?x20317 (* 2.0 l_0_13_51)))
 (let ((?x20318 (* ?x20317 l_0_13_54)))
 (let ((?x20314 (* 2.0 l_0_13_50)))
 (let ((?x20315 (* ?x20314 l_0_13_53)))
 (let ((?x20311 (* 2.0 l_0_13_49)))
 (let ((?x20312 (* ?x20311 l_0_13_52)))
 (let ((?x20309 (* l_0_13_48 l_0_13_48)))
 (let ((?x13639 (* l_0_13_47 l_0_13_47)))
 (let ((?x2964 (* 2.0 l_0_13_36)))
 (let ((?x2943 (* ?x2964 l_0_13_39)))
 (let ((?x13640 (* 2.0 l_0_13_35)))
 (let ((?x12935 (* ?x13640 l_0_13_38)))
 (let ((?x2888 (* 2.0 l_0_13_34)))
 (let ((?x2925 (* ?x2888 l_0_13_37)))
 (let ((?x2942 (+ (- (* (- l_0_13_32) l_0_13_32) (* l_0_13_33 l_0_13_33)) ?x2925)))
 (let ((?x20319 (- (- (- (+ (+ (+ (+ ?x2942 ?x12935) ?x2943) ?x13639) ?x20309) ?x20312) ?x20315) ?x20318)))
 (= ?x20319 0.0))))))))))))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20356 (* ?x20355 l_0_13_50)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20353 (* ?x20352 l_0_13_49)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20350 (* ?x20349 l_0_13_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_32) l_0_13_34) ?x20350) ?x20353) ?x20356) 0.0))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20375 (* ?x20355 l_0_13_53)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20373 (* ?x20352 l_0_13_52)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20371 (* ?x20349 l_0_13_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_13_32) l_0_13_37) ?x20371) ?x20373) ?x20375) 0.0))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20400 (* ?x20355 l_0_13_57)))
 (let ((?x20375 (* ?x20355 l_0_13_53)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20397 (* ?x20352 l_0_13_56)))
 (let ((?x20373 (* ?x20352 l_0_13_52)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20394 (* ?x20349 l_0_13_42)))
 (let ((?x20371 (* ?x20349 l_0_13_38)))
 (let ((?x20389 (* 2.0 l_0_13_32)))
 (let ((?x20391 (* ?x20389 l_0_13_41)))
 (let ((?x20390 (* ?x20389 l_0_13_37)))
 (let ((?x20401 (+ (- (+ (- (- (+ (- ?x20390 ?x20391) ?x20371) ?x20394) ?x20373) ?x20397) ?x20375) ?x20400)))
 (= ?x20401 0.0)))))))))))))))
(assert
 (let ((?x20420 (* l_0_13_51 l_0_13_51)))
 (let ((?x20418 (* l_0_13_50 l_0_13_50)))
 (let ((?x20416 (* l_0_13_49 l_0_13_49)))
 (let ((?x20414 (* l_0_13_36 l_0_13_36)))
 (let ((?x20415 (- (- (* (- l_0_13_34) l_0_13_34) (* l_0_13_35 l_0_13_35)) ?x20414)))
 (= (+ (+ (+ ?x20415 ?x20416) ?x20418) ?x20420) 0.0)))))))
(assert
 (let ((?x20317 (* 2.0 l_0_13_51)))
 (let ((?x20318 (* ?x20317 l_0_13_54)))
 (let ((?x20314 (* 2.0 l_0_13_50)))
 (let ((?x20315 (* ?x20314 l_0_13_53)))
 (let ((?x20311 (* 2.0 l_0_13_49)))
 (let ((?x20312 (* ?x20311 l_0_13_52)))
 (let ((?x2964 (* 2.0 l_0_13_36)))
 (let ((?x2943 (* ?x2964 l_0_13_39)))
 (let ((?x13640 (* 2.0 l_0_13_35)))
 (let ((?x12935 (* ?x13640 l_0_13_38)))
 (let ((?x20434 (+ (+ (- (- (* (* (- 2.0) l_0_13_34) l_0_13_37) ?x12935) ?x2943) ?x20312) ?x20315)))
 (= (+ ?x20434 ?x20318) 0.0)))))))))))))
(assert
 (let ((?x20317 (* 2.0 l_0_13_51)))
 (let ((?x20448 (* ?x20317 l_0_13_58)))
 (let ((?x20318 (* ?x20317 l_0_13_54)))
 (let ((?x20314 (* 2.0 l_0_13_50)))
 (let ((?x20445 (* ?x20314 l_0_13_57)))
 (let ((?x20315 (* ?x20314 l_0_13_53)))
 (let ((?x20311 (* 2.0 l_0_13_49)))
 (let ((?x20442 (* ?x20311 l_0_13_56)))
 (let ((?x20312 (* ?x20311 l_0_13_52)))
 (let ((?x2964 (* 2.0 l_0_13_36)))
 (let ((?x20439 (* ?x2964 l_0_13_43)))
 (let ((?x2943 (* ?x2964 l_0_13_39)))
 (let ((?x13640 (* 2.0 l_0_13_35)))
 (let ((?x3102 (* ?x13640 l_0_13_42)))
 (let ((?x12935 (* ?x13640 l_0_13_38)))
 (let ((?x2888 (* 2.0 l_0_13_34)))
 (let ((?x3112 (* ?x2888 l_0_13_41)))
 (let ((?x2925 (* ?x2888 l_0_13_37)))
 (let ((?x20443 (+ (- (- (+ (- (+ (- ?x2925 ?x3112) ?x12935) ?x3102) ?x2943) ?x20439) ?x20312) ?x20442)))
 (= (+ (- (+ (- ?x20443 ?x20315) ?x20445) ?x20318) ?x20448) 0.0)))))))))))))))))))))
(assert
 (let ((?x20482 (* l_0_13_55 l_0_13_55)))
 (let ((?x20480 (* l_0_13_54 l_0_13_54)))
 (let ((?x20478 (* l_0_13_53 l_0_13_53)))
 (let ((?x20476 (* l_0_13_52 l_0_13_52)))
 (let ((?x20474 (* l_0_13_40 l_0_13_40)))
 (let ((?x20472 (* l_0_13_39 l_0_13_39)))
 (let ((?x20473 (- (- (* (- l_0_13_37) l_0_13_37) (* l_0_13_38 l_0_13_38)) ?x20472)))
 (= (+ (+ (+ (+ (- ?x20473 ?x20474) ?x20476) ?x20478) ?x20480) ?x20482) 0.0)))))))))
(assert
 (let ((?x20482 (* l_0_13_55 l_0_13_55)))
 (let ((?x20528 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20480 (* l_0_13_54 l_0_13_54)))
 (let ((?x20524 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20478 (* l_0_13_53 l_0_13_53)))
 (let ((?x20520 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20476 (* l_0_13_52 l_0_13_52)))
 (let ((?x20516 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20474 (* l_0_13_40 l_0_13_40)))
 (let ((?x20512 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20472 (* l_0_13_39 l_0_13_39)))
 (let ((?x20508 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20470 (* l_0_13_38 l_0_13_38)))
 (let ((?x20504 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x20505 (- (+ (* (* (- 2.0) l_0_13_37) l_0_13_41) (* l_0_13_37 l_0_13_37)) ?x20504)))
 (let ((?x20518 (- (+ (+ (- (+ (- (+ ?x20505 ?x20470) ?x20508) ?x20472) ?x20512) ?x20474) ?x20516) ?x20476)))
 (= (- (+ (- (+ (- (+ ?x20518 ?x20520) ?x20478) ?x20524) ?x20480) ?x20528) ?x20482) 0.0))))))))))))))))))
(assert
 (let ((?x20559 (* l_0_13_60 l_0_13_60)))
 (let ((?x20557 (* l_0_13_59 l_0_13_59)))
 (let ((?x20555 (* l_0_13_58 l_0_13_58)))
 (let ((?x20553 (* l_0_13_57 l_0_13_57)))
 (let ((?x20551 (* l_0_13_56 l_0_13_56)))
 (let ((?x20528 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20524 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20520 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20516 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20545 (* l_0_13_45 l_0_13_45)))
 (let ((?x13814 (* l_0_13_44 l_0_13_44)))
 (let ((?x3194 (* l_0_13_43 l_0_13_43)))
 (let ((?x3198 (* l_0_13_42 l_0_13_42)))
 (let ((?x13819 (* l_0_13_41 l_0_13_41)))
 (let ((?x20512 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20508 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20504 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x13817 (+ (+ (+ (* (* 2.0 l_0_13_37) l_0_13_41) ?x20504) ?x20508) ?x20512)))
 (let ((?x20548 (- (- (- (- (- (- (- ?x13817 ?x13819) ?x3198) ?x3194) ?x13814) ?x20545) ?x20516) ?x20520)))
 (let ((?x20560 (+ (+ (+ (+ (+ (- (- ?x20548 ?x20524) ?x20528) ?x20551) ?x20553) ?x20555) ?x20557) ?x20559)))
 (= ?x20560 0.0))))))))))))))))))))))
(assert
 (let ((?x20309 (* l_0_13_48 l_0_13_48)))
 (let ((?x13639 (* l_0_13_47 l_0_13_47)))
 (let ((?x2937 (* l_0_13_33 l_0_13_33)))
 (let ((?x20322 (* l_0_13_32 l_0_13_32)))
 (let ((?x3393 (+ ?x20322 ?x2937)))
 (= (- (- ?x3393 ?x13639) ?x20309) 0.0)))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20356 (* ?x20355 l_0_13_50)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20353 (* ?x20352 l_0_13_49)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20350 (* ?x20349 l_0_13_35)))
 (= (- (- (+ (* (* 2.0 l_0_13_32) l_0_13_34) ?x20350) ?x20353) ?x20356) 0.0))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20375 (* ?x20355 l_0_13_53)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20373 (* ?x20352 l_0_13_52)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20371 (* ?x20349 l_0_13_38)))
 (let ((?x20389 (* 2.0 l_0_13_32)))
 (let ((?x20390 (* ?x20389 l_0_13_37)))
 (= (- (- (+ ?x20390 ?x20371) ?x20373) ?x20375) 0.0))))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20400 (* ?x20355 l_0_13_57)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20397 (* ?x20352 l_0_13_56)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20394 (* ?x20349 l_0_13_42)))
 (let ((?x20389 (* 2.0 l_0_13_32)))
 (let ((?x20391 (* ?x20389 l_0_13_41)))
 (= (- (- (+ ?x20391 ?x20394) ?x20397) ?x20400) 0.0))))))))))
(assert
 (let ((?x20420 (* l_0_13_51 l_0_13_51)))
 (let ((?x20418 (* l_0_13_50 l_0_13_50)))
 (let ((?x20416 (* l_0_13_49 l_0_13_49)))
 (let ((?x20414 (* l_0_13_36 l_0_13_36)))
 (let ((?x13950 (- (+ (+ (* l_0_13_34 l_0_13_34) (* l_0_13_35 l_0_13_35)) ?x20414) ?x20416)))
 (= (- (- ?x13950 ?x20418) ?x20420) 0.0)))))))
(assert
 (let ((?x20317 (* 2.0 l_0_13_51)))
 (let ((?x20448 (* ?x20317 l_0_13_58)))
 (let ((?x20314 (* 2.0 l_0_13_50)))
 (let ((?x20445 (* ?x20314 l_0_13_57)))
 (let ((?x20311 (* 2.0 l_0_13_49)))
 (let ((?x20442 (* ?x20311 l_0_13_56)))
 (let ((?x20309 (* l_0_13_48 l_0_13_48)))
 (let ((?x13639 (* l_0_13_47 l_0_13_47)))
 (let ((?x2964 (* 2.0 l_0_13_36)))
 (let ((?x20439 (* ?x2964 l_0_13_43)))
 (let ((?x13640 (* 2.0 l_0_13_35)))
 (let ((?x3102 (* ?x13640 l_0_13_42)))
 (let ((?x2888 (* 2.0 l_0_13_34)))
 (let ((?x3112 (* ?x2888 l_0_13_41)))
 (let ((?x2937 (* l_0_13_33 l_0_13_33)))
 (let ((?x20322 (* l_0_13_32 l_0_13_32)))
 (let ((?x3393 (+ ?x20322 ?x2937)))
 (let ((?x20594 (- (- (- (- (+ (+ (+ ?x3393 ?x3112) ?x3102) ?x20439) ?x13639) ?x20309) ?x20442) ?x20445)))
 (= (- ?x20594 ?x20448) 0.0))))))))))))))))))))
(assert
 (let ((?x20482 (* l_0_13_55 l_0_13_55)))
 (let ((?x20480 (* l_0_13_54 l_0_13_54)))
 (let ((?x20478 (* l_0_13_53 l_0_13_53)))
 (let ((?x20476 (* l_0_13_52 l_0_13_52)))
 (let ((?x20474 (* l_0_13_40 l_0_13_40)))
 (let ((?x20472 (* l_0_13_39 l_0_13_39)))
 (let ((?x20607 (+ (+ (+ (* l_0_13_37 l_0_13_37) (* l_0_13_38 l_0_13_38)) ?x20472) ?x20474)))
 (= (- (- (- (- ?x20607 ?x20476) ?x20478) ?x20480) ?x20482) 0.0)))))))))
(assert
 (let ((?x20528 (* (* 2.0 l_0_13_55) l_0_13_59)))
 (let ((?x20524 (* (* 2.0 l_0_13_54) l_0_13_58)))
 (let ((?x20520 (* (* 2.0 l_0_13_53) l_0_13_57)))
 (let ((?x20516 (* (* 2.0 l_0_13_52) l_0_13_56)))
 (let ((?x20512 (* (* 2.0 l_0_13_40) l_0_13_44)))
 (let ((?x20508 (* (* 2.0 l_0_13_39) l_0_13_43)))
 (let ((?x20504 (* (* 2.0 l_0_13_38) l_0_13_42)))
 (let ((?x13817 (+ (+ (+ (* (* 2.0 l_0_13_37) l_0_13_41) ?x20504) ?x20508) ?x20512)))
 (= (- (- (- (- ?x13817 ?x20516) ?x20520) ?x20524) ?x20528) 0.0))))))))))
(assert
 (let ((?x20559 (* l_0_13_60 l_0_13_60)))
 (let ((?x20557 (* l_0_13_59 l_0_13_59)))
 (let ((?x20555 (* l_0_13_58 l_0_13_58)))
 (let ((?x20553 (* l_0_13_57 l_0_13_57)))
 (let ((?x20551 (* l_0_13_56 l_0_13_56)))
 (let ((?x20545 (* l_0_13_45 l_0_13_45)))
 (let ((?x13814 (* l_0_13_44 l_0_13_44)))
 (let ((?x3194 (* l_0_13_43 l_0_13_43)))
 (let ((?x20638 (+ (+ (+ (* l_0_13_41 l_0_13_41) (* l_0_13_42 l_0_13_42)) ?x3194) ?x13814)))
 (= (- (- (- (- (- (+ ?x20638 ?x20545) ?x20551) ?x20553) ?x20555) ?x20557) ?x20559) 0.0)))))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20356 (* ?x20355 l_0_13_50)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20353 (* ?x20352 l_0_13_49)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20350 (* ?x20349 l_0_13_35)))
 (= (- (- (+ (* (* 2.0 l_0_13_32) l_0_13_34) ?x20350) ?x20353) ?x20356) 0.0))))))))
(assert
 (let ((?x20355 (* 2.0 l_0_13_48)))
 (let ((?x20400 (* ?x20355 l_0_13_57)))
 (let ((?x20352 (* 2.0 l_0_13_47)))
 (let ((?x20397 (* ?x20352 l_0_13_56)))
 (let ((?x20349 (* 2.0 l_0_13_33)))
 (let ((?x20394 (* ?x20349 l_0_13_42)))
 (let ((?x20389 (* 2.0 l_0_13_32)))
 (let ((?x20391 (* ?x20389 l_0_13_41)))
 (= (- (- (+ ?x20391 ?x20394) ?x20397) ?x20400) 0.0))))))))))
(assert
 (let ((?x20420 (* l_0_13_51 l_0_13_51)))
 (let ((?x20418 (* l_0_13_50 l_0_13_50)))
 (let ((?x20416 (* l_0_13_49 l_0_13_49)))
 (let ((?x20414 (* l_0_13_36 l_0_13_36)))
 (let ((?x13950 (- (+ (+ (* l_0_13_34 l_0_13_34) (* l_0_13_35 l_0_13_35)) ?x20414) ?x20416)))
 (= (- (- ?x13950 ?x20418) ?x20420) 0.0)))))))
(assert
 (let ((?x20317 (* 2.0 l_0_13_51)))
 (let ((?x20448 (* ?x20317 l_0_13_58)))
 (let ((?x20314 (* 2.0 l_0_13_50)))
 (let ((?x20445 (* ?x20314 l_0_13_57)))
 (let ((?x20311 (* 2.0 l_0_13_49)))
 (let ((?x20442 (* ?x20311 l_0_13_56)))
 (let ((?x2964 (* 2.0 l_0_13_36)))
 (let ((?x20439 (* ?x2964 l_0_13_43)))
 (let ((?x13640 (* 2.0 l_0_13_35)))
 (let ((?x3102 (* ?x13640 l_0_13_42)))
 (let ((?x2888 (* 2.0 l_0_13_34)))
 (let ((?x3112 (* ?x2888 l_0_13_41)))
 (= (- (- (- (+ (+ ?x3112 ?x3102) ?x20439) ?x20442) ?x20445) ?x20448) 0.0))))))))))))))
(assert
 (let ((?x20559 (* l_0_13_60 l_0_13_60)))
 (let ((?x20557 (* l_0_13_59 l_0_13_59)))
 (let ((?x20555 (* l_0_13_58 l_0_13_58)))
 (let ((?x20553 (* l_0_13_57 l_0_13_57)))
 (let ((?x20551 (* l_0_13_56 l_0_13_56)))
 (let ((?x20545 (* l_0_13_45 l_0_13_45)))
 (let ((?x13814 (* l_0_13_44 l_0_13_44)))
 (let ((?x3194 (* l_0_13_43 l_0_13_43)))
 (let ((?x20638 (+ (+ (+ (* l_0_13_41 l_0_13_41) (* l_0_13_42 l_0_13_42)) ?x3194) ?x13814)))
 (= (- (- (- (- (- (+ ?x20638 ?x20545) ?x20551) ?x20553) ?x20555) ?x20557) ?x20559) 0.0)))))))))))
(assert
 (>= l_0_13_1 0.0))
(assert
 (>= l_0_13_3 0.0))
(assert
 (>= l_0_13_6 0.0))
(assert
 (>= l_0_13_10 0.0))
(assert
 (>= l_0_13_15 0.0))
(assert
 (>= l_0_13_16 0.0))
(assert
 (>= l_0_13_18 0.0))
(assert
 (>= l_0_13_21 0.0))
(assert
 (>= l_0_13_25 0.0))
(assert
 (>= l_0_13_30 0.0))
(assert
 (>= l_0_13_31 0.0))
(assert
 (>= l_0_13_33 0.0))
(assert
 (>= l_0_13_36 0.0))
(assert
 (>= l_0_13_40 0.0))
(assert
 (>= l_0_13_45 0.0))
(assert
 (>= l_0_13_46 0.0))
(assert
 (>= l_0_13_48 0.0))
(assert
 (>= l_0_13_51 0.0))
(assert
 (>= l_0_13_55 0.0))
(assert
 (>= l_0_13_60 0.0))
(assert
 (>= l_0_13_61 0.0))
(assert
 (>= l_0_13_63 0.0))
(assert
 (>= l_0_13_66 0.0))
(assert
 (>= l_0_13_70 0.0))
(assert
 (>= l_0_13_75 0.0))
(assert
 (>= l_0_13_76 0.0))
(assert
 (>= l_0_13_78 0.0))
(assert
 (>= l_0_13_81 0.0))
(assert
 (>= l_0_13_85 0.0))
(assert
 (>= l_0_13_90 0.0))
(assert
 (>= l_0_13_91 0.0))
(assert
 (>= l_0_13_93 0.0))
(assert
 (>= l_0_13_96 0.0))
(assert
 (>= l_0_13_100 0.0))
(assert
 (>= l_0_13_105 0.0))
(assert
 (>= l_0_13_106 0.0))
(assert
 (>= l_0_13_108 0.0))
(assert
 (>= l_0_13_111 0.0))
(assert
 (>= l_0_13_115 0.0))
(assert
 (>= l_0_13_120 0.0))
(assert
 (>= l_0_13_121 0.0))
(assert
 (>= l_0_13_123 0.0))
(assert
 (>= l_0_13_126 0.0))
(assert
 (>= l_0_13_130 0.0))
(assert
 (>= l_0_13_135 0.0))
(assert
 (let ((?x20722 (* l_0_14_93 l_0_14_93)))
 (let ((?x20720 (* l_0_14_92 l_0_14_92)))
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x20718 (* ?x20717 l_0_14_77)))
 (let ((?x20709 (* l_0_14_46 l_0_14_46)))
 (let ((?x20707 (* l_0_14_31 l_0_14_31)))
 (let ((?x20696 (* l_0_14_138 l_0_14_138)))
 (let ((?x20694 (* l_0_14_137 l_0_14_137)))
 (let ((?x20692 (* l_0_14_123 l_0_14_123)))
 (let ((?x20690 (* l_0_14_122 l_0_14_122)))
 (let ((?x20691 (- (- (* (- l_0_14_107) l_0_14_107) (* l_0_14_108 l_0_14_108)) ?x20690)))
 (let ((?x20700 (- (- (- (- ?x20691 ?x20692) ?x20694) ?x20696) (* (* 4.0 l_0_14_16) l_0_14_17))))
 (let ((?x20706 (+ (+ ?x20700 (* 1.0 (* l_0_14_17 l_0_14_17))) (* 1.0 (* l_0_14_18 l_0_14_18)))))
 (let ((?x20716 (+ (+ (- (+ ?x20706 ?x20707) ?x20709) (* 4.0 (* l_0_14_62 l_0_14_62))) (* 4.0 (* l_0_14_63 l_0_14_63)))))
 (= (+ (- (- (- ?x20716 ?x20718) ?x20720) ?x20722) (/ 1.0 4.0)) 0.0))))))))))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x20840 (* ?x20717 l_0_14_79)))
 (let ((?x20709 (* l_0_14_46 l_0_14_46)))
 (let ((?x20707 (* l_0_14_31 l_0_14_31)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20824 (* ?x20823 l_0_14_28)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20821 (* ?x20820 l_0_14_27)))
 (let ((?x20817 (* 2.0 l_0_14_19)))
 (let ((?x20818 (* ?x20817 l_0_14_26)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20815 (* ?x20812 l_0_14_26)))
 (let ((?x20813 (* ?x20812 l_0_14_19)))
 (let ((?x20778 (- (* (* (- 2.0) l_0_14_1) l_0_14_4) (* (* 2.0 l_0_14_101) l_0_14_94))))
 (let ((?x20784 (- (- ?x20778 (* (* 2.0 l_0_14_102) l_0_14_95)) (* (* 2.0 l_0_14_103) l_0_14_96))))
 (let ((?x20790 (- (- ?x20784 (* (* 2.0 l_0_14_109) l_0_14_116)) (* (* 2.0 l_0_14_110) l_0_14_117))))
 (let ((?x20796 (- (- ?x20790 (* (* 2.0 l_0_14_111) l_0_14_118)) (* (* 2.0 l_0_14_124) l_0_14_131))))
 (let ((?x20802 (- (- ?x20796 (* (* 2.0 l_0_14_125) l_0_14_132)) (* (* 2.0 l_0_14_126) l_0_14_133))))
 (let ((?x20808 (- (- ?x20802 (* (* 2.0 l_0_14_139) l_0_14_146)) (* (* 2.0 l_0_14_140) l_0_14_147))))
 (let ((?x20819 (+ (- (+ (- ?x20808 (* (* 2.0 l_0_14_141) l_0_14_148)) ?x20813) ?x20815) ?x20818)))
 (let ((?x20830 (- (- (+ (+ (+ ?x20819 ?x20821) ?x20824) ?x20707) ?x20709) (* (* 2.0 l_0_14_61) l_0_14_71))))
 (let ((?x20836 (+ (+ ?x20830 (* (* 8.0 l_0_14_64) l_0_14_71)) (* (* 8.0 l_0_14_65) l_0_14_72))))
 (let ((?x20844 (- (+ (+ ?x20836 (* (* 8.0 l_0_14_66) l_0_14_73)) ?x20840) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_86))))
 (= (+ ?x20844 (/ 1.0 4.0)) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x20709 (* l_0_14_46 l_0_14_46)))
 (let ((?x20707 (* l_0_14_31 l_0_14_31)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20939 (* ?x20823 l_0_14_24)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20937 (* ?x20820 l_0_14_23)))
 (let ((?x20817 (* 2.0 l_0_14_19)))
 (let ((?x20935 (* ?x20817 l_0_14_22)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20933 (* ?x20812 l_0_14_22)))
 (let ((?x20918 (- (* (* (- 2.0) l_0_14_109) l_0_14_112) (* (* 2.0 l_0_14_110) l_0_14_113))))
 (let ((?x20922 (- (- ?x20918 (* (* 2.0 l_0_14_111) l_0_14_114)) (* (* 2.0 l_0_14_124) l_0_14_127))))
 (let ((?x20926 (- (- ?x20922 (* (* 2.0 l_0_14_125) l_0_14_128)) (* (* 2.0 l_0_14_126) l_0_14_129))))
 (let ((?x20930 (- (- ?x20926 (* (* 2.0 l_0_14_139) l_0_14_142)) (* (* 2.0 l_0_14_140) l_0_14_143))))
 (let ((?x20938 (+ (+ (- (- ?x20930 (* (* 2.0 l_0_14_141) l_0_14_144)) ?x20933) ?x20935) ?x20937)))
 (let ((?x20944 (- (+ (- (+ ?x20938 ?x20939) ?x20707) ?x20709) (* (* 2.0 l_0_14_61) l_0_14_67))))
 (let ((?x20948 (+ (+ ?x20944 (* (* 8.0 l_0_14_64) l_0_14_67)) (* (* 8.0 l_0_14_65) l_0_14_68))))
 (let ((?x20952 (- (+ ?x20948 (* (* 8.0 l_0_14_66) l_0_14_69)) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_82))))
 (let ((?x20958 (- (- ?x20952 (* (* 2.0 l_0_14_94) l_0_14_97)) (* (* 2.0 l_0_14_95) l_0_14_98))))
 (= (- (- ?x20958 (* (* 2.0 l_0_14_96) l_0_14_99)) (/ 1.0 4.0)) 0.0)))))))))))))))))))))
(assert
 (let ((?x21010 (* l_0_14_76 l_0_14_76)))
 (let ((?x21005 (* l_0_14_16 l_0_14_16)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20815 (* ?x20812 l_0_14_26)))
 (let ((?x20994 (- (* (- l_0_14_1) l_0_14_1) (* (* 2.0 l_0_14_101) l_0_14_91))))
 (let ((?x21000 (- (- ?x20994 (* (* 2.0 l_0_14_106) l_0_14_116)) (* (* 2.0 l_0_14_121) l_0_14_131))))
 (let ((?x21009 (+ (+ (+ (- ?x21000 (* (* 2.0 l_0_14_136) l_0_14_146)) ?x20815) ?x21005) (* (* 8.0 l_0_14_61) l_0_14_71))))
 (= (+ ?x21009 ?x21010) 0.0)))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x21067 (* ?x20717 l_0_14_86)))
 (let ((?x20718 (* ?x20717 l_0_14_77)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21058 (* ?x21057 l_0_14_27)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x21055 (* ?x21054 l_0_14_26)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x21050 (* ?x20812 l_0_14_17)))
 (let ((?x21029 (- (* (* (- 2.0) l_0_14_1) l_0_14_2) (* (* 2.0 l_0_14_101) l_0_14_92))))
 (let ((?x21034 (- (- ?x21029 (* (* 2.0 l_0_14_102) l_0_14_93)) (* (* 2.0 l_0_14_107) l_0_14_116))))
 (let ((?x21040 (- (- ?x21034 (* (* 2.0 l_0_14_108) l_0_14_117)) (* (* 2.0 l_0_14_122) l_0_14_131))))
 (let ((?x21046 (- (- ?x21040 (* (* 2.0 l_0_14_123) l_0_14_132)) (* (* 2.0 l_0_14_137) l_0_14_146))))
 (let ((?x21053 (- (+ (- ?x21046 (* (* 2.0 l_0_14_138) l_0_14_147)) ?x21050) (* (* 4.0 l_0_14_16) l_0_14_26))))
 (let ((?x21065 (+ (+ (+ (+ ?x21053 ?x21055) ?x21058) (* (* 8.0 l_0_14_62) l_0_14_71)) (* (* 8.0 l_0_14_63) l_0_14_72))))
 (= (- (+ ?x21065 ?x20718) ?x21067) 0.0)))))))))))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x21182 (* ?x20717 l_0_14_82)))
 (let ((?x21167 (* 2.0 l_0_14_25)))
 (let ((?x21168 (* ?x21167 l_0_14_29)))
 (let ((?x21164 (* 2.0 l_0_14_24)))
 (let ((?x21165 (* ?x21164 l_0_14_28)))
 (let ((?x21161 (* 2.0 l_0_14_23)))
 (let ((?x21162 (* ?x21161 l_0_14_27)))
 (let ((?x21159 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20933 (* ?x20812 l_0_14_22)))
 (let ((?x21114 (- (* (* (- 2.0) l_0_14_1) l_0_14_7) (* (* 2.0 l_0_14_100) l_0_14_104))))
 (let ((?x21118 (- (- ?x21114 (* (* 2.0 l_0_14_101) l_0_14_97)) (* (* 2.0 l_0_14_102) l_0_14_98))))
 (let ((?x21123 (- (- ?x21118 (* (* 2.0 l_0_14_103) l_0_14_99)) (* (* 2.0 l_0_14_112) l_0_14_116))))
 (let ((?x21129 (- (- ?x21123 (* (* 2.0 l_0_14_113) l_0_14_117)) (* (* 2.0 l_0_14_114) l_0_14_118))))
 (let ((?x21135 (- (- ?x21129 (* (* 2.0 l_0_14_115) l_0_14_119)) (* (* 2.0 l_0_14_127) l_0_14_131))))
 (let ((?x21141 (- (- ?x21135 (* (* 2.0 l_0_14_128) l_0_14_132)) (* (* 2.0 l_0_14_129) l_0_14_133))))
 (let ((?x21147 (- (- ?x21141 (* (* 2.0 l_0_14_130) l_0_14_134)) (* (* 2.0 l_0_14_142) l_0_14_146))))
 (let ((?x21153 (- (- ?x21147 (* (* 2.0 l_0_14_143) l_0_14_147)) (* (* 2.0 l_0_14_144) l_0_14_148))))
 (let ((?x21163 (+ (+ (+ (- ?x21153 (* (* 2.0 l_0_14_145) l_0_14_149)) ?x20933) ?x21159) ?x21162)))
 (let ((?x21175 (+ (+ (+ (+ ?x21163 ?x21165) ?x21168) (* (* 8.0 l_0_14_67) l_0_14_71)) (* (* 8.0 l_0_14_68) l_0_14_72))))
 (let ((?x21181 (+ (+ ?x21175 (* (* 8.0 l_0_14_69) l_0_14_73)) (* (* 8.0 l_0_14_70) l_0_14_74))))
 (= (+ ?x21181 ?x21182) 0.0))))))))))))))))))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x21067 (* ?x20717 l_0_14_86)))
 (let ((?x21309 (* l_0_14_75 l_0_14_75)))
 (let ((?x21310 (* 4.0 ?x21309)))
 (let ((?x21306 (* l_0_14_74 l_0_14_74)))
 (let ((?x21307 (* 4.0 ?x21306)))
 (let ((?x21303 (* l_0_14_73 l_0_14_73)))
 (let ((?x21304 (* 4.0 ?x21303)))
 (let ((?x21300 (* l_0_14_72 l_0_14_72)))
 (let ((?x21301 (* 4.0 ?x21300)))
 (let ((?x21297 (* l_0_14_71 l_0_14_71)))
 (let ((?x21298 (* 4.0 ?x21297)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20815 (* ?x20812 l_0_14_26)))
 (let ((?x21279 (* l_0_14_150 l_0_14_150)))
 (let ((?x21277 (* l_0_14_149 l_0_14_149)))
 (let ((?x21275 (* l_0_14_148 l_0_14_148)))
 (let ((?x21273 (* l_0_14_147 l_0_14_147)))
 (let ((?x21271 (* l_0_14_146 l_0_14_146)))
 (let ((?x21269 (* l_0_14_135 l_0_14_135)))
 (let ((?x21267 (* l_0_14_134 l_0_14_134)))
 (let ((?x21265 (* l_0_14_133 l_0_14_133)))
 (let ((?x21263 (* l_0_14_132 l_0_14_132)))
 (let ((?x21261 (* l_0_14_131 l_0_14_131)))
 (let ((?x21259 (* l_0_14_120 l_0_14_120)))
 (let ((?x21257 (* l_0_14_119 l_0_14_119)))
 (let ((?x21255 (* l_0_14_118 l_0_14_118)))
 (let ((?x21253 (* l_0_14_117 l_0_14_117)))
 (let ((?x21251 (* l_0_14_116 l_0_14_116)))
 (let ((?x21249 (* l_0_14_105 l_0_14_105)))
 (let ((?x21247 (* l_0_14_104 l_0_14_104)))
 (let ((?x21245 (* l_0_14_103 l_0_14_103)))
 (let ((?x21243 (* l_0_14_102 l_0_14_102)))
 (let ((?x21244 (- (- (* (* (- 2.0) l_0_14_1) l_0_14_11) (* l_0_14_101 l_0_14_101)) ?x21243)))
 (let ((?x21258 (- (- (- (- (- (- (- ?x21244 ?x21245) ?x21247) ?x21249) ?x21251) ?x21253) ?x21255) ?x21257)))
 (let ((?x21272 (- (- (- (- (- (- (- ?x21258 ?x21259) ?x21261) ?x21263) ?x21265) ?x21267) ?x21269) ?x21271)))
 (let ((?x21284 (+ (+ (- (- (- (- ?x21272 ?x21273) ?x21275) ?x21277) ?x21279) ?x20815) (* 1.0 (* l_0_14_26 l_0_14_26)))))
 (let ((?x21290 (+ (+ ?x21284 (* 1.0 (* l_0_14_27 l_0_14_27))) (* 1.0 (* l_0_14_28 l_0_14_28)))))
 (let ((?x21296 (+ (+ ?x21290 (* 1.0 (* l_0_14_29 l_0_14_29))) (* 1.0 (* l_0_14_30 l_0_14_30)))))
 (= (+ (+ (+ (+ (+ (+ ?x21296 ?x21298) ?x21301) ?x21304) ?x21307) ?x21310) ?x21067) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21362 (* l_0_14_78 l_0_14_78)))
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21360 (* ?x21359 l_0_14_87)))
 (let ((?x21357 (* l_0_14_77 l_0_14_77)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21355 (* ?x21354 l_0_14_86)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21352 (* ?x21351 l_0_14_56)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21349 (* ?x21348 l_0_14_41)))
 (let ((?x21346 (* l_0_14_3 l_0_14_3)))
 (let ((?x21344 (* l_0_14_2 l_0_14_2)))
 (let ((?x20704 (* l_0_14_18 l_0_14_18)))
 (let ((?x21342 (- (+ (* (* (- 4.0) l_0_14_17) l_0_14_26) (* l_0_14_17 l_0_14_17)) (* (* 4.0 l_0_14_18) l_0_14_27))))
 (let ((?x21358 (+ (- (- (+ (- (- (+ ?x21342 ?x20704) ?x21344) ?x21346) ?x21349) ?x21352) ?x21355) ?x21357)))
 (= (+ (- ?x21358 ?x21360) ?x21362) 0.0)))))))))))))))))
(assert
 (let ((?x21435 (* 2.0 l_0_14_81)))
 (let ((?x21436 (* ?x21435 l_0_14_88)))
 (let ((?x21432 (* 2.0 l_0_14_80)))
 (let ((?x21433 (* ?x21432 l_0_14_87)))
 (let ((?x21429 (* 2.0 l_0_14_79)))
 (let ((?x21430 (* ?x21429 l_0_14_86)))
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21424 (* ?x21359 l_0_14_80)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21419 (* ?x21354 l_0_14_79)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21411 (* ?x21351 l_0_14_47)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21409 (* ?x21348 l_0_14_32)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21058 (* ?x21057 l_0_14_27)))
 (let ((?x21391 (* ?x21057 l_0_14_20)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x21055 (* ?x21054 l_0_14_26)))
 (let ((?x4761 (* ?x21054 l_0_14_19)))
 (let ((?x21396 (- (- (+ (- ?x4761 ?x21055) ?x21391) ?x21058) (* (* 4.0 l_0_14_19) l_0_14_26))))
 (let ((?x21402 (- (- ?x21396 (* (* 2.0 l_0_14_2) l_0_14_4)) (* (* 4.0 l_0_14_20) l_0_14_27))))
 (let ((?x21408 (- (- ?x21402 (* (* 4.0 l_0_14_21) l_0_14_28)) (* (* 2.0 l_0_14_3) l_0_14_5))))
 (let ((?x21418 (- (- (- (+ ?x21408 ?x21409) ?x21411) (* (* 2.0 l_0_14_62) l_0_14_71)) (* (* 2.0 l_0_14_63) l_0_14_72))))
 (let ((?x21428 (- (+ (- (+ ?x21418 ?x21419) (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_86)) ?x21424) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_87))))
 (= (- (- (- ?x21428 ?x21430) ?x21433) ?x21436) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x21513 (* (* 2.0 l_0_14_85) l_0_14_89)))
 (let ((?x21510 (* (* 2.0 l_0_14_84) l_0_14_88)))
 (let ((?x21507 (* (* 2.0 l_0_14_83) l_0_14_87)))
 (let ((?x21504 (* (* 2.0 l_0_14_82) l_0_14_86)))
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21501 (* ?x21359 l_0_14_83)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21499 (* ?x21354 l_0_14_82)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21481 (* ?x21057 l_0_14_23)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x21480 (* ?x21054 l_0_14_22)))
 (let ((?x21487 (- (- (+ ?x21480 ?x21481) (* (* 2.0 l_0_14_2) l_0_14_7)) (* (* 4.0 l_0_14_22) l_0_14_26))))
 (let ((?x21493 (- (- ?x21487 (* (* 4.0 l_0_14_23) l_0_14_27)) (* (* 4.0 l_0_14_24) l_0_14_28))))
 (let ((?x21498 (- (- ?x21493 (* (* 4.0 l_0_14_25) l_0_14_29)) (* (* 2.0 l_0_14_3) l_0_14_8))))
 (= (- (- (- (- (+ (+ ?x21498 ?x21499) ?x21501) ?x21504) ?x21507) ?x21510) ?x21513) 0.0)))))))))))))))))
(assert
 (let ((?x21555 (* l_0_14_90 l_0_14_90)))
 (let ((?x21553 (* l_0_14_89 l_0_14_89)))
 (let ((?x21551 (* l_0_14_88 l_0_14_88)))
 (let ((?x21549 (* l_0_14_87 l_0_14_87)))
 (let ((?x21547 (* l_0_14_86 l_0_14_86)))
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21360 (* ?x21359 l_0_14_87)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21355 (* ?x21354 l_0_14_86)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21058 (* ?x21057 l_0_14_27)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x21055 (* ?x21054 l_0_14_26)))
 (let ((?x14680 (- (* (* (- 2.0) l_0_14_11) l_0_14_2) (* (* 2.0 l_0_14_12) l_0_14_3))))
 (let ((?x21535 (- (- (+ (+ ?x14680 ?x21055) ?x21058) (* (* 2.0 l_0_14_26) l_0_14_26)) (* (* 2.0 l_0_14_27) l_0_14_27))))
 (let ((?x21541 (- (- ?x21535 (* (* 2.0 l_0_14_28) l_0_14_28)) (* (* 2.0 l_0_14_29) l_0_14_29))))
 (let ((?x21548 (- (+ (+ (- ?x21541 (* (* 2.0 l_0_14_30) l_0_14_30)) ?x21355) ?x21360) ?x21547)))
 (= (- (- (- (- ?x21548 ?x21549) ?x21551) ?x21553) ?x21555) 0.0)))))))))))))))))))
(assert
 (let ((?x21625 (* l_0_14_81 l_0_14_81)))
 (let ((?x21620 (* l_0_14_80 l_0_14_80)))
 (let ((?x21615 (* l_0_14_79 l_0_14_79)))
 (let ((?x21601 (* l_0_14_6 l_0_14_6)))
 (let ((?x21599 (* l_0_14_5 l_0_14_5)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21597 (* ?x21351 l_0_14_49)))
 (let ((?x21595 (* l_0_14_4 l_0_14_4)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21593 (* ?x21348 l_0_14_34)))
 (let ((?x21591 (* l_0_14_21 l_0_14_21)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20824 (* ?x20823 l_0_14_28)))
 (let ((?x21588 (* l_0_14_20 l_0_14_20)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20821 (* ?x20820 l_0_14_27)))
 (let ((?x21587 (- (+ (* (* (- 2.0) l_0_14_19) l_0_14_26) (* l_0_14_19 l_0_14_19)) ?x20821)))
 (let ((?x21600 (- (- (- (+ (+ (- (+ ?x21587 ?x21588) ?x20824) ?x21591) ?x21593) ?x21595) ?x21597) ?x21599)))
 (let ((?x21608 (- (- (- ?x21600 ?x21601) (* (* 2.0 l_0_14_64) l_0_14_71)) (* (* 2.0 l_0_14_65) l_0_14_72))))
 (let ((?x21614 (- (- ?x21608 (* (* 2.0 l_0_14_66) l_0_14_73)) (* (* (/ 1.0 2.0) l_0_14_79) l_0_14_86))))
 (let ((?x21624 (- (+ (- (+ ?x21614 ?x21615) (* (* (/ 1.0 2.0) l_0_14_80) l_0_14_87)) ?x21620) (* (* (/ 1.0 2.0) l_0_14_81) l_0_14_88))))
 (= (+ ?x21624 ?x21625) 0.0)))))))))))))))))))))))
(assert
 (let ((?x21435 (* 2.0 l_0_14_81)))
 (let ((?x21715 (* ?x21435 l_0_14_84)))
 (let ((?x21432 (* 2.0 l_0_14_80)))
 (let ((?x21713 (* ?x21432 l_0_14_83)))
 (let ((?x21429 (* 2.0 l_0_14_79)))
 (let ((?x21711 (* ?x21429 l_0_14_82)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21352 (* ?x21351 l_0_14_56)))
 (let ((?x21690 (* ?x21351 l_0_14_52)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21349 (* ?x21348 l_0_14_41)))
 (let ((?x21684 (* ?x21348 l_0_14_37)))
 (let ((?x21167 (* 2.0 l_0_14_25)))
 (let ((?x21168 (* ?x21167 l_0_14_29)))
 (let ((?x21164 (* 2.0 l_0_14_24)))
 (let ((?x21165 (* ?x21164 l_0_14_28)))
 (let ((?x21161 (* 2.0 l_0_14_23)))
 (let ((?x21162 (* ?x21161 l_0_14_27)))
 (let ((?x21159 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20939 (* ?x20823 l_0_14_24)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20937 (* ?x20820 l_0_14_23)))
 (let ((?x20817 (* 2.0 l_0_14_19)))
 (let ((?x20935 (* ?x20817 l_0_14_22)))
 (let ((?x21685 (+ (- (- (- (- (+ (+ ?x20935 ?x20937) ?x20939) ?x21159) ?x21162) ?x21165) ?x21168) ?x21684)))
 (let ((?x21692 (+ (- (- (- ?x21685 ?x21349) (* (* 2.0 l_0_14_4) l_0_14_7)) ?x21690) ?x21352)))
 (let ((?x21698 (- (- ?x21692 (* (* 2.0 l_0_14_5) l_0_14_8)) (* (* 2.0 l_0_14_6) l_0_14_9))))
 (let ((?x21704 (- (- ?x21698 (* (* 2.0 l_0_14_67) l_0_14_71)) (* (* 2.0 l_0_14_68) l_0_14_72))))
 (let ((?x21710 (- (- ?x21704 (* (* 2.0 l_0_14_69) l_0_14_73)) (* (* 2.0 l_0_14_70) l_0_14_74))))
 (let ((?x21719 (- (+ (+ (+ ?x21710 ?x21711) ?x21713) ?x21715) (* (* (/ 1.0 2.0) l_0_14_82) l_0_14_86))))
 (let ((?x21725 (- (- ?x21719 (* (* (/ 1.0 2.0) l_0_14_83) l_0_14_87)) (* (* (/ 1.0 2.0) l_0_14_84) l_0_14_88))))
 (= (- ?x21725 (* (* (/ 1.0 2.0) l_0_14_85) l_0_14_89)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21435 (* 2.0 l_0_14_81)))
 (let ((?x21436 (* ?x21435 l_0_14_88)))
 (let ((?x21432 (* 2.0 l_0_14_80)))
 (let ((?x21433 (* ?x21432 l_0_14_87)))
 (let ((?x21429 (* 2.0 l_0_14_79)))
 (let ((?x21430 (* ?x21429 l_0_14_86)))
 (let ((?x21309 (* l_0_14_75 l_0_14_75)))
 (let ((?x21306 (* l_0_14_74 l_0_14_74)))
 (let ((?x21303 (* l_0_14_73 l_0_14_73)))
 (let ((?x21300 (* l_0_14_72 l_0_14_72)))
 (let ((?x21297 (* l_0_14_71 l_0_14_71)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21352 (* ?x21351 l_0_14_56)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21349 (* ?x21348 l_0_14_41)))
 (let ((?x21294 (* l_0_14_30 l_0_14_30)))
 (let ((?x21291 (* l_0_14_29 l_0_14_29)))
 (let ((?x21288 (* l_0_14_28 l_0_14_28)))
 (let ((?x21285 (* l_0_14_27 l_0_14_27)))
 (let ((?x21282 (* l_0_14_26 l_0_14_26)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20824 (* ?x20823 l_0_14_28)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20821 (* ?x20820 l_0_14_27)))
 (let ((?x20817 (* 2.0 l_0_14_19)))
 (let ((?x20818 (* ?x20817 l_0_14_26)))
 (let ((?x15042 (- (* (* (- 2.0) l_0_14_11) l_0_14_4) (* (* 2.0 l_0_14_12) l_0_14_5))))
 (let ((?x21767 (+ (+ (+ (- ?x15042 (* (* 2.0 l_0_14_13) l_0_14_6)) ?x20818) ?x20821) ?x20824)))
 (let ((?x21774 (- (+ (- (- (- (- (- ?x21767 ?x21282) ?x21285) ?x21288) ?x21291) ?x21294) ?x21349) ?x21352)))
 (let ((?x21781 (+ (+ (- (- (- (- (- ?x21774 ?x21297) ?x21300) ?x21303) ?x21306) ?x21309) ?x21430) ?x21433)))
 (let ((?x21788 (- (- (+ ?x21781 ?x21436) (* (* (/ 1.0 4.0) l_0_14_86) l_0_14_86)) (* (* (/ 1.0 4.0) l_0_14_87) l_0_14_87))))
 (let ((?x21794 (- (- ?x21788 (* (* (/ 1.0 4.0) l_0_14_88) l_0_14_88)) (* (* (/ 1.0 4.0) l_0_14_89) l_0_14_89))))
 (= (- ?x21794 (* (* (/ 1.0 4.0) l_0_14_90) l_0_14_90)) 0.0))))))))))))))))))))))))))))))))))
(assert
 (let ((?x21824 (* l_0_14_9 l_0_14_9)))
 (let ((?x21822 (* l_0_14_85 l_0_14_85)))
 (let ((?x21820 (* l_0_14_84 l_0_14_84)))
 (let ((?x21818 (* l_0_14_83 l_0_14_83)))
 (let ((?x5424 (* l_0_14_82 l_0_14_82)))
 (let ((?x5430 (* l_0_14_8 l_0_14_8)))
 (let ((?x5456 (* l_0_14_7 l_0_14_7)))
 (let ((?x15202 (* l_0_14_25 l_0_14_25)))
 (let ((?x15256 (* l_0_14_24 l_0_14_24)))
 (let ((?x5476 (* l_0_14_23 l_0_14_23)))
 (let ((?x15268 (+ (+ (* (- l_0_14_10) l_0_14_10) (* l_0_14_22 l_0_14_22)) ?x5476)))
 (let ((?x21821 (+ (+ (+ (- (- (+ (+ ?x15268 ?x15256) ?x15202) ?x5456) ?x5430) ?x5424) ?x21818) ?x21820)))
 (= (- (+ ?x21821 ?x21822) ?x21824) 0.0))))))))))))))
(assert
 (let ((?x21513 (* (* 2.0 l_0_14_85) l_0_14_89)))
 (let ((?x21510 (* (* 2.0 l_0_14_84) l_0_14_88)))
 (let ((?x21507 (* (* 2.0 l_0_14_83) l_0_14_87)))
 (let ((?x21504 (* (* 2.0 l_0_14_82) l_0_14_86)))
 (let ((?x21167 (* 2.0 l_0_14_25)))
 (let ((?x21168 (* ?x21167 l_0_14_29)))
 (let ((?x21164 (* 2.0 l_0_14_24)))
 (let ((?x21165 (* ?x21164 l_0_14_28)))
 (let ((?x21161 (* 2.0 l_0_14_23)))
 (let ((?x21162 (* ?x21161 l_0_14_27)))
 (let ((?x21159 (* (* 2.0 l_0_14_22) l_0_14_26)))
 (let ((?x21840 (- (* (* (- 2.0) l_0_14_10) l_0_14_14) (* (* 2.0 l_0_14_11) l_0_14_7))))
 (let ((?x21844 (- (- ?x21840 (* (* 2.0 l_0_14_12) l_0_14_8)) (* (* 2.0 l_0_14_13) l_0_14_9))))
 (let ((?x21851 (+ (+ (+ (+ (+ (+ (+ ?x21844 ?x21159) ?x21162) ?x21165) ?x21168) ?x21504) ?x21507) ?x21510)))
 (= (+ ?x21851 ?x21513) 0.0))))))))))))))))
(assert
 (let ((?x21555 (* l_0_14_90 l_0_14_90)))
 (let ((?x21553 (* l_0_14_89 l_0_14_89)))
 (let ((?x21551 (* l_0_14_88 l_0_14_88)))
 (let ((?x21549 (* l_0_14_87 l_0_14_87)))
 (let ((?x21547 (* l_0_14_86 l_0_14_86)))
 (let ((?x21294 (* l_0_14_30 l_0_14_30)))
 (let ((?x21291 (* l_0_14_29 l_0_14_29)))
 (let ((?x21288 (* l_0_14_28 l_0_14_28)))
 (let ((?x21285 (* l_0_14_27 l_0_14_27)))
 (let ((?x21282 (* l_0_14_26 l_0_14_26)))
 (let ((?x21875 (* l_0_14_15 l_0_14_15)))
 (let ((?x21873 (* l_0_14_14 l_0_14_14)))
 (let ((?x21871 (* l_0_14_13 l_0_14_13)))
 (let ((?x21872 (- (- (* (- l_0_14_11) l_0_14_11) (* l_0_14_12 l_0_14_12)) ?x21871)))
 (let ((?x21881 (+ (+ (+ (+ (+ (- (- ?x21872 ?x21873) ?x21875) ?x21282) ?x21285) ?x21288) ?x21291) ?x21294)))
 (= (+ (+ (+ (+ (+ ?x21881 ?x21547) ?x21549) ?x21551) ?x21553) ?x21555) 0.0)))))))))))))))))
(assert
 (let ((?x21010 (* l_0_14_76 l_0_14_76)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x21050 (* ?x20812 l_0_14_17)))
 (let ((?x21901 (- (* (* (- 2.0) l_0_14_106) l_0_14_107) (* (* 2.0 l_0_14_121) l_0_14_122))))
 (let ((?x21906 (- (+ (- ?x21901 (* (* 2.0 l_0_14_136) l_0_14_137)) ?x21050) (* ?x20812 l_0_14_16))))
 (let ((?x21912 (- (- (+ ?x21906 (* (* 8.0 l_0_14_61) l_0_14_62)) ?x21010) (* (* 2.0 l_0_14_91) l_0_14_92))))
 (= ?x21912 0.0))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x20840 (* ?x20717 l_0_14_79)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21391 (* ?x21057 l_0_14_20)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x4761 (* ?x21054 l_0_14_19)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x21050 (* ?x20812 l_0_14_17)))
 (let ((?x21933 (- (* (* (- 2.0) l_0_14_107) l_0_14_109) (* (* 2.0 l_0_14_108) l_0_14_110))))
 (let ((?x21937 (- (- ?x21933 (* (* 2.0 l_0_14_122) l_0_14_124)) (* (* 2.0 l_0_14_123) l_0_14_125))))
 (let ((?x21941 (- (- ?x21937 (* (* 2.0 l_0_14_137) l_0_14_139)) (* (* 2.0 l_0_14_138) l_0_14_140))))
 (let ((?x21946 (+ (+ (- (- ?x21941 ?x21050) (* (* 4.0 l_0_14_16) l_0_14_19)) ?x4761) ?x21391)))
 (let ((?x21950 (+ (- ?x21946 (* (* 2.0 l_0_14_61) l_0_14_62)) (* (* 8.0 l_0_14_62) l_0_14_64))))
 (let ((?x21954 (- (+ ?x21950 (* (* 8.0 l_0_14_63) l_0_14_65)) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_77))))
 (let ((?x21961 (- (- (- ?x21954 ?x20840) (* (* 2.0 l_0_14_92) l_0_14_94)) (* (* 2.0 l_0_14_93) l_0_14_95))))
 (= ?x21961 0.0)))))))))))))))))
(assert
 (let ((?x20717 (* 2.0 l_0_14_76)))
 (let ((?x21182 (* ?x20717 l_0_14_82)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21481 (* ?x21057 l_0_14_23)))
 (let ((?x21054 (* 2.0 l_0_14_17)))
 (let ((?x21480 (* ?x21054 l_0_14_22)))
 (let ((?x5729 (- (* (* (- 2.0) l_0_14_107) l_0_14_112) (* (* 2.0 l_0_14_108) l_0_14_113))))
 (let ((?x15413 (- (- ?x5729 (* (* 2.0 l_0_14_122) l_0_14_127)) (* (* 2.0 l_0_14_123) l_0_14_128))))
 (let ((?x21977 (- (- ?x15413 (* (* 2.0 l_0_14_137) l_0_14_142)) (* (* 2.0 l_0_14_138) l_0_14_143))))
 (let ((?x21983 (+ (+ (+ (- ?x21977 (* (* 4.0 l_0_14_16) l_0_14_22)) ?x21480) ?x21481) (* (* 8.0 l_0_14_62) l_0_14_67))))
 (let ((?x21988 (- (- (+ ?x21983 (* (* 8.0 l_0_14_63) l_0_14_68)) ?x21182) (* (* 2.0 l_0_14_92) l_0_14_97))))
 (= (- ?x21988 (* (* 2.0 l_0_14_93) l_0_14_98)) 0.0)))))))))))))
(assert
 (let ((?x21362 (* l_0_14_78 l_0_14_78)))
 (let ((?x21357 (* l_0_14_77 l_0_14_77)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21411 (* ?x21351 l_0_14_47)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21409 (* ?x21348 l_0_14_32)))
 (let ((?x22023 (- (* (* (- 2.0) l_0_14_17) l_0_14_17) (* (* 2.0 l_0_14_18) l_0_14_18))))
 (= (- (- (- (+ ?x22023 ?x21409) ?x21411) ?x21357) ?x21362) 0.0)))))))))
(assert
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21424 (* ?x21359 l_0_14_80)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21419 (* ?x21354 l_0_14_79)))
 (let ((?x20714 (* l_0_14_63 l_0_14_63)))
 (let ((?x20711 (* l_0_14_62 l_0_14_62)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21597 (* ?x21351 l_0_14_49)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21593 (* ?x21348 l_0_14_34)))
 (let ((?x20704 (* l_0_14_18 l_0_14_18)))
 (let ((?x22040 (- (- (* (* (- 4.0) l_0_14_17) l_0_14_19) (* l_0_14_17 l_0_14_17)) (* (* 4.0 l_0_14_18) l_0_14_20))))
 (let ((?x22049 (- (- (- (- (- (+ (- ?x22040 ?x20704) ?x21593) ?x21597) ?x20711) ?x20714) ?x21419) (* (* (/ 1.0 4.0) l_0_14_77) l_0_14_77))))
 (= (- (- ?x22049 ?x21424) (* (* (/ 1.0 4.0) l_0_14_78) l_0_14_78)) 0.0)))))))))))))))
(assert
 (let ((?x21359 (* 2.0 l_0_14_78)))
 (let ((?x21501 (* ?x21359 l_0_14_83)))
 (let ((?x21354 (* 2.0 l_0_14_77)))
 (let ((?x21499 (* ?x21354 l_0_14_82)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21690 (* ?x21351 l_0_14_52)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21684 (* ?x21348 l_0_14_37)))
 (let ((?x5872 (- (* (* (- 4.0) l_0_14_17) l_0_14_22) (* (* 4.0 l_0_14_18) l_0_14_23))))
 (= (- (- (- (+ ?x5872 ?x21684) ?x21690) ?x21499) ?x21501) 0.0)))))))))))
(assert
 (let ((?x21625 (* l_0_14_81 l_0_14_81)))
 (let ((?x21620 (* l_0_14_80 l_0_14_80)))
 (let ((?x21615 (* l_0_14_79 l_0_14_79)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21391 (* ?x21057 l_0_14_20)))
 (let ((?x22068 (- (- (* (* (- 2.0) l_0_14_17) l_0_14_19) ?x21391) (* (* 2.0 l_0_14_19) l_0_14_19))))
 (let ((?x22072 (- (- ?x22068 (* (* 2.0 l_0_14_20) l_0_14_20)) (* (* 2.0 l_0_14_21) l_0_14_21))))
 (let ((?x22076 (- (- ?x22072 (* (* 2.0 l_0_14_62) l_0_14_64)) (* (* 2.0 l_0_14_63) l_0_14_65))))
 (let ((?x22080 (- (- ?x22076 (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_79)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_80))))
 (= (- (- (- ?x22080 ?x21615) ?x21620) ?x21625) 0.0)))))))))))
(assert
 (let ((?x21435 (* 2.0 l_0_14_81)))
 (let ((?x21715 (* ?x21435 l_0_14_84)))
 (let ((?x21432 (* 2.0 l_0_14_80)))
 (let ((?x21713 (* ?x21432 l_0_14_83)))
 (let ((?x21429 (* 2.0 l_0_14_79)))
 (let ((?x21711 (* ?x21429 l_0_14_82)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21411 (* ?x21351 l_0_14_47)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21409 (* ?x21348 l_0_14_32)))
 (let ((?x21057 (* 2.0 l_0_14_18)))
 (let ((?x21481 (* ?x21057 l_0_14_23)))
 (let ((?x6085 (- (- (* (* (- 2.0) l_0_14_17) l_0_14_22) ?x21481) (* (* 4.0 l_0_14_19) l_0_14_22))))
 (let ((?x22093 (- (- ?x6085 (* (* 4.0 l_0_14_20) l_0_14_23)) (* (* 4.0 l_0_14_21) l_0_14_24))))
 (let ((?x22099 (- (- (+ (- ?x22093 ?x21409) ?x21411) (* (* 2.0 l_0_14_62) l_0_14_67)) (* (* 2.0 l_0_14_63) l_0_14_68))))
 (let ((?x22103 (- (- ?x22099 (* (* (/ 1.0 2.0) l_0_14_77) l_0_14_82)) (* (* (/ 1.0 2.0) l_0_14_78) l_0_14_83))))
 (= (- (- (- ?x22103 ?x21711) ?x21713) ?x21715) 0.0))))))))))))))))))
(assert
 (let ((?x21822 (* l_0_14_85 l_0_14_85)))
 (let ((?x21820 (* l_0_14_84 l_0_14_84)))
 (let ((?x21818 (* l_0_14_83 l_0_14_83)))
 (let ((?x5424 (* l_0_14_82 l_0_14_82)))
 (let ((?x6324 (- (* (* (- 2.0) l_0_14_22) l_0_14_22) (* (* 2.0 l_0_14_23) l_0_14_23))))
 (let ((?x6290 (- (- ?x6324 (* (* 2.0 l_0_14_24) l_0_14_24)) (* (* 2.0 l_0_14_25) l_0_14_25))))
 (= (- (- (- (- ?x6290 ?x5424) ?x21818) ?x21820) ?x21822) 0.0))))))))
(assert
 (let ((?x22146 (* l_0_14_61 l_0_14_61)))
 (let ((?x21005 (* l_0_14_16 l_0_14_16)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20813 (* ?x20812 l_0_14_19)))
 (let ((?x6417 (- (* (* (- 2.0) l_0_14_106) l_0_14_109) (* (* 2.0 l_0_14_121) l_0_14_124))))
 (let ((?x22145 (+ (- (+ (- ?x6417 (* (* 2.0 l_0_14_136) l_0_14_139)) ?x20813) ?x21005) (* (* 8.0 l_0_14_61) l_0_14_64))))
 (let ((?x22152 (- (- (- ?x22145 ?x22146) (* (* (/ 1.0 4.0) l_0_14_76) l_0_14_76)) (* (* 2.0 l_0_14_91) l_0_14_94))))
 (= ?x22152 0.0)))))))))
(assert
 (let ((?x22209 (* l_0_14_96 l_0_14_96)))
 (let ((?x22207 (* l_0_14_95 l_0_14_95)))
 (let ((?x22205 (* l_0_14_94 l_0_14_94)))
 (let ((?x22200 (* l_0_14_66 l_0_14_66)))
 (let ((?x22201 (* 4.0 ?x22200)))
 (let ((?x22197 (* l_0_14_65 l_0_14_65)))
 (let ((?x22198 (* 4.0 ?x22197)))
 (let ((?x22194 (* l_0_14_64 l_0_14_64)))
 (let ((?x22195 (* 4.0 ?x22194)))
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20813 (* ?x20812 l_0_14_19)))
 (let ((?x22183 (* l_0_14_141 l_0_14_141)))
 (let ((?x22181 (* l_0_14_140 l_0_14_140)))
 (let ((?x22179 (* l_0_14_139 l_0_14_139)))
 (let ((?x22177 (* l_0_14_126 l_0_14_126)))
 (let ((?x22175 (* l_0_14_125 l_0_14_125)))
 (let ((?x22173 (* l_0_14_124 l_0_14_124)))
 (let ((?x22171 (* l_0_14_111 l_0_14_111)))
 (let ((?x22172 (- (- (* (- l_0_14_109) l_0_14_109) (* l_0_14_110 l_0_14_110)) ?x22171)))
 (let ((?x22185 (- (- (- (- (- (- (- ?x22172 ?x22173) ?x22175) ?x22177) ?x22179) ?x22181) ?x22183) ?x20813)))
 (let ((?x22189 (+ (+ ?x22185 (* 1.0 (* l_0_14_19 l_0_14_19))) (* 1.0 (* l_0_14_20 l_0_14_20)))))
 (let ((?x22193 (- (+ ?x22189 (* 1.0 (* l_0_14_21 l_0_14_21))) (* (* 2.0 l_0_14_61) l_0_14_64))))
 (let ((?x22204 (- (+ (+ (+ ?x22193 ?x22195) ?x22198) ?x22201) (* (* (/ 1.0 2.0) l_0_14_76) l_0_14_79))))
 (= (- (- (- ?x22204 ?x22205) ?x22207) ?x22209) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x22200 (* l_0_14_66 l_0_14_66)))
 (let ((?x22197 (* l_0_14_65 l_0_14_65)))
 (let ((?x22194 (* l_0_14_64 l_0_14_64)))
 (let ((?x21591 (* l_0_14_21 l_0_14_21)))
 (let ((?x22248 (- (- (* (- l_0_14_19) l_0_14_19) (* l_0_14_20 l_0_14_20)) ?x21591)))
 (let ((?x22254 (- (- (- (- ?x22248 ?x22194) ?x22197) ?x22200) (* (* (/ 1.0 4.0) l_0_14_79) l_0_14_79))))
 (let ((?x22260 (- (- ?x22254 (* (* (/ 1.0 4.0) l_0_14_80) l_0_14_80)) (* (* (/ 1.0 4.0) l_0_14_81) l_0_14_81))))
 (= ?x22260 0.0)))))))))
(assert
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21597 (* ?x21351 l_0_14_49)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21593 (* ?x21348 l_0_14_34)))
 (let ((?x20823 (* 2.0 l_0_14_21)))
 (let ((?x20939 (* ?x20823 l_0_14_24)))
 (let ((?x20820 (* 2.0 l_0_14_20)))
 (let ((?x20937 (* ?x20820 l_0_14_23)))
 (let ((?x22270 (+ (- (- (- (* (* (- 2.0) l_0_14_19) l_0_14_22) ?x20937) ?x20939) ?x21593) ?x21597)))
 (let ((?x22274 (- (- ?x22270 (* (* 2.0 l_0_14_64) l_0_14_67)) (* (* 2.0 l_0_14_65) l_0_14_68))))
 (let ((?x22278 (- (- ?x22274 (* (* 2.0 l_0_14_66) l_0_14_69)) (* (* (/ 1.0 2.0) l_0_14_79) l_0_14_82))))
 (let ((?x22282 (- (- ?x22278 (* (* (/ 1.0 2.0) l_0_14_80) l_0_14_83)) (* (* (/ 1.0 2.0) l_0_14_81) l_0_14_84))))
 (= ?x22282 0.0))))))))))))))
(assert
 (let ((?x22312 (* l_0_14_70 l_0_14_70)))
 (let ((?x22310 (* l_0_14_69 l_0_14_69)))
 (let ((?x22308 (* l_0_14_68 l_0_14_68)))
 (let ((?x22306 (* l_0_14_67 l_0_14_67)))
 (let ((?x21351 (* 2.0 l_0_14_46)))
 (let ((?x21690 (* ?x21351 l_0_14_52)))
 (let ((?x21348 (* 2.0 l_0_14_31)))
 (let ((?x21684 (* ?x21348 l_0_14_37)))
 (let ((?x15202 (* l_0_14_25 l_0_14_25)))
 (let ((?x15256 (* l_0_14_24 l_0_14_24)))
 (let ((?x22302 (- (- (* (- l_0_14_22) l_0_14_22) (* l_0_14_23 l_0_14_23)) ?x15256)))
 (let ((?x22313 (- (- (- (- (+ (- (- ?x22302 ?x15202) ?x21684) ?x21690) ?x22306) ?x22308) ?x22310) ?x22312)))
 (let ((?x22319 (- (- ?x22313 (* (* (/ 1.0 4.0) l_0_14_82) l_0_14_82)) (* (* (/ 1.0 4.0) l_0_14_83) l_0_14_83))))
 (let ((?x22325 (- (- ?x22319 (* (* (/ 1.0 4.0) l_0_14_84) l_0_14_84)) (* (* (/ 1.0 4.0) l_0_14_85) l_0_14_85))))
 (= ?x22325 0.0))))))))))))))))
(assert
 (let ((?x22357 (* l_0_14_91 l_0_14_91)))
 (let ((?x22146 (* l_0_14_61 l_0_14_61)))
 (let ((?x22355 (* 4.0 ?x22146)))
 (let ((?x22351 (* l_0_14_136 l_0_14_136)))
 (let ((?x22352 (- (- (* (- l_0_14_106) l_0_14_106) (* l_0_14_121 l_0_14_121)) ?x22351)))
 (= (- (+ (+ ?x22352 (* 1.0 (* l_0_14_16 l_0_14_16))) ?x22355) ?x22357) 0.0)))))))
(assert
 (let ((?x20812 (* 2.0 l_0_14_16)))
 (let ((?x20933 (* ?x20812 l_0_14_22)))
 (let ((?x22370 (- (* (* (- 2.0) l_0_14_106) l_0_14_112) (* (* 2.0 l_0_14_121) l_0_14_127))))
 (let ((?x22375 (+ (+ (- ?x22370 (* (* 2.0 l_0_14_136) l_0_14_142)) ?x20933) (* (* 8.0 l_0_14_61) l_0_14_67))))
 (= (- ?x22375 (* (* 2.0 l_0_14_91) l_0_14_97)) 0.0))))))
(assert
 (let ((?x22442 (* l_0_14_99 l_0_14_99)))
 (let ((?x22440 (* l_0_14_98 l_0_14_98)))
 (let ((?x22438 (* l_0_14_97 l_0_14_97)))
 (let ((?x22312 (* l_0_14_70 l_0_14_70)))
 (let ((?x22436 (* 4.0 ?x22312)))
 (let ((?x22310 (* l_0_14_69 l_0_14_69)))
 (let ((?x22434 (* 4.0 ?x22310)))
 (let ((?x22308 (* l_0_14_68 l_0_14_68)))
 (let ((?x22432 (* 4.0 ?x22308)))
 (let ((?x22306 (* l_0_14_67 l_0_14_67)))
 (let ((?x22430 (* 4.0 ?x22306)))
 (let ((?x22420 (* l_0_14_145 l_0_14_145)))
 (let ((?x22418 (* l_0_14_144 l_0_14_144)))
 (let ((?x22416 (* l_0_14_143 l_0_14_143)))
 (let ((?x22414 (* l_0_14_142 l_0_14_142)))
 (let ((?x22412 (* l_0_14_130 l_0_14_130)))
 (let ((?x22410 (* l_0_14_129 l_0_14_129)))
 (let ((?x22408 (* l_0_14_128 l_0_14_128)))
 (let ((?x22406 (* l_0_14_127 l_0_14_127)))
 (let ((?x22404 (* l_0_14_115 l_0_14_115)))
 (let ((?x22402 (* l_0_14_114 l_0_14_114)))
 (let ((?x22400 (* l_0_14_113 l_0_14_113)))
 (let ((?x22401 (- (- (* (- l_0_14_100) l_0_14_100) (* l_0_14_112 l_0_14_112)) ?x22400)))
 (let ((?x22415 (- (- (- (- (- (- (- ?x22401 ?x22402) ?x22404) ?x22406) ?x22408) ?x22410) ?x22412) ?x22414)))
 (let ((?x22423 (+ (- (- (- ?x22415 ?x22416) ?x22418) ?x22420) (* 1.0 (* l_0_14_22 l_0_14_22)))))
 (let ((?x22427 (+ (+ ?x22423 (* 1.0 (* l_0_14_23 l_0_14_23))) (* 1.0 (* l_0_14_24 l_0_14_24)))))
 (let ((?x22435 (+ (+ (+ (+ ?x22427 (* 1.0 (* l_0_14_25 l_0_14_25))) ?x22430) ?x22432) ?x22434)))
 (= (- (- (- (+ ?x22435 ?x22436) ?x22438) ?x22440) ?x22442) 0.0)))))))))))))))))))))))))))))
(assert
 (let ((?x22481 (* 2.0 l_0_14_51)))
 (let ((?x22482 (* ?x22481 l_0_14_54)))
 (let ((?x22478 (* 2.0 l_0_14_50)))
 (let ((?x22479 (* ?x22478 l_0_14_53)))
 (let ((?x22475 (* 2.0 l_0_14_49)))
 (let ((?x22476 (* ?x22475 l_0_14_52)))
 (let ((?x22473 (* l_0_14_48 l_0_14_48)))
 (let ((?x22471 (* l_0_14_47 l_0_14_47)))
 (let ((?x22468 (* 2.0 l_0_14_36)))
 (let ((?x22469 (* ?x22468 l_0_14_39)))
 (let ((?x22465 (* 2.0 l_0_14_35)))
 (let ((?x22466 (* ?x22465 l_0_14_38)))
 (let ((?x22462 (* 2.0 l_0_14_34)))
 (let ((?x22463 (* ?x22462 l_0_14_37)))
 (let ((?x22464 (+ (- (* (- l_0_14_32) l_0_14_32) (* l_0_14_33 l_0_14_33)) ?x22463)))
 (let ((?x22483 (- (- (- (+ (+ (+ (+ ?x22464 ?x22466) ?x22469) ?x22471) ?x22473) ?x22476) ?x22479) ?x22482)))
 (= ?x22483 0.0))))))))))))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22520 (* ?x22519 l_0_14_50)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22517 (* ?x22516 l_0_14_49)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22514 (* ?x22513 l_0_14_35)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_32) l_0_14_34) ?x22514) ?x22517) ?x22520) 0.0))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22538 (* ?x22519 l_0_14_53)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22536 (* ?x22516 l_0_14_52)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22534 (* ?x22513 l_0_14_38)))
 (= (+ (+ (- (* (* (- 2.0) l_0_14_32) l_0_14_37) ?x22534) ?x22536) ?x22538) 0.0))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22558 (* ?x22519 l_0_14_57)))
 (let ((?x22538 (* ?x22519 l_0_14_53)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22555 (* ?x22516 l_0_14_56)))
 (let ((?x22536 (* ?x22516 l_0_14_52)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22552 (* ?x22513 l_0_14_42)))
 (let ((?x22534 (* ?x22513 l_0_14_38)))
 (let ((?x22547 (* 2.0 l_0_14_32)))
 (let ((?x22549 (* ?x22547 l_0_14_41)))
 (let ((?x22548 (* ?x22547 l_0_14_37)))
 (let ((?x22559 (+ (- (+ (- (- (+ (- ?x22548 ?x22549) ?x22534) ?x22552) ?x22536) ?x22555) ?x22538) ?x22558)))
 (= ?x22559 0.0)))))))))))))))
(assert
 (let ((?x22588 (* l_0_14_51 l_0_14_51)))
 (let ((?x22586 (* l_0_14_50 l_0_14_50)))
 (let ((?x22584 (* l_0_14_49 l_0_14_49)))
 (let ((?x22582 (* l_0_14_36 l_0_14_36)))
 (let ((?x22583 (- (- (* (- l_0_14_34) l_0_14_34) (* l_0_14_35 l_0_14_35)) ?x22582)))
 (= (+ (+ (+ ?x22583 ?x22584) ?x22586) ?x22588) 0.0)))))))
(assert
 (let ((?x22481 (* 2.0 l_0_14_51)))
 (let ((?x22482 (* ?x22481 l_0_14_54)))
 (let ((?x22478 (* 2.0 l_0_14_50)))
 (let ((?x22479 (* ?x22478 l_0_14_53)))
 (let ((?x22475 (* 2.0 l_0_14_49)))
 (let ((?x22476 (* ?x22475 l_0_14_52)))
 (let ((?x22468 (* 2.0 l_0_14_36)))
 (let ((?x22469 (* ?x22468 l_0_14_39)))
 (let ((?x22465 (* 2.0 l_0_14_35)))
 (let ((?x22466 (* ?x22465 l_0_14_38)))
 (let ((?x22607 (+ (+ (- (- (* (* (- 2.0) l_0_14_34) l_0_14_37) ?x22466) ?x22469) ?x22476) ?x22479)))
 (= (+ ?x22607 ?x22482) 0.0)))))))))))))
(assert
 (let ((?x22481 (* 2.0 l_0_14_51)))
 (let ((?x22612 (* ?x22481 l_0_14_58)))
 (let ((?x22482 (* ?x22481 l_0_14_54)))
 (let ((?x22478 (* 2.0 l_0_14_50)))
 (let ((?x7206 (* ?x22478 l_0_14_57)))
 (let ((?x22479 (* ?x22478 l_0_14_53)))
 (let ((?x22475 (* 2.0 l_0_14_49)))
 (let ((?x7171 (* ?x22475 l_0_14_56)))
 (let ((?x22476 (* ?x22475 l_0_14_52)))
 (let ((?x22468 (* 2.0 l_0_14_36)))
 (let ((?x7205 (* ?x22468 l_0_14_43)))
 (let ((?x22469 (* ?x22468 l_0_14_39)))
 (let ((?x22465 (* 2.0 l_0_14_35)))
 (let ((?x16023 (* ?x22465 l_0_14_42)))
 (let ((?x22466 (* ?x22465 l_0_14_38)))
 (let ((?x22462 (* 2.0 l_0_14_34)))
 (let ((?x7313 (* ?x22462 l_0_14_41)))
 (let ((?x22463 (* ?x22462 l_0_14_37)))
 (let ((?x7211 (+ (- (- (+ (- (+ (- ?x22463 ?x7313) ?x22466) ?x16023) ?x22469) ?x7205) ?x22476) ?x7171)))
 (= (+ (- (+ (- ?x7211 ?x22479) ?x7206) ?x22482) ?x22612) 0.0)))))))))))))))))))))
(assert
 (let ((?x22648 (* l_0_14_55 l_0_14_55)))
 (let ((?x22646 (* l_0_14_54 l_0_14_54)))
 (let ((?x22644 (* l_0_14_53 l_0_14_53)))
 (let ((?x22642 (* l_0_14_52 l_0_14_52)))
 (let ((?x22640 (* l_0_14_40 l_0_14_40)))
 (let ((?x22638 (* l_0_14_39 l_0_14_39)))
 (let ((?x22639 (- (- (* (- l_0_14_37) l_0_14_37) (* l_0_14_38 l_0_14_38)) ?x22638)))
 (= (+ (+ (+ (+ (- ?x22639 ?x22640) ?x22642) ?x22644) ?x22646) ?x22648) 0.0)))))))))
(assert
 (let ((?x22648 (* l_0_14_55 l_0_14_55)))
 (let ((?x22692 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22646 (* l_0_14_54 l_0_14_54)))
 (let ((?x22688 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22644 (* l_0_14_53 l_0_14_53)))
 (let ((?x22684 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22642 (* l_0_14_52 l_0_14_52)))
 (let ((?x22680 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22640 (* l_0_14_40 l_0_14_40)))
 (let ((?x22676 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22638 (* l_0_14_39 l_0_14_39)))
 (let ((?x22672 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22636 (* l_0_14_38 l_0_14_38)))
 (let ((?x22668 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22669 (- (+ (* (* (- 2.0) l_0_14_37) l_0_14_41) (* l_0_14_37 l_0_14_37)) ?x22668)))
 (let ((?x22682 (- (+ (+ (- (+ (- (+ ?x22669 ?x22636) ?x22672) ?x22638) ?x22676) ?x22640) ?x22680) ?x22642)))
 (= (- (+ (- (+ (- (+ ?x22682 ?x22684) ?x22644) ?x22688) ?x22646) ?x22692) ?x22648) 0.0))))))))))))))))))
(assert
 (let ((?x22744 (* l_0_14_60 l_0_14_60)))
 (let ((?x22742 (* l_0_14_59 l_0_14_59)))
 (let ((?x22740 (* l_0_14_58 l_0_14_58)))
 (let ((?x22738 (* l_0_14_57 l_0_14_57)))
 (let ((?x22736 (* l_0_14_56 l_0_14_56)))
 (let ((?x22692 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22688 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22684 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22680 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22730 (* l_0_14_45 l_0_14_45)))
 (let ((?x22728 (* l_0_14_44 l_0_14_44)))
 (let ((?x22726 (* l_0_14_43 l_0_14_43)))
 (let ((?x22724 (* l_0_14_42 l_0_14_42)))
 (let ((?x22722 (* l_0_14_41 l_0_14_41)))
 (let ((?x22676 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22672 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22668 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22721 (+ (+ (+ (* (* 2.0 l_0_14_37) l_0_14_41) ?x22668) ?x22672) ?x22676)))
 (let ((?x22733 (- (- (- (- (- (- (- ?x22721 ?x22722) ?x22724) ?x22726) ?x22728) ?x22730) ?x22680) ?x22684)))
 (let ((?x22745 (+ (+ (+ (+ (+ (- (- ?x22733 ?x22688) ?x22692) ?x22736) ?x22738) ?x22740) ?x22742) ?x22744)))
 (= ?x22745 0.0))))))))))))))))))))))
(assert
 (let ((?x22473 (* l_0_14_48 l_0_14_48)))
 (let ((?x22471 (* l_0_14_47 l_0_14_47)))
 (let ((?x7064 (* l_0_14_33 l_0_14_33)))
 (let ((?x22486 (* l_0_14_32 l_0_14_32)))
 (let ((?x7490 (+ ?x22486 ?x7064)))
 (= (- (- ?x7490 ?x22471) ?x22473) 0.0)))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22520 (* ?x22519 l_0_14_50)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22517 (* ?x22516 l_0_14_49)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22514 (* ?x22513 l_0_14_35)))
 (= (- (- (+ (* (* 2.0 l_0_14_32) l_0_14_34) ?x22514) ?x22517) ?x22520) 0.0))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22538 (* ?x22519 l_0_14_53)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22536 (* ?x22516 l_0_14_52)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22534 (* ?x22513 l_0_14_38)))
 (let ((?x22547 (* 2.0 l_0_14_32)))
 (let ((?x22548 (* ?x22547 l_0_14_37)))
 (= (- (- (+ ?x22548 ?x22534) ?x22536) ?x22538) 0.0))))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22558 (* ?x22519 l_0_14_57)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22555 (* ?x22516 l_0_14_56)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22552 (* ?x22513 l_0_14_42)))
 (let ((?x22547 (* 2.0 l_0_14_32)))
 (let ((?x22549 (* ?x22547 l_0_14_41)))
 (= (- (- (+ ?x22549 ?x22552) ?x22555) ?x22558) 0.0))))))))))
(assert
 (let ((?x22588 (* l_0_14_51 l_0_14_51)))
 (let ((?x22586 (* l_0_14_50 l_0_14_50)))
 (let ((?x22584 (* l_0_14_49 l_0_14_49)))
 (let ((?x22582 (* l_0_14_36 l_0_14_36)))
 (let ((?x7489 (- (+ (+ (* l_0_14_34 l_0_14_34) (* l_0_14_35 l_0_14_35)) ?x22582) ?x22584)))
 (= (- (- ?x7489 ?x22586) ?x22588) 0.0)))))))
(assert
 (let ((?x22481 (* 2.0 l_0_14_51)))
 (let ((?x22612 (* ?x22481 l_0_14_58)))
 (let ((?x22478 (* 2.0 l_0_14_50)))
 (let ((?x7206 (* ?x22478 l_0_14_57)))
 (let ((?x22475 (* 2.0 l_0_14_49)))
 (let ((?x7171 (* ?x22475 l_0_14_56)))
 (let ((?x22473 (* l_0_14_48 l_0_14_48)))
 (let ((?x22471 (* l_0_14_47 l_0_14_47)))
 (let ((?x22468 (* 2.0 l_0_14_36)))
 (let ((?x7205 (* ?x22468 l_0_14_43)))
 (let ((?x22465 (* 2.0 l_0_14_35)))
 (let ((?x16023 (* ?x22465 l_0_14_42)))
 (let ((?x22462 (* 2.0 l_0_14_34)))
 (let ((?x7313 (* ?x22462 l_0_14_41)))
 (let ((?x7064 (* l_0_14_33 l_0_14_33)))
 (let ((?x22486 (* l_0_14_32 l_0_14_32)))
 (let ((?x7490 (+ ?x22486 ?x7064)))
 (let ((?x16207 (- (- (- (- (+ (+ (+ ?x7490 ?x7313) ?x16023) ?x7205) ?x22471) ?x22473) ?x7171) ?x7206)))
 (= (- ?x16207 ?x22612) 0.0))))))))))))))))))))
(assert
 (let ((?x22648 (* l_0_14_55 l_0_14_55)))
 (let ((?x22646 (* l_0_14_54 l_0_14_54)))
 (let ((?x22644 (* l_0_14_53 l_0_14_53)))
 (let ((?x22642 (* l_0_14_52 l_0_14_52)))
 (let ((?x22640 (* l_0_14_40 l_0_14_40)))
 (let ((?x22638 (* l_0_14_39 l_0_14_39)))
 (let ((?x7693 (+ (+ (+ (* l_0_14_37 l_0_14_37) (* l_0_14_38 l_0_14_38)) ?x22638) ?x22640)))
 (= (- (- (- (- ?x7693 ?x22642) ?x22644) ?x22646) ?x22648) 0.0)))))))))
(assert
 (let ((?x22692 (* (* 2.0 l_0_14_55) l_0_14_59)))
 (let ((?x22688 (* (* 2.0 l_0_14_54) l_0_14_58)))
 (let ((?x22684 (* (* 2.0 l_0_14_53) l_0_14_57)))
 (let ((?x22680 (* (* 2.0 l_0_14_52) l_0_14_56)))
 (let ((?x22676 (* (* 2.0 l_0_14_40) l_0_14_44)))
 (let ((?x22672 (* (* 2.0 l_0_14_39) l_0_14_43)))
 (let ((?x22668 (* (* 2.0 l_0_14_38) l_0_14_42)))
 (let ((?x22721 (+ (+ (+ (* (* 2.0 l_0_14_37) l_0_14_41) ?x22668) ?x22672) ?x22676)))
 (= (- (- (- (- ?x22721 ?x22680) ?x22684) ?x22688) ?x22692) 0.0))))))))))
(assert
 (let ((?x22744 (* l_0_14_60 l_0_14_60)))
 (let ((?x22742 (* l_0_14_59 l_0_14_59)))
 (let ((?x22740 (* l_0_14_58 l_0_14_58)))
 (let ((?x22738 (* l_0_14_57 l_0_14_57)))
 (let ((?x22736 (* l_0_14_56 l_0_14_56)))
 (let ((?x22730 (* l_0_14_45 l_0_14_45)))
 (let ((?x22728 (* l_0_14_44 l_0_14_44)))
 (let ((?x22726 (* l_0_14_43 l_0_14_43)))
 (let ((?x22795 (+ (+ (+ (* l_0_14_41 l_0_14_41) (* l_0_14_42 l_0_14_42)) ?x22726) ?x22728)))
 (= (- (- (- (- (- (+ ?x22795 ?x22730) ?x22736) ?x22738) ?x22740) ?x22742) ?x22744) 0.0)))))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22520 (* ?x22519 l_0_14_50)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22517 (* ?x22516 l_0_14_49)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22514 (* ?x22513 l_0_14_35)))
 (= (- (- (+ (* (* 2.0 l_0_14_32) l_0_14_34) ?x22514) ?x22517) ?x22520) 0.0))))))))
(assert
 (let ((?x22519 (* 2.0 l_0_14_48)))
 (let ((?x22558 (* ?x22519 l_0_14_57)))
 (let ((?x22516 (* 2.0 l_0_14_47)))
 (let ((?x22555 (* ?x22516 l_0_14_56)))
 (let ((?x22513 (* 2.0 l_0_14_33)))
 (let ((?x22552 (* ?x22513 l_0_14_42)))
 (let ((?x22547 (* 2.0 l_0_14_32)))
 (let ((?x22549 (* ?x22547 l_0_14_41)))
 (= (- (- (+ ?x22549 ?x22552) ?x22555) ?x22558) 0.0))))))))))
(assert
 (let ((?x22588 (* l_0_14_51 l_0_14_51)))
 (let ((?x22586 (* l_0_14_50 l_0_14_50)))
 (let ((?x22584 (* l_0_14_49 l_0_14_49)))
 (let ((?x22582 (* l_0_14_36 l_0_14_36)))
 (let ((?x7489 (- (+ (+ (* l_0_14_34 l_0_14_34) (* l_0_14_35 l_0_14_35)) ?x22582) ?x22584)))
 (= (- (- ?x7489 ?x22586) ?x22588) 0.0)))))))
(assert
 (let ((?x22481 (* 2.0 l_0_14_51)))
 (let ((?x22612 (* ?x22481 l_0_14_58)))
 (let ((?x22478 (* 2.0 l_0_14_50)))
 (let ((?x7206 (* ?x22478 l_0_14_57)))
 (let ((?x22475 (* 2.0 l_0_14_49)))
 (let ((?x7171 (* ?x22475 l_0_14_56)))
 (let ((?x22468 (* 2.0 l_0_14_36)))
 (let ((?x7205 (* ?x22468 l_0_14_43)))
 (let ((?x22465 (* 2.0 l_0_14_35)))
 (let ((?x16023 (* ?x22465 l_0_14_42)))
 (let ((?x22462 (* 2.0 l_0_14_34)))
 (let ((?x7313 (* ?x22462 l_0_14_41)))
 (= (- (- (- (+ (+ ?x7313 ?x16023) ?x7205) ?x7171) ?x7206) ?x22612) 0.0))))))))))))))
(assert
 (let ((?x22744 (* l_0_14_60 l_0_14_60)))
 (let ((?x22742 (* l_0_14_59 l_0_14_59)))
 (let ((?x22740 (* l_0_14_58 l_0_14_58)))
 (let ((?x22738 (* l_0_14_57 l_0_14_57)))
 (let ((?x22736 (* l_0_14_56 l_0_14_56)))
 (let ((?x22730 (* l_0_14_45 l_0_14_45)))
 (let ((?x22728 (* l_0_14_44 l_0_14_44)))
 (let ((?x22726 (* l_0_14_43 l_0_14_43)))
 (let ((?x22795 (+ (+ (+ (* l_0_14_41 l_0_14_41) (* l_0_14_42 l_0_14_42)) ?x22726) ?x22728)))
 (= (- (- (- (- (- (+ ?x22795 ?x22730) ?x22736) ?x22738) ?x22740) ?x22742) ?x22744) 0.0)))))))))))
(assert
 (>= l_0_14_1 0.0))
(assert
 (>= l_0_14_3 0.0))
(assert
 (>= l_0_14_6 0.0))
(assert
 (>= l_0_14_10 0.0))
(assert
 (>= l_0_14_15 0.0))
(assert
 (>= l_0_14_16 0.0))
(assert
 (>= l_0_14_18 0.0))
(assert
 (>= l_0_14_21 0.0))
(assert
 (>= l_0_14_25 0.0))
(assert
 (>= l_0_14_30 0.0))
(assert
 (>= l_0_14_31 0.0))
(assert
 (>= l_0_14_33 0.0))
(assert
 (>= l_0_14_36 0.0))
(assert
 (>= l_0_14_40 0.0))
(assert
 (>= l_0_14_45 0.0))
(assert
 (>= l_0_14_46 0.0))
(assert
 (>= l_0_14_48 0.0))
(assert
 (>= l_0_14_51 0.0))
(assert
 (>= l_0_14_55 0.0))
(assert
 (>= l_0_14_60 0.0))
(assert
 (>= l_0_14_61 0.0))
(assert
 (>= l_0_14_63 0.0))
(assert
 (>= l_0_14_66 0.0))
(assert
 (>= l_0_14_70 0.0))
(assert
 (>= l_0_14_75 0.0))
(assert
 (>= l_0_14_76 0.0))
(assert
 (>= l_0_14_78 0.0))
(assert
 (>= l_0_14_81 0.0))
(assert
 (>= l_0_14_85 0.0))
(assert
 (>= l_0_14_90 0.0))
(assert
 (>= l_0_14_91 0.0))
(assert
 (>= l_0_14_93 0.0))
(assert
 (>= l_0_14_96 0.0))
(assert
 (>= l_0_14_100 0.0))
(assert
 (>= l_0_14_105 0.0))
(assert
 (>= l_0_14_106 0.0))
(assert
 (>= l_0_14_108 0.0))
(assert
 (>= l_0_14_111 0.0))
(assert
 (>= l_0_14_115 0.0))
(assert
 (>= l_0_14_120 0.0))
(assert
 (>= l_0_14_121 0.0))
(assert
 (>= l_0_14_123 0.0))
(assert
 (>= l_0_14_126 0.0))
(assert
 (>= l_0_14_130 0.0))
(assert
 (>= l_0_14_135 0.0))
(assert
 (>= l_0_14_136 0.0))
(assert
 (>= l_0_14_138 0.0))
(assert
 (>= l_0_14_141 0.0))
(assert
 (>= l_0_14_145 0.0))
(assert
 (>= l_0_14_150 0.0))
(assert
 (= (+ (- l_0_15_3 l_0_15_4) 1.0) 0.0))
(assert
 (= (- (* (- _a_0_) l_0_15_6) l_0_15_8) 0.0))
(assert
 (= (- l_0_15_1 l_0_15_2) 0.0))
(assert
 (let ((?x22897 (- (+ (- (* (- _a_1_) l_0_15_6) l_0_15_3) l_0_15_4) l_0_15_5)))
 (= (+ ?x22897 l_0_15_7) 0.0)))
(assert
 (= (- (* (- _a_2_) l_0_15_6) l_0_15_7) 0.0))
(assert
 (>= l_0_15_1 0.0))
(assert
 (>= l_0_15_2 0.0))
(assert
 (>= l_0_15_3 0.0))
(assert
 (>= l_0_15_4 0.0))
(assert
 (>= l_0_15_5 0.0))
(assert
 (>= l_0_15_6 0.0))
(assert
 (>= l_0_15_7 0.0))
(assert
 (>= l_0_15_8 0.0))
(assert
 (= (+ (- l_0_16_1 l_0_16_2) 2.0) 0.0))
(assert
 (= (+ (- (* (- _a_2_) l_0_16_6) l_0_16_7) 1.0) 0.0))
(assert
 (let ((?x22952 (- (- (- (* (- _a_0_) l_0_16_6) l_0_16_10) l_0_16_8) l_0_16_9)))
 (= (- ?x22952 1.0) 0.0)))
(assert
 (= (- (- l_0_16_3 l_0_16_4) 1.0) 0.0))
(assert
 (let ((?x22981 (- (+ (- (* (- _a_1_) l_0_16_6) l_0_16_3) l_0_16_4) l_0_16_5)))
 (= (+ ?x22981 l_0_16_7) 0.0)))
(assert
 (>= l_0_16_1 0.0))
(assert
 (>= l_0_16_2 0.0))
(assert
 (>= l_0_16_3 0.0))
(assert
 (>= l_0_16_4 0.0))
(assert
 (>= l_0_16_5 0.0))
(assert
 (>= l_0_16_6 0.0))
(assert
 (>= l_0_16_7 0.0))
(assert
 (>= l_0_16_8 0.0))
(assert
 (>= l_0_16_9 0.0))
(assert
 (>= l_0_16_10 0.0))
(assert
 (let ((?x23076 (* 2.0 l_0_17_91)))
 (let ((?x23079 (* ?x23076 l_0_17_97)))
 (let ((?x23077 (* ?x23076 l_0_17_94)))
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x23071 (* ?x23070 l_0_17_49)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x23068 (* ?x23067 l_0_17_34)))
 (let ((?x23009 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23012 (+ ?x23009 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x23021 (- (- (* ?x22875 ?x23012) (* (* (* 2.0 _a_1_) l_0_17_76) l_0_17_79)) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_82))))
 (let ((?x23027 (- (- ?x23021 (* (* 2.0 l_0_17_109) l_0_17_112)) (* (* 2.0 l_0_17_110) l_0_17_113))))
 (let ((?x23033 (- (- ?x23027 (* (* 2.0 l_0_17_111) l_0_17_114)) (* (* 2.0 l_0_17_124) l_0_17_127))))
 (let ((?x23039 (- (- ?x23033 (* (* 2.0 l_0_17_125) l_0_17_128)) (* (* 2.0 l_0_17_126) l_0_17_129))))
 (let ((?x23045 (- (- ?x23039 (* (* 2.0 l_0_17_139) l_0_17_142)) (* (* 2.0 l_0_17_140) l_0_17_143))))
 (let ((?x23051 (- (- ?x23045 (* (* 2.0 l_0_17_141) l_0_17_144)) (* (* 2.0 l_0_17_154) l_0_17_157))))
 (let ((?x23057 (- (- ?x23051 (* (* 2.0 l_0_17_155) l_0_17_158)) (* (* 2.0 l_0_17_156) l_0_17_159))))
 (let ((?x23063 (- (- ?x23057 (* (* 2.0 l_0_17_169) l_0_17_172)) (* (* 2.0 l_0_17_170) l_0_17_173))))
 (let ((?x23075 (- (+ (- (- ?x23063 (* (* 2.0 l_0_17_171) l_0_17_174)) ?x23068) ?x23071) (* (* 2.0 l_0_17_61) l_0_17_64))))
 (= (+ (- (+ ?x23075 ?x23077) ?x23079) 1.0) 0.0)))))))))))))))))))))
(assert
 (let ((?x23178 (* l_0_17_168 l_0_17_168)))
 (let ((?x23176 (* l_0_17_167 l_0_17_167)))
 (let ((?x23171 (* l_0_17_153 l_0_17_153)))
 (let ((?x23169 (* l_0_17_152 l_0_17_152)))
 (let ((?x23167 (* l_0_17_138 l_0_17_138)))
 (let ((?x23165 (* l_0_17_137 l_0_17_137)))
 (let ((?x23163 (* l_0_17_123 l_0_17_123)))
 (let ((?x23161 (* l_0_17_122 l_0_17_122)))
 (let ((?x23159 (* l_0_17_108 l_0_17_108)))
 (let ((?x23157 (* l_0_17_107 l_0_17_107)))
 (let ((?x23151 (* l_0_17_78 l_0_17_78)))
 (let ((?x7954 (* l_0_17_77 l_0_17_77)))
 (let ((?x23152 (+ ?x7954 ?x23151)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x23160 (- (- (+ (* ?x22875 ?x23152) (* (* 2.0 l_0_17_1) l_0_17_2)) ?x23157) ?x23159)))
 (let ((?x23175 (- (- (- (- (- (- (- ?x23160 ?x23161) ?x23163) ?x23165) ?x23167) ?x23169) ?x23171) (* (* 2.0 l_0_17_16) l_0_17_17))))
 (= (- (- (- ?x23175 ?x23176) ?x23178) 1.0) 0.0))))))))))))))))))
(assert
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x23071 (* ?x23070 l_0_17_49)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x23068 (* ?x23067 l_0_17_34)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x23208 (* ?x23207 l_0_17_91)))
 (let ((?x23201 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x23203 (+ ?x23201 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x23209 (- (- (* ?x22875 ?x23203) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_86)) ?x23208)))
 (let ((?x23213 (- (- ?x23209 (* (* 2.0 l_0_17_109) l_0_17_116)) (* (* 2.0 l_0_17_110) l_0_17_117))))
 (let ((?x23217 (- (- ?x23213 (* (* 2.0 l_0_17_111) l_0_17_118)) (* (* 2.0 l_0_17_124) l_0_17_131))))
 (let ((?x23221 (- (- ?x23217 (* (* 2.0 l_0_17_125) l_0_17_132)) (* (* 2.0 l_0_17_126) l_0_17_133))))
 (let ((?x23225 (- (- ?x23221 (* (* 2.0 l_0_17_139) l_0_17_146)) (* (* 2.0 l_0_17_140) l_0_17_147))))
 (let ((?x23229 (- (- ?x23225 (* (* 2.0 l_0_17_141) l_0_17_148)) (* (* 2.0 l_0_17_154) l_0_17_161))))
 (let ((?x23233 (- (- ?x23229 (* (* 2.0 l_0_17_155) l_0_17_162)) (* (* 2.0 l_0_17_156) l_0_17_163))))
 (let ((?x23237 (- (- ?x23233 (* (* 2.0 l_0_17_169) l_0_17_176)) (* (* 2.0 l_0_17_170) l_0_17_177))))
 (let ((?x23242 (- (- (+ (- ?x23237 (* (* 2.0 l_0_17_171) l_0_17_178)) ?x23068) ?x23071) 1.0)))
 (= ?x23242 0.0))))))))))))))))))))
(assert
 (let ((?x23296 (* l_0_17_16 l_0_17_16)))
 (let ((?x16738 (* l_0_17_1 l_0_17_1)))
 (let ((?x16737 (- (+ (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_77) ?x16738) (* (* 2.0 l_0_17_106) l_0_17_107))))
 (let ((?x16691 (- (- ?x16737 (* (* 2.0 l_0_17_121) l_0_17_122)) (* (* 2.0 l_0_17_136) l_0_17_137))))
 (let ((?x23300 (- (- (- ?x16691 (* (* 2.0 l_0_17_151) l_0_17_152)) ?x23296) (* (* 2.0 l_0_17_166) l_0_17_167))))
 (= ?x23300 0.0)))))))
(assert
 (let ((?x23076 (* 2.0 l_0_17_91)))
 (let ((?x23360 (* ?x23076 l_0_17_92)))
 (let ((?x23322 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x23327 (+ (- (* ?x22875 ?x23322) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_77)) (* (* 2.0 l_0_17_1) l_0_17_4))))
 (let ((?x23333 (- (- ?x23327 (* (* 2.0 l_0_17_107) l_0_17_109)) (* (* 2.0 l_0_17_108) l_0_17_110))))
 (let ((?x23339 (- (- ?x23333 (* (* 2.0 l_0_17_122) l_0_17_124)) (* (* 2.0 l_0_17_123) l_0_17_125))))
 (let ((?x23345 (- (- ?x23339 (* (* 2.0 l_0_17_137) l_0_17_139)) (* (* 2.0 l_0_17_138) l_0_17_140))))
 (let ((?x23351 (- (- ?x23345 (* (* 2.0 l_0_17_152) l_0_17_154)) (* (* 2.0 l_0_17_153) l_0_17_155))))
 (let ((?x23356 (- (- ?x23351 (* (* 2.0 l_0_17_16) l_0_17_19)) (* (* 2.0 l_0_17_167) l_0_17_169))))
 (= (- (- ?x23356 (* (* 2.0 l_0_17_168) l_0_17_170)) ?x23360) 0.0))))))))))))
(assert
 (let ((?x23076 (* 2.0 l_0_17_91)))
 (let ((?x23360 (* ?x23076 l_0_17_92)))
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x23414 (* ?x23070 l_0_17_47)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x23412 (* ?x23067 l_0_17_32)))
 (let ((?x16945 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x16944 (+ (- (* ?x22875 ?x16945) (* (* (* 2.0 _a_1_) l_0_17_76) l_0_17_77)) (* (* 2.0 l_0_17_1) l_0_17_7))))
 (let ((?x23393 (- (- ?x16944 (* (* 2.0 l_0_17_107) l_0_17_112)) (* (* 2.0 l_0_17_108) l_0_17_113))))
 (let ((?x23397 (- (- ?x23393 (* (* 2.0 l_0_17_122) l_0_17_127)) (* (* 2.0 l_0_17_123) l_0_17_128))))
 (let ((?x23401 (- (- ?x23397 (* (* 2.0 l_0_17_137) l_0_17_142)) (* (* 2.0 l_0_17_138) l_0_17_143))))
 (let ((?x23405 (- (- ?x23401 (* (* 2.0 l_0_17_152) l_0_17_157)) (* (* 2.0 l_0_17_153) l_0_17_158))))
 (let ((?x23409 (- (- ?x23405 (* (* 2.0 l_0_17_16) l_0_17_22)) (* (* 2.0 l_0_17_167) l_0_17_172))))
 (let ((?x23417 (- (+ (- (- ?x23409 (* (* 2.0 l_0_17_168) l_0_17_173)) ?x23412) ?x23414) (* (* 2.0 l_0_17_61) l_0_17_62))))
 (= (+ ?x23417 ?x23360) 0.0)))))))))))))))))
(assert
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x23414 (* ?x23070 l_0_17_47)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x23412 (* ?x23067 l_0_17_32)))
 (let ((?x17020 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x8499 (- (+ (* ?x22875 ?x17020) (* (* 2.0 l_0_17_1) l_0_17_11)) (* (* 2.0 l_0_17_107) l_0_17_116))))
 (let ((?x23452 (- (- ?x8499 (* (* 2.0 l_0_17_108) l_0_17_117)) (* (* 2.0 l_0_17_122) l_0_17_131))))
 (let ((?x23456 (- (- ?x23452 (* (* 2.0 l_0_17_123) l_0_17_132)) (* (* 2.0 l_0_17_137) l_0_17_146))))
 (let ((?x23460 (- (- ?x23456 (* (* 2.0 l_0_17_138) l_0_17_147)) (* (* 2.0 l_0_17_152) l_0_17_161))))
 (let ((?x23464 (- (- ?x23460 (* (* 2.0 l_0_17_153) l_0_17_162)) (* (* 2.0 l_0_17_16) l_0_17_26))))
 (let ((?x23468 (- (- ?x23464 (* (* 2.0 l_0_17_167) l_0_17_176)) (* (* 2.0 l_0_17_168) l_0_17_177))))
 (= (- (+ ?x23468 ?x23412) ?x23414) 0.0))))))))))))))
(assert
 (let ((?x8693 (* l_0_17_3 l_0_17_3)))
 (let ((?x17244 (* l_0_17_2 l_0_17_2)))
 (let ((?x8767 (+ (- (* (- l_0_17_17) l_0_17_17) (* l_0_17_18 l_0_17_18)) ?x17244)))
 (= (+ ?x8767 ?x8693) 0.0)))))
(assert
 (let ((?x23537 (* l_0_17_93 l_0_17_93)))
 (let ((?x23535 (* l_0_17_92 l_0_17_92)))
 (let ((?x23151 (* l_0_17_78 l_0_17_78)))
 (let ((?x7954 (* l_0_17_77 l_0_17_77)))
 (let ((?x23152 (+ ?x7954 ?x23151)))
 (let ((?x22910 (- _a_2_)))
 (let ((?x23528 (- (- (* ?x22910 ?x23152) (* (* 2.0 l_0_17_17) l_0_17_19)) (* (* 2.0 l_0_17_18) l_0_17_20))))
 (let ((?x23534 (+ (+ ?x23528 (* (* 2.0 l_0_17_2) l_0_17_4)) (* (* 2.0 l_0_17_3) l_0_17_5))))
 (= (- (- ?x23534 ?x23535) ?x23537) 0.0))))))))))
(assert
 (let ((?x23537 (* l_0_17_93 l_0_17_93)))
 (let ((?x23535 (* l_0_17_92 l_0_17_92)))
 (let ((?x23579 (* l_0_17_63 l_0_17_63)))
 (let ((?x23577 (* l_0_17_62 l_0_17_62)))
 (let ((?x23575 (* l_0_17_48 l_0_17_48)))
 (let ((?x23573 (* l_0_17_47 l_0_17_47)))
 (let ((?x23571 (* l_0_17_33 l_0_17_33)))
 (let ((?x23569 (* l_0_17_32 l_0_17_32)))
 (let ((?x23151 (* l_0_17_78 l_0_17_78)))
 (let ((?x7954 (* l_0_17_77 l_0_17_77)))
 (let ((?x23152 (+ ?x7954 ?x23151)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x23564 (- (- (* ?x22893 ?x23152) (* (* 2.0 l_0_17_17) l_0_17_22)) (* (* 2.0 l_0_17_18) l_0_17_23))))
 (let ((?x23568 (+ (+ ?x23564 (* (* 2.0 l_0_17_2) l_0_17_7)) (* (* 2.0 l_0_17_3) l_0_17_8))))
 (let ((?x23581 (+ (- (- (+ (+ (- (- ?x23568 ?x23569) ?x23571) ?x23573) ?x23575) ?x23577) ?x23579) ?x23535)))
 (= (+ ?x23581 ?x23537) 0.0)))))))))))))))))
(assert
 (let ((?x23575 (* l_0_17_48 l_0_17_48)))
 (let ((?x23573 (* l_0_17_47 l_0_17_47)))
 (let ((?x23571 (* l_0_17_33 l_0_17_33)))
 (let ((?x23569 (* l_0_17_32 l_0_17_32)))
 (let ((?x8760 (+ (* (* 2.0 l_0_17_11) l_0_17_2) (* (* 2.0 l_0_17_12) l_0_17_3))))
 (let ((?x8858 (- (- ?x8760 (* (* 2.0 l_0_17_17) l_0_17_26)) (* (* 2.0 l_0_17_18) l_0_17_27))))
 (= (- (- (+ (+ ?x8858 ?x23569) ?x23571) ?x23573) ?x23575) 0.0))))))))
(assert
 (let ((?x23629 (* 2.0 l_0_17_93)))
 (let ((?x23630 (* ?x23629 l_0_17_95)))
 (let ((?x23626 (* 2.0 l_0_17_92)))
 (let ((?x23627 (* ?x23626 l_0_17_94)))
 (let ((?x23624 (* l_0_17_6 l_0_17_6)))
 (let ((?x23622 (* l_0_17_5 l_0_17_5)))
 (let ((?x17365 (* l_0_17_4 l_0_17_4)))
 (let ((?x17363 (* l_0_17_21 l_0_17_21)))
 (let ((?x17366 (* l_0_17_20 l_0_17_20)))
 (let ((?x8875 (* l_0_17_19 l_0_17_19)))
 (let ((?x23322 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x23625 (+ (+ (+ (- (- (- (* ?x22910 ?x23322) ?x8875) ?x17366) ?x17363) ?x17365) ?x23622) ?x23624)))
 (= (- (- ?x23625 ?x23627) ?x23630) 0.0)))))))))))))))
(assert
 (let ((?x23629 (* 2.0 l_0_17_93)))
 (let ((?x23695 (* ?x23629 l_0_17_98)))
 (let ((?x23630 (* ?x23629 l_0_17_95)))
 (let ((?x23626 (* 2.0 l_0_17_92)))
 (let ((?x23692 (* ?x23626 l_0_17_97)))
 (let ((?x23627 (* ?x23626 l_0_17_94)))
 (let ((?x23676 (* 2.0 l_0_17_48)))
 (let ((?x23677 (* ?x23676 l_0_17_50)))
 (let ((?x23673 (* 2.0 l_0_17_47)))
 (let ((?x23674 (* ?x23673 l_0_17_49)))
 (let ((?x23667 (* 2.0 l_0_17_33)))
 (let ((?x23668 (* ?x23667 l_0_17_35)))
 (let ((?x23664 (* 2.0 l_0_17_32)))
 (let ((?x23665 (* ?x23664 l_0_17_34)))
 (let ((?x16945 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x23322 (+ (* (* 2.0 l_0_17_77) l_0_17_79) (* (* 2.0 l_0_17_78) l_0_17_80))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x23657 (- (- (* ?x22893 ?x23322) (* _a_2_ ?x16945)) (* (* 2.0 l_0_17_19) l_0_17_22))))
 (let ((?x23663 (- (- ?x23657 (* (* 2.0 l_0_17_20) l_0_17_23)) (* (* 2.0 l_0_17_21) l_0_17_24))))
 (let ((?x23675 (+ (+ (- (- ?x23663 ?x23665) ?x23668) (* (* 2.0 l_0_17_4) l_0_17_7)) ?x23674)))
 (let ((?x23684 (+ (+ (+ ?x23675 ?x23677) (* (* 2.0 l_0_17_5) l_0_17_8)) (* (* 2.0 l_0_17_6) l_0_17_9))))
 (let ((?x23690 (- (- ?x23684 (* (* 2.0 l_0_17_62) l_0_17_64)) (* (* 2.0 l_0_17_63) l_0_17_65))))
 (= (- (+ (- (+ ?x23690 ?x23627) ?x23692) ?x23630) ?x23695) 0.0))))))))))))))))))))))))
(assert
 (let ((?x23676 (* 2.0 l_0_17_48)))
 (let ((?x23677 (* ?x23676 l_0_17_50)))
 (let ((?x23673 (* 2.0 l_0_17_47)))
 (let ((?x23674 (* ?x23673 l_0_17_49)))
 (let ((?x23667 (* 2.0 l_0_17_33)))
 (let ((?x23668 (* ?x23667 l_0_17_35)))
 (let ((?x23664 (* 2.0 l_0_17_32)))
 (let ((?x23665 (* ?x23664 l_0_17_34)))
 (let ((?x23734 (* 2.0 l_0_17_102)))
 (let ((?x23735 (* ?x23734 l_0_17_93)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x23732 (* ?x23207 l_0_17_92)))
 (let ((?x17020 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x23738 (+ (- (- (* ?x22910 ?x17020) ?x23732) ?x23735) (* (* 2.0 l_0_17_11) l_0_17_4))))
 (let ((?x23743 (+ (+ ?x23738 (* (* 2.0 l_0_17_12) l_0_17_5)) (* (* 2.0 l_0_17_13) l_0_17_6))))
 (let ((?x23747 (- (- ?x23743 (* (* 2.0 l_0_17_19) l_0_17_26)) (* (* 2.0 l_0_17_20) l_0_17_27))))
 (let ((?x23752 (- (+ (+ (- ?x23747 (* (* 2.0 l_0_17_21) l_0_17_28)) ?x23665) ?x23668) ?x23674)))
 (= (- ?x23752 ?x23677) 0.0))))))))))))))))))))
(assert
 (let ((?x23629 (* 2.0 l_0_17_93)))
 (let ((?x23695 (* ?x23629 l_0_17_98)))
 (let ((?x23626 (* 2.0 l_0_17_92)))
 (let ((?x23692 (* ?x23626 l_0_17_97)))
 (let ((?x23808 (* l_0_17_9 l_0_17_9)))
 (let ((?x23806 (* l_0_17_8 l_0_17_8)))
 (let ((?x23804 (* l_0_17_7 l_0_17_7)))
 (let ((?x23676 (* 2.0 l_0_17_48)))
 (let ((?x23798 (* ?x23676 l_0_17_53)))
 (let ((?x23673 (* 2.0 l_0_17_47)))
 (let ((?x23796 (* ?x23673 l_0_17_52)))
 (let ((?x23667 (* 2.0 l_0_17_33)))
 (let ((?x23794 (* ?x23667 l_0_17_38)))
 (let ((?x23664 (* 2.0 l_0_17_32)))
 (let ((?x23792 (* ?x23664 l_0_17_37)))
 (let ((?x23790 (* l_0_17_25 l_0_17_25)))
 (let ((?x23788 (* l_0_17_24 l_0_17_24)))
 (let ((?x23786 (* l_0_17_23 l_0_17_23)))
 (let ((?x23784 (* l_0_17_22 l_0_17_22)))
 (let ((?x23782 (* l_0_17_10 l_0_17_10)))
 (let ((?x16945 (+ (* (* 2.0 l_0_17_77) l_0_17_82) (* (* 2.0 l_0_17_78) l_0_17_83))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x23793 (- (- (- (- (- (+ (* ?x22893 ?x16945) ?x23782) ?x23784) ?x23786) ?x23788) ?x23790) ?x23792)))
 (let ((?x23801 (- (+ (+ (- ?x23793 ?x23794) ?x23796) ?x23798) (* (* 2.0 l_0_17_62) l_0_17_67))))
 (let ((?x23809 (+ (+ (+ (- ?x23801 (* (* 2.0 l_0_17_63) l_0_17_68)) ?x23804) ?x23806) ?x23808)))
 (= (+ (+ ?x23809 ?x23692) ?x23695) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x23676 (* 2.0 l_0_17_48)))
 (let ((?x23852 (* ?x23676 l_0_17_57)))
 (let ((?x23798 (* ?x23676 l_0_17_53)))
 (let ((?x23673 (* 2.0 l_0_17_47)))
 (let ((?x23849 (* ?x23673 l_0_17_56)))
 (let ((?x23796 (* ?x23673 l_0_17_52)))
 (let ((?x23667 (* 2.0 l_0_17_33)))
 (let ((?x23846 (* ?x23667 l_0_17_42)))
 (let ((?x23794 (* ?x23667 l_0_17_38)))
 (let ((?x23664 (* 2.0 l_0_17_32)))
 (let ((?x23843 (* ?x23664 l_0_17_41)))
 (let ((?x23792 (* ?x23664 l_0_17_37)))
 (let ((?x23734 (* 2.0 l_0_17_102)))
 (let ((?x23735 (* ?x23734 l_0_17_93)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x23732 (* ?x23207 l_0_17_92)))
 (let ((?x17020 (+ (* (* 2.0 l_0_17_77) l_0_17_86) (* (* 2.0 l_0_17_78) l_0_17_87))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x17538 (+ (+ (+ (* ?x22893 ?x17020) (* (* 2.0 l_0_17_10) l_0_17_14)) ?x23732) ?x23735)))
 (let ((?x23827 (+ (+ ?x17538 (* (* 2.0 l_0_17_11) l_0_17_7)) (* (* 2.0 l_0_17_12) l_0_17_8))))
 (let ((?x23832 (- (+ ?x23827 (* (* 2.0 l_0_17_13) l_0_17_9)) (* (* 2.0 l_0_17_22) l_0_17_26))))
 (let ((?x23838 (- (- ?x23832 (* (* 2.0 l_0_17_23) l_0_17_27)) (* (* 2.0 l_0_17_24) l_0_17_28))))
 (let ((?x23845 (+ (- (+ (- ?x23838 (* (* 2.0 l_0_17_25) l_0_17_29)) ?x23792) ?x23843) ?x23794)))
 (let ((?x23855 (- (+ (- (+ (- (- ?x23845 ?x23846) ?x23796) ?x23849) ?x23798) ?x23852) (* (* 2.0 l_0_17_62) l_0_17_71))))
 (= (- ?x23855 (* (* 2.0 l_0_17_63) l_0_17_72)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x23676 (* 2.0 l_0_17_48)))
 (let ((?x23852 (* ?x23676 l_0_17_57)))
 (let ((?x23673 (* 2.0 l_0_17_47)))
 (let ((?x23849 (* ?x23673 l_0_17_56)))
 (let ((?x23667 (* 2.0 l_0_17_33)))
 (let ((?x23846 (* ?x23667 l_0_17_42)))
 (let ((?x23664 (* 2.0 l_0_17_32)))
 (let ((?x23843 (* ?x23664 l_0_17_41)))
 (let ((?x23920 (* l_0_17_30 l_0_17_30)))
 (let ((?x23918 (* l_0_17_29 l_0_17_29)))
 (let ((?x23916 (* l_0_17_28 l_0_17_28)))
 (let ((?x23914 (* l_0_17_27 l_0_17_27)))
 (let ((?x23912 (* l_0_17_26 l_0_17_26)))
 (let ((?x23910 (* l_0_17_15 l_0_17_15)))
 (let ((?x23908 (* l_0_17_14 l_0_17_14)))
 (let ((?x23906 (* l_0_17_13 l_0_17_13)))
 (let ((?x23909 (+ (+ (+ (* l_0_17_11 l_0_17_11) (* l_0_17_12 l_0_17_12)) ?x23906) ?x23908)))
 (let ((?x23922 (+ (- (- (- (- (- (+ ?x23909 ?x23910) ?x23912) ?x23914) ?x23916) ?x23918) ?x23920) ?x23843)))
 (= (- (- (+ ?x23922 ?x23846) ?x23849) ?x23852) 0.0))))))))))))))))))))
(assert
 (let ((?x23950 (* l_0_17_91 l_0_17_91)))
 (let ((?x23948 (* l_0_17_61 l_0_17_61)))
 (let ((?x23946 (* l_0_17_46 l_0_17_46)))
 (let ((?x23944 (* l_0_17_31 l_0_17_31)))
 (let ((?x17715 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_82) (* (* _a_1_ l_0_17_76) l_0_17_76))))
 (let ((?x23937 (- (- ?x17715 (* (* 2.0 l_0_17_106) l_0_17_112)) (* (* 2.0 l_0_17_121) l_0_17_127))))
 (let ((?x23941 (- (- ?x23937 (* (* 2.0 l_0_17_136) l_0_17_142)) (* (* 2.0 l_0_17_151) l_0_17_157))))
 (let ((?x23949 (- (+ (- (- ?x23941 (* (* 2.0 l_0_17_166) l_0_17_172)) ?x23944) ?x23946) ?x23948)))
 (= (+ ?x23949 ?x23950) 0.0))))))))))
(assert
 (let ((?x23076 (* 2.0 l_0_17_91)))
 (let ((?x23079 (* ?x23076 l_0_17_97)))
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x24016 (* ?x23070 l_0_17_52)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x24014 (* ?x23067 l_0_17_37)))
 (let ((?x24012 (* l_0_17_175 l_0_17_175)))
 (let ((?x24010 (* l_0_17_174 l_0_17_174)))
 (let ((?x24008 (* l_0_17_173 l_0_17_173)))
 (let ((?x24006 (* l_0_17_172 l_0_17_172)))
 (let ((?x24004 (* l_0_17_160 l_0_17_160)))
 (let ((?x24002 (* l_0_17_159 l_0_17_159)))
 (let ((?x24000 (* l_0_17_158 l_0_17_158)))
 (let ((?x23998 (* l_0_17_157 l_0_17_157)))
 (let ((?x23996 (* l_0_17_145 l_0_17_145)))
 (let ((?x23994 (* l_0_17_144 l_0_17_144)))
 (let ((?x23992 (* l_0_17_143 l_0_17_143)))
 (let ((?x23990 (* l_0_17_142 l_0_17_142)))
 (let ((?x23988 (* l_0_17_130 l_0_17_130)))
 (let ((?x23986 (* l_0_17_129 l_0_17_129)))
 (let ((?x23984 (* l_0_17_128 l_0_17_128)))
 (let ((?x23982 (* l_0_17_127 l_0_17_127)))
 (let ((?x23980 (* l_0_17_115 l_0_17_115)))
 (let ((?x23978 (* l_0_17_114 l_0_17_114)))
 (let ((?x23976 (* l_0_17_113 l_0_17_113)))
 (let ((?x23974 (* l_0_17_112 l_0_17_112)))
 (let ((?x23969 (* l_0_17_85 l_0_17_85)))
 (let ((?x23967 (* l_0_17_84 l_0_17_84)))
 (let ((?x23970 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x23967) ?x23969)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x23975 (- (- (* ?x22875 ?x23970) (* (* (* 2.0 _a_1_) l_0_17_76) l_0_17_82)) ?x23974)))
 (let ((?x23989 (- (- (- (- (- (- (- ?x23975 ?x23976) ?x23978) ?x23980) ?x23982) ?x23984) ?x23986) ?x23988)))
 (let ((?x24003 (- (- (- (- (- (- (- ?x23989 ?x23990) ?x23992) ?x23994) ?x23996) ?x23998) ?x24000) ?x24002)))
 (let ((?x24017 (+ (- (- (- (- (- (- ?x24003 ?x24004) ?x24006) ?x24008) ?x24010) ?x24012) ?x24014) ?x24016)))
 (= (+ (- ?x24017 (* (* 2.0 l_0_17_61) l_0_17_67)) ?x23079) 0.0))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x24134 (* ?x23070 l_0_17_56)))
 (let ((?x24016 (* ?x23070 l_0_17_52)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x24131 (* ?x23067 l_0_17_41)))
 (let ((?x24014 (* ?x23067 l_0_17_37)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x23208 (* ?x23207 l_0_17_91)))
 (let ((?x24059 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24065 (+ (+ ?x24059 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x24069 (+ (- (* ?x22875 ?x24065) (* (* (* 2.0 _a_1_) l_0_17_76) l_0_17_86)) ?x23208)))
 (let ((?x24075 (- (- ?x24069 (* (* 2.0 l_0_17_112) l_0_17_116)) (* (* 2.0 l_0_17_113) l_0_17_117))))
 (let ((?x24081 (- (- ?x24075 (* (* 2.0 l_0_17_114) l_0_17_118)) (* (* 2.0 l_0_17_115) l_0_17_119))))
 (let ((?x24087 (- (- ?x24081 (* (* 2.0 l_0_17_127) l_0_17_131)) (* (* 2.0 l_0_17_128) l_0_17_132))))
 (let ((?x24093 (- (- ?x24087 (* (* 2.0 l_0_17_129) l_0_17_133)) (* (* 2.0 l_0_17_130) l_0_17_134))))
 (let ((?x24099 (- (- ?x24093 (* (* 2.0 l_0_17_142) l_0_17_146)) (* (* 2.0 l_0_17_143) l_0_17_147))))
 (let ((?x24105 (- (- ?x24099 (* (* 2.0 l_0_17_144) l_0_17_148)) (* (* 2.0 l_0_17_145) l_0_17_149))))
 (let ((?x24111 (- (- ?x24105 (* (* 2.0 l_0_17_157) l_0_17_161)) (* (* 2.0 l_0_17_158) l_0_17_162))))
 (let ((?x24117 (- (- ?x24111 (* (* 2.0 l_0_17_159) l_0_17_163)) (* (* 2.0 l_0_17_160) l_0_17_164))))
 (let ((?x24123 (- (- ?x24117 (* (* 2.0 l_0_17_172) l_0_17_176)) (* (* 2.0 l_0_17_173) l_0_17_177))))
 (let ((?x24129 (- (- ?x24123 (* (* 2.0 l_0_17_174) l_0_17_178)) (* (* 2.0 l_0_17_175) l_0_17_179))))
 (let ((?x24137 (- (+ (- (- (+ ?x24129 ?x24014) ?x24131) ?x24016) ?x24134) (* (* 2.0 l_0_17_61) l_0_17_71))))
 (= ?x24137 0.0)))))))))))))))))))))))))
(assert
 (let ((?x24241 (* l_0_17_96 l_0_17_96)))
 (let ((?x24239 (* (* 2.0 l_0_17_96) l_0_17_99)))
 (let ((?x24236 (* l_0_17_95 l_0_17_95)))
 (let ((?x24234 (* (* 2.0 l_0_17_95) l_0_17_98)))
 (let ((?x24231 (* l_0_17_94 l_0_17_94)))
 (let ((?x24229 (* (* 2.0 l_0_17_94) l_0_17_97)))
 (let ((?x24226 (* l_0_17_66 l_0_17_66)))
 (let ((?x24224 (* l_0_17_65 l_0_17_65)))
 (let ((?x24222 (* l_0_17_64 l_0_17_64)))
 (let ((?x24220 (* l_0_17_51 l_0_17_51)))
 (let ((?x24218 (* l_0_17_50 l_0_17_50)))
 (let ((?x24216 (* l_0_17_49 l_0_17_49)))
 (let ((?x24214 (* l_0_17_36 l_0_17_36)))
 (let ((?x24212 (* l_0_17_35 l_0_17_35)))
 (let ((?x24210 (* l_0_17_34 l_0_17_34)))
 (let ((?x23009 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23012 (+ ?x23009 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x24205 (* l_0_17_81 l_0_17_81)))
 (let ((?x24206 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x24205)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x24217 (+ (- (- (- (- (* ?x22893 ?x24206) (* _a_2_ ?x23012)) ?x24210) ?x24212) ?x24214) ?x24216)))
 (let ((?x24232 (+ (- (- (- (- (+ (+ ?x24217 ?x24218) ?x24220) ?x24222) ?x24224) ?x24226) ?x24229) ?x24231)))
 (= (+ (- (+ (- ?x24232 ?x24234) ?x24236) ?x24239) ?x24241) 0.0))))))))))))))))))))))))
(assert
 (let ((?x24331 (* l_0_17_99 l_0_17_99)))
 (let ((?x24329 (* l_0_17_98 l_0_17_98)))
 (let ((?x24327 (* l_0_17_97 l_0_17_97)))
 (let ((?x24239 (* (* 2.0 l_0_17_96) l_0_17_99)))
 (let ((?x24234 (* (* 2.0 l_0_17_95) l_0_17_98)))
 (let ((?x24229 (* (* 2.0 l_0_17_94) l_0_17_97)))
 (let ((?x24312 (* 2.0 l_0_17_51)))
 (let ((?x24313 (* ?x24312 l_0_17_54)))
 (let ((?x24309 (* 2.0 l_0_17_50)))
 (let ((?x24310 (* ?x24309 l_0_17_53)))
 (let ((?x24306 (* 2.0 l_0_17_49)))
 (let ((?x24307 (* ?x24306 l_0_17_52)))
 (let ((?x24303 (* 2.0 l_0_17_36)))
 (let ((?x24304 (* ?x24303 l_0_17_39)))
 (let ((?x24300 (* 2.0 l_0_17_35)))
 (let ((?x24301 (* ?x24300 l_0_17_38)))
 (let ((?x24297 (* 2.0 l_0_17_34)))
 (let ((?x24298 (* ?x24297 l_0_17_37)))
 (let ((?x24295 (* l_0_17_100 l_0_17_100)))
 (let ((?x23969 (* l_0_17_85 l_0_17_85)))
 (let ((?x23967 (* l_0_17_84 l_0_17_84)))
 (let ((?x23970 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x23967) ?x23969)))
 (let ((?x23009 (+ (* (* 2.0 l_0_17_79) l_0_17_82) (* (* 2.0 l_0_17_80) l_0_17_83))))
 (let ((?x23012 (+ ?x23009 (* (* 2.0 l_0_17_81) l_0_17_84))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x24305 (- (- (- (- (- (* ?x22893 ?x23012) (* _a_2_ ?x23970)) ?x24295) ?x24298) ?x24301) ?x24304)))
 (let ((?x24317 (- (+ (+ (+ ?x24305 ?x24307) ?x24310) ?x24313) (* (* 2.0 l_0_17_64) l_0_17_67))))
 (let ((?x24323 (- (- ?x24317 (* (* 2.0 l_0_17_65) l_0_17_68)) (* (* 2.0 l_0_17_66) l_0_17_69))))
 (= (- (- (- (+ (+ (+ ?x24323 ?x24229) ?x24234) ?x24239) ?x24327) ?x24329) ?x24331) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x24312 (* 2.0 l_0_17_51)))
 (let ((?x24393 (* ?x24312 l_0_17_58)))
 (let ((?x24313 (* ?x24312 l_0_17_54)))
 (let ((?x24309 (* 2.0 l_0_17_50)))
 (let ((?x24390 (* ?x24309 l_0_17_57)))
 (let ((?x24310 (* ?x24309 l_0_17_53)))
 (let ((?x24306 (* 2.0 l_0_17_49)))
 (let ((?x24387 (* ?x24306 l_0_17_56)))
 (let ((?x24307 (* ?x24306 l_0_17_52)))
 (let ((?x24303 (* 2.0 l_0_17_36)))
 (let ((?x24384 (* ?x24303 l_0_17_43)))
 (let ((?x24304 (* ?x24303 l_0_17_39)))
 (let ((?x24300 (* 2.0 l_0_17_35)))
 (let ((?x24381 (* ?x24300 l_0_17_42)))
 (let ((?x24301 (* ?x24300 l_0_17_38)))
 (let ((?x24297 (* 2.0 l_0_17_34)))
 (let ((?x24378 (* ?x24297 l_0_17_41)))
 (let ((?x24298 (* ?x24297 l_0_17_37)))
 (let ((?x24372 (* 2.0 l_0_17_103)))
 (let ((?x24375 (* ?x24372 l_0_17_99)))
 (let ((?x24373 (* ?x24372 l_0_17_96)))
 (let ((?x23734 (* 2.0 l_0_17_102)))
 (let ((?x24370 (* ?x23734 l_0_17_98)))
 (let ((?x24368 (* ?x23734 l_0_17_95)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x24366 (* ?x23207 l_0_17_97)))
 (let ((?x24364 (* ?x23207 l_0_17_94)))
 (let ((?x24362 (* (* 2.0 l_0_17_100) l_0_17_104)))
 (let ((?x24059 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24065 (+ (+ ?x24059 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x23201 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x23203 (+ ?x23201 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x24369 (+ (- (+ (- (- (* ?x22893 ?x23203) (* _a_2_ ?x24065)) ?x24362) ?x24364) ?x24366) ?x24368)))
 (let ((?x24382 (- (+ (- (+ (- (+ (- ?x24369 ?x24370) ?x24373) ?x24375) ?x24298) ?x24378) ?x24301) ?x24381)))
 (let ((?x24392 (- (+ (- (+ (- (- (+ ?x24382 ?x24304) ?x24384) ?x24307) ?x24387) ?x24310) ?x24390) ?x24313)))
 (let ((?x24398 (- (- (+ ?x24392 ?x24393) (* (* 2.0 l_0_17_64) l_0_17_71)) (* (* 2.0 l_0_17_65) l_0_17_72))))
 (= (- ?x24398 (* (* 2.0 l_0_17_66) l_0_17_73)) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24331 (* l_0_17_99 l_0_17_99)))
 (let ((?x24329 (* l_0_17_98 l_0_17_98)))
 (let ((?x24327 (* l_0_17_97 l_0_17_97)))
 (let ((?x24486 (* l_0_17_70 l_0_17_70)))
 (let ((?x24484 (* l_0_17_69 l_0_17_69)))
 (let ((?x24482 (* l_0_17_68 l_0_17_68)))
 (let ((?x24480 (* l_0_17_67 l_0_17_67)))
 (let ((?x24478 (* l_0_17_55 l_0_17_55)))
 (let ((?x24476 (* l_0_17_54 l_0_17_54)))
 (let ((?x24474 (* l_0_17_53 l_0_17_53)))
 (let ((?x24472 (* l_0_17_52 l_0_17_52)))
 (let ((?x24470 (* l_0_17_40 l_0_17_40)))
 (let ((?x24468 (* l_0_17_39 l_0_17_39)))
 (let ((?x24466 (* l_0_17_38 l_0_17_38)))
 (let ((?x24464 (* l_0_17_37 l_0_17_37)))
 (let ((?x24295 (* l_0_17_100 l_0_17_100)))
 (let ((?x23969 (* l_0_17_85 l_0_17_85)))
 (let ((?x23967 (* l_0_17_84 l_0_17_84)))
 (let ((?x23970 (+ (+ (+ (* l_0_17_82 l_0_17_82) (* l_0_17_83 l_0_17_83)) ?x23967) ?x23969)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x24473 (+ (- (- (- (- (+ (* ?x22893 ?x23970) ?x24295) ?x24464) ?x24466) ?x24468) ?x24470) ?x24472)))
 (let ((?x24487 (- (- (- (- (+ (+ (+ ?x24473 ?x24474) ?x24476) ?x24478) ?x24480) ?x24482) ?x24484) ?x24486)))
 (= (+ (+ (+ ?x24487 ?x24327) ?x24329) ?x24331) 0.0))))))))))))))))))))))))
(assert
 (let ((?x24478 (* l_0_17_55 l_0_17_55)))
 (let ((?x24540 (* (* 2.0 l_0_17_55) l_0_17_59)))
 (let ((?x24476 (* l_0_17_54 l_0_17_54)))
 (let ((?x24536 (* (* 2.0 l_0_17_54) l_0_17_58)))
 (let ((?x24474 (* l_0_17_53 l_0_17_53)))
 (let ((?x24532 (* (* 2.0 l_0_17_53) l_0_17_57)))
 (let ((?x24472 (* l_0_17_52 l_0_17_52)))
 (let ((?x24528 (* (* 2.0 l_0_17_52) l_0_17_56)))
 (let ((?x24470 (* l_0_17_40 l_0_17_40)))
 (let ((?x24524 (* (* 2.0 l_0_17_40) l_0_17_44)))
 (let ((?x24468 (* l_0_17_39 l_0_17_39)))
 (let ((?x24520 (* (* 2.0 l_0_17_39) l_0_17_43)))
 (let ((?x24466 (* l_0_17_38 l_0_17_38)))
 (let ((?x24516 (* (* 2.0 l_0_17_38) l_0_17_42)))
 (let ((?x24464 (* l_0_17_37 l_0_17_37)))
 (let ((?x18093 (* (* 2.0 l_0_17_37) l_0_17_41)))
 (let ((?x24372 (* 2.0 l_0_17_103)))
 (let ((?x24375 (* ?x24372 l_0_17_99)))
 (let ((?x23734 (* 2.0 l_0_17_102)))
 (let ((?x24370 (* ?x23734 l_0_17_98)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x24366 (* ?x23207 l_0_17_97)))
 (let ((?x24362 (* (* 2.0 l_0_17_100) l_0_17_104)))
 (let ((?x24059 (+ (* (* 2.0 l_0_17_82) l_0_17_86) (* (* 2.0 l_0_17_83) l_0_17_87))))
 (let ((?x24065 (+ (+ ?x24059 (* (* 2.0 l_0_17_84) l_0_17_88)) (* (* 2.0 l_0_17_85) l_0_17_89))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x10656 (+ (- (+ (+ (+ (+ (* ?x22893 ?x24065) ?x24362) ?x24366) ?x24370) ?x24375) ?x18093) ?x24464)))
 (let ((?x24529 (+ (+ (- (+ (- (+ (- ?x10656 ?x24516) ?x24466) ?x24520) ?x24468) ?x24524) ?x24470) ?x24528)))
 (let ((?x24542 (- (+ (- (+ (- (+ (- ?x24529 ?x24472) ?x24532) ?x24474) ?x24536) ?x24476) ?x24540) ?x24478)))
 (let ((?x24548 (- (- ?x24542 (* (* 2.0 l_0_17_67) l_0_17_71)) (* (* 2.0 l_0_17_68) l_0_17_72))))
 (let ((?x24554 (- (- ?x24548 (* (* 2.0 l_0_17_69) l_0_17_73)) (* (* 2.0 l_0_17_70) l_0_17_74))))
 (= ?x24554 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x24639 (* l_0_17_75 l_0_17_75)))
 (let ((?x24637 (* l_0_17_74 l_0_17_74)))
 (let ((?x24635 (* l_0_17_73 l_0_17_73)))
 (let ((?x24633 (* l_0_17_72 l_0_17_72)))
 (let ((?x24631 (* l_0_17_71 l_0_17_71)))
 (let ((?x24629 (* l_0_17_60 l_0_17_60)))
 (let ((?x24627 (* l_0_17_59 l_0_17_59)))
 (let ((?x24625 (* l_0_17_58 l_0_17_58)))
 (let ((?x24623 (* l_0_17_57 l_0_17_57)))
 (let ((?x24621 (* l_0_17_56 l_0_17_56)))
 (let ((?x24540 (* (* 2.0 l_0_17_55) l_0_17_59)))
 (let ((?x24536 (* (* 2.0 l_0_17_54) l_0_17_58)))
 (let ((?x24532 (* (* 2.0 l_0_17_53) l_0_17_57)))
 (let ((?x24528 (* (* 2.0 l_0_17_52) l_0_17_56)))
 (let ((?x24615 (* l_0_17_45 l_0_17_45)))
 (let ((?x24613 (* l_0_17_44 l_0_17_44)))
 (let ((?x24611 (* l_0_17_43 l_0_17_43)))
 (let ((?x24609 (* l_0_17_42 l_0_17_42)))
 (let ((?x24607 (* l_0_17_41 l_0_17_41)))
 (let ((?x24524 (* (* 2.0 l_0_17_40) l_0_17_44)))
 (let ((?x24520 (* (* 2.0 l_0_17_39) l_0_17_43)))
 (let ((?x24516 (* (* 2.0 l_0_17_38) l_0_17_42)))
 (let ((?x18093 (* (* 2.0 l_0_17_37) l_0_17_41)))
 (let ((?x24601 (* l_0_17_105 l_0_17_105)))
 (let ((?x24599 (* l_0_17_104 l_0_17_104)))
 (let ((?x24597 (* l_0_17_103 l_0_17_103)))
 (let ((?x24595 (* l_0_17_102 l_0_17_102)))
 (let ((?x24593 (* l_0_17_101 l_0_17_101)))
 (let ((?x10759 (* l_0_17_90 l_0_17_90)))
 (let ((?x10760 (* l_0_17_89 l_0_17_89)))
 (let ((?x10767 (* l_0_17_88 l_0_17_88)))
 (let ((?x10772 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x10767) ?x10760)))
 (let ((?x24591 (+ ?x10772 ?x10759)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x24603 (+ (+ (+ (+ (+ (+ (* ?x22893 ?x24591) ?x24593) ?x24595) ?x24597) ?x24599) ?x24601) ?x18093)))
 (let ((?x24614 (- (- (- (- (+ (+ (+ ?x24603 ?x24516) ?x24520) ?x24524) ?x24607) ?x24609) ?x24611) ?x24613)))
 (let ((?x24624 (+ (+ (- (- (- (- (- ?x24614 ?x24615) ?x24528) ?x24532) ?x24536) ?x24540) ?x24621) ?x24623)))
 (let ((?x24638 (- (- (- (- (+ (+ (+ ?x24624 ?x24625) ?x24627) ?x24629) ?x24631) ?x24633) ?x24635) ?x24637)))
 (= (- ?x24638 ?x24639) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x23946 (* l_0_17_46 l_0_17_46)))
 (let ((?x23944 (* l_0_17_31 l_0_17_31)))
 (let ((?x18370 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_86) (* (* 2.0 l_0_17_106) l_0_17_116))))
 (let ((?x24662 (- (- ?x18370 (* (* 2.0 l_0_17_121) l_0_17_131)) (* (* 2.0 l_0_17_136) l_0_17_146))))
 (let ((?x24666 (- (- ?x24662 (* (* 2.0 l_0_17_151) l_0_17_161)) (* (* 2.0 l_0_17_166) l_0_17_176))))
 (= (- (+ ?x24666 ?x23944) ?x23946) 0.0)))))))
(assert
 (let ((?x23070 (* 2.0 l_0_17_46)))
 (let ((?x24134 (* ?x23070 l_0_17_56)))
 (let ((?x23067 (* 2.0 l_0_17_31)))
 (let ((?x24131 (* ?x23067 l_0_17_41)))
 (let ((?x24731 (* l_0_17_180 l_0_17_180)))
 (let ((?x24729 (* l_0_17_179 l_0_17_179)))
 (let ((?x24727 (* l_0_17_178 l_0_17_178)))
 (let ((?x24725 (* l_0_17_177 l_0_17_177)))
 (let ((?x24723 (* l_0_17_176 l_0_17_176)))
 (let ((?x24721 (* l_0_17_165 l_0_17_165)))
 (let ((?x24719 (* l_0_17_164 l_0_17_164)))
 (let ((?x24717 (* l_0_17_163 l_0_17_163)))
 (let ((?x24715 (* l_0_17_162 l_0_17_162)))
 (let ((?x24713 (* l_0_17_161 l_0_17_161)))
 (let ((?x24711 (* l_0_17_150 l_0_17_150)))
 (let ((?x24709 (* l_0_17_149 l_0_17_149)))
 (let ((?x24707 (* l_0_17_148 l_0_17_148)))
 (let ((?x24705 (* l_0_17_147 l_0_17_147)))
 (let ((?x24703 (* l_0_17_146 l_0_17_146)))
 (let ((?x24701 (* l_0_17_135 l_0_17_135)))
 (let ((?x24699 (* l_0_17_134 l_0_17_134)))
 (let ((?x24697 (* l_0_17_133 l_0_17_133)))
 (let ((?x24695 (* l_0_17_132 l_0_17_132)))
 (let ((?x24693 (* l_0_17_131 l_0_17_131)))
 (let ((?x24691 (* l_0_17_120 l_0_17_120)))
 (let ((?x24689 (* l_0_17_119 l_0_17_119)))
 (let ((?x18378 (* l_0_17_118 l_0_17_118)))
 (let ((?x10979 (* l_0_17_117 l_0_17_117)))
 (let ((?x10791 (* l_0_17_116 l_0_17_116)))
 (let ((?x10759 (* l_0_17_90 l_0_17_90)))
 (let ((?x10760 (* l_0_17_89 l_0_17_89)))
 (let ((?x10767 (* l_0_17_88 l_0_17_88)))
 (let ((?x10772 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x10767) ?x10760)))
 (let ((?x24591 (+ ?x10772 ?x10759)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x24694 (- (- (- (- (- (- (* ?x22875 ?x24591) ?x10791) ?x10979) ?x18378) ?x24689) ?x24691) ?x24693)))
 (let ((?x24708 (- (- (- (- (- (- (- ?x24694 ?x24695) ?x24697) ?x24699) ?x24701) ?x24703) ?x24705) ?x24707)))
 (let ((?x24722 (- (- (- (- (- (- (- ?x24708 ?x24709) ?x24711) ?x24713) ?x24715) ?x24717) ?x24719) ?x24721)))
 (let ((?x24734 (- (+ (- (- (- (- (- ?x24722 ?x24723) ?x24725) ?x24727) ?x24729) ?x24731) ?x24131) ?x24134)))
 (= ?x24734 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x24220 (* l_0_17_51 l_0_17_51)))
 (let ((?x24218 (* l_0_17_50 l_0_17_50)))
 (let ((?x24216 (* l_0_17_49 l_0_17_49)))
 (let ((?x24214 (* l_0_17_36 l_0_17_36)))
 (let ((?x24212 (* l_0_17_35 l_0_17_35)))
 (let ((?x24210 (* l_0_17_34 l_0_17_34)))
 (let ((?x24372 (* 2.0 l_0_17_103)))
 (let ((?x24373 (* ?x24372 l_0_17_96)))
 (let ((?x23734 (* 2.0 l_0_17_102)))
 (let ((?x24368 (* ?x23734 l_0_17_95)))
 (let ((?x23207 (* 2.0 l_0_17_101)))
 (let ((?x24364 (* ?x23207 l_0_17_94)))
 (let ((?x23201 (+ (* (* 2.0 l_0_17_79) l_0_17_86) (* (* 2.0 l_0_17_80) l_0_17_87))))
 (let ((?x23203 (+ ?x23201 (* (* 2.0 l_0_17_81) l_0_17_88))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x24774 (+ (+ (+ (- (- (- (* ?x22910 ?x23203) ?x24364) ?x24368) ?x24373) ?x24210) ?x24212) ?x24214)))
 (= (- (- (- ?x24774 ?x24216) ?x24218) ?x24220) 0.0))))))))))))))))))
(assert
 (let ((?x24312 (* 2.0 l_0_17_51)))
 (let ((?x24393 (* ?x24312 l_0_17_58)))
 (let ((?x24309 (* 2.0 l_0_17_50)))
 (let ((?x24390 (* ?x24309 l_0_17_57)))
 (let ((?x24306 (* 2.0 l_0_17_49)))
 (let ((?x24387 (* ?x24306 l_0_17_56)))
 (let ((?x24303 (* 2.0 l_0_17_36)))
 (let ((?x24384 (* ?x24303 l_0_17_43)))
 (let ((?x24300 (* 2.0 l_0_17_35)))
 (let ((?x24381 (* ?x24300 l_0_17_42)))
 (let ((?x24297 (* 2.0 l_0_17_34)))
 (let ((?x24378 (* ?x24297 l_0_17_41)))
 (let ((?x24601 (* l_0_17_105 l_0_17_105)))
 (let ((?x24599 (* l_0_17_104 l_0_17_104)))
 (let ((?x24597 (* l_0_17_103 l_0_17_103)))
 (let ((?x24595 (* l_0_17_102 l_0_17_102)))
 (let ((?x24593 (* l_0_17_101 l_0_17_101)))
 (let ((?x10759 (* l_0_17_90 l_0_17_90)))
 (let ((?x10760 (* l_0_17_89 l_0_17_89)))
 (let ((?x10767 (* l_0_17_88 l_0_17_88)))
 (let ((?x10772 (+ (+ (+ (* l_0_17_86 l_0_17_86) (* l_0_17_87 l_0_17_87)) ?x10767) ?x10760)))
 (let ((?x24591 (+ ?x10772 ?x10759)))
 (let ((?x22910 (- _a_2_)))
 (let ((?x11307 (+ (- (- (- (- (- (* ?x22910 ?x24591) ?x24593) ?x24595) ?x24597) ?x24599) ?x24601) ?x24378)))
 (= (- (- (- (+ (+ ?x11307 ?x24381) ?x24384) ?x24387) ?x24390) ?x24393) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x24629 (* l_0_17_60 l_0_17_60)))
 (let ((?x24627 (* l_0_17_59 l_0_17_59)))
 (let ((?x24625 (* l_0_17_58 l_0_17_58)))
 (let ((?x24623 (* l_0_17_57 l_0_17_57)))
 (let ((?x24621 (* l_0_17_56 l_0_17_56)))
 (let ((?x24615 (* l_0_17_45 l_0_17_45)))
 (let ((?x24613 (* l_0_17_44 l_0_17_44)))
 (let ((?x24611 (* l_0_17_43 l_0_17_43)))
 (let ((?x24816 (+ (+ (+ (* l_0_17_41 l_0_17_41) (* l_0_17_42 l_0_17_42)) ?x24611) ?x24613)))
 (= (- (- (- (- (- (+ ?x24816 ?x24615) ?x24621) ?x24623) ?x24625) ?x24627) ?x24629) 0.0)))))))))))
(assert
 (let ((?x24831 (* l_0_17_166 l_0_17_166)))
 (let ((?x24829 (* l_0_17_151 l_0_17_151)))
 (let ((?x24827 (* l_0_17_136 l_0_17_136)))
 (let ((?x24825 (* l_0_17_121 l_0_17_121)))
 (let ((?x18710 (* l_0_17_106 l_0_17_106)))
 (let ((?x24828 (- (- (- (* (* (- _a_0_) l_0_17_76) l_0_17_76) ?x18710) ?x24825) ?x24827)))
 (= (- (- ?x24828 ?x24829) ?x24831) 0.0))))))))
(assert
 (let ((?x23950 (* l_0_17_91 l_0_17_91)))
 (let ((?x18711 (- (* (* (* (- 2.0) _a_0_) l_0_17_76) l_0_17_79) (* (* _a_2_ l_0_17_76) l_0_17_76))))
 (let ((?x18741 (- (- ?x18711 (* (* 2.0 l_0_17_106) l_0_17_109)) (* (* 2.0 l_0_17_121) l_0_17_124))))
 (let ((?x11363 (- (- ?x18741 (* (* 2.0 l_0_17_136) l_0_17_139)) (* (* 2.0 l_0_17_151) l_0_17_154))))
 (= (- (- ?x11363 (* (* 2.0 l_0_17_166) l_0_17_169)) ?x23950) 0.0))))))
(assert
 (let ((?x23076 (* 2.0 l_0_17_91)))
 (let ((?x23077 (* ?x23076 l_0_17_94)))
 (let ((?x24883 (* l_0_17_171 l_0_17_171)))
 (let ((?x24881 (* l_0_17_170 l_0_17_170)))
 (let ((?x24879 (* l_0_17_169 l_0_17_169)))
 (let ((?x24877 (* l_0_17_156 l_0_17_156)))
 (let ((?x24875 (* l_0_17_155 l_0_17_155)))
 (let ((?x24873 (* l_0_17_154 l_0_17_154)))
 (let ((?x24871 (* l_0_17_141 l_0_17_141)))
 (let ((?x24869 (* l_0_17_140 l_0_17_140)))
 (let ((?x24867 (* l_0_17_139 l_0_17_139)))
 (let ((?x24865 (* l_0_17_126 l_0_17_126)))
 (let ((?x24863 (* l_0_17_125 l_0_17_125)))
 (let ((?x24861 (* l_0_17_124 l_0_17_124)))
 (let ((?x24859 (* l_0_17_111 l_0_17_111)))
 (let ((?x24857 (* l_0_17_110 l_0_17_110)))
 (let ((?x18813 (* l_0_17_109 l_0_17_109)))
 (let ((?x24205 (* l_0_17_81 l_0_17_81)))
 (let ((?x24206 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x24205)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x24856 (- (- (* ?x22875 ?x24206) (* (* (* 2.0 _a_2_) l_0_17_76) l_0_17_79)) ?x18813)))
 (let ((?x24870 (- (- (- (- (- (- (- ?x24856 ?x24857) ?x24859) ?x24861) ?x24863) ?x24865) ?x24867) ?x24869)))
 (let ((?x24884 (- (- (- (- (- (- (- ?x24870 ?x24871) ?x24873) ?x24875) ?x24877) ?x24879) ?x24881) ?x24883)))
 (= (- ?x24884 ?x23077) 0.0)))))))))))))))))))))))))
(assert
 (let ((?x24241 (* l_0_17_96 l_0_17_96)))
 (let ((?x24236 (* l_0_17_95 l_0_17_95)))
 (let ((?x24231 (* l_0_17_94 l_0_17_94)))
 (let ((?x24205 (* l_0_17_81 l_0_17_81)))
 (let ((?x24206 (+ (+ (* l_0_17_79 l_0_17_79) (* l_0_17_80 l_0_17_80)) ?x24205)))
 (let ((?x22910 (- _a_2_)))
 (= (- (- (- (* ?x22910 ?x24206) ?x24231) ?x24236) ?x24241) 0.0))))))))
(assert
 (>= l_0_17_1 0.0))
(assert
 (>= l_0_17_3 0.0))
(assert
 (>= l_0_17_6 0.0))
(assert
 (>= l_0_17_10 0.0))
(assert
 (>= l_0_17_15 0.0))
(assert
 (>= l_0_17_16 0.0))
(assert
 (>= l_0_17_18 0.0))
(assert
 (>= l_0_17_21 0.0))
(assert
 (>= l_0_17_25 0.0))
(assert
 (>= l_0_17_30 0.0))
(assert
 (>= l_0_17_31 0.0))
(assert
 (>= l_0_17_33 0.0))
(assert
 (>= l_0_17_36 0.0))
(assert
 (>= l_0_17_40 0.0))
(assert
 (>= l_0_17_45 0.0))
(assert
 (>= l_0_17_46 0.0))
(assert
 (>= l_0_17_48 0.0))
(assert
 (>= l_0_17_51 0.0))
(assert
 (>= l_0_17_55 0.0))
(assert
 (>= l_0_17_60 0.0))
(assert
 (>= l_0_17_61 0.0))
(assert
 (>= l_0_17_63 0.0))
(assert
 (>= l_0_17_66 0.0))
(assert
 (>= l_0_17_70 0.0))
(assert
 (>= l_0_17_75 0.0))
(assert
 (>= l_0_17_76 0.0))
(assert
 (>= l_0_17_78 0.0))
(assert
 (>= l_0_17_81 0.0))
(assert
 (>= l_0_17_85 0.0))
(assert
 (>= l_0_17_90 0.0))
(assert
 (>= l_0_17_91 0.0))
(assert
 (>= l_0_17_93 0.0))
(assert
 (>= l_0_17_96 0.0))
(assert
 (>= l_0_17_100 0.0))
(assert
 (>= l_0_17_105 0.0))
(assert
 (>= l_0_17_106 0.0))
(assert
 (>= l_0_17_108 0.0))
(assert
 (>= l_0_17_111 0.0))
(assert
 (>= l_0_17_115 0.0))
(assert
 (>= l_0_17_120 0.0))
(assert
 (>= l_0_17_121 0.0))
(assert
 (>= l_0_17_123 0.0))
(assert
 (>= l_0_17_126 0.0))
(assert
 (>= l_0_17_130 0.0))
(assert
 (>= l_0_17_135 0.0))
(assert
 (>= l_0_17_136 0.0))
(assert
 (>= l_0_17_138 0.0))
(assert
 (>= l_0_17_141 0.0))
(assert
 (>= l_0_17_145 0.0))
(assert
 (>= l_0_17_150 0.0))
(assert
 (>= l_0_17_151 0.0))
(assert
 (>= l_0_17_153 0.0))
(assert
 (>= l_0_17_156 0.0))
(assert
 (>= l_0_17_160 0.0))
(assert
 (>= l_0_17_165 0.0))
(assert
 (>= l_0_17_166 0.0))
(assert
 (>= l_0_17_168 0.0))
(assert
 (>= l_0_17_171 0.0))
(assert
 (>= l_0_17_175 0.0))
(assert
 (>= l_0_17_180 0.0))
(assert
 (let ((?x25004 (* l_0_18_183 l_0_18_183)))
 (let ((?x25002 (* l_0_18_182 l_0_18_182)))
 (let ((?x25000 (* l_0_18_168 l_0_18_168)))
 (let ((?x24998 (* l_0_18_167 l_0_18_167)))
 (let ((?x24993 (* l_0_18_153 l_0_18_153)))
 (let ((?x24991 (* l_0_18_152 l_0_18_152)))
 (let ((?x24989 (* l_0_18_138 l_0_18_138)))
 (let ((?x24987 (* l_0_18_137 l_0_18_137)))
 (let ((?x24985 (* l_0_18_123 l_0_18_123)))
 (let ((?x24983 (* l_0_18_122 l_0_18_122)))
 (let ((?x24981 (* l_0_18_108 l_0_18_108)))
 (let ((?x24979 (* l_0_18_107 l_0_18_107)))
 (let ((?x24973 (* l_0_18_78 l_0_18_78)))
 (let ((?x24972 (* l_0_18_77 l_0_18_77)))
 (let ((?x24974 (+ ?x24972 ?x24973)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x24982 (- (- (+ (* ?x22875 ?x24974) (* (* 2.0 l_0_18_1) l_0_18_2)) ?x24979) ?x24981)))
 (let ((?x24997 (- (- (- (- (- (- (- ?x24982 ?x24983) ?x24985) ?x24987) ?x24989) ?x24991) ?x24993) (* (* 2.0 l_0_18_16) l_0_18_17))))
 (= (+ (- (- (- (- ?x24997 ?x24998) ?x25000) ?x25002) ?x25004) 1.0) 0.0))))))))))))))))))))
(assert
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x25108 (* ?x25107 l_0_18_49)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x25105 (* ?x25104 l_0_18_34)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x25048 (* ?x25047 l_0_18_91)))
 (let ((?x25039 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25042 (+ ?x25039 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25049 (- (- (* ?x22875 ?x25042) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_86)) ?x25048)))
 (let ((?x25055 (- (- ?x25049 (* (* 2.0 l_0_18_109) l_0_18_116)) (* (* 2.0 l_0_18_110) l_0_18_117))))
 (let ((?x25061 (- (- ?x25055 (* (* 2.0 l_0_18_111) l_0_18_118)) (* (* 2.0 l_0_18_124) l_0_18_131))))
 (let ((?x25067 (- (- ?x25061 (* (* 2.0 l_0_18_125) l_0_18_132)) (* (* 2.0 l_0_18_126) l_0_18_133))))
 (let ((?x25073 (- (- ?x25067 (* (* 2.0 l_0_18_139) l_0_18_146)) (* (* 2.0 l_0_18_140) l_0_18_147))))
 (let ((?x25079 (- (- ?x25073 (* (* 2.0 l_0_18_141) l_0_18_148)) (* (* 2.0 l_0_18_154) l_0_18_161))))
 (let ((?x25085 (- (- ?x25079 (* (* 2.0 l_0_18_155) l_0_18_162)) (* (* 2.0 l_0_18_156) l_0_18_163))))
 (let ((?x25091 (- (- ?x25085 (* (* 2.0 l_0_18_169) l_0_18_176)) (* (* 2.0 l_0_18_170) l_0_18_177))))
 (let ((?x25097 (- (- ?x25091 (* (* 2.0 l_0_18_171) l_0_18_178)) (* (* 2.0 l_0_18_184) l_0_18_191))))
 (let ((?x25103 (- (- ?x25097 (* (* 2.0 l_0_18_185) l_0_18_192)) (* (* 2.0 l_0_18_186) l_0_18_193))))
 (= (+ (- (+ ?x25103 ?x25105) ?x25108) 1.0) 0.0)))))))))))))))))))))
(assert
 (let ((?x25211 (* 2.0 l_0_18_91)))
 (let ((?x25214 (* ?x25211 l_0_18_97)))
 (let ((?x25212 (* ?x25211 l_0_18_94)))
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x25108 (* ?x25107 l_0_18_49)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x25105 (* ?x25104 l_0_18_34)))
 (let ((?x25161 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25163 (+ ?x25161 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25169 (- (- (* ?x22875 ?x25163) (* (* (* 2.0 _a_1_) l_0_18_76) l_0_18_79)) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_82))))
 (let ((?x25173 (- (- ?x25169 (* (* 2.0 l_0_18_109) l_0_18_112)) (* (* 2.0 l_0_18_110) l_0_18_113))))
 (let ((?x25177 (- (- ?x25173 (* (* 2.0 l_0_18_111) l_0_18_114)) (* (* 2.0 l_0_18_124) l_0_18_127))))
 (let ((?x25181 (- (- ?x25177 (* (* 2.0 l_0_18_125) l_0_18_128)) (* (* 2.0 l_0_18_126) l_0_18_129))))
 (let ((?x25185 (- (- ?x25181 (* (* 2.0 l_0_18_139) l_0_18_142)) (* (* 2.0 l_0_18_140) l_0_18_143))))
 (let ((?x25189 (- (- ?x25185 (* (* 2.0 l_0_18_141) l_0_18_144)) (* (* 2.0 l_0_18_154) l_0_18_157))))
 (let ((?x25193 (- (- ?x25189 (* (* 2.0 l_0_18_155) l_0_18_158)) (* (* 2.0 l_0_18_156) l_0_18_159))))
 (let ((?x25197 (- (- ?x25193 (* (* 2.0 l_0_18_169) l_0_18_172)) (* (* 2.0 l_0_18_170) l_0_18_173))))
 (let ((?x25201 (- (- ?x25197 (* (* 2.0 l_0_18_171) l_0_18_174)) (* (* 2.0 l_0_18_184) l_0_18_187))))
 (let ((?x25205 (- (- ?x25201 (* (* 2.0 l_0_18_185) l_0_18_188)) (* (* 2.0 l_0_18_186) l_0_18_189))))
 (let ((?x25213 (+ (- (+ (- ?x25205 ?x25105) ?x25108) (* (* 2.0 l_0_18_61) l_0_18_64)) ?x25212)))
 (= (- (- ?x25213 ?x25214) 1.0) 0.0)))))))))))))))))))))))
(assert
 (let ((?x12043 (* l_0_18_16 l_0_18_16)))
 (let ((?x12279 (* l_0_18_1 l_0_18_1)))
 (let ((?x12301 (- (+ (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_77) ?x12279) (* (* 2.0 l_0_18_106) l_0_18_107))))
 (let ((?x12111 (- (- ?x12301 (* (* 2.0 l_0_18_121) l_0_18_122)) (* (* 2.0 l_0_18_136) l_0_18_137))))
 (let ((?x25237 (- (- (- ?x12111 (* (* 2.0 l_0_18_151) l_0_18_152)) ?x12043) (* (* 2.0 l_0_18_166) l_0_18_167))))
 (= (- ?x25237 (* (* 2.0 l_0_18_181) l_0_18_182)) 0.0)))))))
(assert
 (let ((?x25211 (* 2.0 l_0_18_91)))
 (let ((?x25309 (* ?x25211 l_0_18_92)))
 (let ((?x25265 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25270 (+ (- (* ?x22875 ?x25265) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_77)) (* (* 2.0 l_0_18_1) l_0_18_4))))
 (let ((?x25276 (- (- ?x25270 (* (* 2.0 l_0_18_107) l_0_18_109)) (* (* 2.0 l_0_18_108) l_0_18_110))))
 (let ((?x25282 (- (- ?x25276 (* (* 2.0 l_0_18_122) l_0_18_124)) (* (* 2.0 l_0_18_123) l_0_18_125))))
 (let ((?x25288 (- (- ?x25282 (* (* 2.0 l_0_18_137) l_0_18_139)) (* (* 2.0 l_0_18_138) l_0_18_140))))
 (let ((?x25294 (- (- ?x25288 (* (* 2.0 l_0_18_152) l_0_18_154)) (* (* 2.0 l_0_18_153) l_0_18_155))))
 (let ((?x25299 (- (- ?x25294 (* (* 2.0 l_0_18_16) l_0_18_19)) (* (* 2.0 l_0_18_167) l_0_18_169))))
 (let ((?x25305 (- (- ?x25299 (* (* 2.0 l_0_18_168) l_0_18_170)) (* (* 2.0 l_0_18_182) l_0_18_184))))
 (= (- (- ?x25305 (* (* 2.0 l_0_18_183) l_0_18_185)) ?x25309) 0.0)))))))))))))
(assert
 (let ((?x25211 (* 2.0 l_0_18_91)))
 (let ((?x25309 (* ?x25211 l_0_18_92)))
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x25385 (* ?x25107 l_0_18_47)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x25383 (* ?x25104 l_0_18_32)))
 (let ((?x25351 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25356 (+ (- (* ?x22875 ?x25351) (* (* (* 2.0 _a_1_) l_0_18_76) l_0_18_77)) (* (* 2.0 l_0_18_1) l_0_18_7))))
 (let ((?x25360 (- (- ?x25356 (* (* 2.0 l_0_18_107) l_0_18_112)) (* (* 2.0 l_0_18_108) l_0_18_113))))
 (let ((?x25364 (- (- ?x25360 (* (* 2.0 l_0_18_122) l_0_18_127)) (* (* 2.0 l_0_18_123) l_0_18_128))))
 (let ((?x25368 (- (- ?x25364 (* (* 2.0 l_0_18_137) l_0_18_142)) (* (* 2.0 l_0_18_138) l_0_18_143))))
 (let ((?x25372 (- (- ?x25368 (* (* 2.0 l_0_18_152) l_0_18_157)) (* (* 2.0 l_0_18_153) l_0_18_158))))
 (let ((?x25376 (- (- ?x25372 (* (* 2.0 l_0_18_16) l_0_18_22)) (* (* 2.0 l_0_18_167) l_0_18_172))))
 (let ((?x25380 (- (- ?x25376 (* (* 2.0 l_0_18_168) l_0_18_173)) (* (* 2.0 l_0_18_182) l_0_18_187))))
 (let ((?x25388 (- (+ (- (- ?x25380 (* (* 2.0 l_0_18_183) l_0_18_188)) ?x25383) ?x25385) (* (* 2.0 l_0_18_61) l_0_18_62))))
 (= (+ ?x25388 ?x25309) 0.0))))))))))))))))))
(assert
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x25385 (* ?x25107 l_0_18_47)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x25383 (* ?x25104 l_0_18_32)))
 (let ((?x25419 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25424 (- (+ (* ?x22875 ?x25419) (* (* 2.0 l_0_18_1) l_0_18_11)) (* (* 2.0 l_0_18_107) l_0_18_116))))
 (let ((?x25428 (- (- ?x25424 (* (* 2.0 l_0_18_108) l_0_18_117)) (* (* 2.0 l_0_18_122) l_0_18_131))))
 (let ((?x25432 (- (- ?x25428 (* (* 2.0 l_0_18_123) l_0_18_132)) (* (* 2.0 l_0_18_137) l_0_18_146))))
 (let ((?x25436 (- (- ?x25432 (* (* 2.0 l_0_18_138) l_0_18_147)) (* (* 2.0 l_0_18_152) l_0_18_161))))
 (let ((?x25440 (- (- ?x25436 (* (* 2.0 l_0_18_153) l_0_18_162)) (* (* 2.0 l_0_18_16) l_0_18_26))))
 (let ((?x25444 (- (- ?x25440 (* (* 2.0 l_0_18_167) l_0_18_176)) (* (* 2.0 l_0_18_168) l_0_18_177))))
 (let ((?x25448 (- (- ?x25444 (* (* 2.0 l_0_18_182) l_0_18_191)) (* (* 2.0 l_0_18_183) l_0_18_192))))
 (= (- (+ ?x25448 ?x25383) ?x25385) 0.0)))))))))))))))
(assert
 (let ((?x25512 (* l_0_18_3 l_0_18_3)))
 (let ((?x25510 (* l_0_18_2 l_0_18_2)))
 (let ((?x25511 (+ (- (* (- l_0_18_17) l_0_18_17) (* l_0_18_18 l_0_18_18)) ?x25510)))
 (= (+ ?x25511 ?x25512) 0.0)))))
(assert
 (let ((?x25536 (* l_0_18_93 l_0_18_93)))
 (let ((?x25534 (* l_0_18_92 l_0_18_92)))
 (let ((?x24973 (* l_0_18_78 l_0_18_78)))
 (let ((?x24972 (* l_0_18_77 l_0_18_77)))
 (let ((?x24974 (+ ?x24972 ?x24973)))
 (let ((?x22910 (- _a_2_)))
 (let ((?x25527 (- (- (* ?x22910 ?x24974) (* (* 2.0 l_0_18_17) l_0_18_19)) (* (* 2.0 l_0_18_18) l_0_18_20))))
 (let ((?x25533 (+ (+ ?x25527 (* (* 2.0 l_0_18_2) l_0_18_4)) (* (* 2.0 l_0_18_3) l_0_18_5))))
 (= (- (- ?x25533 ?x25534) ?x25536) 0.0))))))))))
(assert
 (let ((?x25536 (* l_0_18_93 l_0_18_93)))
 (let ((?x25534 (* l_0_18_92 l_0_18_92)))
 (let ((?x25569 (* l_0_18_63 l_0_18_63)))
 (let ((?x25567 (* l_0_18_62 l_0_18_62)))
 (let ((?x25565 (* l_0_18_48 l_0_18_48)))
 (let ((?x25563 (* l_0_18_47 l_0_18_47)))
 (let ((?x25561 (* l_0_18_33 l_0_18_33)))
 (let ((?x25559 (* l_0_18_32 l_0_18_32)))
 (let ((?x24973 (* l_0_18_78 l_0_18_78)))
 (let ((?x24972 (* l_0_18_77 l_0_18_77)))
 (let ((?x24974 (+ ?x24972 ?x24973)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x13124 (- (- (* ?x22893 ?x24974) (* (* 2.0 l_0_18_17) l_0_18_22)) (* (* 2.0 l_0_18_18) l_0_18_23))))
 (let ((?x25558 (+ (+ ?x13124 (* (* 2.0 l_0_18_2) l_0_18_7)) (* (* 2.0 l_0_18_3) l_0_18_8))))
 (let ((?x25571 (+ (- (- (+ (+ (- (- ?x25558 ?x25559) ?x25561) ?x25563) ?x25565) ?x25567) ?x25569) ?x25534)))
 (= (+ ?x25571 ?x25536) 0.0)))))))))))))))))
(assert
 (let ((?x25565 (* l_0_18_48 l_0_18_48)))
 (let ((?x25563 (* l_0_18_47 l_0_18_47)))
 (let ((?x25561 (* l_0_18_33 l_0_18_33)))
 (let ((?x25559 (* l_0_18_32 l_0_18_32)))
 (let ((?x25604 (+ (* (* 2.0 l_0_18_11) l_0_18_2) (* (* 2.0 l_0_18_12) l_0_18_3))))
 (let ((?x25608 (- (- ?x25604 (* (* 2.0 l_0_18_17) l_0_18_26)) (* (* 2.0 l_0_18_18) l_0_18_27))))
 (= (- (- (+ (+ ?x25608 ?x25559) ?x25561) ?x25563) ?x25565) 0.0))))))))
(assert
 (let ((?x25631 (* 2.0 l_0_18_93)))
 (let ((?x25632 (* ?x25631 l_0_18_95)))
 (let ((?x13131 (* 2.0 l_0_18_92)))
 (let ((?x19900 (* ?x13131 l_0_18_94)))
 (let ((?x1904 (* l_0_18_6 l_0_18_6)))
 (let ((?x19878 (* l_0_18_5 l_0_18_5)))
 (let ((?x1886 (* l_0_18_4 l_0_18_4)))
 (let ((?x19898 (* l_0_18_21 l_0_18_21)))
 (let ((?x19889 (* l_0_18_20 l_0_18_20)))
 (let ((?x19916 (* l_0_18_19 l_0_18_19)))
 (let ((?x25265 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x19899 (+ (+ (+ (- (- (- (* ?x22910 ?x25265) ?x19916) ?x19889) ?x19898) ?x1886) ?x19878) ?x1904)))
 (= (- (- ?x19899 ?x19900) ?x25632) 0.0)))))))))))))))
(assert
 (let ((?x25631 (* 2.0 l_0_18_93)))
 (let ((?x25693 (* ?x25631 l_0_18_98)))
 (let ((?x25632 (* ?x25631 l_0_18_95)))
 (let ((?x13131 (* 2.0 l_0_18_92)))
 (let ((?x25690 (* ?x13131 l_0_18_97)))
 (let ((?x19900 (* ?x13131 l_0_18_94)))
 (let ((?x25674 (* 2.0 l_0_18_48)))
 (let ((?x25675 (* ?x25674 l_0_18_50)))
 (let ((?x25671 (* 2.0 l_0_18_47)))
 (let ((?x25672 (* ?x25671 l_0_18_49)))
 (let ((?x25665 (* 2.0 l_0_18_33)))
 (let ((?x25666 (* ?x25665 l_0_18_35)))
 (let ((?x25662 (* 2.0 l_0_18_32)))
 (let ((?x25663 (* ?x25662 l_0_18_34)))
 (let ((?x25351 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x25265 (+ (* (* 2.0 l_0_18_77) l_0_18_79) (* (* 2.0 l_0_18_78) l_0_18_80))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x25655 (- (- (* ?x22893 ?x25265) (* _a_2_ ?x25351)) (* (* 2.0 l_0_18_19) l_0_18_22))))
 (let ((?x25661 (- (- ?x25655 (* (* 2.0 l_0_18_20) l_0_18_23)) (* (* 2.0 l_0_18_21) l_0_18_24))))
 (let ((?x25673 (+ (+ (- (- ?x25661 ?x25663) ?x25666) (* (* 2.0 l_0_18_4) l_0_18_7)) ?x25672)))
 (let ((?x25682 (+ (+ (+ ?x25673 ?x25675) (* (* 2.0 l_0_18_5) l_0_18_8)) (* (* 2.0 l_0_18_6) l_0_18_9))))
 (let ((?x25688 (- (- ?x25682 (* (* 2.0 l_0_18_62) l_0_18_64)) (* (* 2.0 l_0_18_63) l_0_18_65))))
 (= (- (+ (- (+ ?x25688 ?x19900) ?x25690) ?x25632) ?x25693) 0.0))))))))))))))))))))))))
(assert
 (let ((?x25674 (* 2.0 l_0_18_48)))
 (let ((?x25675 (* ?x25674 l_0_18_50)))
 (let ((?x25671 (* 2.0 l_0_18_47)))
 (let ((?x25672 (* ?x25671 l_0_18_49)))
 (let ((?x25665 (* 2.0 l_0_18_33)))
 (let ((?x25666 (* ?x25665 l_0_18_35)))
 (let ((?x25662 (* 2.0 l_0_18_32)))
 (let ((?x25663 (* ?x25662 l_0_18_34)))
 (let ((?x25747 (* 2.0 l_0_18_102)))
 (let ((?x25748 (* ?x25747 l_0_18_93)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x25745 (* ?x25047 l_0_18_92)))
 (let ((?x25419 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x25751 (+ (- (- (* ?x22910 ?x25419) ?x25745) ?x25748) (* (* 2.0 l_0_18_11) l_0_18_4))))
 (let ((?x25756 (+ (+ ?x25751 (* (* 2.0 l_0_18_12) l_0_18_5)) (* (* 2.0 l_0_18_13) l_0_18_6))))
 (let ((?x25760 (- (- ?x25756 (* (* 2.0 l_0_18_19) l_0_18_26)) (* (* 2.0 l_0_18_20) l_0_18_27))))
 (let ((?x25765 (- (+ (+ (- ?x25760 (* (* 2.0 l_0_18_21) l_0_18_28)) ?x25663) ?x25666) ?x25672)))
 (= (- ?x25765 ?x25675) 0.0))))))))))))))))))))
(assert
 (let ((?x25631 (* 2.0 l_0_18_93)))
 (let ((?x25693 (* ?x25631 l_0_18_98)))
 (let ((?x13131 (* 2.0 l_0_18_92)))
 (let ((?x25690 (* ?x13131 l_0_18_97)))
 (let ((?x25812 (* l_0_18_9 l_0_18_9)))
 (let ((?x25810 (* l_0_18_8 l_0_18_8)))
 (let ((?x25808 (* l_0_18_7 l_0_18_7)))
 (let ((?x25674 (* 2.0 l_0_18_48)))
 (let ((?x25802 (* ?x25674 l_0_18_53)))
 (let ((?x25671 (* 2.0 l_0_18_47)))
 (let ((?x25800 (* ?x25671 l_0_18_52)))
 (let ((?x25665 (* 2.0 l_0_18_33)))
 (let ((?x25798 (* ?x25665 l_0_18_38)))
 (let ((?x25662 (* 2.0 l_0_18_32)))
 (let ((?x25796 (* ?x25662 l_0_18_37)))
 (let ((?x25794 (* l_0_18_25 l_0_18_25)))
 (let ((?x25792 (* l_0_18_24 l_0_18_24)))
 (let ((?x2215 (* l_0_18_23 l_0_18_23)))
 (let ((?x19975 (* l_0_18_22 l_0_18_22)))
 (let ((?x19977 (* l_0_18_10 l_0_18_10)))
 (let ((?x25351 (+ (* (* 2.0 l_0_18_77) l_0_18_82) (* (* 2.0 l_0_18_78) l_0_18_83))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x25797 (- (- (- (- (- (+ (* ?x22893 ?x25351) ?x19977) ?x19975) ?x2215) ?x25792) ?x25794) ?x25796)))
 (let ((?x25805 (- (+ (+ (- ?x25797 ?x25798) ?x25800) ?x25802) (* (* 2.0 l_0_18_62) l_0_18_67))))
 (let ((?x25813 (+ (+ (+ (- ?x25805 (* (* 2.0 l_0_18_63) l_0_18_68)) ?x25808) ?x25810) ?x25812)))
 (= (+ (+ ?x25813 ?x25690) ?x25693) 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x25674 (* 2.0 l_0_18_48)))
 (let ((?x25872 (* ?x25674 l_0_18_57)))
 (let ((?x25802 (* ?x25674 l_0_18_53)))
 (let ((?x25671 (* 2.0 l_0_18_47)))
 (let ((?x25869 (* ?x25671 l_0_18_56)))
 (let ((?x25800 (* ?x25671 l_0_18_52)))
 (let ((?x25665 (* 2.0 l_0_18_33)))
 (let ((?x25866 (* ?x25665 l_0_18_42)))
 (let ((?x25798 (* ?x25665 l_0_18_38)))
 (let ((?x25662 (* 2.0 l_0_18_32)))
 (let ((?x25863 (* ?x25662 l_0_18_41)))
 (let ((?x25796 (* ?x25662 l_0_18_37)))
 (let ((?x25747 (* 2.0 l_0_18_102)))
 (let ((?x25748 (* ?x25747 l_0_18_93)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x25745 (* ?x25047 l_0_18_92)))
 (let ((?x25419 (+ (* (* 2.0 l_0_18_77) l_0_18_86) (* (* 2.0 l_0_18_78) l_0_18_87))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x25843 (+ (+ (+ (* ?x22893 ?x25419) (* (* 2.0 l_0_18_10) l_0_18_14)) ?x25745) ?x25748)))
 (let ((?x25847 (+ (+ ?x25843 (* (* 2.0 l_0_18_11) l_0_18_7)) (* (* 2.0 l_0_18_12) l_0_18_8))))
 (let ((?x25852 (- (+ ?x25847 (* (* 2.0 l_0_18_13) l_0_18_9)) (* (* 2.0 l_0_18_22) l_0_18_26))))
 (let ((?x25858 (- (- ?x25852 (* (* 2.0 l_0_18_23) l_0_18_27)) (* (* 2.0 l_0_18_24) l_0_18_28))))
 (let ((?x25865 (+ (- (+ (- ?x25858 (* (* 2.0 l_0_18_25) l_0_18_29)) ?x25796) ?x25863) ?x25798)))
 (let ((?x25875 (- (+ (- (+ (- (- ?x25865 ?x25866) ?x25800) ?x25869) ?x25802) ?x25872) (* (* 2.0 l_0_18_62) l_0_18_71))))
 (= (- ?x25875 (* (* 2.0 l_0_18_63) l_0_18_72)) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x25674 (* 2.0 l_0_18_48)))
 (let ((?x25872 (* ?x25674 l_0_18_57)))
 (let ((?x25671 (* 2.0 l_0_18_47)))
 (let ((?x25869 (* ?x25671 l_0_18_56)))
 (let ((?x25665 (* 2.0 l_0_18_33)))
 (let ((?x25866 (* ?x25665 l_0_18_42)))
 (let ((?x25662 (* 2.0 l_0_18_32)))
 (let ((?x25863 (* ?x25662 l_0_18_41)))
 (let ((?x25928 (* l_0_18_30 l_0_18_30)))
 (let ((?x25926 (* l_0_18_29 l_0_18_29)))
 (let ((?x25924 (* l_0_18_28 l_0_18_28)))
 (let ((?x25922 (* l_0_18_27 l_0_18_27)))
 (let ((?x25920 (* l_0_18_26 l_0_18_26)))
 (let ((?x25918 (* l_0_18_15 l_0_18_15)))
 (let ((?x25916 (* l_0_18_14 l_0_18_14)))
 (let ((?x25914 (* l_0_18_13 l_0_18_13)))
 (let ((?x25917 (+ (+ (+ (* l_0_18_11 l_0_18_11) (* l_0_18_12 l_0_18_12)) ?x25914) ?x25916)))
 (let ((?x25930 (+ (- (- (- (- (- (+ ?x25917 ?x25918) ?x25920) ?x25922) ?x25924) ?x25926) ?x25928) ?x25863)))
 (= (- (- (+ ?x25930 ?x25866) ?x25869) ?x25872) 0.0))))))))))))))))))))
(assert
 (let ((?x25960 (* l_0_18_91 l_0_18_91)))
 (let ((?x25958 (* l_0_18_61 l_0_18_61)))
 (let ((?x25956 (* l_0_18_46 l_0_18_46)))
 (let ((?x25954 (* l_0_18_31 l_0_18_31)))
 (let ((?x20036 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_82) (* (* _a_1_ l_0_18_76) l_0_18_76))))
 (let ((?x25945 (- (- ?x20036 (* (* 2.0 l_0_18_106) l_0_18_112)) (* (* 2.0 l_0_18_121) l_0_18_127))))
 (let ((?x25949 (- (- ?x25945 (* (* 2.0 l_0_18_136) l_0_18_142)) (* (* 2.0 l_0_18_151) l_0_18_157))))
 (let ((?x25953 (- (- ?x25949 (* (* 2.0 l_0_18_166) l_0_18_172)) (* (* 2.0 l_0_18_181) l_0_18_187))))
 (= (+ (- (+ (- ?x25953 ?x25954) ?x25956) ?x25958) ?x25960) 0.0))))))))))
(assert
 (let ((?x25211 (* 2.0 l_0_18_91)))
 (let ((?x25214 (* ?x25211 l_0_18_97)))
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x26032 (* ?x25107 l_0_18_52)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x26030 (* ?x25104 l_0_18_37)))
 (let ((?x26028 (* l_0_18_190 l_0_18_190)))
 (let ((?x26026 (* l_0_18_189 l_0_18_189)))
 (let ((?x26024 (* l_0_18_188 l_0_18_188)))
 (let ((?x26022 (* l_0_18_187 l_0_18_187)))
 (let ((?x26020 (* l_0_18_175 l_0_18_175)))
 (let ((?x26018 (* l_0_18_174 l_0_18_174)))
 (let ((?x26016 (* l_0_18_173 l_0_18_173)))
 (let ((?x26014 (* l_0_18_172 l_0_18_172)))
 (let ((?x26012 (* l_0_18_160 l_0_18_160)))
 (let ((?x26010 (* l_0_18_159 l_0_18_159)))
 (let ((?x26008 (* l_0_18_158 l_0_18_158)))
 (let ((?x26006 (* l_0_18_157 l_0_18_157)))
 (let ((?x26004 (* l_0_18_145 l_0_18_145)))
 (let ((?x26002 (* l_0_18_144 l_0_18_144)))
 (let ((?x26000 (* l_0_18_143 l_0_18_143)))
 (let ((?x25998 (* l_0_18_142 l_0_18_142)))
 (let ((?x25996 (* l_0_18_130 l_0_18_130)))
 (let ((?x25994 (* l_0_18_129 l_0_18_129)))
 (let ((?x25992 (* l_0_18_128 l_0_18_128)))
 (let ((?x25990 (* l_0_18_127 l_0_18_127)))
 (let ((?x25988 (* l_0_18_115 l_0_18_115)))
 (let ((?x25986 (* l_0_18_114 l_0_18_114)))
 (let ((?x25984 (* l_0_18_113 l_0_18_113)))
 (let ((?x25982 (* l_0_18_112 l_0_18_112)))
 (let ((?x25977 (* l_0_18_85 l_0_18_85)))
 (let ((?x25975 (* l_0_18_84 l_0_18_84)))
 (let ((?x25978 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x25975) ?x25977)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x25983 (- (- (* ?x22875 ?x25978) (* (* (* 2.0 _a_1_) l_0_18_76) l_0_18_82)) ?x25982)))
 (let ((?x25997 (- (- (- (- (- (- (- ?x25983 ?x25984) ?x25986) ?x25988) ?x25990) ?x25992) ?x25994) ?x25996)))
 (let ((?x26011 (- (- (- (- (- (- (- ?x25997 ?x25998) ?x26000) ?x26002) ?x26004) ?x26006) ?x26008) ?x26010)))
 (let ((?x26025 (- (- (- (- (- (- (- ?x26011 ?x26012) ?x26014) ?x26016) ?x26018) ?x26020) ?x26022) ?x26024)))
 (let ((?x26035 (- (+ (- (- (- ?x26025 ?x26026) ?x26028) ?x26030) ?x26032) (* (* 2.0 l_0_18_61) l_0_18_67))))
 (= (+ ?x26035 ?x25214) 0.0)))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x26177 (* ?x25107 l_0_18_56)))
 (let ((?x26032 (* ?x25107 l_0_18_52)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x26174 (* ?x25104 l_0_18_41)))
 (let ((?x26030 (* ?x25104 l_0_18_37)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x25048 (* ?x25047 l_0_18_91)))
 (let ((?x26090 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26096 (+ (+ ?x26090 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x22875 (- _a_0_)))
 (let ((?x26100 (+ (- (* ?x22875 ?x26096) (* (* (* 2.0 _a_1_) l_0_18_76) l_0_18_86)) ?x25048)))
 (let ((?x26106 (- (- ?x26100 (* (* 2.0 l_0_18_112) l_0_18_116)) (* (* 2.0 l_0_18_113) l_0_18_117))))
 (let ((?x26112 (- (- ?x26106 (* (* 2.0 l_0_18_114) l_0_18_118)) (* (* 2.0 l_0_18_115) l_0_18_119))))
 (let ((?x26118 (- (- ?x26112 (* (* 2.0 l_0_18_127) l_0_18_131)) (* (* 2.0 l_0_18_128) l_0_18_132))))
 (let ((?x26124 (- (- ?x26118 (* (* 2.0 l_0_18_129) l_0_18_133)) (* (* 2.0 l_0_18_130) l_0_18_134))))
 (let ((?x26130 (- (- ?x26124 (* (* 2.0 l_0_18_142) l_0_18_146)) (* (* 2.0 l_0_18_143) l_0_18_147))))
 (let ((?x26136 (- (- ?x26130 (* (* 2.0 l_0_18_144) l_0_18_148)) (* (* 2.0 l_0_18_145) l_0_18_149))))
 (let ((?x26142 (- (- ?x26136 (* (* 2.0 l_0_18_157) l_0_18_161)) (* (* 2.0 l_0_18_158) l_0_18_162))))
 (let ((?x26148 (- (- ?x26142 (* (* 2.0 l_0_18_159) l_0_18_163)) (* (* 2.0 l_0_18_160) l_0_18_164))))
 (let ((?x26154 (- (- ?x26148 (* (* 2.0 l_0_18_172) l_0_18_176)) (* (* 2.0 l_0_18_173) l_0_18_177))))
 (let ((?x26160 (- (- ?x26154 (* (* 2.0 l_0_18_174) l_0_18_178)) (* (* 2.0 l_0_18_175) l_0_18_179))))
 (let ((?x26166 (- (- ?x26160 (* (* 2.0 l_0_18_187) l_0_18_191)) (* (* 2.0 l_0_18_188) l_0_18_192))))
 (let ((?x26172 (- (- ?x26166 (* (* 2.0 l_0_18_189) l_0_18_193)) (* (* 2.0 l_0_18_190) l_0_18_194))))
 (let ((?x26180 (- (+ (- (- (+ ?x26172 ?x26030) ?x26174) ?x26032) ?x26177) (* (* 2.0 l_0_18_61) l_0_18_71))))
 (= ?x26180 0.0)))))))))))))))))))))))))))
(assert
 (let ((?x26266 (* l_0_18_96 l_0_18_96)))
 (let ((?x26264 (* (* 2.0 l_0_18_96) l_0_18_99)))
 (let ((?x26261 (* l_0_18_95 l_0_18_95)))
 (let ((?x26259 (* (* 2.0 l_0_18_95) l_0_18_98)))
 (let ((?x26256 (* l_0_18_94 l_0_18_94)))
 (let ((?x26254 (* (* 2.0 l_0_18_94) l_0_18_97)))
 (let ((?x26251 (* l_0_18_66 l_0_18_66)))
 (let ((?x26249 (* l_0_18_65 l_0_18_65)))
 (let ((?x26247 (* l_0_18_64 l_0_18_64)))
 (let ((?x26245 (* l_0_18_51 l_0_18_51)))
 (let ((?x26243 (* l_0_18_50 l_0_18_50)))
 (let ((?x26241 (* l_0_18_49 l_0_18_49)))
 (let ((?x26239 (* l_0_18_36 l_0_18_36)))
 (let ((?x26237 (* l_0_18_35 l_0_18_35)))
 (let ((?x26235 (* l_0_18_34 l_0_18_34)))
 (let ((?x25161 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25163 (+ ?x25161 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x26230 (* l_0_18_81 l_0_18_81)))
 (let ((?x26231 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x26230)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26242 (+ (- (- (- (- (* ?x22893 ?x26231) (* _a_2_ ?x25163)) ?x26235) ?x26237) ?x26239) ?x26241)))
 (let ((?x26257 (+ (- (- (- (- (+ (+ ?x26242 ?x26243) ?x26245) ?x26247) ?x26249) ?x26251) ?x26254) ?x26256)))
 (= (+ (- (+ (- ?x26257 ?x26259) ?x26261) ?x26264) ?x26266) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26344 (* l_0_18_99 l_0_18_99)))
 (let ((?x26342 (* l_0_18_98 l_0_18_98)))
 (let ((?x26340 (* l_0_18_97 l_0_18_97)))
 (let ((?x26264 (* (* 2.0 l_0_18_96) l_0_18_99)))
 (let ((?x26259 (* (* 2.0 l_0_18_95) l_0_18_98)))
 (let ((?x26254 (* (* 2.0 l_0_18_94) l_0_18_97)))
 (let ((?x26325 (* 2.0 l_0_18_51)))
 (let ((?x26326 (* ?x26325 l_0_18_54)))
 (let ((?x26322 (* 2.0 l_0_18_50)))
 (let ((?x26323 (* ?x26322 l_0_18_53)))
 (let ((?x26319 (* 2.0 l_0_18_49)))
 (let ((?x26320 (* ?x26319 l_0_18_52)))
 (let ((?x26316 (* 2.0 l_0_18_36)))
 (let ((?x26317 (* ?x26316 l_0_18_39)))
 (let ((?x26313 (* 2.0 l_0_18_35)))
 (let ((?x26314 (* ?x26313 l_0_18_38)))
 (let ((?x26310 (* 2.0 l_0_18_34)))
 (let ((?x26311 (* ?x26310 l_0_18_37)))
 (let ((?x26308 (* l_0_18_100 l_0_18_100)))
 (let ((?x25977 (* l_0_18_85 l_0_18_85)))
 (let ((?x25975 (* l_0_18_84 l_0_18_84)))
 (let ((?x25978 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x25975) ?x25977)))
 (let ((?x25161 (+ (* (* 2.0 l_0_18_79) l_0_18_82) (* (* 2.0 l_0_18_80) l_0_18_83))))
 (let ((?x25163 (+ ?x25161 (* (* 2.0 l_0_18_81) l_0_18_84))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26318 (- (- (- (- (- (* ?x22893 ?x25163) (* _a_2_ ?x25978)) ?x26308) ?x26311) ?x26314) ?x26317)))
 (let ((?x26330 (- (+ (+ (+ ?x26318 ?x26320) ?x26323) ?x26326) (* (* 2.0 l_0_18_64) l_0_18_67))))
 (let ((?x26336 (- (- ?x26330 (* (* 2.0 l_0_18_65) l_0_18_68)) (* (* 2.0 l_0_18_66) l_0_18_69))))
 (= (- (- (- (+ (+ (+ ?x26336 ?x26254) ?x26259) ?x26264) ?x26340) ?x26342) ?x26344) 0.0))))))))))))))))))))))))))))))
(assert
 (let ((?x26325 (* 2.0 l_0_18_51)))
 (let ((?x26438 (* ?x26325 l_0_18_58)))
 (let ((?x26326 (* ?x26325 l_0_18_54)))
 (let ((?x26322 (* 2.0 l_0_18_50)))
 (let ((?x26435 (* ?x26322 l_0_18_57)))
 (let ((?x26323 (* ?x26322 l_0_18_53)))
 (let ((?x26319 (* 2.0 l_0_18_49)))
 (let ((?x26432 (* ?x26319 l_0_18_56)))
 (let ((?x26320 (* ?x26319 l_0_18_52)))
 (let ((?x26316 (* 2.0 l_0_18_36)))
 (let ((?x26429 (* ?x26316 l_0_18_43)))
 (let ((?x26317 (* ?x26316 l_0_18_39)))
 (let ((?x26313 (* 2.0 l_0_18_35)))
 (let ((?x26426 (* ?x26313 l_0_18_42)))
 (let ((?x26314 (* ?x26313 l_0_18_38)))
 (let ((?x26310 (* 2.0 l_0_18_34)))
 (let ((?x26423 (* ?x26310 l_0_18_41)))
 (let ((?x26311 (* ?x26310 l_0_18_37)))
 (let ((?x26417 (* 2.0 l_0_18_103)))
 (let ((?x26420 (* ?x26417 l_0_18_99)))
 (let ((?x26418 (* ?x26417 l_0_18_96)))
 (let ((?x25747 (* 2.0 l_0_18_102)))
 (let ((?x26415 (* ?x25747 l_0_18_98)))
 (let ((?x26413 (* ?x25747 l_0_18_95)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x26411 (* ?x25047 l_0_18_97)))
 (let ((?x26409 (* ?x25047 l_0_18_94)))
 (let ((?x26407 (* (* 2.0 l_0_18_100) l_0_18_104)))
 (let ((?x26090 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26096 (+ (+ ?x26090 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x25039 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25042 (+ ?x25039 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26414 (+ (- (+ (- (- (* ?x22893 ?x25042) (* _a_2_ ?x26096)) ?x26407) ?x26409) ?x26411) ?x26413)))
 (let ((?x26427 (- (+ (- (+ (- (+ (- ?x26414 ?x26415) ?x26418) ?x26420) ?x26311) ?x26423) ?x26314) ?x26426)))
 (let ((?x26437 (- (+ (- (+ (- (- (+ ?x26427 ?x26317) ?x26429) ?x26320) ?x26432) ?x26323) ?x26435) ?x26326)))
 (let ((?x26443 (- (- (+ ?x26437 ?x26438) (* (* 2.0 l_0_18_64) l_0_18_71)) (* (* 2.0 l_0_18_65) l_0_18_72))))
 (= (- ?x26443 (* (* 2.0 l_0_18_66) l_0_18_73)) 0.0)))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x26344 (* l_0_18_99 l_0_18_99)))
 (let ((?x26342 (* l_0_18_98 l_0_18_98)))
 (let ((?x26340 (* l_0_18_97 l_0_18_97)))
 (let ((?x26531 (* l_0_18_70 l_0_18_70)))
 (let ((?x26529 (* l_0_18_69 l_0_18_69)))
 (let ((?x26527 (* l_0_18_68 l_0_18_68)))
 (let ((?x26525 (* l_0_18_67 l_0_18_67)))
 (let ((?x26523 (* l_0_18_55 l_0_18_55)))
 (let ((?x26521 (* l_0_18_54 l_0_18_54)))
 (let ((?x26519 (* l_0_18_53 l_0_18_53)))
 (let ((?x26517 (* l_0_18_52 l_0_18_52)))
 (let ((?x26515 (* l_0_18_40 l_0_18_40)))
 (let ((?x26513 (* l_0_18_39 l_0_18_39)))
 (let ((?x26511 (* l_0_18_38 l_0_18_38)))
 (let ((?x26509 (* l_0_18_37 l_0_18_37)))
 (let ((?x26308 (* l_0_18_100 l_0_18_100)))
 (let ((?x25977 (* l_0_18_85 l_0_18_85)))
 (let ((?x25975 (* l_0_18_84 l_0_18_84)))
 (let ((?x25978 (+ (+ (+ (* l_0_18_82 l_0_18_82) (* l_0_18_83 l_0_18_83)) ?x25975) ?x25977)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26518 (+ (- (- (- (- (+ (* ?x22893 ?x25978) ?x26308) ?x26509) ?x26511) ?x26513) ?x26515) ?x26517)))
 (let ((?x26532 (- (- (- (- (+ (+ (+ ?x26518 ?x26519) ?x26521) ?x26523) ?x26525) ?x26527) ?x26529) ?x26531)))
 (= (+ (+ (+ ?x26532 ?x26340) ?x26342) ?x26344) 0.0))))))))))))))))))))))))
(assert
 (let ((?x26523 (* l_0_18_55 l_0_18_55)))
 (let ((?x26592 (* (* 2.0 l_0_18_55) l_0_18_59)))
 (let ((?x26521 (* l_0_18_54 l_0_18_54)))
 (let ((?x26588 (* (* 2.0 l_0_18_54) l_0_18_58)))
 (let ((?x26519 (* l_0_18_53 l_0_18_53)))
 (let ((?x26584 (* (* 2.0 l_0_18_53) l_0_18_57)))
 (let ((?x26517 (* l_0_18_52 l_0_18_52)))
 (let ((?x26580 (* (* 2.0 l_0_18_52) l_0_18_56)))
 (let ((?x26515 (* l_0_18_40 l_0_18_40)))
 (let ((?x26576 (* (* 2.0 l_0_18_40) l_0_18_44)))
 (let ((?x26513 (* l_0_18_39 l_0_18_39)))
 (let ((?x26572 (* (* 2.0 l_0_18_39) l_0_18_43)))
 (let ((?x26511 (* l_0_18_38 l_0_18_38)))
 (let ((?x26568 (* (* 2.0 l_0_18_38) l_0_18_42)))
 (let ((?x26509 (* l_0_18_37 l_0_18_37)))
 (let ((?x26564 (* (* 2.0 l_0_18_37) l_0_18_41)))
 (let ((?x26417 (* 2.0 l_0_18_103)))
 (let ((?x26420 (* ?x26417 l_0_18_99)))
 (let ((?x25747 (* 2.0 l_0_18_102)))
 (let ((?x26415 (* ?x25747 l_0_18_98)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x26411 (* ?x25047 l_0_18_97)))
 (let ((?x26407 (* (* 2.0 l_0_18_100) l_0_18_104)))
 (let ((?x26090 (+ (* (* 2.0 l_0_18_82) l_0_18_86) (* (* 2.0 l_0_18_83) l_0_18_87))))
 (let ((?x26096 (+ (+ ?x26090 (* (* 2.0 l_0_18_84) l_0_18_88)) (* (* 2.0 l_0_18_85) l_0_18_89))))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26566 (+ (- (+ (+ (+ (+ (* ?x22893 ?x26096) ?x26407) ?x26411) ?x26415) ?x26420) ?x26564) ?x26509)))
 (let ((?x26581 (+ (+ (- (+ (- (+ (- ?x26566 ?x26568) ?x26511) ?x26572) ?x26513) ?x26576) ?x26515) ?x26580)))
 (let ((?x26594 (- (+ (- (+ (- (+ (- ?x26581 ?x26517) ?x26584) ?x26519) ?x26588) ?x26521) ?x26592) ?x26523)))
 (let ((?x26600 (- (- ?x26594 (* (* 2.0 l_0_18_67) l_0_18_71)) (* (* 2.0 l_0_18_68) l_0_18_72))))
 (let ((?x26606 (- (- ?x26600 (* (* 2.0 l_0_18_69) l_0_18_73)) (* (* 2.0 l_0_18_70) l_0_18_74))))
 (= ?x26606 0.0)))))))))))))))))))))))))))))))))
(assert
 (let ((?x26708 (* l_0_18_75 l_0_18_75)))
 (let ((?x26706 (* l_0_18_74 l_0_18_74)))
 (let ((?x26704 (* l_0_18_73 l_0_18_73)))
 (let ((?x26702 (* l_0_18_72 l_0_18_72)))
 (let ((?x26700 (* l_0_18_71 l_0_18_71)))
 (let ((?x26698 (* l_0_18_60 l_0_18_60)))
 (let ((?x26696 (* l_0_18_59 l_0_18_59)))
 (let ((?x26694 (* l_0_18_58 l_0_18_58)))
 (let ((?x26692 (* l_0_18_57 l_0_18_57)))
 (let ((?x26690 (* l_0_18_56 l_0_18_56)))
 (let ((?x26592 (* (* 2.0 l_0_18_55) l_0_18_59)))
 (let ((?x26588 (* (* 2.0 l_0_18_54) l_0_18_58)))
 (let ((?x26584 (* (* 2.0 l_0_18_53) l_0_18_57)))
 (let ((?x26580 (* (* 2.0 l_0_18_52) l_0_18_56)))
 (let ((?x26684 (* l_0_18_45 l_0_18_45)))
 (let ((?x26682 (* l_0_18_44 l_0_18_44)))
 (let ((?x26680 (* l_0_18_43 l_0_18_43)))
 (let ((?x26678 (* l_0_18_42 l_0_18_42)))
 (let ((?x26676 (* l_0_18_41 l_0_18_41)))
 (let ((?x26576 (* (* 2.0 l_0_18_40) l_0_18_44)))
 (let ((?x26572 (* (* 2.0 l_0_18_39) l_0_18_43)))
 (let ((?x26568 (* (* 2.0 l_0_18_38) l_0_18_42)))
 (let ((?x26564 (* (* 2.0 l_0_18_37) l_0_18_41)))
 (let ((?x26670 (* l_0_18_105 l_0_18_105)))
 (let ((?x26668 (* l_0_18_104 l_0_18_104)))
 (let ((?x26666 (* l_0_18_103 l_0_18_103)))
 (let ((?x26664 (* l_0_18_102 l_0_18_102)))
 (let ((?x26662 (* l_0_18_101 l_0_18_101)))
 (let ((?x26659 (* l_0_18_90 l_0_18_90)))
 (let ((?x26657 (* l_0_18_89 l_0_18_89)))
 (let ((?x26655 (* l_0_18_88 l_0_18_88)))
 (let ((?x26658 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26655) ?x26657)))
 (let ((?x26660 (+ ?x26658 ?x26659)))
 (let ((?x22893 (- _a_1_)))
 (let ((?x26672 (+ (+ (+ (+ (+ (+ (* ?x22893 ?x26660) ?x26662) ?x26664) ?x26666) ?x26668) ?x26670) ?x26564)))
 (let ((?x26683 (- (- (- (- (+ (+ (+ ?x26672 ?x26568) ?x26572) ?x26576) ?x26676) ?x26678) ?x26680) ?x26682)))
 (let ((?x26693 (+ (+ (- (- (- (- (- ?x26683 ?x26684) ?x26580) ?x26584) ?x26588) ?x26592) ?x26690) ?x26692)))
 (let ((?x26707 (- (- (- (- (+ (+ (+ ?x26693 ?x26694) ?x26696) ?x26698) ?x26700) ?x26702) ?x26704) ?x26706)))
 (= (- ?x26707 ?x26708) 0.0))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x25956 (* l_0_18_46 l_0_18_46)))
 (let ((?x25954 (* l_0_18_31 l_0_18_31)))
 (let ((?x14100 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_86) (* (* 2.0 l_0_18_106) l_0_18_116))))
 (let ((?x3945 (- (- ?x14100 (* (* 2.0 l_0_18_121) l_0_18_131)) (* (* 2.0 l_0_18_136) l_0_18_146))))
 (let ((?x3919 (- (- ?x3945 (* (* 2.0 l_0_18_151) l_0_18_161)) (* (* 2.0 l_0_18_166) l_0_18_176))))
 (= (- (+ (- ?x3919 (* (* 2.0 l_0_18_181) l_0_18_191)) ?x25954) ?x25956) 0.0)))))))
(assert
 (let ((?x25107 (* 2.0 l_0_18_46)))
 (let ((?x26177 (* ?x25107 l_0_18_56)))
 (let ((?x25104 (* 2.0 l_0_18_31)))
 (let ((?x26174 (* ?x25104 l_0_18_41)))
 (let ((?x26817 (* l_0_18_195 l_0_18_195)))
 (let ((?x26815 (* l_0_18_194 l_0_18_194)))
 (let ((?x26813 (* l_0_18_193 l_0_18_193)))
 (let ((?x26811 (* l_0_18_192 l_0_18_192)))
 (let ((?x26809 (* l_0_18_191 l_0_18_191)))
 (let ((?x26807 (* l_0_18_180 l_0_18_180)))
 (let ((?x26805 (* l_0_18_179 l_0_18_179)))
 (let ((?x26803 (* l_0_18_178 l_0_18_178)))
 (let ((?x26801 (* l_0_18_177 l_0_18_177)))
 (let ((?x26799 (* l_0_18_176 l_0_18_176)))
 (let ((?x26797 (* l_0_18_165 l_0_18_165)))
 (let ((?x26795 (* l_0_18_164 l_0_18_164)))
 (let ((?x26793 (* l_0_18_163 l_0_18_163)))
 (let ((?x26791 (* l_0_18_162 l_0_18_162)))
 (let ((?x26789 (* l_0_18_161 l_0_18_161)))
 (let ((?x26787 (* l_0_18_150 l_0_18_150)))
 (let ((?x26785 (* l_0_18_149 l_0_18_149)))
 (let ((?x26783 (* l_0_18_148 l_0_18_148)))
 (let ((?x26781 (* l_0_18_147 l_0_18_147)))
 (let ((?x26779 (* l_0_18_146 l_0_18_146)))
 (let ((?x26777 (* l_0_18_135 l_0_18_135)))
 (let ((?x26775 (* l_0_18_134 l_0_18_134)))
 (let ((?x26773 (* l_0_18_133 l_0_18_133)))
 (let ((?x26771 (* l_0_18_132 l_0_18_132)))
 (let ((?x26769 (* l_0_18_131 l_0_18_131)))
 (let ((?x26767 (* l_0_18_120 l_0_18_120)))
 (let ((?x26765 (* l_0_18_119 l_0_18_119)))
 (let ((?x26763 (* l_0_18_118 l_0_18_118)))
 (let ((?x21023 (* l_0_18_117 l_0_18_117)))
 (let ((?x14212 (* l_0_18_116 l_0_18_116)))
 (let ((?x26659 (* l_0_18_90 l_0_18_90)))
 (let ((?x26657 (* l_0_18_89 l_0_18_89)))
 (let ((?x26655 (* l_0_18_88 l_0_18_88)))
 (let ((?x26658 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26655) ?x26657)))
 (let ((?x26660 (+ ?x26658 ?x26659)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x26770 (- (- (- (- (- (- (* ?x22875 ?x26660) ?x14212) ?x21023) ?x26763) ?x26765) ?x26767) ?x26769)))
 (let ((?x26784 (- (- (- (- (- (- (- ?x26770 ?x26771) ?x26773) ?x26775) ?x26777) ?x26779) ?x26781) ?x26783)))
 (let ((?x26798 (- (- (- (- (- (- (- ?x26784 ?x26785) ?x26787) ?x26789) ?x26791) ?x26793) ?x26795) ?x26797)))
 (let ((?x26812 (- (- (- (- (- (- (- ?x26798 ?x26799) ?x26801) ?x26803) ?x26805) ?x26807) ?x26809) ?x26811)))
 (= (- (+ (- (- (- ?x26812 ?x26813) ?x26815) ?x26817) ?x26174) ?x26177) 0.0))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x26245 (* l_0_18_51 l_0_18_51)))
 (let ((?x26243 (* l_0_18_50 l_0_18_50)))
 (let ((?x26241 (* l_0_18_49 l_0_18_49)))
 (let ((?x26239 (* l_0_18_36 l_0_18_36)))
 (let ((?x26237 (* l_0_18_35 l_0_18_35)))
 (let ((?x26235 (* l_0_18_34 l_0_18_34)))
 (let ((?x26417 (* 2.0 l_0_18_103)))
 (let ((?x26418 (* ?x26417 l_0_18_96)))
 (let ((?x25747 (* 2.0 l_0_18_102)))
 (let ((?x26413 (* ?x25747 l_0_18_95)))
 (let ((?x25047 (* 2.0 l_0_18_101)))
 (let ((?x26409 (* ?x25047 l_0_18_94)))
 (let ((?x25039 (+ (* (* 2.0 l_0_18_79) l_0_18_86) (* (* 2.0 l_0_18_80) l_0_18_87))))
 (let ((?x25042 (+ ?x25039 (* (* 2.0 l_0_18_81) l_0_18_88))))
 (let ((?x22910 (- _a_2_)))
 (let ((?x26855 (+ (+ (+ (- (- (- (* ?x22910 ?x25042) ?x26409) ?x26413) ?x26418) ?x26235) ?x26237) ?x26239)))
 (= (- (- (- ?x26855 ?x26241) ?x26243) ?x26245) 0.0))))))))))))))))))
(assert
 (let ((?x26325 (* 2.0 l_0_18_51)))
 (let ((?x26438 (* ?x26325 l_0_18_58)))
 (let ((?x26322 (* 2.0 l_0_18_50)))
 (let ((?x26435 (* ?x26322 l_0_18_57)))
 (let ((?x26319 (* 2.0 l_0_18_49)))
 (let ((?x26432 (* ?x26319 l_0_18_56)))
 (let ((?x26316 (* 2.0 l_0_18_36)))
 (let ((?x26429 (* ?x26316 l_0_18_43)))
 (let ((?x26313 (* 2.0 l_0_18_35)))
 (let ((?x26426 (* ?x26313 l_0_18_42)))
 (let ((?x26310 (* 2.0 l_0_18_34)))
 (let ((?x26423 (* ?x26310 l_0_18_41)))
 (let ((?x26670 (* l_0_18_105 l_0_18_105)))
 (let ((?x26668 (* l_0_18_104 l_0_18_104)))
 (let ((?x26666 (* l_0_18_103 l_0_18_103)))
 (let ((?x26664 (* l_0_18_102 l_0_18_102)))
 (let ((?x26662 (* l_0_18_101 l_0_18_101)))
 (let ((?x26659 (* l_0_18_90 l_0_18_90)))
 (let ((?x26657 (* l_0_18_89 l_0_18_89)))
 (let ((?x26655 (* l_0_18_88 l_0_18_88)))
 (let ((?x26658 (+ (+ (+ (* l_0_18_86 l_0_18_86) (* l_0_18_87 l_0_18_87)) ?x26655) ?x26657)))
 (let ((?x26660 (+ ?x26658 ?x26659)))
 (let ((?x22910 (- _a_2_)))
 (let ((?x21217 (+ (- (- (- (- (- (* ?x22910 ?x26660) ?x26662) ?x26664) ?x26666) ?x26668) ?x26670) ?x26423)))
 (= (- (- (- (+ (+ ?x21217 ?x26426) ?x26429) ?x26432) ?x26435) ?x26438) 0.0))))))))))))))))))))))))))
(assert
 (let ((?x26698 (* l_0_18_60 l_0_18_60)))
 (let ((?x26696 (* l_0_18_59 l_0_18_59)))
 (let ((?x26694 (* l_0_18_58 l_0_18_58)))
 (let ((?x26692 (* l_0_18_57 l_0_18_57)))
 (let ((?x26690 (* l_0_18_56 l_0_18_56)))
 (let ((?x26684 (* l_0_18_45 l_0_18_45)))
 (let ((?x26682 (* l_0_18_44 l_0_18_44)))
 (let ((?x26680 (* l_0_18_43 l_0_18_43)))
 (let ((?x14353 (+ (+ (+ (* l_0_18_41 l_0_18_41) (* l_0_18_42 l_0_18_42)) ?x26680) ?x26682)))
 (= (- (- (- (- (- (+ ?x14353 ?x26684) ?x26690) ?x26692) ?x26694) ?x26696) ?x26698) 0.0)))))))))))
(assert
 (let ((?x14378 (* l_0_18_181 l_0_18_181)))
 (let ((?x21368 (* l_0_18_166 l_0_18_166)))
 (let ((?x21380 (* l_0_18_151 l_0_18_151)))
 (let ((?x21383 (* l_0_18_136 l_0_18_136)))
 (let ((?x14447 (* l_0_18_121 l_0_18_121)))
 (let ((?x4739 (* l_0_18_106 l_0_18_106)))
 (let ((?x21384 (- (- (- (* (* (- _a_0_) l_0_18_76) l_0_18_76) ?x4739) ?x14447) ?x21383)))
 (= (- (- (- ?x21384 ?x21380) ?x21368) ?x14378) 0.0)))))))))
(assert
 (let ((?x25960 (* l_0_18_91 l_0_18_91)))
 (let ((?x26902 (- (* (* (* (- 2.0) _a_0_) l_0_18_76) l_0_18_79) (* (* _a_2_ l_0_18_76) l_0_18_76))))
 (let ((?x26906 (- (- ?x26902 (* (* 2.0 l_0_18_106) l_0_18_109)) (* (* 2.0 l_0_18_121) l_0_18_124))))
 (let ((?x26910 (- (- ?x26906 (* (* 2.0 l_0_18_136) l_0_18_139)) (* (* 2.0 l_0_18_151) l_0_18_154))))
 (let ((?x26914 (- (- ?x26910 (* (* 2.0 l_0_18_166) l_0_18_169)) (* (* 2.0 l_0_18_181) l_0_18_184))))
 (= (- ?x26914 ?x25960) 0.0)))))))
(assert
 (let ((?x25211 (* 2.0 l_0_18_91)))
 (let ((?x25212 (* ?x25211 l_0_18_94)))
 (let ((?x26969 (* l_0_18_186 l_0_18_186)))
 (let ((?x26967 (* l_0_18_185 l_0_18_185)))
 (let ((?x26965 (* l_0_18_184 l_0_18_184)))
 (let ((?x26963 (* l_0_18_171 l_0_18_171)))
 (let ((?x26961 (* l_0_18_170 l_0_18_170)))
 (let ((?x26959 (* l_0_18_169 l_0_18_169)))
 (let ((?x26957 (* l_0_18_156 l_0_18_156)))
 (let ((?x26955 (* l_0_18_155 l_0_18_155)))
 (let ((?x26953 (* l_0_18_154 l_0_18_154)))
 (let ((?x26951 (* l_0_18_141 l_0_18_141)))
 (let ((?x26949 (* l_0_18_140 l_0_18_140)))
 (let ((?x26947 (* l_0_18_139 l_0_18_139)))
 (let ((?x26945 (* l_0_18_126 l_0_18_126)))
 (let ((?x26943 (* l_0_18_125 l_0_18_125)))
 (let ((?x26941 (* l_0_18_124 l_0_18_124)))
 (let ((?x26939 (* l_0_18_111 l_0_18_111)))
 (let ((?x26937 (* l_0_18_110 l_0_18_110)))
 (let ((?x26935 (* l_0_18_109 l_0_18_109)))
 (let ((?x26230 (* l_0_18_81 l_0_18_81)))
 (let ((?x26231 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x26230)))
 (let ((?x22875 (- _a_0_)))
 (let ((?x26936 (- (- (* ?x22875 ?x26231) (* (* (* 2.0 _a_2_) l_0_18_76) l_0_18_79)) ?x26935)))
 (let ((?x26950 (- (- (- (- (- (- (- ?x26936 ?x26937) ?x26939) ?x26941) ?x26943) ?x26945) ?x26947) ?x26949)))
 (let ((?x26964 (- (- (- (- (- (- (- ?x26950 ?x26951) ?x26953) ?x26955) ?x26957) ?x26959) ?x26961) ?x26963)))
 (= (- (- (- (- ?x26964 ?x26965) ?x26967) ?x26969) ?x25212) 0.0))))))))))))))))))))))))))))
(assert
 (let ((?x26266 (* l_0_18_96 l_0_18_96)))
 (let ((?x26261 (* l_0_18_95 l_0_18_95)))
 (let ((?x26256 (* l_0_18_94 l_0_18_94)))
 (let ((?x26230 (* l_0_18_81 l_0_18_81)))
 (let ((?x26231 (+ (+ (* l_0_18_79 l_0_18_79) (* l_0_18_80 l_0_18_80)) ?x26230)))
 (let ((?x22910 (- _a_2_)))
 (= (- (- (- (* ?x22910 ?x26231) ?x26256) ?x26261) ?x26266) 0.0))))))))
(assert
 (>= l_0_18_1 0.0))
(assert
 (>= l_0_18_3 0.0))
(assert
 (>= l_0_18_6 0.0))
(assert
 (>= l_0_18_10 0.0))
(assert
 (>= l_0_18_15 0.0))
(assert
 (>= l_0_18_16 0.0))
(assert
 (>= l_0_18_18 0.0))
(assert
 (>= l_0_18_21 0.0))
(assert
 (>= l_0_18_25 0.0))
(assert
 (>= l_0_18_30 0.0))
(assert
 (>= l_0_18_31 0.0))
(assert
 (>= l_0_18_33 0.0))
(assert
 (>= l_0_18_36 0.0))
(assert
 (>= l_0_18_40 0.0))
(assert
 (>= l_0_18_45 0.0))
(assert
 (>= l_0_18_46 0.0))
(assert
 (>= l_0_18_48 0.0))
(assert
 (>= l_0_18_51 0.0))
(assert
 (>= l_0_18_55 0.0))
(assert
 (>= l_0_18_60 0.0))
(assert
 (>= l_0_18_61 0.0))
(assert
 (>= l_0_18_63 0.0))
(assert
 (>= l_0_18_66 0.0))
(assert
 (>= l_0_18_70 0.0))
(assert
 (>= l_0_18_75 0.0))
(assert
 (>= l_0_18_76 0.0))
(assert
 (>= l_0_18_78 0.0))
(assert
 (>= l_0_18_81 0.0))
(assert
 (>= l_0_18_85 0.0))
(assert
 (>= l_0_18_90 0.0))
(assert
 (>= l_0_18_91 0.0))
(assert
 (>= l_0_18_93 0.0))
(assert
 (>= l_0_18_96 0.0))
(assert
 (>= l_0_18_100 0.0))
(assert
 (>= l_0_18_105 0.0))
(assert
 (>= l_0_18_106 0.0))
(assert
 (>= l_0_18_108 0.0))
(assert
 (>= l_0_18_111 0.0))
(assert
 (>= l_0_18_115 0.0))
(assert
 (>= l_0_18_120 0.0))
(assert
 (>= l_0_18_121 0.0))
(assert
 (>= l_0_18_123 0.0))
(assert
 (>= l_0_18_126 0.0))
(assert
 (>= l_0_18_130 0.0))
(assert
 (>= l_0_18_135 0.0))
(assert
 (>= l_0_18_136 0.0))
(assert
 (>= l_0_18_138 0.0))
(assert
 (>= l_0_18_141 0.0))
(assert
 (>= l_0_18_145 0.0))
(assert
 (>= l_0_18_150 0.0))
(assert
 (>= l_0_18_151 0.0))
(assert
 (>= l_0_18_153 0.0))
(assert
 (>= l_0_18_156 0.0))
(assert
 (>= l_0_18_160 0.0))
(assert
 (>= l_0_18_165 0.0))
(assert
 (>= l_0_18_166 0.0))
(assert
 (>= l_0_18_168 0.0))
(assert
 (>= l_0_18_171 0.0))
(assert
 (>= l_0_18_175 0.0))
(assert
 (>= l_0_18_180 0.0))
(assert
 (>= l_0_18_181 0.0))
(assert
 (>= l_0_18_183 0.0))
(assert
 (>= l_0_18_186 0.0))
(assert
 (>= l_0_18_190 0.0))
(assert
 (>= l_0_18_195 0.0))
(assert
 (= (- (* (- _a_0_) l_0_19_6) l_0_19_8) 0.0))
(assert
 (= (- (- l_0_19_1 l_0_19_2) 1.0) 0.0))
(assert
 (let ((?x27064 (- (+ (- (* (- _a_1_) l_0_19_6) l_0_19_3) l_0_19_4) l_0_19_5)))
 (= (- ?x27064 l_0_19_7) 0.0)))
(assert
 (= (- l_0_19_3 l_0_19_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_19_6) l_0_19_7) 0.0))
(assert
 (>= l_0_19_1 0.0))
(assert
 (>= l_0_19_2 0.0))
(assert
 (>= l_0_19_3 0.0))
(assert
 (>= l_0_19_4 0.0))
(assert
 (>= l_0_19_5 0.0))
(assert
 (>= l_0_19_6 0.0))
(assert
 (>= l_0_19_7 0.0))
(assert
 (>= l_0_19_8 0.0))
(assert
 (= (+ (- l_0_20_1 l_0_20_2) 1.0) 0.0))
(assert
 (let ((?x27098 (- (- (- (* (- _a_0_) l_0_20_6) l_0_20_10) l_0_20_8) l_0_20_9)))
 (= ?x27098 0.0)))
(assert
 (let ((?x27112 (- (+ (- (* (- _a_1_) l_0_20_6) l_0_20_3) l_0_20_4) l_0_20_5)))
 (= (- ?x27112 l_0_20_7) 0.0)))
(assert
 (= (- l_0_20_3 l_0_20_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_20_6) l_0_20_7) 0.0))
(assert
 (>= l_0_20_1 0.0))
(assert
 (>= l_0_20_2 0.0))
(assert
 (>= l_0_20_3 0.0))
(assert
 (>= l_0_20_4 0.0))
(assert
 (>= l_0_20_5 0.0))
(assert
 (>= l_0_20_6 0.0))
(assert
 (>= l_0_20_7 0.0))
(assert
 (>= l_0_20_8 0.0))
(assert
 (>= l_0_20_9 0.0))
(assert
 (>= l_0_20_10 0.0))
(assert
 (let ((?x27148 (- (+ (- (* (- _a_1_) l_0_21_6) l_0_21_3) l_0_21_4) l_0_21_5)))
 (= (+ (- ?x27148 l_0_21_7) 1.0) 0.0)))
(assert
 (= (- (- l_0_21_3 l_0_21_4) 1.0) 0.0))
(assert
 (= (- l_0_21_1 l_0_21_2) 0.0))
(assert
 (let ((?x27178 (- (- (- (* (- _a_0_) l_0_21_6) l_0_21_10) l_0_21_11) l_0_21_12)))
 (= (- (- ?x27178 l_0_21_8) l_0_21_9) 0.0)))
(assert
 (= (+ (* (- _a_2_) l_0_21_6) l_0_21_7) 0.0))
(assert
 (>= l_0_21_1 0.0))
(assert
 (>= l_0_21_2 0.0))
(assert
 (>= l_0_21_3 0.0))
(assert
 (>= l_0_21_4 0.0))
(assert
 (>= l_0_21_5 0.0))
(assert
 (>= l_0_21_6 0.0))
(assert
 (>= l_0_21_7 0.0))
(assert
 (>= l_0_21_8 0.0))
(assert
 (>= l_0_21_9 0.0))
(assert
 (>= l_0_21_10 0.0))
(assert
 (>= l_0_21_11 0.0))
(assert
 (>= l_0_21_12 0.0))
(assert
 (= (+ (- l_0_22_3 l_0_22_4) 1.0) 0.0))
(assert
 (let ((?x27210 (- (+ (- (* (- _a_1_) l_0_22_6) l_0_22_3) l_0_22_4) l_0_22_5)))
 (= (- (- ?x27210 l_0_22_7) 1.0) 0.0)))
(assert
 (= (- l_0_22_1 l_0_22_2) 0.0))
(assert
 (let ((?x27229 (- (- (- (* (- _a_0_) l_0_22_6) l_0_22_10) l_0_22_11) l_0_22_12)))
 (= (- (- (- (- ?x27229 l_0_22_13) l_0_22_14) l_0_22_8) l_0_22_9) 0.0)))
(assert
 (= (+ (* (- _a_2_) l_0_22_6) l_0_22_7) 0.0))
(assert
 (>= l_0_22_1 0.0))
(assert
 (>= l_0_22_2 0.0))
(assert
 (>= l_0_22_3 0.0))
(assert
 (>= l_0_22_4 0.0))
(assert
 (>= l_0_22_5 0.0))
(assert
 (>= l_0_22_6 0.0))
(assert
 (>= l_0_22_7 0.0))
(assert
 (>= l_0_22_8 0.0))
(assert
 (>= l_0_22_9 0.0))
(assert
 (>= l_0_22_10 0.0))
(assert
 (>= l_0_22_11 0.0))
(assert
 (>= l_0_22_12 0.0))
(assert
 (>= l_0_22_13 0.0))
(assert
 (>= l_0_22_14 0.0))
(assert
 (let ((?x27270 (- (+ (- (* (- _a_1_) l_0_23_6) l_0_23_3) l_0_23_4) l_0_23_5)))
 (= (+ (- ?x27270 l_0_23_7) 1.0) 0.0)))
(assert
 (let ((?x27288 (- (- (- (* (- _a_0_) l_0_23_6) l_0_23_10) l_0_23_11) l_0_23_12)))
 (let ((?x27293 (- (- (- (- (- ?x27288 l_0_23_13) l_0_23_14) l_0_23_15) l_0_23_16) l_0_23_8)))
 (= (- ?x27293 l_0_23_9) 0.0))))
(assert
 (= (- l_0_23_1 l_0_23_2) 0.0))
(assert
 (= (- l_0_23_3 l_0_23_4) 0.0))
(assert
 (= (+ (* (- _a_2_) l_0_23_6) l_0_23_7) 0.0))
(assert
 (>= l_0_23_1 0.0))
(assert
 (>= l_0_23_2 0.0))
(assert
 (>= l_0_23_3 0.0))
(assert
 (>= l_0_23_4 0.0))
(assert
 (>= l_0_23_5 0.0))
(assert
 (>= l_0_23_6 0.0))
(assert
 (>= l_0_23_7 0.0))
(assert
 (>= l_0_23_8 0.0))
(assert
 (>= l_0_23_9 0.0))
(assert
 (>= l_0_23_10 0.0))
(assert
 (>= l_0_23_11 0.0))
(assert
 (>= l_0_23_12 0.0))
(assert
 (>= l_0_23_13 0.0))
(assert
 (>= l_0_23_14 0.0))
(assert
 (>= l_0_23_15 0.0))
(assert
 (>= l_0_23_16 0.0))
(assert
 (let ((?x27342 (- (- (- (+ (* (- _a_0_) l_0_24_6) _a_0_) l_0_24_10) l_0_24_11) l_0_24_12)))
 (let ((?x27347 (- (- (- (- (- ?x27342 l_0_24_13) l_0_24_14) l_0_24_15) l_0_24_16) l_0_24_17)))
 (= (- (- (- ?x27347 l_0_24_18) l_0_24_8) l_0_24_9) 0.0))))
(assert
 (let ((?x27367 (- (+ (- (+ (* (- _a_1_) l_0_24_6) _a_1_) l_0_24_3) l_0_24_4) l_0_24_5)))
 (= (- ?x27367 l_0_24_7) 0.0)))
(assert
 (= (+ (+ (* (- _a_2_) l_0_24_6) (* 4.0 _a_2_)) l_0_24_7) 0.0))
(assert
 (= (- l_0_24_1 l_0_24_2) 0.0))
(assert
 (= (- l_0_24_3 l_0_24_4) 0.0))
(assert
 (>= l_0_24_1 0.0))
(assert
 (>= l_0_24_2 0.0))
(assert
 (>= l_0_24_3 0.0))
(assert
 (>= l_0_24_4 0.0))
(assert
 (>= l_0_24_5 0.0))
(assert
 (>= l_0_24_6 0.0))
(assert
 (>= l_0_24_7 0.0))
(assert
 (>= l_0_24_8 0.0))
(assert
 (>= l_0_24_9 0.0))
(assert
 (>= l_0_24_10 0.0))
(assert
 (>= l_0_24_11 0.0))
(assert
 (>= l_0_24_12 0.0))
(assert
 (>= l_0_24_13 0.0))
(assert
 (>= l_0_24_14 0.0))
(assert
 (>= l_0_24_15 0.0))
(assert
 (>= l_0_24_16 0.0))
(assert
 (>= l_0_24_17 0.0))
(assert
 (>= l_0_24_18 0.0))
(check-sat)
(get-model)